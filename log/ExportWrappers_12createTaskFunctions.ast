AST dump for ExportWrappers after pass createTaskFunctions.
Module use list: ChapelStandard CPtr SysCTypes 

{
  function chpl__init_ExportWrappers[416026]() : void[4] "insert line file info" "module init"
  {
    (544790 'move' chpl__exportTypeChplByteBuffer[172145](544789 call chpl_byte_buffer[172131]))
    (483310 'end of statement')
    (522491 return _void[55])
  }
  function chpl_byte_buffer[172131].isOwned[814083](arg _mt[814085]:_MT[238], ref arg this[814087]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814097] "RVV" "temp"
    unknown call_tmp[814104] "expr temp" "maybe param" "maybe type" "temp"
    (814107 'move' call_tmp[814104](814091 '.' this[814087] c"isOwned"))
    (814102 'move' ret[814097](814101 'addr of' call_tmp[814104]))
    (814099 return ret[814097])
  }
  function chpl_byte_buffer[172131].data[814109](arg _mt[814111]:_MT[238], ref arg this[814113]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814123] "RVV" "temp"
    unknown call_tmp[814130] "expr temp" "maybe param" "maybe type" "temp"
    (814133 'move' call_tmp[814130](814117 '.' this[814113] c"data"))
    (814128 'move' ret[814123](814127 'addr of' call_tmp[814130]))
    (814125 return ret[814123])
  }
  function chpl_byte_buffer[172131].size[814135](arg _mt[814137]:_MT[238], ref arg this[814139]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814149] "RVV" "temp"
    unknown call_tmp[814156] "expr temp" "maybe param" "maybe type" "temp"
    (814159 'move' call_tmp[814156](814143 '.' this[814139] c"size"))
    (814154 'move' ret[814149](814153 'addr of' call_tmp[814156]))
    (814151 return ret[814149])
  }
  function chpl_byte_buffer[172131].init[814161](arg _mt[814163]:_MT[238], ref arg this[814164]:chpl_byte_buffer[172131], in arg isOwned[814167] :
  (814170 call int(64)[13] 8) =
  _typeDefaultT[250], in arg data[814182] :
  (814185 call c_ptr[205045](?) c_char[20591]) =
  _typeDefaultT[250], in arg size[814197] :
  (814200 call uint(64)[115] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814213 'init field' this[814164] c"isOwned" isOwned[814167])
    (814216 'init field' this[814164] c"data" data[814182])
    (814222 'end of statement')
    (814219 'init field' this[814164] c"size" size[814197])
    (814224 return _void[55])
  }
  function chpl_byte_buffer[172131].init=[814226](arg _mt[814229]:_MT[238], arg this[814230]:chpl_byte_buffer[172131], arg other[814231]:chpl_byte_buffer[172131]) : _unknown[51] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814235 '=' this[814230] other[814231])
    (814239 return _void[55])
  }
  function chpl_byte_buffer[172131].deinit[814241](arg _mt[814243]:_MT[238], arg this[814245]:chpl_byte_buffer[172131]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (814253 return _void[55])
  }
  function chpl_byte_buffer[172131].writeThis[814255](arg _mt[814259]:_MT[238], arg this[814257]:chpl_byte_buffer[172131], arg f[814258]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814264 call writeThisDefaultImpl f[814258] this[814257])
    (814269 return _void[55])
  }
  function chpl_byte_buffer[172131].readThis[814271](arg _mt[814275]:_MT[238], arg this[814273]:chpl_byte_buffer[172131], arg f[814274]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814279 call readThisDefaultImpl f[814274] this[814273])
    (814285 return _void[55])
  }
  function chpl_fields_are_comparable[814299](arg _arg1[814301]:chpl_byte_buffer[172131], arg _arg2[814302]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814341]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814348] "expr temp" "maybe param" "maybe type" "temp"
    (814351 'move' call_tmp[814348](814305 call isOwned _mt[243] _arg1[814301]))
    unknown call_tmp[814353] "expr temp" "maybe param" "maybe type" "temp"
    (814356 'move' call_tmp[814353](814309 call isOwned _mt[243] _arg2[814302]))
    unknown call_tmp[814358] "expr temp" "maybe param" "maybe type" "temp"
    (814361 'move' call_tmp[814358](814313 'call resolves' c"==" call_tmp[814348] call_tmp[814353]))
    unknown call_tmp[814363] "expr temp" "maybe param" "maybe type" "temp"
    (814366 'move' call_tmp[814363](814315 call data _mt[243] _arg1[814301]))
    unknown call_tmp[814368] "expr temp" "maybe param" "maybe type" "temp"
    (814371 'move' call_tmp[814368](814319 call data _mt[243] _arg2[814302]))
    unknown call_tmp[814373] "expr temp" "maybe param" "maybe type" "temp"
    (814376 'move' call_tmp[814373](814323 'call resolves' c"==" call_tmp[814363] call_tmp[814368]))
    unknown call_tmp[814378] "expr temp" "maybe param" "maybe type" "temp"
    (814381 'move' call_tmp[814378](814325 call size _mt[243] _arg1[814301]))
    unknown call_tmp[814383] "expr temp" "maybe param" "maybe type" "temp"
    (814386 'move' call_tmp[814383](814329 call size _mt[243] _arg2[814302]))
    unknown call_tmp[814388] "expr temp" "maybe param" "maybe type" "temp"
    (814391 'move' call_tmp[814388](814333 'call resolves' c"==" call_tmp[814378] call_tmp[814383]))
    unknown call_tmp[814393] "expr temp" "maybe param" "maybe type" "temp"
    (814396 'move' call_tmp[814393](814335 '&' call_tmp[814358] call_tmp[814373] call_tmp[814388]))
    (814346 'move' ret[814341](814345 'deref' call_tmp[814393]))
    (814343 return ret[814341])
  }
  function ==[814287](arg _arg1[814289]:chpl_byte_buffer[172131], arg _arg2[814290]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814455]:bool[10] "RVV" "temp"
    unknown call_tmp[814477] "expr temp" "maybe param" "maybe type" "temp"
    (814480 'move' call_tmp[814477](814404 call isOwned _mt[243] _arg1[814289]))
    unknown call_tmp[814482] "expr temp" "maybe param" "maybe type" "temp"
    (814485 'move' call_tmp[814482](814408 call isOwned _mt[243] _arg2[814290]))
    unknown call_tmp[814487] "expr temp" "maybe param" "maybe type" "temp"
    (814490 'move' call_tmp[814487](814412 call != call_tmp[814477] call_tmp[814482]))
    if call_tmp[814487]
    {
      (814460 'move' ret[814455](814459 'deref' 0))
      gotoReturn _end_==[814453] _end_==[814453]
    }
    unknown call_tmp[814492] "expr temp" "maybe param" "maybe type" "temp"
    (814495 'move' call_tmp[814492](814418 call data _mt[243] _arg1[814289]))
    unknown call_tmp[814497] "expr temp" "maybe param" "maybe type" "temp"
    (814500 'move' call_tmp[814497](814422 call data _mt[243] _arg2[814290]))
    unknown call_tmp[814502] "expr temp" "maybe param" "maybe type" "temp"
    (814505 'move' call_tmp[814502](814426 call != call_tmp[814492] call_tmp[814497]))
    if call_tmp[814502]
    {
      (814465 'move' ret[814455](814464 'deref' 0))
      gotoReturn _end_==[814453] _end_==[814453]
    }
    unknown call_tmp[814507] "expr temp" "maybe param" "maybe type" "temp"
    (814510 'move' call_tmp[814507](814432 call size _mt[243] _arg1[814289]))
    unknown call_tmp[814512] "expr temp" "maybe param" "maybe type" "temp"
    (814515 'move' call_tmp[814512](814436 call size _mt[243] _arg2[814290]))
    unknown call_tmp[814517] "expr temp" "maybe param" "maybe type" "temp"
    (814520 'move' call_tmp[814517](814440 call != call_tmp[814507] call_tmp[814512]))
    if call_tmp[814517]
    {
      (814470 'move' ret[814455](814469 'deref' 0))
      gotoReturn _end_==[814453] _end_==[814453]
    }
    (814475 'move' ret[814455](814474 'deref' 1))
    label _end_==[814453]
    (814457 return ret[814455])
  }
  where {
    unknown call_tmp[814522] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814525 'move' call_tmp[814522](814293 'typeof' _arg1[814289]))
    unknown call_tmp[814527] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814530 'move' call_tmp[814527](814295 'typeof' _arg2[814290]))
    unknown call_tmp[814532] "expr temp" "maybe param" "maybe type" "temp"
    (814535 'move' call_tmp[814532](814297 call == call_tmp[814522] call_tmp[814527]))
    unknown call_tmp[814537] "expr temp" "maybe param" "maybe type" "temp"
    (814540 'move' call_tmp[814537](814398 call chpl_fields_are_comparable[814299] _arg1[814289] _arg2[814290]))
    (814402 '&' call_tmp[814532] call_tmp[814537])
  }
  function chpl_fields_are_comparable[814554](arg _arg1[814556]:chpl_byte_buffer[172131], arg _arg2[814557]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814596]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814603] "expr temp" "maybe param" "maybe type" "temp"
    (814606 'move' call_tmp[814603](814560 call isOwned _mt[243] _arg1[814556]))
    unknown call_tmp[814608] "expr temp" "maybe param" "maybe type" "temp"
    (814611 'move' call_tmp[814608](814564 call isOwned _mt[243] _arg2[814557]))
    unknown call_tmp[814613] "expr temp" "maybe param" "maybe type" "temp"
    (814616 'move' call_tmp[814613](814568 'call resolves' c"!=" call_tmp[814603] call_tmp[814608]))
    unknown call_tmp[814618] "expr temp" "maybe param" "maybe type" "temp"
    (814621 'move' call_tmp[814618](814570 call data _mt[243] _arg1[814556]))
    unknown call_tmp[814623] "expr temp" "maybe param" "maybe type" "temp"
    (814626 'move' call_tmp[814623](814574 call data _mt[243] _arg2[814557]))
    unknown call_tmp[814628] "expr temp" "maybe param" "maybe type" "temp"
    (814631 'move' call_tmp[814628](814578 'call resolves' c"!=" call_tmp[814618] call_tmp[814623]))
    unknown call_tmp[814633] "expr temp" "maybe param" "maybe type" "temp"
    (814636 'move' call_tmp[814633](814580 call size _mt[243] _arg1[814556]))
    unknown call_tmp[814638] "expr temp" "maybe param" "maybe type" "temp"
    (814641 'move' call_tmp[814638](814584 call size _mt[243] _arg2[814557]))
    unknown call_tmp[814643] "expr temp" "maybe param" "maybe type" "temp"
    (814646 'move' call_tmp[814643](814588 'call resolves' c"!=" call_tmp[814633] call_tmp[814638]))
    unknown call_tmp[814648] "expr temp" "maybe param" "maybe type" "temp"
    (814651 'move' call_tmp[814648](814590 '&' call_tmp[814613] call_tmp[814628] call_tmp[814643]))
    (814601 'move' ret[814596](814600 'deref' call_tmp[814648]))
    (814598 return ret[814596])
  }
  function !=[814542](arg _arg1[814544]:chpl_byte_buffer[172131], arg _arg2[814545]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814710]:bool[10] "RVV" "temp"
    unknown call_tmp[814732] "expr temp" "maybe param" "maybe type" "temp"
    (814735 'move' call_tmp[814732](814659 call isOwned _mt[243] _arg1[814544]))
    unknown call_tmp[814737] "expr temp" "maybe param" "maybe type" "temp"
    (814740 'move' call_tmp[814737](814663 call isOwned _mt[243] _arg2[814545]))
    unknown call_tmp[814742] "expr temp" "maybe param" "maybe type" "temp"
    (814745 'move' call_tmp[814742](814667 call != call_tmp[814732] call_tmp[814737]))
    if call_tmp[814742]
    {
      (814715 'move' ret[814710](814714 'deref' 1))
      gotoReturn _end_!=[814708] _end_!=[814708]
    }
    unknown call_tmp[814747] "expr temp" "maybe param" "maybe type" "temp"
    (814750 'move' call_tmp[814747](814673 call data _mt[243] _arg1[814544]))
    unknown call_tmp[814752] "expr temp" "maybe param" "maybe type" "temp"
    (814755 'move' call_tmp[814752](814677 call data _mt[243] _arg2[814545]))
    unknown call_tmp[814757] "expr temp" "maybe param" "maybe type" "temp"
    (814760 'move' call_tmp[814757](814681 call != call_tmp[814747] call_tmp[814752]))
    if call_tmp[814757]
    {
      (814720 'move' ret[814710](814719 'deref' 1))
      gotoReturn _end_!=[814708] _end_!=[814708]
    }
    unknown call_tmp[814762] "expr temp" "maybe param" "maybe type" "temp"
    (814765 'move' call_tmp[814762](814687 call size _mt[243] _arg1[814544]))
    unknown call_tmp[814767] "expr temp" "maybe param" "maybe type" "temp"
    (814770 'move' call_tmp[814767](814691 call size _mt[243] _arg2[814545]))
    unknown call_tmp[814772] "expr temp" "maybe param" "maybe type" "temp"
    (814775 'move' call_tmp[814772](814695 call != call_tmp[814762] call_tmp[814767]))
    if call_tmp[814772]
    {
      (814725 'move' ret[814710](814724 'deref' 1))
      gotoReturn _end_!=[814708] _end_!=[814708]
    }
    (814730 'move' ret[814710](814729 'deref' 0))
    label _end_!=[814708]
    (814712 return ret[814710])
  }
  where {
    unknown call_tmp[814777] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814780 'move' call_tmp[814777](814548 'typeof' _arg1[814544]))
    unknown call_tmp[814782] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814785 'move' call_tmp[814782](814550 'typeof' _arg2[814545]))
    unknown call_tmp[814787] "expr temp" "maybe param" "maybe type" "temp"
    (814790 'move' call_tmp[814787](814552 call == call_tmp[814777] call_tmp[814782]))
    unknown call_tmp[814792] "expr temp" "maybe param" "maybe type" "temp"
    (814795 'move' call_tmp[814792](814653 call chpl_fields_are_comparable[814554] _arg1[814544] _arg2[814545]))
    (814657 '&' call_tmp[814787] call_tmp[814792])
  }
  function chpl_fields_are_comparable[814809](arg _arg1[814811]:chpl_byte_buffer[172131], arg _arg2[814812]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814851]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814858] "expr temp" "maybe param" "maybe type" "temp"
    (814861 'move' call_tmp[814858](814815 call isOwned _mt[243] _arg1[814811]))
    unknown call_tmp[814863] "expr temp" "maybe param" "maybe type" "temp"
    (814866 'move' call_tmp[814863](814819 call isOwned _mt[243] _arg2[814812]))
    unknown call_tmp[814868] "expr temp" "maybe param" "maybe type" "temp"
    (814871 'move' call_tmp[814868](814823 'call resolves' c"<" call_tmp[814858] call_tmp[814863]))
    unknown call_tmp[814873] "expr temp" "maybe param" "maybe type" "temp"
    (814876 'move' call_tmp[814873](814825 call data _mt[243] _arg1[814811]))
    unknown call_tmp[814878] "expr temp" "maybe param" "maybe type" "temp"
    (814881 'move' call_tmp[814878](814829 call data _mt[243] _arg2[814812]))
    unknown call_tmp[814883] "expr temp" "maybe param" "maybe type" "temp"
    (814886 'move' call_tmp[814883](814833 'call resolves' c"<" call_tmp[814873] call_tmp[814878]))
    unknown call_tmp[814888] "expr temp" "maybe param" "maybe type" "temp"
    (814891 'move' call_tmp[814888](814835 call size _mt[243] _arg1[814811]))
    unknown call_tmp[814893] "expr temp" "maybe param" "maybe type" "temp"
    (814896 'move' call_tmp[814893](814839 call size _mt[243] _arg2[814812]))
    unknown call_tmp[814898] "expr temp" "maybe param" "maybe type" "temp"
    (814901 'move' call_tmp[814898](814843 'call resolves' c"<" call_tmp[814888] call_tmp[814893]))
    unknown call_tmp[814903] "expr temp" "maybe param" "maybe type" "temp"
    (814906 'move' call_tmp[814903](814845 '&' call_tmp[814868] call_tmp[814883] call_tmp[814898]))
    (814856 'move' ret[814851](814855 'deref' call_tmp[814903]))
    (814853 return ret[814851])
  }
  function <[814797](arg _arg1[814799]:chpl_byte_buffer[172131], arg _arg2[814800]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815010]:bool[10] "RVV" "temp"
    unknown call_tmp[815047] "expr temp" "maybe param" "maybe type" "temp"
    (815050 'move' call_tmp[815047](814914 call isOwned _mt[243] _arg1[814799]))
    unknown call_tmp[815052] "expr temp" "maybe param" "maybe type" "temp"
    (815055 'move' call_tmp[815052](814918 call isOwned _mt[243] _arg2[814800]))
    unknown call_tmp[815057] "expr temp" "maybe param" "maybe type" "temp"
    (815060 'move' call_tmp[815057](814922 call < call_tmp[815047] call_tmp[815052]))
    if call_tmp[815057]
    {
      (815015 'move' ret[815010](815014 'deref' 1))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    unknown call_tmp[815062] "expr temp" "maybe param" "maybe type" "temp"
    (815065 'move' call_tmp[815062](814928 call isOwned _mt[243] _arg1[814799]))
    unknown call_tmp[815067] "expr temp" "maybe param" "maybe type" "temp"
    (815070 'move' call_tmp[815067](814932 call isOwned _mt[243] _arg2[814800]))
    unknown call_tmp[815072] "expr temp" "maybe param" "maybe type" "temp"
    (815075 'move' call_tmp[815072](814936 call > call_tmp[815062] call_tmp[815067]))
    if call_tmp[815072]
    {
      (815020 'move' ret[815010](815019 'deref' 0))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    unknown call_tmp[815077] "expr temp" "maybe param" "maybe type" "temp"
    (815080 'move' call_tmp[815077](814942 call data _mt[243] _arg1[814799]))
    unknown call_tmp[815082] "expr temp" "maybe param" "maybe type" "temp"
    (815085 'move' call_tmp[815082](814946 call data _mt[243] _arg2[814800]))
    unknown call_tmp[815087] "expr temp" "maybe param" "maybe type" "temp"
    (815090 'move' call_tmp[815087](814950 call < call_tmp[815077] call_tmp[815082]))
    if call_tmp[815087]
    {
      (815025 'move' ret[815010](815024 'deref' 1))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    unknown call_tmp[815092] "expr temp" "maybe param" "maybe type" "temp"
    (815095 'move' call_tmp[815092](814956 call data _mt[243] _arg1[814799]))
    unknown call_tmp[815097] "expr temp" "maybe param" "maybe type" "temp"
    (815100 'move' call_tmp[815097](814960 call data _mt[243] _arg2[814800]))
    unknown call_tmp[815102] "expr temp" "maybe param" "maybe type" "temp"
    (815105 'move' call_tmp[815102](814964 call > call_tmp[815092] call_tmp[815097]))
    if call_tmp[815102]
    {
      (815030 'move' ret[815010](815029 'deref' 0))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    unknown call_tmp[815107] "expr temp" "maybe param" "maybe type" "temp"
    (815110 'move' call_tmp[815107](814970 call size _mt[243] _arg1[814799]))
    unknown call_tmp[815112] "expr temp" "maybe param" "maybe type" "temp"
    (815115 'move' call_tmp[815112](814974 call size _mt[243] _arg2[814800]))
    unknown call_tmp[815117] "expr temp" "maybe param" "maybe type" "temp"
    (815120 'move' call_tmp[815117](814978 call < call_tmp[815107] call_tmp[815112]))
    if call_tmp[815117]
    {
      (815035 'move' ret[815010](815034 'deref' 1))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    unknown call_tmp[815122] "expr temp" "maybe param" "maybe type" "temp"
    (815125 'move' call_tmp[815122](814984 call size _mt[243] _arg1[814799]))
    unknown call_tmp[815127] "expr temp" "maybe param" "maybe type" "temp"
    (815130 'move' call_tmp[815127](814988 call size _mt[243] _arg2[814800]))
    unknown call_tmp[815132] "expr temp" "maybe param" "maybe type" "temp"
    (815135 'move' call_tmp[815132](814992 call > call_tmp[815122] call_tmp[815127]))
    if call_tmp[815132]
    {
      (815040 'move' ret[815010](815039 'deref' 0))
      gotoReturn _end_<[815008] _end_<[815008]
    }
    (815045 'move' ret[815010](815044 'deref' 0))
    label _end_<[815008]
    (815012 return ret[815010])
  }
  where {
    unknown call_tmp[815137] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815140 'move' call_tmp[815137](814803 'typeof' _arg1[814799]))
    unknown call_tmp[815142] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815145 'move' call_tmp[815142](814805 'typeof' _arg2[814800]))
    unknown call_tmp[815147] "expr temp" "maybe param" "maybe type" "temp"
    (815150 'move' call_tmp[815147](814807 call == call_tmp[815137] call_tmp[815142]))
    unknown call_tmp[815152] "expr temp" "maybe param" "maybe type" "temp"
    (815155 'move' call_tmp[815152](814908 call chpl_fields_are_comparable[814809] _arg1[814799] _arg2[814800]))
    (814912 '&' call_tmp[815147] call_tmp[815152])
  }
  function chpl_fields_are_comparable[815169](arg _arg1[815171]:chpl_byte_buffer[172131], arg _arg2[815172]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815211]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815218] "expr temp" "maybe param" "maybe type" "temp"
    (815221 'move' call_tmp[815218](815175 call isOwned _mt[243] _arg1[815171]))
    unknown call_tmp[815223] "expr temp" "maybe param" "maybe type" "temp"
    (815226 'move' call_tmp[815223](815179 call isOwned _mt[243] _arg2[815172]))
    unknown call_tmp[815228] "expr temp" "maybe param" "maybe type" "temp"
    (815231 'move' call_tmp[815228](815183 'call resolves' c"<=" call_tmp[815218] call_tmp[815223]))
    unknown call_tmp[815233] "expr temp" "maybe param" "maybe type" "temp"
    (815236 'move' call_tmp[815233](815185 call data _mt[243] _arg1[815171]))
    unknown call_tmp[815238] "expr temp" "maybe param" "maybe type" "temp"
    (815241 'move' call_tmp[815238](815189 call data _mt[243] _arg2[815172]))
    unknown call_tmp[815243] "expr temp" "maybe param" "maybe type" "temp"
    (815246 'move' call_tmp[815243](815193 'call resolves' c"<=" call_tmp[815233] call_tmp[815238]))
    unknown call_tmp[815248] "expr temp" "maybe param" "maybe type" "temp"
    (815251 'move' call_tmp[815248](815195 call size _mt[243] _arg1[815171]))
    unknown call_tmp[815253] "expr temp" "maybe param" "maybe type" "temp"
    (815256 'move' call_tmp[815253](815199 call size _mt[243] _arg2[815172]))
    unknown call_tmp[815258] "expr temp" "maybe param" "maybe type" "temp"
    (815261 'move' call_tmp[815258](815203 'call resolves' c"<=" call_tmp[815248] call_tmp[815253]))
    unknown call_tmp[815263] "expr temp" "maybe param" "maybe type" "temp"
    (815266 'move' call_tmp[815263](815205 '&' call_tmp[815228] call_tmp[815243] call_tmp[815258]))
    (815216 'move' ret[815211](815215 'deref' call_tmp[815263]))
    (815213 return ret[815211])
  }
  function <=[815157](arg _arg1[815159]:chpl_byte_buffer[172131], arg _arg2[815160]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815370]:bool[10] "RVV" "temp"
    unknown call_tmp[815407] "expr temp" "maybe param" "maybe type" "temp"
    (815410 'move' call_tmp[815407](815274 call isOwned _mt[243] _arg1[815159]))
    unknown call_tmp[815412] "expr temp" "maybe param" "maybe type" "temp"
    (815415 'move' call_tmp[815412](815278 call isOwned _mt[243] _arg2[815160]))
    unknown call_tmp[815417] "expr temp" "maybe param" "maybe type" "temp"
    (815420 'move' call_tmp[815417](815282 call < call_tmp[815407] call_tmp[815412]))
    if call_tmp[815417]
    {
      (815375 'move' ret[815370](815374 'deref' 1))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    unknown call_tmp[815422] "expr temp" "maybe param" "maybe type" "temp"
    (815425 'move' call_tmp[815422](815288 call isOwned _mt[243] _arg1[815159]))
    unknown call_tmp[815427] "expr temp" "maybe param" "maybe type" "temp"
    (815430 'move' call_tmp[815427](815292 call isOwned _mt[243] _arg2[815160]))
    unknown call_tmp[815432] "expr temp" "maybe param" "maybe type" "temp"
    (815435 'move' call_tmp[815432](815296 call > call_tmp[815422] call_tmp[815427]))
    if call_tmp[815432]
    {
      (815380 'move' ret[815370](815379 'deref' 0))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    unknown call_tmp[815437] "expr temp" "maybe param" "maybe type" "temp"
    (815440 'move' call_tmp[815437](815302 call data _mt[243] _arg1[815159]))
    unknown call_tmp[815442] "expr temp" "maybe param" "maybe type" "temp"
    (815445 'move' call_tmp[815442](815306 call data _mt[243] _arg2[815160]))
    unknown call_tmp[815447] "expr temp" "maybe param" "maybe type" "temp"
    (815450 'move' call_tmp[815447](815310 call < call_tmp[815437] call_tmp[815442]))
    if call_tmp[815447]
    {
      (815385 'move' ret[815370](815384 'deref' 1))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    unknown call_tmp[815452] "expr temp" "maybe param" "maybe type" "temp"
    (815455 'move' call_tmp[815452](815316 call data _mt[243] _arg1[815159]))
    unknown call_tmp[815457] "expr temp" "maybe param" "maybe type" "temp"
    (815460 'move' call_tmp[815457](815320 call data _mt[243] _arg2[815160]))
    unknown call_tmp[815462] "expr temp" "maybe param" "maybe type" "temp"
    (815465 'move' call_tmp[815462](815324 call > call_tmp[815452] call_tmp[815457]))
    if call_tmp[815462]
    {
      (815390 'move' ret[815370](815389 'deref' 0))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    unknown call_tmp[815467] "expr temp" "maybe param" "maybe type" "temp"
    (815470 'move' call_tmp[815467](815330 call size _mt[243] _arg1[815159]))
    unknown call_tmp[815472] "expr temp" "maybe param" "maybe type" "temp"
    (815475 'move' call_tmp[815472](815334 call size _mt[243] _arg2[815160]))
    unknown call_tmp[815477] "expr temp" "maybe param" "maybe type" "temp"
    (815480 'move' call_tmp[815477](815338 call < call_tmp[815467] call_tmp[815472]))
    if call_tmp[815477]
    {
      (815395 'move' ret[815370](815394 'deref' 1))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    unknown call_tmp[815482] "expr temp" "maybe param" "maybe type" "temp"
    (815485 'move' call_tmp[815482](815344 call size _mt[243] _arg1[815159]))
    unknown call_tmp[815487] "expr temp" "maybe param" "maybe type" "temp"
    (815490 'move' call_tmp[815487](815348 call size _mt[243] _arg2[815160]))
    unknown call_tmp[815492] "expr temp" "maybe param" "maybe type" "temp"
    (815495 'move' call_tmp[815492](815352 call > call_tmp[815482] call_tmp[815487]))
    if call_tmp[815492]
    {
      (815400 'move' ret[815370](815399 'deref' 0))
      gotoReturn _end_<=[815368] _end_<=[815368]
    }
    (815405 'move' ret[815370](815404 'deref' 1))
    label _end_<=[815368]
    (815372 return ret[815370])
  }
  where {
    unknown call_tmp[815497] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815500 'move' call_tmp[815497](815163 'typeof' _arg1[815159]))
    unknown call_tmp[815502] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815505 'move' call_tmp[815502](815165 'typeof' _arg2[815160]))
    unknown call_tmp[815507] "expr temp" "maybe param" "maybe type" "temp"
    (815510 'move' call_tmp[815507](815167 call == call_tmp[815497] call_tmp[815502]))
    unknown call_tmp[815512] "expr temp" "maybe param" "maybe type" "temp"
    (815515 'move' call_tmp[815512](815268 call chpl_fields_are_comparable[815169] _arg1[815159] _arg2[815160]))
    (815272 '&' call_tmp[815507] call_tmp[815512])
  }
  function chpl_fields_are_comparable[815529](arg _arg1[815531]:chpl_byte_buffer[172131], arg _arg2[815532]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815571]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815578] "expr temp" "maybe param" "maybe type" "temp"
    (815581 'move' call_tmp[815578](815535 call isOwned _mt[243] _arg1[815531]))
    unknown call_tmp[815583] "expr temp" "maybe param" "maybe type" "temp"
    (815586 'move' call_tmp[815583](815539 call isOwned _mt[243] _arg2[815532]))
    unknown call_tmp[815588] "expr temp" "maybe param" "maybe type" "temp"
    (815591 'move' call_tmp[815588](815543 'call resolves' c">" call_tmp[815578] call_tmp[815583]))
    unknown call_tmp[815593] "expr temp" "maybe param" "maybe type" "temp"
    (815596 'move' call_tmp[815593](815545 call data _mt[243] _arg1[815531]))
    unknown call_tmp[815598] "expr temp" "maybe param" "maybe type" "temp"
    (815601 'move' call_tmp[815598](815549 call data _mt[243] _arg2[815532]))
    unknown call_tmp[815603] "expr temp" "maybe param" "maybe type" "temp"
    (815606 'move' call_tmp[815603](815553 'call resolves' c">" call_tmp[815593] call_tmp[815598]))
    unknown call_tmp[815608] "expr temp" "maybe param" "maybe type" "temp"
    (815611 'move' call_tmp[815608](815555 call size _mt[243] _arg1[815531]))
    unknown call_tmp[815613] "expr temp" "maybe param" "maybe type" "temp"
    (815616 'move' call_tmp[815613](815559 call size _mt[243] _arg2[815532]))
    unknown call_tmp[815618] "expr temp" "maybe param" "maybe type" "temp"
    (815621 'move' call_tmp[815618](815563 'call resolves' c">" call_tmp[815608] call_tmp[815613]))
    unknown call_tmp[815623] "expr temp" "maybe param" "maybe type" "temp"
    (815626 'move' call_tmp[815623](815565 '&' call_tmp[815588] call_tmp[815603] call_tmp[815618]))
    (815576 'move' ret[815571](815575 'deref' call_tmp[815623]))
    (815573 return ret[815571])
  }
  function >[815517](arg _arg1[815519]:chpl_byte_buffer[172131], arg _arg2[815520]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815730]:bool[10] "RVV" "temp"
    unknown call_tmp[815767] "expr temp" "maybe param" "maybe type" "temp"
    (815770 'move' call_tmp[815767](815634 call isOwned _mt[243] _arg1[815519]))
    unknown call_tmp[815772] "expr temp" "maybe param" "maybe type" "temp"
    (815775 'move' call_tmp[815772](815638 call isOwned _mt[243] _arg2[815520]))
    unknown call_tmp[815777] "expr temp" "maybe param" "maybe type" "temp"
    (815780 'move' call_tmp[815777](815642 call > call_tmp[815767] call_tmp[815772]))
    if call_tmp[815777]
    {
      (815735 'move' ret[815730](815734 'deref' 1))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    unknown call_tmp[815782] "expr temp" "maybe param" "maybe type" "temp"
    (815785 'move' call_tmp[815782](815648 call isOwned _mt[243] _arg1[815519]))
    unknown call_tmp[815787] "expr temp" "maybe param" "maybe type" "temp"
    (815790 'move' call_tmp[815787](815652 call isOwned _mt[243] _arg2[815520]))
    unknown call_tmp[815792] "expr temp" "maybe param" "maybe type" "temp"
    (815795 'move' call_tmp[815792](815656 call < call_tmp[815782] call_tmp[815787]))
    if call_tmp[815792]
    {
      (815740 'move' ret[815730](815739 'deref' 0))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    unknown call_tmp[815797] "expr temp" "maybe param" "maybe type" "temp"
    (815800 'move' call_tmp[815797](815662 call data _mt[243] _arg1[815519]))
    unknown call_tmp[815802] "expr temp" "maybe param" "maybe type" "temp"
    (815805 'move' call_tmp[815802](815666 call data _mt[243] _arg2[815520]))
    unknown call_tmp[815807] "expr temp" "maybe param" "maybe type" "temp"
    (815810 'move' call_tmp[815807](815670 call > call_tmp[815797] call_tmp[815802]))
    if call_tmp[815807]
    {
      (815745 'move' ret[815730](815744 'deref' 1))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    unknown call_tmp[815812] "expr temp" "maybe param" "maybe type" "temp"
    (815815 'move' call_tmp[815812](815676 call data _mt[243] _arg1[815519]))
    unknown call_tmp[815817] "expr temp" "maybe param" "maybe type" "temp"
    (815820 'move' call_tmp[815817](815680 call data _mt[243] _arg2[815520]))
    unknown call_tmp[815822] "expr temp" "maybe param" "maybe type" "temp"
    (815825 'move' call_tmp[815822](815684 call < call_tmp[815812] call_tmp[815817]))
    if call_tmp[815822]
    {
      (815750 'move' ret[815730](815749 'deref' 0))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    unknown call_tmp[815827] "expr temp" "maybe param" "maybe type" "temp"
    (815830 'move' call_tmp[815827](815690 call size _mt[243] _arg1[815519]))
    unknown call_tmp[815832] "expr temp" "maybe param" "maybe type" "temp"
    (815835 'move' call_tmp[815832](815694 call size _mt[243] _arg2[815520]))
    unknown call_tmp[815837] "expr temp" "maybe param" "maybe type" "temp"
    (815840 'move' call_tmp[815837](815698 call > call_tmp[815827] call_tmp[815832]))
    if call_tmp[815837]
    {
      (815755 'move' ret[815730](815754 'deref' 1))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    unknown call_tmp[815842] "expr temp" "maybe param" "maybe type" "temp"
    (815845 'move' call_tmp[815842](815704 call size _mt[243] _arg1[815519]))
    unknown call_tmp[815847] "expr temp" "maybe param" "maybe type" "temp"
    (815850 'move' call_tmp[815847](815708 call size _mt[243] _arg2[815520]))
    unknown call_tmp[815852] "expr temp" "maybe param" "maybe type" "temp"
    (815855 'move' call_tmp[815852](815712 call < call_tmp[815842] call_tmp[815847]))
    if call_tmp[815852]
    {
      (815760 'move' ret[815730](815759 'deref' 0))
      gotoReturn _end_>[815728] _end_>[815728]
    }
    (815765 'move' ret[815730](815764 'deref' 0))
    label _end_>[815728]
    (815732 return ret[815730])
  }
  where {
    unknown call_tmp[815857] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815860 'move' call_tmp[815857](815523 'typeof' _arg1[815519]))
    unknown call_tmp[815862] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815865 'move' call_tmp[815862](815525 'typeof' _arg2[815520]))
    unknown call_tmp[815867] "expr temp" "maybe param" "maybe type" "temp"
    (815870 'move' call_tmp[815867](815527 call == call_tmp[815857] call_tmp[815862]))
    unknown call_tmp[815872] "expr temp" "maybe param" "maybe type" "temp"
    (815875 'move' call_tmp[815872](815628 call chpl_fields_are_comparable[815529] _arg1[815519] _arg2[815520]))
    (815632 '&' call_tmp[815867] call_tmp[815872])
  }
  function chpl_fields_are_comparable[815889](arg _arg1[815891]:chpl_byte_buffer[172131], arg _arg2[815892]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815931]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815938] "expr temp" "maybe param" "maybe type" "temp"
    (815941 'move' call_tmp[815938](815895 call isOwned _mt[243] _arg1[815891]))
    unknown call_tmp[815943] "expr temp" "maybe param" "maybe type" "temp"
    (815946 'move' call_tmp[815943](815899 call isOwned _mt[243] _arg2[815892]))
    unknown call_tmp[815948] "expr temp" "maybe param" "maybe type" "temp"
    (815951 'move' call_tmp[815948](815903 'call resolves' c">=" call_tmp[815938] call_tmp[815943]))
    unknown call_tmp[815953] "expr temp" "maybe param" "maybe type" "temp"
    (815956 'move' call_tmp[815953](815905 call data _mt[243] _arg1[815891]))
    unknown call_tmp[815958] "expr temp" "maybe param" "maybe type" "temp"
    (815961 'move' call_tmp[815958](815909 call data _mt[243] _arg2[815892]))
    unknown call_tmp[815963] "expr temp" "maybe param" "maybe type" "temp"
    (815966 'move' call_tmp[815963](815913 'call resolves' c">=" call_tmp[815953] call_tmp[815958]))
    unknown call_tmp[815968] "expr temp" "maybe param" "maybe type" "temp"
    (815971 'move' call_tmp[815968](815915 call size _mt[243] _arg1[815891]))
    unknown call_tmp[815973] "expr temp" "maybe param" "maybe type" "temp"
    (815976 'move' call_tmp[815973](815919 call size _mt[243] _arg2[815892]))
    unknown call_tmp[815978] "expr temp" "maybe param" "maybe type" "temp"
    (815981 'move' call_tmp[815978](815923 'call resolves' c">=" call_tmp[815968] call_tmp[815973]))
    unknown call_tmp[815983] "expr temp" "maybe param" "maybe type" "temp"
    (815986 'move' call_tmp[815983](815925 '&' call_tmp[815948] call_tmp[815963] call_tmp[815978]))
    (815936 'move' ret[815931](815935 'deref' call_tmp[815983]))
    (815933 return ret[815931])
  }
  function >=[815877](arg _arg1[815879]:chpl_byte_buffer[172131], arg _arg2[815880]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[816090]:bool[10] "RVV" "temp"
    unknown call_tmp[816127] "expr temp" "maybe param" "maybe type" "temp"
    (816130 'move' call_tmp[816127](815994 call isOwned _mt[243] _arg1[815879]))
    unknown call_tmp[816132] "expr temp" "maybe param" "maybe type" "temp"
    (816135 'move' call_tmp[816132](815998 call isOwned _mt[243] _arg2[815880]))
    unknown call_tmp[816137] "expr temp" "maybe param" "maybe type" "temp"
    (816140 'move' call_tmp[816137](816002 call > call_tmp[816127] call_tmp[816132]))
    if call_tmp[816137]
    {
      (816095 'move' ret[816090](816094 'deref' 1))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    unknown call_tmp[816142] "expr temp" "maybe param" "maybe type" "temp"
    (816145 'move' call_tmp[816142](816008 call isOwned _mt[243] _arg1[815879]))
    unknown call_tmp[816147] "expr temp" "maybe param" "maybe type" "temp"
    (816150 'move' call_tmp[816147](816012 call isOwned _mt[243] _arg2[815880]))
    unknown call_tmp[816152] "expr temp" "maybe param" "maybe type" "temp"
    (816155 'move' call_tmp[816152](816016 call < call_tmp[816142] call_tmp[816147]))
    if call_tmp[816152]
    {
      (816100 'move' ret[816090](816099 'deref' 0))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    unknown call_tmp[816157] "expr temp" "maybe param" "maybe type" "temp"
    (816160 'move' call_tmp[816157](816022 call data _mt[243] _arg1[815879]))
    unknown call_tmp[816162] "expr temp" "maybe param" "maybe type" "temp"
    (816165 'move' call_tmp[816162](816026 call data _mt[243] _arg2[815880]))
    unknown call_tmp[816167] "expr temp" "maybe param" "maybe type" "temp"
    (816170 'move' call_tmp[816167](816030 call > call_tmp[816157] call_tmp[816162]))
    if call_tmp[816167]
    {
      (816105 'move' ret[816090](816104 'deref' 1))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    unknown call_tmp[816172] "expr temp" "maybe param" "maybe type" "temp"
    (816175 'move' call_tmp[816172](816036 call data _mt[243] _arg1[815879]))
    unknown call_tmp[816177] "expr temp" "maybe param" "maybe type" "temp"
    (816180 'move' call_tmp[816177](816040 call data _mt[243] _arg2[815880]))
    unknown call_tmp[816182] "expr temp" "maybe param" "maybe type" "temp"
    (816185 'move' call_tmp[816182](816044 call < call_tmp[816172] call_tmp[816177]))
    if call_tmp[816182]
    {
      (816110 'move' ret[816090](816109 'deref' 0))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    unknown call_tmp[816187] "expr temp" "maybe param" "maybe type" "temp"
    (816190 'move' call_tmp[816187](816050 call size _mt[243] _arg1[815879]))
    unknown call_tmp[816192] "expr temp" "maybe param" "maybe type" "temp"
    (816195 'move' call_tmp[816192](816054 call size _mt[243] _arg2[815880]))
    unknown call_tmp[816197] "expr temp" "maybe param" "maybe type" "temp"
    (816200 'move' call_tmp[816197](816058 call > call_tmp[816187] call_tmp[816192]))
    if call_tmp[816197]
    {
      (816115 'move' ret[816090](816114 'deref' 1))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    unknown call_tmp[816202] "expr temp" "maybe param" "maybe type" "temp"
    (816205 'move' call_tmp[816202](816064 call size _mt[243] _arg1[815879]))
    unknown call_tmp[816207] "expr temp" "maybe param" "maybe type" "temp"
    (816210 'move' call_tmp[816207](816068 call size _mt[243] _arg2[815880]))
    unknown call_tmp[816212] "expr temp" "maybe param" "maybe type" "temp"
    (816215 'move' call_tmp[816212](816072 call < call_tmp[816202] call_tmp[816207]))
    if call_tmp[816212]
    {
      (816120 'move' ret[816090](816119 'deref' 0))
      gotoReturn _end_>=[816088] _end_>=[816088]
    }
    (816125 'move' ret[816090](816124 'deref' 1))
    label _end_>=[816088]
    (816092 return ret[816090])
  }
  where {
    unknown call_tmp[816217] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816220 'move' call_tmp[816217](815883 'typeof' _arg1[815879]))
    unknown call_tmp[816222] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816225 'move' call_tmp[816222](815885 'typeof' _arg2[815880]))
    unknown call_tmp[816227] "expr temp" "maybe param" "maybe type" "temp"
    (816230 'move' call_tmp[816227](815887 call == call_tmp[816217] call_tmp[816222]))
    unknown call_tmp[816232] "expr temp" "maybe param" "maybe type" "temp"
    (816235 'move' call_tmp[816232](815988 call chpl_fields_are_comparable[815889] _arg1[815879] _arg2[815880]))
    (815992 '&' call_tmp[816227] call_tmp[816232])
  }
  function =[816237](ref arg _arg1[816239]:chpl_byte_buffer[172131], const?  ref arg _arg2[816240]:chpl_byte_buffer[172131]) : void[4] "assignop" "compiler generated" "inline" "last resort"
  {
    (816250 '=' _arg1[816239] _arg2[816240])
    (816255 return _void[55])
  }
  where {
    unknown call_tmp[816257] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816260 'move' call_tmp[816257](816243 'typeof' _arg1[816239]))
    unknown call_tmp[816262] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816265 'move' call_tmp[816262](816245 'typeof' _arg2[816240]))
    (816247 call == call_tmp[816257] call_tmp[816262])
  }
  function chpl__defaultHash[816267](arg r[816269]:chpl_byte_buffer[172131]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[816300] "RVV" "temp"
    unknown call_tmp[816307] "expr temp" "maybe param" "maybe type" "temp"
    (816310 'move' call_tmp[816307](816286 call size _mt[243] r[816269]))
    unknown call_tmp[816312] "expr temp" "maybe param" "maybe type" "temp"
    (816315 'move' call_tmp[816312](816290 call chpl__defaultHash call_tmp[816307]))
    unknown call_tmp[816317] "expr temp" "maybe param" "maybe type" "temp"
    (816320 'move' call_tmp[816317](816277 call data _mt[243] r[816269]))
    unknown call_tmp[816322] "expr temp" "maybe param" "maybe type" "temp"
    (816325 'move' call_tmp[816322](816281 call chpl__defaultHash call_tmp[816317]))
    unknown call_tmp[816327] "expr temp" "maybe param" "maybe type" "temp"
    (816330 'move' call_tmp[816327](816271 call isOwned _mt[243] r[816269]))
    unknown call_tmp[816332] "expr temp" "maybe param" "maybe type" "temp"
    (816335 'move' call_tmp[816332](816275 call chpl__defaultHash call_tmp[816327]))
    unknown call_tmp[816337] "expr temp" "maybe param" "maybe type" "temp"
    (816340 'move' call_tmp[816337](816283 call chpl__defaultHashCombine call_tmp[816322] call_tmp[816332] 2))
    unknown call_tmp[816342] "expr temp" "maybe param" "maybe type" "temp"
    (816345 'move' call_tmp[816342](816292 call chpl__defaultHashCombine call_tmp[816312] call_tmp[816337] 3))
    (816305 'move' ret[816300](816304 'deref' call_tmp[816342]))
    (816302 return ret[816300])
  }
  type chpl_byte_buffer[172131] val isOwned[172110]:int(8)[85](172109 call int(64)[13] 8) unknown data[172118](172117 call c_ptr[205045](?) c_char[20591]) val size[172126]:uint(64)[115](172125 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172140](arg cb[172137]:chpl_byte_buffer[172131]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
    (522421 return _void[55])
  }
  unknown chpl__exportTypeChplByteBuffer[172145] "dead at end of block" "insert auto destroy" "type variable" chpl_byte_buffer[172131]
  function chpl__exportRetStringOrBytes[172152](ref arg val[172150]:_any[178](?)) : _unknown[51]
  {
    unknown ret[522425] "RVV" "temp"
    unknown result[172156] "dead at end of block" "insert auto destroy"
    (544792 'default init var' result[172156] chpl_byte_buffer[172131])
    (172159 'end of statement')
    unknown call_tmp[681380] "expr temp" "maybe param" "maybe type" "temp"
    (681383 'move' call_tmp[681380](172162 call isOwned _mt[243] result[172156]))
    unknown call_tmp[681385] "expr temp" "maybe param" "maybe type" "temp"
    (681388 'move' call_tmp[681385](172172 call int(64)[13] 8))
    unknown call_tmp[681392] "expr temp" "maybe param" "maybe type" "temp"
    (681395 'move' call_tmp[681392](172166 call isOwned _mt[243] val[172150]))
    unknown call_tmp[681397] "expr temp" "maybe param" "maybe type" "temp"
    (681400 'move' call_tmp[681397](172173 call _cast call_tmp[681385] call_tmp[681392]))
    (172175 call = call_tmp[681380] call_tmp[681397])
    (483311 'end of statement' result[172156])
    unknown call_tmp[681404] "expr temp" "maybe param" "maybe type" "temp"
    (681407 'move' call_tmp[681404](172179 call data _mt[243] result[172156]))
    unknown call_tmp[681409] "expr temp" "maybe param" "maybe type" "temp"
    (681412 'move' call_tmp[681409](172189 call c_ptr[205045](?) c_char[20591]))
    unknown call_tmp[681416] "expr temp" "maybe param" "maybe type" "temp"
    (681419 'move' call_tmp[681416](172183 call buff _mt[243] val[172150]))
    unknown call_tmp[681421] "expr temp" "maybe param" "maybe type" "temp"
    (681424 'move' call_tmp[681421](172190 call _cast call_tmp[681409] call_tmp[681416]))
    (172192 call = call_tmp[681404] call_tmp[681421])
    (483313 'end of statement' result[172156])
    unknown call_tmp[681428] "expr temp" "maybe param" "maybe type" "temp"
    (681431 'move' call_tmp[681428](172196 call size _mt[243] result[172156]))
    unknown call_tmp[681433] "expr temp" "maybe param" "maybe type" "temp"
    (681436 'move' call_tmp[681433](172206 call uint(64)[115] 64))
    unknown call_tmp[681440] "expr temp" "maybe param" "maybe type" "temp"
    (681443 'move' call_tmp[681440](172200 call numBytes _mt[243] val[172150]))
    unknown call_tmp[681445] "expr temp" "maybe param" "maybe type" "temp"
    (681448 'move' call_tmp[681445](172207 call _cast call_tmp[681433] call_tmp[681440]))
    (172209 call = call_tmp[681428] call_tmp[681445])
    (483315 'end of statement' result[172156])
    unknown call_tmp[681452] "expr temp" "maybe param" "maybe type" "temp"
    (681455 'move' call_tmp[681452](172213 call isOwned _mt[243] val[172150]))
    (172217 call = call_tmp[681452] 0)
    (483317 'end of statement')
    (522431 'move' ret[522425](522430 'coerce' result[172156] chpl_byte_buffer[172131]))
    gotoReturn _end_chpl__exportRetStringOrBytes[522423] _end_chpl__exportRetStringOrBytes[522423]
    (483318 'end of statement' result[172156])
    label _end_chpl__exportRetStringOrBytes[522423]
    (522427 return ret[522425])
  }
  { scopeless type
    chpl_byte_buffer[172131]
  }
  function chpl__exportRet[172232](ref arg val[172229]:string[26], arg rt[172235]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522437] "RVV" "temp"
    unknown call_tmp[681457] "expr temp" "maybe param" "maybe type" "temp"
    (681460 'move' call_tmp[681457](172242 call chpl__exportRetStringOrBytes val[172229]))
    (522443 'move' ret[522437](522442 'coerce' call_tmp[681457] rt[172235]))
    (522439 return ret[522437])
  }
  { scopeless type
    rt[172235]
  }
  function chpl__exportRet[172255](ref arg val[172252]:bytes[24], arg rt[172258]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522447] "RVV" "temp"
    unknown call_tmp[681462] "expr temp" "maybe param" "maybe type" "temp"
    (681465 'move' call_tmp[681462](172265 call chpl__exportRetStringOrBytes val[172252]))
    (522453 'move' ret[522447](522452 'coerce' call_tmp[681462] rt[172258]))
    (522449 return ret[522447])
  }
  { scopeless type
    rt[172258]
  }
  function chpl__exportArg[172278](arg cp[172275]:bool[10], arg val[172281]:chpl_byte_buffer[172131], arg rt[172285]:string[26]) : _unknown[51]
  {
    unknown ret[522457] "RVV" "temp"
    unknown call_tmp[681469] "expr temp" "maybe param" "maybe type" "temp"
    (681472 'move' call_tmp[681469](172290 call data _mt[243] val[172281]))
    unknown call_tmp[681474] "maybe param" "maybe type" "temp"
    (681477 'move' call_tmp[681474](172294 call _cast c_string[19] call_tmp[681469]))
    unknown data[172296] "dead at end of block" "insert auto destroy"
    (544794 'init var' data[172296] call_tmp[681474])
    (172299 'end of statement')
    unknown call_tmp[681481] "expr temp" "maybe param" "maybe type" "temp"
    (681484 'move' call_tmp[681481](172302 call size _mt[243] val[172281]))
    unknown call_tmp[681488] "maybe param" "maybe type" "temp"
    (681491 'move' call_tmp[681488](172310 call(172305 call (partial) safeCast _mt[243] call_tmp[681481]) int(64)[13]))
    unknown size[172311] "dead at end of block" "insert auto destroy"
    (544796 'init var' size[172311] call_tmp[681488])
    (172314 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681493] "expr temp" "maybe param" "maybe type" "temp"
        (681496 'move' call_tmp[681493](172323 call _cond_test cp[172275]))
        if call_tmp[681493]
        {
          unknown call_tmp[681498] "expr temp" "maybe param" "maybe type" "temp"
          (681501 'move' call_tmp[681498](172320 call createStringWithNewBuffer data[172296] size[172311]))
          (522463 'move' ret[522457](522462 'coerce' call_tmp[681498] rt[172285]))
          gotoReturn _end_chpl__exportArg[522455] _end_chpl__exportArg[522455]
          (483322 'end of statement' data[172296] size[172311])
        }
        unknown call_tmp[681503] "expr temp" "maybe param" "maybe type" "temp"
        (681506 'move' call_tmp[681503](172333 call createStringWithBorrowedBuffer data[172296] size[172311]))
        (522469 'move' ret[522457](522468 'coerce' call_tmp[681503] rt[172285]))
        gotoReturn _end_chpl__exportArg[522455] _end_chpl__exportArg[522455]
        (483325 'end of statement' data[172296] size[172311])
      }
    }
    label _end_chpl__exportArg[522455]
    (522459 return ret[522457])
  }
  { scopeless type
    rt[172285]
  }
  function chpl__exportArg[172348](arg cp[172345]:bool[10], arg val[172351]:chpl_byte_buffer[172131], arg rt[172355]:bytes[24]) : _unknown[51]
  {
    unknown ret[522475] "RVV" "temp"
    unknown call_tmp[681510] "expr temp" "maybe param" "maybe type" "temp"
    (681513 'move' call_tmp[681510](172360 call data _mt[243] val[172351]))
    unknown call_tmp[681515] "maybe param" "maybe type" "temp"
    (681518 'move' call_tmp[681515](172364 call _cast c_string[19] call_tmp[681510]))
    unknown data[172366] "dead at end of block" "insert auto destroy"
    (544798 'init var' data[172366] call_tmp[681515])
    (172369 'end of statement')
    unknown call_tmp[681522] "expr temp" "maybe param" "maybe type" "temp"
    (681525 'move' call_tmp[681522](172372 call size _mt[243] val[172351]))
    unknown call_tmp[681529] "maybe param" "maybe type" "temp"
    (681532 'move' call_tmp[681529](172380 call(172375 call (partial) safeCast _mt[243] call_tmp[681522]) int(64)[13]))
    unknown size[172381] "dead at end of block" "insert auto destroy"
    (544800 'init var' size[172381] call_tmp[681529])
    (172384 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681534] "expr temp" "maybe param" "maybe type" "temp"
        (681537 'move' call_tmp[681534](172393 call _cond_test cp[172345]))
        if call_tmp[681534]
        {
          unknown call_tmp[681539] "expr temp" "maybe param" "maybe type" "temp"
          (681542 'move' call_tmp[681539](172390 call createBytesWithNewBuffer data[172366] size[172381]))
          (522481 'move' ret[522475](522480 'coerce' call_tmp[681539] rt[172355]))
          gotoReturn _end_chpl__exportArg[522473] _end_chpl__exportArg[522473]
          (483328 'end of statement' data[172366] size[172381])
        }
        unknown call_tmp[681544] "expr temp" "maybe param" "maybe type" "temp"
        (681547 'move' call_tmp[681544](172403 call createBytesWithBorrowedBuffer data[172366] size[172381]))
        (522487 'move' ret[522475](522486 'coerce' call_tmp[681544] rt[172355]))
        gotoReturn _end_chpl__exportArg[522473] _end_chpl__exportArg[522473]
        (483331 'end of statement' data[172366] size[172381])
      }
    }
    label _end_chpl__exportArg[522473]
    (522477 return ret[522475])
  }
  { scopeless type
    rt[172355]
  }
  (355185 'used modules list'(172096 'use' ChapelStandard[20264])(172100 'use' CPtr[204934])(172103 'use' SysCTypes[20940]))
}