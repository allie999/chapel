AST dump for LocaleTree after pass scopeResolve.
Module use list: ChapelLocale 

{
  type chpl_localeTreeRecord[155184] unknown left[155173] locale[28] unknown right[155177](155181 'typeof' left[155173])
  unknown chpl_localeTree[155188] "locale private" chpl_localeTreeRecord[155184]
  (155191 'end of statement')
  function chpl_initLocaleTree[155194]() : _unknown[51] "no return value for void"
  {
    {
      unknown _indexOfInterest[155321] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[155322] "expr temp" "temp"
      (155331 'move' _iterator[155322](155329 call _getIterator LocaleSpace[113664]))
      Defer
      {
        {
          (155347 call _freeIterator _iterator[155322])
        }
      }
      { scopeless type
        (155336 'move' _indexOfInterest[155321](155333 call iteratorIndex _iterator[155322]))
      }
      ForLoop[155323]
      {
        unknown i[155340] "index var" "insert auto destroy"
        (155342 'move' i[155340] _indexOfInterest[155321])
        {
          unknown left[155202] nil[44] unmanaged BaseLocale?[415334]
          (155205 'end of statement')
          unknown right[155211] nil[44] unmanaged BaseLocale?[415334]
          (155214 'end of statement')
          unknown child[155225](155223 call -(155220 call *(155217 call + i[155340] 1) 2) 1)
          (155228 'end of statement')
          if(155276 call _cond_test(155231 call < child[155225] numLocales[209834]))
          {
            (155244 call = left[155202](155241 call .(155240 call(155235 call . rootLocale[91511] c"getChild") child[155225]) c"_instance"))
            (155250 call += child[155225] 1)
            if(155271 call _cond_test(155255 call < child[155225] numLocales[209834]))
            {
              (155268 call = right[155211](155265 call .(155264 call(155259 call . rootLocale[91511] c"getChild") child[155225]) c"_instance"))
            }
          }
          const tmp[155313] "const" "temp"
          (155315 'move' tmp[155313](155311 'deref'(155310 '_wide_get_locale'(155286 call(155281 call . rootLocale[91511] c"getChild") i[155340]))))
          {
            {
              (155295 call =(155291 call .(155288 call . chpl_localeTree[155188] c"left") c"_instance") left[155202])
              (155307 call =(155303 call .(155300 call . chpl_localeTree[155188] c"right") c"_instance") right[155211])
            }
            (155318 'on block' 0 tmp[155313])
          }
        }
        label _continueLabel[155326]
        _indexOfInterest[155321]
        _iterator[155322]
      }
      label _breakLabel[155327]
    }
  }
  (155359 call chpl_initLocaleTree)
  (355051 'used modules list'(155169 'use' ChapelLocale[89844]))
}