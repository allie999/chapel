AST dump for IO after pass returnStarTuplesByRefArgs.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2047070] val _runtime_hdr[2047071]:chpl_comm_on_bundle_t[209301] val _0_tmp[2047073]:chpl_localeID_t[209294] ref _1_this[2047075]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2046809] val _runtime_hdr[2046810]:chpl_comm_on_bundle_t[209301] val _0_tmp[2046812]:chpl_localeID_t[209294] ref _1_this[2046814]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2046633] val _runtime_hdr[2046634]:chpl_comm_on_bundle_t[209301] val _0_tmp[2046636]:chpl_localeID_t[209294] ref _1_this[2046638]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2044842] val _runtime_hdr[2044843]:chpl_comm_on_bundle_t[209301] val _0_tmp[2044845]:chpl_localeID_t[209294] ref _1_this[2044847]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2039787] val _runtime_hdr[2039788]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039790]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039792]:channel(true,dynamic,false)[1060858] ref _2_args[2039794]:(string,codepointIndex,string,int(64))[1176431] val _3_rvfDerefTmp[2039796]:locale[28] ref _4_error[2039798]:Error[167938] "error variable"
  type _class_localson_fn[2039645] val _runtime_hdr[2039646]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039648]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039650]:channel(true,dynamic,false)[1060858] ref _2_args[2039652]:(string,codepointIndex,string)[1158466] val _3_rvfDerefTmp[2039654]:locale[28] ref _4_error[2039656]:Error[167938] "error variable"
  type _class_localson_fn[2039355] val _runtime_hdr[2039356]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039358]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039360]:channel(false,dynamic,false)[1080593] ref _2_path[2039362]:string[26] ref _3_offset[2039364]:int(64)[13] ref _4_error[2039366]:Error[167938] "error variable"
  type _class_localson_fn[2039247] val _runtime_hdr[2039248]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039250]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039252]:channel(false,dynamic,false)[1080593] ref _2_err[2039254]:syserr[223496]
  type _class_localson_fn[2039155] val _runtime_hdr[2039156]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039158]:chpl_localeID_t[209294] ref _1_lhs[2039160]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2039070] val _runtime_hdr[2039071]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039073]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039075]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2038889] val _runtime_hdr[2038890]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038892]:chpl_localeID_t[209294] ref _1__formal_tmp_error[2038894]:syserr[223496] ref _2_this[2038896]:channel(false,dynamic,false)[1080593] val _3_hints[2038898]:int(32)[95] val _4_rvfDerefTmp[2038900]:iostyle[231756] val _5_end[2038902]:int(64)[13] val _6_start[2038904]:int(64)[13] val _7_rvfDerefTmp[2038906]:file[235492]
  type _class_localson_fn[2038682] val _runtime_hdr[2038683]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038685]:chpl_localeID_t[209294] ref _1_err[2038687]:syserr[223496] val _2_hints[2038689]:int(32)[95] val _3_start[2038691]:int(64)[13] ref _4_ret[2038693]:channel(false,dynamic,false)[1080593] val _5_end[2038695]:int(64)[13] val _6_rvfDerefTmp[2038697]:iostyle[231756] val _7_rvfDerefTmp[2038699]:file[235492] ref _8_error[2038701]:Error[167938] "error variable"
  type _class_localson_fn[2038570] val _runtime_hdr[2038571]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038573]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038575]:channel(true,dynamic,false)[1060858] ref _2_ret[2038577]:int(64)[13]
  type _class_localson_fn[2038430] val _runtime_hdr[2038431]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038433]:chpl_localeID_t[209294] ref _1_this[2038435]:channel(true,dynamic,false)[1060858] val _2_x[2038437]:int(64)[13] val _3_rvfDerefTmp[2038439]:locale[28] ref _4_error[2038441]:Error[167938] "error variable"
  type _class_localson_fn[2038288] val _runtime_hdr[2038289]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038291]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038293]:channel(true,dynamic,false)[1060858] ref _2_args[2038295]:1*byteIndex[1056992] val _3_rvfDerefTmp[2038297]:locale[28] ref _4_error[2038299]:Error[167938] "error variable"
  type _class_localson_fn[2038134] val _runtime_hdr[2038135]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038137]:chpl_localeID_t[209294] ref _1_this[2038139]:channel(true,dynamic,false)[1060858] ref _2_path[2038141]:string[26] ref _3_offset[2038143]:int(64)[13] ref _4_error[2038145]:Error[167938] "error variable"
  type _class_localson_fn[2038026] val _runtime_hdr[2038027]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038029]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038031]:channel(true,dynamic,false)[1060858] ref _2_err[2038033]:syserr[223496]
  type _class_localson_fn[2037934] val _runtime_hdr[2037935]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037937]:chpl_localeID_t[209294] ref _1_lhs[2037939]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2037849] val _runtime_hdr[2037850]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037852]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2037854]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2037668] val _runtime_hdr[2037669]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037671]:chpl_localeID_t[209294] val _1_start[2037673]:int(64)[13] val _2_rvfDerefTmp[2037675]:file[235492] ref _3__formal_tmp_error[2037677]:syserr[223496] ref _4_this[2037679]:channel(true,dynamic,false)[1060858] val _5_hints[2037681]:int(32)[95] val _6_rvfDerefTmp[2037683]:iostyle[231756] val _7_end[2037685]:int(64)[13]
  type _class_localson_fn[2037461] val _runtime_hdr[2037462]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037464]:chpl_localeID_t[209294] val _1_hints[2037466]:int(32)[95] val _2_start[2037468]:int(64)[13] ref _3_ret[2037470]:channel(true,dynamic,false)[1060858] val _4_rvfDerefTmp[2037472]:iostyle[231756] val _5_end[2037474]:int(64)[13] val _6_rvfDerefTmp[2037476]:file[235492] ref _7_err[2037478]:syserr[223496] ref _8_error[2037480]:Error[167938] "error variable"
  type _class_localson_fn[2037221] val _runtime_hdr[2037222]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037224]:chpl_localeID_t[209294] ref _1_lhs[2037226]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2037136] val _runtime_hdr[2037137]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037139]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2037141]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2036955] val _runtime_hdr[2036956]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036958]:chpl_localeID_t[209294] val _1_start[2036960]:int(64)[13] val _2_rvfDerefTmp[2036962]:file[235492] ref _3__formal_tmp_error[2036964]:syserr[223496] val _4_end[2036966]:int(64)[13] val _5_hints[2036968]:int(32)[95] val _6_rvfDerefTmp[2036970]:iostyle[231756] ref _7_this[2036972]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2036748] val _runtime_hdr[2036749]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036751]:chpl_localeID_t[209294] ref _1_err[2036753]:syserr[223496] val _2_start[2036755]:int(64)[13] val _3_rvfDerefTmp[2036757]:iostyle[231756] val _4_end[2036759]:int(64)[13] val _5_rvfDerefTmp[2036761]:file[235492] ref _6_ret[2036763]:channel(true,dynamic,true)[1021736] val _7_hints[2036765]:int(32)[95] ref _8_error[2036767]:Error[167938] "error variable"
  type _class_localson_fn[2036538] val _runtime_hdr[2036539]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036541]:chpl_localeID_t[209294] ref _1_lhs[2036543]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2036453] val _runtime_hdr[2036454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036456]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2036458]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2036272] val _runtime_hdr[2036273]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036275]:chpl_localeID_t[209294] val _1_end[2036277]:int(64)[13] ref _2_this[2036279]:channel(false,dynamic,true)[985538] val _3_hints[2036281]:int(32)[95] val _4_rvfDerefTmp[2036283]:iostyle[231756] val _5_start[2036285]:int(64)[13] val _6_rvfDerefTmp[2036287]:file[235492] ref _7__formal_tmp_error[2036289]:syserr[223496]
  type _class_localson_fn[2036065] val _runtime_hdr[2036066]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036068]:chpl_localeID_t[209294] val _1_start[2036070]:int(64)[13] ref _2_err[2036072]:syserr[223496] val _3_end[2036074]:int(64)[13] val _4_rvfDerefTmp[2036076]:iostyle[231756] val _5_rvfDerefTmp[2036078]:file[235492] ref _6_ret[2036080]:channel(false,dynamic,true)[985538] val _7_hints[2036082]:int(32)[95] ref _8_error[2036084]:Error[167938] "error variable"
  type _class_localson_fn[2035716] val _runtime_hdr[2035717]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035719]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035721]:file[235492] ref _2_err[2035723]:syserr[223496] ref _3_ret[2035725]:string[26] ref _4_error[2035727]:Error[167938] "error variable"
  type _class_localson_fn[2035608] val _runtime_hdr[2035609]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035611]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035613]:file[235492] ref _2_err[2035615]:syserr[223496]
  type _class_localson_fn[2035482] val _runtime_hdr[2035483]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035485]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035487]:file[235492] ref _2_ret[2035489]:iostyle[231756] ref _3_error[2035491]:Error[167938] "error variable"
  type _class_localson_fn[2035389] val _runtime_hdr[2035390]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035392]:chpl_localeID_t[209294] ref _1_this[2035394]:file[235492]
  function chpl__init_IO[416024]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val local__str_literal_3111[2334630]:string[26] "temp"
    (2334631 'move' "f" "f")
    const-val local__str_literal_3109[2334624]:string[26] "temp"
    (2334625 'move' "e" "e")
    const-val local__str_literal_3107[2334618]:string[26] "temp"
    (2334619 'move' "d" "d")
    const-val local__str_literal_3105[2334612]:string[26] "temp"
    (2334613 'move' "c" "c")
    const-val local__str_literal_3103[2334606]:string[26] "temp"
    (2334607 'move' "b" "b")
    const-val local__str_literal_3101[2334600]:string[26] "temp"
    (2334601 'move' "a" "a")
    (546736 'move' IOHINT_NONE[231323] 0)
    (2033564 '_private_broadcast' IOHINT_NONE[231323])
    (546738 'move' IOHINT_RANDOM[231328] QIO_HINT_RANDOM[231275])
    (2033566 '_private_broadcast' IOHINT_RANDOM[231328])
    (546740 'move' IOHINT_SEQUENTIAL[231333] QIO_HINT_SEQUENTIAL[231280])
    (2033568 '_private_broadcast' IOHINT_SEQUENTIAL[231333])
    (546742 'move' IOHINT_CACHED[231338] QIO_HINT_CACHED[231295])
    (2033570 '_private_broadcast' IOHINT_CACHED[231338])
    (546744 'move' IOHINT_PARALLEL[231343] QIO_HINT_PARALLEL[231300])
    (2033572 '_private_broadcast' IOHINT_PARALLEL[231343])
    const-val ret_tmp[1789029]:6*string[984962] "temp"
    val inlineImm[2166342]:string[26] "temp"
    (2166345 'move' inlineImm[2166342] "a")
    ref i__e0_x[2166347]:string[26] "temp"
    (2166351 'move' i__e0_x[2166347](2166349 'set reference' inlineImm[2166342]))
    val inlineImm[2166353]:string[26] "temp"
    (2166356 'move' inlineImm[2166353] "b")
    ref i__e1_x[2166358]:string[26] "temp"
    (2166362 'move' i__e1_x[2166358](2166360 'set reference' inlineImm[2166353]))
    val inlineImm[2166364]:string[26] "temp"
    (2166367 'move' inlineImm[2166364] "c")
    ref i__e2_x[2166369]:string[26] "temp"
    (2166373 'move' i__e2_x[2166369](2166371 'set reference' inlineImm[2166364]))
    val inlineImm[2166375]:string[26] "temp"
    (2166378 'move' inlineImm[2166375] "d")
    ref i__e3_x[2166380]:string[26] "temp"
    (2166384 'move' i__e3_x[2166380](2166382 'set reference' inlineImm[2166375]))
    val inlineImm[2166386]:string[26] "temp"
    (2166389 'move' inlineImm[2166386] "e")
    ref i__e4_x[2166391]:string[26] "temp"
    (2166395 'move' i__e4_x[2166391](2166393 'set reference' inlineImm[2166386]))
    val inlineImm[2166397]:string[26] "temp"
    (2166400 'move' inlineImm[2166397] "f")
    ref i__e5_x[2166402]:string[26] "temp"
    (2166406 'move' i__e5_x[2166402](2166404 'set reference' inlineImm[2166397]))
    (2303795 'set svec member' ret_tmp[1789029] 0 i__e0_x[2166347])
    (2303799 'set svec member' ret_tmp[1789029] 1 i__e1_x[2166358])
    (2303803 'set svec member' ret_tmp[1789029] 2 i__e2_x[2166369])
    (2303807 'set svec member' ret_tmp[1789029] 3 i__e3_x[2166380])
    (2303811 'set svec member' ret_tmp[1789029] 4 i__e4_x[2166391])
    (2303815 'set svec member' ret_tmp[1789029] 5 i__e5_x[2166402])
    (1789032 'move' call_tmp[721777] ret_tmp[1789029])
    val ret[2166453]:6*string[985128] "dead after last mention" "RVV" "temp"
    const-ref read_x0[2166457]:string[26]
    (2166459 'move' read_x0[2166457](2166461 'get svec member value' call_tmp[721777] 0))
    val ret[2166464]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166466]:string[26] "dead after last mention" "temp"
    (2166469 call init=[30771] tmp[2166466] read_x0[2166457])
    (2166472 'move' ret[2166464] tmp[2166466])
    const-ref read_x1[2166479]:string[26]
    (2166481 'move' read_x1[2166479](2166483 'get svec member value' call_tmp[721777] 1))
    val ret[2166486]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166488]:string[26] "dead after last mention" "temp"
    (2166491 call init=[30771] tmp[2166488] read_x1[2166479])
    (2166494 'move' ret[2166486] tmp[2166488])
    const-ref read_x2[2166501]:string[26]
    (2166503 'move' read_x2[2166501](2166505 'get svec member value' call_tmp[721777] 2))
    val ret[2166508]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166510]:string[26] "dead after last mention" "temp"
    (2166513 call init=[30771] tmp[2166510] read_x2[2166501])
    (2166516 'move' ret[2166508] tmp[2166510])
    const-ref read_x3[2166523]:string[26]
    (2166525 'move' read_x3[2166523](2166527 'get svec member value' call_tmp[721777] 3))
    val ret[2166530]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166532]:string[26] "dead after last mention" "temp"
    (2166535 call init=[30771] tmp[2166532] read_x3[2166523])
    (2166538 'move' ret[2166530] tmp[2166532])
    const-ref read_x4[2166545]:string[26]
    (2166547 'move' read_x4[2166545](2166549 'get svec member value' call_tmp[721777] 4))
    val ret[2166552]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166554]:string[26] "dead after last mention" "temp"
    (2166557 call init=[30771] tmp[2166554] read_x4[2166545])
    (2166560 'move' ret[2166552] tmp[2166554])
    const-ref read_x5[2166567]:string[26]
    (2166569 'move' read_x5[2166567](2166571 'get svec member value' call_tmp[721777] 5))
    val ret[2166574]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166576]:string[26] "dead after last mention" "temp"
    (2166579 call init=[30771] tmp[2166576] read_x5[2166567])
    (2166582 'move' ret[2166574] tmp[2166576])
    (2303746 'set svec member' ret[2166453] 0 ret[2166464])
    (2303750 'set svec member' ret[2166453] 1 ret[2166486])
    (2303754 'set svec member' ret[2166453] 2 ret[2166508])
    (2303758 'set svec member' ret[2166453] 3 ret[2166530])
    (2303762 'set svec member' ret[2166453] 4 ret[2166552])
    (2303766 'set svec member' ret[2166453] 5 ret[2166574])
    (2033852 '.=' _arg_to_proto_names[246473] value[2033845] ret[2166453])
    const-val coerce_tmp[985605]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985611 'move' coerce_tmp[985605](985607 'cast' int(32)[95] 0))
    val error[1767173]:Error[167938] "error variable" "temp"
    (1767175 'move' error[1767173] nil[44])
    const-val tmp[2166670]:int(32)[95] "dead after last mention" "temp"
    (2166672 'move' tmp[2166670] IOHINT_NONE[231323])
    val errorExists[2054981]:bool[10] "temp"
    (2054986 'move' errorExists[2054981](2054983 '!=' error[1767173] nil[44]))
    if errorExists[2054981]
    {
      (1767178 call chpl_propagate_error[170472] error[1767173])
    }
    const-val default_arg_style[985704]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767186]:Error[167938] "error variable" "temp"
    (1767188 'move' error[1767186] nil[44])
    const-val style[2166691]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2166693 'move' style[2166691](2166696 call defaultIOStyle[235207]))
    (985709 'move' default_arg_style[985704] style[2166691])
    val errorExists[2054989]:bool[10] "temp"
    (2054994 'move' errorExists[2054989](2054991 '!=' error[1767186] nil[44]))
    if errorExists[2054989]
    {
      (1767191 call chpl_propagate_error[170472] error[1767186])
    }
    val error[1767199]:Error[167938] "error variable" "temp"
    (1767201 'move' error[1767199] nil[44])
    const-val ret_tmp[1788327]:file[235492] "temp"
    (250128 call openfd[237183] coerce_tmp[985605] tmp[2166670] default_arg_style[985704] error[1767199] ret_tmp[1788327])
    (1788330 'move' call_tmp[723908] ret_tmp[1788327])
    val errorExists[2054997]:bool[10] "temp"
    (2055002 'move' errorExists[2054997](2054999 '!=' error[1767199] nil[44]))
    if errorExists[2054997]
    {
      (1767204 call chpl_propagate_error[170472] error[1767199])
    }
    val error[1767212]:Error[167938] "error variable" "temp"
    (1767214 'move' error[1767212] nil[44])
    (1016815 'move' default_arg_start[1016808] 0)
    val errorExists[2055005]:bool[10] "temp"
    (2055010 'move' errorExists[2055005](2055007 '!=' error[1767212] nil[44]))
    if errorExists[2055005]
    {
      (1767217 call chpl_propagate_error[170472] error[1767212])
    }
    val error[1767225]:Error[167938] "error variable" "temp"
    (1767227 'move' error[1767225] nil[44])
    (1016879 'move' default_arg_end[1016872] 9223372036854775807)
    val errorExists[2055013]:bool[10] "temp"
    (2055018 'move' errorExists[2055013](2055015 '!=' error[1767225] nil[44]))
    if errorExists[2055013]
    {
      (1767230 call chpl_propagate_error[170472] error[1767225])
    }
    val error[1767238]:Error[167938] "error variable" "temp"
    (1767240 'move' error[1767238] nil[44])
    const-val tmp[2172422]:int(32)[95] "dead after last mention" "temp"
    (2172424 'move' tmp[2172422] IOHINT_NONE[231323])
    (1016927 'move' default_arg_hints[1016920] tmp[2172422])
    val errorExists[2055021]:bool[10] "temp"
    (2055026 'move' errorExists[2055021](2055023 '!=' error[1767238] nil[44]))
    if errorExists[2055021]
    {
      (1767243 call chpl_propagate_error[170472] error[1767238])
    }
    val error[1767251]:Error[167938] "error variable" "temp"
    (1767253 'move' error[1767251] nil[44])
    ref i_this[2172434]:file[235492] "temp"
    (2172438 'move' i_this[2172434](2172436 'set reference' call_tmp[723908]))
    val ret[2172447]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2172449]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2172451]:Error[167938] "error variable" "temp"
    (2172453 'move' error[2172451] nil[44])
    (2172456 'move' style[2172449](2172459 call _style[235872] i_this[2172434] error[2172451]))
    val errorExists[2172462]:bool[10] "temp"
    (2172464 'move' errorExists[2172462](2172466 '!=' error[2172451] nil[44]))
    if errorExists[2172462]
    {
      (2172471 '=' error[1767251] error[2172451])
      gotoErrorHandlingReturn _endreader_default_style[2172480] _endreader_default_style[2172480]
    }
    (2172477 'move' ret[2172447] style[2172449])
    label _endreader_default_style[2172480]
    (1017505 'move' default_arg_style[1017498] ret[2172447])
    val errorExists[2055029]:bool[10] "temp"
    (2055034 'move' errorExists[2055029](2055031 '!=' error[1767251] nil[44]))
    if errorExists[2055029]
    {
      (1767256 call chpl_propagate_error[170472] error[1767251])
    }
    val error[1767264]:Error[167938] "error variable" "temp"
    (1767266 'move' error[1767264] nil[44])
    const-val ret_tmp[1789359]:channel(false,dynamic,true)[985538] "temp"
    (250133 call reader[1016472] call_tmp[723908] default_arg_start[1016808] default_arg_end[1016872] default_arg_hints[1016920] default_arg_style[1017498] error[1767264] ret_tmp[1789359])
    (1789362 'move' call_tmp[723915] ret_tmp[1789359])
    val errorExists[2055037]:bool[10] "temp"
    (2055042 'move' errorExists[2055037](2055039 '!=' error[1767264] nil[44]))
    if errorExists[2055037]
    {
      (1767269 call chpl_propagate_error[170472] error[1767264])
    }
    (547476 'move' stdin[250120] call_tmp[723915])
    (2033574 '_private_broadcast' stdin[250120])
    (723923 'move' call_tmp[723920](250155 call chpl_cstdout[223470]))
    val error[1767277]:Error[167938] "error variable" "temp"
    (1767279 'move' error[1767277] nil[44])
    const-val tmp[2173230]:int(32)[95] "dead after last mention" "temp"
    (2173232 'move' tmp[2173230] IOHINT_NONE[231323])
    val errorExists[2055045]:bool[10] "temp"
    (2055050 'move' errorExists[2055045](2055047 '!=' error[1767277] nil[44]))
    if errorExists[2055045]
    {
      (1767282 call chpl_propagate_error[170472] error[1767277])
    }
    const-val default_arg_style[1021825]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767290]:Error[167938] "error variable" "temp"
    (1767292 'move' error[1767290] nil[44])
    const-val style[2173272]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2173274 'move' style[2173272](2173277 call defaultIOStyle[235207]))
    (1021830 'move' default_arg_style[1021825] style[2173272])
    val errorExists[2055053]:bool[10] "temp"
    (2055058 'move' errorExists[2055053](2055055 '!=' error[1767290] nil[44]))
    if errorExists[2055053]
    {
      (1767295 call chpl_propagate_error[170472] error[1767290])
    }
    val error[1767303]:Error[167938] "error variable" "temp"
    (1767305 'move' error[1767303] nil[44])
    const-val ret_tmp[1788341]:file[235492] "temp"
    (250157 call openfp[237312] call_tmp[723920] tmp[2173230] default_arg_style[1021825] error[1767303] ret_tmp[1788341])
    (1788344 'move' call_tmp[723925] ret_tmp[1788341])
    val errorExists[2055061]:bool[10] "temp"
    (2055066 'move' errorExists[2055061](2055063 '!=' error[1767303] nil[44]))
    if errorExists[2055061]
    {
      (1767308 call chpl_propagate_error[170472] error[1767303])
    }
    val error[1767316]:Error[167938] "error variable" "temp"
    (1767318 'move' error[1767316] nil[44])
    (1022390 'move' default_arg_start[1022383] 0)
    val errorExists[2055069]:bool[10] "temp"
    (2055074 'move' errorExists[2055069](2055071 '!=' error[1767316] nil[44]))
    if errorExists[2055069]
    {
      (1767321 call chpl_propagate_error[170472] error[1767316])
    }
    val error[1767329]:Error[167938] "error variable" "temp"
    (1767331 'move' error[1767329] nil[44])
    (1022454 'move' default_arg_end[1022447] 9223372036854775807)
    val errorExists[2055077]:bool[10] "temp"
    (2055082 'move' errorExists[2055077](2055079 '!=' error[1767329] nil[44]))
    if errorExists[2055077]
    {
      (1767334 call chpl_propagate_error[170472] error[1767329])
    }
    val error[1767342]:Error[167938] "error variable" "temp"
    (1767344 'move' error[1767342] nil[44])
    const-val tmp[2173410]:int(32)[95] "dead after last mention" "temp"
    (2173412 'move' tmp[2173410](2173414 'cast' int(32)[95] 0))
    (1022505 'move' default_arg_hints[1022498] tmp[2173410])
    val errorExists[2055085]:bool[10] "temp"
    (2055090 'move' errorExists[2055085](2055087 '!=' error[1767342] nil[44]))
    if errorExists[2055085]
    {
      (1767347 call chpl_propagate_error[170472] error[1767342])
    }
    val error[1767355]:Error[167938] "error variable" "temp"
    (1767357 'move' error[1767355] nil[44])
    ref i_this[2173453]:file[235492] "temp"
    (2173457 'move' i_this[2173453](2173455 'set reference' call_tmp[723925]))
    val ret[2173466]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2173468]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2173470]:Error[167938] "error variable" "temp"
    (2173472 'move' error[2173470] nil[44])
    (2173475 'move' style[2173468](2173478 call _style[235872] i_this[2173453] error[2173470]))
    val errorExists[2173481]:bool[10] "temp"
    (2173483 'move' errorExists[2173481](2173485 '!=' error[2173470] nil[44]))
    if errorExists[2173481]
    {
      (2173490 '=' error[1767355] error[2173470])
      gotoErrorHandlingReturn _endwriter_default_style[2173499] _endwriter_default_style[2173499]
    }
    (2173496 'move' ret[2173466] style[2173468])
    label _endwriter_default_style[2173499]
    (1022542 'move' default_arg_style[1022535] ret[2173466])
    val errorExists[2055093]:bool[10] "temp"
    (2055098 'move' errorExists[2055093](2055095 '!=' error[1767355] nil[44]))
    if errorExists[2055093]
    {
      (1767360 call chpl_propagate_error[170472] error[1767355])
    }
    val error[1767368]:Error[167938] "error variable" "temp"
    (1767370 'move' error[1767368] nil[44])
    const-val ret_tmp[1789413]:channel(true,dynamic,true)[1021736] "temp"
    (250162 call writer[1022047] call_tmp[723925] default_arg_start[1022383] default_arg_end[1022447] default_arg_hints[1022498] default_arg_style[1022535] error[1767368] ret_tmp[1789413])
    (1789416 'move' call_tmp[723932] ret_tmp[1789413])
    val errorExists[2055101]:bool[10] "temp"
    (2055106 'move' errorExists[2055101](2055103 '!=' error[1767368] nil[44]))
    if errorExists[2055101]
    {
      (1767373 call chpl_propagate_error[170472] error[1767368])
    }
    (547491 'move' stdout[250147] call_tmp[723932])
    (2033576 '_private_broadcast' stdout[250147])
    (723940 'move' call_tmp[723937](250184 call chpl_cstderr[223478]))
    val error[1767381]:Error[167938] "error variable" "temp"
    (1767383 'move' error[1767381] nil[44])
    const-val tmp[2173251]:int(32)[95] "dead after last mention" "temp"
    (2173253 'move' tmp[2173251] IOHINT_NONE[231323])
    val errorExists[2055109]:bool[10] "temp"
    (2055114 'move' errorExists[2055109](2055111 '!=' error[1767381] nil[44]))
    if errorExists[2055109]
    {
      (1767386 call chpl_propagate_error[170472] error[1767381])
    }
    const-val default_arg_style[1023777]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767394]:Error[167938] "error variable" "temp"
    (1767396 'move' error[1767394] nil[44])
    const-val style[2173294]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2173296 'move' style[2173294](2173299 call defaultIOStyle[235207]))
    (1023782 'move' default_arg_style[1023777] style[2173294])
    val errorExists[2055117]:bool[10] "temp"
    (2055122 'move' errorExists[2055117](2055119 '!=' error[1767394] nil[44]))
    if errorExists[2055117]
    {
      (1767399 call chpl_propagate_error[170472] error[1767394])
    }
    val error[1767407]:Error[167938] "error variable" "temp"
    (1767409 'move' error[1767407] nil[44])
    const-val ret_tmp[1788347]:file[235492] "temp"
    (250186 call openfp[237312] call_tmp[723937] tmp[2173251] default_arg_style[1023777] error[1767407] ret_tmp[1788347])
    (1788350 'move' call_tmp[723942] ret_tmp[1788347])
    val errorExists[2055125]:bool[10] "temp"
    (2055130 'move' errorExists[2055125](2055127 '!=' error[1767407] nil[44]))
    if errorExists[2055125]
    {
      (1767412 call chpl_propagate_error[170472] error[1767407])
    }
    val error[1767420]:Error[167938] "error variable" "temp"
    (1767422 'move' error[1767420] nil[44])
    (1023826 'move' default_arg_start[1023819] 0)
    val errorExists[2055133]:bool[10] "temp"
    (2055138 'move' errorExists[2055133](2055135 '!=' error[1767420] nil[44]))
    if errorExists[2055133]
    {
      (1767425 call chpl_propagate_error[170472] error[1767420])
    }
    val error[1767433]:Error[167938] "error variable" "temp"
    (1767435 'move' error[1767433] nil[44])
    (1023837 'move' default_arg_end[1023830] 9223372036854775807)
    val errorExists[2055141]:bool[10] "temp"
    (2055146 'move' errorExists[2055141](2055143 '!=' error[1767433] nil[44]))
    if errorExists[2055141]
    {
      (1767438 call chpl_propagate_error[170472] error[1767433])
    }
    val error[1767446]:Error[167938] "error variable" "temp"
    (1767448 'move' error[1767446] nil[44])
    const-val tmp[2173439]:int(32)[95] "dead after last mention" "temp"
    (2173441 'move' tmp[2173439](2173443 'cast' int(32)[95] 0))
    (1023848 'move' default_arg_hints[1023841] tmp[2173439])
    val errorExists[2055149]:bool[10] "temp"
    (2055154 'move' errorExists[2055149](2055151 '!=' error[1767446] nil[44]))
    if errorExists[2055149]
    {
      (1767451 call chpl_propagate_error[170472] error[1767446])
    }
    val error[1767459]:Error[167938] "error variable" "temp"
    (1767461 'move' error[1767459] nil[44])
    ref i_this[2173503]:file[235492] "temp"
    (2173507 'move' i_this[2173503](2173505 'set reference' call_tmp[723942]))
    val ret[2173516]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2173518]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2173520]:Error[167938] "error variable" "temp"
    (2173522 'move' error[2173520] nil[44])
    (2173525 'move' style[2173518](2173528 call _style[235872] i_this[2173503] error[2173520]))
    val errorExists[2173531]:bool[10] "temp"
    (2173533 'move' errorExists[2173531](2173535 '!=' error[2173520] nil[44]))
    if errorExists[2173531]
    {
      (2173540 '=' error[1767459] error[2173520])
      gotoErrorHandlingReturn _endwriter_default_style[2173549] _endwriter_default_style[2173549]
    }
    (2173546 'move' ret[2173516] style[2173518])
    label _endwriter_default_style[2173549]
    (1023859 'move' default_arg_style[1023852] ret[2173516])
    val errorExists[2055157]:bool[10] "temp"
    (2055162 'move' errorExists[2055157](2055159 '!=' error[1767459] nil[44]))
    if errorExists[2055157]
    {
      (1767464 call chpl_propagate_error[170472] error[1767459])
    }
    val error[1767472]:Error[167938] "error variable" "temp"
    (1767474 'move' error[1767472] nil[44])
    const-val ret_tmp[1789419]:channel(true,dynamic,true)[1021736] "temp"
    (250191 call writer[1022047] call_tmp[723942] default_arg_start[1023819] default_arg_end[1023830] default_arg_hints[1023841] default_arg_style[1023852] error[1767472] ret_tmp[1789419])
    (1789422 'move' call_tmp[723949] ret_tmp[1789419])
    val errorExists[2055165]:bool[10] "temp"
    (2055170 'move' errorExists[2055165](2055167 '!=' error[1767472] nil[44]))
    if errorExists[2055165]
    {
      (1767477 call chpl_propagate_error[170472] error[1767472])
    }
    (547506 'move' stderr[250176] call_tmp[723949])
    (2033578 '_private_broadcast' stderr[250176])
    (536097 return _void[55])
  }
  def module FormattedIO[251180]  
  type iomode[230827] def r[230816]:iomode[230827] 1 def cw[230819]:iomode[230827] 2 def rw[230822]:iomode[230827] 3 def cwr[230825]:iomode[230827] 4
  type iokind[230843] def dynamic[230832]:iokind[230843] 0 def native[230835]:iokind[230843] 1 def big[230838]:iokind[230843] 2 def little[230841]:iokind[230843] 3
  type iostringstyle[230926] def len1b_data[230890]:iostringstyle[230926] -1 def len2b_data[230895]:iostringstyle[230926] -2 def len4b_data[230900]:iostringstyle[230926] -4 def len8b_data[230905]:iostringstyle[230926] -8 def lenVb_data[230910]:iostringstyle[230926] -10 def data_toeof[230917]:iostringstyle[230926] -65280 def data_null[230924]:iostringstyle[230926] -256
  type iostringformat[230948] def word[230931]:iostringformat[230948] 0 def basic[230934]:iostringformat[230948] 1 def chpl[230937]:iostringformat[230948] 2 def json[230940]:iostringformat[230948] 3 def toend[230943]:iostringformat[230948] 4 def toeof[230946]:iostringformat[230948] 5
  const QIO_FDFLAG_UNK[231210]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231215]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231220]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231225]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231230]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231235]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231240]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231245]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231250]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231255]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231260]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231265]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231270]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231275]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231280]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231285]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231290]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231295]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231300]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231305]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231310]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231315]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231323]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231328]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231333]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231338]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231343]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  type qio_file_ptr_t[231351]
  const-val QIO_FILE_PTR_NULL[231354]:qio_file_ptr_t[231351] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qio_channel_ptr_t[231377]
  const-val QIO_CHANNEL_PTR_NULL[231380]:qio_channel_ptr_t[231377] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231388]
  const-val QBUFFER_PTR_NULL[231391]:qbuffer_ptr_t[231388] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231406]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231414]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231422]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231430]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231438]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231446]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  type iostyle[231756] val binary[231456]:uint(8)[100] val byteorder[231474]:uint(8)[100] val str_style[231494]:int(64)[13] val min_width_columns[231503]:uint(32)[110] val max_width_columns[231518]:uint(32)[110] val max_width_characters[231533]:uint(32)[110] val max_width_bytes[231548]:uint(32)[110] val string_start[231554]:uint(8)[100] val string_end[231560]:uint(8)[100] val string_format[231580]:uint(8)[100] val bytes_prefix[231586]:uint(8)[100] val base[231595]:uint(8)[100] val point_char[231601]:uint(8)[100] val exponent_char[231609]:uint(8)[100] val other_exponent_char[231615]:uint(8)[100] val positive_char[231621]:uint(8)[100] val negative_char[231627]:uint(8)[100] val i_char[231635]:uint(8)[100] val prefix_base[231644]:uint(8)[100] val pad_char[231650]:uint(8)[100] val showplus[231659]:uint(8)[100] val uppercase[231668]:uint(8)[100] val leftjustify[231677]:uint(8)[100] val showpoint[231686]:uint(8)[100] val showpointzero[231695]:uint(8)[100] val precision[231706]:int(32)[95] val realfmt[231715]:uint(8)[100] val complex_style[231724]:uint(8)[100] val array_style[231733]:uint(8)[100] val aggregate_style[231742]:uint(8)[100] val tuple_style[231751]:uint(8)[100]
  function QioPluginFile[231922].setupChannel[231768](const in arg this[231924]:QioPluginFile[231922], ref arg pluginChannel[231765]:QioPluginChannel[232005], const in arg start[231774]:int(64)[13], const in arg end[231781]:int(64)[13], const in arg qioChannelPtr[231785]:qio_channel_ptr_t[231377]) : syserr[223496] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1489366]:QioPluginChannel[232005] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1489391 'move' _formal_tmp_pluginChannel[1489366](1489389 'cast' QioPluginChannel[232005] nil[44]))
    const-val call_tmp[2153419]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153421 'move' call_tmp[2153419](2153424 call qio_int_to_err[223546] ENOSYS[224596]))
    label _endsetupChannel[1489376]
    (1798963 '=' pluginChannel[231765] _formal_tmp_pluginChannel[1489366])
    (533564 return call_tmp[2153419])
  }
  function QioPluginFile[231922].filelength[231805](const in arg this[231928]:QioPluginFile[231922], ref arg length[231802]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153495]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153497 'move' call_tmp[2153495](2153500 call qio_int_to_err[223546] ENOSYS[224596]))
    label _endfilelength[1491013]
    (1798966 '=' length[231802] 0)
    (533574 return call_tmp[2153495])
  }
  function QioPluginFile[231922].getpath[231821](const in arg this[231932]:QioPluginFile[231922], ref arg path[231818]:c_string[19], ref arg len[231827]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1491061]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491096 'move' _formal_tmp_path[1491061](1491094 'cast' c_string[19] nil[44]))
    const-val call_tmp[2153514]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153516 'move' call_tmp[2153514](2153519 call qio_int_to_err[223546] ENOSYS[224596]))
    label _endgetpath[1491072]
    (1798969 '=' path[231818] _formal_tmp_path[1491061])
    (1798972 '=' len[231827] 0)
    (533584 return call_tmp[2153514])
  }
  function QioPluginFile[231922].fsync[231840](const in arg this[231936]:QioPluginFile[231922]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153533]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153535 'move' call_tmp[2153533](2153538 call qio_int_to_err[223546] ENOSYS[224596]))
    (533594 return call_tmp[2153533])
  }
  function QioPluginFile[231922].getChunk[231859](const in arg this[231940]:QioPluginFile[231922], ref arg length[231856]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153552]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153554 'move' call_tmp[2153552](2153557 call qio_int_to_err[223546] ENOSYS[224596]))
    label _endgetChunk[1491163]
    (1798975 '=' length[231856] 0)
    (533604 return call_tmp[2153552])
  }
  function QioPluginFile[231922].getLocalesForRegion[231878](const in arg this[231944]:QioPluginFile[231922], const in arg start[231875]:int(64)[13], const in arg end[231884]:int(64)[13], ref arg localeNames[231891]:c_ptr(c_string)[1491188], ref arg nLocales[231898]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1491240]:c_ptr(c_string)[1491188] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491265 'move' _formal_tmp_localeNames[1491240](1491263 'cast' c_ptr(c_string)[1491188] nil[44]))
    const-val call_tmp[2153571]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153573 'move' call_tmp[2153571](2153576 call qio_int_to_err[223546] ENOSYS[224596]))
    label _endgetLocalesForRegion[1491250]
    (1798978 '=' localeNames[231891] _formal_tmp_localeNames[1491240])
    (533614 return call_tmp[2153571])
  }
  function QioPluginFile[231922].close[231911](const in arg this[231948]:QioPluginFile[231922]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153590]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153592 'move' call_tmp[2153590](2153595 call qio_int_to_err[223546] ENOSYS[224596]))
    (533624 return call_tmp[2153590])
  }
  function QioPluginFile[231922].deinit[879872](const in arg this[879876]:QioPluginFile[231922]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771974]
    (879884 return _void[55])
  }
  type QioPluginFile[231922] val super[355636]:object[22] "super class"
  function QioPluginChannel[232005].readAtLeast[231963](const in arg this[232007]:QioPluginChannel[232005], const in arg amt[231960]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153438]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153440 'move' call_tmp[2153438](2153443 call qio_int_to_err[223546] ENOSYS[224596]))
    (533634 return call_tmp[2153438])
  }
  function QioPluginChannel[232005].write[231982](const in arg this[232011]:QioPluginChannel[232005], const in arg amt[231979]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153457]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153459 'move' call_tmp[2153457](2153462 call qio_int_to_err[223546] ENOSYS[224596]))
    (533644 return call_tmp[2153457])
  }
  function QioPluginChannel[232005].close[231994](const in arg this[232015]:QioPluginChannel[232005]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val call_tmp[2153476]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153478 'move' call_tmp[2153476](2153481 call qio_int_to_err[223546] ENOSYS[224596]))
    (533654 return call_tmp[2153476])
  }
  function QioPluginChannel[232005].deinit[880008](const in arg this[880012]:QioPluginChannel[232005]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771986]
    (880020 return _void[55])
  }
  type QioPluginChannel[232005] val super[355638]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232026](const in arg file[232023]:c_void_ptr[149], ref arg plugin_ch[232029]:c_void_ptr[149], const in arg start[232036]:int(64)[13], const in arg end[232043]:int(64)[13], const in arg qio_ch[232047]:qio_channel_ptr_t[231377]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334345]:string[26] "temp"
    (2334346 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2282943]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282945 'move' call_tmp[2282943](2282947 'cast' QioPluginFile[231922] file[232023]))
    val coerce_tmp[2283056]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283058 'move' coerce_tmp[2283056](2283060 'cast' object[22] call_tmp[2282943]))
    const-val call_tmp[2283063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283065 'move' call_tmp[2283063](2283067 'ptr_eq' coerce_tmp[2283056] nil[44]))
    if call_tmp[2283063]
    {
      (2283073 call nilCheckHalt[210063] "argument to ! is nil")
    }
    val pluginChannel[232068]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1489343]:QioPluginChannel[232005] "dead at end of block" "temp"
    (1489346 'move' init_coerce_tmp[1489343](1489511 'cast' QioPluginChannel[232005] nil[44]))
    (546781 'move' pluginChannel[232068] init_coerce_tmp[1489343])
    const-val call_tmp[715029]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_pluginChannel[1489358]:QioPluginChannel[232005] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715032 'move' call_tmp[715029](232083 call setupChannel[231768] call_tmp[2282943] _formal_tmp_out_pluginChannel[1489358] start[232036] end[232043] qio_ch[232047]))
    (2283223 '=' pluginChannel[232068] _formal_tmp_out_pluginChannel[1489358])
    const-val call_tmp[2283229]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283231 'move' call_tmp[2283229](2283233 'cast' c_void_ptr[149] pluginChannel[232068]))
    (2062103 '=' plugin_ch[232029] call_tmp[2283229])
    label _end_chpl_qio_setup_plugin_channel[533660]
    (533664 return call_tmp[715029])
  }
  function chpl_qio_read_atleast[232108](const in arg ch_plugin[232105]:c_void_ptr[149], const in arg amt[232114]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334351]:string[26] "temp"
    (2334352 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2283239]:QioPluginChannel[232005] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283241 'move' call_tmp[2283239](2283243 'cast' QioPluginChannel[232005] ch_plugin[232105]))
    val coerce_tmp[2283312]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283314 'move' coerce_tmp[2283312](2283316 'cast' object[22] call_tmp[2283239]))
    const-val call_tmp[2283319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283321 'move' call_tmp[2283319](2283323 'ptr_eq' coerce_tmp[2283312] nil[44]))
    if call_tmp[2283319]
    {
      (2283329 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715051]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (715054 'move' call_tmp[715051](232138 call readAtLeast[231963] call_tmp[2283239] amt[232114]))
    label _end_chpl_qio_read_atleast[533672]
    (533676 return call_tmp[715051])
  }
  function chpl_qio_write[232149](const in arg ch_plugin[232146]:c_void_ptr[149], const in arg amt[232155]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334357]:string[26] "temp"
    (2334358 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2283249]:QioPluginChannel[232005] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283251 'move' call_tmp[2283249](2283253 'cast' QioPluginChannel[232005] ch_plugin[232146]))
    val coerce_tmp[2283335]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283337 'move' coerce_tmp[2283335](2283339 'cast' object[22] call_tmp[2283249]))
    const-val call_tmp[2283342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283344 'move' call_tmp[2283342](2283346 'ptr_eq' coerce_tmp[2283335] nil[44]))
    if call_tmp[2283342]
    {
      (2283352 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715068]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (715071 'move' call_tmp[715068](232177 call write[231982] call_tmp[2283249] amt[232155]))
    label _end_chpl_qio_write[533683]
    (533687 return call_tmp[715068])
  }
  function chpl_qio_channel_close[232188](const in arg ch[232185]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334363]:string[26] "temp"
    (2334364 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2283259]:QioPluginChannel[232005] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283261 'move' call_tmp[2283259](2283263 'cast' QioPluginChannel[232005] ch[232185]))
    val coerce_tmp[2283358]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283360 'move' coerce_tmp[2283358](2283362 'cast' object[22] call_tmp[2283259]))
    const-val call_tmp[2283365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283367 'move' call_tmp[2283365](2283369 'ptr_eq' coerce_tmp[2283358] nil[44]))
    if call_tmp[2283365]
    {
      (2283375 call nilCheckHalt[210063] "argument to ! is nil")
    }
    val c[232199]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    (546789 'move' c[232199] call_tmp[2283259])
    const-val call_tmp[715085]:syserr[223496] "dead at end of block" "maybe param" "temp"
    (715088 'move' call_tmp[715085](232211 call close[231994] call_tmp[2283259]))
    val coerce_tmp[2283381]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283383 'move' coerce_tmp[2283381](2283385 'cast' object[22] c[232199]))
    const-val call_tmp[2283388]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283390 'move' call_tmp[2283388](2283392 'ptr_neq' coerce_tmp[2283381] nil[44]))
    if call_tmp[2283388]
    {
      const-val call_tmp[2283404]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2283406 'move' call_tmp[2283404](2283408 '_wide_get_locale' c[232199]))
      val isdirect[2283413]:bool[10] "temp"
      (2283415 'move' isdirect[2283413](2283418 call chpl_doDirectExecuteOn[187423] call_tmp[2283404]))
      if isdirect[2283413]
      {
        (2283423 call on_fn[1490178] c[232199])
      }
      {
        val _args_foron_fn[2283426]:_class_localson_fn[2044229] "temp"
        (2283428 'move' _args_foron_fn[2283426](2283430 'stack allocate class' _class_localson_fn[2044229]))
        (2283432 '.=' _args_foron_fn[2283426] _0_tmp[2044232] call_tmp[2283404])
        (2283436 '.=' _args_foron_fn[2283426] _1_arg[2044234] c[232199])
        val _args_vforon_fn[2283440]:c_void_ptr[149] "temp"
        (2283442 'move' _args_vforon_fn[2283440](2283444 'cast_to_void_star' _args_foron_fn[2283426]))
        val _args_sizeon_fn[2283446]:int(64)[13] "temp"
        (2283448 'move' _args_sizeon_fn[2283446](2283450 'sizeof_bundle' _class_localson_fn[2044229]))
        on(2283453 call wrapon_fn[2044263] call_tmp[2283404] _args_vforon_fn[2283440] _args_sizeon_fn[2283446] _args_foron_fn[2283426])
      }
    }
    label _end_chpl_qio_channel_close[533694]
    (533698 return call_tmp[715085])
  }
  function chpl_qio_filelength[232233](const in arg file[232230]:c_void_ptr[149], ref arg length[232239]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334369]:string[26] "temp"
    (2334370 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2282953]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282955 'move' call_tmp[2282953](2282957 'cast' QioPluginFile[231922] file[232230]))
    val coerce_tmp[2283079]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283081 'move' coerce_tmp[2283079](2283083 'cast' object[22] call_tmp[2282953]))
    const-val call_tmp[2283086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283088 'move' call_tmp[2283086](2283090 'ptr_eq' coerce_tmp[2283079] nil[44]))
    if call_tmp[2283086]
    {
      (2283096 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715102]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1490995]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715105 'move' call_tmp[715102](232264 call filelength[231805] call_tmp[2282953] _formal_tmp_out_length[1490995]))
    (2068362 '=' length[232239] _formal_tmp_out_length[1490995])
    label _end_chpl_qio_filelength[533706]
    (533710 return call_tmp[715102])
  }
  function chpl_qio_getpath[232276](const in arg file[232273]:c_void_ptr[149], ref arg str[232279]:c_string[19], ref arg len[232286]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334375]:string[26] "temp"
    (2334376 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2282963]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282965 'move' call_tmp[2282963](2282967 'cast' QioPluginFile[231922] file[232273]))
    val coerce_tmp[2283102]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283104 'move' coerce_tmp[2283102](2283106 'cast' object[22] call_tmp[2282963]))
    const-val call_tmp[2283109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283111 'move' call_tmp[2283109](2283113 'ptr_eq' coerce_tmp[2283102] nil[44]))
    if call_tmp[2283109]
    {
      (2283119 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715119]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_path[1491046]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1491053]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715122 'move' call_tmp[715119](232312 call getpath[231821] call_tmp[2282963] _formal_tmp_out_path[1491046] _formal_tmp_out_len[1491053]))
    (2066233 '=' str[232279] _formal_tmp_out_path[1491046])
    (2068368 '=' len[232286] _formal_tmp_out_len[1491053])
    label _end_chpl_qio_getpath[533718]
    (533722 return call_tmp[715119])
  }
  function chpl_qio_fsync[232324](const in arg file[232321]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334381]:string[26] "temp"
    (2334382 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2282973]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282975 'move' call_tmp[2282973](2282977 'cast' QioPluginFile[231922] file[232321]))
    val coerce_tmp[2283125]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283127 'move' coerce_tmp[2283125](2283129 'cast' object[22] call_tmp[2282973]))
    const-val call_tmp[2283132]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283134 'move' call_tmp[2283132](2283136 'ptr_eq' coerce_tmp[2283125] nil[44]))
    if call_tmp[2283132]
    {
      (2283142 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715136]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (715139 'move' call_tmp[715136](232347 call fsync[231840] call_tmp[2282973]))
    label _end_chpl_qio_fsync[533730]
    (533734 return call_tmp[715136])
  }
  function chpl_qio_get_chunk[232359](const in arg file[232356]:c_void_ptr[149], ref arg length[232365]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334387]:string[26] "temp"
    (2334388 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2282983]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282985 'move' call_tmp[2282983](2282987 'cast' QioPluginFile[231922] file[232356]))
    val coerce_tmp[2283148]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283150 'move' coerce_tmp[2283148](2283152 'cast' object[22] call_tmp[2282983]))
    const-val call_tmp[2283155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283157 'move' call_tmp[2283155](2283159 'ptr_eq' coerce_tmp[2283148] nil[44]))
    if call_tmp[2283155]
    {
      (2283165 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715153]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1491145]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715156 'move' call_tmp[715153](232390 call getChunk[231859] call_tmp[2282983] _formal_tmp_out_length[1491145]))
    (2068374 '=' length[232365] _formal_tmp_out_length[1491145])
    label _end_chpl_qio_get_chunk[533742]
    (533746 return call_tmp[715153])
  }
  function chpl_qio_get_locales_for_region[232402](const in arg file[232399]:c_void_ptr[149], const in arg start[232408]:int(64)[13], const in arg end[232415]:int(64)[13], ref arg localeNames[232419]:c_void_ptr[149], const  ref arg nLocales[232426]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334393]:string[26] "temp"
    (2334394 'move' "argument to ! is nil" "argument to ! is nil")
    val strPtr[232434]:c_ptr(c_string)[1491188] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[2282993]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282995 'move' call_tmp[2282993](2282997 'cast' QioPluginFile[231922] file[232399]))
    val coerce_tmp[2283171]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283173 'move' coerce_tmp[2283171](2283175 'cast' object[22] call_tmp[2282993]))
    const-val call_tmp[2283178]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283180 'move' call_tmp[2283178](2283182 'ptr_eq' coerce_tmp[2283171] nil[44]))
    if call_tmp[2283178]
    {
      (2283188 call nilCheckHalt[210063] "argument to ! is nil")
    }
    const-val call_tmp[715175]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_localeNames[1491232]:c_ptr(c_string)[1491188] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715178 'move' call_tmp[715175](232462 call getLocalesForRegion[231878] call_tmp[2282993] start[232408] end[232415] _formal_tmp_out_localeNames[1491232] nLocales[232426]))
    (1798981 '=' strPtr[232434] _formal_tmp_out_localeNames[1491232])
    (1491299 'noop')
    const-val call_tmp[715180]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715183 'move' call_tmp[715180](232470 'cast' c_void_ptr[149] strPtr[232434]))
    (2062109 '=' localeNames[232419] call_tmp[715180])
    label _end_chpl_qio_get_locales_for_region[533754]
    (533758 return call_tmp[715175])
  }
  function chpl_qio_file_close[232487](const in arg file[232484]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2334399]:string[26] "temp"
    (2334400 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2283003]:QioPluginFile[231922] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283005 'move' call_tmp[2283003](2283007 'cast' QioPluginFile[231922] file[232484]))
    val coerce_tmp[2283194]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283196 'move' coerce_tmp[2283194](2283198 'cast' object[22] call_tmp[2283003]))
    const-val call_tmp[2283201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283203 'move' call_tmp[2283201](2283205 'ptr_eq' coerce_tmp[2283194] nil[44]))
    if call_tmp[2283201]
    {
      (2283211 call nilCheckHalt[210063] "argument to ! is nil")
    }
    val f[232498]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546807 'move' f[232498] call_tmp[2283003])
    const-val call_tmp[715197]:syserr[223496] "dead at end of block" "maybe param" "temp"
    (715200 'move' call_tmp[715197](232508 call close[231911] call_tmp[2283003]))
    val coerce_tmp[2283463]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283465 'move' coerce_tmp[2283463](2283467 'cast' object[22] f[232498]))
    const-val call_tmp[2283470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283472 'move' call_tmp[2283470](2283474 'ptr_neq' coerce_tmp[2283463] nil[44]))
    if call_tmp[2283470]
    {
      const-val call_tmp[2283486]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2283488 'move' call_tmp[2283486](2283490 '_wide_get_locale' f[232498]))
      val isdirect[2283495]:bool[10] "temp"
      (2283497 'move' isdirect[2283495](2283500 call chpl_doDirectExecuteOn[187423] call_tmp[2283486]))
      if isdirect[2283495]
      {
        (2283505 call on_fn[1491610] f[232498])
      }
      {
        val _args_foron_fn[2283508]:_class_localson_fn[2044314] "temp"
        (2283510 'move' _args_foron_fn[2283508](2283512 'stack allocate class' _class_localson_fn[2044314]))
        (2283514 '.=' _args_foron_fn[2283508] _0_tmp[2044317] call_tmp[2283486])
        (2283518 '.=' _args_foron_fn[2283508] _1_arg[2044319] f[232498])
        val _args_vforon_fn[2283522]:c_void_ptr[149] "temp"
        (2283524 'move' _args_vforon_fn[2283522](2283526 'cast_to_void_star' _args_foron_fn[2283508]))
        val _args_sizeon_fn[2283528]:int(64)[13] "temp"
        (2283530 'move' _args_sizeon_fn[2283528](2283532 'sizeof_bundle' _class_localson_fn[2044314]))
        on(2283535 call wrapon_fn[2044348] call_tmp[2283486] _args_vforon_fn[2283522] _args_sizeon_fn[2283528] _args_foron_fn[2283508])
      }
    }
    label _end_chpl_qio_file_close[533766]
    (533770 return call_tmp[715197])
  }
  function qio_style_init_default[232530](ref arg s[232527]:iostyle[231756]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533778 return _void[55])
  }
  function qio_file_release[232550](const in arg f[232547]:qio_file_ptr_t[231351]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533782 return _void[55])
  }
  function qio_file_init[232560](ref arg file_out[232557]:qio_file_ptr_t[231351], const in arg fp[232563]:_file[155], const in arg fd[232567]:int(32)[95], const in arg iohints[232571]:int(32)[95], const  ref arg style[232575]:iostyle[231756], const in arg usefilestar[232579]:int(32)[95]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533786]:syserr[223496] "RVV" "temp"
    (533788 return ret[533786])
  }
  function qio_file_open_mem[232640](ref arg file_out[232637]:qio_file_ptr_t[231351], const in arg buf[232643]:qbuffer_ptr_t[231388], const  ref arg style[232647]:iostyle[231756]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533804]:syserr[223496] "RVV" "temp"
    (533806 return ret[533804])
  }
  function qio_file_close[232660](const in arg f[232657]:qio_file_ptr_t[231351]) : syserr[223496] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533810]:syserr[223496] "RVV" "temp"
    (533812 return ret[533810])
  }
  function qio_file_isopen[232694](const in arg f[232691]:qio_file_ptr_t[231351]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533824]:bool[10] "RVV" "temp"
    (533826 return ret[533824])
  }
  function qio_file_get_style[232733](const in arg f[232730]:qio_file_ptr_t[231351], ref arg style[232736]:iostyle[231756]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533840 return _void[55])
  }
  function qio_channel_create[232790](ref arg ch[232787]:qio_channel_ptr_t[231377], const in arg file[232793]:qio_file_ptr_t[231351], const in arg hints[232797]:int(32)[95], const in arg readable[232801]:int(32)[95], const in arg writeable[232805]:int(32)[95], const in arg start[232812]:int(64)[13], const in arg end[232819]:int(64)[13], const  ref arg style[232823]:iostyle[231756]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533862]:syserr[223496] "RVV" "temp"
    (533864 return ret[533862])
  }
  function qio_channel_path_offset[232836](const in arg threadsafe[232833]:int(32)[95], const in arg ch[232839]:qio_channel_ptr_t[231377], ref arg path[232843]:c_string[19], ref arg offset[232850]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533868]:syserr[223496] "RVV" "temp"
    (533870 return ret[533868])
  }
  function qio_channel_retain[232863](const in arg ch[232860]:qio_channel_ptr_t[231377]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533872 return _void[55])
  }
  function qio_channel_release[232873](const in arg ch[232870]:qio_channel_ptr_t[231377]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533874 return _void[55])
  }
  function qio_channel_binary[232969](const in arg ch[232966]:qio_channel_ptr_t[231377]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533900]:uint(8)[100] "RVV" "temp"
    (533902 return ret[533900])
  }
  function qio_channel_byteorder[232984](const in arg ch[232981]:qio_channel_ptr_t[231377]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533906]:uint(8)[100] "RVV" "temp"
    (533908 return ret[533906])
  }
  function qio_channel_str_style[232999](const in arg ch[232996]:qio_channel_ptr_t[231377]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533912]:int(64)[13] "RVV" "temp"
    (533914 return ret[533912])
  }
  function qio_channel_close[233052](const in arg threadsafe[233049]:int(32)[95], const in arg ch[233055]:qio_channel_ptr_t[231377]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533930]:syserr[223496] "RVV" "temp"
    (533932 return ret[533930])
  }
  function qio_channel_read_amt[1083194](const in arg threadsafe[1083198]:int(32)[95], const in arg ch[1083200]:qio_channel_ptr_t[231377], const in arg ptr[1083202]:c_ptr(uint(8))[937334], const in arg len[1083206]:int(64)[13]) : syserr[223496] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083210]:syserr[223496] "RVV" "temp"
    (1083218 return ret[1083210])
  }
  function qio_channel_offset_unlocked[233294](const in arg ch[233291]:qio_channel_ptr_t[231377]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533996]:int(64)[13] "RVV" "temp"
    (533998 return ret[533996])
  }
  function qio_file_path_for_fd[233559](const in arg fd[233556]:int(32)[95], ref arg path[233562]:c_string[19]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534066]:syserr[223496] "RVV" "temp"
    (534068 return ret[534066])
  }
  function qio_file_path_for_fp[233575](const in arg fp[233572]:_file[155], ref arg path[233578]:c_string[19]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534072]:syserr[223496] "RVV" "temp"
    (534074 return ret[534072])
  }
  function qio_file_path[233591](const in arg f[233588]:qio_file_ptr_t[231351], ref arg path[233594]:c_string[19]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534078]:syserr[223496] "RVV" "temp"
    (534080 return ret[534078])
  }
  function qio_shortest_path[233607](const in arg fl[233604]:qio_file_ptr_t[231351], ref arg path_out[233610]:c_string[19], const in arg path_in[233614]:c_string[19]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534084]:syserr[223496] "RVV" "temp"
    (534086 return ret[534084])
  }
  function qio_channel_write_int64[233962](const in arg threadsafe[233959]:int(32)[95], const in arg byteorder[233965]:int(32)[95], const in arg ch[233969]:qio_channel_ptr_t[231377], const in arg x[233976]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534168]:syserr[223496] "RVV" "temp"
    (534170 return ret[534168])
  }
  function qio_channel_write_string[234301](const in arg threadsafe[234298]:int(32)[95], const in arg byteorder[234304]:int(32)[95], const in arg str_style[234311]:int(64)[13], const in arg ch[234315]:qio_channel_ptr_t[231377], const in arg s[234319]:c_string[19], const in arg len[234323]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534240]:syserr[223496] "RVV" "temp"
    (534242 return ret[534240])
  }
  function qio_channel_print_int[1079436](const in arg threadsafe[1079440]:int(32)[95], const in arg ch[1079442]:qio_channel_ptr_t[231377], const  ref arg ptr[1079444]:int(64)[13], const in arg len[1079448]:uint(64)[115], const in arg issigned[1079452]:int(32)[95]) : syserr[223496] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079456]:syserr[223496] "RVV" "temp"
    (1079464 return ret[1079456])
  }
  function qio_channel_print_string[234749](const in arg threadsafe[234746]:int(32)[95], const in arg ch[234752]:qio_channel_ptr_t[231377], const in arg ptr[234756]:c_string[19], const in arg len[234760]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534354]:syserr[223496] "RVV" "temp"
    (534356 return ret[534354])
  }
  const QIO_CONV_UNK[234972]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[234977]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[234982]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[234987]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[234992]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[234997]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235002]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235007]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235012]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235017]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235022]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235027]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235032]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235037]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235042]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235047]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235052]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235057]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235062]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235067]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235072]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235077]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235082]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235087]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235092]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235097]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235102]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235107]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235112]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235117]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235122]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235207]() : iostyle[231756] "resolved"
  {
    val ret[534426]:iostyle[231756] "dead after last mention" "RVV" "temp"
    val ret[235211]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (235219 call qio_style_init_default[232530] ret[235211])
    (985698 'move' ret[534426] ret[235211])
    label _end_defaultIOStyle[534424]
    (534428 return ret[534426])
  }
  val iohints[235468]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function file[235492].init[235486](ref arg this[235494]:file[235492]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2113709]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113711]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113713 'move' call_tmp[2113711](2113716 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113719 'move' call_tmp[2113709] call_tmp[2113711])
    const-val call_tmp[2113722]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113724]:locale[28] "temp"
    (2113727 call chpl_localeID_to_locale[92849] call_tmp[2113709] ret_tmp[2113724])
    (2113730 'move' call_tmp[2113722] ret_tmp[2113724])
    (465170 '.=' this[235494] home[235474] call_tmp[2113722])
    val tmp[465175]:qio_file_ptr_t[231351] "dead after last mention" "temp"
    (465178 'move' tmp[465175] QIO_FILE_PTR_NULL[231354])
    (465180 '.=' this[235494] _file_internal[235480] tmp[465175])
    (534484 return _void[55])
  }
  type file[235492] val home[235474]:locale[28] "no doc" val _file_internal[235480]:qio_file_ptr_t[231351] "no doc"
  function file[235492].checkAssumingLocal[235680](const  ref arg this[235682]:file[235492], ref arg error_out[1766730]:Error[167938]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_2942[2334417]:string[26] "temp"
    (2334418 'move' "Operation attempted on closed file" "Operation attempted on closed file")
    const-val local__str_literal_129[2334411]:string[26] "temp"
    (2334412 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2940[2334405]:string[26] "temp"
    (2334406 'move' "Operation attempted on an invalid file" "Operation attempted on an invalid file")
    const-val coerce_tmp[1017009]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017013 'move' coerce_tmp[1017009](2324172 '.v' this[235682] _file_internal[235480]))
    const-val call_tmp[2172485]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172487 'move' call_tmp[2172485](2172489 'cast' c_void_ptr[149] coerce_tmp[1017009]))
    const-val call_tmp[2172492]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172494 'move' call_tmp[2172492](2172496 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2172499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172501 'move' call_tmp[2172499](2172503 'ptr_eq' call_tmp[2172485] call_tmp[2172492]))
    if call_tmp[2172499]
    {
      const-val call_tmp[715427]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017069]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017075 'move' coerce_tmp[1017069](1017071 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789371]:owned SystemError[1000149] "temp"
      (235714 call fromSyserr[1017024] coerce_tmp[1017069] "Operation attempted on an invalid file" ret_tmp[1789371])
      (1789374 'move' call_tmp[715427] ret_tmp[1789371])
      val call_tmp[715432]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017084]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789305]:owned Error[966369] "temp"
      ref i_x[2171515]:owned SystemError[1000149] "temp"
      (2171519 'move' i_x[2171515](2171517 'set reference' call_tmp[715427]))
      ref i__retArg[2171521]:owned Error[966369] "temp"
      (2171525 'move' i__retArg[2171521](2171523 'set reference' ret_tmp[1789305]))
      val _formal_tmp_x[2171528]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2171530 'move' _formal_tmp_x[2171528] i_x[2171515])
      const-val ret[2171533]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2171535]:owned SystemError[1000149] "temp"
      (2171537 'move' i_this[2171535](2171539 'set reference' _formal_tmp_x[2171528]))
      val coerce_tmp[2171541]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2171543 'move' coerce_tmp[2171541](2171545 '.v' i_this[2171535] chpl_p[1000144]))
      val call_tmp[2171548]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171550 'move' call_tmp[2171548](2171552 'cast' Error[167938] coerce_tmp[2171541]))
      ref i_this[2171560]:owned SystemError[1000149] "temp"
      (2171562 'move' i_this[2171560](2171564 'set reference' _formal_tmp_x[2171528]))
      val tmp[2171566]:SystemError[264757] "temp"
      (2171568 'move' tmp[2171566](2171570 'cast' SystemError[264757] nil[44]))
      (2171573 '.=' i_this[2171560] chpl_p[1000144] tmp[2171566])
      val coerce_tmp[2171577]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2171579 'move' coerce_tmp[2171577](2171581 'cast' object[22] call_tmp[2171548]))
      const-val call_tmp[2171584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171586 'move' call_tmp[2171584](2171588 'ptr_eq' coerce_tmp[2171577] nil[44]))
      if call_tmp[2171584]
      {
        (2171594 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2171597]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2171599]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2171602 call init[968005] initTemp[2171599] call_tmp[2171548])
      (2171605 'move' call_tmp[2171597] initTemp[2171599])
      (2171608 'move' ret[2171533] call_tmp[2171597])
      (2171612 call chpl__autoDestroy[1549120] _formal_tmp_x[2171528])
      (2171616 '=' i__retArg[2171521] ret[2171533])
      (1789308 'move' coerce_tmp[1017084] ret_tmp[1789305])
      const-val _formal_tmp_in_err[1017263]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017267 'move' _formal_tmp_in_err[1017263] coerce_tmp[1017084])
      (715435 'move' call_tmp[715432](468026 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017263]))
      (1766743 '=' error_out[1766730] call_tmp[715432])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1766732] _endcheckAssumingLocal[1766732]
    }
    const-val call_tmp[715444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017273]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017277 'move' coerce_tmp[1017273](2324178 '.v' this[235682] _file_internal[235480]))
    (715447 'move' call_tmp[715444](235726 call qio_file_isopen[232694] coerce_tmp[1017273]))
    const-val call_tmp[2060253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060255 'move' call_tmp[2060253](2060257 '!' call_tmp[715444]))
    if call_tmp[2060253]
    {
      const-val call_tmp[715461]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017283]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017289 'move' coerce_tmp[1017283](1017285 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789377]:owned SystemError[1000149] "temp"
      (235752 call fromSyserr[1017024] coerce_tmp[1017283] "Operation attempted on closed file" ret_tmp[1789377])
      (1789380 'move' call_tmp[715461] ret_tmp[1789377])
      val call_tmp[715466]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017292]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789311]:owned Error[966369] "temp"
      ref i_x[2171621]:owned SystemError[1000149] "temp"
      (2171625 'move' i_x[2171621](2171623 'set reference' call_tmp[715461]))
      ref i__retArg[2171627]:owned Error[966369] "temp"
      (2171631 'move' i__retArg[2171627](2171629 'set reference' ret_tmp[1789311]))
      val _formal_tmp_x[2171634]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2171636 'move' _formal_tmp_x[2171634] i_x[2171621])
      const-val ret[2171639]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2171641]:owned SystemError[1000149] "temp"
      (2171643 'move' i_this[2171641](2171645 'set reference' _formal_tmp_x[2171634]))
      val coerce_tmp[2171647]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2171649 'move' coerce_tmp[2171647](2171651 '.v' i_this[2171641] chpl_p[1000144]))
      val call_tmp[2171654]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171656 'move' call_tmp[2171654](2171658 'cast' Error[167938] coerce_tmp[2171647]))
      ref i_this[2171666]:owned SystemError[1000149] "temp"
      (2171668 'move' i_this[2171666](2171670 'set reference' _formal_tmp_x[2171634]))
      val tmp[2171672]:SystemError[264757] "temp"
      (2171674 'move' tmp[2171672](2171676 'cast' SystemError[264757] nil[44]))
      (2171679 '.=' i_this[2171666] chpl_p[1000144] tmp[2171672])
      val coerce_tmp[2171683]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2171685 'move' coerce_tmp[2171683](2171687 'cast' object[22] call_tmp[2171654]))
      const-val call_tmp[2171690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171692 'move' call_tmp[2171690](2171694 'ptr_eq' coerce_tmp[2171683] nil[44]))
      if call_tmp[2171690]
      {
        (2171700 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2171703]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2171705]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2171708 call init[968005] initTemp[2171705] call_tmp[2171654])
      (2171711 'move' call_tmp[2171703] initTemp[2171705])
      (2171714 'move' ret[2171639] call_tmp[2171703])
      (2171718 call chpl__autoDestroy[1549120] _formal_tmp_x[2171634])
      (2171722 '=' i__retArg[2171627] ret[2171639])
      (1789314 'move' coerce_tmp[1017292] ret_tmp[1789311])
      const-val _formal_tmp_in_err[1017471]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017475 'move' _formal_tmp_in_err[1017471] coerce_tmp[1017292])
      (715469 'move' call_tmp[715466](468028 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017471]))
      (1766756 '=' error_out[1766730] call_tmp[715466])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1766732] _endcheckAssumingLocal[1766732]
    }
    label _endcheckAssumingLocal[1766732]
    (534492 return _void[55])
  }
  function file[235492].deinit[235803](ref arg this[235805]:file[235492]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334424]:string[26] "temp"
    (2334425 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2161964]:locale[28] "dead after last mention" "maybe param" "temp"
    (2161966 'move' call_tmp[2161964](2161968 '.' this[235805] home[235474]))
    const-val call_tmp[715492]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111373]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111375 'move' coerce_tmp[2111373](2111377 '.v' call_tmp[2161964] _instance[89975]))
    val coerce_tmp[2111380]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111382 'move' coerce_tmp[2111380](2111384 'cast' object[22] coerce_tmp[2111373]))
    const-val call_tmp[2111387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111389 'move' call_tmp[2111387](2111391 'ptr_eq' coerce_tmp[2111380] nil[44]))
    if call_tmp[2111387]
    {
      (2111397 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (715495 'move' call_tmp[715492](235828 '_wide_get_locale' coerce_tmp[2111373]))
    val isdirect[2035373]:bool[10] "temp"
    (2035378 'move' isdirect[2035373](2035375 call chpl_doDirectExecuteOn[187423] call_tmp[715492]))
    if isdirect[2035373]
    {
      (2035382 call on_fn[935508] this[235805])
    }
    {
      val _args_foron_fn[2035397]:_class_localson_fn[2035389] "temp"
      (2035401 'move' _args_foron_fn[2035397](2035399 'stack allocate class' _class_localson_fn[2035389]))
      (2035403 '.=' _args_foron_fn[2035397] _0_tmp[2035392] call_tmp[715492])
      ref tmp[2035407]:file[235492] "temp"
      (2035411 'move' tmp[2035407](2035409 'set reference' this[235805]))
      (2035413 '.=' _args_foron_fn[2035397] _1_this[2035394] tmp[2035407])
      val _args_vforon_fn[2035417]:c_void_ptr[149] "temp"
      (2035421 'move' _args_vforon_fn[2035417](2035419 'cast_to_void_star' _args_foron_fn[2035397]))
      val _args_sizeon_fn[2035423]:int(64)[13] "temp"
      (2035427 'move' _args_sizeon_fn[2035423](2035425 'sizeof_bundle' _class_localson_fn[2035389]))
      on(2035459 call wrapon_fn[2035429] call_tmp[715492] _args_vforon_fn[2035417] _args_sizeon_fn[2035423] _args_foron_fn[2035397])
    }
    label _enddeinit[1771587]
    const-ref _field_destructor_tmp_[1771585]:locale[28] "temp"
    (1771592 'move' _field_destructor_tmp_[1771585](1771589 '.' this[235805] home[235474]))
    (1771594 call deinit[90185] _field_destructor_tmp_[1771585])
    (534496 return _void[55])
  }
  function file[235492]._style[235872](const  ref arg this[235874]:file[235492], ref arg error_out[1766760]:Error[167938]) : iostyle[231756] throws "method" "no doc" "no parens" "resolved"
  {
    const-val local__str_literal_129[2334430]:string[26] "temp"
    (2334431 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[534510]:iostyle[231756] "dead after last mention" "RVV" "temp"
    val ret[235881]:iostyle[231756] "dead at end of block" "insert auto destroy"
    ref call_tmp[2161990]:locale[28] "dead after last mention" "maybe param" "temp"
    (2161992 'move' call_tmp[2161990](2161994 '.' this[235874] home[235474]))
    const-val call_tmp[715530]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111403]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111405 'move' coerce_tmp[2111403](2111407 '.v' call_tmp[2161990] _instance[89975]))
    val coerce_tmp[2111410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111412 'move' coerce_tmp[2111410](2111414 'cast' object[22] coerce_tmp[2111403]))
    const-val call_tmp[2111417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111419 'move' call_tmp[2111417](2111421 'ptr_eq' coerce_tmp[2111410] nil[44]))
    if call_tmp[2111417]
    {
      (2111427 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (715533 'move' call_tmp[715530](235916 '_wide_get_locale' coerce_tmp[2111403]))
    val error[1766763]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1766765 'move' error[1766763] nil[44])
    val rvfDerefTmp[2032136]:file[235492] "temp"
    (2032140 'move' rvfDerefTmp[2032136](2032138 'deref' this[235874]))
    val isdirect[2035464]:bool[10] "temp"
    (2035469 'move' isdirect[2035464](2035466 call chpl_doDirectExecuteOn[187423] call_tmp[715530]))
    if isdirect[2035464]
    {
      (2035473 call on_fn[935517] rvfDerefTmp[2032136] ret[235881] error[1766763])
    }
    {
      val _args_foron_fn[2035494]:_class_localson_fn[2035482] "temp"
      (2035498 'move' _args_foron_fn[2035494](2035496 'stack allocate class' _class_localson_fn[2035482]))
      (2035500 '.=' _args_foron_fn[2035494] _0_tmp[2035485] call_tmp[715530])
      (2035504 '.=' _args_foron_fn[2035494] _1_rvfDerefTmp[2035487] rvfDerefTmp[2032136])
      ref tmp[2035508]:iostyle[231756] "temp"
      (2035512 'move' tmp[2035508](2035510 'set reference' ret[235881]))
      (2035514 '.=' _args_foron_fn[2035494] _2_ret[2035489] tmp[2035508])
      ref tmp[2035518]:Error[167938] "temp"
      (2035522 'move' tmp[2035518](2035520 'set reference' error[1766763]))
      (2035524 '.=' _args_foron_fn[2035494] _3_error[2035491] tmp[2035518])
      val _args_vforon_fn[2035528]:c_void_ptr[149] "temp"
      (2035532 'move' _args_vforon_fn[2035528](2035530 'cast_to_void_star' _args_foron_fn[2035494]))
      val _args_sizeon_fn[2035534]:int(64)[13] "temp"
      (2035538 'move' _args_sizeon_fn[2035534](2035536 'sizeof_bundle' _class_localson_fn[2035482]))
      on(2035586 call wrapon_fn[2035540] call_tmp[715530] _args_vforon_fn[2035528] _args_sizeon_fn[2035534] _args_foron_fn[2035494])
    }
    val errorExists[2054773]:bool[10] "temp"
    (2054778 'move' errorExists[2054773](2054775 '!=' error[1766763] nil[44]))
    if errorExists[2054773]
    {
      (1766769 '=' error_out[1766760] error[1766763])
      gotoErrorHandlingReturn _end__style[534508] _end__style[534508]
    }
    (1017492 'move' ret[534510] ret[235881])
    label _end__style[534508]
    (534512 return ret[534510])
  }
  function file[235492].close[235936](const  ref arg this[235938]:file[235492], ref arg error_out[1766777]:Error[167938]) : void[4] throws "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_2946[2334449]:string[26] "temp"
    (2334450 'move' "in file.close" "in file.close")
    const-val local__str_literal_129[2334442]:string[26] "temp"
    (2334443 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2940[2334436]:string[26] "temp"
    (2334437 'move' "Operation attempted on an invalid file" "Operation attempted on an invalid file")
    const-val coerce_tmp[1060519]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060523 'move' coerce_tmp[1060519](2324194 '.v' this[235938] _file_internal[235480]))
    const-val call_tmp[2172509]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172511 'move' call_tmp[2172509](2172513 'cast' c_void_ptr[149] coerce_tmp[1060519]))
    const-val call_tmp[2172516]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172518 'move' call_tmp[2172516](2172520 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2172523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2172525 'move' call_tmp[2172523](2172527 'ptr_eq' call_tmp[2172509] call_tmp[2172516]))
    if call_tmp[2172523]
    {
      const-val call_tmp[715563]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060528]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060534 'move' coerce_tmp[1060528](1060530 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789383]:owned SystemError[1000149] "temp"
      (235954 call fromSyserr[1017024] coerce_tmp[1060528] "Operation attempted on an invalid file" ret_tmp[1789383])
      (1789386 'move' call_tmp[715563] ret_tmp[1789383])
      val call_tmp[715568]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060537]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789323]:owned Error[966369] "temp"
      ref i_x[2171833]:owned SystemError[1000149] "temp"
      (2171837 'move' i_x[2171833](2171835 'set reference' call_tmp[715563]))
      ref i__retArg[2171839]:owned Error[966369] "temp"
      (2171843 'move' i__retArg[2171839](2171841 'set reference' ret_tmp[1789323]))
      val _formal_tmp_x[2171846]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2171848 'move' _formal_tmp_x[2171846] i_x[2171833])
      const-val ret[2171851]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2171853]:owned SystemError[1000149] "temp"
      (2171855 'move' i_this[2171853](2171857 'set reference' _formal_tmp_x[2171846]))
      val coerce_tmp[2171859]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2171861 'move' coerce_tmp[2171859](2171863 '.v' i_this[2171853] chpl_p[1000144]))
      val call_tmp[2171866]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171868 'move' call_tmp[2171866](2171870 'cast' Error[167938] coerce_tmp[2171859]))
      ref i_this[2171878]:owned SystemError[1000149] "temp"
      (2171880 'move' i_this[2171878](2171882 'set reference' _formal_tmp_x[2171846]))
      val tmp[2171884]:SystemError[264757] "temp"
      (2171886 'move' tmp[2171884](2171888 'cast' SystemError[264757] nil[44]))
      (2171891 '.=' i_this[2171878] chpl_p[1000144] tmp[2171884])
      val coerce_tmp[2171895]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2171897 'move' coerce_tmp[2171895](2171899 'cast' object[22] call_tmp[2171866]))
      const-val call_tmp[2171902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171904 'move' call_tmp[2171902](2171906 'ptr_eq' coerce_tmp[2171895] nil[44]))
      if call_tmp[2171902]
      {
        (2171912 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2171915]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2171917]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2171920 call init[968005] initTemp[2171917] call_tmp[2171866])
      (2171923 'move' call_tmp[2171915] initTemp[2171917])
      (2171926 'move' ret[2171851] call_tmp[2171915])
      (2171930 call chpl__autoDestroy[1549120] _formal_tmp_x[2171846])
      (2171934 '=' i__retArg[2171839] ret[2171851])
      (1789326 'move' coerce_tmp[1060537] ret_tmp[1789323])
      const-val _formal_tmp_in_err[1060716]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060720 'move' _formal_tmp_in_err[1060716] coerce_tmp[1060537])
      (715571 'move' call_tmp[715568](468030 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1060716]))
      (1766790 '=' error_out[1766777] call_tmp[715568])
      gotoErrorHandlingReturn _endclose[1766779] _endclose[1766779]
    }
    val err[235965]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153153]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153155 'move' call_tmp[2153153](2153158 call qio_int_to_err[223546] 0))
    (546926 'move' err[235965] call_tmp[2153153])
    ref call_tmp[2162082]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162084 'move' call_tmp[2162082](2162086 '.' this[235938] home[235474]))
    const-val call_tmp[715585]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111703]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111705 'move' coerce_tmp[2111703](2111707 '.v' call_tmp[2162082] _instance[89975]))
    val coerce_tmp[2111710]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111712 'move' coerce_tmp[2111710](2111714 'cast' object[22] coerce_tmp[2111703]))
    const-val call_tmp[2111717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111719 'move' call_tmp[2111717](2111721 'ptr_eq' coerce_tmp[2111710] nil[44]))
    if call_tmp[2111717]
    {
      (2111727 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (715588 'move' call_tmp[715585](235982 '_wide_get_locale' coerce_tmp[2111703]))
    val rvfDerefTmp[2032157]:file[235492] "temp"
    (2032161 'move' rvfDerefTmp[2032157](2032159 'deref' this[235938]))
    val isdirect[2035591]:bool[10] "temp"
    (2035596 'move' isdirect[2035591](2035593 call chpl_doDirectExecuteOn[187423] call_tmp[715585]))
    if isdirect[2035591]
    {
      (2035600 call on_fn[935526] rvfDerefTmp[2032157] err[235965])
    }
    {
      val _args_foron_fn[2035618]:_class_localson_fn[2035608] "temp"
      (2035622 'move' _args_foron_fn[2035618](2035620 'stack allocate class' _class_localson_fn[2035608]))
      (2035624 '.=' _args_foron_fn[2035618] _0_tmp[2035611] call_tmp[715585])
      (2035628 '.=' _args_foron_fn[2035618] _1_rvfDerefTmp[2035613] rvfDerefTmp[2032157])
      ref tmp[2035632]:syserr[223496] "temp"
      (2035636 'move' tmp[2035632](2035634 'set reference' err[235965]))
      (2035638 '.=' _args_foron_fn[2035618] _2_err[2035615] tmp[2035632])
      val _args_vforon_fn[2035642]:c_void_ptr[149] "temp"
      (2035646 'move' _args_vforon_fn[2035642](2035644 'cast_to_void_star' _args_foron_fn[2035618]))
      val _args_sizeon_fn[2035648]:int(64)[13] "temp"
      (2035652 'move' _args_sizeon_fn[2035648](2035650 'sizeof_bundle' _class_localson_fn[2035608]))
      on(2035692 call wrapon_fn[2035654] call_tmp[715585] _args_vforon_fn[2035642] _args_sizeon_fn[2035648] _args_foron_fn[2035618])
    }
    const-val call_tmp[2152722]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152724 'move' call_tmp[2152722](2152727 call qio_err_iserr[223558] err[235965]))
    const-val call_tmp[2152729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152731 'move' call_tmp[2152729](2152733 '!=' call_tmp[2152722] 0))
    if call_tmp[2152729]
    {
      val error[1766794]:Error[167938] "error variable" "temp"
      (1766803 'move' error[1766794] nil[44])
      const-val call_tmp[715609]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788289]:string[26] "temp"
      (236021 call tryGetPath[236276] this[235938] ret_tmp[1788289])
      (1788292 'move' call_tmp[715609] ret_tmp[1788289])
      (236022 call ioerror[266162] err[235965] "in file.close" call_tmp[715609] error[1766794])
      val errorExists[2054781]:bool[10] "temp"
      (2054786 'move' errorExists[2054781](2054783 '!=' error[1766794] nil[44]))
      if errorExists[2054781]
      {
        ref i_x[2076306]:string[26] "temp"
        (2076310 'move' i_x[2076306](2076308 'set reference' call_tmp[715609]))
        (2076314 call deinit[30831] i_x[2076306])
        gotoErrorHandling handler[1766795] handler[1766795]
      }
      ref i_x[2076318]:string[26] "temp"
      (2076322 'move' i_x[2076318](2076320 'set reference' call_tmp[715609]))
      (2076326 call deinit[30831] i_x[2076318])
      label handler[1766795]
      val errorExists[2054789]:bool[10] "temp"
      (2054794 'move' errorExists[2054789](2054791 '!=' error[1766794] nil[44]))
      if errorExists[2054789]
      {
        (1766810 '=' error_out[1766777] error[1766794])
        gotoErrorHandlingReturn _endclose[1766779] _endclose[1766779]
      }
    }
    label _endclose[1766779]
    (534520 return _void[55])
  }
  function file[235492].path[236124](const  ref arg this[236126]:file[235492], ref arg error_out[1766822]:Error[167938], ref arg _retArg[1788283]:string[26]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val local__str_literal_2951[2334461]:string[26] "temp"
    (2334462 'move' "in file.path" "in file.path")
    const-val local__str_literal_129[2334455]:string[26] "temp"
    (2334456 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[534526]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236133]:string[26] "dead at end of block" "insert auto destroy"
    (1021592 call init[30760] ret[236133])
    val err[236140]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153096]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153098 'move' call_tmp[2153096](2153101 call qio_int_to_err[223546] 0))
    (546932 'move' err[236140] call_tmp[2153096])
    ref call_tmp[2162020]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162022 'move' call_tmp[2162020](2162024 '.' this[236126] home[235474]))
    const-val call_tmp[715669]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111553]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111555 'move' coerce_tmp[2111553](2111557 '.v' call_tmp[2162020] _instance[89975]))
    val coerce_tmp[2111560]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111562 'move' coerce_tmp[2111560](2111564 'cast' object[22] coerce_tmp[2111553]))
    const-val call_tmp[2111567]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111569 'move' call_tmp[2111567](2111571 'ptr_eq' coerce_tmp[2111560] nil[44]))
    if call_tmp[2111567]
    {
      (2111577 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (715672 'move' call_tmp[715669](236226 '_wide_get_locale' coerce_tmp[2111553]))
    val error[1766825]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1766827 'move' error[1766825] nil[44])
    val rvfDerefTmp[2032171]:file[235492] "temp"
    (2032175 'move' rvfDerefTmp[2032171](2032173 'deref' this[236126]))
    val isdirect[2035697]:bool[10] "temp"
    (2035702 'move' isdirect[2035697](2035699 call chpl_doDirectExecuteOn[187423] call_tmp[715669]))
    if isdirect[2035697]
    {
      (2035706 call on_fn[935544] rvfDerefTmp[2032171] err[236140] ret[236133] error[1766825])
    }
    {
      val _args_foron_fn[2035730]:_class_localson_fn[2035716] "temp"
      (2035734 'move' _args_foron_fn[2035730](2035732 'stack allocate class' _class_localson_fn[2035716]))
      (2035736 '.=' _args_foron_fn[2035730] _0_tmp[2035719] call_tmp[715669])
      (2035740 '.=' _args_foron_fn[2035730] _1_rvfDerefTmp[2035721] rvfDerefTmp[2032171])
      ref tmp[2035744]:syserr[223496] "temp"
      (2035748 'move' tmp[2035744](2035746 'set reference' err[236140]))
      (2035750 '.=' _args_foron_fn[2035730] _2_err[2035723] tmp[2035744])
      ref tmp[2035754]:string[26] "temp"
      (2035758 'move' tmp[2035754](2035756 'set reference' ret[236133]))
      (2035760 '.=' _args_foron_fn[2035730] _3_ret[2035725] tmp[2035754])
      ref tmp[2035764]:Error[167938] "temp"
      (2035768 'move' tmp[2035764](2035766 'set reference' error[1766825]))
      (2035770 '.=' _args_foron_fn[2035730] _4_error[2035727] tmp[2035764])
      val _args_vforon_fn[2035774]:c_void_ptr[149] "temp"
      (2035778 'move' _args_vforon_fn[2035774](2035776 'cast_to_void_star' _args_foron_fn[2035730]))
      val _args_sizeon_fn[2035780]:int(64)[13] "temp"
      (2035784 'move' _args_sizeon_fn[2035780](2035782 'sizeof_bundle' _class_localson_fn[2035716]))
      on(2035840 call wrapon_fn[2035786] call_tmp[715669] _args_vforon_fn[2035774] _args_sizeon_fn[2035780] _args_foron_fn[2035730])
    }
    val errorExists[2054797]:bool[10] "temp"
    (2054802 'move' errorExists[2054797](2054799 '!=' error[1766825] nil[44]))
    if errorExists[2054797]
    {
      (1766831 '=' error_out[1766822] error[1766825])
      ref i_x[2076330]:string[26] "temp"
      (2076334 'move' i_x[2076330](2076332 'set reference' ret[236133]))
      (2076338 call deinit[30831] i_x[2076330])
      gotoErrorHandlingReturn _end_path[534524] _end_path[534524]
    }
    const-val call_tmp[2152620]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152622 'move' call_tmp[2152620](2152625 call qio_err_iserr[223558] err[236140]))
    const-val call_tmp[2152627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152629 'move' call_tmp[2152627](2152631 '!=' call_tmp[2152620] 0))
    if call_tmp[2152627]
    {
      val error[1766839]:Error[167938] "error variable" "temp"
      (1766848 'move' error[1766839] nil[44])
      (236258 call ioerror[266223] err[236140] "in file.path" error[1766839])
      val errorExists[2054805]:bool[10] "temp"
      (2054810 'move' errorExists[2054805](2054807 '!=' error[1766839] nil[44]))
      if errorExists[2054805]
      {
        gotoErrorHandling handler[1766840] handler[1766840]
      }
      label handler[1766840]
      val errorExists[2054813]:bool[10] "temp"
      (2054818 'move' errorExists[2054813](2054815 '!=' error[1766839] nil[44]))
      if errorExists[2054813]
      {
        (1766855 '=' error_out[1766822] error[1766839])
        ref i_x[2076342]:string[26] "temp"
        (2076346 'move' i_x[2076342](2076344 'set reference' ret[236133]))
        (2076350 call deinit[30831] i_x[2076342])
        gotoErrorHandlingReturn _end_path[534524] _end_path[534524]
      }
    }
    (1021590 'move' ret[534526] ret[236133])
    label _end_path[534524]
    (1788285 '=' _retArg[1788283] ret[534526])
    (1788287 return _void[55])
  }
  function file[235492].tryGetPath[236276](const  ref arg this[236278]:file[235492], ref arg _retArg[1788319]:string[26]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val local__str_literal_2954[2334467]:string[26] "temp"
    (2334468 'move' "unknown" "unknown")
    val ret[534538]:string[26] "dead after last mention" "RVV" "temp"
    val error[1766867]:Error[167938] "error variable" "temp"
    (1766876 'move' error[1766867] nil[44])
    const-val call_tmp[715732]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788277]:string[26] "temp"
    (236287 call path[236124] this[236278] error[1766867] ret_tmp[1788277])
    (1788280 'move' call_tmp[715732] ret_tmp[1788277])
    val errorExists[2054821]:bool[10] "temp"
    (2054826 'move' errorExists[2054821](2054823 '!=' error[1766867] nil[44]))
    if errorExists[2054821]
    {
      gotoErrorHandling handler[1766868] handler[1766868]
    }
    (1021624 'move' ret[534538] call_tmp[715732])
    gotoReturn _end_tryGetPath[534536] _end_tryGetPath[534536]
    label handler[1766868]
    val errorExists[2054829]:bool[10] "temp"
    (2054834 'move' errorExists[2054829](2054831 '!=' error[1766867] nil[44]))
    if errorExists[2054829]
    {
      val call_tmp[715737]:Error[167938] "dead at end of block" "maybe param" "temp"
      (715740 'move' call_tmp[715737] error[1766867])
      const-val call_tmp[715747]:owned Error[966369] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[1021604]:owned Error[966369] "dead at end of block" "delay instantiation" "temp"
      (1021607 call init[968005] initTemp[1021604] call_tmp[715737])
      (715750 'move' call_tmp[715747] initTemp[1021604])
      const-val chpl_anon_error[354445]:owned Error[966369] "dead at end of block" "delay instantiation" "insert auto destroy"
      (546940 'move' chpl_anon_error[354445] call_tmp[715747])
      val inlineImm[2150574]:string[26] "temp"
      (2150577 'move' inlineImm[2150574] "unknown")
      ref i_x[2150579]:string[26] "temp"
      (2150583 'move' i_x[2150579](2150581 'set reference' inlineImm[2150574]))
      val ret[2150586]:string[26] "dead after last mention" "RVV" "temp"
      const-val tmp[2150588]:string[26] "dead after last mention" "temp"
      (2150591 call init=[30771] tmp[2150588] i_x[2150579])
      (2150594 'move' ret[2150586] tmp[2150588])
      (534550 'move' ret[534538] ret[2150586])
      (1798999 call chpl__autoDestroy[1501551] chpl_anon_error[354445])
      gotoReturn _end_tryGetPath[534536] _end_tryGetPath[534536]
    }
    label _end_tryGetPath[534536]
    (1788321 '=' _retArg[1788319] ret[534538])
    (1788325 return _void[55])
  }
  function openfd[237183](const in arg fd[237180]:int(32)[95], const in arg hints[237187]:int(32)[95], const  ref arg style[237195]:iostyle[231756], ref arg error_out[1766891]:Error[167938], ref arg _retArg[1788333]:file[235492]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2985[2334479]:string[26] "temp"
    (2334480 'move' "in openfd" "in openfd")
    const-val local__str_literal_2954[2334473]:string[26] "temp"
    (2334474 'move' "unknown" "unknown")
    const-val ret[534637]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237201]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (546976 'move' local_style[237201] style[237195])
    val ret[237207]:file[235492] "dead at end of block" "insert auto destroy"
    (1016432 call init[235486] ret[237207])
    ref call_tmp[2161980]:locale[28] "dead after last mention" "maybe param" "temp"
    (2161982 'move' call_tmp[2161980](2161984 '.' ret[237207] home[235474]))
    const-val call_tmp[716036]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113601]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113605 'move' call_tmp[2113603](2113608 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113611 'move' call_tmp[2113601] call_tmp[2113603])
    const-val call_tmp[2113614]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113616]:locale[28] "temp"
    (2113619 call chpl_localeID_to_locale[92849] call_tmp[2113601] ret_tmp[2113616])
    (2113622 'move' call_tmp[2113614] ret_tmp[2113616])
    (1787372 'move' call_tmp[716036] call_tmp[2113614])
    (237216 call =[90631] call_tmp[2161980] call_tmp[716036])
    ref i_x[2209028]:locale[28] "temp"
    (2209032 'move' i_x[2209028](2209030 'set reference' call_tmp[716036]))
    (2209036 call deinit[90185] i_x[2209028])
    ref call_tmp[2162182]:qio_file_ptr_t[231351] "dead after last mention" "maybe param" "temp"
    (2162184 'move' call_tmp[2162182](2162186 '.' ret[237207] _file_internal[235480]))
    const-val call_tmp[716048]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716051 'move' call_tmp[716048](237227 call chpl_cnullfile[223486]))
    const-val call_tmp[716053]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986435]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986441 'move' coerce_tmp[986435](986437 'cast' int(32)[95] 0))
    (716056 'move' call_tmp[716053](237232 call qio_file_init[232560] call_tmp[2162182] call_tmp[716048] fd[237180] hints[237187] local_style[237201] coerce_tmp[986435]))
    const-val call_tmp[2152552]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152554 'move' call_tmp[2152552](2152557 call qio_err_iserr[223558] call_tmp[716053]))
    const-val call_tmp[2152559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152561 'move' call_tmp[2152559](2152563 '!=' call_tmp[2152552] 0))
    if call_tmp[2152559]
    {
      val path_cs[237239]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016470 'move' path_cs[237239](1016468 'cast' c_string[19] nil[44]))
      const-val call_tmp[716063]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (716066 'move' call_tmp[716063](237248 call qio_file_path_for_fd[233559] fd[237180] path_cs[237239]))
      const-val path[237267]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576647]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2152569]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152571 'move' call_tmp[2152569](2152574 call qio_err_iserr[223558] call_tmp[716063]))
      const-val call_tmp[2152576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152578 'move' call_tmp[2152576](2152580 '!=' call_tmp[2152569] 0))
      if call_tmp[2152576]
      {
        val inlineImm[2150599]:string[26] "temp"
        (2150602 'move' inlineImm[2150599] "unknown")
        ref i_x[2150604]:string[26] "temp"
        (2150608 'move' i_x[2150604](2150606 'set reference' inlineImm[2150599]))
        val ret[2150611]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2150613]:string[26] "dead after last mention" "temp"
        (2150616 call init=[30771] tmp[2150613] i_x[2150604])
        (2150619 'move' ret[2150611] tmp[2150613])
        (576658 'move' tmp[576647] ret[2150611])
      }
      {
        val error[1766894]:Error[167938] "error variable" "temp"
        (1766896 'move' error[1766894] nil[44])
        const-val call_tmp[2150049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2150051 'move' call_tmp[2150049](2150053 'string_length_bytes' path_cs[237239]))
        val errorExists[2054837]:bool[10] "temp"
        (2054842 'move' errorExists[2054837](2054839 '!=' error[1766894] nil[44]))
        if errorExists[2054837]
        {
          (1766900 '=' error_out[1766891] error[1766894])
          ref i_x[2283677]:file[235492] "temp"
          (2283681 'move' i_x[2283677](2283679 'set reference' ret[237207]))
          (2283685 call deinit[235803] i_x[2283677])
          gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
        }
        val error[1766909]:Error[167938] "error variable" "temp"
        (1766911 'move' error[1766909] nil[44])
        const-val ret[2087439]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2087441]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        (2087443 'move' call_tmp[2087441](2087445 'cast' c_ptr(uint(8))[937334] path_cs[237239]))
        val error[2087450]:Error[167938] "error variable" "temp"
        (2087452 'move' error[2087450] nil[44])
        const-val ret[2087455]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2087457]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2087459]:Error[167938] "error variable" "temp"
        (2087461 'move' error[2087459] nil[44])
        const-val ret_tmp[2087464]:string[26] "temp"
        (2087467 call decodeByteBuffer[173892] call_tmp[2087441] call_tmp[2150049] replace[173648] error[2087459] ret_tmp[2087464])
        (2087473 'move' call_tmp[2087457] ret_tmp[2087464])
        val errorExists[2087476]:bool[10] "temp"
        (2087478 'move' errorExists[2087476](2087480 '!=' error[2087459] nil[44]))
        if errorExists[2087476]
        {
          (2087485 '=' error[2087450] error[2087459])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087494] _endcreateStringWithNewBuffer[2087494]
        }
        (2087491 'move' ret[2087455] call_tmp[2087457])
        label _endcreateStringWithNewBuffer[2087494]
        val errorExists[2087499]:bool[10] "temp"
        (2087501 'move' errorExists[2087499](2087503 '!=' error[2087450] nil[44]))
        if errorExists[2087499]
        {
          (2087508 '=' error[1766909] error[2087450])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087517] _endcreateStringWithNewBuffer[2087517]
        }
        (2087514 'move' ret[2087439] ret[2087455])
        label _endcreateStringWithNewBuffer[2087517]
        val errorExists[2054845]:bool[10] "temp"
        (2054850 'move' errorExists[2054845](2054847 '!=' error[1766909] nil[44]))
        if errorExists[2054845]
        {
          (1766915 '=' error_out[1766891] error[1766909])
          ref i_x[2283689]:file[235492] "temp"
          (2283693 'move' i_x[2283689](2283691 'set reference' ret[237207]))
          (2283697 call deinit[235803] i_x[2283689])
          gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
        }
        (576667 'move' tmp[576647] ret[2087439])
      }
      (546986 'move' path[237267] tmp[576647])
      val error[1766923]:Error[167938] "error variable" "temp"
      (1766932 'move' error[1766923] nil[44])
      (237292 call ioerror[266162] call_tmp[716053] "in openfd" path[237267] error[1766923])
      val errorExists[2054853]:bool[10] "temp"
      (2054858 'move' errorExists[2054853](2054855 '!=' error[1766923] nil[44]))
      if errorExists[2054853]
      {
        gotoErrorHandling handler[1766924] handler[1766924]
      }
      label handler[1766924]
      val errorExists[2054861]:bool[10] "temp"
      (2054866 'move' errorExists[2054861](2054863 '!=' error[1766923] nil[44]))
      if errorExists[2054861]
      {
        (1766939 '=' error_out[1766891] error[1766923])
        ref i_x[2076354]:string[26] "temp"
        (2076358 'move' i_x[2076354](2076356 'set reference' path[237267]))
        (2076362 call deinit[30831] i_x[2076354])
        ref i_x[2283701]:file[235492] "temp"
        (2283705 'move' i_x[2283701](2283703 'set reference' ret[237207]))
        (2283709 call deinit[235803] i_x[2283701])
        gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
      }
      ref i_x[2076366]:string[26] "temp"
      (2076370 'move' i_x[2076366](2076368 'set reference' path[237267]))
      (2076374 call deinit[30831] i_x[2076366])
    }
    (1016430 'move' ret[534637] ret[237207])
    label _end_openfd[534635]
    (1788335 '=' _retArg[1788333] ret[534637])
    (1788339 return _void[55])
  }
  function openfp[237312](const in arg fp[237309]:_file[155], const in arg hints[237316]:int(32)[95], const  ref arg style[237324]:iostyle[231756], ref arg error_out[1766951]:Error[167938], ref arg _retArg[1788353]:file[235492]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2987[2334491]:string[26] "temp"
    (2334492 'move' "in openfp" "in openfp")
    const-val local__str_literal_2954[2334485]:string[26] "temp"
    (2334486 'move' "unknown" "unknown")
    const-val ret[534649]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237330]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (546988 'move' local_style[237330] style[237324])
    val ret[237336]:file[235492] "dead at end of block" "insert auto destroy"
    (1022037 call init[235486] ret[237336])
    ref call_tmp[2162036]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162038 'move' call_tmp[2162036](2162040 '.' ret[237336] home[235474]))
    const-val call_tmp[716075]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113637]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113639]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113641 'move' call_tmp[2113639](2113644 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113647 'move' call_tmp[2113637] call_tmp[2113639])
    const-val call_tmp[2113650]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113652]:locale[28] "temp"
    (2113655 call chpl_localeID_to_locale[92849] call_tmp[2113637] ret_tmp[2113652])
    (2113658 'move' call_tmp[2113650] ret_tmp[2113652])
    (1787378 'move' call_tmp[716075] call_tmp[2113650])
    (237345 call =[90631] call_tmp[2162036] call_tmp[716075])
    ref i_x[2209040]:locale[28] "temp"
    (2209044 'move' i_x[2209040](2209042 'set reference' call_tmp[716075]))
    (2209048 call deinit[90185] i_x[2209040])
    ref call_tmp[2162218]:qio_file_ptr_t[231351] "dead after last mention" "maybe param" "temp"
    (2162220 'move' call_tmp[2162218](2162222 '.' ret[237336] _file_internal[235480]))
    const-val call_tmp[716092]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1021992]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1021998 'move' coerce_tmp[1021992](1021994 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022000]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022006 'move' coerce_tmp[1022000](1022002 'cast' int(32)[95] 1))
    (716095 'move' call_tmp[716092](237361 call qio_file_init[232560] call_tmp[2162218] fp[237309] coerce_tmp[1021992] hints[237316] local_style[237330] coerce_tmp[1022000]))
    const-val call_tmp[2152654]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152656 'move' call_tmp[2152654](2152659 call qio_err_iserr[223558] call_tmp[716092]))
    const-val call_tmp[2152661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152663 'move' call_tmp[2152661](2152665 '!=' call_tmp[2152654] 0))
    if call_tmp[2152661]
    {
      val path_cs[237368]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022045 'move' path_cs[237368](1022043 'cast' c_string[19] nil[44]))
      const-val call_tmp[716102]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (716105 'move' call_tmp[716102](237377 call qio_file_path_for_fp[233575] fp[237309] path_cs[237368]))
      const-val path[237396]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576674]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2152671]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152673 'move' call_tmp[2152671](2152676 call qio_err_iserr[223558] call_tmp[716102]))
      const-val call_tmp[2152678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152680 'move' call_tmp[2152678](2152682 '!=' call_tmp[2152671] 0))
      if call_tmp[2152678]
      {
        val inlineImm[2150624]:string[26] "temp"
        (2150627 'move' inlineImm[2150624] "unknown")
        ref i_x[2150629]:string[26] "temp"
        (2150633 'move' i_x[2150629](2150631 'set reference' inlineImm[2150624]))
        val ret[2150636]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2150638]:string[26] "dead after last mention" "temp"
        (2150641 call init=[30771] tmp[2150638] i_x[2150629])
        (2150644 'move' ret[2150636] tmp[2150638])
        (576685 'move' tmp[576674] ret[2150636])
      }
      {
        val error[1766954]:Error[167938] "error variable" "temp"
        (1766956 'move' error[1766954] nil[44])
        const-val call_tmp[2150071]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2150073 'move' call_tmp[2150071](2150075 'string_length_bytes' path_cs[237368]))
        val errorExists[2054869]:bool[10] "temp"
        (2054874 'move' errorExists[2054869](2054871 '!=' error[1766954] nil[44]))
        if errorExists[2054869]
        {
          (1766960 '=' error_out[1766951] error[1766954])
          ref i_x[2283713]:file[235492] "temp"
          (2283717 'move' i_x[2283713](2283715 'set reference' ret[237336]))
          (2283721 call deinit[235803] i_x[2283713])
          gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
        }
        val error[1766969]:Error[167938] "error variable" "temp"
        (1766971 'move' error[1766969] nil[44])
        const-val ret[2087537]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2087539]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
        (2087541 'move' call_tmp[2087539](2087543 'cast' c_ptr(uint(8))[937334] path_cs[237368]))
        val error[2087548]:Error[167938] "error variable" "temp"
        (2087550 'move' error[2087548] nil[44])
        const-val ret[2087553]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2087555]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2087557]:Error[167938] "error variable" "temp"
        (2087559 'move' error[2087557] nil[44])
        const-val ret_tmp[2087562]:string[26] "temp"
        (2087565 call decodeByteBuffer[173892] call_tmp[2087539] call_tmp[2150071] replace[173648] error[2087557] ret_tmp[2087562])
        (2087571 'move' call_tmp[2087555] ret_tmp[2087562])
        val errorExists[2087574]:bool[10] "temp"
        (2087576 'move' errorExists[2087574](2087578 '!=' error[2087557] nil[44]))
        if errorExists[2087574]
        {
          (2087583 '=' error[2087548] error[2087557])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087592] _endcreateStringWithNewBuffer[2087592]
        }
        (2087589 'move' ret[2087553] call_tmp[2087555])
        label _endcreateStringWithNewBuffer[2087592]
        val errorExists[2087597]:bool[10] "temp"
        (2087599 'move' errorExists[2087597](2087601 '!=' error[2087548] nil[44]))
        if errorExists[2087597]
        {
          (2087606 '=' error[1766969] error[2087548])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087615] _endcreateStringWithNewBuffer[2087615]
        }
        (2087612 'move' ret[2087537] ret[2087553])
        label _endcreateStringWithNewBuffer[2087615]
        val errorExists[2054877]:bool[10] "temp"
        (2054882 'move' errorExists[2054877](2054879 '!=' error[1766969] nil[44]))
        if errorExists[2054877]
        {
          (1766975 '=' error_out[1766951] error[1766969])
          ref i_x[2283725]:file[235492] "temp"
          (2283729 'move' i_x[2283725](2283727 'set reference' ret[237336]))
          (2283733 call deinit[235803] i_x[2283725])
          gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
        }
        (576694 'move' tmp[576674] ret[2087537])
      }
      (546998 'move' path[237396] tmp[576674])
      ref i_cs[2066396]:c_string[19] "temp"
      (2066400 'move' i_cs[2066396](2066398 'set reference' path_cs[237368]))
      const-val call_tmp[2066403]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066405 'move' call_tmp[2066403](2066407 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2066410]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066412 'move' call_tmp[2066410](2066414 'cast' c_string[19] call_tmp[2066403]))
      const-val coerce_tmp[2066417]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2066419 'move' coerce_tmp[2066417] path_cs[237368])
      const-val call_tmp[2066423]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066425 'move' call_tmp[2066423](2066427 'string_compare' coerce_tmp[2066417] call_tmp[2066410]))
      const-val call_tmp[2066430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066432 'move' call_tmp[2066430](2066434 '!=' call_tmp[2066423] 0))
      if call_tmp[2066430]
      {
        (2066440 call chpl_rt_free_c_string[22714] i_cs[2066396])
      }
      val error[1766983]:Error[167938] "error variable" "temp"
      (1766992 'move' error[1766983] nil[44])
      (237426 call ioerror[266162] call_tmp[716092] "in openfp" path[237396] error[1766983])
      val errorExists[2054885]:bool[10] "temp"
      (2054890 'move' errorExists[2054885](2054887 '!=' error[1766983] nil[44]))
      if errorExists[2054885]
      {
        gotoErrorHandling handler[1766984] handler[1766984]
      }
      label handler[1766984]
      val errorExists[2054893]:bool[10] "temp"
      (2054898 'move' errorExists[2054893](2054895 '!=' error[1766983] nil[44]))
      if errorExists[2054893]
      {
        (1766999 '=' error_out[1766951] error[1766983])
        ref i_x[2076378]:string[26] "temp"
        (2076382 'move' i_x[2076378](2076380 'set reference' path[237396]))
        (2076386 call deinit[30831] i_x[2076378])
        ref i_x[2283737]:file[235492] "temp"
        (2283741 'move' i_x[2283737](2283739 'set reference' ret[237336]))
        (2283745 call deinit[235803] i_x[2283737])
        gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
      }
      ref i_x[2076390]:string[26] "temp"
      (2076394 'move' i_x[2076390](2076392 'set reference' path[237396]))
      (2076398 call deinit[30831] i_x[2076390])
    }
    (1022035 'move' ret[534649] ret[237336])
    label _end_openfp[534647]
    (1788355 '=' _retArg[1788353] ret[534649])
    (1788359 return _void[55])
  }
  function openmem[237537](const  ref arg style[237533]:iostyle[231756], ref arg error_out[1767011]:Error[167938], ref arg _retArg[1788379]:file[235492]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2991[2334497]:string[26] "temp"
    (2334498 'move' "in openmem" "in openmem")
    const-val ret[534673]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237541]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (547006 'move' local_style[237541] style[237533])
    val ret[237547]:file[235492] "dead at end of block" "insert auto destroy"
    (1060512 call init[235486] ret[237547])
    ref call_tmp[2162072]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162074 'move' call_tmp[2162072](2162076 '.' ret[237547] home[235474]))
    const-val call_tmp[716143]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113673]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113675]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113677 'move' call_tmp[2113675](2113680 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113683 'move' call_tmp[2113673] call_tmp[2113675])
    const-val call_tmp[2113686]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113688]:locale[28] "temp"
    (2113691 call chpl_localeID_to_locale[92849] call_tmp[2113673] ret_tmp[2113688])
    (2113694 'move' call_tmp[2113686] ret_tmp[2113688])
    (1787384 'move' call_tmp[716143] call_tmp[2113686])
    (237556 call =[90631] call_tmp[2162072] call_tmp[716143])
    ref i_x[2209052]:locale[28] "temp"
    (2209056 'move' i_x[2209052](2209054 'set reference' call_tmp[716143]))
    (2209060 call deinit[90185] i_x[2209052])
    ref call_tmp[2162234]:qio_file_ptr_t[231351] "dead after last mention" "maybe param" "temp"
    (2162236 'move' call_tmp[2162234](2162238 '.' ret[237547] _file_internal[235480]))
    const-val call_tmp[716155]:syserr[223496] "dead at end of block" "maybe param" "temp"
    (716158 'move' call_tmp[716155](237567 call qio_file_open_mem[232640] call_tmp[2162234] QBUFFER_PTR_NULL[231391] local_style[237541]))
    const-val call_tmp[2152705]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152707 'move' call_tmp[2152705](2152710 call qio_err_iserr[223558] call_tmp[716155]))
    const-val call_tmp[2152712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152714 'move' call_tmp[2152712](2152716 '!=' call_tmp[2152705] 0))
    if call_tmp[2152712]
    {
      val error[1767013]:Error[167938] "error variable" "temp"
      (1767022 'move' error[1767013] nil[44])
      (237593 call ioerror[266223] call_tmp[716155] "in openmem" error[1767013])
      val errorExists[2054901]:bool[10] "temp"
      (2054906 'move' errorExists[2054901](2054903 '!=' error[1767013] nil[44]))
      if errorExists[2054901]
      {
        gotoErrorHandling handler[1767014] handler[1767014]
      }
      label handler[1767014]
      val errorExists[2054909]:bool[10] "temp"
      (2054914 'move' errorExists[2054909](2054911 '!=' error[1767013] nil[44]))
      if errorExists[2054909]
      {
        (1767029 '=' error_out[1767011] error[1767013])
        ref i_x[2283749]:file[235492] "temp"
        (2283753 'move' i_x[2283749](2283751 'set reference' ret[237547]))
        (2283757 call deinit[235803] i_x[2283749])
        gotoErrorHandlingReturn _end_openmem[534671] _end_openmem[534671]
      }
    }
    (1060510 'move' ret[534673] ret[237547])
    label _end_openmem[534671]
    (1788381 '=' _retArg[1788379] ret[534673])
    (1788383 return _void[55])
  }
  type channel(false,dynamic,true)[985538] val home[985526]:locale[28] "no doc" val _channel_internal[985531]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[985535]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080593] val home[1080581]:locale[28] "no doc" val _channel_internal[1080586]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1080590]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021736] val home[1021724]:locale[28] "no doc" val _channel_internal[1021729]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1021733]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060858] val home[1060846]:locale[28] "no doc" val _channel_internal[1060851]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1060855]:locale[28] "no doc"
  function =[1018350](ref arg lhs[1018352]:channel(false,dynamic,true)[985538], const  ref arg rhs[1018354]:channel(false,dynamic,true)[985538]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334777]:string[26] "temp"
    (2334778 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2172537]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172539 'move' call_tmp[2172537](2172541 '.' rhs[1018354] home[985526]))
    const-val call_tmp[1018563]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111493]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111495 'move' coerce_tmp[2111493](2111497 '.v' call_tmp[2172537] _instance[89975]))
    val coerce_tmp[2111500]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111502 'move' coerce_tmp[2111500](2111504 'cast' object[22] coerce_tmp[2111493]))
    const-val call_tmp[2111507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111509 'move' call_tmp[2111507](2111511 'ptr_eq' coerce_tmp[2111500] nil[44]))
    if call_tmp[2111507]
    {
      (2111517 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1018565 'move' call_tmp[1018563](1018567 '_wide_get_locale' coerce_tmp[2111493]))
    val rvfDerefTmp[2032262]:channel(false,dynamic,true)[985538] "temp"
    (2032266 'move' rvfDerefTmp[2032262](2032264 'deref' rhs[1018354]))
    val isdirect[2036437]:bool[10] "temp"
    (2036442 'move' isdirect[2036437](2036439 call chpl_doDirectExecuteOn[187423] call_tmp[1018563]))
    if isdirect[2036437]
    {
      (2036446 call on_fn[1018576] rvfDerefTmp[2032262])
    }
    {
      val _args_foron_fn[2036461]:_class_localson_fn[2036453] "temp"
      (2036465 'move' _args_foron_fn[2036461](2036463 'stack allocate class' _class_localson_fn[2036453]))
      (2036467 '.=' _args_foron_fn[2036461] _0_tmp[2036456] call_tmp[1018563])
      (2036471 '.=' _args_foron_fn[2036461] _1_rvfDerefTmp[2036458] rvfDerefTmp[2032262])
      val _args_vforon_fn[2036475]:c_void_ptr[149] "temp"
      (2036479 'move' _args_vforon_fn[2036475](2036477 'cast_to_void_star' _args_foron_fn[2036461]))
      val _args_sizeon_fn[2036481]:int(64)[13] "temp"
      (2036485 'move' _args_sizeon_fn[2036481](2036483 'sizeof_bundle' _class_localson_fn[2036453]))
      on(2036517 call wrapon_fn[2036487] call_tmp[1018563] _args_vforon_fn[2036475] _args_sizeon_fn[2036481] _args_foron_fn[2036461])
    }
    ref call_tmp[2172547]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172549 'move' call_tmp[2172547](2172551 '.' lhs[1018352] home[985526]))
    const-val call_tmp[1018607]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111523]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111525 'move' coerce_tmp[2111523](2111527 '.v' call_tmp[2172547] _instance[89975]))
    val coerce_tmp[2111530]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111532 'move' coerce_tmp[2111530](2111534 'cast' object[22] coerce_tmp[2111523]))
    const-val call_tmp[2111537]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111539 'move' call_tmp[2111537](2111541 'ptr_eq' coerce_tmp[2111530] nil[44]))
    if call_tmp[2111537]
    {
      (2111547 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1018609 'move' call_tmp[1018607](1018611 '_wide_get_locale' coerce_tmp[2111523]))
    val isdirect[2036522]:bool[10] "temp"
    (2036527 'move' isdirect[2036522](2036524 call chpl_doDirectExecuteOn[187423] call_tmp[1018607]))
    if isdirect[2036522]
    {
      (2036531 call on_fn[1018620] lhs[1018352])
    }
    {
      val _args_foron_fn[2036546]:_class_localson_fn[2036538] "temp"
      (2036550 'move' _args_foron_fn[2036546](2036548 'stack allocate class' _class_localson_fn[2036538]))
      (2036552 '.=' _args_foron_fn[2036546] _0_tmp[2036541] call_tmp[1018607])
      ref tmp[2036556]:channel(false,dynamic,true)[985538] "temp"
      (2036560 'move' tmp[2036556](2036558 'set reference' lhs[1018352]))
      (2036562 '.=' _args_foron_fn[2036546] _1_lhs[2036543] tmp[2036556])
      val _args_vforon_fn[2036566]:c_void_ptr[149] "temp"
      (2036570 'move' _args_vforon_fn[2036566](2036568 'cast_to_void_star' _args_foron_fn[2036546]))
      val _args_sizeon_fn[2036572]:int(64)[13] "temp"
      (2036576 'move' _args_sizeon_fn[2036572](2036574 'sizeof_bundle' _class_localson_fn[2036538]))
      on(2036608 call wrapon_fn[2036578] call_tmp[1018607] _args_vforon_fn[2036566] _args_sizeon_fn[2036572] _args_foron_fn[2036546])
    }
    ref call_tmp[2172557]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172559 'move' call_tmp[2172557](2172561 '.' lhs[1018352] home[985526]))
    ref call_tmp[2172567]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172569 'move' call_tmp[2172567](2172571 '.' rhs[1018354] home[985526]))
    (1018658 call =[90631] call_tmp[2172557] call_tmp[2172567])
    const-val coerce_tmp[1018997]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019001 'move' coerce_tmp[1018997](2325176 '.v' rhs[1018354] _channel_internal[985531]))
    (2325170 '.=' lhs[1018352] _channel_internal[985531] coerce_tmp[1018997])
    (1018682 return _void[55])
  }
  function =[1023058](ref arg lhs[1023060]:channel(true,dynamic,true)[1021736], const  ref arg rhs[1023062]:channel(true,dynamic,true)[1021736]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334826]:string[26] "temp"
    (2334827 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2173558]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173560 'move' call_tmp[2173558](2173562 '.' rhs[1023062] home[1021724]))
    const-val call_tmp[1023271]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111643]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111645 'move' coerce_tmp[2111643](2111647 '.v' call_tmp[2173558] _instance[89975]))
    val coerce_tmp[2111650]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111652 'move' coerce_tmp[2111650](2111654 'cast' object[22] coerce_tmp[2111643]))
    const-val call_tmp[2111657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111659 'move' call_tmp[2111657](2111661 'ptr_eq' coerce_tmp[2111650] nil[44]))
    if call_tmp[2111657]
    {
      (2111667 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1023273 'move' call_tmp[1023271](1023275 '_wide_get_locale' coerce_tmp[2111643]))
    val rvfDerefTmp[2032339]:channel(true,dynamic,true)[1021736] "temp"
    (2032343 'move' rvfDerefTmp[2032339](2032341 'deref' rhs[1023062]))
    val isdirect[2037120]:bool[10] "temp"
    (2037125 'move' isdirect[2037120](2037122 call chpl_doDirectExecuteOn[187423] call_tmp[1023271]))
    if isdirect[2037120]
    {
      (2037129 call on_fn[1023284] rvfDerefTmp[2032339])
    }
    {
      val _args_foron_fn[2037144]:_class_localson_fn[2037136] "temp"
      (2037148 'move' _args_foron_fn[2037144](2037146 'stack allocate class' _class_localson_fn[2037136]))
      (2037150 '.=' _args_foron_fn[2037144] _0_tmp[2037139] call_tmp[1023271])
      (2037154 '.=' _args_foron_fn[2037144] _1_rvfDerefTmp[2037141] rvfDerefTmp[2032339])
      val _args_vforon_fn[2037158]:c_void_ptr[149] "temp"
      (2037162 'move' _args_vforon_fn[2037158](2037160 'cast_to_void_star' _args_foron_fn[2037144]))
      val _args_sizeon_fn[2037164]:int(64)[13] "temp"
      (2037168 'move' _args_sizeon_fn[2037164](2037166 'sizeof_bundle' _class_localson_fn[2037136]))
      on(2037200 call wrapon_fn[2037170] call_tmp[1023271] _args_vforon_fn[2037158] _args_sizeon_fn[2037164] _args_foron_fn[2037144])
    }
    ref call_tmp[2173568]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173570 'move' call_tmp[2173568](2173572 '.' lhs[1023060] home[1021724]))
    const-val call_tmp[1023315]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111673]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111675 'move' coerce_tmp[2111673](2111677 '.v' call_tmp[2173568] _instance[89975]))
    val coerce_tmp[2111680]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111682 'move' coerce_tmp[2111680](2111684 'cast' object[22] coerce_tmp[2111673]))
    const-val call_tmp[2111687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111689 'move' call_tmp[2111687](2111691 'ptr_eq' coerce_tmp[2111680] nil[44]))
    if call_tmp[2111687]
    {
      (2111697 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1023317 'move' call_tmp[1023315](1023319 '_wide_get_locale' coerce_tmp[2111673]))
    val isdirect[2037205]:bool[10] "temp"
    (2037210 'move' isdirect[2037205](2037207 call chpl_doDirectExecuteOn[187423] call_tmp[1023315]))
    if isdirect[2037205]
    {
      (2037214 call on_fn[1023328] lhs[1023060])
    }
    {
      val _args_foron_fn[2037229]:_class_localson_fn[2037221] "temp"
      (2037233 'move' _args_foron_fn[2037229](2037231 'stack allocate class' _class_localson_fn[2037221]))
      (2037235 '.=' _args_foron_fn[2037229] _0_tmp[2037224] call_tmp[1023315])
      ref tmp[2037239]:channel(true,dynamic,true)[1021736] "temp"
      (2037243 'move' tmp[2037239](2037241 'set reference' lhs[1023060]))
      (2037245 '.=' _args_foron_fn[2037229] _1_lhs[2037226] tmp[2037239])
      val _args_vforon_fn[2037249]:c_void_ptr[149] "temp"
      (2037253 'move' _args_vforon_fn[2037249](2037251 'cast_to_void_star' _args_foron_fn[2037229]))
      val _args_sizeon_fn[2037255]:int(64)[13] "temp"
      (2037259 'move' _args_sizeon_fn[2037255](2037257 'sizeof_bundle' _class_localson_fn[2037221]))
      on(2037291 call wrapon_fn[2037261] call_tmp[1023315] _args_vforon_fn[2037249] _args_sizeon_fn[2037255] _args_foron_fn[2037229])
    }
    ref call_tmp[2173578]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173580 'move' call_tmp[2173578](2173582 '.' lhs[1023060] home[1021724]))
    ref call_tmp[2173588]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173590 'move' call_tmp[2173588](2173592 '.' rhs[1023062] home[1021724]))
    (1023366 call =[90631] call_tmp[2173578] call_tmp[2173588])
    const-val coerce_tmp[1023705]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023709 'move' coerce_tmp[1023705](2325451 '.v' rhs[1023062] _channel_internal[1021729]))
    (2325445 '.=' lhs[1023060] _channel_internal[1021729] coerce_tmp[1023705])
    (1023390 return _void[55])
  }
  function =[1061771](ref arg lhs[1061773]:channel(true,dynamic,false)[1060858], const  ref arg rhs[1061775]:channel(true,dynamic,false)[1060858]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335006]:string[26] "temp"
    (2335007 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2208425]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208427 'move' call_tmp[2208425](2208429 '.' rhs[1061775] home[1060846]))
    const-val call_tmp[1061984]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111793]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111795 'move' coerce_tmp[2111793](2111797 '.v' call_tmp[2208425] _instance[89975]))
    val coerce_tmp[2111800]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111802 'move' coerce_tmp[2111800](2111804 'cast' object[22] coerce_tmp[2111793]))
    const-val call_tmp[2111807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111809 'move' call_tmp[2111807](2111811 'ptr_eq' coerce_tmp[2111800] nil[44]))
    if call_tmp[2111807]
    {
      (2111817 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1061986 'move' call_tmp[1061984](1061988 '_wide_get_locale' coerce_tmp[2111793]))
    val rvfDerefTmp[2032447]:channel(true,dynamic,false)[1060858] "temp"
    (2032451 'move' rvfDerefTmp[2032447](2032449 'deref' rhs[1061775]))
    val isdirect[2037833]:bool[10] "temp"
    (2037838 'move' isdirect[2037833](2037835 call chpl_doDirectExecuteOn[187423] call_tmp[1061984]))
    if isdirect[2037833]
    {
      (2037842 call on_fn[1061997] rvfDerefTmp[2032447])
    }
    {
      val _args_foron_fn[2037857]:_class_localson_fn[2037849] "temp"
      (2037861 'move' _args_foron_fn[2037857](2037859 'stack allocate class' _class_localson_fn[2037849]))
      (2037863 '.=' _args_foron_fn[2037857] _0_tmp[2037852] call_tmp[1061984])
      (2037867 '.=' _args_foron_fn[2037857] _1_rvfDerefTmp[2037854] rvfDerefTmp[2032447])
      val _args_vforon_fn[2037871]:c_void_ptr[149] "temp"
      (2037875 'move' _args_vforon_fn[2037871](2037873 'cast_to_void_star' _args_foron_fn[2037857]))
      val _args_sizeon_fn[2037877]:int(64)[13] "temp"
      (2037881 'move' _args_sizeon_fn[2037877](2037879 'sizeof_bundle' _class_localson_fn[2037849]))
      on(2037913 call wrapon_fn[2037883] call_tmp[1061984] _args_vforon_fn[2037871] _args_sizeon_fn[2037877] _args_foron_fn[2037857])
    }
    ref call_tmp[2208435]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208437 'move' call_tmp[2208435](2208439 '.' lhs[1061773] home[1060846]))
    const-val call_tmp[1062028]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111823]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111825 'move' coerce_tmp[2111823](2111827 '.v' call_tmp[2208435] _instance[89975]))
    val coerce_tmp[2111830]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111832 'move' coerce_tmp[2111830](2111834 'cast' object[22] coerce_tmp[2111823]))
    const-val call_tmp[2111837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111839 'move' call_tmp[2111837](2111841 'ptr_eq' coerce_tmp[2111830] nil[44]))
    if call_tmp[2111837]
    {
      (2111847 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1062030 'move' call_tmp[1062028](1062032 '_wide_get_locale' coerce_tmp[2111823]))
    val isdirect[2037918]:bool[10] "temp"
    (2037923 'move' isdirect[2037918](2037920 call chpl_doDirectExecuteOn[187423] call_tmp[1062028]))
    if isdirect[2037918]
    {
      (2037927 call on_fn[1062041] lhs[1061773])
    }
    {
      val _args_foron_fn[2037942]:_class_localson_fn[2037934] "temp"
      (2037946 'move' _args_foron_fn[2037942](2037944 'stack allocate class' _class_localson_fn[2037934]))
      (2037948 '.=' _args_foron_fn[2037942] _0_tmp[2037937] call_tmp[1062028])
      ref tmp[2037952]:channel(true,dynamic,false)[1060858] "temp"
      (2037956 'move' tmp[2037952](2037954 'set reference' lhs[1061773]))
      (2037958 '.=' _args_foron_fn[2037942] _1_lhs[2037939] tmp[2037952])
      val _args_vforon_fn[2037962]:c_void_ptr[149] "temp"
      (2037966 'move' _args_vforon_fn[2037962](2037964 'cast_to_void_star' _args_foron_fn[2037942]))
      val _args_sizeon_fn[2037968]:int(64)[13] "temp"
      (2037972 'move' _args_sizeon_fn[2037968](2037970 'sizeof_bundle' _class_localson_fn[2037934]))
      on(2038004 call wrapon_fn[2037974] call_tmp[1062028] _args_vforon_fn[2037962] _args_sizeon_fn[2037968] _args_foron_fn[2037942])
    }
    ref call_tmp[2208445]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208447 'move' call_tmp[2208445](2208449 '.' lhs[1061773] home[1060846]))
    ref call_tmp[2208455]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208457 'move' call_tmp[2208455](2208459 '.' rhs[1061775] home[1060846]))
    (1062079 call =[90631] call_tmp[2208445] call_tmp[2208455])
    const-val coerce_tmp[1062227]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062231 'move' coerce_tmp[1062227](2325934 '.v' rhs[1061775] _channel_internal[1060851]))
    (2325928 '.=' lhs[1061773] _channel_internal[1060851] coerce_tmp[1062227])
    (1062103 return _void[55])
  }
  function =[1081503](ref arg lhs[1081505]:channel(false,dynamic,false)[1080593], const  ref arg rhs[1081507]:channel(false,dynamic,false)[1080593]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335266]:string[26] "temp"
    (2335267 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2213520]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213522 'move' call_tmp[2213520](2213524 '.' rhs[1081507] home[1080581]))
    const-val call_tmp[1081716]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112063]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112065 'move' coerce_tmp[2112063](2112067 '.v' call_tmp[2213520] _instance[89975]))
    val coerce_tmp[2112070]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112072 'move' coerce_tmp[2112070](2112074 'cast' object[22] coerce_tmp[2112063]))
    const-val call_tmp[2112077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112079 'move' call_tmp[2112077](2112081 'ptr_eq' coerce_tmp[2112070] nil[44]))
    if call_tmp[2112077]
    {
      (2112087 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1081718 'move' call_tmp[1081716](1081720 '_wide_get_locale' coerce_tmp[2112063]))
    val rvfDerefTmp[2032625]:channel(false,dynamic,false)[1080593] "temp"
    (2032629 'move' rvfDerefTmp[2032625](2032627 'deref' rhs[1081507]))
    val isdirect[2039054]:bool[10] "temp"
    (2039059 'move' isdirect[2039054](2039056 call chpl_doDirectExecuteOn[187423] call_tmp[1081716]))
    if isdirect[2039054]
    {
      (2039063 call on_fn[1081729] rvfDerefTmp[2032625])
    }
    {
      val _args_foron_fn[2039078]:_class_localson_fn[2039070] "temp"
      (2039082 'move' _args_foron_fn[2039078](2039080 'stack allocate class' _class_localson_fn[2039070]))
      (2039084 '.=' _args_foron_fn[2039078] _0_tmp[2039073] call_tmp[1081716])
      (2039088 '.=' _args_foron_fn[2039078] _1_rvfDerefTmp[2039075] rvfDerefTmp[2032625])
      val _args_vforon_fn[2039092]:c_void_ptr[149] "temp"
      (2039096 'move' _args_vforon_fn[2039092](2039094 'cast_to_void_star' _args_foron_fn[2039078]))
      val _args_sizeon_fn[2039098]:int(64)[13] "temp"
      (2039102 'move' _args_sizeon_fn[2039098](2039100 'sizeof_bundle' _class_localson_fn[2039070]))
      on(2039134 call wrapon_fn[2039104] call_tmp[1081716] _args_vforon_fn[2039092] _args_sizeon_fn[2039098] _args_foron_fn[2039078])
    }
    ref call_tmp[2213530]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213532 'move' call_tmp[2213530](2213534 '.' lhs[1081505] home[1080581]))
    const-val call_tmp[1081760]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112093]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112095 'move' coerce_tmp[2112093](2112097 '.v' call_tmp[2213530] _instance[89975]))
    val coerce_tmp[2112100]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112102 'move' coerce_tmp[2112100](2112104 'cast' object[22] coerce_tmp[2112093]))
    const-val call_tmp[2112107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112109 'move' call_tmp[2112107](2112111 'ptr_eq' coerce_tmp[2112100] nil[44]))
    if call_tmp[2112107]
    {
      (2112117 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1081762 'move' call_tmp[1081760](1081764 '_wide_get_locale' coerce_tmp[2112093]))
    val isdirect[2039139]:bool[10] "temp"
    (2039144 'move' isdirect[2039139](2039141 call chpl_doDirectExecuteOn[187423] call_tmp[1081760]))
    if isdirect[2039139]
    {
      (2039148 call on_fn[1081773] lhs[1081505])
    }
    {
      val _args_foron_fn[2039163]:_class_localson_fn[2039155] "temp"
      (2039167 'move' _args_foron_fn[2039163](2039165 'stack allocate class' _class_localson_fn[2039155]))
      (2039169 '.=' _args_foron_fn[2039163] _0_tmp[2039158] call_tmp[1081760])
      ref tmp[2039173]:channel(false,dynamic,false)[1080593] "temp"
      (2039177 'move' tmp[2039173](2039175 'set reference' lhs[1081505]))
      (2039179 '.=' _args_foron_fn[2039163] _1_lhs[2039160] tmp[2039173])
      val _args_vforon_fn[2039183]:c_void_ptr[149] "temp"
      (2039187 'move' _args_vforon_fn[2039183](2039185 'cast_to_void_star' _args_foron_fn[2039163]))
      val _args_sizeon_fn[2039189]:int(64)[13] "temp"
      (2039193 'move' _args_sizeon_fn[2039189](2039191 'sizeof_bundle' _class_localson_fn[2039155]))
      on(2039225 call wrapon_fn[2039195] call_tmp[1081760] _args_vforon_fn[2039183] _args_sizeon_fn[2039189] _args_foron_fn[2039163])
    }
    ref call_tmp[2213540]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213542 'move' call_tmp[2213540](2213544 '.' lhs[1081505] home[1080581]))
    ref call_tmp[2213550]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213552 'move' call_tmp[2213550](2213554 '.' rhs[1081507] home[1080581]))
    (1081811 call =[90631] call_tmp[2213540] call_tmp[2213550])
    const-val coerce_tmp[1081959]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081963 'move' coerce_tmp[1081959](2326097 '.v' rhs[1081507] _channel_internal[1080586]))
    (2326091 '.=' lhs[1081505] _channel_internal[1080586] coerce_tmp[1081959])
    (1081835 return _void[55])
  }
  function channel(false,dynamic,true)[985538].init[1017782](ref arg this[1017788]:channel(false,dynamic,true)[985538]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2334771]:locale[28] "temp"
    (2334772 'move' local_nilLocale[2334771] nilLocale[89939])
    const-val call_tmp[2113745]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113747]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113749 'move' call_tmp[2113747](2113752 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113755 'move' call_tmp[2113745] call_tmp[2113747])
    const-val call_tmp[2113758]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113760]:locale[28] "temp"
    (2113763 call chpl_localeID_to_locale[92849] call_tmp[2113745] ret_tmp[2113760])
    (2113766 'move' call_tmp[2113758] ret_tmp[2113760])
    (1017854 '.=' this[1017788] home[985526] call_tmp[2113758])
    val tmp[1017859]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1017861 'move' tmp[1017859] QIO_CHANNEL_PTR_NULL[231380])
    (1017865 '.=' this[1017788] _channel_internal[985531] tmp[1017859])
    val tmp[1017870]:locale[28] "dead after last mention" "temp"
    (1017872 call init=[90167] tmp[1017870] local_nilLocale[2334771])
    (1017875 '.=' this[1017788] _readWriteThisFromLocale[985535] tmp[1017870])
    (1017880 return _void[55])
  }
  function channel(true,dynamic,true)[1021736].init[1022818](ref arg this[1022824]:channel(true,dynamic,true)[1021736]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2334820]:locale[28] "temp"
    (2334821 'move' local_nilLocale[2334820] nilLocale[89939])
    const-val call_tmp[2113781]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113783]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113785 'move' call_tmp[2113783](2113788 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113791 'move' call_tmp[2113781] call_tmp[2113783])
    const-val call_tmp[2113794]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113796]:locale[28] "temp"
    (2113799 call chpl_localeID_to_locale[92849] call_tmp[2113781] ret_tmp[2113796])
    (2113802 'move' call_tmp[2113794] ret_tmp[2113796])
    (1022890 '.=' this[1022824] home[1021724] call_tmp[2113794])
    val tmp[1022895]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1022897 'move' tmp[1022895] QIO_CHANNEL_PTR_NULL[231380])
    (1022901 '.=' this[1022824] _channel_internal[1021729] tmp[1022895])
    val tmp[1022906]:locale[28] "dead after last mention" "temp"
    (1022908 call init=[90167] tmp[1022906] local_nilLocale[2334820])
    (1022911 '.=' this[1022824] _readWriteThisFromLocale[1021733] tmp[1022906])
    (1022916 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1061531](ref arg this[1061537]:channel(true,dynamic,false)[1060858]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2335000]:locale[28] "temp"
    (2335001 'move' local_nilLocale[2335000] nilLocale[89939])
    const-val call_tmp[2113817]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113819]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113821 'move' call_tmp[2113819](2113824 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113827 'move' call_tmp[2113817] call_tmp[2113819])
    const-val call_tmp[2113830]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113832]:locale[28] "temp"
    (2113835 call chpl_localeID_to_locale[92849] call_tmp[2113817] ret_tmp[2113832])
    (2113838 'move' call_tmp[2113830] ret_tmp[2113832])
    (1061603 '.=' this[1061537] home[1060846] call_tmp[2113830])
    val tmp[1061608]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1061610 'move' tmp[1061608] QIO_CHANNEL_PTR_NULL[231380])
    (1061614 '.=' this[1061537] _channel_internal[1060851] tmp[1061608])
    val tmp[1061619]:locale[28] "dead after last mention" "temp"
    (1061621 call init=[90167] tmp[1061619] local_nilLocale[2335000])
    (1061624 '.=' this[1061537] _readWriteThisFromLocale[1060855] tmp[1061619])
    (1061629 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].init[1081263](ref arg this[1081269]:channel(false,dynamic,false)[1080593]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2335260]:locale[28] "temp"
    (2335261 'move' local_nilLocale[2335260] nilLocale[89939])
    const-val call_tmp[2113925]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113927]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113929 'move' call_tmp[2113927](2113932 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113935 'move' call_tmp[2113925] call_tmp[2113927])
    const-val call_tmp[2113938]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113940]:locale[28] "temp"
    (2113943 call chpl_localeID_to_locale[92849] call_tmp[2113925] ret_tmp[2113940])
    (2113946 'move' call_tmp[2113938] ret_tmp[2113940])
    (1081335 '.=' this[1081269] home[1080581] call_tmp[2113938])
    val tmp[1081340]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1081342 'move' tmp[1081340] QIO_CHANNEL_PTR_NULL[231380])
    (1081346 '.=' this[1081269] _channel_internal[1080586] tmp[1081340])
    val tmp[1081351]:locale[28] "dead after last mention" "temp"
    (1081353 call init=[90167] tmp[1081351] local_nilLocale[2335260])
    (1081356 '.=' this[1081269] _readWriteThisFromLocale[1080590] tmp[1081351])
    (1081361 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1068299](ref arg this[1068305]:channel(true,dynamic,false)[1060858], const  ref arg home[1068313]:locale[28], const in arg _channel_internal[1068315]:qio_channel_ptr_t[231377], const  ref arg _readWriteThisFromLocale[1068317]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068365]:locale[28] "dead after last mention" "temp"
    (1068367 call init=[90167] tmp[1068365] home[1068313])
    (1068371 '.=' this[1068305] home[1060846] tmp[1068365])
    (1068382 '.=' this[1068305] _channel_internal[1060851] _channel_internal[1068315])
    val tmp[1068387]:locale[28] "dead after last mention" "temp"
    (1068389 call init=[90167] tmp[1068387] _readWriteThisFromLocale[1068317])
    (1068392 '.=' this[1068305] _readWriteThisFromLocale[1060855] tmp[1068387])
    (1068397 return _void[55])
  }
  function channel(false,dynamic,true)[985538].init[1017558](ref arg this[1017564]:channel(false,dynamic,true)[985538], const  ref arg f[1017572]:file[235492], ref arg error[1017574]:syserr[223496], const in arg hints[1017578]:int(32)[95], const in arg start[1017584]:int(64)[13], const in arg end[1017590]:int(64)[13], const in arg local_style[1017592]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334765]:string[26] "temp"
    (2334766 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1017769]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017608 call init[1017782] this[1017564])
    ref call_tmp[2162010]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162012 'move' call_tmp[2162010](2162014 '.' f[1017572] home[235474]))
    const-val call_tmp[1017623]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111463]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111465 'move' coerce_tmp[2111463](2111467 '.v' call_tmp[2162010] _instance[89975]))
    val coerce_tmp[2111470]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111472 'move' coerce_tmp[2111470](2111474 'cast' object[22] coerce_tmp[2111463]))
    const-val call_tmp[2111477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111479 'move' call_tmp[2111477](2111481 'ptr_eq' coerce_tmp[2111470] nil[44]))
    if call_tmp[2111477]
    {
      (2111487 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1017625 'move' call_tmp[1017623](1017627 '_wide_get_locale' coerce_tmp[2111463]))
    val rvfDerefTmp[2032241]:file[235492] "temp"
    (2032245 'move' rvfDerefTmp[2032241](2032243 'deref' f[1017572]))
    val isdirect[2036250]:bool[10] "temp"
    (2036255 'move' isdirect[2036250](2036252 call chpl_doDirectExecuteOn[187423] call_tmp[1017623]))
    if isdirect[2036250]
    {
      (2036259 call on_fn[1017636] end[1017590] this[1017564] hints[1017578] local_style[1017592] start[1017584] rvfDerefTmp[2032241] _formal_tmp_error[1017769])
    }
    {
      val _args_foron_fn[2036292]:_class_localson_fn[2036272] "temp"
      (2036296 'move' _args_foron_fn[2036292](2036294 'stack allocate class' _class_localson_fn[2036272]))
      (2036298 '.=' _args_foron_fn[2036292] _0_tmp[2036275] call_tmp[1017623])
      (2036302 '.=' _args_foron_fn[2036292] _1_end[2036277] end[1017590])
      ref tmp[2036306]:channel(false,dynamic,true)[985538] "temp"
      (2036310 'move' tmp[2036306](2036308 'set reference' this[1017564]))
      (2036312 '.=' _args_foron_fn[2036292] _2_this[2036279] tmp[2036306])
      (2036316 '.=' _args_foron_fn[2036292] _3_hints[2036281] hints[1017578])
      (2036320 '.=' _args_foron_fn[2036292] _4_rvfDerefTmp[2036283] local_style[1017592])
      (2036324 '.=' _args_foron_fn[2036292] _5_start[2036285] start[1017584])
      (2036328 '.=' _args_foron_fn[2036292] _6_rvfDerefTmp[2036287] rvfDerefTmp[2032241])
      ref tmp[2036332]:syserr[223496] "temp"
      (2036336 'move' tmp[2036332](2036334 'set reference' _formal_tmp_error[1017769]))
      (2036338 '.=' _args_foron_fn[2036292] _7__formal_tmp_error[2036289] tmp[2036332])
      val _args_vforon_fn[2036342]:c_void_ptr[149] "temp"
      (2036346 'move' _args_vforon_fn[2036342](2036344 'cast_to_void_star' _args_foron_fn[2036292]))
      val _args_sizeon_fn[2036348]:int(64)[13] "temp"
      (2036352 'move' _args_sizeon_fn[2036348](2036350 'sizeof_bundle' _class_localson_fn[2036272]))
      on(2036432 call wrapon_fn[2036354] call_tmp[1017623] _args_vforon_fn[2036342] _args_sizeon_fn[2036348] _args_foron_fn[2036292])
    }
    label _endinit[1017779]
    (1799336 '=' error[1017574] _formal_tmp_error[1017769])
    (1017766 return _void[55])
  }
  function channel(true,dynamic,true)[1021736].init[1022594](ref arg this[1022600]:channel(true,dynamic,true)[1021736], const  ref arg f[1022608]:file[235492], ref arg error[1022610]:syserr[223496], const in arg hints[1022614]:int(32)[95], const in arg start[1022620]:int(64)[13], const in arg end[1022626]:int(64)[13], const in arg local_style[1022628]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334814]:string[26] "temp"
    (2334815 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1022805]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022644 call init[1022818] this[1022600])
    ref call_tmp[2162056]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162058 'move' call_tmp[2162056](2162060 '.' f[1022608] home[235474]))
    const-val call_tmp[1022659]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111613]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111615 'move' coerce_tmp[2111613](2111617 '.v' call_tmp[2162056] _instance[89975]))
    val coerce_tmp[2111620]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111622 'move' coerce_tmp[2111620](2111624 'cast' object[22] coerce_tmp[2111613]))
    const-val call_tmp[2111627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111629 'move' call_tmp[2111627](2111631 'ptr_eq' coerce_tmp[2111620] nil[44]))
    if call_tmp[2111627]
    {
      (2111637 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1022661 'move' call_tmp[1022659](1022663 '_wide_get_locale' coerce_tmp[2111613]))
    val rvfDerefTmp[2032305]:file[235492] "temp"
    (2032309 'move' rvfDerefTmp[2032305](2032307 'deref' f[1022608]))
    val isdirect[2036933]:bool[10] "temp"
    (2036938 'move' isdirect[2036933](2036935 call chpl_doDirectExecuteOn[187423] call_tmp[1022659]))
    if isdirect[2036933]
    {
      (2036942 call on_fn[1022672] start[1022620] rvfDerefTmp[2032305] _formal_tmp_error[1022805] end[1022626] hints[1022614] local_style[1022628] this[1022600])
    }
    {
      val _args_foron_fn[2036975]:_class_localson_fn[2036955] "temp"
      (2036979 'move' _args_foron_fn[2036975](2036977 'stack allocate class' _class_localson_fn[2036955]))
      (2036981 '.=' _args_foron_fn[2036975] _0_tmp[2036958] call_tmp[1022659])
      (2036985 '.=' _args_foron_fn[2036975] _1_start[2036960] start[1022620])
      (2036989 '.=' _args_foron_fn[2036975] _2_rvfDerefTmp[2036962] rvfDerefTmp[2032305])
      ref tmp[2036993]:syserr[223496] "temp"
      (2036997 'move' tmp[2036993](2036995 'set reference' _formal_tmp_error[1022805]))
      (2036999 '.=' _args_foron_fn[2036975] _3__formal_tmp_error[2036964] tmp[2036993])
      (2037003 '.=' _args_foron_fn[2036975] _4_end[2036966] end[1022626])
      (2037007 '.=' _args_foron_fn[2036975] _5_hints[2036968] hints[1022614])
      (2037011 '.=' _args_foron_fn[2036975] _6_rvfDerefTmp[2036970] local_style[1022628])
      ref tmp[2037015]:channel(true,dynamic,true)[1021736] "temp"
      (2037019 'move' tmp[2037015](2037017 'set reference' this[1022600]))
      (2037021 '.=' _args_foron_fn[2036975] _7_this[2036972] tmp[2037015])
      val _args_vforon_fn[2037025]:c_void_ptr[149] "temp"
      (2037029 'move' _args_vforon_fn[2037025](2037027 'cast_to_void_star' _args_foron_fn[2036975]))
      val _args_sizeon_fn[2037031]:int(64)[13] "temp"
      (2037035 'move' _args_sizeon_fn[2037031](2037033 'sizeof_bundle' _class_localson_fn[2036955]))
      on(2037115 call wrapon_fn[2037037] call_tmp[1022659] _args_vforon_fn[2037025] _args_sizeon_fn[2037031] _args_foron_fn[2036975])
    }
    label _endinit[1022815]
    (1799359 '=' error[1022610] _formal_tmp_error[1022805])
    (1022802 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1061307](ref arg this[1061313]:channel(true,dynamic,false)[1060858], const  ref arg f[1061321]:file[235492], ref arg error[1061323]:syserr[223496], const in arg hints[1061327]:int(32)[95], const in arg start[1061333]:int(64)[13], const in arg end[1061339]:int(64)[13], const in arg local_style[1061341]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2334994]:string[26] "temp"
    (2334995 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1061518]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061357 call init[1061531] this[1061313])
    ref call_tmp[2162102]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162104 'move' call_tmp[2162102](2162106 '.' f[1061321] home[235474]))
    const-val call_tmp[1061372]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111763]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111765 'move' coerce_tmp[2111763](2111767 '.v' call_tmp[2162102] _instance[89975]))
    val coerce_tmp[2111770]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111772 'move' coerce_tmp[2111770](2111774 'cast' object[22] coerce_tmp[2111763]))
    const-val call_tmp[2111777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111779 'move' call_tmp[2111777](2111781 'ptr_eq' coerce_tmp[2111770] nil[44]))
    if call_tmp[2111777]
    {
      (2111787 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1061374 'move' call_tmp[1061372](1061376 '_wide_get_locale' coerce_tmp[2111763]))
    val rvfDerefTmp[2032413]:file[235492] "temp"
    (2032417 'move' rvfDerefTmp[2032413](2032415 'deref' f[1061321]))
    val isdirect[2037646]:bool[10] "temp"
    (2037651 'move' isdirect[2037646](2037648 call chpl_doDirectExecuteOn[187423] call_tmp[1061372]))
    if isdirect[2037646]
    {
      (2037655 call on_fn[1061385] start[1061333] rvfDerefTmp[2032413] _formal_tmp_error[1061518] this[1061313] hints[1061327] local_style[1061341] end[1061339])
    }
    {
      val _args_foron_fn[2037688]:_class_localson_fn[2037668] "temp"
      (2037692 'move' _args_foron_fn[2037688](2037690 'stack allocate class' _class_localson_fn[2037668]))
      (2037694 '.=' _args_foron_fn[2037688] _0_tmp[2037671] call_tmp[1061372])
      (2037698 '.=' _args_foron_fn[2037688] _1_start[2037673] start[1061333])
      (2037702 '.=' _args_foron_fn[2037688] _2_rvfDerefTmp[2037675] rvfDerefTmp[2032413])
      ref tmp[2037706]:syserr[223496] "temp"
      (2037710 'move' tmp[2037706](2037708 'set reference' _formal_tmp_error[1061518]))
      (2037712 '.=' _args_foron_fn[2037688] _3__formal_tmp_error[2037677] tmp[2037706])
      ref tmp[2037716]:channel(true,dynamic,false)[1060858] "temp"
      (2037720 'move' tmp[2037716](2037718 'set reference' this[1061313]))
      (2037722 '.=' _args_foron_fn[2037688] _4_this[2037679] tmp[2037716])
      (2037726 '.=' _args_foron_fn[2037688] _5_hints[2037681] hints[1061327])
      (2037730 '.=' _args_foron_fn[2037688] _6_rvfDerefTmp[2037683] local_style[1061341])
      (2037734 '.=' _args_foron_fn[2037688] _7_end[2037685] end[1061339])
      val _args_vforon_fn[2037738]:c_void_ptr[149] "temp"
      (2037742 'move' _args_vforon_fn[2037738](2037740 'cast_to_void_star' _args_foron_fn[2037688]))
      val _args_sizeon_fn[2037744]:int(64)[13] "temp"
      (2037748 'move' _args_sizeon_fn[2037744](2037746 'sizeof_bundle' _class_localson_fn[2037668]))
      on(2037828 call wrapon_fn[2037750] call_tmp[1061372] _args_vforon_fn[2037738] _args_sizeon_fn[2037744] _args_foron_fn[2037688])
    }
    label _endinit[1061528]
    (1800584 '=' error[1061323] _formal_tmp_error[1061518])
    (1061515 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].init[1081039](ref arg this[1081045]:channel(false,dynamic,false)[1080593], const  ref arg f[1081053]:file[235492], ref arg error[1081055]:syserr[223496], const in arg hints[1081059]:int(32)[95], const in arg start[1081065]:int(64)[13], const in arg end[1081071]:int(64)[13], const in arg local_style[1081073]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335254]:string[26] "temp"
    (2335255 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1081250]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081089 call init[1081263] this[1081045])
    ref call_tmp[2162122]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162124 'move' call_tmp[2162122](2162126 '.' f[1081053] home[235474]))
    const-val call_tmp[1081104]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112033]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112035 'move' coerce_tmp[2112033](2112037 '.v' call_tmp[2162122] _instance[89975]))
    val coerce_tmp[2112040]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112042 'move' coerce_tmp[2112040](2112044 'cast' object[22] coerce_tmp[2112033]))
    const-val call_tmp[2112047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112049 'move' call_tmp[2112047](2112051 'ptr_eq' coerce_tmp[2112040] nil[44]))
    if call_tmp[2112047]
    {
      (2112057 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1081106 'move' call_tmp[1081104](1081108 '_wide_get_locale' coerce_tmp[2112033]))
    val rvfDerefTmp[2032604]:file[235492] "temp"
    (2032608 'move' rvfDerefTmp[2032604](2032606 'deref' f[1081053]))
    val isdirect[2038867]:bool[10] "temp"
    (2038872 'move' isdirect[2038867](2038869 call chpl_doDirectExecuteOn[187423] call_tmp[1081104]))
    if isdirect[2038867]
    {
      (2038876 call on_fn[1081117] _formal_tmp_error[1081250] this[1081045] hints[1081059] local_style[1081073] end[1081071] start[1081065] rvfDerefTmp[2032604])
    }
    {
      val _args_foron_fn[2038909]:_class_localson_fn[2038889] "temp"
      (2038913 'move' _args_foron_fn[2038909](2038911 'stack allocate class' _class_localson_fn[2038889]))
      (2038915 '.=' _args_foron_fn[2038909] _0_tmp[2038892] call_tmp[1081104])
      ref tmp[2038919]:syserr[223496] "temp"
      (2038923 'move' tmp[2038919](2038921 'set reference' _formal_tmp_error[1081250]))
      (2038925 '.=' _args_foron_fn[2038909] _1__formal_tmp_error[2038894] tmp[2038919])
      ref tmp[2038929]:channel(false,dynamic,false)[1080593] "temp"
      (2038933 'move' tmp[2038929](2038931 'set reference' this[1081045]))
      (2038935 '.=' _args_foron_fn[2038909] _2_this[2038896] tmp[2038929])
      (2038939 '.=' _args_foron_fn[2038909] _3_hints[2038898] hints[1081059])
      (2038943 '.=' _args_foron_fn[2038909] _4_rvfDerefTmp[2038900] local_style[1081073])
      (2038947 '.=' _args_foron_fn[2038909] _5_end[2038902] end[1081071])
      (2038951 '.=' _args_foron_fn[2038909] _6_start[2038904] start[1081065])
      (2038955 '.=' _args_foron_fn[2038909] _7_rvfDerefTmp[2038906] rvfDerefTmp[2032604])
      val _args_vforon_fn[2038959]:c_void_ptr[149] "temp"
      (2038963 'move' _args_vforon_fn[2038959](2038961 'cast_to_void_star' _args_foron_fn[2038909]))
      val _args_sizeon_fn[2038965]:int(64)[13] "temp"
      (2038969 'move' _args_sizeon_fn[2038965](2038967 'sizeof_bundle' _class_localson_fn[2038889]))
      on(2039049 call wrapon_fn[2038971] call_tmp[1081104] _args_vforon_fn[2038959] _args_sizeon_fn[2038965] _args_foron_fn[2038909])
    }
    label _endinit[1081260]
    (1800745 '=' error[1081055] _formal_tmp_error[1081250])
    (1081247 return _void[55])
  }
  function channel(false,dynamic,true)[985538].deinit[1503980](ref arg this[1503986]:channel(false,dynamic,true)[985538]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2336747]:string[26] "temp"
    (2336748 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2172577]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172579 'move' call_tmp[2172577](2172581 '.' this[1503986] home[985526]))
    const-val call_tmp[1504002]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112465]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112467 'move' coerce_tmp[2112465](2112469 '.v' call_tmp[2172577] _instance[89975]))
    val coerce_tmp[2112472]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112474 'move' coerce_tmp[2112472](2112476 'cast' object[22] coerce_tmp[2112465]))
    const-val call_tmp[2112479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112481 'move' call_tmp[2112479](2112483 'ptr_eq' coerce_tmp[2112472] nil[44]))
    if call_tmp[2112479]
    {
      (2112489 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1504004 'move' call_tmp[1504002](1504006 '_wide_get_locale' coerce_tmp[2112465]))
    val isdirect[2044826]:bool[10] "temp"
    (2044831 'move' isdirect[2044826](2044828 call chpl_doDirectExecuteOn[187423] call_tmp[1504002]))
    if isdirect[2044826]
    {
      (2044835 call on_fn[1504015] this[1503986])
    }
    {
      val _args_foron_fn[2044850]:_class_localson_fn[2044842] "temp"
      (2044854 'move' _args_foron_fn[2044850](2044852 'stack allocate class' _class_localson_fn[2044842]))
      (2044856 '.=' _args_foron_fn[2044850] _0_tmp[2044845] call_tmp[1504002])
      ref tmp[2044860]:channel(false,dynamic,true)[985538] "temp"
      (2044864 'move' tmp[2044860](2044862 'set reference' this[1503986]))
      (2044866 '.=' _args_foron_fn[2044850] _1_this[2044847] tmp[2044860])
      val _args_vforon_fn[2044870]:c_void_ptr[149] "temp"
      (2044874 'move' _args_vforon_fn[2044870](2044872 'cast_to_void_star' _args_foron_fn[2044850]))
      val _args_sizeon_fn[2044876]:int(64)[13] "temp"
      (2044880 'move' _args_sizeon_fn[2044876](2044878 'sizeof_bundle' _class_localson_fn[2044842]))
      on(2044912 call wrapon_fn[2044882] call_tmp[1504002] _args_vforon_fn[2044870] _args_sizeon_fn[2044876] _args_foron_fn[2044850])
    }
    label _enddeinit[1772993]
    const-ref _field_destructor_tmp_[1772991]:locale[28] "temp"
    (1772998 'move' _field_destructor_tmp_[1772991](1772995 '.' this[1503986] _readWriteThisFromLocale[985535]))
    (1773000 call deinit[90185] _field_destructor_tmp_[1772991])
    const-ref _field_destructor_tmp_[1773003]:locale[28] "temp"
    (1773008 'move' _field_destructor_tmp_[1773003](1773005 '.' this[1503986] home[985526]))
    (1773010 call deinit[90185] _field_destructor_tmp_[1773003])
    (1504049 return _void[55])
  }
  function channel(true,dynamic,true)[1021736].deinit[1566986](ref arg this[1566992]:channel(true,dynamic,true)[1021736]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2336753]:string[26] "temp"
    (2336754 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2173598]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173600 'move' call_tmp[2173598](2173602 '.' this[1566992] home[1021724]))
    const-val call_tmp[1567008]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112495]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112497 'move' coerce_tmp[2112495](2112499 '.v' call_tmp[2173598] _instance[89975]))
    val coerce_tmp[2112502]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112504 'move' coerce_tmp[2112502](2112506 'cast' object[22] coerce_tmp[2112495]))
    const-val call_tmp[2112509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112511 'move' call_tmp[2112509](2112513 'ptr_eq' coerce_tmp[2112502] nil[44]))
    if call_tmp[2112509]
    {
      (2112519 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1567010 'move' call_tmp[1567008](1567012 '_wide_get_locale' coerce_tmp[2112495]))
    val isdirect[2046617]:bool[10] "temp"
    (2046622 'move' isdirect[2046617](2046619 call chpl_doDirectExecuteOn[187423] call_tmp[1567008]))
    if isdirect[2046617]
    {
      (2046626 call on_fn[1567021] this[1566992])
    }
    {
      val _args_foron_fn[2046641]:_class_localson_fn[2046633] "temp"
      (2046645 'move' _args_foron_fn[2046641](2046643 'stack allocate class' _class_localson_fn[2046633]))
      (2046647 '.=' _args_foron_fn[2046641] _0_tmp[2046636] call_tmp[1567008])
      ref tmp[2046651]:channel(true,dynamic,true)[1021736] "temp"
      (2046655 'move' tmp[2046651](2046653 'set reference' this[1566992]))
      (2046657 '.=' _args_foron_fn[2046641] _1_this[2046638] tmp[2046651])
      val _args_vforon_fn[2046661]:c_void_ptr[149] "temp"
      (2046665 'move' _args_vforon_fn[2046661](2046663 'cast_to_void_star' _args_foron_fn[2046641]))
      val _args_sizeon_fn[2046667]:int(64)[13] "temp"
      (2046671 'move' _args_sizeon_fn[2046667](2046669 'sizeof_bundle' _class_localson_fn[2046633]))
      on(2046703 call wrapon_fn[2046673] call_tmp[1567008] _args_vforon_fn[2046661] _args_sizeon_fn[2046667] _args_foron_fn[2046641])
    }
    label _enddeinit[1773015]
    const-ref _field_destructor_tmp_[1773013]:locale[28] "temp"
    (1773020 'move' _field_destructor_tmp_[1773013](1773017 '.' this[1566992] _readWriteThisFromLocale[1021733]))
    (1773022 call deinit[90185] _field_destructor_tmp_[1773013])
    const-ref _field_destructor_tmp_[1773025]:locale[28] "temp"
    (1773030 'move' _field_destructor_tmp_[1773025](1773027 '.' this[1566992] home[1021724]))
    (1773032 call deinit[90185] _field_destructor_tmp_[1773025])
    (1567055 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].deinit[1569162](ref arg this[1569168]:channel(true,dynamic,false)[1060858]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2336759]:string[26] "temp"
    (2336760 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2208535]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208537 'move' call_tmp[2208535](2208539 '.' this[1569168] home[1060846]))
    const-val call_tmp[1569184]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112525]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112527 'move' coerce_tmp[2112525](2112529 '.v' call_tmp[2208535] _instance[89975]))
    val coerce_tmp[2112532]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112534 'move' coerce_tmp[2112532](2112536 'cast' object[22] coerce_tmp[2112525]))
    const-val call_tmp[2112539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112541 'move' call_tmp[2112539](2112543 'ptr_eq' coerce_tmp[2112532] nil[44]))
    if call_tmp[2112539]
    {
      (2112549 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1569186 'move' call_tmp[1569184](1569188 '_wide_get_locale' coerce_tmp[2112525]))
    val isdirect[2046793]:bool[10] "temp"
    (2046798 'move' isdirect[2046793](2046795 call chpl_doDirectExecuteOn[187423] call_tmp[1569184]))
    if isdirect[2046793]
    {
      (2046802 call on_fn[1569197] this[1569168])
    }
    {
      val _args_foron_fn[2046817]:_class_localson_fn[2046809] "temp"
      (2046821 'move' _args_foron_fn[2046817](2046819 'stack allocate class' _class_localson_fn[2046809]))
      (2046823 '.=' _args_foron_fn[2046817] _0_tmp[2046812] call_tmp[1569184])
      ref tmp[2046827]:channel(true,dynamic,false)[1060858] "temp"
      (2046831 'move' tmp[2046827](2046829 'set reference' this[1569168]))
      (2046833 '.=' _args_foron_fn[2046817] _1_this[2046814] tmp[2046827])
      val _args_vforon_fn[2046837]:c_void_ptr[149] "temp"
      (2046841 'move' _args_vforon_fn[2046837](2046839 'cast_to_void_star' _args_foron_fn[2046817]))
      val _args_sizeon_fn[2046843]:int(64)[13] "temp"
      (2046847 'move' _args_sizeon_fn[2046843](2046845 'sizeof_bundle' _class_localson_fn[2046809]))
      on(2046879 call wrapon_fn[2046849] call_tmp[1569184] _args_vforon_fn[2046837] _args_sizeon_fn[2046843] _args_foron_fn[2046817])
    }
    label _enddeinit[1773049]
    const-ref _field_destructor_tmp_[1773047]:locale[28] "temp"
    (1773054 'move' _field_destructor_tmp_[1773047](1773051 '.' this[1569168] _readWriteThisFromLocale[1060855]))
    (1773056 call deinit[90185] _field_destructor_tmp_[1773047])
    const-ref _field_destructor_tmp_[1773059]:locale[28] "temp"
    (1773064 'move' _field_destructor_tmp_[1773059](1773061 '.' this[1569168] home[1060846]))
    (1773066 call deinit[90185] _field_destructor_tmp_[1773059])
    (1569231 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].deinit[1573416](ref arg this[1573422]:channel(false,dynamic,false)[1080593]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2336765]:string[26] "temp"
    (2336766 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2213590]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213592 'move' call_tmp[2213590](2213594 '.' this[1573422] home[1080581]))
    const-val call_tmp[1573438]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112555]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112557 'move' coerce_tmp[2112555](2112559 '.v' call_tmp[2213590] _instance[89975]))
    val coerce_tmp[2112562]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112564 'move' coerce_tmp[2112562](2112566 'cast' object[22] coerce_tmp[2112555]))
    const-val call_tmp[2112569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112571 'move' call_tmp[2112569](2112573 'ptr_eq' coerce_tmp[2112562] nil[44]))
    if call_tmp[2112569]
    {
      (2112579 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1573440 'move' call_tmp[1573438](1573442 '_wide_get_locale' coerce_tmp[2112555]))
    val isdirect[2047054]:bool[10] "temp"
    (2047059 'move' isdirect[2047054](2047056 call chpl_doDirectExecuteOn[187423] call_tmp[1573438]))
    if isdirect[2047054]
    {
      (2047063 call on_fn[1573451] this[1573422])
    }
    {
      val _args_foron_fn[2047078]:_class_localson_fn[2047070] "temp"
      (2047082 'move' _args_foron_fn[2047078](2047080 'stack allocate class' _class_localson_fn[2047070]))
      (2047084 '.=' _args_foron_fn[2047078] _0_tmp[2047073] call_tmp[1573438])
      ref tmp[2047088]:channel(false,dynamic,false)[1080593] "temp"
      (2047092 'move' tmp[2047088](2047090 'set reference' this[1573422]))
      (2047094 '.=' _args_foron_fn[2047078] _1_this[2047075] tmp[2047088])
      val _args_vforon_fn[2047098]:c_void_ptr[149] "temp"
      (2047102 'move' _args_vforon_fn[2047098](2047100 'cast_to_void_star' _args_foron_fn[2047078]))
      val _args_sizeon_fn[2047104]:int(64)[13] "temp"
      (2047108 'move' _args_sizeon_fn[2047104](2047106 'sizeof_bundle' _class_localson_fn[2047070]))
      on(2047140 call wrapon_fn[2047110] call_tmp[1573438] _args_vforon_fn[2047098] _args_sizeon_fn[2047104] _args_foron_fn[2047078])
    }
    label _enddeinit[1773071]
    const-ref _field_destructor_tmp_[1773069]:locale[28] "temp"
    (1773076 'move' _field_destructor_tmp_[1773069](1773073 '.' this[1573422] _readWriteThisFromLocale[1080590]))
    (1773078 call deinit[90185] _field_destructor_tmp_[1773069])
    const-ref _field_destructor_tmp_[1773081]:locale[28] "temp"
    (1773086 'move' _field_destructor_tmp_[1773081](1773083 '.' this[1573422] home[1080581]))
    (1773088 call deinit[90185] _field_destructor_tmp_[1773081])
    (1573485 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._ch_ioerror[1062776](const  ref arg this[1062782]:channel(true,dynamic,false)[1060858], const in arg error[1062784]:syserr[223496], const  ref arg msg[1062786]:string[26], ref arg error_out[1768355]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335038]:string[26] "temp"
    (2335039 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2954[2335032]:string[26] "temp"
    (2335033 'move' "unknown" "unknown")
    val path[1062792]:string[26] "dead at end of block" "insert auto destroy"
    (1062794 'move' path[1062792] "unknown")
    val offset[1062813]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062815 'move' offset[1062813] -1)
    ref call_tmp[2208475]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208477 'move' call_tmp[2208475](2208479 '.' this[1062782] home[1060846]))
    const-val call_tmp[1062830]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111883]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111885 'move' coerce_tmp[2111883](2111887 '.v' call_tmp[2208475] _instance[89975]))
    val coerce_tmp[2111890]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111892 'move' coerce_tmp[2111890](2111894 'cast' object[22] coerce_tmp[2111883]))
    const-val call_tmp[2111897]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111899 'move' call_tmp[2111897](2111901 'ptr_eq' coerce_tmp[2111890] nil[44]))
    if call_tmp[2111897]
    {
      (2111907 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1062832 'move' call_tmp[1062830](1062834 '_wide_get_locale' coerce_tmp[2111883]))
    val error[1768360]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768362 'move' error[1768360] nil[44])
    val isdirect[2038115]:bool[10] "temp"
    (2038120 'move' isdirect[2038115](2038117 call chpl_doDirectExecuteOn[187423] call_tmp[1062830]))
    if isdirect[2038115]
    {
      (2038124 call on_fn[1062843] this[1062782] path[1062792] offset[1062813] error[1768360])
    }
    {
      val _args_foron_fn[2038148]:_class_localson_fn[2038134] "temp"
      (2038152 'move' _args_foron_fn[2038148](2038150 'stack allocate class' _class_localson_fn[2038134]))
      (2038154 '.=' _args_foron_fn[2038148] _0_tmp[2038137] call_tmp[1062830])
      ref tmp[2038158]:channel(true,dynamic,false)[1060858] "temp"
      (2038162 'move' tmp[2038158](2038160 'set reference' this[1062782]))
      (2038164 '.=' _args_foron_fn[2038148] _1_this[2038139] tmp[2038158])
      ref tmp[2038168]:string[26] "temp"
      (2038172 'move' tmp[2038168](2038170 'set reference' path[1062792]))
      (2038174 '.=' _args_foron_fn[2038148] _2_path[2038141] tmp[2038168])
      ref tmp[2038178]:int(64)[13] "temp"
      (2038182 'move' tmp[2038178](2038180 'set reference' offset[1062813]))
      (2038184 '.=' _args_foron_fn[2038148] _3_offset[2038143] tmp[2038178])
      ref tmp[2038188]:Error[167938] "temp"
      (2038192 'move' tmp[2038188](2038190 'set reference' error[1768360]))
      (2038194 '.=' _args_foron_fn[2038148] _4_error[2038145] tmp[2038188])
      val _args_vforon_fn[2038198]:c_void_ptr[149] "temp"
      (2038202 'move' _args_vforon_fn[2038198](2038200 'cast_to_void_star' _args_foron_fn[2038148]))
      val _args_sizeon_fn[2038204]:int(64)[13] "temp"
      (2038208 'move' _args_sizeon_fn[2038204](2038206 'sizeof_bundle' _class_localson_fn[2038134]))
      on(2038264 call wrapon_fn[2038210] call_tmp[1062830] _args_vforon_fn[2038198] _args_sizeon_fn[2038204] _args_foron_fn[2038148])
    }
    val errorExists[2055589]:bool[10] "temp"
    (2055594 'move' errorExists[2055589](2055591 '!=' error[1768360] nil[44]))
    if errorExists[2055589]
    {
      (1768366 '=' error_out[1768355] error[1768360])
      ref i_x[2077170]:string[26] "temp"
      (2077174 'move' i_x[2077170](2077172 'set reference' path[1062792]))
      (2077178 call deinit[30831] i_x[2077170])
      gotoErrorHandlingReturn _end_ch_ioerror[1768357] _end_ch_ioerror[1768357]
    }
    val error[1768374]:Error[167938] "error variable" "temp"
    (1768383 'move' error[1768374] nil[44])
    (1062966 call ioerror[266053] error[1062784] msg[1062786] path[1062792] offset[1062813] error[1768374])
    val errorExists[2055597]:bool[10] "temp"
    (2055602 'move' errorExists[2055597](2055599 '!=' error[1768374] nil[44]))
    if errorExists[2055597]
    {
      gotoErrorHandling handler[1768375] handler[1768375]
    }
    label handler[1768375]
    val errorExists[2055605]:bool[10] "temp"
    (2055610 'move' errorExists[2055605](2055607 '!=' error[1768374] nil[44]))
    if errorExists[2055605]
    {
      (1768390 '=' error_out[1768355] error[1768374])
      ref i_x[2077182]:string[26] "temp"
      (2077186 'move' i_x[2077182](2077184 'set reference' path[1062792]))
      (2077190 call deinit[30831] i_x[2077182])
      gotoErrorHandlingReturn _end_ch_ioerror[1768357] _end_ch_ioerror[1768357]
    }
    ref i_x[2077194]:string[26] "temp"
    (2077198 'move' i_x[2077194](2077196 'set reference' path[1062792]))
    (2077202 call deinit[30831] i_x[2077194])
    label _end_ch_ioerror[1768357]
    (1062975 return _void[55])
  }
  function channel(false,dynamic,false)[1080593]._ch_ioerror[1082460](const  ref arg this[1082466]:channel(false,dynamic,false)[1080593], const in arg error[1082468]:syserr[223496], const  ref arg msg[1082470]:string[26], ref arg error_out[1769151]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335298]:string[26] "temp"
    (2335299 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2954[2335292]:string[26] "temp"
    (2335293 'move' "unknown" "unknown")
    val path[1082476]:string[26] "dead at end of block" "insert auto destroy"
    (1082478 'move' path[1082476] "unknown")
    val offset[1082497]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082499 'move' offset[1082497] -1)
    ref call_tmp[2213570]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213572 'move' call_tmp[2213570](2213574 '.' this[1082466] home[1080581]))
    const-val call_tmp[1082514]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112153]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112155 'move' coerce_tmp[2112153](2112157 '.v' call_tmp[2213570] _instance[89975]))
    val coerce_tmp[2112160]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112162 'move' coerce_tmp[2112160](2112164 'cast' object[22] coerce_tmp[2112153]))
    const-val call_tmp[2112167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112169 'move' call_tmp[2112167](2112171 'ptr_eq' coerce_tmp[2112160] nil[44]))
    if call_tmp[2112167]
    {
      (2112177 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1082516 'move' call_tmp[1082514](1082518 '_wide_get_locale' coerce_tmp[2112153]))
    val error[1769156]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769158 'move' error[1769156] nil[44])
    val rvfDerefTmp[2032653]:channel(false,dynamic,false)[1080593] "temp"
    (2032657 'move' rvfDerefTmp[2032653](2032655 'deref' this[1082466]))
    val isdirect[2039336]:bool[10] "temp"
    (2039341 'move' isdirect[2039336](2039338 call chpl_doDirectExecuteOn[187423] call_tmp[1082514]))
    if isdirect[2039336]
    {
      (2039345 call on_fn[1082527] rvfDerefTmp[2032653] path[1082476] offset[1082497] error[1769156])
    }
    {
      val _args_foron_fn[2039369]:_class_localson_fn[2039355] "temp"
      (2039373 'move' _args_foron_fn[2039369](2039371 'stack allocate class' _class_localson_fn[2039355]))
      (2039375 '.=' _args_foron_fn[2039369] _0_tmp[2039358] call_tmp[1082514])
      (2039379 '.=' _args_foron_fn[2039369] _1_rvfDerefTmp[2039360] rvfDerefTmp[2032653])
      ref tmp[2039383]:string[26] "temp"
      (2039387 'move' tmp[2039383](2039385 'set reference' path[1082476]))
      (2039389 '.=' _args_foron_fn[2039369] _2_path[2039362] tmp[2039383])
      ref tmp[2039393]:int(64)[13] "temp"
      (2039397 'move' tmp[2039393](2039395 'set reference' offset[1082497]))
      (2039399 '.=' _args_foron_fn[2039369] _3_offset[2039364] tmp[2039393])
      ref tmp[2039403]:Error[167938] "temp"
      (2039407 'move' tmp[2039403](2039405 'set reference' error[1769156]))
      (2039409 '.=' _args_foron_fn[2039369] _4_error[2039366] tmp[2039403])
      val _args_vforon_fn[2039413]:c_void_ptr[149] "temp"
      (2039417 'move' _args_vforon_fn[2039413](2039415 'cast_to_void_star' _args_foron_fn[2039369]))
      val _args_sizeon_fn[2039419]:int(64)[13] "temp"
      (2039423 'move' _args_sizeon_fn[2039419](2039421 'sizeof_bundle' _class_localson_fn[2039355]))
      on(2039479 call wrapon_fn[2039425] call_tmp[1082514] _args_vforon_fn[2039413] _args_sizeon_fn[2039419] _args_foron_fn[2039369])
    }
    val errorExists[2055949]:bool[10] "temp"
    (2055954 'move' errorExists[2055949](2055951 '!=' error[1769156] nil[44]))
    if errorExists[2055949]
    {
      (1769162 '=' error_out[1769151] error[1769156])
      ref i_x[2077410]:string[26] "temp"
      (2077414 'move' i_x[2077410](2077412 'set reference' path[1082476]))
      (2077418 call deinit[30831] i_x[2077410])
      gotoErrorHandlingReturn _end_ch_ioerror[1769153] _end_ch_ioerror[1769153]
    }
    val error[1769170]:Error[167938] "error variable" "temp"
    (1769179 'move' error[1769170] nil[44])
    (1082650 call ioerror[266053] error[1082468] msg[1082470] path[1082476] offset[1082497] error[1769170])
    val errorExists[2055957]:bool[10] "temp"
    (2055962 'move' errorExists[2055957](2055959 '!=' error[1769170] nil[44]))
    if errorExists[2055957]
    {
      gotoErrorHandling handler[1769171] handler[1769171]
    }
    label handler[1769171]
    val errorExists[2055965]:bool[10] "temp"
    (2055970 'move' errorExists[2055965](2055967 '!=' error[1769170] nil[44]))
    if errorExists[2055965]
    {
      (1769186 '=' error_out[1769151] error[1769170])
      ref i_x[2077422]:string[26] "temp"
      (2077426 'move' i_x[2077422](2077424 'set reference' path[1082476]))
      (2077430 call deinit[30831] i_x[2077422])
      gotoErrorHandlingReturn _end_ch_ioerror[1769153] _end_ch_ioerror[1769153]
    }
    ref i_x[2077434]:string[26] "temp"
    (2077438 'move' i_x[2077434](2077436 'set reference' path[1082476]))
    (2077442 call deinit[30831] i_x[2077434])
    label _end_ch_ioerror[1769153]
    (1082659 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].offset[1080059](const  ref arg this[1080065]:channel(true,dynamic,false)[1060858]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_129[2335218]:string[26] "temp"
    (2335219 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[1080071]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080080]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1080210 'move' ret[1080080] 0)
    ref call_tmp[2208505]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208507 'move' call_tmp[2208505](2208509 '.' this[1080065] home[1060846]))
    const-val call_tmp[1080103]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111973]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111975 'move' coerce_tmp[2111973](2111977 '.v' call_tmp[2208505] _instance[89975]))
    val coerce_tmp[2111980]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111982 'move' coerce_tmp[2111980](2111984 'cast' object[22] coerce_tmp[2111973]))
    const-val call_tmp[2111987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111989 'move' call_tmp[2111987](2111991 'ptr_eq' coerce_tmp[2111980] nil[44]))
    if call_tmp[2111987]
    {
      (2111997 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1080105 'move' call_tmp[1080103](1080107 '_wide_get_locale' coerce_tmp[2111973]))
    val rvfDerefTmp[2032534]:channel(true,dynamic,false)[1060858] "temp"
    (2032538 'move' rvfDerefTmp[2032534](2032536 'deref' this[1080065]))
    val isdirect[2038553]:bool[10] "temp"
    (2038558 'move' isdirect[2038553](2038555 call chpl_doDirectExecuteOn[187423] call_tmp[1080103]))
    if isdirect[2038553]
    {
      (2038562 call on_fn[1080116] rvfDerefTmp[2032534] ret[1080080])
    }
    {
      val _args_foron_fn[2038580]:_class_localson_fn[2038570] "temp"
      (2038584 'move' _args_foron_fn[2038580](2038582 'stack allocate class' _class_localson_fn[2038570]))
      (2038586 '.=' _args_foron_fn[2038580] _0_tmp[2038573] call_tmp[1080103])
      (2038590 '.=' _args_foron_fn[2038580] _1_rvfDerefTmp[2038575] rvfDerefTmp[2032534])
      ref tmp[2038594]:int(64)[13] "temp"
      (2038598 'move' tmp[2038594](2038596 'set reference' ret[1080080]))
      (2038600 '.=' _args_foron_fn[2038580] _2_ret[2038577] tmp[2038594])
      val _args_vforon_fn[2038604]:c_void_ptr[149] "temp"
      (2038608 'move' _args_vforon_fn[2038604](2038606 'cast_to_void_star' _args_foron_fn[2038580]))
      val _args_sizeon_fn[2038610]:int(64)[13] "temp"
      (2038614 'move' _args_sizeon_fn[2038610](2038612 'sizeof_bundle' _class_localson_fn[2038570]))
      on(2038654 call wrapon_fn[2038616] call_tmp[1080103] _args_vforon_fn[2038604] _args_sizeon_fn[2038610] _args_foron_fn[2038580])
    }
    (1080207 'move' ret[1080071] ret[1080080])
    label _end_offset[1080175]
    (1080177 return ret[1080071])
  }
  function file[235492].reader[1016472](const  ref arg this[1016478]:file[235492], const in arg start[1016498]:int(64)[13], const in arg end[1016515]:int(64)[13], const in arg hints[1016521]:int(32)[95], const  ref arg style[1016528]:iostyle[231756], ref arg error_out[1767655]:Error[167938], ref arg _retArg[1789365]:channel(false,dynamic,true)[985538]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3029[2334759]:string[26] "temp"
    (2334760 'move' "in file.reader" "in file.reader")
    const-val local__str_literal_129[2334753]:string[26] "temp"
    (2334754 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1016536]:channel(false,dynamic,true)[985538] "dead after last mention" "RVV" "temp"
    val ret[1016555]:channel(false,dynamic,true)[985538] "dead at end of block" "insert auto destroy"
    (1021652 call init[1017782] ret[1016555])
    val err[1016576]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153115]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153117 'move' call_tmp[2153115](2153120 call qio_int_to_err[223546] 0))
    (1016578 'move' err[1016576] call_tmp[2153115])
    ref call_tmp[2162000]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162002 'move' call_tmp[2162000](2162004 '.' this[1016478] home[235474]))
    const-val call_tmp[1016593]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111433]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111435 'move' coerce_tmp[2111433](2111437 '.v' call_tmp[2162000] _instance[89975]))
    val coerce_tmp[2111440]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111442 'move' coerce_tmp[2111440](2111444 'cast' object[22] coerce_tmp[2111433]))
    const-val call_tmp[2111447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111449 'move' call_tmp[2111447](2111451 'ptr_eq' coerce_tmp[2111440] nil[44]))
    if call_tmp[2111447]
    {
      (2111457 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1016595 'move' call_tmp[1016593](1016597 '_wide_get_locale' coerce_tmp[2111433]))
    val error[1767658]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1767660 'move' error[1767658] nil[44])
    val rvfDerefTmp[2032199]:iostyle[231756] "temp"
    (2032203 'move' rvfDerefTmp[2032199](2032201 'deref' style[1016528]))
    val rvfDerefTmp[2032207]:file[235492] "temp"
    (2032211 'move' rvfDerefTmp[2032207](2032209 'deref' this[1016478]))
    val isdirect[2036042]:bool[10] "temp"
    (2036047 'move' isdirect[2036042](2036044 call chpl_doDirectExecuteOn[187423] call_tmp[1016593]))
    if isdirect[2036042]
    {
      (2036051 call on_fn[1016606] start[1016498] err[1016576] end[1016515] rvfDerefTmp[2032199] rvfDerefTmp[2032207] ret[1016555] hints[1016521] error[1767658])
    }
    {
      val _args_foron_fn[2036087]:_class_localson_fn[2036065] "temp"
      (2036091 'move' _args_foron_fn[2036087](2036089 'stack allocate class' _class_localson_fn[2036065]))
      (2036093 '.=' _args_foron_fn[2036087] _0_tmp[2036068] call_tmp[1016593])
      (2036097 '.=' _args_foron_fn[2036087] _1_start[2036070] start[1016498])
      ref tmp[2036101]:syserr[223496] "temp"
      (2036105 'move' tmp[2036101](2036103 'set reference' err[1016576]))
      (2036107 '.=' _args_foron_fn[2036087] _2_err[2036072] tmp[2036101])
      (2036111 '.=' _args_foron_fn[2036087] _3_end[2036074] end[1016515])
      (2036115 '.=' _args_foron_fn[2036087] _4_rvfDerefTmp[2036076] rvfDerefTmp[2032199])
      (2036119 '.=' _args_foron_fn[2036087] _5_rvfDerefTmp[2036078] rvfDerefTmp[2032207])
      ref tmp[2036123]:channel(false,dynamic,true)[985538] "temp"
      (2036127 'move' tmp[2036123](2036125 'set reference' ret[1016555]))
      (2036129 '.=' _args_foron_fn[2036087] _6_ret[2036080] tmp[2036123])
      (2036133 '.=' _args_foron_fn[2036087] _7_hints[2036082] hints[1016521])
      ref tmp[2036137]:Error[167938] "temp"
      (2036141 'move' tmp[2036137](2036139 'set reference' error[1767658]))
      (2036143 '.=' _args_foron_fn[2036087] _8_error[2036084] tmp[2036137])
      val _args_vforon_fn[2036147]:c_void_ptr[149] "temp"
      (2036151 'move' _args_vforon_fn[2036147](2036149 'cast_to_void_star' _args_foron_fn[2036087]))
      val _args_sizeon_fn[2036153]:int(64)[13] "temp"
      (2036157 'move' _args_sizeon_fn[2036153](2036155 'sizeof_bundle' _class_localson_fn[2036065]))
      on(2036245 call wrapon_fn[2036159] call_tmp[1016593] _args_vforon_fn[2036147] _args_sizeon_fn[2036153] _args_foron_fn[2036087])
    }
    val errorExists[2055253]:bool[10] "temp"
    (2055258 'move' errorExists[2055253](2055255 '!=' error[1767658] nil[44]))
    if errorExists[2055253]
    {
      (1767664 '=' error_out[1767655] error[1767658])
      ref i_x[2284512]:channel(false,dynamic,true)[985538] "temp"
      (2284516 'move' i_x[2284512](2284514 'set reference' ret[1016555]))
      (2284520 call deinit[1503980] i_x[2284512])
      gotoErrorHandlingReturn _end_reader[1016691] _end_reader[1016691]
    }
    const-val call_tmp[2152603]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152605 'move' call_tmp[2152603](2152608 call qio_err_iserr[223558] err[1016576]))
    const-val call_tmp[2152610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152612 'move' call_tmp[2152610](2152614 '!=' call_tmp[2152603] 0))
    if call_tmp[2152610]
    {
      val error[1767672]:Error[167938] "error variable" "temp"
      (1767681 'move' error[1767672] nil[44])
      const-val call_tmp[1016655]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788295]:string[26] "temp"
      (1016663 call tryGetPath[236276] this[1016478] ret_tmp[1788295])
      (1788298 'move' call_tmp[1016655] ret_tmp[1788295])
      (1016665 call ioerror[266162] err[1016576] "in file.reader" call_tmp[1016655] error[1767672])
      val errorExists[2055261]:bool[10] "temp"
      (2055266 'move' errorExists[2055261](2055263 '!=' error[1767672] nil[44]))
      if errorExists[2055261]
      {
        ref i_x[2076726]:string[26] "temp"
        (2076730 'move' i_x[2076726](2076728 'set reference' call_tmp[1016655]))
        (2076734 call deinit[30831] i_x[2076726])
        gotoErrorHandling handler[1767673] handler[1767673]
      }
      ref i_x[2076738]:string[26] "temp"
      (2076742 'move' i_x[2076738](2076740 'set reference' call_tmp[1016655]))
      (2076746 call deinit[30831] i_x[2076738])
      label handler[1767673]
      val errorExists[2055269]:bool[10] "temp"
      (2055274 'move' errorExists[2055269](2055271 '!=' error[1767672] nil[44]))
      if errorExists[2055269]
      {
        (1767688 '=' error_out[1767655] error[1767672])
        ref i_x[2284524]:channel(false,dynamic,true)[985538] "temp"
        (2284528 'move' i_x[2284524](2284526 'set reference' ret[1016555]))
        (2284532 call deinit[1503980] i_x[2284524])
        gotoErrorHandlingReturn _end_reader[1016691] _end_reader[1016691]
      }
    }
    (1021648 'move' ret[1016536] ret[1016555])
    label _end_reader[1016691]
    (1789367 '=' _retArg[1789365] ret[1016536])
    (1789369 return _void[55])
  }
  function file[235492].reader[1080499](const  ref arg this[1080505]:file[235492], const in arg start[1080525]:int(64)[13], const in arg end[1080542]:int(64)[13], const in arg hints[1080548]:int(32)[95], const  ref arg style[1080555]:iostyle[231756], ref arg error_out[1768998]:Error[167938], ref arg _retArg[1790263]:channel(false,dynamic,false)[1080593]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3029[2335248]:string[26] "temp"
    (2335249 'move' "in file.reader" "in file.reader")
    const-val local__str_literal_129[2335242]:string[26] "temp"
    (2335243 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1080563]:channel(false,dynamic,false)[1080593] "dead after last mention" "RVV" "temp"
    val ret[1080617]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
    (1081994 call init[1081263] ret[1080617])
    val err[1080638]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153267]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153269 'move' call_tmp[2153267](2153272 call qio_int_to_err[223546] 0))
    (1080640 'move' err[1080638] call_tmp[2153267])
    ref call_tmp[2162112]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162114 'move' call_tmp[2162112](2162116 '.' this[1080505] home[235474]))
    const-val call_tmp[1080655]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112003]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112005 'move' coerce_tmp[2112003](2112007 '.v' call_tmp[2162112] _instance[89975]))
    val coerce_tmp[2112010]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112012 'move' coerce_tmp[2112010](2112014 'cast' object[22] coerce_tmp[2112003]))
    const-val call_tmp[2112017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112019 'move' call_tmp[2112017](2112021 'ptr_eq' coerce_tmp[2112010] nil[44]))
    if call_tmp[2112017]
    {
      (2112027 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1080657 'move' call_tmp[1080655](1080659 '_wide_get_locale' coerce_tmp[2112003]))
    val error[1769001]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769003 'move' error[1769001] nil[44])
    val rvfDerefTmp[2032562]:iostyle[231756] "temp"
    (2032566 'move' rvfDerefTmp[2032562](2032564 'deref' style[1080555]))
    val rvfDerefTmp[2032570]:file[235492] "temp"
    (2032574 'move' rvfDerefTmp[2032570](2032572 'deref' this[1080505]))
    val isdirect[2038659]:bool[10] "temp"
    (2038664 'move' isdirect[2038659](2038661 call chpl_doDirectExecuteOn[187423] call_tmp[1080655]))
    if isdirect[2038659]
    {
      (2038668 call on_fn[1080668] err[1080638] hints[1080548] start[1080525] ret[1080617] end[1080542] rvfDerefTmp[2032562] rvfDerefTmp[2032570] error[1769001])
    }
    {
      val _args_foron_fn[2038704]:_class_localson_fn[2038682] "temp"
      (2038708 'move' _args_foron_fn[2038704](2038706 'stack allocate class' _class_localson_fn[2038682]))
      (2038710 '.=' _args_foron_fn[2038704] _0_tmp[2038685] call_tmp[1080655])
      ref tmp[2038714]:syserr[223496] "temp"
      (2038718 'move' tmp[2038714](2038716 'set reference' err[1080638]))
      (2038720 '.=' _args_foron_fn[2038704] _1_err[2038687] tmp[2038714])
      (2038724 '.=' _args_foron_fn[2038704] _2_hints[2038689] hints[1080548])
      (2038728 '.=' _args_foron_fn[2038704] _3_start[2038691] start[1080525])
      ref tmp[2038732]:channel(false,dynamic,false)[1080593] "temp"
      (2038736 'move' tmp[2038732](2038734 'set reference' ret[1080617]))
      (2038738 '.=' _args_foron_fn[2038704] _4_ret[2038693] tmp[2038732])
      (2038742 '.=' _args_foron_fn[2038704] _5_end[2038695] end[1080542])
      (2038746 '.=' _args_foron_fn[2038704] _6_rvfDerefTmp[2038697] rvfDerefTmp[2032562])
      (2038750 '.=' _args_foron_fn[2038704] _7_rvfDerefTmp[2038699] rvfDerefTmp[2032570])
      ref tmp[2038754]:Error[167938] "temp"
      (2038758 'move' tmp[2038754](2038756 'set reference' error[1769001]))
      (2038760 '.=' _args_foron_fn[2038704] _8_error[2038701] tmp[2038754])
      val _args_vforon_fn[2038764]:c_void_ptr[149] "temp"
      (2038768 'move' _args_vforon_fn[2038764](2038766 'cast_to_void_star' _args_foron_fn[2038704]))
      val _args_sizeon_fn[2038770]:int(64)[13] "temp"
      (2038774 'move' _args_sizeon_fn[2038770](2038772 'sizeof_bundle' _class_localson_fn[2038682]))
      on(2038862 call wrapon_fn[2038776] call_tmp[1080655] _args_vforon_fn[2038764] _args_sizeon_fn[2038770] _args_foron_fn[2038704])
    }
    val errorExists[2055885]:bool[10] "temp"
    (2055890 'move' errorExists[2055885](2055887 '!=' error[1769001] nil[44]))
    if errorExists[2055885]
    {
      (1769007 '=' error_out[1768998] error[1769001])
      ref i_x[2287192]:channel(false,dynamic,false)[1080593] "temp"
      (2287196 'move' i_x[2287192](2287194 'set reference' ret[1080617]))
      (2287200 call deinit[1573416] i_x[2287192])
      gotoErrorHandlingReturn _end_reader[1080753] _end_reader[1080753]
    }
    const-val call_tmp[2152807]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152809 'move' call_tmp[2152807](2152812 call qio_err_iserr[223558] err[1080638]))
    const-val call_tmp[2152814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152816 'move' call_tmp[2152814](2152818 '!=' call_tmp[2152807] 0))
    if call_tmp[2152814]
    {
      val error[1769015]:Error[167938] "error variable" "temp"
      (1769024 'move' error[1769015] nil[44])
      const-val call_tmp[1080717]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788313]:string[26] "temp"
      (1080725 call tryGetPath[236276] this[1080505] ret_tmp[1788313])
      (1788316 'move' call_tmp[1080717] ret_tmp[1788313])
      (1080727 call ioerror[266162] err[1080638] "in file.reader" call_tmp[1080717] error[1769015])
      val errorExists[2055893]:bool[10] "temp"
      (2055898 'move' errorExists[2055893](2055895 '!=' error[1769015] nil[44]))
      if errorExists[2055893]
      {
        ref i_x[2077386]:string[26] "temp"
        (2077390 'move' i_x[2077386](2077388 'set reference' call_tmp[1080717]))
        (2077394 call deinit[30831] i_x[2077386])
        gotoErrorHandling handler[1769016] handler[1769016]
      }
      ref i_x[2077398]:string[26] "temp"
      (2077402 'move' i_x[2077398](2077400 'set reference' call_tmp[1080717]))
      (2077406 call deinit[30831] i_x[2077398])
      label handler[1769016]
      val errorExists[2055901]:bool[10] "temp"
      (2055906 'move' errorExists[2055901](2055903 '!=' error[1769015] nil[44]))
      if errorExists[2055901]
      {
        (1769031 '=' error_out[1768998] error[1769015])
        ref i_x[2287204]:channel(false,dynamic,false)[1080593] "temp"
        (2287208 'move' i_x[2287204](2287206 'set reference' ret[1080617]))
        (2287212 call deinit[1573416] i_x[2287204])
        gotoErrorHandlingReturn _end_reader[1080753] _end_reader[1080753]
      }
    }
    (1081990 'move' ret[1080563] ret[1080617])
    label _end_reader[1080753]
    (1790265 '=' _retArg[1790263] ret[1080563])
    (1790267 return _void[55])
  }
  function file[235492].writer[1022047](const  ref arg this[1022053]:file[235492], const in arg start[1022073]:int(64)[13], const in arg end[1022090]:int(64)[13], const in arg hints[1022096]:int(32)[95], const  ref arg style[1022103]:iostyle[231756], ref arg error_out[1767771]:Error[167938], ref arg _retArg[1789425]:channel(true,dynamic,true)[1021736]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3035[2334808]:string[26] "temp"
    (2334809 'move' "in file.writer" "in file.writer")
    const-val local__str_literal_129[2334802]:string[26] "temp"
    (2334803 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1022111]:channel(true,dynamic,true)[1021736] "dead after last mention" "RVV" "temp"
    val ret[1022130]:channel(true,dynamic,true)[1021736] "dead at end of block" "insert auto destroy"
    (1023740 call init[1022818] ret[1022130])
    val err[1022151]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153134]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153136 'move' call_tmp[2153134](2153139 call qio_int_to_err[223546] 0))
    (1022153 'move' err[1022151] call_tmp[2153134])
    ref call_tmp[2162046]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162048 'move' call_tmp[2162046](2162050 '.' this[1022053] home[235474]))
    const-val call_tmp[1022168]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111583]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111585 'move' coerce_tmp[2111583](2111587 '.v' call_tmp[2162046] _instance[89975]))
    val coerce_tmp[2111590]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111592 'move' coerce_tmp[2111590](2111594 'cast' object[22] coerce_tmp[2111583]))
    const-val call_tmp[2111597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111599 'move' call_tmp[2111597](2111601 'ptr_eq' coerce_tmp[2111590] nil[44]))
    if call_tmp[2111597]
    {
      (2111607 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1022170 'move' call_tmp[1022168](1022172 '_wide_get_locale' coerce_tmp[2111583]))
    val error[1767774]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1767776 'move' error[1767774] nil[44])
    val rvfDerefTmp[2032276]:iostyle[231756] "temp"
    (2032280 'move' rvfDerefTmp[2032276](2032278 'deref' style[1022103]))
    val rvfDerefTmp[2032284]:file[235492] "temp"
    (2032288 'move' rvfDerefTmp[2032284](2032286 'deref' this[1022053]))
    val isdirect[2036725]:bool[10] "temp"
    (2036730 'move' isdirect[2036725](2036727 call chpl_doDirectExecuteOn[187423] call_tmp[1022168]))
    if isdirect[2036725]
    {
      (2036734 call on_fn[1022181] err[1022151] start[1022073] rvfDerefTmp[2032276] end[1022090] rvfDerefTmp[2032284] ret[1022130] hints[1022096] error[1767774])
    }
    {
      val _args_foron_fn[2036770]:_class_localson_fn[2036748] "temp"
      (2036774 'move' _args_foron_fn[2036770](2036772 'stack allocate class' _class_localson_fn[2036748]))
      (2036776 '.=' _args_foron_fn[2036770] _0_tmp[2036751] call_tmp[1022168])
      ref tmp[2036780]:syserr[223496] "temp"
      (2036784 'move' tmp[2036780](2036782 'set reference' err[1022151]))
      (2036786 '.=' _args_foron_fn[2036770] _1_err[2036753] tmp[2036780])
      (2036790 '.=' _args_foron_fn[2036770] _2_start[2036755] start[1022073])
      (2036794 '.=' _args_foron_fn[2036770] _3_rvfDerefTmp[2036757] rvfDerefTmp[2032276])
      (2036798 '.=' _args_foron_fn[2036770] _4_end[2036759] end[1022090])
      (2036802 '.=' _args_foron_fn[2036770] _5_rvfDerefTmp[2036761] rvfDerefTmp[2032284])
      ref tmp[2036806]:channel(true,dynamic,true)[1021736] "temp"
      (2036810 'move' tmp[2036806](2036808 'set reference' ret[1022130]))
      (2036812 '.=' _args_foron_fn[2036770] _6_ret[2036763] tmp[2036806])
      (2036816 '.=' _args_foron_fn[2036770] _7_hints[2036765] hints[1022096])
      ref tmp[2036820]:Error[167938] "temp"
      (2036824 'move' tmp[2036820](2036822 'set reference' error[1767774]))
      (2036826 '.=' _args_foron_fn[2036770] _8_error[2036767] tmp[2036820])
      val _args_vforon_fn[2036830]:c_void_ptr[149] "temp"
      (2036834 'move' _args_vforon_fn[2036830](2036832 'cast_to_void_star' _args_foron_fn[2036770]))
      val _args_sizeon_fn[2036836]:int(64)[13] "temp"
      (2036840 'move' _args_sizeon_fn[2036836](2036838 'sizeof_bundle' _class_localson_fn[2036748]))
      on(2036928 call wrapon_fn[2036842] call_tmp[1022168] _args_vforon_fn[2036830] _args_sizeon_fn[2036836] _args_foron_fn[2036770])
    }
    val errorExists[2055301]:bool[10] "temp"
    (2055306 'move' errorExists[2055301](2055303 '!=' error[1767774] nil[44]))
    if errorExists[2055301]
    {
      (1767780 '=' error_out[1767771] error[1767774])
      ref i_x[2286955]:channel(true,dynamic,true)[1021736] "temp"
      (2286959 'move' i_x[2286955](2286957 'set reference' ret[1022130]))
      (2286963 call deinit[1566986] i_x[2286955])
      gotoErrorHandlingReturn _end_writer[1022266] _end_writer[1022266]
    }
    const-val call_tmp[2152688]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152690 'move' call_tmp[2152688](2152693 call qio_err_iserr[223558] err[1022151]))
    const-val call_tmp[2152695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152697 'move' call_tmp[2152695](2152699 '!=' call_tmp[2152688] 0))
    if call_tmp[2152695]
    {
      val error[1767788]:Error[167938] "error variable" "temp"
      (1767797 'move' error[1767788] nil[44])
      const-val call_tmp[1022230]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788301]:string[26] "temp"
      (1022238 call tryGetPath[236276] this[1022053] ret_tmp[1788301])
      (1788304 'move' call_tmp[1022230] ret_tmp[1788301])
      (1022240 call ioerror[266162] err[1022151] "in file.writer" call_tmp[1022230] error[1767788])
      val errorExists[2055309]:bool[10] "temp"
      (2055314 'move' errorExists[2055309](2055311 '!=' error[1767788] nil[44]))
      if errorExists[2055309]
      {
        ref i_x[2076750]:string[26] "temp"
        (2076754 'move' i_x[2076750](2076752 'set reference' call_tmp[1022230]))
        (2076758 call deinit[30831] i_x[2076750])
        gotoErrorHandling handler[1767789] handler[1767789]
      }
      ref i_x[2076762]:string[26] "temp"
      (2076766 'move' i_x[2076762](2076764 'set reference' call_tmp[1022230]))
      (2076770 call deinit[30831] i_x[2076762])
      label handler[1767789]
      val errorExists[2055317]:bool[10] "temp"
      (2055322 'move' errorExists[2055317](2055319 '!=' error[1767788] nil[44]))
      if errorExists[2055317]
      {
        (1767804 '=' error_out[1767771] error[1767788])
        ref i_x[2286967]:channel(true,dynamic,true)[1021736] "temp"
        (2286971 'move' i_x[2286967](2286969 'set reference' ret[1022130]))
        (2286975 call deinit[1566986] i_x[2286967])
        gotoErrorHandlingReturn _end_writer[1022266] _end_writer[1022266]
      }
    }
    (1023736 'move' ret[1022111] ret[1022130])
    label _end_writer[1022266]
    (1789427 '=' _retArg[1789425] ret[1022111])
    (1789429 return _void[55])
  }
  function file[235492].writer[1060764](const  ref arg this[1060770]:file[235492], const in arg start[1060790]:int(64)[13], const in arg end[1060807]:int(64)[13], const in arg hints[1060813]:int(32)[95], const  ref arg style[1060820]:iostyle[231756], ref arg error_out[1768202]:Error[167938], ref arg _retArg[1789873]:channel(true,dynamic,false)[1060858]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3035[2334988]:string[26] "temp"
    (2334989 'move' "in file.writer" "in file.writer")
    const-val local__str_literal_129[2334982]:string[26] "temp"
    (2334983 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1060828]:channel(true,dynamic,false)[1060858] "dead after last mention" "RVV" "temp"
    val ret[1060882]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
    (1062262 call init[1061531] ret[1060882])
    val err[1060903]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153172]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153174 'move' call_tmp[2153172](2153177 call qio_int_to_err[223546] 0))
    (1060905 'move' err[1060903] call_tmp[2153172])
    ref call_tmp[2162092]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162094 'move' call_tmp[2162092](2162096 '.' this[1060770] home[235474]))
    const-val call_tmp[1060920]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111733]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111735 'move' coerce_tmp[2111733](2111737 '.v' call_tmp[2162092] _instance[89975]))
    val coerce_tmp[2111740]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111742 'move' coerce_tmp[2111740](2111744 'cast' object[22] coerce_tmp[2111733]))
    const-val call_tmp[2111747]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111749 'move' call_tmp[2111747](2111751 'ptr_eq' coerce_tmp[2111740] nil[44]))
    if call_tmp[2111747]
    {
      (2111757 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1060922 'move' call_tmp[1060920](1060924 '_wide_get_locale' coerce_tmp[2111733]))
    val error[1768205]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768207 'move' error[1768205] nil[44])
    val rvfDerefTmp[2032384]:iostyle[231756] "temp"
    (2032388 'move' rvfDerefTmp[2032384](2032386 'deref' style[1060820]))
    val rvfDerefTmp[2032392]:file[235492] "temp"
    (2032396 'move' rvfDerefTmp[2032392](2032394 'deref' this[1060770]))
    val isdirect[2037438]:bool[10] "temp"
    (2037443 'move' isdirect[2037438](2037440 call chpl_doDirectExecuteOn[187423] call_tmp[1060920]))
    if isdirect[2037438]
    {
      (2037447 call on_fn[1060933] hints[1060813] start[1060790] ret[1060882] rvfDerefTmp[2032384] end[1060807] rvfDerefTmp[2032392] err[1060903] error[1768205])
    }
    {
      val _args_foron_fn[2037483]:_class_localson_fn[2037461] "temp"
      (2037487 'move' _args_foron_fn[2037483](2037485 'stack allocate class' _class_localson_fn[2037461]))
      (2037489 '.=' _args_foron_fn[2037483] _0_tmp[2037464] call_tmp[1060920])
      (2037493 '.=' _args_foron_fn[2037483] _1_hints[2037466] hints[1060813])
      (2037497 '.=' _args_foron_fn[2037483] _2_start[2037468] start[1060790])
      ref tmp[2037501]:channel(true,dynamic,false)[1060858] "temp"
      (2037505 'move' tmp[2037501](2037503 'set reference' ret[1060882]))
      (2037507 '.=' _args_foron_fn[2037483] _3_ret[2037470] tmp[2037501])
      (2037511 '.=' _args_foron_fn[2037483] _4_rvfDerefTmp[2037472] rvfDerefTmp[2032384])
      (2037515 '.=' _args_foron_fn[2037483] _5_end[2037474] end[1060807])
      (2037519 '.=' _args_foron_fn[2037483] _6_rvfDerefTmp[2037476] rvfDerefTmp[2032392])
      ref tmp[2037523]:syserr[223496] "temp"
      (2037527 'move' tmp[2037523](2037525 'set reference' err[1060903]))
      (2037529 '.=' _args_foron_fn[2037483] _7_err[2037478] tmp[2037523])
      ref tmp[2037533]:Error[167938] "temp"
      (2037537 'move' tmp[2037533](2037535 'set reference' error[1768205]))
      (2037539 '.=' _args_foron_fn[2037483] _8_error[2037480] tmp[2037533])
      val _args_vforon_fn[2037543]:c_void_ptr[149] "temp"
      (2037547 'move' _args_vforon_fn[2037543](2037545 'cast_to_void_star' _args_foron_fn[2037483]))
      val _args_sizeon_fn[2037549]:int(64)[13] "temp"
      (2037553 'move' _args_sizeon_fn[2037549](2037551 'sizeof_bundle' _class_localson_fn[2037461]))
      on(2037641 call wrapon_fn[2037555] call_tmp[1060920] _args_vforon_fn[2037543] _args_sizeon_fn[2037549] _args_foron_fn[2037483])
    }
    val errorExists[2055525]:bool[10] "temp"
    (2055530 'move' errorExists[2055525](2055527 '!=' error[1768205] nil[44]))
    if errorExists[2055525]
    {
      (1768211 '=' error_out[1768202] error[1768205])
      ref i_x[2211945]:channel(true,dynamic,false)[1060858] "temp"
      (2211949 'move' i_x[2211945](2211947 'set reference' ret[1060882]))
      (2211953 call deinit[1569162] i_x[2211945])
      gotoErrorHandlingReturn _end_writer[1061018] _end_writer[1061018]
    }
    const-val call_tmp[2152739]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152741 'move' call_tmp[2152739](2152744 call qio_err_iserr[223558] err[1060903]))
    const-val call_tmp[2152746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152748 'move' call_tmp[2152746](2152750 '!=' call_tmp[2152739] 0))
    if call_tmp[2152746]
    {
      val error[1768219]:Error[167938] "error variable" "temp"
      (1768228 'move' error[1768219] nil[44])
      const-val call_tmp[1060982]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788307]:string[26] "temp"
      (1060990 call tryGetPath[236276] this[1060770] ret_tmp[1788307])
      (1788310 'move' call_tmp[1060982] ret_tmp[1788307])
      (1060992 call ioerror[266162] err[1060903] "in file.writer" call_tmp[1060982] error[1768219])
      val errorExists[2055533]:bool[10] "temp"
      (2055538 'move' errorExists[2055533](2055535 '!=' error[1768219] nil[44]))
      if errorExists[2055533]
      {
        ref i_x[2077146]:string[26] "temp"
        (2077150 'move' i_x[2077146](2077148 'set reference' call_tmp[1060982]))
        (2077154 call deinit[30831] i_x[2077146])
        gotoErrorHandling handler[1768220] handler[1768220]
      }
      ref i_x[2077158]:string[26] "temp"
      (2077162 'move' i_x[2077158](2077160 'set reference' call_tmp[1060982]))
      (2077166 call deinit[30831] i_x[2077158])
      label handler[1768220]
      val errorExists[2055541]:bool[10] "temp"
      (2055546 'move' errorExists[2055541](2055543 '!=' error[1768219] nil[44]))
      if errorExists[2055541]
      {
        (1768235 '=' error_out[1768202] error[1768219])
        ref i_x[2211957]:channel(true,dynamic,false)[1060858] "temp"
        (2211961 'move' i_x[2211957](2211959 'set reference' ret[1060882]))
        (2211965 call deinit[1569162] i_x[2211957])
        gotoErrorHandlingReturn _end_writer[1061018] _end_writer[1061018]
      }
    }
    (1062258 'move' ret[1060828] ret[1060882])
    label _end_writer[1061018]
    (1789875 '=' _retArg[1789873] ret[1060828])
    (1789877 return _void[55])
  }
  function _write_text_internal[1078671](const in arg _channel_internal[1078673]:qio_channel_ptr_t[231377], const in arg x[1078675]:int(64)[13]) : syserr[223496] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1078847]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1079466]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079472 'move' coerce_tmp[1079466](1079468 'cast' int(32)[95] 0))
    const-val coerce_tmp[1079474]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079480 'move' coerce_tmp[1079474](1079476 'cast' uint(64)[115] 8))
    const-val coerce_tmp[1079482]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079488 'move' coerce_tmp[1079482](1079484 'cast' int(32)[95] 1))
    (1078849 'move' call_tmp[1078847](1078852 call qio_channel_print_int[1079436] coerce_tmp[1079466] _channel_internal[1078673] x[1078675] coerce_tmp[1079474] coerce_tmp[1079482]))
    label _end__write_text_internal[1079419]
    (1079421 return call_tmp[1078847])
  }
  function _write_text_internal[1172755](const in arg _channel_internal[1172757]:qio_channel_ptr_t[231377], const  ref arg x[1172759]:string[26]) : syserr[223496] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val local__str_literal_4794[2335628]:string[26] "temp"
    (2335629 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    val ret[1172773]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val ret[2094525]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2094527]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2094529 'move' coerce_tmp[2094527](2094531 '.v' x[1172759] locale_id[30754]))
    const-val call_tmp[2094534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2094536 'move' call_tmp[2094534](2094538 '==' coerce_tmp[2094527] chpl_nodeID[208152]))
    if call_tmp[2094534]
    {
      const-val ret[2094543]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2094545]:string[26] "dead at end of block" "insert auto destroy"
      (2094548 call init[30760] ret[2094545])
      const-val coerce_tmp[2094550]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2094552 'move' coerce_tmp[2094550](2094554 '.v' x[1172759] cachedNumCodepoints[30731]))
      (2094557 '.=' ret[2094545] cachedNumCodepoints[30731] coerce_tmp[2094550])
      (2094562 call initWithBorrowedBuffer[948785] ret[2094545] x[1172759])
      (2094565 'move' ret[2094543] ret[2094545])
      (2094568 'move' ret[2094525] ret[2094543])
      gotoReturn _end_localize[2094586] _end_localize[2094586]
    }
    {
      const-val x[2094574]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2094577 call init=[30771] x[2094574] x[1172759])
      (2094580 'move' ret[2094525] x[2094574])
      gotoReturn _end_localize[2094586] _end_localize[2094586]
    }
    label _end_localize[2094586]
    const local_x[1173174]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1173176 'move' local_x[1173174] ret[2094525])
    const-val tmp[1173533]:bool[10] "dead after last mention" "const" "temp"
    (1173535 'move' tmp[1173533](2327143 '.v' local_x[1173174] hasEscapes[30749]))
    if tmp[1173533]
    {
      const-val call_tmp[2153362]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      (2153364 'move' call_tmp[2153362](2153367 call qio_int_to_err[223546] EILSEQ[224356]))
      (2153369 '=' ret[1172773] call_tmp[2153362])
      ref i_x[2077950]:string[26] "temp"
      (2077954 'move' i_x[2077950](2077952 'set reference' local_x[1173174]))
      (2077958 call deinit[30831] i_x[2077950])
      gotoReturn _end__write_text_internal[1173503] _end__write_text_internal[1173503]
    }
    const-val coerce_tmp[2097456]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2097458 'move' coerce_tmp[2097456](2097460 '.v' local_x[1173174] locale_id[30754]))
    const-val call_tmp[2097463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2097465 'move' call_tmp[2097463](2097467 '!=' coerce_tmp[2097456] chpl_nodeID[208152]))
    if call_tmp[2097463]
    {
      (2097473 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2097476]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2097478 'move' coerce_tmp[2097476](2097480 '.v' local_x[1173174] buff[30737]))
    const-val call_tmp[2097483]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2097485 'move' call_tmp[2097483](2097487 'cast' c_string[19] coerce_tmp[2097476]))
    val ret[2089362]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2089364 'move' ret[2089362](2089366 '.v' local_x[1173174] buffLen[30719]))
    const-val call_tmp[1173230]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1173542]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1173548 'move' coerce_tmp[1173542](1173544 'cast' int(32)[95] 0))
    (1173232 'move' call_tmp[1173230](1173235 call qio_channel_print_string[234749] coerce_tmp[1173542] _channel_internal[1172757] call_tmp[2097483] ret[2089362]))
    (1173561 'move' ret[1172773] call_tmp[1173230])
    ref i_x[2077962]:string[26] "temp"
    (2077966 'move' i_x[2077962](2077964 'set reference' local_x[1173174]))
    (2077970 call deinit[30831] i_x[2077962])
    label _end__write_text_internal[1173503]
    (1173505 return ret[1172773])
  }
  function channel(true,dynamic,false)[1060858]._constructIoErrorMsg[1079523](const  ref arg this[1079529]:channel(true,dynamic,false)[1060858], const in arg x[1079533]:int(64)[13], ref arg _retArg[1790223]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4769[2335194]:string[26] "temp"
    (2335195 'move' "int(64)" "int(64)")
    const-val local__str_literal_3059[2335188]:string[26] "temp"
    (2335189 'move' "writing " "writing ")
    const-val local__str_literal_3057[2335182]:string[26] "temp"
    (2335183 'move' "while " "while ")
    const-val ret[1079537]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079549]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150713]:string[26] "temp"
    (2150716 'move' inlineImm[2150713] "while ")
    ref i_x[2150718]:string[26] "temp"
    (2150722 'move' i_x[2150718](2150720 'set reference' inlineImm[2150713]))
    val ret[2150725]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150727]:string[26] "dead after last mention" "temp"
    (2150730 call init=[30771] tmp[2150727] i_x[2150718])
    (2150733 'move' ret[2150725] tmp[2150727])
    (1079551 'move' result[1079549] ret[2150725])
    (1079588 call +=[38797] result[1079549] "writing ")
    (1079608 call +=[38797] result[1079549] "int(64)")
    (1079742 'move' ret[1079537] result[1079549])
    label _end__constructIoErrorMsg[1079718]
    (1790225 '=' _retArg[1790223] ret[1079537])
    (1790229 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._constructIoErrorMsg[1079816](const  ref arg this[1079822]:channel(true,dynamic,false)[1060858], const  ref arg x[1079826]:byteIndex[28170], ref arg _retArg[1790237]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4840[2335212]:string[26] "temp"
    (2335213 'move' "byteIndex" "byteIndex")
    const-val local__str_literal_3059[2335206]:string[26] "temp"
    (2335207 'move' "writing " "writing ")
    const-val local__str_literal_3057[2335200]:string[26] "temp"
    (2335201 'move' "while " "while ")
    const-val ret[1079830]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079842]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150738]:string[26] "temp"
    (2150741 'move' inlineImm[2150738] "while ")
    ref i_x[2150743]:string[26] "temp"
    (2150747 'move' i_x[2150743](2150745 'set reference' inlineImm[2150738]))
    val ret[2150750]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150752]:string[26] "dead after last mention" "temp"
    (2150755 call init=[30771] tmp[2150752] i_x[2150743])
    (2150758 'move' ret[2150750] tmp[2150752])
    (1079844 'move' result[1079842] ret[2150750])
    (1079881 call +=[38797] result[1079842] "writing ")
    (1079901 call +=[38797] result[1079842] "byteIndex")
    (1080049 'move' ret[1079830] result[1079842])
    label _end__constructIoErrorMsg[1080011]
    (1790239 '=' _retArg[1790237] ret[1079830])
    (1790243 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._constructIoErrorMsg[1173590](const  ref arg this[1173596]:channel(true,dynamic,false)[1060858], const  ref arg x[1173600]:string[26], ref arg _retArg[1791456]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4792[2335646]:string[26] "temp"
    (2335647 'move' "string" "string")
    const-val local__str_literal_3059[2335640]:string[26] "temp"
    (2335641 'move' "writing " "writing ")
    const-val local__str_literal_3057[2335634]:string[26] "temp"
    (2335635 'move' "while " "while ")
    const-val ret[1173604]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173616]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150863]:string[26] "temp"
    (2150866 'move' inlineImm[2150863] "while ")
    ref i_x[2150868]:string[26] "temp"
    (2150872 'move' i_x[2150868](2150870 'set reference' inlineImm[2150863]))
    val ret[2150875]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150877]:string[26] "dead after last mention" "temp"
    (2150880 call init=[30771] tmp[2150877] i_x[2150868])
    (2150883 'move' ret[2150875] tmp[2150877])
    (1173618 'move' result[1173616] ret[2150875])
    (1173655 call +=[38797] result[1173616] "writing ")
    (1173675 call +=[38797] result[1173616] "string")
    (1173809 'move' ret[1173604] result[1173616])
    label _end__constructIoErrorMsg[1173785]
    (1791458 '=' _retArg[1791456] ret[1173604])
    (1791462 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._constructIoErrorMsg[1175308](const  ref arg this[1175314]:channel(true,dynamic,false)[1060858], const  ref arg x[1175318]:codepointIndex[28274], ref arg _retArg[1791470]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4852[2335670]:string[26] "temp"
    (2335671 'move' "codepointIndex" "codepointIndex")
    const-val local__str_literal_3059[2335664]:string[26] "temp"
    (2335665 'move' "writing " "writing ")
    const-val local__str_literal_3057[2335658]:string[26] "temp"
    (2335659 'move' "while " "while ")
    const-val ret[1175322]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175334]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150888]:string[26] "temp"
    (2150891 'move' inlineImm[2150888] "while ")
    ref i_x[2150893]:string[26] "temp"
    (2150897 'move' i_x[2150893](2150895 'set reference' inlineImm[2150888]))
    val ret[2150900]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150902]:string[26] "dead after last mention" "temp"
    (2150905 call init=[30771] tmp[2150902] i_x[2150893])
    (2150908 'move' ret[2150900] tmp[2150902])
    (1175336 'move' result[1175334] ret[2150900])
    (1175373 call +=[38797] result[1175334] "writing ")
    (1175393 call +=[38797] result[1175334] "codepointIndex")
    (1175543 'move' ret[1175322] result[1175334])
    label _end__constructIoErrorMsg[1175503]
    (1791472 '=' _retArg[1791470] ret[1175322])
    (1791476 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._writeOne[1066923](const  ref arg this[1066929]:channel(true,dynamic,false)[1060858], const  ref arg x[1066933]:byteIndex[28170], const  ref arg loc[1066935]:locale[28], ref arg error_out[1768592]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4838[2335080]:string[26] "temp"
    (2335081 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1068272]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068276 'move' coerce_tmp[1068272](2325996 '.v' this[1066929] _channel_internal[1060851]))
    val error[1768597]:Error[167938] "error variable" "temp"
    (1768599 'move' error[1768597] nil[44])
    val ret[2212270]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2212272]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2212274]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2212276]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2212278 'move' call_tmp[2212276](2212281 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2212284 'move' call_tmp[2212274] call_tmp[2212276])
    const-val call_tmp[2212287]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2212289]:locale[28] "temp"
    (2212292 call chpl_localeID_to_locale[92849] call_tmp[2212274] ret_tmp[2212289])
    (2212295 'move' call_tmp[2212287] ret_tmp[2212289])
    (2212298 'move' call_tmp[2212272] call_tmp[2212287])
    const-val call_tmp[2212301]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2212303]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "temp"
    (2212306 call init[1068299] initTemp[2212303] call_tmp[2212272] coerce_tmp[1068272] loc[1066935])
    (2212311 'move' call_tmp[2212301] initTemp[2212303])
    val writer[2212314]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2212316 'move' writer[2212314] call_tmp[2212301])
    const-val call_tmp[2212321]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212323 'move' call_tmp[2212321](2212326 call qio_int_to_err[223546] 0))
    val error[2212331]:Error[167938] "error variable" "temp"
    (2212333 'move' error[2212331] nil[44])
    (2212337 call writeThis[1068531] x[1066933] writer[2212314] error[2212331])
    val errorExists[2212341]:bool[10] "temp"
    (2212343 'move' errorExists[2212341](2212345 '!=' error[2212331] nil[44]))
    if errorExists[2212341]
    {
      gotoErrorHandling handler[2212353] handler[2212353]
    }
    label handler[2212353]
    val errorExists[2212355]:bool[10] "temp"
    (2212357 'move' errorExists[2212355](2212359 '!=' error[2212331] nil[44]))
    if errorExists[2212355]
    {
      (2212364 '=' error[1768597] error[2212331])
      (2212367 '.=' writer[2212314] _channel_internal[1060851] QIO_CHANNEL_PTR_NULL[231380])
      ref i_x[2212371]:channel(true,dynamic,false)[1060858] "temp"
      (2212373 'move' i_x[2212371](2212375 'set reference' writer[2212314]))
      (2212378 call deinit[1569162] i_x[2212371])
      ref i_x[2212380]:locale[28] "temp"
      (2212382 'move' i_x[2212380](2212384 'set reference' call_tmp[2212272]))
      (2212387 call deinit[90185] i_x[2212380])
      gotoErrorHandlingReturn _end__write_one_internal[2212417] _end__write_one_internal[2212417]
    }
    (2212392 'move' ret[2212270] call_tmp[2212321])
    (2212395 '.=' writer[2212314] _channel_internal[1060851] QIO_CHANNEL_PTR_NULL[231380])
    ref i_x[2212399]:channel(true,dynamic,false)[1060858] "temp"
    (2212401 'move' i_x[2212399](2212403 'set reference' writer[2212314]))
    (2212406 call deinit[1569162] i_x[2212399])
    ref i_x[2212408]:locale[28] "temp"
    (2212410 'move' i_x[2212408](2212412 'set reference' call_tmp[2212272]))
    (2212415 call deinit[90185] i_x[2212408])
    label _end__write_one_internal[2212417]
    val errorExists[2055693]:bool[10] "temp"
    (2055698 'move' errorExists[2055693](2055695 '!=' error[1768597] nil[44]))
    if errorExists[2055693]
    {
      (1768603 '=' error_out[1768592] error[1768597])
      gotoErrorHandlingReturn _end_writeOne[1768594] _end_writeOne[1768594]
    }
    const-val call_tmp[2152380]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152382 'move' call_tmp[2152380](2152385 call qio_err_to_int[223528] ret[2212270]))
    const-val call_tmp[2152387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152389 'move' call_tmp[2152387](2152391 '==' call_tmp[2152380] 0))
    const-val call_tmp[2152394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152396 'move' call_tmp[2152394](2152398 '!' call_tmp[2152387]))
    if call_tmp[2152394]
    {
      const-val call_tmp[1066992]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1790231]:string[26] "temp"
      (1067000 call _constructIoErrorMsg[1079816] this[1066929] x[1066933] ret_tmp[1790231])
      (1790234 'move' call_tmp[1066992] ret_tmp[1790231])
      val msg[1067003]:string[26] "dead at end of block" "insert auto destroy"
      (1067005 'move' msg[1067003] call_tmp[1066992])
      const-val call_tmp[2152222]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152224 'move' call_tmp[2152222](2152227 call qio_err_to_int[223528] ret[2212270]))
      const-val call_tmp[2152229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152231 'move' call_tmp[2152229](2152233 '==' call_tmp[2152222] EILSEQ[224356]))
      if call_tmp[2152229]
      {
        const-val call_tmp[1067034]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786925]:string[26] "temp"
        (1067039 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067003] ret_tmp[1786925])
        (1786928 'move' call_tmp[1067034] ret_tmp[1786925])
        (1067043 call =[38269] msg[1067003] call_tmp[1067034])
        ref i_x[2077218]:string[26] "temp"
        (2077222 'move' i_x[2077218](2077220 'set reference' call_tmp[1067034]))
        (2077226 call deinit[30831] i_x[2077218])
      }
      val error[1768611]:Error[167938] "error variable" "temp"
      (1768620 'move' error[1768611] nil[44])
      (1067055 call _ch_ioerror[1062776] this[1066929] ret[2212270] msg[1067003] error[1768611])
      val errorExists[2055701]:bool[10] "temp"
      (2055706 'move' errorExists[2055701](2055703 '!=' error[1768611] nil[44]))
      if errorExists[2055701]
      {
        gotoErrorHandling handler[1768612] handler[1768612]
      }
      label handler[1768612]
      val errorExists[2055709]:bool[10] "temp"
      (2055714 'move' errorExists[2055709](2055711 '!=' error[1768611] nil[44]))
      if errorExists[2055709]
      {
        (1768627 '=' error_out[1768592] error[1768611])
        ref i_x[2077230]:string[26] "temp"
        (2077234 'move' i_x[2077230](2077232 'set reference' msg[1067003]))
        (2077238 call deinit[30831] i_x[2077230])
        gotoErrorHandlingReturn _end_writeOne[1768594] _end_writeOne[1768594]
      }
      ref i_x[2077242]:string[26] "temp"
      (2077246 'move' i_x[2077242](2077244 'set reference' msg[1067003]))
      (2077250 call deinit[30831] i_x[2077242])
    }
    label _end_writeOne[1768594]
    (1067063 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._writeOne[1068848](const  ref arg this[1068854]:channel(true,dynamic,false)[1060858], const in arg x[1068858]:int(64)[13], const  ref arg loc[1068860]:locale[28], ref arg error_out[1768829]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4838[2335116]:string[26] "temp"
    (2335117 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1070116]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070120 'move' coerce_tmp[1070116](2326019 '.v' this[1068854] _channel_internal[1060851]))
    val error[1768834]:Error[167938] "error variable" "temp"
    (1768836 'move' error[1768834] nil[44])
    val ret[2212738]:syserr[223496] "dead after last mention" "RVV" "temp"
    val e[2212740]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2212742]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212744 'move' call_tmp[2212742](2212747 call qio_int_to_err[223546] 0))
    (2212749 'move' e[2212740] call_tmp[2212742])
    const-val call_tmp[2212752]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2212754 'move' call_tmp[2212752](2212757 call qio_channel_binary[232969] coerce_tmp[1070116]))
    const-val call_tmp[2212759]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2212761 'move' call_tmp[2212759](2212764 call qio_channel_byteorder[232984] coerce_tmp[1070116]))
    const-val coerce_tmp[2212771]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2212773 'move' coerce_tmp[2212771](2212775 'cast' int(64)[13] call_tmp[2212752]))
    const-val call_tmp[2212778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212780 'move' call_tmp[2212778](2212782 '!=' coerce_tmp[2212771] 0))
    if call_tmp[2212778]
    {
      const-val tmp[2212787]:iokind[230843] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2212789]:Error[167938] "error variable" "temp"
      (2212791 'move' error[2212789] nil[44])
      (2212794 'move' tmp[2212787](2212797 call _cast[1070219] call_tmp[2212759] error[2212789]))
      val errorExists[2212800]:bool[10] "temp"
      (2212802 'move' errorExists[2212800](2212804 '!=' error[2212789] nil[44]))
      if errorExists[2212800]
      {
        (2212809 '=' error[1768834] error[2212789])
        gotoErrorHandlingReturn _end__write_one_internal[2212913] _end__write_one_internal[2212913]
      }
      const-val call_tmp[2212815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212817 'move' call_tmp[2212815](2212819 '==' tmp[2212787] big[230838]))
      if call_tmp[2212815]
      {
        const-val call_tmp[2212824]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2212826]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2212828 'move' coerce_tmp[2212826](2212830 'cast' int(32)[95] 0))
        (2212833 'move' call_tmp[2212824](2212836 call qio_channel_write_int64[233962] coerce_tmp[2212826] 2 coerce_tmp[1070116] x[1068858]))
        (2212841 '=' e[2212740] call_tmp[2212824])
      }
      {
        const-val call_tmp[2212845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212847 'move' call_tmp[2212845](2212849 '==' tmp[2212787] little[230841]))
        if call_tmp[2212845]
        {
          const-val call_tmp[2212854]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2212856]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2212858 'move' coerce_tmp[2212856](2212860 'cast' int(32)[95] 0))
          (2212863 'move' call_tmp[2212854](2212866 call qio_channel_write_int64[233962] coerce_tmp[2212856] 3 coerce_tmp[1070116] x[1068858]))
          (2212871 '=' e[2212740] call_tmp[2212854])
        }
        {
          const-val call_tmp[2212875]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2212877]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2212879 'move' coerce_tmp[2212877](2212881 'cast' int(32)[95] 0))
          (2212884 'move' call_tmp[2212875](2212887 call qio_channel_write_int64[233962] coerce_tmp[2212877] 1 coerce_tmp[1070116] x[1068858]))
          (2212892 '=' e[2212740] call_tmp[2212875])
        }
      }
    }
    {
      const-val call_tmp[2212898]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212900 'move' call_tmp[2212898](2212903 call _write_text_internal[1078671] coerce_tmp[1070116] x[1068858]))
      (2212906 '=' e[2212740] call_tmp[2212898])
    }
    (2212910 'move' ret[2212738] e[2212740])
    label _end__write_one_internal[2212913]
    val errorExists[2055813]:bool[10] "temp"
    (2055818 'move' errorExists[2055813](2055815 '!=' error[1768834] nil[44]))
    if errorExists[2055813]
    {
      (1768840 '=' error_out[1768829] error[1768834])
      gotoErrorHandlingReturn _end_writeOne[1768831] _end_writeOne[1768831]
    }
    const-val call_tmp[2152357]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152359 'move' call_tmp[2152357](2152362 call qio_err_to_int[223528] ret[2212738]))
    const-val call_tmp[2152364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152366 'move' call_tmp[2152364](2152368 '==' call_tmp[2152357] 0))
    const-val call_tmp[2152371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152373 'move' call_tmp[2152371](2152375 '!' call_tmp[2152364]))
    if call_tmp[2152371]
    {
      const-val call_tmp[1068917]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1790217]:string[26] "temp"
      (1068925 call _constructIoErrorMsg[1079523] this[1068854] x[1068858] ret_tmp[1790217])
      (1790220 'move' call_tmp[1068917] ret_tmp[1790217])
      val msg[1068928]:string[26] "dead at end of block" "insert auto destroy"
      (1068930 'move' msg[1068928] call_tmp[1068917])
      const-val call_tmp[2152205]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152207 'move' call_tmp[2152205](2152210 call qio_err_to_int[223528] ret[2212738]))
      const-val call_tmp[2152212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152214 'move' call_tmp[2152212](2152216 '==' call_tmp[2152205] EILSEQ[224356]))
      if call_tmp[2152212]
      {
        const-val call_tmp[1068959]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786931]:string[26] "temp"
        (1068964 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1068928] ret_tmp[1786931])
        (1786934 'move' call_tmp[1068959] ret_tmp[1786931])
        (1068968 call =[38269] msg[1068928] call_tmp[1068959])
        ref i_x[2077254]:string[26] "temp"
        (2077258 'move' i_x[2077254](2077256 'set reference' call_tmp[1068959]))
        (2077262 call deinit[30831] i_x[2077254])
      }
      val error[1768848]:Error[167938] "error variable" "temp"
      (1768857 'move' error[1768848] nil[44])
      (1068980 call _ch_ioerror[1062776] this[1068854] ret[2212738] msg[1068928] error[1768848])
      val errorExists[2055821]:bool[10] "temp"
      (2055826 'move' errorExists[2055821](2055823 '!=' error[1768848] nil[44]))
      if errorExists[2055821]
      {
        gotoErrorHandling handler[1768849] handler[1768849]
      }
      label handler[1768849]
      val errorExists[2055829]:bool[10] "temp"
      (2055834 'move' errorExists[2055829](2055831 '!=' error[1768848] nil[44]))
      if errorExists[2055829]
      {
        (1768864 '=' error_out[1768829] error[1768848])
        ref i_x[2077266]:string[26] "temp"
        (2077270 'move' i_x[2077266](2077268 'set reference' msg[1068928]))
        (2077274 call deinit[30831] i_x[2077266])
        gotoErrorHandlingReturn _end_writeOne[1768831] _end_writeOne[1768831]
      }
      ref i_x[2077278]:string[26] "temp"
      (2077282 'move' i_x[2077278](2077280 'set reference' msg[1068928]))
      (2077286 call deinit[30831] i_x[2077278])
    }
    label _end_writeOne[1768831]
    (1068988 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._writeOne[1165071](const  ref arg this[1165077]:channel(true,dynamic,false)[1060858], const  ref arg x[1165081]:string[26], const  ref arg loc[1165083]:locale[28], ref arg error_out[1769627]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4838[2335622]:string[26] "temp"
    (2335623 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val local__str_literal_4794[2335614]:string[26] "temp"
    (2335615 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val coerce_tmp[1167941]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1167945 'move' coerce_tmp[1167941](2327133 '.v' this[1165077] _channel_internal[1060851]))
    val error[1769632]:Error[167938] "error variable" "temp"
    (1769634 'move' error[1769632] nil[44])
    val ret[2217321]:syserr[223496] "dead after last mention" "RVV" "temp"
    val e[2217323]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2217325]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217327 'move' call_tmp[2217325](2217330 call qio_int_to_err[223546] 0))
    (2217332 'move' e[2217323] call_tmp[2217325])
    const-val call_tmp[2217335]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2217337 'move' call_tmp[2217335](2217340 call qio_channel_binary[232969] coerce_tmp[1167941]))
    const-val call_tmp[2217342]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2217344 'move' call_tmp[2217342](2217347 call qio_channel_byteorder[232984] coerce_tmp[1167941]))
    const-val coerce_tmp[2217354]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2217356 'move' coerce_tmp[2217354](2217358 'cast' int(64)[13] call_tmp[2217335]))
    const-val call_tmp[2217361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2217363 'move' call_tmp[2217361](2217365 '!=' coerce_tmp[2217354] 0))
    if call_tmp[2217361]
    {
      const-val tmp[2217370]:iokind[230843] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2217372]:Error[167938] "error variable" "temp"
      (2217374 'move' error[2217372] nil[44])
      (2217377 'move' tmp[2217370](2217380 call _cast[1070219] call_tmp[2217342] error[2217372]))
      val errorExists[2217383]:bool[10] "temp"
      (2217385 'move' errorExists[2217383](2217387 '!=' error[2217372] nil[44]))
      if errorExists[2217383]
      {
        (2217392 '=' error[1769632] error[2217372])
        gotoErrorHandlingReturn _end__write_one_internal[2217991] _end__write_one_internal[2217991]
      }
      const-val call_tmp[2217398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2217400 'move' call_tmp[2217398](2217402 '==' tmp[2217370] big[230838]))
      if call_tmp[2217398]
      {
        val ret[2217407]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2217409]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2217411]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2217413 'move' coerce_tmp[2217411](2217415 '.v' x[1165081] locale_id[30754]))
        const-val call_tmp[2217418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217420 'move' call_tmp[2217418](2217422 '==' coerce_tmp[2217411] chpl_nodeID[208152]))
        if call_tmp[2217418]
        {
          const-val ret[2217427]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2217429]:string[26] "dead at end of block" "insert auto destroy"
          (2217432 call init[30760] ret[2217429])
          const-val coerce_tmp[2217434]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217436 'move' coerce_tmp[2217434](2217438 '.v' x[1165081] cachedNumCodepoints[30731]))
          (2217441 '.=' ret[2217429] cachedNumCodepoints[30731] coerce_tmp[2217434])
          (2217446 call initWithBorrowedBuffer[948785] ret[2217429] x[1165081])
          (2217449 'move' ret[2217427] ret[2217429])
          (2217452 'move' ret[2217409] ret[2217427])
          gotoReturn _end_localize[2217470] _end_localize[2217470]
        }
        {
          const-val x[2217458]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2217461 call init=[30771] x[2217458] x[1165081])
          (2217464 'move' ret[2217409] x[2217458])
          gotoReturn _end_localize[2217470] _end_localize[2217470]
        }
        label _end_localize[2217470]
        val local_x[2217472]:string[26] "dead at end of block" "insert auto destroy"
        (2217474 'move' local_x[2217472] ret[2217409])
        const-val tmp[2217477]:bool[10] "dead after last mention" "const" "temp"
        (2217479 'move' tmp[2217477](2217481 '.v' local_x[2217472] hasEscapes[30749]))
        if tmp[2217477]
        {
          const-val call_tmp[2217486]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217488 'move' call_tmp[2217486](2217491 call qio_int_to_err[223546] EILSEQ[224356]))
          (2217493 '=' ret[2217407] call_tmp[2217486])
          ref i_x[2217496]:string[26] "temp"
          (2217498 'move' i_x[2217496](2217500 'set reference' local_x[2217472]))
          (2217503 call deinit[30831] i_x[2217496])
          gotoReturn _end__write_binary_internal[2217587] _end__write_binary_internal[2217587]
        }
        const-val call_tmp[2217508]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217510 'move' call_tmp[2217508](2217513 call qio_channel_str_style[232999] coerce_tmp[1167941]))
        const-val coerce_tmp[2217515]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2217517 'move' coerce_tmp[2217515](2217519 '.v' local_x[2217472] locale_id[30754]))
        const-val call_tmp[2217522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217524 'move' call_tmp[2217522](2217526 '!=' coerce_tmp[2217515] chpl_nodeID[208152]))
        if call_tmp[2217522]
        {
          (2217532 call halt[154067] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2217535]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2217537 'move' coerce_tmp[2217535](2217539 '.v' local_x[2217472] buff[30737]))
        const-val call_tmp[2217542]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217544 'move' call_tmp[2217542](2217546 'cast' c_string[19] coerce_tmp[2217535]))
        val ret[2217549]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2217551 'move' ret[2217549](2217553 '.v' local_x[2217472] buffLen[30719]))
        const-val call_tmp[2217556]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2217558]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2217560 'move' coerce_tmp[2217558](2217562 'cast' int(32)[95] 0))
        (2217565 'move' call_tmp[2217556](2217568 call qio_channel_write_string[234301] coerce_tmp[2217558] 2 call_tmp[2217508] coerce_tmp[1167941] call_tmp[2217542] ret[2217549]))
        (2217575 'move' ret[2217407] call_tmp[2217556])
        ref i_x[2217578]:string[26] "temp"
        (2217580 'move' i_x[2217578](2217582 'set reference' local_x[2217472]))
        (2217585 call deinit[30831] i_x[2217578])
        label _end__write_binary_internal[2217587]
        (2217589 '=' e[2217323] ret[2217407])
      }
      {
        const-val call_tmp[2217593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217595 'move' call_tmp[2217593](2217597 '==' tmp[2217370] little[230841]))
        if call_tmp[2217593]
        {
          val ret[2217602]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2217604]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2217606]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217608 'move' coerce_tmp[2217606](2217610 '.v' x[1165081] locale_id[30754]))
          const-val call_tmp[2217613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217615 'move' call_tmp[2217613](2217617 '==' coerce_tmp[2217606] chpl_nodeID[208152]))
          if call_tmp[2217613]
          {
            const-val ret[2217622]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2217624]:string[26] "dead at end of block" "insert auto destroy"
            (2217627 call init[30760] ret[2217624])
            const-val coerce_tmp[2217629]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2217631 'move' coerce_tmp[2217629](2217633 '.v' x[1165081] cachedNumCodepoints[30731]))
            (2217636 '.=' ret[2217624] cachedNumCodepoints[30731] coerce_tmp[2217629])
            (2217641 call initWithBorrowedBuffer[948785] ret[2217624] x[1165081])
            (2217644 'move' ret[2217622] ret[2217624])
            (2217647 'move' ret[2217604] ret[2217622])
            gotoReturn _end_localize[2217665] _end_localize[2217665]
          }
          {
            const-val x[2217653]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2217656 call init=[30771] x[2217653] x[1165081])
            (2217659 'move' ret[2217604] x[2217653])
            gotoReturn _end_localize[2217665] _end_localize[2217665]
          }
          label _end_localize[2217665]
          val local_x[2217667]:string[26] "dead at end of block" "insert auto destroy"
          (2217669 'move' local_x[2217667] ret[2217604])
          const-val tmp[2217672]:bool[10] "dead after last mention" "const" "temp"
          (2217674 'move' tmp[2217672](2217676 '.v' local_x[2217667] hasEscapes[30749]))
          if tmp[2217672]
          {
            const-val call_tmp[2217681]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
            (2217683 'move' call_tmp[2217681](2217686 call qio_int_to_err[223546] EILSEQ[224356]))
            (2217688 '=' ret[2217602] call_tmp[2217681])
            ref i_x[2217691]:string[26] "temp"
            (2217693 'move' i_x[2217691](2217695 'set reference' local_x[2217667]))
            (2217698 call deinit[30831] i_x[2217691])
            gotoReturn _end__write_binary_internal[2217782] _end__write_binary_internal[2217782]
          }
          const-val call_tmp[2217703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217705 'move' call_tmp[2217703](2217708 call qio_channel_str_style[232999] coerce_tmp[1167941]))
          const-val coerce_tmp[2217710]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217712 'move' coerce_tmp[2217710](2217714 '.v' local_x[2217667] locale_id[30754]))
          const-val call_tmp[2217717]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217719 'move' call_tmp[2217717](2217721 '!=' coerce_tmp[2217710] chpl_nodeID[208152]))
          if call_tmp[2217717]
          {
            (2217727 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2217730]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217732 'move' coerce_tmp[2217730](2217734 '.v' local_x[2217667] buff[30737]))
          const-val call_tmp[2217737]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217739 'move' call_tmp[2217737](2217741 'cast' c_string[19] coerce_tmp[2217730]))
          val ret[2217744]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2217746 'move' ret[2217744](2217748 '.v' local_x[2217667] buffLen[30719]))
          const-val call_tmp[2217751]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2217753]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217755 'move' coerce_tmp[2217753](2217757 'cast' int(32)[95] 0))
          (2217760 'move' call_tmp[2217751](2217763 call qio_channel_write_string[234301] coerce_tmp[2217753] 3 call_tmp[2217703] coerce_tmp[1167941] call_tmp[2217737] ret[2217744]))
          (2217770 'move' ret[2217602] call_tmp[2217751])
          ref i_x[2217773]:string[26] "temp"
          (2217775 'move' i_x[2217773](2217777 'set reference' local_x[2217667]))
          (2217780 call deinit[30831] i_x[2217773])
          label _end__write_binary_internal[2217782]
          (2217784 '=' e[2217323] ret[2217602])
        }
        {
          val ret[2217788]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2217790]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2217792]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217794 'move' coerce_tmp[2217792](2217796 '.v' x[1165081] locale_id[30754]))
          const-val call_tmp[2217799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217801 'move' call_tmp[2217799](2217803 '==' coerce_tmp[2217792] chpl_nodeID[208152]))
          if call_tmp[2217799]
          {
            const-val ret[2217808]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2217810]:string[26] "dead at end of block" "insert auto destroy"
            (2217813 call init[30760] ret[2217810])
            const-val coerce_tmp[2217815]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2217817 'move' coerce_tmp[2217815](2217819 '.v' x[1165081] cachedNumCodepoints[30731]))
            (2217822 '.=' ret[2217810] cachedNumCodepoints[30731] coerce_tmp[2217815])
            (2217827 call initWithBorrowedBuffer[948785] ret[2217810] x[1165081])
            (2217830 'move' ret[2217808] ret[2217810])
            (2217833 'move' ret[2217790] ret[2217808])
            gotoReturn _end_localize[2217851] _end_localize[2217851]
          }
          {
            const-val x[2217839]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2217842 call init=[30771] x[2217839] x[1165081])
            (2217845 'move' ret[2217790] x[2217839])
            gotoReturn _end_localize[2217851] _end_localize[2217851]
          }
          label _end_localize[2217851]
          val local_x[2217853]:string[26] "dead at end of block" "insert auto destroy"
          (2217855 'move' local_x[2217853] ret[2217790])
          const-val tmp[2217858]:bool[10] "dead after last mention" "const" "temp"
          (2217860 'move' tmp[2217858](2217862 '.v' local_x[2217853] hasEscapes[30749]))
          if tmp[2217858]
          {
            const-val call_tmp[2217867]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
            (2217869 'move' call_tmp[2217867](2217872 call qio_int_to_err[223546] EILSEQ[224356]))
            (2217874 '=' ret[2217788] call_tmp[2217867])
            ref i_x[2217877]:string[26] "temp"
            (2217879 'move' i_x[2217877](2217881 'set reference' local_x[2217853]))
            (2217884 call deinit[30831] i_x[2217877])
            gotoReturn _end__write_binary_internal[2217968] _end__write_binary_internal[2217968]
          }
          const-val call_tmp[2217889]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217891 'move' call_tmp[2217889](2217894 call qio_channel_str_style[232999] coerce_tmp[1167941]))
          const-val coerce_tmp[2217896]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217898 'move' coerce_tmp[2217896](2217900 '.v' local_x[2217853] locale_id[30754]))
          const-val call_tmp[2217903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217905 'move' call_tmp[2217903](2217907 '!=' coerce_tmp[2217896] chpl_nodeID[208152]))
          if call_tmp[2217903]
          {
            (2217913 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2217916]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217918 'move' coerce_tmp[2217916](2217920 '.v' local_x[2217853] buff[30737]))
          const-val call_tmp[2217923]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217925 'move' call_tmp[2217923](2217927 'cast' c_string[19] coerce_tmp[2217916]))
          val ret[2217930]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2217932 'move' ret[2217930](2217934 '.v' local_x[2217853] buffLen[30719]))
          const-val call_tmp[2217937]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2217939]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217941 'move' coerce_tmp[2217939](2217943 'cast' int(32)[95] 0))
          (2217946 'move' call_tmp[2217937](2217949 call qio_channel_write_string[234301] coerce_tmp[2217939] 1 call_tmp[2217889] coerce_tmp[1167941] call_tmp[2217923] ret[2217930]))
          (2217956 'move' ret[2217788] call_tmp[2217937])
          ref i_x[2217959]:string[26] "temp"
          (2217961 'move' i_x[2217959](2217963 'set reference' local_x[2217853]))
          (2217966 call deinit[30831] i_x[2217959])
          label _end__write_binary_internal[2217968]
          (2217970 '=' e[2217323] ret[2217788])
        }
      }
    }
    {
      const-val call_tmp[2217976]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      (2217978 'move' call_tmp[2217976](2217981 call _write_text_internal[1172755] coerce_tmp[1167941] x[1165081]))
      (2217984 '=' e[2217323] call_tmp[2217976])
    }
    (2217988 'move' ret[2217321] e[2217323])
    label _end__write_one_internal[2217991]
    val errorExists[2056205]:bool[10] "temp"
    (2056210 'move' errorExists[2056205](2056207 '!=' error[1769632] nil[44]))
    if errorExists[2056205]
    {
      (1769638 '=' error_out[1769627] error[1769632])
      gotoErrorHandlingReturn _end_writeOne[1769629] _end_writeOne[1769629]
    }
    const-val call_tmp[2152403]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152405 'move' call_tmp[2152403](2152408 call qio_err_to_int[223528] ret[2217321]))
    const-val call_tmp[2152410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152412 'move' call_tmp[2152410](2152414 '==' call_tmp[2152403] 0))
    const-val call_tmp[2152417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152419 'move' call_tmp[2152417](2152421 '!' call_tmp[2152410]))
    if call_tmp[2152417]
    {
      const-val call_tmp[1165140]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791450]:string[26] "temp"
      (1165148 call _constructIoErrorMsg[1173590] this[1165077] x[1165081] ret_tmp[1791450])
      (1791453 'move' call_tmp[1165140] ret_tmp[1791450])
      val msg[1165151]:string[26] "dead at end of block" "insert auto destroy"
      (1165153 'move' msg[1165151] call_tmp[1165140])
      const-val call_tmp[2152239]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152241 'move' call_tmp[2152239](2152244 call qio_err_to_int[223528] ret[2217321]))
      const-val call_tmp[2152246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152248 'move' call_tmp[2152246](2152250 '==' call_tmp[2152239] EILSEQ[224356]))
      if call_tmp[2152246]
      {
        const-val call_tmp[1165182]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1787015]:string[26] "temp"
        (1165187 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165151] ret_tmp[1787015])
        (1787018 'move' call_tmp[1165182] ret_tmp[1787015])
        (1165191 call =[38269] msg[1165151] call_tmp[1165182])
        ref i_x[2077842]:string[26] "temp"
        (2077846 'move' i_x[2077842](2077844 'set reference' call_tmp[1165182]))
        (2077850 call deinit[30831] i_x[2077842])
      }
      val error[1769646]:Error[167938] "error variable" "temp"
      (1769655 'move' error[1769646] nil[44])
      (1165203 call _ch_ioerror[1062776] this[1165077] ret[2217321] msg[1165151] error[1769646])
      val errorExists[2056213]:bool[10] "temp"
      (2056218 'move' errorExists[2056213](2056215 '!=' error[1769646] nil[44]))
      if errorExists[2056213]
      {
        gotoErrorHandling handler[1769647] handler[1769647]
      }
      label handler[1769647]
      val errorExists[2056221]:bool[10] "temp"
      (2056226 'move' errorExists[2056221](2056223 '!=' error[1769646] nil[44]))
      if errorExists[2056221]
      {
        (1769662 '=' error_out[1769627] error[1769646])
        ref i_x[2077854]:string[26] "temp"
        (2077858 'move' i_x[2077854](2077856 'set reference' msg[1165151]))
        (2077862 call deinit[30831] i_x[2077854])
        gotoErrorHandlingReturn _end_writeOne[1769629] _end_writeOne[1769629]
      }
      ref i_x[2077866]:string[26] "temp"
      (2077870 'move' i_x[2077866](2077868 'set reference' msg[1165151]))
      (2077874 call deinit[30831] i_x[2077866])
    }
    label _end_writeOne[1769629]
    (1165211 return _void[55])
  }
  function channel(true,dynamic,false)[1060858]._writeOne[1173824](const  ref arg this[1173830]:channel(true,dynamic,false)[1060858], const  ref arg x[1173834]:codepointIndex[28274], const  ref arg loc[1173836]:locale[28], ref arg error_out[1769691]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4838[2335652]:string[26] "temp"
    (2335653 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1175121]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175125 'move' coerce_tmp[1175121](2327154 '.v' this[1173830] _channel_internal[1060851]))
    val error[1769696]:Error[167938] "error variable" "temp"
    (1769698 'move' error[1769696] nil[44])
    val ret[2218020]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2218022]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2218024]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2218026]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2218028 'move' call_tmp[2218026](2218031 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2218034 'move' call_tmp[2218024] call_tmp[2218026])
    const-val call_tmp[2218037]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2218039]:locale[28] "temp"
    (2218042 call chpl_localeID_to_locale[92849] call_tmp[2218024] ret_tmp[2218039])
    (2218045 'move' call_tmp[2218037] ret_tmp[2218039])
    (2218048 'move' call_tmp[2218022] call_tmp[2218037])
    const-val call_tmp[2218051]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2218053]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "temp"
    (2218056 call init[1068299] initTemp[2218053] call_tmp[2218022] coerce_tmp[1175121] loc[1173836])
    (2218061 'move' call_tmp[2218051] initTemp[2218053])
    val writer[2218064]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2218066 'move' writer[2218064] call_tmp[2218051])
    const-val call_tmp[2218071]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2218073 'move' call_tmp[2218071](2218076 call qio_int_to_err[223546] 0))
    val error[2218081]:Error[167938] "error variable" "temp"
    (2218083 'move' error[2218081] nil[44])
    (2218087 call writeThis[1175256] x[1173834] writer[2218064] error[2218081])
    val errorExists[2218091]:bool[10] "temp"
    (2218093 'move' errorExists[2218091](2218095 '!=' error[2218081] nil[44]))
    if errorExists[2218091]
    {
      gotoErrorHandling handler[2218103] handler[2218103]
    }
    label handler[2218103]
    val errorExists[2218105]:bool[10] "temp"
    (2218107 'move' errorExists[2218105](2218109 '!=' error[2218081] nil[44]))
    if errorExists[2218105]
    {
      (2218114 '=' error[1769696] error[2218081])
      (2218117 '.=' writer[2218064] _channel_internal[1060851] QIO_CHANNEL_PTR_NULL[231380])
      ref i_x[2218121]:channel(true,dynamic,false)[1060858] "temp"
      (2218123 'move' i_x[2218121](2218125 'set reference' writer[2218064]))
      (2218128 call deinit[1569162] i_x[2218121])
      ref i_x[2218130]:locale[28] "temp"
      (2218132 'move' i_x[2218130](2218134 'set reference' call_tmp[2218022]))
      (2218137 call deinit[90185] i_x[2218130])
      gotoErrorHandlingReturn _end__write_one_internal[2218167] _end__write_one_internal[2218167]
    }
    (2218142 'move' ret[2218020] call_tmp[2218071])
    (2218145 '.=' writer[2218064] _channel_internal[1060851] QIO_CHANNEL_PTR_NULL[231380])
    ref i_x[2218149]:channel(true,dynamic,false)[1060858] "temp"
    (2218151 'move' i_x[2218149](2218153 'set reference' writer[2218064]))
    (2218156 call deinit[1569162] i_x[2218149])
    ref i_x[2218158]:locale[28] "temp"
    (2218160 'move' i_x[2218158](2218162 'set reference' call_tmp[2218022]))
    (2218165 call deinit[90185] i_x[2218158])
    label _end__write_one_internal[2218167]
    val errorExists[2056237]:bool[10] "temp"
    (2056242 'move' errorExists[2056237](2056239 '!=' error[1769696] nil[44]))
    if errorExists[2056237]
    {
      (1769702 '=' error_out[1769691] error[1769696])
      gotoErrorHandlingReturn _end_writeOne[1769693] _end_writeOne[1769693]
    }
    const-val call_tmp[2152426]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152428 'move' call_tmp[2152426](2152431 call qio_err_to_int[223528] ret[2218020]))
    const-val call_tmp[2152433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152435 'move' call_tmp[2152433](2152437 '==' call_tmp[2152426] 0))
    const-val call_tmp[2152440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152442 'move' call_tmp[2152440](2152444 '!' call_tmp[2152433]))
    if call_tmp[2152440]
    {
      const-val call_tmp[1173893]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791464]:string[26] "temp"
      (1173901 call _constructIoErrorMsg[1175308] this[1173830] x[1173834] ret_tmp[1791464])
      (1791467 'move' call_tmp[1173893] ret_tmp[1791464])
      val msg[1173904]:string[26] "dead at end of block" "insert auto destroy"
      (1173906 'move' msg[1173904] call_tmp[1173893])
      const-val call_tmp[2152256]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152258 'move' call_tmp[2152256](2152261 call qio_err_to_int[223528] ret[2218020]))
      const-val call_tmp[2152263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2152265 'move' call_tmp[2152263](2152267 '==' call_tmp[2152256] EILSEQ[224356]))
      if call_tmp[2152263]
      {
        const-val call_tmp[1173935]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1787021]:string[26] "temp"
        (1173940 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1173904] ret_tmp[1787021])
        (1787024 'move' call_tmp[1173935] ret_tmp[1787021])
        (1173944 call =[38269] msg[1173904] call_tmp[1173935])
        ref i_x[2077974]:string[26] "temp"
        (2077978 'move' i_x[2077974](2077976 'set reference' call_tmp[1173935]))
        (2077982 call deinit[30831] i_x[2077974])
      }
      val error[1769710]:Error[167938] "error variable" "temp"
      (1769719 'move' error[1769710] nil[44])
      (1173956 call _ch_ioerror[1062776] this[1173830] ret[2218020] msg[1173904] error[1769710])
      val errorExists[2056245]:bool[10] "temp"
      (2056250 'move' errorExists[2056245](2056247 '!=' error[1769710] nil[44]))
      if errorExists[2056245]
      {
        gotoErrorHandling handler[1769711] handler[1769711]
      }
      label handler[1769711]
      val errorExists[2056253]:bool[10] "temp"
      (2056258 'move' errorExists[2056253](2056255 '!=' error[1769710] nil[44]))
      if errorExists[2056253]
      {
        (1769726 '=' error_out[1769691] error[1769710])
        ref i_x[2077986]:string[26] "temp"
        (2077990 'move' i_x[2077986](2077988 'set reference' msg[1173904]))
        (2077994 call deinit[30831] i_x[2077986])
        gotoErrorHandlingReturn _end_writeOne[1769693] _end_writeOne[1769693]
      }
      ref i_x[2077998]:string[26] "temp"
      (2078002 'move' i_x[2077998](2078000 'set reference' msg[1173904]))
      (2078006 call deinit[30831] i_x[2077998])
    }
    label _end_writeOne[1769693]
    (1173964 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].writeIt[1068697](const  ref arg this[1068703]:channel(true,dynamic,false)[1060858], const in arg x[1068705]:int(64)[13], ref arg error_out[1768752]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2335092]:string[26] "temp"
    (2335093 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2335086]:locale[28] "temp"
    (2335087 'move' local_nilLocale[2335086] nilLocale[89939])
    const-val ret[2209906]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2209908]:locale[28] "dead after last mention" "maybe param" "temp"
    (2209910 'move' call_tmp[2209908](2209912 '.' this[1068703] _readWriteThisFromLocale[1060855]))
    val ret[2209915]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2209917]:locale[28] "dead after last mention" "temp"
    (2209920 call init=[90167] tmp[2209917] call_tmp[2209908])
    (2209923 'move' ret[2209915] tmp[2209917])
    val ret[2209926]:locale[28] "dead at end of block" "insert auto destroy"
    (2209928 'move' ret[2209926] ret[2209915])
    const-val call_tmp[2209931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2209933 'move' call_tmp[2209931](2209936 call ==[782692] ret[2209926] local_nilLocale[2335086]))
    if call_tmp[2209931]
    {
      const-val call_tmp[2209941]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2209943]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2209945]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2209947 'move' call_tmp[2209945](2209950 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2209953 'move' call_tmp[2209943] call_tmp[2209945])
      const-val call_tmp[2209956]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2209958]:locale[28] "temp"
      (2209961 call chpl_localeID_to_locale[92849] call_tmp[2209943] ret_tmp[2209958])
      (2209964 'move' call_tmp[2209956] ret_tmp[2209958])
      (2209967 'move' call_tmp[2209941] call_tmp[2209956])
      (2209971 call =[90631] ret[2209926] call_tmp[2209941])
      ref i_x[2209974]:locale[28] "temp"
      (2209976 'move' i_x[2209974](2209978 'set reference' call_tmp[2209941]))
      (2209981 call deinit[90185] i_x[2209974])
    }
    (2209984 'move' ret[2209906] ret[2209926])
    const-val origLocale[1068750]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068752 'move' origLocale[1068750] ret[2209906])
    ref call_tmp[2208495]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208497 'move' call_tmp[2208495](2208499 '.' this[1068703] home[1060846]))
    const-val call_tmp[1068766]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111943]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111945 'move' coerce_tmp[2111943](2111947 '.v' call_tmp[2208495] _instance[89975]))
    val coerce_tmp[2111950]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111952 'move' coerce_tmp[2111950](2111954 'cast' object[22] coerce_tmp[2111943]))
    const-val call_tmp[2111957]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111959 'move' call_tmp[2111957](2111961 'ptr_eq' coerce_tmp[2111950] nil[44]))
    if call_tmp[2111957]
    {
      (2111967 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1068768 'move' call_tmp[1068766](1068770 '_wide_get_locale' coerce_tmp[2111943]))
    val error[1768757]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768759 'move' error[1768757] nil[44])
    val isdirect[2038411]:bool[10] "temp"
    (2038416 'move' isdirect[2038411](2038413 call chpl_doDirectExecuteOn[187423] call_tmp[1068766]))
    if isdirect[2038411]
    {
      (2038420 call on_fn[1068779] this[1068703] x[1068705] ret[2209906] error[1768757])
    }
    {
      val _args_foron_fn[2038444]:_class_localson_fn[2038430] "temp"
      (2038448 'move' _args_foron_fn[2038444](2038446 'stack allocate class' _class_localson_fn[2038430]))
      (2038450 '.=' _args_foron_fn[2038444] _0_tmp[2038433] call_tmp[1068766])
      ref tmp[2038454]:channel(true,dynamic,false)[1060858] "temp"
      (2038458 'move' tmp[2038454](2038456 'set reference' this[1068703]))
      (2038460 '.=' _args_foron_fn[2038444] _1_this[2038435] tmp[2038454])
      (2038464 '.=' _args_foron_fn[2038444] _2_x[2038437] x[1068705])
      (2038468 '.=' _args_foron_fn[2038444] _3_rvfDerefTmp[2038439] ret[2209906])
      ref tmp[2038472]:Error[167938] "temp"
      (2038476 'move' tmp[2038472](2038474 'set reference' error[1768757]))
      (2038478 '.=' _args_foron_fn[2038444] _4_error[2038441] tmp[2038472])
      val _args_vforon_fn[2038482]:c_void_ptr[149] "temp"
      (2038486 'move' _args_vforon_fn[2038482](2038484 'cast_to_void_star' _args_foron_fn[2038444]))
      val _args_sizeon_fn[2038488]:int(64)[13] "temp"
      (2038492 'move' _args_sizeon_fn[2038488](2038490 'sizeof_bundle' _class_localson_fn[2038430]))
      on(2038548 call wrapon_fn[2038494] call_tmp[1068766] _args_vforon_fn[2038482] _args_sizeon_fn[2038488] _args_foron_fn[2038444])
    }
    val errorExists[2055773]:bool[10] "temp"
    (2055778 'move' errorExists[2055773](2055775 '!=' error[1768757] nil[44]))
    if errorExists[2055773]
    {
      (1768763 '=' error_out[1768752] error[1768757])
      ref i_x[2209136]:locale[28] "temp"
      (2209140 'move' i_x[2209136](2209138 'set reference' origLocale[1068750]))
      (2209144 call deinit[90185] i_x[2209136])
      gotoErrorHandlingReturn _endwriteIt[1768754] _endwriteIt[1768754]
    }
    ref i_x[2209148]:locale[28] "temp"
    (2209152 'move' i_x[2209148](2209150 'set reference' origLocale[1068750]))
    (2209156 call deinit[90185] i_x[2209148])
    label _endwriteIt[1768754]
    (1068823 return _void[55])
  }
  function stringify[958698](const in arg _e0_args[958700]:c_string[19], ref arg _retArg[1788891]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2334678]:string[26] "temp"
    (2334679 'move' "" "")
    const-val ret[958704]:string[26] "dead after last mention" "RVV" "temp"
    val str[958736]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150649]:string[26] "temp"
    (2150652 'move' inlineImm[2150649] "")
    ref i_x[2150654]:string[26] "temp"
    (2150658 'move' i_x[2150654](2150656 'set reference' inlineImm[2150649]))
    val ret[2150661]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150663]:string[26] "dead after last mention" "temp"
    (2150666 call init=[30771] tmp[2150663] i_x[2150654])
    (2150669 'move' ret[2150661] tmp[2150663])
    (958738 'move' str[958736] ret[2150661])
    val error[1767591]:Error[167938] "error variable" "temp"
    (1767607 'move' error[1767591] nil[44])
    const-val call_tmp[963622]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2150247]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2150249 'move' call_tmp[2150247](2150251 'string_length_bytes' _e0_args[958700]))
    val errorExists[2055229]:bool[10] "temp"
    (2055234 'move' errorExists[2055229](2055231 '!=' error[1767591] nil[44]))
    if errorExists[2055229]
    {
      gotoErrorHandling handler[1767592] handler[1767592]
    }
    const-val ret[2087635]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2087637]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087639 'move' call_tmp[2087637](2087641 'cast' c_ptr(uint(8))[937334] _e0_args[958700]))
    val error[2087646]:Error[167938] "error variable" "temp"
    (2087648 'move' error[2087646] nil[44])
    const-val ret[2087651]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2087653]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2087655]:Error[167938] "error variable" "temp"
    (2087657 'move' error[2087655] nil[44])
    const-val ret_tmp[2087660]:string[26] "temp"
    (2087663 call decodeByteBuffer[173892] call_tmp[2087637] call_tmp[2150247] replace[173648] error[2087655] ret_tmp[2087660])
    (2087669 'move' call_tmp[2087653] ret_tmp[2087660])
    val errorExists[2087672]:bool[10] "temp"
    (2087674 'move' errorExists[2087672](2087676 '!=' error[2087655] nil[44]))
    if errorExists[2087672]
    {
      (2087681 '=' error[2087646] error[2087655])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087690] _endcreateStringWithNewBuffer[2087690]
    }
    (2087687 'move' ret[2087651] call_tmp[2087653])
    label _endcreateStringWithNewBuffer[2087690]
    val errorExists[2087695]:bool[10] "temp"
    (2087697 'move' errorExists[2087695](2087699 '!=' error[2087646] nil[44]))
    if errorExists[2087695]
    {
      (2087704 '=' error[1767591] error[2087646])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087713] _endcreateStringWithNewBuffer[2087713]
    }
    (2087710 'move' ret[2087635] ret[2087651])
    label _endcreateStringWithNewBuffer[2087713]
    (1785990 'move' call_tmp[963622] ret[2087635])
    val errorExists[2055237]:bool[10] "temp"
    (2055242 'move' errorExists[2055237](2055239 '!=' error[1767591] nil[44]))
    if errorExists[2055237]
    {
      gotoErrorHandling handler[1767592] handler[1767592]
    }
    (963632 call +=[38797] str[958736] call_tmp[963622])
    ref i_x[2076714]:string[26] "temp"
    (2076718 'move' i_x[2076714](2076716 'set reference' call_tmp[963622]))
    (2076722 call deinit[30831] i_x[2076714])
    label handler[1767592]
    val errorExists[2055245]:bool[10] "temp"
    (2055250 'move' errorExists[2055245](2055247 '!=' error[1767591] nil[44]))
    if errorExists[2055245]
    {
      (1767613 call chpl_uncaught_error[170243] error[1767591])
    }
    (980771 'move' ret[958704] str[958736])
    gotoReturn _end_stringify[959361] _end_stringify[959361]
    label _end_stringify[959361]
    (1788893 '=' _retArg[1788891] ret[958704])
    (1788897 return _void[55])
  }
  function stringify[1056317](const  ref arg _e0_args[1056319]:byteIndex[28170], ref arg _retArg[1789831]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2334976]:int(32)[95] "temp"
    (2334977 'move' local_IOHINT_NONE[2334976] IOHINT_NONE[231323])
    const-val local__str_literal_4777[2334970]:string[26] "temp"
    (2334971 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2334964]:string[26] "temp"
    (2334965 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2334958]:locale[28] "temp"
    (2334959 'move' local_nilLocale[2334958] nilLocale[89939])
    const-val ret[1056323]:string[26] "dead after last mention" "RVV" "temp"
    val error[1767996]:Error[167938] "error variable" "temp"
    (1768181 'move' error[1767996] nil[44])
    const-val call_tmp[1056768]:file[235492] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1060490]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2207994]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2207996 'move' style[2207994](2207999 call defaultIOStyle[235207]))
    (1060494 'move' default_arg_style[1060490] style[2207994])
    val errorExists[2055397]:bool[10] "temp"
    (2055402 'move' errorExists[2055397](2055399 '!=' error[1767996] nil[44]))
    if errorExists[2055397]
    {
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val ret_tmp[1788361]:file[235492] "temp"
    (1056773 call openmem[237537] default_arg_style[1060490] error[1767996] ret_tmp[1788361])
    (1788364 'move' call_tmp[1056768] ret_tmp[1788361])
    val errorExists[2055405]:bool[10] "temp"
    (2055410 'move' errorExists[2055405](2055407 '!=' error[1767996] nil[44]))
    if errorExists[2055405]
    {
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val f[1056774]:file[235492] "dead at end of block" "insert auto destroy"
    (1056776 'move' f[1056774] call_tmp[1056768])
    const-val call_tmp[1056791]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
    val errorExists[2055413]:bool[10] "temp"
    (2055418 'move' errorExists[2055413](2055415 '!=' error[1767996] nil[44]))
    if errorExists[2055413]
    {
      val error[1799628]:Error[167938] "error variable" "temp"
      (1799630 'move' error[1799628] nil[44])
      (1799634 call close[235936] f[1056774] error[1799628])
      val errorExists[2056845]:bool[10] "temp"
      (2056850 'move' errorExists[2056845](2056847 '!=' error[1799628] nil[44]))
      if errorExists[2056845]
      {
        gotoErrorHandling handler[1799645] handler[1799645]
      }
      label handler[1799645]
      val errorExists[2056853]:bool[10] "temp"
      (2056858 'move' errorExists[2056853](2056855 '!=' error[1799628] nil[44]))
      if errorExists[2056853]
      {
        (1799656 call chpl_uncaught_error[170243] error[1799628])
      }
      ref i_x[2283761]:file[235492] "temp"
      (2283765 'move' i_x[2283761](2283763 'set reference' f[1056774]))
      (2283769 call deinit[235803] i_x[2283761])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    val errorExists[2055421]:bool[10] "temp"
    (2055426 'move' errorExists[2055421](2055423 '!=' error[1767996] nil[44]))
    if errorExists[2055421]
    {
      val error[1799664]:Error[167938] "error variable" "temp"
      (1799666 'move' error[1799664] nil[44])
      (1799670 call close[235936] f[1056774] error[1799664])
      val errorExists[2056861]:bool[10] "temp"
      (2056866 'move' errorExists[2056861](2056863 '!=' error[1799664] nil[44]))
      if errorExists[2056861]
      {
        gotoErrorHandling handler[1799681] handler[1799681]
      }
      label handler[1799681]
      val errorExists[2056869]:bool[10] "temp"
      (2056874 'move' errorExists[2056869](2056871 '!=' error[1799664] nil[44]))
      if errorExists[2056869]
      {
        (1799692 call chpl_uncaught_error[170243] error[1799664])
      }
      ref i_x[2283773]:file[235492] "temp"
      (2283777 'move' i_x[2283773](2283775 'set reference' f[1056774]))
      (2283781 call deinit[235803] i_x[2283773])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val tmp[2208198]:int(32)[95] "dead after last mention" "temp"
    (2208200 'move' tmp[2208198](2208202 'cast' int(32)[95] 0))
    val errorExists[2055429]:bool[10] "temp"
    (2055434 'move' errorExists[2055429](2055431 '!=' error[1767996] nil[44]))
    if errorExists[2055429]
    {
      val error[1799700]:Error[167938] "error variable" "temp"
      (1799702 'move' error[1799700] nil[44])
      (1799706 call close[235936] f[1056774] error[1799700])
      val errorExists[2056877]:bool[10] "temp"
      (2056882 'move' errorExists[2056877](2056879 '!=' error[1799700] nil[44]))
      if errorExists[2056877]
      {
        gotoErrorHandling handler[1799717] handler[1799717]
      }
      label handler[1799717]
      val errorExists[2056885]:bool[10] "temp"
      (2056890 'move' errorExists[2056885](2056887 '!=' error[1799700] nil[44]))
      if errorExists[2056885]
      {
        (1799728 call chpl_uncaught_error[170243] error[1799700])
      }
      ref i_x[2283785]:file[235492] "temp"
      (2283789 'move' i_x[2283785](2283787 'set reference' f[1056774]))
      (2283793 call deinit[235803] i_x[2283785])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val default_arg_style[1061249]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2208270]:file[235492] "temp"
    (2208274 'move' i_this[2208270](2208272 'set reference' f[1056774]))
    val ret[2208283]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2208285]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2208287]:Error[167938] "error variable" "temp"
    (2208289 'move' error[2208287] nil[44])
    (2208292 'move' style[2208285](2208295 call _style[235872] i_this[2208270] error[2208287]))
    val errorExists[2208298]:bool[10] "temp"
    (2208300 'move' errorExists[2208298](2208302 '!=' error[2208287] nil[44]))
    if errorExists[2208298]
    {
      (2208307 '=' error[1767996] error[2208287])
      gotoErrorHandlingReturn _endwriter_default_style[2208316] _endwriter_default_style[2208316]
    }
    (2208313 'move' ret[2208283] style[2208285])
    label _endwriter_default_style[2208316]
    (1061255 'move' default_arg_style[1061249] ret[2208283])
    val errorExists[2055437]:bool[10] "temp"
    (2055442 'move' errorExists[2055437](2055439 '!=' error[1767996] nil[44]))
    if errorExists[2055437]
    {
      val error[1799736]:Error[167938] "error variable" "temp"
      (1799738 'move' error[1799736] nil[44])
      (1799742 call close[235936] f[1056774] error[1799736])
      val errorExists[2056893]:bool[10] "temp"
      (2056898 'move' errorExists[2056893](2056895 '!=' error[1799736] nil[44]))
      if errorExists[2056893]
      {
        gotoErrorHandling handler[1799753] handler[1799753]
      }
      label handler[1799753]
      val errorExists[2056901]:bool[10] "temp"
      (2056906 'move' errorExists[2056901](2056903 '!=' error[1799736] nil[44]))
      if errorExists[2056901]
      {
        (1799764 call chpl_uncaught_error[170243] error[1799736])
      }
      ref i_x[2283797]:file[235492] "temp"
      (2283801 'move' i_x[2283797](2283799 'set reference' f[1056774]))
      (2283805 call deinit[235803] i_x[2283797])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val ret_tmp[1789855]:channel(true,dynamic,false)[1060858] "temp"
    (1056799 call writer[1060764] f[1056774] 0 9223372036854775807 tmp[2208198] default_arg_style[1061249] error[1767996] ret_tmp[1789855])
    (1789858 'move' call_tmp[1056791] ret_tmp[1789855])
    val errorExists[2055445]:bool[10] "temp"
    (2055450 'move' errorExists[2055445](2055447 '!=' error[1767996] nil[44]))
    if errorExists[2055445]
    {
      val error[1799772]:Error[167938] "error variable" "temp"
      (1799774 'move' error[1799772] nil[44])
      (1799778 call close[235936] f[1056774] error[1799772])
      val errorExists[2056909]:bool[10] "temp"
      (2056914 'move' errorExists[2056909](2056911 '!=' error[1799772] nil[44]))
      if errorExists[2056909]
      {
        gotoErrorHandling handler[1799789] handler[1799789]
      }
      label handler[1799789]
      val errorExists[2056917]:bool[10] "temp"
      (2056922 'move' errorExists[2056917](2056919 '!=' error[1799772] nil[44]))
      if errorExists[2056917]
      {
        (1799800 call chpl_uncaught_error[170243] error[1799772])
      }
      ref i_x[2283809]:file[235492] "temp"
      (2283813 'move' i_x[2283809](2283811 'set reference' f[1056774]))
      (2283817 call deinit[235803] i_x[2283809])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val w[1056802]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
    (1056804 'move' w[1056802] call_tmp[1056791])
    const-val args[2210239]:1*byteIndex[1056992] "insert auto destroy"
    (2308549 'set svec member' args[2210239] 0 _e0_args[1056319])
    const-val ret[2210252]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2210254]:locale[28] "dead after last mention" "maybe param" "temp"
    (2210256 'move' call_tmp[2210254](2210258 '.' w[1056802] _readWriteThisFromLocale[1060855]))
    val ret[2210261]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2210263]:locale[28] "dead after last mention" "temp"
    (2210266 call init=[90167] tmp[2210263] call_tmp[2210254])
    (2210269 'move' ret[2210261] tmp[2210263])
    val ret[2210272]:locale[28] "dead at end of block" "insert auto destroy"
    (2210274 'move' ret[2210272] ret[2210261])
    const-val call_tmp[2210277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210279 'move' call_tmp[2210277](2210282 call ==[782692] ret[2210272] local_nilLocale[2334958]))
    if call_tmp[2210277]
    {
      const-val call_tmp[2210287]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2210289]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2210291]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2210293 'move' call_tmp[2210291](2210296 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2210299 'move' call_tmp[2210289] call_tmp[2210291])
      const-val call_tmp[2210302]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2210304]:locale[28] "temp"
      (2210307 call chpl_localeID_to_locale[92849] call_tmp[2210289] ret_tmp[2210304])
      (2210310 'move' call_tmp[2210302] ret_tmp[2210304])
      (2210313 'move' call_tmp[2210287] call_tmp[2210302])
      (2210317 call =[90631] ret[2210272] call_tmp[2210287])
      ref i_x[2210320]:locale[28] "temp"
      (2210322 'move' i_x[2210320](2210324 'set reference' call_tmp[2210287]))
      (2210327 call deinit[90185] i_x[2210320])
    }
    (2210330 'move' ret[2210252] ret[2210272])
    const-val origLocale[2210333]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2210335 'move' origLocale[2210333] ret[2210252])
    ref call_tmp[2210340]:locale[28] "dead after last mention" "maybe param" "temp"
    (2210342 'move' call_tmp[2210340](2210344 '.' w[1056802] home[1060846]))
    const-val call_tmp[2210347]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2210349]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2210351 'move' coerce_tmp[2210349](2210353 '.v' call_tmp[2210340] _instance[89975]))
    val coerce_tmp[2210356]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2210358 'move' coerce_tmp[2210356](2210360 'cast' object[22] coerce_tmp[2210349]))
    const-val call_tmp[2210363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210365 'move' call_tmp[2210363](2210367 'ptr_eq' coerce_tmp[2210356] nil[44]))
    if call_tmp[2210363]
    {
      (2210373 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (2210376 'move' call_tmp[2210347](2210378 '_wide_get_locale' coerce_tmp[2210349]))
    val error[2210383]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2210385 'move' error[2210383] nil[44])
    val isdirect[2210399]:bool[10] "temp"
    (2210401 'move' isdirect[2210399](2210404 call chpl_doDirectExecuteOn[187423] call_tmp[2210347]))
    if isdirect[2210399]
    {
      (2210409 call on_fn[1066000] w[1056802] args[2210239] ret[2210252] error[2210383])
    }
    {
      val _args_foron_fn[2210415]:_class_localson_fn[2038288] "temp"
      (2210417 'move' _args_foron_fn[2210415](2210419 'stack allocate class' _class_localson_fn[2038288]))
      (2210421 '.=' _args_foron_fn[2210415] _0_tmp[2038291] call_tmp[2210347])
      (2210425 '.=' _args_foron_fn[2210415] _1_rvfDerefTmp[2038293] w[1056802])
      ref tmp[2210429]:1*byteIndex[1056992] "temp"
      (2210431 'move' tmp[2210429](2210433 'set reference' args[2210239]))
      (2210435 '.=' _args_foron_fn[2210415] _2_args[2038295] tmp[2210429])
      (2210439 '.=' _args_foron_fn[2210415] _3_rvfDerefTmp[2038297] ret[2210252])
      ref tmp[2210443]:Error[167938] "temp"
      (2210445 'move' tmp[2210443](2210447 'set reference' error[2210383]))
      (2210449 '.=' _args_foron_fn[2210415] _4_error[2038299] tmp[2210443])
      val _args_vforon_fn[2210453]:c_void_ptr[149] "temp"
      (2210455 'move' _args_vforon_fn[2210453](2210457 'cast_to_void_star' _args_foron_fn[2210415]))
      val _args_sizeon_fn[2210459]:int(64)[13] "temp"
      (2210461 'move' _args_sizeon_fn[2210459](2210463 'sizeof_bundle' _class_localson_fn[2038288]))
      on(2210466 call wrapon_fn[2038352] call_tmp[2210347] _args_vforon_fn[2210453] _args_sizeon_fn[2210459] _args_foron_fn[2210415])
    }
    val errorExists[2210472]:bool[10] "temp"
    (2210474 'move' errorExists[2210472](2210476 '!=' error[2210383] nil[44]))
    if errorExists[2210472]
    {
      (2210481 '=' error[1767996] error[2210383])
      ref i_x[2210484]:locale[28] "temp"
      (2210486 'move' i_x[2210484](2210488 'set reference' origLocale[2210333]))
      (2210491 call deinit[90185] i_x[2210484])
      gotoErrorHandlingReturn _endwrite[2210508] _endwrite[2210508]
    }
    ref i_x[2210499]:locale[28] "temp"
    (2210501 'move' i_x[2210499](2210503 'set reference' origLocale[2210333]))
    (2210506 call deinit[90185] i_x[2210499])
    label _endwrite[2210508]
    val errorExists[2055453]:bool[10] "temp"
    (2055458 'move' errorExists[2055453](2055455 '!=' error[1767996] nil[44]))
    if errorExists[2055453]
    {
      val error[1799808]:Error[167938] "error variable" "temp"
      (1799810 'move' error[1799808] nil[44])
      (1799814 call close[1062273] w[1056802] error[1799808])
      val errorExists[2056925]:bool[10] "temp"
      (2056930 'move' errorExists[2056925](2056927 '!=' error[1799808] nil[44]))
      if errorExists[2056925]
      {
        gotoErrorHandling handler[1799825] handler[1799825]
      }
      label handler[1799825]
      val errorExists[2056933]:bool[10] "temp"
      (2056938 'move' errorExists[2056933](2056935 '!=' error[1799808] nil[44]))
      if errorExists[2056933]
      {
        (1799836 call chpl_uncaught_error[170243] error[1799808])
      }
      ref i_x[2211837]:channel(true,dynamic,false)[1060858] "temp"
      (2211841 'move' i_x[2211837](2211839 'set reference' w[1056802]))
      (2211845 call deinit[1569162] i_x[2211837])
      val error[1799844]:Error[167938] "error variable" "temp"
      (1799846 'move' error[1799844] nil[44])
      (1799850 call close[235936] f[1056774] error[1799844])
      val errorExists[2056941]:bool[10] "temp"
      (2056946 'move' errorExists[2056941](2056943 '!=' error[1799844] nil[44]))
      if errorExists[2056941]
      {
        gotoErrorHandling handler[1799861] handler[1799861]
      }
      label handler[1799861]
      val errorExists[2056949]:bool[10] "temp"
      (2056954 'move' errorExists[2056949](2056951 '!=' error[1799844] nil[44]))
      if errorExists[2056949]
      {
        (1799872 call chpl_uncaught_error[170243] error[1799844])
      }
      ref i_x[2283821]:file[235492] "temp"
      (2283825 'move' i_x[2283821](2283823 'set reference' f[1056774]))
      (2283829 call deinit[235803] i_x[2283821])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val call_tmp[1056828]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1056830 'move' call_tmp[1056828](1056836 call offset[1080059] w[1056802]))
    const-val call_tmp[2067082]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2067084 'move' call_tmp[2067082](2067086 '+' call_tmp[1056828] 1))
    const-val call_tmp[2212960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212962 'move' call_tmp[2212960](2212964 '<' call_tmp[2067082] 0))
    if call_tmp[2212960]
    {
      (2212970 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2212973]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212975 'move' call_tmp[2212973](2212977 'cast' uint(64)[115] call_tmp[2067082]))
    const-val call_tmp[2212980]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212982 'move' call_tmp[2212980](2212985 call sizeof[1080365] uint(8)[100]))
    const-val call_tmp[2212987]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212989 'move' call_tmp[2212987](2212991 '*' call_tmp[2212973] call_tmp[2212980]))
    const-val call_tmp[2212994]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212996 'move' call_tmp[2212994](2212999 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2213000]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213002 'move' call_tmp[2213000](2213005 call chpl_here_alloc[1080401] call_tmp[2212987] call_tmp[2212994]))
    val call_tmp[2213008]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213010 'move' call_tmp[2213008](2213012 'cast' c_ptr(uint(8))[937334] call_tmp[2213000]))
    val buf[1056866]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    (1056868 'move' buf[1056866] call_tmp[2213008])
    const-val call_tmp[1056872]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
    val errorExists[2055461]:bool[10] "temp"
    (2055466 'move' errorExists[2055461](2055463 '!=' error[1767996] nil[44]))
    if errorExists[2055461]
    {
      val error[1799880]:Error[167938] "error variable" "temp"
      (1799882 'move' error[1799880] nil[44])
      (1799886 call close[1062273] w[1056802] error[1799880])
      val errorExists[2056957]:bool[10] "temp"
      (2056962 'move' errorExists[2056957](2056959 '!=' error[1799880] nil[44]))
      if errorExists[2056957]
      {
        gotoErrorHandling handler[1799897] handler[1799897]
      }
      label handler[1799897]
      val errorExists[2056965]:bool[10] "temp"
      (2056970 'move' errorExists[2056965](2056967 '!=' error[1799880] nil[44]))
      if errorExists[2056965]
      {
        (1799908 call chpl_uncaught_error[170243] error[1799880])
      }
      ref i_x[2211849]:channel(true,dynamic,false)[1060858] "temp"
      (2211853 'move' i_x[2211849](2211851 'set reference' w[1056802]))
      (2211857 call deinit[1569162] i_x[2211849])
      val error[1799916]:Error[167938] "error variable" "temp"
      (1799918 'move' error[1799916] nil[44])
      (1799922 call close[235936] f[1056774] error[1799916])
      val errorExists[2056973]:bool[10] "temp"
      (2056978 'move' errorExists[2056973](2056975 '!=' error[1799916] nil[44]))
      if errorExists[2056973]
      {
        gotoErrorHandling handler[1799933] handler[1799933]
      }
      label handler[1799933]
      val errorExists[2056981]:bool[10] "temp"
      (2056986 'move' errorExists[2056981](2056983 '!=' error[1799916] nil[44]))
      if errorExists[2056981]
      {
        (1799944 call chpl_uncaught_error[170243] error[1799916])
      }
      ref i_x[2283833]:file[235492] "temp"
      (2283837 'move' i_x[2283833](2283835 'set reference' f[1056774]))
      (2283841 call deinit[235803] i_x[2283833])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    val errorExists[2055469]:bool[10] "temp"
    (2055474 'move' errorExists[2055469](2055471 '!=' error[1767996] nil[44]))
    if errorExists[2055469]
    {
      val error[1799952]:Error[167938] "error variable" "temp"
      (1799954 'move' error[1799952] nil[44])
      (1799958 call close[1062273] w[1056802] error[1799952])
      val errorExists[2056989]:bool[10] "temp"
      (2056994 'move' errorExists[2056989](2056991 '!=' error[1799952] nil[44]))
      if errorExists[2056989]
      {
        gotoErrorHandling handler[1799969] handler[1799969]
      }
      label handler[1799969]
      val errorExists[2056997]:bool[10] "temp"
      (2057002 'move' errorExists[2056997](2056999 '!=' error[1799952] nil[44]))
      if errorExists[2056997]
      {
        (1799980 call chpl_uncaught_error[170243] error[1799952])
      }
      ref i_x[2211861]:channel(true,dynamic,false)[1060858] "temp"
      (2211865 'move' i_x[2211861](2211863 'set reference' w[1056802]))
      (2211869 call deinit[1569162] i_x[2211861])
      val error[1799988]:Error[167938] "error variable" "temp"
      (1799990 'move' error[1799988] nil[44])
      (1799994 call close[235936] f[1056774] error[1799988])
      val errorExists[2057005]:bool[10] "temp"
      (2057010 'move' errorExists[2057005](2057007 '!=' error[1799988] nil[44]))
      if errorExists[2057005]
      {
        gotoErrorHandling handler[1800005] handler[1800005]
      }
      label handler[1800005]
      val errorExists[2057013]:bool[10] "temp"
      (2057018 'move' errorExists[2057013](2057015 '!=' error[1799988] nil[44]))
      if errorExists[2057013]
      {
        (1800016 call chpl_uncaught_error[170243] error[1799988])
      }
      ref i_x[2283845]:file[235492] "temp"
      (2283849 'move' i_x[2283845](2283847 'set reference' f[1056774]))
      (2283853 call deinit[235803] i_x[2283845])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val tmp[2213299]:int(32)[95] "dead after last mention" "temp"
    (2213301 'move' tmp[2213299] local_IOHINT_NONE[2334976])
    val errorExists[2055477]:bool[10] "temp"
    (2055482 'move' errorExists[2055477](2055479 '!=' error[1767996] nil[44]))
    if errorExists[2055477]
    {
      val error[1800024]:Error[167938] "error variable" "temp"
      (1800026 'move' error[1800024] nil[44])
      (1800030 call close[1062273] w[1056802] error[1800024])
      val errorExists[2057021]:bool[10] "temp"
      (2057026 'move' errorExists[2057021](2057023 '!=' error[1800024] nil[44]))
      if errorExists[2057021]
      {
        gotoErrorHandling handler[1800041] handler[1800041]
      }
      label handler[1800041]
      val errorExists[2057029]:bool[10] "temp"
      (2057034 'move' errorExists[2057029](2057031 '!=' error[1800024] nil[44]))
      if errorExists[2057029]
      {
        (1800052 call chpl_uncaught_error[170243] error[1800024])
      }
      ref i_x[2211873]:channel(true,dynamic,false)[1060858] "temp"
      (2211877 'move' i_x[2211873](2211875 'set reference' w[1056802]))
      (2211881 call deinit[1569162] i_x[2211873])
      val error[1800060]:Error[167938] "error variable" "temp"
      (1800062 'move' error[1800060] nil[44])
      (1800066 call close[235936] f[1056774] error[1800060])
      val errorExists[2057037]:bool[10] "temp"
      (2057042 'move' errorExists[2057037](2057039 '!=' error[1800060] nil[44]))
      if errorExists[2057037]
      {
        gotoErrorHandling handler[1800077] handler[1800077]
      }
      label handler[1800077]
      val errorExists[2057045]:bool[10] "temp"
      (2057050 'move' errorExists[2057045](2057047 '!=' error[1800060] nil[44]))
      if errorExists[2057045]
      {
        (1800088 call chpl_uncaught_error[170243] error[1800060])
      }
      ref i_x[2283857]:file[235492] "temp"
      (2283861 'move' i_x[2283857](2283859 'set reference' f[1056774]))
      (2283865 call deinit[235803] i_x[2283857])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val default_arg_style[1080981]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2213365]:file[235492] "temp"
    (2213369 'move' i_this[2213365](2213367 'set reference' f[1056774]))
    val ret[2213378]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2213380]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2213382]:Error[167938] "error variable" "temp"
    (2213384 'move' error[2213382] nil[44])
    (2213387 'move' style[2213380](2213390 call _style[235872] i_this[2213365] error[2213382]))
    val errorExists[2213393]:bool[10] "temp"
    (2213395 'move' errorExists[2213393](2213397 '!=' error[2213382] nil[44]))
    if errorExists[2213393]
    {
      (2213402 '=' error[1767996] error[2213382])
      gotoErrorHandlingReturn _endreader_default_style[2213411] _endreader_default_style[2213411]
    }
    (2213408 'move' ret[2213378] style[2213380])
    label _endreader_default_style[2213411]
    (1080987 'move' default_arg_style[1080981] ret[2213378])
    val errorExists[2055485]:bool[10] "temp"
    (2055490 'move' errorExists[2055485](2055487 '!=' error[1767996] nil[44]))
    if errorExists[2055485]
    {
      val error[1800096]:Error[167938] "error variable" "temp"
      (1800098 'move' error[1800096] nil[44])
      (1800102 call close[1062273] w[1056802] error[1800096])
      val errorExists[2057053]:bool[10] "temp"
      (2057058 'move' errorExists[2057053](2057055 '!=' error[1800096] nil[44]))
      if errorExists[2057053]
      {
        gotoErrorHandling handler[1800113] handler[1800113]
      }
      label handler[1800113]
      val errorExists[2057061]:bool[10] "temp"
      (2057066 'move' errorExists[2057061](2057063 '!=' error[1800096] nil[44]))
      if errorExists[2057061]
      {
        (1800124 call chpl_uncaught_error[170243] error[1800096])
      }
      ref i_x[2211885]:channel(true,dynamic,false)[1060858] "temp"
      (2211889 'move' i_x[2211885](2211887 'set reference' w[1056802]))
      (2211893 call deinit[1569162] i_x[2211885])
      val error[1800132]:Error[167938] "error variable" "temp"
      (1800134 'move' error[1800132] nil[44])
      (1800138 call close[235936] f[1056774] error[1800132])
      val errorExists[2057069]:bool[10] "temp"
      (2057074 'move' errorExists[2057069](2057071 '!=' error[1800132] nil[44]))
      if errorExists[2057069]
      {
        gotoErrorHandling handler[1800149] handler[1800149]
      }
      label handler[1800149]
      val errorExists[2057077]:bool[10] "temp"
      (2057082 'move' errorExists[2057077](2057079 '!=' error[1800132] nil[44]))
      if errorExists[2057077]
      {
        (1800160 call chpl_uncaught_error[170243] error[1800132])
      }
      ref i_x[2283869]:file[235492] "temp"
      (2283873 'move' i_x[2283869](2283871 'set reference' f[1056774]))
      (2283877 call deinit[235803] i_x[2283869])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val ret_tmp[1790245]:channel(false,dynamic,false)[1080593] "temp"
    (1056880 call reader[1080499] f[1056774] 0 9223372036854775807 tmp[2213299] default_arg_style[1080981] error[1767996] ret_tmp[1790245])
    (1790248 'move' call_tmp[1056872] ret_tmp[1790245])
    val errorExists[2055493]:bool[10] "temp"
    (2055498 'move' errorExists[2055493](2055495 '!=' error[1767996] nil[44]))
    if errorExists[2055493]
    {
      val error[1800168]:Error[167938] "error variable" "temp"
      (1800170 'move' error[1800168] nil[44])
      (1800174 call close[1062273] w[1056802] error[1800168])
      val errorExists[2057085]:bool[10] "temp"
      (2057090 'move' errorExists[2057085](2057087 '!=' error[1800168] nil[44]))
      if errorExists[2057085]
      {
        gotoErrorHandling handler[1800185] handler[1800185]
      }
      label handler[1800185]
      val errorExists[2057093]:bool[10] "temp"
      (2057098 'move' errorExists[2057093](2057095 '!=' error[1800168] nil[44]))
      if errorExists[2057093]
      {
        (1800196 call chpl_uncaught_error[170243] error[1800168])
      }
      ref i_x[2211897]:channel(true,dynamic,false)[1060858] "temp"
      (2211901 'move' i_x[2211897](2211899 'set reference' w[1056802]))
      (2211905 call deinit[1569162] i_x[2211897])
      val error[1800204]:Error[167938] "error variable" "temp"
      (1800206 'move' error[1800204] nil[44])
      (1800210 call close[235936] f[1056774] error[1800204])
      val errorExists[2057101]:bool[10] "temp"
      (2057106 'move' errorExists[2057101](2057103 '!=' error[1800204] nil[44]))
      if errorExists[2057101]
      {
        gotoErrorHandling handler[1800221] handler[1800221]
      }
      label handler[1800221]
      val errorExists[2057109]:bool[10] "temp"
      (2057114 'move' errorExists[2057109](2057111 '!=' error[1800204] nil[44]))
      if errorExists[2057109]
      {
        (1800232 call chpl_uncaught_error[170243] error[1800204])
      }
      ref i_x[2283881]:file[235492] "temp"
      (2283885 'move' i_x[2283881](2283883 'set reference' f[1056774]))
      (2283889 call deinit[235803] i_x[2283881])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val r[1056883]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
    (1056885 'move' r[1056883] call_tmp[1056872])
    (1056912 call readBytes[1082750] r[1056883] call_tmp[2213008] call_tmp[1056828] error[1767996])
    val errorExists[2055501]:bool[10] "temp"
    (2055506 'move' errorExists[2055501](2055503 '!=' error[1767996] nil[44]))
    if errorExists[2055501]
    {
      val error[1800240]:Error[167938] "error variable" "temp"
      (1800242 'move' error[1800240] nil[44])
      (1800246 call close[1082005] r[1056883] error[1800240])
      val errorExists[2057117]:bool[10] "temp"
      (2057122 'move' errorExists[2057117](2057119 '!=' error[1800240] nil[44]))
      if errorExists[2057117]
      {
        gotoErrorHandling handler[1800257] handler[1800257]
      }
      label handler[1800257]
      val errorExists[2057125]:bool[10] "temp"
      (2057130 'move' errorExists[2057125](2057127 '!=' error[1800240] nil[44]))
      if errorExists[2057125]
      {
        (1800268 call chpl_uncaught_error[170243] error[1800240])
      }
      ref i_x[2287156]:channel(false,dynamic,false)[1080593] "temp"
      (2287160 'move' i_x[2287156](2287158 'set reference' r[1056883]))
      (2287164 call deinit[1573416] i_x[2287156])
      val error[1800276]:Error[167938] "error variable" "temp"
      (1800278 'move' error[1800276] nil[44])
      (1800282 call close[1062273] w[1056802] error[1800276])
      val errorExists[2057133]:bool[10] "temp"
      (2057138 'move' errorExists[2057133](2057135 '!=' error[1800276] nil[44]))
      if errorExists[2057133]
      {
        gotoErrorHandling handler[1800293] handler[1800293]
      }
      label handler[1800293]
      val errorExists[2057141]:bool[10] "temp"
      (2057146 'move' errorExists[2057141](2057143 '!=' error[1800276] nil[44]))
      if errorExists[2057141]
      {
        (1800304 call chpl_uncaught_error[170243] error[1800276])
      }
      ref i_x[2211909]:channel(true,dynamic,false)[1060858] "temp"
      (2211913 'move' i_x[2211909](2211911 'set reference' w[1056802]))
      (2211917 call deinit[1569162] i_x[2211909])
      val error[1800312]:Error[167938] "error variable" "temp"
      (1800314 'move' error[1800312] nil[44])
      (1800318 call close[235936] f[1056774] error[1800312])
      val errorExists[2057149]:bool[10] "temp"
      (2057154 'move' errorExists[2057149](2057151 '!=' error[1800312] nil[44]))
      if errorExists[2057149]
      {
        gotoErrorHandling handler[1800329] handler[1800329]
      }
      label handler[1800329]
      val errorExists[2057157]:bool[10] "temp"
      (2057162 'move' errorExists[2057157](2057159 '!=' error[1800312] nil[44]))
      if errorExists[2057157]
      {
        (1800340 call chpl_uncaught_error[170243] error[1800312])
      }
      ref i_x[2283893]:file[235492] "temp"
      (2283897 'move' i_x[2283893](2283895 'set reference' f[1056774]))
      (2283901 call deinit[235803] i_x[2283893])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    ref call_tmp[2141876]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2141878 'move' call_tmp[2141876](2141880 'array_get' buf[1056866] call_tmp[1056828]))
    const-val coerce_tmp[1083243]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083249 'move' coerce_tmp[1083243](1083245 'cast' uint(8)[100] 0))
    (2142356 '=' call_tmp[2141876] coerce_tmp[1083243])
    const-val ret[2086770]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2086772]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2086774]:Error[167938] "error variable" "temp"
    (2086776 'move' error[2086774] nil[44])
    const-val ret_tmp[2086779]:string[26] "temp"
    (2086782 call decodeByteBuffer[173892] call_tmp[2213008] call_tmp[1056828] replace[173648] error[2086774] ret_tmp[2086779])
    (2086788 'move' call_tmp[2086772] ret_tmp[2086779])
    val errorExists[2086791]:bool[10] "temp"
    (2086793 'move' errorExists[2086791](2086795 '!=' error[2086774] nil[44]))
    if errorExists[2086791]
    {
      (2086800 '=' error[1767996] error[2086774])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2086809] _endcreateStringWithNewBuffer[2086809]
    }
    (2086806 'move' ret[2086770] call_tmp[2086772])
    label _endcreateStringWithNewBuffer[2086809]
    val errorExists[2055509]:bool[10] "temp"
    (2055514 'move' errorExists[2055509](2055511 '!=' error[1767996] nil[44]))
    if errorExists[2055509]
    {
      val error[1800348]:Error[167938] "error variable" "temp"
      (1800350 'move' error[1800348] nil[44])
      (1800354 call close[1082005] r[1056883] error[1800348])
      val errorExists[2057165]:bool[10] "temp"
      (2057170 'move' errorExists[2057165](2057167 '!=' error[1800348] nil[44]))
      if errorExists[2057165]
      {
        gotoErrorHandling handler[1800365] handler[1800365]
      }
      label handler[1800365]
      val errorExists[2057173]:bool[10] "temp"
      (2057178 'move' errorExists[2057173](2057175 '!=' error[1800348] nil[44]))
      if errorExists[2057173]
      {
        (1800376 call chpl_uncaught_error[170243] error[1800348])
      }
      ref i_x[2287168]:channel(false,dynamic,false)[1080593] "temp"
      (2287172 'move' i_x[2287168](2287170 'set reference' r[1056883]))
      (2287176 call deinit[1573416] i_x[2287168])
      val error[1800384]:Error[167938] "error variable" "temp"
      (1800386 'move' error[1800384] nil[44])
      (1800390 call close[1062273] w[1056802] error[1800384])
      val errorExists[2057181]:bool[10] "temp"
      (2057186 'move' errorExists[2057181](2057183 '!=' error[1800384] nil[44]))
      if errorExists[2057181]
      {
        gotoErrorHandling handler[1800401] handler[1800401]
      }
      label handler[1800401]
      val errorExists[2057189]:bool[10] "temp"
      (2057194 'move' errorExists[2057189](2057191 '!=' error[1800384] nil[44]))
      if errorExists[2057189]
      {
        (1800412 call chpl_uncaught_error[170243] error[1800384])
      }
      ref i_x[2211921]:channel(true,dynamic,false)[1060858] "temp"
      (2211925 'move' i_x[2211921](2211923 'set reference' w[1056802]))
      (2211929 call deinit[1569162] i_x[2211921])
      val error[1800420]:Error[167938] "error variable" "temp"
      (1800422 'move' error[1800420] nil[44])
      (1800426 call close[235936] f[1056774] error[1800420])
      val errorExists[2057197]:bool[10] "temp"
      (2057202 'move' errorExists[2057197](2057199 '!=' error[1800420] nil[44]))
      if errorExists[2057197]
      {
        gotoErrorHandling handler[1800437] handler[1800437]
      }
      label handler[1800437]
      val errorExists[2057205]:bool[10] "temp"
      (2057210 'move' errorExists[2057205](2057207 '!=' error[1800420] nil[44]))
      if errorExists[2057205]
      {
        (1800448 call chpl_uncaught_error[170243] error[1800420])
      }
      ref i_x[2283905]:file[235492] "temp"
      (2283909 'move' i_x[2283905](2283907 'set reference' f[1056774]))
      (2283913 call deinit[235803] i_x[2283905])
      gotoErrorHandling handler[1767997] handler[1767997]
    }
    const-val coerce_tmp[1083254]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083260 'move' coerce_tmp[1083254](1083256 'cast' c_void_ptr[149] call_tmp[2213008]))
    (2149950 call chpl_here_free[188081] coerce_tmp[1083254])
    (1083265 'move' ret[1056323] ret[2086770])
    val error[1800456]:Error[167938] "error variable" "temp"
    (1800458 'move' error[1800456] nil[44])
    (1800462 call close[1082005] r[1056883] error[1800456])
    val errorExists[2057213]:bool[10] "temp"
    (2057218 'move' errorExists[2057213](2057215 '!=' error[1800456] nil[44]))
    if errorExists[2057213]
    {
      gotoErrorHandling handler[1800473] handler[1800473]
    }
    label handler[1800473]
    val errorExists[2057221]:bool[10] "temp"
    (2057226 'move' errorExists[2057221](2057223 '!=' error[1800456] nil[44]))
    if errorExists[2057221]
    {
      (1800484 call chpl_uncaught_error[170243] error[1800456])
    }
    ref i_x[2287180]:channel(false,dynamic,false)[1080593] "temp"
    (2287184 'move' i_x[2287180](2287182 'set reference' r[1056883]))
    (2287188 call deinit[1573416] i_x[2287180])
    val error[1800492]:Error[167938] "error variable" "temp"
    (1800494 'move' error[1800492] nil[44])
    (1800498 call close[1062273] w[1056802] error[1800492])
    val errorExists[2057229]:bool[10] "temp"
    (2057234 'move' errorExists[2057229](2057231 '!=' error[1800492] nil[44]))
    if errorExists[2057229]
    {
      gotoErrorHandling handler[1800509] handler[1800509]
    }
    label handler[1800509]
    val errorExists[2057237]:bool[10] "temp"
    (2057242 'move' errorExists[2057237](2057239 '!=' error[1800492] nil[44]))
    if errorExists[2057237]
    {
      (1800520 call chpl_uncaught_error[170243] error[1800492])
    }
    ref i_x[2211933]:channel(true,dynamic,false)[1060858] "temp"
    (2211937 'move' i_x[2211933](2211935 'set reference' w[1056802]))
    (2211941 call deinit[1569162] i_x[2211933])
    val error[1800528]:Error[167938] "error variable" "temp"
    (1800530 'move' error[1800528] nil[44])
    (1800534 call close[235936] f[1056774] error[1800528])
    val errorExists[2057245]:bool[10] "temp"
    (2057250 'move' errorExists[2057245](2057247 '!=' error[1800528] nil[44]))
    if errorExists[2057245]
    {
      gotoErrorHandling handler[1800545] handler[1800545]
    }
    label handler[1800545]
    val errorExists[2057253]:bool[10] "temp"
    (2057258 'move' errorExists[2057253](2057255 '!=' error[1800528] nil[44]))
    if errorExists[2057253]
    {
      (1800556 call chpl_uncaught_error[170243] error[1800528])
    }
    ref i_x[2283917]:file[235492] "temp"
    (2283921 'move' i_x[2283917](2283919 'set reference' f[1056774]))
    (2283925 call deinit[235803] i_x[2283917])
    gotoReturn _end_stringify[1056980] _end_stringify[1056980]
    label handler[1767997]
    val errorExists[2055517]:bool[10] "temp"
    (2055522 'move' errorExists[2055517](2055519 '!=' error[1767996] nil[44]))
    if errorExists[2055517]
    {
      (1768187 call chpl_uncaught_error[170243] error[1767996])
    }
    label _end_stringify[1056980]
    (1789833 '=' _retArg[1789831] ret[1056323])
    (1789835 return _void[55])
  }
  function stringify[1416206](const  ref arg _e0_args[1416208]:string[26], ref arg _retArg[1795246]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336596]:string[26] "temp"
    (2336597 'move' "" "")
    const-val ret[1416212]:string[26] "dead after last mention" "RVV" "temp"
    val str[1416244]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2151088]:string[26] "temp"
    (2151091 'move' inlineImm[2151088] "")
    ref i_x[2151093]:string[26] "temp"
    (2151097 'move' i_x[2151093](2151095 'set reference' inlineImm[2151088]))
    val ret[2151100]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151102]:string[26] "dead after last mention" "temp"
    (2151105 call init=[30771] tmp[2151102] i_x[2151093])
    (2151108 'move' ret[2151100] tmp[2151102])
    (1416246 'move' str[1416244] ret[2151100])
    (1419811 call +=[38797] str[1416244] _e0_args[1416208])
    (1420148 'move' ret[1416212] str[1416244])
    gotoReturn _end_stringify[1416869] _end_stringify[1416869]
    label _end_stringify[1416869]
    (1795248 '=' _retArg[1795246] ret[1416212])
    (1795252 return _void[55])
  }
  function stringify[1043613](const  ref arg _e0_args[1043615]:string[26], const in arg _e1_args[1043617]:range(byteIndex,bounded,false)[1025703], const  ref arg _e2_args[1043619]:string[26], const in arg _e3_args[1043621]:int(64)[13], ref arg _retArg[1789749]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2334946]:string[26] "temp"
    (2334947 'move' "" "")
    const-val ret[1043625]:string[26] "dead after last mention" "RVV" "temp"
    val str[1043666]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150688]:string[26] "temp"
    (2150691 'move' inlineImm[2150688] "")
    ref i_x[2150693]:string[26] "temp"
    (2150697 'move' i_x[2150693](2150695 'set reference' inlineImm[2150688]))
    val ret[2150700]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150702]:string[26] "dead after last mention" "temp"
    (2150705 call init=[30771] tmp[2150702] i_x[2150693])
    (2150708 'move' ret[2150700] tmp[2150702])
    (1043668 'move' str[1043666] ret[2150700])
    (1052799 call +=[38797] str[1043666] _e0_args[1043615])
    const-val call_tmp[1053374]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789783]:string[26] "temp"
    (1053379 call _cast[1054269] _e1_args[1043617] ret_tmp[1789783])
    (1789786 'move' call_tmp[1053374] ret_tmp[1789783])
    (1053383 call +=[38797] str[1043666] call_tmp[1053374])
    ref i_x[2077098]:string[26] "temp"
    (2077102 'move' i_x[2077098](2077100 'set reference' call_tmp[1053374]))
    (2077106 call deinit[30831] i_x[2077098])
    (1053489 call +=[38797] str[1043666] _e2_args[1043619])
    const-val call_tmp[1054064]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789909]:string[26] "temp"
    (1054069 call _cast[1063064] _e3_args[1043621] ret_tmp[1789909])
    (1789912 'move' call_tmp[1054064] ret_tmp[1789909])
    (1054073 call +=[38797] str[1043666] call_tmp[1054064])
    ref i_x[2077110]:string[26] "temp"
    (2077114 'move' i_x[2077110](2077112 'set reference' call_tmp[1054064]))
    (2077118 call deinit[30831] i_x[2077110])
    (1084774 'move' ret[1043625] str[1043666])
    gotoReturn _end_stringify[1044291] _end_stringify[1044291]
    label _end_stringify[1044291]
    (1789751 '=' _retArg[1789749] ret[1043625])
    (1789757 return _void[55])
  }
  function stringify[1113431](const  ref arg _e0_args[1113433]:string[26], const in arg _e1_args[1113435]:range(int(64),bounded,false)[1026725], const  ref arg _e2_args[1113437]:string[26], const in arg _e3_args[1113439]:int(64)[13], ref arg _retArg[1790810]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2335437]:string[26] "temp"
    (2335438 'move' "" "")
    const-val ret[1113443]:string[26] "dead after last mention" "RVV" "temp"
    val str[1113484]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150788]:string[26] "temp"
    (2150791 'move' inlineImm[2150788] "")
    ref i_x[2150793]:string[26] "temp"
    (2150797 'move' i_x[2150793](2150795 'set reference' inlineImm[2150788]))
    val ret[2150800]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150802]:string[26] "dead after last mention" "temp"
    (2150805 call init=[30771] tmp[2150802] i_x[2150793])
    (2150808 'move' ret[2150800] tmp[2150802])
    (1113486 'move' str[1113484] ret[2150800])
    (1117878 call +=[38797] str[1113484] _e0_args[1113433])
    const-val call_tmp[1118453]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790832]:string[26] "temp"
    (1118458 call _cast[1119348] _e1_args[1113435] ret_tmp[1790832])
    (1790835 'move' call_tmp[1118453] ret_tmp[1790832])
    (1118462 call +=[38797] str[1113484] call_tmp[1118453])
    ref i_x[2077602]:string[26] "temp"
    (2077606 'move' i_x[2077602](2077604 'set reference' call_tmp[1118453]))
    (2077610 call deinit[30831] i_x[2077602])
    (1118568 call +=[38797] str[1113484] _e2_args[1113437])
    const-val call_tmp[1119143]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789933]:string[26] "temp"
    (1119148 call _cast[1063064] _e3_args[1113439] ret_tmp[1789933])
    (1789936 'move' call_tmp[1119143] ret_tmp[1789933])
    (1119152 call +=[38797] str[1113484] call_tmp[1119143])
    ref i_x[2077614]:string[26] "temp"
    (2077618 'move' i_x[2077614](2077616 'set reference' call_tmp[1119143]))
    (2077622 call deinit[30831] i_x[2077614])
    (1120810 'move' ret[1113443] str[1113484])
    gotoReturn _end_stringify[1114109] _end_stringify[1114109]
    label _end_stringify[1114109]
    (1790812 '=' _retArg[1790810] ret[1113443])
    (1790818 return _void[55])
  }
  function stringify[1128255](const  ref arg _e0_args[1128257]:string[26], const in arg _e1_args[1128259]:range(int(64),boundedLow,false)[1087476], const  ref arg _e2_args[1128261]:string[26], const in arg _e3_args[1128263]:int(64)[13], ref arg _retArg[1791104]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2335494]:string[26] "temp"
    (2335495 'move' "" "")
    const-val ret[1128267]:string[26] "dead after last mention" "RVV" "temp"
    val str[1128308]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150813]:string[26] "temp"
    (2150816 'move' inlineImm[2150813] "")
    ref i_x[2150818]:string[26] "temp"
    (2150822 'move' i_x[2150818](2150820 'set reference' inlineImm[2150813]))
    val ret[2150825]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150827]:string[26] "dead after last mention" "temp"
    (2150830 call init=[30771] tmp[2150827] i_x[2150818])
    (2150833 'move' ret[2150825] tmp[2150827])
    (1128310 'move' str[1128308] ret[2150825])
    (1134401 call +=[38797] str[1128308] _e0_args[1128257])
    const-val call_tmp[1134976]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791126]:string[26] "temp"
    (1134981 call _cast[1135871] _e1_args[1128259] ret_tmp[1791126])
    (1791129 'move' call_tmp[1134976] ret_tmp[1791126])
    (1134985 call +=[38797] str[1128308] call_tmp[1134976])
    ref i_x[2077674]:string[26] "temp"
    (2077678 'move' i_x[2077674](2077676 'set reference' call_tmp[1134976]))
    (2077682 call deinit[30831] i_x[2077674])
    (1135091 call +=[38797] str[1128308] _e2_args[1128261])
    const-val call_tmp[1135666]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789951]:string[26] "temp"
    (1135671 call _cast[1063064] _e3_args[1128263] ret_tmp[1789951])
    (1789954 'move' call_tmp[1135666] ret_tmp[1789951])
    (1135675 call +=[38797] str[1128308] call_tmp[1135666])
    ref i_x[2077686]:string[26] "temp"
    (2077690 'move' i_x[2077686](2077688 'set reference' call_tmp[1135666]))
    (2077694 call deinit[30831] i_x[2077686])
    (1138864 'move' ret[1128267] str[1128308])
    gotoReturn _end_stringify[1128933] _end_stringify[1128933]
    label _end_stringify[1128933]
    (1791106 '=' _retArg[1791104] ret[1128267])
    (1791112 return _void[55])
  }
  function stringify[1146426](const  ref arg _e0_args[1146428]:string[26], const in arg _e1_args[1146430]:range(byteIndex,boundedLow,false)[1143314], const  ref arg _e2_args[1146432]:string[26], const in arg _e3_args[1146434]:int(64)[13], ref arg _retArg[1791368]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2335542]:string[26] "temp"
    (2335543 'move' "" "")
    const-val ret[1146438]:string[26] "dead after last mention" "RVV" "temp"
    val str[1146479]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150838]:string[26] "temp"
    (2150841 'move' inlineImm[2150838] "")
    ref i_x[2150843]:string[26] "temp"
    (2150847 'move' i_x[2150843](2150845 'set reference' inlineImm[2150838]))
    val ret[2150850]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150852]:string[26] "dead after last mention" "temp"
    (2150855 call init=[30771] tmp[2150852] i_x[2150843])
    (2150858 'move' ret[2150850] tmp[2150852])
    (1146481 'move' str[1146479] ret[2150850])
    (1152865 call +=[38797] str[1146479] _e0_args[1146428])
    const-val call_tmp[1153440]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791408]:string[26] "temp"
    (1153445 call _cast[1154335] _e1_args[1146430] ret_tmp[1791408])
    (1791411 'move' call_tmp[1153440] ret_tmp[1791408])
    (1153449 call +=[38797] str[1146479] call_tmp[1153440])
    ref i_x[2077758]:string[26] "temp"
    (2077762 'move' i_x[2077758](2077760 'set reference' call_tmp[1153440]))
    (2077766 call deinit[30831] i_x[2077758])
    (1153555 call +=[38797] str[1146479] _e2_args[1146432])
    const-val call_tmp[1154130]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789969]:string[26] "temp"
    (1154135 call _cast[1063064] _e3_args[1146434] ret_tmp[1789969])
    (1789972 'move' call_tmp[1154130] ret_tmp[1789969])
    (1154139 call +=[38797] str[1146479] call_tmp[1154130])
    ref i_x[2077770]:string[26] "temp"
    (2077774 'move' i_x[2077770](2077772 'set reference' call_tmp[1154130]))
    (2077778 call deinit[30831] i_x[2077770])
    (1156185 'move' ret[1146438] str[1146479])
    gotoReturn _end_stringify[1147104] _end_stringify[1147104]
    label _end_stringify[1147104]
    (1791370 '=' _retArg[1791368] ret[1146438])
    (1791376 return _void[55])
  }
  function stringify[1175732](const  ref arg _e0_args[1175734]:string[26], const  ref arg _e1_args[1175736]:codepointIndex[28274], const  ref arg _e2_args[1175738]:string[26], const in arg _e3_args[1175740]:int(64)[13], ref arg _retArg[1791484]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2335706]:int(32)[95] "temp"
    (2335707 'move' local_IOHINT_NONE[2335706] IOHINT_NONE[231323])
    const-val local__str_literal_4777[2335700]:string[26] "temp"
    (2335701 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2335694]:string[26] "temp"
    (2335695 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2335688]:locale[28] "temp"
    (2335689 'move' local_nilLocale[2335688] nilLocale[89939])
    const-val ret[1175744]:string[26] "dead after last mention" "RVV" "temp"
    val error[1769787]:Error[167938] "error variable" "temp"
    (1769972 'move' error[1769787] nil[44])
    const-val call_tmp[1176198]:file[235492] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1179536]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2208038]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2208040 'move' style[2208038](2208043 call defaultIOStyle[235207]))
    (1179540 'move' default_arg_style[1179536] style[2208038])
    val errorExists[2056285]:bool[10] "temp"
    (2056290 'move' errorExists[2056285](2056287 '!=' error[1769787] nil[44]))
    if errorExists[2056285]
    {
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val ret_tmp[1788373]:file[235492] "temp"
    (1176203 call openmem[237537] default_arg_style[1179536] error[1769787] ret_tmp[1788373])
    (1788376 'move' call_tmp[1176198] ret_tmp[1788373])
    val errorExists[2056293]:bool[10] "temp"
    (2056298 'move' errorExists[2056293](2056295 '!=' error[1769787] nil[44]))
    if errorExists[2056293]
    {
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val f[1176204]:file[235492] "dead at end of block" "insert auto destroy"
    (1176206 'move' f[1176204] call_tmp[1176198])
    const-val call_tmp[1176221]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
    val errorExists[2056301]:bool[10] "temp"
    (2056306 'move' errorExists[2056301](2056303 '!=' error[1769787] nil[44]))
    if errorExists[2056301]
    {
      val error[1802490]:Error[167938] "error variable" "temp"
      (1802492 'move' error[1802490] nil[44])
      (1802496 call close[235936] f[1176204] error[1802490])
      val errorExists[2057677]:bool[10] "temp"
      (2057682 'move' errorExists[2057677](2057679 '!=' error[1802490] nil[44]))
      if errorExists[2057677]
      {
        gotoErrorHandling handler[1802507] handler[1802507]
      }
      label handler[1802507]
      val errorExists[2057685]:bool[10] "temp"
      (2057690 'move' errorExists[2057685](2057687 '!=' error[1802490] nil[44]))
      if errorExists[2057685]
      {
        (1802518 call chpl_uncaught_error[170243] error[1802490])
      }
      ref i_x[2284097]:file[235492] "temp"
      (2284101 'move' i_x[2284097](2284099 'set reference' f[1176204]))
      (2284105 call deinit[235803] i_x[2284097])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    val errorExists[2056309]:bool[10] "temp"
    (2056314 'move' errorExists[2056309](2056311 '!=' error[1769787] nil[44]))
    if errorExists[2056309]
    {
      val error[1802526]:Error[167938] "error variable" "temp"
      (1802528 'move' error[1802526] nil[44])
      (1802532 call close[235936] f[1176204] error[1802526])
      val errorExists[2057693]:bool[10] "temp"
      (2057698 'move' errorExists[2057693](2057695 '!=' error[1802526] nil[44]))
      if errorExists[2057693]
      {
        gotoErrorHandling handler[1802543] handler[1802543]
      }
      label handler[1802543]
      val errorExists[2057701]:bool[10] "temp"
      (2057706 'move' errorExists[2057701](2057703 '!=' error[1802526] nil[44]))
      if errorExists[2057701]
      {
        (1802554 call chpl_uncaught_error[170243] error[1802526])
      }
      ref i_x[2284109]:file[235492] "temp"
      (2284113 'move' i_x[2284109](2284111 'set reference' f[1176204]))
      (2284117 call deinit[235803] i_x[2284109])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val tmp[2208256]:int(32)[95] "dead after last mention" "temp"
    (2208258 'move' tmp[2208256](2208260 'cast' int(32)[95] 0))
    val errorExists[2056317]:bool[10] "temp"
    (2056322 'move' errorExists[2056317](2056319 '!=' error[1769787] nil[44]))
    if errorExists[2056317]
    {
      val error[1802562]:Error[167938] "error variable" "temp"
      (1802564 'move' error[1802562] nil[44])
      (1802568 call close[235936] f[1176204] error[1802562])
      val errorExists[2057709]:bool[10] "temp"
      (2057714 'move' errorExists[2057709](2057711 '!=' error[1802562] nil[44]))
      if errorExists[2057709]
      {
        gotoErrorHandling handler[1802579] handler[1802579]
      }
      label handler[1802579]
      val errorExists[2057717]:bool[10] "temp"
      (2057722 'move' errorExists[2057717](2057719 '!=' error[1802562] nil[44]))
      if errorExists[2057717]
      {
        (1802590 call chpl_uncaught_error[170243] error[1802562])
      }
      ref i_x[2284121]:file[235492] "temp"
      (2284125 'move' i_x[2284121](2284123 'set reference' f[1176204]))
      (2284129 call deinit[235803] i_x[2284121])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val default_arg_style[1179595]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2208370]:file[235492] "temp"
    (2208374 'move' i_this[2208370](2208372 'set reference' f[1176204]))
    val ret[2208383]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2208385]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2208387]:Error[167938] "error variable" "temp"
    (2208389 'move' error[2208387] nil[44])
    (2208392 'move' style[2208385](2208395 call _style[235872] i_this[2208370] error[2208387]))
    val errorExists[2208398]:bool[10] "temp"
    (2208400 'move' errorExists[2208398](2208402 '!=' error[2208387] nil[44]))
    if errorExists[2208398]
    {
      (2208407 '=' error[1769787] error[2208387])
      gotoErrorHandlingReturn _endwriter_default_style[2208416] _endwriter_default_style[2208416]
    }
    (2208413 'move' ret[2208383] style[2208385])
    label _endwriter_default_style[2208416]
    (1179601 'move' default_arg_style[1179595] ret[2208383])
    val errorExists[2056325]:bool[10] "temp"
    (2056330 'move' errorExists[2056325](2056327 '!=' error[1769787] nil[44]))
    if errorExists[2056325]
    {
      val error[1802598]:Error[167938] "error variable" "temp"
      (1802600 'move' error[1802598] nil[44])
      (1802604 call close[235936] f[1176204] error[1802598])
      val errorExists[2057725]:bool[10] "temp"
      (2057730 'move' errorExists[2057725](2057727 '!=' error[1802598] nil[44]))
      if errorExists[2057725]
      {
        gotoErrorHandling handler[1802615] handler[1802615]
      }
      label handler[1802615]
      val errorExists[2057733]:bool[10] "temp"
      (2057738 'move' errorExists[2057733](2057735 '!=' error[1802598] nil[44]))
      if errorExists[2057733]
      {
        (1802626 call chpl_uncaught_error[170243] error[1802598])
      }
      ref i_x[2284133]:file[235492] "temp"
      (2284137 'move' i_x[2284133](2284135 'set reference' f[1176204]))
      (2284141 call deinit[235803] i_x[2284133])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val ret_tmp[1789867]:channel(true,dynamic,false)[1060858] "temp"
    (1176229 call writer[1060764] f[1176204] 0 9223372036854775807 tmp[2208256] default_arg_style[1179595] error[1769787] ret_tmp[1789867])
    (1789870 'move' call_tmp[1176221] ret_tmp[1789867])
    val errorExists[2056333]:bool[10] "temp"
    (2056338 'move' errorExists[2056333](2056335 '!=' error[1769787] nil[44]))
    if errorExists[2056333]
    {
      val error[1802634]:Error[167938] "error variable" "temp"
      (1802636 'move' error[1802634] nil[44])
      (1802640 call close[235936] f[1176204] error[1802634])
      val errorExists[2057741]:bool[10] "temp"
      (2057746 'move' errorExists[2057741](2057743 '!=' error[1802634] nil[44]))
      if errorExists[2057741]
      {
        gotoErrorHandling handler[1802651] handler[1802651]
      }
      label handler[1802651]
      val errorExists[2057749]:bool[10] "temp"
      (2057754 'move' errorExists[2057749](2057751 '!=' error[1802634] nil[44]))
      if errorExists[2057749]
      {
        (1802662 call chpl_uncaught_error[170243] error[1802634])
      }
      ref i_x[2284145]:file[235492] "temp"
      (2284149 'move' i_x[2284145](2284147 'set reference' f[1176204]))
      (2284153 call deinit[235803] i_x[2284145])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val w[1176232]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
    (1176234 'move' w[1176232] call_tmp[1176221])
    const-val args[2218289]:(string,codepointIndex,string,int(64))[1176431] "insert auto destroy"
    (2301268 '.=' args[2218289] x0[1176423] _e0_args[1175734])
    (2301272 '.=' args[2218289] x1[1176425] _e1_args[1175736])
    (2301276 '.=' args[2218289] x2[1176427] _e2_args[1175738])
    (2301280 '.=' args[2218289] x3[1176429] _e3_args[1175740])
    const-val ret[2218314]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2218316]:locale[28] "dead after last mention" "maybe param" "temp"
    (2218318 'move' call_tmp[2218316](2218320 '.' w[1176232] _readWriteThisFromLocale[1060855]))
    val ret[2218323]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2218325]:locale[28] "dead after last mention" "temp"
    (2218328 call init=[90167] tmp[2218325] call_tmp[2218316])
    (2218331 'move' ret[2218323] tmp[2218325])
    val ret[2218334]:locale[28] "dead at end of block" "insert auto destroy"
    (2218336 'move' ret[2218334] ret[2218323])
    const-val call_tmp[2218339]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2218341 'move' call_tmp[2218339](2218344 call ==[782692] ret[2218334] local_nilLocale[2335688]))
    if call_tmp[2218339]
    {
      const-val call_tmp[2218349]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2218351]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2218353]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2218355 'move' call_tmp[2218353](2218358 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2218361 'move' call_tmp[2218351] call_tmp[2218353])
      const-val call_tmp[2218364]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2218366]:locale[28] "temp"
      (2218369 call chpl_localeID_to_locale[92849] call_tmp[2218351] ret_tmp[2218366])
      (2218372 'move' call_tmp[2218364] ret_tmp[2218366])
      (2218375 'move' call_tmp[2218349] call_tmp[2218364])
      (2218379 call =[90631] ret[2218334] call_tmp[2218349])
      ref i_x[2218382]:locale[28] "temp"
      (2218384 'move' i_x[2218382](2218386 'set reference' call_tmp[2218349]))
      (2218389 call deinit[90185] i_x[2218382])
    }
    (2218392 'move' ret[2218314] ret[2218334])
    const-val origLocale[2218395]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2218397 'move' origLocale[2218395] ret[2218314])
    ref call_tmp[2218402]:locale[28] "dead after last mention" "maybe param" "temp"
    (2218404 'move' call_tmp[2218402](2218406 '.' w[1176232] home[1060846]))
    const-val call_tmp[2218409]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2218411]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2218413 'move' coerce_tmp[2218411](2218415 '.v' call_tmp[2218402] _instance[89975]))
    val coerce_tmp[2218418]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2218420 'move' coerce_tmp[2218418](2218422 'cast' object[22] coerce_tmp[2218411]))
    const-val call_tmp[2218425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2218427 'move' call_tmp[2218425](2218429 'ptr_eq' coerce_tmp[2218418] nil[44]))
    if call_tmp[2218425]
    {
      (2218435 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (2218438 'move' call_tmp[2218409](2218440 '_wide_get_locale' coerce_tmp[2218411]))
    val error[2218445]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2218447 'move' error[2218445] nil[44])
    val isdirect[2218461]:bool[10] "temp"
    (2218463 'move' isdirect[2218461](2218466 call chpl_doDirectExecuteOn[187423] call_tmp[2218409]))
    if isdirect[2218461]
    {
      (2218471 call on_fn[1180297] w[1176232] args[2218289] ret[2218314] error[2218445])
    }
    {
      val _args_foron_fn[2218477]:_class_localson_fn[2039787] "temp"
      (2218479 'move' _args_foron_fn[2218477](2218481 'stack allocate class' _class_localson_fn[2039787]))
      (2218483 '.=' _args_foron_fn[2218477] _0_tmp[2039790] call_tmp[2218409])
      (2218487 '.=' _args_foron_fn[2218477] _1_rvfDerefTmp[2039792] w[1176232])
      ref tmp[2218491]:(string,codepointIndex,string,int(64))[1176431] "temp"
      (2218493 'move' tmp[2218491](2218495 'set reference' args[2218289]))
      (2218497 '.=' _args_foron_fn[2218477] _2_args[2039794] tmp[2218491])
      (2218501 '.=' _args_foron_fn[2218477] _3_rvfDerefTmp[2039796] ret[2218314])
      ref tmp[2218505]:Error[167938] "temp"
      (2218507 'move' tmp[2218505](2218509 'set reference' error[2218445]))
      (2218511 '.=' _args_foron_fn[2218477] _4_error[2039798] tmp[2218505])
      val _args_vforon_fn[2218515]:c_void_ptr[149] "temp"
      (2218517 'move' _args_vforon_fn[2218515](2218519 'cast_to_void_star' _args_foron_fn[2218477]))
      val _args_sizeon_fn[2218521]:int(64)[13] "temp"
      (2218523 'move' _args_sizeon_fn[2218521](2218525 'sizeof_bundle' _class_localson_fn[2039787]))
      on(2218528 call wrapon_fn[2039851] call_tmp[2218409] _args_vforon_fn[2218515] _args_sizeon_fn[2218521] _args_foron_fn[2218477])
    }
    val errorExists[2218534]:bool[10] "temp"
    (2218536 'move' errorExists[2218534](2218538 '!=' error[2218445] nil[44]))
    if errorExists[2218534]
    {
      (2218543 '=' error[1769787] error[2218445])
      ref i_x[2218546]:locale[28] "temp"
      (2218548 'move' i_x[2218546](2218550 'set reference' origLocale[2218395]))
      (2218553 call deinit[90185] i_x[2218546])
      gotoErrorHandlingReturn _endwrite[2218570] _endwrite[2218570]
    }
    ref i_x[2218561]:locale[28] "temp"
    (2218563 'move' i_x[2218561](2218565 'set reference' origLocale[2218395]))
    (2218568 call deinit[90185] i_x[2218561])
    label _endwrite[2218570]
    val errorExists[2056341]:bool[10] "temp"
    (2056346 'move' errorExists[2056341](2056343 '!=' error[1769787] nil[44]))
    if errorExists[2056341]
    {
      val error[1802670]:Error[167938] "error variable" "temp"
      (1802672 'move' error[1802670] nil[44])
      (1802676 call close[1062273] w[1176232] error[1802670])
      val errorExists[2057757]:bool[10] "temp"
      (2057762 'move' errorExists[2057757](2057759 '!=' error[1802670] nil[44]))
      if errorExists[2057757]
      {
        gotoErrorHandling handler[1802687] handler[1802687]
      }
      label handler[1802687]
      val errorExists[2057765]:bool[10] "temp"
      (2057770 'move' errorExists[2057765](2057767 '!=' error[1802670] nil[44]))
      if errorExists[2057765]
      {
        (1802698 call chpl_uncaught_error[170243] error[1802670])
      }
      ref i_x[2212137]:channel(true,dynamic,false)[1060858] "temp"
      (2212141 'move' i_x[2212137](2212139 'set reference' w[1176232]))
      (2212145 call deinit[1569162] i_x[2212137])
      val error[1802706]:Error[167938] "error variable" "temp"
      (1802708 'move' error[1802706] nil[44])
      (1802712 call close[235936] f[1176204] error[1802706])
      val errorExists[2057773]:bool[10] "temp"
      (2057778 'move' errorExists[2057773](2057775 '!=' error[1802706] nil[44]))
      if errorExists[2057773]
      {
        gotoErrorHandling handler[1802723] handler[1802723]
      }
      label handler[1802723]
      val errorExists[2057781]:bool[10] "temp"
      (2057786 'move' errorExists[2057781](2057783 '!=' error[1802706] nil[44]))
      if errorExists[2057781]
      {
        (1802734 call chpl_uncaught_error[170243] error[1802706])
      }
      ref i_x[2284157]:file[235492] "temp"
      (2284161 'move' i_x[2284157](2284159 'set reference' f[1176204]))
      (2284165 call deinit[235803] i_x[2284157])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val call_tmp[1176258]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1176260 'move' call_tmp[1176258](1176266 call offset[1080059] w[1176232]))
    const-val call_tmp[2067122]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2067124 'move' call_tmp[2067122](2067126 '+' call_tmp[1176258] 1))
    const-val call_tmp[2213090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213092 'move' call_tmp[2213090](2213094 '<' call_tmp[2067122] 0))
    if call_tmp[2213090]
    {
      (2213100 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2213103]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213105 'move' call_tmp[2213103](2213107 'cast' uint(64)[115] call_tmp[2067122]))
    const-val call_tmp[2213110]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213112 'move' call_tmp[2213110](2213115 call sizeof[1080365] uint(8)[100]))
    const-val call_tmp[2213117]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213119 'move' call_tmp[2213117](2213121 '*' call_tmp[2213103] call_tmp[2213110]))
    const-val call_tmp[2213124]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213126 'move' call_tmp[2213124](2213129 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2213130]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213132 'move' call_tmp[2213130](2213135 call chpl_here_alloc[1080401] call_tmp[2213117] call_tmp[2213124]))
    val call_tmp[2213138]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213140 'move' call_tmp[2213138](2213142 'cast' c_ptr(uint(8))[937334] call_tmp[2213130]))
    val buf[1176296]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    (1176298 'move' buf[1176296] call_tmp[2213138])
    const-val call_tmp[1176302]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
    val errorExists[2056349]:bool[10] "temp"
    (2056354 'move' errorExists[2056349](2056351 '!=' error[1769787] nil[44]))
    if errorExists[2056349]
    {
      val error[1802742]:Error[167938] "error variable" "temp"
      (1802744 'move' error[1802742] nil[44])
      (1802748 call close[1062273] w[1176232] error[1802742])
      val errorExists[2057789]:bool[10] "temp"
      (2057794 'move' errorExists[2057789](2057791 '!=' error[1802742] nil[44]))
      if errorExists[2057789]
      {
        gotoErrorHandling handler[1802759] handler[1802759]
      }
      label handler[1802759]
      val errorExists[2057797]:bool[10] "temp"
      (2057802 'move' errorExists[2057797](2057799 '!=' error[1802742] nil[44]))
      if errorExists[2057797]
      {
        (1802770 call chpl_uncaught_error[170243] error[1802742])
      }
      ref i_x[2212149]:channel(true,dynamic,false)[1060858] "temp"
      (2212153 'move' i_x[2212149](2212151 'set reference' w[1176232]))
      (2212157 call deinit[1569162] i_x[2212149])
      val error[1802778]:Error[167938] "error variable" "temp"
      (1802780 'move' error[1802778] nil[44])
      (1802784 call close[235936] f[1176204] error[1802778])
      val errorExists[2057805]:bool[10] "temp"
      (2057810 'move' errorExists[2057805](2057807 '!=' error[1802778] nil[44]))
      if errorExists[2057805]
      {
        gotoErrorHandling handler[1802795] handler[1802795]
      }
      label handler[1802795]
      val errorExists[2057813]:bool[10] "temp"
      (2057818 'move' errorExists[2057813](2057815 '!=' error[1802778] nil[44]))
      if errorExists[2057813]
      {
        (1802806 call chpl_uncaught_error[170243] error[1802778])
      }
      ref i_x[2284169]:file[235492] "temp"
      (2284173 'move' i_x[2284169](2284171 'set reference' f[1176204]))
      (2284177 call deinit[235803] i_x[2284169])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    val errorExists[2056357]:bool[10] "temp"
    (2056362 'move' errorExists[2056357](2056359 '!=' error[1769787] nil[44]))
    if errorExists[2056357]
    {
      val error[1802814]:Error[167938] "error variable" "temp"
      (1802816 'move' error[1802814] nil[44])
      (1802820 call close[1062273] w[1176232] error[1802814])
      val errorExists[2057821]:bool[10] "temp"
      (2057826 'move' errorExists[2057821](2057823 '!=' error[1802814] nil[44]))
      if errorExists[2057821]
      {
        gotoErrorHandling handler[1802831] handler[1802831]
      }
      label handler[1802831]
      val errorExists[2057829]:bool[10] "temp"
      (2057834 'move' errorExists[2057829](2057831 '!=' error[1802814] nil[44]))
      if errorExists[2057829]
      {
        (1802842 call chpl_uncaught_error[170243] error[1802814])
      }
      ref i_x[2212161]:channel(true,dynamic,false)[1060858] "temp"
      (2212165 'move' i_x[2212161](2212163 'set reference' w[1176232]))
      (2212169 call deinit[1569162] i_x[2212161])
      val error[1802850]:Error[167938] "error variable" "temp"
      (1802852 'move' error[1802850] nil[44])
      (1802856 call close[235936] f[1176204] error[1802850])
      val errorExists[2057837]:bool[10] "temp"
      (2057842 'move' errorExists[2057837](2057839 '!=' error[1802850] nil[44]))
      if errorExists[2057837]
      {
        gotoErrorHandling handler[1802867] handler[1802867]
      }
      label handler[1802867]
      val errorExists[2057845]:bool[10] "temp"
      (2057850 'move' errorExists[2057845](2057847 '!=' error[1802850] nil[44]))
      if errorExists[2057845]
      {
        (1802878 call chpl_uncaught_error[170243] error[1802850])
      }
      ref i_x[2284181]:file[235492] "temp"
      (2284185 'move' i_x[2284181](2284183 'set reference' f[1176204]))
      (2284189 call deinit[235803] i_x[2284181])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val tmp[2213353]:int(32)[95] "dead after last mention" "temp"
    (2213355 'move' tmp[2213353] local_IOHINT_NONE[2335706])
    val errorExists[2056365]:bool[10] "temp"
    (2056370 'move' errorExists[2056365](2056367 '!=' error[1769787] nil[44]))
    if errorExists[2056365]
    {
      val error[1802886]:Error[167938] "error variable" "temp"
      (1802888 'move' error[1802886] nil[44])
      (1802892 call close[1062273] w[1176232] error[1802886])
      val errorExists[2057853]:bool[10] "temp"
      (2057858 'move' errorExists[2057853](2057855 '!=' error[1802886] nil[44]))
      if errorExists[2057853]
      {
        gotoErrorHandling handler[1802903] handler[1802903]
      }
      label handler[1802903]
      val errorExists[2057861]:bool[10] "temp"
      (2057866 'move' errorExists[2057861](2057863 '!=' error[1802886] nil[44]))
      if errorExists[2057861]
      {
        (1802914 call chpl_uncaught_error[170243] error[1802886])
      }
      ref i_x[2212173]:channel(true,dynamic,false)[1060858] "temp"
      (2212177 'move' i_x[2212173](2212175 'set reference' w[1176232]))
      (2212181 call deinit[1569162] i_x[2212173])
      val error[1802922]:Error[167938] "error variable" "temp"
      (1802924 'move' error[1802922] nil[44])
      (1802928 call close[235936] f[1176204] error[1802922])
      val errorExists[2057869]:bool[10] "temp"
      (2057874 'move' errorExists[2057869](2057871 '!=' error[1802922] nil[44]))
      if errorExists[2057869]
      {
        gotoErrorHandling handler[1802939] handler[1802939]
      }
      label handler[1802939]
      val errorExists[2057877]:bool[10] "temp"
      (2057882 'move' errorExists[2057877](2057879 '!=' error[1802922] nil[44]))
      if errorExists[2057877]
      {
        (1802950 call chpl_uncaught_error[170243] error[1802922])
      }
      ref i_x[2284193]:file[235492] "temp"
      (2284197 'move' i_x[2284193](2284195 'set reference' f[1176204]))
      (2284201 call deinit[235803] i_x[2284193])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val default_arg_style[1180678]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2213465]:file[235492] "temp"
    (2213469 'move' i_this[2213465](2213467 'set reference' f[1176204]))
    val ret[2213478]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2213480]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2213482]:Error[167938] "error variable" "temp"
    (2213484 'move' error[2213482] nil[44])
    (2213487 'move' style[2213480](2213490 call _style[235872] i_this[2213465] error[2213482]))
    val errorExists[2213493]:bool[10] "temp"
    (2213495 'move' errorExists[2213493](2213497 '!=' error[2213482] nil[44]))
    if errorExists[2213493]
    {
      (2213502 '=' error[1769787] error[2213482])
      gotoErrorHandlingReturn _endreader_default_style[2213511] _endreader_default_style[2213511]
    }
    (2213508 'move' ret[2213478] style[2213480])
    label _endreader_default_style[2213511]
    (1180684 'move' default_arg_style[1180678] ret[2213478])
    val errorExists[2056373]:bool[10] "temp"
    (2056378 'move' errorExists[2056373](2056375 '!=' error[1769787] nil[44]))
    if errorExists[2056373]
    {
      val error[1802958]:Error[167938] "error variable" "temp"
      (1802960 'move' error[1802958] nil[44])
      (1802964 call close[1062273] w[1176232] error[1802958])
      val errorExists[2057885]:bool[10] "temp"
      (2057890 'move' errorExists[2057885](2057887 '!=' error[1802958] nil[44]))
      if errorExists[2057885]
      {
        gotoErrorHandling handler[1802975] handler[1802975]
      }
      label handler[1802975]
      val errorExists[2057893]:bool[10] "temp"
      (2057898 'move' errorExists[2057893](2057895 '!=' error[1802958] nil[44]))
      if errorExists[2057893]
      {
        (1802986 call chpl_uncaught_error[170243] error[1802958])
      }
      ref i_x[2212185]:channel(true,dynamic,false)[1060858] "temp"
      (2212189 'move' i_x[2212185](2212187 'set reference' w[1176232]))
      (2212193 call deinit[1569162] i_x[2212185])
      val error[1802994]:Error[167938] "error variable" "temp"
      (1802996 'move' error[1802994] nil[44])
      (1803000 call close[235936] f[1176204] error[1802994])
      val errorExists[2057901]:bool[10] "temp"
      (2057906 'move' errorExists[2057901](2057903 '!=' error[1802994] nil[44]))
      if errorExists[2057901]
      {
        gotoErrorHandling handler[1803011] handler[1803011]
      }
      label handler[1803011]
      val errorExists[2057909]:bool[10] "temp"
      (2057914 'move' errorExists[2057909](2057911 '!=' error[1802994] nil[44]))
      if errorExists[2057909]
      {
        (1803022 call chpl_uncaught_error[170243] error[1802994])
      }
      ref i_x[2284205]:file[235492] "temp"
      (2284209 'move' i_x[2284205](2284207 'set reference' f[1176204]))
      (2284213 call deinit[235803] i_x[2284205])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val ret_tmp[1790257]:channel(false,dynamic,false)[1080593] "temp"
    (1176310 call reader[1080499] f[1176204] 0 9223372036854775807 tmp[2213353] default_arg_style[1180678] error[1769787] ret_tmp[1790257])
    (1790260 'move' call_tmp[1176302] ret_tmp[1790257])
    val errorExists[2056381]:bool[10] "temp"
    (2056386 'move' errorExists[2056381](2056383 '!=' error[1769787] nil[44]))
    if errorExists[2056381]
    {
      val error[1803030]:Error[167938] "error variable" "temp"
      (1803032 'move' error[1803030] nil[44])
      (1803036 call close[1062273] w[1176232] error[1803030])
      val errorExists[2057917]:bool[10] "temp"
      (2057922 'move' errorExists[2057917](2057919 '!=' error[1803030] nil[44]))
      if errorExists[2057917]
      {
        gotoErrorHandling handler[1803047] handler[1803047]
      }
      label handler[1803047]
      val errorExists[2057925]:bool[10] "temp"
      (2057930 'move' errorExists[2057925](2057927 '!=' error[1803030] nil[44]))
      if errorExists[2057925]
      {
        (1803058 call chpl_uncaught_error[170243] error[1803030])
      }
      ref i_x[2212197]:channel(true,dynamic,false)[1060858] "temp"
      (2212201 'move' i_x[2212197](2212199 'set reference' w[1176232]))
      (2212205 call deinit[1569162] i_x[2212197])
      val error[1803066]:Error[167938] "error variable" "temp"
      (1803068 'move' error[1803066] nil[44])
      (1803072 call close[235936] f[1176204] error[1803066])
      val errorExists[2057933]:bool[10] "temp"
      (2057938 'move' errorExists[2057933](2057935 '!=' error[1803066] nil[44]))
      if errorExists[2057933]
      {
        gotoErrorHandling handler[1803083] handler[1803083]
      }
      label handler[1803083]
      val errorExists[2057941]:bool[10] "temp"
      (2057946 'move' errorExists[2057941](2057943 '!=' error[1803066] nil[44]))
      if errorExists[2057941]
      {
        (1803094 call chpl_uncaught_error[170243] error[1803066])
      }
      ref i_x[2284217]:file[235492] "temp"
      (2284221 'move' i_x[2284217](2284219 'set reference' f[1176204]))
      (2284225 call deinit[235803] i_x[2284217])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val r[1176313]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
    (1176315 'move' r[1176313] call_tmp[1176302])
    (1176342 call readBytes[1082750] r[1176313] call_tmp[2213138] call_tmp[1176258] error[1769787])
    val errorExists[2056389]:bool[10] "temp"
    (2056394 'move' errorExists[2056389](2056391 '!=' error[1769787] nil[44]))
    if errorExists[2056389]
    {
      val error[1803102]:Error[167938] "error variable" "temp"
      (1803104 'move' error[1803102] nil[44])
      (1803108 call close[1082005] r[1176313] error[1803102])
      val errorExists[2057949]:bool[10] "temp"
      (2057954 'move' errorExists[2057949](2057951 '!=' error[1803102] nil[44]))
      if errorExists[2057949]
      {
        gotoErrorHandling handler[1803119] handler[1803119]
      }
      label handler[1803119]
      val errorExists[2057957]:bool[10] "temp"
      (2057962 'move' errorExists[2057957](2057959 '!=' error[1803102] nil[44]))
      if errorExists[2057957]
      {
        (1803130 call chpl_uncaught_error[170243] error[1803102])
      }
      ref i_x[2287264]:channel(false,dynamic,false)[1080593] "temp"
      (2287268 'move' i_x[2287264](2287266 'set reference' r[1176313]))
      (2287272 call deinit[1573416] i_x[2287264])
      val error[1803138]:Error[167938] "error variable" "temp"
      (1803140 'move' error[1803138] nil[44])
      (1803144 call close[1062273] w[1176232] error[1803138])
      val errorExists[2057965]:bool[10] "temp"
      (2057970 'move' errorExists[2057965](2057967 '!=' error[1803138] nil[44]))
      if errorExists[2057965]
      {
        gotoErrorHandling handler[1803155] handler[1803155]
      }
      label handler[1803155]
      val errorExists[2057973]:bool[10] "temp"
      (2057978 'move' errorExists[2057973](2057975 '!=' error[1803138] nil[44]))
      if errorExists[2057973]
      {
        (1803166 call chpl_uncaught_error[170243] error[1803138])
      }
      ref i_x[2212209]:channel(true,dynamic,false)[1060858] "temp"
      (2212213 'move' i_x[2212209](2212211 'set reference' w[1176232]))
      (2212217 call deinit[1569162] i_x[2212209])
      val error[1803174]:Error[167938] "error variable" "temp"
      (1803176 'move' error[1803174] nil[44])
      (1803180 call close[235936] f[1176204] error[1803174])
      val errorExists[2057981]:bool[10] "temp"
      (2057986 'move' errorExists[2057981](2057983 '!=' error[1803174] nil[44]))
      if errorExists[2057981]
      {
        gotoErrorHandling handler[1803191] handler[1803191]
      }
      label handler[1803191]
      val errorExists[2057989]:bool[10] "temp"
      (2057994 'move' errorExists[2057989](2057991 '!=' error[1803174] nil[44]))
      if errorExists[2057989]
      {
        (1803202 call chpl_uncaught_error[170243] error[1803174])
      }
      ref i_x[2284229]:file[235492] "temp"
      (2284233 'move' i_x[2284229](2284231 'set reference' f[1176204]))
      (2284237 call deinit[235803] i_x[2284229])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    ref call_tmp[2141896]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2141898 'move' call_tmp[2141896](2141900 'array_get' buf[1176296] call_tmp[1176258]))
    const-val coerce_tmp[1180694]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180700 'move' coerce_tmp[1180694](1180696 'cast' uint(8)[100] 0))
    (2142368 '=' call_tmp[2141896] coerce_tmp[1180694])
    const-val ret[2086888]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2086890]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2086892]:Error[167938] "error variable" "temp"
    (2086894 'move' error[2086892] nil[44])
    const-val ret_tmp[2086897]:string[26] "temp"
    (2086900 call decodeByteBuffer[173892] call_tmp[2213138] call_tmp[1176258] replace[173648] error[2086892] ret_tmp[2086897])
    (2086906 'move' call_tmp[2086890] ret_tmp[2086897])
    val errorExists[2086909]:bool[10] "temp"
    (2086911 'move' errorExists[2086909](2086913 '!=' error[2086892] nil[44]))
    if errorExists[2086909]
    {
      (2086918 '=' error[1769787] error[2086892])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2086927] _endcreateStringWithNewBuffer[2086927]
    }
    (2086924 'move' ret[2086888] call_tmp[2086890])
    label _endcreateStringWithNewBuffer[2086927]
    val errorExists[2056397]:bool[10] "temp"
    (2056402 'move' errorExists[2056397](2056399 '!=' error[1769787] nil[44]))
    if errorExists[2056397]
    {
      val error[1803210]:Error[167938] "error variable" "temp"
      (1803212 'move' error[1803210] nil[44])
      (1803216 call close[1082005] r[1176313] error[1803210])
      val errorExists[2057997]:bool[10] "temp"
      (2058002 'move' errorExists[2057997](2057999 '!=' error[1803210] nil[44]))
      if errorExists[2057997]
      {
        gotoErrorHandling handler[1803227] handler[1803227]
      }
      label handler[1803227]
      val errorExists[2058005]:bool[10] "temp"
      (2058010 'move' errorExists[2058005](2058007 '!=' error[1803210] nil[44]))
      if errorExists[2058005]
      {
        (1803238 call chpl_uncaught_error[170243] error[1803210])
      }
      ref i_x[2287276]:channel(false,dynamic,false)[1080593] "temp"
      (2287280 'move' i_x[2287276](2287278 'set reference' r[1176313]))
      (2287284 call deinit[1573416] i_x[2287276])
      val error[1803246]:Error[167938] "error variable" "temp"
      (1803248 'move' error[1803246] nil[44])
      (1803252 call close[1062273] w[1176232] error[1803246])
      val errorExists[2058013]:bool[10] "temp"
      (2058018 'move' errorExists[2058013](2058015 '!=' error[1803246] nil[44]))
      if errorExists[2058013]
      {
        gotoErrorHandling handler[1803263] handler[1803263]
      }
      label handler[1803263]
      val errorExists[2058021]:bool[10] "temp"
      (2058026 'move' errorExists[2058021](2058023 '!=' error[1803246] nil[44]))
      if errorExists[2058021]
      {
        (1803274 call chpl_uncaught_error[170243] error[1803246])
      }
      ref i_x[2212221]:channel(true,dynamic,false)[1060858] "temp"
      (2212225 'move' i_x[2212221](2212223 'set reference' w[1176232]))
      (2212229 call deinit[1569162] i_x[2212221])
      val error[1803282]:Error[167938] "error variable" "temp"
      (1803284 'move' error[1803282] nil[44])
      (1803288 call close[235936] f[1176204] error[1803282])
      val errorExists[2058029]:bool[10] "temp"
      (2058034 'move' errorExists[2058029](2058031 '!=' error[1803282] nil[44]))
      if errorExists[2058029]
      {
        gotoErrorHandling handler[1803299] handler[1803299]
      }
      label handler[1803299]
      val errorExists[2058037]:bool[10] "temp"
      (2058042 'move' errorExists[2058037](2058039 '!=' error[1803282] nil[44]))
      if errorExists[2058037]
      {
        (1803310 call chpl_uncaught_error[170243] error[1803282])
      }
      ref i_x[2284241]:file[235492] "temp"
      (2284245 'move' i_x[2284241](2284243 'set reference' f[1176204]))
      (2284249 call deinit[235803] i_x[2284241])
      gotoErrorHandling handler[1769788] handler[1769788]
    }
    const-val coerce_tmp[1180705]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180711 'move' coerce_tmp[1180705](1180707 'cast' c_void_ptr[149] call_tmp[2213138]))
    (2149962 call chpl_here_free[188081] coerce_tmp[1180705])
    (1180715 'move' ret[1175744] ret[2086888])
    val error[1803318]:Error[167938] "error variable" "temp"
    (1803320 'move' error[1803318] nil[44])
    (1803324 call close[1082005] r[1176313] error[1803318])
    val errorExists[2058045]:bool[10] "temp"
    (2058050 'move' errorExists[2058045](2058047 '!=' error[1803318] nil[44]))
    if errorExists[2058045]
    {
      gotoErrorHandling handler[1803335] handler[1803335]
    }
    label handler[1803335]
    val errorExists[2058053]:bool[10] "temp"
    (2058058 'move' errorExists[2058053](2058055 '!=' error[1803318] nil[44]))
    if errorExists[2058053]
    {
      (1803346 call chpl_uncaught_error[170243] error[1803318])
    }
    ref i_x[2287288]:channel(false,dynamic,false)[1080593] "temp"
    (2287292 'move' i_x[2287288](2287290 'set reference' r[1176313]))
    (2287296 call deinit[1573416] i_x[2287288])
    val error[1803354]:Error[167938] "error variable" "temp"
    (1803356 'move' error[1803354] nil[44])
    (1803360 call close[1062273] w[1176232] error[1803354])
    val errorExists[2058061]:bool[10] "temp"
    (2058066 'move' errorExists[2058061](2058063 '!=' error[1803354] nil[44]))
    if errorExists[2058061]
    {
      gotoErrorHandling handler[1803371] handler[1803371]
    }
    label handler[1803371]
    val errorExists[2058069]:bool[10] "temp"
    (2058074 'move' errorExists[2058069](2058071 '!=' error[1803354] nil[44]))
    if errorExists[2058069]
    {
      (1803382 call chpl_uncaught_error[170243] error[1803354])
    }
    ref i_x[2212233]:channel(true,dynamic,false)[1060858] "temp"
    (2212237 'move' i_x[2212233](2212235 'set reference' w[1176232]))
    (2212241 call deinit[1569162] i_x[2212233])
    val error[1803390]:Error[167938] "error variable" "temp"
    (1803392 'move' error[1803390] nil[44])
    (1803396 call close[235936] f[1176204] error[1803390])
    val errorExists[2058077]:bool[10] "temp"
    (2058082 'move' errorExists[2058077](2058079 '!=' error[1803390] nil[44]))
    if errorExists[2058077]
    {
      gotoErrorHandling handler[1803407] handler[1803407]
    }
    label handler[1803407]
    val errorExists[2058085]:bool[10] "temp"
    (2058090 'move' errorExists[2058085](2058087 '!=' error[1803390] nil[44]))
    if errorExists[2058085]
    {
      (1803418 call chpl_uncaught_error[170243] error[1803390])
    }
    ref i_x[2284253]:file[235492] "temp"
    (2284257 'move' i_x[2284253](2284255 'set reference' f[1176204]))
    (2284261 call deinit[235803] i_x[2284253])
    gotoReturn _end_stringify[1176410] _end_stringify[1176410]
    label handler[1769788]
    val errorExists[2056405]:bool[10] "temp"
    (2056410 'move' errorExists[2056405](2056407 '!=' error[1769787] nil[44]))
    if errorExists[2056405]
    {
      (1769978 call chpl_uncaught_error[170243] error[1769787])
    }
    label _end_stringify[1176410]
    (1791486 '=' _retArg[1791484] ret[1175744])
    (1791488 return _void[55])
  }
  function stringify[1190631](const  ref arg _e0_args[1190633]:string[26], const in arg _e1_args[1190635]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg _e2_args[1190637]:string[26], const in arg _e3_args[1190639]:int(64)[13], ref arg _retArg[1791690]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2335772]:string[26] "temp"
    (2335773 'move' "" "")
    const-val ret[1190643]:string[26] "dead after last mention" "RVV" "temp"
    val str[1190684]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150913]:string[26] "temp"
    (2150916 'move' inlineImm[2150913] "")
    ref i_x[2150918]:string[26] "temp"
    (2150922 'move' i_x[2150918](2150920 'set reference' inlineImm[2150913]))
    val ret[2150925]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150927]:string[26] "dead after last mention" "temp"
    (2150930 call init=[30771] tmp[2150927] i_x[2150918])
    (2150933 'move' ret[2150925] tmp[2150927])
    (1190686 'move' str[1190684] ret[2150925])
    (1197072 call +=[38797] str[1190684] _e0_args[1190633])
    const-val call_tmp[1197647]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791730]:string[26] "temp"
    (1197652 call _cast[1198542] _e1_args[1190635] ret_tmp[1791730])
    (1791733 'move' call_tmp[1197647] ret_tmp[1791730])
    (1197656 call +=[38797] str[1190684] call_tmp[1197647])
    ref i_x[2078154]:string[26] "temp"
    (2078158 'move' i_x[2078154](2078156 'set reference' call_tmp[1197647]))
    (2078162 call deinit[30831] i_x[2078154])
    (1197762 call +=[38797] str[1190684] _e2_args[1190637])
    const-val call_tmp[1198337]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789981]:string[26] "temp"
    (1198342 call _cast[1063064] _e3_args[1190639] ret_tmp[1789981])
    (1789984 'move' call_tmp[1198337] ret_tmp[1789981])
    (1198346 call +=[38797] str[1190684] call_tmp[1198337])
    ref i_x[2078166]:string[26] "temp"
    (2078170 'move' i_x[2078166](2078168 'set reference' call_tmp[1198337]))
    (2078174 call deinit[30831] i_x[2078166])
    (1200244 'move' ret[1190643] str[1190684])
    gotoReturn _end_stringify[1191309] _end_stringify[1191309]
    label _end_stringify[1191309]
    (1791692 '=' _retArg[1791690] ret[1190643])
    (1791698 return _void[55])
  }
  function stringify[1291049](const  ref arg _e0_args[1291051]:string[26], const  ref arg _e1_args[1291053]:string[26], const  ref arg _e2_args[1291055]:string[26], const  ref arg _e3_args[1291057]:string[26], ref arg _retArg[1793786]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336183]:string[26] "temp"
    (2336184 'move' "" "")
    const-val ret[1291061]:string[26] "dead after last mention" "RVV" "temp"
    val str[1291102]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2151013]:string[26] "temp"
    (2151016 'move' inlineImm[2151013] "")
    ref i_x[2151018]:string[26] "temp"
    (2151022 'move' i_x[2151018](2151020 'set reference' inlineImm[2151013]))
    val ret[2151025]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151027]:string[26] "dead after last mention" "temp"
    (2151030 call init=[30771] tmp[2151027] i_x[2151018])
    (2151033 'move' ret[2151025] tmp[2151027])
    (1291104 'move' str[1291102] ret[2151025])
    (1294918 call +=[38797] str[1291102] _e0_args[1291051])
    (1295263 call +=[38797] str[1291102] _e1_args[1291053])
    (1295608 call +=[38797] str[1291102] _e2_args[1291055])
    (1295953 call +=[38797] str[1291102] _e3_args[1291057])
    (1296392 'move' ret[1291061] str[1291102])
    gotoReturn _end_stringify[1291727] _end_stringify[1291727]
    label _end_stringify[1291727]
    (1793788 '=' _retArg[1793786] ret[1291061])
    (1793792 return _void[55])
  }
  function stringify[1439758](const  ref arg _e0_args[1439760]:string[26], const in arg _e1_args[1439762]:uint(64)[115], const  ref arg _e2_args[1439764]:string[26], const in arg _e3_args[1439766]:int(64)[13], ref arg _retArg[1795453]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336638]:string[26] "temp"
    (2336639 'move' "" "")
    const-val ret[1439770]:string[26] "dead after last mention" "RVV" "temp"
    val str[1439811]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2151113]:string[26] "temp"
    (2151116 'move' inlineImm[2151113] "")
    ref i_x[2151118]:string[26] "temp"
    (2151122 'move' i_x[2151118](2151120 'set reference' inlineImm[2151113]))
    val ret[2151125]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151127]:string[26] "dead after last mention" "temp"
    (2151130 call init=[30771] tmp[2151127] i_x[2151118])
    (2151133 'move' ret[2151125] tmp[2151127])
    (1439813 'move' str[1439811] ret[2151125])
    (1444644 call +=[38797] str[1439811] _e0_args[1439760])
    const-val call_tmp[1445219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1793540]:string[26] "temp"
    (1445224 call _cast[1268376] _e1_args[1439762] ret_tmp[1793540])
    (1793543 'move' call_tmp[1445219] ret_tmp[1793540])
    (1445228 call +=[38797] str[1439811] call_tmp[1445219])
    ref i_x[2079186]:string[26] "temp"
    (2079190 'move' i_x[2079186](2079188 'set reference' call_tmp[1445219]))
    (2079194 call deinit[30831] i_x[2079186])
    (1445334 call +=[38797] str[1439811] _e2_args[1439764])
    const-val call_tmp[1445909]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790065]:string[26] "temp"
    (1445914 call _cast[1063064] _e3_args[1439766] ret_tmp[1790065])
    (1790068 'move' call_tmp[1445909] ret_tmp[1790065])
    (1445918 call +=[38797] str[1439811] call_tmp[1445909])
    ref i_x[2079198]:string[26] "temp"
    (2079202 'move' i_x[2079198](2079200 'set reference' call_tmp[1445909]))
    (2079206 call deinit[30831] i_x[2079198])
    (1446278 'move' ret[1439770] str[1439811])
    gotoReturn _end_stringify[1440436] _end_stringify[1440436]
    label _end_stringify[1440436]
    (1795455 '=' _retArg[1795453] ret[1439770])
    (1795459 return _void[55])
  }
  function stringify[1157775](const  ref arg _e0_args[1157777]:string[26], const  ref arg _e1_args[1157779]:codepointIndex[28274], const  ref arg _e2_args[1157781]:string[26], ref arg _retArg[1791426]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2335590]:int(32)[95] "temp"
    (2335591 'move' local_IOHINT_NONE[2335590] IOHINT_NONE[231323])
    const-val local__str_literal_4777[2335584]:string[26] "temp"
    (2335585 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2335578]:string[26] "temp"
    (2335579 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2335572]:locale[28] "temp"
    (2335573 'move' local_nilLocale[2335572] nilLocale[89939])
    const-val ret[1157785]:string[26] "dead after last mention" "RVV" "temp"
    val error[1769290]:Error[167938] "error variable" "temp"
    (1769475 'move' error[1769290] nil[44])
    const-val call_tmp[1158236]:file[235492] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1164090]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2208016]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2208018 'move' style[2208016](2208021 call defaultIOStyle[235207]))
    (1164094 'move' default_arg_style[1164090] style[2208016])
    val errorExists[2056005]:bool[10] "temp"
    (2056010 'move' errorExists[2056005](2056007 '!=' error[1769290] nil[44]))
    if errorExists[2056005]
    {
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val ret_tmp[1788367]:file[235492] "temp"
    (1158241 call openmem[237537] default_arg_style[1164090] error[1769290] ret_tmp[1788367])
    (1788370 'move' call_tmp[1158236] ret_tmp[1788367])
    val errorExists[2056013]:bool[10] "temp"
    (2056018 'move' errorExists[2056013](2056015 '!=' error[1769290] nil[44]))
    if errorExists[2056013]
    {
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val f[1158242]:file[235492] "dead at end of block" "insert auto destroy"
    (1158244 'move' f[1158242] call_tmp[1158236])
    const-val call_tmp[1158259]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
    val errorExists[2056021]:bool[10] "temp"
    (2056026 'move' errorExists[2056021](2056023 '!=' error[1769290] nil[44]))
    if errorExists[2056021]
    {
      val error[1801427]:Error[167938] "error variable" "temp"
      (1801429 'move' error[1801427] nil[44])
      (1801433 call close[235936] f[1158242] error[1801427])
      val errorExists[2057261]:bool[10] "temp"
      (2057266 'move' errorExists[2057261](2057263 '!=' error[1801427] nil[44]))
      if errorExists[2057261]
      {
        gotoErrorHandling handler[1801444] handler[1801444]
      }
      label handler[1801444]
      val errorExists[2057269]:bool[10] "temp"
      (2057274 'move' errorExists[2057269](2057271 '!=' error[1801427] nil[44]))
      if errorExists[2057269]
      {
        (1801455 call chpl_uncaught_error[170243] error[1801427])
      }
      ref i_x[2283929]:file[235492] "temp"
      (2283933 'move' i_x[2283929](2283931 'set reference' f[1158242]))
      (2283937 call deinit[235803] i_x[2283929])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    val errorExists[2056029]:bool[10] "temp"
    (2056034 'move' errorExists[2056029](2056031 '!=' error[1769290] nil[44]))
    if errorExists[2056029]
    {
      val error[1801463]:Error[167938] "error variable" "temp"
      (1801465 'move' error[1801463] nil[44])
      (1801469 call close[235936] f[1158242] error[1801463])
      val errorExists[2057277]:bool[10] "temp"
      (2057282 'move' errorExists[2057277](2057279 '!=' error[1801463] nil[44]))
      if errorExists[2057277]
      {
        gotoErrorHandling handler[1801480] handler[1801480]
      }
      label handler[1801480]
      val errorExists[2057285]:bool[10] "temp"
      (2057290 'move' errorExists[2057285](2057287 '!=' error[1801463] nil[44]))
      if errorExists[2057285]
      {
        (1801491 call chpl_uncaught_error[170243] error[1801463])
      }
      ref i_x[2283941]:file[235492] "temp"
      (2283945 'move' i_x[2283941](2283943 'set reference' f[1158242]))
      (2283949 call deinit[235803] i_x[2283941])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val tmp[2208227]:int(32)[95] "dead after last mention" "temp"
    (2208229 'move' tmp[2208227](2208231 'cast' int(32)[95] 0))
    val errorExists[2056037]:bool[10] "temp"
    (2056042 'move' errorExists[2056037](2056039 '!=' error[1769290] nil[44]))
    if errorExists[2056037]
    {
      val error[1801499]:Error[167938] "error variable" "temp"
      (1801501 'move' error[1801499] nil[44])
      (1801505 call close[235936] f[1158242] error[1801499])
      val errorExists[2057293]:bool[10] "temp"
      (2057298 'move' errorExists[2057293](2057295 '!=' error[1801499] nil[44]))
      if errorExists[2057293]
      {
        gotoErrorHandling handler[1801516] handler[1801516]
      }
      label handler[1801516]
      val errorExists[2057301]:bool[10] "temp"
      (2057306 'move' errorExists[2057301](2057303 '!=' error[1801499] nil[44]))
      if errorExists[2057301]
      {
        (1801527 call chpl_uncaught_error[170243] error[1801499])
      }
      ref i_x[2283953]:file[235492] "temp"
      (2283957 'move' i_x[2283953](2283955 'set reference' f[1158242]))
      (2283961 call deinit[235803] i_x[2283953])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val default_arg_style[1164149]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2208320]:file[235492] "temp"
    (2208324 'move' i_this[2208320](2208322 'set reference' f[1158242]))
    val ret[2208333]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2208335]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2208337]:Error[167938] "error variable" "temp"
    (2208339 'move' error[2208337] nil[44])
    (2208342 'move' style[2208335](2208345 call _style[235872] i_this[2208320] error[2208337]))
    val errorExists[2208348]:bool[10] "temp"
    (2208350 'move' errorExists[2208348](2208352 '!=' error[2208337] nil[44]))
    if errorExists[2208348]
    {
      (2208357 '=' error[1769290] error[2208337])
      gotoErrorHandlingReturn _endwriter_default_style[2208366] _endwriter_default_style[2208366]
    }
    (2208363 'move' ret[2208333] style[2208335])
    label _endwriter_default_style[2208366]
    (1164155 'move' default_arg_style[1164149] ret[2208333])
    val errorExists[2056045]:bool[10] "temp"
    (2056050 'move' errorExists[2056045](2056047 '!=' error[1769290] nil[44]))
    if errorExists[2056045]
    {
      val error[1801535]:Error[167938] "error variable" "temp"
      (1801537 'move' error[1801535] nil[44])
      (1801541 call close[235936] f[1158242] error[1801535])
      val errorExists[2057309]:bool[10] "temp"
      (2057314 'move' errorExists[2057309](2057311 '!=' error[1801535] nil[44]))
      if errorExists[2057309]
      {
        gotoErrorHandling handler[1801552] handler[1801552]
      }
      label handler[1801552]
      val errorExists[2057317]:bool[10] "temp"
      (2057322 'move' errorExists[2057317](2057319 '!=' error[1801535] nil[44]))
      if errorExists[2057317]
      {
        (1801563 call chpl_uncaught_error[170243] error[1801535])
      }
      ref i_x[2283965]:file[235492] "temp"
      (2283969 'move' i_x[2283965](2283967 'set reference' f[1158242]))
      (2283973 call deinit[235803] i_x[2283965])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val ret_tmp[1789861]:channel(true,dynamic,false)[1060858] "temp"
    (1158267 call writer[1060764] f[1158242] 0 9223372036854775807 tmp[2208227] default_arg_style[1164149] error[1769290] ret_tmp[1789861])
    (1789864 'move' call_tmp[1158259] ret_tmp[1789861])
    val errorExists[2056053]:bool[10] "temp"
    (2056058 'move' errorExists[2056053](2056055 '!=' error[1769290] nil[44]))
    if errorExists[2056053]
    {
      val error[1801571]:Error[167938] "error variable" "temp"
      (1801573 'move' error[1801571] nil[44])
      (1801577 call close[235936] f[1158242] error[1801571])
      val errorExists[2057325]:bool[10] "temp"
      (2057330 'move' errorExists[2057325](2057327 '!=' error[1801571] nil[44]))
      if errorExists[2057325]
      {
        gotoErrorHandling handler[1801588] handler[1801588]
      }
      label handler[1801588]
      val errorExists[2057333]:bool[10] "temp"
      (2057338 'move' errorExists[2057333](2057335 '!=' error[1801571] nil[44]))
      if errorExists[2057333]
      {
        (1801599 call chpl_uncaught_error[170243] error[1801571])
      }
      ref i_x[2283977]:file[235492] "temp"
      (2283981 'move' i_x[2283977](2283979 'set reference' f[1158242]))
      (2283985 call deinit[235803] i_x[2283977])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val w[1158270]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
    (1158272 'move' w[1158270] call_tmp[1158259])
    const-val args[2216434]:(string,codepointIndex,string)[1158466] "insert auto destroy"
    (2301354 '.=' args[2216434] x0[1158460] _e0_args[1157777])
    (2301358 '.=' args[2216434] x1[1158462] _e1_args[1157779])
    (2301362 '.=' args[2216434] x2[1158464] _e2_args[1157781])
    const-val ret[2216455]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2216457]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216459 'move' call_tmp[2216457](2216461 '.' w[1158270] _readWriteThisFromLocale[1060855]))
    val ret[2216464]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2216466]:locale[28] "dead after last mention" "temp"
    (2216469 call init=[90167] tmp[2216466] call_tmp[2216457])
    (2216472 'move' ret[2216464] tmp[2216466])
    val ret[2216475]:locale[28] "dead at end of block" "insert auto destroy"
    (2216477 'move' ret[2216475] ret[2216464])
    const-val call_tmp[2216480]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216482 'move' call_tmp[2216480](2216485 call ==[782692] ret[2216475] local_nilLocale[2335572]))
    if call_tmp[2216480]
    {
      const-val call_tmp[2216490]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2216492]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2216494]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2216496 'move' call_tmp[2216494](2216499 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2216502 'move' call_tmp[2216492] call_tmp[2216494])
      const-val call_tmp[2216505]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2216507]:locale[28] "temp"
      (2216510 call chpl_localeID_to_locale[92849] call_tmp[2216492] ret_tmp[2216507])
      (2216513 'move' call_tmp[2216505] ret_tmp[2216507])
      (2216516 'move' call_tmp[2216490] call_tmp[2216505])
      (2216520 call =[90631] ret[2216475] call_tmp[2216490])
      ref i_x[2216523]:locale[28] "temp"
      (2216525 'move' i_x[2216523](2216527 'set reference' call_tmp[2216490]))
      (2216530 call deinit[90185] i_x[2216523])
    }
    (2216533 'move' ret[2216455] ret[2216475])
    const-val origLocale[2216536]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2216538 'move' origLocale[2216536] ret[2216455])
    ref call_tmp[2216543]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216545 'move' call_tmp[2216543](2216547 '.' w[1158270] home[1060846]))
    const-val call_tmp[2216550]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2216552]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216554 'move' coerce_tmp[2216552](2216556 '.v' call_tmp[2216543] _instance[89975]))
    val coerce_tmp[2216559]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216561 'move' coerce_tmp[2216559](2216563 'cast' object[22] coerce_tmp[2216552]))
    const-val call_tmp[2216566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216568 'move' call_tmp[2216566](2216570 'ptr_eq' coerce_tmp[2216559] nil[44]))
    if call_tmp[2216566]
    {
      (2216576 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (2216579 'move' call_tmp[2216550](2216581 '_wide_get_locale' coerce_tmp[2216552]))
    val error[2216586]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2216588 'move' error[2216586] nil[44])
    val isdirect[2216602]:bool[10] "temp"
    (2216604 'move' isdirect[2216602](2216607 call chpl_doDirectExecuteOn[187423] call_tmp[2216550]))
    if isdirect[2216602]
    {
      (2216612 call on_fn[1164818] w[1158270] args[2216434] ret[2216455] error[2216586])
    }
    {
      val _args_foron_fn[2216618]:_class_localson_fn[2039645] "temp"
      (2216620 'move' _args_foron_fn[2216618](2216622 'stack allocate class' _class_localson_fn[2039645]))
      (2216624 '.=' _args_foron_fn[2216618] _0_tmp[2039648] call_tmp[2216550])
      (2216628 '.=' _args_foron_fn[2216618] _1_rvfDerefTmp[2039650] w[1158270])
      ref tmp[2216632]:(string,codepointIndex,string)[1158466] "temp"
      (2216634 'move' tmp[2216632](2216636 'set reference' args[2216434]))
      (2216638 '.=' _args_foron_fn[2216618] _2_args[2039652] tmp[2216632])
      (2216642 '.=' _args_foron_fn[2216618] _3_rvfDerefTmp[2039654] ret[2216455])
      ref tmp[2216646]:Error[167938] "temp"
      (2216648 'move' tmp[2216646](2216650 'set reference' error[2216586]))
      (2216652 '.=' _args_foron_fn[2216618] _4_error[2039656] tmp[2216646])
      val _args_vforon_fn[2216656]:c_void_ptr[149] "temp"
      (2216658 'move' _args_vforon_fn[2216656](2216660 'cast_to_void_star' _args_foron_fn[2216618]))
      val _args_sizeon_fn[2216662]:int(64)[13] "temp"
      (2216664 'move' _args_sizeon_fn[2216662](2216666 'sizeof_bundle' _class_localson_fn[2039645]))
      on(2216669 call wrapon_fn[2039709] call_tmp[2216550] _args_vforon_fn[2216656] _args_sizeon_fn[2216662] _args_foron_fn[2216618])
    }
    val errorExists[2216675]:bool[10] "temp"
    (2216677 'move' errorExists[2216675](2216679 '!=' error[2216586] nil[44]))
    if errorExists[2216675]
    {
      (2216684 '=' error[1769290] error[2216586])
      ref i_x[2216687]:locale[28] "temp"
      (2216689 'move' i_x[2216687](2216691 'set reference' origLocale[2216536]))
      (2216694 call deinit[90185] i_x[2216687])
      gotoErrorHandlingReturn _endwrite[2216711] _endwrite[2216711]
    }
    ref i_x[2216702]:locale[28] "temp"
    (2216704 'move' i_x[2216702](2216706 'set reference' origLocale[2216536]))
    (2216709 call deinit[90185] i_x[2216702])
    label _endwrite[2216711]
    val errorExists[2056061]:bool[10] "temp"
    (2056066 'move' errorExists[2056061](2056063 '!=' error[1769290] nil[44]))
    if errorExists[2056061]
    {
      val error[1801607]:Error[167938] "error variable" "temp"
      (1801609 'move' error[1801607] nil[44])
      (1801613 call close[1062273] w[1158270] error[1801607])
      val errorExists[2057341]:bool[10] "temp"
      (2057346 'move' errorExists[2057341](2057343 '!=' error[1801607] nil[44]))
      if errorExists[2057341]
      {
        gotoErrorHandling handler[1801624] handler[1801624]
      }
      label handler[1801624]
      val errorExists[2057349]:bool[10] "temp"
      (2057354 'move' errorExists[2057349](2057351 '!=' error[1801607] nil[44]))
      if errorExists[2057349]
      {
        (1801635 call chpl_uncaught_error[170243] error[1801607])
      }
      ref i_x[2212005]:channel(true,dynamic,false)[1060858] "temp"
      (2212009 'move' i_x[2212005](2212007 'set reference' w[1158270]))
      (2212013 call deinit[1569162] i_x[2212005])
      val error[1801643]:Error[167938] "error variable" "temp"
      (1801645 'move' error[1801643] nil[44])
      (1801649 call close[235936] f[1158242] error[1801643])
      val errorExists[2057357]:bool[10] "temp"
      (2057362 'move' errorExists[2057357](2057359 '!=' error[1801643] nil[44]))
      if errorExists[2057357]
      {
        gotoErrorHandling handler[1801660] handler[1801660]
      }
      label handler[1801660]
      val errorExists[2057365]:bool[10] "temp"
      (2057370 'move' errorExists[2057365](2057367 '!=' error[1801643] nil[44]))
      if errorExists[2057365]
      {
        (1801671 call chpl_uncaught_error[170243] error[1801643])
      }
      ref i_x[2283989]:file[235492] "temp"
      (2283993 'move' i_x[2283989](2283991 'set reference' f[1158242]))
      (2283997 call deinit[235803] i_x[2283989])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val call_tmp[1158296]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1158298 'move' call_tmp[1158296](1158304 call offset[1080059] w[1158270]))
    const-val call_tmp[2067102]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2067104 'move' call_tmp[2067102](2067106 '+' call_tmp[1158296] 1))
    const-val call_tmp[2213025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213027 'move' call_tmp[2213025](2213029 '<' call_tmp[2067102] 0))
    if call_tmp[2213025]
    {
      (2213035 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2213038]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213040 'move' call_tmp[2213038](2213042 'cast' uint(64)[115] call_tmp[2067102]))
    const-val call_tmp[2213045]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213047 'move' call_tmp[2213045](2213050 call sizeof[1080365] uint(8)[100]))
    const-val call_tmp[2213052]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213054 'move' call_tmp[2213052](2213056 '*' call_tmp[2213038] call_tmp[2213045]))
    const-val call_tmp[2213059]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213061 'move' call_tmp[2213059](2213064 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2213065]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213067 'move' call_tmp[2213065](2213070 call chpl_here_alloc[1080401] call_tmp[2213052] call_tmp[2213059]))
    val call_tmp[2213073]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213075 'move' call_tmp[2213073](2213077 'cast' c_ptr(uint(8))[937334] call_tmp[2213065]))
    val buf[1158334]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
    (1158336 'move' buf[1158334] call_tmp[2213073])
    const-val call_tmp[1158340]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
    val errorExists[2056069]:bool[10] "temp"
    (2056074 'move' errorExists[2056069](2056071 '!=' error[1769290] nil[44]))
    if errorExists[2056069]
    {
      val error[1801679]:Error[167938] "error variable" "temp"
      (1801681 'move' error[1801679] nil[44])
      (1801685 call close[1062273] w[1158270] error[1801679])
      val errorExists[2057373]:bool[10] "temp"
      (2057378 'move' errorExists[2057373](2057375 '!=' error[1801679] nil[44]))
      if errorExists[2057373]
      {
        gotoErrorHandling handler[1801696] handler[1801696]
      }
      label handler[1801696]
      val errorExists[2057381]:bool[10] "temp"
      (2057386 'move' errorExists[2057381](2057383 '!=' error[1801679] nil[44]))
      if errorExists[2057381]
      {
        (1801707 call chpl_uncaught_error[170243] error[1801679])
      }
      ref i_x[2212017]:channel(true,dynamic,false)[1060858] "temp"
      (2212021 'move' i_x[2212017](2212019 'set reference' w[1158270]))
      (2212025 call deinit[1569162] i_x[2212017])
      val error[1801715]:Error[167938] "error variable" "temp"
      (1801717 'move' error[1801715] nil[44])
      (1801721 call close[235936] f[1158242] error[1801715])
      val errorExists[2057389]:bool[10] "temp"
      (2057394 'move' errorExists[2057389](2057391 '!=' error[1801715] nil[44]))
      if errorExists[2057389]
      {
        gotoErrorHandling handler[1801732] handler[1801732]
      }
      label handler[1801732]
      val errorExists[2057397]:bool[10] "temp"
      (2057402 'move' errorExists[2057397](2057399 '!=' error[1801715] nil[44]))
      if errorExists[2057397]
      {
        (1801743 call chpl_uncaught_error[170243] error[1801715])
      }
      ref i_x[2284001]:file[235492] "temp"
      (2284005 'move' i_x[2284001](2284003 'set reference' f[1158242]))
      (2284009 call deinit[235803] i_x[2284001])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    val errorExists[2056077]:bool[10] "temp"
    (2056082 'move' errorExists[2056077](2056079 '!=' error[1769290] nil[44]))
    if errorExists[2056077]
    {
      val error[1801751]:Error[167938] "error variable" "temp"
      (1801753 'move' error[1801751] nil[44])
      (1801757 call close[1062273] w[1158270] error[1801751])
      val errorExists[2057405]:bool[10] "temp"
      (2057410 'move' errorExists[2057405](2057407 '!=' error[1801751] nil[44]))
      if errorExists[2057405]
      {
        gotoErrorHandling handler[1801768] handler[1801768]
      }
      label handler[1801768]
      val errorExists[2057413]:bool[10] "temp"
      (2057418 'move' errorExists[2057413](2057415 '!=' error[1801751] nil[44]))
      if errorExists[2057413]
      {
        (1801779 call chpl_uncaught_error[170243] error[1801751])
      }
      ref i_x[2212029]:channel(true,dynamic,false)[1060858] "temp"
      (2212033 'move' i_x[2212029](2212031 'set reference' w[1158270]))
      (2212037 call deinit[1569162] i_x[2212029])
      val error[1801787]:Error[167938] "error variable" "temp"
      (1801789 'move' error[1801787] nil[44])
      (1801793 call close[235936] f[1158242] error[1801787])
      val errorExists[2057421]:bool[10] "temp"
      (2057426 'move' errorExists[2057421](2057423 '!=' error[1801787] nil[44]))
      if errorExists[2057421]
      {
        gotoErrorHandling handler[1801804] handler[1801804]
      }
      label handler[1801804]
      val errorExists[2057429]:bool[10] "temp"
      (2057434 'move' errorExists[2057429](2057431 '!=' error[1801787] nil[44]))
      if errorExists[2057429]
      {
        (1801815 call chpl_uncaught_error[170243] error[1801787])
      }
      ref i_x[2284013]:file[235492] "temp"
      (2284017 'move' i_x[2284013](2284015 'set reference' f[1158242]))
      (2284021 call deinit[235803] i_x[2284013])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val tmp[2213326]:int(32)[95] "dead after last mention" "temp"
    (2213328 'move' tmp[2213326] local_IOHINT_NONE[2335590])
    val errorExists[2056085]:bool[10] "temp"
    (2056090 'move' errorExists[2056085](2056087 '!=' error[1769290] nil[44]))
    if errorExists[2056085]
    {
      val error[1801823]:Error[167938] "error variable" "temp"
      (1801825 'move' error[1801823] nil[44])
      (1801829 call close[1062273] w[1158270] error[1801823])
      val errorExists[2057437]:bool[10] "temp"
      (2057442 'move' errorExists[2057437](2057439 '!=' error[1801823] nil[44]))
      if errorExists[2057437]
      {
        gotoErrorHandling handler[1801840] handler[1801840]
      }
      label handler[1801840]
      val errorExists[2057445]:bool[10] "temp"
      (2057450 'move' errorExists[2057445](2057447 '!=' error[1801823] nil[44]))
      if errorExists[2057445]
      {
        (1801851 call chpl_uncaught_error[170243] error[1801823])
      }
      ref i_x[2212041]:channel(true,dynamic,false)[1060858] "temp"
      (2212045 'move' i_x[2212041](2212043 'set reference' w[1158270]))
      (2212049 call deinit[1569162] i_x[2212041])
      val error[1801859]:Error[167938] "error variable" "temp"
      (1801861 'move' error[1801859] nil[44])
      (1801865 call close[235936] f[1158242] error[1801859])
      val errorExists[2057453]:bool[10] "temp"
      (2057458 'move' errorExists[2057453](2057455 '!=' error[1801859] nil[44]))
      if errorExists[2057453]
      {
        gotoErrorHandling handler[1801876] handler[1801876]
      }
      label handler[1801876]
      val errorExists[2057461]:bool[10] "temp"
      (2057466 'move' errorExists[2057461](2057463 '!=' error[1801859] nil[44]))
      if errorExists[2057461]
      {
        (1801887 call chpl_uncaught_error[170243] error[1801859])
      }
      ref i_x[2284025]:file[235492] "temp"
      (2284029 'move' i_x[2284025](2284027 'set reference' f[1158242]))
      (2284033 call deinit[235803] i_x[2284025])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val default_arg_style[1175618]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2213415]:file[235492] "temp"
    (2213419 'move' i_this[2213415](2213417 'set reference' f[1158242]))
    val ret[2213428]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2213430]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2213432]:Error[167938] "error variable" "temp"
    (2213434 'move' error[2213432] nil[44])
    (2213437 'move' style[2213430](2213440 call _style[235872] i_this[2213415] error[2213432]))
    val errorExists[2213443]:bool[10] "temp"
    (2213445 'move' errorExists[2213443](2213447 '!=' error[2213432] nil[44]))
    if errorExists[2213443]
    {
      (2213452 '=' error[1769290] error[2213432])
      gotoErrorHandlingReturn _endreader_default_style[2213461] _endreader_default_style[2213461]
    }
    (2213458 'move' ret[2213428] style[2213430])
    label _endreader_default_style[2213461]
    (1175624 'move' default_arg_style[1175618] ret[2213428])
    val errorExists[2056093]:bool[10] "temp"
    (2056098 'move' errorExists[2056093](2056095 '!=' error[1769290] nil[44]))
    if errorExists[2056093]
    {
      val error[1801895]:Error[167938] "error variable" "temp"
      (1801897 'move' error[1801895] nil[44])
      (1801901 call close[1062273] w[1158270] error[1801895])
      val errorExists[2057469]:bool[10] "temp"
      (2057474 'move' errorExists[2057469](2057471 '!=' error[1801895] nil[44]))
      if errorExists[2057469]
      {
        gotoErrorHandling handler[1801912] handler[1801912]
      }
      label handler[1801912]
      val errorExists[2057477]:bool[10] "temp"
      (2057482 'move' errorExists[2057477](2057479 '!=' error[1801895] nil[44]))
      if errorExists[2057477]
      {
        (1801923 call chpl_uncaught_error[170243] error[1801895])
      }
      ref i_x[2212053]:channel(true,dynamic,false)[1060858] "temp"
      (2212057 'move' i_x[2212053](2212055 'set reference' w[1158270]))
      (2212061 call deinit[1569162] i_x[2212053])
      val error[1801931]:Error[167938] "error variable" "temp"
      (1801933 'move' error[1801931] nil[44])
      (1801937 call close[235936] f[1158242] error[1801931])
      val errorExists[2057485]:bool[10] "temp"
      (2057490 'move' errorExists[2057485](2057487 '!=' error[1801931] nil[44]))
      if errorExists[2057485]
      {
        gotoErrorHandling handler[1801948] handler[1801948]
      }
      label handler[1801948]
      val errorExists[2057493]:bool[10] "temp"
      (2057498 'move' errorExists[2057493](2057495 '!=' error[1801931] nil[44]))
      if errorExists[2057493]
      {
        (1801959 call chpl_uncaught_error[170243] error[1801931])
      }
      ref i_x[2284037]:file[235492] "temp"
      (2284041 'move' i_x[2284037](2284039 'set reference' f[1158242]))
      (2284045 call deinit[235803] i_x[2284037])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val ret_tmp[1790251]:channel(false,dynamic,false)[1080593] "temp"
    (1158348 call reader[1080499] f[1158242] 0 9223372036854775807 tmp[2213326] default_arg_style[1175618] error[1769290] ret_tmp[1790251])
    (1790254 'move' call_tmp[1158340] ret_tmp[1790251])
    val errorExists[2056101]:bool[10] "temp"
    (2056106 'move' errorExists[2056101](2056103 '!=' error[1769290] nil[44]))
    if errorExists[2056101]
    {
      val error[1801967]:Error[167938] "error variable" "temp"
      (1801969 'move' error[1801967] nil[44])
      (1801973 call close[1062273] w[1158270] error[1801967])
      val errorExists[2057501]:bool[10] "temp"
      (2057506 'move' errorExists[2057501](2057503 '!=' error[1801967] nil[44]))
      if errorExists[2057501]
      {
        gotoErrorHandling handler[1801984] handler[1801984]
      }
      label handler[1801984]
      val errorExists[2057509]:bool[10] "temp"
      (2057514 'move' errorExists[2057509](2057511 '!=' error[1801967] nil[44]))
      if errorExists[2057509]
      {
        (1801995 call chpl_uncaught_error[170243] error[1801967])
      }
      ref i_x[2212065]:channel(true,dynamic,false)[1060858] "temp"
      (2212069 'move' i_x[2212065](2212067 'set reference' w[1158270]))
      (2212073 call deinit[1569162] i_x[2212065])
      val error[1802003]:Error[167938] "error variable" "temp"
      (1802005 'move' error[1802003] nil[44])
      (1802009 call close[235936] f[1158242] error[1802003])
      val errorExists[2057517]:bool[10] "temp"
      (2057522 'move' errorExists[2057517](2057519 '!=' error[1802003] nil[44]))
      if errorExists[2057517]
      {
        gotoErrorHandling handler[1802020] handler[1802020]
      }
      label handler[1802020]
      val errorExists[2057525]:bool[10] "temp"
      (2057530 'move' errorExists[2057525](2057527 '!=' error[1802003] nil[44]))
      if errorExists[2057525]
      {
        (1802031 call chpl_uncaught_error[170243] error[1802003])
      }
      ref i_x[2284049]:file[235492] "temp"
      (2284053 'move' i_x[2284049](2284051 'set reference' f[1158242]))
      (2284057 call deinit[235803] i_x[2284049])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val r[1158351]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
    (1158353 'move' r[1158351] call_tmp[1158340])
    (1158380 call readBytes[1082750] r[1158351] call_tmp[2213073] call_tmp[1158296] error[1769290])
    val errorExists[2056109]:bool[10] "temp"
    (2056114 'move' errorExists[2056109](2056111 '!=' error[1769290] nil[44]))
    if errorExists[2056109]
    {
      val error[1802039]:Error[167938] "error variable" "temp"
      (1802041 'move' error[1802039] nil[44])
      (1802045 call close[1082005] r[1158351] error[1802039])
      val errorExists[2057533]:bool[10] "temp"
      (2057538 'move' errorExists[2057533](2057535 '!=' error[1802039] nil[44]))
      if errorExists[2057533]
      {
        gotoErrorHandling handler[1802056] handler[1802056]
      }
      label handler[1802056]
      val errorExists[2057541]:bool[10] "temp"
      (2057546 'move' errorExists[2057541](2057543 '!=' error[1802039] nil[44]))
      if errorExists[2057541]
      {
        (1802067 call chpl_uncaught_error[170243] error[1802039])
      }
      ref i_x[2287228]:channel(false,dynamic,false)[1080593] "temp"
      (2287232 'move' i_x[2287228](2287230 'set reference' r[1158351]))
      (2287236 call deinit[1573416] i_x[2287228])
      val error[1802075]:Error[167938] "error variable" "temp"
      (1802077 'move' error[1802075] nil[44])
      (1802081 call close[1062273] w[1158270] error[1802075])
      val errorExists[2057549]:bool[10] "temp"
      (2057554 'move' errorExists[2057549](2057551 '!=' error[1802075] nil[44]))
      if errorExists[2057549]
      {
        gotoErrorHandling handler[1802092] handler[1802092]
      }
      label handler[1802092]
      val errorExists[2057557]:bool[10] "temp"
      (2057562 'move' errorExists[2057557](2057559 '!=' error[1802075] nil[44]))
      if errorExists[2057557]
      {
        (1802103 call chpl_uncaught_error[170243] error[1802075])
      }
      ref i_x[2212077]:channel(true,dynamic,false)[1060858] "temp"
      (2212081 'move' i_x[2212077](2212079 'set reference' w[1158270]))
      (2212085 call deinit[1569162] i_x[2212077])
      val error[1802111]:Error[167938] "error variable" "temp"
      (1802113 'move' error[1802111] nil[44])
      (1802117 call close[235936] f[1158242] error[1802111])
      val errorExists[2057565]:bool[10] "temp"
      (2057570 'move' errorExists[2057565](2057567 '!=' error[1802111] nil[44]))
      if errorExists[2057565]
      {
        gotoErrorHandling handler[1802128] handler[1802128]
      }
      label handler[1802128]
      val errorExists[2057573]:bool[10] "temp"
      (2057578 'move' errorExists[2057573](2057575 '!=' error[1802111] nil[44]))
      if errorExists[2057573]
      {
        (1802139 call chpl_uncaught_error[170243] error[1802111])
      }
      ref i_x[2284061]:file[235492] "temp"
      (2284065 'move' i_x[2284061](2284063 'set reference' f[1158242]))
      (2284069 call deinit[235803] i_x[2284061])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    ref call_tmp[2141886]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2141888 'move' call_tmp[2141886](2141890 'array_get' buf[1158334] call_tmp[1158296]))
    const-val coerce_tmp[1175634]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175640 'move' coerce_tmp[1175634](1175636 'cast' uint(8)[100] 0))
    (2142362 '=' call_tmp[2141886] coerce_tmp[1175634])
    const-val ret[2086829]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2086831]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2086833]:Error[167938] "error variable" "temp"
    (2086835 'move' error[2086833] nil[44])
    const-val ret_tmp[2086838]:string[26] "temp"
    (2086841 call decodeByteBuffer[173892] call_tmp[2213073] call_tmp[1158296] replace[173648] error[2086833] ret_tmp[2086838])
    (2086847 'move' call_tmp[2086831] ret_tmp[2086838])
    val errorExists[2086850]:bool[10] "temp"
    (2086852 'move' errorExists[2086850](2086854 '!=' error[2086833] nil[44]))
    if errorExists[2086850]
    {
      (2086859 '=' error[1769290] error[2086833])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2086868] _endcreateStringWithNewBuffer[2086868]
    }
    (2086865 'move' ret[2086829] call_tmp[2086831])
    label _endcreateStringWithNewBuffer[2086868]
    val errorExists[2056117]:bool[10] "temp"
    (2056122 'move' errorExists[2056117](2056119 '!=' error[1769290] nil[44]))
    if errorExists[2056117]
    {
      val error[1802147]:Error[167938] "error variable" "temp"
      (1802149 'move' error[1802147] nil[44])
      (1802153 call close[1082005] r[1158351] error[1802147])
      val errorExists[2057581]:bool[10] "temp"
      (2057586 'move' errorExists[2057581](2057583 '!=' error[1802147] nil[44]))
      if errorExists[2057581]
      {
        gotoErrorHandling handler[1802164] handler[1802164]
      }
      label handler[1802164]
      val errorExists[2057589]:bool[10] "temp"
      (2057594 'move' errorExists[2057589](2057591 '!=' error[1802147] nil[44]))
      if errorExists[2057589]
      {
        (1802175 call chpl_uncaught_error[170243] error[1802147])
      }
      ref i_x[2287240]:channel(false,dynamic,false)[1080593] "temp"
      (2287244 'move' i_x[2287240](2287242 'set reference' r[1158351]))
      (2287248 call deinit[1573416] i_x[2287240])
      val error[1802183]:Error[167938] "error variable" "temp"
      (1802185 'move' error[1802183] nil[44])
      (1802189 call close[1062273] w[1158270] error[1802183])
      val errorExists[2057597]:bool[10] "temp"
      (2057602 'move' errorExists[2057597](2057599 '!=' error[1802183] nil[44]))
      if errorExists[2057597]
      {
        gotoErrorHandling handler[1802200] handler[1802200]
      }
      label handler[1802200]
      val errorExists[2057605]:bool[10] "temp"
      (2057610 'move' errorExists[2057605](2057607 '!=' error[1802183] nil[44]))
      if errorExists[2057605]
      {
        (1802211 call chpl_uncaught_error[170243] error[1802183])
      }
      ref i_x[2212089]:channel(true,dynamic,false)[1060858] "temp"
      (2212093 'move' i_x[2212089](2212091 'set reference' w[1158270]))
      (2212097 call deinit[1569162] i_x[2212089])
      val error[1802219]:Error[167938] "error variable" "temp"
      (1802221 'move' error[1802219] nil[44])
      (1802225 call close[235936] f[1158242] error[1802219])
      val errorExists[2057613]:bool[10] "temp"
      (2057618 'move' errorExists[2057613](2057615 '!=' error[1802219] nil[44]))
      if errorExists[2057613]
      {
        gotoErrorHandling handler[1802236] handler[1802236]
      }
      label handler[1802236]
      val errorExists[2057621]:bool[10] "temp"
      (2057626 'move' errorExists[2057621](2057623 '!=' error[1802219] nil[44]))
      if errorExists[2057621]
      {
        (1802247 call chpl_uncaught_error[170243] error[1802219])
      }
      ref i_x[2284073]:file[235492] "temp"
      (2284077 'move' i_x[2284073](2284075 'set reference' f[1158242]))
      (2284081 call deinit[235803] i_x[2284073])
      gotoErrorHandling handler[1769291] handler[1769291]
    }
    const-val coerce_tmp[1175645]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175651 'move' coerce_tmp[1175645](1175647 'cast' c_void_ptr[149] call_tmp[2213073]))
    (2149956 call chpl_here_free[188081] coerce_tmp[1175645])
    (1175655 'move' ret[1157785] ret[2086829])
    val error[1802255]:Error[167938] "error variable" "temp"
    (1802257 'move' error[1802255] nil[44])
    (1802261 call close[1082005] r[1158351] error[1802255])
    val errorExists[2057629]:bool[10] "temp"
    (2057634 'move' errorExists[2057629](2057631 '!=' error[1802255] nil[44]))
    if errorExists[2057629]
    {
      gotoErrorHandling handler[1802272] handler[1802272]
    }
    label handler[1802272]
    val errorExists[2057637]:bool[10] "temp"
    (2057642 'move' errorExists[2057637](2057639 '!=' error[1802255] nil[44]))
    if errorExists[2057637]
    {
      (1802283 call chpl_uncaught_error[170243] error[1802255])
    }
    ref i_x[2287252]:channel(false,dynamic,false)[1080593] "temp"
    (2287256 'move' i_x[2287252](2287254 'set reference' r[1158351]))
    (2287260 call deinit[1573416] i_x[2287252])
    val error[1802291]:Error[167938] "error variable" "temp"
    (1802293 'move' error[1802291] nil[44])
    (1802297 call close[1062273] w[1158270] error[1802291])
    val errorExists[2057645]:bool[10] "temp"
    (2057650 'move' errorExists[2057645](2057647 '!=' error[1802291] nil[44]))
    if errorExists[2057645]
    {
      gotoErrorHandling handler[1802308] handler[1802308]
    }
    label handler[1802308]
    val errorExists[2057653]:bool[10] "temp"
    (2057658 'move' errorExists[2057653](2057655 '!=' error[1802291] nil[44]))
    if errorExists[2057653]
    {
      (1802319 call chpl_uncaught_error[170243] error[1802291])
    }
    ref i_x[2212101]:channel(true,dynamic,false)[1060858] "temp"
    (2212105 'move' i_x[2212101](2212103 'set reference' w[1158270]))
    (2212109 call deinit[1569162] i_x[2212101])
    val error[1802327]:Error[167938] "error variable" "temp"
    (1802329 'move' error[1802327] nil[44])
    (1802333 call close[235936] f[1158242] error[1802327])
    val errorExists[2057661]:bool[10] "temp"
    (2057666 'move' errorExists[2057661](2057663 '!=' error[1802327] nil[44]))
    if errorExists[2057661]
    {
      gotoErrorHandling handler[1802344] handler[1802344]
    }
    label handler[1802344]
    val errorExists[2057669]:bool[10] "temp"
    (2057674 'move' errorExists[2057669](2057671 '!=' error[1802327] nil[44]))
    if errorExists[2057669]
    {
      (1802355 call chpl_uncaught_error[170243] error[1802327])
    }
    ref i_x[2284085]:file[235492] "temp"
    (2284089 'move' i_x[2284085](2284087 'set reference' f[1158242]))
    (2284093 call deinit[235803] i_x[2284085])
    gotoReturn _end_stringify[1158448] _end_stringify[1158448]
    label handler[1769291]
    val errorExists[2056125]:bool[10] "temp"
    (2056130 'move' errorExists[2056125](2056127 '!=' error[1769290] nil[44]))
    if errorExists[2056125]
    {
      (1769481 call chpl_uncaught_error[170243] error[1769290])
    }
    label _end_stringify[1158448]
    (1791428 '=' _retArg[1791426] ret[1157785])
    (1791430 return _void[55])
  }
  function stringify[1272404](const  ref arg _e0_args[1272406]:string[26], const in arg _e1_args[1272408]:int(64)[13], const  ref arg _e2_args[1272410]:string[26], ref arg _retArg[1793630]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336104]:string[26] "temp"
    (2336105 'move' "" "")
    const-val ret[1272414]:string[26] "dead after last mention" "RVV" "temp"
    val str[1272452]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150963]:string[26] "temp"
    (2150966 'move' inlineImm[2150963] "")
    ref i_x[2150968]:string[26] "temp"
    (2150972 'move' i_x[2150968](2150970 'set reference' inlineImm[2150963]))
    val ret[2150975]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150977]:string[26] "dead after last mention" "temp"
    (2150980 call init=[30771] tmp[2150977] i_x[2150968])
    (2150983 'move' ret[2150975] tmp[2150977])
    (1272454 'move' str[1272452] ret[2150975])
    (1276175 call +=[38797] str[1272452] _e0_args[1272406])
    const-val call_tmp[1276750]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790023]:string[26] "temp"
    (1276755 call _cast[1063064] _e1_args[1272408] ret_tmp[1790023])
    (1790026 'move' call_tmp[1276750] ret_tmp[1790023])
    (1276759 call +=[38797] str[1272452] call_tmp[1276750])
    ref i_x[2078646]:string[26] "temp"
    (2078650 'move' i_x[2078646](2078648 'set reference' call_tmp[1276750]))
    (2078654 call deinit[30831] i_x[2078646])
    (1276865 call +=[38797] str[1272452] _e2_args[1272410])
    (1277350 'move' ret[1272414] str[1272452])
    gotoReturn _end_stringify[1273077] _end_stringify[1273077]
    label _end_stringify[1273077]
    (1793632 '=' _retArg[1793630] ret[1272414])
    (1793636 return _void[55])
  }
  function stringify[1212889](const  ref arg _e0_args[1212891]:string[26], const in arg _e1_args[1212893]:int(64)[13], ref arg _retArg[1791814]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2335851]:string[26] "temp"
    (2335852 'move' "" "")
    const-val ret[1212897]:string[26] "dead after last mention" "RVV" "temp"
    val str[1212932]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150938]:string[26] "temp"
    (2150941 'move' inlineImm[2150938] "")
    ref i_x[2150943]:string[26] "temp"
    (2150947 'move' i_x[2150943](2150945 'set reference' inlineImm[2150938]))
    val ret[2150950]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2150952]:string[26] "dead after last mention" "temp"
    (2150955 call init=[30771] tmp[2150952] i_x[2150943])
    (2150958 'move' ret[2150950] tmp[2150952])
    (1212934 'move' str[1212932] ret[2150950])
    (1216572 call +=[38797] str[1212932] _e0_args[1212891])
    const-val call_tmp[1217147]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789993]:string[26] "temp"
    (1217152 call _cast[1063064] _e1_args[1212893] ret_tmp[1789993])
    (1789996 'move' call_tmp[1217147] ret_tmp[1789993])
    (1217156 call +=[38797] str[1212932] call_tmp[1217147])
    ref i_x[2078382]:string[26] "temp"
    (2078386 'move' i_x[2078382](2078384 'set reference' call_tmp[1217147]))
    (2078390 call deinit[30831] i_x[2078382])
    (1217368 'move' ret[1212897] str[1212932])
    gotoReturn _end_stringify[1213557] _end_stringify[1213557]
    label _end_stringify[1213557]
    (1791816 '=' _retArg[1791814] ret[1212897])
    (1791820 return _void[55])
  }
  function stringify[1278901](const  ref arg _e0_args[1278903]:string[26], const in arg _e1_args[1278905]:int(64)[13], const  ref arg _e2_args[1278907]:string[26], const in arg _e3_args[1278909]:int(64)[13], const  ref arg _e4_args[1278911]:string[26], ref arg _retArg[1793656]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336122]:string[26] "temp"
    (2336123 'move' "" "")
    const-val ret[1278915]:string[26] "dead after last mention" "RVV" "temp"
    val str[1278959]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2150988]:string[26] "temp"
    (2150991 'move' inlineImm[2150988] "")
    ref i_x[2150993]:string[26] "temp"
    (2150997 'move' i_x[2150993](2150995 'set reference' inlineImm[2150988]))
    val ret[2151000]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151002]:string[26] "dead after last mention" "temp"
    (2151005 call init=[30771] tmp[2151002] i_x[2150993])
    (2151008 'move' ret[2151000] tmp[2151002])
    (1278961 'move' str[1278959] ret[2151000])
    (1283490 call +=[38797] str[1278959] _e0_args[1278903])
    const-val call_tmp[1284065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790029]:string[26] "temp"
    (1284070 call _cast[1063064] _e1_args[1278905] ret_tmp[1790029])
    (1790032 'move' call_tmp[1284065] ret_tmp[1790029])
    (1284074 call +=[38797] str[1278959] call_tmp[1284065])
    ref i_x[2078682]:string[26] "temp"
    (2078686 'move' i_x[2078682](2078684 'set reference' call_tmp[1284065]))
    (2078690 call deinit[30831] i_x[2078682])
    (1284180 call +=[38797] str[1278959] _e2_args[1278907])
    const-val call_tmp[1284755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790035]:string[26] "temp"
    (1284760 call _cast[1063064] _e3_args[1278909] ret_tmp[1790035])
    (1790038 'move' call_tmp[1284755] ret_tmp[1790035])
    (1284764 call +=[38797] str[1278959] call_tmp[1284755])
    ref i_x[2078694]:string[26] "temp"
    (2078698 'move' i_x[2078694](2078696 'set reference' call_tmp[1284755]))
    (2078702 call deinit[30831] i_x[2078694])
    (1284870 call +=[38797] str[1278959] _e4_args[1278911])
    (1285503 'move' ret[1278915] str[1278959])
    gotoReturn _end_stringify[1279584] _end_stringify[1279584]
    label _end_stringify[1279584]
    (1793658 '=' _retArg[1793656] ret[1278915])
    (1793662 return _void[55])
  }
  function stringify[1337699](const  ref arg _e0_args[1337701]:string[26], const  ref arg _e1_args[1337703]:string[26], const in arg _e2_args[1337705]:int(64)[13], const  ref arg _e3_args[1337707]:string[26], const in arg _e4_args[1337709]:range(int(64),bounded,false)[1026725], ref arg _retArg[1794363]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336268]:string[26] "temp"
    (2336269 'move' "" "")
    const-val ret[1337713]:string[26] "dead after last mention" "RVV" "temp"
    val str[1337757]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2151038]:string[26] "temp"
    (2151041 'move' inlineImm[2151038] "")
    ref i_x[2151043]:string[26] "temp"
    (2151047 'move' i_x[2151043](2151045 'set reference' inlineImm[2151038]))
    val ret[2151050]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151052]:string[26] "dead after last mention" "temp"
    (2151055 call init=[30771] tmp[2151052] i_x[2151043])
    (2151058 'move' ret[2151050] tmp[2151052])
    (1337759 'move' str[1337757] ret[2151050])
    (1341654 call +=[38797] str[1337757] _e0_args[1337701])
    (1341999 call +=[38797] str[1337757] _e1_args[1337703])
    const-val call_tmp[1342574]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790041]:string[26] "temp"
    (1342579 call _cast[1063064] _e2_args[1337705] ret_tmp[1790041])
    (1790044 'move' call_tmp[1342574] ret_tmp[1790041])
    (1342583 call +=[38797] str[1337757] call_tmp[1342574])
    ref i_x[2078754]:string[26] "temp"
    (2078758 'move' i_x[2078754](2078756 'set reference' call_tmp[1342574]))
    (2078762 call deinit[30831] i_x[2078754])
    (1342689 call +=[38797] str[1337757] _e3_args[1337707])
    const-val call_tmp[1343264]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790838]:string[26] "temp"
    (1343269 call _cast[1119348] _e4_args[1337709] ret_tmp[1790838])
    (1790841 'move' call_tmp[1343264] ret_tmp[1790838])
    (1343273 call +=[38797] str[1337757] call_tmp[1343264])
    ref i_x[2078766]:string[26] "temp"
    (2078770 'move' i_x[2078766](2078768 'set reference' call_tmp[1343264]))
    (2078774 call deinit[30831] i_x[2078766])
    (1343660 'move' ret[1337713] str[1337757])
    gotoReturn _end_stringify[1338382] _end_stringify[1338382]
    label _end_stringify[1338382]
    (1794365 '=' _retArg[1794363] ret[1337713])
    (1794371 return _void[55])
  }
  function stringify[1398273](const  ref arg _e0_args[1398275]:string[26], const in arg _e1_args[1398277]:int(64)[13], const  ref arg _e2_args[1398279]:string[26], const in arg _e3_args[1398281]:int(64)[13], const  ref arg _e4_args[1398283]:string[26], const in arg _e5_args[1398285]:int(64)[13], ref arg _retArg[1795148]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3099[2336510]:string[26] "temp"
    (2336511 'move' "" "")
    const-val ret[1398289]:string[26] "dead after last mention" "RVV" "temp"
    val str[1398336]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2151063]:string[26] "temp"
    (2151066 'move' inlineImm[2151063] "")
    ref i_x[2151068]:string[26] "temp"
    (2151072 'move' i_x[2151068](2151070 'set reference' inlineImm[2151063]))
    val ret[2151075]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2151077]:string[26] "dead after last mention" "temp"
    (2151080 call init=[30771] tmp[2151077] i_x[2151068])
    (2151083 'move' ret[2151075] tmp[2151077])
    (1398338 'move' str[1398336] ret[2151075])
    (1402958 call +=[38797] str[1398336] _e0_args[1398275])
    const-val call_tmp[1403533]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790047]:string[26] "temp"
    (1403538 call _cast[1063064] _e1_args[1398277] ret_tmp[1790047])
    (1790050 'move' call_tmp[1403533] ret_tmp[1790047])
    (1403542 call +=[38797] str[1398336] call_tmp[1403533])
    ref i_x[2079102]:string[26] "temp"
    (2079106 'move' i_x[2079102](2079104 'set reference' call_tmp[1403533]))
    (2079110 call deinit[30831] i_x[2079102])
    (1403648 call +=[38797] str[1398336] _e2_args[1398279])
    const-val call_tmp[1404223]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790053]:string[26] "temp"
    (1404228 call _cast[1063064] _e3_args[1398281] ret_tmp[1790053])
    (1790056 'move' call_tmp[1404223] ret_tmp[1790053])
    (1404232 call +=[38797] str[1398336] call_tmp[1404223])
    ref i_x[2079114]:string[26] "temp"
    (2079118 'move' i_x[2079114](2079116 'set reference' call_tmp[1404223]))
    (2079122 call deinit[30831] i_x[2079114])
    (1404338 call +=[38797] str[1398336] _e4_args[1398283])
    const-val call_tmp[1404913]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790059]:string[26] "temp"
    (1404918 call _cast[1063064] _e5_args[1398285] ret_tmp[1790059])
    (1790062 'move' call_tmp[1404913] ret_tmp[1790059])
    (1404922 call +=[38797] str[1398336] call_tmp[1404913])
    ref i_x[2079126]:string[26] "temp"
    (2079130 'move' i_x[2079126](2079128 'set reference' call_tmp[1404913]))
    (2079134 call deinit[30831] i_x[2079126])
    (1405430 'move' ret[1398289] str[1398336])
    gotoReturn _end_stringify[1398961] _end_stringify[1398961]
    label _end_stringify[1398961]
    (1795150 '=' _retArg[1795148] ret[1398289])
    (1795154 return _void[55])
  }
  val _arg_to_proto_names[246473]:heap__tuple_6_star_string[2033843] "dead at end of block" "insert auto destroy" "private"
  function channel(true,dynamic,false)[1060858].close[1062273](const  ref arg this[1062279]:channel(true,dynamic,false)[1060858], ref arg error_out[1768310]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_3144[2335026]:string[26] "temp"
    (2335027 'move' "in channel.close" "in channel.close")
    const-val local__str_literal_129[2335019]:string[26] "temp"
    (2335020 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3142[2335013]:string[26] "temp"
    (2335014 'move' "cannot close invalid channel" "cannot close invalid channel")
    val err[1062291]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153191]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153193 'move' call_tmp[2153191](2153196 call qio_int_to_err[223546] 0))
    (1062293 'move' err[1062291] call_tmp[2153191])
    const-val coerce_tmp[1062480]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062484 'move' coerce_tmp[1062480](2325958 '.v' this[1062279] _channel_internal[1060851]))
    const-val call_tmp[2208783]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208785 'move' call_tmp[2208783](2208787 'cast' c_void_ptr[149] coerce_tmp[1062480]))
    const-val call_tmp[2208790]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208792 'move' call_tmp[2208790](2208794 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2208797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208799 'move' call_tmp[2208797](2208801 'ptr_eq' call_tmp[2208783] call_tmp[2208790]))
    if call_tmp[2208797]
    {
      const-val call_tmp[1062322]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062495]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062501 'move' coerce_tmp[1062495](1062497 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[1789389]:owned SystemError[1000149] "temp"
      (1062330 call fromSyserr[1017024] coerce_tmp[1062495] "cannot close invalid channel" ret_tmp[1789389])
      (1789392 'move' call_tmp[1062322] ret_tmp[1789389])
      val call_tmp[1062333]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062504]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789329]:owned Error[966369] "temp"
      ref i_x[2171939]:owned SystemError[1000149] "temp"
      (2171943 'move' i_x[2171939](2171941 'set reference' call_tmp[1062322]))
      ref i__retArg[2171945]:owned Error[966369] "temp"
      (2171949 'move' i__retArg[2171945](2171947 'set reference' ret_tmp[1789329]))
      val _formal_tmp_x[2171952]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2171954 'move' _formal_tmp_x[2171952] i_x[2171939])
      const-val ret[2171957]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2171959]:owned SystemError[1000149] "temp"
      (2171961 'move' i_this[2171959](2171963 'set reference' _formal_tmp_x[2171952]))
      val coerce_tmp[2171965]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2171967 'move' coerce_tmp[2171965](2171969 '.v' i_this[2171959] chpl_p[1000144]))
      val call_tmp[2171972]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2171974 'move' call_tmp[2171972](2171976 'cast' Error[167938] coerce_tmp[2171965]))
      ref i_this[2171984]:owned SystemError[1000149] "temp"
      (2171986 'move' i_this[2171984](2171988 'set reference' _formal_tmp_x[2171952]))
      val tmp[2171990]:SystemError[264757] "temp"
      (2171992 'move' tmp[2171990](2171994 'cast' SystemError[264757] nil[44]))
      (2171997 '.=' i_this[2171984] chpl_p[1000144] tmp[2171990])
      val coerce_tmp[2172001]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2172003 'move' coerce_tmp[2172001](2172005 'cast' object[22] call_tmp[2171972]))
      const-val call_tmp[2172008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2172010 'move' call_tmp[2172008](2172012 'ptr_eq' coerce_tmp[2172001] nil[44]))
      if call_tmp[2172008]
      {
        (2172018 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2172021]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2172023]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2172026 call init[968005] initTemp[2172023] call_tmp[2171972])
      (2172029 'move' call_tmp[2172021] initTemp[2172023])
      (2172032 'move' ret[2171957] call_tmp[2172021])
      (2172036 call chpl__autoDestroy[1549120] _formal_tmp_x[2171952])
      (2172040 '=' i__retArg[2171945] ret[2171957])
      (1789332 'move' coerce_tmp[1062504] ret_tmp[1789329])
      const-val _formal_tmp_in_err[1062683]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062687 'move' _formal_tmp_in_err[1062683] coerce_tmp[1062504])
      (1062335 'move' call_tmp[1062333](1062338 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1062683]))
      (1768323 '=' error_out[1768310] call_tmp[1062333])
      gotoErrorHandlingReturn _endclose[1768312] _endclose[1768312]
    }
    ref call_tmp[2208465]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208467 'move' call_tmp[2208465](2208469 '.' this[1062279] home[1060846]))
    const-val call_tmp[1062353]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2111853]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111855 'move' coerce_tmp[2111853](2111857 '.v' call_tmp[2208465] _instance[89975]))
    val coerce_tmp[2111860]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111862 'move' coerce_tmp[2111860](2111864 'cast' object[22] coerce_tmp[2111853]))
    const-val call_tmp[2111867]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111869 'move' call_tmp[2111867](2111871 'ptr_eq' coerce_tmp[2111860] nil[44]))
    if call_tmp[2111867]
    {
      (2111877 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1062355 'move' call_tmp[1062353](1062357 '_wide_get_locale' coerce_tmp[2111853]))
    val rvfDerefTmp[2032461]:channel(true,dynamic,false)[1060858] "temp"
    (2032465 'move' rvfDerefTmp[2032461](2032463 'deref' this[1062279]))
    val isdirect[2038009]:bool[10] "temp"
    (2038014 'move' isdirect[2038009](2038011 call chpl_doDirectExecuteOn[187423] call_tmp[1062353]))
    if isdirect[2038009]
    {
      (2038018 call on_fn[1062366] rvfDerefTmp[2032461] err[1062291])
    }
    {
      val _args_foron_fn[2038036]:_class_localson_fn[2038026] "temp"
      (2038040 'move' _args_foron_fn[2038036](2038038 'stack allocate class' _class_localson_fn[2038026]))
      (2038042 '.=' _args_foron_fn[2038036] _0_tmp[2038029] call_tmp[1062353])
      (2038046 '.=' _args_foron_fn[2038036] _1_rvfDerefTmp[2038031] rvfDerefTmp[2032461])
      ref tmp[2038050]:syserr[223496] "temp"
      (2038054 'move' tmp[2038050](2038052 'set reference' err[1062291]))
      (2038056 '.=' _args_foron_fn[2038036] _2_err[2038033] tmp[2038050])
      val _args_vforon_fn[2038060]:c_void_ptr[149] "temp"
      (2038064 'move' _args_vforon_fn[2038060](2038062 'cast_to_void_star' _args_foron_fn[2038036]))
      val _args_sizeon_fn[2038066]:int(64)[13] "temp"
      (2038070 'move' _args_sizeon_fn[2038066](2038068 'sizeof_bundle' _class_localson_fn[2038026]))
      on(2038110 call wrapon_fn[2038072] call_tmp[1062353] _args_vforon_fn[2038060] _args_sizeon_fn[2038066] _args_foron_fn[2038036])
    }
    const-val call_tmp[2152756]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152758 'move' call_tmp[2152756](2152761 call qio_err_iserr[223558] err[1062291]))
    const-val call_tmp[2152763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152765 'move' call_tmp[2152763](2152767 '!=' call_tmp[2152756] 0))
    if call_tmp[2152763]
    {
      val error[1768327]:Error[167938] "error variable" "temp"
      (1768336 'move' error[1768327] nil[44])
      (1062420 call _ch_ioerror[1062776] this[1062279] err[1062291] "in channel.close" error[1768327])
      val errorExists[2055573]:bool[10] "temp"
      (2055578 'move' errorExists[2055573](2055575 '!=' error[1768327] nil[44]))
      if errorExists[2055573]
      {
        gotoErrorHandling handler[1768328] handler[1768328]
      }
      label handler[1768328]
      val errorExists[2055581]:bool[10] "temp"
      (2055586 'move' errorExists[2055581](2055583 '!=' error[1768327] nil[44]))
      if errorExists[2055581]
      {
        (1768343 '=' error_out[1768310] error[1768327])
        gotoErrorHandlingReturn _endclose[1768312] _endclose[1768312]
      }
    }
    label _endclose[1768312]
    (1062427 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].close[1082005](const  ref arg this[1082011]:channel(false,dynamic,false)[1080593], ref arg error_out[1769106]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_3144[2335286]:string[26] "temp"
    (2335287 'move' "in channel.close" "in channel.close")
    const-val local__str_literal_129[2335279]:string[26] "temp"
    (2335280 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3142[2335273]:string[26] "temp"
    (2335274 'move' "cannot close invalid channel" "cannot close invalid channel")
    val err[1082023]:syserr[223496] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2153286]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2153288 'move' call_tmp[2153286](2153291 call qio_int_to_err[223546] 0))
    (1082025 'move' err[1082023] call_tmp[2153286])
    const-val coerce_tmp[1082170]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082174 'move' coerce_tmp[1082170](2326121 '.v' this[1082011] _channel_internal[1080586]))
    const-val call_tmp[2208831]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208833 'move' call_tmp[2208831](2208835 'cast' c_void_ptr[149] coerce_tmp[1082170]))
    const-val call_tmp[2208838]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208840 'move' call_tmp[2208838](2208842 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2208845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208847 'move' call_tmp[2208845](2208849 'ptr_eq' call_tmp[2208831] call_tmp[2208838]))
    if call_tmp[2208845]
    {
      const-val call_tmp[1082054]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082179]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082185 'move' coerce_tmp[1082179](1082181 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[1789401]:owned SystemError[1000149] "temp"
      (1082062 call fromSyserr[1017024] coerce_tmp[1082179] "cannot close invalid channel" ret_tmp[1789401])
      (1789404 'move' call_tmp[1082054] ret_tmp[1789401])
      val call_tmp[1082065]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082188]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789347]:owned Error[966369] "temp"
      ref i_x[2172257]:owned SystemError[1000149] "temp"
      (2172261 'move' i_x[2172257](2172259 'set reference' call_tmp[1082054]))
      ref i__retArg[2172263]:owned Error[966369] "temp"
      (2172267 'move' i__retArg[2172263](2172265 'set reference' ret_tmp[1789347]))
      val _formal_tmp_x[2172270]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2172272 'move' _formal_tmp_x[2172270] i_x[2172257])
      const-val ret[2172275]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2172277]:owned SystemError[1000149] "temp"
      (2172279 'move' i_this[2172277](2172281 'set reference' _formal_tmp_x[2172270]))
      val coerce_tmp[2172283]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2172285 'move' coerce_tmp[2172283](2172287 '.v' i_this[2172277] chpl_p[1000144]))
      val call_tmp[2172290]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2172292 'move' call_tmp[2172290](2172294 'cast' Error[167938] coerce_tmp[2172283]))
      ref i_this[2172302]:owned SystemError[1000149] "temp"
      (2172304 'move' i_this[2172302](2172306 'set reference' _formal_tmp_x[2172270]))
      val tmp[2172308]:SystemError[264757] "temp"
      (2172310 'move' tmp[2172308](2172312 'cast' SystemError[264757] nil[44]))
      (2172315 '.=' i_this[2172302] chpl_p[1000144] tmp[2172308])
      val coerce_tmp[2172319]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2172321 'move' coerce_tmp[2172319](2172323 'cast' object[22] call_tmp[2172290]))
      const-val call_tmp[2172326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2172328 'move' call_tmp[2172326](2172330 'ptr_eq' coerce_tmp[2172319] nil[44]))
      if call_tmp[2172326]
      {
        (2172336 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2172339]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2172341]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2172344 call init[968005] initTemp[2172341] call_tmp[2172290])
      (2172347 'move' call_tmp[2172339] initTemp[2172341])
      (2172350 'move' ret[2172275] call_tmp[2172339])
      (2172354 call chpl__autoDestroy[1549120] _formal_tmp_x[2172270])
      (2172358 '=' i__retArg[2172263] ret[2172275])
      (1789350 'move' coerce_tmp[1082188] ret_tmp[1789347])
      const-val _formal_tmp_in_err[1082367]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082371 'move' _formal_tmp_in_err[1082367] coerce_tmp[1082188])
      (1082067 'move' call_tmp[1082065](1082070 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1082367]))
      (1769119 '=' error_out[1769106] call_tmp[1082065])
      gotoErrorHandlingReturn _endclose[1769108] _endclose[1769108]
    }
    ref call_tmp[2213560]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213562 'move' call_tmp[2213560](2213564 '.' this[1082011] home[1080581]))
    const-val call_tmp[1082085]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2112123]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112125 'move' coerce_tmp[2112123](2112127 '.v' call_tmp[2213560] _instance[89975]))
    val coerce_tmp[2112130]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2112132 'move' coerce_tmp[2112130](2112134 'cast' object[22] coerce_tmp[2112123]))
    const-val call_tmp[2112137]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2112139 'move' call_tmp[2112137](2112141 'ptr_eq' coerce_tmp[2112130] nil[44]))
    if call_tmp[2112137]
    {
      (2112147 call nilCheckHalt[210063] "argument to ! is nil")
    }
    (1082087 'move' call_tmp[1082085](1082089 '_wide_get_locale' coerce_tmp[2112123]))
    val rvfDerefTmp[2032639]:channel(false,dynamic,false)[1080593] "temp"
    (2032643 'move' rvfDerefTmp[2032639](2032641 'deref' this[1082011]))
    val isdirect[2039230]:bool[10] "temp"
    (2039235 'move' isdirect[2039230](2039232 call chpl_doDirectExecuteOn[187423] call_tmp[1082085]))
    if isdirect[2039230]
    {
      (2039239 call on_fn[1082098] rvfDerefTmp[2032639] err[1082023])
    }
    {
      val _args_foron_fn[2039257]:_class_localson_fn[2039247] "temp"
      (2039261 'move' _args_foron_fn[2039257](2039259 'stack allocate class' _class_localson_fn[2039247]))
      (2039263 '.=' _args_foron_fn[2039257] _0_tmp[2039250] call_tmp[1082085])
      (2039267 '.=' _args_foron_fn[2039257] _1_rvfDerefTmp[2039252] rvfDerefTmp[2032639])
      ref tmp[2039271]:syserr[223496] "temp"
      (2039275 'move' tmp[2039271](2039273 'set reference' err[1082023]))
      (2039277 '.=' _args_foron_fn[2039257] _2_err[2039254] tmp[2039271])
      val _args_vforon_fn[2039281]:c_void_ptr[149] "temp"
      (2039285 'move' _args_vforon_fn[2039281](2039283 'cast_to_void_star' _args_foron_fn[2039257]))
      val _args_sizeon_fn[2039287]:int(64)[13] "temp"
      (2039291 'move' _args_sizeon_fn[2039287](2039289 'sizeof_bundle' _class_localson_fn[2039247]))
      on(2039331 call wrapon_fn[2039293] call_tmp[1082085] _args_vforon_fn[2039281] _args_sizeon_fn[2039287] _args_foron_fn[2039257])
    }
    const-val call_tmp[2152824]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152826 'move' call_tmp[2152824](2152829 call qio_err_iserr[223558] err[1082023]))
    const-val call_tmp[2152831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152833 'move' call_tmp[2152831](2152835 '!=' call_tmp[2152824] 0))
    if call_tmp[2152831]
    {
      val error[1769123]:Error[167938] "error variable" "temp"
      (1769132 'move' error[1769123] nil[44])
      (1082152 call _ch_ioerror[1082460] this[1082011] err[1082023] "in channel.close" error[1769123])
      val errorExists[2055933]:bool[10] "temp"
      (2055938 'move' errorExists[2055933](2055935 '!=' error[1769123] nil[44]))
      if errorExists[2055933]
      {
        gotoErrorHandling handler[1769124] handler[1769124]
      }
      label handler[1769124]
      val errorExists[2055941]:bool[10] "temp"
      (2055946 'move' errorExists[2055941](2055943 '!=' error[1769123] nil[44]))
      if errorExists[2055941]
      {
        (1769139 '=' error_out[1769106] error[1769123])
        gotoErrorHandlingReturn _endclose[1769108] _endclose[1769108]
      }
    }
    label _endclose[1769108]
    (1082159 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].readBytes[1082750](const  ref arg this[1082756]:channel(false,dynamic,false)[1080593], const in arg x[1082758]:c_ptr(uint(8))[937334], const in arg len[1082762]:int(64)[13], ref arg error_out[1769232]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_3148[2335316]:string[26] "temp"
    (2335317 'move' "in channel.readBytes" "in channel.readBytes")
    const-val local__str_literal_129[2335310]:string[26] "temp"
    (2335311 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3146[2335304]:string[26] "temp"
    (2335305 'move' "bad remote channel.readBytes" "bad remote channel.readBytes")
    const-val call_tmp[1082770]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113961]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2113963]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2113965 'move' call_tmp[2113963](2113968 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2113971 'move' call_tmp[2113961] call_tmp[2113963])
    const-val call_tmp[2113974]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2113976]:locale[28] "temp"
    (2113979 call chpl_localeID_to_locale[92849] call_tmp[2113961] ret_tmp[2113976])
    (2113982 'move' call_tmp[2113974] ret_tmp[2113976])
    (1787432 'move' call_tmp[1082770] call_tmp[2113974])
    ref call_tmp[2213580]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213582 'move' call_tmp[2213580](2213584 '.' this[1082756] home[1080581]))
    const-val call_tmp[1082784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082786 'move' call_tmp[1082784](1082789 call !=[782821] call_tmp[1082770] call_tmp[2213580]))
    if call_tmp[1082784]
    {
      const-val call_tmp[1082801]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1082958]:IllegalArgumentError[168200] "dead after last mention" "temp"
      (1082960 'move' new_temp[1082958](1082945 call _new[1064018] "bad remote channel.readBytes"))
      const-val initTemp[1082967]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "temp"
      (1082970 call init[1064120] initTemp[1082967] new_temp[1082958])
      (1082803 'move' call_tmp[1082801] initTemp[1082967])
      val call_tmp[1082810]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082984]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1790095]:owned Error[966369] "temp"
      ref i_x[2197535]:owned IllegalArgumentError[1064469] "temp"
      (2197539 'move' i_x[2197535](2197537 'set reference' call_tmp[1082801]))
      ref i__retArg[2197541]:owned Error[966369] "temp"
      (2197545 'move' i__retArg[2197541](2197543 'set reference' ret_tmp[1790095]))
      val _formal_tmp_x[2197548]:owned IllegalArgumentError[1064469] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2197550 'move' _formal_tmp_x[2197548] i_x[2197535])
      const-val ret[2197553]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2197555]:owned IllegalArgumentError[1064469] "temp"
      (2197557 'move' i_this[2197555](2197559 'set reference' _formal_tmp_x[2197548]))
      val coerce_tmp[2197561]:IllegalArgumentError[168200] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2197563 'move' coerce_tmp[2197561](2197565 '.v' i_this[2197555] chpl_p[1064464]))
      val call_tmp[2197568]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197570 'move' call_tmp[2197568](2197572 'cast' Error[167938] coerce_tmp[2197561]))
      ref i_this[2197580]:owned IllegalArgumentError[1064469] "temp"
      (2197582 'move' i_this[2197580](2197584 'set reference' _formal_tmp_x[2197548]))
      val tmp[2197586]:IllegalArgumentError[168200] "temp"
      (2197588 'move' tmp[2197586](2197590 'cast' IllegalArgumentError[168200] nil[44]))
      (2197593 '.=' i_this[2197580] chpl_p[1064464] tmp[2197586])
      val coerce_tmp[2197597]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2197599 'move' coerce_tmp[2197597](2197601 'cast' object[22] call_tmp[2197568]))
      const-val call_tmp[2197604]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197606 'move' call_tmp[2197604](2197608 'ptr_eq' coerce_tmp[2197597] nil[44]))
      if call_tmp[2197604]
      {
        (2197614 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2197617]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2197619]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2197622 call init[968005] initTemp[2197619] call_tmp[2197568])
      (2197625 'move' call_tmp[2197617] initTemp[2197619])
      (2197628 'move' ret[2197553] call_tmp[2197617])
      (2197632 call chpl__autoDestroy[1571642] _formal_tmp_x[2197548])
      (2197636 '=' i__retArg[2197541] ret[2197553])
      (1790098 'move' coerce_tmp[1082984] ret_tmp[1790095])
      const-val _formal_tmp_in_err[1083163]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083167 'move' _formal_tmp_in_err[1083163] coerce_tmp[1082984])
      (1082812 'move' call_tmp[1082810](1082815 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1083163]))
      (1769245 '=' error_out[1769232] call_tmp[1082810])
      ref i_x[2209160]:locale[28] "temp"
      (2209164 'move' i_x[2209160](2209162 'set reference' call_tmp[1082770]))
      (2209168 call deinit[90185] i_x[2209160])
      gotoErrorHandlingReturn _endreadBytes[1769234] _endreadBytes[1769234]
    }
    ref i_x[2209172]:locale[28] "temp"
    (2209176 'move' i_x[2209172](2209174 'set reference' call_tmp[1082770]))
    (2209180 call deinit[90185] i_x[2209172])
    const-val call_tmp[1082828]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083220]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083226 'move' coerce_tmp[1083220](1083222 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083228]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083232 'move' coerce_tmp[1083228](2326161 '.v' this[1082756] _channel_internal[1080586]))
    (1082830 'move' call_tmp[1082828](1082833 call qio_channel_read_amt[1083194] coerce_tmp[1083220] coerce_tmp[1083228] x[1082758] len[1082762]))
    const-val call_tmp[2152841]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152843 'move' call_tmp[2152841](2152846 call qio_err_iserr[223558] call_tmp[1082828]))
    const-val call_tmp[2152848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152850 'move' call_tmp[2152848](2152852 '!=' call_tmp[2152841] 0))
    if call_tmp[2152848]
    {
      val error[1769249]:Error[167938] "error variable" "temp"
      (1769258 'move' error[1769249] nil[44])
      (1082858 call _ch_ioerror[1082460] this[1082756] call_tmp[1082828] "in channel.readBytes" error[1769249])
      val errorExists[2055989]:bool[10] "temp"
      (2055994 'move' errorExists[2055989](2055991 '!=' error[1769249] nil[44]))
      if errorExists[2055989]
      {
        gotoErrorHandling handler[1769250] handler[1769250]
      }
      label handler[1769250]
      val errorExists[2055997]:bool[10] "temp"
      (2056002 'move' errorExists[2055997](2055999 '!=' error[1769249] nil[44]))
      if errorExists[2055997]
      {
        (1769265 '=' error_out[1769232] error[1769249])
        gotoErrorHandlingReturn _endreadBytes[1769234] _endreadBytes[1769234]
      }
    }
    label _endreadBytes[1769234]
    (1082865 return _void[55])
  }
  const-val stdin[250120]:channel(false,dynamic,true)[985538] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250147]:channel(true,dynamic,true)[1021736] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250176]:channel(true,dynamic,true)[1021736] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250406]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250411]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721777]:6*string[984962] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[723908]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723915]:channel(false,dynamic,true)[985538] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016808]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016872]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1016920]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017498]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[723920]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[723925]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723932]:channel(true,dynamic,true)[1021736] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022383]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022447]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022498]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022535]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[723937]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[723942]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723949]:channel(true,dynamic,true)[1021736] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023819]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023830]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023841]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023852]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935508](ref arg this[1765458]:file[235492]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[985593]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (985597 'move' coerce_tmp[985593](2324662 '.v' this[1765458] _file_internal[235480]))
    (235817 call qio_file_release[232550] coerce_tmp[985593])
    (2324668 '.=' this[1765458] _file_internal[235480] QIO_FILE_PTR_NULL[231354])
    (935515 return _void[55])
  }
  function on_fn[935517](const in arg this[1765460]:file[235492], ref arg ret[1765462]:iostyle[231756], ref arg error_out[1767497]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1767501]:Error[167938] "error variable" "temp"
    (1767510 'move' error[1767501] nil[44])
    ref rvfRerefTmp[2032150]:file[235492] "temp"
    (2032154 'move' rvfRerefTmp[2032150](2032151 'set reference' this[1765460]))
    (235895 call checkAssumingLocal[235680] rvfRerefTmp[2032150] error[1767501])
    val errorExists[2055181]:bool[10] "temp"
    (2055186 'move' errorExists[2055181](2055183 '!=' error[1767501] nil[44]))
    if errorExists[2055181]
    {
      gotoErrorHandling handler[1767502] handler[1767502]
    }
    label handler[1767502]
    val errorExists[2055189]:bool[10] "temp"
    (2055194 'move' errorExists[2055189](2055191 '!=' error[1767501] nil[44]))
    if errorExists[2055189]
    {
      (1767517 '=' error_out[1767497] error[1767501])
      gotoErrorHandlingReturn _endon_fn[1767499] _endon_fn[1767499]
    }
    val local_style[235901]:iostyle[231756] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1017482]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017486 'move' coerce_tmp[1017482](2324676 '.v' this[1765460] _file_internal[235480]))
    (235909 call qio_file_get_style[232733] coerce_tmp[1017482] local_style[235901])
    ref i__arg2[2161937]:iostyle[231756] "temp"
    (2161941 'move' i__arg2[2161937](2161939 'set reference' local_style[235901]))
    (2161944 '=' ret[1765462] i__arg2[2161937])
    label _endon_fn[1767499]
    (935524 return _void[55])
  }
  function on_fn[935526](const in arg this[1765464]:file[235492], ref arg err[1765466]:syserr[223496]) : void[4] "on" "resolved"
  {
    const-val call_tmp[715597]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060744]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060748 'move' coerce_tmp[1060744](2324684 '.v' this[1765464] _file_internal[235480]))
    (715600 'move' call_tmp[715597](235977 call qio_file_close[232660] coerce_tmp[1060744]))
    (2152988 '=' err[1765466] call_tmp[715597])
    (935533 return _void[55])
  }
  function on_fn[935544](const in arg this[1765468]:file[235492], ref arg err[1765470]:syserr[223496], ref arg ret[1765472]:string[26], ref arg error_out[1767529]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1767533]:Error[167938] "error variable" "temp"
    (1767542 'move' error[1767533] nil[44])
    ref rvfRerefTmp[2032192]:file[235492] "temp"
    (2032196 'move' rvfRerefTmp[2032192](2032193 'set reference' this[1765468]))
    (236153 call checkAssumingLocal[235680] rvfRerefTmp[2032192] error[1767533])
    val errorExists[2055197]:bool[10] "temp"
    (2055202 'move' errorExists[2055197](2055199 '!=' error[1767533] nil[44]))
    if errorExists[2055197]
    {
      gotoErrorHandling handler[1767534] handler[1767534]
    }
    label handler[1767534]
    val errorExists[2055205]:bool[10] "temp"
    (2055210 'move' errorExists[2055205](2055207 '!=' error[1767533] nil[44]))
    if errorExists[2055205]
    {
      (1767549 '=' error_out[1767529] error[1767533])
      gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
    }
    val tmp[236159]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021378 'move' tmp[236159](1021376 'cast' c_string[19] nil[44]))
    val tmp2[236164]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021383 'move' tmp2[236164](1021381 'cast' c_string[19] nil[44]))
    const-val call_tmp[715683]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019030]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019034 'move' coerce_tmp[1019030](2324693 '.v' this[1765468] _file_internal[235480]))
    (715686 'move' call_tmp[715683](236173 call qio_file_path[233591] coerce_tmp[1019030] tmp[236159]))
    (2152994 '=' err[1765470] call_tmp[715683])
    const-val tmp[1766118]:syserr[223496] "temp"
    (1766121 'move' tmp[1766118](1766119 'deref' err[1765470]))
    const-val call_tmp[2152484]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152486 'move' call_tmp[2152484](2152489 call qio_err_iserr[223558] tmp[1766118]))
    const-val call_tmp[2152491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152493 'move' call_tmp[2152491](2152495 '==' call_tmp[2152484] 0))
    if call_tmp[2152491]
    {
      const-val call_tmp[715705]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019043]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019047 'move' coerce_tmp[1019043](2324700 '.v' this[1765468] _file_internal[235480]))
      (715708 'move' call_tmp[715705](236186 call qio_shortest_path[233607] coerce_tmp[1019043] tmp2[236164] tmp[236159]))
      (2153000 '=' err[1765470] call_tmp[715705])
    }
    ref i_cs[2066445]:c_string[19] "temp"
    (2066449 'move' i_cs[2066445](2066447 'set reference' tmp[236159]))
    const-val call_tmp[2066452]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066454 'move' call_tmp[2066452](2066456 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2066459]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066461 'move' call_tmp[2066459](2066463 'cast' c_string[19] call_tmp[2066452]))
    const-val coerce_tmp[2066466]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2066468 'move' coerce_tmp[2066466] tmp[236159])
    const-val call_tmp[2066472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066474 'move' call_tmp[2066472](2066476 'string_compare' coerce_tmp[2066466] call_tmp[2066459]))
    const-val call_tmp[2066479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066481 'move' call_tmp[2066479](2066483 '!=' call_tmp[2066472] 0))
    if call_tmp[2066479]
    {
      (2066489 call chpl_rt_free_c_string[22714] i_cs[2066445])
    }
    const-val tmp[1766124]:syserr[223496] "temp"
    (1766127 'move' tmp[1766124](1766125 'deref' err[1765470]))
    const-val call_tmp[2152501]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152503 'move' call_tmp[2152501](2152506 call qio_err_iserr[223558] tmp[1766124]))
    const-val call_tmp[2152508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152510 'move' call_tmp[2152508](2152512 '==' call_tmp[2152501] 0))
    if call_tmp[2152508]
    {
      const-val call_tmp[715720]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1767562]:Error[167938] "error variable" "temp"
      (1767564 'move' error[1767562] nil[44])
      const-val call_tmp[2150093]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2150095 'move' call_tmp[2150093](2150097 'string_length_bytes' tmp2[236164]))
      val errorExists[2055213]:bool[10] "temp"
      (2055218 'move' errorExists[2055213](2055215 '!=' error[1767562] nil[44]))
      if errorExists[2055213]
      {
        (1767568 '=' error_out[1767529] error[1767562])
        gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
      }
      val error[1767577]:Error[167938] "error variable" "temp"
      (1767579 'move' error[1767577] nil[44])
      const-val ret[2087341]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2087343]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087345 'move' call_tmp[2087343](2087347 'cast' c_ptr(uint(8))[937334] tmp2[236164]))
      val error[2087352]:Error[167938] "error variable" "temp"
      (2087354 'move' error[2087352] nil[44])
      const-val ret[2087357]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2087359]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2087361]:Error[167938] "error variable" "temp"
      (2087363 'move' error[2087361] nil[44])
      const-val ret_tmp[2087366]:string[26] "temp"
      (2087369 call decodeByteBuffer[173892] call_tmp[2087343] call_tmp[2150093] escape[173652] error[2087361] ret_tmp[2087366])
      (2087375 'move' call_tmp[2087359] ret_tmp[2087366])
      val errorExists[2087378]:bool[10] "temp"
      (2087380 'move' errorExists[2087378](2087382 '!=' error[2087361] nil[44]))
      if errorExists[2087378]
      {
        (2087387 '=' error[2087352] error[2087361])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087396] _endcreateStringWithNewBuffer[2087396]
      }
      (2087393 'move' ret[2087357] call_tmp[2087359])
      label _endcreateStringWithNewBuffer[2087396]
      val errorExists[2087401]:bool[10] "temp"
      (2087403 'move' errorExists[2087401](2087405 '!=' error[2087352] nil[44]))
      if errorExists[2087401]
      {
        (2087410 '=' error[1767577] error[2087352])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087419] _endcreateStringWithNewBuffer[2087419]
      }
      (2087416 'move' ret[2087341] ret[2087357])
      label _endcreateStringWithNewBuffer[2087419]
      (1785972 'move' call_tmp[715720] ret[2087341])
      val errorExists[2055221]:bool[10] "temp"
      (2055226 'move' errorExists[2055221](2055223 '!=' error[1767577] nil[44]))
      if errorExists[2055221]
      {
        (1767583 '=' error_out[1767529] error[1767577])
        gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
      }
      (236213 call =[38269] ret[1765472] call_tmp[715720])
      ref i_x[2076678]:string[26] "temp"
      (2076682 'move' i_x[2076678](2076680 'set reference' call_tmp[715720]))
      (2076686 call deinit[30831] i_x[2076678])
    }
    ref i_cs[2066494]:c_string[19] "temp"
    (2066498 'move' i_cs[2066494](2066496 'set reference' tmp2[236164]))
    const-val call_tmp[2066501]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066503 'move' call_tmp[2066501](2066505 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2066508]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066510 'move' call_tmp[2066508](2066512 'cast' c_string[19] call_tmp[2066501]))
    const-val coerce_tmp[2066515]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2066517 'move' coerce_tmp[2066515] tmp2[236164])
    const-val call_tmp[2066521]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066523 'move' call_tmp[2066521](2066525 'string_compare' coerce_tmp[2066515] call_tmp[2066508]))
    const-val call_tmp[2066528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066530 'move' call_tmp[2066528](2066532 '!=' call_tmp[2066521] 0))
    if call_tmp[2066528]
    {
      (2066538 call chpl_rt_free_c_string[22714] i_cs[2066494])
    }
    label _endon_fn[1767531]
    (935551 return _void[55])
  }
  function on_fn[1016606](const in arg start[1765480]:int(64)[13], ref arg err[1765482]:syserr[223496], const in arg end[1765484]:int(64)[13], const in arg style[1765486]:iostyle[231756], const in arg this[1765488]:file[235492], ref arg ret[1765490]:channel(false,dynamic,true)[985538], const in arg hints[1765492]:int(32)[95], ref arg error_out[1767700]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1767704]:Error[167938] "error variable" "temp"
    (1767713 'move' error[1767704] nil[44])
    ref rvfRerefTmp[2032221]:file[235492] "temp"
    (2032225 'move' rvfRerefTmp[2032221](2032222 'set reference' this[1765488]))
    (1016617 call checkAssumingLocal[235680] rvfRerefTmp[2032221] error[1767704])
    val errorExists[2055277]:bool[10] "temp"
    (2055282 'move' errorExists[2055277](2055279 '!=' error[1767704] nil[44]))
    if errorExists[2055277]
    {
      gotoErrorHandling handler[1767705] handler[1767705]
    }
    label handler[1767705]
    val errorExists[2055285]:bool[10] "temp"
    (2055290 'move' errorExists[2055285](2055287 '!=' error[1767704] nil[44]))
    if errorExists[2055285]
    {
      (1767720 '=' error_out[1767700] error[1767704])
      gotoErrorHandlingReturn _endon_fn[1767702] _endon_fn[1767702]
    }
    const-val call_tmp[1016619]:channel(false,dynamic,true)[985538] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1017542]:channel(false,dynamic,true)[985538] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1018341]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2032214]:file[235492] "temp"
    (2032218 'move' rvfRerefTmp[2032214](2032215 'set reference' this[1765488]))
    (1017545 call init[1017558] initTemp[1017542] rvfRerefTmp[2032214] _formal_tmp_out_error[1018341] hints[1765492] start[1765480] end[1765484] style[1765486])
    (2153006 '=' err[1765482] _formal_tmp_out_error[1018341])
    (1016621 'move' call_tmp[1016619] initTemp[1017542])
    (1016635 call =[1018350] ret[1765490] call_tmp[1016619])
    ref i_x[2284536]:channel(false,dynamic,true)[985538] "temp"
    (2284540 'move' i_x[2284536](2284538 'set reference' call_tmp[1016619]))
    (2284544 call deinit[1503980] i_x[2284536])
    label _endon_fn[1767702]
    (1016641 return _void[55])
  }
  function on_fn[1017636](const in arg end[1765494]:int(64)[13], ref arg this[1765496]:channel(false,dynamic,true)[985538], const in arg hints[1765498]:int(32)[95], const in arg local_style[1765500]:iostyle[231756], const in arg start[1765502]:int(64)[13], const in arg f[1765504]:file[235492], ref arg _formal_tmp_error[1765506]:syserr[223496]) : void[4] "on" "resolved"
  {
    ref call_tmp[2172587]:locale[28] "dead after last mention" "maybe param" "temp"
    (2172589 'move' call_tmp[2172587](2172591 '.' this[1765496] home[985526]))
    ref call_tmp[2162132]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162134 'move' call_tmp[2162132](2162136 '.' f[1765504] home[235474]))
    (1017659 call =[90631] call_tmp[2172587] call_tmp[2162132])
    ref call_tmp[2172661]:qio_channel_ptr_t[231377] "dead after last mention" "maybe param" "temp"
    (2172663 'move' call_tmp[2172661](2172665 '.' this[1765496] _channel_internal[985531]))
    const-val call_tmp[1017744]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018310]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018314 'move' coerce_tmp[1018310](2325145 '.v' f[1765504] _file_internal[235480]))
    const-val coerce_tmp[1018316]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018322 'move' coerce_tmp[1018316](1018318 'cast' int(32)[95] 1))
    const-val coerce_tmp[1018324]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018330 'move' coerce_tmp[1018324](1018326 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2032234]:iostyle[231756] "temp"
    (2032238 'move' rvfRerefTmp[2032234](2032235 'set reference' local_style[1765500]))
    (1017746 'move' call_tmp[1017744](1017749 call qio_channel_create[232790] call_tmp[2172661] coerce_tmp[1018310] hints[1765498] coerce_tmp[1018316] coerce_tmp[1018324] start[1765502] end[1765494] rvfRerefTmp[2032234]))
    (2153012 '=' _formal_tmp_error[1765506] call_tmp[1017744])
    (1017762 return _void[55])
  }
  function on_fn[1018576](const in arg rhs[1765508]:channel(false,dynamic,true)[985538]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1018966]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018970 'move' coerce_tmp[1018966](2325184 '.v' rhs[1765508] _channel_internal[985531]))
    (1018591 call qio_channel_retain[232863] coerce_tmp[1018966])
    (1018593 return _void[55])
  }
  function on_fn[1018620](const  ref arg lhs[1765510]:channel(false,dynamic,true)[985538]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1018985]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018989 'move' coerce_tmp[1018985](2325191 '.v' lhs[1765510] _channel_internal[985531]))
    (1018635 call qio_channel_release[232873] coerce_tmp[1018985])
    (1018637 return _void[55])
  }
  function on_fn[1022181](ref arg err[1765516]:syserr[223496], const in arg start[1765518]:int(64)[13], const in arg style[1765520]:iostyle[231756], const in arg end[1765522]:int(64)[13], const in arg this[1765524]:file[235492], ref arg ret[1765526]:channel(true,dynamic,true)[1021736], const in arg hints[1765528]:int(32)[95], ref arg error_out[1767816]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1767820]:Error[167938] "error variable" "temp"
    (1767829 'move' error[1767820] nil[44])
    ref rvfRerefTmp[2032298]:file[235492] "temp"
    (2032302 'move' rvfRerefTmp[2032298](2032299 'set reference' this[1765524]))
    (1022192 call checkAssumingLocal[235680] rvfRerefTmp[2032298] error[1767820])
    val errorExists[2055325]:bool[10] "temp"
    (2055330 'move' errorExists[2055325](2055327 '!=' error[1767820] nil[44]))
    if errorExists[2055325]
    {
      gotoErrorHandling handler[1767821] handler[1767821]
    }
    label handler[1767821]
    val errorExists[2055333]:bool[10] "temp"
    (2055338 'move' errorExists[2055333](2055335 '!=' error[1767820] nil[44]))
    if errorExists[2055333]
    {
      (1767836 '=' error_out[1767816] error[1767820])
      gotoErrorHandlingReturn _endon_fn[1767818] _endon_fn[1767818]
    }
    const-val call_tmp[1022194]:channel(true,dynamic,true)[1021736] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1022578]:channel(true,dynamic,true)[1021736] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1023049]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2032291]:file[235492] "temp"
    (2032295 'move' rvfRerefTmp[2032291](2032292 'set reference' this[1765524]))
    (1022581 call init[1022594] initTemp[1022578] rvfRerefTmp[2032291] _formal_tmp_out_error[1023049] hints[1765528] start[1765518] end[1765522] style[1765520])
    (2153018 '=' err[1765516] _formal_tmp_out_error[1023049])
    (1022196 'move' call_tmp[1022194] initTemp[1022578])
    (1022210 call =[1023058] ret[1765526] call_tmp[1022194])
    ref i_x[2286979]:channel(true,dynamic,true)[1021736] "temp"
    (2286983 'move' i_x[2286979](2286981 'set reference' call_tmp[1022194]))
    (2286987 call deinit[1566986] i_x[2286979])
    label _endon_fn[1767818]
    (1022216 return _void[55])
  }
  function on_fn[1022672](const in arg start[1765530]:int(64)[13], const in arg f[1765532]:file[235492], ref arg _formal_tmp_error[1765534]:syserr[223496], const in arg end[1765536]:int(64)[13], const in arg hints[1765538]:int(32)[95], const in arg local_style[1765540]:iostyle[231756], ref arg this[1765542]:channel(true,dynamic,true)[1021736]) : void[4] "on" "resolved"
  {
    ref call_tmp[2173608]:locale[28] "dead after last mention" "maybe param" "temp"
    (2173610 'move' call_tmp[2173608](2173612 '.' this[1765542] home[1021724]))
    ref call_tmp[2162142]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162144 'move' call_tmp[2162142](2162146 '.' f[1765532] home[235474]))
    (1022695 call =[90631] call_tmp[2173608] call_tmp[2162142])
    ref call_tmp[2173642]:qio_channel_ptr_t[231377] "dead after last mention" "maybe param" "temp"
    (2173644 'move' call_tmp[2173642](2173646 '.' this[1765542] _channel_internal[1021729]))
    const-val call_tmp[1022780]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1023018]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023022 'move' coerce_tmp[1023018](2325420 '.v' f[1765532] _file_internal[235480]))
    const-val coerce_tmp[1023024]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023030 'move' coerce_tmp[1023024](1023026 'cast' int(32)[95] 0))
    const-val coerce_tmp[1023032]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023038 'move' coerce_tmp[1023032](1023034 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2032332]:iostyle[231756] "temp"
    (2032336 'move' rvfRerefTmp[2032332](2032333 'set reference' local_style[1765540]))
    (1022782 'move' call_tmp[1022780](1022785 call qio_channel_create[232790] call_tmp[2173642] coerce_tmp[1023018] hints[1765538] coerce_tmp[1023024] coerce_tmp[1023032] start[1765530] end[1765536] rvfRerefTmp[2032332]))
    (2153024 '=' _formal_tmp_error[1765534] call_tmp[1022780])
    (1022798 return _void[55])
  }
  function on_fn[1023284](const in arg rhs[1765544]:channel(true,dynamic,true)[1021736]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023674]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023678 'move' coerce_tmp[1023674](2325459 '.v' rhs[1765544] _channel_internal[1021729]))
    (1023299 call qio_channel_retain[232863] coerce_tmp[1023674])
    (1023301 return _void[55])
  }
  function on_fn[1023328](const  ref arg lhs[1765546]:channel(true,dynamic,true)[1021736]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023693]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023697 'move' coerce_tmp[1023693](2325466 '.v' lhs[1765546] _channel_internal[1021729]))
    (1023343 call qio_channel_release[232873] coerce_tmp[1023693])
    (1023345 return _void[55])
  }
  function on_fn[1060933](const in arg hints[1765560]:int(32)[95], const in arg start[1765562]:int(64)[13], ref arg ret[1765564]:channel(true,dynamic,false)[1060858], const in arg style[1765566]:iostyle[231756], const in arg end[1765568]:int(64)[13], const in arg this[1765570]:file[235492], ref arg err[1765572]:syserr[223496], ref arg error_out[1768247]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1768251]:Error[167938] "error variable" "temp"
    (1768260 'move' error[1768251] nil[44])
    ref rvfRerefTmp[2032406]:file[235492] "temp"
    (2032410 'move' rvfRerefTmp[2032406](2032407 'set reference' this[1765570]))
    (1060944 call checkAssumingLocal[235680] rvfRerefTmp[2032406] error[1768251])
    val errorExists[2055549]:bool[10] "temp"
    (2055554 'move' errorExists[2055549](2055551 '!=' error[1768251] nil[44]))
    if errorExists[2055549]
    {
      gotoErrorHandling handler[1768252] handler[1768252]
    }
    label handler[1768252]
    val errorExists[2055557]:bool[10] "temp"
    (2055562 'move' errorExists[2055557](2055559 '!=' error[1768251] nil[44]))
    if errorExists[2055557]
    {
      (1768267 '=' error_out[1768247] error[1768251])
      gotoErrorHandlingReturn _endon_fn[1768249] _endon_fn[1768249]
    }
    const-val call_tmp[1060946]:channel(true,dynamic,false)[1060858] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1061291]:channel(true,dynamic,false)[1060858] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1061762]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2032399]:file[235492] "temp"
    (2032403 'move' rvfRerefTmp[2032399](2032400 'set reference' this[1765570]))
    (1061294 call init[1061307] initTemp[1061291] rvfRerefTmp[2032399] _formal_tmp_out_error[1061762] hints[1765560] start[1765562] end[1765568] style[1765566])
    (2153030 '=' err[1765572] _formal_tmp_out_error[1061762])
    (1060948 'move' call_tmp[1060946] initTemp[1061291])
    (1060962 call =[1061771] ret[1765564] call_tmp[1060946])
    ref i_x[2211969]:channel(true,dynamic,false)[1060858] "temp"
    (2211973 'move' i_x[2211969](2211971 'set reference' call_tmp[1060946]))
    (2211977 call deinit[1569162] i_x[2211969])
    label _endon_fn[1768249]
    (1060968 return _void[55])
  }
  function on_fn[1061385](const in arg start[1765574]:int(64)[13], const in arg f[1765576]:file[235492], ref arg _formal_tmp_error[1765578]:syserr[223496], ref arg this[1765580]:channel(true,dynamic,false)[1060858], const in arg hints[1765582]:int(32)[95], const in arg local_style[1765584]:iostyle[231756], const in arg end[1765586]:int(64)[13]) : void[4] "on" "resolved"
  {
    ref call_tmp[2208545]:locale[28] "dead after last mention" "maybe param" "temp"
    (2208547 'move' call_tmp[2208545](2208549 '.' this[1765580] home[1060846]))
    ref call_tmp[2162152]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162154 'move' call_tmp[2162152](2162156 '.' f[1765576] home[235474]))
    (1061408 call =[90631] call_tmp[2208545] call_tmp[2162152])
    ref call_tmp[2208639]:qio_channel_ptr_t[231377] "dead after last mention" "maybe param" "temp"
    (2208641 'move' call_tmp[2208639](2208643 '.' this[1765580] _channel_internal[1060851]))
    const-val call_tmp[1061493]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1061731]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061735 'move' coerce_tmp[1061731](2325903 '.v' f[1765576] _file_internal[235480]))
    const-val coerce_tmp[1061737]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061743 'move' coerce_tmp[1061737](1061739 'cast' int(32)[95] 0))
    const-val coerce_tmp[1061745]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061751 'move' coerce_tmp[1061745](1061747 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2032440]:iostyle[231756] "temp"
    (2032444 'move' rvfRerefTmp[2032440](2032441 'set reference' local_style[1765584]))
    (1061495 'move' call_tmp[1061493](1061498 call qio_channel_create[232790] call_tmp[2208639] coerce_tmp[1061731] hints[1765582] coerce_tmp[1061737] coerce_tmp[1061745] start[1765574] end[1765586] rvfRerefTmp[2032440]))
    (2153036 '=' _formal_tmp_error[1765578] call_tmp[1061493])
    (1061511 return _void[55])
  }
  function on_fn[1061997](const in arg rhs[1765588]:channel(true,dynamic,false)[1060858]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062196]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062200 'move' coerce_tmp[1062196](2325942 '.v' rhs[1765588] _channel_internal[1060851]))
    (1062012 call qio_channel_retain[232863] coerce_tmp[1062196])
    (1062014 return _void[55])
  }
  function on_fn[1062041](const  ref arg lhs[1765590]:channel(true,dynamic,false)[1060858]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062215]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062219 'move' coerce_tmp[1062215](2325949 '.v' lhs[1765590] _channel_internal[1060851]))
    (1062056 call qio_channel_release[232873] coerce_tmp[1062215])
    (1062058 return _void[55])
  }
  function on_fn[1062366](const in arg this[1765592]:channel(true,dynamic,false)[1060858], ref arg err[1765594]:syserr[223496]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1062388]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062759]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062765 'move' coerce_tmp[1062759](1062761 'cast' int(32)[95] 0))
    const-val coerce_tmp[1062767]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062771 'move' coerce_tmp[1062767](2325969 '.v' this[1765592] _channel_internal[1060851]))
    (1062390 'move' call_tmp[1062388](1062393 call qio_channel_close[233052] coerce_tmp[1062759] coerce_tmp[1062767]))
    (2153042 '=' err[1765594] call_tmp[1062388])
    (1062402 return _void[55])
  }
  function on_fn[1062843](const  ref arg this[1765596]:channel(true,dynamic,false)[1060858], ref arg path[1765598]:string[26], ref arg offset[1765600]:int(64)[13], ref arg error_out[1768402]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1062849]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063051 'move' tmp_path[1062849](1063049 'cast' c_string[19] nil[44]))
    val tmp_offset[1062855]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063054 'move' tmp_offset[1062855] 0)
    (2153614 call qio_int_to_err[223546] 0)
    const-val call_tmp[1062897]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063006]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063012 'move' coerce_tmp[1063006](1063008 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063014]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063018 'move' coerce_tmp[1063014](2325981 '.v' this[1765596] _channel_internal[1060851]))
    (1062899 'move' call_tmp[1062897](1062902 call qio_channel_path_offset[232836] coerce_tmp[1063006] coerce_tmp[1063014] tmp_path[1062849] tmp_offset[1062855]))
    const-val call_tmp[2152518]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152520 'move' call_tmp[2152518](2152523 call qio_err_iserr[223558] call_tmp[1062897]))
    const-val call_tmp[2152525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152527 'move' call_tmp[2152525](2152529 '==' call_tmp[2152518] 0))
    if call_tmp[2152525]
    {
      const-val call_tmp[1062931]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1768407]:Error[167938] "error variable" "temp"
      (1768409 'move' error[1768407] nil[44])
      const-val call_tmp[2150115]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2150117 'move' call_tmp[2150115](2150119 'string_length_bytes' tmp_path[1062849]))
      val errorExists[2055613]:bool[10] "temp"
      (2055618 'move' errorExists[2055613](2055615 '!=' error[1768407] nil[44]))
      if errorExists[2055613]
      {
        (1768413 '=' error_out[1768402] error[1768407])
        gotoErrorHandlingReturn _endon_fn[1768404] _endon_fn[1768404]
      }
      val error[1768422]:Error[167938] "error variable" "temp"
      (1768424 'move' error[1768422] nil[44])
      const-val ret[2087831]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2087833]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087835 'move' call_tmp[2087833](2087837 'cast' c_ptr(uint(8))[937334] tmp_path[1062849]))
      val error[2087842]:Error[167938] "error variable" "temp"
      (2087844 'move' error[2087842] nil[44])
      const-val ret[2087847]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2087849]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2087851]:Error[167938] "error variable" "temp"
      (2087853 'move' error[2087851] nil[44])
      const-val ret_tmp[2087856]:string[26] "temp"
      (2087859 call decodeByteBuffer[173892] call_tmp[2087833] call_tmp[2150115] replace[173648] error[2087851] ret_tmp[2087856])
      (2087865 'move' call_tmp[2087849] ret_tmp[2087856])
      val errorExists[2087868]:bool[10] "temp"
      (2087870 'move' errorExists[2087868](2087872 '!=' error[2087851] nil[44]))
      if errorExists[2087868]
      {
        (2087877 '=' error[2087842] error[2087851])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087886] _endcreateStringWithNewBuffer[2087886]
      }
      (2087883 'move' ret[2087847] call_tmp[2087849])
      label _endcreateStringWithNewBuffer[2087886]
      val errorExists[2087891]:bool[10] "temp"
      (2087893 'move' errorExists[2087891](2087895 '!=' error[2087842] nil[44]))
      if errorExists[2087891]
      {
        (2087900 '=' error[1768422] error[2087842])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087909] _endcreateStringWithNewBuffer[2087909]
      }
      (2087906 'move' ret[2087831] ret[2087847])
      label _endcreateStringWithNewBuffer[2087909]
      (1786002 'move' call_tmp[1062931] ret[2087831])
      val errorExists[2055621]:bool[10] "temp"
      (2055626 'move' errorExists[2055621](2055623 '!=' error[1768422] nil[44]))
      if errorExists[2055621]
      {
        (1768428 '=' error_out[1768402] error[1768422])
        gotoErrorHandlingReturn _endon_fn[1768404] _endon_fn[1768404]
      }
      (1062941 call =[38269] path[1765598] call_tmp[1062931])
      ref i_x[2077206]:string[26] "temp"
      (2077210 'move' i_x[2077206](2077208 'set reference' call_tmp[1062931]))
      (2077214 call deinit[30831] i_x[2077206])
      ref i_cs[2066543]:c_string[19] "temp"
      (2066547 'move' i_cs[2066543](2066545 'set reference' tmp_path[1062849]))
      const-val call_tmp[2066550]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066552 'move' call_tmp[2066550](2066554 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2066557]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066559 'move' call_tmp[2066557](2066561 'cast' c_string[19] call_tmp[2066550]))
      const-val coerce_tmp[2066564]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2066566 'move' coerce_tmp[2066564] tmp_path[1062849])
      const-val call_tmp[2066570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066572 'move' call_tmp[2066570](2066574 'string_compare' coerce_tmp[2066564] call_tmp[2066557]))
      const-val call_tmp[2066577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066579 'move' call_tmp[2066577](2066581 '!=' call_tmp[2066570] 0))
      if call_tmp[2066577]
      {
        (2066587 call chpl_rt_free_c_string[22714] i_cs[2066543])
      }
      (2068617 '=' offset[1765600] tmp_offset[1062855])
    }
    label _endon_fn[1768404]
    (1062960 return _void[55])
  }
  function on_fn[1066000](const in arg this[1765602]:channel(true,dynamic,false)[1060858], const  ref arg args[1765604]:1*byteIndex[1056992], const in arg origLocale[1765606]:locale[28], ref arg error_out[1768487]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3016[2335074]:string[26] "temp"
    (2335075 'move' "in lock" "in lock")
    const-val local__str_literal_129[2335068]:string[26] "temp"
    (2335069 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3013[2335062]:string[26] "temp"
    (2335063 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1768491]:Error[167938] "error variable" "temp"
    (1768500 'move' error[1768491] nil[44])
    ref rvfRerefTmp[2032482]:channel(true,dynamic,false)[1060858] "temp"
    (2032486 'move' rvfRerefTmp[2032482](2032483 'set reference' this[1765602]))
    const-val call_tmp[2210529]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210531 'move' call_tmp[2210529](2210534 call qio_int_to_err[223546] 0))
    const-val coerce_tmp[2210539]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2210541 'move' coerce_tmp[2210539](2210543 '.v' this[1765602] _channel_internal[1060851]))
    const-val call_tmp[2210546]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210548 'move' call_tmp[2210546](2210550 'cast' c_void_ptr[149] coerce_tmp[2210539]))
    const-val call_tmp[2210553]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210555 'move' call_tmp[2210553](2210557 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2210560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210562 'move' call_tmp[2210560](2210564 'ptr_eq' call_tmp[2210546] call_tmp[2210553]))
    if call_tmp[2210560]
    {
      const-val call_tmp[2210569]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2210571]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2210573 'move' coerce_tmp[2210571](2210575 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[2210578]:owned SystemError[1000149] "temp"
      (2210581 call fromSyserr[1017024] coerce_tmp[2210571] "Operation attempted on an invalid channel" ret_tmp[2210578])
      (2210585 'move' call_tmp[2210569] ret_tmp[2210578])
      val call_tmp[2210588]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2210590]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2210592]:owned Error[966369] "temp"
      ref i_x[2210594]:owned SystemError[1000149] "temp"
      (2210596 'move' i_x[2210594](2210598 'set reference' call_tmp[2210569]))
      ref i__retArg[2210600]:owned Error[966369] "temp"
      (2210602 'move' i__retArg[2210600](2210604 'set reference' ret_tmp[2210592]))
      val _formal_tmp_x[2210606]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2210608 'move' _formal_tmp_x[2210606] i_x[2210594])
      const-val ret[2210611]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2210613]:owned SystemError[1000149] "temp"
      (2210615 'move' i_this[2210613](2210617 'set reference' _formal_tmp_x[2210606]))
      val coerce_tmp[2210619]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2210621 'move' coerce_tmp[2210619](2210623 '.v' i_this[2210613] chpl_p[1000144]))
      val call_tmp[2210626]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2210628 'move' call_tmp[2210626](2210630 'cast' Error[167938] coerce_tmp[2210619]))
      ref i_this[2210638]:owned SystemError[1000149] "temp"
      (2210640 'move' i_this[2210638](2210642 'set reference' _formal_tmp_x[2210606]))
      val tmp[2210644]:SystemError[264757] "temp"
      (2210646 'move' tmp[2210644](2210648 'cast' SystemError[264757] nil[44]))
      (2210651 '.=' i_this[2210638] chpl_p[1000144] tmp[2210644])
      val coerce_tmp[2210655]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2210657 'move' coerce_tmp[2210655](2210659 'cast' object[22] call_tmp[2210626]))
      const-val call_tmp[2210662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2210664 'move' call_tmp[2210662](2210666 'ptr_eq' coerce_tmp[2210655] nil[44]))
      if call_tmp[2210662]
      {
        (2210672 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2210675]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2210677]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2210680 call init[968005] initTemp[2210677] call_tmp[2210626])
      (2210683 'move' call_tmp[2210675] initTemp[2210677])
      (2210686 'move' ret[2210611] call_tmp[2210675])
      (2210690 call chpl__autoDestroy[1549120] _formal_tmp_x[2210606])
      (2210692 '=' i__retArg[2210600] ret[2210611])
      (2210695 'move' coerce_tmp[2210590] ret_tmp[2210592])
      const-val _formal_tmp_in_err[2210698]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2210700 'move' _formal_tmp_in_err[2210698] coerce_tmp[2210590])
      (2210703 'move' call_tmp[2210588](2210706 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2210698]))
      (2210708 '=' error[1768491] call_tmp[2210588])
      gotoErrorHandlingReturn _endlock[2210771] _endlock[2210771]
    }
    const-val call_tmp[2210714]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210716 'move' call_tmp[2210714](2210719 call qio_err_iserr[223558] call_tmp[2210529]))
    const-val call_tmp[2210721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210723 'move' call_tmp[2210721](2210725 '!=' call_tmp[2210714] 0))
    if call_tmp[2210721]
    {
      val error[2210730]:Error[167938] "error variable" "temp"
      (2210732 'move' error[2210730] nil[44])
      (2210736 call _ch_ioerror[1062776] rvfRerefTmp[2032482] call_tmp[2210529] "in lock" error[2210730])
      val errorExists[2210741]:bool[10] "temp"
      (2210743 'move' errorExists[2210741](2210745 '!=' error[2210730] nil[44]))
      if errorExists[2210741]
      {
        gotoErrorHandling handler[2210753] handler[2210753]
      }
      label handler[2210753]
      val errorExists[2210755]:bool[10] "temp"
      (2210757 'move' errorExists[2210755](2210759 '!=' error[2210730] nil[44]))
      if errorExists[2210755]
      {
        (2210764 '=' error[1768491] error[2210730])
        gotoErrorHandlingReturn _endlock[2210771] _endlock[2210771]
      }
    }
    label _endlock[2210771]
    val errorExists[2055645]:bool[10] "temp"
    (2055650 'move' errorExists[2055645](2055647 '!=' error[1768491] nil[44]))
    if errorExists[2055645]
    {
      gotoErrorHandling handler[1768492] handler[1768492]
    }
    label handler[1768492]
    val errorExists[2055653]:bool[10] "temp"
    (2055658 'move' errorExists[2055653](2055655 '!=' error[1768491] nil[44]))
    if errorExists[2055653]
    {
      (1768507 '=' error_out[1768487] error[1768491])
      gotoErrorHandlingReturn _endon_fn[1768489] _endon_fn[1768489]
    }
    val error[1768519]:Error[167938] "error variable" "temp"
    (1768528 'move' error[1768519] nil[44])
    const-ref call_tmp[1066844]:byteIndex[28170] "dead after last mention" "maybe param" "temp"
    (1066846 'move' call_tmp[1066844](1066920 'get svec member value' args[1765604] 0))
    ref rvfRerefTmp[2032489]:channel(true,dynamic,false)[1060858] "temp"
    (2032493 'move' rvfRerefTmp[2032489](2032490 'set reference' this[1765602]))
    val rvfRerefTmp[2032516]:locale[28] "temp"
    (2032519 'move' rvfRerefTmp[2032516] origLocale[1765606])
    (1066855 call _writeOne[1066923] rvfRerefTmp[2032489] call_tmp[1066844] rvfRerefTmp[2032516] error[1768519])
    val errorExists[2055661]:bool[10] "temp"
    (2055666 'move' errorExists[2055661](2055663 '!=' error[1768519] nil[44]))
    if errorExists[2055661]
    {
      gotoErrorHandling handler[1768520] handler[1768520]
    }
    label handler[1768520]
    val errorExists[2055669]:bool[10] "temp"
    (2055674 'move' errorExists[2055669](2055671 '!=' error[1768519] nil[44]))
    if errorExists[2055669]
    {
      (1768535 '=' error_out[1768487] error[1768519])
      gotoErrorHandlingReturn _endon_fn[1768489] _endon_fn[1768489]
    }
    label _endon_fn[1768489]
    (1066103 return _void[55])
  }
  function on_fn[1068779](const  ref arg this[1765608]:channel(true,dynamic,false)[1060858], const in arg x[1765610]:int(64)[13], const in arg origLocale[1765612]:locale[28], ref arg error_out[1768771]:Error[167938]) : void[4] throws "on" "resolved"
  {
    const-val local__str_literal_3016[2335110]:string[26] "temp"
    (2335111 'move' "in lock" "in lock")
    const-val local__str_literal_129[2335104]:string[26] "temp"
    (2335105 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3013[2335098]:string[26] "temp"
    (2335099 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1768775]:Error[167938] "error variable" "temp"
    (1768784 'move' error[1768775] nil[44])
    const-val call_tmp[2210784]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210786 'move' call_tmp[2210784](2210789 call qio_int_to_err[223546] 0))
    const-val coerce_tmp[2210794]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2210796 'move' coerce_tmp[2210794](2210798 '.v' this[1765608] _channel_internal[1060851]))
    const-val call_tmp[2210801]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210803 'move' call_tmp[2210801](2210805 'cast' c_void_ptr[149] coerce_tmp[2210794]))
    const-val call_tmp[2210808]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210810 'move' call_tmp[2210808](2210812 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2210815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210817 'move' call_tmp[2210815](2210819 'ptr_eq' call_tmp[2210801] call_tmp[2210808]))
    if call_tmp[2210815]
    {
      const-val call_tmp[2210824]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2210826]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2210828 'move' coerce_tmp[2210826](2210830 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[2210833]:owned SystemError[1000149] "temp"
      (2210836 call fromSyserr[1017024] coerce_tmp[2210826] "Operation attempted on an invalid channel" ret_tmp[2210833])
      (2210840 'move' call_tmp[2210824] ret_tmp[2210833])
      val call_tmp[2210843]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2210845]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2210847]:owned Error[966369] "temp"
      ref i_x[2210849]:owned SystemError[1000149] "temp"
      (2210851 'move' i_x[2210849](2210853 'set reference' call_tmp[2210824]))
      ref i__retArg[2210855]:owned Error[966369] "temp"
      (2210857 'move' i__retArg[2210855](2210859 'set reference' ret_tmp[2210847]))
      val _formal_tmp_x[2210861]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2210863 'move' _formal_tmp_x[2210861] i_x[2210849])
      const-val ret[2210866]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2210868]:owned SystemError[1000149] "temp"
      (2210870 'move' i_this[2210868](2210872 'set reference' _formal_tmp_x[2210861]))
      val coerce_tmp[2210874]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2210876 'move' coerce_tmp[2210874](2210878 '.v' i_this[2210868] chpl_p[1000144]))
      val call_tmp[2210881]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2210883 'move' call_tmp[2210881](2210885 'cast' Error[167938] coerce_tmp[2210874]))
      ref i_this[2210893]:owned SystemError[1000149] "temp"
      (2210895 'move' i_this[2210893](2210897 'set reference' _formal_tmp_x[2210861]))
      val tmp[2210899]:SystemError[264757] "temp"
      (2210901 'move' tmp[2210899](2210903 'cast' SystemError[264757] nil[44]))
      (2210906 '.=' i_this[2210893] chpl_p[1000144] tmp[2210899])
      val coerce_tmp[2210910]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2210912 'move' coerce_tmp[2210910](2210914 'cast' object[22] call_tmp[2210881]))
      const-val call_tmp[2210917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2210919 'move' call_tmp[2210917](2210921 'ptr_eq' coerce_tmp[2210910] nil[44]))
      if call_tmp[2210917]
      {
        (2210927 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2210930]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2210932]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2210935 call init[968005] initTemp[2210932] call_tmp[2210881])
      (2210938 'move' call_tmp[2210930] initTemp[2210932])
      (2210941 'move' ret[2210866] call_tmp[2210930])
      (2210945 call chpl__autoDestroy[1549120] _formal_tmp_x[2210861])
      (2210947 '=' i__retArg[2210855] ret[2210866])
      (2210950 'move' coerce_tmp[2210845] ret_tmp[2210847])
      const-val _formal_tmp_in_err[2210953]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2210955 'move' _formal_tmp_in_err[2210953] coerce_tmp[2210845])
      (2210958 'move' call_tmp[2210843](2210961 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2210953]))
      (2210963 '=' error[1768775] call_tmp[2210843])
      gotoErrorHandlingReturn _endlock[2211026] _endlock[2211026]
    }
    const-val call_tmp[2210969]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210971 'move' call_tmp[2210969](2210974 call qio_err_iserr[223558] call_tmp[2210784]))
    const-val call_tmp[2210976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2210978 'move' call_tmp[2210976](2210980 '!=' call_tmp[2210969] 0))
    if call_tmp[2210976]
    {
      val error[2210985]:Error[167938] "error variable" "temp"
      (2210987 'move' error[2210985] nil[44])
      (2210991 call _ch_ioerror[1062776] this[1765608] call_tmp[2210784] "in lock" error[2210985])
      val errorExists[2210996]:bool[10] "temp"
      (2210998 'move' errorExists[2210996](2211000 '!=' error[2210985] nil[44]))
      if errorExists[2210996]
      {
        gotoErrorHandling handler[2211008] handler[2211008]
      }
      label handler[2211008]
      val errorExists[2211010]:bool[10] "temp"
      (2211012 'move' errorExists[2211010](2211014 '!=' error[2210985] nil[44]))
      if errorExists[2211010]
      {
        (2211019 '=' error[1768775] error[2210985])
        gotoErrorHandlingReturn _endlock[2211026] _endlock[2211026]
      }
    }
    label _endlock[2211026]
    val errorExists[2055781]:bool[10] "temp"
    (2055786 'move' errorExists[2055781](2055783 '!=' error[1768775] nil[44]))
    if errorExists[2055781]
    {
      gotoErrorHandling handler[1768776] handler[1768776]
    }
    label handler[1768776]
    val errorExists[2055789]:bool[10] "temp"
    (2055794 'move' errorExists[2055789](2055791 '!=' error[1768775] nil[44]))
    if errorExists[2055789]
    {
      (1768790 call chpl_uncaught_error[170243] error[1768775])
    }
    val error[1768801]:Error[167938] "error variable" "temp"
    (1768810 'move' error[1768801] nil[44])
    val rvfRerefTmp[2032528]:locale[28] "temp"
    (2032531 'move' rvfRerefTmp[2032528] origLocale[1765612])
    (1068812 call _writeOne[1068848] this[1765608] x[1765610] rvfRerefTmp[2032528] error[1768801])
    val errorExists[2055797]:bool[10] "temp"
    (2055802 'move' errorExists[2055797](2055799 '!=' error[1768801] nil[44]))
    if errorExists[2055797]
    {
      gotoErrorHandling handler[1768802] handler[1768802]
    }
    label handler[1768802]
    val errorExists[2055805]:bool[10] "temp"
    (2055810 'move' errorExists[2055805](2055807 '!=' error[1768801] nil[44]))
    if errorExists[2055805]
    {
      (1768817 '=' error_out[1768771] error[1768801])
      gotoErrorHandlingReturn _endon_fn[1768773] _endon_fn[1768773]
    }
    label _endon_fn[1768773]
    (1068819 return _void[55])
  }
  function on_fn[1080116](const in arg this[1765614]:channel(true,dynamic,false)[1060858], ref arg ret[1765616]:int(64)[13]) : void[4] "on" "resolved"
  {
    const-val local__str_literal_3016[2335236]:string[26] "temp"
    (2335237 'move' "in lock" "in lock")
    const-val local__str_literal_129[2335230]:string[26] "temp"
    (2335231 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3013[2335224]:string[26] "temp"
    (2335225 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1768972]:Error[167938] "error variable" "temp"
    (1768981 'move' error[1768972] nil[44])
    ref rvfRerefTmp[2032555]:channel(true,dynamic,false)[1060858] "temp"
    (2032559 'move' rvfRerefTmp[2032555](2032556 'set reference' this[1765614]))
    const-val call_tmp[2211039]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211041 'move' call_tmp[2211039](2211044 call qio_int_to_err[223546] 0))
    const-val coerce_tmp[2211049]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2211051 'move' coerce_tmp[2211049](2211053 '.v' this[1765614] _channel_internal[1060851]))
    const-val call_tmp[2211056]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211058 'move' call_tmp[2211056](2211060 'cast' c_void_ptr[149] coerce_tmp[2211049]))
    const-val call_tmp[2211063]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211065 'move' call_tmp[2211063](2211067 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2211070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211072 'move' call_tmp[2211070](2211074 'ptr_eq' call_tmp[2211056] call_tmp[2211063]))
    if call_tmp[2211070]
    {
      const-val call_tmp[2211079]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2211081]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211083 'move' coerce_tmp[2211081](2211085 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[2211088]:owned SystemError[1000149] "temp"
      (2211091 call fromSyserr[1017024] coerce_tmp[2211081] "Operation attempted on an invalid channel" ret_tmp[2211088])
      (2211095 'move' call_tmp[2211079] ret_tmp[2211088])
      val call_tmp[2211098]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2211100]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2211102]:owned Error[966369] "temp"
      ref i_x[2211104]:owned SystemError[1000149] "temp"
      (2211106 'move' i_x[2211104](2211108 'set reference' call_tmp[2211079]))
      ref i__retArg[2211110]:owned Error[966369] "temp"
      (2211112 'move' i__retArg[2211110](2211114 'set reference' ret_tmp[2211102]))
      val _formal_tmp_x[2211116]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2211118 'move' _formal_tmp_x[2211116] i_x[2211104])
      const-val ret[2211121]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2211123]:owned SystemError[1000149] "temp"
      (2211125 'move' i_this[2211123](2211127 'set reference' _formal_tmp_x[2211116]))
      val coerce_tmp[2211129]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2211131 'move' coerce_tmp[2211129](2211133 '.v' i_this[2211123] chpl_p[1000144]))
      val call_tmp[2211136]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211138 'move' call_tmp[2211136](2211140 'cast' Error[167938] coerce_tmp[2211129]))
      ref i_this[2211148]:owned SystemError[1000149] "temp"
      (2211150 'move' i_this[2211148](2211152 'set reference' _formal_tmp_x[2211116]))
      val tmp[2211154]:SystemError[264757] "temp"
      (2211156 'move' tmp[2211154](2211158 'cast' SystemError[264757] nil[44]))
      (2211161 '.=' i_this[2211148] chpl_p[1000144] tmp[2211154])
      val coerce_tmp[2211165]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211167 'move' coerce_tmp[2211165](2211169 'cast' object[22] call_tmp[2211136]))
      const-val call_tmp[2211172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211174 'move' call_tmp[2211172](2211176 'ptr_eq' coerce_tmp[2211165] nil[44]))
      if call_tmp[2211172]
      {
        (2211182 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2211185]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2211187]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2211190 call init[968005] initTemp[2211187] call_tmp[2211136])
      (2211193 'move' call_tmp[2211185] initTemp[2211187])
      (2211196 'move' ret[2211121] call_tmp[2211185])
      (2211200 call chpl__autoDestroy[1549120] _formal_tmp_x[2211116])
      (2211202 '=' i__retArg[2211110] ret[2211121])
      (2211205 'move' coerce_tmp[2211100] ret_tmp[2211102])
      const-val _formal_tmp_in_err[2211208]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2211210 'move' _formal_tmp_in_err[2211208] coerce_tmp[2211100])
      (2211213 'move' call_tmp[2211098](2211216 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2211208]))
      (2211218 '=' error[1768972] call_tmp[2211098])
      gotoErrorHandlingReturn _endlock[2211281] _endlock[2211281]
    }
    const-val call_tmp[2211224]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211226 'move' call_tmp[2211224](2211229 call qio_err_iserr[223558] call_tmp[2211039]))
    const-val call_tmp[2211231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211233 'move' call_tmp[2211231](2211235 '!=' call_tmp[2211224] 0))
    if call_tmp[2211231]
    {
      val error[2211240]:Error[167938] "error variable" "temp"
      (2211242 'move' error[2211240] nil[44])
      (2211246 call _ch_ioerror[1062776] rvfRerefTmp[2032555] call_tmp[2211039] "in lock" error[2211240])
      val errorExists[2211251]:bool[10] "temp"
      (2211253 'move' errorExists[2211251](2211255 '!=' error[2211240] nil[44]))
      if errorExists[2211251]
      {
        gotoErrorHandling handler[2211263] handler[2211263]
      }
      label handler[2211263]
      val errorExists[2211265]:bool[10] "temp"
      (2211267 'move' errorExists[2211265](2211269 '!=' error[2211240] nil[44]))
      if errorExists[2211265]
      {
        (2211274 '=' error[1768972] error[2211240])
        gotoErrorHandlingReturn _endlock[2211281] _endlock[2211281]
      }
    }
    label _endlock[2211281]
    val errorExists[2055869]:bool[10] "temp"
    (2055874 'move' errorExists[2055869](2055871 '!=' error[1768972] nil[44]))
    if errorExists[2055869]
    {
      gotoErrorHandling handler[1768973] handler[1768973]
    }
    label handler[1768973]
    val errorExists[2055877]:bool[10] "temp"
    (2055882 'move' errorExists[2055877](2055879 '!=' error[1768972] nil[44]))
    if errorExists[2055877]
    {
      (1768987 call chpl_uncaught_error[170243] error[1768972])
    }
    const-val call_tmp[1080137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1080196]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1080200 'move' coerce_tmp[1080196](2326036 '.v' this[1765614] _channel_internal[1060851]))
    (1080139 'move' call_tmp[1080137](1080142 call qio_channel_offset_unlocked[233294] coerce_tmp[1080196]))
    (2068623 '=' ret[1765616] call_tmp[1080137])
    (1080155 return _void[55])
  }
  function on_fn[1080668](ref arg err[1765618]:syserr[223496], const in arg hints[1765620]:int(32)[95], const in arg start[1765622]:int(64)[13], ref arg ret[1765624]:channel(false,dynamic,false)[1080593], const in arg end[1765626]:int(64)[13], const in arg style[1765628]:iostyle[231756], const in arg this[1765630]:file[235492], ref arg error_out[1769043]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1769047]:Error[167938] "error variable" "temp"
    (1769056 'move' error[1769047] nil[44])
    ref rvfRerefTmp[2032584]:file[235492] "temp"
    (2032588 'move' rvfRerefTmp[2032584](2032585 'set reference' this[1765630]))
    (1080679 call checkAssumingLocal[235680] rvfRerefTmp[2032584] error[1769047])
    val errorExists[2055909]:bool[10] "temp"
    (2055914 'move' errorExists[2055909](2055911 '!=' error[1769047] nil[44]))
    if errorExists[2055909]
    {
      gotoErrorHandling handler[1769048] handler[1769048]
    }
    label handler[1769048]
    val errorExists[2055917]:bool[10] "temp"
    (2055922 'move' errorExists[2055917](2055919 '!=' error[1769047] nil[44]))
    if errorExists[2055917]
    {
      (1769063 '=' error_out[1769043] error[1769047])
      gotoErrorHandlingReturn _endon_fn[1769045] _endon_fn[1769045]
    }
    const-val call_tmp[1080681]:channel(false,dynamic,false)[1080593] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1081023]:channel(false,dynamic,false)[1080593] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1081494]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2032577]:file[235492] "temp"
    (2032581 'move' rvfRerefTmp[2032577](2032578 'set reference' this[1765630]))
    (1081026 call init[1081039] initTemp[1081023] rvfRerefTmp[2032577] _formal_tmp_out_error[1081494] hints[1765620] start[1765622] end[1765626] style[1765628])
    (2153060 '=' err[1765618] _formal_tmp_out_error[1081494])
    (1080683 'move' call_tmp[1080681] initTemp[1081023])
    (1080697 call =[1081503] ret[1765624] call_tmp[1080681])
    ref i_x[2287216]:channel(false,dynamic,false)[1080593] "temp"
    (2287220 'move' i_x[2287216](2287218 'set reference' call_tmp[1080681]))
    (2287224 call deinit[1573416] i_x[2287216])
    label _endon_fn[1769045]
    (1080703 return _void[55])
  }
  function on_fn[1081117](ref arg _formal_tmp_error[1765632]:syserr[223496], ref arg this[1765634]:channel(false,dynamic,false)[1080593], const in arg hints[1765636]:int(32)[95], const in arg local_style[1765638]:iostyle[231756], const in arg end[1765640]:int(64)[13], const in arg start[1765642]:int(64)[13], const in arg f[1765644]:file[235492]) : void[4] "on" "resolved"
  {
    ref call_tmp[2213600]:locale[28] "dead after last mention" "maybe param" "temp"
    (2213602 'move' call_tmp[2213600](2213604 '.' this[1765634] home[1080581]))
    ref call_tmp[2162162]:locale[28] "dead after last mention" "maybe param" "temp"
    (2162164 'move' call_tmp[2162162](2162166 '.' f[1765644] home[235474]))
    (1081140 call =[90631] call_tmp[2213600] call_tmp[2162162])
    ref call_tmp[2213654]:qio_channel_ptr_t[231377] "dead after last mention" "maybe param" "temp"
    (2213656 'move' call_tmp[2213654](2213658 '.' this[1765634] _channel_internal[1080586]))
    const-val call_tmp[1081225]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1081463]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081467 'move' coerce_tmp[1081463](2326066 '.v' f[1765644] _file_internal[235480]))
    const-val coerce_tmp[1081469]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081475 'move' coerce_tmp[1081469](1081471 'cast' int(32)[95] 1))
    const-val coerce_tmp[1081477]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081483 'move' coerce_tmp[1081477](1081479 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2032597]:iostyle[231756] "temp"
    (2032601 'move' rvfRerefTmp[2032597](2032598 'set reference' local_style[1765638]))
    (1081227 'move' call_tmp[1081225](1081230 call qio_channel_create[232790] call_tmp[2213654] coerce_tmp[1081463] hints[1765636] coerce_tmp[1081469] coerce_tmp[1081477] start[1765642] end[1765640] rvfRerefTmp[2032597]))
    (2153066 '=' _formal_tmp_error[1765632] call_tmp[1081225])
    (1081243 return _void[55])
  }
  function on_fn[1081729](const in arg rhs[1765646]:channel(false,dynamic,false)[1080593]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1081928]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081932 'move' coerce_tmp[1081928](2326105 '.v' rhs[1765646] _channel_internal[1080586]))
    (1081744 call qio_channel_retain[232863] coerce_tmp[1081928])
    (1081746 return _void[55])
  }
  function on_fn[1081773](const  ref arg lhs[1765648]:channel(false,dynamic,false)[1080593]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1081947]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081951 'move' coerce_tmp[1081947](2326112 '.v' lhs[1765648] _channel_internal[1080586]))
    (1081788 call qio_channel_release[232873] coerce_tmp[1081947])
    (1081790 return _void[55])
  }
  function on_fn[1082098](const in arg this[1765650]:channel(false,dynamic,false)[1080593], ref arg err[1765652]:syserr[223496]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1082120]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082443]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082449 'move' coerce_tmp[1082443](1082445 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082451]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082455 'move' coerce_tmp[1082451](2326132 '.v' this[1765650] _channel_internal[1080586]))
    (1082122 'move' call_tmp[1082120](1082125 call qio_channel_close[233052] coerce_tmp[1082443] coerce_tmp[1082451]))
    (2153072 '=' err[1765652] call_tmp[1082120])
    (1082134 return _void[55])
  }
  function on_fn[1082527](const in arg this[1765654]:channel(false,dynamic,false)[1080593], ref arg path[1765656]:string[26], ref arg offset[1765658]:int(64)[13], ref arg error_out[1769198]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1082533]:c_string[19] "dead at end of block" "insert auto destroy"
    (1082734 'move' tmp_path[1082533](1082732 'cast' c_string[19] nil[44]))
    val tmp_offset[1082539]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082737 'move' tmp_offset[1082539] 0)
    (2153633 call qio_int_to_err[223546] 0)
    const-val call_tmp[1082581]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082689]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082695 'move' coerce_tmp[1082689](1082691 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082697]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082701 'move' coerce_tmp[1082697](2326145 '.v' this[1765654] _channel_internal[1080586]))
    (1082583 'move' call_tmp[1082581](1082586 call qio_channel_path_offset[232836] coerce_tmp[1082689] coerce_tmp[1082697] tmp_path[1082533] tmp_offset[1082539]))
    const-val call_tmp[2152535]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152537 'move' call_tmp[2152535](2152540 call qio_err_iserr[223558] call_tmp[1082581]))
    const-val call_tmp[2152542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2152544 'move' call_tmp[2152542](2152546 '==' call_tmp[2152535] 0))
    if call_tmp[2152542]
    {
      const-val call_tmp[1082615]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1769203]:Error[167938] "error variable" "temp"
      (1769205 'move' error[1769203] nil[44])
      const-val call_tmp[2150137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2150139 'move' call_tmp[2150137](2150141 'string_length_bytes' tmp_path[1082533]))
      val errorExists[2055973]:bool[10] "temp"
      (2055978 'move' errorExists[2055973](2055975 '!=' error[1769203] nil[44]))
      if errorExists[2055973]
      {
        (1769209 '=' error_out[1769198] error[1769203])
        gotoErrorHandlingReturn _endon_fn[1769200] _endon_fn[1769200]
      }
      val error[1769218]:Error[167938] "error variable" "temp"
      (1769220 'move' error[1769218] nil[44])
      const-val ret[2087929]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2087931]:c_ptr(uint(8))[937334] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087933 'move' call_tmp[2087931](2087935 'cast' c_ptr(uint(8))[937334] tmp_path[1082533]))
      val error[2087940]:Error[167938] "error variable" "temp"
      (2087942 'move' error[2087940] nil[44])
      const-val ret[2087945]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2087947]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2087949]:Error[167938] "error variable" "temp"
      (2087951 'move' error[2087949] nil[44])
      const-val ret_tmp[2087954]:string[26] "temp"
      (2087957 call decodeByteBuffer[173892] call_tmp[2087931] call_tmp[2150137] replace[173648] error[2087949] ret_tmp[2087954])
      (2087963 'move' call_tmp[2087947] ret_tmp[2087954])
      val errorExists[2087966]:bool[10] "temp"
      (2087968 'move' errorExists[2087966](2087970 '!=' error[2087949] nil[44]))
      if errorExists[2087966]
      {
        (2087975 '=' error[2087940] error[2087949])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2087984] _endcreateStringWithNewBuffer[2087984]
      }
      (2087981 'move' ret[2087945] call_tmp[2087947])
      label _endcreateStringWithNewBuffer[2087984]
      val errorExists[2087989]:bool[10] "temp"
      (2087991 'move' errorExists[2087989](2087993 '!=' error[2087940] nil[44]))
      if errorExists[2087989]
      {
        (2087998 '=' error[1769218] error[2087940])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2088007] _endcreateStringWithNewBuffer[2088007]
      }
      (2088004 'move' ret[2087929] ret[2087945])
      label _endcreateStringWithNewBuffer[2088007]
      (1786008 'move' call_tmp[1082615] ret[2087929])
      val errorExists[2055981]:bool[10] "temp"
      (2055986 'move' errorExists[2055981](2055983 '!=' error[1769218] nil[44]))
      if errorExists[2055981]
      {
        (1769224 '=' error_out[1769198] error[1769218])
        gotoErrorHandlingReturn _endon_fn[1769200] _endon_fn[1769200]
      }
      (1082625 call =[38269] path[1765656] call_tmp[1082615])
      ref i_x[2077446]:string[26] "temp"
      (2077450 'move' i_x[2077446](2077448 'set reference' call_tmp[1082615]))
      (2077454 call deinit[30831] i_x[2077446])
      ref i_cs[2066592]:c_string[19] "temp"
      (2066596 'move' i_cs[2066592](2066594 'set reference' tmp_path[1082533]))
      const-val call_tmp[2066599]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066601 'move' call_tmp[2066599](2066603 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2066606]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066608 'move' call_tmp[2066606](2066610 'cast' c_string[19] call_tmp[2066599]))
      const-val coerce_tmp[2066613]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2066615 'move' coerce_tmp[2066613] tmp_path[1082533])
      const-val call_tmp[2066619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066621 'move' call_tmp[2066619](2066623 'string_compare' coerce_tmp[2066613] call_tmp[2066606]))
      const-val call_tmp[2066626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066628 'move' call_tmp[2066626](2066630 '!=' call_tmp[2066619] 0))
      if call_tmp[2066626]
      {
        (2066636 call chpl_rt_free_c_string[22714] i_cs[2066592])
      }
      (2068629 '=' offset[1765658] tmp_offset[1082539])
    }
    label _endon_fn[1769200]
    (1082644 return _void[55])
  }
  function on_fn[1164818](const in arg this[1765686]:channel(true,dynamic,false)[1060858], const  ref arg args[1765688]:(string,codepointIndex,string)[1158466], const in arg origLocale[1765690]:locale[28], ref arg error_out[1769511]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3016[2335608]:string[26] "temp"
    (2335609 'move' "in lock" "in lock")
    const-val local__str_literal_129[2335602]:string[26] "temp"
    (2335603 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3013[2335596]:string[26] "temp"
    (2335597 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1769515]:Error[167938] "error variable" "temp"
    (1769524 'move' error[1769515] nil[44])
    ref rvfRerefTmp[2032705]:channel(true,dynamic,false)[1060858] "temp"
    (2032709 'move' rvfRerefTmp[2032705](2032706 'set reference' this[1765686]))
    const-val call_tmp[2211294]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211296 'move' call_tmp[2211294](2211299 call qio_int_to_err[223546] 0))
    const-val coerce_tmp[2211304]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2211306 'move' coerce_tmp[2211304](2211308 '.v' this[1765686] _channel_internal[1060851]))
    const-val call_tmp[2211311]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211313 'move' call_tmp[2211311](2211315 'cast' c_void_ptr[149] coerce_tmp[2211304]))
    const-val call_tmp[2211318]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211320 'move' call_tmp[2211318](2211322 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2211325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211327 'move' call_tmp[2211325](2211329 'ptr_eq' call_tmp[2211311] call_tmp[2211318]))
    if call_tmp[2211325]
    {
      const-val call_tmp[2211334]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2211336]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211338 'move' coerce_tmp[2211336](2211340 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[2211343]:owned SystemError[1000149] "temp"
      (2211346 call fromSyserr[1017024] coerce_tmp[2211336] "Operation attempted on an invalid channel" ret_tmp[2211343])
      (2211350 'move' call_tmp[2211334] ret_tmp[2211343])
      val call_tmp[2211353]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2211355]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2211357]:owned Error[966369] "temp"
      ref i_x[2211359]:owned SystemError[1000149] "temp"
      (2211361 'move' i_x[2211359](2211363 'set reference' call_tmp[2211334]))
      ref i__retArg[2211365]:owned Error[966369] "temp"
      (2211367 'move' i__retArg[2211365](2211369 'set reference' ret_tmp[2211357]))
      val _formal_tmp_x[2211371]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2211373 'move' _formal_tmp_x[2211371] i_x[2211359])
      const-val ret[2211376]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2211378]:owned SystemError[1000149] "temp"
      (2211380 'move' i_this[2211378](2211382 'set reference' _formal_tmp_x[2211371]))
      val coerce_tmp[2211384]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2211386 'move' coerce_tmp[2211384](2211388 '.v' i_this[2211378] chpl_p[1000144]))
      val call_tmp[2211391]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211393 'move' call_tmp[2211391](2211395 'cast' Error[167938] coerce_tmp[2211384]))
      ref i_this[2211403]:owned SystemError[1000149] "temp"
      (2211405 'move' i_this[2211403](2211407 'set reference' _formal_tmp_x[2211371]))
      val tmp[2211409]:SystemError[264757] "temp"
      (2211411 'move' tmp[2211409](2211413 'cast' SystemError[264757] nil[44]))
      (2211416 '.=' i_this[2211403] chpl_p[1000144] tmp[2211409])
      val coerce_tmp[2211420]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211422 'move' coerce_tmp[2211420](2211424 'cast' object[22] call_tmp[2211391]))
      const-val call_tmp[2211427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211429 'move' call_tmp[2211427](2211431 'ptr_eq' coerce_tmp[2211420] nil[44]))
      if call_tmp[2211427]
      {
        (2211437 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2211440]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2211442]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2211445 call init[968005] initTemp[2211442] call_tmp[2211391])
      (2211448 'move' call_tmp[2211440] initTemp[2211442])
      (2211451 'move' ret[2211376] call_tmp[2211440])
      (2211455 call chpl__autoDestroy[1549120] _formal_tmp_x[2211371])
      (2211457 '=' i__retArg[2211365] ret[2211376])
      (2211460 'move' coerce_tmp[2211355] ret_tmp[2211357])
      const-val _formal_tmp_in_err[2211463]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2211465 'move' _formal_tmp_in_err[2211463] coerce_tmp[2211355])
      (2211468 'move' call_tmp[2211353](2211471 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2211463]))
      (2211473 '=' error[1769515] call_tmp[2211353])
      gotoErrorHandlingReturn _endlock[2211536] _endlock[2211536]
    }
    const-val call_tmp[2211479]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211481 'move' call_tmp[2211479](2211484 call qio_err_iserr[223558] call_tmp[2211294]))
    const-val call_tmp[2211486]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211488 'move' call_tmp[2211486](2211490 '!=' call_tmp[2211479] 0))
    if call_tmp[2211486]
    {
      val error[2211495]:Error[167938] "error variable" "temp"
      (2211497 'move' error[2211495] nil[44])
      (2211501 call _ch_ioerror[1062776] rvfRerefTmp[2032705] call_tmp[2211294] "in lock" error[2211495])
      val errorExists[2211506]:bool[10] "temp"
      (2211508 'move' errorExists[2211506](2211510 '!=' error[2211495] nil[44]))
      if errorExists[2211506]
      {
        gotoErrorHandling handler[2211518] handler[2211518]
      }
      label handler[2211518]
      val errorExists[2211520]:bool[10] "temp"
      (2211522 'move' errorExists[2211520](2211524 '!=' error[2211495] nil[44]))
      if errorExists[2211520]
      {
        (2211529 '=' error[1769515] error[2211495])
        gotoErrorHandlingReturn _endlock[2211536] _endlock[2211536]
      }
    }
    label _endlock[2211536]
    val errorExists[2056141]:bool[10] "temp"
    (2056146 'move' errorExists[2056141](2056143 '!=' error[1769515] nil[44]))
    if errorExists[2056141]
    {
      gotoErrorHandling handler[1769516] handler[1769516]
    }
    label handler[1769516]
    val errorExists[2056149]:bool[10] "temp"
    (2056154 'move' errorExists[2056149](2056151 '!=' error[1769515] nil[44]))
    if errorExists[2056149]
    {
      (1769531 '=' error_out[1769511] error[1769515])
      gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
    }
    val error[1769543]:Error[167938] "error variable" "temp"
    (1769552 'move' error[1769543] nil[44])
    const-ref call_tmp[1164981]:string[26] "dead after last mention" "maybe param" "temp"
    (1164983 'move' call_tmp[1164981](1165068 '.v' args[1765688] x0[1158460]))
    ref rvfRerefTmp[2032712]:channel(true,dynamic,false)[1060858] "temp"
    (2032716 'move' rvfRerefTmp[2032712](2032713 'set reference' this[1765686]))
    val rvfRerefTmp[2032767]:locale[28] "temp"
    (2032770 'move' rvfRerefTmp[2032767] origLocale[1765690])
    (1164992 call _writeOne[1165071] rvfRerefTmp[2032712] call_tmp[1164981] rvfRerefTmp[2032767] error[1769543])
    val errorExists[2056157]:bool[10] "temp"
    (2056162 'move' errorExists[2056157](2056159 '!=' error[1769543] nil[44]))
    if errorExists[2056157]
    {
      gotoErrorHandling handler[1769544] handler[1769544]
    }
    label handler[1769544]
    val errorExists[2056165]:bool[10] "temp"
    (2056170 'move' errorExists[2056165](2056167 '!=' error[1769543] nil[44]))
    if errorExists[2056165]
    {
      (1769559 '=' error_out[1769511] error[1769543])
      gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
    }
    val error[1769571]:Error[167938] "error variable" "temp"
    (1769580 'move' error[1769571] nil[44])
    const-ref call_tmp[1165013]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1165015 'move' call_tmp[1165013](1173821 '.v' args[1765688] x1[1158462]))
    ref rvfRerefTmp[2032719]:channel(true,dynamic,false)[1060858] "temp"
    (2032723 'move' rvfRerefTmp[2032719](2032720 'set reference' this[1765686]))
    val rvfRerefTmp[2032773]:locale[28] "temp"
    (2032776 'move' rvfRerefTmp[2032773] origLocale[1765690])
    (1165024 call _writeOne[1173824] rvfRerefTmp[2032719] call_tmp[1165013] rvfRerefTmp[2032773] error[1769571])
    val errorExists[2056173]:bool[10] "temp"
    (2056178 'move' errorExists[2056173](2056175 '!=' error[1769571] nil[44]))
    if errorExists[2056173]
    {
      gotoErrorHandling handler[1769572] handler[1769572]
    }
    label handler[1769572]
    val errorExists[2056181]:bool[10] "temp"
    (2056186 'move' errorExists[2056181](2056183 '!=' error[1769571] nil[44]))
    if errorExists[2056181]
    {
      (1769587 '=' error_out[1769511] error[1769571])
      gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
    }
    val error[1769599]:Error[167938] "error variable" "temp"
    (1769608 'move' error[1769599] nil[44])
    const-ref call_tmp[1165045]:string[26] "dead after last mention" "maybe param" "temp"
    (1165047 'move' call_tmp[1165045](1175555 '.v' args[1765688] x2[1158464]))
    ref rvfRerefTmp[2032726]:channel(true,dynamic,false)[1060858] "temp"
    (2032730 'move' rvfRerefTmp[2032726](2032727 'set reference' this[1765686]))
    val rvfRerefTmp[2032779]:locale[28] "temp"
    (2032782 'move' rvfRerefTmp[2032779] origLocale[1765690])
    (1165056 call _writeOne[1165071] rvfRerefTmp[2032726] call_tmp[1165045] rvfRerefTmp[2032779] error[1769599])
    val errorExists[2056189]:bool[10] "temp"
    (2056194 'move' errorExists[2056189](2056191 '!=' error[1769599] nil[44]))
    if errorExists[2056189]
    {
      gotoErrorHandling handler[1769600] handler[1769600]
    }
    label handler[1769600]
    val errorExists[2056197]:bool[10] "temp"
    (2056202 'move' errorExists[2056197](2056199 '!=' error[1769599] nil[44]))
    if errorExists[2056197]
    {
      (1769615 '=' error_out[1769511] error[1769599])
      gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
    }
    label _endon_fn[1769513]
    (1164921 return _void[55])
  }
  function on_fn[1180297](const in arg this[1765692]:channel(true,dynamic,false)[1060858], const  ref arg args[1765694]:(string,codepointIndex,string,int(64))[1176431], const in arg origLocale[1765696]:locale[28], ref arg error_out[1770008]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3016[2335724]:string[26] "temp"
    (2335725 'move' "in lock" "in lock")
    const-val local__str_literal_129[2335718]:string[26] "temp"
    (2335719 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3013[2335712]:string[26] "temp"
    (2335713 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1770012]:Error[167938] "error variable" "temp"
    (1770021 'move' error[1770012] nil[44])
    ref rvfRerefTmp[2032792]:channel(true,dynamic,false)[1060858] "temp"
    (2032796 'move' rvfRerefTmp[2032792](2032793 'set reference' this[1765692]))
    const-val call_tmp[2211549]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211551 'move' call_tmp[2211549](2211554 call qio_int_to_err[223546] 0))
    const-val coerce_tmp[2211559]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2211561 'move' coerce_tmp[2211559](2211563 '.v' this[1765692] _channel_internal[1060851]))
    const-val call_tmp[2211566]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211568 'move' call_tmp[2211566](2211570 'cast' c_void_ptr[149] coerce_tmp[2211559]))
    const-val call_tmp[2211573]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211575 'move' call_tmp[2211573](2211577 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2211580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211582 'move' call_tmp[2211580](2211584 'ptr_eq' call_tmp[2211566] call_tmp[2211573]))
    if call_tmp[2211580]
    {
      const-val call_tmp[2211589]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2211591]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211593 'move' coerce_tmp[2211591](2211595 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[2211598]:owned SystemError[1000149] "temp"
      (2211601 call fromSyserr[1017024] coerce_tmp[2211591] "Operation attempted on an invalid channel" ret_tmp[2211598])
      (2211605 'move' call_tmp[2211589] ret_tmp[2211598])
      val call_tmp[2211608]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2211610]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2211612]:owned Error[966369] "temp"
      ref i_x[2211614]:owned SystemError[1000149] "temp"
      (2211616 'move' i_x[2211614](2211618 'set reference' call_tmp[2211589]))
      ref i__retArg[2211620]:owned Error[966369] "temp"
      (2211622 'move' i__retArg[2211620](2211624 'set reference' ret_tmp[2211612]))
      val _formal_tmp_x[2211626]:owned SystemError[1000149] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2211628 'move' _formal_tmp_x[2211626] i_x[2211614])
      const-val ret[2211631]:owned Error[966369] "dead after last mention" "RVV" "temp"
      ref i_this[2211633]:owned SystemError[1000149] "temp"
      (2211635 'move' i_this[2211633](2211637 'set reference' _formal_tmp_x[2211626]))
      val coerce_tmp[2211639]:SystemError[264757] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2211641 'move' coerce_tmp[2211639](2211643 '.v' i_this[2211633] chpl_p[1000144]))
      val call_tmp[2211646]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211648 'move' call_tmp[2211646](2211650 'cast' Error[167938] coerce_tmp[2211639]))
      ref i_this[2211658]:owned SystemError[1000149] "temp"
      (2211660 'move' i_this[2211658](2211662 'set reference' _formal_tmp_x[2211626]))
      val tmp[2211664]:SystemError[264757] "temp"
      (2211666 'move' tmp[2211664](2211668 'cast' SystemError[264757] nil[44]))
      (2211671 '.=' i_this[2211658] chpl_p[1000144] tmp[2211664])
      val coerce_tmp[2211675]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2211677 'move' coerce_tmp[2211675](2211679 'cast' object[22] call_tmp[2211646]))
      const-val call_tmp[2211682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2211684 'move' call_tmp[2211682](2211686 'ptr_eq' coerce_tmp[2211675] nil[44]))
      if call_tmp[2211682]
      {
        (2211692 call nilCheckHalt[210063] "argument to ! is nil")
      }
      const-val call_tmp[2211695]:owned Error[966369] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2211697]:owned Error[966369] "dead after last mention" "delay instantiation" "temp"
      (2211700 call init[968005] initTemp[2211697] call_tmp[2211646])
      (2211703 'move' call_tmp[2211695] initTemp[2211697])
      (2211706 'move' ret[2211631] call_tmp[2211695])
      (2211710 call chpl__autoDestroy[1549120] _formal_tmp_x[2211626])
      (2211712 '=' i__retArg[2211620] ret[2211631])
      (2211715 'move' coerce_tmp[2211610] ret_tmp[2211612])
      const-val _formal_tmp_in_err[2211718]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2211720 'move' _formal_tmp_in_err[2211718] coerce_tmp[2211610])
      (2211723 'move' call_tmp[2211608](2211726 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2211718]))
      (2211728 '=' error[1770012] call_tmp[2211608])
      gotoErrorHandlingReturn _endlock[2211791] _endlock[2211791]
    }
    const-val call_tmp[2211734]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211736 'move' call_tmp[2211734](2211739 call qio_err_iserr[223558] call_tmp[2211549]))
    const-val call_tmp[2211741]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2211743 'move' call_tmp[2211741](2211745 '!=' call_tmp[2211734] 0))
    if call_tmp[2211741]
    {
      val error[2211750]:Error[167938] "error variable" "temp"
      (2211752 'move' error[2211750] nil[44])
      (2211756 call _ch_ioerror[1062776] rvfRerefTmp[2032792] call_tmp[2211549] "in lock" error[2211750])
      val errorExists[2211761]:bool[10] "temp"
      (2211763 'move' errorExists[2211761](2211765 '!=' error[2211750] nil[44]))
      if errorExists[2211761]
      {
        gotoErrorHandling handler[2211773] handler[2211773]
      }
      label handler[2211773]
      val errorExists[2211775]:bool[10] "temp"
      (2211777 'move' errorExists[2211775](2211779 '!=' error[2211750] nil[44]))
      if errorExists[2211775]
      {
        (2211784 '=' error[1770012] error[2211750])
        gotoErrorHandlingReturn _endlock[2211791] _endlock[2211791]
      }
    }
    label _endlock[2211791]
    val errorExists[2056421]:bool[10] "temp"
    (2056426 'move' errorExists[2056421](2056423 '!=' error[1770012] nil[44]))
    if errorExists[2056421]
    {
      gotoErrorHandling handler[1770013] handler[1770013]
    }
    label handler[1770013]
    val errorExists[2056429]:bool[10] "temp"
    (2056434 'move' errorExists[2056429](2056431 '!=' error[1770012] nil[44]))
    if errorExists[2056429]
    {
      (1770028 '=' error_out[1770008] error[1770012])
      gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
    }
    val error[1770040]:Error[167938] "error variable" "temp"
    (1770049 'move' error[1770040] nil[44])
    const-ref call_tmp[1180466]:string[26] "dead after last mention" "maybe param" "temp"
    (1180468 'move' call_tmp[1180466](1180585 '.v' args[1765694] x0[1176423]))
    ref rvfRerefTmp[2032799]:channel(true,dynamic,false)[1060858] "temp"
    (2032803 'move' rvfRerefTmp[2032799](2032800 'set reference' this[1765692]))
    val rvfRerefTmp[2032868]:locale[28] "temp"
    (2032871 'move' rvfRerefTmp[2032868] origLocale[1765696])
    (1180477 call _writeOne[1165071] rvfRerefTmp[2032799] call_tmp[1180466] rvfRerefTmp[2032868] error[1770040])
    val errorExists[2056437]:bool[10] "temp"
    (2056442 'move' errorExists[2056437](2056439 '!=' error[1770040] nil[44]))
    if errorExists[2056437]
    {
      gotoErrorHandling handler[1770041] handler[1770041]
    }
    label handler[1770041]
    val errorExists[2056445]:bool[10] "temp"
    (2056450 'move' errorExists[2056445](2056447 '!=' error[1770040] nil[44]))
    if errorExists[2056445]
    {
      (1770056 '=' error_out[1770008] error[1770040])
      gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
    }
    val error[1770068]:Error[167938] "error variable" "temp"
    (1770077 'move' error[1770068] nil[44])
    const-ref call_tmp[1180498]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1180500 'move' call_tmp[1180498](1180593 '.v' args[1765694] x1[1176425]))
    ref rvfRerefTmp[2032806]:channel(true,dynamic,false)[1060858] "temp"
    (2032810 'move' rvfRerefTmp[2032806](2032807 'set reference' this[1765692]))
    val rvfRerefTmp[2032874]:locale[28] "temp"
    (2032877 'move' rvfRerefTmp[2032874] origLocale[1765696])
    (1180509 call _writeOne[1173824] rvfRerefTmp[2032806] call_tmp[1180498] rvfRerefTmp[2032874] error[1770068])
    val errorExists[2056453]:bool[10] "temp"
    (2056458 'move' errorExists[2056453](2056455 '!=' error[1770068] nil[44]))
    if errorExists[2056453]
    {
      gotoErrorHandling handler[1770069] handler[1770069]
    }
    label handler[1770069]
    val errorExists[2056461]:bool[10] "temp"
    (2056466 'move' errorExists[2056461](2056463 '!=' error[1770068] nil[44]))
    if errorExists[2056461]
    {
      (1770084 '=' error_out[1770008] error[1770068])
      gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
    }
    val error[1770096]:Error[167938] "error variable" "temp"
    (1770105 'move' error[1770096] nil[44])
    const-ref call_tmp[1180530]:string[26] "dead after last mention" "maybe param" "temp"
    (1180532 'move' call_tmp[1180530](1180601 '.v' args[1765694] x2[1176427]))
    ref rvfRerefTmp[2032813]:channel(true,dynamic,false)[1060858] "temp"
    (2032817 'move' rvfRerefTmp[2032813](2032814 'set reference' this[1765692]))
    val rvfRerefTmp[2032880]:locale[28] "temp"
    (2032883 'move' rvfRerefTmp[2032880] origLocale[1765696])
    (1180541 call _writeOne[1165071] rvfRerefTmp[2032813] call_tmp[1180530] rvfRerefTmp[2032880] error[1770096])
    val errorExists[2056469]:bool[10] "temp"
    (2056474 'move' errorExists[2056469](2056471 '!=' error[1770096] nil[44]))
    if errorExists[2056469]
    {
      gotoErrorHandling handler[1770097] handler[1770097]
    }
    label handler[1770097]
    val errorExists[2056477]:bool[10] "temp"
    (2056482 'move' errorExists[2056477](2056479 '!=' error[1770096] nil[44]))
    if errorExists[2056477]
    {
      (1770112 '=' error_out[1770008] error[1770096])
      gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
    }
    val error[1770124]:Error[167938] "error variable" "temp"
    (1770133 'move' error[1770124] nil[44])
    const-val coerce_tmp[1180612]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180616 'move' coerce_tmp[1180612](2327205 '.v' args[1765694] x3[1176429]))
    ref rvfRerefTmp[2032820]:channel(true,dynamic,false)[1060858] "temp"
    (2032824 'move' rvfRerefTmp[2032820](2032821 'set reference' this[1765692]))
    val rvfRerefTmp[2032886]:locale[28] "temp"
    (2032889 'move' rvfRerefTmp[2032886] origLocale[1765696])
    (1180573 call _writeOne[1068848] rvfRerefTmp[2032820] coerce_tmp[1180612] rvfRerefTmp[2032886] error[1770124])
    val errorExists[2056485]:bool[10] "temp"
    (2056490 'move' errorExists[2056485](2056487 '!=' error[1770124] nil[44]))
    if errorExists[2056485]
    {
      gotoErrorHandling handler[1770125] handler[1770125]
    }
    label handler[1770125]
    val errorExists[2056493]:bool[10] "temp"
    (2056498 'move' errorExists[2056493](2056495 '!=' error[1770124] nil[44]))
    if errorExists[2056493]
    {
      (1770140 '=' error_out[1770008] error[1770124])
      gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
    }
    label _endon_fn[1770010]
    (1180400 return _void[55])
  }
  function on_fn[1504015](ref arg this[1765928]:channel(false,dynamic,true)[985538]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1504064]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1504068 'move' coerce_tmp[1504064](2330732 '.v' this[1765928] _channel_internal[985531]))
    (1504030 call qio_channel_release[232873] coerce_tmp[1504064])
    (2330738 '.=' this[1765928] _channel_internal[985531] QIO_CHANNEL_PTR_NULL[231380])
    (1504045 return _void[55])
  }
  function on_fn[1567021](ref arg this[1765970]:channel(true,dynamic,true)[1021736]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1567070]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1567074 'move' coerce_tmp[1567070](2331073 '.v' this[1765970] _channel_internal[1021729]))
    (1567036 call qio_channel_release[232873] coerce_tmp[1567070])
    (2331079 '.=' this[1765970] _channel_internal[1021729] QIO_CHANNEL_PTR_NULL[231380])
    (1567051 return _void[55])
  }
  function on_fn[1569197](ref arg this[1765974]:channel(true,dynamic,false)[1060858]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1569246]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1569250 'move' coerce_tmp[1569246](2331091 '.v' this[1765974] _channel_internal[1060851]))
    (1569212 call qio_channel_release[232873] coerce_tmp[1569246])
    (2331097 '.=' this[1765974] _channel_internal[1060851] QIO_CHANNEL_PTR_NULL[231380])
    (1569227 return _void[55])
  }
  function on_fn[1573451](ref arg this[1765980]:channel(false,dynamic,false)[1080593]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1573500]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1573504 'move' coerce_tmp[1573500](2331126 '.v' this[1765980] _channel_internal[1080586]))
    (1573466 call qio_channel_release[232873] coerce_tmp[1573500])
    (2331132 '.=' this[1765980] _channel_internal[1080586] QIO_CHANNEL_PTR_NULL[231380])
    (1573481 return _void[55])
  }
  function chpl__deinit_IO[1808204]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1808210]
    ref i_x[2284289]:file[235492] "temp"
    (2284293 'move' i_x[2284289](2284291 'set reference' call_tmp[723942]))
    (2284297 call deinit[235803] i_x[2284289])
    ref i_x[2284277]:file[235492] "temp"
    (2284281 'move' i_x[2284277](2284279 'set reference' call_tmp[723925]))
    (2284285 call deinit[235803] i_x[2284277])
    ref i_x[2284265]:file[235492] "temp"
    (2284269 'move' i_x[2284265](2284267 'set reference' call_tmp[723908]))
    (2284273 call deinit[235803] i_x[2284265])
    ref i_x[2287003]:channel(true,dynamic,true)[1021736] "temp"
    (2287007 'move' i_x[2287003](2287005 'set reference' stderr[250176]))
    (2287011 call deinit[1566986] i_x[2287003])
    ref i_x[2286991]:channel(true,dynamic,true)[1021736] "temp"
    (2286995 'move' i_x[2286991](2286993 'set reference' stdout[250147]))
    (2286999 call deinit[1566986] i_x[2286991])
    ref i_x[2284548]:channel(false,dynamic,true)[985538] "temp"
    (2284552 'move' i_x[2284548](2284550 'set reference' stdin[250120]))
    (2284556 call deinit[1503980] i_x[2284548])
    ref tmp[2033855]:6*string[985128] "temp"
    (2033860 'move' tmp[2033855](2033857 '.' _arg_to_proto_names[246473] value[2033845]))
    ref _field_destructor_tmp_[2284450]:string[26] "temp"
    (2284452 'move' _field_destructor_tmp_[2284450](2284454 'get svec member' tmp[2033855] 5))
    (2284458 call deinit[30831] _field_destructor_tmp_[2284450])
    ref _field_destructor_tmp_[2284460]:string[26] "temp"
    (2284462 'move' _field_destructor_tmp_[2284460](2284464 'get svec member' tmp[2033855] 4))
    (2284468 call deinit[30831] _field_destructor_tmp_[2284460])
    ref _field_destructor_tmp_[2284470]:string[26] "temp"
    (2284472 'move' _field_destructor_tmp_[2284470](2284474 'get svec member' tmp[2033855] 3))
    (2284478 call deinit[30831] _field_destructor_tmp_[2284470])
    ref _field_destructor_tmp_[2284480]:string[26] "temp"
    (2284482 'move' _field_destructor_tmp_[2284480](2284484 'get svec member' tmp[2033855] 2))
    (2284488 call deinit[30831] _field_destructor_tmp_[2284480])
    ref _field_destructor_tmp_[2284490]:string[26] "temp"
    (2284492 'move' _field_destructor_tmp_[2284490](2284494 'get svec member' tmp[2033855] 1))
    (2284498 call deinit[30831] _field_destructor_tmp_[2284490])
    ref _field_destructor_tmp_[2284500]:string[26] "temp"
    (2284502 'move' _field_destructor_tmp_[2284500](2284504 'get svec member' tmp[2033855] 0))
    (2284508 call deinit[30831] _field_destructor_tmp_[2284500])
    (1808207 return _void[55])
  }
  function wrapon_fn[2035429](const in arg dummy_locale_arg[2035431]:chpl_localeID_t[209294], in arg buf[2035433]:c_void_ptr[149], in arg buf_size[2035435]:int(64)[13], in arg c[2035437]:_class_localson_fn[2035389]) : void[4] "on block"
  {
    ref _1_this[2035449]:file[235492] "temp"
    (2035454 'move' _1_this[2035449](2035451 '.v' c[2035437] _1_this[2035394]))
    (2035440 call on_fn[935508] _1_this[2035449])
    (2035457 return _void[55])
  }
  function wrapon_fn[2035540](const in arg dummy_locale_arg[2035542]:chpl_localeID_t[209294], in arg buf[2035544]:c_void_ptr[149], in arg buf_size[2035546]:int(64)[13], in arg c[2035548]:_class_localson_fn[2035482]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2035560]:file[235492] "temp"
    (2035565 'move' _1_rvfDerefTmp[2035560](2035562 '.v' c[2035548] _1_rvfDerefTmp[2035487]))
    ref _2_ret[2035568]:iostyle[231756] "temp"
    (2035573 'move' _2_ret[2035568](2035570 '.v' c[2035548] _2_ret[2035489]))
    ref _3_error[2035576]:Error[167938] "temp"
    (2035581 'move' _3_error[2035576](2035578 '.v' c[2035548] _3_error[2035491]))
    (2035551 call on_fn[935517] _1_rvfDerefTmp[2035560] _2_ret[2035568] _3_error[2035576])
    (2035584 return _void[55])
  }
  function wrapon_fn[2035654](const in arg dummy_locale_arg[2035656]:chpl_localeID_t[209294], in arg buf[2035658]:c_void_ptr[149], in arg buf_size[2035660]:int(64)[13], in arg c[2035662]:_class_localson_fn[2035608]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2035674]:file[235492] "temp"
    (2035679 'move' _1_rvfDerefTmp[2035674](2035676 '.v' c[2035662] _1_rvfDerefTmp[2035613]))
    ref _2_err[2035682]:syserr[223496] "temp"
    (2035687 'move' _2_err[2035682](2035684 '.v' c[2035662] _2_err[2035615]))
    (2035665 call on_fn[935526] _1_rvfDerefTmp[2035674] _2_err[2035682])
    (2035690 return _void[55])
  }
  function wrapon_fn[2035786](const in arg dummy_locale_arg[2035788]:chpl_localeID_t[209294], in arg buf[2035790]:c_void_ptr[149], in arg buf_size[2035792]:int(64)[13], in arg c[2035794]:_class_localson_fn[2035716]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2035806]:file[235492] "temp"
    (2035811 'move' _1_rvfDerefTmp[2035806](2035808 '.v' c[2035794] _1_rvfDerefTmp[2035721]))
    ref _2_err[2035814]:syserr[223496] "temp"
    (2035819 'move' _2_err[2035814](2035816 '.v' c[2035794] _2_err[2035723]))
    ref _3_ret[2035822]:string[26] "temp"
    (2035827 'move' _3_ret[2035822](2035824 '.v' c[2035794] _3_ret[2035725]))
    ref _4_error[2035830]:Error[167938] "temp"
    (2035835 'move' _4_error[2035830](2035832 '.v' c[2035794] _4_error[2035727]))
    (2035797 call on_fn[935544] _1_rvfDerefTmp[2035806] _2_err[2035814] _3_ret[2035822] _4_error[2035830])
    (2035838 return _void[55])
  }
  function wrapon_fn[2036159](const in arg dummy_locale_arg[2036161]:chpl_localeID_t[209294], in arg buf[2036163]:c_void_ptr[149], in arg buf_size[2036165]:int(64)[13], in arg c[2036167]:_class_localson_fn[2036065]) : void[4] "on block"
  {
    val _1_start[2036179]:int(64)[13] "temp"
    (2036184 'move' _1_start[2036179](2036181 '.v' c[2036167] _1_start[2036070]))
    ref _2_err[2036187]:syserr[223496] "temp"
    (2036192 'move' _2_err[2036187](2036189 '.v' c[2036167] _2_err[2036072]))
    val _3_end[2036195]:int(64)[13] "temp"
    (2036200 'move' _3_end[2036195](2036197 '.v' c[2036167] _3_end[2036074]))
    val _4_rvfDerefTmp[2036203]:iostyle[231756] "temp"
    (2036208 'move' _4_rvfDerefTmp[2036203](2036205 '.v' c[2036167] _4_rvfDerefTmp[2036076]))
    val _5_rvfDerefTmp[2036211]:file[235492] "temp"
    (2036216 'move' _5_rvfDerefTmp[2036211](2036213 '.v' c[2036167] _5_rvfDerefTmp[2036078]))
    ref _6_ret[2036219]:channel(false,dynamic,true)[985538] "temp"
    (2036224 'move' _6_ret[2036219](2036221 '.v' c[2036167] _6_ret[2036080]))
    val _7_hints[2036227]:int(32)[95] "temp"
    (2036232 'move' _7_hints[2036227](2036229 '.v' c[2036167] _7_hints[2036082]))
    ref _8_error[2036235]:Error[167938] "temp"
    (2036240 'move' _8_error[2036235](2036237 '.v' c[2036167] _8_error[2036084]))
    (2036170 call on_fn[1016606] _1_start[2036179] _2_err[2036187] _3_end[2036195] _4_rvfDerefTmp[2036203] _5_rvfDerefTmp[2036211] _6_ret[2036219] _7_hints[2036227] _8_error[2036235])
    (2036243 return _void[55])
  }
  function wrapon_fn[2036354](const in arg dummy_locale_arg[2036356]:chpl_localeID_t[209294], in arg buf[2036358]:c_void_ptr[149], in arg buf_size[2036360]:int(64)[13], in arg c[2036362]:_class_localson_fn[2036272]) : void[4] "on block"
  {
    val _1_end[2036374]:int(64)[13] "temp"
    (2036379 'move' _1_end[2036374](2036376 '.v' c[2036362] _1_end[2036277]))
    ref _2_this[2036382]:channel(false,dynamic,true)[985538] "temp"
    (2036387 'move' _2_this[2036382](2036384 '.v' c[2036362] _2_this[2036279]))
    val _3_hints[2036390]:int(32)[95] "temp"
    (2036395 'move' _3_hints[2036390](2036392 '.v' c[2036362] _3_hints[2036281]))
    val _4_rvfDerefTmp[2036398]:iostyle[231756] "temp"
    (2036403 'move' _4_rvfDerefTmp[2036398](2036400 '.v' c[2036362] _4_rvfDerefTmp[2036283]))
    val _5_start[2036406]:int(64)[13] "temp"
    (2036411 'move' _5_start[2036406](2036408 '.v' c[2036362] _5_start[2036285]))
    val _6_rvfDerefTmp[2036414]:file[235492] "temp"
    (2036419 'move' _6_rvfDerefTmp[2036414](2036416 '.v' c[2036362] _6_rvfDerefTmp[2036287]))
    ref _7__formal_tmp_error[2036422]:syserr[223496] "temp"
    (2036427 'move' _7__formal_tmp_error[2036422](2036424 '.v' c[2036362] _7__formal_tmp_error[2036289]))
    (2036365 call on_fn[1017636] _1_end[2036374] _2_this[2036382] _3_hints[2036390] _4_rvfDerefTmp[2036398] _5_start[2036406] _6_rvfDerefTmp[2036414] _7__formal_tmp_error[2036422])
    (2036430 return _void[55])
  }
  function wrapon_fn[2036487](const in arg dummy_locale_arg[2036489]:chpl_localeID_t[209294], in arg buf[2036491]:c_void_ptr[149], in arg buf_size[2036493]:int(64)[13], in arg c[2036495]:_class_localson_fn[2036453]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2036507]:channel(false,dynamic,true)[985538] "temp"
    (2036512 'move' _1_rvfDerefTmp[2036507](2036509 '.v' c[2036495] _1_rvfDerefTmp[2036458]))
    (2036498 call on_fn[1018576] _1_rvfDerefTmp[2036507])
    (2036515 return _void[55])
  }
  function wrapon_fn[2036578](const in arg dummy_locale_arg[2036580]:chpl_localeID_t[209294], in arg buf[2036582]:c_void_ptr[149], in arg buf_size[2036584]:int(64)[13], in arg c[2036586]:_class_localson_fn[2036538]) : void[4] "on block"
  {
    ref _1_lhs[2036598]:channel(false,dynamic,true)[985538] "temp"
    (2036603 'move' _1_lhs[2036598](2036600 '.v' c[2036586] _1_lhs[2036543]))
    (2036589 call on_fn[1018620] _1_lhs[2036598])
    (2036606 return _void[55])
  }
  function wrapon_fn[2036842](const in arg dummy_locale_arg[2036844]:chpl_localeID_t[209294], in arg buf[2036846]:c_void_ptr[149], in arg buf_size[2036848]:int(64)[13], in arg c[2036850]:_class_localson_fn[2036748]) : void[4] "on block"
  {
    ref _1_err[2036862]:syserr[223496] "temp"
    (2036867 'move' _1_err[2036862](2036864 '.v' c[2036850] _1_err[2036753]))
    val _2_start[2036870]:int(64)[13] "temp"
    (2036875 'move' _2_start[2036870](2036872 '.v' c[2036850] _2_start[2036755]))
    val _3_rvfDerefTmp[2036878]:iostyle[231756] "temp"
    (2036883 'move' _3_rvfDerefTmp[2036878](2036880 '.v' c[2036850] _3_rvfDerefTmp[2036757]))
    val _4_end[2036886]:int(64)[13] "temp"
    (2036891 'move' _4_end[2036886](2036888 '.v' c[2036850] _4_end[2036759]))
    val _5_rvfDerefTmp[2036894]:file[235492] "temp"
    (2036899 'move' _5_rvfDerefTmp[2036894](2036896 '.v' c[2036850] _5_rvfDerefTmp[2036761]))
    ref _6_ret[2036902]:channel(true,dynamic,true)[1021736] "temp"
    (2036907 'move' _6_ret[2036902](2036904 '.v' c[2036850] _6_ret[2036763]))
    val _7_hints[2036910]:int(32)[95] "temp"
    (2036915 'move' _7_hints[2036910](2036912 '.v' c[2036850] _7_hints[2036765]))
    ref _8_error[2036918]:Error[167938] "temp"
    (2036923 'move' _8_error[2036918](2036920 '.v' c[2036850] _8_error[2036767]))
    (2036853 call on_fn[1022181] _1_err[2036862] _2_start[2036870] _3_rvfDerefTmp[2036878] _4_end[2036886] _5_rvfDerefTmp[2036894] _6_ret[2036902] _7_hints[2036910] _8_error[2036918])
    (2036926 return _void[55])
  }
  function wrapon_fn[2037037](const in arg dummy_locale_arg[2037039]:chpl_localeID_t[209294], in arg buf[2037041]:c_void_ptr[149], in arg buf_size[2037043]:int(64)[13], in arg c[2037045]:_class_localson_fn[2036955]) : void[4] "on block"
  {
    val _1_start[2037057]:int(64)[13] "temp"
    (2037062 'move' _1_start[2037057](2037059 '.v' c[2037045] _1_start[2036960]))
    val _2_rvfDerefTmp[2037065]:file[235492] "temp"
    (2037070 'move' _2_rvfDerefTmp[2037065](2037067 '.v' c[2037045] _2_rvfDerefTmp[2036962]))
    ref _3__formal_tmp_error[2037073]:syserr[223496] "temp"
    (2037078 'move' _3__formal_tmp_error[2037073](2037075 '.v' c[2037045] _3__formal_tmp_error[2036964]))
    val _4_end[2037081]:int(64)[13] "temp"
    (2037086 'move' _4_end[2037081](2037083 '.v' c[2037045] _4_end[2036966]))
    val _5_hints[2037089]:int(32)[95] "temp"
    (2037094 'move' _5_hints[2037089](2037091 '.v' c[2037045] _5_hints[2036968]))
    val _6_rvfDerefTmp[2037097]:iostyle[231756] "temp"
    (2037102 'move' _6_rvfDerefTmp[2037097](2037099 '.v' c[2037045] _6_rvfDerefTmp[2036970]))
    ref _7_this[2037105]:channel(true,dynamic,true)[1021736] "temp"
    (2037110 'move' _7_this[2037105](2037107 '.v' c[2037045] _7_this[2036972]))
    (2037048 call on_fn[1022672] _1_start[2037057] _2_rvfDerefTmp[2037065] _3__formal_tmp_error[2037073] _4_end[2037081] _5_hints[2037089] _6_rvfDerefTmp[2037097] _7_this[2037105])
    (2037113 return _void[55])
  }
  function wrapon_fn[2037170](const in arg dummy_locale_arg[2037172]:chpl_localeID_t[209294], in arg buf[2037174]:c_void_ptr[149], in arg buf_size[2037176]:int(64)[13], in arg c[2037178]:_class_localson_fn[2037136]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2037190]:channel(true,dynamic,true)[1021736] "temp"
    (2037195 'move' _1_rvfDerefTmp[2037190](2037192 '.v' c[2037178] _1_rvfDerefTmp[2037141]))
    (2037181 call on_fn[1023284] _1_rvfDerefTmp[2037190])
    (2037198 return _void[55])
  }
  function wrapon_fn[2037261](const in arg dummy_locale_arg[2037263]:chpl_localeID_t[209294], in arg buf[2037265]:c_void_ptr[149], in arg buf_size[2037267]:int(64)[13], in arg c[2037269]:_class_localson_fn[2037221]) : void[4] "on block"
  {
    ref _1_lhs[2037281]:channel(true,dynamic,true)[1021736] "temp"
    (2037286 'move' _1_lhs[2037281](2037283 '.v' c[2037269] _1_lhs[2037226]))
    (2037272 call on_fn[1023328] _1_lhs[2037281])
    (2037289 return _void[55])
  }
  function wrapon_fn[2037555](const in arg dummy_locale_arg[2037557]:chpl_localeID_t[209294], in arg buf[2037559]:c_void_ptr[149], in arg buf_size[2037561]:int(64)[13], in arg c[2037563]:_class_localson_fn[2037461]) : void[4] "on block"
  {
    val _1_hints[2037575]:int(32)[95] "temp"
    (2037580 'move' _1_hints[2037575](2037577 '.v' c[2037563] _1_hints[2037466]))
    val _2_start[2037583]:int(64)[13] "temp"
    (2037588 'move' _2_start[2037583](2037585 '.v' c[2037563] _2_start[2037468]))
    ref _3_ret[2037591]:channel(true,dynamic,false)[1060858] "temp"
    (2037596 'move' _3_ret[2037591](2037593 '.v' c[2037563] _3_ret[2037470]))
    val _4_rvfDerefTmp[2037599]:iostyle[231756] "temp"
    (2037604 'move' _4_rvfDerefTmp[2037599](2037601 '.v' c[2037563] _4_rvfDerefTmp[2037472]))
    val _5_end[2037607]:int(64)[13] "temp"
    (2037612 'move' _5_end[2037607](2037609 '.v' c[2037563] _5_end[2037474]))
    val _6_rvfDerefTmp[2037615]:file[235492] "temp"
    (2037620 'move' _6_rvfDerefTmp[2037615](2037617 '.v' c[2037563] _6_rvfDerefTmp[2037476]))
    ref _7_err[2037623]:syserr[223496] "temp"
    (2037628 'move' _7_err[2037623](2037625 '.v' c[2037563] _7_err[2037478]))
    ref _8_error[2037631]:Error[167938] "temp"
    (2037636 'move' _8_error[2037631](2037633 '.v' c[2037563] _8_error[2037480]))
    (2037566 call on_fn[1060933] _1_hints[2037575] _2_start[2037583] _3_ret[2037591] _4_rvfDerefTmp[2037599] _5_end[2037607] _6_rvfDerefTmp[2037615] _7_err[2037623] _8_error[2037631])
    (2037639 return _void[55])
  }
  function wrapon_fn[2037750](const in arg dummy_locale_arg[2037752]:chpl_localeID_t[209294], in arg buf[2037754]:c_void_ptr[149], in arg buf_size[2037756]:int(64)[13], in arg c[2037758]:_class_localson_fn[2037668]) : void[4] "on block"
  {
    val _1_start[2037770]:int(64)[13] "temp"
    (2037775 'move' _1_start[2037770](2037772 '.v' c[2037758] _1_start[2037673]))
    val _2_rvfDerefTmp[2037778]:file[235492] "temp"
    (2037783 'move' _2_rvfDerefTmp[2037778](2037780 '.v' c[2037758] _2_rvfDerefTmp[2037675]))
    ref _3__formal_tmp_error[2037786]:syserr[223496] "temp"
    (2037791 'move' _3__formal_tmp_error[2037786](2037788 '.v' c[2037758] _3__formal_tmp_error[2037677]))
    ref _4_this[2037794]:channel(true,dynamic,false)[1060858] "temp"
    (2037799 'move' _4_this[2037794](2037796 '.v' c[2037758] _4_this[2037679]))
    val _5_hints[2037802]:int(32)[95] "temp"
    (2037807 'move' _5_hints[2037802](2037804 '.v' c[2037758] _5_hints[2037681]))
    val _6_rvfDerefTmp[2037810]:iostyle[231756] "temp"
    (2037815 'move' _6_rvfDerefTmp[2037810](2037812 '.v' c[2037758] _6_rvfDerefTmp[2037683]))
    val _7_end[2037818]:int(64)[13] "temp"
    (2037823 'move' _7_end[2037818](2037820 '.v' c[2037758] _7_end[2037685]))
    (2037761 call on_fn[1061385] _1_start[2037770] _2_rvfDerefTmp[2037778] _3__formal_tmp_error[2037786] _4_this[2037794] _5_hints[2037802] _6_rvfDerefTmp[2037810] _7_end[2037818])
    (2037826 return _void[55])
  }
  function wrapon_fn[2037883](const in arg dummy_locale_arg[2037885]:chpl_localeID_t[209294], in arg buf[2037887]:c_void_ptr[149], in arg buf_size[2037889]:int(64)[13], in arg c[2037891]:_class_localson_fn[2037849]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2037903]:channel(true,dynamic,false)[1060858] "temp"
    (2037908 'move' _1_rvfDerefTmp[2037903](2037905 '.v' c[2037891] _1_rvfDerefTmp[2037854]))
    (2037894 call on_fn[1061997] _1_rvfDerefTmp[2037903])
    (2037911 return _void[55])
  }
  function wrapon_fn[2037974](const in arg dummy_locale_arg[2037976]:chpl_localeID_t[209294], in arg buf[2037978]:c_void_ptr[149], in arg buf_size[2037980]:int(64)[13], in arg c[2037982]:_class_localson_fn[2037934]) : void[4] "on block"
  {
    ref _1_lhs[2037994]:channel(true,dynamic,false)[1060858] "temp"
    (2037999 'move' _1_lhs[2037994](2037996 '.v' c[2037982] _1_lhs[2037939]))
    (2037985 call on_fn[1062041] _1_lhs[2037994])
    (2038002 return _void[55])
  }
  function wrapon_fn[2038072](const in arg dummy_locale_arg[2038074]:chpl_localeID_t[209294], in arg buf[2038076]:c_void_ptr[149], in arg buf_size[2038078]:int(64)[13], in arg c[2038080]:_class_localson_fn[2038026]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2038092]:channel(true,dynamic,false)[1060858] "temp"
    (2038097 'move' _1_rvfDerefTmp[2038092](2038094 '.v' c[2038080] _1_rvfDerefTmp[2038031]))
    ref _2_err[2038100]:syserr[223496] "temp"
    (2038105 'move' _2_err[2038100](2038102 '.v' c[2038080] _2_err[2038033]))
    (2038083 call on_fn[1062366] _1_rvfDerefTmp[2038092] _2_err[2038100])
    (2038108 return _void[55])
  }
  function wrapon_fn[2038210](const in arg dummy_locale_arg[2038212]:chpl_localeID_t[209294], in arg buf[2038214]:c_void_ptr[149], in arg buf_size[2038216]:int(64)[13], in arg c[2038218]:_class_localson_fn[2038134]) : void[4] "on block"
  {
    ref _1_this[2038230]:channel(true,dynamic,false)[1060858] "temp"
    (2038235 'move' _1_this[2038230](2038232 '.v' c[2038218] _1_this[2038139]))
    ref _2_path[2038238]:string[26] "temp"
    (2038243 'move' _2_path[2038238](2038240 '.v' c[2038218] _2_path[2038141]))
    ref _3_offset[2038246]:int(64)[13] "temp"
    (2038251 'move' _3_offset[2038246](2038248 '.v' c[2038218] _3_offset[2038143]))
    ref _4_error[2038254]:Error[167938] "temp"
    (2038259 'move' _4_error[2038254](2038256 '.v' c[2038218] _4_error[2038145]))
    (2038221 call on_fn[1062843] _1_this[2038230] _2_path[2038238] _3_offset[2038246] _4_error[2038254])
    (2038262 return _void[55])
  }
  function wrapon_fn[2038352](const in arg dummy_locale_arg[2038354]:chpl_localeID_t[209294], in arg buf[2038356]:c_void_ptr[149], in arg buf_size[2038358]:int(64)[13], in arg c[2038360]:_class_localson_fn[2038288]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2038372]:channel(true,dynamic,false)[1060858] "temp"
    (2038377 'move' _1_rvfDerefTmp[2038372](2038374 '.v' c[2038360] _1_rvfDerefTmp[2038293]))
    ref _2_args[2038380]:1*byteIndex[1056992] "temp"
    (2038385 'move' _2_args[2038380](2038382 '.v' c[2038360] _2_args[2038295]))
    val _3_rvfDerefTmp[2038388]:locale[28] "temp"
    (2038393 'move' _3_rvfDerefTmp[2038388](2038390 '.v' c[2038360] _3_rvfDerefTmp[2038297]))
    ref _4_error[2038396]:Error[167938] "temp"
    (2038401 'move' _4_error[2038396](2038398 '.v' c[2038360] _4_error[2038299]))
    (2038363 call on_fn[1066000] _1_rvfDerefTmp[2038372] _2_args[2038380] _3_rvfDerefTmp[2038388] _4_error[2038396])
    (2038404 return _void[55])
  }
  function wrapon_fn[2038494](const in arg dummy_locale_arg[2038496]:chpl_localeID_t[209294], in arg buf[2038498]:c_void_ptr[149], in arg buf_size[2038500]:int(64)[13], in arg c[2038502]:_class_localson_fn[2038430]) : void[4] "on block"
  {
    ref _1_this[2038514]:channel(true,dynamic,false)[1060858] "temp"
    (2038519 'move' _1_this[2038514](2038516 '.v' c[2038502] _1_this[2038435]))
    val _2_x[2038522]:int(64)[13] "temp"
    (2038527 'move' _2_x[2038522](2038524 '.v' c[2038502] _2_x[2038437]))
    val _3_rvfDerefTmp[2038530]:locale[28] "temp"
    (2038535 'move' _3_rvfDerefTmp[2038530](2038532 '.v' c[2038502] _3_rvfDerefTmp[2038439]))
    ref _4_error[2038538]:Error[167938] "temp"
    (2038543 'move' _4_error[2038538](2038540 '.v' c[2038502] _4_error[2038441]))
    (2038505 call on_fn[1068779] _1_this[2038514] _2_x[2038522] _3_rvfDerefTmp[2038530] _4_error[2038538])
    (2038546 return _void[55])
  }
  function wrapon_fn[2038616](const in arg dummy_locale_arg[2038618]:chpl_localeID_t[209294], in arg buf[2038620]:c_void_ptr[149], in arg buf_size[2038622]:int(64)[13], in arg c[2038624]:_class_localson_fn[2038570]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2038636]:channel(true,dynamic,false)[1060858] "temp"
    (2038641 'move' _1_rvfDerefTmp[2038636](2038638 '.v' c[2038624] _1_rvfDerefTmp[2038575]))
    ref _2_ret[2038644]:int(64)[13] "temp"
    (2038649 'move' _2_ret[2038644](2038646 '.v' c[2038624] _2_ret[2038577]))
    (2038627 call on_fn[1080116] _1_rvfDerefTmp[2038636] _2_ret[2038644])
    (2038652 return _void[55])
  }
  function wrapon_fn[2038776](const in arg dummy_locale_arg[2038778]:chpl_localeID_t[209294], in arg buf[2038780]:c_void_ptr[149], in arg buf_size[2038782]:int(64)[13], in arg c[2038784]:_class_localson_fn[2038682]) : void[4] "on block"
  {
    ref _1_err[2038796]:syserr[223496] "temp"
    (2038801 'move' _1_err[2038796](2038798 '.v' c[2038784] _1_err[2038687]))
    val _2_hints[2038804]:int(32)[95] "temp"
    (2038809 'move' _2_hints[2038804](2038806 '.v' c[2038784] _2_hints[2038689]))
    val _3_start[2038812]:int(64)[13] "temp"
    (2038817 'move' _3_start[2038812](2038814 '.v' c[2038784] _3_start[2038691]))
    ref _4_ret[2038820]:channel(false,dynamic,false)[1080593] "temp"
    (2038825 'move' _4_ret[2038820](2038822 '.v' c[2038784] _4_ret[2038693]))
    val _5_end[2038828]:int(64)[13] "temp"
    (2038833 'move' _5_end[2038828](2038830 '.v' c[2038784] _5_end[2038695]))
    val _6_rvfDerefTmp[2038836]:iostyle[231756] "temp"
    (2038841 'move' _6_rvfDerefTmp[2038836](2038838 '.v' c[2038784] _6_rvfDerefTmp[2038697]))
    val _7_rvfDerefTmp[2038844]:file[235492] "temp"
    (2038849 'move' _7_rvfDerefTmp[2038844](2038846 '.v' c[2038784] _7_rvfDerefTmp[2038699]))
    ref _8_error[2038852]:Error[167938] "temp"
    (2038857 'move' _8_error[2038852](2038854 '.v' c[2038784] _8_error[2038701]))
    (2038787 call on_fn[1080668] _1_err[2038796] _2_hints[2038804] _3_start[2038812] _4_ret[2038820] _5_end[2038828] _6_rvfDerefTmp[2038836] _7_rvfDerefTmp[2038844] _8_error[2038852])
    (2038860 return _void[55])
  }
  function wrapon_fn[2038971](const in arg dummy_locale_arg[2038973]:chpl_localeID_t[209294], in arg buf[2038975]:c_void_ptr[149], in arg buf_size[2038977]:int(64)[13], in arg c[2038979]:_class_localson_fn[2038889]) : void[4] "on block"
  {
    ref _1__formal_tmp_error[2038991]:syserr[223496] "temp"
    (2038996 'move' _1__formal_tmp_error[2038991](2038993 '.v' c[2038979] _1__formal_tmp_error[2038894]))
    ref _2_this[2038999]:channel(false,dynamic,false)[1080593] "temp"
    (2039004 'move' _2_this[2038999](2039001 '.v' c[2038979] _2_this[2038896]))
    val _3_hints[2039007]:int(32)[95] "temp"
    (2039012 'move' _3_hints[2039007](2039009 '.v' c[2038979] _3_hints[2038898]))
    val _4_rvfDerefTmp[2039015]:iostyle[231756] "temp"
    (2039020 'move' _4_rvfDerefTmp[2039015](2039017 '.v' c[2038979] _4_rvfDerefTmp[2038900]))
    val _5_end[2039023]:int(64)[13] "temp"
    (2039028 'move' _5_end[2039023](2039025 '.v' c[2038979] _5_end[2038902]))
    val _6_start[2039031]:int(64)[13] "temp"
    (2039036 'move' _6_start[2039031](2039033 '.v' c[2038979] _6_start[2038904]))
    val _7_rvfDerefTmp[2039039]:file[235492] "temp"
    (2039044 'move' _7_rvfDerefTmp[2039039](2039041 '.v' c[2038979] _7_rvfDerefTmp[2038906]))
    (2038982 call on_fn[1081117] _1__formal_tmp_error[2038991] _2_this[2038999] _3_hints[2039007] _4_rvfDerefTmp[2039015] _5_end[2039023] _6_start[2039031] _7_rvfDerefTmp[2039039])
    (2039047 return _void[55])
  }
  function wrapon_fn[2039104](const in arg dummy_locale_arg[2039106]:chpl_localeID_t[209294], in arg buf[2039108]:c_void_ptr[149], in arg buf_size[2039110]:int(64)[13], in arg c[2039112]:_class_localson_fn[2039070]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2039124]:channel(false,dynamic,false)[1080593] "temp"
    (2039129 'move' _1_rvfDerefTmp[2039124](2039126 '.v' c[2039112] _1_rvfDerefTmp[2039075]))
    (2039115 call on_fn[1081729] _1_rvfDerefTmp[2039124])
    (2039132 return _void[55])
  }
  function wrapon_fn[2039195](const in arg dummy_locale_arg[2039197]:chpl_localeID_t[209294], in arg buf[2039199]:c_void_ptr[149], in arg buf_size[2039201]:int(64)[13], in arg c[2039203]:_class_localson_fn[2039155]) : void[4] "on block"
  {
    ref _1_lhs[2039215]:channel(false,dynamic,false)[1080593] "temp"
    (2039220 'move' _1_lhs[2039215](2039217 '.v' c[2039203] _1_lhs[2039160]))
    (2039206 call on_fn[1081773] _1_lhs[2039215])
    (2039223 return _void[55])
  }
  function wrapon_fn[2039293](const in arg dummy_locale_arg[2039295]:chpl_localeID_t[209294], in arg buf[2039297]:c_void_ptr[149], in arg buf_size[2039299]:int(64)[13], in arg c[2039301]:_class_localson_fn[2039247]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2039313]:channel(false,dynamic,false)[1080593] "temp"
    (2039318 'move' _1_rvfDerefTmp[2039313](2039315 '.v' c[2039301] _1_rvfDerefTmp[2039252]))
    ref _2_err[2039321]:syserr[223496] "temp"
    (2039326 'move' _2_err[2039321](2039323 '.v' c[2039301] _2_err[2039254]))
    (2039304 call on_fn[1082098] _1_rvfDerefTmp[2039313] _2_err[2039321])
    (2039329 return _void[55])
  }
  function wrapon_fn[2039425](const in arg dummy_locale_arg[2039427]:chpl_localeID_t[209294], in arg buf[2039429]:c_void_ptr[149], in arg buf_size[2039431]:int(64)[13], in arg c[2039433]:_class_localson_fn[2039355]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2039445]:channel(false,dynamic,false)[1080593] "temp"
    (2039450 'move' _1_rvfDerefTmp[2039445](2039447 '.v' c[2039433] _1_rvfDerefTmp[2039360]))
    ref _2_path[2039453]:string[26] "temp"
    (2039458 'move' _2_path[2039453](2039455 '.v' c[2039433] _2_path[2039362]))
    ref _3_offset[2039461]:int(64)[13] "temp"
    (2039466 'move' _3_offset[2039461](2039463 '.v' c[2039433] _3_offset[2039364]))
    ref _4_error[2039469]:Error[167938] "temp"
    (2039474 'move' _4_error[2039469](2039471 '.v' c[2039433] _4_error[2039366]))
    (2039436 call on_fn[1082527] _1_rvfDerefTmp[2039445] _2_path[2039453] _3_offset[2039461] _4_error[2039469])
    (2039477 return _void[55])
  }
  function wrapon_fn[2039709](const in arg dummy_locale_arg[2039711]:chpl_localeID_t[209294], in arg buf[2039713]:c_void_ptr[149], in arg buf_size[2039715]:int(64)[13], in arg c[2039717]:_class_localson_fn[2039645]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2039729]:channel(true,dynamic,false)[1060858] "temp"
    (2039734 'move' _1_rvfDerefTmp[2039729](2039731 '.v' c[2039717] _1_rvfDerefTmp[2039650]))
    ref _2_args[2039737]:(string,codepointIndex,string)[1158466] "temp"
    (2039742 'move' _2_args[2039737](2039739 '.v' c[2039717] _2_args[2039652]))
    val _3_rvfDerefTmp[2039745]:locale[28] "temp"
    (2039750 'move' _3_rvfDerefTmp[2039745](2039747 '.v' c[2039717] _3_rvfDerefTmp[2039654]))
    ref _4_error[2039753]:Error[167938] "temp"
    (2039758 'move' _4_error[2039753](2039755 '.v' c[2039717] _4_error[2039656]))
    (2039720 call on_fn[1164818] _1_rvfDerefTmp[2039729] _2_args[2039737] _3_rvfDerefTmp[2039745] _4_error[2039753])
    (2039761 return _void[55])
  }
  function wrapon_fn[2039851](const in arg dummy_locale_arg[2039853]:chpl_localeID_t[209294], in arg buf[2039855]:c_void_ptr[149], in arg buf_size[2039857]:int(64)[13], in arg c[2039859]:_class_localson_fn[2039787]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2039871]:channel(true,dynamic,false)[1060858] "temp"
    (2039876 'move' _1_rvfDerefTmp[2039871](2039873 '.v' c[2039859] _1_rvfDerefTmp[2039792]))
    ref _2_args[2039879]:(string,codepointIndex,string,int(64))[1176431] "temp"
    (2039884 'move' _2_args[2039879](2039881 '.v' c[2039859] _2_args[2039794]))
    val _3_rvfDerefTmp[2039887]:locale[28] "temp"
    (2039892 'move' _3_rvfDerefTmp[2039887](2039889 '.v' c[2039859] _3_rvfDerefTmp[2039796]))
    ref _4_error[2039895]:Error[167938] "temp"
    (2039900 'move' _4_error[2039895](2039897 '.v' c[2039859] _4_error[2039798]))
    (2039862 call on_fn[1180297] _1_rvfDerefTmp[2039871] _2_args[2039879] _3_rvfDerefTmp[2039887] _4_error[2039895])
    (2039903 return _void[55])
  }
  function wrapon_fn[2044882](const in arg dummy_locale_arg[2044884]:chpl_localeID_t[209294], in arg buf[2044886]:c_void_ptr[149], in arg buf_size[2044888]:int(64)[13], in arg c[2044890]:_class_localson_fn[2044842]) : void[4] "on block"
  {
    ref _1_this[2044902]:channel(false,dynamic,true)[985538] "temp"
    (2044907 'move' _1_this[2044902](2044904 '.v' c[2044890] _1_this[2044847]))
    (2044893 call on_fn[1504015] _1_this[2044902])
    (2044910 return _void[55])
  }
  function wrapon_fn[2046673](const in arg dummy_locale_arg[2046675]:chpl_localeID_t[209294], in arg buf[2046677]:c_void_ptr[149], in arg buf_size[2046679]:int(64)[13], in arg c[2046681]:_class_localson_fn[2046633]) : void[4] "on block"
  {
    ref _1_this[2046693]:channel(true,dynamic,true)[1021736] "temp"
    (2046698 'move' _1_this[2046693](2046695 '.v' c[2046681] _1_this[2046638]))
    (2046684 call on_fn[1567021] _1_this[2046693])
    (2046701 return _void[55])
  }
  function wrapon_fn[2046849](const in arg dummy_locale_arg[2046851]:chpl_localeID_t[209294], in arg buf[2046853]:c_void_ptr[149], in arg buf_size[2046855]:int(64)[13], in arg c[2046857]:_class_localson_fn[2046809]) : void[4] "on block"
  {
    ref _1_this[2046869]:channel(true,dynamic,false)[1060858] "temp"
    (2046874 'move' _1_this[2046869](2046871 '.v' c[2046857] _1_this[2046814]))
    (2046860 call on_fn[1569197] _1_this[2046869])
    (2046877 return _void[55])
  }
  function wrapon_fn[2047110](const in arg dummy_locale_arg[2047112]:chpl_localeID_t[209294], in arg buf[2047114]:c_void_ptr[149], in arg buf_size[2047116]:int(64)[13], in arg c[2047118]:_class_localson_fn[2047070]) : void[4] "on block"
  {
    ref _1_this[2047130]:channel(false,dynamic,false)[1080593] "temp"
    (2047135 'move' _1_this[2047130](2047132 '.v' c[2047118] _1_this[2047075]))
    (2047121 call on_fn[1573451] _1_this[2047130])
    (2047138 return _void[55])
  }
}