AST dump for DSIUtil after pass prune.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416168]() : void[4] "insert line file info" "module init" "resolved"
  {
    (533666 return _void[55])
  }
  function createTuple[1302559](const in arg val[1302565]:int(64)[13], ref arg _retArg[1789644]:_ref(1*int(64))[1253093]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1760052]:int(64)[13] "temp"
    const-val ret[1302567]:1*int(64)[1253023] "dead after last mention" "RVV" "temp"
    const-val tup[1302579]:1*int(64)[1253023] "dead at end of block" "insert auto destroy"
    val call_tmp[1302581]:1*int(64)[1253023] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1788709]:1*int(64)[1253023] "temp"
    (1302714 call _defaultOf[1260863] ret_tmp[1788709])
    (1788712 'move' tup[1302579] ret_tmp[1788709])
    {
      const-val i[1302594]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1302596 'move' i[1302594] 0)
      {
        ref call_tmp[1302694]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
        (1302696 'move' call_tmp[1302694](1302710 '.' tup[1302579] x0[1253021]))
        (1302702 call =[435385] call_tmp[1302694] val[1302565])
      }
      label _continueLabel0[1302691]
      label _unused_continueLabel[1302657]
      label _breakLabel[1302659]
    }
    (1302661 'move' ret[1302567] tup[1302579])
    gotoReturn _end_createTuple[1302669] _end_createTuple[1302669]
    label _end_createTuple[1302669]
    (1789646 '=' _retArg[1789644] ret[1302567])
    (1789648 return _void[55])
  }
  function _computeChunkStuff[1362718](const in arg maxTasks[1362720]:int(64)[13], const in arg ignoreRunning[1362722]:bool[10], const in arg minSize[1362724]:int(64)[13], const  ref arg ranges[1362726]:1*range(int(64),bounded,false)[1241311], ref arg _retArg[1790465]:_ref(2*int(64))[1037252]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1362739]:2*int(64)[1037179] "dead after last mention" "RVV" "temp"
    val EC[1362769]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    val numElems[1362783]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1362785 'move' numElems[1362783] 1)
    {
      const-val i[1362790]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1362792 'move' i[1362790] 0)
      {
        {
          ref call_tmp[1363358]:_ref(range(int(64),bounded,false))[1023990] "dead after last mention" "maybe param" "temp"
          (1363360 'move' call_tmp[1363358](1363391 '.' ranges[1362726] x0[1241309]))
          const-val call_tmp[1363365]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1363394]:range(int(64),bounded,false)[1023946] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1363398 'move' coerce_tmp[1363394](1790469 call chpl__initCopy[1081985] call_tmp[1363358]))
          (1363367 'move' call_tmp[1363365](1363370 call size[1032912] coerce_tmp[1363394]))
          const-val call_tmp[1363373]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (1363375 'move' call_tmp[1363373](1363378 call _cast[974684] call_tmp[1363365]))
          (1363382 call *=[451961] numElems[1362783] call_tmp[1363373])
          (1800466 call chpl__autoDestroy[1472309] coerce_tmp[1363394])
        }
      }
      label _continueLabel0[1363354]
      label _unused_continueLabel[1362871]
      label _breakLabel[1362873]
    }
    const-val call_tmp[1362875]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1362877 'move' call_tmp[1362875](1362880 call _computeNumChunks[1363414] maxTasks[1362720] ignoreRunning[1362722] minSize[1362724] numElems[1362783]))
    val numChunks[1362885]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362887 'move' numChunks[1362885] call_tmp[1362875])
    const-val call_tmp[1362891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1362893 'move' call_tmp[1362891](1362896 call ==[435686] numChunks[1362885] 0))
    const-val call_tmp[1362899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1362901 'move' call_tmp[1362899] call_tmp[1362891])
    if call_tmp[1362899]
    {
      const-val call_tmp[1362915]:2*int(64)[1037179] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785372]:2*int(64)[1037179] "temp"
      (1362920 call _build_tuple[1037137] 0 -1 ret_tmp[1785372])
      (1785375 'move' call_tmp[1362915] ret_tmp[1785372])
      val call_tmp[1362923]:2*int(64)[1037179] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1364684 'move' ret[1362739] call_tmp[1362915])
      gotoReturn _end__computeChunkStuff[1363300] _end__computeChunkStuff[1363300]
    }
    const-val call_tmp[1362939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1362941 'move' call_tmp[1362939](1362944 call >[437730] numChunks[1362885] 0))
    (1362948 call assert[210262] call_tmp[1362939])
    val parDim[1362959]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362961 'move' parDim[1362959] -1)
    val maxDim[1362972]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1362974 'move' maxDim[1362972] -1)
    val maxElems[1362985]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1362987 'move' maxElems[1362985] 0)
    {
      val _indexOfInterest[1362995]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1362997]:_ic_chpl_direct_range_iter[1227215] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1363007]:_ir_chpl_direct_range_iter[1227221] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1787553]:_ir_chpl_direct_range_iter[1227221] "temp"
      (1363012 call chpl_direct_range_iter[1227061] 0 0 ret_tmp[1787553])
      (1787556 'move' call_tmp[1363007] ret_tmp[1787553])
      (1363016 'move' _iterator[1362997](1363019 call _getIterator[1227230] call_tmp[1363007]))
      {
        val ret[1869151]:_ir_chpl_direct_range_iter[1227221] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1869153]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1869155]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1869157]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1869159]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
        const-val low[1869423]:int(64)[13] "temp"
        (1869428 'move' low[1869423](1869425 '.v' _iterator[1362997] F0_low[1959613]))
        const-val high[1869430]:int(64)[13] "temp"
        (1869435 'move' high[1869430](1869432 '.v' _iterator[1362997] F1_high[1959617]))
        (1869162 call chpl_direct_param_stride_range_iter[1099481] low[1869423] high[1869430] ret_tmp[1869159])
        (1869166 'move' call_tmp[1869157] ret_tmp[1869159])
        (1869169 'move' _iterator[1869155](1869172 call _getIterator[1100258] call_tmp[1869157]))
        {
          val ret[1869175]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
          val call_tmp[1869177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1869180 call chpl_range_check_stride[1099801])
          val i[1869181]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[1869183]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1869185 'move' i[1869181] 0)
          val call_tmp[1869188]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[1869190]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[1869192]:int(64)[13] "temp"
          (1869194 'move' low[1869192](1869196 '.v' _iterator[1869155] F0_low[1958041]))
          (1869199 'move' default_arg_first[1869190](1869202 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1869192]))
          const-val default_arg_last[1869204]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[1869206]:int(64)[13] "temp"
          (1869208 'move' high[1869206](1869210 '.v' _iterator[1869155] F1_high[1958045]))
          (1869213 'move' default_arg_last[1869204](1869216 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1869206]))
          const-val _return_tmp_[1869218]:bool[10] "dead after last mention" "temp"
          const-val low[1869220]:int(64)[13] "temp"
          (1869222 'move' low[1869220](1869224 '.v' _iterator[1869155] F0_low[1958041]))
          const-val high[1869227]:int(64)[13] "temp"
          (1869229 'move' high[1869227](1869231 '.v' _iterator[1869155] F1_high[1958045]))
          (1869234 'move' _return_tmp_[1869218](1869237 call chpl_checkIfRangeIterWillOverflow[1093055] low[1869220] high[1869227] 1 default_arg_first[1869190] default_arg_last[1869204] 1))
          CForLoop[1869244]
          {
            const-val yret[1869273]:int(64)[13] "dead after last mention" "YVV" "temp"
            (1869275 'move' yret[1869273] i[1869181])
            const-val _yieldedIndex[1869278]:int(64)[13] "temp"
            (1869280 'move' _yieldedIndex[1869278] i[1869181])
            {
              const-val i[1869284]:int(64)[13] "const" "index var" "insert auto destroy"
              (1869286 'move' i[1869284] _yieldedIndex[1869278])
              const-val yret[1869289]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1869291 'move' yret[1869289] _yieldedIndex[1869278])
              const-val _yieldedIndex[1869313]:int(64)[13] "temp"
              (1869421 'move' _yieldedIndex[1869313] _yieldedIndex[1869278])
              {
                const-val i[1869315]:int(64)[13] "const" "index var" "insert auto destroy"
                (1869317 'move' i[1869315] _yieldedIndex[1869313])
                {
                  ref call_tmp[1869321]:_ref(range(int(64),bounded,false))[1023990] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1869323 'move' call_tmp[1869321](1869326 call this[1364411] ranges[1362726] i[1869315]))
                  const-val call_tmp[1869329]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1869331]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1869333 'move' coerce_tmp[1869331](1869336 call chpl__initCopy[1081985] call_tmp[1869321]))
                  (1869338 'move' call_tmp[1869329](1869341 call size[1032912] coerce_tmp[1869331]))
                  const-val call_tmp[1869343]:uint(64)[115] "dead at end of block" "maybe param" "temp"
                  (1869345 'move' call_tmp[1869343](1869348 call _cast[974684] call_tmp[1869329]))
                  const-val curElems[1869350]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
                  (1869352 'move' curElems[1869350] call_tmp[1869343])
                  const-val call_tmp[1869355]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1869357 'move' call_tmp[1869355](1869360 call _cast[974684] numChunks[1362885]))
                  const-val call_tmp[1869362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1869364 'move' call_tmp[1869362](1869367 call >=[437378] curElems[1869350] call_tmp[1869355]))
                  const-val call_tmp[1869370]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1869372 'move' call_tmp[1869370] call_tmp[1869362])
                  if call_tmp[1869370]
                  {
                    (1869378 call =[435385] parDim[1362959] i[1869315])
                    (1869382 call chpl__autoDestroy[1472309] coerce_tmp[1869331])
                    (1869418 call _freeIterator[1100431] _iterator[1869155])
                    break _breakLabel[1363144] _breakLabel[1363144]
                  }
                  const-val call_tmp[1869387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1869389 'move' call_tmp[1869387](1869392 call >[437818] curElems[1869350] maxElems[1362985]))
                  const-val call_tmp[1869395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1869397 'move' call_tmp[1869395] call_tmp[1869387])
                  if call_tmp[1869395]
                  {
                    (1869403 call =[435469] maxElems[1362985] curElems[1869350])
                    (1869407 call =[435385] maxDim[1362972] i[1869315])
                  }
                  (1869412 call chpl__autoDestroy[1472309] coerce_tmp[1869331])
                }
                label _continueLabel[1869414]
              }
            }
            {
              const-val low[1869246]:int(64)[13] "temp"
              (1869248 'move' low[1869246](1869250 '.v' _iterator[1869155] F0_low[1958041]))
              (1869253 '=' i[1869181] low[1869246])
            }
            {
              const-val high[1869257]:int(64)[13] "temp"
              (1869259 'move' high[1869257](1869261 '.v' _iterator[1869155] F1_high[1958045]))
              (1869264 '<=' i[1869181] high[1869257])
            }
            {
              val call_tmp[1869268]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1869270 '+=' i[1869181] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[1869304]
        }
        (1869307 call _freeIterator[1100431] _iterator[1869155])
        label _endchpl_direct_range_iter[1869309]
      }
      label _breakLabel[1363144]
      (1800479 call _freeIterator[1227403] _iterator[1362997])
    }
    const-val call_tmp[1363153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363155 'move' call_tmp[1363153](1363158 call ==[435686] parDim[1362959] -1))
    const-val call_tmp[1363161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363163 'move' call_tmp[1363161] call_tmp[1363153])
    if call_tmp[1363161]
    {
      (1363171 call =[435385] parDim[1362959] maxDim[1362972])
      const-val tmp[1363195]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1363213]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1363215]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363217 'move' call_tmp[1363215](1363220 call _cast[974684] numChunks[1362885]))
      const-val call_tmp[1363223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363225 'move' call_tmp[1363223](1363228 call <[437598] maxElems[1362985] call_tmp[1363215]))
      (1363231 'move' tmp[1363213] call_tmp[1363223])
      (1363236 'move' tmp[1363195] tmp[1363213])
      const-val call_tmp[1363248]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363250 'move' call_tmp[1363248] tmp[1363195])
      if call_tmp[1363248]
      {
        const-val call_tmp[1363257]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363259 'move' call_tmp[1363257](1363262 call _cast[951465] maxElems[1362985]))
        (1363266 call =[435385] numChunks[1362885] call_tmp[1363257])
      }
    }
    const-val call_tmp[1363274]:2*int(64)[1037179] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785378]:2*int(64)[1037179] "temp"
    (1363279 call _build_tuple[1037137] numChunks[1362885] parDim[1362959] ret_tmp[1785378])
    (1785381 'move' call_tmp[1363274] ret_tmp[1785378])
    val call_tmp[1363282]:2*int(64)[1037179] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1364687 'move' ret[1362739] call_tmp[1363274])
    gotoReturn _end__computeChunkStuff[1363300] _end__computeChunkStuff[1363300]
    label _end__computeChunkStuff[1363300]
    (1790467 '=' _retArg[1790465] ret[1362739])
    (1790473 return _void[55])
  }
  function _computeNumChunks[1222821](const in arg maxTasks[1222823]:int(64)[13], const in arg ignoreRunning[1222825]:bool[10], const in arg minSize[1222827]:int(64)[13], const in arg numElems[1222829]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1222833]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1222847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1222849 'move' call_tmp[1222847](1222852 call <=[437070] numElems[1222829] 0))
    const-val call_tmp[1222855]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1222857 'move' call_tmp[1222855] call_tmp[1222847])
    if call_tmp[1222855]
    {
      (1222864 'move' ret[1222833] 0)
      gotoReturn _end__computeNumChunks[1223265] _end__computeNumChunks[1223265]
    }
    val EC[1222872]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1222878]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1222880 'move' call_tmp[1222878](1222883 call _cast[974684] numElems[1222829]))
    const-val unumElems[1222886]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1222888 'move' unumElems[1222886] call_tmp[1222878])
    const-val call_tmp[1222892]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1222894 'move' call_tmp[1222892] maxTasks[1222823])
    val numChunks[1222900]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1222902 'move' numChunks[1222900] call_tmp[1222892])
    const-val call_tmp[1222907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1222909 'move' call_tmp[1222907](1222912 call ![7494] ignoreRunning[1222825]))
    const-val call_tmp[1222914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1222916 'move' call_tmp[1222914] call_tmp[1222907])
    if call_tmp[1222914]
    {
      const-val call_tmp[1222923]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783106]:locale[28] "temp"
      (1222928 call here[90439] ret_tmp[1783106])
      (1783109 'move' call_tmp[1222923] ret_tmp[1783106])
      const-val call_tmp[1222929]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1222931 'move' call_tmp[1222929](1222937 call runningTasks[93130] call_tmp[1222923]))
      const-val call_tmp[1222938]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1222940 'move' call_tmp[1222938](1222943 call -[957110] call_tmp[1222929]))
      const-val otherTasks[1222946]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1222948 'move' otherTasks[1222946] call_tmp[1222938])
      val tmp[1222952]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1222954]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1222956]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1222958 'move' call_tmp[1222956](1222961 call <[437510] otherTasks[1222946] maxTasks[1222823]))
      (1222964 'move' tmp[1222954] call_tmp[1222956])
      if tmp[1222954]
      {
        const-val tmp[1222971]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1222973]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1222975 'move' call_tmp[1222973](1222978 call -[440474] maxTasks[1222823] otherTasks[1222946]))
        (1222981 'move' tmp[1222971] call_tmp[1222973])
        (1222987 'move' tmp[1222952] tmp[1222971])
      }
      {
        (1222993 'move' tmp[1222952] 1)
      }
      (1223000 call =[435385] numChunks[1222900] tmp[1222952])
      (1799511 call chpl__autoDestroy[1399742] call_tmp[1222923])
    }
    const-val call_tmp[1223008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1223010 'move' call_tmp[1223008](1223013 call >[437730] minSize[1222827] 0))
    const-val call_tmp[1223016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1223018 'move' call_tmp[1223016] call_tmp[1223008])
    if call_tmp[1223016]
    {
      val tmp[1223025]:bool[10] "dead after last mention" "temp"
      const-val tmp[1223027]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1223029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1223031 'move' call_tmp[1223029](1223034 call *[441886] minSize[1222827] numChunks[1222900]))
      const-val call_tmp[1223037]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1223039 'move' call_tmp[1223037](1223042 call _cast[974684] call_tmp[1223029]))
      (1223045 'move' tmp[1223027](1223048 call <[437598] unumElems[1222886] call_tmp[1223037]))
      val tmp[1223064]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1223066]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1223068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1223070 'move' call_tmp[1223068] tmp[1223027])
      (1223075 'move' tmp[1223066] call_tmp[1223068])
      if tmp[1223066]
      {
        const-val tmp[1223082]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1223084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1223086 'move' call_tmp[1223084](1223089 call >[437730] numChunks[1222900] 1))
        (1223092 'move' tmp[1223082] call_tmp[1223084])
        (1223097 'move' tmp[1223064] tmp[1223082])
      }
      {
        (1223103 'move' tmp[1223064] 0)
      }
      (1223109 'move' tmp[1223025] tmp[1223064])
      WhileDo[1223114]
      {
        {
          (1223118 call -=[451625] numChunks[1222900] 1)
        }
        label _continueLabel[1223123]
        const-val tmp[1223125]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1223127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1223129 'move' call_tmp[1223127](1223132 call *[441886] minSize[1222827] numChunks[1222900]))
        const-val call_tmp[1223135]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (1223137 'move' call_tmp[1223135](1223140 call _cast[974684] call_tmp[1223127]))
        (1223143 'move' tmp[1223125](1223146 call <[437598] unumElems[1222886] call_tmp[1223135]))
        val tmp[1223162]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1223164]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1223166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1223168 'move' call_tmp[1223166] tmp[1223125])
        (1223173 'move' tmp[1223164] call_tmp[1223166])
        if tmp[1223164]
        {
          const-val tmp[1223180]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1223182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1223184 'move' call_tmp[1223182](1223187 call >[437730] numChunks[1222900] 1))
          (1223190 'move' tmp[1223180] call_tmp[1223182])
          (1223195 'move' tmp[1223162] tmp[1223180])
        }
        {
          (1223201 'move' tmp[1223162] 0)
        }
        (1223207 'move' tmp[1223025] tmp[1223162])
        tmp[1223025]
      }
      label _breakLabel[1223212]
    }
    const-val call_tmp[1223215]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1223217 'move' call_tmp[1223215](1223220 call _cast[974684] numChunks[1222900]))
    const-val call_tmp[1223223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1223225 'move' call_tmp[1223223](1223228 call >[437818] call_tmp[1223215] unumElems[1222886]))
    const-val call_tmp[1223231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1223233 'move' call_tmp[1223231] call_tmp[1223223])
    if call_tmp[1223231]
    {
      const-val call_tmp[1223240]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1223242 'move' call_tmp[1223240](1223245 call _cast[951465] unumElems[1222886]))
      (1223249 call =[435385] numChunks[1222900] call_tmp[1223240])
    }
    (1224743 'move' ret[1222833] numChunks[1222900])
    gotoReturn _end__computeNumChunks[1223265] _end__computeNumChunks[1223265]
    label _end__computeNumChunks[1223265]
    (1223267 return ret[1222833])
  }
  function _computeNumChunks[1363414](const in arg maxTasks[1363416]:int(64)[13], const in arg ignoreRunning[1363418]:bool[10], const in arg minSize[1363420]:int(64)[13], const in arg numElems[1363422]:uint(64)[115]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1363426]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1363440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363442 'move' call_tmp[1363440](1363445 call <=[19098] numElems[1363422] 0))
    const-val call_tmp[1363448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363450 'move' call_tmp[1363448] call_tmp[1363440])
    if call_tmp[1363448]
    {
      (1363457 'move' ret[1363426] 0)
      gotoReturn _end__computeNumChunks[1363858] _end__computeNumChunks[1363858]
    }
    val EC[1363465]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1363471]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1363473 'move' call_tmp[1363471] numElems[1363422])
    const-val unumElems[1363479]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1363481 'move' unumElems[1363479] call_tmp[1363471])
    const-val call_tmp[1363485]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1363487 'move' call_tmp[1363485] maxTasks[1363416])
    val numChunks[1363493]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1363495 'move' numChunks[1363493] call_tmp[1363485])
    const-val call_tmp[1363500]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363502 'move' call_tmp[1363500](1363505 call ![7494] ignoreRunning[1363418]))
    const-val call_tmp[1363507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363509 'move' call_tmp[1363507] call_tmp[1363500])
    if call_tmp[1363507]
    {
      const-val call_tmp[1363516]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783154]:locale[28] "temp"
      (1363521 call here[90439] ret_tmp[1783154])
      (1783157 'move' call_tmp[1363516] ret_tmp[1783154])
      const-val call_tmp[1363522]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1363524 'move' call_tmp[1363522](1363530 call runningTasks[93130] call_tmp[1363516]))
      const-val call_tmp[1363531]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1363533 'move' call_tmp[1363531](1363536 call -[957110] call_tmp[1363522]))
      const-val otherTasks[1363539]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1363541 'move' otherTasks[1363539] call_tmp[1363531])
      val tmp[1363545]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1363547]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1363549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363551 'move' call_tmp[1363549](1363554 call <[437510] otherTasks[1363539] maxTasks[1363416]))
      (1363557 'move' tmp[1363547] call_tmp[1363549])
      if tmp[1363547]
      {
        const-val tmp[1363564]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1363566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363568 'move' call_tmp[1363566](1363571 call -[440474] maxTasks[1363416] otherTasks[1363539]))
        (1363574 'move' tmp[1363564] call_tmp[1363566])
        (1363580 'move' tmp[1363545] tmp[1363564])
      }
      {
        (1363586 'move' tmp[1363545] 1)
      }
      (1363593 call =[435385] numChunks[1363493] tmp[1363545])
      (1800482 call chpl__autoDestroy[1399742] call_tmp[1363516])
    }
    const-val call_tmp[1363601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363603 'move' call_tmp[1363601](1363606 call >[437730] minSize[1363420] 0))
    const-val call_tmp[1363609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363611 'move' call_tmp[1363609] call_tmp[1363601])
    if call_tmp[1363609]
    {
      val tmp[1363618]:bool[10] "dead after last mention" "temp"
      const-val tmp[1363620]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1363622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363624 'move' call_tmp[1363622](1363627 call *[441886] minSize[1363420] numChunks[1363493]))
      const-val call_tmp[1363630]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363632 'move' call_tmp[1363630](1363635 call _cast[974684] call_tmp[1363622]))
      (1363638 'move' tmp[1363620](1363641 call <[437598] unumElems[1363479] call_tmp[1363630]))
      val tmp[1363657]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1363659]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1363661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363663 'move' call_tmp[1363661] tmp[1363620])
      (1363668 'move' tmp[1363659] call_tmp[1363661])
      if tmp[1363659]
      {
        const-val tmp[1363675]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1363677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363679 'move' call_tmp[1363677](1363682 call >[437730] numChunks[1363493] 1))
        (1363685 'move' tmp[1363675] call_tmp[1363677])
        (1363690 'move' tmp[1363657] tmp[1363675])
      }
      {
        (1363696 'move' tmp[1363657] 0)
      }
      (1363702 'move' tmp[1363618] tmp[1363657])
      WhileDo[1363707]
      {
        {
          (1363711 call -=[451625] numChunks[1363493] 1)
        }
        label _continueLabel[1363716]
        const-val tmp[1363718]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1363720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363722 'move' call_tmp[1363720](1363725 call *[441886] minSize[1363420] numChunks[1363493]))
        const-val call_tmp[1363728]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363730 'move' call_tmp[1363728](1363733 call _cast[974684] call_tmp[1363720]))
        (1363736 'move' tmp[1363718](1363739 call <[437598] unumElems[1363479] call_tmp[1363728]))
        val tmp[1363755]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1363757]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1363759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1363761 'move' call_tmp[1363759] tmp[1363718])
        (1363766 'move' tmp[1363757] call_tmp[1363759])
        if tmp[1363757]
        {
          const-val tmp[1363773]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1363775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1363777 'move' call_tmp[1363775](1363780 call >[437730] numChunks[1363493] 1))
          (1363783 'move' tmp[1363773] call_tmp[1363775])
          (1363788 'move' tmp[1363755] tmp[1363773])
        }
        {
          (1363794 'move' tmp[1363755] 0)
        }
        (1363800 'move' tmp[1363618] tmp[1363755])
        tmp[1363618]
      }
      label _breakLabel[1363805]
    }
    const-val call_tmp[1363808]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363810 'move' call_tmp[1363808](1363813 call _cast[974684] numChunks[1363493]))
    const-val call_tmp[1363816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363818 'move' call_tmp[1363816](1363821 call >[437818] call_tmp[1363808] unumElems[1363479]))
    const-val call_tmp[1363824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1363826 'move' call_tmp[1363824] call_tmp[1363816])
    if call_tmp[1363824]
    {
      const-val call_tmp[1363833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1363835 'move' call_tmp[1363833](1363838 call _cast[951465] unumElems[1363479]))
      (1363842 call =[435385] numChunks[1363493] call_tmp[1363833])
    }
    (1363919 'move' ret[1363426] numChunks[1363493])
    gotoReturn _end__computeNumChunks[1363858] _end__computeNumChunks[1363858]
    label _end__computeNumChunks[1363858]
    (1363860 return ret[1363426])
  }
  function _computeNumChunks[1258820](const in arg numElems[1258822]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1258826]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val numTasks[1258834]:int(64)[13] "dead at end of block" "insert auto destroy"
    val tmp[1258836]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1258838]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1258840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1258842 'move' call_tmp[1258840](1258845 call ==[435686] dataParTasksPerLocale[93289] 0))
    (1258848 'move' tmp[1258838] call_tmp[1258840])
    if tmp[1258838]
    {
      const-val tmp[1258855]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1258857]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783130]:locale[28] "temp"
      (1258862 call here[90439] ret_tmp[1783130])
      (1783133 'move' call_tmp[1258857] ret_tmp[1783130])
      (1258863 'move' tmp[1258855](1258866 call maxTaskPar[90546] call_tmp[1258857]))
      (1258869 'move' tmp[1258836] tmp[1258855])
      (1799600 call chpl__autoDestroy[1399742] call_tmp[1258857])
    }
    {
      (1258875 'move' tmp[1258836] dataParTasksPerLocale[93289])
    }
    (1258881 'move' numTasks[1258834] tmp[1258836])
    const-val ignoreRunning[1258885]:bool[10] "dead at end of block" "insert auto destroy"
    (1258887 'move' ignoreRunning[1258885] dataParIgnoreRunningTasks[93295])
    const-val minIndicesPerTask[1258891]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1258893 'move' minIndicesPerTask[1258891] dataParMinGranularity[93301])
    const-val call_tmp[1258897]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1258899 'move' call_tmp[1258897](1258902 call _computeNumChunks[1222821] numTasks[1258834] ignoreRunning[1258885] minIndicesPerTask[1258891] numElems[1258822]))
    const-val numChunks[1258907]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1258909 'move' numChunks[1258907] call_tmp[1258897])
    (1258935 'move' ret[1258826] numChunks[1258907])
    gotoReturn _end__computeNumChunks[1258925] _end__computeNumChunks[1258925]
    label _end__computeNumChunks[1258925]
    (1258927 return ret[1258826])
  }
  function intCeilXDivByY[1226640](const in arg x[1226642]:uint(64)[115], const in arg y[1226644]:uint(64)[115]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1226646]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1226656]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1226687]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1226693 'move' coerce_tmp[1226687](1226689 'cast' uint(64)[115] 1))
    (1226658 'move' call_tmp[1226656](1226661 call -[957077] x[1226642]))
    const-val call_tmp[1226664]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226666 'move' call_tmp[1226664](1226669 call /[442890] call_tmp[1226656] y[1226644]))
    const-val call_tmp[1226672]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1226941]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1226947 'move' coerce_tmp[1226941](1226943 'cast' uint(64)[115] 1))
    (1226674 'move' call_tmp[1226672](1226677 call +[1067979] call_tmp[1226664]))
    (1226680 'move' ret[1226646] call_tmp[1226672])
    (1226684 return ret[1226646])
  }
  function _computeBlock[1226167](const in arg numelems[1226169]:int(64)[13], const in arg numblocks[1226171]:int(64)[13], const in arg blocknum[1226173]:int(64)[13], const in arg wayhi[1226175]:int(64)[13], const in arg waylo[1226199]:int(64)[13], const in arg lo[1226223]:int(64)[13], ref arg _retArg[1787511]:_ref(2*int(64))[1037252]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1226225]:2*int(64)[1037179] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1226241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226243 'move' call_tmp[1226241](1226246 call ==[435686] numelems[1226169] 0))
    const-val call_tmp[1226249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226251 'move' call_tmp[1226249] call_tmp[1226241])
    if call_tmp[1226249]
    {
      val call_tmp[1226258]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1226272]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1226286]:2*int(64)[1037179] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785348]:2*int(64)[1037179] "temp"
      (1226291 call _build_tuple[1037137] 1 0 ret_tmp[1785348])
      (1785351 'move' call_tmp[1226286] ret_tmp[1785348])
      (1226294 'move' ret[1226225] call_tmp[1226286])
      gotoReturn _end__computeBlock[1226540] _end__computeBlock[1226540]
    }
    const-val blo[1226301]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1226303]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1226305]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1226307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226309 'move' call_tmp[1226307](1226312 call ==[435686] blocknum[1226173] 0))
    (1226315 'move' tmp[1226305] call_tmp[1226307])
    if tmp[1226305]
    {
      (1226322 'move' tmp[1226303] waylo[1226199])
    }
    {
      const-val tmp[1226328]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1226330]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1226336]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226338 'move' call_tmp[1226336](1226341 call _cast[974684] numelems[1226169]))
      const-val call_tmp[1226344]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226346 'move' call_tmp[1226344](1226349 call _cast[974684] blocknum[1226173]))
      const-val call_tmp[1226352]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226354 'move' call_tmp[1226352](1226357 call *[441974] call_tmp[1226336] call_tmp[1226344]))
      const-val call_tmp[1226360]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226362 'move' call_tmp[1226360](1226365 call _cast[974684] numblocks[1226171]))
      const-val call_tmp[1226368]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226370 'move' call_tmp[1226368](1226373 call intCeilXDivByY[1226640] call_tmp[1226352] call_tmp[1226360]))
      const-val call_tmp[1226376]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226378 'move' call_tmp[1226376](1226381 call _cast[951465] call_tmp[1226368]))
      (1226384 'move' tmp[1226328](1226387 call +[439694] lo[1226223] call_tmp[1226376]))
      (1226390 'move' tmp[1226303] tmp[1226328])
    }
    (1226396 'move' blo[1226301] tmp[1226303])
    const-val bhi[1226400]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1226402]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1226404]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1226406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226408 'move' call_tmp[1226406](1226411 call -[957110] numblocks[1226171]))
    const-val call_tmp[1226414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226416 'move' call_tmp[1226414](1226419 call ==[435686] blocknum[1226173] call_tmp[1226406]))
    (1226422 'move' tmp[1226404] call_tmp[1226414])
    if tmp[1226404]
    {
      (1226429 'move' tmp[1226402] wayhi[1226175])
    }
    {
      const-val tmp[1226435]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1226437]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1226443]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226445 'move' call_tmp[1226443](1226448 call _cast[974684] numelems[1226169]))
      const-val call_tmp[1226451]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226453 'move' call_tmp[1226451](1226456 call +[947588] blocknum[1226173]))
      const-val call_tmp[1226459]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226461 'move' call_tmp[1226459](1226464 call _cast[974684] call_tmp[1226451]))
      const-val call_tmp[1226467]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226469 'move' call_tmp[1226467](1226472 call *[441974] call_tmp[1226443] call_tmp[1226459]))
      const-val call_tmp[1226475]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226477 'move' call_tmp[1226475](1226480 call _cast[974684] numblocks[1226171]))
      const-val call_tmp[1226483]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226485 'move' call_tmp[1226483](1226488 call intCeilXDivByY[1226640] call_tmp[1226467] call_tmp[1226475]))
      const-val call_tmp[1226491]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226493 'move' call_tmp[1226491](1226496 call _cast[951465] call_tmp[1226483]))
      const-val call_tmp[1226499]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226501 'move' call_tmp[1226499](1226504 call +[439694] lo[1226223] call_tmp[1226491]))
      (1226507 'move' tmp[1226435](1226510 call -[957110] call_tmp[1226499]))
      (1226513 'move' tmp[1226402] tmp[1226435])
    }
    (1226519 'move' bhi[1226400] tmp[1226402])
    const-val call_tmp[1226523]:2*int(64)[1037179] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785354]:2*int(64)[1037179] "temp"
    (1226528 call _build_tuple[1037137] blo[1226301] bhi[1226400] ret_tmp[1785354])
    (1785357 'move' call_tmp[1226523] ret_tmp[1785354])
    (1226531 'move' ret[1226225] call_tmp[1226523])
    gotoReturn _end__computeBlock[1226540] _end__computeBlock[1226540]
    label _end__computeBlock[1226540]
    (1787513 '=' _retArg[1787511] ret[1226225])
    (1787515 return _void[55])
  }
}