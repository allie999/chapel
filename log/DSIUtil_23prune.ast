AST dump for DSIUtil after pass prune.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416110]() : void[4] "insert line file info" "module init" "resolved"
  {
    (533602 return _void[55])
  }
  function createTuple[1306205](const in arg val[1306211]:int(64)[13], ref arg _retArg[1837249]:_ref(1*int(64))[1256595]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804931]:int(64)[13] "temp"
    const-val ret[1306213]:1*int(64)[1256525] "dead after last mention" "RVV" "temp"
    const-val tup[1306225]:1*int(64)[1256525] "dead at end of block" "insert auto destroy"
    val call_tmp[1306227]:1*int(64)[1256525] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1836290]:1*int(64)[1256525] "temp"
    (1306360 call _defaultOf[1264365] ret_tmp[1836290])
    (1836293 'move' tup[1306225] ret_tmp[1836290])
    {
      const-val i[1306240]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1306242 'move' i[1306240] 0)
      {
        ref call_tmp[1306340]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
        (1306342 'move' call_tmp[1306340](1306356 '.' tup[1306225] x0[1256523]))
        (1306348 call =[435327] call_tmp[1306340] val[1306211])
      }
      label _continueLabel0[1306337]
      label _unused_continueLabel[1306303]
      label _breakLabel[1306305]
    }
    (1306307 'move' ret[1306213] tup[1306225])
    gotoReturn _end_createTuple[1306315] _end_createTuple[1306315]
    label _end_createTuple[1306315]
    (1837251 '=' _retArg[1837249] ret[1306213])
    (1837253 return _void[55])
  }
  function _computeChunkStuff[1366948](const in arg maxTasks[1366950]:int(64)[13], const in arg ignoreRunning[1366952]:bool[10], const in arg minSize[1366954]:int(64)[13], const  ref arg ranges[1366956]:1*range(int(64),bounded,false)[1244696], ref arg _retArg[1838091]:_ref(2*int(64))[1040129]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1366969]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    val EC[1366999]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    val numElems[1367013]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367015 'move' numElems[1367013] 1)
    {
      const-val i[1367020]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1367022 'move' i[1367020] 0)
      {
        {
          ref call_tmp[1367588]:_ref(range(int(64),bounded,false))[1026858] "dead after last mention" "maybe param" "temp"
          (1367590 'move' call_tmp[1367588](1367621 '.' ranges[1366956] x0[1244694]))
          const-val call_tmp[1367595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1367624]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1367628 'move' coerce_tmp[1367624](1838095 call chpl__initCopy[1085006] call_tmp[1367588]))
          (1367597 'move' call_tmp[1367595](1367600 call size[1035789] coerce_tmp[1367624]))
          const-val call_tmp[1367603]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (1367605 'move' call_tmp[1367603](1367608 call _cast[956034] call_tmp[1367595]))
          (1367612 call *=[451903] numElems[1367013] call_tmp[1367603])
          (1848255 call chpl__autoDestroy[1534375] coerce_tmp[1367624])
        }
      }
      label _continueLabel0[1367584]
      label _unused_continueLabel[1367101]
      label _breakLabel[1367103]
    }
    const-val call_tmp[1367105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1367107 'move' call_tmp[1367105](1367110 call _computeNumChunks[1367644] maxTasks[1366950] ignoreRunning[1366952] minSize[1366954] numElems[1367013]))
    val numChunks[1367115]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367117 'move' numChunks[1367115] call_tmp[1367105])
    const-val call_tmp[1367121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367123 'move' call_tmp[1367121](1367126 call ==[435628] numChunks[1367115] 0))
    const-val call_tmp[1367129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367131 'move' call_tmp[1367129] call_tmp[1367121])
    if call_tmp[1367129]
    {
      const-val call_tmp[1367145]:2*int(64)[1040056] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1832881]:2*int(64)[1040056] "temp"
      (1367150 call _build_tuple[1040014] 0 -1 ret_tmp[1832881])
      (1832884 'move' call_tmp[1367145] ret_tmp[1832881])
      val call_tmp[1367153]:2*int(64)[1040056] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1368914 'move' ret[1366969] call_tmp[1367145])
      gotoReturn _end__computeChunkStuff[1367530] _end__computeChunkStuff[1367530]
    }
    const-val call_tmp[1367169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367171 'move' call_tmp[1367169](1367174 call >[437672] numChunks[1367115] 0))
    (1367178 call assert[210345] call_tmp[1367169])
    val parDim[1367189]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367191 'move' parDim[1367189] -1)
    val maxDim[1367202]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367204 'move' maxDim[1367202] -1)
    val maxElems[1367215]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367217 'move' maxElems[1367215] 0)
    {
      val _indexOfInterest[1367225]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1367227]:_ic_chpl_direct_range_iter[1230384] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1367237]:_ir_chpl_direct_range_iter[1230390] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1835086]:_ir_chpl_direct_range_iter[1230390] "temp"
      (1367242 call chpl_direct_range_iter[1230230] 0 0 ret_tmp[1835086])
      (1835089 'move' call_tmp[1367237] ret_tmp[1835086])
      (1367246 'move' _iterator[1367227](1367249 call _getIterator[1230399] call_tmp[1367237]))
      {
        val ret[1923719]:_ir_chpl_direct_range_iter[1230390] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1923721]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1923723]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1923725]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1923727]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
        const-val low[1923991]:int(64)[13] "temp"
        (1923996 'move' low[1923991](1923993 '.v' _iterator[1367227] F0_low[2017973]))
        const-val high[1923998]:int(64)[13] "temp"
        (1924003 'move' high[1923998](1924000 '.v' _iterator[1367227] F1_high[2017977]))
        (1923730 call chpl_direct_param_stride_range_iter[1102524] low[1923991] high[1923998] ret_tmp[1923727])
        (1923734 'move' call_tmp[1923725] ret_tmp[1923727])
        (1923737 'move' _iterator[1923723](1923740 call _getIterator[1103301] call_tmp[1923725]))
        {
          val ret[1923743]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
          val call_tmp[1923745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1923748 call chpl_range_check_stride[1102844])
          val i[1923749]:int(64)[13] "dead at end of block" "insert auto destroy"
          val call_tmp[1923751]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1923753 'move' i[1923749] 0)
          val call_tmp[1923756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val default_arg_first[1923758]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val low[1923760]:int(64)[13] "temp"
          (1923762 'move' low[1923760](1923764 '.v' _iterator[1923723] F0_low[2016401]))
          (1923767 'move' default_arg_first[1923758](1923770 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1923760]))
          const-val default_arg_last[1923772]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          const-val high[1923774]:int(64)[13] "temp"
          (1923776 'move' high[1923774](1923778 '.v' _iterator[1923723] F1_high[2016405]))
          (1923781 'move' default_arg_last[1923772](1923784 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1923774]))
          const-val _return_tmp_[1923786]:bool[10] "dead after last mention" "temp"
          const-val low[1923788]:int(64)[13] "temp"
          (1923790 'move' low[1923788](1923792 '.v' _iterator[1923723] F0_low[2016401]))
          const-val high[1923795]:int(64)[13] "temp"
          (1923797 'move' high[1923795](1923799 '.v' _iterator[1923723] F1_high[2016405]))
          (1923802 'move' _return_tmp_[1923786](1923805 call chpl_checkIfRangeIterWillOverflow[1096076] low[1923788] high[1923795] 1 default_arg_first[1923758] default_arg_last[1923772] 1))
          CForLoop[1923812]
          {
            const-val yret[1923841]:int(64)[13] "dead after last mention" "YVV" "temp"
            (1923843 'move' yret[1923841] i[1923749])
            const-val _yieldedIndex[1923846]:int(64)[13] "temp"
            (1923848 'move' _yieldedIndex[1923846] i[1923749])
            {
              const-val i[1923852]:int(64)[13] "const" "index var" "insert auto destroy"
              (1923854 'move' i[1923852] _yieldedIndex[1923846])
              const-val yret[1923857]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1923859 'move' yret[1923857] _yieldedIndex[1923846])
              const-val _yieldedIndex[1923881]:int(64)[13] "temp"
              (1923989 'move' _yieldedIndex[1923881] _yieldedIndex[1923846])
              {
                const-val i[1923883]:int(64)[13] "const" "index var" "insert auto destroy"
                (1923885 'move' i[1923883] _yieldedIndex[1923881])
                {
                  ref call_tmp[1923889]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "reference to a const" "temp"
                  (1923891 'move' call_tmp[1923889](1923894 call this[1368641] ranges[1366956] i[1923883]))
                  const-val call_tmp[1923897]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1923899]:range(int(64),bounded,false)[1026814] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1923901 'move' coerce_tmp[1923899](1923904 call chpl__initCopy[1085006] call_tmp[1923889]))
                  (1923906 'move' call_tmp[1923897](1923909 call size[1035789] coerce_tmp[1923899]))
                  const-val call_tmp[1923911]:uint(64)[115] "dead at end of block" "maybe param" "temp"
                  (1923913 'move' call_tmp[1923911](1923916 call _cast[956034] call_tmp[1923897]))
                  const-val curElems[1923918]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
                  (1923920 'move' curElems[1923918] call_tmp[1923911])
                  const-val call_tmp[1923923]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1923925 'move' call_tmp[1923923](1923928 call _cast[956034] numChunks[1367115]))
                  const-val call_tmp[1923930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1923932 'move' call_tmp[1923930](1923935 call >=[437320] curElems[1923918] call_tmp[1923923]))
                  const-val call_tmp[1923938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1923940 'move' call_tmp[1923938] call_tmp[1923930])
                  if call_tmp[1923938]
                  {
                    (1923946 call =[435327] parDim[1367189] i[1923883])
                    (1923950 call chpl__autoDestroy[1534375] coerce_tmp[1923899])
                    (1923986 call _freeIterator[1103474] _iterator[1923723])
                    break _breakLabel[1367374] _breakLabel[1367374]
                  }
                  const-val call_tmp[1923955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1923957 'move' call_tmp[1923955](1923960 call >[437760] curElems[1923918] maxElems[1367215]))
                  const-val call_tmp[1923963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1923965 'move' call_tmp[1923963] call_tmp[1923955])
                  if call_tmp[1923963]
                  {
                    (1923971 call =[435411] maxElems[1367215] curElems[1923918])
                    (1923975 call =[435327] maxDim[1367202] i[1923883])
                  }
                  (1923980 call chpl__autoDestroy[1534375] coerce_tmp[1923899])
                }
                label _continueLabel[1923982]
              }
            }
            {
              const-val low[1923814]:int(64)[13] "temp"
              (1923816 'move' low[1923814](1923818 '.v' _iterator[1923723] F0_low[2016401]))
              (1923821 '=' i[1923749] low[1923814])
            }
            {
              const-val high[1923825]:int(64)[13] "temp"
              (1923827 'move' high[1923825](1923829 '.v' _iterator[1923723] F1_high[2016405]))
              (1923832 '<=' i[1923749] high[1923825])
            }
            {
              val call_tmp[1923836]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1923838 '+=' i[1923749] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[1923872]
        }
        (1923875 call _freeIterator[1103474] _iterator[1923723])
        label _endchpl_direct_range_iter[1923877]
      }
      label _breakLabel[1367374]
      (1848268 call _freeIterator[1230572] _iterator[1367227])
    }
    const-val call_tmp[1367383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367385 'move' call_tmp[1367383](1367388 call ==[435628] parDim[1367189] -1))
    const-val call_tmp[1367391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367393 'move' call_tmp[1367391] call_tmp[1367383])
    if call_tmp[1367391]
    {
      (1367401 call =[435327] parDim[1367189] maxDim[1367202])
      const-val tmp[1367425]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1367443]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1367445]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367447 'move' call_tmp[1367445](1367450 call _cast[956034] numChunks[1367115]))
      const-val call_tmp[1367453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367455 'move' call_tmp[1367453](1367458 call <[437540] maxElems[1367215] call_tmp[1367445]))
      (1367461 'move' tmp[1367443] call_tmp[1367453])
      (1367466 'move' tmp[1367425] tmp[1367443])
      const-val call_tmp[1367478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367480 'move' call_tmp[1367478] tmp[1367425])
      if call_tmp[1367478]
      {
        const-val call_tmp[1367487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367489 'move' call_tmp[1367487](1367492 call _cast[953543] maxElems[1367215]))
        (1367496 call =[435327] numChunks[1367115] call_tmp[1367487])
      }
    }
    const-val call_tmp[1367504]:2*int(64)[1040056] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832887]:2*int(64)[1040056] "temp"
    (1367509 call _build_tuple[1040014] numChunks[1367115] parDim[1367189] ret_tmp[1832887])
    (1832890 'move' call_tmp[1367504] ret_tmp[1832887])
    val call_tmp[1367512]:2*int(64)[1040056] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1368917 'move' ret[1366969] call_tmp[1367504])
    gotoReturn _end__computeChunkStuff[1367530] _end__computeChunkStuff[1367530]
    label _end__computeChunkStuff[1367530]
    (1838093 '=' _retArg[1838091] ret[1366969])
    (1838099 return _void[55])
  }
  function _computeNumChunks[1225955](const in arg maxTasks[1225957]:int(64)[13], const in arg ignoreRunning[1225959]:bool[10], const in arg minSize[1225961]:int(64)[13], const in arg numElems[1225963]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1225967]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1225981]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1225983 'move' call_tmp[1225981](1225986 call <=[437012] numElems[1225963] 0))
    const-val call_tmp[1225989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1225991 'move' call_tmp[1225989] call_tmp[1225981])
    if call_tmp[1225989]
    {
      (1225998 'move' ret[1225967] 0)
      gotoReturn _end__computeNumChunks[1226399] _end__computeNumChunks[1226399]
    }
    val EC[1226006]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1226012]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1226014 'move' call_tmp[1226012](1226017 call _cast[956034] numElems[1225963]))
    const-val unumElems[1226020]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1226022 'move' unumElems[1226020] call_tmp[1226012])
    const-val call_tmp[1226026]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1226028 'move' call_tmp[1226026] maxTasks[1225957])
    val numChunks[1226034]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1226036 'move' numChunks[1226034] call_tmp[1226026])
    const-val call_tmp[1226041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226043 'move' call_tmp[1226041](1226046 call ![7494] ignoreRunning[1225959]))
    const-val call_tmp[1226048]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226050 'move' call_tmp[1226048] call_tmp[1226041])
    if call_tmp[1226048]
    {
      const-val call_tmp[1226057]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830571]:locale[28] "temp"
      (1226062 call here[90435] ret_tmp[1830571])
      (1830574 'move' call_tmp[1226057] ret_tmp[1830571])
      const-val call_tmp[1226063]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226065 'move' call_tmp[1226063](1226071 call runningTasks[93122] call_tmp[1226057]))
      const-val call_tmp[1226072]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1226074 'move' call_tmp[1226072](1226077 call -[962226] call_tmp[1226063]))
      const-val otherTasks[1226080]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1226082 'move' otherTasks[1226080] call_tmp[1226072])
      val tmp[1226086]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1226088]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1226090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1226092 'move' call_tmp[1226090](1226095 call <[437452] otherTasks[1226080] maxTasks[1225957]))
      (1226098 'move' tmp[1226088] call_tmp[1226090])
      if tmp[1226088]
      {
        const-val tmp[1226105]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1226107]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1226109 'move' call_tmp[1226107](1226112 call -[440416] maxTasks[1225957] otherTasks[1226080]))
        (1226115 'move' tmp[1226105] call_tmp[1226107])
        (1226121 'move' tmp[1226086] tmp[1226105])
      }
      {
        (1226127 'move' tmp[1226086] 1)
      }
      (1226134 call =[435327] numChunks[1226034] tmp[1226086])
      (1847292 call chpl__autoDestroy[1461594] call_tmp[1226057])
    }
    const-val call_tmp[1226142]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226144 'move' call_tmp[1226142](1226147 call >[437672] minSize[1225961] 0))
    const-val call_tmp[1226150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226152 'move' call_tmp[1226150] call_tmp[1226142])
    if call_tmp[1226150]
    {
      val tmp[1226159]:bool[10] "dead after last mention" "temp"
      const-val tmp[1226161]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1226163]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1226165 'move' call_tmp[1226163](1226168 call *[441828] minSize[1225961] numChunks[1226034]))
      const-val call_tmp[1226171]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1226173 'move' call_tmp[1226171](1226176 call _cast[956034] call_tmp[1226163]))
      (1226179 'move' tmp[1226161](1226182 call <[437540] unumElems[1226020] call_tmp[1226171]))
      val tmp[1226198]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1226200]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1226202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1226204 'move' call_tmp[1226202] tmp[1226161])
      (1226209 'move' tmp[1226200] call_tmp[1226202])
      if tmp[1226200]
      {
        const-val tmp[1226216]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1226218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1226220 'move' call_tmp[1226218](1226223 call >[437672] numChunks[1226034] 1))
        (1226226 'move' tmp[1226216] call_tmp[1226218])
        (1226231 'move' tmp[1226198] tmp[1226216])
      }
      {
        (1226237 'move' tmp[1226198] 0)
      }
      (1226243 'move' tmp[1226159] tmp[1226198])
      WhileDo[1226248]
      {
        {
          (1226252 call -=[451567] numChunks[1226034] 1)
        }
        label _continueLabel[1226257]
        const-val tmp[1226259]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1226261]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1226263 'move' call_tmp[1226261](1226266 call *[441828] minSize[1225961] numChunks[1226034]))
        const-val call_tmp[1226269]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (1226271 'move' call_tmp[1226269](1226274 call _cast[956034] call_tmp[1226261]))
        (1226277 'move' tmp[1226259](1226280 call <[437540] unumElems[1226020] call_tmp[1226269]))
        val tmp[1226296]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1226298]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1226300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1226302 'move' call_tmp[1226300] tmp[1226259])
        (1226307 'move' tmp[1226298] call_tmp[1226300])
        if tmp[1226298]
        {
          const-val tmp[1226314]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1226316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1226318 'move' call_tmp[1226316](1226321 call >[437672] numChunks[1226034] 1))
          (1226324 'move' tmp[1226314] call_tmp[1226316])
          (1226329 'move' tmp[1226296] tmp[1226314])
        }
        {
          (1226335 'move' tmp[1226296] 0)
        }
        (1226341 'move' tmp[1226159] tmp[1226296])
        tmp[1226159]
      }
      label _breakLabel[1226346]
    }
    const-val call_tmp[1226349]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226351 'move' call_tmp[1226349](1226354 call _cast[956034] numChunks[1226034]))
    const-val call_tmp[1226357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226359 'move' call_tmp[1226357](1226362 call >[437760] call_tmp[1226349] unumElems[1226020]))
    const-val call_tmp[1226365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226367 'move' call_tmp[1226365] call_tmp[1226357])
    if call_tmp[1226365]
    {
      const-val call_tmp[1226374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1226376 'move' call_tmp[1226374](1226379 call _cast[953543] unumElems[1226020]))
      (1226383 call =[435327] numChunks[1226034] call_tmp[1226374])
    }
    (1227894 'move' ret[1225967] numChunks[1226034])
    gotoReturn _end__computeNumChunks[1226399] _end__computeNumChunks[1226399]
    label _end__computeNumChunks[1226399]
    (1226401 return ret[1225967])
  }
  function _computeNumChunks[1367644](const in arg maxTasks[1367646]:int(64)[13], const in arg ignoreRunning[1367648]:bool[10], const in arg minSize[1367650]:int(64)[13], const in arg numElems[1367652]:uint(64)[115]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1367656]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1367670]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367672 'move' call_tmp[1367670](1367675 call <=[19098] numElems[1367652] 0))
    const-val call_tmp[1367678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367680 'move' call_tmp[1367678] call_tmp[1367670])
    if call_tmp[1367678]
    {
      (1367687 'move' ret[1367656] 0)
      gotoReturn _end__computeNumChunks[1368088] _end__computeNumChunks[1368088]
    }
    val EC[1367695]:uint(64)[115] "dead at end of block" "insert auto destroy" "type variable"
    const-val call_tmp[1367701]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    (1367703 'move' call_tmp[1367701] numElems[1367652])
    const-val unumElems[1367709]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1367711 'move' unumElems[1367709] call_tmp[1367701])
    const-val call_tmp[1367715]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1367717 'move' call_tmp[1367715] maxTasks[1367646])
    val numChunks[1367723]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367725 'move' numChunks[1367723] call_tmp[1367715])
    const-val call_tmp[1367730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367732 'move' call_tmp[1367730](1367735 call ![7494] ignoreRunning[1367648]))
    const-val call_tmp[1367737]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367739 'move' call_tmp[1367737] call_tmp[1367730])
    if call_tmp[1367737]
    {
      const-val call_tmp[1367746]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830631]:locale[28] "temp"
      (1367751 call here[90435] ret_tmp[1830631])
      (1830634 'move' call_tmp[1367746] ret_tmp[1830631])
      const-val call_tmp[1367752]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1367754 'move' call_tmp[1367752](1367760 call runningTasks[93122] call_tmp[1367746]))
      const-val call_tmp[1367761]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1367763 'move' call_tmp[1367761](1367766 call -[962226] call_tmp[1367752]))
      const-val otherTasks[1367769]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1367771 'move' otherTasks[1367769] call_tmp[1367761])
      val tmp[1367775]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1367777]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1367779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367781 'move' call_tmp[1367779](1367784 call <[437452] otherTasks[1367769] maxTasks[1367646]))
      (1367787 'move' tmp[1367777] call_tmp[1367779])
      if tmp[1367777]
      {
        const-val tmp[1367794]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1367796]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367798 'move' call_tmp[1367796](1367801 call -[440416] maxTasks[1367646] otherTasks[1367769]))
        (1367804 'move' tmp[1367794] call_tmp[1367796])
        (1367810 'move' tmp[1367775] tmp[1367794])
      }
      {
        (1367816 'move' tmp[1367775] 1)
      }
      (1367823 call =[435327] numChunks[1367723] tmp[1367775])
      (1848271 call chpl__autoDestroy[1461594] call_tmp[1367746])
    }
    const-val call_tmp[1367831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367833 'move' call_tmp[1367831](1367836 call >[437672] minSize[1367650] 0))
    const-val call_tmp[1367839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367841 'move' call_tmp[1367839] call_tmp[1367831])
    if call_tmp[1367839]
    {
      val tmp[1367848]:bool[10] "dead after last mention" "temp"
      const-val tmp[1367850]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1367852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367854 'move' call_tmp[1367852](1367857 call *[441828] minSize[1367650] numChunks[1367723]))
      const-val call_tmp[1367860]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367862 'move' call_tmp[1367860](1367865 call _cast[956034] call_tmp[1367852]))
      (1367868 'move' tmp[1367850](1367871 call <[437540] unumElems[1367709] call_tmp[1367860]))
      val tmp[1367887]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1367889]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1367891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1367893 'move' call_tmp[1367891] tmp[1367850])
      (1367898 'move' tmp[1367889] call_tmp[1367891])
      if tmp[1367889]
      {
        const-val tmp[1367905]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1367907]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367909 'move' call_tmp[1367907](1367912 call >[437672] numChunks[1367723] 1))
        (1367915 'move' tmp[1367905] call_tmp[1367907])
        (1367920 'move' tmp[1367887] tmp[1367905])
      }
      {
        (1367926 'move' tmp[1367887] 0)
      }
      (1367932 'move' tmp[1367848] tmp[1367887])
      WhileDo[1367937]
      {
        {
          (1367941 call -=[451567] numChunks[1367723] 1)
        }
        label _continueLabel[1367946]
        const-val tmp[1367948]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1367950]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367952 'move' call_tmp[1367950](1367955 call *[441828] minSize[1367650] numChunks[1367723]))
        const-val call_tmp[1367958]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367960 'move' call_tmp[1367958](1367963 call _cast[956034] call_tmp[1367950]))
        (1367966 'move' tmp[1367948](1367969 call <[437540] unumElems[1367709] call_tmp[1367958]))
        val tmp[1367985]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1367987]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1367989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1367991 'move' call_tmp[1367989] tmp[1367948])
        (1367996 'move' tmp[1367987] call_tmp[1367989])
        if tmp[1367987]
        {
          const-val tmp[1368003]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1368005]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1368007 'move' call_tmp[1368005](1368010 call >[437672] numChunks[1367723] 1))
          (1368013 'move' tmp[1368003] call_tmp[1368005])
          (1368018 'move' tmp[1367985] tmp[1368003])
        }
        {
          (1368024 'move' tmp[1367985] 0)
        }
        (1368030 'move' tmp[1367848] tmp[1367985])
        tmp[1367848]
      }
      label _breakLabel[1368035]
    }
    const-val call_tmp[1368038]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1368040 'move' call_tmp[1368038](1368043 call _cast[956034] numChunks[1367723]))
    const-val call_tmp[1368046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1368048 'move' call_tmp[1368046](1368051 call >[437760] call_tmp[1368038] unumElems[1367709]))
    const-val call_tmp[1368054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1368056 'move' call_tmp[1368054] call_tmp[1368046])
    if call_tmp[1368054]
    {
      const-val call_tmp[1368063]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1368065 'move' call_tmp[1368063](1368068 call _cast[953543] unumElems[1367709]))
      (1368072 call =[435327] numChunks[1367723] call_tmp[1368063])
    }
    (1368149 'move' ret[1367656] numChunks[1367723])
    gotoReturn _end__computeNumChunks[1368088] _end__computeNumChunks[1368088]
    label _end__computeNumChunks[1368088]
    (1368090 return ret[1367656])
  }
  function _computeNumChunks[1262322](const in arg numElems[1262324]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1262328]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val numTasks[1262336]:int(64)[13] "dead at end of block" "insert auto destroy"
    val tmp[1262338]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1262340]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1262342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1262344 'move' call_tmp[1262342](1262347 call ==[435628] dataParTasksPerLocale[93281] 0))
    (1262350 'move' tmp[1262340] call_tmp[1262342])
    if tmp[1262340]
    {
      const-val tmp[1262357]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1262359]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830595]:locale[28] "temp"
      (1262364 call here[90435] ret_tmp[1830595])
      (1830598 'move' call_tmp[1262359] ret_tmp[1830595])
      (1262365 'move' tmp[1262357](1262368 call maxTaskPar[90542] call_tmp[1262359]))
      (1262371 'move' tmp[1262338] tmp[1262357])
      (1847381 call chpl__autoDestroy[1461594] call_tmp[1262359])
    }
    {
      (1262377 'move' tmp[1262338] dataParTasksPerLocale[93281])
    }
    (1262383 'move' numTasks[1262336] tmp[1262338])
    const-val ignoreRunning[1262387]:bool[10] "dead at end of block" "insert auto destroy"
    (1262389 'move' ignoreRunning[1262387] dataParIgnoreRunningTasks[93287])
    const-val minIndicesPerTask[1262393]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1262395 'move' minIndicesPerTask[1262393] dataParMinGranularity[93293])
    const-val call_tmp[1262399]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262401 'move' call_tmp[1262399](1262404 call _computeNumChunks[1225955] numTasks[1262336] ignoreRunning[1262387] minIndicesPerTask[1262393] numElems[1262324]))
    const-val numChunks[1262409]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1262411 'move' numChunks[1262409] call_tmp[1262399])
    (1262437 'move' ret[1262328] numChunks[1262409])
    gotoReturn _end__computeNumChunks[1262427] _end__computeNumChunks[1262427]
    label _end__computeNumChunks[1262427]
    (1262429 return ret[1262328])
  }
  function intCeilXDivByY[1229809](const in arg x[1229811]:uint(64)[115], const in arg y[1229813]:uint(64)[115]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229815]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1229825]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1229856]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1229862 'move' coerce_tmp[1229856](1229858 'cast' uint(64)[115] 1))
    (1229827 'move' call_tmp[1229825](1229830 call -[962193] x[1229811]))
    const-val call_tmp[1229833]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229835 'move' call_tmp[1229833](1229838 call /[442832] call_tmp[1229825] y[1229813]))
    const-val call_tmp[1229841]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1230110]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1230116 'move' coerce_tmp[1230110](1230112 'cast' uint(64)[115] 1))
    (1229843 'move' call_tmp[1229841](1229846 call +[1070937] call_tmp[1229833]))
    (1229849 'move' ret[1229815] call_tmp[1229841])
    (1229853 return ret[1229815])
  }
  function _computeBlock[1229336](const in arg numelems[1229338]:int(64)[13], const in arg numblocks[1229340]:int(64)[13], const in arg blocknum[1229342]:int(64)[13], const in arg wayhi[1229344]:int(64)[13], const in arg waylo[1229368]:int(64)[13], const in arg lo[1229392]:int(64)[13], ref arg _retArg[1835044]:_ref(2*int(64))[1040129]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229394]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1229410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229412 'move' call_tmp[1229410](1229415 call ==[435628] numelems[1229338] 0))
    const-val call_tmp[1229418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229420 'move' call_tmp[1229418] call_tmp[1229410])
    if call_tmp[1229418]
    {
      val call_tmp[1229427]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1229441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1229455]:2*int(64)[1040056] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1832857]:2*int(64)[1040056] "temp"
      (1229460 call _build_tuple[1040014] 1 0 ret_tmp[1832857])
      (1832860 'move' call_tmp[1229455] ret_tmp[1832857])
      (1229463 'move' ret[1229394] call_tmp[1229455])
      gotoReturn _end__computeBlock[1229709] _end__computeBlock[1229709]
    }
    const-val blo[1229470]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1229472]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1229474]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1229476]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229478 'move' call_tmp[1229476](1229481 call ==[435628] blocknum[1229342] 0))
    (1229484 'move' tmp[1229474] call_tmp[1229476])
    if tmp[1229474]
    {
      (1229491 'move' tmp[1229472] waylo[1229368])
    }
    {
      const-val tmp[1229497]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1229499]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1229505]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229507 'move' call_tmp[1229505](1229510 call _cast[956034] numelems[1229338]))
      const-val call_tmp[1229513]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229515 'move' call_tmp[1229513](1229518 call _cast[956034] blocknum[1229342]))
      const-val call_tmp[1229521]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229523 'move' call_tmp[1229521](1229526 call *[441916] call_tmp[1229505] call_tmp[1229513]))
      const-val call_tmp[1229529]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229531 'move' call_tmp[1229529](1229534 call _cast[956034] numblocks[1229340]))
      const-val call_tmp[1229537]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229539 'move' call_tmp[1229537](1229542 call intCeilXDivByY[1229809] call_tmp[1229521] call_tmp[1229529]))
      const-val call_tmp[1229545]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229547 'move' call_tmp[1229545](1229550 call _cast[953543] call_tmp[1229537]))
      (1229553 'move' tmp[1229497](1229556 call +[439636] lo[1229392] call_tmp[1229545]))
      (1229559 'move' tmp[1229472] tmp[1229497])
    }
    (1229565 'move' blo[1229470] tmp[1229472])
    const-val bhi[1229569]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1229571]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1229573]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1229575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229577 'move' call_tmp[1229575](1229580 call -[962226] numblocks[1229340]))
    const-val call_tmp[1229583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1229585 'move' call_tmp[1229583](1229588 call ==[435628] blocknum[1229342] call_tmp[1229575]))
    (1229591 'move' tmp[1229573] call_tmp[1229583])
    if tmp[1229573]
    {
      (1229598 'move' tmp[1229571] wayhi[1229344])
    }
    {
      const-val tmp[1229604]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1229606]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1229612]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229614 'move' call_tmp[1229612](1229617 call _cast[956034] numelems[1229338]))
      const-val call_tmp[1229620]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229622 'move' call_tmp[1229620](1229625 call +[949666] blocknum[1229342]))
      const-val call_tmp[1229628]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229630 'move' call_tmp[1229628](1229633 call _cast[956034] call_tmp[1229620]))
      const-val call_tmp[1229636]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229638 'move' call_tmp[1229636](1229641 call *[441916] call_tmp[1229612] call_tmp[1229628]))
      const-val call_tmp[1229644]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229646 'move' call_tmp[1229644](1229649 call _cast[956034] numblocks[1229340]))
      const-val call_tmp[1229652]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229654 'move' call_tmp[1229652](1229657 call intCeilXDivByY[1229809] call_tmp[1229636] call_tmp[1229644]))
      const-val call_tmp[1229660]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229662 'move' call_tmp[1229660](1229665 call _cast[953543] call_tmp[1229652]))
      const-val call_tmp[1229668]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229670 'move' call_tmp[1229668](1229673 call +[439636] lo[1229392] call_tmp[1229660]))
      (1229676 'move' tmp[1229604](1229679 call -[962226] call_tmp[1229668]))
      (1229682 'move' tmp[1229571] tmp[1229604])
    }
    (1229688 'move' bhi[1229569] tmp[1229571])
    const-val call_tmp[1229692]:2*int(64)[1040056] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832863]:2*int(64)[1040056] "temp"
    (1229697 call _build_tuple[1040014] blo[1229470] bhi[1229569] ret_tmp[1832863])
    (1832866 'move' call_tmp[1229692] ret_tmp[1832863])
    (1229700 'move' ret[1229394] call_tmp[1229692])
    gotoReturn _end__computeBlock[1229709] _end__computeBlock[1229709]
    label _end__computeBlock[1229709]
    (1835046 '=' _retArg[1835044] ret[1229394])
    (1835048 return _void[55])
  }
}