AST dump for ChapelError after pass copyPropagation.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2198738] val _runtime_hdr[2198739]:chpl_comm_on_bundle_t[209359] val _0_tmp[2198741]:chpl_localeID_t[209352] ref _1_this[2198743]:chpl_TaskErrors[168348] val _2_err[2198745]:Error[167984]
  function chpl__init_ChapelError[416133]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522461 return _void[55])
  }
  function Error[167984].message[167975](const in arg this[167994]:Error[167984], ref arg _retArg[1906918]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    ref call_tmp[2338163]:string[26] "dead after last mention" "maybe param" "temp"
    (2338165 'move' call_tmp[2338163](2338167 '.' this[167994] _msg[167930]))
    val ret[2325916]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2325918]:string[26] "dead after last mention" "temp"
    (2325921 call init=[30774] tmp[2325918] call_tmp[2338163])
    (2325924 'move' ret[2325916] tmp[2325918])
    (1906920 '=' _retArg[1906918] ret[2325916])
    (1906924 return _void[55])
  }
  function Error[167984].deinit[811935](const in arg this[811939]:Error[167984]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890426]
    ref _field_destructor_tmp_[1890424]:string[26] "temp"
    (1890431 'move' _field_destructor_tmp_[1890424](1890428 '.' this[811939] _msg[167930]))
    (1890433 call deinit[30834] _field_destructor_tmp_[1890424])
    (811947 return _void[55])
  }
  type Error[167984] val super[355807]:object[22] "super class" val _next[167912]:Error[167984] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function NilThrownError[168029].message[168004](const in arg this[168031]:NilThrownError[168029], ref arg _retArg[1918932]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    val inlineImm[2326682]:string[26] "temp"
    (2326685 'move' inlineImm[2326682] "thrown error was nil")
    ref i_x[2326687]:string[26] "temp"
    (2326691 'move' i_x[2326687](2326689 'set reference' inlineImm[2326682]))
    val ret[2326694]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326696]:string[26] "dead after last mention" "temp"
    (2326699 call init=[30774] tmp[2326696] i_x[2326687])
    (2326702 'move' ret[2326694] tmp[2326696])
    (1918934 '=' _retArg[1918932] ret[2326694])
    (1918938 return _void[55])
  }
  function NilThrownError[168029].deinit[812039](const in arg this[812043]:NilThrownError[168029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890451]
    val _parent_destructor_tmp_[1890446]:Error[167984] "temp"
    (1890453 'move' _parent_destructor_tmp_[1890446](1890447 'cast' Error[167984] this[812043]))
    ref _field_destructor_tmp_[2338214]:string[26] "temp"
    (2338216 'move' _field_destructor_tmp_[2338214](2338218 '.' _parent_destructor_tmp_[1890446] _msg[167930]))
    (2338222 call deinit[30834] _field_destructor_tmp_[2338214])
    (812051 return _void[55])
  }
  function _new[969738]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[969740]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969787 'move' call_tmp[969784](969796 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969799]:c_void_ptr[149] "dead after last mention" "temp"
    (969801 'move' cast_tmp[969799](969752 call chpl_here_alloc[187788] call_tmp[969784] 2))
    (969755 'move' initTemp[969740](969803 'cast' NilThrownError[168029] cast_tmp[969799]))
    (969757 'setcid' initTemp[969740])
    val super_tmp[2338272]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2338274 'move' super_tmp[2338272](2338276 '.v' initTemp[969740] super[355809]))
    val super_tmp[2338279]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2338281 'move' super_tmp[2338279](2338283 '.v' super_tmp[2338272] super[355807]))
    (2338286 'setcid' super_tmp[2338279])
    val call_tmp[2338288]:object[22] "dead at end of block" "maybe param" "temp"
    (2338290 'move' call_tmp[2338288](2338292 'cast' object[22] super_tmp[2338272]))
    (2338295 'setcid' call_tmp[2338288])
    val init_coerce_tmp[2338297]:Error[167984] "dead after last mention" "temp"
    (2338299 'move' init_coerce_tmp[2338297](2338301 'cast' Error[167984] nil[44]))
    (2338304 '.=' super_tmp[2338272] _next[167912] init_coerce_tmp[2338297])
    (2338308 '.=' super_tmp[2338272] thrownLine[167917] 0)
    (2338312 '.=' super_tmp[2338272] thrownFileId[167925] 0)
    val tmp[2338316]:string[26] "dead after last mention" "temp"
    (2338319 call init[30763] tmp[2338316])
    (2338321 '.=' super_tmp[2338272] _msg[167930] tmp[2338316])
    (2338325 '.=' super_tmp[2338272] _hasThrowInfo[167936] 0)
    (2338329 'setcid' super_tmp[2338272])
    val call_tmp[2338331]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2338333 'move' call_tmp[2338331](2338335 'cast' Error[167984] initTemp[969740]))
    (2338338 'setcid' call_tmp[2338331])
    (2338340 'setcid' initTemp[969740])
    (969779 return initTemp[969740])
  }
  type NilThrownError[168029] val super[355809]:Error[167984] "super class"
  function DecodeError[168140].message[168115](const in arg this[168142]:DecodeError[168140], ref arg _retArg[1918962]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    val inlineImm[2326707]:string[26] "temp"
    (2326710 'move' inlineImm[2326707] "Invalid UTF-8 character encountered.")
    ref i_x[2326712]:string[26] "temp"
    (2326716 'move' i_x[2326712](2326714 'set reference' inlineImm[2326707]))
    val ret[2326719]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326721]:string[26] "dead after last mention" "temp"
    (2326724 call init=[30774] tmp[2326721] i_x[2326712])
    (2326727 'move' ret[2326719] tmp[2326721])
    (1918964 '=' _retArg[1918962] ret[2326719])
    (1918968 return _void[55])
  }
  function DecodeError[168140].deinit[812351](const in arg this[812355]:DecodeError[168140]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890463]
    val _parent_destructor_tmp_[1890458]:Error[167984] "temp"
    (1890465 'move' _parent_destructor_tmp_[1890458](1890459 'cast' Error[167984] this[812355]))
    ref _field_destructor_tmp_[2338229]:string[26] "temp"
    (2338231 'move' _field_destructor_tmp_[2338229](2338233 '.' _parent_destructor_tmp_[1890458] _msg[167930]))
    (2338237 call deinit[30834] _field_destructor_tmp_[2338229])
    (812363 return _void[55])
  }
  function _new[965831]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[965833]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965877 'move' call_tmp[965874](965888 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965891]:c_void_ptr[149] "dead after last mention" "temp"
    (965893 'move' cast_tmp[965891](965845 call chpl_here_alloc[187788] call_tmp[965874] 1))
    (965848 'move' initTemp[965833](965895 'cast' DecodeError[168140] cast_tmp[965891]))
    (965850 'setcid' initTemp[965833])
    val super_tmp[2338345]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2338347 'move' super_tmp[2338345](2338349 '.v' initTemp[965833] super[355815]))
    val super_tmp[2338352]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2338354 'move' super_tmp[2338352](2338356 '.v' super_tmp[2338345] super[355807]))
    (2338359 'setcid' super_tmp[2338352])
    val call_tmp[2338361]:object[22] "dead at end of block" "maybe param" "temp"
    (2338363 'move' call_tmp[2338361](2338365 'cast' object[22] super_tmp[2338345]))
    (2338368 'setcid' call_tmp[2338361])
    val init_coerce_tmp[2338370]:Error[167984] "dead after last mention" "temp"
    (2338372 'move' init_coerce_tmp[2338370](2338374 'cast' Error[167984] nil[44]))
    (2338377 '.=' super_tmp[2338345] _next[167912] init_coerce_tmp[2338370])
    (2338381 '.=' super_tmp[2338345] thrownLine[167917] 0)
    (2338385 '.=' super_tmp[2338345] thrownFileId[167925] 0)
    val tmp[2338389]:string[26] "dead after last mention" "temp"
    (2338392 call init[30763] tmp[2338389])
    (2338394 '.=' super_tmp[2338345] _msg[167930] tmp[2338389])
    (2338398 '.=' super_tmp[2338345] _hasThrowInfo[167936] 0)
    (2338402 'setcid' super_tmp[2338345])
    val call_tmp[2338404]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2338406 'move' call_tmp[2338404](2338408 'cast' Error[167984] initTemp[965833]))
    (2338411 'setcid' call_tmp[2338404])
    (2338413 'setcid' initTemp[965833])
    (965869 return initTemp[965833])
  }
  type DecodeError[168140] val super[355815]:Error[167984] "super class"
  function IllegalArgumentError[168246].deinit[812391](const in arg this[812395]:IllegalArgumentError[168246]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890475]
    val _parent_destructor_tmp_[1890470]:Error[167984] "temp"
    (1890477 'move' _parent_destructor_tmp_[1890470](1890471 'cast' Error[167984] this[812395]))
    ref _field_destructor_tmp_[2338244]:string[26] "temp"
    (2338246 'move' _field_destructor_tmp_[2338244](2338248 '.' _parent_destructor_tmp_[1890470] _msg[167930]))
    (2338252 call deinit[30834] _field_destructor_tmp_[2338244])
    (812403 return _void[55])
  }
  function _new[1064296](const  ref arg info[1064305]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1064298]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064342]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064345 'move' call_tmp[1064342](1064356 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064359]:c_void_ptr[149] "dead after last mention" "temp"
    (1064361 'move' cast_tmp[1064359](1064313 call chpl_here_alloc[187788] call_tmp[1064342] 26))
    (1064316 'move' initTemp[1064298](1064363 'cast' IllegalArgumentError[168246] cast_tmp[1064359]))
    (1064318 'setcid' initTemp[1064298])
    val super_tmp[2294647]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2294649 'move' super_tmp[2294647](2294651 '.v' initTemp[1064298] super[355817]))
    val super_tmp[2294654]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2294656 'move' super_tmp[2294654](2294658 '.v' super_tmp[2294647] super[355807]))
    (2294661 'setcid' super_tmp[2294654])
    val call_tmp[2294663]:object[22] "dead at end of block" "maybe param" "temp"
    (2294665 'move' call_tmp[2294663](2294667 'cast' object[22] super_tmp[2294647]))
    (2294670 'setcid' call_tmp[2294663])
    val init_coerce_tmp[2294672]:Error[167984] "dead after last mention" "temp"
    (2294674 'move' init_coerce_tmp[2294672](2294676 'cast' Error[167984] nil[44]))
    (2294679 '.=' super_tmp[2294647] _next[167912] init_coerce_tmp[2294672])
    (2294683 '.=' super_tmp[2294647] thrownLine[167917] 0)
    (2294687 '.=' super_tmp[2294647] thrownFileId[167925] 0)
    val tmp[2294691]:string[26] "dead after last mention" "temp"
    (2294694 call init=[30774] tmp[2294691] info[1064305])
    (2294697 '.=' super_tmp[2294647] _msg[167930] tmp[2294691])
    (2294701 '.=' super_tmp[2294647] _hasThrowInfo[167936] 0)
    (2294705 'setcid' super_tmp[2294647])
    val call_tmp[2294707]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2294709 'move' call_tmp[2294707](2294711 'cast' Error[167984] initTemp[1064298]))
    (2294714 'setcid' call_tmp[2294707])
    (2294716 'setcid' initTemp[1064298])
    (1064337 return initTemp[1064298])
  }
  function _new[1073691](const  ref arg formal[1073700]:string[26], const  ref arg info[1073703]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1073693]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073741 'move' call_tmp[1073738](1073752 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073755]:c_void_ptr[149] "dead after last mention" "temp"
    (1073757 'move' cast_tmp[1073755](1073709 call chpl_here_alloc[187788] call_tmp[1073738] 26))
    (1073712 'move' initTemp[1073693](1073759 'cast' IllegalArgumentError[168246] cast_tmp[1073755]))
    (1073714 'setcid' initTemp[1073693])
    const-val call_tmp[2294721]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2294723]:string[26] "temp"
    (2294726 call +[38345] "illegal argument '" formal[1073700] ret_tmp[2294723])
    (2294730 'move' call_tmp[2294721] ret_tmp[2294723])
    const-val call_tmp[2294733]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2294735]:string[26] "temp"
    (2294738 call +[38345] call_tmp[2294721] "': " ret_tmp[2294735])
    (2294742 'move' call_tmp[2294733] ret_tmp[2294735])
    const-val call_tmp[2294745]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2294747]:string[26] "temp"
    (2294750 call +[38345] call_tmp[2294733] info[1073703] ret_tmp[2294747])
    (2294754 'move' call_tmp[2294745] ret_tmp[2294747])
    const-val msg[2294757]:string[26] "dead at end of block" "insert auto destroy"
    (2294759 'move' msg[2294757] call_tmp[2294745])
    val super_tmp[2294762]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2294764 'move' super_tmp[2294762](2294766 '.v' initTemp[1073693] super[355817]))
    ref i_msg[2294769]:string[26] "temp"
    (2294771 'move' i_msg[2294769](2294773 'set reference' msg[2294757]))
    val super_tmp[2294775]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2294777 'move' super_tmp[2294775](2294779 '.v' super_tmp[2294762] super[355807]))
    (2294782 'setcid' super_tmp[2294775])
    val call_tmp[2294784]:object[22] "dead at end of block" "maybe param" "temp"
    (2294786 'move' call_tmp[2294784](2294788 'cast' object[22] super_tmp[2294762]))
    (2294791 'setcid' call_tmp[2294784])
    val init_coerce_tmp[2294793]:Error[167984] "dead after last mention" "temp"
    (2294795 'move' init_coerce_tmp[2294793](2294797 'cast' Error[167984] nil[44]))
    (2294800 '.=' super_tmp[2294762] _next[167912] init_coerce_tmp[2294793])
    (2294804 '.=' super_tmp[2294762] thrownLine[167917] 0)
    (2294808 '.=' super_tmp[2294762] thrownFileId[167925] 0)
    val tmp[2294812]:string[26] "dead after last mention" "temp"
    (2294815 call init=[30774] tmp[2294812] i_msg[2294769])
    (2294818 '.=' super_tmp[2294762] _msg[167930] tmp[2294812])
    (2294822 '.=' super_tmp[2294762] _hasThrowInfo[167936] 0)
    (2294826 'setcid' super_tmp[2294762])
    val call_tmp[2294828]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2294830 'move' call_tmp[2294828](2294832 'cast' Error[167984] initTemp[1073693]))
    (2294835 'setcid' call_tmp[2294828])
    (2294837 'setcid' initTemp[1073693])
    ref i_x[2294839]:string[26] "temp"
    (2294841 'move' i_x[2294839](2294843 'set reference' msg[2294757]))
    (2294846 call deinit[30834] i_x[2294839])
    ref i_x[2294848]:string[26] "temp"
    (2294850 'move' i_x[2294848](2294852 'set reference' call_tmp[2294733]))
    (2294855 call deinit[30834] i_x[2294848])
    ref i_x[2294857]:string[26] "temp"
    (2294859 'move' i_x[2294857](2294861 'set reference' call_tmp[2294721]))
    (2294864 call deinit[30834] i_x[2294857])
    (1073733 return initTemp[1073693])
  }
  type IllegalArgumentError[168246] val super[355817]:Error[167984] "super class"
  function chpl_TaskErrors[168348].append[168282](ref arg this[168350]:chpl_TaskErrors[168348], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679609]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679612 'move' call_tmp[679609](168320 '_wide_get_locale' this[168350]))
    val isdirect[2198721]:bool[10] "temp"
    (2198726 'move' isdirect[2198721](2198723 call chpl_doDirectExecuteOn[187469] call_tmp[679609]))
    if isdirect[2198721]
    {
      (2198730 call on_fn[935527] this[168350] err[168279])
    }
    {
      val _args_foron_fn[2198748]:_class_localson_fn[2198738] "temp"
      (2198752 'move' _args_foron_fn[2198748](2198750 'stack allocate class' _class_localson_fn[2198738]))
      (2198754 '.=' _args_foron_fn[2198748] _0_tmp[2198741] call_tmp[679609])
      ref tmp[2198758]:chpl_TaskErrors[168348] "temp"
      (2198762 'move' tmp[2198758](2198760 'set reference' this[168350]))
      (2198764 '.=' _args_foron_fn[2198748] _1_this[2198743] tmp[2198758])
      (2198768 '.=' _args_foron_fn[2198748] _2_err[2198745] err[168279])
      val _args_vforon_fn[2198772]:c_void_ptr[149] "temp"
      (2198776 'move' _args_vforon_fn[2198772](2198774 'cast_to_void_star' _args_foron_fn[2198748]))
      val _args_sizeon_fn[2198778]:int(64)[13] "temp"
      (2198782 'move' _args_sizeon_fn[2198778](2198780 'sizeof_bundle' _class_localson_fn[2198738]))
      on(2198822 call wrapon_fn[2198784] call_tmp[679609] _args_vforon_fn[2198772] _args_sizeon_fn[2198778] _args_foron_fn[2198748])
    }
    (522265 return _void[55])
  }
  function chpl_TaskErrors[168348].empty[168336](const  ref arg this[168354]:chpl_TaskErrors[168348]) : bool[10] "method" "primary method" "resolved"
  {
    val coerce_tmp[1235747]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235751 'move' coerce_tmp[1235747](2564167 '.v' this[168354] _head[168266]))
    val coerce_tmp[1235753]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235758 'move' coerce_tmp[1235753](1235755 'cast' object[22] coerce_tmp[1235747]))
    const-val call_tmp[2226547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226549 'move' call_tmp[2226547](2226551 'ptr_eq' coerce_tmp[1235753] nil[44]))
    (522271 return call_tmp[2226547])
  }
  function chpl_TaskErrors[168348].init[812457](ref arg this[812460]:chpl_TaskErrors[168348], in arg _head[812463]:Error[167984], const  ref arg _errorsLock[812478]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945365]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945368 'move' _formal_tmp__errorsLock[945365] _errorsLock[812478])
    (812492 '.=' this[812460] _head[168266] _head[812463])
    (812495 '.=' this[812460] _errorsLock[168271] _formal_tmp__errorsLock[945365])
    (812499 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:Error[167984] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function TaskErrors[169702].deinit[168832](const in arg this[169716]:TaskErrors[169702]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    val coerce_tmp[1235887]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235891 'move' coerce_tmp[1235887](2564178 '.v' this[169716] errorsArray[168374]))
    const-val call_tmp[2410487]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2410489 'move' call_tmp[2410487](2410491 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2410494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2410496 'move' call_tmp[2410494](2410498 'ptr_neq' coerce_tmp[1235887] call_tmp[2410487]))
    if call_tmp[2410494]
    {
      const-val coerce_tmp[1235924]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1235928 'move' coerce_tmp[1235924](2564184 '.v' this[169716] nErrors[168363]))
      const-val call_tmp[2230848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230850 'move' call_tmp[2230848](2230852 '<' coerce_tmp[1235924] 0))
      if call_tmp[2230848]
      {
        (2059142 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2549799]:int(64)[13] "temp"
      val tmp_x1[2549801]:int(64)[13] "temp"
      const-val call_tmp[2235011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235013 'move' call_tmp[2235011](2235015 '==' coerce_tmp[1235924] 0))
      if call_tmp[2235011]
      {
        const-val call_tmp[2231788]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231790 'move' call_tmp[2231788](2231792 'cast' uint(64)[115] 0))
        const-val call_tmp[2302374]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302376 'move' call_tmp[2302374](2302378 '-' call_tmp[2231788] 1))
        const-val call_tmp[2302804]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302806 'move' call_tmp[2302804](2302808 'cast' int(64)[13] call_tmp[2302374]))
        (2549807 'move' tmp_x0[2549799] 0)
        (2549812 'move' tmp_x1[2549801] call_tmp[2302804])
      }
      {
        const-val call_tmp[2261794]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261796 'move' call_tmp[2261794](2261798 '-' coerce_tmp[1235924] 1))
        const-val call_tmp[2242526]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242528 'move' call_tmp[2242526](2242530 '+' 0 call_tmp[2261794]))
        (2549817 'move' tmp_x0[2549799] 0)
        (2549822 'move' tmp_x1[2549801] call_tmp[2242526])
      }
      (2059251 'noop')
      1
      (2059271 'noop')
      (2059290 'noop')
      const-val _ic__F1_high[2543468]:int(64)[13] "temp"
      (2308138 'move' _ic__F1_high[2543468] tmp_x1[2549801])
      val i[2059319]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2059323 'move' i[2059319] 0)
      (2059375 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2549799] tmp_x1[2549801] 1 tmp_x0[2549799] tmp_x1[2549801] 1)
      CForLoop[2059382] hazard
      {
        val coerce_tmp[2059490]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2059492 'move' coerce_tmp[2059490](2564192 '.v' this[169716] errorsArray[168374]))
        ref call_tmp[2310199]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310201 'move' call_tmp[2310199](2310203 'array_get' coerce_tmp[2059490] i[2059319]))
        (2059503 call clear[1236236] call_tmp[2310199])
        {
          (2059391 '=' i[2059319] tmp_x0[2549799])
        }
        {
          (2059402 '<=' i[2059319] _ic__F1_high[2543468])
        }
        {
          (2059408 '+=' i[2059319] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2059445]
      label _endchpl_direct_counted_range_iter_helper[2059453]
      label _endchpl_direct_counted_range_iter[1989018]
      val coerce_tmp[1237357]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237361 'move' coerce_tmp[1237357](2564198 '.v' this[169716] errorsArray[168374]))
      const-val coerce_tmp[1237363]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237369 'move' coerce_tmp[1237363](1237365 'cast' c_void_ptr[149] coerce_tmp[1237357]))
      (2325146 call chpl_here_free[188127] coerce_tmp[1237363])
    }
    label _enddeinit[1890179]
    val _parent_destructor_tmp_[1890174]:Error[167984] "temp"
    (1890181 'move' _parent_destructor_tmp_[1890174](1890175 'cast' Error[167984] this[169716]))
    ref _field_destructor_tmp_[2338199]:string[26] "temp"
    (2338201 'move' _field_destructor_tmp_[2338199](2338203 '.' _parent_destructor_tmp_[1890174] _msg[167930]))
    (2338207 call deinit[30834] _field_destructor_tmp_[2338199])
    (522282 return _void[55])
  }
  type _ic_these_TaskErrors[1238165] val super[1238166]:object[22] "super class" val more[1238168]:int(64)[13] const-val F0_this[2103300]:TaskErrors[169702] val F1__iterator[2103304]:_ic_chpl_direct_counted_range_iter[1103979] val F2__iterator[2103306]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F3_tmp[2103308]:2*int(64)[1040245] val F4__iterator[2103310]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2103312]:int(64)[13] ref value[2103314]:owned Error?[966602]
  type _ir_these_TaskErrors[1238171] const-val F0_this[2103302]:TaskErrors[169702]
  function TaskErrors[169702].message[169077](const in arg this[169728]:TaskErrors[169702], ref arg _retArg[1918970]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522310]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544746 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1841140 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1841145 call init[30763] maxMsg[169092])
    val first[169099]:Error[167984] "dead at end of block" "insert auto destroy"
    (1841153 'move' first[169099](1841151 'cast' Error[167984] nil[44]))
    val last[169106]:Error[167984] "dead at end of block" "insert auto destroy"
    (1841158 'move' last[169106](1841156 'cast' Error[167984] nil[44]))
    const-val _ic__F0_this[2535425]:TaskErrors[169702] "temp"
    (2296923 'move' _ic__F0_this[2535425] this[169728])
    const-val this[1989666]:TaskErrors[169702] "temp"
    (1989671 'move' this[1989666] this[169728])
    const-val coerce_tmp[1989258]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1989260 'move' coerce_tmp[1989258](2564228 '.v' this[1989666] nErrors[168363]))
    const-val call_tmp[2230858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230860 'move' call_tmp[2230858](2230862 '<' coerce_tmp[1989258] 0))
    if call_tmp[2230858]
    {
      (2060120 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2549907]:int(64)[13] "temp"
    val tmp_x1[2549909]:int(64)[13] "temp"
    const-val call_tmp[2235026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235028 'move' call_tmp[2235026](2235030 '==' coerce_tmp[1989258] 0))
    if call_tmp[2235026]
    {
      const-val call_tmp[2231798]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231800 'move' call_tmp[2231798](2231802 'cast' uint(64)[115] 0))
      const-val call_tmp[2302384]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302386 'move' call_tmp[2302384](2302388 '-' call_tmp[2231798] 1))
      const-val call_tmp[2302814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302816 'move' call_tmp[2302814](2302818 'cast' int(64)[13] call_tmp[2302384]))
      (2549915 'move' tmp_x0[2549907] 0)
      (2549920 'move' tmp_x1[2549909] call_tmp[2302814])
    }
    {
      const-val call_tmp[2261804]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261806 'move' call_tmp[2261804](2261808 '-' coerce_tmp[1989258] 1))
      const-val call_tmp[2242536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2242538 'move' call_tmp[2242536](2242540 '+' 0 call_tmp[2261804]))
      (2549925 'move' tmp_x0[2549907] 0)
      (2549930 'move' tmp_x1[2549909] call_tmp[2242536])
    }
    (2060229 'noop')
    1
    (2060249 'noop')
    (2060268 'noop')
    const-val _ic__F1_high[2543487]:int(64)[13] "temp"
    (2308201 'move' _ic__F1_high[2543487] tmp_x1[2549909])
    val i[2060297]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2060301 'move' i[2060297] 0)
    (2060353 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2549907] tmp_x1[2549909] 1 tmp_x0[2549907] tmp_x1[2549909] 1)
    CForLoop[2060360] hazard
    {
      const-val this[2060462]:TaskErrors[169702] "temp"
      (2060464 'move' this[2060462] _ic__F0_this[2535425])
      val coerce_tmp[2060474]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2060476 'move' coerce_tmp[2060474](2564236 '.v' this[2060462] errorsArray[168374]))
      ref call_tmp[2310209]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
      (2310211 'move' call_tmp[2310209](2310213 'array_get' coerce_tmp[2060474] i[2060297]))
      val coerce_tmp[2060488]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2060490 'move' coerce_tmp[2060488](2060493 call borrow[1236017] call_tmp[2310209]))
      val coerce_tmp[2060495]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2060497 'move' coerce_tmp[2060495](2060499 'cast' object[22] coerce_tmp[2060488]))
      const-val call_tmp[2228157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2228159 'move' call_tmp[2228157](2228161 'ptr_neq' coerce_tmp[2060495] nil[44]))
      if call_tmp[2228157]
      {
        const-val this[2060521]:TaskErrors[169702] "temp"
        (2060523 'move' this[2060521] _ic__F0_this[2535425])
        val coerce_tmp[2060533]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2060535 'move' coerce_tmp[2060533](2564242 '.v' this[2060521] errorsArray[168374]))
        ref call_tmp[2310219]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310221 'move' call_tmp[2310219](2310223 'array_get' coerce_tmp[2060533] i[2060297]))
        val coerce_tmp[2521186]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521188 'move' coerce_tmp[2521186](2521190 '.v' call_tmp[2310219] chpl_p[966597]))
        val coerce_tmp[2521193]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521195 'move' coerce_tmp[2521193](2521197 'cast' object[22] coerce_tmp[2521186]))
        const-val call_tmp[2521200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2521202 'move' call_tmp[2521200](2521204 'ptr_eq' coerce_tmp[2521193] nil[44]))
        if call_tmp[2521200]
        {
          (2521210 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2521213]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521215 'move' coerce_tmp[2521213](2521217 '.v' call_tmp[2310219] chpl_p[966597]))
        const-val tmp[2060571]:bool[10] "dead after last mention" "maybe param" "temp"
        (2060573 'move' tmp[2060571](2060576 call ==[38823] minMsg[169087] ""))
        val tmp[2060579]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2060571]
        {
          (2060593 'move' tmp[2060579] 1)
        }
        {
          const-val call_tmp[2060599]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060601]:int(32)[95] "temp"
          (2060603 'move' _virtual_method_tmp_[2060601](2060605 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060607]:string[26] "temp"
          (2060609 'virtual method call' message[167975] _virtual_method_tmp_[2060601] coerce_tmp[2521213] ret_tmp[2060607])
          (2060614 'move' call_tmp[2060599] ret_tmp[2060607])
          val coerce_tmp[2278151]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278153 'move' coerce_tmp[2278151](2278155 '.v' call_tmp[2060599] buff[30740]))
          const-val coerce_tmp[2278158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278160 'move' coerce_tmp[2278158](2278162 '.v' call_tmp[2060599] buffLen[30722]))
          const-val coerce_tmp[2278165]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278167 'move' coerce_tmp[2278165](2278169 '.v' call_tmp[2060599] locale_id[30757]))
          val coerce_tmp[2278172]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278174 'move' coerce_tmp[2278172](2278176 '.v' minMsg[169087] buff[30740]))
          const-val coerce_tmp[2278179]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278181 'move' coerce_tmp[2278179](2278183 '.v' minMsg[169087] buffLen[30722]))
          const-val coerce_tmp[2278186]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2278188 'move' coerce_tmp[2278186](2278190 '.v' minMsg[169087] locale_id[30757]))
          val ret[2278193]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2278195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2278197 'move' call_tmp[2278195](2278199 '==' coerce_tmp[2278165] chpl_nodeID[208207]))
          val tmp[2278202]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2278195]
          {
            const-val call_tmp[2278206]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278208 'move' call_tmp[2278206](2278210 '==' coerce_tmp[2278186] chpl_nodeID[208207]))
            (2278213 'move' tmp[2278202] call_tmp[2278206])
          }
          {
            (2278217 'move' tmp[2278202] 0)
          }
          if tmp[2278202]
          {
            val ret[2278223]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2278225]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2278227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278229 'move' call_tmp[2278227](2278231 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
            if call_tmp[2278227]
            {
              (2278236 'move' tmp[2278225] coerce_tmp[2278158])
            }
            {
              (2278240 'move' tmp[2278225] coerce_tmp[2278179])
            }
            const-val coerce_tmp[2278249]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2278251 'move' coerce_tmp[2278249](2278253 'cast' c_void_ptr[149] coerce_tmp[2278151]))
            const-val coerce_tmp[2278256]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2278258 'move' coerce_tmp[2278256](2278260 'cast' c_void_ptr[149] coerce_tmp[2278172]))
            const-val call_tmp[2278263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278265 'move' call_tmp[2278263](2278267 '<' tmp[2278225] 0))
            if call_tmp[2278263]
            {
              (2278273 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2278276]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278278 'move' call_tmp[2278276](2278280 'cast' uint(64)[115] tmp[2278225]))
            const-val call_tmp[2278283]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278285 'move' call_tmp[2278283](2278288 call memcmp[1206651] coerce_tmp[2278249] coerce_tmp[2278256] call_tmp[2278276]))
            const-val call_tmp[2278292]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278294 'move' call_tmp[2278292](2278296 'cast' int(64)[13] call_tmp[2278283]))
            const-val call_tmp[2278304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278306 'move' call_tmp[2278304](2278308 '==' call_tmp[2278292] 0))
            if call_tmp[2278304]
            {
              const-val call_tmp[2278313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278315 'move' call_tmp[2278313](2278317 '<' tmp[2278225] coerce_tmp[2278158]))
              if call_tmp[2278313]
              {
                (2278322 'move' ret[2278223] 1)
                gotoReturn _end__strcmp_local[2278347] _end__strcmp_local[2278347]
              }
              const-val call_tmp[2278328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278330 'move' call_tmp[2278328](2278332 '<' tmp[2278225] coerce_tmp[2278179]))
              if call_tmp[2278328]
              {
                (2278337 'move' ret[2278223] -1)
                gotoReturn _end__strcmp_local[2278347] _end__strcmp_local[2278347]
              }
            }
            (2278344 'move' ret[2278223] call_tmp[2278292])
            label _end__strcmp_local[2278347]
            (2278349 'move' ret[2278193] ret[2278223])
            gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
          }
          {
            const-val call_tmp[2278355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2278357 'move' call_tmp[2278355](2278359 '!=' coerce_tmp[2278165] chpl_nodeID[208207]))
            val tmp[2278362]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2278355]
            {
              const-val call_tmp[2278366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278368 'move' call_tmp[2278366](2278370 '==' coerce_tmp[2278186] chpl_nodeID[208207]))
              (2278373 'move' tmp[2278362] call_tmp[2278366])
            }
            {
              (2278377 'move' tmp[2278362] 0)
            }
            if tmp[2278362]
            {
              val call_tmp[2278383]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2278385]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278387 'move' coerce_tmp[2278385](2278389 'cast' int(64)[13] coerce_tmp[2278165]))
              (2278392 'move' call_tmp[2278383](2278395 call bufferCopyRemote[172830] coerce_tmp[2278385] coerce_tmp[2278151] coerce_tmp[2278158]))
              val ret[2278404]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2278406]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2278408]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278410 'move' call_tmp[2278408](2278412 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
              if call_tmp[2278408]
              {
                (2278417 'move' tmp[2278406] coerce_tmp[2278158])
              }
              {
                (2278421 'move' tmp[2278406] coerce_tmp[2278179])
              }
              const-val coerce_tmp[2278430]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278432 'move' coerce_tmp[2278430](2278434 'cast' c_void_ptr[149] call_tmp[2278383]))
              const-val coerce_tmp[2278437]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2278439 'move' coerce_tmp[2278437](2278441 'cast' c_void_ptr[149] coerce_tmp[2278172]))
              const-val call_tmp[2278444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278446 'move' call_tmp[2278444](2278448 '<' tmp[2278406] 0))
              if call_tmp[2278444]
              {
                (2278454 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2278457]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278459 'move' call_tmp[2278457](2278461 'cast' uint(64)[115] tmp[2278406]))
              const-val call_tmp[2278464]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278466 'move' call_tmp[2278464](2278469 call memcmp[1206651] coerce_tmp[2278430] coerce_tmp[2278437] call_tmp[2278457]))
              const-val call_tmp[2278473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278475 'move' call_tmp[2278473](2278477 'cast' int(64)[13] call_tmp[2278464]))
              const-val call_tmp[2278485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278487 'move' call_tmp[2278485](2278489 '==' call_tmp[2278473] 0))
              if call_tmp[2278485]
              {
                const-val call_tmp[2278494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278496 'move' call_tmp[2278494](2278498 '<' tmp[2278406] coerce_tmp[2278158]))
                if call_tmp[2278494]
                {
                  (2278503 'move' ret[2278404] 1)
                  gotoReturn _end__strcmp_local[2278528] _end__strcmp_local[2278528]
                }
                const-val call_tmp[2278509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278511 'move' call_tmp[2278509](2278513 '<' tmp[2278406] coerce_tmp[2278179]))
                if call_tmp[2278509]
                {
                  (2278518 'move' ret[2278404] -1)
                  gotoReturn _end__strcmp_local[2278528] _end__strcmp_local[2278528]
                }
              }
              (2278525 'move' ret[2278404] call_tmp[2278473])
              label _end__strcmp_local[2278528]
              const-val coerce_tmp[2278530]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2278532 'move' coerce_tmp[2278530](2278534 'cast' c_void_ptr[149] call_tmp[2278383]))
              (2278538 call chpl_here_free[188127] coerce_tmp[2278530])
              (2278540 'move' ret[2278193] ret[2278404])
              gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
            }
            {
              const-val call_tmp[2278546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2278548 'move' call_tmp[2278546](2278550 '==' coerce_tmp[2278165] chpl_nodeID[208207]))
              val tmp[2278553]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2278546]
              {
                const-val call_tmp[2278557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278559 'move' call_tmp[2278557](2278561 '!=' coerce_tmp[2278186] chpl_nodeID[208207]))
                (2278564 'move' tmp[2278553] call_tmp[2278557])
              }
              {
                (2278568 'move' tmp[2278553] 0)
              }
              if tmp[2278553]
              {
                val call_tmp[2278574]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278576]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278578 'move' coerce_tmp[2278576](2278580 'cast' int(64)[13] coerce_tmp[2278186]))
                (2278583 'move' call_tmp[2278574](2278586 call bufferCopyRemote[172830] coerce_tmp[2278576] coerce_tmp[2278172] coerce_tmp[2278179]))
                val ret[2278595]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2278597]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2278599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278601 'move' call_tmp[2278599](2278603 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
                if call_tmp[2278599]
                {
                  (2278608 'move' tmp[2278597] coerce_tmp[2278158])
                }
                {
                  (2278612 'move' tmp[2278597] coerce_tmp[2278179])
                }
                const-val coerce_tmp[2278621]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278623 'move' coerce_tmp[2278621](2278625 'cast' c_void_ptr[149] coerce_tmp[2278151]))
                const-val coerce_tmp[2278628]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278630 'move' coerce_tmp[2278628](2278632 'cast' c_void_ptr[149] call_tmp[2278574]))
                const-val call_tmp[2278635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278637 'move' call_tmp[2278635](2278639 '<' tmp[2278597] 0))
                if call_tmp[2278635]
                {
                  (2278645 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2278648]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278650 'move' call_tmp[2278648](2278652 'cast' uint(64)[115] tmp[2278597]))
                const-val call_tmp[2278655]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278657 'move' call_tmp[2278655](2278660 call memcmp[1206651] coerce_tmp[2278621] coerce_tmp[2278628] call_tmp[2278648]))
                const-val call_tmp[2278664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278666 'move' call_tmp[2278664](2278668 'cast' int(64)[13] call_tmp[2278655]))
                const-val call_tmp[2278676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278678 'move' call_tmp[2278676](2278680 '==' call_tmp[2278664] 0))
                if call_tmp[2278676]
                {
                  const-val call_tmp[2278685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278687 'move' call_tmp[2278685](2278689 '<' tmp[2278597] coerce_tmp[2278158]))
                  if call_tmp[2278685]
                  {
                    (2278694 'move' ret[2278595] 1)
                    gotoReturn _end__strcmp_local[2278719] _end__strcmp_local[2278719]
                  }
                  const-val call_tmp[2278700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278702 'move' call_tmp[2278700](2278704 '<' tmp[2278597] coerce_tmp[2278179]))
                  if call_tmp[2278700]
                  {
                    (2278709 'move' ret[2278595] -1)
                    gotoReturn _end__strcmp_local[2278719] _end__strcmp_local[2278719]
                  }
                }
                (2278716 'move' ret[2278595] call_tmp[2278664])
                label _end__strcmp_local[2278719]
                const-val coerce_tmp[2278721]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278723 'move' coerce_tmp[2278721](2278725 'cast' c_void_ptr[149] call_tmp[2278574]))
                (2278729 call chpl_here_free[188127] coerce_tmp[2278721])
                (2278731 'move' ret[2278193] ret[2278595])
                gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
              }
              {
                val call_tmp[2278737]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278739]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278741 'move' coerce_tmp[2278739](2278743 'cast' int(64)[13] coerce_tmp[2278165]))
                (2278746 'move' call_tmp[2278737](2278749 call bufferCopyRemote[172830] coerce_tmp[2278739] coerce_tmp[2278151] coerce_tmp[2278158]))
                val call_tmp[2278758]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2278760]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278762 'move' coerce_tmp[2278760](2278764 'cast' int(64)[13] coerce_tmp[2278186]))
                (2278767 'move' call_tmp[2278758](2278770 call bufferCopyRemote[172830] coerce_tmp[2278760] coerce_tmp[2278172] coerce_tmp[2278179]))
                val ret[2278779]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2278781]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2278783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278785 'move' call_tmp[2278783](2278787 '<' coerce_tmp[2278158] coerce_tmp[2278179]))
                if call_tmp[2278783]
                {
                  (2278792 'move' tmp[2278781] coerce_tmp[2278158])
                }
                {
                  (2278796 'move' tmp[2278781] coerce_tmp[2278179])
                }
                const-val coerce_tmp[2278805]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278807 'move' coerce_tmp[2278805](2278809 'cast' c_void_ptr[149] call_tmp[2278737]))
                const-val coerce_tmp[2278812]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2278814 'move' coerce_tmp[2278812](2278816 'cast' c_void_ptr[149] call_tmp[2278758]))
                const-val call_tmp[2278819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278821 'move' call_tmp[2278819](2278823 '<' tmp[2278781] 0))
                if call_tmp[2278819]
                {
                  (2278829 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2278832]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278834 'move' call_tmp[2278832](2278836 'cast' uint(64)[115] tmp[2278781]))
                const-val call_tmp[2278839]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278841 'move' call_tmp[2278839](2278844 call memcmp[1206651] coerce_tmp[2278805] coerce_tmp[2278812] call_tmp[2278832]))
                const-val call_tmp[2278848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278850 'move' call_tmp[2278848](2278852 'cast' int(64)[13] call_tmp[2278839]))
                const-val call_tmp[2278860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2278862 'move' call_tmp[2278860](2278864 '==' call_tmp[2278848] 0))
                if call_tmp[2278860]
                {
                  const-val call_tmp[2278869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278871 'move' call_tmp[2278869](2278873 '<' tmp[2278781] coerce_tmp[2278158]))
                  if call_tmp[2278869]
                  {
                    (2278878 'move' ret[2278779] 1)
                    gotoReturn _end__strcmp_local[2278903] _end__strcmp_local[2278903]
                  }
                  const-val call_tmp[2278884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2278886 'move' call_tmp[2278884](2278888 '<' tmp[2278781] coerce_tmp[2278179]))
                  if call_tmp[2278884]
                  {
                    (2278893 'move' ret[2278779] -1)
                    gotoReturn _end__strcmp_local[2278903] _end__strcmp_local[2278903]
                  }
                }
                (2278900 'move' ret[2278779] call_tmp[2278848])
                label _end__strcmp_local[2278903]
                const-val coerce_tmp[2278905]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278907 'move' coerce_tmp[2278905](2278909 'cast' c_void_ptr[149] call_tmp[2278737]))
                (2278913 call chpl_here_free[188127] coerce_tmp[2278905])
                const-val coerce_tmp[2278915]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2278917 'move' coerce_tmp[2278915](2278919 'cast' c_void_ptr[149] call_tmp[2278758]))
                (2278923 call chpl_here_free[188127] coerce_tmp[2278915])
                (2278925 'move' ret[2278193] ret[2278779])
                gotoReturn _end__strcmp[2278933] _end__strcmp[2278933]
              }
            }
          }
          label _end__strcmp[2278933]
          const-val call_tmp[2278935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2278937 'move' call_tmp[2278935](2278939 '<' ret[2278193] 0))
          (2060628 'move' tmp[2060579] call_tmp[2278935])
          ref i_x[2250677]:string[26] "temp"
          (2250681 'move' i_x[2250677](2250679 'set reference' call_tmp[2060599]))
          (2250685 call deinit[30834] i_x[2250677])
        }
        if tmp[2060579]
        {
          const-val call_tmp[2060642]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060644]:int(32)[95] "temp"
          (2060646 'move' _virtual_method_tmp_[2060644](2060648 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060650]:string[26] "temp"
          (2060652 'virtual method call' message[167975] _virtual_method_tmp_[2060644] coerce_tmp[2521213] ret_tmp[2060650])
          (2060657 'move' call_tmp[2060642] ret_tmp[2060650])
          (2060661 call =[38272] minMsg[169087] call_tmp[2060642])
          ref i_x[2250689]:string[26] "temp"
          (2250693 'move' i_x[2250689](2250691 'set reference' call_tmp[2060642]))
          (2250697 call deinit[30834] i_x[2250689])
        }
        const-val tmp[2060668]:bool[10] "dead after last mention" "maybe param" "temp"
        (2060670 'move' tmp[2060668](2060673 call ==[38823] maxMsg[169092] ""))
        val tmp[2060676]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2060668]
        {
          (2060690 'move' tmp[2060676] 1)
        }
        {
          const-val call_tmp[2060696]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060698]:int(32)[95] "temp"
          (2060700 'move' _virtual_method_tmp_[2060698](2060702 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060704]:string[26] "temp"
          (2060706 'virtual method call' message[167975] _virtual_method_tmp_[2060698] coerce_tmp[2521213] ret_tmp[2060704])
          (2060711 'move' call_tmp[2060696] ret_tmp[2060704])
          val coerce_tmp[2279793]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279795 'move' coerce_tmp[2279793](2279797 '.v' call_tmp[2060696] buff[30740]))
          const-val coerce_tmp[2279800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279802 'move' coerce_tmp[2279800](2279804 '.v' call_tmp[2060696] buffLen[30722]))
          const-val coerce_tmp[2279807]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279809 'move' coerce_tmp[2279807](2279811 '.v' call_tmp[2060696] locale_id[30757]))
          val coerce_tmp[2279814]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279816 'move' coerce_tmp[2279814](2279818 '.v' maxMsg[169092] buff[30740]))
          const-val coerce_tmp[2279821]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279823 'move' coerce_tmp[2279821](2279825 '.v' maxMsg[169092] buffLen[30722]))
          const-val coerce_tmp[2279828]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279830 'move' coerce_tmp[2279828](2279832 '.v' maxMsg[169092] locale_id[30757]))
          val ret[2279835]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2279837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2279839 'move' call_tmp[2279837](2279841 '==' coerce_tmp[2279807] chpl_nodeID[208207]))
          val tmp[2279844]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2279837]
          {
            const-val call_tmp[2279848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279850 'move' call_tmp[2279848](2279852 '==' coerce_tmp[2279828] chpl_nodeID[208207]))
            (2279855 'move' tmp[2279844] call_tmp[2279848])
          }
          {
            (2279859 'move' tmp[2279844] 0)
          }
          if tmp[2279844]
          {
            val ret[2279865]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2279867]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2279869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279871 'move' call_tmp[2279869](2279873 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
            if call_tmp[2279869]
            {
              (2279878 'move' tmp[2279867] coerce_tmp[2279800])
            }
            {
              (2279882 'move' tmp[2279867] coerce_tmp[2279821])
            }
            const-val coerce_tmp[2279891]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2279893 'move' coerce_tmp[2279891](2279895 'cast' c_void_ptr[149] coerce_tmp[2279793]))
            const-val coerce_tmp[2279898]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2279900 'move' coerce_tmp[2279898](2279902 'cast' c_void_ptr[149] coerce_tmp[2279814]))
            const-val call_tmp[2279905]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279907 'move' call_tmp[2279905](2279909 '<' tmp[2279867] 0))
            if call_tmp[2279905]
            {
              (2279915 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2279918]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279920 'move' call_tmp[2279918](2279922 'cast' uint(64)[115] tmp[2279867]))
            const-val call_tmp[2279925]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279927 'move' call_tmp[2279925](2279930 call memcmp[1206651] coerce_tmp[2279891] coerce_tmp[2279898] call_tmp[2279918]))
            const-val call_tmp[2279934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279936 'move' call_tmp[2279934](2279938 'cast' int(64)[13] call_tmp[2279925]))
            const-val call_tmp[2279946]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279948 'move' call_tmp[2279946](2279950 '==' call_tmp[2279934] 0))
            if call_tmp[2279946]
            {
              const-val call_tmp[2279955]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2279957 'move' call_tmp[2279955](2279959 '<' tmp[2279867] coerce_tmp[2279800]))
              if call_tmp[2279955]
              {
                (2279964 'move' ret[2279865] 1)
                gotoReturn _end__strcmp_local[2279989] _end__strcmp_local[2279989]
              }
              const-val call_tmp[2279970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2279972 'move' call_tmp[2279970](2279974 '<' tmp[2279867] coerce_tmp[2279821]))
              if call_tmp[2279970]
              {
                (2279979 'move' ret[2279865] -1)
                gotoReturn _end__strcmp_local[2279989] _end__strcmp_local[2279989]
              }
            }
            (2279986 'move' ret[2279865] call_tmp[2279934])
            label _end__strcmp_local[2279989]
            (2279991 'move' ret[2279835] ret[2279865])
            gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
          }
          {
            const-val call_tmp[2279997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2279999 'move' call_tmp[2279997](2280001 '!=' coerce_tmp[2279807] chpl_nodeID[208207]))
            val tmp[2280004]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2279997]
            {
              const-val call_tmp[2280008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280010 'move' call_tmp[2280008](2280012 '==' coerce_tmp[2279828] chpl_nodeID[208207]))
              (2280015 'move' tmp[2280004] call_tmp[2280008])
            }
            {
              (2280019 'move' tmp[2280004] 0)
            }
            if tmp[2280004]
            {
              val call_tmp[2280025]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2280027]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280029 'move' coerce_tmp[2280027](2280031 'cast' int(64)[13] coerce_tmp[2279807]))
              (2280034 'move' call_tmp[2280025](2280037 call bufferCopyRemote[172830] coerce_tmp[2280027] coerce_tmp[2279793] coerce_tmp[2279800]))
              val ret[2280046]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2280048]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2280050]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280052 'move' call_tmp[2280050](2280054 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
              if call_tmp[2280050]
              {
                (2280059 'move' tmp[2280048] coerce_tmp[2279800])
              }
              {
                (2280063 'move' tmp[2280048] coerce_tmp[2279821])
              }
              const-val coerce_tmp[2280072]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280074 'move' coerce_tmp[2280072](2280076 'cast' c_void_ptr[149] call_tmp[2280025]))
              const-val coerce_tmp[2280079]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2280081 'move' coerce_tmp[2280079](2280083 'cast' c_void_ptr[149] coerce_tmp[2279814]))
              const-val call_tmp[2280086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280088 'move' call_tmp[2280086](2280090 '<' tmp[2280048] 0))
              if call_tmp[2280086]
              {
                (2280096 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2280099]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280101 'move' call_tmp[2280099](2280103 'cast' uint(64)[115] tmp[2280048]))
              const-val call_tmp[2280106]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280108 'move' call_tmp[2280106](2280111 call memcmp[1206651] coerce_tmp[2280072] coerce_tmp[2280079] call_tmp[2280099]))
              const-val call_tmp[2280115]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280117 'move' call_tmp[2280115](2280119 'cast' int(64)[13] call_tmp[2280106]))
              const-val call_tmp[2280127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280129 'move' call_tmp[2280127](2280131 '==' call_tmp[2280115] 0))
              if call_tmp[2280127]
              {
                const-val call_tmp[2280136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280138 'move' call_tmp[2280136](2280140 '<' tmp[2280048] coerce_tmp[2279800]))
                if call_tmp[2280136]
                {
                  (2280145 'move' ret[2280046] 1)
                  gotoReturn _end__strcmp_local[2280170] _end__strcmp_local[2280170]
                }
                const-val call_tmp[2280151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280153 'move' call_tmp[2280151](2280155 '<' tmp[2280048] coerce_tmp[2279821]))
                if call_tmp[2280151]
                {
                  (2280160 'move' ret[2280046] -1)
                  gotoReturn _end__strcmp_local[2280170] _end__strcmp_local[2280170]
                }
              }
              (2280167 'move' ret[2280046] call_tmp[2280115])
              label _end__strcmp_local[2280170]
              const-val coerce_tmp[2280172]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2280174 'move' coerce_tmp[2280172](2280176 'cast' c_void_ptr[149] call_tmp[2280025]))
              (2280180 call chpl_here_free[188127] coerce_tmp[2280172])
              (2280182 'move' ret[2279835] ret[2280046])
              gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
            }
            {
              const-val call_tmp[2280188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2280190 'move' call_tmp[2280188](2280192 '==' coerce_tmp[2279807] chpl_nodeID[208207]))
              val tmp[2280195]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2280188]
              {
                const-val call_tmp[2280199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280201 'move' call_tmp[2280199](2280203 '!=' coerce_tmp[2279828] chpl_nodeID[208207]))
                (2280206 'move' tmp[2280195] call_tmp[2280199])
              }
              {
                (2280210 'move' tmp[2280195] 0)
              }
              if tmp[2280195]
              {
                val call_tmp[2280216]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280218]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280220 'move' coerce_tmp[2280218](2280222 'cast' int(64)[13] coerce_tmp[2279828]))
                (2280225 'move' call_tmp[2280216](2280228 call bufferCopyRemote[172830] coerce_tmp[2280218] coerce_tmp[2279814] coerce_tmp[2279821]))
                val ret[2280237]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2280239]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2280241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280243 'move' call_tmp[2280241](2280245 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
                if call_tmp[2280241]
                {
                  (2280250 'move' tmp[2280239] coerce_tmp[2279800])
                }
                {
                  (2280254 'move' tmp[2280239] coerce_tmp[2279821])
                }
                const-val coerce_tmp[2280263]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280265 'move' coerce_tmp[2280263](2280267 'cast' c_void_ptr[149] coerce_tmp[2279793]))
                const-val coerce_tmp[2280270]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280272 'move' coerce_tmp[2280270](2280274 'cast' c_void_ptr[149] call_tmp[2280216]))
                const-val call_tmp[2280277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280279 'move' call_tmp[2280277](2280281 '<' tmp[2280239] 0))
                if call_tmp[2280277]
                {
                  (2280287 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2280290]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280292 'move' call_tmp[2280290](2280294 'cast' uint(64)[115] tmp[2280239]))
                const-val call_tmp[2280297]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280299 'move' call_tmp[2280297](2280302 call memcmp[1206651] coerce_tmp[2280263] coerce_tmp[2280270] call_tmp[2280290]))
                const-val call_tmp[2280306]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280308 'move' call_tmp[2280306](2280310 'cast' int(64)[13] call_tmp[2280297]))
                const-val call_tmp[2280318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280320 'move' call_tmp[2280318](2280322 '==' call_tmp[2280306] 0))
                if call_tmp[2280318]
                {
                  const-val call_tmp[2280327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280329 'move' call_tmp[2280327](2280331 '<' tmp[2280239] coerce_tmp[2279800]))
                  if call_tmp[2280327]
                  {
                    (2280336 'move' ret[2280237] 1)
                    gotoReturn _end__strcmp_local[2280361] _end__strcmp_local[2280361]
                  }
                  const-val call_tmp[2280342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280344 'move' call_tmp[2280342](2280346 '<' tmp[2280239] coerce_tmp[2279821]))
                  if call_tmp[2280342]
                  {
                    (2280351 'move' ret[2280237] -1)
                    gotoReturn _end__strcmp_local[2280361] _end__strcmp_local[2280361]
                  }
                }
                (2280358 'move' ret[2280237] call_tmp[2280306])
                label _end__strcmp_local[2280361]
                const-val coerce_tmp[2280363]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280365 'move' coerce_tmp[2280363](2280367 'cast' c_void_ptr[149] call_tmp[2280216]))
                (2280371 call chpl_here_free[188127] coerce_tmp[2280363])
                (2280373 'move' ret[2279835] ret[2280237])
                gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
              }
              {
                val call_tmp[2280379]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280381]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280383 'move' coerce_tmp[2280381](2280385 'cast' int(64)[13] coerce_tmp[2279807]))
                (2280388 'move' call_tmp[2280379](2280391 call bufferCopyRemote[172830] coerce_tmp[2280381] coerce_tmp[2279793] coerce_tmp[2279800]))
                val call_tmp[2280400]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2280402]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280404 'move' coerce_tmp[2280402](2280406 'cast' int(64)[13] coerce_tmp[2279828]))
                (2280409 'move' call_tmp[2280400](2280412 call bufferCopyRemote[172830] coerce_tmp[2280402] coerce_tmp[2279814] coerce_tmp[2279821]))
                val ret[2280421]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2280423]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2280425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280427 'move' call_tmp[2280425](2280429 '<' coerce_tmp[2279800] coerce_tmp[2279821]))
                if call_tmp[2280425]
                {
                  (2280434 'move' tmp[2280423] coerce_tmp[2279800])
                }
                {
                  (2280438 'move' tmp[2280423] coerce_tmp[2279821])
                }
                const-val coerce_tmp[2280447]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280449 'move' coerce_tmp[2280447](2280451 'cast' c_void_ptr[149] call_tmp[2280379]))
                const-val coerce_tmp[2280454]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2280456 'move' coerce_tmp[2280454](2280458 'cast' c_void_ptr[149] call_tmp[2280400]))
                const-val call_tmp[2280461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280463 'move' call_tmp[2280461](2280465 '<' tmp[2280423] 0))
                if call_tmp[2280461]
                {
                  (2280471 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2280474]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280476 'move' call_tmp[2280474](2280478 'cast' uint(64)[115] tmp[2280423]))
                const-val call_tmp[2280481]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280483 'move' call_tmp[2280481](2280486 call memcmp[1206651] coerce_tmp[2280447] coerce_tmp[2280454] call_tmp[2280474]))
                const-val call_tmp[2280490]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280492 'move' call_tmp[2280490](2280494 'cast' int(64)[13] call_tmp[2280481]))
                const-val call_tmp[2280502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2280504 'move' call_tmp[2280502](2280506 '==' call_tmp[2280490] 0))
                if call_tmp[2280502]
                {
                  const-val call_tmp[2280511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280513 'move' call_tmp[2280511](2280515 '<' tmp[2280423] coerce_tmp[2279800]))
                  if call_tmp[2280511]
                  {
                    (2280520 'move' ret[2280421] 1)
                    gotoReturn _end__strcmp_local[2280545] _end__strcmp_local[2280545]
                  }
                  const-val call_tmp[2280526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2280528 'move' call_tmp[2280526](2280530 '<' tmp[2280423] coerce_tmp[2279821]))
                  if call_tmp[2280526]
                  {
                    (2280535 'move' ret[2280421] -1)
                    gotoReturn _end__strcmp_local[2280545] _end__strcmp_local[2280545]
                  }
                }
                (2280542 'move' ret[2280421] call_tmp[2280490])
                label _end__strcmp_local[2280545]
                const-val coerce_tmp[2280547]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280549 'move' coerce_tmp[2280547](2280551 'cast' c_void_ptr[149] call_tmp[2280379]))
                (2280555 call chpl_here_free[188127] coerce_tmp[2280547])
                const-val coerce_tmp[2280557]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2280559 'move' coerce_tmp[2280557](2280561 'cast' c_void_ptr[149] call_tmp[2280400]))
                (2280565 call chpl_here_free[188127] coerce_tmp[2280557])
                (2280567 'move' ret[2279835] ret[2280421])
                gotoReturn _end__strcmp[2280575] _end__strcmp[2280575]
              }
            }
          }
          label _end__strcmp[2280575]
          const-val call_tmp[2280577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2280579 'move' call_tmp[2280577](2280581 '>' ret[2279835] 0))
          (2060725 'move' tmp[2060676] call_tmp[2280577])
          ref i_x[2250701]:string[26] "temp"
          (2250705 'move' i_x[2250701](2250703 'set reference' call_tmp[2060696]))
          (2250709 call deinit[30834] i_x[2250701])
        }
        if tmp[2060676]
        {
          const-val call_tmp[2060739]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2060741]:int(32)[95] "temp"
          (2060743 'move' _virtual_method_tmp_[2060741](2060745 'getcid' coerce_tmp[2521213]))
          val ret_tmp[2060747]:string[26] "temp"
          (2060749 'virtual method call' message[167975] _virtual_method_tmp_[2060741] coerce_tmp[2521213] ret_tmp[2060747])
          (2060754 'move' call_tmp[2060739] ret_tmp[2060747])
          (2060758 call =[38272] maxMsg[169092] call_tmp[2060739])
          ref i_x[2250713]:string[26] "temp"
          (2250717 'move' i_x[2250713](2250715 'set reference' call_tmp[2060739]))
          (2250721 call deinit[30834] i_x[2250713])
        }
        ref i_lhs[2296496]:int(64)[13] "temp"
        (2296500 'move' i_lhs[2296496](2296498 'set reference' n[169081]))
        (2296508 '+=' i_lhs[2296496] 1)
      }
      {
        (2060369 '=' i[2060297] tmp_x0[2549907])
      }
      {
        (2060380 '<=' i[2060297] _ic__F1_high[2543487])
      }
      {
        (2060386 '+=' i[2060297] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2060423]
    label _endchpl_direct_counted_range_iter_helper[2060431]
    label _endchpl_direct_counted_range_iter[1989434]
    label _endthese[1989439]
    const-val _ic__F0_this[2535448]:TaskErrors[169702] "temp"
    (2296975 'move' _ic__F0_this[2535448] this[169728])
    const-val this[1989991]:TaskErrors[169702] "temp"
    (1989996 'move' this[1989991] this[169728])
    const-val coerce_tmp[1989703]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1989705 'move' coerce_tmp[1989703](2564260 '.v' this[1989991] nErrors[168363]))
    const-val call_tmp[2230868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230870 'move' call_tmp[2230868](2230872 '<' coerce_tmp[1989703] 0))
    if call_tmp[2230868]
    {
      (2060861 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2550015]:int(64)[13] "temp"
    val tmp_x1[2550017]:int(64)[13] "temp"
    const-val call_tmp[2235041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235043 'move' call_tmp[2235041](2235045 '==' coerce_tmp[1989703] 0))
    if call_tmp[2235041]
    {
      const-val call_tmp[2231808]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231810 'move' call_tmp[2231808](2231812 'cast' uint(64)[115] 0))
      const-val call_tmp[2302394]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302396 'move' call_tmp[2302394](2302398 '-' call_tmp[2231808] 1))
      const-val call_tmp[2302824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302826 'move' call_tmp[2302824](2302828 'cast' int(64)[13] call_tmp[2302394]))
      (2550023 'move' tmp_x0[2550015] 0)
      (2550028 'move' tmp_x1[2550017] call_tmp[2302824])
    }
    {
      const-val call_tmp[2261814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2261816 'move' call_tmp[2261814](2261818 '-' coerce_tmp[1989703] 1))
      const-val call_tmp[2242546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2242548 'move' call_tmp[2242546](2242550 '+' 0 call_tmp[2261814]))
      (2550033 'move' tmp_x0[2550015] 0)
      (2550038 'move' tmp_x1[2550017] call_tmp[2242546])
    }
    (2060970 'noop')
    1
    (2060990 'noop')
    (2061009 'noop')
    const-val _ic__F1_high[2543506]:int(64)[13] "temp"
    (2308264 'move' _ic__F1_high[2543506] tmp_x1[2550017])
    val i[2061038]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2061042 'move' i[2061038] 0)
    (2061094 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2550015] tmp_x1[2550017] 1 tmp_x0[2550015] tmp_x1[2550017] 1)
    CForLoop[2061101] hazard
    {
      const-val this[2061203]:TaskErrors[169702] "temp"
      (2061205 'move' this[2061203] _ic__F0_this[2535448])
      val coerce_tmp[2061215]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2061217 'move' coerce_tmp[2061215](2564268 '.v' this[2061203] errorsArray[168374]))
      ref call_tmp[2310229]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
      (2310231 'move' call_tmp[2310229](2310233 'array_get' coerce_tmp[2061215] i[2061038]))
      val coerce_tmp[2061229]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2061231 'move' coerce_tmp[2061229](2061234 call borrow[1236017] call_tmp[2310229]))
      val coerce_tmp[2061236]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2061238 'move' coerce_tmp[2061236](2061240 'cast' object[22] coerce_tmp[2061229]))
      const-val call_tmp[2228167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2228169 'move' call_tmp[2228167](2228171 'ptr_neq' coerce_tmp[2061236] nil[44]))
      if call_tmp[2228167]
      {
        const-val this[2061262]:TaskErrors[169702] "temp"
        (2061264 'move' this[2061262] _ic__F0_this[2535448])
        val coerce_tmp[2061274]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061276 'move' coerce_tmp[2061274](2564274 '.v' this[2061262] errorsArray[168374]))
        ref call_tmp[2310239]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310241 'move' call_tmp[2310239](2310243 'array_get' coerce_tmp[2061274] i[2061038]))
        val coerce_tmp[2521223]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521225 'move' coerce_tmp[2521223](2521227 '.v' call_tmp[2310239] chpl_p[966597]))
        val coerce_tmp[2521230]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521232 'move' coerce_tmp[2521230](2521234 'cast' object[22] coerce_tmp[2521223]))
        const-val call_tmp[2521237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2521239 'move' call_tmp[2521237](2521241 'ptr_eq' coerce_tmp[2521230] nil[44]))
        if call_tmp[2521237]
        {
          (2521247 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2521250]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2521252 'move' coerce_tmp[2521250](2521254 '.v' call_tmp[2310239] chpl_p[966597]))
        const-val call_tmp[2061312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[2061314]:int(32)[95] "temp"
        (2061316 'move' _virtual_method_tmp_[2061314](2061318 'getcid' coerce_tmp[2521250]))
        val ret_tmp[2061320]:string[26] "temp"
        (2061322 'virtual method call' message[167975] _virtual_method_tmp_[2061314] coerce_tmp[2521250] ret_tmp[2061320])
        (2061327 'move' call_tmp[2061312] ret_tmp[2061320])
        const-val call_tmp[2061330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2061332 'move' call_tmp[2061330](2061335 call ==[38823] call_tmp[2061312] minMsg[169087]))
        if call_tmp[2061330]
        {
          val coerce_tmp[2061347]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2061349 'move' coerce_tmp[2061347](2061351 'cast' object[22] first[169099]))
          const-val call_tmp[2226807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2226809 'move' call_tmp[2226807](2226811 'ptr_eq' coerce_tmp[2061347] nil[44]))
          if call_tmp[2226807]
          {
            (2406751 '=' first[169099] coerce_tmp[2521250])
          }
          (2406763 '=' last[169106] coerce_tmp[2521250])
        }
        ref i_x[2250725]:string[26] "temp"
        (2250729 'move' i_x[2250725](2250727 'set reference' call_tmp[2061312]))
        (2250733 call deinit[30834] i_x[2250725])
      }
      {
        (2061110 '=' i[2061038] tmp_x0[2550015])
      }
      {
        (2061121 '<=' i[2061038] _ic__F1_high[2543506])
      }
      {
        (2061127 '+=' i[2061038] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2061164]
    label _endchpl_direct_counted_range_iter_helper[2061172]
    label _endchpl_direct_counted_range_iter[1989879]
    label _endthese[1989884]
    val coerce_tmp[2276503]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276505 'move' coerce_tmp[2276503](2276507 '.v' minMsg[169087] buff[30740]))
    const-val coerce_tmp[2276510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276512 'move' coerce_tmp[2276510](2276514 '.v' minMsg[169087] buffLen[30722]))
    const-val coerce_tmp[2276517]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276519 'move' coerce_tmp[2276517](2276521 '.v' minMsg[169087] locale_id[30757]))
    val coerce_tmp[2276524]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276526 'move' coerce_tmp[2276524](2276528 '.v' maxMsg[169092] buff[30740]))
    const-val coerce_tmp[2276531]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276533 'move' coerce_tmp[2276531](2276535 '.v' maxMsg[169092] buffLen[30722]))
    const-val coerce_tmp[2276538]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276540 'move' coerce_tmp[2276538](2276542 '.v' maxMsg[169092] locale_id[30757]))
    val ret[2276545]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2276547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276549 'move' call_tmp[2276547](2276551 '==' coerce_tmp[2276517] chpl_nodeID[208207]))
    val tmp[2276554]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2276547]
    {
      const-val call_tmp[2276558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276560 'move' call_tmp[2276558](2276562 '==' coerce_tmp[2276538] chpl_nodeID[208207]))
      (2276565 'move' tmp[2276554] call_tmp[2276558])
    }
    {
      (2276569 'move' tmp[2276554] 0)
    }
    if tmp[2276554]
    {
      val ret[2276575]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2276577]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2276579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276581 'move' call_tmp[2276579](2276583 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
      if call_tmp[2276579]
      {
        (2276588 'move' tmp[2276577] coerce_tmp[2276510])
      }
      {
        (2276592 'move' tmp[2276577] coerce_tmp[2276531])
      }
      const-val coerce_tmp[2276601]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2276603 'move' coerce_tmp[2276601](2276605 'cast' c_void_ptr[149] coerce_tmp[2276503]))
      const-val coerce_tmp[2276608]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2276610 'move' coerce_tmp[2276608](2276612 'cast' c_void_ptr[149] coerce_tmp[2276524]))
      const-val call_tmp[2276615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276617 'move' call_tmp[2276615](2276619 '<' tmp[2276577] 0))
      if call_tmp[2276615]
      {
        (2276625 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
      }
      const-val call_tmp[2276628]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276630 'move' call_tmp[2276628](2276632 'cast' uint(64)[115] tmp[2276577]))
      const-val call_tmp[2276635]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276637 'move' call_tmp[2276635](2276640 call memcmp[1206651] coerce_tmp[2276601] coerce_tmp[2276608] call_tmp[2276628]))
      const-val call_tmp[2276644]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276646 'move' call_tmp[2276644](2276648 'cast' int(64)[13] call_tmp[2276635]))
      const-val call_tmp[2276656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276658 'move' call_tmp[2276656](2276660 '==' call_tmp[2276644] 0))
      if call_tmp[2276656]
      {
        const-val call_tmp[2276665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276667 'move' call_tmp[2276665](2276669 '<' tmp[2276577] coerce_tmp[2276510]))
        if call_tmp[2276665]
        {
          (2276674 'move' ret[2276575] 1)
          gotoReturn _end__strcmp_local[2276699] _end__strcmp_local[2276699]
        }
        const-val call_tmp[2276680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276682 'move' call_tmp[2276680](2276684 '<' tmp[2276577] coerce_tmp[2276531]))
        if call_tmp[2276680]
        {
          (2276689 'move' ret[2276575] -1)
          gotoReturn _end__strcmp_local[2276699] _end__strcmp_local[2276699]
        }
      }
      (2276696 'move' ret[2276575] call_tmp[2276644])
      label _end__strcmp_local[2276699]
      (2276701 'move' ret[2276545] ret[2276575])
      gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
    }
    {
      const-val call_tmp[2276707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276709 'move' call_tmp[2276707](2276711 '!=' coerce_tmp[2276517] chpl_nodeID[208207]))
      val tmp[2276714]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2276707]
      {
        const-val call_tmp[2276718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276720 'move' call_tmp[2276718](2276722 '==' coerce_tmp[2276538] chpl_nodeID[208207]))
        (2276725 'move' tmp[2276714] call_tmp[2276718])
      }
      {
        (2276729 'move' tmp[2276714] 0)
      }
      if tmp[2276714]
      {
        val call_tmp[2276735]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[2276737]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276739 'move' coerce_tmp[2276737](2276741 'cast' int(64)[13] coerce_tmp[2276517]))
        (2276744 'move' call_tmp[2276735](2276747 call bufferCopyRemote[172830] coerce_tmp[2276737] coerce_tmp[2276503] coerce_tmp[2276510]))
        val ret[2276756]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2276758]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[2276760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276762 'move' call_tmp[2276760](2276764 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
        if call_tmp[2276760]
        {
          (2276769 'move' tmp[2276758] coerce_tmp[2276510])
        }
        {
          (2276773 'move' tmp[2276758] coerce_tmp[2276531])
        }
        const-val coerce_tmp[2276782]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276784 'move' coerce_tmp[2276782](2276786 'cast' c_void_ptr[149] call_tmp[2276735]))
        const-val coerce_tmp[2276789]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2276791 'move' coerce_tmp[2276789](2276793 'cast' c_void_ptr[149] coerce_tmp[2276524]))
        const-val call_tmp[2276796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276798 'move' call_tmp[2276796](2276800 '<' tmp[2276758] 0))
        if call_tmp[2276796]
        {
          (2276806 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
        }
        const-val call_tmp[2276809]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276811 'move' call_tmp[2276809](2276813 'cast' uint(64)[115] tmp[2276758]))
        const-val call_tmp[2276816]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276818 'move' call_tmp[2276816](2276821 call memcmp[1206651] coerce_tmp[2276782] coerce_tmp[2276789] call_tmp[2276809]))
        const-val call_tmp[2276825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276827 'move' call_tmp[2276825](2276829 'cast' int(64)[13] call_tmp[2276816]))
        const-val call_tmp[2276837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276839 'move' call_tmp[2276837](2276841 '==' call_tmp[2276825] 0))
        if call_tmp[2276837]
        {
          const-val call_tmp[2276846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276848 'move' call_tmp[2276846](2276850 '<' tmp[2276758] coerce_tmp[2276510]))
          if call_tmp[2276846]
          {
            (2276855 'move' ret[2276756] 1)
            gotoReturn _end__strcmp_local[2276880] _end__strcmp_local[2276880]
          }
          const-val call_tmp[2276861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276863 'move' call_tmp[2276861](2276865 '<' tmp[2276758] coerce_tmp[2276531]))
          if call_tmp[2276861]
          {
            (2276870 'move' ret[2276756] -1)
            gotoReturn _end__strcmp_local[2276880] _end__strcmp_local[2276880]
          }
        }
        (2276877 'move' ret[2276756] call_tmp[2276825])
        label _end__strcmp_local[2276880]
        const-val coerce_tmp[2276882]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2276884 'move' coerce_tmp[2276882](2276886 'cast' c_void_ptr[149] call_tmp[2276735]))
        (2276890 call chpl_here_free[188127] coerce_tmp[2276882])
        (2276892 'move' ret[2276545] ret[2276756])
        gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
      }
      {
        const-val call_tmp[2276898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2276900 'move' call_tmp[2276898](2276902 '==' coerce_tmp[2276517] chpl_nodeID[208207]))
        val tmp[2276905]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2276898]
        {
          const-val call_tmp[2276909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276911 'move' call_tmp[2276909](2276913 '!=' coerce_tmp[2276538] chpl_nodeID[208207]))
          (2276916 'move' tmp[2276905] call_tmp[2276909])
        }
        {
          (2276920 'move' tmp[2276905] 0)
        }
        if tmp[2276905]
        {
          val call_tmp[2276926]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2276928]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276930 'move' coerce_tmp[2276928](2276932 'cast' int(64)[13] coerce_tmp[2276538]))
          (2276935 'move' call_tmp[2276926](2276938 call bufferCopyRemote[172830] coerce_tmp[2276928] coerce_tmp[2276524] coerce_tmp[2276531]))
          val ret[2276947]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2276949]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2276951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276953 'move' call_tmp[2276951](2276955 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
          if call_tmp[2276951]
          {
            (2276960 'move' tmp[2276949] coerce_tmp[2276510])
          }
          {
            (2276964 'move' tmp[2276949] coerce_tmp[2276531])
          }
          const-val coerce_tmp[2276973]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276975 'move' coerce_tmp[2276973](2276977 'cast' c_void_ptr[149] coerce_tmp[2276503]))
          const-val coerce_tmp[2276980]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2276982 'move' coerce_tmp[2276980](2276984 'cast' c_void_ptr[149] call_tmp[2276926]))
          const-val call_tmp[2276987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2276989 'move' call_tmp[2276987](2276991 '<' tmp[2276949] 0))
          if call_tmp[2276987]
          {
            (2276997 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2277000]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277002 'move' call_tmp[2277000](2277004 'cast' uint(64)[115] tmp[2276949]))
          const-val call_tmp[2277007]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277009 'move' call_tmp[2277007](2277012 call memcmp[1206651] coerce_tmp[2276973] coerce_tmp[2276980] call_tmp[2277000]))
          const-val call_tmp[2277016]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277018 'move' call_tmp[2277016](2277020 'cast' int(64)[13] call_tmp[2277007]))
          const-val call_tmp[2277028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277030 'move' call_tmp[2277028](2277032 '==' call_tmp[2277016] 0))
          if call_tmp[2277028]
          {
            const-val call_tmp[2277037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277039 'move' call_tmp[2277037](2277041 '<' tmp[2276949] coerce_tmp[2276510]))
            if call_tmp[2277037]
            {
              (2277046 'move' ret[2276947] 1)
              gotoReturn _end__strcmp_local[2277071] _end__strcmp_local[2277071]
            }
            const-val call_tmp[2277052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277054 'move' call_tmp[2277052](2277056 '<' tmp[2276949] coerce_tmp[2276531]))
            if call_tmp[2277052]
            {
              (2277061 'move' ret[2276947] -1)
              gotoReturn _end__strcmp_local[2277071] _end__strcmp_local[2277071]
            }
          }
          (2277068 'move' ret[2276947] call_tmp[2277016])
          label _end__strcmp_local[2277071]
          const-val coerce_tmp[2277073]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277075 'move' coerce_tmp[2277073](2277077 'cast' c_void_ptr[149] call_tmp[2276926]))
          (2277081 call chpl_here_free[188127] coerce_tmp[2277073])
          (2277083 'move' ret[2276545] ret[2276947])
          gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
        }
        {
          val call_tmp[2277089]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2277091]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277093 'move' coerce_tmp[2277091](2277095 'cast' int(64)[13] coerce_tmp[2276517]))
          (2277098 'move' call_tmp[2277089](2277101 call bufferCopyRemote[172830] coerce_tmp[2277091] coerce_tmp[2276503] coerce_tmp[2276510]))
          val call_tmp[2277110]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2277112]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277114 'move' coerce_tmp[2277112](2277116 'cast' int(64)[13] coerce_tmp[2276538]))
          (2277119 'move' call_tmp[2277110](2277122 call bufferCopyRemote[172830] coerce_tmp[2277112] coerce_tmp[2276524] coerce_tmp[2276531]))
          val ret[2277131]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2277133]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2277135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277137 'move' call_tmp[2277135](2277139 '<' coerce_tmp[2276510] coerce_tmp[2276531]))
          if call_tmp[2277135]
          {
            (2277144 'move' tmp[2277133] coerce_tmp[2276510])
          }
          {
            (2277148 'move' tmp[2277133] coerce_tmp[2276531])
          }
          const-val coerce_tmp[2277157]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277159 'move' coerce_tmp[2277157](2277161 'cast' c_void_ptr[149] call_tmp[2277089]))
          const-val coerce_tmp[2277164]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2277166 'move' coerce_tmp[2277164](2277168 'cast' c_void_ptr[149] call_tmp[2277110]))
          const-val call_tmp[2277171]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277173 'move' call_tmp[2277171](2277175 '<' tmp[2277133] 0))
          if call_tmp[2277171]
          {
            (2277181 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2277184]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277186 'move' call_tmp[2277184](2277188 'cast' uint(64)[115] tmp[2277133]))
          const-val call_tmp[2277191]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277193 'move' call_tmp[2277191](2277196 call memcmp[1206651] coerce_tmp[2277157] coerce_tmp[2277164] call_tmp[2277184]))
          const-val call_tmp[2277200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277202 'move' call_tmp[2277200](2277204 'cast' int(64)[13] call_tmp[2277191]))
          const-val call_tmp[2277212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2277214 'move' call_tmp[2277212](2277216 '==' call_tmp[2277200] 0))
          if call_tmp[2277212]
          {
            const-val call_tmp[2277221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277223 'move' call_tmp[2277221](2277225 '<' tmp[2277133] coerce_tmp[2276510]))
            if call_tmp[2277221]
            {
              (2277230 'move' ret[2277131] 1)
              gotoReturn _end__strcmp_local[2277255] _end__strcmp_local[2277255]
            }
            const-val call_tmp[2277236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2277238 'move' call_tmp[2277236](2277240 '<' tmp[2277133] coerce_tmp[2276531]))
            if call_tmp[2277236]
            {
              (2277245 'move' ret[2277131] -1)
              gotoReturn _end__strcmp_local[2277255] _end__strcmp_local[2277255]
            }
          }
          (2277252 'move' ret[2277131] call_tmp[2277200])
          label _end__strcmp_local[2277255]
          const-val coerce_tmp[2277257]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277259 'move' coerce_tmp[2277257](2277261 'cast' c_void_ptr[149] call_tmp[2277089]))
          (2277265 call chpl_here_free[188127] coerce_tmp[2277257])
          const-val coerce_tmp[2277267]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2277269 'move' coerce_tmp[2277267](2277271 'cast' c_void_ptr[149] call_tmp[2277110]))
          (2277275 call chpl_here_free[188127] coerce_tmp[2277267])
          (2277277 'move' ret[2276545] ret[2277131])
          gotoReturn _end__strcmp[2277285] _end__strcmp[2277285]
        }
      }
    }
    label _end__strcmp[2277285]
    const-val call_tmp[2277287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277289 'move' call_tmp[2277287](2277291 '==' ret[2276545] 0))
    const-val call_tmp[2277294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277296 'move' call_tmp[2277294](2277298 '!' call_tmp[2277287]))
    if call_tmp[2277294]
    {
      const-val _ic__F0_this[2535471]:TaskErrors[169702] "temp"
      (2297027 'move' _ic__F0_this[2535471] this[169728])
      const-val this[1990284]:TaskErrors[169702] "temp"
      (1990289 'move' this[1990284] this[169728])
      const-val coerce_tmp[1990028]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1990030 'move' coerce_tmp[1990028](2564288 '.v' this[1990284] nErrors[168363]))
      const-val call_tmp[2230878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230880 'move' call_tmp[2230878](2230882 '<' coerce_tmp[1990028] 0))
      if call_tmp[2230878]
      {
        (2061482 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2550123]:int(64)[13] "temp"
      val tmp_x1[2550125]:int(64)[13] "temp"
      const-val call_tmp[2235056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235058 'move' call_tmp[2235056](2235060 '==' coerce_tmp[1990028] 0))
      if call_tmp[2235056]
      {
        const-val call_tmp[2231818]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231820 'move' call_tmp[2231818](2231822 'cast' uint(64)[115] 0))
        const-val call_tmp[2302404]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302406 'move' call_tmp[2302404](2302408 '-' call_tmp[2231818] 1))
        const-val call_tmp[2302834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302836 'move' call_tmp[2302834](2302838 'cast' int(64)[13] call_tmp[2302404]))
        (2550131 'move' tmp_x0[2550123] 0)
        (2550136 'move' tmp_x1[2550125] call_tmp[2302834])
      }
      {
        const-val call_tmp[2261824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261826 'move' call_tmp[2261824](2261828 '-' coerce_tmp[1990028] 1))
        const-val call_tmp[2242556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242558 'move' call_tmp[2242556](2242560 '+' 0 call_tmp[2261824]))
        (2550141 'move' tmp_x0[2550123] 0)
        (2550146 'move' tmp_x1[2550125] call_tmp[2242556])
      }
      (2061591 'noop')
      1
      (2061611 'noop')
      (2061630 'noop')
      const-val _ic__F1_high[2543525]:int(64)[13] "temp"
      (2308327 'move' _ic__F1_high[2543525] tmp_x1[2550125])
      val i[2061659]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2061663 'move' i[2061659] 0)
      (2061715 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2550123] tmp_x1[2550125] 1 tmp_x0[2550123] tmp_x1[2550125] 1)
      CForLoop[2061722] hazard
      {
        const-val this[2061824]:TaskErrors[169702] "temp"
        (2061826 'move' this[2061824] _ic__F0_this[2535471])
        val coerce_tmp[2061836]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061838 'move' coerce_tmp[2061836](2564296 '.v' this[2061824] errorsArray[168374]))
        ref call_tmp[2310249]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2310251 'move' call_tmp[2310249](2310253 'array_get' coerce_tmp[2061836] i[2061659]))
        val coerce_tmp[2061850]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061852 'move' coerce_tmp[2061850](2061855 call borrow[1236017] call_tmp[2310249]))
        val coerce_tmp[2061857]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2061859 'move' coerce_tmp[2061857](2061861 'cast' object[22] coerce_tmp[2061850]))
        const-val call_tmp[2228177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2228179 'move' call_tmp[2228177](2228181 'ptr_neq' coerce_tmp[2061857] nil[44]))
        if call_tmp[2228177]
        {
          const-val this[2061883]:TaskErrors[169702] "temp"
          (2061885 'move' this[2061883] _ic__F0_this[2535471])
          val coerce_tmp[2061895]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2061897 'move' coerce_tmp[2061895](2564302 '.v' this[2061883] errorsArray[168374]))
          ref call_tmp[2310259]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2310261 'move' call_tmp[2310259](2310263 'array_get' coerce_tmp[2061895] i[2061659]))
          val coerce_tmp[2521260]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521262 'move' coerce_tmp[2521260](2521264 '.v' call_tmp[2310259] chpl_p[966597]))
          val coerce_tmp[2521267]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521269 'move' coerce_tmp[2521267](2521271 'cast' object[22] coerce_tmp[2521260]))
          const-val call_tmp[2521274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2521276 'move' call_tmp[2521274](2521278 'ptr_eq' coerce_tmp[2521267] nil[44]))
          if call_tmp[2521274]
          {
            (2521284 call nilCheckHalt[210238] "argument to ! is nil")
          }
          val coerce_tmp[2521287]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2521289 'move' coerce_tmp[2521287](2521291 '.v' call_tmp[2310259] chpl_p[966597]))
          const-val call_tmp[2061933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2061935]:int(32)[95] "temp"
          (2061937 'move' _virtual_method_tmp_[2061935](2061939 'getcid' coerce_tmp[2521287]))
          val ret_tmp[2061941]:string[26] "temp"
          (2061943 'virtual method call' message[167975] _virtual_method_tmp_[2061935] coerce_tmp[2521287] ret_tmp[2061941])
          (2061948 'move' call_tmp[2061933] ret_tmp[2061941])
          const-val call_tmp[2061951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2061953 'move' call_tmp[2061951](2061956 call ==[38823] call_tmp[2061933] maxMsg[169092]))
          if call_tmp[2061951]
          {
            (2406775 '=' last[169106] coerce_tmp[2521287])
          }
          ref i_x[2250737]:string[26] "temp"
          (2250741 'move' i_x[2250737](2250739 'set reference' call_tmp[2061933]))
          (2250745 call deinit[30834] i_x[2250737])
        }
        {
          (2061731 '=' i[2061659] tmp_x0[2550123])
        }
        {
          (2061742 '<=' i[2061659] _ic__F1_high[2543525])
        }
        {
          (2061748 '+=' i[2061659] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2061785]
      label _endchpl_direct_counted_range_iter_helper[2061793]
      label _endchpl_direct_counted_range_iter[1990204]
      label _endthese[1990209]
    }
    const-val call_tmp[680203]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908982]:string[26] "temp"
    (169411 call _cast[1063342] n[169081] ret_tmp[1908982])
    (1908985 'move' call_tmp[680203] ret_tmp[1908982])
    const-val call_tmp[680208]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905566]:string[26] "temp"
    (169430 call +[38345] call_tmp[680203] " errors: " ret_tmp[1905566])
    (1905569 'move' call_tmp[680208] ret_tmp[1905566])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544762 'move' ret[169432] call_tmp[680208])
    val coerce_tmp[1841077]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1841083 'move' coerce_tmp[1841077](1841079 'cast' object[22] first[169099]))
    const-val call_tmp[2227637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227639 'move' call_tmp[2227637](2227641 'ptr_neq' coerce_tmp[1841077] nil[44]))
    val tmp[570622]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2227637]
    {
      val coerce_tmp[1841089]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841095 'move' coerce_tmp[1841089](1841091 'cast' object[22] last[169106]))
      const-val call_tmp[2227647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227649 'move' call_tmp[2227647](2227651 'ptr_neq' coerce_tmp[1841089] nil[44]))
      (570637 'move' tmp[570622] call_tmp[2227647])
    }
    {
      (570642 'move' tmp[570622] 0)
    }
    val tmp[570649]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[570622]
    {
      val coerce_tmp[1841101]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841107 'move' coerce_tmp[1841101](1841103 'cast' object[22] first[169099]))
      val coerce_tmp[1841109]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841115 'move' coerce_tmp[1841109](1841111 'cast' object[22] last[169106]))
      const-val call_tmp[2227657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227659 'move' call_tmp[2227657](2227661 'ptr_neq' coerce_tmp[1841101] coerce_tmp[1841109]))
      (570664 'move' tmp[570649] call_tmp[2227657])
    }
    {
      (570669 'move' tmp[570649] 0)
    }
    if tmp[570649]
    {
      val coerce_tmp[2342136]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2342138 'move' coerce_tmp[2342136](2342140 'cast' object[22] first[169099]))
      const-val call_tmp[2342143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342145 'move' call_tmp[2342143](2342147 'ptr_eq' coerce_tmp[2342136] nil[44]))
      if call_tmp[2342143]
      {
        (2342153 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[680253]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906972]:string[26] "temp"
      (169458 call chpl_describe_error[169835] first[169099] ret_tmp[1906972])
      (1906975 'move' call_tmp[680253] ret_tmp[1906972])
      const-val call_tmp[680258]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905572]:string[26] "temp"
      (169476 call +[38345] call_tmp[680253] " ... " ret_tmp[1905572])
      (1905575 'move' call_tmp[680258] ret_tmp[1905572])
      val coerce_tmp[2342159]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2342161 'move' coerce_tmp[2342159](2342163 'cast' object[22] last[169106]))
      const-val call_tmp[2342166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342168 'move' call_tmp[2342166](2342170 'ptr_eq' coerce_tmp[2342159] nil[44]))
      if call_tmp[2342166]
      {
        (2342176 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[680268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906978]:string[26] "temp"
      (169483 call chpl_describe_error[169835] last[169106] ret_tmp[1906978])
      (1906981 'move' call_tmp[680268] ret_tmp[1906978])
      const-val call_tmp[680273]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905578]:string[26] "temp"
      (169484 call +[38345] call_tmp[680258] call_tmp[680268] ret_tmp[1905578])
      (1905581 'move' call_tmp[680273] ret_tmp[1905578])
      (169486 call +=[38800] ret[169432] call_tmp[680273])
      ref i_x[2246045]:string[26] "temp"
      (2246049 'move' i_x[2246045](2246047 'set reference' call_tmp[680273]))
      (2246053 call deinit[30834] i_x[2246045])
      ref i_x[2246057]:string[26] "temp"
      (2246061 'move' i_x[2246057](2246059 'set reference' call_tmp[680268]))
      (2246065 call deinit[30834] i_x[2246057])
      ref i_x[2246069]:string[26] "temp"
      (2246073 'move' i_x[2246069](2246071 'set reference' call_tmp[680258]))
      (2246077 call deinit[30834] i_x[2246069])
      ref i_x[2246081]:string[26] "temp"
      (2246085 'move' i_x[2246081](2246083 'set reference' call_tmp[680253]))
      (2246089 call deinit[30834] i_x[2246081])
    }
    {
      val coerce_tmp[1841125]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841131 'move' coerce_tmp[1841125](1841127 'cast' object[22] first[169099]))
      const-val call_tmp[2227667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227669 'move' call_tmp[2227667](2227671 'ptr_neq' coerce_tmp[1841125] nil[44]))
      if call_tmp[2227667]
      {
        const-val call_tmp[680293]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906984]:string[26] "temp"
        (169499 call chpl_describe_error[169835] first[169099] ret_tmp[1906984])
        (1906987 'move' call_tmp[680293] ret_tmp[1906984])
        (169500 call +=[38800] ret[169432] call_tmp[680293])
        ref i_x[2246093]:string[26] "temp"
        (2246097 'move' i_x[2246093](2246095 'set reference' call_tmp[680293]))
        (2246101 call deinit[30834] i_x[2246093])
      }
    }
    (1841138 'move' ret[522310] ret[169432])
    ref i_x[2246105]:string[26] "temp"
    (2246109 'move' i_x[2246105](2246107 'set reference' call_tmp[680203]))
    (2246113 call deinit[30834] i_x[2246105])
    ref i_x[2246117]:string[26] "temp"
    (2246121 'move' i_x[2246117](2246119 'set reference' maxMsg[169092]))
    (2246125 call deinit[30834] i_x[2246117])
    ref i_x[2246129]:string[26] "temp"
    (2246133 'move' i_x[2246129](2246131 'set reference' minMsg[169087]))
    (2246137 call deinit[30834] i_x[2246129])
    label _end_message[522308]
    (1918972 '=' _retArg[1918970] ret[522310])
    (1918974 return _void[55])
  }
  function _new[1241169](ref arg group[1241178]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1241171]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241218 'move' call_tmp[1241215](1241229 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241232]:c_void_ptr[149] "dead after last mention" "temp"
    (1241234 'move' cast_tmp[1241232](1241186 call chpl_here_alloc[187788] call_tmp[1241215] 41))
    (1241189 'move' initTemp[1241171](1241236 'cast' TaskErrors[169702] cast_tmp[1241232]))
    (1241191 'setcid' initTemp[1241171])
    val super_tmp[2313487]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2313489 'move' super_tmp[2313487](2313491 '.v' initTemp[1241171] super[355819]))
    val super_tmp[2313494]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2313496 'move' super_tmp[2313494](2313498 '.v' super_tmp[2313487] super[355807]))
    (2313501 'setcid' super_tmp[2313494])
    val call_tmp[2313503]:object[22] "dead at end of block" "maybe param" "temp"
    (2313505 'move' call_tmp[2313503](2313507 'cast' object[22] super_tmp[2313487]))
    (2313510 'setcid' call_tmp[2313503])
    val init_coerce_tmp[2313512]:Error[167984] "dead after last mention" "temp"
    (2313514 'move' init_coerce_tmp[2313512](2313516 'cast' Error[167984] nil[44]))
    (2313519 '.=' super_tmp[2313487] _next[167912] init_coerce_tmp[2313512])
    (2313523 '.=' super_tmp[2313487] thrownLine[167917] 0)
    (2313527 '.=' super_tmp[2313487] thrownFileId[167925] 0)
    val tmp[2313531]:string[26] "dead after last mention" "temp"
    (2313534 call init[30763] tmp[2313531])
    (2313536 '.=' super_tmp[2313487] _msg[167930] tmp[2313531])
    (2313540 '.=' super_tmp[2313487] _hasThrowInfo[167936] 0)
    (2313544 'setcid' super_tmp[2313487])
    val call_tmp[2313546]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2313548 'move' call_tmp[2313546](2313550 'cast' Error[167984] initTemp[1241171]))
    (2313553 'setcid' call_tmp[2313546])
    val head[2313555]:Error[167984] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2313557]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2313559 'move' coerce_tmp[2313557](2313561 '.v' group[1241178] _head[168266]))
    (2313564 '=' head[2313555] coerce_tmp[2313557])
    (2313567 'noop')
    val tmp[2313568]:Error[167984] "temp"
    (2313570 'move' tmp[2313568](2313572 'cast' Error[167984] nil[44]))
    (2313575 '.=' group[1241178] _head[168266] tmp[2313568])
    (2313579 '.=' initTemp[1241171] nErrors[168363] 0)
    val tmp[2313583]:c_ptr(owned Error?)[1235804] "dead after last mention" "temp"
    (2313585 'move' tmp[2313583](2313587 'cast' c_ptr(owned Error?)[1235804] nil[44]))
    (2313590 '.=' initTemp[1241171] errorsArray[168374] tmp[2313583])
    (2313594 'setcid' initTemp[1241171])
    val cur[2313596]:Error[167984] "dead at end of block" "insert auto destroy" "split inited"
    val n[2313598]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2313600 'move' n[2313598] 0)
    (2313603 'move' cur[2313596] coerce_tmp[2313557])
    val tmp[2313606]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2313608]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2313610 'move' coerce_tmp[2313608](2313612 'cast' object[22] coerce_tmp[2313557]))
    const-val call_tmp[2313615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2313617 'move' call_tmp[2313615](2313619 'ptr_neq' coerce_tmp[2313608] nil[44]))
    (2313622 'move' tmp[2313606] call_tmp[2313615])
    WhileDo[2313625]
    {
      val coerce_tmp[2313627]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313629 'move' coerce_tmp[2313627](2313631 'cast' object[22] cur[2313596]))
      const-val call_tmp[2313634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2313636 'move' call_tmp[2313634](2313638 'ptr_eq' coerce_tmp[2313627] nil[44]))
      if call_tmp[2313634]
      {
        (2313644 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2313647]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2313649 'move' coerce_tmp[2313647] cur[2313596])
      val curnext[2313652]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2313654]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2313656 'move' coerce_tmp[2313654](2313658 '.v' coerce_tmp[2313647] _next[167912]))
      (2313661 '=' curnext[2313652] coerce_tmp[2313654])
      (2313664 'noop')
      val _formal_type_tmp_[2313670]:TaskErrors[169702] "temp"
      val ret[2313672]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2313674]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313676 'move' coerce_tmp[2313674](2313678 'cast' object[22] cur[2313596]))
      const-val call_tmp[2313681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2313683 'move' call_tmp[2313681](2313685 'ptr_eq' coerce_tmp[2313674] nil[44]))
      if call_tmp[2313681]
      {
        (2313690 'move' ret[2313672](2313692 'cast' TaskErrors[169702] nil[44]))
        gotoReturn _end__cast[2313708] _end__cast[2313708]
      }
      val call_tmp[2313698]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
      (2313700 'move' call_tmp[2313698](2313702 'dynamic_cast' _formal_type_tmp_[2313670] cur[2313596]))
      (2313705 'move' ret[2313672] call_tmp[2313698])
      label _end__cast[2313708]
      val coerce_tmp[2313715]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2313717 'move' coerce_tmp[2313715](2313719 'cast' object[22] ret[2313672]))
      const-val call_tmp[2313722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2313724 'move' call_tmp[2313722](2313726 'ptr_eq' coerce_tmp[2313715] nil[44]))
      if call_tmp[2313722]
      {
        ref i_lhs[2313731]:int(64)[13] "temp"
        (2313733 'move' i_lhs[2313731](2313735 'set reference' n[2313598]))
        (2313737 '+=' i_lhs[2313731] 1)
      }
      {
        const-val _ic__F0_this[2535494]:TaskErrors[169702] "temp"
        (2313793 'move' _ic__F0_this[2535494] ret[2313672])
        const-val this[2313802]:TaskErrors[169702] "temp"
        (2313804 'move' this[2313802] ret[2313672])
        const-val coerce_tmp[2313811]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2313813 'move' coerce_tmp[2313811](2313815 '.v' this[2313802] nErrors[168363]))
        const-val call_tmp[2313983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2313985 'move' call_tmp[2313983](2313987 '<' coerce_tmp[2313811] 0))
        if call_tmp[2313983]
        {
          (2313993 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2552427]:int(64)[13] "temp"
        val tmp_x1[2552429]:int(64)[13] "temp"
        const-val call_tmp[2314007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314009 'move' call_tmp[2314007](2314011 '==' coerce_tmp[2313811] 0))
        if call_tmp[2314007]
        {
          const-val call_tmp[2314023]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314025 'move' call_tmp[2314023](2314027 'cast' uint(64)[115] 0))
          const-val call_tmp[2314030]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314032 'move' call_tmp[2314030](2314034 '-' call_tmp[2314023] 1))
          const-val call_tmp[2314037]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314039 'move' call_tmp[2314037](2314041 'cast' int(64)[13] call_tmp[2314030]))
          (2552435 'move' tmp_x0[2552427] 0)
          (2552440 'move' tmp_x1[2552429] call_tmp[2314037])
        }
        {
          const-val call_tmp[2314072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314074 'move' call_tmp[2314072](2314076 '-' coerce_tmp[2313811] 1))
          const-val call_tmp[2314086]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314088 'move' call_tmp[2314086](2314090 '+' 0 call_tmp[2314072]))
          (2552445 'move' tmp_x0[2552427] 0)
          (2552450 'move' tmp_x1[2552429] call_tmp[2314086])
        }
        (2314117 'noop')
        (2314125 'noop')
        (2314133 'noop')
        const-val _ic__F1_high[2543848]:int(64)[13] "temp"
        (2314201 'move' _ic__F1_high[2543848] tmp_x1[2552429])
        val i[2314208]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2314210 'move' i[2314208] 0)
        (2314242 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2552427] tmp_x1[2552429] 1 tmp_x0[2552427] tmp_x1[2552429] 1)
        CForLoop[2314249]
        {
          const-val this[2314281]:TaskErrors[169702] "temp"
          (2314283 'move' this[2314281] _ic__F0_this[2535494])
          val coerce_tmp[2314288]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2314290 'move' coerce_tmp[2314288](2314292 '.v' this[2314281] errorsArray[168374]))
          ref call_tmp[2314295]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2314297 'move' call_tmp[2314295](2314299 'array_get' coerce_tmp[2314288] i[2314208]))
          val coerce_tmp[2314302]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2314304 'move' coerce_tmp[2314302](2314307 call borrow[1236017] call_tmp[2314295]))
          val coerce_tmp[2314309]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2314311 'move' coerce_tmp[2314309](2314313 'cast' object[22] coerce_tmp[2314302]))
          const-val call_tmp[2314316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2314318 'move' call_tmp[2314316](2314320 'ptr_neq' coerce_tmp[2314309] nil[44]))
          if call_tmp[2314316]
          {
            const-val this[2314325]:TaskErrors[169702] "temp"
            (2314327 'move' this[2314325] _ic__F0_this[2535494])
            val coerce_tmp[2314332]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2314334 'move' coerce_tmp[2314332](2314336 '.v' this[2314325] errorsArray[168374]))
            ref call_tmp[2314339]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2314341 'move' call_tmp[2314339](2314343 'array_get' coerce_tmp[2314332] i[2314208]))
            val coerce_tmp[2314346]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2314348 'move' coerce_tmp[2314346](2314351 call borrow[1236017] call_tmp[2314339]))
            val coerce_tmp[2314353]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2314355 'move' coerce_tmp[2314353](2314357 'cast' object[22] coerce_tmp[2314346]))
            const-val call_tmp[2314360]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2314362 'move' call_tmp[2314360](2314364 'ptr_neq' coerce_tmp[2314353] nil[44]))
            if call_tmp[2314360]
            {
              ref i_lhs[2314369]:int(64)[13] "temp"
              (2314371 'move' i_lhs[2314369](2314373 'set reference' n[2313598]))
              (2314375 '+=' i_lhs[2314369] 1)
            }
          }
          {
            (2314258 '=' i[2314208] tmp_x0[2552427])
          }
          {
            (2314269 '<=' i[2314208] _ic__F1_high[2543848])
          }
          {
            (2314273 '+=' i[2314208] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2314380]
        label _endchpl_direct_counted_range_iter_helper[2314391]
        label _endchpl_direct_counted_range_iter[2314402]
        label _endthese[2314413]
      }
      (2314425 '=' cur[2313596] curnext[2313652])
      val coerce_tmp[2314428]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314430 'move' coerce_tmp[2314428](2314432 'cast' object[22] curnext[2313652]))
      const-val call_tmp[2314435]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2314437 'move' call_tmp[2314435](2314439 'ptr_neq' coerce_tmp[2314428] nil[44]))
      (2314442 'move' tmp[2313606] call_tmp[2314435])
      tmp[2313606]
    }
    (2314445 '.=' initTemp[1241171] nErrors[168363] n[2313598])
    const-val call_tmp[2314449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314451 'move' call_tmp[2314449](2314453 '<' n[2313598] 0))
    if call_tmp[2314449]
    {
      (2314459 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2314462]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314464 'move' call_tmp[2314462](2314466 'cast' uint(64)[115] n[2313598]))
    const-val call_tmp[2314469]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314471 'move' call_tmp[2314469](2314474 call sizeof[1238678] owned Error?[966602]))
    const-val call_tmp[2314476]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314478 'move' call_tmp[2314476](2314480 '*' call_tmp[2314462] call_tmp[2314469]))
    const-val call_tmp[2314483]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314485 'move' call_tmp[2314483](2314488 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2314489]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314491 'move' call_tmp[2314489](2314494 call chpl_here_calloc[1238708] call_tmp[2314476] 1 call_tmp[2314483]))
    val call_tmp[2314498]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314500 'move' call_tmp[2314498](2314502 'cast' c_ptr(owned Error?)[1235804] call_tmp[2314489]))
    (2314505 '.=' initTemp[1241171] errorsArray[168374] call_tmp[2314498])
    val idx[2314509]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2314511 'move' idx[2314509] 0)
    (2314514 '=' cur[2313596] head[2313555])
    val tmp[2314517]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2314519]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2314521 'move' coerce_tmp[2314519](2314523 'cast' object[22] head[2313555]))
    const-val call_tmp[2314526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2314528 'move' call_tmp[2314526](2314530 'ptr_neq' coerce_tmp[2314519] nil[44]))
    (2314533 'move' tmp[2314517] call_tmp[2314526])
    WhileDo[2314536]
    {
      val coerce_tmp[2314538]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314540 'move' coerce_tmp[2314538](2314542 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2314547 'move' call_tmp[2314545](2314549 'ptr_eq' coerce_tmp[2314538] nil[44]))
      if call_tmp[2314545]
      {
        (2314555 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2314558]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2314560 'move' coerce_tmp[2314558] cur[2313596])
      val curnext[2314563]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2314565]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2314567 'move' coerce_tmp[2314565](2314569 '.v' coerce_tmp[2314558] _next[167912]))
      (2314572 '=' curnext[2314563] coerce_tmp[2314565])
      (2314575 'noop')
      val coerce_tmp[2314576]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314578 'move' coerce_tmp[2314576](2314580 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2314585 'move' call_tmp[2314583](2314587 'ptr_eq' coerce_tmp[2314576] nil[44]))
      if call_tmp[2314583]
      {
        (2314593 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2314596]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314598 'move' coerce_tmp[2314596] cur[2313596])
      val tmp[2314601]:Error[167984] "temp"
      (2314603 'move' tmp[2314601](2314605 'cast' Error[167984] nil[44]))
      (2314608 '.=' coerce_tmp[2314596] _next[167912] tmp[2314601])
      val _formal_type_tmp_[2314617]:TaskErrors[169702] "temp"
      val ret[2314619]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2314621]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314623 'move' coerce_tmp[2314621](2314625 'cast' object[22] cur[2313596]))
      const-val call_tmp[2314628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2314630 'move' call_tmp[2314628](2314632 'ptr_eq' coerce_tmp[2314621] nil[44]))
      if call_tmp[2314628]
      {
        (2314637 'move' ret[2314619](2314639 'cast' TaskErrors[169702] nil[44]))
        gotoReturn _end__cast[2314655] _end__cast[2314655]
      }
      val call_tmp[2314645]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
      (2314647 'move' call_tmp[2314645](2314649 'dynamic_cast' _formal_type_tmp_[2314617] cur[2313596]))
      (2314652 'move' ret[2314619] call_tmp[2314645])
      label _end__cast[2314655]
      val asTaskErr[2314657]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
      (2314659 'move' asTaskErr[2314657] ret[2314619])
      val coerce_tmp[2314662]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2314664 'move' coerce_tmp[2314662](2314666 'cast' object[22] ret[2314619]))
      const-val call_tmp[2314669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2314671 'move' call_tmp[2314669](2314673 'ptr_eq' coerce_tmp[2314662] nil[44]))
      if call_tmp[2314669]
      {
        val coerce_tmp[2314678]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2314680 'move' coerce_tmp[2314678](2314682 '.v' initTemp[1241171] errorsArray[168374]))
        ref call_tmp[2314685]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
        (2314687 'move' call_tmp[2314685](2314689 'array_get' coerce_tmp[2314678] idx[2314509]))
        val coerce_tmp[2314692]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2314694 'move' coerce_tmp[2314692](2314696 'cast' object[22] cur[2313596]))
        const-val call_tmp[2314699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314701 'move' call_tmp[2314699](2314703 'ptr_eq' coerce_tmp[2314692] nil[44]))
        if call_tmp[2314699]
        {
          (2314709 call nilCheckHalt[210238] "argument to ! is nil")
        }
        (2314713 call retain[1238964] call_tmp[2314685] cur[2313596])
        ref i_lhs[2314716]:int(64)[13] "temp"
        (2314718 'move' i_lhs[2314716](2314720 'set reference' idx[2314509]))
        (2314722 '+=' i_lhs[2314716] 1)
      }
      {
        const-val _ic__F0_this[2535517]:TaskErrors[169702] "temp"
        (2314778 'move' _ic__F0_this[2535517] ret[2314619])
        const-val this[2314787]:TaskErrors[169702] "temp"
        (2314789 'move' this[2314787] ret[2314619])
        const-val coerce_tmp[2314796]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2314798 'move' coerce_tmp[2314796](2314800 '.v' this[2314787] nErrors[168363]))
        const-val call_tmp[2314968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314970 'move' call_tmp[2314968](2314972 '<' coerce_tmp[2314796] 0))
        if call_tmp[2314968]
        {
          (2314978 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2552485]:int(64)[13] "temp"
        val tmp_x1[2552487]:int(64)[13] "temp"
        const-val call_tmp[2314992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2314994 'move' call_tmp[2314992](2314996 '==' coerce_tmp[2314796] 0))
        if call_tmp[2314992]
        {
          const-val call_tmp[2315008]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315010 'move' call_tmp[2315008](2315012 'cast' uint(64)[115] 0))
          const-val call_tmp[2315015]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315017 'move' call_tmp[2315015](2315019 '-' call_tmp[2315008] 1))
          const-val call_tmp[2315022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315024 'move' call_tmp[2315022](2315026 'cast' int(64)[13] call_tmp[2315015]))
          (2552493 'move' tmp_x0[2552485] 0)
          (2552498 'move' tmp_x1[2552487] call_tmp[2315022])
        }
        {
          const-val call_tmp[2315057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315059 'move' call_tmp[2315057](2315061 '-' coerce_tmp[2314796] 1))
          const-val call_tmp[2315071]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315073 'move' call_tmp[2315071](2315075 '+' 0 call_tmp[2315057]))
          (2552503 'move' tmp_x0[2552485] 0)
          (2552508 'move' tmp_x1[2552487] call_tmp[2315071])
        }
        (2315102 'noop')
        (2315110 'noop')
        (2315118 'noop')
        const-val _ic__F1_high[2543867]:int(64)[13] "temp"
        (2315186 'move' _ic__F1_high[2543867] tmp_x1[2552487])
        val i[2315193]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2315195 'move' i[2315193] 0)
        (2315227 call chpl_checkIfRangeIterWillOverflow[1096265] tmp_x0[2552485] tmp_x1[2552487] 1 tmp_x0[2552485] tmp_x1[2552487] 1)
        CForLoop[2315234]
        {
          const-val this[2315266]:TaskErrors[169702] "temp"
          (2315268 'move' this[2315266] _ic__F0_this[2535517])
          val coerce_tmp[2315273]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2315275 'move' coerce_tmp[2315273](2315277 '.v' this[2315266] errorsArray[168374]))
          ref call_tmp[2315280]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
          (2315282 'move' call_tmp[2315280](2315284 'array_get' coerce_tmp[2315273] i[2315193]))
          val coerce_tmp[2315287]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2315289 'move' coerce_tmp[2315287](2315292 call borrow[1236017] call_tmp[2315280]))
          val coerce_tmp[2315294]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2315296 'move' coerce_tmp[2315294](2315298 'cast' object[22] coerce_tmp[2315287]))
          const-val call_tmp[2315301]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315303 'move' call_tmp[2315301](2315305 'ptr_neq' coerce_tmp[2315294] nil[44]))
          if call_tmp[2315301]
          {
            const-val this[2315310]:TaskErrors[169702] "temp"
            (2315312 'move' this[2315310] _ic__F0_this[2535517])
            val coerce_tmp[2315317]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2315319 'move' coerce_tmp[2315317](2315321 '.v' this[2315310] errorsArray[168374]))
            ref call_tmp[2315324]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
            (2315326 'move' call_tmp[2315324](2315328 'array_get' coerce_tmp[2315317] i[2315193]))
            val coerce_tmp[2315331]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2315333 'move' coerce_tmp[2315331](2315336 call borrow[1236017] call_tmp[2315324]))
            val coerce_tmp[2315338]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2315340 'move' coerce_tmp[2315338](2315342 'cast' object[22] coerce_tmp[2315331]))
            const-val call_tmp[2315345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2315347 'move' call_tmp[2315345](2315349 'ptr_neq' coerce_tmp[2315338] nil[44]))
            if call_tmp[2315345]
            {
              val coerce_tmp[2315354]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2315356 'move' coerce_tmp[2315354](2315358 '.v' initTemp[1241171] errorsArray[168374]))
              ref call_tmp[2315361]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
              (2315363 'move' call_tmp[2315361](2315365 'array_get' coerce_tmp[2315354] idx[2314509]))
              (2315369 call =[1239246] call_tmp[2315361] call_tmp[2315324])
              ref i_lhs[2315372]:int(64)[13] "temp"
              (2315374 'move' i_lhs[2315372](2315376 'set reference' idx[2314509]))
              (2315378 '+=' i_lhs[2315372] 1)
            }
          }
          {
            (2315243 '=' i[2315193] tmp_x0[2552485])
          }
          {
            (2315254 '<=' i[2315193] _ic__F1_high[2543867])
          }
          {
            (2315258 '+=' i[2315193] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2315383]
        label _endchpl_direct_counted_range_iter_helper[2315394]
        label _endchpl_direct_counted_range_iter[2315405]
        label _endthese[2315416]
        val coerce_tmp[2315427]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2315429 'move' coerce_tmp[2315427](2315431 'cast' object[22] asTaskErr[2314657]))
        const-val call_tmp[2315434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2315436 'move' call_tmp[2315434](2315438 'ptr_neq' coerce_tmp[2315427] nil[44]))
        if call_tmp[2315434]
        {
          (2315444 call deinit[168832] asTaskErr[2314657])
          const-val call_tmp[2315448]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2315450 'move' call_tmp[2315448](2315452 '_wide_get_locale' asTaskErr[2314657]))
          val isdirect[2315457]:bool[10] "temp"
          (2315459 'move' isdirect[2315457](2315462 call chpl_doDirectExecuteOn[187469] call_tmp[2315448]))
          if isdirect[2315457]
          {
            (2315467 call on_fn[1240423] asTaskErr[2314657])
          }
          {
            val _args_foron_fn[2315470]:_class_localson_fn[2205215] "temp"
            (2315472 'move' _args_foron_fn[2315470](2315474 'stack allocate class' _class_localson_fn[2205215]))
            (2315476 '.=' _args_foron_fn[2315470] _0_tmp[2205218] call_tmp[2315448])
            (2315480 '.=' _args_foron_fn[2315470] _1_arg[2205220] asTaskErr[2314657])
            val _args_vforon_fn[2315484]:c_void_ptr[149] "temp"
            (2315486 'move' _args_vforon_fn[2315484](2315488 'cast_to_void_star' _args_foron_fn[2315470]))
            val _args_sizeon_fn[2315490]:int(64)[13] "temp"
            (2315492 'move' _args_sizeon_fn[2315490](2315494 'sizeof_bundle' _class_localson_fn[2205215]))
            on(2315497 call wrapon_fn[2205249] call_tmp[2315448] _args_vforon_fn[2315484] _args_sizeon_fn[2315490] _args_foron_fn[2315470])
          }
        }
      }
      (2315505 '=' cur[2313596] curnext[2314563])
      val coerce_tmp[2315508]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2315510 'move' coerce_tmp[2315508](2315512 'cast' object[22] curnext[2314563]))
      const-val call_tmp[2315515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2315517 'move' call_tmp[2315515](2315519 'ptr_neq' coerce_tmp[2315508] nil[44]))
      (2315522 'move' tmp[2314517] call_tmp[2315515])
      tmp[2314517]
    }
    (1241210 return initTemp[1241171])
  }
  function _new[1830141](const in arg err[1830150]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1830143]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1830185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1830188 'move' call_tmp[1830185](1830197 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1830200]:c_void_ptr[149] "dead after last mention" "temp"
    (1830202 'move' cast_tmp[1830200](1830156 call chpl_here_alloc[187788] call_tmp[1830185] 41))
    (1830159 'move' initTemp[1830143](1830204 'cast' TaskErrors[169702] cast_tmp[1830200]))
    (1830161 'setcid' initTemp[1830143])
    val super_tmp[2315548]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2315550 'move' super_tmp[2315548](2315552 '.v' initTemp[1830143] super[355819]))
    val super_tmp[2315555]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2315557 'move' super_tmp[2315555](2315559 '.v' super_tmp[2315548] super[355807]))
    (2315562 'setcid' super_tmp[2315555])
    val call_tmp[2315564]:object[22] "dead at end of block" "maybe param" "temp"
    (2315566 'move' call_tmp[2315564](2315568 'cast' object[22] super_tmp[2315548]))
    (2315571 'setcid' call_tmp[2315564])
    val init_coerce_tmp[2315573]:Error[167984] "dead after last mention" "temp"
    (2315575 'move' init_coerce_tmp[2315573](2315577 'cast' Error[167984] nil[44]))
    (2315580 '.=' super_tmp[2315548] _next[167912] init_coerce_tmp[2315573])
    (2315584 '.=' super_tmp[2315548] thrownLine[167917] 0)
    (2315588 '.=' super_tmp[2315548] thrownFileId[167925] 0)
    val tmp[2315592]:string[26] "dead after last mention" "temp"
    (2315595 call init[30763] tmp[2315592])
    (2315597 '.=' super_tmp[2315548] _msg[167930] tmp[2315592])
    (2315601 '.=' super_tmp[2315548] _hasThrowInfo[167936] 0)
    (2315605 'setcid' super_tmp[2315548])
    val call_tmp[2315607]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2315609 'move' call_tmp[2315607](2315611 'cast' Error[167984] initTemp[1830143]))
    (2315614 'setcid' call_tmp[2315607])
    (2315616 '.=' initTemp[1830143] nErrors[168363] 1)
    const-val call_tmp[2315625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315627 'move' call_tmp[2315625](2315629 '<' 1 0))
    if call_tmp[2315625]
    {
      (2315635 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2315638]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315640 'move' call_tmp[2315638](2315642 'cast' uint(64)[115] 1))
    const-val call_tmp[2315645]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315647 'move' call_tmp[2315645](2315650 call sizeof[1238678] owned Error?[966602]))
    const-val call_tmp[2315652]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315654 'move' call_tmp[2315652](2315656 '*' call_tmp[2315638] call_tmp[2315645]))
    const-val call_tmp[2315659]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315661 'move' call_tmp[2315659](2315664 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2315665]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315667 'move' call_tmp[2315665](2315670 call chpl_here_calloc[1238708] call_tmp[2315652] 1 call_tmp[2315659]))
    val call_tmp[2315674]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (2315676 'move' call_tmp[2315674](2315678 'cast' c_ptr(owned Error?)[1235804] call_tmp[2315665]))
    (2315681 '.=' initTemp[1830143] errorsArray[168374] call_tmp[2315674])
    (2315685 'setcid' initTemp[1830143])
    val coerce_tmp[2315687]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2315689 'move' coerce_tmp[2315687] err[1830150])
    val tmp[2315692]:Error[167984] "temp"
    (2315694 'move' tmp[2315692](2315696 'cast' Error[167984] nil[44]))
    (2315699 '.=' coerce_tmp[2315687] _next[167912] tmp[2315692])
    val coerce_tmp[2315703]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2315705 'move' coerce_tmp[2315703](2315707 '.v' initTemp[1830143] errorsArray[168374]))
    ref call_tmp[2315710]:owned Error?[966602] "dead after last mention" "maybe param" "temp"
    (2315712 'move' call_tmp[2315710](2315714 'array_get' coerce_tmp[2315703] 0))
    (2315718 call retain[1238964] call_tmp[2315710] err[1830150])
    (1830180 return initTemp[1830143])
  }
  type TaskErrors[169702] val super[355819]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235804] "no doc"
  function chpl_error_type_name[169752](const in arg err[169749]:Error[167984], ref arg _retArg[1906966]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680344]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680347 'move' call_tmp[680344](169774 'getcid' err[169749]))
    const-val call_tmp[680349]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680352 'move' call_tmp[680349](169800 'class name by id' call_tmp[680344]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883568]:Error[167984] "error variable" "temp"
    (1883584 'move' error[1883568] nil[44])
    const-val call_tmp[2325389]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325391 'move' call_tmp[2325389](2325393 'string_length_bytes' call_tmp[680349]))
    val errorExists[2221760]:bool[10] "temp"
    (2221765 'move' errorExists[2221760](2221762 '!=' error[1883568] nil[44]))
    if errorExists[2221760]
    {
      gotoErrorHandling handler[1883569] handler[1883569]
    }
    const-val ret[2257541]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257543]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257545 'move' call_tmp[2257543](2257547 'cast' c_ptr(uint(8))[937612] call_tmp[680349]))
    val error[2257552]:Error[167984] "error variable" "temp"
    (2257554 'move' error[2257552] nil[44])
    const-val ret[2257557]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257559]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257561]:Error[167984] "error variable" "temp"
    (2257563 'move' error[2257561] nil[44])
    const-val ret_tmp[2257566]:string[26] "temp"
    (2257569 call decodeByteBuffer[173938] call_tmp[2257543] call_tmp[2325389] strict[173692] error[2257561] ret_tmp[2257566])
    (2257575 'move' call_tmp[2257559] ret_tmp[2257566])
    val errorExists[2257578]:bool[10] "temp"
    (2257580 'move' errorExists[2257578](2257582 '!=' error[2257561] nil[44]))
    if errorExists[2257578]
    {
      (2257587 '=' error[2257552] error[2257561])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257596] _endcreateStringWithNewBuffer[2257596]
    }
    (2257593 'move' ret[2257557] call_tmp[2257559])
    label _endcreateStringWithNewBuffer[2257596]
    val errorExists[2257601]:bool[10] "temp"
    (2257603 'move' errorExists[2257601](2257605 '!=' error[2257552] nil[44]))
    if errorExists[2257601]
    {
      (2257610 '=' error[1883568] error[2257552])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257619] _endcreateStringWithNewBuffer[2257619]
    }
    (2257616 'move' ret[2257541] ret[2257557])
    label _endcreateStringWithNewBuffer[2257619]
    val errorExists[2221768]:bool[10] "temp"
    (2221773 'move' errorExists[2221768](2221770 '!=' error[1883568] nil[44]))
    if errorExists[2221768]
    {
      gotoErrorHandling handler[1883569] handler[1883569]
    }
    (544781 'move' nameS[169806] ret[2257541])
    label handler[1883569]
    val errorExists[2221776]:bool[10] "temp"
    (2221781 'move' errorExists[2221776](2221778 '!=' error[1883568] nil[44]))
    if errorExists[2221776]
    {
      (1883590 call chpl_uncaught_error[170289] error[1883568])
    }
    label _end_chpl_error_type_name[522353]
    (1906968 '=' _retArg[1906966] nameS[169806])
    (1906970 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:Error[167984], ref arg _retArg[1906996]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680359]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1906960]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1906960])
    (1906963 'move' call_tmp[680359] ret_tmp[1906960])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544784 'move' nameS[169842] call_tmp[680359])
    const-val call_tmp[680364]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905584]:string[26] "temp"
    (169849 call +[38345] nameS[169842] ": " ret_tmp[1905584])
    (1905587 'move' call_tmp[680364] ret_tmp[1905584])
    const-val call_tmp[680371]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1875787]:int(32)[95] "temp"
    (1875791 'move' _virtual_method_tmp_[1875787](1875789 'getcid' err[169832]))
    val ret_tmp[1906912]:string[26] "temp"
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1875787] err[169832] ret_tmp[1906912])
    (1906915 'move' call_tmp[680371] ret_tmp[1906912])
    const-val call_tmp[680376]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905590]:string[26] "temp"
    (169857 call +[38345] call_tmp[680364] call_tmp[680371] ret_tmp[1905590])
    (1905593 'move' call_tmp[680376] ret_tmp[1905590])
    ref i_x[2246141]:string[26] "temp"
    (2246145 'move' i_x[2246141](2246143 'set reference' call_tmp[680371]))
    (2246149 call deinit[30834] i_x[2246141])
    ref i_x[2246153]:string[26] "temp"
    (2246157 'move' i_x[2246153](2246155 'set reference' call_tmp[680364]))
    (2246161 call deinit[30834] i_x[2246153])
    ref i_x[2246165]:string[26] "temp"
    (2246169 'move' i_x[2246165](2246167 'set reference' nameS[169842]))
    (2246173 call deinit[30834] i_x[2246165])
    label _end_chpl_describe_error[522365]
    (1906998 '=' _retArg[1906996] call_tmp[680376])
    (1907000 return _void[55])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:Error[167984]) : Error[167984] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val fixErr[169885]:Error[167984] "dead at end of block" "insert auto destroy"
    (544788 'move' fixErr[169885] err[169874])
    val coerce_tmp[969675]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969680 'move' coerce_tmp[969675](969677 'cast' object[22] err[169874]))
    const-val call_tmp[2226487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226489 'move' call_tmp[2226487](2226491 'ptr_eq' coerce_tmp[969675] nil[44]))
    if call_tmp[2226487]
    {
      val new_temp[969790]:NilThrownError[168029] "dead after last mention" "temp"
      (969792 'move' new_temp[969790](969722 call _new[969738]))
      (2342286 '=' fixErr[169885](2342288 'cast' Error[167984] new_temp[969790]))
    }
    const-val call_tmp[680396]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680399 'move' call_tmp[680396](169927 '_get_user_line'))
    const-val call_tmp[680401]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680404 'move' call_tmp[680401](169950 '_get_user_file'))
    val coerce_tmp[2295046]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2295048 'move' coerce_tmp[2295046](2295050 'cast' object[22] fixErr[169885]))
    const-val call_tmp[2295053]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2295055 'move' call_tmp[2295053](2295057 'ptr_eq' coerce_tmp[2295046] nil[44]))
    if call_tmp[2295053]
    {
      (2295063 call nilCheckHalt[210238] "argument to ! is nil")
    }
    val coerce_tmp[969914]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969919 'move' coerce_tmp[969914] fixErr[169885])
    const-val coerce_tmp[969922]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969926 'move' coerce_tmp[969922](2564316 '.v' coerce_tmp[969914] _hasThrowInfo[167936]))
    const-val call_tmp[2228265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228267 'move' call_tmp[2228265](2228269 '!' coerce_tmp[969922]))
    if call_tmp[2228265]
    {
      val coerce_tmp[2295069]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295071 'move' coerce_tmp[2295069](2295073 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2295078 'move' call_tmp[2295076](2295080 'ptr_eq' coerce_tmp[2295069] nil[44]))
      if call_tmp[2295076]
      {
        (2295086 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969930]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969935 'move' coerce_tmp[969930] fixErr[169885])
      (2564322 '.=' coerce_tmp[969930] _hasThrowInfo[167936] 1)
      val coerce_tmp[2295092]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295094 'move' coerce_tmp[2295092](2295096 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295099]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2295101 'move' call_tmp[2295099](2295103 'ptr_eq' coerce_tmp[2295092] nil[44]))
      if call_tmp[2295099]
      {
        (2295109 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969940]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969945 'move' coerce_tmp[969940] fixErr[169885])
      (2564328 '.=' coerce_tmp[969940] thrownLine[167917] call_tmp[680396])
      val coerce_tmp[2295115]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2295117 'move' coerce_tmp[2295115](2295119 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2295122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2295124 'move' call_tmp[2295122](2295126 'ptr_eq' coerce_tmp[2295115] nil[44]))
      if call_tmp[2295122]
      {
        (2295132 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[969950]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969955 'move' coerce_tmp[969950] fixErr[169885])
      (2564334 '.=' coerce_tmp[969950] thrownFileId[167925] call_tmp[680401])
    }
    label _end_chpl_do_fix_thrown_error[522377]
    (522381 return fixErr[169885])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966647]) : Error[167984] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969642]:owned Error[966647] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969645 'move' _formal_tmp_err[969642] err[170046])
    val call_tmp[680483]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680486 'move' call_tmp[680483](170059 call release[969387] _formal_tmp_err[969642]))
    val call_tmp[680488]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680491 'move' call_tmp[680488](170061 call chpl_do_fix_thrown_error[169877] call_tmp[680483]))
    (1919639 call chpl__autoDestroy[1608774] _formal_tmp_err[969642])
    (522403 return call_tmp[680488])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    val coerce_tmp[1829593]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1829598 'move' coerce_tmp[1829593](1829595 'cast' object[22] err[170260]))
    const-val call_tmp[2227627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227629 'move' call_tmp[2227627](2227631 'ptr_neq' coerce_tmp[1829593] nil[44]))
    if call_tmp[2227627]
    {
      val coerce_tmp[2411066]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2411068 'move' coerce_tmp[2411066](2411070 'cast' object[22] err[170260]))
      const-val call_tmp[2411073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411075 'move' call_tmp[2411073](2411077 'ptr_neq' coerce_tmp[2411066] nil[44]))
      if call_tmp[2411073]
      {
        val _virtual_method_tmp_[2411087]:int(32)[95] "temp"
        (2411089 'move' _virtual_method_tmp_[2411087](2411091 'getcid' err[170260]))
        (2411093 'virtual method call' deinit[811935] _virtual_method_tmp_[2411087] err[170260])
        const-val call_tmp[2411099]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2411101 'move' call_tmp[2411099](2411103 '_wide_get_locale' err[170260]))
        val isdirect[2411108]:bool[10] "temp"
        (2411110 'move' isdirect[2411108](2411113 call chpl_doDirectExecuteOn[187469] call_tmp[2411099]))
        if isdirect[2411108]
        {
          (2411118 call on_fn[1236631] err[170260])
        }
        {
          val _args_foron_fn[2411121]:_class_localson_fn[2205130] "temp"
          (2411123 'move' _args_foron_fn[2411121](2411125 'stack allocate class' _class_localson_fn[2205130]))
          (2411127 '.=' _args_foron_fn[2411121] _0_tmp[2205133] call_tmp[2411099])
          (2411131 '.=' _args_foron_fn[2411121] _1_arg[2205135] err[170260])
          val _args_vforon_fn[2411135]:c_void_ptr[149] "temp"
          (2411137 'move' _args_vforon_fn[2411135](2411139 'cast_to_void_star' _args_foron_fn[2411121]))
          val _args_sizeon_fn[2411141]:int(64)[13] "temp"
          (2411143 'move' _args_sizeon_fn[2411141](2411145 'sizeof_bundle' _class_localson_fn[2205130]))
          on(2411148 call wrapon_fn[2205164] call_tmp[2411099] _args_vforon_fn[2411135] _args_sizeon_fn[2411141] _args_foron_fn[2411121])
        }
      }
    }
    (522422 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:Error[167984]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680553]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680556 'move' call_tmp[680553](170321 '_get_user_file'))
    const-val call_tmp[680558]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680561 'move' call_tmp[680558](170322 'chpl_lookupFilename' call_tmp[680553]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883601]:Error[167984] "error variable" "temp"
    (1883617 'move' error[1883601] nil[44])
    const-val call_tmp[2325411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325413 'move' call_tmp[2325411](2325415 'string_length_bytes' call_tmp[680558]))
    val errorExists[2221784]:bool[10] "temp"
    (2221789 'move' errorExists[2221784](2221786 '!=' error[1883601] nil[44]))
    if errorExists[2221784]
    {
      gotoErrorHandling handler[1883602] handler[1883602]
    }
    const-val ret[2257639]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257641]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257643 'move' call_tmp[2257641](2257645 'cast' c_ptr(uint(8))[937612] call_tmp[680558]))
    val error[2257650]:Error[167984] "error variable" "temp"
    (2257652 'move' error[2257650] nil[44])
    const-val ret[2257655]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257657]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257659]:Error[167984] "error variable" "temp"
    (2257661 'move' error[2257659] nil[44])
    const-val ret_tmp[2257664]:string[26] "temp"
    (2257667 call decodeByteBuffer[173938] call_tmp[2257641] call_tmp[2325411] strict[173692] error[2257659] ret_tmp[2257664])
    (2257673 'move' call_tmp[2257657] ret_tmp[2257664])
    val errorExists[2257676]:bool[10] "temp"
    (2257678 'move' errorExists[2257676](2257680 '!=' error[2257659] nil[44]))
    if errorExists[2257676]
    {
      (2257685 '=' error[2257650] error[2257659])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257694] _endcreateStringWithNewBuffer[2257694]
    }
    (2257691 'move' ret[2257655] call_tmp[2257657])
    label _endcreateStringWithNewBuffer[2257694]
    val errorExists[2257699]:bool[10] "temp"
    (2257701 'move' errorExists[2257699](2257703 '!=' error[2257650] nil[44]))
    if errorExists[2257699]
    {
      (2257708 '=' error[1883601] error[2257650])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257717] _endcreateStringWithNewBuffer[2257717]
    }
    (2257714 'move' ret[2257639] ret[2257655])
    label _endcreateStringWithNewBuffer[2257717]
    val errorExists[2221792]:bool[10] "temp"
    (2221797 'move' errorExists[2221792](2221794 '!=' error[1883601] nil[44]))
    if errorExists[2221792]
    {
      gotoErrorHandling handler[1883602] handler[1883602]
    }
    (544811 'move' myFileS[170328] ret[2257639])
    label handler[1883602]
    val errorExists[2221800]:bool[10] "temp"
    (2221805 'move' errorExists[2221800](2221802 '!=' error[1883601] nil[44]))
    if errorExists[2221800]
    {
      (1883623 call chpl_uncaught_error[170289] error[1883601])
    }
    const-val call_tmp[680568]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680571 'move' call_tmp[680568](170346 '_get_user_line'))
    val coerce_tmp[1829636]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829641 'move' coerce_tmp[1829636] err[170286])
    ref call_tmp[2338149]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2338151 'move' call_tmp[2338149](2338153 '.' coerce_tmp[1829636] thrownFileId[167925]))
    const-val call_tmp[680580]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680583 'move' call_tmp[680580](170358 'chpl_lookupFilename' call_tmp[2338149]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1883634]:Error[167984] "error variable" "temp"
    (1883650 'move' error[1883634] nil[44])
    const-val call_tmp[2325433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325435 'move' call_tmp[2325433](2325437 'string_length_bytes' call_tmp[680580]))
    val errorExists[2221808]:bool[10] "temp"
    (2221813 'move' errorExists[2221808](2221810 '!=' error[1883634] nil[44]))
    if errorExists[2221808]
    {
      gotoErrorHandling handler[1883635] handler[1883635]
    }
    const-val ret[2257737]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2257739]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2257741 'move' call_tmp[2257739](2257743 'cast' c_ptr(uint(8))[937612] call_tmp[680580]))
    val error[2257748]:Error[167984] "error variable" "temp"
    (2257750 'move' error[2257748] nil[44])
    const-val ret[2257753]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257757]:Error[167984] "error variable" "temp"
    (2257759 'move' error[2257757] nil[44])
    const-val ret_tmp[2257762]:string[26] "temp"
    (2257765 call decodeByteBuffer[173938] call_tmp[2257739] call_tmp[2325433] strict[173692] error[2257757] ret_tmp[2257762])
    (2257771 'move' call_tmp[2257755] ret_tmp[2257762])
    val errorExists[2257774]:bool[10] "temp"
    (2257776 'move' errorExists[2257774](2257778 '!=' error[2257757] nil[44]))
    if errorExists[2257774]
    {
      (2257783 '=' error[2257748] error[2257757])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257792] _endcreateStringWithNewBuffer[2257792]
    }
    (2257789 'move' ret[2257753] call_tmp[2257755])
    label _endcreateStringWithNewBuffer[2257792]
    val errorExists[2257797]:bool[10] "temp"
    (2257799 'move' errorExists[2257797](2257801 '!=' error[2257748] nil[44]))
    if errorExists[2257797]
    {
      (2257806 '=' error[1883634] error[2257748])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257815] _endcreateStringWithNewBuffer[2257815]
    }
    (2257812 'move' ret[2257737] ret[2257753])
    label _endcreateStringWithNewBuffer[2257815]
    val errorExists[2221816]:bool[10] "temp"
    (2221821 'move' errorExists[2221816](2221818 '!=' error[1883634] nil[44]))
    if errorExists[2221816]
    {
      gotoErrorHandling handler[1883635] handler[1883635]
    }
    (544829 'move' thrownFileS[170364] ret[2257737])
    label handler[1883635]
    val errorExists[2221824]:bool[10] "temp"
    (2221829 'move' errorExists[2221824](2221826 '!=' error[1883634] nil[44]))
    if errorExists[2221824]
    {
      (1883656 call chpl_uncaught_error[170289] error[1883634])
    }
    val coerce_tmp[1829678]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829683 'move' coerce_tmp[1829678] err[170286])
    const-val coerce_tmp[1829688]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1829692 'move' coerce_tmp[1829688](2564349 '.v' coerce_tmp[1829678] thrownLine[167917]))
    (544832 'noop')
    const-val call_tmp[680597]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906990]:string[26] "temp"
    (170408 call chpl_describe_error[169835] err[170286] ret_tmp[1906990])
    (1906993 'move' call_tmp[680597] ret_tmp[1906990])
    const-val call_tmp[680602]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905596]:string[26] "temp"
    (170409 call +[38345] "uncaught " call_tmp[680597] ret_tmp[1905596])
    (1905599 'move' call_tmp[680602] ret_tmp[1905596])
    const-val call_tmp[680607]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905602]:string[26] "temp"
    (170428 call +[38345] call_tmp[680602] "\n  " ret_tmp[1905602])
    (1905605 'move' call_tmp[680607] ret_tmp[1905602])
    const-val call_tmp[680612]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905608]:string[26] "temp"
    (170431 call +[38345] call_tmp[680607] thrownFileS[170364] ret_tmp[1905608])
    (1905611 'move' call_tmp[680612] ret_tmp[1905608])
    const-val call_tmp[680617]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905614]:string[26] "temp"
    (170434 call +[38345] call_tmp[680612] ":" ret_tmp[1905614])
    (1905617 'move' call_tmp[680617] ret_tmp[1905614])
    const-val call_tmp[680622]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908988]:string[26] "temp"
    (170438 call _cast[1063342] coerce_tmp[1829688] ret_tmp[1908988])
    (1908991 'move' call_tmp[680622] ret_tmp[1908988])
    const-val call_tmp[680627]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905620]:string[26] "temp"
    (170440 call +[38345] call_tmp[680617] call_tmp[680622] ret_tmp[1905620])
    (1905623 'move' call_tmp[680627] ret_tmp[1905620])
    const-val call_tmp[680632]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905626]:string[26] "temp"
    (170459 call +[38345] call_tmp[680627] ": thrown here" ret_tmp[1905626])
    (1905629 'move' call_tmp[680632] ret_tmp[1905626])
    const-val call_tmp[680637]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905632]:string[26] "temp"
    (170462 call +[38345] call_tmp[680632] "\n  " ret_tmp[1905632])
    (1905635 'move' call_tmp[680637] ret_tmp[1905632])
    const-val call_tmp[680642]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905638]:string[26] "temp"
    (170465 call +[38345] call_tmp[680637] myFileS[170328] ret_tmp[1905638])
    (1905641 'move' call_tmp[680642] ret_tmp[1905638])
    const-val call_tmp[680647]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905644]:string[26] "temp"
    (170468 call +[38345] call_tmp[680642] ":" ret_tmp[1905644])
    (1905647 'move' call_tmp[680647] ret_tmp[1905644])
    const-val call_tmp[680652]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908994]:string[26] "temp"
    (170472 call _cast[1063342] call_tmp[680568] ret_tmp[1908994])
    (1908997 'move' call_tmp[680652] ret_tmp[1908994])
    const-val call_tmp[680657]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905650]:string[26] "temp"
    (170474 call +[38345] call_tmp[680647] call_tmp[680652] ret_tmp[1905650])
    (1905653 'move' call_tmp[680657] ret_tmp[1905650])
    const-val call_tmp[680662]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905656]:string[26] "temp"
    (170493 call +[38345] call_tmp[680657] ": uncaught here" ret_tmp[1905656])
    (1905659 'move' call_tmp[680662] ret_tmp[1905656])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544834 'move' s[170495] call_tmp[680662])
    const-val coerce_tmp[2269397]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269399 'move' coerce_tmp[2269397](2269401 '.v' s[170495] locale_id[30757]))
    const-val call_tmp[2269404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269406 'move' call_tmp[2269404](2269408 '!=' coerce_tmp[2269397] chpl_nodeID[208207]))
    if call_tmp[2269404]
    {
      (2269414 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2269417]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269419 'move' coerce_tmp[2269417](2269421 '.v' s[170495] buff[30740]))
    const-val call_tmp[2269424]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269426 'move' call_tmp[2269424](2269428 'cast' c_string[19] coerce_tmp[2269417]))
    (170507 call chpl_error_preformatted[1829762] call_tmp[2269424])
    ref i_x[2246177]:string[26] "temp"
    (2246181 'move' i_x[2246177](2246179 'set reference' s[170495]))
    (2246185 call deinit[30834] i_x[2246177])
    ref i_x[2246189]:string[26] "temp"
    (2246193 'move' i_x[2246189](2246191 'set reference' call_tmp[680657]))
    (2246197 call deinit[30834] i_x[2246189])
    ref i_x[2246201]:string[26] "temp"
    (2246205 'move' i_x[2246201](2246203 'set reference' call_tmp[680652]))
    (2246209 call deinit[30834] i_x[2246201])
    ref i_x[2246213]:string[26] "temp"
    (2246217 'move' i_x[2246213](2246215 'set reference' call_tmp[680647]))
    (2246221 call deinit[30834] i_x[2246213])
    ref i_x[2246225]:string[26] "temp"
    (2246229 'move' i_x[2246225](2246227 'set reference' call_tmp[680642]))
    (2246233 call deinit[30834] i_x[2246225])
    ref i_x[2246237]:string[26] "temp"
    (2246241 'move' i_x[2246237](2246239 'set reference' call_tmp[680637]))
    (2246245 call deinit[30834] i_x[2246237])
    ref i_x[2246249]:string[26] "temp"
    (2246253 'move' i_x[2246249](2246251 'set reference' call_tmp[680632]))
    (2246257 call deinit[30834] i_x[2246249])
    ref i_x[2246261]:string[26] "temp"
    (2246265 'move' i_x[2246261](2246263 'set reference' call_tmp[680627]))
    (2246269 call deinit[30834] i_x[2246261])
    ref i_x[2246273]:string[26] "temp"
    (2246277 'move' i_x[2246273](2246275 'set reference' call_tmp[680622]))
    (2246281 call deinit[30834] i_x[2246273])
    ref i_x[2246285]:string[26] "temp"
    (2246289 'move' i_x[2246285](2246287 'set reference' call_tmp[680617]))
    (2246293 call deinit[30834] i_x[2246285])
    ref i_x[2246297]:string[26] "temp"
    (2246301 'move' i_x[2246297](2246299 'set reference' call_tmp[680612]))
    (2246305 call deinit[30834] i_x[2246297])
    ref i_x[2246309]:string[26] "temp"
    (2246313 'move' i_x[2246309](2246311 'set reference' call_tmp[680607]))
    (2246317 call deinit[30834] i_x[2246309])
    ref i_x[2246321]:string[26] "temp"
    (2246325 'move' i_x[2246321](2246323 'set reference' call_tmp[680602]))
    (2246329 call deinit[30834] i_x[2246321])
    ref i_x[2246333]:string[26] "temp"
    (2246337 'move' i_x[2246333](2246335 'set reference' call_tmp[680597]))
    (2246341 call deinit[30834] i_x[2246333])
    ref i_x[2246345]:string[26] "temp"
    (2246349 'move' i_x[2246345](2246347 'set reference' thrownFileS[170364]))
    (2246353 call deinit[30834] i_x[2246345])
    ref i_x[2246357]:string[26] "temp"
    (2246361 'move' i_x[2246357](2246359 'set reference' myFileS[170328]))
    (2246365 call deinit[30834] i_x[2246357])
    (522426 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:Error[167984]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522428 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522432]:Error[167984] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[2520457]:TaskErrors[169702] "temp"
    val ret[2520459]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2520461]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2520463 'move' coerce_tmp[2520461](2520465 'cast' object[22] err[170532]))
    const-val call_tmp[2520468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2520470 'move' call_tmp[2520468](2520472 'ptr_eq' coerce_tmp[2520461] nil[44]))
    if call_tmp[2520468]
    {
      (2520477 'move' ret[2520459](2520479 'cast' TaskErrors[169702] nil[44]))
      gotoReturn _end__cast[2520495] _end__cast[2520495]
    }
    val call_tmp[2520485]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
    (2520487 'move' call_tmp[2520485](2520489 'dynamic_cast' _formal_type_tmp_[2520457] err[170532]))
    (2520492 'move' ret[2520459] call_tmp[2520485])
    label _end__cast[2520495]
    val coerce_tmp[1830025]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1830030 'move' coerce_tmp[1830025](1830027 'cast' object[22] ret[2520459]))
    const-val call_tmp[2229611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229613 'move' call_tmp[2229611](2229615 'ptr_neq' coerce_tmp[1830025] nil[44]))
    if call_tmp[2229611]
    {
      (1830210 'move' ret[522432] err[170532])
      gotoReturn _end_chpl_forall_error[522430] _end_chpl_forall_error[522430]
    }
    val new_temp[1830191]:TaskErrors[169702] "dead after last mention" "temp"
    (1830193 'move' new_temp[1830191](1830037 call _new[1830141] err[170532]))
    (522444 'move' ret[522432](1830212 'cast' Error[167984] new_temp[1830191]))
    label _end_chpl_forall_error[522430]
    (522434 return ret[522432])
  }
  function chpl_enum_cast_error[1072044](const in arg casted[1072046]:uint(8)[100], const  ref arg enumName[1072048]:string[26], ref arg error_out[1885908]:Error[167984]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1072054]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909320]:string[26] "temp"
    (1072059 call _cast[1072108] casted[1072046] ret_tmp[1909320])
    (1909323 'move' call_tmp[1072054] ret_tmp[1909320])
    const-val call_tmp[1072062]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905788]:string[26] "temp"
    (1072067 call +[38345] "bad cast from int '" call_tmp[1072054] ret_tmp[1905788])
    (1905791 'move' call_tmp[1072062] ret_tmp[1905788])
    const-val call_tmp[1072070]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905794]:string[26] "temp"
    (1072075 call +[38345] call_tmp[1072062] "' to enum '" ret_tmp[1905794])
    (1905797 'move' call_tmp[1072070] ret_tmp[1905794])
    const-val call_tmp[1072078]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905800]:string[26] "temp"
    (1072083 call +[38345] call_tmp[1072070] enumName[1072048] ret_tmp[1905800])
    (1905803 'move' call_tmp[1072078] ret_tmp[1905800])
    const-val call_tmp[1072086]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073744]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073746 'move' new_temp[1073744](1073670 call _new[1073691] call_tmp[1072078] "'"))
    const-val initTemp[1073765]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
    (1073768 call init[1064398] initTemp[1073765] new_temp[1073744])
    (1072088 'move' call_tmp[1072086] initTemp[1073765])
    val call_tmp[1072096]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073782]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1909192]:owned Error[966647] "temp"
    ref i_x[2376638]:owned IllegalArgumentError[1064747] "temp"
    (2376642 'move' i_x[2376638](2376640 'set reference' call_tmp[1072086]))
    ref i__retArg[2376644]:owned Error[966647] "temp"
    (2376648 'move' i__retArg[2376644](2376646 'set reference' ret_tmp[1909192]))
    val _formal_tmp_x[2376651]:owned IllegalArgumentError[1064747] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2376653 'move' _formal_tmp_x[2376651] i_x[2376638])
    const-val ret[2376656]:owned Error[966647] "dead after last mention" "RVV" "temp"
    ref i_this[2376658]:owned IllegalArgumentError[1064747] "temp"
    (2376660 'move' i_this[2376658](2376662 'set reference' _formal_tmp_x[2376651]))
    val coerce_tmp[2376664]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2376666 'move' coerce_tmp[2376664](2376668 '.v' i_this[2376658] chpl_p[1064742]))
    val call_tmp[2376671]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (2376673 'move' call_tmp[2376671](2376675 'cast' Error[167984] coerce_tmp[2376664]))
    ref i_this[2376683]:owned IllegalArgumentError[1064747] "temp"
    (2376685 'move' i_this[2376683](2376687 'set reference' _formal_tmp_x[2376651]))
    val tmp[2376689]:IllegalArgumentError[168246] "temp"
    (2376691 'move' tmp[2376689](2376693 'cast' IllegalArgumentError[168246] nil[44]))
    (2376696 '.=' i_this[2376683] chpl_p[1064742] tmp[2376689])
    val coerce_tmp[2376700]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2376702 'move' coerce_tmp[2376700](2376704 'cast' object[22] call_tmp[2376671]))
    const-val call_tmp[2376707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2376709 'move' call_tmp[2376707](2376711 'ptr_eq' coerce_tmp[2376700] nil[44]))
    if call_tmp[2376707]
    {
      (2376717 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[2376720]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2376722]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
    (2376725 call init[968283] initTemp[2376722] call_tmp[2376671])
    (2376728 'move' call_tmp[2376720] initTemp[2376722])
    (2376731 'move' ret[2376656] call_tmp[2376720])
    (2376735 call chpl__autoDestroy[1678826] _formal_tmp_x[2376651])
    (2376739 '=' i__retArg[2376644] ret[2376656])
    (1909195 'move' coerce_tmp[1073782] ret_tmp[1909192])
    const-val _formal_tmp_in_err[1073961]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073965 'move' _formal_tmp_in_err[1073961] coerce_tmp[1073782])
    (1072098 'move' call_tmp[1072096](1072101 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073961]))
    (1885921 '=' error_out[1885908] call_tmp[1072096])
    ref i_x[2247389]:string[26] "temp"
    (2247393 'move' i_x[2247389](2247391 'set reference' call_tmp[1072078]))
    (2247397 call deinit[30834] i_x[2247389])
    ref i_x[2247401]:string[26] "temp"
    (2247405 'move' i_x[2247401](2247403 'set reference' call_tmp[1072070]))
    (2247409 call deinit[30834] i_x[2247401])
    ref i_x[2247413]:string[26] "temp"
    (2247417 'move' i_x[2247413](2247415 'set reference' call_tmp[1072062]))
    (2247421 call deinit[30834] i_x[2247413])
    ref i_x[2247425]:string[26] "temp"
    (2247429 'move' i_x[2247425](2247427 'set reference' call_tmp[1072054]))
    (2247433 call deinit[30834] i_x[2247425])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[1885910] _endchpl_enum_cast_error[1885910]
    ref i_x[2247473]:string[26] "temp"
    (2247477 'move' i_x[2247473](2247475 'set reference' call_tmp[1072078]))
    (2247481 call deinit[30834] i_x[2247473])
    ref i_x[2247461]:string[26] "temp"
    (2247465 'move' i_x[2247461](2247463 'set reference' call_tmp[1072070]))
    (2247469 call deinit[30834] i_x[2247461])
    ref i_x[2247449]:string[26] "temp"
    (2247453 'move' i_x[2247449](2247451 'set reference' call_tmp[1072062]))
    (2247457 call deinit[30834] i_x[2247449])
    ref i_x[2247437]:string[26] "temp"
    (2247441 'move' i_x[2247437](2247439 'set reference' call_tmp[1072054]))
    (2247445 call deinit[30834] i_x[2247437])
    label _endchpl_enum_cast_error[1885910]
    (1072105 return _void[55])
  }
  function on_fn[935527](ref arg this[1882168]:chpl_TaskErrors[168348], const in arg err[1882170]:Error[167984]) : void[4] "on" "resolved"
  {
    ref call_tmp[2338466]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2338468 'move' call_tmp[2338466](2338470 '.' this[1882168] _errorsLock[168271]))
    const-val call_tmp[2321755]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2321757 'move' call_tmp[2321755](2321759 '_wide_get_locale' call_tmp[2338466]))
    val isdirect[2321764]:bool[10] "temp"
    (2321766 'move' isdirect[2321764](2321769 call chpl_doDirectExecuteOn[187469] call_tmp[2321755]))
    if isdirect[2321764]
    {
      (2321774 call on_fn[935662] call_tmp[2338466])
    }
    {
      val _args_foron_fn[2321777]:_class_localson_fn[2198955] "temp"
      (2321779 'move' _args_foron_fn[2321777](2321781 'stack allocate class' _class_localson_fn[2198955]))
      (2321783 '.=' _args_foron_fn[2321777] _0_tmp[2198958] call_tmp[2321755])
      ref tmp[2321787]:chpl_LocalSpinlock[187432] "temp"
      (2321789 'move' tmp[2321787](2321791 'set reference' call_tmp[2338466]))
      (2321793 '.=' _args_foron_fn[2321777] _1_this[2198960] tmp[2321787])
      val _args_vforon_fn[2321797]:c_void_ptr[149] "temp"
      (2321799 'move' _args_vforon_fn[2321797](2321801 'cast_to_void_star' _args_foron_fn[2321777]))
      val _args_sizeon_fn[2321803]:int(64)[13] "temp"
      (2321805 'move' _args_sizeon_fn[2321803](2321807 'sizeof_bundle' _class_localson_fn[2198955]))
      on(2321810 call wrapon_fn[2198995] call_tmp[2321755] _args_vforon_fn[2321797] _args_sizeon_fn[2321803] _args_foron_fn[2321777])
    }
    val coerce_tmp[1232592]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1232596 'move' coerce_tmp[1232592](2564994 '.v' this[1882168] _head[168266]))
    (544708 'noop')
    val coerce_tmp[1232599]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232604 'move' coerce_tmp[1232599] err[1882170])
    (2565000 '.=' coerce_tmp[1232599] _next[167912] coerce_tmp[1232592])
    (2565006 '.=' this[1882168] _head[168266] err[1882170])
    ref call_tmp[2338476]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2338478 'move' call_tmp[2338476](2338480 '.' this[1882168] _errorsLock[168271]))
    ref call_tmp[2322482]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2322484 'move' call_tmp[2322482](2322486 '.' call_tmp[2338476] l[187317]))
    const-val call_tmp[2322496]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322498 'move' call_tmp[2322496](2322500 '_wide_get_locale' call_tmp[2322482]))
    val isdirect[2322505]:bool[10] "temp"
    (2322507 'move' isdirect[2322505](2322510 call chpl_doDirectExecuteOn[187469] call_tmp[2322496]))
    if isdirect[2322505]
    {
      (2322515 call on_fn[1233271] call_tmp[2322482] 0)
    }
    {
      val _args_foron_fn[2322519]:_class_localson_fn[2204622] "temp"
      (2322521 'move' _args_foron_fn[2322519](2322523 'stack allocate class' _class_localson_fn[2204622]))
      (2322525 '.=' _args_foron_fn[2322519] _0_tmp[2204625] call_tmp[2322496])
      ref tmp[2322529]:AtomicBool[45877] "temp"
      (2322531 'move' tmp[2322529](2322533 'set reference' call_tmp[2322482]))
      (2322535 '.=' _args_foron_fn[2322519] _1_this[2204627] tmp[2322529])
      (2322539 '.=' _args_foron_fn[2322519] _2_value[2204629] 0)
      val _args_vforon_fn[2322543]:c_void_ptr[149] "temp"
      (2322545 'move' _args_vforon_fn[2322543](2322547 'cast_to_void_star' _args_foron_fn[2322519]))
      val _args_sizeon_fn[2322549]:int(64)[13] "temp"
      (2322551 'move' _args_sizeon_fn[2322549](2322553 'sizeof_bundle' _class_localson_fn[2204622]))
      on(2322556 call wrapon_fn[2204668] call_tmp[2322496] _args_vforon_fn[2322543] _args_sizeon_fn[2322549] _args_foron_fn[2322519])
    }
    (935534 return _void[55])
  }
  function chpl_error_preformatted[1829762](const in arg c_string[1829764]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1829770 return _void[55])
  }
  function wrapon_fn[2198784](const in arg dummy_locale_arg[2198786]:chpl_localeID_t[209352], in arg buf[2198788]:c_void_ptr[149], in arg buf_size[2198790]:int(64)[13], in arg c[2198792]:_class_localson_fn[2198738]) : void[4] "on block"
  {
    ref _1_this[2198804]:chpl_TaskErrors[168348] "temp"
    (2198809 'move' _1_this[2198804](2198806 '.v' c[2198792] _1_this[2198743]))
    val _2_err[2198812]:Error[167984] "temp"
    (2198817 'move' _2_err[2198812](2198814 '.v' c[2198792] _2_err[2198745]))
    (2198795 call on_fn[935527] _1_this[2198804] _2_err[2198812])
    (2198820 return _void[55])
  }
}