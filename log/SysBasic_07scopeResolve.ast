AST dump for SysBasic after pass scopeResolve.
Module use list: ChapelStandard SysCTypes 

{
  unknown c_float[223613] "extern" "type variable"(223612 call real(64)[16] 32)
  unknown c_double[223620] "extern" "type variable"(223619 call real(64)[16] 64)
  unknown off_t[223627] "extern" "type variable"(223626 call int(64)[13] 64)
  unknown mode_t[223634] "extern" "type variable"(223633 call uint(64)[115] 32)
  unknown socklen_t[223641] "extern" "type variable"(223640 call int(64)[13] 32)
  function chpl_cstdout[223646]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
  {
  }
  { scopeless type
    _file[155]
  }
  function chpl_cstderr[223654]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
  {
  }
  { scopeless type
    _file[155]
  }
  function chpl_cnullfile[223662]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
  {
  }
  { scopeless type
    _file[155]
  }
  type syserr[223672]
  unknown err_t[223675] "extern" "type variable" c_int[20552]
  unknown fd_t[223679] "extern" "type variable" c_int[20552]
  function qio_err_eq[223688](arg a[223685] :
  syserr[223672], arg b[223691] :
  syserr[223672]) : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    c_int[20552]
  }
  function qio_err_to_int[223704](arg a[223701] :
  syserr[223672]) : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    (223709 call int(64)[13] 32)
  }
  function qio_int_to_err[223722](arg a[223719] :
  (223718 call int(64)[13] 32)) : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    syserr[223672]
  }
  function qio_err_iserr[223734](arg a[223731] :
  syserr[223672]) : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    c_int[20552]
  }
  function ENOERR[223742]() : _unknown[51] "inline" "no parens"
  {
    (223748 return(223746 call _cast err_t[223675] 0))
  }
  function ==[223759](arg a[223756] :
  syserr[223672], arg b[223762] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (223776 return(223774 call !=(223769 call qio_err_eq a[223756] b[223762])(223772 call _cast c_int[20552] 0)))
  }
  function ==[223787](arg a[223784] :
  syserr[223672], arg b[223793] :
  (223792 call int(64)[13] 32)) : _unknown[51] "inline" "no doc"
  {
    (223809 return(223807 call ==(223799 call qio_err_to_int a[223784])(223805 call _cast(223804 call int(64)[13] 32) b[223793])))
  }
  function ==[223820](arg a[223817] :
  syserr[223672], arg b[223826] :
  (223825 call int(64)[13] 64)) : _unknown[51] "inline" "no doc"
  {
    (223842 return(223840 call ==(223832 call qio_err_to_int a[223817])(223838 call _cast(223837 call int(64)[13] 32) b[223826])))
  }
  function ==[223856](arg a[223853] :
  (223852 call int(64)[13] 32), arg b[223859] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (223875 return(223873 call ==(223867 call _cast(223866 call int(64)[13] 32) a[223853])(223872 call qio_err_to_int b[223859])))
  }
  function ==[223889](arg a[223886] :
  (223885 call int(64)[13] 64), arg b[223892] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (223908 return(223906 call ==(223900 call _cast(223899 call int(64)[13] 32) a[223886])(223905 call qio_err_to_int b[223892])))
  }
  function !=[223919](arg a[223916] :
  syserr[223672], arg b[223922] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (223931 return(223929 call !(223927 call == a[223916] b[223922])))
  }
  function !=[223942](arg a[223939] :
  syserr[223672], arg b[223948] :
  (223947 call int(64)[13] 32)) : _unknown[51] "inline" "no doc"
  {
    (223957 return(223955 call !(223953 call == a[223939] b[223948])))
  }
  function !=[223968](arg a[223965] :
  syserr[223672], arg b[223974] :
  (223973 call int(64)[13] 64)) : _unknown[51] "inline" "no doc"
  {
    (223983 return(223981 call !(223979 call == a[223965] b[223974])))
  }
  function !=[223997](arg a[223994] :
  (223993 call int(64)[13] 32), arg b[224000] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224009 return(224007 call !(224005 call == a[223994] b[224000])))
  }
  function !=[224023](arg a[224020] :
  (224019 call int(64)[13] 64), arg b[224026] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224035 return(224033 call !(224031 call == a[224020] b[224026])))
  }
  function ![224046](arg a[224043] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224058 return(224056 call ==(224051 call qio_err_iserr a[224043])(224054 call _cast c_int[20552] 0)))
  }
  function _cond_test[224069](arg a[224066] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224081 return(224079 call !=(224074 call qio_err_iserr a[224066])(224077 call _cast c_int[20552] 0)))
  }
  function _cast[224095](arg t[224092] :
  (224091 call int(64)[13] 32), arg x[224098] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224105 return(224104 call qio_err_to_int x[224098]))
  }
  function _cast[224119](arg t[224116] :
  (224115 call int(64)[13] 64), arg x[224122] :
  syserr[223672]) : _unknown[51] "inline" "no doc"
  {
    (224135 return(224133 call _cast(224132 call int(64)[13] 64)(224128 call qio_err_to_int x[224122])))
  }
  function _cast[224146](arg t[224143] :
  syserr[223672], arg x[224152] :
  (224151 call int(64)[13] 32)) : _unknown[51] "inline" "no doc"
  {
    (224159 return(224158 call qio_int_to_err x[224152]))
  }
  function _cast[224170](arg t[224167] :
  syserr[223672], arg x[224176] :
  (224175 call int(64)[13] 64)) : _unknown[51] "inline" "no doc"
  {
    (224189 return(224188 call qio_int_to_err(224185 call _cast(224184 call int(64)[13] 32) x[224176])))
  }
  function =[224200](ref arg ret[224197] :
  syserr[223672], arg x[224203] :
  syserr[223672]) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (224210 '=' ret[224197] x[224203])
  }
  function =[224221](ref arg ret[224218] :
  syserr[223672], arg x[224227] :
  (224226 call int(64)[13] 32)) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (224237 '=' ret[224218](224236 call qio_int_to_err x[224227]))
  }
  function =[224248](ref arg ret[224245] :
  syserr[223672], arg x[224254] :
  (224253 call int(64)[13] 64)) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (224270 '=' ret[224245](224269 call qio_int_to_err(224266 call _cast(224265 call int(64)[13] 32) x[224254])))
  }
  function =[224281](ref arg ret[224278] :
  err_t[223675], arg x[224284] :
  syserr[223672]) : _unknown[51] "assignop" "inline" "no doc" "no return value for void"
  {
    (224297 '=' ret[224278](224295 call _cast err_t[223675](224293 call qio_err_to_int x[224284])))
  }
  function chpl_macro_int_EEOF[224304]() : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    err_t[223675]
  }
  function EEOF[224312]() : _unknown[51] "inline" "no parens"
  {
    (224320 return(224318 call _cast err_t[223675](224316 call chpl_macro_int_EEOF)))
  }
  function chpl_macro_int_ESHORT[224327]() : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    err_t[223675]
  }
  function ESHORT[224335]() : _unknown[51] "inline" "no parens"
  {
    (224343 return(224341 call _cast err_t[223675](224339 call chpl_macro_int_ESHORT)))
  }
  function chpl_macro_int_EFORMAT[224350]() : _unknown[51] "extern" "local args" "no fn body" "private" "no return value for void"
  {
  }
  { scopeless type
    err_t[223675]
  }
  function EFORMAT[224358]() : _unknown[51] "inline" "no parens"
  {
    (224366 return(224364 call _cast err_t[223675](224362 call chpl_macro_int_EFORMAT)))
  }
  const E2BIG[224372] "const" "extern" err_t[223675]
  (224375 'end of statement')
  const EACCES[224377] "const" "extern" err_t[223675]
  (224380 'end of statement')
  const EADDRINUSE[224382] "const" "extern" err_t[223675]
  (224385 'end of statement')
  const EADDRNOTAVAIL[224387] "const" "extern" err_t[223675]
  (224390 'end of statement')
  const EAFNOSUPPORT[224392] "const" "extern" err_t[223675]
  (224395 'end of statement')
  const EAGAIN[224397] "const" "extern" err_t[223675]
  (224400 'end of statement')
  const EALREADY[224402] "const" "extern" err_t[223675]
  (224405 'end of statement')
  const EBADE[224407] "const" "extern" err_t[223675]
  (224410 'end of statement')
  const EBADF[224412] "const" "extern" err_t[223675]
  (224415 'end of statement')
  const EBADFD[224417] "const" "extern" err_t[223675]
  (224420 'end of statement')
  const EBADMSG[224422] "const" "extern" err_t[223675]
  (224425 'end of statement')
  const EBADR[224427] "const" "extern" err_t[223675]
  (224430 'end of statement')
  const EBADRQC[224432] "const" "extern" err_t[223675]
  (224435 'end of statement')
  const EBADSLT[224437] "const" "extern" err_t[223675]
  (224440 'end of statement')
  const EBUSY[224442] "const" "extern" err_t[223675]
  (224445 'end of statement')
  const ECANCELED[224447] "const" "extern" err_t[223675]
  (224450 'end of statement')
  const ECHILD[224452] "const" "extern" err_t[223675]
  (224455 'end of statement')
  const ECHRNG[224457] "const" "extern" err_t[223675]
  (224460 'end of statement')
  const ECOMM[224462] "const" "extern" err_t[223675]
  (224465 'end of statement')
  const ECONNABORTED[224467] "const" "extern" err_t[223675]
  (224470 'end of statement')
  const ECONNREFUSED[224472] "const" "extern" err_t[223675]
  (224475 'end of statement')
  const ECONNRESET[224477] "const" "extern" err_t[223675]
  (224480 'end of statement')
  const EDEADLK[224482] "const" "extern" err_t[223675]
  (224485 'end of statement')
  const EDESTADDRREQ[224487] "const" "extern" err_t[223675]
  (224490 'end of statement')
  const EDOM[224492] "const" "extern" err_t[223675]
  (224495 'end of statement')
  const EDQUOT[224497] "const" "extern" err_t[223675]
  (224500 'end of statement')
  const EEXIST[224502] "const" "extern" err_t[223675]
  (224505 'end of statement')
  const EFAULT[224507] "const" "extern" err_t[223675]
  (224510 'end of statement')
  const EFBIG[224512] "const" "extern" err_t[223675]
  (224515 'end of statement')
  const EHOSTDOWN[224517] "const" "extern" err_t[223675]
  (224520 'end of statement')
  const EHOSTUNREACH[224522] "const" "extern" err_t[223675]
  (224525 'end of statement')
  const EIDRM[224527] "const" "extern" err_t[223675]
  (224530 'end of statement')
  const EILSEQ[224532] "const" "extern" err_t[223675]
  (224535 'end of statement')
  const EINPROGRESS[224537] "const" "extern" err_t[223675]
  (224540 'end of statement')
  const EINTR[224542] "const" "extern" err_t[223675]
  (224545 'end of statement')
  const EINVAL[224547] "const" "extern" err_t[223675]
  (224550 'end of statement')
  const EIO[224552] "const" "extern" err_t[223675]
  (224555 'end of statement')
  const EISCONN[224557] "const" "extern" err_t[223675]
  (224560 'end of statement')
  const EISDIR[224562] "const" "extern" err_t[223675]
  (224565 'end of statement')
  const EISNAM[224567] "const" "extern" err_t[223675]
  (224570 'end of statement')
  const EKEYEXPIRED[224572] "const" "extern" err_t[223675]
  (224575 'end of statement')
  const EKEYREJECTED[224577] "const" "extern" err_t[223675]
  (224580 'end of statement')
  const EKEYREVOKED[224582] "const" "extern" err_t[223675]
  (224585 'end of statement')
  const EL2HLT[224587] "const" "extern" err_t[223675]
  (224590 'end of statement')
  const EL2NSYNC[224592] "const" "extern" err_t[223675]
  (224595 'end of statement')
  const EL3HLT[224597] "const" "extern" err_t[223675]
  (224600 'end of statement')
  const EL3RST[224602] "const" "extern" err_t[223675]
  (224605 'end of statement')
  const ELIBACC[224607] "const" "extern" err_t[223675]
  (224610 'end of statement')
  const ELIBBAD[224612] "const" "extern" err_t[223675]
  (224615 'end of statement')
  const ELIBMAX[224617] "const" "extern" err_t[223675]
  (224620 'end of statement')
  const ELIBSCN[224622] "const" "extern" err_t[223675]
  (224625 'end of statement')
  const ELIBEXEC[224627] "const" "extern" err_t[223675]
  (224630 'end of statement')
  const ELOOP[224632] "const" "extern" err_t[223675]
  (224635 'end of statement')
  const EMEDIUMTYPE[224637] "const" "extern" err_t[223675]
  (224640 'end of statement')
  const EMFILE[224642] "const" "extern" err_t[223675]
  (224645 'end of statement')
  const EMLINK[224647] "const" "extern" err_t[223675]
  (224650 'end of statement')
  const EMSGSIZE[224652] "const" "extern" err_t[223675]
  (224655 'end of statement')
  const EMULTIHOP[224657] "const" "extern" err_t[223675]
  (224660 'end of statement')
  const ENAMETOOLONG[224662] "const" "extern" err_t[223675]
  (224665 'end of statement')
  const ENETDOWN[224667] "const" "extern" err_t[223675]
  (224670 'end of statement')
  const ENETRESET[224672] "const" "extern" err_t[223675]
  (224675 'end of statement')
  const ENETUNREACH[224677] "const" "extern" err_t[223675]
  (224680 'end of statement')
  const ENFILE[224682] "const" "extern" err_t[223675]
  (224685 'end of statement')
  const ENOBUFS[224687] "const" "extern" err_t[223675]
  (224690 'end of statement')
  const ENODATA[224692] "const" "extern" err_t[223675]
  (224695 'end of statement')
  const ENODEV[224697] "const" "extern" err_t[223675]
  (224700 'end of statement')
  const ENOENT[224702] "const" "extern" err_t[223675]
  (224705 'end of statement')
  const ENOEXEC[224707] "const" "extern" err_t[223675]
  (224710 'end of statement')
  const ENOKEY[224712] "const" "extern" err_t[223675]
  (224715 'end of statement')
  const ENOLCK[224717] "const" "extern" err_t[223675]
  (224720 'end of statement')
  const ENOLINK[224722] "const" "extern" err_t[223675]
  (224725 'end of statement')
  const ENOMEDIUM[224727] "const" "extern" err_t[223675]
  (224730 'end of statement')
  const ENOMEM[224732] "const" "extern" err_t[223675]
  (224735 'end of statement')
  const ENOMSG[224737] "const" "extern" err_t[223675]
  (224740 'end of statement')
  const ENONET[224742] "const" "extern" err_t[223675]
  (224745 'end of statement')
  const ENOPKG[224747] "const" "extern" err_t[223675]
  (224750 'end of statement')
  const ENOPROTOOPT[224752] "const" "extern" err_t[223675]
  (224755 'end of statement')
  const ENOSPC[224757] "const" "extern" err_t[223675]
  (224760 'end of statement')
  const ENOSR[224762] "const" "extern" err_t[223675]
  (224765 'end of statement')
  const ENOSTR[224767] "const" "extern" err_t[223675]
  (224770 'end of statement')
  const ENOSYS[224772] "const" "extern" err_t[223675]
  (224775 'end of statement')
  const ENOTBLK[224777] "const" "extern" err_t[223675]
  (224780 'end of statement')
  const ENOTCONN[224782] "const" "extern" err_t[223675]
  (224785 'end of statement')
  const ENOTDIR[224787] "const" "extern" err_t[223675]
  (224790 'end of statement')
  const ENOTEMPTY[224792] "const" "extern" err_t[223675]
  (224795 'end of statement')
  const ENOTSOCK[224797] "const" "extern" err_t[223675]
  (224800 'end of statement')
  const ENOTSUP[224802] "const" "extern" err_t[223675]
  (224805 'end of statement')
  const ENOTTY[224807] "const" "extern" err_t[223675]
  (224810 'end of statement')
  const ENOTUNIQ[224812] "const" "extern" err_t[223675]
  (224815 'end of statement')
  const ENXIO[224817] "const" "extern" err_t[223675]
  (224820 'end of statement')
  const EOPNOTSUPP[224822] "const" "extern" err_t[223675]
  (224825 'end of statement')
  const EOVERFLOW[224827] "const" "extern" err_t[223675]
  (224830 'end of statement')
  const EPERM[224832] "const" "extern" err_t[223675]
  (224835 'end of statement')
  const EPFNOSUPPORT[224837] "const" "extern" err_t[223675]
  (224840 'end of statement')
  const EPIPE[224842] "const" "extern" err_t[223675]
  (224845 'end of statement')
  const EPROTO[224847] "const" "extern" err_t[223675]
  (224850 'end of statement')
  const EPROTONOSUPPORT[224852] "const" "extern" err_t[223675]
  (224855 'end of statement')
  const EPROTOTYPE[224857] "const" "extern" err_t[223675]
  (224860 'end of statement')
  const ERANGE[224862] "const" "extern" err_t[223675]
  (224865 'end of statement')
  const EREMCHG[224867] "const" "extern" err_t[223675]
  (224870 'end of statement')
  const EREMOTE[224872] "const" "extern" err_t[223675]
  (224875 'end of statement')
  const EREMOTEIO[224877] "const" "extern" err_t[223675]
  (224880 'end of statement')
  const ERESTART[224882] "const" "extern" err_t[223675]
  (224885 'end of statement')
  const EROFS[224887] "const" "extern" err_t[223675]
  (224890 'end of statement')
  const ESHUTDOWN[224892] "const" "extern" err_t[223675]
  (224895 'end of statement')
  const ESPIPE[224897] "const" "extern" err_t[223675]
  (224900 'end of statement')
  const ESOCKTNOSUPPORT[224902] "const" "extern" err_t[223675]
  (224905 'end of statement')
  const ESRCH[224907] "const" "extern" err_t[223675]
  (224910 'end of statement')
  const ESTALE[224912] "const" "extern" err_t[223675]
  (224915 'end of statement')
  const ESTRPIPE[224917] "const" "extern" err_t[223675]
  (224920 'end of statement')
  const ETIME[224922] "const" "extern" err_t[223675]
  (224925 'end of statement')
  const ETIMEDOUT[224927] "const" "extern" err_t[223675]
  (224930 'end of statement')
  const ETXTBSY[224932] "const" "extern" err_t[223675]
  (224935 'end of statement')
  const EUCLEAN[224937] "const" "extern" err_t[223675]
  (224940 'end of statement')
  const EUNATCH[224942] "const" "extern" err_t[223675]
  (224945 'end of statement')
  const EUSERS[224947] "const" "extern" err_t[223675]
  (224950 'end of statement')
  const EWOULDBLOCK[224952] "const" "extern" err_t[223675]
  (224955 'end of statement')
  const EXDEV[224957] "const" "extern" err_t[223675]
  (224960 'end of statement')
  const EXFULL[224962] "const" "extern" err_t[223675]
  (224965 'end of statement')
  (355407 'used modules list'(353113 'use' ChapelStandard[20267])(223606 'use' SysCTypes[20943]))
}