AST dump for ChapelError after pass bulkCopyRecords.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2086403] val _runtime_hdr[2086404]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086406]:chpl_localeID_t[209294] ref _1_this[2086408]:chpl_TaskErrors[168302] val _2_err[2086410]:Error[167938]
  function chpl__init_ChapelError[416017]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522337 return _void[55])
  }
  function Error[167938].init[167896](const in arg this[167940]:Error[167938]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462424]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462432 'move' super_tmp[462424](462425 '.v' this[167940] super[355696]))
    (462428 call init[749363] super_tmp[462424])
    val tmp[462359]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679386]:object[22] "dead at end of block" "maybe param" "temp"
    (679389 'move' call_tmp[679386](462370 'cast' object[22] this[167940]))
    val chpl__thisAsParent[462367]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544554 'move' chpl__thisAsParent[462367](965581 call chpl__initCopy[945271] call_tmp[679386]))
    (462373 'setcid' chpl__thisAsParent[462367])
    val tmp[462375]:Error[167938] "dead after last mention" "temp"
    val init_coerce_tmp[965584]:Error[167938] "dead after last mention" "temp"
    (965587 'move' init_coerce_tmp[965584](965599 'cast' Error[167938] nil[44]))
    (462378 'move' tmp[462375] init_coerce_tmp[965584])
    (462380 '.=' this[167940] _next[167866] tmp[462375])
    val tmp[462385]:int(64)[13] "dead after last mention" "temp"
    (965604 'move' tmp[462385] 0)
    (462390 '.=' this[167940] thrownLine[167871] tmp[462385])
    val tmp[462394]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679391]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (965607 'move' tmp[462394] 0)
    (462401 '.=' this[167940] thrownFileId[167879] tmp[462394])
    val tmp[462405]:string[26] "dead after last mention" "temp"
    (965609 call init[30760] tmp[462405])
    (462410 '.=' this[167940] _msg[167884] tmp[462405])
    val tmp[462415]:bool[10] "dead after last mention" "temp"
    (462418 'move' tmp[462415] 0)
    (462420 '.=' this[167940] _hasThrowInfo[167890] tmp[462415])
    (462435 'setcid' this[167940])
    (522086 return _void[55])
  }
  function Error[167938].init[167912](const in arg this[167944]:Error[167938], const  ref arg msg[167909]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462507]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462515 'move' super_tmp[462507](462508 '.v' this[167944] super[355696]))
    (462511 call init[749363] super_tmp[462507])
    val tmp[462441]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679401]:object[22] "dead at end of block" "maybe param" "temp"
    (679404 'move' call_tmp[679401](462452 'cast' object[22] this[167944]))
    val chpl__thisAsParent[462449]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544556 'move' chpl__thisAsParent[462449](1064067 call chpl__initCopy[945271] call_tmp[679401]))
    (462455 'setcid' chpl__thisAsParent[462449])
    val tmp[462458]:Error[167938] "dead after last mention" "temp"
    val init_coerce_tmp[1064070]:Error[167938] "dead after last mention" "temp"
    (1064073 'move' init_coerce_tmp[1064070](1064087 'cast' Error[167938] nil[44]))
    (462461 'move' tmp[462458] init_coerce_tmp[1064070])
    (462463 '.=' this[167944] _next[167866] tmp[462458])
    val tmp[462467]:int(64)[13] "dead after last mention" "temp"
    (1064092 'move' tmp[462467] 0)
    (462472 '.=' this[167944] thrownLine[167871] tmp[462467])
    val tmp[462476]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679406]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1064095 'move' tmp[462476] 0)
    (462483 '.=' this[167944] thrownFileId[167879] tmp[462476])
    val tmp[462487]:string[26] "dead after last mention" "temp"
    (462490 call init=[30771] tmp[462487] msg[167909])
    (462492 '.=' this[167944] _msg[167884] tmp[462487])
    val tmp[462498]:bool[10] "dead after last mention" "temp"
    (462501 'move' tmp[462498] 0)
    (462503 '.=' this[167944] _hasThrowInfo[167890] tmp[462498])
    (462518 'setcid' this[167944])
    (522088 return _void[55])
  }
  function Error[167938].message[167929](const in arg this[167948]:Error[167938], ref arg _retArg[1831095]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522092]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679413]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
    (679416 'move' call_tmp[679413](388457 call _msg[811694] this[167948]))
    (522097 'move' ret[522092](1831099 call chpl__initCopy[981348] call_tmp[679413]))
    (1831097 '=' _retArg[1831095] ret[522092])
    (1831101 return _void[55])
  }
  function Error[167938]._next[811616](const in arg this[811620]:Error[167938]) ref : _ref(Error)[941020] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811630]:_ref(Error)[941020] "dead after last mention" "RVV" "temp"
    ref call_tmp[811637]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
    (811640 'move' call_tmp[811637](811624 '.' this[811620] _next[167866]))
    (811635 'move' ret[811630] call_tmp[811637])
    (811632 return ret[811630])
  }
  function Error[167938].thrownLine[811642](const in arg this[811646]:Error[167938]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811656]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[811663]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (811666 'move' call_tmp[811663](811650 '.' this[811646] thrownLine[167871]))
    (811661 'move' ret[811656] call_tmp[811663])
    (811658 return ret[811656])
  }
  function Error[167938].thrownFileId[811668](const in arg this[811672]:Error[167938]) ref : _ref(int(32))[936626] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811682]:_ref(int(32))[936626] "dead after last mention" "RVV" "temp"
    ref call_tmp[811689]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
    (811692 'move' call_tmp[811689](811676 '.' this[811672] thrownFileId[167879]))
    (811687 'move' ret[811682] call_tmp[811689])
    (811684 return ret[811682])
  }
  function Error[167938]._msg[811694](const in arg this[811698]:Error[167938]) ref : _ref(string)[937939] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811708]:_ref(string)[937939] "dead after last mention" "RVV" "temp"
    ref call_tmp[811715]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
    (811718 'move' call_tmp[811715](811702 '.' this[811698] _msg[167884]))
    (811713 'move' ret[811708] call_tmp[811715])
    (811710 return ret[811708])
  }
  function Error[167938]._hasThrowInfo[811720](const in arg this[811724]:Error[167938]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811734]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[811741]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (811744 'move' call_tmp[811741](811728 '.' this[811724] _hasThrowInfo[167890]))
    (811739 'move' ret[811734] call_tmp[811741])
    (811736 return ret[811734])
  }
  function Error[167938].deinit[811746](const in arg this[811750]:Error[167938]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1814817]
    ref _field_destructor_tmp_[1814815]:_ref(string)[937939] "temp"
    (1814822 'move' _field_destructor_tmp_[1814815](1814819 '.' this[811750] _msg[167884]))
    (1814824 call deinit[30831] _field_destructor_tmp_[1814815])
    val _parent_destructor_tmp_[1814827]:object[22] "temp"
    (1814832 'move' _parent_destructor_tmp_[1814827](1814828 'cast' object[22] this[811750]))
    (1814834 call deinit[749379] _parent_destructor_tmp_[1814827])
    (811758 return _void[55])
  }
  type Error[167938] val super[355696]:object[22] "super class" val _next[167866]:Error[167938] "no doc" val thrownLine[167871]:int(64)[13] "no doc" val thrownFileId[167879]:int(32)[95] "no doc" val _msg[167884]:string[26] "no doc" val _hasThrowInfo[167890]:bool[10] "no doc"
  function NilThrownError[167983].message[167958](const in arg this[167985]:NilThrownError[167983], ref arg _retArg[1841607]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522101]:string[26] "dead after last mention" "RVV" "temp"
    (522106 'move' ret[522101](1841611 call chpl__initCopy[981348] "thrown error was nil"))
    (1841609 '=' _retArg[1841607] ret[522101])
    (1841613 return _void[55])
  }
  function NilThrownError[167983].init[811786](const in arg this[811789]:NilThrownError[167983]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811802]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (811804 'move' super_tmp[811802](811801 '.v' this[811789] super[355698]))
    (811799 call init[167896] super_tmp[811802])
    val tmp[811807]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[811845]:Error[167938] "dead at end of block" "maybe param" "temp"
    (811848 'move' call_tmp[811845](811818 'cast' Error[167938] this[811789]))
    val chpl__thisAsParent[811815]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (811836 'move' chpl__thisAsParent[811815](969540 call chpl__initCopy[965617] call_tmp[811845]))
    (811821 'setcid' chpl__thisAsParent[811815])
    (811823 'setcid' this[811789])
    (811834 return _void[55])
  }
  function NilThrownError[167983].deinit[811850](const in arg this[811854]:NilThrownError[167983]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814842]
    val _parent_destructor_tmp_[1814837]:Error[167938] "temp"
    (1814844 'move' _parent_destructor_tmp_[1814837](1814838 'cast' Error[167938] this[811854]))
    (1814846 call deinit[811746] _parent_destructor_tmp_[1814837])
    (811862 return _void[55])
  }
  function _new[969549]() : NilThrownError[167983] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804518]:NilThrownError[167983] "temp"
    val ret[969588]:NilThrownError[167983] "dead after last mention" "RVV" "temp"
    val initTemp[969551]:NilThrownError[167983] "dead after last mention" "temp"
    const-val call_tmp[969595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969598 'move' call_tmp[969595](969607 'sizeof_bundle' NilThrownError[167983]))
    const-val cast_tmp[969610]:c_void_ptr[149] "dead after last mention" "temp"
    (969612 'move' cast_tmp[969610](969563 call chpl_here_alloc[187742] call_tmp[969595] 2))
    (969566 'move' initTemp[969551](969614 'cast' NilThrownError[167983] cast_tmp[969610]))
    (969568 'setcid' initTemp[969551])
    (969552 call init[811786] initTemp[969551])
    val tmp[969570]:NilThrownError[167983] "dead after last mention" "temp"
    (969577 'move' tmp[969570] initTemp[969551])
    (969593 'move' ret[969588] tmp[969570])
    (969590 return ret[969588])
  }
  type NilThrownError[167983] val super[355698]:Error[167938] "super class"
  function DecodeError[168094].message[168069](const in arg this[168096]:DecodeError[168094], ref arg _retArg[1841637]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522128]:string[26] "dead after last mention" "RVV" "temp"
    (522133 'move' ret[522128](1841641 call chpl__initCopy[981348] "Invalid UTF-8 character encountered."))
    (1841639 '=' _retArg[1841637] ret[522128])
    (1841643 return _void[55])
  }
  function DecodeError[168094].init[812098](const in arg this[812101]:DecodeError[168094]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812114]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (812116 'move' super_tmp[812114](812113 '.v' this[812101] super[355704]))
    (812111 call init[167896] super_tmp[812114])
    val tmp[812119]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[812157]:Error[167938] "dead at end of block" "maybe param" "temp"
    (812160 'move' call_tmp[812157](812130 'cast' Error[167938] this[812101]))
    val chpl__thisAsParent[812127]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (812148 'move' chpl__thisAsParent[812127](965615 call chpl__initCopy[965617] call_tmp[812157]))
    (812133 'setcid' chpl__thisAsParent[812127])
    (812135 'setcid' this[812101])
    (812146 return _void[55])
  }
  function DecodeError[168094].deinit[812162](const in arg this[812166]:DecodeError[168094]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1814854]
    val _parent_destructor_tmp_[1814849]:Error[167938] "temp"
    (1814856 'move' _parent_destructor_tmp_[1814849](1814850 'cast' Error[167938] this[812166]))
    (1814858 call deinit[811746] _parent_destructor_tmp_[1814849])
    (812174 return _void[55])
  }
  function _new[965642]() : DecodeError[168094] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804512]:DecodeError[168094] "temp"
    val ret[965678]:DecodeError[168094] "dead after last mention" "RVV" "temp"
    val initTemp[965644]:DecodeError[168094] "dead after last mention" "temp"
    const-val call_tmp[965685]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965688 'move' call_tmp[965685](965699 'sizeof_bundle' DecodeError[168094]))
    const-val cast_tmp[965702]:c_void_ptr[149] "dead after last mention" "temp"
    (965704 'move' cast_tmp[965702](965656 call chpl_here_alloc[187742] call_tmp[965685] 1))
    (965659 'move' initTemp[965644](965706 'cast' DecodeError[168094] cast_tmp[965702]))
    (965661 'setcid' initTemp[965644])
    (965645 call init[812098] initTemp[965644])
    val tmp[965663]:DecodeError[168094] "dead after last mention" "temp"
    (965667 'move' tmp[965663] initTemp[965644])
    (965683 'move' ret[965678] tmp[965663])
    (965680 return ret[965678])
  }
  type DecodeError[168094] val super[355704]:Error[167938] "super class"
  function IllegalArgumentError[168200].init[168117](const in arg this[168206]:IllegalArgumentError[168200], const  ref arg info[168114]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462554]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462556 'move' super_tmp[462554](462553 '.v' this[168206] super[355706]))
    (168125 call init[167912] super_tmp[462554] info[168114])
    val tmp[462559]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679435]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679438 'move' call_tmp[679435](462570 'cast' Error[167938] this[168206]))
    val chpl__thisAsParent[462567]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544560 'move' chpl__thisAsParent[462567](1064098 call chpl__initCopy[965617] call_tmp[679435]))
    (462573 'setcid' chpl__thisAsParent[462567])
    (462575 'setcid' this[168206])
    (522137 return _void[55])
  }
  function IllegalArgumentError[168200].init[168136](const in arg this[168210]:IllegalArgumentError[168200], const  ref arg formal[168133]:string[26], const  ref arg info[168139]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[679440]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829779]:string[26] "temp"
    (168160 call +[38342] "illegal argument '" formal[168133] ret_tmp[1829779])
    (1829782 'move' call_tmp[679440] ret_tmp[1829779])
    const-val call_tmp[679445]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829785]:string[26] "temp"
    (168179 call +[38342] call_tmp[679440] "': " ret_tmp[1829785])
    (1829788 'move' call_tmp[679445] ret_tmp[1829785])
    const-val call_tmp[679450]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829791]:string[26] "temp"
    (168182 call +[38342] call_tmp[679445] info[168139] ret_tmp[1829791])
    (1829794 'move' call_tmp[679450] ret_tmp[1829791])
    const-val msg[168184]:string[26] "dead at end of block" "insert auto destroy"
    (544562 'move' msg[168184] call_tmp[679450])
    val super_tmp[462578]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462580 'move' super_tmp[462578](462577 '.v' this[168210] super[355706]))
    (168195 call init[167912] super_tmp[462578] msg[168184])
    val tmp[462583]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679462]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679465 'move' call_tmp[679462](462594 'cast' Error[167938] this[168210]))
    val chpl__thisAsParent[462591]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544564 'move' chpl__thisAsParent[462591](1073493 call chpl__initCopy[965617] call_tmp[679462]))
    (462597 'setcid' chpl__thisAsParent[462591])
    (462599 'setcid' this[168210])
    (1842171 call chpl__autoDestroy[1461530] msg[168184])
    (1842174 call chpl__autoDestroy[1461530] call_tmp[679445])
    (1842177 call chpl__autoDestroy[1461530] call_tmp[679440])
    (522139 return _void[55])
  }
  function IllegalArgumentError[168200].deinit[812202](const in arg this[812206]:IllegalArgumentError[168200]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1814866]
    val _parent_destructor_tmp_[1814861]:Error[167938] "temp"
    (1814868 'move' _parent_destructor_tmp_[1814861](1814862 'cast' Error[167938] this[812206]))
    (1814870 call deinit[811746] _parent_destructor_tmp_[1814861])
    (812214 return _void[55])
  }
  function _new[1064107](const  ref arg info[1064116]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804692]:IllegalArgumentError[168200] "temp"
    val ret[1064146]:IllegalArgumentError[168200] "dead after last mention" "RVV" "temp"
    val initTemp[1064109]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1064153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064156 'move' call_tmp[1064153](1064167 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1064170]:c_void_ptr[149] "dead after last mention" "temp"
    (1064172 'move' cast_tmp[1064170](1064124 call chpl_here_alloc[187742] call_tmp[1064153] 26))
    (1064127 'move' initTemp[1064109](1064174 'cast' IllegalArgumentError[168200] cast_tmp[1064170]))
    (1064129 'setcid' initTemp[1064109])
    (1064110 call init[168117] initTemp[1064109] info[1064116])
    val tmp[1064131]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1064135 'move' tmp[1064131] initTemp[1064109])
    (1064151 'move' ret[1064146] tmp[1064131])
    (1064148 return ret[1064146])
  }
  function _new[1073502](const  ref arg formal[1073511]:string[26], const  ref arg info[1073514]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804702]:IllegalArgumentError[168200] "temp"
    val ret[1073542]:IllegalArgumentError[168200] "dead after last mention" "RVV" "temp"
    val initTemp[1073504]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1073549]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073552 'move' call_tmp[1073549](1073563 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1073566]:c_void_ptr[149] "dead after last mention" "temp"
    (1073568 'move' cast_tmp[1073566](1073520 call chpl_here_alloc[187742] call_tmp[1073549] 26))
    (1073523 'move' initTemp[1073504](1073570 'cast' IllegalArgumentError[168200] cast_tmp[1073566]))
    (1073525 'setcid' initTemp[1073504])
    (1073505 call init[168136] initTemp[1073504] formal[1073511] info[1073514])
    val tmp[1073527]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1073531 'move' tmp[1073527] initTemp[1073504])
    (1073547 'move' ret[1073542] tmp[1073527])
    (1073544 return ret[1073542])
  }
  type IllegalArgumentError[168200] val super[355706]:Error[167938] "super class"
  function _ref(chpl_TaskErrors)[940940].append[168236](ref arg this[168304]:_ref(chpl_TaskErrors)[940940], const in arg err[168233]:Error[167938]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[168277]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[679467]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (679470 'move' call_tmp[679467](168274 '_wide_get_locale' this[168304]))
    (168279 'move' tmp[168277] call_tmp[679467])
    val isdirect[2086386]:bool[10] "temp"
    (2086391 'move' isdirect[2086386](2086388 call chpl_doDirectExecuteOn[187423] tmp[168277]))
    if isdirect[2086386]
    {
      (2086395 call on_fn[935338] this[168304] err[168233])
    }
    {
      val _args_foron_fn[2086413]:_class_localson_fn[2086403] "temp"
      (2086417 'move' _args_foron_fn[2086413](2086415 'stack allocate class' _class_localson_fn[2086403]))
      (2086419 '.=' _args_foron_fn[2086413] _0_tmp[2086406] tmp[168277])
      ref tmp[2086423]:chpl_TaskErrors[168302] "temp"
      (2086427 'move' tmp[2086423](2086425 'set reference' this[168304]))
      (2086429 '.=' _args_foron_fn[2086413] _1_this[2086408] tmp[2086423])
      (2086433 '.=' _args_foron_fn[2086413] _2_err[2086410] err[168233])
      val _args_vforon_fn[2086437]:c_void_ptr[149] "temp"
      (2086441 'move' _args_vforon_fn[2086437](2086439 'cast_to_void_star' _args_foron_fn[2086413]))
      val _args_sizeon_fn[2086443]:int(64)[13] "temp"
      (2086447 'move' _args_sizeon_fn[2086443](2086445 'sizeof_bundle' _class_localson_fn[2086403]))
      on(2086487 call wrapon_fn[2086449] tmp[168277] _args_vforon_fn[2086437] _args_sizeon_fn[2086443] _args_foron_fn[2086413])
    }
    {
    }
    (522141 return _void[55])
  }
  function _ref(chpl_TaskErrors)[940940].empty[168290](const  ref arg this[168308]:_ref(chpl_TaskErrors)[940940]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522145]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679513]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
    (679516 'move' call_tmp[679513](388482 call _head[812216] this[168308]))
    const-val call_tmp[679518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235558]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235562 'move' coerce_tmp[1235558](1235560 'deref' call_tmp[679513]))
    val coerce_tmp[1235564]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235569 'move' coerce_tmp[1235564](1235566 'cast' object[22] coerce_tmp[1235558]))
    (679521 'move' call_tmp[679518](168294 call ==[1146] coerce_tmp[1235564] nil[44]))
    (522150 'move' ret[522145] call_tmp[679518])
    (522147 return ret[522145])
  }
  function _ref(chpl_TaskErrors)[940940]._head[812216](ref arg this[812220]:_ref(chpl_TaskErrors)[940940]) ref : _ref(Error)[941020] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812230]:_ref(Error)[941020] "dead after last mention" "RVV" "temp"
    ref call_tmp[812237]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
    (812240 'move' call_tmp[812237](812224 '.' this[812220] _head[168220]))
    (812235 'move' ret[812230] call_tmp[812237])
    (812232 return ret[812230])
  }
  function _ref(chpl_TaskErrors)[940940]._errorsLock[812242](ref arg this[812246]:_ref(chpl_TaskErrors)[940940]) ref : _ref(chpl_LocalSpinlock)[941071] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812256]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "RVV" "temp"
    ref call_tmp[812263]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
    (812266 'move' call_tmp[812263](812250 '.' this[812246] _errorsLock[168225]))
    (812261 'move' ret[812256] call_tmp[812263])
    (812258 return ret[812256])
  }
  function _ref(chpl_TaskErrors)[940940].init[812268](ref arg this[812271]:_ref(chpl_TaskErrors)[940940], in arg _head[812274]:Error[167938], const  ref arg _errorsLock[812289]:chpl_LocalSpinlock[187386]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945176]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945179 'move' _formal_tmp__errorsLock[945176] _errorsLock[812289])
    (812303 '.=' this[812271] _head[168220] _head[812274])
    (812306 '.=' this[812271] _errorsLock[168225] _formal_tmp__errorsLock[945176])
    (812310 return _void[55])
  }
  function init_default__errorsLock[941051](ref arg _retArg[1831921]:_ref(chpl_LocalSpinlock)[941071]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[941053]:chpl_LocalSpinlock[187386] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[941058]:chpl_LocalSpinlock[187386] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[945141]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1831927]:AtomicBool[45874] "temp"
    (945143 call init_default_l[944828] ret_tmp[1831927])
    (1831930 'move' default_arg_l[945141] ret_tmp[1831927])
    (944818 call init[820321] _errorsLock[941058] default_arg_l[945141])
    (944814 'move' ret[941053] _errorsLock[941058])
    (1831923 '=' _retArg[1831921] ret[941053])
    (1831925 return _void[55])
  }
  function init_default__head[940970]() : Error[167938] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[940972]:Error[167938] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[940977]:Error[167938] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[940981]:Error[167938] "dead after last mention" "temp"
    val _formal_type[940983]:Error[167938] "dead after last mention" "temp" "type variable"
    (940991 'move' tmp[940981](941039 'cast' Error[167938] nil[44]))
    (940994 'move' _head[940977] tmp[940981])
    (941036 'move' ret[940972] _head[940977])
    (940975 return ret[940972])
  }
  function _ref(chpl_TaskErrors)[940940].deinit[812377](const  ref arg this[812381]:_ref(chpl_TaskErrors)[940940]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1814875]
    ref _field_destructor_tmp_[1814873]:_ref(chpl_LocalSpinlock)[941071] "temp"
    (1814880 'move' _field_destructor_tmp_[1814873](1814877 '.' this[812381] _errorsLock[168225]))
    (1814882 call deinit[820394] _field_destructor_tmp_[1814873])
    (812389 return _void[55])
  }
  type chpl_TaskErrors[168302] val _head[168220]:Error[167938] val _errorsLock[168225]:chpl_LocalSpinlock[187386]
  function TaskErrors[169656].init[168338](const in arg this[169658]:TaskErrors[169656], ref arg group[168335]:_ref(chpl_TaskErrors)[940940]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462645]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462653 'move' super_tmp[462645](462646 '.v' this[169658] super[355708]))
    (462649 call init[167896] super_tmp[462645])
    val tmp[462605]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679528]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679531 'move' call_tmp[679528](462616 'cast' Error[167938] this[169658]))
    val chpl__thisAsParent[462613]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544568 'move' chpl__thisAsParent[462613](1237195 call chpl__initCopy[965617] call_tmp[679528]))
    (462619 'setcid' chpl__thisAsParent[462613])
    ref call_tmp[679535]:_ref(Error)[941020] "dead at end of block" "maybe param" "temp"
    (679538 'move' call_tmp[679535](168346 call _head[812216] group[168335]))
    val head[168349]:Error[167938] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1237201]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1237205 'move' coerce_tmp[1237201](1237203 'deref' call_tmp[679535]))
    (1842180 '=' head[168349] coerce_tmp[1237201])
    (544570 'noop')
    ref call_tmp[679542]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
    (679545 'move' call_tmp[679542](168355 call _head[812216] group[168335]))
    (168359 call =[1237209] call_tmp[679542] nil[44])
    val tmp[462621]:int(64)[13] "dead after last mention" "temp"
    (1240967 'move' tmp[462621] 0)
    (462626 '.=' this[169658] nErrors[168317] tmp[462621])
    val tmp[462630]:c_ptr(owned Error?)[1235615] "dead after last mention" "temp"
    val call_tmp[679547]:owned Error?[966413] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679552]:c_ptr(owned Error?)[1235615] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1240972 'move' tmp[462630](1240970 'cast' c_ptr(owned Error?)[1235615] nil[44]))
    (462639 '.=' this[169658] errorsArray[168328] tmp[462630])
    (462644 'setcid' this[169658])
    val cur[168372]:Error[167938] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544572]:Error[167938] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168377]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544586 'move' n[168377] 0)
    (544583 'move' cur[168372](1237272 call chpl__initCopy[967374] head[168349]))
    {
      val tmp[168487]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1237275]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237280 'move' coerce_tmp[1237275](1237277 'cast' object[22] cur[168372]))
      (679560 'move' call_tmp[679557](168508 call !=[1485] coerce_tmp[1237275] nil[44]))
      (168511 'move' tmp[168487] call_tmp[679557])
      WhileDo[168492]
      {
        {
          val call_tmp[679562]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (679565 'move' call_tmp[679562](168391 call postfix![967774] cur[168372]))
          ref call_tmp[679569]:_ref(Error)[941020] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237284]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237289 'move' coerce_tmp[1237284] call_tmp[679562])
          (679572 'move' call_tmp[679569](168393 call _next[811616] coerce_tmp[1237284]))
          val curnext[168396]:Error[167938] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1237294]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1237298 'move' coerce_tmp[1237294](1237296 'deref' call_tmp[679569]))
          (1842183 '=' curnext[168396] coerce_tmp[1237294])
          (544588 'noop')
          val call_tmp[679574]:TaskErrors[169656] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237477]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237482 'move' coerce_tmp[1237477] cur[168372])
          (679577 'move' call_tmp[679574](168408 call _cast[1237378] coerce_tmp[1237477]))
          val asTaskErr[168410]:TaskErrors[169656] "dead at end of block" "insert auto destroy"
          (544590 'move' asTaskErr[168410](1237605 call chpl__initCopy[1237496] call_tmp[679574]))
          const-val call_tmp[679579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1237608]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1237613 'move' coerce_tmp[1237608](1237610 'cast' object[22] asTaskErr[168410]))
          (679582 'move' call_tmp[679579](168416 call ==[1146] coerce_tmp[1237608] nil[44]))
          const-val call_tmp[679584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679587 'move' call_tmp[679584] call_tmp[679579])
          if call_tmp[679584]
          {
            (168420 call +=[451315] n[168377] 1)
          }
          {
            {
              ref _indexOfInterest[168443]:_ref(owned Error?)[966422] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168444]:_ic_these_TaskErrors[1237976] "dead at end of block" "expr temp" "temp"
              val call_tmp[679589]:TaskErrors[169656] "dead at end of block" "expr temp" "maybe param" "temp"
              (679592 'move' call_tmp[679589] asTaskErr[168410])
              (168453 'move' _iterator[168444](168451 call _getIterator[1237932] call_tmp[679589]))
              {
                val ret[1905371]:_ir_these_TaskErrors[1237982] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1905373]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1905375]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1905377]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                const-val this[1905554]:TaskErrors[169656] "temp"
                (1905559 'move' this[1905554](1905556 '.v' _iterator[168444] F0_this[2006195]))
                (1905379 'move' call_tmp[1905377](1905382 call nErrors[814031] this[1905554]))
                const-val call_tmp[1905384]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1905386]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1905388 'move' coerce_tmp[1905386](1905390 'deref' call_tmp[1905377]))
                const-val ret_tmp[1905392]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                (1905395 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1905386] ret_tmp[1905392])
                (1905399 'move' call_tmp[1905384] ret_tmp[1905392])
                (1905402 'move' _iterator[1905375](1905405 call _getIterator[1103805] call_tmp[1905384]))
                {
                  val ret[1965758]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1965760]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1965762]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1965764]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1965766]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                  const-val low[1966243]:int(64)[13] "temp"
                  (1966248 'move' low[1966243](1966245 '.v' _iterator[1905375] F0_low[2010431]))
                  const-val count[1966250]:int(64)[13] "temp"
                  (1966255 'move' count[1966250](1966252 '.v' _iterator[1905375] F1_count[2010435]))
                  (1965769 call chpl_direct_counted_range_iter_helper[1102098] low[1966243] count[1966250] ret_tmp[1965766])
                  (1965773 'move' call_tmp[1965764] ret_tmp[1965766])
                  (1965776 'move' _iterator[1965762](1965779 call _getIterator[1103555] call_tmp[1965764]))
                  {
                    val ret[1965782]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                    val call_tmp[1965784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1965786]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1965788]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1965790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1965792]:int(64)[13] "temp"
                    (1965794 'move' count[1965792](1965796 '.v' _iterator[1965762] F1_count[2014907]))
                    (1965799 'move' call_tmp[1965790](1965802 call <[948398] count[1965792]))
                    (1965804 'move' tmp[1965788] call_tmp[1965790])
                    (1965807 'move' tmp[1965786] call_tmp[1965790])
                    const-val call_tmp[1965810]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1965812 'move' call_tmp[1965810] call_tmp[1965790])
                    if call_tmp[1965790]
                    {
                      (1965818 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1965821]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1965823]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1965825]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1965827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1965829]:int(64)[13] "temp"
                    (1965831 'move' count[1965829](1965833 '.v' _iterator[1965762] F1_count[2014907]))
                    (1965836 'move' call_tmp[1965827](1965839 call ==[435628] count[1965829] 0))
                    (1965842 'move' tmp[1965825] call_tmp[1965827])
                    if call_tmp[1965827]
                    {
                      const-val tmp[1965847]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1965849]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1965851]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1965853]:int(64)[13] "temp"
                      (1965855 'move' low[1965853](1965857 '.v' _iterator[1965762] F0_low[2014903]))
                      (1965860 'move' call_tmp[1965851](1965863 call _cast[956034] low[1965853]))
                      const-val call_tmp[1965865]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1965867]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1965869 'move' coerce_tmp[1965867](1965871 'cast' uint(64)[115] 1))
                      (1965874 'move' call_tmp[1965865](1965877 call -[962193] call_tmp[1965851]))
                      const-val call_tmp[1965879]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1965881 'move' call_tmp[1965879](1965884 call _cast[953543] call_tmp[1965865]))
                      const-val ret_tmp[1965886]:2*int(64)[1040056] "temp"
                      const-val low[1965888]:int(64)[13] "temp"
                      (1965890 'move' low[1965888](1965892 '.v' _iterator[1965762] F0_low[2014903]))
                      (1965896 call _build_tuple[1040014] low[1965888] call_tmp[1965879] ret_tmp[1965886])
                      (1965900 'move' tmp[1965847] ret_tmp[1965886])
                      (1965903 'move' tmp[1965823] tmp[1965847])
                    }
                    {
                      const-val tmp[1965907]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1965909]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1965911]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1965913]:int(64)[13] "temp"
                      (1965915 'move' count[1965913](1965917 '.v' _iterator[1965762] F1_count[2014907]))
                      (1965920 'move' call_tmp[1965911] count[1965913])
                      const-val call_tmp[1965923]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1965925]:int(64)[13] "temp"
                      (1965927 'move' count[1965925](1965929 '.v' _iterator[1965762] F1_count[2014907]))
                      (1965932 'move' call_tmp[1965923](1965935 call -[962226] count[1965925]))
                      const-val call_tmp[1965937]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1965939]:int(64)[13] "temp"
                      (1965941 'move' low[1965939](1965943 '.v' _iterator[1965762] F0_low[2014903]))
                      (1965946 'move' call_tmp[1965937](1965949 call +[439636] low[1965939] call_tmp[1965923]))
                      const-val ret_tmp[1965952]:2*int(64)[1040056] "temp"
                      const-val low[1965954]:int(64)[13] "temp"
                      (1965956 'move' low[1965954](1965958 '.v' _iterator[1965762] F0_low[2014903]))
                      (1965962 call _build_tuple[1040014] low[1965954] call_tmp[1965937] ret_tmp[1965952])
                      (1965966 'move' tmp[1965907] ret_tmp[1965952])
                      (1965969 'move' tmp[1965823] tmp[1965907])
                    }
                    (1965973 '=' tmp[1965821] tmp[1965823])
                    (1965976 'noop')
                    1
                    ref call_tmp[1965978]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1965980 'move' call_tmp[1965978](1965982 '.' tmp[1965821] x0[1040052]))
                    const-val start[1965985]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1965987]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1965989 'move' coerce_tmp[1965987](1965991 'deref' call_tmp[1965978]))
                    (1965993 '=' start[1965985] coerce_tmp[1965987])
                    (1965996 'noop')
                    ref call_tmp[1965997]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1965999 'move' call_tmp[1965997](1966001 '.' tmp[1965821] x1[1040054]))
                    const-val end[1966004]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1966006]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1966008 'move' coerce_tmp[1966006](1966010 'deref' call_tmp[1965997]))
                    (1966012 '=' end[1966004] coerce_tmp[1966006])
                    (1966015 'noop')
                    val _indexOfInterest[1966016]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1966018]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1966020]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1966022]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                    (1966025 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1965987] coerce_tmp[1966006] ret_tmp[1966022])
                    (1966029 'move' call_tmp[1966020] ret_tmp[1966022])
                    (1966032 'move' _iterator[1966018](1966035 call _getIterator[1103301] call_tmp[1966020]))
                    {
                      val ret[1994592]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                      val call_tmp[1994594]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1994597 call chpl_range_check_stride[1102844])
                      val i[1994598]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1994600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1994602 'move' i[1994598] 0)
                      val call_tmp[1994605]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1994607]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1994842]:int(64)[13] "temp"
                      (1994847 'move' low[1994842](1994844 '.v' _iterator[1966018] F0_low[2016401]))
                      (1994609 'move' default_arg_first[1994607](1994612 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1994842]))
                      const-val default_arg_last[1994614]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1994849]:int(64)[13] "temp"
                      (1994854 'move' high[1994849](1994851 '.v' _iterator[1966018] F1_high[2016405]))
                      (1994616 'move' default_arg_last[1994614](1994619 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1994849]))
                      const-val _return_tmp_[1994621]:bool[10] "dead after last mention" "temp"
                      const-val low[1994856]:int(64)[13] "temp"
                      (1994861 'move' low[1994856](1994858 '.v' _iterator[1966018] F0_low[2016401]))
                      const-val high[1994863]:int(64)[13] "temp"
                      (1994868 'move' high[1994863](1994865 '.v' _iterator[1966018] F1_high[2016405]))
                      (1994623 'move' _return_tmp_[1994621](1994626 call chpl_checkIfRangeIterWillOverflow[1096076] low[1994856] high[1994863] 1 default_arg_first[1994607] default_arg_last[1994614] 1))
                      CForLoop[1994633]
                      {
                        const-val yret[1994648]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1994650 'move' yret[1994648] i[1994598])
                        const-val _yieldedIndex[1994664]:int(64)[13] "temp"
                        (1994840 'move' _yieldedIndex[1994664] i[1994598])
                        {
                          const-val i[1994666]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1994668 'move' i[1994666] _yieldedIndex[1994664])
                          const-val yret[1994671]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1994673 'move' yret[1994671] _yieldedIndex[1994664])
                          const-val _yieldedIndex[1994676]:int(64)[13] "temp"
                          (1994678 'move' _yieldedIndex[1994676] _yieldedIndex[1994664])
                          {
                            const-val i[1994682]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1994684 'move' i[1994682] _yieldedIndex[1994676])
                            const-val yret[1994687]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1994689 'move' yret[1994687] _yieldedIndex[1994676])
                            const-val _yieldedIndex[1994692]:int(64)[13] "temp"
                            (1994694 'move' _yieldedIndex[1994692] _yieldedIndex[1994676])
                            {
                              const-val i[1994698]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1994700 'move' i[1994698] _yieldedIndex[1994692])
                              ref call_tmp[1994703]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1994705]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                              const-val this[1994707]:TaskErrors[169656] "temp"
                              (1994709 'move' this[1994707](1994711 '.v' _iterator[168444] F0_this[2006195]))
                              (1994714 'move' _this_tmp_[1994705](1994717 call errorsArray[814057] this[1994707]))
                              val coerce_tmp[1994719]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1994721 'move' coerce_tmp[1994719](1994723 'deref' _this_tmp_[1994705]))
                              (1994725 'move' call_tmp[1994703](1994728 call this[1235753] coerce_tmp[1994719] _yieldedIndex[1994692]))
                              const-val call_tmp[1994731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1994733]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1994735 'move' coerce_tmp[1994733](1994738 call borrow[1235828] call_tmp[1994703]))
                              val coerce_tmp[1994740]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1994742 'move' coerce_tmp[1994740](1994744 'cast' object[22] coerce_tmp[1994733]))
                              (1994747 'move' call_tmp[1994731](1994750 call !=[1485] coerce_tmp[1994740] nil[44]))
                              const-val call_tmp[1994753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1994755 'move' call_tmp[1994753] call_tmp[1994731])
                              if call_tmp[1994731]
                              {
                                ref yret[1994760]:_ref(owned Error?)[966422] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1994762]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1994764]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                                const-val this[1994766]:TaskErrors[169656] "temp"
                                (1994768 'move' this[1994766](1994770 '.v' _iterator[168444] F0_this[2006195]))
                                (1994773 'move' _this_tmp_[1994764](1994776 call errorsArray[814057] this[1994766]))
                                val coerce_tmp[1994778]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1994780 'move' coerce_tmp[1994778](1994782 'deref' _this_tmp_[1994764]))
                                (1994784 'move' call_tmp[1994762](1994787 call this[1235753] coerce_tmp[1994778] i[1994698]))
                                ref _yieldedIndex[1994790]:_ref(owned Error?)[966422] "temp"
                                (1994792 'move' _yieldedIndex[1994790] call_tmp[1994762])
                                {
                                  ref e[1994796]:_ref(owned Error?)[966422] "index var" "insert auto destroy"
                                  (1994798 'move' e[1994796] _yieldedIndex[1994790])
                                  {
                                    const-val call_tmp[1994802]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1994804]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1994806 'move' coerce_tmp[1994804](1994809 call borrow[1235828] e[1994796]))
                                    val coerce_tmp[1994811]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1994813 'move' coerce_tmp[1994811](1994815 'cast' object[22] coerce_tmp[1994804]))
                                    (1994818 'move' call_tmp[1994802](1994821 call !=[1485] coerce_tmp[1994811] nil[44]))
                                    const-val call_tmp[1994824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1994826 'move' call_tmp[1994824] call_tmp[1994802])
                                    if call_tmp[1994824]
                                    {
                                      (1994832 call +=[451315] n[168377] 1)
                                    }
                                  }
                                  label _continueLabel[1994836]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1994870]:int(64)[13] "temp"
                          (1994875 'move' low[1994870](1994872 '.v' _iterator[1966018] F0_low[2016401]))
                          (1994635 '=' i[1994598] low[1994870])
                        }
                        {
                          const-val high[1994877]:int(64)[13] "temp"
                          (1994882 'move' high[1994877](1994879 '.v' _iterator[1966018] F1_high[2016405]))
                          (1994639 '<=' i[1994598] high[1994877])
                        }
                        {
                          val call_tmp[1994643]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1994645 '+=' i[1994598] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1994660]
                    }
                    (1966083 call _freeIterator[1103474] _iterator[1966018])
                    (1966086 call chpl__autoDestroy[1534672] tmp[1965821])
                    label _endchpl_direct_counted_range_iter_helper[1966088]
                  }
                  (1966091 call _freeIterator[1103724] _iterator[1965762])
                  label _endchpl_direct_counted_range_iter[1966093]
                }
                (1905503 call _freeIterator[1103974] _iterator[1905375])
                label _endthese[1905505]
              }
              label _breakLabel[168449]
              (1842192 call _freeIterator[1238233] _iterator[168444])
            }
          }
          (168484 call =[1232446] cur[168372] curnext[168396])
        }
        label _continueLabel[168490]
        const-val call_tmp[679604]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1238318]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1238323 'move' coerce_tmp[1238318](1238320 'cast' object[22] cur[168372]))
        (679607 'move' call_tmp[679604](168498 call !=[1485] coerce_tmp[1238318] nil[44]))
        (168501 'move' tmp[168487] call_tmp[679604])
        tmp[168487]
      }
      label _breakLabel[168491]
    }
    ref call_tmp[679611]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (679614 'move' call_tmp[679611](388510 call nErrors[814031] this[169658]))
    (168516 call =[435327] call_tmp[679611] n[168377])
    ref call_tmp[679618]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "maybe param" "temp"
    (679621 'move' call_tmp[679618](388518 call errorsArray[814057] this[169658]))
    val call_tmp[679623]:owned Error?[966413] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679628]:c_ptr(owned Error?)[1235615] "dead after last mention" "expr temp" "maybe param" "temp"
    (679631 'move' call_tmp[679628](168527 call c_calloc[1238337] n[168377]))
    (168528 call =[1238662] call_tmp[679618] call_tmp[679628])
    val idx[168532]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544592 'move' idx[168532] 0)
    (168538 call =[1232446] cur[168372] head[168349])
    {
      val tmp[168683]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679633]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1238690]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1238695 'move' coerce_tmp[1238690](1238692 'cast' object[22] cur[168372]))
      (679636 'move' call_tmp[679633](168704 call !=[1485] coerce_tmp[1238690] nil[44]))
      (168707 'move' tmp[168683] call_tmp[679633])
      WhileDo[168688] hazard
      {
        {
          val call_tmp[679638]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (679641 'move' call_tmp[679638](168546 call postfix![967774] cur[168372]))
          ref call_tmp[679645]:_ref(Error)[941020] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238699]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238704 'move' coerce_tmp[1238699] call_tmp[679638])
          (679648 'move' call_tmp[679645](168548 call _next[811616] coerce_tmp[1238699]))
          val curnext[168551]:Error[167938] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1238709]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1238713 'move' coerce_tmp[1238709](1238711 'deref' call_tmp[679645]))
          (1842186 '=' curnext[168551] coerce_tmp[1238709])
          (544594 'noop')
          val call_tmp[679650]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
          (679653 'move' call_tmp[679650](168557 call postfix![967774] cur[168372]))
          ref call_tmp[679657]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1238717]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238722 'move' coerce_tmp[1238717] call_tmp[679650])
          (679660 'move' call_tmp[679657](168559 call _next[811616] coerce_tmp[1238717]))
          (168563 call =[1237209] call_tmp[679657] nil[44])
          val call_tmp[679662]:TaskErrors[169656] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238726]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238731 'move' coerce_tmp[1238726] cur[168372])
          (679665 'move' call_tmp[679662](168573 call _cast[1237378] coerce_tmp[1238726]))
          val asTaskErr[168575]:TaskErrors[169656] "dead at end of block" "insert auto destroy"
          (544596 'move' asTaskErr[168575](1238734 call chpl__initCopy[1237496] call_tmp[679662]))
          const-val call_tmp[679667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1238737]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238742 'move' coerce_tmp[1238737](1238739 'cast' object[22] asTaskErr[168575]))
          (679670 'move' call_tmp[679667](168581 call ==[1146] coerce_tmp[1238737] nil[44]))
          const-val call_tmp[679672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679675 'move' call_tmp[679672] call_tmp[679667])
          if call_tmp[679672]
          {
            ref call_tmp[679679]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1238746]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
            (1238748 'move' _this_tmp_[1238746](388534 call errorsArray[814057] this[169658]))
            val coerce_tmp[1238753]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1238757 'move' coerce_tmp[1238753](1238755 'deref' _this_tmp_[1238746]))
            (679682 'move' call_tmp[679679](168586 call this[1235753] coerce_tmp[1238753] idx[168532]))
            val call_tmp[679686]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
            (679689 'move' call_tmp[679686](168591 call postfix![967774] cur[168372]))
            (168594 call retain[1238775] call_tmp[679679] call_tmp[679686])
            (168599 call +=[451315] idx[168532] 1)
          }
          {
            {
              ref _indexOfInterest[168634]:_ref(owned Error?)[966422] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168635]:_ic_these_TaskErrors[1237976] "dead at end of block" "expr temp" "temp"
              val call_tmp[679691]:TaskErrors[169656] "dead at end of block" "expr temp" "maybe param" "temp"
              (679694 'move' call_tmp[679691] asTaskErr[168575])
              const-val call_tmp[679698]:_ir_these_TaskErrors[1237982] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1239013]:TaskErrors[169656] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1239018 'move' coerce_tmp[1239013] call_tmp[679691])
              const-val ret_tmp[1831103]:_ir_these_TaskErrors[1237982] "temp"
              (168610 call these[168862] coerce_tmp[1239013] ret_tmp[1831103])
              (1831106 'move' call_tmp[679698] ret_tmp[1831103])
              (168644 'move' _iterator[168635](168642 call _getIterator[1237991] call_tmp[679698]))
              {
                val ret[1905576]:_ir_these_TaskErrors[1237982] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1905578]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1905580]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1905582]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
                const-val this[1905784]:TaskErrors[169656] "temp"
                (1905789 'move' this[1905784](1905786 '.v' _iterator[168635] F0_this[2006195]))
                (1905584 'move' call_tmp[1905582](1905587 call nErrors[814031] this[1905784]))
                const-val call_tmp[1905589]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1905591]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1905593 'move' coerce_tmp[1905591](1905595 'deref' call_tmp[1905582]))
                const-val ret_tmp[1905597]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
                (1905600 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1905591] ret_tmp[1905597])
                (1905604 'move' call_tmp[1905589] ret_tmp[1905597])
                (1905607 'move' _iterator[1905580](1905610 call _getIterator[1103805] call_tmp[1905589]))
                {
                  val ret[1966258]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1966260]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1966262]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1966264]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1966266]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
                  const-val low[1966768]:int(64)[13] "temp"
                  (1966773 'move' low[1966768](1966770 '.v' _iterator[1905580] F0_low[2010431]))
                  const-val count[1966775]:int(64)[13] "temp"
                  (1966780 'move' count[1966775](1966777 '.v' _iterator[1905580] F1_count[2010435]))
                  (1966269 call chpl_direct_counted_range_iter_helper[1102098] low[1966768] count[1966775] ret_tmp[1966266])
                  (1966273 'move' call_tmp[1966264] ret_tmp[1966266])
                  (1966276 'move' _iterator[1966262](1966279 call _getIterator[1103555] call_tmp[1966264]))
                  {
                    val ret[1966282]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                    val call_tmp[1966284]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1966286]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1966288]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1966290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1966292]:int(64)[13] "temp"
                    (1966294 'move' count[1966292](1966296 '.v' _iterator[1966262] F1_count[2014907]))
                    (1966299 'move' call_tmp[1966290](1966302 call <[948398] count[1966292]))
                    (1966304 'move' tmp[1966288] call_tmp[1966290])
                    (1966307 'move' tmp[1966286] call_tmp[1966290])
                    const-val call_tmp[1966310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1966312 'move' call_tmp[1966310] call_tmp[1966290])
                    if call_tmp[1966290]
                    {
                      (1966318 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1966321]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1966323]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1966325]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1966327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1966329]:int(64)[13] "temp"
                    (1966331 'move' count[1966329](1966333 '.v' _iterator[1966262] F1_count[2014907]))
                    (1966336 'move' call_tmp[1966327](1966339 call ==[435628] count[1966329] 0))
                    (1966342 'move' tmp[1966325] call_tmp[1966327])
                    if call_tmp[1966327]
                    {
                      const-val tmp[1966347]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1966349]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1966351]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1966353]:int(64)[13] "temp"
                      (1966355 'move' low[1966353](1966357 '.v' _iterator[1966262] F0_low[2014903]))
                      (1966360 'move' call_tmp[1966351](1966363 call _cast[956034] low[1966353]))
                      const-val call_tmp[1966365]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1966367]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1966369 'move' coerce_tmp[1966367](1966371 'cast' uint(64)[115] 1))
                      (1966374 'move' call_tmp[1966365](1966377 call -[962193] call_tmp[1966351]))
                      const-val call_tmp[1966379]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1966381 'move' call_tmp[1966379](1966384 call _cast[953543] call_tmp[1966365]))
                      const-val ret_tmp[1966386]:2*int(64)[1040056] "temp"
                      const-val low[1966388]:int(64)[13] "temp"
                      (1966390 'move' low[1966388](1966392 '.v' _iterator[1966262] F0_low[2014903]))
                      (1966396 call _build_tuple[1040014] low[1966388] call_tmp[1966379] ret_tmp[1966386])
                      (1966400 'move' tmp[1966347] ret_tmp[1966386])
                      (1966403 'move' tmp[1966323] tmp[1966347])
                    }
                    {
                      const-val tmp[1966407]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1966409]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1966411]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1966413]:int(64)[13] "temp"
                      (1966415 'move' count[1966413](1966417 '.v' _iterator[1966262] F1_count[2014907]))
                      (1966420 'move' call_tmp[1966411] count[1966413])
                      const-val call_tmp[1966423]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1966425]:int(64)[13] "temp"
                      (1966427 'move' count[1966425](1966429 '.v' _iterator[1966262] F1_count[2014907]))
                      (1966432 'move' call_tmp[1966423](1966435 call -[962226] count[1966425]))
                      const-val call_tmp[1966437]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1966439]:int(64)[13] "temp"
                      (1966441 'move' low[1966439](1966443 '.v' _iterator[1966262] F0_low[2014903]))
                      (1966446 'move' call_tmp[1966437](1966449 call +[439636] low[1966439] call_tmp[1966423]))
                      const-val ret_tmp[1966452]:2*int(64)[1040056] "temp"
                      const-val low[1966454]:int(64)[13] "temp"
                      (1966456 'move' low[1966454](1966458 '.v' _iterator[1966262] F0_low[2014903]))
                      (1966462 call _build_tuple[1040014] low[1966454] call_tmp[1966437] ret_tmp[1966452])
                      (1966466 'move' tmp[1966407] ret_tmp[1966452])
                      (1966469 'move' tmp[1966323] tmp[1966407])
                    }
                    (1966473 '=' tmp[1966321] tmp[1966323])
                    (1966476 'noop')
                    1
                    ref call_tmp[1966478]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1966480 'move' call_tmp[1966478](1966482 '.' tmp[1966321] x0[1040052]))
                    const-val start[1966485]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1966487]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1966489 'move' coerce_tmp[1966487](1966491 'deref' call_tmp[1966478]))
                    (1966493 '=' start[1966485] coerce_tmp[1966487])
                    (1966496 'noop')
                    ref call_tmp[1966497]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1966499 'move' call_tmp[1966497](1966501 '.' tmp[1966321] x1[1040054]))
                    const-val end[1966504]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1966506]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1966508 'move' coerce_tmp[1966506](1966510 'deref' call_tmp[1966497]))
                    (1966512 '=' end[1966504] coerce_tmp[1966506])
                    (1966515 'noop')
                    val _indexOfInterest[1966516]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1966518]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1966520]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1966522]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                    (1966525 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1966487] coerce_tmp[1966506] ret_tmp[1966522])
                    (1966529 'move' call_tmp[1966520] ret_tmp[1966522])
                    (1966532 'move' _iterator[1966518](1966535 call _getIterator[1103301] call_tmp[1966520]))
                    {
                      val ret[1994885]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                      val call_tmp[1994887]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1994890 call chpl_range_check_stride[1102844])
                      val i[1994891]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1994893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1994895 'move' i[1994891] 0)
                      val call_tmp[1994898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1994900]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1995160]:int(64)[13] "temp"
                      (1995165 'move' low[1995160](1995162 '.v' _iterator[1966518] F0_low[2016401]))
                      (1994902 'move' default_arg_first[1994900](1994905 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1995160]))
                      const-val default_arg_last[1994907]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1995167]:int(64)[13] "temp"
                      (1995172 'move' high[1995167](1995169 '.v' _iterator[1966518] F1_high[2016405]))
                      (1994909 'move' default_arg_last[1994907](1994912 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1995167]))
                      const-val _return_tmp_[1994914]:bool[10] "dead after last mention" "temp"
                      const-val low[1995174]:int(64)[13] "temp"
                      (1995179 'move' low[1995174](1995176 '.v' _iterator[1966518] F0_low[2016401]))
                      const-val high[1995181]:int(64)[13] "temp"
                      (1995186 'move' high[1995181](1995183 '.v' _iterator[1966518] F1_high[2016405]))
                      (1994916 'move' _return_tmp_[1994914](1994919 call chpl_checkIfRangeIterWillOverflow[1096076] low[1995174] high[1995181] 1 default_arg_first[1994900] default_arg_last[1994907] 1))
                      CForLoop[1994926] hazard
                      {
                        const-val yret[1994941]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1994943 'move' yret[1994941] i[1994891])
                        const-val _yieldedIndex[1994957]:int(64)[13] "temp"
                        (1995158 'move' _yieldedIndex[1994957] i[1994891])
                        {
                          const-val i[1994959]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1994961 'move' i[1994959] _yieldedIndex[1994957])
                          const-val yret[1994964]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1994966 'move' yret[1994964] _yieldedIndex[1994957])
                          const-val _yieldedIndex[1994969]:int(64)[13] "temp"
                          (1994971 'move' _yieldedIndex[1994969] _yieldedIndex[1994957])
                          {
                            const-val i[1994975]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1994977 'move' i[1994975] _yieldedIndex[1994969])
                            const-val yret[1994980]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1994982 'move' yret[1994980] _yieldedIndex[1994969])
                            const-val _yieldedIndex[1994985]:int(64)[13] "temp"
                            (1994987 'move' _yieldedIndex[1994985] _yieldedIndex[1994969])
                            {
                              const-val i[1994991]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1994993 'move' i[1994991] _yieldedIndex[1994985])
                              ref call_tmp[1994996]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1994998]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                              const-val this[1995000]:TaskErrors[169656] "temp"
                              (1995002 'move' this[1995000](1995004 '.v' _iterator[168635] F0_this[2006195]))
                              (1995007 'move' _this_tmp_[1994998](1995010 call errorsArray[814057] this[1995000]))
                              val coerce_tmp[1995012]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1995014 'move' coerce_tmp[1995012](1995016 'deref' _this_tmp_[1994998]))
                              (1995018 'move' call_tmp[1994996](1995021 call this[1235753] coerce_tmp[1995012] _yieldedIndex[1994985]))
                              const-val call_tmp[1995024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1995026]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1995028 'move' coerce_tmp[1995026](1995031 call borrow[1235828] call_tmp[1994996]))
                              val coerce_tmp[1995033]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1995035 'move' coerce_tmp[1995033](1995037 'cast' object[22] coerce_tmp[1995026]))
                              (1995040 'move' call_tmp[1995024](1995043 call !=[1485] coerce_tmp[1995033] nil[44]))
                              const-val call_tmp[1995046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1995048 'move' call_tmp[1995046] call_tmp[1995024])
                              if call_tmp[1995024]
                              {
                                ref yret[1995053]:_ref(owned Error?)[966422] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1995055]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1995057]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                                const-val this[1995059]:TaskErrors[169656] "temp"
                                (1995061 'move' this[1995059](1995063 '.v' _iterator[168635] F0_this[2006195]))
                                (1995066 'move' _this_tmp_[1995057](1995069 call errorsArray[814057] this[1995059]))
                                val coerce_tmp[1995071]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1995073 'move' coerce_tmp[1995071](1995075 'deref' _this_tmp_[1995057]))
                                (1995077 'move' call_tmp[1995055](1995080 call this[1235753] coerce_tmp[1995071] i[1994991]))
                                ref _yieldedIndex[1995083]:_ref(owned Error?)[966422] "temp"
                                (1995085 'move' _yieldedIndex[1995083] call_tmp[1995055])
                                {
                                  ref e[1995089]:_ref(owned Error?)[966422] "index var" "insert auto destroy"
                                  (1995091 'move' e[1995089] _yieldedIndex[1995083])
                                  {
                                    const-val call_tmp[1995095]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1995097]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1995099 'move' coerce_tmp[1995097](1995102 call borrow[1235828] e[1995089]))
                                    val coerce_tmp[1995104]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1995106 'move' coerce_tmp[1995104](1995108 'cast' object[22] coerce_tmp[1995097]))
                                    (1995111 'move' call_tmp[1995095](1995114 call !=[1485] coerce_tmp[1995104] nil[44]))
                                    const-val call_tmp[1995117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1995119 'move' call_tmp[1995117] call_tmp[1995095])
                                    if call_tmp[1995117]
                                    {
                                      ref call_tmp[1995124]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1995126]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                                      (1995128 'move' _this_tmp_[1995126](1995131 call errorsArray[814057] this[169658]))
                                      val coerce_tmp[1995133]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1995135 'move' coerce_tmp[1995133](1995137 'deref' _this_tmp_[1995126]))
                                      (1995139 'move' call_tmp[1995124](1995142 call this[1235753] coerce_tmp[1995133] idx[168532]))
                                      (1995146 call =[1239057] call_tmp[1995124] e[1995089])
                                      (1995150 call +=[451315] idx[168532] 1)
                                    }
                                  }
                                  label _continueLabel[1995154]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1995188]:int(64)[13] "temp"
                          (1995193 'move' low[1995188](1995190 '.v' _iterator[1966518] F0_low[2016401]))
                          (1994928 '=' i[1994891] low[1995188])
                        }
                        {
                          const-val high[1995195]:int(64)[13] "temp"
                          (1995200 'move' high[1995195](1995197 '.v' _iterator[1966518] F1_high[2016405]))
                          (1994932 '<=' i[1994891] high[1995195])
                        }
                        {
                          val call_tmp[1994936]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1994938 '+=' i[1994891] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1994953]
                    }
                    (1966583 call _freeIterator[1103474] _iterator[1966518])
                    (1966586 call chpl__autoDestroy[1534672] tmp[1966321])
                    label _endchpl_direct_counted_range_iter_helper[1966588]
                  }
                  (1966591 call _freeIterator[1103724] _iterator[1966262])
                  label _endchpl_direct_counted_range_iter[1966593]
                }
                (1905708 call _freeIterator[1103974] _iterator[1905580])
                label _endthese[1905710]
              }
              label _breakLabel[168640]
              (1842197 call _freeIterator[1238233] _iterator[168635])
            }
            (168671 call chpl__delete[1239975] asTaskErr[168575])
          }
          (168680 call =[1232446] cur[168372] curnext[168551])
        }
        label _continueLabel[168686]
        const-val call_tmp[679720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1240958]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1240963 'move' coerce_tmp[1240958](1240960 'cast' object[22] cur[168372]))
        (679723 'move' call_tmp[679720](168694 call !=[1485] coerce_tmp[1240958] nil[44]))
        (168697 'move' tmp[168683] call_tmp[679720])
        tmp[168683]
      }
      label _breakLabel[168687]
    }
    (522152 return _void[55])
  }
  function TaskErrors[169656].init[168719](const in arg this[169662]:TaskErrors[169656], const in arg err[168716]:Error[167938]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462700]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462708 'move' super_tmp[462700](462701 '.v' this[169662] super[355708]))
    (462704 call init[167896] super_tmp[462700])
    val tmp[462660]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679730]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679733 'move' call_tmp[679730](462671 'cast' Error[167938] this[169662]))
    val chpl__thisAsParent[462668]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544598 'move' chpl__thisAsParent[462668](1760125 call chpl__initCopy[965617] call_tmp[679730]))
    (462674 'setcid' chpl__thisAsParent[462668])
    val tmp[462676]:int(64)[13] "dead after last mention" "temp"
    (462679 'move' tmp[462676] 1)
    (462681 '.=' this[169662] nErrors[168317] tmp[462676])
    val call_tmp[679735]:owned Error?[966413] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679740]:c_ptr(owned Error?)[1235615] "dead after last mention" "maybe param" "temp"
    (679743 'move' call_tmp[679740](168735 call c_calloc[1238337] 1))
    val call_tmp[679745]:owned Error?[966413] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679750]:c_ptr(owned Error?)[1235615] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462685]:c_ptr(owned Error?)[1235615] "dead after last mention" "temp"
    (462692 'move' tmp[462685](1760154 call chpl__initCopy[1760156] call_tmp[679740]))
    (462694 '.=' this[169662] errorsArray[168328] tmp[462685])
    (462699 'setcid' this[169662])
    ref call_tmp[679757]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1760176]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1760181 'move' coerce_tmp[1760176] err[168716])
    (679760 'move' call_tmp[679757](168747 call _next[811616] coerce_tmp[1760176]))
    (168751 call =[1237209] call_tmp[679757] nil[44])
    ref call_tmp[679764]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1760186]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
    (1760188 'move' _this_tmp_[1760186](388570 call errorsArray[814057] this[169662]))
    val coerce_tmp[1760193]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1760197 'move' coerce_tmp[1760193](1760195 'deref' _this_tmp_[1760186]))
    (679767 'move' call_tmp[679764](168757 call this[1235753] coerce_tmp[1760193] 0))
    (168763 call retain[1238775] call_tmp[679764] err[168716])
    (522154 return _void[55])
  }
  function TaskErrors[169656].deinit[168786](const in arg this[169670]:TaskErrors[169656]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679793]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "maybe param" "temp"
    (679796 'move' call_tmp[679793](388586 call errorsArray[814057] this[169670]))
    const-val call_tmp[679798]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235698]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235702 'move' coerce_tmp[1235698](1235700 'deref' call_tmp[679793]))
    (679801 'move' call_tmp[679798](168853 call _cond_test[1235666] coerce_tmp[1235698]))
    if call_tmp[679798]
    {
      {
        val _indexOfInterest[168807]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168808]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679805]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
        (679808 'move' call_tmp[679805](388597 call nErrors[814031] this[169670]))
        const-val call_tmp[679810]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1235735]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1235739 'move' coerce_tmp[1235735](1235737 'deref' call_tmp[679805]))
        const-val ret_tmp[1831845]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
        (168824 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1235735] ret_tmp[1831845])
        (1831848 'move' call_tmp[679810] ret_tmp[1831845])
        (168817 'move' _iterator[168808](168815 call _getIterator[1103805] call_tmp[679810]))
        {
          val ret[1905806]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1905808]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1905810]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1905812]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1905814]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
          const-val low[1905896]:int(64)[13] "temp"
          (1905901 'move' low[1905896](1905898 '.v' _iterator[168808] F0_low[2010431]))
          const-val count[1905903]:int(64)[13] "temp"
          (1905908 'move' count[1905903](1905905 '.v' _iterator[168808] F1_count[2010435]))
          (1905817 call chpl_direct_counted_range_iter_helper[1102098] low[1905896] count[1905903] ret_tmp[1905814])
          (1905821 'move' call_tmp[1905812] ret_tmp[1905814])
          (1905824 'move' _iterator[1905810](1905827 call _getIterator[1103555] call_tmp[1905812]))
          {
            val ret[1966783]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
            val call_tmp[1966785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1966787]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1966789]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1966791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1967180]:int(64)[13] "temp"
            (1967185 'move' count[1967180](1967182 '.v' _iterator[1905810] F1_count[2014907]))
            (1966793 'move' call_tmp[1966791](1966796 call <[948398] count[1967180]))
            (1966798 'move' tmp[1966789] call_tmp[1966791])
            (1966801 'move' tmp[1966787] call_tmp[1966791])
            const-val call_tmp[1966804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1966806 'move' call_tmp[1966804] call_tmp[1966791])
            if call_tmp[1966791]
            {
              (1966812 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1966815]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1966817]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1966819]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1966821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1967187]:int(64)[13] "temp"
            (1967192 'move' count[1967187](1967189 '.v' _iterator[1905810] F1_count[2014907]))
            (1966823 'move' call_tmp[1966821](1966826 call ==[435628] count[1967187] 0))
            (1966829 'move' tmp[1966819] call_tmp[1966821])
            if call_tmp[1966821]
            {
              const-val tmp[1966834]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1966836]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1966838]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1967194]:int(64)[13] "temp"
              (1967199 'move' low[1967194](1967196 '.v' _iterator[1905810] F0_low[2014903]))
              (1966840 'move' call_tmp[1966838](1966843 call _cast[956034] low[1967194]))
              const-val call_tmp[1966845]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1966847]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1966849 'move' coerce_tmp[1966847](1966851 'cast' uint(64)[115] 1))
              (1966854 'move' call_tmp[1966845](1966857 call -[962193] call_tmp[1966838]))
              const-val call_tmp[1966859]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1966861 'move' call_tmp[1966859](1966864 call _cast[953543] call_tmp[1966845]))
              const-val ret_tmp[1966866]:2*int(64)[1040056] "temp"
              const-val low[1967201]:int(64)[13] "temp"
              (1967206 'move' low[1967201](1967203 '.v' _iterator[1905810] F0_low[2014903]))
              (1966869 call _build_tuple[1040014] low[1967201] call_tmp[1966859] ret_tmp[1966866])
              (1966873 'move' tmp[1966834] ret_tmp[1966866])
              (1966876 'move' tmp[1966817] tmp[1966834])
            }
            {
              const-val tmp[1966880]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1966882]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1966884]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1967208]:int(64)[13] "temp"
              (1967213 'move' count[1967208](1967210 '.v' _iterator[1905810] F1_count[2014907]))
              (1966886 'move' call_tmp[1966884] count[1967208])
              const-val call_tmp[1966889]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1967215]:int(64)[13] "temp"
              (1967220 'move' count[1967215](1967217 '.v' _iterator[1905810] F1_count[2014907]))
              (1966891 'move' call_tmp[1966889](1966894 call -[962226] count[1967215]))
              const-val call_tmp[1966896]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1967222]:int(64)[13] "temp"
              (1967227 'move' low[1967222](1967224 '.v' _iterator[1905810] F0_low[2014903]))
              (1966898 'move' call_tmp[1966896](1966901 call +[439636] low[1967222] call_tmp[1966889]))
              const-val ret_tmp[1966904]:2*int(64)[1040056] "temp"
              const-val low[1967229]:int(64)[13] "temp"
              (1967234 'move' low[1967229](1967231 '.v' _iterator[1905810] F0_low[2014903]))
              (1966907 call _build_tuple[1040014] low[1967229] call_tmp[1966896] ret_tmp[1966904])
              (1966911 'move' tmp[1966880] ret_tmp[1966904])
              (1966914 'move' tmp[1966817] tmp[1966880])
            }
            (1966918 '=' tmp[1966815] tmp[1966817])
            (1966921 'noop')
            1
            ref call_tmp[1966923]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1966925 'move' call_tmp[1966923](1966927 '.' tmp[1966815] x0[1040052]))
            const-val start[1966930]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1966932]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1966934 'move' coerce_tmp[1966932](1966936 'deref' call_tmp[1966923]))
            (1966938 '=' start[1966930] coerce_tmp[1966932])
            (1966941 'noop')
            ref call_tmp[1966942]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1966944 'move' call_tmp[1966942](1966946 '.' tmp[1966815] x1[1040054]))
            const-val end[1966949]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1966951]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1966953 'move' coerce_tmp[1966951](1966955 'deref' call_tmp[1966942]))
            (1966957 '=' end[1966949] coerce_tmp[1966951])
            (1966960 'noop')
            val _indexOfInterest[1966961]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1966963]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1966965]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1966967]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
            (1966970 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1966932] coerce_tmp[1966951] ret_tmp[1966967])
            (1966974 'move' call_tmp[1966965] ret_tmp[1966967])
            (1966977 'move' _iterator[1966963](1966980 call _getIterator[1103301] call_tmp[1966965]))
            {
              val ret[1966983]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
              val call_tmp[1966985]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1966988 call chpl_range_check_stride[1102844])
              val i[1966989]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1966991]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1966993 'move' i[1966989] 0)
              val call_tmp[1966996]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1966998]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1967000]:int(64)[13] "temp"
              (1967002 'move' low[1967000](1967004 '.v' _iterator[1966963] F0_low[2016401]))
              (1967007 'move' default_arg_first[1966998](1967010 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1967000]))
              const-val default_arg_last[1967012]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1967014]:int(64)[13] "temp"
              (1967016 'move' high[1967014](1967018 '.v' _iterator[1966963] F1_high[2016405]))
              (1967021 'move' default_arg_last[1967012](1967024 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1967014]))
              const-val _return_tmp_[1967026]:bool[10] "dead after last mention" "temp"
              const-val low[1967028]:int(64)[13] "temp"
              (1967030 'move' low[1967028](1967032 '.v' _iterator[1966963] F0_low[2016401]))
              const-val high[1967035]:int(64)[13] "temp"
              (1967037 'move' high[1967035](1967039 '.v' _iterator[1966963] F1_high[2016405]))
              (1967042 'move' _return_tmp_[1967026](1967045 call chpl_checkIfRangeIterWillOverflow[1096076] low[1967028] high[1967035] 1 default_arg_first[1966998] default_arg_last[1967012] 1))
              CForLoop[1967052] hazard
              {
                const-val yret[1967081]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1967083 'move' yret[1967081] i[1966989])
                const-val _yieldedIndex[1967086]:int(64)[13] "temp"
                (1967088 'move' _yieldedIndex[1967086] i[1966989])
                {
                  const-val i[1967092]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1967094 'move' i[1967092] _yieldedIndex[1967086])
                  const-val yret[1967097]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1967099 'move' yret[1967097] _yieldedIndex[1967086])
                  const-val _yieldedIndex[1967127]:int(64)[13] "temp"
                  (1967178 'move' _yieldedIndex[1967127] _yieldedIndex[1967086])
                  {
                    const-val i[1967129]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1967131 'move' i[1967129] _yieldedIndex[1967127])
                    const-val yret[1967134]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1967136 'move' yret[1967134] _yieldedIndex[1967127])
                    const-val _yieldedIndex[1967139]:int(64)[13] "temp"
                    (1967141 'move' _yieldedIndex[1967139] _yieldedIndex[1967127])
                    {
                      const-val i[1967145]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1967147 'move' i[1967145] _yieldedIndex[1967139])
                      {
                        ref call_tmp[1967151]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1967153]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                        (1967155 'move' _this_tmp_[1967153](1967158 call errorsArray[814057] this[169670]))
                        val coerce_tmp[1967160]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1967162 'move' coerce_tmp[1967160](1967164 'deref' _this_tmp_[1967153]))
                        (1967166 'move' call_tmp[1967151](1967169 call this[1235753] coerce_tmp[1967160] i[1967145]))
                        (1967173 call clear[1236047] call_tmp[1967151])
                      }
                      label _continueLabel[1967175]
                    }
                  }
                }
                {
                  const-val low[1967054]:int(64)[13] "temp"
                  (1967056 'move' low[1967054](1967058 '.v' _iterator[1966963] F0_low[2016401]))
                  (1967061 '=' i[1966989] low[1967054])
                }
                {
                  const-val high[1967065]:int(64)[13] "temp"
                  (1967067 'move' high[1967065](1967069 '.v' _iterator[1966963] F1_high[2016405]))
                  (1967072 '<=' i[1966989] high[1967065])
                }
                {
                  val call_tmp[1967076]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1967078 '+=' i[1966989] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1967115]
            }
            (1967118 call _freeIterator[1103474] _iterator[1966963])
            (1967121 call chpl__autoDestroy[1534672] tmp[1966815])
            label _endchpl_direct_counted_range_iter_helper[1967123]
          }
          (1905853 call _freeIterator[1103724] _iterator[1905810])
          label _endchpl_direct_counted_range_iter[1905855]
        }
        label _breakLabel[168813]
        (1842202 call _freeIterator[1103974] _iterator[168808])
      }
      ref call_tmp[679826]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "maybe param" "temp"
      (679829 'move' call_tmp[679826](388602 call errorsArray[814057] this[169670]))
      val coerce_tmp[1237168]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237172 'move' coerce_tmp[1237168](1237170 'deref' call_tmp[679826]))
      const-val coerce_tmp[1237174]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237180 'move' coerce_tmp[1237174](1237176 'cast' c_void_ptr[149] coerce_tmp[1237168]))
      (168851 call c_free[207852] coerce_tmp[1237174])
    }
    label _enddeinit[1814570]
    val _parent_destructor_tmp_[1814565]:Error[167938] "temp"
    (1814572 'move' _parent_destructor_tmp_[1814565](1814566 'cast' Error[167938] this[169670]))
    (1814574 call deinit[811746] _parent_destructor_tmp_[1814565])
    (522158 return _void[55])
  }
  function TaskErrors[169656].these[168862](const in arg this[169674]:TaskErrors[169656], ref arg _retArg[1831133]:_ref(_ir_these_TaskErrors)[1238093]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2006570]:_ir_these_TaskErrors[1237982] "temp"
    (2006572 '.=' _ir[2006570] F0_this[2006197] this[169674])
    (2006576 '=' _retArg[1831133] _ir[2006570])
    (2006579 return _void[55])
  }
  type _ic_these_TaskErrors[1237976] val super[1237977]:object[22] "super class" val more[1237979]:int(64)[13] const-val F0_this[2006195]:TaskErrors[169656] val F1__iterator[2006199]:_ic_chpl_direct_counted_range_iter[1103790] val F2__iterator[2006201]:_ic_chpl_direct_counted_range_iter_helper[1103540] const F3_tmp[2006203]:2*int(64)[1040056] val F4__iterator[2006205]:_ic_chpl_direct_param_stride_range_iter[1103286] val F5_i[2006207]:int(64)[13] ref value[2006209]:_ref(owned Error?)[966422]
  type _ir_these_TaskErrors[1237982] const-val F0_this[2006197]:TaskErrors[169656]
  function _getIterator[1237991](const  ref arg ir[1237993]:_ir_these_TaskErrors[1237982]) : _ic_these_TaskErrors[1237976] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1238100]:_ic_these_TaskErrors[1237976] "dead after last mention" "RVV" "temp"
    val _ic_[1237983]:_ic_these_TaskErrors[1237976] "dead after last mention" "temp"
    const-val call_tmp[1238107]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238110 'move' call_tmp[1238107](1238122 'sizeof_bundle' _ic_these_TaskErrors[1237976]))
    const-val cast_tmp[1238125]:c_void_ptr[149] "dead after last mention" "temp"
    (1238127 'move' cast_tmp[1238125](1237988 call chpl_here_alloc[187742] call_tmp[1238107] 40))
    (1237996 'move' _ic_[1237983](1238129 'cast' _ic_these_TaskErrors[1237976] cast_tmp[1238125]))
    (1237998 'setcid' _ic_[1237983])
    (1238105 'move' ret[1238100] _ic_[1237983])
    (2006582 '.=' ret[1238100] more[1237979] 1)
    const-val tmp[2006586]:TaskErrors[169656] "temp"
    (2006591 'move' tmp[2006586](2006587 '.v' ir[1237993] F0_this[2006197]))
    (2006593 '.=' ret[1238100] F0_this[2006195] tmp[2006586])
    (1238102 return ret[1238100])
  }
  function TaskErrors[169656].message[169031](const in arg this[169682]:TaskErrors[169656], ref arg _retArg[1841645]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522186]:string[26] "dead after last mention" "RVV" "temp"
    val n[169035]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544604 'move' n[169035] 0)
    val minMsg[169041]:string[26] "dead at end of block" "insert auto destroy"
    (1770100 call init[30760] minMsg[169041])
    val maxMsg[169046]:string[26] "dead at end of block" "insert auto destroy"
    (1770105 call init[30760] maxMsg[169046])
    val first[169053]:Error[167938] "dead at end of block" "insert auto destroy"
    (1770113 'move' first[169053](1770111 'cast' Error[167938] nil[44]))
    val last[169060]:Error[167938] "dead at end of block" "insert auto destroy"
    (1770118 'move' last[169060](1770116 'cast' Error[167938] nil[44]))
    {
      ref _indexOfInterest[169175]:_ref(owned Error?)[966422] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169176]:_ic_these_TaskErrors[1237976] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[679905]:_ir_these_TaskErrors[1237982] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1831109]:_ir_these_TaskErrors[1237982] "temp"
      (169067 call these[168862] this[169682] ret_tmp[1831109])
      (1831112 'move' call_tmp[679905] ret_tmp[1831109])
      (169185 'move' _iterator[169176](169183 call _getIterator[1237991] call_tmp[679905]))
      {
        val ret[1906080]:_ir_these_TaskErrors[1237982] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1906082]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1906084]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1906086]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
        const-val this[1906503]:TaskErrors[169656] "temp"
        (1906508 'move' this[1906503](1906505 '.v' _iterator[169176] F0_this[2006195]))
        (1906088 'move' call_tmp[1906086](1906091 call nErrors[814031] this[1906503]))
        const-val call_tmp[1906093]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1906095]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1906097 'move' coerce_tmp[1906095](1906099 'deref' call_tmp[1906086]))
        const-val ret_tmp[1906101]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
        (1906104 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1906095] ret_tmp[1906101])
        (1906108 'move' call_tmp[1906093] ret_tmp[1906101])
        (1906111 'move' _iterator[1906084](1906114 call _getIterator[1103805] call_tmp[1906093]))
        {
          val ret[1906117]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1906119]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1906121]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1906123]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1906125]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
          const-val low[1906127]:int(64)[13] "temp"
          (1906129 'move' low[1906127](1906131 '.v' _iterator[1906084] F0_low[2010431]))
          const-val count[1906134]:int(64)[13] "temp"
          (1906136 'move' count[1906134](1906138 '.v' _iterator[1906084] F1_count[2010435]))
          (1906142 call chpl_direct_counted_range_iter_helper[1102098] low[1906127] count[1906134] ret_tmp[1906125])
          (1906146 'move' call_tmp[1906123] ret_tmp[1906125])
          (1906149 'move' _iterator[1906121](1906152 call _getIterator[1103555] call_tmp[1906123]))
          {
            val ret[1967761]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
            val call_tmp[1967763]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1967765]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1967767]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1967769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1968445]:int(64)[13] "temp"
            (1968450 'move' count[1968445](1968447 '.v' _iterator[1906121] F1_count[2014907]))
            (1967771 'move' call_tmp[1967769](1967774 call <[948398] count[1968445]))
            (1967776 'move' tmp[1967767] call_tmp[1967769])
            (1967779 'move' tmp[1967765] call_tmp[1967769])
            const-val call_tmp[1967782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1967784 'move' call_tmp[1967782] call_tmp[1967769])
            if call_tmp[1967769]
            {
              (1967790 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1967793]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1967795]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1967797]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1967799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1968452]:int(64)[13] "temp"
            (1968457 'move' count[1968452](1968454 '.v' _iterator[1906121] F1_count[2014907]))
            (1967801 'move' call_tmp[1967799](1967804 call ==[435628] count[1968452] 0))
            (1967807 'move' tmp[1967797] call_tmp[1967799])
            if call_tmp[1967799]
            {
              const-val tmp[1967812]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1967814]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1967816]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1968459]:int(64)[13] "temp"
              (1968464 'move' low[1968459](1968461 '.v' _iterator[1906121] F0_low[2014903]))
              (1967818 'move' call_tmp[1967816](1967821 call _cast[956034] low[1968459]))
              const-val call_tmp[1967823]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1967825]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1967827 'move' coerce_tmp[1967825](1967829 'cast' uint(64)[115] 1))
              (1967832 'move' call_tmp[1967823](1967835 call -[962193] call_tmp[1967816]))
              const-val call_tmp[1967837]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1967839 'move' call_tmp[1967837](1967842 call _cast[953543] call_tmp[1967823]))
              const-val ret_tmp[1967844]:2*int(64)[1040056] "temp"
              const-val low[1968466]:int(64)[13] "temp"
              (1968471 'move' low[1968466](1968468 '.v' _iterator[1906121] F0_low[2014903]))
              (1967847 call _build_tuple[1040014] low[1968466] call_tmp[1967837] ret_tmp[1967844])
              (1967851 'move' tmp[1967812] ret_tmp[1967844])
              (1967854 'move' tmp[1967795] tmp[1967812])
            }
            {
              const-val tmp[1967858]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1967860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1967862]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1968473]:int(64)[13] "temp"
              (1968478 'move' count[1968473](1968475 '.v' _iterator[1906121] F1_count[2014907]))
              (1967864 'move' call_tmp[1967862] count[1968473])
              const-val call_tmp[1967867]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1968480]:int(64)[13] "temp"
              (1968485 'move' count[1968480](1968482 '.v' _iterator[1906121] F1_count[2014907]))
              (1967869 'move' call_tmp[1967867](1967872 call -[962226] count[1968480]))
              const-val call_tmp[1967874]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1968487]:int(64)[13] "temp"
              (1968492 'move' low[1968487](1968489 '.v' _iterator[1906121] F0_low[2014903]))
              (1967876 'move' call_tmp[1967874](1967879 call +[439636] low[1968487] call_tmp[1967867]))
              const-val ret_tmp[1967882]:2*int(64)[1040056] "temp"
              const-val low[1968494]:int(64)[13] "temp"
              (1968499 'move' low[1968494](1968496 '.v' _iterator[1906121] F0_low[2014903]))
              (1967885 call _build_tuple[1040014] low[1968494] call_tmp[1967874] ret_tmp[1967882])
              (1967889 'move' tmp[1967858] ret_tmp[1967882])
              (1967892 'move' tmp[1967795] tmp[1967858])
            }
            (1967896 '=' tmp[1967793] tmp[1967795])
            (1967899 'noop')
            1
            ref call_tmp[1967901]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1967903 'move' call_tmp[1967901](1967905 '.' tmp[1967793] x0[1040052]))
            const-val start[1967908]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1967910]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1967912 'move' coerce_tmp[1967910](1967914 'deref' call_tmp[1967901]))
            (1967916 '=' start[1967908] coerce_tmp[1967910])
            (1967919 'noop')
            ref call_tmp[1967920]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1967922 'move' call_tmp[1967920](1967924 '.' tmp[1967793] x1[1040054]))
            const-val end[1967927]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1967929]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1967931 'move' coerce_tmp[1967929](1967933 'deref' call_tmp[1967920]))
            (1967935 '=' end[1967927] coerce_tmp[1967929])
            (1967938 'noop')
            val _indexOfInterest[1967939]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1967941]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1967943]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1967945]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
            (1967948 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1967910] coerce_tmp[1967929] ret_tmp[1967945])
            (1967952 'move' call_tmp[1967943] ret_tmp[1967945])
            (1967955 'move' _iterator[1967941](1967958 call _getIterator[1103301] call_tmp[1967943]))
            {
              val ret[1967961]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
              val call_tmp[1967963]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1967966 call chpl_range_check_stride[1102844])
              val i[1967967]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1967969]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1967971 'move' i[1967967] 0)
              val call_tmp[1967974]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1967976]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1967978]:int(64)[13] "temp"
              (1967980 'move' low[1967978](1967982 '.v' _iterator[1967941] F0_low[2016401]))
              (1967985 'move' default_arg_first[1967976](1967988 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1967978]))
              const-val default_arg_last[1967990]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1967992]:int(64)[13] "temp"
              (1967994 'move' high[1967992](1967996 '.v' _iterator[1967941] F1_high[2016405]))
              (1967999 'move' default_arg_last[1967990](1968002 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1967992]))
              const-val _return_tmp_[1968004]:bool[10] "dead after last mention" "temp"
              const-val low[1968006]:int(64)[13] "temp"
              (1968008 'move' low[1968006](1968010 '.v' _iterator[1967941] F0_low[2016401]))
              const-val high[1968013]:int(64)[13] "temp"
              (1968015 'move' high[1968013](1968017 '.v' _iterator[1967941] F1_high[2016405]))
              (1968020 'move' _return_tmp_[1968004](1968023 call chpl_checkIfRangeIterWillOverflow[1096076] low[1968006] high[1968013] 1 default_arg_first[1967976] default_arg_last[1967990] 1))
              CForLoop[1968030] hazard
              {
                const-val yret[1968059]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1968061 'move' yret[1968059] i[1967967])
                const-val _yieldedIndex[1968064]:int(64)[13] "temp"
                (1968066 'move' _yieldedIndex[1968064] i[1967967])
                {
                  const-val i[1968070]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1968072 'move' i[1968070] _yieldedIndex[1968064])
                  const-val yret[1968075]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1968077 'move' yret[1968075] _yieldedIndex[1968064])
                  const-val _yieldedIndex[1968105]:int(64)[13] "temp"
                  (1968443 'move' _yieldedIndex[1968105] _yieldedIndex[1968064])
                  {
                    const-val i[1968107]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1968109 'move' i[1968107] _yieldedIndex[1968105])
                    const-val yret[1968112]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1968114 'move' yret[1968112] _yieldedIndex[1968105])
                    const-val _yieldedIndex[1968117]:int(64)[13] "temp"
                    (1968119 'move' _yieldedIndex[1968117] _yieldedIndex[1968105])
                    {
                      const-val i[1968123]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1968125 'move' i[1968123] _yieldedIndex[1968117])
                      ref call_tmp[1968128]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1968130]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                      const-val this[1968132]:TaskErrors[169656] "temp"
                      (1968134 'move' this[1968132](1968136 '.v' _iterator[169176] F0_this[2006195]))
                      (1968139 'move' _this_tmp_[1968130](1968142 call errorsArray[814057] this[1968132]))
                      val coerce_tmp[1968144]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1968146 'move' coerce_tmp[1968144](1968148 'deref' _this_tmp_[1968130]))
                      (1968150 'move' call_tmp[1968128](1968153 call this[1235753] coerce_tmp[1968144] _yieldedIndex[1968117]))
                      const-val call_tmp[1968156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[1968158]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1968160 'move' coerce_tmp[1968158](1968163 call borrow[1235828] call_tmp[1968128]))
                      val coerce_tmp[1968165]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1968167 'move' coerce_tmp[1968165](1968169 'cast' object[22] coerce_tmp[1968158]))
                      (1968172 'move' call_tmp[1968156](1968175 call !=[1485] coerce_tmp[1968165] nil[44]))
                      const-val call_tmp[1968178]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1968180 'move' call_tmp[1968178] call_tmp[1968156])
                      if call_tmp[1968156]
                      {
                        ref yret[1968185]:_ref(owned Error?)[966422] "dead after last mention" "YVV" "temp"
                        ref call_tmp[1968187]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1968189]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                        const-val this[1968191]:TaskErrors[169656] "temp"
                        (1968193 'move' this[1968191](1968195 '.v' _iterator[169176] F0_this[2006195]))
                        (1968198 'move' _this_tmp_[1968189](1968201 call errorsArray[814057] this[1968191]))
                        val coerce_tmp[1968203]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1968205 'move' coerce_tmp[1968203](1968207 'deref' _this_tmp_[1968189]))
                        (1968209 'move' call_tmp[1968187](1968212 call this[1235753] coerce_tmp[1968203] i[1968123]))
                        ref _yieldedIndex[1968215]:_ref(owned Error?)[966422] "temp"
                        (1968217 'move' _yieldedIndex[1968215] call_tmp[1968187])
                        {
                          ref err[1968221]:_ref(owned Error?)[966422] "index var" "insert auto destroy"
                          (1968223 'move' err[1968221] _yieldedIndex[1968215])
                          {
                            val call_tmp[1968227]:Error[167938] "dead at end of block" "maybe param" "temp"
                            (1968229 'move' call_tmp[1968227](1968232 call postfix![1769468] err[1968221]))
                            val e[1968234]:Error[167938] "dead at end of block" "insert auto destroy"
                            (1968236 'move' e[1968234](1968239 call chpl__initCopy[965617] call_tmp[1968227]))
                            const-val tmp[1968241]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1968243 'move' tmp[1968241](1968246 call ==[38820] minMsg[169041] ""))
                            val tmp[1968249]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1968251]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1968253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1968255 'move' call_tmp[1968253] tmp[1968241])
                            (1968258 'move' tmp[1968251] call_tmp[1968253])
                            if tmp[1968251]
                            {
                              (1968263 'move' tmp[1968249] 1)
                            }
                            {
                              const-val tmp[1968267]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1968269]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1968271]:int(32)[95] "temp"
                              (1968273 'move' _virtual_method_tmp_[1968271](1968275 'getcid' e[1968234]))
                              val ret_tmp[1968277]:string[26] "temp"
                              (1968279 'virtual method call' message[167929] _virtual_method_tmp_[1968271] e[1968234] ret_tmp[1968277])
                              (1968284 'move' call_tmp[1968269] ret_tmp[1968277])
                              const-val call_tmp[1968287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1968289 'move' call_tmp[1968287](1968292 call <[38870] call_tmp[1968269] minMsg[169041]))
                              (1968295 'move' tmp[1968267] call_tmp[1968287])
                              (1968298 'move' tmp[1968249] tmp[1968267])
                              (1968302 call chpl__autoDestroy[1461530] call_tmp[1968269])
                            }
                            const-val call_tmp[1968305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1968307 'move' call_tmp[1968305] tmp[1968249])
                            if call_tmp[1968305]
                            {
                              const-val call_tmp[1968312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1968314]:int(32)[95] "temp"
                              (1968316 'move' _virtual_method_tmp_[1968314](1968318 'getcid' e[1968234]))
                              val ret_tmp[1968320]:string[26] "temp"
                              (1968322 'virtual method call' message[167929] _virtual_method_tmp_[1968314] e[1968234] ret_tmp[1968320])
                              (1968327 'move' call_tmp[1968312] ret_tmp[1968320])
                              (1968331 call =[38269] minMsg[169041] call_tmp[1968312])
                              (1968335 call chpl__autoDestroy[1461530] call_tmp[1968312])
                            }
                            const-val tmp[1968338]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1968340 'move' tmp[1968338](1968343 call ==[38820] maxMsg[169046] ""))
                            val tmp[1968346]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1968348]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1968350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1968352 'move' call_tmp[1968350] tmp[1968338])
                            (1968355 'move' tmp[1968348] call_tmp[1968350])
                            if tmp[1968348]
                            {
                              (1968360 'move' tmp[1968346] 1)
                            }
                            {
                              const-val tmp[1968364]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1968366]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1968368]:int(32)[95] "temp"
                              (1968370 'move' _virtual_method_tmp_[1968368](1968372 'getcid' e[1968234]))
                              val ret_tmp[1968374]:string[26] "temp"
                              (1968376 'virtual method call' message[167929] _virtual_method_tmp_[1968368] e[1968234] ret_tmp[1968374])
                              (1968381 'move' call_tmp[1968366] ret_tmp[1968374])
                              const-val call_tmp[1968384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1968386 'move' call_tmp[1968384](1968389 call >[38894] call_tmp[1968366] maxMsg[169046]))
                              (1968392 'move' tmp[1968364] call_tmp[1968384])
                              (1968395 'move' tmp[1968346] tmp[1968364])
                              (1968399 call chpl__autoDestroy[1461530] call_tmp[1968366])
                            }
                            const-val call_tmp[1968402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1968404 'move' call_tmp[1968402] tmp[1968346])
                            if call_tmp[1968402]
                            {
                              const-val call_tmp[1968409]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1968411]:int(32)[95] "temp"
                              (1968413 'move' _virtual_method_tmp_[1968411](1968415 'getcid' e[1968234]))
                              val ret_tmp[1968417]:string[26] "temp"
                              (1968419 'virtual method call' message[167929] _virtual_method_tmp_[1968411] e[1968234] ret_tmp[1968417])
                              (1968424 'move' call_tmp[1968409] ret_tmp[1968417])
                              (1968428 call =[38269] maxMsg[169046] call_tmp[1968409])
                              (1968432 call chpl__autoDestroy[1461530] call_tmp[1968409])
                            }
                            (1968436 call +=[451315] n[169035] 1)
                          }
                          label _continueLabel[1968439]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[1968032]:int(64)[13] "temp"
                  (1968034 'move' low[1968032](1968036 '.v' _iterator[1967941] F0_low[2016401]))
                  (1968039 '=' i[1967967] low[1968032])
                }
                {
                  const-val high[1968043]:int(64)[13] "temp"
                  (1968045 'move' high[1968043](1968047 '.v' _iterator[1967941] F1_high[2016405]))
                  (1968050 '<=' i[1967967] high[1968043])
                }
                {
                  val call_tmp[1968054]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1968056 '+=' i[1967967] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1968093]
            }
            (1968096 call _freeIterator[1103474] _iterator[1967941])
            (1968099 call chpl__autoDestroy[1534672] tmp[1967793])
            label _endchpl_direct_counted_range_iter_helper[1968101]
          }
          (1906269 call _freeIterator[1103724] _iterator[1906121])
          label _endchpl_direct_counted_range_iter[1906271]
        }
        (1906274 call _freeIterator[1103974] _iterator[1906084])
        label _endthese[1906276]
      }
      label _breakLabel[169181]
      (1842232 call _freeIterator[1238233] _iterator[169176])
    }
    {
      {
        ref _indexOfInterest[169254]:_ref(owned Error?)[966422] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169255]:_ic_these_TaskErrors[1237976] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[679985]:_ir_these_TaskErrors[1237982] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1831115]:_ir_these_TaskErrors[1237982] "temp"
        (169212 call these[168862] this[169682] ret_tmp[1831115])
        (1831118 'move' call_tmp[679985] ret_tmp[1831115])
        (169264 'move' _iterator[169255](169262 call _getIterator[1237991] call_tmp[679985]))
        {
          val ret[1906525]:_ir_these_TaskErrors[1237982] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1906527]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1906529]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1906531]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
          const-val this[1906828]:TaskErrors[169656] "temp"
          (1906833 'move' this[1906828](1906830 '.v' _iterator[169255] F0_this[2006195]))
          (1906533 'move' call_tmp[1906531](1906536 call nErrors[814031] this[1906828]))
          const-val call_tmp[1906538]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1906540]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1906542 'move' coerce_tmp[1906540](1906544 'deref' call_tmp[1906531]))
          const-val ret_tmp[1906546]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
          (1906549 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1906540] ret_tmp[1906546])
          (1906553 'move' call_tmp[1906538] ret_tmp[1906546])
          (1906556 'move' _iterator[1906529](1906559 call _getIterator[1103805] call_tmp[1906538]))
          {
            val ret[1906562]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1906564]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1906566]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1906568]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1906570]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
            const-val low[1906572]:int(64)[13] "temp"
            (1906574 'move' low[1906572](1906576 '.v' _iterator[1906529] F0_low[2010431]))
            const-val count[1906579]:int(64)[13] "temp"
            (1906581 'move' count[1906579](1906583 '.v' _iterator[1906529] F1_count[2010435]))
            (1906587 call chpl_direct_counted_range_iter_helper[1102098] low[1906572] count[1906579] ret_tmp[1906570])
            (1906591 'move' call_tmp[1906568] ret_tmp[1906570])
            (1906594 'move' _iterator[1906566](1906597 call _getIterator[1103555] call_tmp[1906568]))
            {
              val ret[1968502]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
              val call_tmp[1968504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[1968506]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[1968508]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[1968510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1969066]:int(64)[13] "temp"
              (1969071 'move' count[1969066](1969068 '.v' _iterator[1906566] F1_count[2014907]))
              (1968512 'move' call_tmp[1968510](1968515 call <[948398] count[1969066]))
              (1968517 'move' tmp[1968508] call_tmp[1968510])
              (1968520 'move' tmp[1968506] call_tmp[1968510])
              const-val call_tmp[1968523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1968525 'move' call_tmp[1968523] call_tmp[1968510])
              if call_tmp[1968510]
              {
                (1968531 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
              }
              const-val tmp[1968534]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[1968536]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[1968538]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1968540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1969073]:int(64)[13] "temp"
              (1969078 'move' count[1969073](1969075 '.v' _iterator[1906566] F1_count[2014907]))
              (1968542 'move' call_tmp[1968540](1968545 call ==[435628] count[1969073] 0))
              (1968548 'move' tmp[1968538] call_tmp[1968540])
              if call_tmp[1968540]
              {
                const-val tmp[1968553]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1968555]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1968557]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1969080]:int(64)[13] "temp"
                (1969085 'move' low[1969080](1969082 '.v' _iterator[1906566] F0_low[2014903]))
                (1968559 'move' call_tmp[1968557](1968562 call _cast[956034] low[1969080]))
                const-val call_tmp[1968564]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1968566]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1968568 'move' coerce_tmp[1968566](1968570 'cast' uint(64)[115] 1))
                (1968573 'move' call_tmp[1968564](1968576 call -[962193] call_tmp[1968557]))
                const-val call_tmp[1968578]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1968580 'move' call_tmp[1968578](1968583 call _cast[953543] call_tmp[1968564]))
                const-val ret_tmp[1968585]:2*int(64)[1040056] "temp"
                const-val low[1969087]:int(64)[13] "temp"
                (1969092 'move' low[1969087](1969089 '.v' _iterator[1906566] F0_low[2014903]))
                (1968588 call _build_tuple[1040014] low[1969087] call_tmp[1968578] ret_tmp[1968585])
                (1968592 'move' tmp[1968553] ret_tmp[1968585])
                (1968595 'move' tmp[1968536] tmp[1968553])
              }
              {
                const-val tmp[1968599]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1968601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1968603]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1969094]:int(64)[13] "temp"
                (1969099 'move' count[1969094](1969096 '.v' _iterator[1906566] F1_count[2014907]))
                (1968605 'move' call_tmp[1968603] count[1969094])
                const-val call_tmp[1968608]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1969101]:int(64)[13] "temp"
                (1969106 'move' count[1969101](1969103 '.v' _iterator[1906566] F1_count[2014907]))
                (1968610 'move' call_tmp[1968608](1968613 call -[962226] count[1969101]))
                const-val call_tmp[1968615]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1969108]:int(64)[13] "temp"
                (1969113 'move' low[1969108](1969110 '.v' _iterator[1906566] F0_low[2014903]))
                (1968617 'move' call_tmp[1968615](1968620 call +[439636] low[1969108] call_tmp[1968608]))
                const-val ret_tmp[1968623]:2*int(64)[1040056] "temp"
                const-val low[1969115]:int(64)[13] "temp"
                (1969120 'move' low[1969115](1969117 '.v' _iterator[1906566] F0_low[2014903]))
                (1968626 call _build_tuple[1040014] low[1969115] call_tmp[1968615] ret_tmp[1968623])
                (1968630 'move' tmp[1968599] ret_tmp[1968623])
                (1968633 'move' tmp[1968536] tmp[1968599])
              }
              (1968637 '=' tmp[1968534] tmp[1968536])
              (1968640 'noop')
              1
              ref call_tmp[1968642]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1968644 'move' call_tmp[1968642](1968646 '.' tmp[1968534] x0[1040052]))
              const-val start[1968649]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1968651]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1968653 'move' coerce_tmp[1968651](1968655 'deref' call_tmp[1968642]))
              (1968657 '=' start[1968649] coerce_tmp[1968651])
              (1968660 'noop')
              ref call_tmp[1968661]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1968663 'move' call_tmp[1968661](1968665 '.' tmp[1968534] x1[1040054]))
              const-val end[1968668]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1968670]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1968672 'move' coerce_tmp[1968670](1968674 'deref' call_tmp[1968661]))
              (1968676 '=' end[1968668] coerce_tmp[1968670])
              (1968679 'noop')
              val _indexOfInterest[1968680]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1968682]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1968684]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1968686]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
              (1968689 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1968651] coerce_tmp[1968670] ret_tmp[1968686])
              (1968693 'move' call_tmp[1968684] ret_tmp[1968686])
              (1968696 'move' _iterator[1968682](1968699 call _getIterator[1103301] call_tmp[1968684]))
              {
                val ret[1968702]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                val call_tmp[1968704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1968707 call chpl_range_check_stride[1102844])
                val i[1968708]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1968710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1968712 'move' i[1968708] 0)
                val call_tmp[1968715]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1968717]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1968719]:int(64)[13] "temp"
                (1968721 'move' low[1968719](1968723 '.v' _iterator[1968682] F0_low[2016401]))
                (1968726 'move' default_arg_first[1968717](1968729 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1968719]))
                const-val default_arg_last[1968731]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1968733]:int(64)[13] "temp"
                (1968735 'move' high[1968733](1968737 '.v' _iterator[1968682] F1_high[2016405]))
                (1968740 'move' default_arg_last[1968731](1968743 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1968733]))
                const-val _return_tmp_[1968745]:bool[10] "dead after last mention" "temp"
                const-val low[1968747]:int(64)[13] "temp"
                (1968749 'move' low[1968747](1968751 '.v' _iterator[1968682] F0_low[2016401]))
                const-val high[1968754]:int(64)[13] "temp"
                (1968756 'move' high[1968754](1968758 '.v' _iterator[1968682] F1_high[2016405]))
                (1968761 'move' _return_tmp_[1968745](1968764 call chpl_checkIfRangeIterWillOverflow[1096076] low[1968747] high[1968754] 1 default_arg_first[1968717] default_arg_last[1968731] 1))
                CForLoop[1968771] hazard
                {
                  const-val yret[1968800]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1968802 'move' yret[1968800] i[1968708])
                  const-val _yieldedIndex[1968805]:int(64)[13] "temp"
                  (1968807 'move' _yieldedIndex[1968805] i[1968708])
                  {
                    const-val i[1968811]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1968813 'move' i[1968811] _yieldedIndex[1968805])
                    const-val yret[1968816]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1968818 'move' yret[1968816] _yieldedIndex[1968805])
                    const-val _yieldedIndex[1968846]:int(64)[13] "temp"
                    (1969064 'move' _yieldedIndex[1968846] _yieldedIndex[1968805])
                    {
                      const-val i[1968848]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1968850 'move' i[1968848] _yieldedIndex[1968846])
                      const-val yret[1968853]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1968855 'move' yret[1968853] _yieldedIndex[1968846])
                      const-val _yieldedIndex[1968858]:int(64)[13] "temp"
                      (1968860 'move' _yieldedIndex[1968858] _yieldedIndex[1968846])
                      {
                        const-val i[1968864]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1968866 'move' i[1968864] _yieldedIndex[1968858])
                        ref call_tmp[1968869]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1968871]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                        const-val this[1968873]:TaskErrors[169656] "temp"
                        (1968875 'move' this[1968873](1968877 '.v' _iterator[169255] F0_this[2006195]))
                        (1968880 'move' _this_tmp_[1968871](1968883 call errorsArray[814057] this[1968873]))
                        val coerce_tmp[1968885]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1968887 'move' coerce_tmp[1968885](1968889 'deref' _this_tmp_[1968871]))
                        (1968891 'move' call_tmp[1968869](1968894 call this[1235753] coerce_tmp[1968885] _yieldedIndex[1968858]))
                        const-val call_tmp[1968897]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[1968899]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1968901 'move' coerce_tmp[1968899](1968904 call borrow[1235828] call_tmp[1968869]))
                        val coerce_tmp[1968906]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1968908 'move' coerce_tmp[1968906](1968910 'cast' object[22] coerce_tmp[1968899]))
                        (1968913 'move' call_tmp[1968897](1968916 call !=[1485] coerce_tmp[1968906] nil[44]))
                        const-val call_tmp[1968919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1968921 'move' call_tmp[1968919] call_tmp[1968897])
                        if call_tmp[1968897]
                        {
                          ref yret[1968926]:_ref(owned Error?)[966422] "dead after last mention" "YVV" "temp"
                          ref call_tmp[1968928]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1968930]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                          const-val this[1968932]:TaskErrors[169656] "temp"
                          (1968934 'move' this[1968932](1968936 '.v' _iterator[169255] F0_this[2006195]))
                          (1968939 'move' _this_tmp_[1968930](1968942 call errorsArray[814057] this[1968932]))
                          val coerce_tmp[1968944]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1968946 'move' coerce_tmp[1968944](1968948 'deref' _this_tmp_[1968930]))
                          (1968950 'move' call_tmp[1968928](1968953 call this[1235753] coerce_tmp[1968944] i[1968864]))
                          ref _yieldedIndex[1968956]:_ref(owned Error?)[966422] "temp"
                          (1968958 'move' _yieldedIndex[1968956] call_tmp[1968928])
                          {
                            ref err[1968962]:_ref(owned Error?)[966422] "index var" "insert auto destroy"
                            (1968964 'move' err[1968962] _yieldedIndex[1968956])
                            {
                              val call_tmp[1968968]:Error[167938] "dead at end of block" "maybe param" "temp"
                              (1968970 'move' call_tmp[1968968](1968973 call postfix![1769468] err[1968962]))
                              val e[1968975]:Error[167938] "dead at end of block" "insert auto destroy"
                              (1968977 'move' e[1968975](1968980 call chpl__initCopy[965617] call_tmp[1968968]))
                              const-val call_tmp[1968982]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1968984]:int(32)[95] "temp"
                              (1968986 'move' _virtual_method_tmp_[1968984](1968988 'getcid' e[1968975]))
                              val ret_tmp[1968990]:string[26] "temp"
                              (1968992 'virtual method call' message[167929] _virtual_method_tmp_[1968984] e[1968975] ret_tmp[1968990])
                              (1968997 'move' call_tmp[1968982] ret_tmp[1968990])
                              const-val call_tmp[1969000]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1969002 'move' call_tmp[1969000](1969005 call ==[38820] call_tmp[1968982] minMsg[169041]))
                              const-val call_tmp[1969008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1969010 'move' call_tmp[1969008] call_tmp[1969000])
                              if call_tmp[1969008]
                              {
                                const-val call_tmp[1969015]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[1969017]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1969019 'move' coerce_tmp[1969017](1969021 'cast' object[22] first[169053]))
                                (1969024 'move' call_tmp[1969015](1969027 call ==[1146] coerce_tmp[1969017] nil[44]))
                                const-val call_tmp[1969030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1969032 'move' call_tmp[1969030] call_tmp[1969015])
                                if call_tmp[1969030]
                                {
                                  val coerce_tmp[1969037]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1969039 'move' coerce_tmp[1969037] e[1968975])
                                  (1969043 call =[1232418] first[169053] coerce_tmp[1969037])
                                }
                                val coerce_tmp[1969047]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1969049 'move' coerce_tmp[1969047] e[1968975])
                                (1969053 call =[1232418] last[169060] coerce_tmp[1969047])
                              }
                              (1969058 call chpl__autoDestroy[1461530] call_tmp[1968982])
                            }
                            label _continueLabel[1969060]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[1968773]:int(64)[13] "temp"
                    (1968775 'move' low[1968773](1968777 '.v' _iterator[1968682] F0_low[2016401]))
                    (1968780 '=' i[1968708] low[1968773])
                  }
                  {
                    const-val high[1968784]:int(64)[13] "temp"
                    (1968786 'move' high[1968784](1968788 '.v' _iterator[1968682] F1_high[2016405]))
                    (1968791 '<=' i[1968708] high[1968784])
                  }
                  {
                    val call_tmp[1968795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1968797 '+=' i[1968708] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1968834]
              }
              (1968837 call _freeIterator[1103474] _iterator[1968682])
              (1968840 call chpl__autoDestroy[1534672] tmp[1968534])
              label _endchpl_direct_counted_range_iter_helper[1968842]
            }
            (1906714 call _freeIterator[1103724] _iterator[1906566])
            label _endchpl_direct_counted_range_iter[1906716]
          }
          (1906719 call _freeIterator[1103974] _iterator[1906529])
          label _endthese[1906721]
        }
        label _breakLabel[169260]
        (1842241 call _freeIterator[1238233] _iterator[169255])
      }
      const-val call_tmp[680022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680025 'move' call_tmp[680022](169291 call !=[38844] minMsg[169041] maxMsg[169046]))
      const-val call_tmp[680027]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680030 'move' call_tmp[680027] call_tmp[680022])
      if call_tmp[680027]
      {
        {
          ref _indexOfInterest[169324]:_ref(owned Error?)[966422] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169325]:_ic_these_TaskErrors[1237976] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[680034]:_ir_these_TaskErrors[1237982] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1831121]:_ir_these_TaskErrors[1237982] "temp"
          (169296 call these[168862] this[169682] ret_tmp[1831121])
          (1831124 'move' call_tmp[680034] ret_tmp[1831121])
          (169334 'move' _iterator[169325](169332 call _getIterator[1237991] call_tmp[680034]))
          {
            val ret[1906850]:_ir_these_TaskErrors[1237982] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1906852]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1906854]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1906856]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
            const-val this[1907121]:TaskErrors[169656] "temp"
            (1907126 'move' this[1907121](1907123 '.v' _iterator[169325] F0_this[2006195]))
            (1906858 'move' call_tmp[1906856](1906861 call nErrors[814031] this[1907121]))
            const-val call_tmp[1906863]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1906865]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1906867 'move' coerce_tmp[1906865](1906869 'deref' call_tmp[1906856]))
            const-val ret_tmp[1906871]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
            (1906874 call chpl_direct_counted_range_iter[457996] 0 coerce_tmp[1906865] ret_tmp[1906871])
            (1906878 'move' call_tmp[1906863] ret_tmp[1906871])
            (1906881 'move' _iterator[1906854](1906884 call _getIterator[1103805] call_tmp[1906863]))
            {
              val ret[1906887]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1906889]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1906891]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1906893]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1906895]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
              const-val low[1906897]:int(64)[13] "temp"
              (1906899 'move' low[1906897](1906901 '.v' _iterator[1906854] F0_low[2010431]))
              const-val count[1906904]:int(64)[13] "temp"
              (1906906 'move' count[1906904](1906908 '.v' _iterator[1906854] F1_count[2010435]))
              (1906912 call chpl_direct_counted_range_iter_helper[1102098] low[1906897] count[1906904] ret_tmp[1906895])
              (1906916 'move' call_tmp[1906893] ret_tmp[1906895])
              (1906919 'move' _iterator[1906891](1906922 call _getIterator[1103555] call_tmp[1906893]))
              {
                val ret[1969123]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                val call_tmp[1969125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1969127]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1969129]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1969131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1969655]:int(64)[13] "temp"
                (1969660 'move' count[1969655](1969657 '.v' _iterator[1906891] F1_count[2014907]))
                (1969133 'move' call_tmp[1969131](1969136 call <[948398] count[1969655]))
                (1969138 'move' tmp[1969129] call_tmp[1969131])
                (1969141 'move' tmp[1969127] call_tmp[1969131])
                const-val call_tmp[1969144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1969146 'move' call_tmp[1969144] call_tmp[1969131])
                if call_tmp[1969131]
                {
                  (1969152 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1969155]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1969157]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1969159]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1969161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1969662]:int(64)[13] "temp"
                (1969667 'move' count[1969662](1969664 '.v' _iterator[1906891] F1_count[2014907]))
                (1969163 'move' call_tmp[1969161](1969166 call ==[435628] count[1969662] 0))
                (1969169 'move' tmp[1969159] call_tmp[1969161])
                if call_tmp[1969161]
                {
                  const-val tmp[1969174]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1969176]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1969178]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1969669]:int(64)[13] "temp"
                  (1969674 'move' low[1969669](1969671 '.v' _iterator[1906891] F0_low[2014903]))
                  (1969180 'move' call_tmp[1969178](1969183 call _cast[956034] low[1969669]))
                  const-val call_tmp[1969185]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1969187]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1969189 'move' coerce_tmp[1969187](1969191 'cast' uint(64)[115] 1))
                  (1969194 'move' call_tmp[1969185](1969197 call -[962193] call_tmp[1969178]))
                  const-val call_tmp[1969199]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1969201 'move' call_tmp[1969199](1969204 call _cast[953543] call_tmp[1969185]))
                  const-val ret_tmp[1969206]:2*int(64)[1040056] "temp"
                  const-val low[1969676]:int(64)[13] "temp"
                  (1969681 'move' low[1969676](1969678 '.v' _iterator[1906891] F0_low[2014903]))
                  (1969209 call _build_tuple[1040014] low[1969676] call_tmp[1969199] ret_tmp[1969206])
                  (1969213 'move' tmp[1969174] ret_tmp[1969206])
                  (1969216 'move' tmp[1969157] tmp[1969174])
                }
                {
                  const-val tmp[1969220]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1969222]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1969224]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1969683]:int(64)[13] "temp"
                  (1969688 'move' count[1969683](1969685 '.v' _iterator[1906891] F1_count[2014907]))
                  (1969226 'move' call_tmp[1969224] count[1969683])
                  const-val call_tmp[1969229]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1969690]:int(64)[13] "temp"
                  (1969695 'move' count[1969690](1969692 '.v' _iterator[1906891] F1_count[2014907]))
                  (1969231 'move' call_tmp[1969229](1969234 call -[962226] count[1969690]))
                  const-val call_tmp[1969236]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1969697]:int(64)[13] "temp"
                  (1969702 'move' low[1969697](1969699 '.v' _iterator[1906891] F0_low[2014903]))
                  (1969238 'move' call_tmp[1969236](1969241 call +[439636] low[1969697] call_tmp[1969229]))
                  const-val ret_tmp[1969244]:2*int(64)[1040056] "temp"
                  const-val low[1969704]:int(64)[13] "temp"
                  (1969709 'move' low[1969704](1969706 '.v' _iterator[1906891] F0_low[2014903]))
                  (1969247 call _build_tuple[1040014] low[1969704] call_tmp[1969236] ret_tmp[1969244])
                  (1969251 'move' tmp[1969220] ret_tmp[1969244])
                  (1969254 'move' tmp[1969157] tmp[1969220])
                }
                (1969258 '=' tmp[1969155] tmp[1969157])
                (1969261 'noop')
                1
                ref call_tmp[1969263]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1969265 'move' call_tmp[1969263](1969267 '.' tmp[1969155] x0[1040052]))
                const-val start[1969270]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1969272]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1969274 'move' coerce_tmp[1969272](1969276 'deref' call_tmp[1969263]))
                (1969278 '=' start[1969270] coerce_tmp[1969272])
                (1969281 'noop')
                ref call_tmp[1969282]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1969284 'move' call_tmp[1969282](1969286 '.' tmp[1969155] x1[1040054]))
                const-val end[1969289]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1969291]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1969293 'move' coerce_tmp[1969291](1969295 'deref' call_tmp[1969282]))
                (1969297 '=' end[1969289] coerce_tmp[1969291])
                (1969300 'noop')
                val _indexOfInterest[1969301]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1969303]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1969305]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1969307]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                (1969310 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1969272] coerce_tmp[1969291] ret_tmp[1969307])
                (1969314 'move' call_tmp[1969305] ret_tmp[1969307])
                (1969317 'move' _iterator[1969303](1969320 call _getIterator[1103301] call_tmp[1969305]))
                {
                  val ret[1969323]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                  val call_tmp[1969325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1969328 call chpl_range_check_stride[1102844])
                  val i[1969329]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1969331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1969333 'move' i[1969329] 0)
                  val call_tmp[1969336]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1969338]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1969340]:int(64)[13] "temp"
                  (1969342 'move' low[1969340](1969344 '.v' _iterator[1969303] F0_low[2016401]))
                  (1969347 'move' default_arg_first[1969338](1969350 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1969340]))
                  const-val default_arg_last[1969352]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1969354]:int(64)[13] "temp"
                  (1969356 'move' high[1969354](1969358 '.v' _iterator[1969303] F1_high[2016405]))
                  (1969361 'move' default_arg_last[1969352](1969364 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1969354]))
                  const-val _return_tmp_[1969366]:bool[10] "dead after last mention" "temp"
                  const-val low[1969368]:int(64)[13] "temp"
                  (1969370 'move' low[1969368](1969372 '.v' _iterator[1969303] F0_low[2016401]))
                  const-val high[1969375]:int(64)[13] "temp"
                  (1969377 'move' high[1969375](1969379 '.v' _iterator[1969303] F1_high[2016405]))
                  (1969382 'move' _return_tmp_[1969366](1969385 call chpl_checkIfRangeIterWillOverflow[1096076] low[1969368] high[1969375] 1 default_arg_first[1969338] default_arg_last[1969352] 1))
                  CForLoop[1969392] hazard
                  {
                    const-val yret[1969421]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1969423 'move' yret[1969421] i[1969329])
                    const-val _yieldedIndex[1969426]:int(64)[13] "temp"
                    (1969428 'move' _yieldedIndex[1969426] i[1969329])
                    {
                      const-val i[1969432]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1969434 'move' i[1969432] _yieldedIndex[1969426])
                      const-val yret[1969437]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1969439 'move' yret[1969437] _yieldedIndex[1969426])
                      const-val _yieldedIndex[1969467]:int(64)[13] "temp"
                      (1969653 'move' _yieldedIndex[1969467] _yieldedIndex[1969426])
                      {
                        const-val i[1969469]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1969471 'move' i[1969469] _yieldedIndex[1969467])
                        const-val yret[1969474]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1969476 'move' yret[1969474] _yieldedIndex[1969467])
                        const-val _yieldedIndex[1969479]:int(64)[13] "temp"
                        (1969481 'move' _yieldedIndex[1969479] _yieldedIndex[1969467])
                        {
                          const-val i[1969485]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1969487 'move' i[1969485] _yieldedIndex[1969479])
                          ref call_tmp[1969490]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1969492]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                          const-val this[1969494]:TaskErrors[169656] "temp"
                          (1969496 'move' this[1969494](1969498 '.v' _iterator[169325] F0_this[2006195]))
                          (1969501 'move' _this_tmp_[1969492](1969504 call errorsArray[814057] this[1969494]))
                          val coerce_tmp[1969506]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1969508 'move' coerce_tmp[1969506](1969510 'deref' _this_tmp_[1969492]))
                          (1969512 'move' call_tmp[1969490](1969515 call this[1235753] coerce_tmp[1969506] _yieldedIndex[1969479]))
                          const-val call_tmp[1969518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[1969520]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1969522 'move' coerce_tmp[1969520](1969525 call borrow[1235828] call_tmp[1969490]))
                          val coerce_tmp[1969527]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1969529 'move' coerce_tmp[1969527](1969531 'cast' object[22] coerce_tmp[1969520]))
                          (1969534 'move' call_tmp[1969518](1969537 call !=[1485] coerce_tmp[1969527] nil[44]))
                          const-val call_tmp[1969540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1969542 'move' call_tmp[1969540] call_tmp[1969518])
                          if call_tmp[1969518]
                          {
                            ref yret[1969547]:_ref(owned Error?)[966422] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1969549]:_ref(owned Error?)[966422] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1969551]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "temp"
                            const-val this[1969553]:TaskErrors[169656] "temp"
                            (1969555 'move' this[1969553](1969557 '.v' _iterator[169325] F0_this[2006195]))
                            (1969560 'move' _this_tmp_[1969551](1969563 call errorsArray[814057] this[1969553]))
                            val coerce_tmp[1969565]:c_ptr(owned Error?)[1235615] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1969567 'move' coerce_tmp[1969565](1969569 'deref' _this_tmp_[1969551]))
                            (1969571 'move' call_tmp[1969549](1969574 call this[1235753] coerce_tmp[1969565] i[1969485]))
                            ref _yieldedIndex[1969577]:_ref(owned Error?)[966422] "temp"
                            (1969579 'move' _yieldedIndex[1969577] call_tmp[1969549])
                            {
                              ref err[1969583]:_ref(owned Error?)[966422] "index var" "insert auto destroy"
                              (1969585 'move' err[1969583] _yieldedIndex[1969577])
                              {
                                val call_tmp[1969589]:Error[167938] "dead at end of block" "maybe param" "temp"
                                (1969591 'move' call_tmp[1969589](1969594 call postfix![1769468] err[1969583]))
                                val e[1969596]:Error[167938] "dead at end of block" "insert auto destroy"
                                (1969598 'move' e[1969596](1969601 call chpl__initCopy[965617] call_tmp[1969589]))
                                const-val call_tmp[1969603]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[1969605]:int(32)[95] "temp"
                                (1969607 'move' _virtual_method_tmp_[1969605](1969609 'getcid' e[1969596]))
                                val ret_tmp[1969611]:string[26] "temp"
                                (1969613 'virtual method call' message[167929] _virtual_method_tmp_[1969605] e[1969596] ret_tmp[1969611])
                                (1969618 'move' call_tmp[1969603] ret_tmp[1969611])
                                const-val call_tmp[1969621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1969623 'move' call_tmp[1969621](1969626 call ==[38820] call_tmp[1969603] maxMsg[169046]))
                                const-val call_tmp[1969629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1969631 'move' call_tmp[1969629] call_tmp[1969621])
                                if call_tmp[1969629]
                                {
                                  val coerce_tmp[1969636]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1969638 'move' coerce_tmp[1969636] e[1969596])
                                  (1969642 call =[1232418] last[169060] coerce_tmp[1969636])
                                }
                                (1969647 call chpl__autoDestroy[1461530] call_tmp[1969603])
                              }
                              label _continueLabel[1969649]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1969394]:int(64)[13] "temp"
                      (1969396 'move' low[1969394](1969398 '.v' _iterator[1969303] F0_low[2016401]))
                      (1969401 '=' i[1969329] low[1969394])
                    }
                    {
                      const-val high[1969405]:int(64)[13] "temp"
                      (1969407 'move' high[1969405](1969409 '.v' _iterator[1969303] F1_high[2016405]))
                      (1969412 '<=' i[1969329] high[1969405])
                    }
                    {
                      val call_tmp[1969416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1969418 '+=' i[1969329] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1969455]
                }
                (1969458 call _freeIterator[1103474] _iterator[1969303])
                (1969461 call chpl__autoDestroy[1534672] tmp[1969155])
                label _endchpl_direct_counted_range_iter_helper[1969463]
              }
              (1907039 call _freeIterator[1103724] _iterator[1906891])
              label _endchpl_direct_counted_range_iter[1907041]
            }
            (1907044 call _freeIterator[1103974] _iterator[1906854])
            label _endthese[1907046]
          }
          label _breakLabel[169330]
          (1842250 call _freeIterator[1238233] _iterator[169325])
        }
      }
    }
    const-val call_tmp[680061]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833047]:string[26] "temp"
    (169365 call _cast[1063153] n[169035] ret_tmp[1833047])
    (1833050 'move' call_tmp[680061] ret_tmp[1833047])
    const-val call_tmp[680066]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829797]:string[26] "temp"
    (169384 call +[38342] call_tmp[680061] " errors: " ret_tmp[1829797])
    (1829800 'move' call_tmp[680066] ret_tmp[1829797])
    val ret[169386]:string[26] "dead at end of block" "insert auto destroy"
    (544620 'move' ret[169386] call_tmp[680066])
    const-val tmp[428391]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428412]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1770037]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1770043 'move' coerce_tmp[1770037](1770039 'cast' object[22] first[169053]))
    (428423 'move' tmp[428412](169392 call !=[1485] coerce_tmp[1770037] nil[44]))
    val tmp[570480]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570481]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680076]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680079 'move' call_tmp[680076] tmp[428412])
    (570486 'move' tmp[570481] call_tmp[680076])
    if tmp[570481]
    {
      const-val tmp[570488]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1770049]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1770055 'move' coerce_tmp[1770049](1770051 'cast' object[22] last[169060]))
      (680084 'move' call_tmp[680081](169396 call !=[1485] coerce_tmp[1770049] nil[44]))
      (570490 'move' tmp[570488] call_tmp[680081])
      (570495 'move' tmp[570480] tmp[570488])
    }
    {
      (570500 'move' tmp[570480] 0)
    }
    (428402 'move' tmp[428391] tmp[570480])
    val tmp[570507]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570508]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680094 'move' call_tmp[680091] tmp[428391])
    (570513 'move' tmp[570508] call_tmp[680091])
    if tmp[570508]
    {
      const-val tmp[570515]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1770061]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1770067 'move' coerce_tmp[1770061](1770063 'cast' object[22] first[169053]))
      val coerce_tmp[1770069]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1770075 'move' coerce_tmp[1770069](1770071 'cast' object[22] last[169060]))
      (680099 'move' call_tmp[680096](169402 call !=[1485] coerce_tmp[1770061] coerce_tmp[1770069]))
      (570517 'move' tmp[570515] call_tmp[680096])
      (570522 'move' tmp[570507] tmp[570515])
    }
    {
      (570527 'move' tmp[570507] 0)
    }
    const-val call_tmp[680101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680104 'move' call_tmp[680101] tmp[570507])
    if call_tmp[680101]
    {
      val call_tmp[680106]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680109 'move' call_tmp[680106](169409 call postfix![967783] first[169053]))
      const-val call_tmp[680111]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831149]:string[26] "temp"
      (169412 call chpl_describe_error[169789] call_tmp[680106] ret_tmp[1831149])
      (1831152 'move' call_tmp[680111] ret_tmp[1831149])
      const-val call_tmp[680116]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829803]:string[26] "temp"
      (169430 call +[38342] call_tmp[680111] " ... " ret_tmp[1829803])
      (1829806 'move' call_tmp[680116] ret_tmp[1829803])
      val call_tmp[680121]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680124 'move' call_tmp[680121](169434 call postfix![967783] last[169060]))
      const-val call_tmp[680126]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831155]:string[26] "temp"
      (169437 call chpl_describe_error[169789] call_tmp[680121] ret_tmp[1831155])
      (1831158 'move' call_tmp[680126] ret_tmp[1831155])
      const-val call_tmp[680131]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1829809]:string[26] "temp"
      (169438 call +[38342] call_tmp[680116] call_tmp[680126] ret_tmp[1829809])
      (1829812 'move' call_tmp[680131] ret_tmp[1829809])
      (169440 call +=[38797] ret[169386] call_tmp[680131])
      (1842253 call chpl__autoDestroy[1461530] call_tmp[680131])
      (1842256 call chpl__autoDestroy[1461530] call_tmp[680126])
      (1842259 call chpl__autoDestroy[1461530] call_tmp[680116])
      (1842262 call chpl__autoDestroy[1461530] call_tmp[680111])
    }
    {
      const-val call_tmp[680136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1770085]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1770091 'move' coerce_tmp[1770085](1770087 'cast' object[22] first[169053]))
      (680139 'move' call_tmp[680136](169445 call !=[1485] coerce_tmp[1770085] nil[44]))
      const-val call_tmp[680141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680144 'move' call_tmp[680141] call_tmp[680136])
      if call_tmp[680141]
      {
        val call_tmp[680146]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
        (680149 'move' call_tmp[680146] first[169053])
        const-val call_tmp[680151]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831161]:string[26] "temp"
        (169453 call chpl_describe_error[169789] call_tmp[680146] ret_tmp[1831161])
        (1831164 'move' call_tmp[680151] ret_tmp[1831161])
        (169454 call +=[38797] ret[169386] call_tmp[680151])
        (1842266 call chpl__autoDestroy[1461530] call_tmp[680151])
      }
    }
    (1770098 'move' ret[522186] ret[169386])
    (1842269 call chpl__autoDestroy[1461530] call_tmp[680061])
    (1842272 call chpl__autoDestroy[1461530] maxMsg[169046])
    (1842275 call chpl__autoDestroy[1461530] minMsg[169041])
    gotoReturn _end_message[522184] _end_message[522184]
    label _end_message[522184]
    (1841647 '=' _retArg[1841645] ret[522186])
    (1841649 return _void[55])
  }
  function TaskErrors[169656].nErrors[814031](const in arg this[814035]:TaskErrors[169656]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814045]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[814052]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (814055 'move' call_tmp[814052](814039 '.' this[814035] nErrors[168317]))
    (814050 'move' ret[814045] call_tmp[814052])
    (814047 return ret[814045])
  }
  function TaskErrors[169656].errorsArray[814057](const in arg this[814061]:TaskErrors[169656]) ref : _ref(c_ptr(owned Error?))[1235624] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814071]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "RVV" "temp"
    ref call_tmp[814078]:_ref(c_ptr(owned Error?))[1235624] "dead after last mention" "maybe param" "temp"
    (814081 'move' call_tmp[814078](814065 '.' this[814061] errorsArray[168328]))
    (814076 'move' ret[814071] call_tmp[814078])
    (814073 return ret[814071])
  }
  function _new[1240980](ref arg group[1240989]:_ref(chpl_TaskErrors)[940940]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1804815]:TaskErrors[169656] "temp"
    val ret[1241019]:TaskErrors[169656] "dead after last mention" "RVV" "temp"
    val initTemp[1240982]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1241026]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241029 'move' call_tmp[1241026](1241040 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1241043]:c_void_ptr[149] "dead after last mention" "temp"
    (1241045 'move' cast_tmp[1241043](1240997 call chpl_here_alloc[187742] call_tmp[1241026] 41))
    (1241000 'move' initTemp[1240982](1241047 'cast' TaskErrors[169656] cast_tmp[1241043]))
    (1241002 'setcid' initTemp[1240982])
    (1240983 call init[168338] initTemp[1240982] group[1240989])
    val tmp[1241004]:TaskErrors[169656] "dead after last mention" "temp"
    (1241008 'move' tmp[1241004] initTemp[1240982])
    (1241024 'move' ret[1241019] tmp[1241004])
    (1241021 return ret[1241019])
  }
  function _new[1760221](const in arg err[1760230]:Error[167938]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1805251]:TaskErrors[169656] "temp"
    val ret[1760258]:TaskErrors[169656] "dead after last mention" "RVV" "temp"
    val initTemp[1760223]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1760265]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1760268 'move' call_tmp[1760265](1760277 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1760280]:c_void_ptr[149] "dead after last mention" "temp"
    (1760282 'move' cast_tmp[1760280](1760236 call chpl_here_alloc[187742] call_tmp[1760265] 41))
    (1760239 'move' initTemp[1760223](1760284 'cast' TaskErrors[169656] cast_tmp[1760280]))
    (1760241 'setcid' initTemp[1760223])
    (1760224 call init[168719] initTemp[1760223] err[1760230])
    val tmp[1760243]:TaskErrors[169656] "dead after last mention" "temp"
    (1760247 'move' tmp[1760243] initTemp[1760223])
    (1760263 'move' ret[1760258] tmp[1760243])
    (1760260 return ret[1760258])
  }
  type TaskErrors[169656] val super[355708]:Error[167938] "super class" val nErrors[168317]:int(64)[13] "no doc" val errorsArray[168328]:c_ptr(owned Error?)[1235615] "no doc"
  function chpl_error_type_name[169706](const in arg err[169703]:Error[167938], ref arg _retArg[1831143]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522231]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680202]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680205 'move' call_tmp[680202](169728 'getcid' err[169703]))
    const-val cid[169729]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544624 'move' cid[169729] call_tmp[680202])
    const-val call_tmp[680207]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680210 'move' call_tmp[680207](169754 'class name by id' cid[169729]))
    const-val nameC[169755]:c_string[19] "dead at end of block" "insert auto destroy"
    (544626 'move' nameC[169755](1759784 call chpl__initCopy[21695] call_tmp[680207]))
    const-val nameS[169760]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544628]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1808107]:Error[167938] "error variable" "temp"
      (1808123 'move' error[1808107] nil[44])
      const-val call_tmp[680212]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1759800]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1759805 'move' default_arg_length[1759800](1759802 call createStringWithNewBuffer_default_length[964046] nameC[169755] error[1808107]))
      val errorExists[2107872]:bool[10] "temp"
      (2107877 'move' errorExists[2107872](2107874 '!=' error[1808107] nil[44]))
      if errorExists[2107872]
      {
        gotoErrorHandling handler[1808108] handler[1808108]
      }
      const-val ret_tmp[1829015]:string[26] "temp"
      (169768 call createStringWithNewBuffer[30410] nameC[169755] default_arg_length[1759800] strict[173646] error[1808107] ret_tmp[1829015])
      (1829018 'move' call_tmp[680212] ret_tmp[1829015])
      val errorExists[2107880]:bool[10] "temp"
      (2107885 'move' errorExists[2107880](2107882 '!=' error[1808107] nil[44]))
      if errorExists[2107880]
      {
        gotoErrorHandling handler[1808108] handler[1808108]
      }
      (544639 'move' nameS[169760] call_tmp[680212])
      label handler[1808108]
      const-val shouldHandleError[1808132]:bool[10] "temp"
      val errorExists[2107888]:bool[10] "temp"
      (2107893 'move' errorExists[2107888](2107890 '!=' error[1808107] nil[44]))
      (1808136 'move' shouldHandleError[1808132] errorExists[2107888])
      if shouldHandleError[1808132]
      {
        (1808129 call chpl_uncaught_error[170243] error[1808107])
      }
    }
    (1759819 'move' ret[522231] nameS[169760])
    gotoReturn _end_chpl_error_type_name[522229] _end_chpl_error_type_name[522229]
    label _end_chpl_error_type_name[522229]
    (1831145 '=' _retArg[1831143] ret[522231])
    (1831147 return _void[55])
  }
  function chpl_describe_error[169789](const in arg err[169786]:Error[167938], ref arg _retArg[1831173]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522243]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680217]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1831137]:string[26] "temp"
    (169795 call chpl_error_type_name[169706] err[169786] ret_tmp[1831137])
    (1831140 'move' call_tmp[680217] ret_tmp[1831137])
    const-val nameS[169796]:string[26] "dead at end of block" "insert auto destroy"
    (544642 'move' nameS[169796] call_tmp[680217])
    const-val call_tmp[680222]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829815]:string[26] "temp"
    (169803 call +[38342] nameS[169796] ": " ret_tmp[1829815])
    (1829818 'move' call_tmp[680222] ret_tmp[1829815])
    const-val call_tmp[680229]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1800887]:int(32)[95] "temp"
    (1800891 'move' _virtual_method_tmp_[1800887](1800889 'getcid' err[169786]))
    val ret_tmp[1831089]:string[26] "temp"
    (169810 'virtual method call' message[167929] _virtual_method_tmp_[1800887] err[169786] ret_tmp[1831089])
    (1831092 'move' call_tmp[680229] ret_tmp[1831089])
    const-val call_tmp[680234]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829821]:string[26] "temp"
    (169811 call +[38342] call_tmp[680222] call_tmp[680229] ret_tmp[1829821])
    (1829824 'move' call_tmp[680234] ret_tmp[1829821])
    const-val ret[169813]:string[26] "dead at end of block" "insert auto destroy"
    (544644 'move' ret[169813] call_tmp[680234])
    (1759826 'move' ret[522243] ret[169813])
    (1842278 call chpl__autoDestroy[1461530] call_tmp[680229])
    (1842281 call chpl__autoDestroy[1461530] call_tmp[680222])
    (1842284 call chpl__autoDestroy[1461530] nameS[169796])
    gotoReturn _end_chpl_describe_error[522241] _end_chpl_describe_error[522241]
    label _end_chpl_describe_error[522241]
    (1831175 '=' _retArg[1831173] ret[522243])
    (1831177 return _void[55])
  }
  function chpl_do_fix_thrown_error[169831](const in arg err[169828]:Error[167938]) : Error[167938] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522255]:Error[167938] "dead after last mention" "RVV" "temp"
    val fixErr[169839]:Error[167938] "dead at end of block" "insert auto destroy"
    (544646 'move' fixErr[169839](969483 call chpl__initCopy[967374] err[169828]))
    const-val call_tmp[680239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969486]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969491 'move' coerce_tmp[969486](969488 'cast' object[22] fixErr[169839]))
    (680242 'move' call_tmp[680239](169846 call ==[1146] coerce_tmp[969486] nil[44]))
    const-val call_tmp[680244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680247 'move' call_tmp[680244] call_tmp[680239])
    if call_tmp[680244]
    {
      val call_tmp[680249]:NilThrownError[167983] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[969601]:NilThrownError[167983] "dead after last mention" "temp"
      (969603 'move' new_temp[969601](969533 call _new[969549]))
      (680252 'move' call_tmp[680249] new_temp[969601])
      val coerce_tmp[969708]:NilThrownError[167983] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969714 'move' coerce_tmp[969708] call_tmp[680249])
      (169855 call =[969663] fixErr[169839] coerce_tmp[969708])
    }
    const-val call_tmp[680254]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680257 'move' call_tmp[680254](169881 '_get_user_line'))
    const-val line[169882]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544648 'move' line[169882] call_tmp[680254])
    const-val call_tmp[680259]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680262 'move' call_tmp[680259](169904 '_get_user_file'))
    const-val fileId[169905]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544650 'move' fileId[169905] call_tmp[680259])
    val call_tmp[680264]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680267 'move' call_tmp[680264](169910 call postfix![967774] fixErr[169839]))
    ref call_tmp[680271]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[969725]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969730 'move' coerce_tmp[969725] call_tmp[680264])
    (680274 'move' call_tmp[680271](169914 call _hasThrowInfo[811720] coerce_tmp[969725]))
    const-val call_tmp[680276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[969733]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969737 'move' coerce_tmp[969733](969735 'deref' call_tmp[680271]))
    (680279 'move' call_tmp[680276](169917 call ![7494] coerce_tmp[969733]))
    const-val call_tmp[680281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680284 'move' call_tmp[680281] call_tmp[680276])
    if call_tmp[680281]
    {
      val call_tmp[680286]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680289 'move' call_tmp[680286](169920 call postfix![967774] fixErr[169839]))
      ref call_tmp[680293]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969741]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969746 'move' coerce_tmp[969741] call_tmp[680286])
      (680296 'move' call_tmp[680293](169922 call _hasThrowInfo[811720] coerce_tmp[969741]))
      (169926 call =[435174] call_tmp[680293] 1)
      val call_tmp[680298]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680301 'move' call_tmp[680298](169931 call postfix![967774] fixErr[169839]))
      ref call_tmp[680305]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969751]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969756 'move' coerce_tmp[969751] call_tmp[680298])
      (680308 'move' call_tmp[680305](169935 call thrownLine[811642] coerce_tmp[969751]))
      (169939 call =[435327] call_tmp[680305] line[169882])
      val call_tmp[680310]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680313 'move' call_tmp[680310](169943 call postfix![967774] fixErr[169839]))
      ref call_tmp[680317]:_ref(int(32))[936626] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969761]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969766 'move' coerce_tmp[969761] call_tmp[680310])
      (680320 'move' call_tmp[680317](169947 call thrownFileId[811668] coerce_tmp[969761]))
      (169951 call =[435306] call_tmp[680317] fileId[169905])
    }
    val call_tmp[680322]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680325 'move' call_tmp[680322](169961 call _to_nonnil[968013] fixErr[169839]))
    (969772 'move' ret[522255] call_tmp[680322])
    gotoReturn _end_chpl_do_fix_thrown_error[522253] _end_chpl_do_fix_thrown_error[522253]
    label _end_chpl_do_fix_thrown_error[522253]
    (522257 return ret[522255])
  }
  function chpl_fix_thrown_error[170003](const  ref arg err[170000]:owned Error[966458]) : Error[167938] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969453]:owned Error[966458] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969456 'move' _formal_tmp_err[969453] err[170000])
    val ret[522277]:Error[167938] "dead after last mention" "RVV" "temp"
    val call_tmp[680341]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680344 'move' call_tmp[680341](170013 call release[969198] _formal_tmp_err[969453]))
    val call_tmp[680346]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969474]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969480 'move' coerce_tmp[969474] call_tmp[680341])
    (680349 'move' call_tmp[680346](170015 call chpl_do_fix_thrown_error[169831] coerce_tmp[969474]))
    (969775 'move' ret[522277] call_tmp[680346])
    (1842287 call chpl__autoDestroy[1468631] _formal_tmp_err[969453])
    (522279 return ret[522277])
  }
  function chpl_delete_error[170217](const in arg err[170214]:Error[167938]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1759673]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1759678 'move' coerce_tmp[1759673](1759675 'cast' object[22] err[170214]))
    (680404 'move' call_tmp[680401](170221 call !=[1485] coerce_tmp[1759673] nil[44]))
    const-val call_tmp[680406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680409 'move' call_tmp[680406] call_tmp[680401])
    if call_tmp[680406]
    {
      (170225 call chpl__delete[1236183] err[170214])
    }
    (522298 return _void[55])
  }
  function chpl_uncaught_error[170243](const in arg err[170240]:Error[167938]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680411]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680414 'move' call_tmp[680411](170275 '_get_user_file'))
    const-val call_tmp[680416]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680419 'move' call_tmp[680416](170276 'chpl_lookupFilename' call_tmp[680411]))
    const-val myFileC[170277]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544656 'move' myFileC[170277](1759682 call chpl__initCopy[21695] call_tmp[680416]))
    const-val myFileS[170282]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544658]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1808140]:Error[167938] "error variable" "temp"
      (1808156 'move' error[1808140] nil[44])
      const-val call_tmp[680421]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1759698]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1759703 'move' default_arg_length[1759698](1759700 call createStringWithNewBuffer_default_length[964046] myFileC[170277] error[1808140]))
      val errorExists[2107896]:bool[10] "temp"
      (2107901 'move' errorExists[2107896](2107898 '!=' error[1808140] nil[44]))
      if errorExists[2107896]
      {
        gotoErrorHandling handler[1808141] handler[1808141]
      }
      const-val ret_tmp[1829021]:string[26] "temp"
      (170290 call createStringWithNewBuffer[30410] myFileC[170277] default_arg_length[1759698] strict[173646] error[1808140] ret_tmp[1829021])
      (1829024 'move' call_tmp[680421] ret_tmp[1829021])
      val errorExists[2107904]:bool[10] "temp"
      (2107909 'move' errorExists[2107904](2107906 '!=' error[1808140] nil[44]))
      if errorExists[2107904]
      {
        gotoErrorHandling handler[1808141] handler[1808141]
      }
      (544669 'move' myFileS[170282] call_tmp[680421])
      label handler[1808141]
      const-val shouldHandleError[1808165]:bool[10] "temp"
      val errorExists[2107912]:bool[10] "temp"
      (2107917 'move' errorExists[2107912](2107914 '!=' error[1808140] nil[44]))
      (1808169 'move' shouldHandleError[1808165] errorExists[2107912])
      if shouldHandleError[1808165]
      {
        (1808162 call chpl_uncaught_error[170243] error[1808140])
      }
    }
    const-val call_tmp[680426]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680429 'move' call_tmp[680426](170300 '_get_user_line'))
    const-val myLine[170301]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544672 'move' myLine[170301] call_tmp[680426])
    ref call_tmp[680433]:_ref(int(32))[936626] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1759716]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1759721 'move' coerce_tmp[1759716] err[170240])
    (680436 'move' call_tmp[680433](170309 call thrownFileId[811668] coerce_tmp[1759716]))
    const-val call_tmp[680438]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680441 'move' call_tmp[680438](170312 'chpl_lookupFilename' call_tmp[680433]))
    const-val thrownFileC[170313]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544674 'move' thrownFileC[170313](1759724 call chpl__initCopy[21695] call_tmp[680438]))
    const-val thrownFileS[170318]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544676]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1808173]:Error[167938] "error variable" "temp"
      (1808189 'move' error[1808173] nil[44])
      const-val call_tmp[680443]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1759740]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1759745 'move' default_arg_length[1759740](1759742 call createStringWithNewBuffer_default_length[964046] thrownFileC[170313] error[1808173]))
      val errorExists[2107920]:bool[10] "temp"
      (2107925 'move' errorExists[2107920](2107922 '!=' error[1808173] nil[44]))
      if errorExists[2107920]
      {
        gotoErrorHandling handler[1808174] handler[1808174]
      }
      const-val ret_tmp[1829027]:string[26] "temp"
      (170326 call createStringWithNewBuffer[30410] thrownFileC[170313] default_arg_length[1759740] strict[173646] error[1808173] ret_tmp[1829027])
      (1829030 'move' call_tmp[680443] ret_tmp[1829027])
      val errorExists[2107928]:bool[10] "temp"
      (2107933 'move' errorExists[2107928](2107930 '!=' error[1808173] nil[44]))
      if errorExists[2107928]
      {
        gotoErrorHandling handler[1808174] handler[1808174]
      }
      (544687 'move' thrownFileS[170318] call_tmp[680443])
      label handler[1808174]
      const-val shouldHandleError[1808198]:bool[10] "temp"
      val errorExists[2107936]:bool[10] "temp"
      (2107941 'move' errorExists[2107936](2107938 '!=' error[1808173] nil[44]))
      (1808202 'move' shouldHandleError[1808198] errorExists[2107936])
      if shouldHandleError[1808198]
      {
        (1808195 call chpl_uncaught_error[170243] error[1808173])
      }
    }
    ref call_tmp[680450]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1759758]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1759763 'move' coerce_tmp[1759758] err[170240])
    (680453 'move' call_tmp[680450](170335 call thrownLine[811642] coerce_tmp[1759758]))
    const-val thrownLine[170338]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1759768]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1759772 'move' coerce_tmp[1759768](1759770 'deref' call_tmp[680450]))
    (1842290 '=' thrownLine[170338] coerce_tmp[1759768])
    (544690 'noop')
    const-val call_tmp[680455]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1759775]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1759780 'move' coerce_tmp[1759775] err[170240])
    const-val ret_tmp[1831167]:string[26] "temp"
    (170362 call chpl_describe_error[169789] coerce_tmp[1759775] ret_tmp[1831167])
    (1831170 'move' call_tmp[680455] ret_tmp[1831167])
    const-val call_tmp[680460]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829827]:string[26] "temp"
    (170363 call +[38342] "uncaught " call_tmp[680455] ret_tmp[1829827])
    (1829830 'move' call_tmp[680460] ret_tmp[1829827])
    const-val call_tmp[680465]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829833]:string[26] "temp"
    (170382 call +[38342] call_tmp[680460] "\n  " ret_tmp[1829833])
    (1829836 'move' call_tmp[680465] ret_tmp[1829833])
    const-val call_tmp[680470]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829839]:string[26] "temp"
    (170385 call +[38342] call_tmp[680465] thrownFileS[170318] ret_tmp[1829839])
    (1829842 'move' call_tmp[680470] ret_tmp[1829839])
    const-val call_tmp[680475]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829845]:string[26] "temp"
    (170388 call +[38342] call_tmp[680470] ":" ret_tmp[1829845])
    (1829848 'move' call_tmp[680475] ret_tmp[1829845])
    const-val call_tmp[680480]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833053]:string[26] "temp"
    (170392 call _cast[1063153] thrownLine[170338] ret_tmp[1833053])
    (1833056 'move' call_tmp[680480] ret_tmp[1833053])
    const-val call_tmp[680485]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829851]:string[26] "temp"
    (170394 call +[38342] call_tmp[680475] call_tmp[680480] ret_tmp[1829851])
    (1829854 'move' call_tmp[680485] ret_tmp[1829851])
    const-val call_tmp[680490]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829857]:string[26] "temp"
    (170413 call +[38342] call_tmp[680485] ": thrown here" ret_tmp[1829857])
    (1829860 'move' call_tmp[680490] ret_tmp[1829857])
    const-val call_tmp[680495]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829863]:string[26] "temp"
    (170416 call +[38342] call_tmp[680490] "\n  " ret_tmp[1829863])
    (1829866 'move' call_tmp[680495] ret_tmp[1829863])
    const-val call_tmp[680500]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829869]:string[26] "temp"
    (170419 call +[38342] call_tmp[680495] myFileS[170282] ret_tmp[1829869])
    (1829872 'move' call_tmp[680500] ret_tmp[1829869])
    const-val call_tmp[680505]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829875]:string[26] "temp"
    (170422 call +[38342] call_tmp[680500] ":" ret_tmp[1829875])
    (1829878 'move' call_tmp[680505] ret_tmp[1829875])
    const-val call_tmp[680510]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833059]:string[26] "temp"
    (170426 call _cast[1063153] myLine[170301] ret_tmp[1833059])
    (1833062 'move' call_tmp[680510] ret_tmp[1833059])
    const-val call_tmp[680515]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1829881]:string[26] "temp"
    (170428 call +[38342] call_tmp[680505] call_tmp[680510] ret_tmp[1829881])
    (1829884 'move' call_tmp[680515] ret_tmp[1829881])
    const-val call_tmp[680520]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829887]:string[26] "temp"
    (170447 call +[38342] call_tmp[680515] ": uncaught here" ret_tmp[1829887])
    (1829890 'move' call_tmp[680520] ret_tmp[1829887])
    const-val s[170449]:string[26] "dead at end of block" "insert auto destroy"
    (544692 'move' s[170449] call_tmp[680520])
    const-val call_tmp[680527]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680530 'move' call_tmp[680527](170459 call c_str[32932] s[170449]))
    (170461 call chpl_error_preformatted[1759842] call_tmp[680527])
    (1842293 call chpl__autoDestroy[1461530] s[170449])
    (1842296 call chpl__autoDestroy[1461530] call_tmp[680515])
    (1842299 call chpl__autoDestroy[1461530] call_tmp[680510])
    (1842302 call chpl__autoDestroy[1461530] call_tmp[680505])
    (1842305 call chpl__autoDestroy[1461530] call_tmp[680500])
    (1842308 call chpl__autoDestroy[1461530] call_tmp[680495])
    (1842311 call chpl__autoDestroy[1461530] call_tmp[680490])
    (1842314 call chpl__autoDestroy[1461530] call_tmp[680485])
    (1842317 call chpl__autoDestroy[1461530] call_tmp[680480])
    (1842320 call chpl__autoDestroy[1461530] call_tmp[680475])
    (1842323 call chpl__autoDestroy[1461530] call_tmp[680470])
    (1842326 call chpl__autoDestroy[1461530] call_tmp[680465])
    (1842329 call chpl__autoDestroy[1461530] call_tmp[680460])
    (1842332 call chpl__autoDestroy[1461530] call_tmp[680455])
    (1842335 call chpl__autoDestroy[1461530] thrownFileS[170318])
    (1842338 call chpl__autoDestroy[1461530] myFileS[170282])
    (522302 return _void[55])
  }
  function chpl_propagate_error[170472](const in arg err[170469]:Error[167938]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170477 call chpl_uncaught_error[170243] err[170469])
    (522304 return _void[55])
  }
  function chpl_forall_error[170489](const in arg err[170486]:Error[167938]) : Error[167938] "no doc" "resolved"
  {
    val ret[522308]:Error[167938] "dead after last mention" "RVV" "temp"
    val call_tmp[680532]:TaskErrors[169656] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1760072]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1760077 'move' coerce_tmp[1760072] err[170486])
    (680535 'move' call_tmp[680532](170497 call _cast[1759930] coerce_tmp[1760072]))
    const-val call_tmp[680537]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1760105]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1760110 'move' coerce_tmp[1760105](1760107 'cast' object[22] call_tmp[680532]))
    (680540 'move' call_tmp[680537](170502 call _cond_test[9881] coerce_tmp[1760105]))
    if call_tmp[680537]
    {
      (1760290 'move' ret[522308] err[170486])
      gotoReturn _end_chpl_forall_error[522306] _end_chpl_forall_error[522306]
    }
    val call_tmp[680542]:TaskErrors[169656] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1760271]:TaskErrors[169656] "dead after last mention" "temp"
    (1760273 'move' new_temp[1760271](1760117 call _new[1760221] err[170486]))
    (680545 'move' call_tmp[680542] new_temp[1760271])
    (522320 'move' ret[522308](1760292 'cast' Error[167938] call_tmp[680542]))
    label _end_chpl_forall_error[522306]
    (522310 return ret[522308])
  }
  function chpl_enum_cast_error[1071855](const in arg casted[1071857]:uint(8)[100], const  ref arg enumName[1071859]:string[26], ref arg error_out[1810447]:Error[167938]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1071865]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833385]:string[26] "temp"
    (1071870 call _cast[1071919] casted[1071857] ret_tmp[1833385])
    (1833388 'move' call_tmp[1071865] ret_tmp[1833385])
    const-val call_tmp[1071873]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830019]:string[26] "temp"
    (1071878 call +[38342] "bad cast from int '" call_tmp[1071865] ret_tmp[1830019])
    (1830022 'move' call_tmp[1071873] ret_tmp[1830019])
    const-val call_tmp[1071881]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830025]:string[26] "temp"
    (1071886 call +[38342] call_tmp[1071873] "' to enum '" ret_tmp[1830025])
    (1830028 'move' call_tmp[1071881] ret_tmp[1830025])
    const-val call_tmp[1071889]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830031]:string[26] "temp"
    (1071894 call +[38342] call_tmp[1071881] enumName[1071859] ret_tmp[1830031])
    (1830034 'move' call_tmp[1071889] ret_tmp[1830031])
    const-val call_tmp[1071897]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073555]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1073557 'move' new_temp[1073555](1073481 call _new[1073502] call_tmp[1071889] "'"))
    const-val initTemp[1073576]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "temp"
    (1073579 call init[1064209] initTemp[1073576] new_temp[1073555])
    (1071899 'move' call_tmp[1071897] initTemp[1073576])
    val call_tmp[1071907]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073593]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1833257]:owned Error[966458] "temp"
    (1073595 call _cast[1064730] call_tmp[1071897] ret_tmp[1833257])
    (1833260 'move' coerce_tmp[1073593] ret_tmp[1833257])
    const-val _formal_tmp_in_err[1073772]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073776 'move' _formal_tmp_in_err[1073772] coerce_tmp[1073593])
    (1071909 'move' call_tmp[1071907](1071912 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1073772]))
    {
      val castedError[1810452]:Error[167938] "temp"
      (1810458 'move' castedError[1810452] call_tmp[1071907])
      (1810460 '=' error_out[1810447] castedError[1810452])
      (1844167 call chpl__autoDestroy[1461530] call_tmp[1071889])
      (1844170 call chpl__autoDestroy[1461530] call_tmp[1071881])
      (1844173 call chpl__autoDestroy[1461530] call_tmp[1071873])
      (1844176 call chpl__autoDestroy[1461530] call_tmp[1071865])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1810449] _endchpl_enum_cast_error[1810449]
    }
    (1844188 call chpl__autoDestroy[1461530] call_tmp[1071889])
    (1844185 call chpl__autoDestroy[1461530] call_tmp[1071881])
    (1844182 call chpl__autoDestroy[1461530] call_tmp[1071873])
    (1844179 call chpl__autoDestroy[1461530] call_tmp[1071865])
    label _endchpl_enum_cast_error[1810449]
    (1071916 return _void[55])
  }
  function on_fn[935338](ref arg this[1806900]:_ref(chpl_TaskErrors)[940940], const in arg err[1806902]:Error[167938]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[679474]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
      (679477 'move' call_tmp[679474](361401 call _errorsLock[812242] this[1806900]))
      (168244 call lock[187277] call_tmp[679474])
      ref call_tmp[679483]:_ref(Error)[941020] "dead at end of block" "maybe param" "temp"
      (679486 'move' call_tmp[679483](388470 call _head[812216] this[1806900]))
      val tmp[168248]:Error[167938] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1232403]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1232407 'move' coerce_tmp[1232403](1232405 'deref' call_tmp[679483]))
      (1842618 '=' tmp[168248] coerce_tmp[1232403])
      (544566 'noop')
      ref call_tmp[679490]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1232410]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232415 'move' coerce_tmp[1232410] err[1806902])
      (679493 'move' call_tmp[679490](168255 call _next[811616] coerce_tmp[1232410]))
      (168259 call =[1232446] call_tmp[679490] tmp[168248])
      ref call_tmp[679497]:_ref(Error)[941020] "dead after last mention" "maybe param" "temp"
      (679500 'move' call_tmp[679497](388476 call _head[812216] this[1806900]))
      val coerce_tmp[1232483]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232489 'move' coerce_tmp[1232483] err[1806902])
      (168264 call =[1232446] call_tmp[679497] coerce_tmp[1232483])
      ref call_tmp[679504]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
      (679507 'move' call_tmp[679504](361407 call _errorsLock[812242] this[1806900]))
      (168272 call unlock[187369] call_tmp[679504])
    }
    (935345 return _void[55])
  }
  function chpl_error_preformatted[1759842](const in arg c_string[1759844]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1759850 return _void[55])
  }
  function wrapon_fn[2086449](const in arg dummy_locale_arg[2086451]:chpl_localeID_t[209294], in arg buf[2086453]:c_void_ptr[149], in arg buf_size[2086455]:int(64)[13], in arg c[2086457]:_class_localson_fn[2086403]) : void[4] "on block"
  {
    val _0_tmp[2086462]:chpl_localeID_t[209294] "temp"
    (2086467 'move' _0_tmp[2086462](2086464 '.v' c[2086457] _0_tmp[2086406]))
    ref _1_this[2086469]:chpl_TaskErrors[168302] "temp"
    (2086474 'move' _1_this[2086469](2086471 '.v' c[2086457] _1_this[2086408]))
    val _2_err[2086477]:Error[167938] "temp"
    (2086482 'move' _2_err[2086477](2086479 '.v' c[2086457] _2_err[2086410]))
    (2086460 call on_fn[935338] _1_this[2086469] _2_err[2086477])
    (2086485 return _void[55])
  }
}