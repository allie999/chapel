AST dump for ChapelError after pass bulkCopyRecords.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2034920] val _runtime_hdr[2034921]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034923]:chpl_localeID_t[209294] ref _1_this[2034925]:chpl_TaskErrors[168302] val _2_err[2034927]:Error[167938]
  function chpl__init_ChapelError[415928]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522246 return _void[55])
  }
  function Error[167938].init[167896](const in arg this[167940]:Error[167938]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462335]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462343 'move' super_tmp[462335](462336 '.v' this[167940] super[355608]))
    (462339 call init[749274] super_tmp[462335])
    val tmp[462270]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679312]:object[22] "dead at end of block" "maybe param" "temp"
    (679315 'move' call_tmp[679312](462281 'cast' object[22] this[167940]))
    val chpl__thisAsParent[462278]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544463 'move' chpl__thisAsParent[462278](965492 call chpl__initCopy[945182] call_tmp[679312]))
    (462284 'setcid' chpl__thisAsParent[462278])
    val tmp[462286]:Error[167938] "dead after last mention" "temp"
    val init_coerce_tmp[965495]:Error[167938] "dead after last mention" "temp"
    (965498 'move' init_coerce_tmp[965495](965510 'cast' Error[167938] nil[44]))
    (462289 'move' tmp[462286] init_coerce_tmp[965495])
    (462291 '.=' this[167940] _next[167866] tmp[462286])
    val tmp[462296]:int(64)[13] "dead after last mention" "temp"
    (965515 'move' tmp[462296] 0)
    (462301 '.=' this[167940] thrownLine[167871] tmp[462296])
    val tmp[462305]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679317]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (965518 'move' tmp[462305] 0)
    (462312 '.=' this[167940] thrownFileId[167879] tmp[462305])
    val tmp[462316]:string[26] "dead after last mention" "temp"
    (965520 call init[30760] tmp[462316])
    (462321 '.=' this[167940] _msg[167884] tmp[462316])
    val tmp[462326]:bool[10] "dead after last mention" "temp"
    (462329 'move' tmp[462326] 0)
    (462331 '.=' this[167940] _hasThrowInfo[167890] tmp[462326])
    (462346 'setcid' this[167940])
    (521995 return _void[55])
  }
  function Error[167938].init[167912](const in arg this[167944]:Error[167938], const  ref arg msg[167909]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462418]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462426 'move' super_tmp[462418](462419 '.v' this[167944] super[355608]))
    (462422 call init[749274] super_tmp[462418])
    val tmp[462352]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679327]:object[22] "dead at end of block" "maybe param" "temp"
    (679330 'move' call_tmp[679327](462363 'cast' object[22] this[167944]))
    val chpl__thisAsParent[462360]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544465 'move' chpl__thisAsParent[462360](1063978 call chpl__initCopy[945182] call_tmp[679327]))
    (462366 'setcid' chpl__thisAsParent[462360])
    val tmp[462369]:Error[167938] "dead after last mention" "temp"
    val init_coerce_tmp[1063981]:Error[167938] "dead after last mention" "temp"
    (1063984 'move' init_coerce_tmp[1063981](1063998 'cast' Error[167938] nil[44]))
    (462372 'move' tmp[462369] init_coerce_tmp[1063981])
    (462374 '.=' this[167944] _next[167866] tmp[462369])
    val tmp[462378]:int(64)[13] "dead after last mention" "temp"
    (1064003 'move' tmp[462378] 0)
    (462383 '.=' this[167944] thrownLine[167871] tmp[462378])
    val tmp[462387]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679332]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1064006 'move' tmp[462387] 0)
    (462394 '.=' this[167944] thrownFileId[167879] tmp[462387])
    val tmp[462398]:string[26] "dead after last mention" "temp"
    (462401 call init=[30771] tmp[462398] msg[167909])
    (462403 '.=' this[167944] _msg[167884] tmp[462398])
    val tmp[462409]:bool[10] "dead after last mention" "temp"
    (462412 'move' tmp[462409] 0)
    (462414 '.=' this[167944] _hasThrowInfo[167890] tmp[462409])
    (462429 'setcid' this[167944])
    (521997 return _void[55])
  }
  function Error[167938].message[167929](const in arg this[167948]:Error[167938], ref arg _retArg[1787953]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522001]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679339]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
    (679342 'move' call_tmp[679339](388369 call _msg[811605] this[167948]))
    (522006 'move' ret[522001](1787957 call chpl__initCopy[981259] call_tmp[679339]))
    (1787955 '=' _retArg[1787953] ret[522001])
    (1787959 return _void[55])
  }
  function Error[167938]._next[811527](const in arg this[811531]:Error[167938]) ref : _ref(Error)[940931] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811541]:_ref(Error)[940931] "dead after last mention" "RVV" "temp"
    ref call_tmp[811548]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
    (811551 'move' call_tmp[811548](811535 '.' this[811531] _next[167866]))
    (811546 'move' ret[811541] call_tmp[811548])
    (811543 return ret[811541])
  }
  function Error[167938].thrownLine[811553](const in arg this[811557]:Error[167938]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811567]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[811574]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (811577 'move' call_tmp[811574](811561 '.' this[811557] thrownLine[167871]))
    (811572 'move' ret[811567] call_tmp[811574])
    (811569 return ret[811567])
  }
  function Error[167938].thrownFileId[811579](const in arg this[811583]:Error[167938]) ref : _ref(int(32))[936537] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811593]:_ref(int(32))[936537] "dead after last mention" "RVV" "temp"
    ref call_tmp[811600]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
    (811603 'move' call_tmp[811600](811587 '.' this[811583] thrownFileId[167879]))
    (811598 'move' ret[811593] call_tmp[811600])
    (811595 return ret[811593])
  }
  function Error[167938]._msg[811605](const in arg this[811609]:Error[167938]) ref : _ref(string)[937850] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811619]:_ref(string)[937850] "dead after last mention" "RVV" "temp"
    ref call_tmp[811626]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
    (811629 'move' call_tmp[811626](811613 '.' this[811609] _msg[167884]))
    (811624 'move' ret[811619] call_tmp[811626])
    (811621 return ret[811619])
  }
  function Error[167938]._hasThrowInfo[811631](const in arg this[811635]:Error[167938]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811645]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[811652]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (811655 'move' call_tmp[811652](811639 '.' this[811635] _hasThrowInfo[167890]))
    (811650 'move' ret[811645] call_tmp[811652])
    (811647 return ret[811645])
  }
  function Error[167938].deinit[811657](const in arg this[811661]:Error[167938]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771825]
    ref _field_destructor_tmp_[1771823]:_ref(string)[937850] "temp"
    (1771830 'move' _field_destructor_tmp_[1771823](1771827 '.' this[811661] _msg[167884]))
    (1771832 call deinit[30831] _field_destructor_tmp_[1771823])
    val _parent_destructor_tmp_[1771835]:object[22] "temp"
    (1771840 'move' _parent_destructor_tmp_[1771835](1771836 'cast' object[22] this[811661]))
    (1771842 call deinit[749290] _parent_destructor_tmp_[1771835])
    (811669 return _void[55])
  }
  type Error[167938] val super[355608]:object[22] "super class" val _next[167866]:Error[167938] "no doc" val thrownLine[167871]:int(64)[13] "no doc" val thrownFileId[167879]:int(32)[95] "no doc" val _msg[167884]:string[26] "no doc" val _hasThrowInfo[167890]:bool[10] "no doc"
  function NilThrownError[167983].message[167958](const in arg this[167985]:NilThrownError[167983], ref arg _retArg[1798137]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522010]:string[26] "dead after last mention" "RVV" "temp"
    (522015 'move' ret[522010](1798141 call chpl__initCopy[981259] "thrown error was nil"))
    (1798139 '=' _retArg[1798137] ret[522010])
    (1798143 return _void[55])
  }
  function NilThrownError[167983].init[811697](const in arg this[811700]:NilThrownError[167983]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811713]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (811715 'move' super_tmp[811713](811712 '.v' this[811700] super[355610]))
    (811710 call init[167896] super_tmp[811713])
    val tmp[811718]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[811756]:Error[167938] "dead at end of block" "maybe param" "temp"
    (811759 'move' call_tmp[811756](811729 'cast' Error[167938] this[811700]))
    val chpl__thisAsParent[811726]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (811747 'move' chpl__thisAsParent[811726](969451 call chpl__initCopy[965528] call_tmp[811756]))
    (811732 'setcid' chpl__thisAsParent[811726])
    (811734 'setcid' this[811700])
    (811745 return _void[55])
  }
  function NilThrownError[167983].deinit[811761](const in arg this[811765]:NilThrownError[167983]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771850]
    val _parent_destructor_tmp_[1771845]:Error[167938] "temp"
    (1771852 'move' _parent_destructor_tmp_[1771845](1771846 'cast' Error[167938] this[811765]))
    (1771854 call deinit[811657] _parent_destructor_tmp_[1771845])
    (811773 return _void[55])
  }
  function _new[969460]() : NilThrownError[167983] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763119]:NilThrownError[167983] "temp"
    val ret[969499]:NilThrownError[167983] "dead after last mention" "RVV" "temp"
    val initTemp[969462]:NilThrownError[167983] "dead after last mention" "temp"
    const-val call_tmp[969506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969509 'move' call_tmp[969506](969518 'sizeof_bundle' NilThrownError[167983]))
    const-val cast_tmp[969521]:c_void_ptr[149] "dead after last mention" "temp"
    (969523 'move' cast_tmp[969521](969474 call chpl_here_alloc[187742] call_tmp[969506] 2))
    (969477 'move' initTemp[969462](969525 'cast' NilThrownError[167983] cast_tmp[969521]))
    (969479 'setcid' initTemp[969462])
    (969463 call init[811697] initTemp[969462])
    val tmp[969481]:NilThrownError[167983] "dead after last mention" "temp"
    (969488 'move' tmp[969481] initTemp[969462])
    (969504 'move' ret[969499] tmp[969481])
    (969501 return ret[969499])
  }
  type NilThrownError[167983] val super[355610]:Error[167938] "super class"
  function DecodeError[168094].message[168069](const in arg this[168096]:DecodeError[168094], ref arg _retArg[1798173]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522037]:string[26] "dead after last mention" "RVV" "temp"
    (522042 'move' ret[522037](1798177 call chpl__initCopy[981259] "Invalid UTF-8 character encountered."))
    (1798175 '=' _retArg[1798173] ret[522037])
    (1798179 return _void[55])
  }
  function DecodeError[168094].init[812009](const in arg this[812012]:DecodeError[168094]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812025]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (812027 'move' super_tmp[812025](812024 '.v' this[812012] super[355616]))
    (812022 call init[167896] super_tmp[812025])
    val tmp[812030]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[812068]:Error[167938] "dead at end of block" "maybe param" "temp"
    (812071 'move' call_tmp[812068](812041 'cast' Error[167938] this[812012]))
    val chpl__thisAsParent[812038]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (812059 'move' chpl__thisAsParent[812038](965526 call chpl__initCopy[965528] call_tmp[812068]))
    (812044 'setcid' chpl__thisAsParent[812038])
    (812046 'setcid' this[812012])
    (812057 return _void[55])
  }
  function DecodeError[168094].deinit[812073](const in arg this[812077]:DecodeError[168094]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771862]
    val _parent_destructor_tmp_[1771857]:Error[167938] "temp"
    (1771864 'move' _parent_destructor_tmp_[1771857](1771858 'cast' Error[167938] this[812077]))
    (1771866 call deinit[811657] _parent_destructor_tmp_[1771857])
    (812085 return _void[55])
  }
  function _new[965553]() : DecodeError[168094] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763113]:DecodeError[168094] "temp"
    val ret[965589]:DecodeError[168094] "dead after last mention" "RVV" "temp"
    val initTemp[965555]:DecodeError[168094] "dead after last mention" "temp"
    const-val call_tmp[965596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965599 'move' call_tmp[965596](965610 'sizeof_bundle' DecodeError[168094]))
    const-val cast_tmp[965613]:c_void_ptr[149] "dead after last mention" "temp"
    (965615 'move' cast_tmp[965613](965567 call chpl_here_alloc[187742] call_tmp[965596] 1))
    (965570 'move' initTemp[965555](965617 'cast' DecodeError[168094] cast_tmp[965613]))
    (965572 'setcid' initTemp[965555])
    (965556 call init[812009] initTemp[965555])
    val tmp[965574]:DecodeError[168094] "dead after last mention" "temp"
    (965578 'move' tmp[965574] initTemp[965555])
    (965594 'move' ret[965589] tmp[965574])
    (965591 return ret[965589])
  }
  type DecodeError[168094] val super[355616]:Error[167938] "super class"
  function IllegalArgumentError[168200].init[168117](const in arg this[168206]:IllegalArgumentError[168200], const  ref arg info[168114]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462465]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462467 'move' super_tmp[462465](462464 '.v' this[168206] super[355618]))
    (168125 call init[167912] super_tmp[462465] info[168114])
    val tmp[462470]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679361]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679364 'move' call_tmp[679361](462481 'cast' Error[167938] this[168206]))
    val chpl__thisAsParent[462478]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544469 'move' chpl__thisAsParent[462478](1064009 call chpl__initCopy[965528] call_tmp[679361]))
    (462484 'setcid' chpl__thisAsParent[462478])
    (462486 'setcid' this[168206])
    (522046 return _void[55])
  }
  function IllegalArgumentError[168200].init[168136](const in arg this[168210]:IllegalArgumentError[168200], const  ref arg formal[168133]:string[26], const  ref arg info[168139]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679366]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786697]:string[26] "temp"
    (168160 call +[38342] "illegal argument '" formal[168133] ret_tmp[1786697])
    (1786700 'move' call_tmp[679366] ret_tmp[1786697])
    const-val call_tmp[679371]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786703]:string[26] "temp"
    (168179 call +[38342] call_tmp[679366] "': " ret_tmp[1786703])
    (1786706 'move' call_tmp[679371] ret_tmp[1786703])
    const-val call_tmp[679376]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786709]:string[26] "temp"
    (168182 call +[38342] call_tmp[679371] info[168139] ret_tmp[1786709])
    (1786712 'move' call_tmp[679376] ret_tmp[1786709])
    const-val msg[168184]:string[26] "dead at end of block" "insert auto destroy"
    (544471 'move' msg[168184] call_tmp[679376])
    val super_tmp[462489]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462491 'move' super_tmp[462489](462488 '.v' this[168210] super[355618]))
    (168195 call init[167912] super_tmp[462489] msg[168184])
    val tmp[462494]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679388]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679391 'move' call_tmp[679388](462505 'cast' Error[167938] this[168210]))
    val chpl__thisAsParent[462502]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544473 'move' chpl__thisAsParent[462502](1073404 call chpl__initCopy[965528] call_tmp[679388]))
    (462508 'setcid' chpl__thisAsParent[462502])
    (462510 'setcid' this[168210])
    (1798707 call chpl__autoDestroy[1494420] msg[168184])
    (1798710 call chpl__autoDestroy[1494420] call_tmp[679371])
    (1798713 call chpl__autoDestroy[1494420] call_tmp[679366])
    (522048 return _void[55])
  }
  function IllegalArgumentError[168200].deinit[812113](const in arg this[812117]:IllegalArgumentError[168200]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1771874]
    val _parent_destructor_tmp_[1771869]:Error[167938] "temp"
    (1771876 'move' _parent_destructor_tmp_[1771869](1771870 'cast' Error[167938] this[812117]))
    (1771878 call deinit[811657] _parent_destructor_tmp_[1771869])
    (812125 return _void[55])
  }
  function _new[1064018](const  ref arg info[1064027]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1763293]:IllegalArgumentError[168200] "temp"
    val ret[1064057]:IllegalArgumentError[168200] "dead after last mention" "RVV" "temp"
    val initTemp[1064020]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1064064]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064067 'move' call_tmp[1064064](1064078 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1064081]:c_void_ptr[149] "dead after last mention" "temp"
    (1064083 'move' cast_tmp[1064081](1064035 call chpl_here_alloc[187742] call_tmp[1064064] 26))
    (1064038 'move' initTemp[1064020](1064085 'cast' IllegalArgumentError[168200] cast_tmp[1064081]))
    (1064040 'setcid' initTemp[1064020])
    (1064021 call init[168117] initTemp[1064020] info[1064027])
    val tmp[1064042]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1064046 'move' tmp[1064042] initTemp[1064020])
    (1064062 'move' ret[1064057] tmp[1064042])
    (1064059 return ret[1064057])
  }
  function _new[1073413](const  ref arg formal[1073422]:string[26], const  ref arg info[1073425]:string[26]) : IllegalArgumentError[168200] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1763303]:IllegalArgumentError[168200] "temp"
    val ret[1073453]:IllegalArgumentError[168200] "dead after last mention" "RVV" "temp"
    val initTemp[1073415]:IllegalArgumentError[168200] "dead after last mention" "temp"
    const-val call_tmp[1073460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073463 'move' call_tmp[1073460](1073474 'sizeof_bundle' IllegalArgumentError[168200]))
    const-val cast_tmp[1073477]:c_void_ptr[149] "dead after last mention" "temp"
    (1073479 'move' cast_tmp[1073477](1073431 call chpl_here_alloc[187742] call_tmp[1073460] 26))
    (1073434 'move' initTemp[1073415](1073481 'cast' IllegalArgumentError[168200] cast_tmp[1073477]))
    (1073436 'setcid' initTemp[1073415])
    (1073416 call init[168136] initTemp[1073415] formal[1073422] info[1073425])
    val tmp[1073438]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1073442 'move' tmp[1073438] initTemp[1073415])
    (1073458 'move' ret[1073453] tmp[1073438])
    (1073455 return ret[1073453])
  }
  type IllegalArgumentError[168200] val super[355618]:Error[167938] "super class"
  function _ref(chpl_TaskErrors)[940851].append[168236](ref arg this[168304]:_ref(chpl_TaskErrors)[940851], const in arg err[168233]:Error[167938]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[168277]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[679393]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (679396 'move' call_tmp[679393](168274 '_wide_get_locale' this[168304]))
    (168279 'move' tmp[168277] call_tmp[679393])
    val isdirect[2034903]:bool[10] "temp"
    (2034908 'move' isdirect[2034903](2034905 call chpl_doDirectExecuteOn[187423] tmp[168277]))
    if isdirect[2034903]
    {
      (2034912 call on_fn[935249] this[168304] err[168233])
    }
    {
      val _args_foron_fn[2034930]:_class_localson_fn[2034920] "temp"
      (2034934 'move' _args_foron_fn[2034930](2034932 'stack allocate class' _class_localson_fn[2034920]))
      (2034936 '.=' _args_foron_fn[2034930] _0_tmp[2034923] tmp[168277])
      ref tmp[2034940]:chpl_TaskErrors[168302] "temp"
      (2034944 'move' tmp[2034940](2034942 'set reference' this[168304]))
      (2034946 '.=' _args_foron_fn[2034930] _1_this[2034925] tmp[2034940])
      (2034950 '.=' _args_foron_fn[2034930] _2_err[2034927] err[168233])
      val _args_vforon_fn[2034954]:c_void_ptr[149] "temp"
      (2034958 'move' _args_vforon_fn[2034954](2034956 'cast_to_void_star' _args_foron_fn[2034930]))
      val _args_sizeon_fn[2034960]:int(64)[13] "temp"
      (2034964 'move' _args_sizeon_fn[2034960](2034962 'sizeof_bundle' _class_localson_fn[2034920]))
      on(2035004 call wrapon_fn[2034966] tmp[168277] _args_vforon_fn[2034954] _args_sizeon_fn[2034960] _args_foron_fn[2034930])
    }
    {
    }
    (522050 return _void[55])
  }
  function _ref(chpl_TaskErrors)[940851].empty[168290](const  ref arg this[168308]:_ref(chpl_TaskErrors)[940851]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522054]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679439]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
    (679442 'move' call_tmp[679439](388394 call _head[812127] this[168308]))
    const-val call_tmp[679444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235469]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235473 'move' coerce_tmp[1235469](1235471 'deref' call_tmp[679439]))
    val coerce_tmp[1235475]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235480 'move' coerce_tmp[1235475](1235477 'cast' object[22] coerce_tmp[1235469]))
    (679447 'move' call_tmp[679444](168294 call ==[1146] coerce_tmp[1235475] nil[44]))
    (522059 'move' ret[522054] call_tmp[679444])
    (522056 return ret[522054])
  }
  function _ref(chpl_TaskErrors)[940851]._head[812127](ref arg this[812131]:_ref(chpl_TaskErrors)[940851]) ref : _ref(Error)[940931] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812141]:_ref(Error)[940931] "dead after last mention" "RVV" "temp"
    ref call_tmp[812148]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
    (812151 'move' call_tmp[812148](812135 '.' this[812131] _head[168220]))
    (812146 'move' ret[812141] call_tmp[812148])
    (812143 return ret[812141])
  }
  function _ref(chpl_TaskErrors)[940851]._errorsLock[812153](ref arg this[812157]:_ref(chpl_TaskErrors)[940851]) ref : _ref(chpl_LocalSpinlock)[940982] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812167]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "RVV" "temp"
    ref call_tmp[812174]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
    (812177 'move' call_tmp[812174](812161 '.' this[812157] _errorsLock[168225]))
    (812172 'move' ret[812167] call_tmp[812174])
    (812169 return ret[812167])
  }
  function _ref(chpl_TaskErrors)[940851].init[812179](ref arg this[812182]:_ref(chpl_TaskErrors)[940851], in arg _head[812185]:Error[167938], const  ref arg _errorsLock[812200]:chpl_LocalSpinlock[187386]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945087]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945090 'move' _formal_tmp__errorsLock[945087] _errorsLock[812200])
    (812214 '.=' this[812182] _head[168220] _head[812185])
    (812217 '.=' this[812182] _errorsLock[168225] _formal_tmp__errorsLock[945087])
    (812221 return _void[55])
  }
  function init_default__errorsLock[940962](ref arg _retArg[1788765]:_ref(chpl_LocalSpinlock)[940982]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[940964]:chpl_LocalSpinlock[187386] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[940969]:chpl_LocalSpinlock[187386] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[945052]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1788771]:AtomicBool[45874] "temp"
    (945054 call init_default_l[944739] ret_tmp[1788771])
    (1788774 'move' default_arg_l[945052] ret_tmp[1788771])
    (944729 call init[820232] _errorsLock[940969] default_arg_l[945052])
    (944725 'move' ret[940964] _errorsLock[940969])
    (1788767 '=' _retArg[1788765] ret[940964])
    (1788769 return _void[55])
  }
  function init_default__head[940881]() : Error[167938] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[940883]:Error[167938] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[940888]:Error[167938] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[940892]:Error[167938] "dead after last mention" "temp"
    val _formal_type[940894]:Error[167938] "dead after last mention" "temp" "type variable"
    (940902 'move' tmp[940892](940950 'cast' Error[167938] nil[44]))
    (940905 'move' _head[940888] tmp[940892])
    (940947 'move' ret[940883] _head[940888])
    (940886 return ret[940883])
  }
  function _ref(chpl_TaskErrors)[940851].deinit[812288](const  ref arg this[812292]:_ref(chpl_TaskErrors)[940851]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1771883]
    ref _field_destructor_tmp_[1771881]:_ref(chpl_LocalSpinlock)[940982] "temp"
    (1771888 'move' _field_destructor_tmp_[1771881](1771885 '.' this[812292] _errorsLock[168225]))
    (1771890 call deinit[820305] _field_destructor_tmp_[1771881])
    (812300 return _void[55])
  }
  type chpl_TaskErrors[168302] val _head[168220]:Error[167938] val _errorsLock[168225]:chpl_LocalSpinlock[187386]
  function TaskErrors[169656].init[168338](const in arg this[169658]:TaskErrors[169656], ref arg group[168335]:_ref(chpl_TaskErrors)[940851]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462556]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462564 'move' super_tmp[462556](462557 '.v' this[169658] super[355620]))
    (462560 call init[167896] super_tmp[462556])
    val tmp[462516]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679454]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679457 'move' call_tmp[679454](462527 'cast' Error[167938] this[169658]))
    val chpl__thisAsParent[462524]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544477 'move' chpl__thisAsParent[462524](1237106 call chpl__initCopy[965528] call_tmp[679454]))
    (462530 'setcid' chpl__thisAsParent[462524])
    ref call_tmp[679461]:_ref(Error)[940931] "dead at end of block" "maybe param" "temp"
    (679464 'move' call_tmp[679461](168346 call _head[812127] group[168335]))
    val head[168349]:Error[167938] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1237112]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1237116 'move' coerce_tmp[1237112](1237114 'deref' call_tmp[679461]))
    (1798716 '=' head[168349] coerce_tmp[1237112])
    (544479 'noop')
    ref call_tmp[679468]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
    (679471 'move' call_tmp[679468](168355 call _head[812127] group[168335]))
    (168359 call =[1237120] call_tmp[679468] nil[44])
    val tmp[462532]:int(64)[13] "dead after last mention" "temp"
    (1240878 'move' tmp[462532] 0)
    (462537 '.=' this[169658] nErrors[168317] tmp[462532])
    val tmp[462541]:c_ptr(owned Error?)[1235526] "dead after last mention" "temp"
    val call_tmp[679473]:owned Error?[966324] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679478]:c_ptr(owned Error?)[1235526] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1240883 'move' tmp[462541](1240881 'cast' c_ptr(owned Error?)[1235526] nil[44]))
    (462550 '.=' this[169658] errorsArray[168328] tmp[462541])
    (462555 'setcid' this[169658])
    val cur[168372]:Error[167938] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544481]:Error[167938] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168377]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544495 'move' n[168377] 0)
    (544492 'move' cur[168372](1237183 call chpl__initCopy[967285] head[168349]))
    {
      val tmp[168487]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1237186]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237191 'move' coerce_tmp[1237186](1237188 'cast' object[22] cur[168372]))
      (679486 'move' call_tmp[679483](168508 call !=[1485] coerce_tmp[1237186] nil[44]))
      (168511 'move' tmp[168487] call_tmp[679483])
      WhileDo[168492]
      {
        {
          val call_tmp[679488]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (679491 'move' call_tmp[679488](168391 call postfix![967685] cur[168372]))
          ref call_tmp[679495]:_ref(Error)[940931] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237195]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237200 'move' coerce_tmp[1237195] call_tmp[679488])
          (679498 'move' call_tmp[679495](168393 call _next[811527] coerce_tmp[1237195]))
          val curnext[168396]:Error[167938] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1237205]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1237209 'move' coerce_tmp[1237205](1237207 'deref' call_tmp[679495]))
          (1798719 '=' curnext[168396] coerce_tmp[1237205])
          (544497 'noop')
          val call_tmp[679500]:TaskErrors[169656] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237388]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237393 'move' coerce_tmp[1237388] cur[168372])
          (679503 'move' call_tmp[679500](168408 call _cast[1237289] coerce_tmp[1237388]))
          val asTaskErr[168410]:TaskErrors[169656] "dead at end of block" "insert auto destroy"
          (544499 'move' asTaskErr[168410](1237516 call chpl__initCopy[1237407] call_tmp[679500]))
          const-val call_tmp[679505]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1237519]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1237524 'move' coerce_tmp[1237519](1237521 'cast' object[22] asTaskErr[168410]))
          (679508 'move' call_tmp[679505](168416 call ==[1146] coerce_tmp[1237519] nil[44]))
          const-val call_tmp[679510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679513 'move' call_tmp[679510] call_tmp[679505])
          if call_tmp[679510]
          {
            (168420 call +=[451226] n[168377] 1)
          }
          {
            {
              ref _indexOfInterest[168443]:_ref(owned Error?)[966333] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168444]:_ic_these_TaskErrors[1237887] "dead at end of block" "expr temp" "temp"
              val call_tmp[679515]:TaskErrors[169656] "dead at end of block" "expr temp" "maybe param" "temp"
              (679518 'move' call_tmp[679515] asTaskErr[168410])
              (168453 'move' _iterator[168444](168451 call _getIterator[1237843] call_tmp[679515]))
              {
                val ret[1857820]:_ir_these_TaskErrors[1237893] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1857822]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1857824]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1857826]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                const-val this[1858003]:TaskErrors[169656] "temp"
                (1858008 'move' this[1858003](1858005 '.v' _iterator[168444] F0_this[1955929]))
                (1857828 'move' call_tmp[1857826](1857831 call nErrors[813942] this[1858003]))
                const-val call_tmp[1857833]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1857835]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1857837 'move' coerce_tmp[1857835](1857839 'deref' call_tmp[1857826]))
                const-val ret_tmp[1857841]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                (1857844 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1857835] ret_tmp[1857841])
                (1857848 'move' call_tmp[1857833] ret_tmp[1857841])
                (1857851 'move' _iterator[1857824](1857854 call _getIterator[1103716] call_tmp[1857833]))
                {
                  val ret[1915492]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1915494]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1915496]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1915498]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1915500]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                  const-val low[1915977]:int(64)[13] "temp"
                  (1915982 'move' low[1915977](1915979 '.v' _iterator[1857824] F0_low[1960165]))
                  const-val count[1915984]:int(64)[13] "temp"
                  (1915989 'move' count[1915984](1915986 '.v' _iterator[1857824] F1_count[1960169]))
                  (1915503 call chpl_direct_counted_range_iter_helper[1102009] low[1915977] count[1915984] ret_tmp[1915500])
                  (1915507 'move' call_tmp[1915498] ret_tmp[1915500])
                  (1915510 'move' _iterator[1915496](1915513 call _getIterator[1103466] call_tmp[1915498]))
                  {
                    val ret[1915516]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                    val call_tmp[1915518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1915520]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1915522]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1915524]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1915526]:int(64)[13] "temp"
                    (1915528 'move' count[1915526](1915530 '.v' _iterator[1915496] F1_count[1964641]))
                    (1915533 'move' call_tmp[1915524](1915536 call <[948309] count[1915526]))
                    (1915538 'move' tmp[1915522] call_tmp[1915524])
                    (1915541 'move' tmp[1915520] call_tmp[1915524])
                    const-val call_tmp[1915544]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1915546 'move' call_tmp[1915544] call_tmp[1915524])
                    if call_tmp[1915524]
                    {
                      (1915552 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1915555]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1915557]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1915559]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1915561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1915563]:int(64)[13] "temp"
                    (1915565 'move' count[1915563](1915567 '.v' _iterator[1915496] F1_count[1964641]))
                    (1915570 'move' call_tmp[1915561](1915573 call ==[435539] count[1915563] 0))
                    (1915576 'move' tmp[1915559] call_tmp[1915561])
                    if call_tmp[1915561]
                    {
                      const-val tmp[1915581]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1915583]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1915585]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1915587]:int(64)[13] "temp"
                      (1915589 'move' low[1915587](1915591 '.v' _iterator[1915496] F0_low[1964637]))
                      (1915594 'move' call_tmp[1915585](1915597 call _cast[955945] low[1915587]))
                      const-val call_tmp[1915599]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1915601]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1915603 'move' coerce_tmp[1915601](1915605 'cast' uint(64)[115] 1))
                      (1915608 'move' call_tmp[1915599](1915611 call -[962104] call_tmp[1915585]))
                      const-val call_tmp[1915613]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1915615 'move' call_tmp[1915613](1915618 call _cast[953454] call_tmp[1915599]))
                      const-val ret_tmp[1915620]:2*int(64)[1039967] "temp"
                      const-val low[1915622]:int(64)[13] "temp"
                      (1915624 'move' low[1915622](1915626 '.v' _iterator[1915496] F0_low[1964637]))
                      (1915630 call _build_tuple[1039925] low[1915622] call_tmp[1915613] ret_tmp[1915620])
                      (1915634 'move' tmp[1915581] ret_tmp[1915620])
                      (1915637 'move' tmp[1915557] tmp[1915581])
                    }
                    {
                      const-val tmp[1915641]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1915643]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1915645]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1915647]:int(64)[13] "temp"
                      (1915649 'move' count[1915647](1915651 '.v' _iterator[1915496] F1_count[1964641]))
                      (1915654 'move' call_tmp[1915645] count[1915647])
                      const-val call_tmp[1915657]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1915659]:int(64)[13] "temp"
                      (1915661 'move' count[1915659](1915663 '.v' _iterator[1915496] F1_count[1964641]))
                      (1915666 'move' call_tmp[1915657](1915669 call -[962137] count[1915659]))
                      const-val call_tmp[1915671]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1915673]:int(64)[13] "temp"
                      (1915675 'move' low[1915673](1915677 '.v' _iterator[1915496] F0_low[1964637]))
                      (1915680 'move' call_tmp[1915671](1915683 call +[439547] low[1915673] call_tmp[1915657]))
                      const-val ret_tmp[1915686]:2*int(64)[1039967] "temp"
                      const-val low[1915688]:int(64)[13] "temp"
                      (1915690 'move' low[1915688](1915692 '.v' _iterator[1915496] F0_low[1964637]))
                      (1915696 call _build_tuple[1039925] low[1915688] call_tmp[1915671] ret_tmp[1915686])
                      (1915700 'move' tmp[1915641] ret_tmp[1915686])
                      (1915703 'move' tmp[1915557] tmp[1915641])
                    }
                    (1915707 '=' tmp[1915555] tmp[1915557])
                    (1915710 'noop')
                    1
                    ref call_tmp[1915712]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1915714 'move' call_tmp[1915712](1915716 '.' tmp[1915555] x0[1039963]))
                    const-val start[1915719]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1915721]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1915723 'move' coerce_tmp[1915721](1915725 'deref' call_tmp[1915712]))
                    (1915727 '=' start[1915719] coerce_tmp[1915721])
                    (1915730 'noop')
                    ref call_tmp[1915731]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1915733 'move' call_tmp[1915731](1915735 '.' tmp[1915555] x1[1039965]))
                    const-val end[1915738]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1915740]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1915742 'move' coerce_tmp[1915740](1915744 'deref' call_tmp[1915731]))
                    (1915746 '=' end[1915738] coerce_tmp[1915740])
                    (1915749 'noop')
                    val _indexOfInterest[1915750]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1915752]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1915754]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1915756]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                    (1915759 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1915721] coerce_tmp[1915740] ret_tmp[1915756])
                    (1915763 'move' call_tmp[1915754] ret_tmp[1915756])
                    (1915766 'move' _iterator[1915752](1915769 call _getIterator[1103212] call_tmp[1915754]))
                    {
                      val ret[1944326]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                      val call_tmp[1944328]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1944331 call chpl_range_check_stride[1102755])
                      val i[1944332]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1944334]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1944336 'move' i[1944332] 0)
                      val call_tmp[1944339]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1944341]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1944576]:int(64)[13] "temp"
                      (1944581 'move' low[1944576](1944578 '.v' _iterator[1915752] F0_low[1966135]))
                      (1944343 'move' default_arg_first[1944341](1944346 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1944576]))
                      const-val default_arg_last[1944348]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1944583]:int(64)[13] "temp"
                      (1944588 'move' high[1944583](1944585 '.v' _iterator[1915752] F1_high[1966139]))
                      (1944350 'move' default_arg_last[1944348](1944353 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1944583]))
                      const-val _return_tmp_[1944355]:bool[10] "dead after last mention" "temp"
                      const-val low[1944590]:int(64)[13] "temp"
                      (1944595 'move' low[1944590](1944592 '.v' _iterator[1915752] F0_low[1966135]))
                      const-val high[1944597]:int(64)[13] "temp"
                      (1944602 'move' high[1944597](1944599 '.v' _iterator[1915752] F1_high[1966139]))
                      (1944357 'move' _return_tmp_[1944355](1944360 call chpl_checkIfRangeIterWillOverflow[1095987] low[1944590] high[1944597] 1 default_arg_first[1944341] default_arg_last[1944348] 1))
                      CForLoop[1944367]
                      {
                        const-val yret[1944382]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1944384 'move' yret[1944382] i[1944332])
                        const-val _yieldedIndex[1944398]:int(64)[13] "temp"
                        (1944574 'move' _yieldedIndex[1944398] i[1944332])
                        {
                          const-val i[1944400]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1944402 'move' i[1944400] _yieldedIndex[1944398])
                          const-val yret[1944405]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1944407 'move' yret[1944405] _yieldedIndex[1944398])
                          const-val _yieldedIndex[1944410]:int(64)[13] "temp"
                          (1944412 'move' _yieldedIndex[1944410] _yieldedIndex[1944398])
                          {
                            const-val i[1944416]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1944418 'move' i[1944416] _yieldedIndex[1944410])
                            const-val yret[1944421]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1944423 'move' yret[1944421] _yieldedIndex[1944410])
                            const-val _yieldedIndex[1944426]:int(64)[13] "temp"
                            (1944428 'move' _yieldedIndex[1944426] _yieldedIndex[1944410])
                            {
                              const-val i[1944432]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1944434 'move' i[1944432] _yieldedIndex[1944426])
                              ref call_tmp[1944437]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1944439]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                              const-val this[1944441]:TaskErrors[169656] "temp"
                              (1944443 'move' this[1944441](1944445 '.v' _iterator[168444] F0_this[1955929]))
                              (1944448 'move' _this_tmp_[1944439](1944451 call errorsArray[813968] this[1944441]))
                              val coerce_tmp[1944453]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944455 'move' coerce_tmp[1944453](1944457 'deref' _this_tmp_[1944439]))
                              (1944459 'move' call_tmp[1944437](1944462 call this[1235664] coerce_tmp[1944453] _yieldedIndex[1944426]))
                              const-val call_tmp[1944465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1944467]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944469 'move' coerce_tmp[1944467](1944472 call borrow[1235739] call_tmp[1944437]))
                              val coerce_tmp[1944474]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944476 'move' coerce_tmp[1944474](1944478 'cast' object[22] coerce_tmp[1944467]))
                              (1944481 'move' call_tmp[1944465](1944484 call !=[1485] coerce_tmp[1944474] nil[44]))
                              const-val call_tmp[1944487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1944489 'move' call_tmp[1944487] call_tmp[1944465])
                              if call_tmp[1944465]
                              {
                                ref yret[1944494]:_ref(owned Error?)[966333] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1944496]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1944498]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                                const-val this[1944500]:TaskErrors[169656] "temp"
                                (1944502 'move' this[1944500](1944504 '.v' _iterator[168444] F0_this[1955929]))
                                (1944507 'move' _this_tmp_[1944498](1944510 call errorsArray[813968] this[1944500]))
                                val coerce_tmp[1944512]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1944514 'move' coerce_tmp[1944512](1944516 'deref' _this_tmp_[1944498]))
                                (1944518 'move' call_tmp[1944496](1944521 call this[1235664] coerce_tmp[1944512] i[1944432]))
                                ref _yieldedIndex[1944524]:_ref(owned Error?)[966333] "temp"
                                (1944526 'move' _yieldedIndex[1944524] call_tmp[1944496])
                                {
                                  ref e[1944530]:_ref(owned Error?)[966333] "index var" "insert auto destroy"
                                  (1944532 'move' e[1944530] _yieldedIndex[1944524])
                                  {
                                    const-val call_tmp[1944536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1944538]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944540 'move' coerce_tmp[1944538](1944543 call borrow[1235739] e[1944530]))
                                    val coerce_tmp[1944545]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944547 'move' coerce_tmp[1944545](1944549 'cast' object[22] coerce_tmp[1944538]))
                                    (1944552 'move' call_tmp[1944536](1944555 call !=[1485] coerce_tmp[1944545] nil[44]))
                                    const-val call_tmp[1944558]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1944560 'move' call_tmp[1944558] call_tmp[1944536])
                                    if call_tmp[1944558]
                                    {
                                      (1944566 call +=[451226] n[168377] 1)
                                    }
                                  }
                                  label _continueLabel[1944570]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1944604]:int(64)[13] "temp"
                          (1944609 'move' low[1944604](1944606 '.v' _iterator[1915752] F0_low[1966135]))
                          (1944369 '=' i[1944332] low[1944604])
                        }
                        {
                          const-val high[1944611]:int(64)[13] "temp"
                          (1944616 'move' high[1944611](1944613 '.v' _iterator[1915752] F1_high[1966139]))
                          (1944373 '<=' i[1944332] high[1944611])
                        }
                        {
                          val call_tmp[1944377]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1944379 '+=' i[1944332] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1944394]
                    }
                    (1915817 call _freeIterator[1103385] _iterator[1915752])
                    (1915820 call chpl__autoDestroy[1567619] tmp[1915555])
                    label _endchpl_direct_counted_range_iter_helper[1915822]
                  }
                  (1915825 call _freeIterator[1103635] _iterator[1915496])
                  label _endchpl_direct_counted_range_iter[1915827]
                }
                (1857952 call _freeIterator[1103885] _iterator[1857824])
                label _endthese[1857954]
              }
              label _breakLabel[168449]
              (1798728 call _freeIterator[1238144] _iterator[168444])
            }
          }
          (168484 call =[1232357] cur[168372] curnext[168396])
        }
        label _continueLabel[168490]
        const-val call_tmp[679530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1238229]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1238234 'move' coerce_tmp[1238229](1238231 'cast' object[22] cur[168372]))
        (679533 'move' call_tmp[679530](168498 call !=[1485] coerce_tmp[1238229] nil[44]))
        (168501 'move' tmp[168487] call_tmp[679530])
        tmp[168487]
      }
      label _breakLabel[168491]
    }
    ref call_tmp[679537]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (679540 'move' call_tmp[679537](388422 call nErrors[813942] this[169658]))
    (168516 call =[435238] call_tmp[679537] n[168377])
    ref call_tmp[679544]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "maybe param" "temp"
    (679547 'move' call_tmp[679544](388430 call errorsArray[813968] this[169658]))
    val call_tmp[679549]:owned Error?[966324] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679554]:c_ptr(owned Error?)[1235526] "dead after last mention" "expr temp" "maybe param" "temp"
    (679557 'move' call_tmp[679554](168527 call c_calloc[1238248] n[168377]))
    (168528 call =[1238573] call_tmp[679544] call_tmp[679554])
    val idx[168532]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544501 'move' idx[168532] 0)
    (168538 call =[1232357] cur[168372] head[168349])
    {
      val tmp[168683]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1238601]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1238606 'move' coerce_tmp[1238601](1238603 'cast' object[22] cur[168372]))
      (679562 'move' call_tmp[679559](168704 call !=[1485] coerce_tmp[1238601] nil[44]))
      (168707 'move' tmp[168683] call_tmp[679559])
      WhileDo[168688] hazard
      {
        {
          val call_tmp[679564]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (679567 'move' call_tmp[679564](168546 call postfix![967685] cur[168372]))
          ref call_tmp[679571]:_ref(Error)[940931] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238610]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238615 'move' coerce_tmp[1238610] call_tmp[679564])
          (679574 'move' call_tmp[679571](168548 call _next[811527] coerce_tmp[1238610]))
          val curnext[168551]:Error[167938] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1238620]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1238624 'move' coerce_tmp[1238620](1238622 'deref' call_tmp[679571]))
          (1798722 '=' curnext[168551] coerce_tmp[1238620])
          (544503 'noop')
          val call_tmp[679576]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
          (679579 'move' call_tmp[679576](168557 call postfix![967685] cur[168372]))
          ref call_tmp[679583]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1238628]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238633 'move' coerce_tmp[1238628] call_tmp[679576])
          (679586 'move' call_tmp[679583](168559 call _next[811527] coerce_tmp[1238628]))
          (168563 call =[1237120] call_tmp[679583] nil[44])
          val call_tmp[679588]:TaskErrors[169656] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238637]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238642 'move' coerce_tmp[1238637] cur[168372])
          (679591 'move' call_tmp[679588](168573 call _cast[1237289] coerce_tmp[1238637]))
          val asTaskErr[168575]:TaskErrors[169656] "dead at end of block" "insert auto destroy"
          (544505 'move' asTaskErr[168575](1238645 call chpl__initCopy[1237407] call_tmp[679588]))
          const-val call_tmp[679593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1238648]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238653 'move' coerce_tmp[1238648](1238650 'cast' object[22] asTaskErr[168575]))
          (679596 'move' call_tmp[679593](168581 call ==[1146] coerce_tmp[1238648] nil[44]))
          const-val call_tmp[679598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679601 'move' call_tmp[679598] call_tmp[679593])
          if call_tmp[679598]
          {
            ref call_tmp[679605]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1238657]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
            (1238659 'move' _this_tmp_[1238657](388446 call errorsArray[813968] this[169658]))
            val coerce_tmp[1238664]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1238668 'move' coerce_tmp[1238664](1238666 'deref' _this_tmp_[1238657]))
            (679608 'move' call_tmp[679605](168586 call this[1235664] coerce_tmp[1238664] idx[168532]))
            val call_tmp[679612]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
            (679615 'move' call_tmp[679612](168591 call postfix![967685] cur[168372]))
            (168594 call retain[1238686] call_tmp[679605] call_tmp[679612])
            (168599 call +=[451226] idx[168532] 1)
          }
          {
            {
              ref _indexOfInterest[168634]:_ref(owned Error?)[966333] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168635]:_ic_these_TaskErrors[1237887] "dead at end of block" "expr temp" "temp"
              val call_tmp[679617]:TaskErrors[169656] "dead at end of block" "expr temp" "maybe param" "temp"
              (679620 'move' call_tmp[679617] asTaskErr[168575])
              const-val call_tmp[679624]:_ir_these_TaskErrors[1237893] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1238924]:TaskErrors[169656] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1238929 'move' coerce_tmp[1238924] call_tmp[679617])
              const-val ret_tmp[1787961]:_ir_these_TaskErrors[1237893] "temp"
              (168610 call these[168862] coerce_tmp[1238924] ret_tmp[1787961])
              (1787964 'move' call_tmp[679624] ret_tmp[1787961])
              (168644 'move' _iterator[168635](168642 call _getIterator[1237902] call_tmp[679624]))
              {
                val ret[1858025]:_ir_these_TaskErrors[1237893] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1858027]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1858029]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1858031]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
                const-val this[1858233]:TaskErrors[169656] "temp"
                (1858238 'move' this[1858233](1858235 '.v' _iterator[168635] F0_this[1955929]))
                (1858033 'move' call_tmp[1858031](1858036 call nErrors[813942] this[1858233]))
                const-val call_tmp[1858038]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1858040]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1858042 'move' coerce_tmp[1858040](1858044 'deref' call_tmp[1858031]))
                const-val ret_tmp[1858046]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
                (1858049 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1858040] ret_tmp[1858046])
                (1858053 'move' call_tmp[1858038] ret_tmp[1858046])
                (1858056 'move' _iterator[1858029](1858059 call _getIterator[1103716] call_tmp[1858038]))
                {
                  val ret[1915992]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1915994]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1915996]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1915998]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1916000]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
                  const-val low[1916502]:int(64)[13] "temp"
                  (1916507 'move' low[1916502](1916504 '.v' _iterator[1858029] F0_low[1960165]))
                  const-val count[1916509]:int(64)[13] "temp"
                  (1916514 'move' count[1916509](1916511 '.v' _iterator[1858029] F1_count[1960169]))
                  (1916003 call chpl_direct_counted_range_iter_helper[1102009] low[1916502] count[1916509] ret_tmp[1916000])
                  (1916007 'move' call_tmp[1915998] ret_tmp[1916000])
                  (1916010 'move' _iterator[1915996](1916013 call _getIterator[1103466] call_tmp[1915998]))
                  {
                    val ret[1916016]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                    val call_tmp[1916018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1916020]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1916022]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1916024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1916026]:int(64)[13] "temp"
                    (1916028 'move' count[1916026](1916030 '.v' _iterator[1915996] F1_count[1964641]))
                    (1916033 'move' call_tmp[1916024](1916036 call <[948309] count[1916026]))
                    (1916038 'move' tmp[1916022] call_tmp[1916024])
                    (1916041 'move' tmp[1916020] call_tmp[1916024])
                    const-val call_tmp[1916044]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1916046 'move' call_tmp[1916044] call_tmp[1916024])
                    if call_tmp[1916024]
                    {
                      (1916052 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1916055]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1916057]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1916059]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1916061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1916063]:int(64)[13] "temp"
                    (1916065 'move' count[1916063](1916067 '.v' _iterator[1915996] F1_count[1964641]))
                    (1916070 'move' call_tmp[1916061](1916073 call ==[435539] count[1916063] 0))
                    (1916076 'move' tmp[1916059] call_tmp[1916061])
                    if call_tmp[1916061]
                    {
                      const-val tmp[1916081]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1916083]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1916085]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1916087]:int(64)[13] "temp"
                      (1916089 'move' low[1916087](1916091 '.v' _iterator[1915996] F0_low[1964637]))
                      (1916094 'move' call_tmp[1916085](1916097 call _cast[955945] low[1916087]))
                      const-val call_tmp[1916099]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1916101]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1916103 'move' coerce_tmp[1916101](1916105 'cast' uint(64)[115] 1))
                      (1916108 'move' call_tmp[1916099](1916111 call -[962104] call_tmp[1916085]))
                      const-val call_tmp[1916113]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1916115 'move' call_tmp[1916113](1916118 call _cast[953454] call_tmp[1916099]))
                      const-val ret_tmp[1916120]:2*int(64)[1039967] "temp"
                      const-val low[1916122]:int(64)[13] "temp"
                      (1916124 'move' low[1916122](1916126 '.v' _iterator[1915996] F0_low[1964637]))
                      (1916130 call _build_tuple[1039925] low[1916122] call_tmp[1916113] ret_tmp[1916120])
                      (1916134 'move' tmp[1916081] ret_tmp[1916120])
                      (1916137 'move' tmp[1916057] tmp[1916081])
                    }
                    {
                      const-val tmp[1916141]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1916143]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1916145]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1916147]:int(64)[13] "temp"
                      (1916149 'move' count[1916147](1916151 '.v' _iterator[1915996] F1_count[1964641]))
                      (1916154 'move' call_tmp[1916145] count[1916147])
                      const-val call_tmp[1916157]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1916159]:int(64)[13] "temp"
                      (1916161 'move' count[1916159](1916163 '.v' _iterator[1915996] F1_count[1964641]))
                      (1916166 'move' call_tmp[1916157](1916169 call -[962137] count[1916159]))
                      const-val call_tmp[1916171]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1916173]:int(64)[13] "temp"
                      (1916175 'move' low[1916173](1916177 '.v' _iterator[1915996] F0_low[1964637]))
                      (1916180 'move' call_tmp[1916171](1916183 call +[439547] low[1916173] call_tmp[1916157]))
                      const-val ret_tmp[1916186]:2*int(64)[1039967] "temp"
                      const-val low[1916188]:int(64)[13] "temp"
                      (1916190 'move' low[1916188](1916192 '.v' _iterator[1915996] F0_low[1964637]))
                      (1916196 call _build_tuple[1039925] low[1916188] call_tmp[1916171] ret_tmp[1916186])
                      (1916200 'move' tmp[1916141] ret_tmp[1916186])
                      (1916203 'move' tmp[1916057] tmp[1916141])
                    }
                    (1916207 '=' tmp[1916055] tmp[1916057])
                    (1916210 'noop')
                    1
                    ref call_tmp[1916212]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1916214 'move' call_tmp[1916212](1916216 '.' tmp[1916055] x0[1039963]))
                    const-val start[1916219]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1916221]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1916223 'move' coerce_tmp[1916221](1916225 'deref' call_tmp[1916212]))
                    (1916227 '=' start[1916219] coerce_tmp[1916221])
                    (1916230 'noop')
                    ref call_tmp[1916231]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1916233 'move' call_tmp[1916231](1916235 '.' tmp[1916055] x1[1039965]))
                    const-val end[1916238]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1916240]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1916242 'move' coerce_tmp[1916240](1916244 'deref' call_tmp[1916231]))
                    (1916246 '=' end[1916238] coerce_tmp[1916240])
                    (1916249 'noop')
                    val _indexOfInterest[1916250]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1916252]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1916254]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1916256]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                    (1916259 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1916221] coerce_tmp[1916240] ret_tmp[1916256])
                    (1916263 'move' call_tmp[1916254] ret_tmp[1916256])
                    (1916266 'move' _iterator[1916252](1916269 call _getIterator[1103212] call_tmp[1916254]))
                    {
                      val ret[1944619]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                      val call_tmp[1944621]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1944624 call chpl_range_check_stride[1102755])
                      val i[1944625]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1944627]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1944629 'move' i[1944625] 0)
                      val call_tmp[1944632]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1944634]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1944894]:int(64)[13] "temp"
                      (1944899 'move' low[1944894](1944896 '.v' _iterator[1916252] F0_low[1966135]))
                      (1944636 'move' default_arg_first[1944634](1944639 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1944894]))
                      const-val default_arg_last[1944641]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1944901]:int(64)[13] "temp"
                      (1944906 'move' high[1944901](1944903 '.v' _iterator[1916252] F1_high[1966139]))
                      (1944643 'move' default_arg_last[1944641](1944646 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1944901]))
                      const-val _return_tmp_[1944648]:bool[10] "dead after last mention" "temp"
                      const-val low[1944908]:int(64)[13] "temp"
                      (1944913 'move' low[1944908](1944910 '.v' _iterator[1916252] F0_low[1966135]))
                      const-val high[1944915]:int(64)[13] "temp"
                      (1944920 'move' high[1944915](1944917 '.v' _iterator[1916252] F1_high[1966139]))
                      (1944650 'move' _return_tmp_[1944648](1944653 call chpl_checkIfRangeIterWillOverflow[1095987] low[1944908] high[1944915] 1 default_arg_first[1944634] default_arg_last[1944641] 1))
                      CForLoop[1944660] hazard
                      {
                        const-val yret[1944675]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1944677 'move' yret[1944675] i[1944625])
                        const-val _yieldedIndex[1944691]:int(64)[13] "temp"
                        (1944892 'move' _yieldedIndex[1944691] i[1944625])
                        {
                          const-val i[1944693]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1944695 'move' i[1944693] _yieldedIndex[1944691])
                          const-val yret[1944698]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1944700 'move' yret[1944698] _yieldedIndex[1944691])
                          const-val _yieldedIndex[1944703]:int(64)[13] "temp"
                          (1944705 'move' _yieldedIndex[1944703] _yieldedIndex[1944691])
                          {
                            const-val i[1944709]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1944711 'move' i[1944709] _yieldedIndex[1944703])
                            const-val yret[1944714]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1944716 'move' yret[1944714] _yieldedIndex[1944703])
                            const-val _yieldedIndex[1944719]:int(64)[13] "temp"
                            (1944721 'move' _yieldedIndex[1944719] _yieldedIndex[1944703])
                            {
                              const-val i[1944725]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1944727 'move' i[1944725] _yieldedIndex[1944719])
                              ref call_tmp[1944730]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1944732]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                              const-val this[1944734]:TaskErrors[169656] "temp"
                              (1944736 'move' this[1944734](1944738 '.v' _iterator[168635] F0_this[1955929]))
                              (1944741 'move' _this_tmp_[1944732](1944744 call errorsArray[813968] this[1944734]))
                              val coerce_tmp[1944746]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944748 'move' coerce_tmp[1944746](1944750 'deref' _this_tmp_[1944732]))
                              (1944752 'move' call_tmp[1944730](1944755 call this[1235664] coerce_tmp[1944746] _yieldedIndex[1944719]))
                              const-val call_tmp[1944758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1944760]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944762 'move' coerce_tmp[1944760](1944765 call borrow[1235739] call_tmp[1944730]))
                              val coerce_tmp[1944767]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1944769 'move' coerce_tmp[1944767](1944771 'cast' object[22] coerce_tmp[1944760]))
                              (1944774 'move' call_tmp[1944758](1944777 call !=[1485] coerce_tmp[1944767] nil[44]))
                              const-val call_tmp[1944780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1944782 'move' call_tmp[1944780] call_tmp[1944758])
                              if call_tmp[1944758]
                              {
                                ref yret[1944787]:_ref(owned Error?)[966333] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1944789]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1944791]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                                const-val this[1944793]:TaskErrors[169656] "temp"
                                (1944795 'move' this[1944793](1944797 '.v' _iterator[168635] F0_this[1955929]))
                                (1944800 'move' _this_tmp_[1944791](1944803 call errorsArray[813968] this[1944793]))
                                val coerce_tmp[1944805]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1944807 'move' coerce_tmp[1944805](1944809 'deref' _this_tmp_[1944791]))
                                (1944811 'move' call_tmp[1944789](1944814 call this[1235664] coerce_tmp[1944805] i[1944725]))
                                ref _yieldedIndex[1944817]:_ref(owned Error?)[966333] "temp"
                                (1944819 'move' _yieldedIndex[1944817] call_tmp[1944789])
                                {
                                  ref e[1944823]:_ref(owned Error?)[966333] "index var" "insert auto destroy"
                                  (1944825 'move' e[1944823] _yieldedIndex[1944817])
                                  {
                                    const-val call_tmp[1944829]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1944831]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944833 'move' coerce_tmp[1944831](1944836 call borrow[1235739] e[1944823]))
                                    val coerce_tmp[1944838]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1944840 'move' coerce_tmp[1944838](1944842 'cast' object[22] coerce_tmp[1944831]))
                                    (1944845 'move' call_tmp[1944829](1944848 call !=[1485] coerce_tmp[1944838] nil[44]))
                                    const-val call_tmp[1944851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1944853 'move' call_tmp[1944851] call_tmp[1944829])
                                    if call_tmp[1944851]
                                    {
                                      ref call_tmp[1944858]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1944860]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                                      (1944862 'move' _this_tmp_[1944860](1944865 call errorsArray[813968] this[169658]))
                                      val coerce_tmp[1944867]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1944869 'move' coerce_tmp[1944867](1944871 'deref' _this_tmp_[1944860]))
                                      (1944873 'move' call_tmp[1944858](1944876 call this[1235664] coerce_tmp[1944867] idx[168532]))
                                      (1944880 call =[1238968] call_tmp[1944858] e[1944823])
                                      (1944884 call +=[451226] idx[168532] 1)
                                    }
                                  }
                                  label _continueLabel[1944888]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1944922]:int(64)[13] "temp"
                          (1944927 'move' low[1944922](1944924 '.v' _iterator[1916252] F0_low[1966135]))
                          (1944662 '=' i[1944625] low[1944922])
                        }
                        {
                          const-val high[1944929]:int(64)[13] "temp"
                          (1944934 'move' high[1944929](1944931 '.v' _iterator[1916252] F1_high[1966139]))
                          (1944666 '<=' i[1944625] high[1944929])
                        }
                        {
                          val call_tmp[1944670]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1944672 '+=' i[1944625] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1944687]
                    }
                    (1916317 call _freeIterator[1103385] _iterator[1916252])
                    (1916320 call chpl__autoDestroy[1567619] tmp[1916055])
                    label _endchpl_direct_counted_range_iter_helper[1916322]
                  }
                  (1916325 call _freeIterator[1103635] _iterator[1915996])
                  label _endchpl_direct_counted_range_iter[1916327]
                }
                (1858157 call _freeIterator[1103885] _iterator[1858029])
                label _endthese[1858159]
              }
              label _breakLabel[168640]
              (1798733 call _freeIterator[1238144] _iterator[168635])
            }
            (168671 call chpl__delete[1239886] asTaskErr[168575])
          }
          (168680 call =[1232357] cur[168372] curnext[168551])
        }
        label _continueLabel[168686]
        const-val call_tmp[679646]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1240869]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1240874 'move' coerce_tmp[1240869](1240871 'cast' object[22] cur[168372]))
        (679649 'move' call_tmp[679646](168694 call !=[1485] coerce_tmp[1240869] nil[44]))
        (168697 'move' tmp[168683] call_tmp[679646])
        tmp[168683]
      }
      label _breakLabel[168687]
    }
    (522061 return _void[55])
  }
  function TaskErrors[169656].init[168719](const in arg this[169662]:TaskErrors[169656], const in arg err[168716]:Error[167938]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462611]:Error[167938] "dead after last mention" "temporary of super field" "temp"
    (462619 'move' super_tmp[462611](462612 '.v' this[169662] super[355620]))
    (462615 call init[167896] super_tmp[462611])
    val tmp[462571]:Error[167938] "dead after last mention" "temp" "type variable"
    val call_tmp[679656]:Error[167938] "dead at end of block" "maybe param" "temp"
    (679659 'move' call_tmp[679656](462582 'cast' Error[167938] this[169662]))
    val chpl__thisAsParent[462579]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
    (544507 'move' chpl__thisAsParent[462579](1718809 call chpl__initCopy[965528] call_tmp[679656]))
    (462585 'setcid' chpl__thisAsParent[462579])
    val tmp[462587]:int(64)[13] "dead after last mention" "temp"
    (462590 'move' tmp[462587] 1)
    (462592 '.=' this[169662] nErrors[168317] tmp[462587])
    val call_tmp[679661]:owned Error?[966324] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679666]:c_ptr(owned Error?)[1235526] "dead after last mention" "maybe param" "temp"
    (679669 'move' call_tmp[679666](168735 call c_calloc[1238248] 1))
    val call_tmp[679671]:owned Error?[966324] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679676]:c_ptr(owned Error?)[1235526] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462596]:c_ptr(owned Error?)[1235526] "dead after last mention" "temp"
    (462603 'move' tmp[462596](1718838 call chpl__initCopy[1718840] call_tmp[679666]))
    (462605 '.=' this[169662] errorsArray[168328] tmp[462596])
    (462610 'setcid' this[169662])
    ref call_tmp[679683]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1718860]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718865 'move' coerce_tmp[1718860] err[168716])
    (679686 'move' call_tmp[679683](168747 call _next[811527] coerce_tmp[1718860]))
    (168751 call =[1237120] call_tmp[679683] nil[44])
    ref call_tmp[679690]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1718870]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
    (1718872 'move' _this_tmp_[1718870](388482 call errorsArray[813968] this[169662]))
    val coerce_tmp[1718877]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718881 'move' coerce_tmp[1718877](1718879 'deref' _this_tmp_[1718870]))
    (679693 'move' call_tmp[679690](168757 call this[1235664] coerce_tmp[1718877] 0))
    (168763 call retain[1238686] call_tmp[679690] err[168716])
    (522063 return _void[55])
  }
  function TaskErrors[169656].deinit[168786](const in arg this[169670]:TaskErrors[169656]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679719]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "maybe param" "temp"
    (679722 'move' call_tmp[679719](388498 call errorsArray[813968] this[169670]))
    const-val call_tmp[679724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235609]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235613 'move' coerce_tmp[1235609](1235611 'deref' call_tmp[679719]))
    (679727 'move' call_tmp[679724](168853 call _cond_test[1235577] coerce_tmp[1235609]))
    if call_tmp[679724]
    {
      {
        val _indexOfInterest[168807]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168808]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679731]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
        (679734 'move' call_tmp[679731](388509 call nErrors[813942] this[169670]))
        const-val call_tmp[679736]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1235646]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1235650 'move' coerce_tmp[1235646](1235648 'deref' call_tmp[679731]))
        const-val ret_tmp[1788689]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
        (168824 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1235646] ret_tmp[1788689])
        (1788692 'move' call_tmp[679736] ret_tmp[1788689])
        (168817 'move' _iterator[168808](168815 call _getIterator[1103716] call_tmp[679736]))
        {
          val ret[1858255]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1858257]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1858259]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1858261]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1858263]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
          const-val low[1858345]:int(64)[13] "temp"
          (1858350 'move' low[1858345](1858347 '.v' _iterator[168808] F0_low[1960165]))
          const-val count[1858352]:int(64)[13] "temp"
          (1858357 'move' count[1858352](1858354 '.v' _iterator[168808] F1_count[1960169]))
          (1858266 call chpl_direct_counted_range_iter_helper[1102009] low[1858345] count[1858352] ret_tmp[1858263])
          (1858270 'move' call_tmp[1858261] ret_tmp[1858263])
          (1858273 'move' _iterator[1858259](1858276 call _getIterator[1103466] call_tmp[1858261]))
          {
            val ret[1916517]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
            val call_tmp[1916519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1916521]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1916523]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1916525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1916914]:int(64)[13] "temp"
            (1916919 'move' count[1916914](1916916 '.v' _iterator[1858259] F1_count[1964641]))
            (1916527 'move' call_tmp[1916525](1916530 call <[948309] count[1916914]))
            (1916532 'move' tmp[1916523] call_tmp[1916525])
            (1916535 'move' tmp[1916521] call_tmp[1916525])
            const-val call_tmp[1916538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1916540 'move' call_tmp[1916538] call_tmp[1916525])
            if call_tmp[1916525]
            {
              (1916546 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1916549]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1916551]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1916553]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1916555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1916921]:int(64)[13] "temp"
            (1916926 'move' count[1916921](1916923 '.v' _iterator[1858259] F1_count[1964641]))
            (1916557 'move' call_tmp[1916555](1916560 call ==[435539] count[1916921] 0))
            (1916563 'move' tmp[1916553] call_tmp[1916555])
            if call_tmp[1916555]
            {
              const-val tmp[1916568]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1916570]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1916572]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1916928]:int(64)[13] "temp"
              (1916933 'move' low[1916928](1916930 '.v' _iterator[1858259] F0_low[1964637]))
              (1916574 'move' call_tmp[1916572](1916577 call _cast[955945] low[1916928]))
              const-val call_tmp[1916579]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1916581]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1916583 'move' coerce_tmp[1916581](1916585 'cast' uint(64)[115] 1))
              (1916588 'move' call_tmp[1916579](1916591 call -[962104] call_tmp[1916572]))
              const-val call_tmp[1916593]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1916595 'move' call_tmp[1916593](1916598 call _cast[953454] call_tmp[1916579]))
              const-val ret_tmp[1916600]:2*int(64)[1039967] "temp"
              const-val low[1916935]:int(64)[13] "temp"
              (1916940 'move' low[1916935](1916937 '.v' _iterator[1858259] F0_low[1964637]))
              (1916603 call _build_tuple[1039925] low[1916935] call_tmp[1916593] ret_tmp[1916600])
              (1916607 'move' tmp[1916568] ret_tmp[1916600])
              (1916610 'move' tmp[1916551] tmp[1916568])
            }
            {
              const-val tmp[1916614]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1916616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1916618]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1916942]:int(64)[13] "temp"
              (1916947 'move' count[1916942](1916944 '.v' _iterator[1858259] F1_count[1964641]))
              (1916620 'move' call_tmp[1916618] count[1916942])
              const-val call_tmp[1916623]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1916949]:int(64)[13] "temp"
              (1916954 'move' count[1916949](1916951 '.v' _iterator[1858259] F1_count[1964641]))
              (1916625 'move' call_tmp[1916623](1916628 call -[962137] count[1916949]))
              const-val call_tmp[1916630]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1916956]:int(64)[13] "temp"
              (1916961 'move' low[1916956](1916958 '.v' _iterator[1858259] F0_low[1964637]))
              (1916632 'move' call_tmp[1916630](1916635 call +[439547] low[1916956] call_tmp[1916623]))
              const-val ret_tmp[1916638]:2*int(64)[1039967] "temp"
              const-val low[1916963]:int(64)[13] "temp"
              (1916968 'move' low[1916963](1916965 '.v' _iterator[1858259] F0_low[1964637]))
              (1916641 call _build_tuple[1039925] low[1916963] call_tmp[1916630] ret_tmp[1916638])
              (1916645 'move' tmp[1916614] ret_tmp[1916638])
              (1916648 'move' tmp[1916551] tmp[1916614])
            }
            (1916652 '=' tmp[1916549] tmp[1916551])
            (1916655 'noop')
            1
            ref call_tmp[1916657]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1916659 'move' call_tmp[1916657](1916661 '.' tmp[1916549] x0[1039963]))
            const-val start[1916664]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1916666]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1916668 'move' coerce_tmp[1916666](1916670 'deref' call_tmp[1916657]))
            (1916672 '=' start[1916664] coerce_tmp[1916666])
            (1916675 'noop')
            ref call_tmp[1916676]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1916678 'move' call_tmp[1916676](1916680 '.' tmp[1916549] x1[1039965]))
            const-val end[1916683]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1916685]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1916687 'move' coerce_tmp[1916685](1916689 'deref' call_tmp[1916676]))
            (1916691 '=' end[1916683] coerce_tmp[1916685])
            (1916694 'noop')
            val _indexOfInterest[1916695]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1916697]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1916699]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1916701]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
            (1916704 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1916666] coerce_tmp[1916685] ret_tmp[1916701])
            (1916708 'move' call_tmp[1916699] ret_tmp[1916701])
            (1916711 'move' _iterator[1916697](1916714 call _getIterator[1103212] call_tmp[1916699]))
            {
              val ret[1916717]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
              val call_tmp[1916719]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1916722 call chpl_range_check_stride[1102755])
              val i[1916723]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1916725]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1916727 'move' i[1916723] 0)
              val call_tmp[1916730]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1916732]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1916734]:int(64)[13] "temp"
              (1916736 'move' low[1916734](1916738 '.v' _iterator[1916697] F0_low[1966135]))
              (1916741 'move' default_arg_first[1916732](1916744 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1916734]))
              const-val default_arg_last[1916746]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1916748]:int(64)[13] "temp"
              (1916750 'move' high[1916748](1916752 '.v' _iterator[1916697] F1_high[1966139]))
              (1916755 'move' default_arg_last[1916746](1916758 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1916748]))
              const-val _return_tmp_[1916760]:bool[10] "dead after last mention" "temp"
              const-val low[1916762]:int(64)[13] "temp"
              (1916764 'move' low[1916762](1916766 '.v' _iterator[1916697] F0_low[1966135]))
              const-val high[1916769]:int(64)[13] "temp"
              (1916771 'move' high[1916769](1916773 '.v' _iterator[1916697] F1_high[1966139]))
              (1916776 'move' _return_tmp_[1916760](1916779 call chpl_checkIfRangeIterWillOverflow[1095987] low[1916762] high[1916769] 1 default_arg_first[1916732] default_arg_last[1916746] 1))
              CForLoop[1916786] hazard
              {
                const-val yret[1916815]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1916817 'move' yret[1916815] i[1916723])
                const-val _yieldedIndex[1916820]:int(64)[13] "temp"
                (1916822 'move' _yieldedIndex[1916820] i[1916723])
                {
                  const-val i[1916826]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1916828 'move' i[1916826] _yieldedIndex[1916820])
                  const-val yret[1916831]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1916833 'move' yret[1916831] _yieldedIndex[1916820])
                  const-val _yieldedIndex[1916861]:int(64)[13] "temp"
                  (1916912 'move' _yieldedIndex[1916861] _yieldedIndex[1916820])
                  {
                    const-val i[1916863]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1916865 'move' i[1916863] _yieldedIndex[1916861])
                    const-val yret[1916868]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1916870 'move' yret[1916868] _yieldedIndex[1916861])
                    const-val _yieldedIndex[1916873]:int(64)[13] "temp"
                    (1916875 'move' _yieldedIndex[1916873] _yieldedIndex[1916861])
                    {
                      const-val i[1916879]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1916881 'move' i[1916879] _yieldedIndex[1916873])
                      {
                        ref call_tmp[1916885]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1916887]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                        (1916889 'move' _this_tmp_[1916887](1916892 call errorsArray[813968] this[169670]))
                        val coerce_tmp[1916894]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1916896 'move' coerce_tmp[1916894](1916898 'deref' _this_tmp_[1916887]))
                        (1916900 'move' call_tmp[1916885](1916903 call this[1235664] coerce_tmp[1916894] i[1916879]))
                        (1916907 call clear[1235958] call_tmp[1916885])
                      }
                      label _continueLabel[1916909]
                    }
                  }
                }
                {
                  const-val low[1916788]:int(64)[13] "temp"
                  (1916790 'move' low[1916788](1916792 '.v' _iterator[1916697] F0_low[1966135]))
                  (1916795 '=' i[1916723] low[1916788])
                }
                {
                  const-val high[1916799]:int(64)[13] "temp"
                  (1916801 'move' high[1916799](1916803 '.v' _iterator[1916697] F1_high[1966139]))
                  (1916806 '<=' i[1916723] high[1916799])
                }
                {
                  val call_tmp[1916810]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1916812 '+=' i[1916723] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1916849]
            }
            (1916852 call _freeIterator[1103385] _iterator[1916697])
            (1916855 call chpl__autoDestroy[1567619] tmp[1916549])
            label _endchpl_direct_counted_range_iter_helper[1916857]
          }
          (1858302 call _freeIterator[1103635] _iterator[1858259])
          label _endchpl_direct_counted_range_iter[1858304]
        }
        label _breakLabel[168813]
        (1798738 call _freeIterator[1103885] _iterator[168808])
      }
      ref call_tmp[679752]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "maybe param" "temp"
      (679755 'move' call_tmp[679752](388514 call errorsArray[813968] this[169670]))
      val coerce_tmp[1237079]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237083 'move' coerce_tmp[1237079](1237081 'deref' call_tmp[679752]))
      const-val coerce_tmp[1237085]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237091 'move' coerce_tmp[1237085](1237087 'cast' c_void_ptr[149] coerce_tmp[1237079]))
      (168851 call c_free[207852] coerce_tmp[1237085])
    }
    label _enddeinit[1771578]
    val _parent_destructor_tmp_[1771573]:Error[167938] "temp"
    (1771580 'move' _parent_destructor_tmp_[1771573](1771574 'cast' Error[167938] this[169670]))
    (1771582 call deinit[811657] _parent_destructor_tmp_[1771573])
    (522067 return _void[55])
  }
  function TaskErrors[169656].these[168862](const in arg this[169674]:TaskErrors[169656], ref arg _retArg[1787991]:_ref(_ir_these_TaskErrors)[1238004]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1956304]:_ir_these_TaskErrors[1237893] "temp"
    (1956306 '.=' _ir[1956304] F0_this[1955931] this[169674])
    (1956310 '=' _retArg[1787991] _ir[1956304])
    (1956313 return _void[55])
  }
  type _ic_these_TaskErrors[1237887] val super[1237888]:object[22] "super class" val more[1237890]:int(64)[13] const-val F0_this[1955929]:TaskErrors[169656] val F1__iterator[1955933]:_ic_chpl_direct_counted_range_iter[1103701] val F2__iterator[1955935]:_ic_chpl_direct_counted_range_iter_helper[1103451] const F3_tmp[1955937]:2*int(64)[1039967] val F4__iterator[1955939]:_ic_chpl_direct_param_stride_range_iter[1103197] val F5_i[1955941]:int(64)[13] ref value[1955943]:_ref(owned Error?)[966333]
  type _ir_these_TaskErrors[1237893] const-val F0_this[1955931]:TaskErrors[169656]
  function _getIterator[1237902](const  ref arg ir[1237904]:_ir_these_TaskErrors[1237893]) : _ic_these_TaskErrors[1237887] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1238011]:_ic_these_TaskErrors[1237887] "dead after last mention" "RVV" "temp"
    val _ic_[1237894]:_ic_these_TaskErrors[1237887] "dead after last mention" "temp"
    const-val call_tmp[1238018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238021 'move' call_tmp[1238018](1238033 'sizeof_bundle' _ic_these_TaskErrors[1237887]))
    const-val cast_tmp[1238036]:c_void_ptr[149] "dead after last mention" "temp"
    (1238038 'move' cast_tmp[1238036](1237899 call chpl_here_alloc[187742] call_tmp[1238018] 40))
    (1237907 'move' _ic_[1237894](1238040 'cast' _ic_these_TaskErrors[1237887] cast_tmp[1238036]))
    (1237909 'setcid' _ic_[1237894])
    (1238016 'move' ret[1238011] _ic_[1237894])
    (1956316 '.=' ret[1238011] more[1237890] 1)
    const-val tmp[1956320]:TaskErrors[169656] "temp"
    (1956325 'move' tmp[1956320](1956321 '.v' ir[1237904] F0_this[1955931]))
    (1956327 '.=' ret[1238011] F0_this[1955929] tmp[1956320])
    (1238013 return ret[1238011])
  }
  function TaskErrors[169656].message[169031](const in arg this[169682]:TaskErrors[169656], ref arg _retArg[1798181]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522095]:string[26] "dead after last mention" "RVV" "temp"
    val n[169035]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544513 'move' n[169035] 0)
    val minMsg[169041]:string[26] "dead at end of block" "insert auto destroy"
    (1728784 call init[30760] minMsg[169041])
    val maxMsg[169046]:string[26] "dead at end of block" "insert auto destroy"
    (1728789 call init[30760] maxMsg[169046])
    val first[169053]:Error[167938] "dead at end of block" "insert auto destroy"
    (1728797 'move' first[169053](1728795 'cast' Error[167938] nil[44]))
    val last[169060]:Error[167938] "dead at end of block" "insert auto destroy"
    (1728802 'move' last[169060](1728800 'cast' Error[167938] nil[44]))
    {
      ref _indexOfInterest[169175]:_ref(owned Error?)[966333] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169176]:_ic_these_TaskErrors[1237887] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[679831]:_ir_these_TaskErrors[1237893] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1787967]:_ir_these_TaskErrors[1237893] "temp"
      (169067 call these[168862] this[169682] ret_tmp[1787967])
      (1787970 'move' call_tmp[679831] ret_tmp[1787967])
      (169185 'move' _iterator[169176](169183 call _getIterator[1237902] call_tmp[679831]))
      {
        val ret[1858529]:_ir_these_TaskErrors[1237893] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1858531]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1858533]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1858535]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
        const-val this[1858952]:TaskErrors[169656] "temp"
        (1858957 'move' this[1858952](1858954 '.v' _iterator[169176] F0_this[1955929]))
        (1858537 'move' call_tmp[1858535](1858540 call nErrors[813942] this[1858952]))
        const-val call_tmp[1858542]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1858544]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1858546 'move' coerce_tmp[1858544](1858548 'deref' call_tmp[1858535]))
        const-val ret_tmp[1858550]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
        (1858553 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1858544] ret_tmp[1858550])
        (1858557 'move' call_tmp[1858542] ret_tmp[1858550])
        (1858560 'move' _iterator[1858533](1858563 call _getIterator[1103716] call_tmp[1858542]))
        {
          val ret[1858566]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1858568]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1858570]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1858572]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1858574]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
          const-val low[1858576]:int(64)[13] "temp"
          (1858578 'move' low[1858576](1858580 '.v' _iterator[1858533] F0_low[1960165]))
          const-val count[1858583]:int(64)[13] "temp"
          (1858585 'move' count[1858583](1858587 '.v' _iterator[1858533] F1_count[1960169]))
          (1858591 call chpl_direct_counted_range_iter_helper[1102009] low[1858576] count[1858583] ret_tmp[1858574])
          (1858595 'move' call_tmp[1858572] ret_tmp[1858574])
          (1858598 'move' _iterator[1858570](1858601 call _getIterator[1103466] call_tmp[1858572]))
          {
            val ret[1917495]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
            val call_tmp[1917497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1917499]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1917501]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1917503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1918179]:int(64)[13] "temp"
            (1918184 'move' count[1918179](1918181 '.v' _iterator[1858570] F1_count[1964641]))
            (1917505 'move' call_tmp[1917503](1917508 call <[948309] count[1918179]))
            (1917510 'move' tmp[1917501] call_tmp[1917503])
            (1917513 'move' tmp[1917499] call_tmp[1917503])
            const-val call_tmp[1917516]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1917518 'move' call_tmp[1917516] call_tmp[1917503])
            if call_tmp[1917503]
            {
              (1917524 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1917527]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1917529]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1917531]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1917533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1918186]:int(64)[13] "temp"
            (1918191 'move' count[1918186](1918188 '.v' _iterator[1858570] F1_count[1964641]))
            (1917535 'move' call_tmp[1917533](1917538 call ==[435539] count[1918186] 0))
            (1917541 'move' tmp[1917531] call_tmp[1917533])
            if call_tmp[1917533]
            {
              const-val tmp[1917546]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1917548]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1917550]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1918193]:int(64)[13] "temp"
              (1918198 'move' low[1918193](1918195 '.v' _iterator[1858570] F0_low[1964637]))
              (1917552 'move' call_tmp[1917550](1917555 call _cast[955945] low[1918193]))
              const-val call_tmp[1917557]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1917559]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1917561 'move' coerce_tmp[1917559](1917563 'cast' uint(64)[115] 1))
              (1917566 'move' call_tmp[1917557](1917569 call -[962104] call_tmp[1917550]))
              const-val call_tmp[1917571]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1917573 'move' call_tmp[1917571](1917576 call _cast[953454] call_tmp[1917557]))
              const-val ret_tmp[1917578]:2*int(64)[1039967] "temp"
              const-val low[1918200]:int(64)[13] "temp"
              (1918205 'move' low[1918200](1918202 '.v' _iterator[1858570] F0_low[1964637]))
              (1917581 call _build_tuple[1039925] low[1918200] call_tmp[1917571] ret_tmp[1917578])
              (1917585 'move' tmp[1917546] ret_tmp[1917578])
              (1917588 'move' tmp[1917529] tmp[1917546])
            }
            {
              const-val tmp[1917592]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1917594]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1917596]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1918207]:int(64)[13] "temp"
              (1918212 'move' count[1918207](1918209 '.v' _iterator[1858570] F1_count[1964641]))
              (1917598 'move' call_tmp[1917596] count[1918207])
              const-val call_tmp[1917601]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1918214]:int(64)[13] "temp"
              (1918219 'move' count[1918214](1918216 '.v' _iterator[1858570] F1_count[1964641]))
              (1917603 'move' call_tmp[1917601](1917606 call -[962137] count[1918214]))
              const-val call_tmp[1917608]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1918221]:int(64)[13] "temp"
              (1918226 'move' low[1918221](1918223 '.v' _iterator[1858570] F0_low[1964637]))
              (1917610 'move' call_tmp[1917608](1917613 call +[439547] low[1918221] call_tmp[1917601]))
              const-val ret_tmp[1917616]:2*int(64)[1039967] "temp"
              const-val low[1918228]:int(64)[13] "temp"
              (1918233 'move' low[1918228](1918230 '.v' _iterator[1858570] F0_low[1964637]))
              (1917619 call _build_tuple[1039925] low[1918228] call_tmp[1917608] ret_tmp[1917616])
              (1917623 'move' tmp[1917592] ret_tmp[1917616])
              (1917626 'move' tmp[1917529] tmp[1917592])
            }
            (1917630 '=' tmp[1917527] tmp[1917529])
            (1917633 'noop')
            1
            ref call_tmp[1917635]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1917637 'move' call_tmp[1917635](1917639 '.' tmp[1917527] x0[1039963]))
            const-val start[1917642]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1917644]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1917646 'move' coerce_tmp[1917644](1917648 'deref' call_tmp[1917635]))
            (1917650 '=' start[1917642] coerce_tmp[1917644])
            (1917653 'noop')
            ref call_tmp[1917654]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1917656 'move' call_tmp[1917654](1917658 '.' tmp[1917527] x1[1039965]))
            const-val end[1917661]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1917663]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1917665 'move' coerce_tmp[1917663](1917667 'deref' call_tmp[1917654]))
            (1917669 '=' end[1917661] coerce_tmp[1917663])
            (1917672 'noop')
            val _indexOfInterest[1917673]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1917675]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1917677]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1917679]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
            (1917682 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1917644] coerce_tmp[1917663] ret_tmp[1917679])
            (1917686 'move' call_tmp[1917677] ret_tmp[1917679])
            (1917689 'move' _iterator[1917675](1917692 call _getIterator[1103212] call_tmp[1917677]))
            {
              val ret[1917695]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
              val call_tmp[1917697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1917700 call chpl_range_check_stride[1102755])
              val i[1917701]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1917703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1917705 'move' i[1917701] 0)
              val call_tmp[1917708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1917710]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1917712]:int(64)[13] "temp"
              (1917714 'move' low[1917712](1917716 '.v' _iterator[1917675] F0_low[1966135]))
              (1917719 'move' default_arg_first[1917710](1917722 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1917712]))
              const-val default_arg_last[1917724]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1917726]:int(64)[13] "temp"
              (1917728 'move' high[1917726](1917730 '.v' _iterator[1917675] F1_high[1966139]))
              (1917733 'move' default_arg_last[1917724](1917736 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1917726]))
              const-val _return_tmp_[1917738]:bool[10] "dead after last mention" "temp"
              const-val low[1917740]:int(64)[13] "temp"
              (1917742 'move' low[1917740](1917744 '.v' _iterator[1917675] F0_low[1966135]))
              const-val high[1917747]:int(64)[13] "temp"
              (1917749 'move' high[1917747](1917751 '.v' _iterator[1917675] F1_high[1966139]))
              (1917754 'move' _return_tmp_[1917738](1917757 call chpl_checkIfRangeIterWillOverflow[1095987] low[1917740] high[1917747] 1 default_arg_first[1917710] default_arg_last[1917724] 1))
              CForLoop[1917764] hazard
              {
                const-val yret[1917793]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1917795 'move' yret[1917793] i[1917701])
                const-val _yieldedIndex[1917798]:int(64)[13] "temp"
                (1917800 'move' _yieldedIndex[1917798] i[1917701])
                {
                  const-val i[1917804]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1917806 'move' i[1917804] _yieldedIndex[1917798])
                  const-val yret[1917809]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1917811 'move' yret[1917809] _yieldedIndex[1917798])
                  const-val _yieldedIndex[1917839]:int(64)[13] "temp"
                  (1918177 'move' _yieldedIndex[1917839] _yieldedIndex[1917798])
                  {
                    const-val i[1917841]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1917843 'move' i[1917841] _yieldedIndex[1917839])
                    const-val yret[1917846]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1917848 'move' yret[1917846] _yieldedIndex[1917839])
                    const-val _yieldedIndex[1917851]:int(64)[13] "temp"
                    (1917853 'move' _yieldedIndex[1917851] _yieldedIndex[1917839])
                    {
                      const-val i[1917857]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1917859 'move' i[1917857] _yieldedIndex[1917851])
                      ref call_tmp[1917862]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1917864]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                      const-val this[1917866]:TaskErrors[169656] "temp"
                      (1917868 'move' this[1917866](1917870 '.v' _iterator[169176] F0_this[1955929]))
                      (1917873 'move' _this_tmp_[1917864](1917876 call errorsArray[813968] this[1917866]))
                      val coerce_tmp[1917878]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1917880 'move' coerce_tmp[1917878](1917882 'deref' _this_tmp_[1917864]))
                      (1917884 'move' call_tmp[1917862](1917887 call this[1235664] coerce_tmp[1917878] _yieldedIndex[1917851]))
                      const-val call_tmp[1917890]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[1917892]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1917894 'move' coerce_tmp[1917892](1917897 call borrow[1235739] call_tmp[1917862]))
                      val coerce_tmp[1917899]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1917901 'move' coerce_tmp[1917899](1917903 'cast' object[22] coerce_tmp[1917892]))
                      (1917906 'move' call_tmp[1917890](1917909 call !=[1485] coerce_tmp[1917899] nil[44]))
                      const-val call_tmp[1917912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1917914 'move' call_tmp[1917912] call_tmp[1917890])
                      if call_tmp[1917890]
                      {
                        ref yret[1917919]:_ref(owned Error?)[966333] "dead after last mention" "YVV" "temp"
                        ref call_tmp[1917921]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1917923]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                        const-val this[1917925]:TaskErrors[169656] "temp"
                        (1917927 'move' this[1917925](1917929 '.v' _iterator[169176] F0_this[1955929]))
                        (1917932 'move' _this_tmp_[1917923](1917935 call errorsArray[813968] this[1917925]))
                        val coerce_tmp[1917937]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1917939 'move' coerce_tmp[1917937](1917941 'deref' _this_tmp_[1917923]))
                        (1917943 'move' call_tmp[1917921](1917946 call this[1235664] coerce_tmp[1917937] i[1917857]))
                        ref _yieldedIndex[1917949]:_ref(owned Error?)[966333] "temp"
                        (1917951 'move' _yieldedIndex[1917949] call_tmp[1917921])
                        {
                          ref err[1917955]:_ref(owned Error?)[966333] "index var" "insert auto destroy"
                          (1917957 'move' err[1917955] _yieldedIndex[1917949])
                          {
                            val call_tmp[1917961]:Error[167938] "dead at end of block" "maybe param" "temp"
                            (1917963 'move' call_tmp[1917961](1917966 call postfix![1728152] err[1917955]))
                            val e[1917968]:Error[167938] "dead at end of block" "insert auto destroy"
                            (1917970 'move' e[1917968](1917973 call chpl__initCopy[965528] call_tmp[1917961]))
                            const-val tmp[1917975]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1917977 'move' tmp[1917975](1917980 call ==[38820] minMsg[169041] ""))
                            val tmp[1917983]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1917985]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1917987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1917989 'move' call_tmp[1917987] tmp[1917975])
                            (1917992 'move' tmp[1917985] call_tmp[1917987])
                            if tmp[1917985]
                            {
                              (1917997 'move' tmp[1917983] 1)
                            }
                            {
                              const-val tmp[1918001]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1918003]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1918005]:int(32)[95] "temp"
                              (1918007 'move' _virtual_method_tmp_[1918005](1918009 'getcid' e[1917968]))
                              val ret_tmp[1918011]:string[26] "temp"
                              (1918013 'virtual method call' message[167929] _virtual_method_tmp_[1918005] e[1917968] ret_tmp[1918011])
                              (1918018 'move' call_tmp[1918003] ret_tmp[1918011])
                              const-val call_tmp[1918021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1918023 'move' call_tmp[1918021](1918026 call <[38870] call_tmp[1918003] minMsg[169041]))
                              (1918029 'move' tmp[1918001] call_tmp[1918021])
                              (1918032 'move' tmp[1917983] tmp[1918001])
                              (1918036 call chpl__autoDestroy[1494420] call_tmp[1918003])
                            }
                            const-val call_tmp[1918039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1918041 'move' call_tmp[1918039] tmp[1917983])
                            if call_tmp[1918039]
                            {
                              const-val call_tmp[1918046]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1918048]:int(32)[95] "temp"
                              (1918050 'move' _virtual_method_tmp_[1918048](1918052 'getcid' e[1917968]))
                              val ret_tmp[1918054]:string[26] "temp"
                              (1918056 'virtual method call' message[167929] _virtual_method_tmp_[1918048] e[1917968] ret_tmp[1918054])
                              (1918061 'move' call_tmp[1918046] ret_tmp[1918054])
                              (1918065 call =[38269] minMsg[169041] call_tmp[1918046])
                              (1918069 call chpl__autoDestroy[1494420] call_tmp[1918046])
                            }
                            const-val tmp[1918072]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1918074 'move' tmp[1918072](1918077 call ==[38820] maxMsg[169046] ""))
                            val tmp[1918080]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1918082]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1918084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1918086 'move' call_tmp[1918084] tmp[1918072])
                            (1918089 'move' tmp[1918082] call_tmp[1918084])
                            if tmp[1918082]
                            {
                              (1918094 'move' tmp[1918080] 1)
                            }
                            {
                              const-val tmp[1918098]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1918100]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1918102]:int(32)[95] "temp"
                              (1918104 'move' _virtual_method_tmp_[1918102](1918106 'getcid' e[1917968]))
                              val ret_tmp[1918108]:string[26] "temp"
                              (1918110 'virtual method call' message[167929] _virtual_method_tmp_[1918102] e[1917968] ret_tmp[1918108])
                              (1918115 'move' call_tmp[1918100] ret_tmp[1918108])
                              const-val call_tmp[1918118]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1918120 'move' call_tmp[1918118](1918123 call >[38894] call_tmp[1918100] maxMsg[169046]))
                              (1918126 'move' tmp[1918098] call_tmp[1918118])
                              (1918129 'move' tmp[1918080] tmp[1918098])
                              (1918133 call chpl__autoDestroy[1494420] call_tmp[1918100])
                            }
                            const-val call_tmp[1918136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1918138 'move' call_tmp[1918136] tmp[1918080])
                            if call_tmp[1918136]
                            {
                              const-val call_tmp[1918143]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1918145]:int(32)[95] "temp"
                              (1918147 'move' _virtual_method_tmp_[1918145](1918149 'getcid' e[1917968]))
                              val ret_tmp[1918151]:string[26] "temp"
                              (1918153 'virtual method call' message[167929] _virtual_method_tmp_[1918145] e[1917968] ret_tmp[1918151])
                              (1918158 'move' call_tmp[1918143] ret_tmp[1918151])
                              (1918162 call =[38269] maxMsg[169046] call_tmp[1918143])
                              (1918166 call chpl__autoDestroy[1494420] call_tmp[1918143])
                            }
                            (1918170 call +=[451226] n[169035] 1)
                          }
                          label _continueLabel[1918173]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[1917766]:int(64)[13] "temp"
                  (1917768 'move' low[1917766](1917770 '.v' _iterator[1917675] F0_low[1966135]))
                  (1917773 '=' i[1917701] low[1917766])
                }
                {
                  const-val high[1917777]:int(64)[13] "temp"
                  (1917779 'move' high[1917777](1917781 '.v' _iterator[1917675] F1_high[1966139]))
                  (1917784 '<=' i[1917701] high[1917777])
                }
                {
                  val call_tmp[1917788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1917790 '+=' i[1917701] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1917827]
            }
            (1917830 call _freeIterator[1103385] _iterator[1917675])
            (1917833 call chpl__autoDestroy[1567619] tmp[1917527])
            label _endchpl_direct_counted_range_iter_helper[1917835]
          }
          (1858718 call _freeIterator[1103635] _iterator[1858570])
          label _endchpl_direct_counted_range_iter[1858720]
        }
        (1858723 call _freeIterator[1103885] _iterator[1858533])
        label _endthese[1858725]
      }
      label _breakLabel[169181]
      (1798768 call _freeIterator[1238144] _iterator[169176])
    }
    {
      {
        ref _indexOfInterest[169254]:_ref(owned Error?)[966333] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169255]:_ic_these_TaskErrors[1237887] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[679911]:_ir_these_TaskErrors[1237893] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1787973]:_ir_these_TaskErrors[1237893] "temp"
        (169212 call these[168862] this[169682] ret_tmp[1787973])
        (1787976 'move' call_tmp[679911] ret_tmp[1787973])
        (169264 'move' _iterator[169255](169262 call _getIterator[1237902] call_tmp[679911]))
        {
          val ret[1858974]:_ir_these_TaskErrors[1237893] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1858976]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1858978]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1858980]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
          const-val this[1859277]:TaskErrors[169656] "temp"
          (1859282 'move' this[1859277](1859279 '.v' _iterator[169255] F0_this[1955929]))
          (1858982 'move' call_tmp[1858980](1858985 call nErrors[813942] this[1859277]))
          const-val call_tmp[1858987]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1858989]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1858991 'move' coerce_tmp[1858989](1858993 'deref' call_tmp[1858980]))
          const-val ret_tmp[1858995]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
          (1858998 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1858989] ret_tmp[1858995])
          (1859002 'move' call_tmp[1858987] ret_tmp[1858995])
          (1859005 'move' _iterator[1858978](1859008 call _getIterator[1103716] call_tmp[1858987]))
          {
            val ret[1859011]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1859013]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1859015]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1859017]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1859019]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
            const-val low[1859021]:int(64)[13] "temp"
            (1859023 'move' low[1859021](1859025 '.v' _iterator[1858978] F0_low[1960165]))
            const-val count[1859028]:int(64)[13] "temp"
            (1859030 'move' count[1859028](1859032 '.v' _iterator[1858978] F1_count[1960169]))
            (1859036 call chpl_direct_counted_range_iter_helper[1102009] low[1859021] count[1859028] ret_tmp[1859019])
            (1859040 'move' call_tmp[1859017] ret_tmp[1859019])
            (1859043 'move' _iterator[1859015](1859046 call _getIterator[1103466] call_tmp[1859017]))
            {
              val ret[1918236]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
              val call_tmp[1918238]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[1918240]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[1918242]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[1918244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1918800]:int(64)[13] "temp"
              (1918805 'move' count[1918800](1918802 '.v' _iterator[1859015] F1_count[1964641]))
              (1918246 'move' call_tmp[1918244](1918249 call <[948309] count[1918800]))
              (1918251 'move' tmp[1918242] call_tmp[1918244])
              (1918254 'move' tmp[1918240] call_tmp[1918244])
              const-val call_tmp[1918257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1918259 'move' call_tmp[1918257] call_tmp[1918244])
              if call_tmp[1918244]
              {
                (1918265 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
              }
              const-val tmp[1918268]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[1918270]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[1918272]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1918274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1918807]:int(64)[13] "temp"
              (1918812 'move' count[1918807](1918809 '.v' _iterator[1859015] F1_count[1964641]))
              (1918276 'move' call_tmp[1918274](1918279 call ==[435539] count[1918807] 0))
              (1918282 'move' tmp[1918272] call_tmp[1918274])
              if call_tmp[1918274]
              {
                const-val tmp[1918287]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1918289]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1918291]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1918814]:int(64)[13] "temp"
                (1918819 'move' low[1918814](1918816 '.v' _iterator[1859015] F0_low[1964637]))
                (1918293 'move' call_tmp[1918291](1918296 call _cast[955945] low[1918814]))
                const-val call_tmp[1918298]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1918300]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1918302 'move' coerce_tmp[1918300](1918304 'cast' uint(64)[115] 1))
                (1918307 'move' call_tmp[1918298](1918310 call -[962104] call_tmp[1918291]))
                const-val call_tmp[1918312]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1918314 'move' call_tmp[1918312](1918317 call _cast[953454] call_tmp[1918298]))
                const-val ret_tmp[1918319]:2*int(64)[1039967] "temp"
                const-val low[1918821]:int(64)[13] "temp"
                (1918826 'move' low[1918821](1918823 '.v' _iterator[1859015] F0_low[1964637]))
                (1918322 call _build_tuple[1039925] low[1918821] call_tmp[1918312] ret_tmp[1918319])
                (1918326 'move' tmp[1918287] ret_tmp[1918319])
                (1918329 'move' tmp[1918270] tmp[1918287])
              }
              {
                const-val tmp[1918333]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1918335]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1918337]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1918828]:int(64)[13] "temp"
                (1918833 'move' count[1918828](1918830 '.v' _iterator[1859015] F1_count[1964641]))
                (1918339 'move' call_tmp[1918337] count[1918828])
                const-val call_tmp[1918342]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1918835]:int(64)[13] "temp"
                (1918840 'move' count[1918835](1918837 '.v' _iterator[1859015] F1_count[1964641]))
                (1918344 'move' call_tmp[1918342](1918347 call -[962137] count[1918835]))
                const-val call_tmp[1918349]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1918842]:int(64)[13] "temp"
                (1918847 'move' low[1918842](1918844 '.v' _iterator[1859015] F0_low[1964637]))
                (1918351 'move' call_tmp[1918349](1918354 call +[439547] low[1918842] call_tmp[1918342]))
                const-val ret_tmp[1918357]:2*int(64)[1039967] "temp"
                const-val low[1918849]:int(64)[13] "temp"
                (1918854 'move' low[1918849](1918851 '.v' _iterator[1859015] F0_low[1964637]))
                (1918360 call _build_tuple[1039925] low[1918849] call_tmp[1918349] ret_tmp[1918357])
                (1918364 'move' tmp[1918333] ret_tmp[1918357])
                (1918367 'move' tmp[1918270] tmp[1918333])
              }
              (1918371 '=' tmp[1918268] tmp[1918270])
              (1918374 'noop')
              1
              ref call_tmp[1918376]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1918378 'move' call_tmp[1918376](1918380 '.' tmp[1918268] x0[1039963]))
              const-val start[1918383]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1918385]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1918387 'move' coerce_tmp[1918385](1918389 'deref' call_tmp[1918376]))
              (1918391 '=' start[1918383] coerce_tmp[1918385])
              (1918394 'noop')
              ref call_tmp[1918395]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1918397 'move' call_tmp[1918395](1918399 '.' tmp[1918268] x1[1039965]))
              const-val end[1918402]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1918404]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1918406 'move' coerce_tmp[1918404](1918408 'deref' call_tmp[1918395]))
              (1918410 '=' end[1918402] coerce_tmp[1918404])
              (1918413 'noop')
              val _indexOfInterest[1918414]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1918416]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1918418]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1918420]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
              (1918423 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1918385] coerce_tmp[1918404] ret_tmp[1918420])
              (1918427 'move' call_tmp[1918418] ret_tmp[1918420])
              (1918430 'move' _iterator[1918416](1918433 call _getIterator[1103212] call_tmp[1918418]))
              {
                val ret[1918436]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                val call_tmp[1918438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1918441 call chpl_range_check_stride[1102755])
                val i[1918442]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1918444]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1918446 'move' i[1918442] 0)
                val call_tmp[1918449]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1918451]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1918453]:int(64)[13] "temp"
                (1918455 'move' low[1918453](1918457 '.v' _iterator[1918416] F0_low[1966135]))
                (1918460 'move' default_arg_first[1918451](1918463 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1918453]))
                const-val default_arg_last[1918465]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1918467]:int(64)[13] "temp"
                (1918469 'move' high[1918467](1918471 '.v' _iterator[1918416] F1_high[1966139]))
                (1918474 'move' default_arg_last[1918465](1918477 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1918467]))
                const-val _return_tmp_[1918479]:bool[10] "dead after last mention" "temp"
                const-val low[1918481]:int(64)[13] "temp"
                (1918483 'move' low[1918481](1918485 '.v' _iterator[1918416] F0_low[1966135]))
                const-val high[1918488]:int(64)[13] "temp"
                (1918490 'move' high[1918488](1918492 '.v' _iterator[1918416] F1_high[1966139]))
                (1918495 'move' _return_tmp_[1918479](1918498 call chpl_checkIfRangeIterWillOverflow[1095987] low[1918481] high[1918488] 1 default_arg_first[1918451] default_arg_last[1918465] 1))
                CForLoop[1918505] hazard
                {
                  const-val yret[1918534]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1918536 'move' yret[1918534] i[1918442])
                  const-val _yieldedIndex[1918539]:int(64)[13] "temp"
                  (1918541 'move' _yieldedIndex[1918539] i[1918442])
                  {
                    const-val i[1918545]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1918547 'move' i[1918545] _yieldedIndex[1918539])
                    const-val yret[1918550]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1918552 'move' yret[1918550] _yieldedIndex[1918539])
                    const-val _yieldedIndex[1918580]:int(64)[13] "temp"
                    (1918798 'move' _yieldedIndex[1918580] _yieldedIndex[1918539])
                    {
                      const-val i[1918582]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1918584 'move' i[1918582] _yieldedIndex[1918580])
                      const-val yret[1918587]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1918589 'move' yret[1918587] _yieldedIndex[1918580])
                      const-val _yieldedIndex[1918592]:int(64)[13] "temp"
                      (1918594 'move' _yieldedIndex[1918592] _yieldedIndex[1918580])
                      {
                        const-val i[1918598]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1918600 'move' i[1918598] _yieldedIndex[1918592])
                        ref call_tmp[1918603]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1918605]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                        const-val this[1918607]:TaskErrors[169656] "temp"
                        (1918609 'move' this[1918607](1918611 '.v' _iterator[169255] F0_this[1955929]))
                        (1918614 'move' _this_tmp_[1918605](1918617 call errorsArray[813968] this[1918607]))
                        val coerce_tmp[1918619]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1918621 'move' coerce_tmp[1918619](1918623 'deref' _this_tmp_[1918605]))
                        (1918625 'move' call_tmp[1918603](1918628 call this[1235664] coerce_tmp[1918619] _yieldedIndex[1918592]))
                        const-val call_tmp[1918631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[1918633]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1918635 'move' coerce_tmp[1918633](1918638 call borrow[1235739] call_tmp[1918603]))
                        val coerce_tmp[1918640]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1918642 'move' coerce_tmp[1918640](1918644 'cast' object[22] coerce_tmp[1918633]))
                        (1918647 'move' call_tmp[1918631](1918650 call !=[1485] coerce_tmp[1918640] nil[44]))
                        const-val call_tmp[1918653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1918655 'move' call_tmp[1918653] call_tmp[1918631])
                        if call_tmp[1918631]
                        {
                          ref yret[1918660]:_ref(owned Error?)[966333] "dead after last mention" "YVV" "temp"
                          ref call_tmp[1918662]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1918664]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                          const-val this[1918666]:TaskErrors[169656] "temp"
                          (1918668 'move' this[1918666](1918670 '.v' _iterator[169255] F0_this[1955929]))
                          (1918673 'move' _this_tmp_[1918664](1918676 call errorsArray[813968] this[1918666]))
                          val coerce_tmp[1918678]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1918680 'move' coerce_tmp[1918678](1918682 'deref' _this_tmp_[1918664]))
                          (1918684 'move' call_tmp[1918662](1918687 call this[1235664] coerce_tmp[1918678] i[1918598]))
                          ref _yieldedIndex[1918690]:_ref(owned Error?)[966333] "temp"
                          (1918692 'move' _yieldedIndex[1918690] call_tmp[1918662])
                          {
                            ref err[1918696]:_ref(owned Error?)[966333] "index var" "insert auto destroy"
                            (1918698 'move' err[1918696] _yieldedIndex[1918690])
                            {
                              val call_tmp[1918702]:Error[167938] "dead at end of block" "maybe param" "temp"
                              (1918704 'move' call_tmp[1918702](1918707 call postfix![1728152] err[1918696]))
                              val e[1918709]:Error[167938] "dead at end of block" "insert auto destroy"
                              (1918711 'move' e[1918709](1918714 call chpl__initCopy[965528] call_tmp[1918702]))
                              const-val call_tmp[1918716]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1918718]:int(32)[95] "temp"
                              (1918720 'move' _virtual_method_tmp_[1918718](1918722 'getcid' e[1918709]))
                              val ret_tmp[1918724]:string[26] "temp"
                              (1918726 'virtual method call' message[167929] _virtual_method_tmp_[1918718] e[1918709] ret_tmp[1918724])
                              (1918731 'move' call_tmp[1918716] ret_tmp[1918724])
                              const-val call_tmp[1918734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1918736 'move' call_tmp[1918734](1918739 call ==[38820] call_tmp[1918716] minMsg[169041]))
                              const-val call_tmp[1918742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1918744 'move' call_tmp[1918742] call_tmp[1918734])
                              if call_tmp[1918742]
                              {
                                const-val call_tmp[1918749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[1918751]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1918753 'move' coerce_tmp[1918751](1918755 'cast' object[22] first[169053]))
                                (1918758 'move' call_tmp[1918749](1918761 call ==[1146] coerce_tmp[1918751] nil[44]))
                                const-val call_tmp[1918764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1918766 'move' call_tmp[1918764] call_tmp[1918749])
                                if call_tmp[1918764]
                                {
                                  val coerce_tmp[1918771]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1918773 'move' coerce_tmp[1918771] e[1918709])
                                  (1918777 call =[1232329] first[169053] coerce_tmp[1918771])
                                }
                                val coerce_tmp[1918781]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1918783 'move' coerce_tmp[1918781] e[1918709])
                                (1918787 call =[1232329] last[169060] coerce_tmp[1918781])
                              }
                              (1918792 call chpl__autoDestroy[1494420] call_tmp[1918716])
                            }
                            label _continueLabel[1918794]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[1918507]:int(64)[13] "temp"
                    (1918509 'move' low[1918507](1918511 '.v' _iterator[1918416] F0_low[1966135]))
                    (1918514 '=' i[1918442] low[1918507])
                  }
                  {
                    const-val high[1918518]:int(64)[13] "temp"
                    (1918520 'move' high[1918518](1918522 '.v' _iterator[1918416] F1_high[1966139]))
                    (1918525 '<=' i[1918442] high[1918518])
                  }
                  {
                    val call_tmp[1918529]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1918531 '+=' i[1918442] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1918568]
              }
              (1918571 call _freeIterator[1103385] _iterator[1918416])
              (1918574 call chpl__autoDestroy[1567619] tmp[1918268])
              label _endchpl_direct_counted_range_iter_helper[1918576]
            }
            (1859163 call _freeIterator[1103635] _iterator[1859015])
            label _endchpl_direct_counted_range_iter[1859165]
          }
          (1859168 call _freeIterator[1103885] _iterator[1858978])
          label _endthese[1859170]
        }
        label _breakLabel[169260]
        (1798777 call _freeIterator[1238144] _iterator[169255])
      }
      const-val call_tmp[679948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (679951 'move' call_tmp[679948](169291 call !=[38844] minMsg[169041] maxMsg[169046]))
      const-val call_tmp[679953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (679956 'move' call_tmp[679953] call_tmp[679948])
      if call_tmp[679953]
      {
        {
          ref _indexOfInterest[169324]:_ref(owned Error?)[966333] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169325]:_ic_these_TaskErrors[1237887] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[679960]:_ir_these_TaskErrors[1237893] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1787979]:_ir_these_TaskErrors[1237893] "temp"
          (169296 call these[168862] this[169682] ret_tmp[1787979])
          (1787982 'move' call_tmp[679960] ret_tmp[1787979])
          (169334 'move' _iterator[169325](169332 call _getIterator[1237902] call_tmp[679960]))
          {
            val ret[1859299]:_ir_these_TaskErrors[1237893] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1859301]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1859303]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1859305]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
            const-val this[1859570]:TaskErrors[169656] "temp"
            (1859575 'move' this[1859570](1859572 '.v' _iterator[169325] F0_this[1955929]))
            (1859307 'move' call_tmp[1859305](1859310 call nErrors[813942] this[1859570]))
            const-val call_tmp[1859312]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1859314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1859316 'move' coerce_tmp[1859314](1859318 'deref' call_tmp[1859305]))
            const-val ret_tmp[1859320]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
            (1859323 call chpl_direct_counted_range_iter[457907] 0 coerce_tmp[1859314] ret_tmp[1859320])
            (1859327 'move' call_tmp[1859312] ret_tmp[1859320])
            (1859330 'move' _iterator[1859303](1859333 call _getIterator[1103716] call_tmp[1859312]))
            {
              val ret[1859336]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1859338]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1859340]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1859342]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1859344]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
              const-val low[1859346]:int(64)[13] "temp"
              (1859348 'move' low[1859346](1859350 '.v' _iterator[1859303] F0_low[1960165]))
              const-val count[1859353]:int(64)[13] "temp"
              (1859355 'move' count[1859353](1859357 '.v' _iterator[1859303] F1_count[1960169]))
              (1859361 call chpl_direct_counted_range_iter_helper[1102009] low[1859346] count[1859353] ret_tmp[1859344])
              (1859365 'move' call_tmp[1859342] ret_tmp[1859344])
              (1859368 'move' _iterator[1859340](1859371 call _getIterator[1103466] call_tmp[1859342]))
              {
                val ret[1918857]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                val call_tmp[1918859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1918861]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1918863]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1918865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1919389]:int(64)[13] "temp"
                (1919394 'move' count[1919389](1919391 '.v' _iterator[1859340] F1_count[1964641]))
                (1918867 'move' call_tmp[1918865](1918870 call <[948309] count[1919389]))
                (1918872 'move' tmp[1918863] call_tmp[1918865])
                (1918875 'move' tmp[1918861] call_tmp[1918865])
                const-val call_tmp[1918878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1918880 'move' call_tmp[1918878] call_tmp[1918865])
                if call_tmp[1918865]
                {
                  (1918886 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1918889]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1918891]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1918893]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1918895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1919396]:int(64)[13] "temp"
                (1919401 'move' count[1919396](1919398 '.v' _iterator[1859340] F1_count[1964641]))
                (1918897 'move' call_tmp[1918895](1918900 call ==[435539] count[1919396] 0))
                (1918903 'move' tmp[1918893] call_tmp[1918895])
                if call_tmp[1918895]
                {
                  const-val tmp[1918908]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1918910]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1918912]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1919403]:int(64)[13] "temp"
                  (1919408 'move' low[1919403](1919405 '.v' _iterator[1859340] F0_low[1964637]))
                  (1918914 'move' call_tmp[1918912](1918917 call _cast[955945] low[1919403]))
                  const-val call_tmp[1918919]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1918921]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1918923 'move' coerce_tmp[1918921](1918925 'cast' uint(64)[115] 1))
                  (1918928 'move' call_tmp[1918919](1918931 call -[962104] call_tmp[1918912]))
                  const-val call_tmp[1918933]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1918935 'move' call_tmp[1918933](1918938 call _cast[953454] call_tmp[1918919]))
                  const-val ret_tmp[1918940]:2*int(64)[1039967] "temp"
                  const-val low[1919410]:int(64)[13] "temp"
                  (1919415 'move' low[1919410](1919412 '.v' _iterator[1859340] F0_low[1964637]))
                  (1918943 call _build_tuple[1039925] low[1919410] call_tmp[1918933] ret_tmp[1918940])
                  (1918947 'move' tmp[1918908] ret_tmp[1918940])
                  (1918950 'move' tmp[1918891] tmp[1918908])
                }
                {
                  const-val tmp[1918954]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1918956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1918958]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1919417]:int(64)[13] "temp"
                  (1919422 'move' count[1919417](1919419 '.v' _iterator[1859340] F1_count[1964641]))
                  (1918960 'move' call_tmp[1918958] count[1919417])
                  const-val call_tmp[1918963]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1919424]:int(64)[13] "temp"
                  (1919429 'move' count[1919424](1919426 '.v' _iterator[1859340] F1_count[1964641]))
                  (1918965 'move' call_tmp[1918963](1918968 call -[962137] count[1919424]))
                  const-val call_tmp[1918970]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1919431]:int(64)[13] "temp"
                  (1919436 'move' low[1919431](1919433 '.v' _iterator[1859340] F0_low[1964637]))
                  (1918972 'move' call_tmp[1918970](1918975 call +[439547] low[1919431] call_tmp[1918963]))
                  const-val ret_tmp[1918978]:2*int(64)[1039967] "temp"
                  const-val low[1919438]:int(64)[13] "temp"
                  (1919443 'move' low[1919438](1919440 '.v' _iterator[1859340] F0_low[1964637]))
                  (1918981 call _build_tuple[1039925] low[1919438] call_tmp[1918970] ret_tmp[1918978])
                  (1918985 'move' tmp[1918954] ret_tmp[1918978])
                  (1918988 'move' tmp[1918891] tmp[1918954])
                }
                (1918992 '=' tmp[1918889] tmp[1918891])
                (1918995 'noop')
                1
                ref call_tmp[1918997]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1918999 'move' call_tmp[1918997](1919001 '.' tmp[1918889] x0[1039963]))
                const-val start[1919004]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1919006]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1919008 'move' coerce_tmp[1919006](1919010 'deref' call_tmp[1918997]))
                (1919012 '=' start[1919004] coerce_tmp[1919006])
                (1919015 'noop')
                ref call_tmp[1919016]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1919018 'move' call_tmp[1919016](1919020 '.' tmp[1918889] x1[1039965]))
                const-val end[1919023]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1919025]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1919027 'move' coerce_tmp[1919025](1919029 'deref' call_tmp[1919016]))
                (1919031 '=' end[1919023] coerce_tmp[1919025])
                (1919034 'noop')
                val _indexOfInterest[1919035]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1919037]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1919039]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1919041]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                (1919044 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1919006] coerce_tmp[1919025] ret_tmp[1919041])
                (1919048 'move' call_tmp[1919039] ret_tmp[1919041])
                (1919051 'move' _iterator[1919037](1919054 call _getIterator[1103212] call_tmp[1919039]))
                {
                  val ret[1919057]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                  val call_tmp[1919059]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1919062 call chpl_range_check_stride[1102755])
                  val i[1919063]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1919065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1919067 'move' i[1919063] 0)
                  val call_tmp[1919070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1919072]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1919074]:int(64)[13] "temp"
                  (1919076 'move' low[1919074](1919078 '.v' _iterator[1919037] F0_low[1966135]))
                  (1919081 'move' default_arg_first[1919072](1919084 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1919074]))
                  const-val default_arg_last[1919086]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1919088]:int(64)[13] "temp"
                  (1919090 'move' high[1919088](1919092 '.v' _iterator[1919037] F1_high[1966139]))
                  (1919095 'move' default_arg_last[1919086](1919098 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1919088]))
                  const-val _return_tmp_[1919100]:bool[10] "dead after last mention" "temp"
                  const-val low[1919102]:int(64)[13] "temp"
                  (1919104 'move' low[1919102](1919106 '.v' _iterator[1919037] F0_low[1966135]))
                  const-val high[1919109]:int(64)[13] "temp"
                  (1919111 'move' high[1919109](1919113 '.v' _iterator[1919037] F1_high[1966139]))
                  (1919116 'move' _return_tmp_[1919100](1919119 call chpl_checkIfRangeIterWillOverflow[1095987] low[1919102] high[1919109] 1 default_arg_first[1919072] default_arg_last[1919086] 1))
                  CForLoop[1919126] hazard
                  {
                    const-val yret[1919155]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1919157 'move' yret[1919155] i[1919063])
                    const-val _yieldedIndex[1919160]:int(64)[13] "temp"
                    (1919162 'move' _yieldedIndex[1919160] i[1919063])
                    {
                      const-val i[1919166]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1919168 'move' i[1919166] _yieldedIndex[1919160])
                      const-val yret[1919171]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1919173 'move' yret[1919171] _yieldedIndex[1919160])
                      const-val _yieldedIndex[1919201]:int(64)[13] "temp"
                      (1919387 'move' _yieldedIndex[1919201] _yieldedIndex[1919160])
                      {
                        const-val i[1919203]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1919205 'move' i[1919203] _yieldedIndex[1919201])
                        const-val yret[1919208]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1919210 'move' yret[1919208] _yieldedIndex[1919201])
                        const-val _yieldedIndex[1919213]:int(64)[13] "temp"
                        (1919215 'move' _yieldedIndex[1919213] _yieldedIndex[1919201])
                        {
                          const-val i[1919219]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1919221 'move' i[1919219] _yieldedIndex[1919213])
                          ref call_tmp[1919224]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1919226]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                          const-val this[1919228]:TaskErrors[169656] "temp"
                          (1919230 'move' this[1919228](1919232 '.v' _iterator[169325] F0_this[1955929]))
                          (1919235 'move' _this_tmp_[1919226](1919238 call errorsArray[813968] this[1919228]))
                          val coerce_tmp[1919240]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1919242 'move' coerce_tmp[1919240](1919244 'deref' _this_tmp_[1919226]))
                          (1919246 'move' call_tmp[1919224](1919249 call this[1235664] coerce_tmp[1919240] _yieldedIndex[1919213]))
                          const-val call_tmp[1919252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[1919254]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1919256 'move' coerce_tmp[1919254](1919259 call borrow[1235739] call_tmp[1919224]))
                          val coerce_tmp[1919261]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1919263 'move' coerce_tmp[1919261](1919265 'cast' object[22] coerce_tmp[1919254]))
                          (1919268 'move' call_tmp[1919252](1919271 call !=[1485] coerce_tmp[1919261] nil[44]))
                          const-val call_tmp[1919274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1919276 'move' call_tmp[1919274] call_tmp[1919252])
                          if call_tmp[1919252]
                          {
                            ref yret[1919281]:_ref(owned Error?)[966333] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1919283]:_ref(owned Error?)[966333] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1919285]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "temp"
                            const-val this[1919287]:TaskErrors[169656] "temp"
                            (1919289 'move' this[1919287](1919291 '.v' _iterator[169325] F0_this[1955929]))
                            (1919294 'move' _this_tmp_[1919285](1919297 call errorsArray[813968] this[1919287]))
                            val coerce_tmp[1919299]:c_ptr(owned Error?)[1235526] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1919301 'move' coerce_tmp[1919299](1919303 'deref' _this_tmp_[1919285]))
                            (1919305 'move' call_tmp[1919283](1919308 call this[1235664] coerce_tmp[1919299] i[1919219]))
                            ref _yieldedIndex[1919311]:_ref(owned Error?)[966333] "temp"
                            (1919313 'move' _yieldedIndex[1919311] call_tmp[1919283])
                            {
                              ref err[1919317]:_ref(owned Error?)[966333] "index var" "insert auto destroy"
                              (1919319 'move' err[1919317] _yieldedIndex[1919311])
                              {
                                val call_tmp[1919323]:Error[167938] "dead at end of block" "maybe param" "temp"
                                (1919325 'move' call_tmp[1919323](1919328 call postfix![1728152] err[1919317]))
                                val e[1919330]:Error[167938] "dead at end of block" "insert auto destroy"
                                (1919332 'move' e[1919330](1919335 call chpl__initCopy[965528] call_tmp[1919323]))
                                const-val call_tmp[1919337]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[1919339]:int(32)[95] "temp"
                                (1919341 'move' _virtual_method_tmp_[1919339](1919343 'getcid' e[1919330]))
                                val ret_tmp[1919345]:string[26] "temp"
                                (1919347 'virtual method call' message[167929] _virtual_method_tmp_[1919339] e[1919330] ret_tmp[1919345])
                                (1919352 'move' call_tmp[1919337] ret_tmp[1919345])
                                const-val call_tmp[1919355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1919357 'move' call_tmp[1919355](1919360 call ==[38820] call_tmp[1919337] maxMsg[169046]))
                                const-val call_tmp[1919363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1919365 'move' call_tmp[1919363] call_tmp[1919355])
                                if call_tmp[1919363]
                                {
                                  val coerce_tmp[1919370]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1919372 'move' coerce_tmp[1919370] e[1919330])
                                  (1919376 call =[1232329] last[169060] coerce_tmp[1919370])
                                }
                                (1919381 call chpl__autoDestroy[1494420] call_tmp[1919337])
                              }
                              label _continueLabel[1919383]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1919128]:int(64)[13] "temp"
                      (1919130 'move' low[1919128](1919132 '.v' _iterator[1919037] F0_low[1966135]))
                      (1919135 '=' i[1919063] low[1919128])
                    }
                    {
                      const-val high[1919139]:int(64)[13] "temp"
                      (1919141 'move' high[1919139](1919143 '.v' _iterator[1919037] F1_high[1966139]))
                      (1919146 '<=' i[1919063] high[1919139])
                    }
                    {
                      val call_tmp[1919150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1919152 '+=' i[1919063] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1919189]
                }
                (1919192 call _freeIterator[1103385] _iterator[1919037])
                (1919195 call chpl__autoDestroy[1567619] tmp[1918889])
                label _endchpl_direct_counted_range_iter_helper[1919197]
              }
              (1859488 call _freeIterator[1103635] _iterator[1859340])
              label _endchpl_direct_counted_range_iter[1859490]
            }
            (1859493 call _freeIterator[1103885] _iterator[1859303])
            label _endthese[1859495]
          }
          label _breakLabel[169330]
          (1798786 call _freeIterator[1238144] _iterator[169325])
        }
      }
    }
    const-val call_tmp[679987]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789879]:string[26] "temp"
    (169365 call _cast[1063064] n[169035] ret_tmp[1789879])
    (1789882 'move' call_tmp[679987] ret_tmp[1789879])
    const-val call_tmp[679992]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786715]:string[26] "temp"
    (169384 call +[38342] call_tmp[679987] " errors: " ret_tmp[1786715])
    (1786718 'move' call_tmp[679992] ret_tmp[1786715])
    val ret[169386]:string[26] "dead at end of block" "insert auto destroy"
    (544529 'move' ret[169386] call_tmp[679992])
    const-val tmp[428302]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428323]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1728721]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1728727 'move' coerce_tmp[1728721](1728723 'cast' object[22] first[169053]))
    (428334 'move' tmp[428323](169392 call !=[1485] coerce_tmp[1728721] nil[44]))
    val tmp[570406]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570407]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680005 'move' call_tmp[680002] tmp[428323])
    (570412 'move' tmp[570407] call_tmp[680002])
    if tmp[570407]
    {
      const-val tmp[570414]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1728733]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728739 'move' coerce_tmp[1728733](1728735 'cast' object[22] last[169060]))
      (680010 'move' call_tmp[680007](169396 call !=[1485] coerce_tmp[1728733] nil[44]))
      (570416 'move' tmp[570414] call_tmp[680007])
      (570421 'move' tmp[570406] tmp[570414])
    }
    {
      (570426 'move' tmp[570406] 0)
    }
    (428313 'move' tmp[428302] tmp[570406])
    val tmp[570433]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570434]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680020 'move' call_tmp[680017] tmp[428302])
    (570439 'move' tmp[570434] call_tmp[680017])
    if tmp[570434]
    {
      const-val tmp[570441]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1728745]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728751 'move' coerce_tmp[1728745](1728747 'cast' object[22] first[169053]))
      val coerce_tmp[1728753]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728759 'move' coerce_tmp[1728753](1728755 'cast' object[22] last[169060]))
      (680025 'move' call_tmp[680022](169402 call !=[1485] coerce_tmp[1728745] coerce_tmp[1728753]))
      (570443 'move' tmp[570441] call_tmp[680022])
      (570448 'move' tmp[570433] tmp[570441])
    }
    {
      (570453 'move' tmp[570433] 0)
    }
    const-val call_tmp[680027]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680030 'move' call_tmp[680027] tmp[570433])
    if call_tmp[680027]
    {
      val call_tmp[680032]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680035 'move' call_tmp[680032](169409 call postfix![967694] first[169053]))
      const-val call_tmp[680037]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788007]:string[26] "temp"
      (169412 call chpl_describe_error[169789] call_tmp[680032] ret_tmp[1788007])
      (1788010 'move' call_tmp[680037] ret_tmp[1788007])
      const-val call_tmp[680042]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786721]:string[26] "temp"
      (169430 call +[38342] call_tmp[680037] " ... " ret_tmp[1786721])
      (1786724 'move' call_tmp[680042] ret_tmp[1786721])
      val call_tmp[680047]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680050 'move' call_tmp[680047](169434 call postfix![967694] last[169060]))
      const-val call_tmp[680052]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788013]:string[26] "temp"
      (169437 call chpl_describe_error[169789] call_tmp[680047] ret_tmp[1788013])
      (1788016 'move' call_tmp[680052] ret_tmp[1788013])
      const-val call_tmp[680057]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786727]:string[26] "temp"
      (169438 call +[38342] call_tmp[680042] call_tmp[680052] ret_tmp[1786727])
      (1786730 'move' call_tmp[680057] ret_tmp[1786727])
      (169440 call +=[38797] ret[169386] call_tmp[680057])
      (1798789 call chpl__autoDestroy[1494420] call_tmp[680057])
      (1798792 call chpl__autoDestroy[1494420] call_tmp[680052])
      (1798795 call chpl__autoDestroy[1494420] call_tmp[680042])
      (1798798 call chpl__autoDestroy[1494420] call_tmp[680037])
    }
    {
      const-val call_tmp[680062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1728769]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728775 'move' coerce_tmp[1728769](1728771 'cast' object[22] first[169053]))
      (680065 'move' call_tmp[680062](169445 call !=[1485] coerce_tmp[1728769] nil[44]))
      const-val call_tmp[680067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680070 'move' call_tmp[680067] call_tmp[680062])
      if call_tmp[680067]
      {
        val call_tmp[680072]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
        (680075 'move' call_tmp[680072] first[169053])
        const-val call_tmp[680077]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788019]:string[26] "temp"
        (169453 call chpl_describe_error[169789] call_tmp[680072] ret_tmp[1788019])
        (1788022 'move' call_tmp[680077] ret_tmp[1788019])
        (169454 call +=[38797] ret[169386] call_tmp[680077])
        (1798802 call chpl__autoDestroy[1494420] call_tmp[680077])
      }
    }
    (1728782 'move' ret[522095] ret[169386])
    (1798805 call chpl__autoDestroy[1494420] call_tmp[679987])
    (1798808 call chpl__autoDestroy[1494420] maxMsg[169046])
    (1798811 call chpl__autoDestroy[1494420] minMsg[169041])
    gotoReturn _end_message[522093] _end_message[522093]
    label _end_message[522093]
    (1798183 '=' _retArg[1798181] ret[522095])
    (1798185 return _void[55])
  }
  function TaskErrors[169656].nErrors[813942](const in arg this[813946]:TaskErrors[169656]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[813956]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[813963]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (813966 'move' call_tmp[813963](813950 '.' this[813946] nErrors[168317]))
    (813961 'move' ret[813956] call_tmp[813963])
    (813958 return ret[813956])
  }
  function TaskErrors[169656].errorsArray[813968](const in arg this[813972]:TaskErrors[169656]) ref : _ref(c_ptr(owned Error?))[1235535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[813982]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "RVV" "temp"
    ref call_tmp[813989]:_ref(c_ptr(owned Error?))[1235535] "dead after last mention" "maybe param" "temp"
    (813992 'move' call_tmp[813989](813976 '.' this[813972] errorsArray[168328]))
    (813987 'move' ret[813982] call_tmp[813989])
    (813984 return ret[813982])
  }
  function _new[1240891](ref arg group[1240900]:_ref(chpl_TaskErrors)[940851]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1763416]:TaskErrors[169656] "temp"
    val ret[1240930]:TaskErrors[169656] "dead after last mention" "RVV" "temp"
    val initTemp[1240893]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1240937]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1240940 'move' call_tmp[1240937](1240951 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1240954]:c_void_ptr[149] "dead after last mention" "temp"
    (1240956 'move' cast_tmp[1240954](1240908 call chpl_here_alloc[187742] call_tmp[1240937] 41))
    (1240911 'move' initTemp[1240893](1240958 'cast' TaskErrors[169656] cast_tmp[1240954]))
    (1240913 'setcid' initTemp[1240893])
    (1240894 call init[168338] initTemp[1240893] group[1240900])
    val tmp[1240915]:TaskErrors[169656] "dead after last mention" "temp"
    (1240919 'move' tmp[1240915] initTemp[1240893])
    (1240935 'move' ret[1240930] tmp[1240915])
    (1240932 return ret[1240930])
  }
  function _new[1718905](const in arg err[1718914]:Error[167938]) : TaskErrors[169656] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1763843]:TaskErrors[169656] "temp"
    val ret[1718942]:TaskErrors[169656] "dead after last mention" "RVV" "temp"
    val initTemp[1718907]:TaskErrors[169656] "dead after last mention" "temp"
    const-val call_tmp[1718949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1718952 'move' call_tmp[1718949](1718961 'sizeof_bundle' TaskErrors[169656]))
    const-val cast_tmp[1718964]:c_void_ptr[149] "dead after last mention" "temp"
    (1718966 'move' cast_tmp[1718964](1718920 call chpl_here_alloc[187742] call_tmp[1718949] 41))
    (1718923 'move' initTemp[1718907](1718968 'cast' TaskErrors[169656] cast_tmp[1718964]))
    (1718925 'setcid' initTemp[1718907])
    (1718908 call init[168719] initTemp[1718907] err[1718914])
    val tmp[1718927]:TaskErrors[169656] "dead after last mention" "temp"
    (1718931 'move' tmp[1718927] initTemp[1718907])
    (1718947 'move' ret[1718942] tmp[1718927])
    (1718944 return ret[1718942])
  }
  type TaskErrors[169656] val super[355620]:Error[167938] "super class" val nErrors[168317]:int(64)[13] "no doc" val errorsArray[168328]:c_ptr(owned Error?)[1235526] "no doc"
  function chpl_error_type_name[169706](const in arg err[169703]:Error[167938], ref arg _retArg[1788001]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522140]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680128]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680131 'move' call_tmp[680128](169728 'getcid' err[169703]))
    const-val cid[169729]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544533 'move' cid[169729] call_tmp[680128])
    const-val call_tmp[680133]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680136 'move' call_tmp[680133](169754 'class name by id' cid[169729]))
    const-val nameC[169755]:c_string[19] "dead at end of block" "insert auto destroy"
    (544535 'move' nameC[169755](1718468 call chpl__initCopy[21695] call_tmp[680133]))
    const-val nameS[169760]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544537]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1766583]:Error[167938] "error variable" "temp"
      (1766599 'move' error[1766583] nil[44])
      const-val call_tmp[680138]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1718484]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1718489 'move' default_arg_length[1718484](1718486 call createStringWithNewBuffer_default_length[963957] nameC[169755] error[1766583]))
      val errorExists[2054677]:bool[10] "temp"
      (2054682 'move' errorExists[2054677](2054679 '!=' error[1766583] nil[44]))
      if errorExists[2054677]
      {
        gotoErrorHandling handler[1766584] handler[1766584]
      }
      const-val ret_tmp[1785945]:string[26] "temp"
      (169768 call createStringWithNewBuffer[30410] nameC[169755] default_arg_length[1718484] strict[173646] error[1766583] ret_tmp[1785945])
      (1785948 'move' call_tmp[680138] ret_tmp[1785945])
      val errorExists[2054685]:bool[10] "temp"
      (2054690 'move' errorExists[2054685](2054687 '!=' error[1766583] nil[44]))
      if errorExists[2054685]
      {
        gotoErrorHandling handler[1766584] handler[1766584]
      }
      (544548 'move' nameS[169760] call_tmp[680138])
      label handler[1766584]
      const-val shouldHandleError[1766608]:bool[10] "temp"
      val errorExists[2054693]:bool[10] "temp"
      (2054698 'move' errorExists[2054693](2054695 '!=' error[1766583] nil[44]))
      (1766612 'move' shouldHandleError[1766608] errorExists[2054693])
      if shouldHandleError[1766608]
      {
        (1766605 call chpl_uncaught_error[170243] error[1766583])
      }
    }
    (1718503 'move' ret[522140] nameS[169760])
    gotoReturn _end_chpl_error_type_name[522138] _end_chpl_error_type_name[522138]
    label _end_chpl_error_type_name[522138]
    (1788003 '=' _retArg[1788001] ret[522140])
    (1788005 return _void[55])
  }
  function chpl_describe_error[169789](const in arg err[169786]:Error[167938], ref arg _retArg[1788031]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522152]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680143]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1787995]:string[26] "temp"
    (169795 call chpl_error_type_name[169706] err[169786] ret_tmp[1787995])
    (1787998 'move' call_tmp[680143] ret_tmp[1787995])
    const-val nameS[169796]:string[26] "dead at end of block" "insert auto destroy"
    (544551 'move' nameS[169796] call_tmp[680143])
    const-val call_tmp[680148]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786733]:string[26] "temp"
    (169803 call +[38342] nameS[169796] ": " ret_tmp[1786733])
    (1786736 'move' call_tmp[680148] ret_tmp[1786733])
    const-val call_tmp[680155]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1759532]:int(32)[95] "temp"
    (1759536 'move' _virtual_method_tmp_[1759532](1759534 'getcid' err[169786]))
    val ret_tmp[1787947]:string[26] "temp"
    (169810 'virtual method call' message[167929] _virtual_method_tmp_[1759532] err[169786] ret_tmp[1787947])
    (1787950 'move' call_tmp[680155] ret_tmp[1787947])
    const-val call_tmp[680160]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786739]:string[26] "temp"
    (169811 call +[38342] call_tmp[680148] call_tmp[680155] ret_tmp[1786739])
    (1786742 'move' call_tmp[680160] ret_tmp[1786739])
    const-val ret[169813]:string[26] "dead at end of block" "insert auto destroy"
    (544553 'move' ret[169813] call_tmp[680160])
    (1718510 'move' ret[522152] ret[169813])
    (1798814 call chpl__autoDestroy[1494420] call_tmp[680155])
    (1798817 call chpl__autoDestroy[1494420] call_tmp[680148])
    (1798820 call chpl__autoDestroy[1494420] nameS[169796])
    gotoReturn _end_chpl_describe_error[522150] _end_chpl_describe_error[522150]
    label _end_chpl_describe_error[522150]
    (1788033 '=' _retArg[1788031] ret[522152])
    (1788035 return _void[55])
  }
  function chpl_do_fix_thrown_error[169831](const in arg err[169828]:Error[167938]) : Error[167938] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522164]:Error[167938] "dead after last mention" "RVV" "temp"
    val fixErr[169839]:Error[167938] "dead at end of block" "insert auto destroy"
    (544555 'move' fixErr[169839](969394 call chpl__initCopy[967285] err[169828]))
    const-val call_tmp[680165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969397]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969402 'move' coerce_tmp[969397](969399 'cast' object[22] fixErr[169839]))
    (680168 'move' call_tmp[680165](169846 call ==[1146] coerce_tmp[969397] nil[44]))
    const-val call_tmp[680170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680173 'move' call_tmp[680170] call_tmp[680165])
    if call_tmp[680170]
    {
      val call_tmp[680175]:NilThrownError[167983] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[969512]:NilThrownError[167983] "dead after last mention" "temp"
      (969514 'move' new_temp[969512](969444 call _new[969460]))
      (680178 'move' call_tmp[680175] new_temp[969512])
      val coerce_tmp[969619]:NilThrownError[167983] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969625 'move' coerce_tmp[969619] call_tmp[680175])
      (169855 call =[969574] fixErr[169839] coerce_tmp[969619])
    }
    const-val call_tmp[680180]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680183 'move' call_tmp[680180](169881 '_get_user_line'))
    const-val line[169882]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544557 'move' line[169882] call_tmp[680180])
    const-val call_tmp[680185]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680188 'move' call_tmp[680185](169904 '_get_user_file'))
    const-val fileId[169905]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544559 'move' fileId[169905] call_tmp[680185])
    val call_tmp[680190]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680193 'move' call_tmp[680190](169910 call postfix![967685] fixErr[169839]))
    ref call_tmp[680197]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[969636]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969641 'move' coerce_tmp[969636] call_tmp[680190])
    (680200 'move' call_tmp[680197](169914 call _hasThrowInfo[811631] coerce_tmp[969636]))
    const-val call_tmp[680202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[969644]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969648 'move' coerce_tmp[969644](969646 'deref' call_tmp[680197]))
    (680205 'move' call_tmp[680202](169917 call ![7494] coerce_tmp[969644]))
    const-val call_tmp[680207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680210 'move' call_tmp[680207] call_tmp[680202])
    if call_tmp[680207]
    {
      val call_tmp[680212]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680215 'move' call_tmp[680212](169920 call postfix![967685] fixErr[169839]))
      ref call_tmp[680219]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969652]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969657 'move' coerce_tmp[969652] call_tmp[680212])
      (680222 'move' call_tmp[680219](169922 call _hasThrowInfo[811631] coerce_tmp[969652]))
      (169926 call =[435085] call_tmp[680219] 1)
      val call_tmp[680224]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680227 'move' call_tmp[680224](169931 call postfix![967685] fixErr[169839]))
      ref call_tmp[680231]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969662]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969667 'move' coerce_tmp[969662] call_tmp[680224])
      (680234 'move' call_tmp[680231](169935 call thrownLine[811553] coerce_tmp[969662]))
      (169939 call =[435238] call_tmp[680231] line[169882])
      val call_tmp[680236]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (680239 'move' call_tmp[680236](169943 call postfix![967685] fixErr[169839]))
      ref call_tmp[680243]:_ref(int(32))[936537] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969672]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969677 'move' coerce_tmp[969672] call_tmp[680236])
      (680246 'move' call_tmp[680243](169947 call thrownFileId[811579] coerce_tmp[969672]))
      (169951 call =[435217] call_tmp[680243] fileId[169905])
    }
    val call_tmp[680248]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680251 'move' call_tmp[680248](169961 call _to_nonnil[967924] fixErr[169839]))
    (969683 'move' ret[522164] call_tmp[680248])
    gotoReturn _end_chpl_do_fix_thrown_error[522162] _end_chpl_do_fix_thrown_error[522162]
    label _end_chpl_do_fix_thrown_error[522162]
    (522166 return ret[522164])
  }
  function chpl_fix_thrown_error[170003](const  ref arg err[170000]:owned Error[966369]) : Error[167938] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969364]:owned Error[966369] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969367 'move' _formal_tmp_err[969364] err[170000])
    val ret[522186]:Error[167938] "dead after last mention" "RVV" "temp"
    val call_tmp[680267]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    (680270 'move' call_tmp[680267](170013 call release[969109] _formal_tmp_err[969364]))
    val call_tmp[680272]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969385]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969391 'move' coerce_tmp[969385] call_tmp[680267])
    (680275 'move' call_tmp[680272](170015 call chpl_do_fix_thrown_error[169831] coerce_tmp[969385]))
    (969686 'move' ret[522186] call_tmp[680272])
    (1798823 call chpl__autoDestroy[1501551] _formal_tmp_err[969364])
    (522188 return ret[522186])
  }
  function chpl_delete_error[170217](const in arg err[170214]:Error[167938]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1718357]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718362 'move' coerce_tmp[1718357](1718359 'cast' object[22] err[170214]))
    (680330 'move' call_tmp[680327](170221 call !=[1485] coerce_tmp[1718357] nil[44]))
    const-val call_tmp[680332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680335 'move' call_tmp[680332] call_tmp[680327])
    if call_tmp[680332]
    {
      (170225 call chpl__delete[1236094] err[170214])
    }
    (522207 return _void[55])
  }
  function chpl_uncaught_error[170243](const in arg err[170240]:Error[167938]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680337]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680340 'move' call_tmp[680337](170275 '_get_user_file'))
    const-val call_tmp[680342]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680345 'move' call_tmp[680342](170276 'chpl_lookupFilename' call_tmp[680337]))
    const-val myFileC[170277]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544565 'move' myFileC[170277](1718366 call chpl__initCopy[21695] call_tmp[680342]))
    const-val myFileS[170282]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544567]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1766616]:Error[167938] "error variable" "temp"
      (1766632 'move' error[1766616] nil[44])
      const-val call_tmp[680347]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1718382]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1718387 'move' default_arg_length[1718382](1718384 call createStringWithNewBuffer_default_length[963957] myFileC[170277] error[1766616]))
      val errorExists[2054701]:bool[10] "temp"
      (2054706 'move' errorExists[2054701](2054703 '!=' error[1766616] nil[44]))
      if errorExists[2054701]
      {
        gotoErrorHandling handler[1766617] handler[1766617]
      }
      const-val ret_tmp[1785951]:string[26] "temp"
      (170290 call createStringWithNewBuffer[30410] myFileC[170277] default_arg_length[1718382] strict[173646] error[1766616] ret_tmp[1785951])
      (1785954 'move' call_tmp[680347] ret_tmp[1785951])
      val errorExists[2054709]:bool[10] "temp"
      (2054714 'move' errorExists[2054709](2054711 '!=' error[1766616] nil[44]))
      if errorExists[2054709]
      {
        gotoErrorHandling handler[1766617] handler[1766617]
      }
      (544578 'move' myFileS[170282] call_tmp[680347])
      label handler[1766617]
      const-val shouldHandleError[1766641]:bool[10] "temp"
      val errorExists[2054717]:bool[10] "temp"
      (2054722 'move' errorExists[2054717](2054719 '!=' error[1766616] nil[44]))
      (1766645 'move' shouldHandleError[1766641] errorExists[2054717])
      if shouldHandleError[1766641]
      {
        (1766638 call chpl_uncaught_error[170243] error[1766616])
      }
    }
    const-val call_tmp[680352]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680355 'move' call_tmp[680352](170300 '_get_user_line'))
    const-val myLine[170301]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544581 'move' myLine[170301] call_tmp[680352])
    ref call_tmp[680359]:_ref(int(32))[936537] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1718400]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1718405 'move' coerce_tmp[1718400] err[170240])
    (680362 'move' call_tmp[680359](170309 call thrownFileId[811579] coerce_tmp[1718400]))
    const-val call_tmp[680364]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680367 'move' call_tmp[680364](170312 'chpl_lookupFilename' call_tmp[680359]))
    const-val thrownFileC[170313]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544583 'move' thrownFileC[170313](1718408 call chpl__initCopy[21695] call_tmp[680364]))
    const-val thrownFileS[170318]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544585]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1766649]:Error[167938] "error variable" "temp"
      (1766665 'move' error[1766649] nil[44])
      const-val call_tmp[680369]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1718424]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1718429 'move' default_arg_length[1718424](1718426 call createStringWithNewBuffer_default_length[963957] thrownFileC[170313] error[1766649]))
      val errorExists[2054725]:bool[10] "temp"
      (2054730 'move' errorExists[2054725](2054727 '!=' error[1766649] nil[44]))
      if errorExists[2054725]
      {
        gotoErrorHandling handler[1766650] handler[1766650]
      }
      const-val ret_tmp[1785957]:string[26] "temp"
      (170326 call createStringWithNewBuffer[30410] thrownFileC[170313] default_arg_length[1718424] strict[173646] error[1766649] ret_tmp[1785957])
      (1785960 'move' call_tmp[680369] ret_tmp[1785957])
      val errorExists[2054733]:bool[10] "temp"
      (2054738 'move' errorExists[2054733](2054735 '!=' error[1766649] nil[44]))
      if errorExists[2054733]
      {
        gotoErrorHandling handler[1766650] handler[1766650]
      }
      (544596 'move' thrownFileS[170318] call_tmp[680369])
      label handler[1766650]
      const-val shouldHandleError[1766674]:bool[10] "temp"
      val errorExists[2054741]:bool[10] "temp"
      (2054746 'move' errorExists[2054741](2054743 '!=' error[1766649] nil[44]))
      (1766678 'move' shouldHandleError[1766674] errorExists[2054741])
      if shouldHandleError[1766674]
      {
        (1766671 call chpl_uncaught_error[170243] error[1766649])
      }
    }
    ref call_tmp[680376]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1718442]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1718447 'move' coerce_tmp[1718442] err[170240])
    (680379 'move' call_tmp[680376](170335 call thrownLine[811553] coerce_tmp[1718442]))
    const-val thrownLine[170338]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1718452]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1718456 'move' coerce_tmp[1718452](1718454 'deref' call_tmp[680376]))
    (1798826 '=' thrownLine[170338] coerce_tmp[1718452])
    (544599 'noop')
    const-val call_tmp[680381]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1718459]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1718464 'move' coerce_tmp[1718459] err[170240])
    const-val ret_tmp[1788025]:string[26] "temp"
    (170362 call chpl_describe_error[169789] coerce_tmp[1718459] ret_tmp[1788025])
    (1788028 'move' call_tmp[680381] ret_tmp[1788025])
    const-val call_tmp[680386]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786745]:string[26] "temp"
    (170363 call +[38342] "uncaught " call_tmp[680381] ret_tmp[1786745])
    (1786748 'move' call_tmp[680386] ret_tmp[1786745])
    const-val call_tmp[680391]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786751]:string[26] "temp"
    (170382 call +[38342] call_tmp[680386] "\n  " ret_tmp[1786751])
    (1786754 'move' call_tmp[680391] ret_tmp[1786751])
    const-val call_tmp[680396]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786757]:string[26] "temp"
    (170385 call +[38342] call_tmp[680391] thrownFileS[170318] ret_tmp[1786757])
    (1786760 'move' call_tmp[680396] ret_tmp[1786757])
    const-val call_tmp[680401]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786763]:string[26] "temp"
    (170388 call +[38342] call_tmp[680396] ":" ret_tmp[1786763])
    (1786766 'move' call_tmp[680401] ret_tmp[1786763])
    const-val call_tmp[680406]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789885]:string[26] "temp"
    (170392 call _cast[1063064] thrownLine[170338] ret_tmp[1789885])
    (1789888 'move' call_tmp[680406] ret_tmp[1789885])
    const-val call_tmp[680411]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786769]:string[26] "temp"
    (170394 call +[38342] call_tmp[680401] call_tmp[680406] ret_tmp[1786769])
    (1786772 'move' call_tmp[680411] ret_tmp[1786769])
    const-val call_tmp[680416]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786775]:string[26] "temp"
    (170413 call +[38342] call_tmp[680411] ": thrown here" ret_tmp[1786775])
    (1786778 'move' call_tmp[680416] ret_tmp[1786775])
    const-val call_tmp[680421]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786781]:string[26] "temp"
    (170416 call +[38342] call_tmp[680416] "\n  " ret_tmp[1786781])
    (1786784 'move' call_tmp[680421] ret_tmp[1786781])
    const-val call_tmp[680426]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786787]:string[26] "temp"
    (170419 call +[38342] call_tmp[680421] myFileS[170282] ret_tmp[1786787])
    (1786790 'move' call_tmp[680426] ret_tmp[1786787])
    const-val call_tmp[680431]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786793]:string[26] "temp"
    (170422 call +[38342] call_tmp[680426] ":" ret_tmp[1786793])
    (1786796 'move' call_tmp[680431] ret_tmp[1786793])
    const-val call_tmp[680436]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789891]:string[26] "temp"
    (170426 call _cast[1063064] myLine[170301] ret_tmp[1789891])
    (1789894 'move' call_tmp[680436] ret_tmp[1789891])
    const-val call_tmp[680441]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786799]:string[26] "temp"
    (170428 call +[38342] call_tmp[680431] call_tmp[680436] ret_tmp[1786799])
    (1786802 'move' call_tmp[680441] ret_tmp[1786799])
    const-val call_tmp[680446]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1786805]:string[26] "temp"
    (170447 call +[38342] call_tmp[680441] ": uncaught here" ret_tmp[1786805])
    (1786808 'move' call_tmp[680446] ret_tmp[1786805])
    const-val s[170449]:string[26] "dead at end of block" "insert auto destroy"
    (544601 'move' s[170449] call_tmp[680446])
    const-val call_tmp[680453]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680456 'move' call_tmp[680453](170459 call c_str[32932] s[170449]))
    (170461 call chpl_error_preformatted[1718526] call_tmp[680453])
    (1798829 call chpl__autoDestroy[1494420] s[170449])
    (1798832 call chpl__autoDestroy[1494420] call_tmp[680441])
    (1798835 call chpl__autoDestroy[1494420] call_tmp[680436])
    (1798838 call chpl__autoDestroy[1494420] call_tmp[680431])
    (1798841 call chpl__autoDestroy[1494420] call_tmp[680426])
    (1798844 call chpl__autoDestroy[1494420] call_tmp[680421])
    (1798847 call chpl__autoDestroy[1494420] call_tmp[680416])
    (1798850 call chpl__autoDestroy[1494420] call_tmp[680411])
    (1798853 call chpl__autoDestroy[1494420] call_tmp[680406])
    (1798856 call chpl__autoDestroy[1494420] call_tmp[680401])
    (1798859 call chpl__autoDestroy[1494420] call_tmp[680396])
    (1798862 call chpl__autoDestroy[1494420] call_tmp[680391])
    (1798865 call chpl__autoDestroy[1494420] call_tmp[680386])
    (1798868 call chpl__autoDestroy[1494420] call_tmp[680381])
    (1798871 call chpl__autoDestroy[1494420] thrownFileS[170318])
    (1798874 call chpl__autoDestroy[1494420] myFileS[170282])
    (522211 return _void[55])
  }
  function chpl_propagate_error[170472](const in arg err[170469]:Error[167938]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170477 call chpl_uncaught_error[170243] err[170469])
    (522213 return _void[55])
  }
  function chpl_forall_error[170489](const in arg err[170486]:Error[167938]) : Error[167938] "no doc" "resolved"
  {
    val ret[522217]:Error[167938] "dead after last mention" "RVV" "temp"
    val call_tmp[680458]:TaskErrors[169656] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1718756]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718761 'move' coerce_tmp[1718756] err[170486])
    (680461 'move' call_tmp[680458](170497 call _cast[1718614] coerce_tmp[1718756]))
    const-val call_tmp[680463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1718789]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1718794 'move' coerce_tmp[1718789](1718791 'cast' object[22] call_tmp[680458]))
    (680466 'move' call_tmp[680463](170502 call _cond_test[9881] coerce_tmp[1718789]))
    if call_tmp[680463]
    {
      (1718974 'move' ret[522217] err[170486])
      gotoReturn _end_chpl_forall_error[522215] _end_chpl_forall_error[522215]
    }
    val call_tmp[680468]:TaskErrors[169656] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1718955]:TaskErrors[169656] "dead after last mention" "temp"
    (1718957 'move' new_temp[1718955](1718801 call _new[1718905] err[170486]))
    (680471 'move' call_tmp[680468] new_temp[1718955])
    (522229 'move' ret[522217](1718976 'cast' Error[167938] call_tmp[680468]))
    label _end_chpl_forall_error[522215]
    (522219 return ret[522217])
  }
  function chpl_enum_cast_error[1071766](const in arg casted[1071768]:uint(8)[100], const  ref arg enumName[1071770]:string[26], ref arg error_out[1768923]:Error[167938]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1071776]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790205]:string[26] "temp"
    (1071781 call _cast[1071830] casted[1071768] ret_tmp[1790205])
    (1790208 'move' call_tmp[1071776] ret_tmp[1790205])
    const-val call_tmp[1071784]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786937]:string[26] "temp"
    (1071789 call +[38342] "bad cast from int '" call_tmp[1071776] ret_tmp[1786937])
    (1786940 'move' call_tmp[1071784] ret_tmp[1786937])
    const-val call_tmp[1071792]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786943]:string[26] "temp"
    (1071797 call +[38342] call_tmp[1071784] "' to enum '" ret_tmp[1786943])
    (1786946 'move' call_tmp[1071792] ret_tmp[1786943])
    const-val call_tmp[1071800]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786949]:string[26] "temp"
    (1071805 call +[38342] call_tmp[1071792] enumName[1071770] ret_tmp[1786949])
    (1786952 'move' call_tmp[1071800] ret_tmp[1786949])
    const-val call_tmp[1071808]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073466]:IllegalArgumentError[168200] "dead after last mention" "temp"
    (1073468 'move' new_temp[1073466](1073392 call _new[1073413] call_tmp[1071800] "'"))
    const-val initTemp[1073487]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "temp"
    (1073490 call init[1064120] initTemp[1073487] new_temp[1073466])
    (1071810 'move' call_tmp[1071808] initTemp[1073487])
    val call_tmp[1071818]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073504]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1790089]:owned Error[966369] "temp"
    (1073506 call _cast[1064641] call_tmp[1071808] ret_tmp[1790089])
    (1790092 'move' coerce_tmp[1073504] ret_tmp[1790089])
    const-val _formal_tmp_in_err[1073683]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073687 'move' _formal_tmp_in_err[1073683] coerce_tmp[1073504])
    (1071820 'move' call_tmp[1071818](1071823 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1073683]))
    {
      val castedError[1768928]:Error[167938] "temp"
      (1768934 'move' castedError[1768928] call_tmp[1071818])
      (1768936 '=' error_out[1768923] castedError[1768928])
      (1800705 call chpl__autoDestroy[1494420] call_tmp[1071800])
      (1800708 call chpl__autoDestroy[1494420] call_tmp[1071792])
      (1800711 call chpl__autoDestroy[1494420] call_tmp[1071784])
      (1800714 call chpl__autoDestroy[1494420] call_tmp[1071776])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1768925] _endchpl_enum_cast_error[1768925]
    }
    (1800726 call chpl__autoDestroy[1494420] call_tmp[1071800])
    (1800723 call chpl__autoDestroy[1494420] call_tmp[1071792])
    (1800720 call chpl__autoDestroy[1494420] call_tmp[1071784])
    (1800717 call chpl__autoDestroy[1494420] call_tmp[1071776])
    label _endchpl_enum_cast_error[1768925]
    (1071827 return _void[55])
  }
  function on_fn[935249](ref arg this[1765446]:_ref(chpl_TaskErrors)[940851], const in arg err[1765448]:Error[167938]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[679400]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
      (679403 'move' call_tmp[679400](361313 call _errorsLock[812153] this[1765446]))
      (168244 call lock[187277] call_tmp[679400])
      ref call_tmp[679409]:_ref(Error)[940931] "dead at end of block" "maybe param" "temp"
      (679412 'move' call_tmp[679409](388382 call _head[812127] this[1765446]))
      val tmp[168248]:Error[167938] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1232314]:Error[167938] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1232318 'move' coerce_tmp[1232314](1232316 'deref' call_tmp[679409]))
      (1799163 '=' tmp[168248] coerce_tmp[1232314])
      (544475 'noop')
      ref call_tmp[679416]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1232321]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232326 'move' coerce_tmp[1232321] err[1765448])
      (679419 'move' call_tmp[679416](168255 call _next[811527] coerce_tmp[1232321]))
      (168259 call =[1232357] call_tmp[679416] tmp[168248])
      ref call_tmp[679423]:_ref(Error)[940931] "dead after last mention" "maybe param" "temp"
      (679426 'move' call_tmp[679423](388388 call _head[812127] this[1765446]))
      val coerce_tmp[1232394]:Error[167938] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232400 'move' coerce_tmp[1232394] err[1765448])
      (168264 call =[1232357] call_tmp[679423] coerce_tmp[1232394])
      ref call_tmp[679430]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
      (679433 'move' call_tmp[679430](361319 call _errorsLock[812153] this[1765446]))
      (168272 call unlock[187369] call_tmp[679430])
    }
    (935256 return _void[55])
  }
  function chpl_error_preformatted[1718526](const in arg c_string[1718528]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1718534 return _void[55])
  }
  function wrapon_fn[2034966](const in arg dummy_locale_arg[2034968]:chpl_localeID_t[209294], in arg buf[2034970]:c_void_ptr[149], in arg buf_size[2034972]:int(64)[13], in arg c[2034974]:_class_localson_fn[2034920]) : void[4] "on block"
  {
    val _0_tmp[2034979]:chpl_localeID_t[209294] "temp"
    (2034984 'move' _0_tmp[2034979](2034981 '.v' c[2034974] _0_tmp[2034923]))
    ref _1_this[2034986]:chpl_TaskErrors[168302] "temp"
    (2034991 'move' _1_this[2034986](2034988 '.v' c[2034974] _1_this[2034925]))
    val _2_err[2034994]:Error[167938] "temp"
    (2034999 'move' _2_err[2034994](2034996 '.v' c[2034974] _2_err[2034927]))
    (2034977 call on_fn[935249] _1_this[2034986] _2_err[2034994])
    (2035002 return _void[55])
  }
}