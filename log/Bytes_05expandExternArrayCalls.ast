AST dump for Bytes after pass expandExternArrayCalls.
Module use list: 

{
  (22818 'use' ChapelStandard)
  (22822 'use' ByteBufferHelpers)
  (22825 'use' BytesStringCommon)
  (22828 'use' SysCTypes)
  (22831 'use' BytesCasts)
  (22835 'use' BytesStringCommon 'only' decodePolicy)
  unknown idxType[22838] "no doc" "type variable" int[13]
  function bytesFactoryArgDepr[22843]() : _unknown[51] "private"
  {
    (22883 call compilerWarning "createBytesWith* with formal argument `s` is deprecated. " "Use argument name `x` instead")
  }
  function joinArgDepr[22890]() : _unknown[51] "private"
  {
    (22914 call compilerWarning "bytes.join with formal argument `S` is deprecated. " "Use argument name `x` instead")
  }
  function createBytesWithBorrowedBuffer[22925](arg x[22922] :
  bytes[24]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[22928] bytes[24]
      (22931 'end of statement')
    }
    (22937 call initWithBorrowedBuffer ret x)
    (22940 return ret)
  }
  function createBytesWithBorrowedBuffer[22950](arg s[22947] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (22954 call bytesFactoryArgDepr)
    (22962 return(22961 call createBytesWithBorrowedBuffer(x = s)))
  }
  function createBytesWithBorrowedBuffer[22972](arg x[22969] :
  c_string, arg length[22978] =
  (22975 call . x c"size")) : _unknown[51] "inline"
  {
    (23001 return(23000 call createBytesWithBorrowedBuffer(22990 call _cast(22989 call c_ptr(22987 call uint[115] 8)) x)(length = length)(size =(22997 call + length 1))))
  }
  function chpl_createBytesWithLiteral[23012](arg x[23009] :
  c_string, arg length[23015] :
  int[13]) : _unknown[51] "no doc"
  {
    (23023 return(23022 call createBytesWithBorrowedBuffer x length))
  }
  function createBytesWithBorrowedBuffer[23034](arg s[23031] :
  c_string, arg length[23040] =
  (23037 call . s c"size")) : _unknown[51] "last resort" "no doc"
  {
    (23045 call bytesFactoryArgDepr)
    (23054 return(23053 call createBytesWithBorrowedBuffer(x = s) length))
  }
  function createBytesWithBorrowedBuffer[23064](arg x[23061] :
  bufferType, arg length[23067] :
  int[13], arg size[23071] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23075] bytes[24]
      (23078 'end of statement')
    }
    (23086 call initWithBorrowedBuffer ret x length size)
    (23089 return ret)
  }
  function createBytesWithBorrowedBuffer[23099](arg s[23096] :
  bufferType, arg length[23102] :
  int[13], arg size[23106] :
  int[13]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23111 call bytesFactoryArgDepr)
    (23121 return(23120 call createBytesWithBorrowedBuffer(x = s) length size))
  }
  function createBytesWithOwnedBuffer[23131](arg s[23128] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (23152 call compilerError "A bytes cannot be passed to createBytesWithOwnedBuffer")
  }
  function createBytesWithOwnedBuffer[23163](arg s[23160] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23167 call bytesFactoryArgDepr)
    (23175 return(23174 call createBytesWithOwnedBuffer(x = s)))
  }
  function createBytesWithOwnedBuffer[23185](arg x[23182] :
  c_string, arg length[23191] =
  (23188 call . x c"size")) : _unknown[51] "inline"
  {
    (23208 return(23207 call createBytesWithOwnedBuffer(23197 call _cast bufferType x)(length = length)(size =(23204 call + length 1))))
  }
  function createBytesWithOwnedBuffer[23219](arg s[23216] :
  c_string, arg length[23225] =
  (23222 call . s c"size")) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23230 call bytesFactoryArgDepr)
    (23239 return(23238 call createBytesWithOwnedBuffer(x = s) length))
  }
  function createBytesWithOwnedBuffer[23249](arg x[23246] :
  bufferType, arg length[23252] :
  int[13], arg size[23256] :
  int[13]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23260] bytes[24]
      (23263 'end of statement')
    }
    (23271 call initWithOwnedBuffer ret x length size)
    (23274 return ret)
  }
  function createBytesWithOwnedBuffer[23284](arg s[23281] :
  bufferType, arg length[23287] :
  int[13], arg size[23291] :
  int[13]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23296 call bytesFactoryArgDepr)
    (23306 return(23305 call createBytesWithOwnedBuffer(x = s) length size))
  }
  function createBytesWithNewBuffer[23316](arg x[23313] :
  bytes[24]) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23319] bytes[24]
      (23322 'end of statement')
    }
    (23328 call initWithNewBuffer ret x)
    (23331 return ret)
  }
  function createBytesWithNewBuffer[23341](arg s[23338] :
  bytes[24]) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23345 call bytesFactoryArgDepr)
    (23353 return(23352 call createBytesWithNewBuffer(x = s)))
  }
  function createBytesWithNewBuffer[23363](arg x[23360] :
  c_string, arg length[23369] =
  (23366 call . x c"size")) : _unknown[51] "inline"
  {
    (23386 return(23385 call createBytesWithNewBuffer(23375 call _cast bufferType x)(length = length)(size =(23382 call + length 1))))
  }
  function createBytesWithNewBuffer[23397](arg s[23394] :
  c_string, arg length[23403] =
  (23400 call . s c"size")) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23408 call bytesFactoryArgDepr)
    (23417 return(23416 call createBytesWithNewBuffer(x = s) length))
  }
  function createBytesWithNewBuffer[23427](arg x[23424] :
  bufferType, arg length[23430] :
  int[13], arg size[23437] =
  (23435 call + length 1)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ret[23441] bytes[24]
      (23444 'end of statement')
    }
    (23452 call initWithNewBuffer ret x length size)
    (23455 return ret)
  }
  function createBytesWithNewBuffer[23465](arg s[23462] :
  bufferType, arg length[23468] :
  int[13], arg size[23475] =
  (23473 call + length 1)) : _unknown[51] "inline" "last resort" "no doc"
  {
    (23480 call bytesFactoryArgDepr)
    (23490 return(23489 call createBytesWithNewBuffer(x = s) length size))
  }
  type bytes[24] unknown buffLen[23497] 0 int[13] unknown buffSize[23503] 0 int[13] unknown buff[23509] nil[44] bufferType unknown isOwned[23515] 1 bool[10] unknown locale_id[23520] chpl_nodeID function bytes[24].init[23526](arg _mt[24412]:_MT[238], arg this[24410]:bytes[24]) : _unknown[51] "method" "primary method"
  {
  } function bytes[24].deinit[23533](arg _mt[24416]:_MT[238], ref arg this[24414]:bytes[24]) : _unknown[51] "destructor" "method" "primary method"
  {
    if(23596 call _cond_test(23545 call && isOwned(23543 call !=(23539 call . this c"buff") nil[44])))
    {
      {
        const tmp[23587] "const" "temp"
        (23588 'move' tmp[23587](23585 'deref'(23575 'chpl_on_locale_num'(23574 call chpl_buildLocaleID(23569 call . this c"locale_id") c_sublocid_any))))
        {
          (23582 call chpl_here_free(23578 call . this c"buff"))
        }
        (23591 'elided on block' 0 tmp[23587])
      }
    }
  } function bytes[24].writeThis[23607](arg _mt[24420]:_MT[238], arg this[24418]:bytes[24], arg f[23605]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (23630 call compilerError "not implemented: writeThis")
  } function bytes[24].readThis[23639](arg _mt[24424]:_MT[238], arg this[24422]:bytes[24], arg f[23637]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (23660 call compilerError "not implemented: readThis")
  } function bytes[24].init=[23671](arg _mt[24428]:_MT[238], arg this[24426]:bytes[24], arg b[23668] :
  bytes[24]) : _unknown[51] "method" "primary method"
  {
    (23680 call(23676 call . this c"complete"))
    (23687 call initWithNewBuffer this b)
  } function bytes[24].init=[23697](arg _mt[24432]:_MT[238], arg this[24430]:bytes[24], arg b[23694] :
  string[26]) : _unknown[51] "method" "primary method"
  {
    (23704 call(23700 call . this c"complete"))
    (23729 call initWithNewBuffer this(23711 call . b c"buff")(length =(23717 call . b c"numBytes"))(size =(23726 call +(23722 call . b c"numBytes") 1)))
  } function bytes[24].byteIndices[23735](arg _mt[24436]:_MT[238], arg this[24434]:bytes[24]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23744 return(23742 call chpl_build_bounded_range 0(23740 call - size 1)))
    }
  } function bytes[24].length[23751](arg _mt[24440]:_MT[238], param arg this[24438]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (23791 call compilerWarning(23788 call + "'bytes.length' is deprecated - " "please use 'bytes.size' instead"))
    (23795 return size)
  } function bytes[24].size[23801](arg _mt[24444]:_MT[238], param arg this[24442]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23807 return(23806 'string_length_bytes' this))
    }
  } function bytes[24].numBytes[23814](arg _mt[24448]:_MT[238], param arg this[24446]:bytes[24]) param : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    { scopeless
      (23820 return(23819 'string_length_bytes' this))
    }
  } function bytes[24].c_str[23827](arg _mt[24452]:_MT[238], param arg this[24450]:bytes[24]) param : _unknown[51] "inline" "method" "primary method"
  {
    (23834 return(23832 call _cast c_string this))
  }
  { scopeless type
    c_string
  } function bytes[24].item[23846](arg _mt[24456]:_MT[238], arg this[24454]:bytes[24], arg i[23843] :
  byteIndex) : _unknown[51] "method" "primary method"
  {
    (23861 return(23860 call(23852 call . this c"item")(23857 call _cast int[13] i)))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].this[23873](arg _mt[24460]:_MT[238], arg this[24458]:bytes[24], arg i[23870] :
  byteIndex) : _unknown[51] "method" "primary method"
  {
    (23888 return(23887 call(23879 call . this c"byte")(23884 call _cast int[13] i)))
  }
  { scopeless type
    byteType
  } function bytes[24].toByte[23896](arg _mt[24464]:_MT[238], param arg this[24462]:bytes[24]) param : _unknown[51] "inline" "method" "primary method"
  {
    if(23932 call _cond_test(23907 call !=(23903 call . this c"numBytes") 1))
    {
      { scopeless
        (23930 call compilerError "bytes.toByte() only accepts single-byte bytes")
      }
    }
    (23958 return(23957 'ascii' this))
  }
  { scopeless type
    (23901 call uint[115] 8)
  } function bytes[24].byte[23969](arg _mt[24468]:_MT[238], param arg this[24466]:bytes[24], param arg i[23966] :
  int[13]) param : _unknown[51] "inline" "method" "primary method"
  {
    if(24043 call _cond_test(23986 call ||(23977 call < i 0)(23984 call >= i(23981 call . this c"numBytes"))))
    {
      { scopeless
        (24041 call compilerError(24038 call +(24029 call +(24010 call + "index "(24008 call _cast string[26] i)) " out of bounds for bytes with length ")(24036 call _cast string[26](24032 call . this c"numBytes"))))
      }
    }
    (24054 return(24053 'ascii' this i))
  }
  { scopeless type
    (23974 call uint[115] 8)
  } function bytes[24].join[24063](arg _mt[24472]:_MT[238], arg this[24470]:bytes[24], const  ref arg S[24061]:_any[178](?)) : _unknown[51] "inline" "last resort" "method" "primary method"
  {
    (24072 call joinArgDepr)
    (24080 return(24079 call join(x = S)))
  }
  where {
    (24069 call isTuple S)
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24095](arg _mt[24476]:_MT[238], arg this[24474]:bytes[24], const  ref arg x[24092] :
  (24089 call chpl__buildArrayRuntimeType nil[44] bytes[24])) : _unknown[51] "inline" "method" "primary method"
  {
    (24102 return(24101 call _join x))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24117](arg _mt[24480]:_MT[238], arg this[24478]:bytes[24], const  ref arg S[24114] :
  (24111 call chpl__buildArrayRuntimeType nil[44] bytes[24])) : _unknown[51] "inline" "last resort" "method" "primary method"
  {
    (24122 call joinArgDepr)
    (24130 return(24129 call join(x = S)))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].join[24141](arg _mt[24484]:_MT[238], arg this[24482]:bytes[24], arg ir[24138] :
  _iteratorRecord) : _unknown[51] "inline" "method" "primary method"
  {
    (24149 return(24148 call doJoinIterator this ir))
  }
  { scopeless type
    bytes[24]
  } function bytes[24]._join[24159](arg _mt[24488]:_MT[238], arg this[24486]:bytes[24], const  ref arg S[24157]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (24177 return(24176 call doJoin this S))
  }
  where {
    (24170 call ||(24165 call isTuple S)(24169 call isArray S))
  }
  { scopeless type
    bytes[24]
  } function bytes[24].decode[24195](arg _mt[24492]:_MT[238], arg this[24490]:bytes[24], arg errors[24192] =
  (24189 call . decodePolicy c"strict")) : _unknown[51] throws "last resort" "method" "primary method"
  {
    (24234 call compilerWarning "'errors' argument to bytes.decode is deprecated. " "Use 'policy' instead.")
    (24247 return(24246 call(24240 call . this c"decode")(policy = errors)))
  }
  { scopeless type
    string[26]
  } function bytes[24].decode[24258](arg _mt[24496]:_MT[238], arg this[24494]:bytes[24], param arg errors[24255] :
  decodePolicy) : _unknown[51] throws "last resort" "method" "primary method"
  {
    (24265 call compilerWarning "'errors' argument to bytes.decode is deprecated. " "Use 'policy' instead.")
    if(24315 call _cond_test(24275 call == errors(24272 call . decodePolicy c"ignore")))
    {
      { scopeless
        (24313 call compilerWarning "decodePolicy.ignore is deprecated. " "Use decodePolicy.drop instead")
      }
    }
    { scopeless
      unknown localThis[24329](24328 call(24324 call . this c"localize")) bytes[24]
      (24332 'end of statement')
    }
    (24347 return(24346 call decodeByteBuffer(24335 call . localThis c"buff")(24342 call . localThis c"buffLen") errors))
  }
  { scopeless type
    string[26]
  } function bytes[24].decode[24358](arg _mt[24500]:_MT[238], arg this[24498]:bytes[24], param arg policy[24355] :
  decodePolicy) : _unknown[51] throws "method" "primary method"
  {
    if(24374 call _cond_test(24366 call == policy(24363 call . decodePolicy c"ignore")))
    {
      { scopeless
        (24372 call compilerWarning "decodePolicy.ignore is deprecated. " "Use decodePolicy.drop instead")
      }
    }
    { scopeless
      unknown localThis[24387](24386 call(24382 call . this c"localize")) bytes[24]
      (24390 'end of statement')
    }
    (24403 return(24402 call decodeByteBuffer(24393 call . localThis c"buff")(24398 call . localThis c"buffLen") policy))
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].length[24506](arg _mt[24511]:_MT[238], arg this[24508] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    (24519 call compilerWarning(24516 call + "'bytes.length' is deprecated - " "please use 'bytes.size' instead"))
    (24523 return buffLen)
  }
  function _unknown[51].size[24530](arg _mt[24535]:_MT[238], arg this[24532] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    { scopeless
      (24538 return buffLen)
    }
  }
  function _unknown[51].indices[24546](arg _mt[24551]:_MT[238], arg this[24548] :
  bytes[24]) : _unknown[51] "method" "no parens"
  {
    { scopeless
      (24560 return(24558 call chpl_build_bounded_range 0(24556 call - size 1)))
    }
  }
  function _unknown[51].numBytes[24568](arg _mt[24573]:_MT[238], arg this[24570] :
  bytes[24]) : _unknown[51] "inline" "method" "no parens"
  {
    { scopeless
      (24576 return buffLen)
    }
  }
  function _unknown[51].localize[24584](arg _mt[24589]:_MT[238], arg this[24586] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    if(24619 call _cond_test(24600 call || _local(24598 call ==(24594 call . this c"locale_id") chpl_nodeID)))
    {
      (24606 return(24605 call createBytesWithBorrowedBuffer this))
    }
    {
      { scopeless
        const x[24611] "const" this bytes[24]
        (24614 'end of statement')
      }
      (24617 return x)
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].c_str[24630](arg _mt[24635]:_MT[238], arg this[24632] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (24642 return(24641 call getCStr this))
  }
  { scopeless type
    c_string
  }
  function _unknown[51].item[24655](arg _mt[24660]:_MT[238], arg this[24657] :
  bytes[24], arg i[24652] :
  int[13]) : _unknown[51] "method"
  {
    if(24690 call _cond_test(24677 call && boundsChecking(24675 call ||(24666 call < i 0)(24673 call >= i(24670 call . this c"buffLen")))))
    {
      { scopeless
        (24688 call halt "index " i " out of bounds for bytes with length "(24685 call . this c"buffLen"))
      }
    }
    { scopeless
      unknown tmp[24718] "temp"(24717 call bufferCopy(buf =(24703 call . this c"buff"))(off = i)(len = 1)(loc =(24713 call . this c"locale_id")))
      (24725 call _check_tuple_var_decl tmp[24718] 2)
      unknown buf[24696](24719 call tmp[24718] 0)
      unknown size[24698](24722 call tmp[24718] 1)
      (24730 'end of statement')
    }
    (24739 return(24738 call createBytesWithOwnedBuffer buf(length = 1)(size = size)))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].this[24751](arg _mt[24756]:_MT[238], arg this[24753] :
  bytes[24], arg i[24748] :
  int[13]) : _unknown[51] "method"
  {
    (24766 return(24765 call(24760 call . this c"byte") i))
  }
  { scopeless type
    byteType
  }
  function _unknown[51].toByte[24775](arg _mt[24780]:_MT[238], arg this[24777] :
  bytes[24]) : _unknown[51] "method"
  {
    if(24799 call _cond_test(24791 call !=(24787 call . this c"buffLen") 1))
    {
      (24796 call halt "bytes.toByte() only accepts single-byte bytes")
    }
    (24819 return(24818 call bufferGetByte(buf =(24806 call . this c"buff"))(off = 0)(loc =(24814 call . this c"locale_id"))))
  }
  { scopeless type
    (24785 call uint[115] 8)
  }
  function _unknown[51].byte[24831](arg _mt[24836]:_MT[238], arg this[24833] :
  bytes[24], arg i[24828] :
  int[13]) : _unknown[51] "method"
  {
    if(24866 call _cond_test(24853 call && boundsChecking(24851 call ||(24842 call < i 0)(24849 call >= i(24846 call . this c"buffLen")))))
    {
      { scopeless
        (24864 call halt "index " i " out of bounds for bytes with length "(24861 call . this c"buffLen"))
      }
    }
    (24887 return(24886 call bufferGetByte(buf =(24874 call . this c"buff"))(off = i)(loc =(24882 call . this c"locale_id"))))
  }
  { scopeless type
    byteType
  }
  function _unknown[51].items[24895](arg _mt[24900]:_MT[238], arg this[24897] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    if(24913 call _cond_test(24910 call(24906 call . this c"isEmpty")))
    {
      { scopeless
        (24911 return)
      }
    }
    {
      unknown _indexOfInterest[24935] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[24936] "expr temp" "temp"
      (24945 'move' _iterator[24936](24943 call _getIterator(24923 call . this c"indices")))
      Defer
      {
        {
          (24962 call _freeIterator _iterator[24936])
        }
      }
      { scopeless type
        (24951 'move' _indexOfInterest[24935](24948 call iteratorIndex _iterator[24936]))
      }
      ForLoop[24937]
      {
        unknown i[24955] "index var" "insert auto destroy"
        (24957 'move' i[24955] _indexOfInterest[24935])
        { scopeless
          (24933 yield(24932 call(24927 call . this c"item") i))
        }
        label _continueLabel[24940]
        _indexOfInterest[24935]
        _iterator[24936]
      }
      label _breakLabel[24941]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].these[24975](arg _mt[24980]:_MT[238], arg this[24977] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[24994] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[24995] "expr temp" "temp"
      (25004 'move' _iterator[24995](25002 call _getIterator(24990 call(24987 call . this c"chpl_bytes"))))
      Defer
      {
        {
          (25021 call _freeIterator _iterator[24995])
        }
      }
      { scopeless type
        (25010 'move' _indexOfInterest[24994](25007 call iteratorIndex _iterator[24995]))
      }
      ForLoop[24996]
      {
        unknown i[25014] "index var" "insert auto destroy"
        (25016 'move' i[25014] _indexOfInterest[24994])
        { scopeless
          (24992 yield i)
        }
        label _continueLabel[24999]
        _indexOfInterest[24994]
        _iterator[24995]
      }
      label _breakLabel[25000]
    }
  }
  { scopeless type
    byteType
  }
  function _unknown[51].chpl_bytes[25035](arg _mt[25040]:_MT[238], arg this[25037] :
  bytes[24]) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25057] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25058] "expr temp" "temp"
      (25067 'move' _iterator[25058](25065 call _getIterator(25045 call . this c"indices")))
      Defer
      {
        {
          (25084 call _freeIterator _iterator[25058])
        }
      }
      { scopeless type
        (25073 'move' _indexOfInterest[25057](25070 call iteratorIndex _iterator[25058]))
      }
      ForLoop[25059]
      {
        unknown i[25077] "index var" "insert auto destroy"
        (25079 'move' i[25077] _indexOfInterest[25057])
        { scopeless
          (25055 yield(25054 call(25049 call . this c"byte") i))
        }
        label _continueLabel[25062]
        _indexOfInterest[25057]
        _iterator[25058]
      }
      label _breakLabel[25063]
    }
  }
  { scopeless type
    byteType
  }
  function _unknown[51].this[25105](arg _mt[25110]:_MT[238], arg this[25107] :
  bytes[24], arg r[25102] :
  (25101 call range ?[260])) : _unknown[51] "inline" "method"
  {
    (25118 return(25117 call getSlice this r))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].isEmpty[25127](arg _mt[25132]:_MT[238], arg this[25129] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25142 return(25140 call ==(25136 call . this c"buffLen") 0))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].startsWith[25157](arg _mt[25162]:_MT[238], arg this[25159] :
  bytes[24], arg needles[25153] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25172 return(25171 call startsEndsWith this needles(fromLeft = 1)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].endsWith[25187](arg _mt[25192]:_MT[238], arg this[25189] :
  bytes[24], arg needles[25183] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25202 return(25201 call startsEndsWith this needles(fromLeft = 0)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].find[25215](arg _mt[25232]:_MT[238], arg this[25229] :
  bytes[24], arg needle[25212] :
  bytes[24], arg region[25225] :
  (25220 call range ?[260]) =
  (25222 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25246 return(25244 call _cast idxType(25242 call doSearchNoEnc this needle region(count = 0))))
  }
  { scopeless type
    idxType
  }
  function _unknown[51].rfind[25259](arg _mt[25276]:_MT[238], arg this[25273] :
  bytes[24], arg needle[25256] :
  bytes[24], arg region[25269] :
  (25264 call range ?[260]) =
  (25266 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25292 return(25290 call _cast idxType(25288 call doSearchNoEnc this needle region(count = 0)(fromLeft = 0))))
  }
  { scopeless type
    idxType
  }
  function _unknown[51].count[25305](arg _mt[25322]:_MT[238], arg this[25319] :
  bytes[24], arg needle[25302] :
  bytes[24], arg region[25315] :
  (25310 call range ?[260]) =
  (25312 call . this c"indices")) : _unknown[51] "inline" "method"
  {
    (25333 return(25332 call doSearchNoEnc this needle region(count = 1)))
  }
  { scopeless type
    int[13]
  }
  function _unknown[51].replace[25346](arg _mt[25363]:_MT[238], arg this[25360] :
  bytes[24], arg needle[25343] :
  bytes[24], arg replacement[25349] :
  bytes[24], arg count[25356] :
  int[13] =
  (25354 call - 1)) : _unknown[51] "inline" "method"
  {
    (25373 return(25372 call doReplace this needle replacement count))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].split[25386](arg _mt[25405]:_MT[238], arg this[25402] :
  bytes[24], arg sep[25383] :
  bytes[24], arg maxsplit[25392] :
  int[13] =
  (25390 call - 1), arg ignoreEmpty[25398] :
  bool[10] =
  0) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25419] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25420] "expr temp" "temp"
      (25429 'move' _iterator[25420](25427 call _getIterator(25415 call doSplit this sep maxsplit ignoreEmpty)))
      Defer
      {
        {
          (25446 call _freeIterator _iterator[25420])
        }
      }
      { scopeless type
        (25435 'move' _indexOfInterest[25419](25432 call iteratorIndex _iterator[25420]))
      }
      ForLoop[25421]
      {
        unknown s[25439] "index var" "insert auto destroy"
        (25441 'move' s[25439] _indexOfInterest[25419])
        { scopeless
          (25417 yield s)
        }
        label _continueLabel[25424]
        _indexOfInterest[25419]
        _iterator[25420]
      }
      label _breakLabel[25425]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].split[25468](arg _mt[25473]:_MT[238], arg this[25470] :
  bytes[24], arg maxsplit[25464] :
  int[13] =
  (25462 call - 1)) : _unknown[51] "iterator fn" "method"
  {
    {
      unknown _indexOfInterest[25485] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[25486] "expr temp" "temp"
      (25495 'move' _iterator[25486](25493 call _getIterator(25481 call doSplitWSNoEnc this maxsplit)))
      Defer
      {
        {
          (25512 call _freeIterator _iterator[25486])
        }
      }
      { scopeless type
        (25501 'move' _indexOfInterest[25485](25498 call iteratorIndex _iterator[25486]))
      }
      ForLoop[25487]
      {
        unknown s[25505] "index var" "insert auto destroy"
        (25507 'move' s[25505] _indexOfInterest[25485])
        { scopeless
          (25483 yield s)
        }
        label _continueLabel[25490]
        _indexOfInterest[25485]
        _iterator[25486]
      }
      label _breakLabel[25491]
    }
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].join[25532](arg _mt[25537]:_MT[238], arg this[25534] :
  bytes[24], const  ref arg S[25528] ... :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25544 return(25543 call _join S))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].join[25555](arg _mt[25560]:_MT[238], arg this[25557] :
  bytes[24], const  ref arg x[25553]:_any[178](?)) : _unknown[51] "inline" "method"
  {
    if(25605 call _cond_test(25582 call ||(25571 call !(25570 call isHomogeneousTuple x))(25580 call !(25579 call isBytes(25577 call x 1)))))
    {
      { scopeless
        (25603 call compilerError "join() on tuples only handles homogeneous tuples of bytes")
      }
    }
    (25615 return(25614 call _join x))
  }
  where {
    (25566 call isTuple x)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].strip[25643](arg _mt[25656]:_MT[238], arg this[25653] :
  bytes[24], arg chars[25640] =
  b" \t\r\n", arg leading[25646] =
  1, arg trailing[25650] =
  1) : _unknown[51] "method"
  {
    (25666 return(25665 call doStripNoEnc this chars leading trailing))
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].partition[25679](arg _mt[25684]:_MT[238], const arg this[25681] :
  bytes[24], arg sep[25676] :
  bytes[24]) : _unknown[51] "inline" "method"
  {
    (25695 return(25694 call doPartition this sep))
  }
  { scopeless type
    (25688 call * 3 bytes[24])
  }
  function _unknown[51].decode[25711](arg _mt[25716]:_MT[238], arg this[25713] :
  bytes[24], arg policy[25708] =
  (25705 call . decodePolicy c"strict")) : _unknown[51] throws "method"
  {
    { scopeless
      unknown localThis[25726](25725 call(25721 call . this c"localize")) bytes[24]
      (25729 'end of statement')
    }
    (25743 return(25742 call decodeByteBuffer(25733 call . localThis c"buff")(25738 call . localThis c"buffLen") policy))
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].isUpper[25751](arg _mt[25756]:_MT[238], arg this[25753] :
  bytes[24]) : _unknown[51] "method"
  {
    if(25768 call _cond_test(25764 call(25760 call . this c"isEmpty")))
    {
      { scopeless
        (25766 return 0)
      }
    }
    { scopeless
      unknown result[25776] 1 bool[10]
      (25779 'end of statement')
    }
    {
      const tmp[25854] "const" "temp"
      (25855 'move' tmp[25854](25852 'deref'(25790 'chpl_on_locale_num'(25789 call chpl_buildLocaleID(25784 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[25817] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[25818] "expr temp" "temp"
          (25827 'move' _iterator[25818](25825 call _getIterator(25796 call(25793 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (25844 call _freeIterator _iterator[25818])
            }
          }
          { scopeless type
            (25833 'move' _indexOfInterest[25817](25830 call iteratorIndex _iterator[25818]))
          }
          ForLoop[25819]
          {
            unknown b[25837] "index var" "insert auto destroy"
            (25839 'move' b[25837] _indexOfInterest[25817])
            {
              if(25812 call _cond_test(25801 call !(25800 call byte_isUpper b)))
              {
                (25805 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[25822]
            _indexOfInterest[25817]
            _iterator[25818]
          }
          label _breakLabel[25823]
        }
      }
      (25858 'elided on block' 0 tmp[25854])
    }
    (25863 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isLower[25871](arg _mt[25876]:_MT[238], arg this[25873] :
  bytes[24]) : _unknown[51] "method"
  {
    if(25888 call _cond_test(25884 call(25880 call . this c"isEmpty")))
    {
      { scopeless
        (25886 return 0)
      }
    }
    { scopeless
      unknown result[25896] 1 bool[10]
      (25899 'end of statement')
    }
    {
      const tmp[25974] "const" "temp"
      (25975 'move' tmp[25974](25972 'deref'(25910 'chpl_on_locale_num'(25909 call chpl_buildLocaleID(25904 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[25937] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[25938] "expr temp" "temp"
          (25947 'move' _iterator[25938](25945 call _getIterator(25916 call(25913 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (25964 call _freeIterator _iterator[25938])
            }
          }
          { scopeless type
            (25953 'move' _indexOfInterest[25937](25950 call iteratorIndex _iterator[25938]))
          }
          ForLoop[25939]
          {
            unknown b[25957] "index var" "insert auto destroy"
            (25959 'move' b[25957] _indexOfInterest[25937])
            {
              if(25932 call _cond_test(25921 call !(25920 call byte_isLower b)))
              {
                (25925 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[25942]
            _indexOfInterest[25937]
            _iterator[25938]
          }
          label _breakLabel[25943]
        }
      }
      (25978 'elided on block' 0 tmp[25974])
    }
    (25983 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isSpace[25991](arg _mt[25996]:_MT[238], arg this[25993] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26008 call _cond_test(26004 call(26000 call . this c"isEmpty")))
    {
      { scopeless
        (26006 return 0)
      }
    }
    { scopeless
      unknown result[26016] 1 bool[10]
      (26019 'end of statement')
    }
    {
      const tmp[26094] "const" "temp"
      (26095 'move' tmp[26094](26092 'deref'(26030 'chpl_on_locale_num'(26029 call chpl_buildLocaleID(26024 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[26057] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26058] "expr temp" "temp"
          (26067 'move' _iterator[26058](26065 call _getIterator(26036 call(26033 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26084 call _freeIterator _iterator[26058])
            }
          }
          { scopeless type
            (26073 'move' _indexOfInterest[26057](26070 call iteratorIndex _iterator[26058]))
          }
          ForLoop[26059]
          {
            unknown b[26077] "index var" "insert auto destroy"
            (26079 'move' b[26077] _indexOfInterest[26057])
            {
              if(26052 call _cond_test(26041 call !(26040 call byte_isWhitespace b)))
              {
                (26045 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[26062]
            _indexOfInterest[26057]
            _iterator[26058]
          }
          label _breakLabel[26063]
        }
      }
      (26098 'elided on block' 0 tmp[26094])
    }
    (26103 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isAlpha[26111](arg _mt[26116]:_MT[238], arg this[26113] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26128 call _cond_test(26124 call(26120 call . this c"isEmpty")))
    {
      { scopeless
        (26126 return 0)
      }
    }
    { scopeless
      unknown result[26136] 1 bool[10]
      (26139 'end of statement')
    }
    {
      const tmp[26214] "const" "temp"
      (26215 'move' tmp[26214](26212 'deref'(26150 'chpl_on_locale_num'(26149 call chpl_buildLocaleID(26144 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[26177] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26178] "expr temp" "temp"
          (26187 'move' _iterator[26178](26185 call _getIterator(26156 call(26153 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26204 call _freeIterator _iterator[26178])
            }
          }
          { scopeless type
            (26193 'move' _indexOfInterest[26177](26190 call iteratorIndex _iterator[26178]))
          }
          ForLoop[26179]
          {
            unknown b[26197] "index var" "insert auto destroy"
            (26199 'move' b[26197] _indexOfInterest[26177])
            {
              if(26172 call _cond_test(26161 call !(26160 call byte_isAlpha b)))
              {
                (26165 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[26182]
            _indexOfInterest[26177]
            _iterator[26178]
          }
          label _breakLabel[26183]
        }
      }
      (26218 'elided on block' 0 tmp[26214])
    }
    (26223 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isDigit[26231](arg _mt[26236]:_MT[238], arg this[26233] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26248 call _cond_test(26244 call(26240 call . this c"isEmpty")))
    {
      { scopeless
        (26246 return 0)
      }
    }
    { scopeless
      unknown result[26256] 1 bool[10]
      (26259 'end of statement')
    }
    {
      const tmp[26334] "const" "temp"
      (26335 'move' tmp[26334](26332 'deref'(26270 'chpl_on_locale_num'(26269 call chpl_buildLocaleID(26264 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[26297] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26298] "expr temp" "temp"
          (26307 'move' _iterator[26298](26305 call _getIterator(26276 call(26273 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26324 call _freeIterator _iterator[26298])
            }
          }
          { scopeless type
            (26313 'move' _indexOfInterest[26297](26310 call iteratorIndex _iterator[26298]))
          }
          ForLoop[26299]
          {
            unknown b[26317] "index var" "insert auto destroy"
            (26319 'move' b[26317] _indexOfInterest[26297])
            {
              if(26292 call _cond_test(26281 call !(26280 call byte_isDigit b)))
              {
                (26285 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[26302]
            _indexOfInterest[26297]
            _iterator[26298]
          }
          label _breakLabel[26303]
        }
      }
      (26338 'elided on block' 0 tmp[26334])
    }
    (26343 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isAlnum[26351](arg _mt[26356]:_MT[238], arg this[26353] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26368 call _cond_test(26364 call(26360 call . this c"isEmpty")))
    {
      { scopeless
        (26366 return 0)
      }
    }
    { scopeless
      unknown result[26376] 1 bool[10]
      (26379 'end of statement')
    }
    {
      const tmp[26454] "const" "temp"
      (26455 'move' tmp[26454](26452 'deref'(26390 'chpl_on_locale_num'(26389 call chpl_buildLocaleID(26384 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[26417] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26418] "expr temp" "temp"
          (26427 'move' _iterator[26418](26425 call _getIterator(26396 call(26393 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26444 call _freeIterator _iterator[26418])
            }
          }
          { scopeless type
            (26433 'move' _indexOfInterest[26417](26430 call iteratorIndex _iterator[26418]))
          }
          ForLoop[26419]
          {
            unknown b[26437] "index var" "insert auto destroy"
            (26439 'move' b[26437] _indexOfInterest[26417])
            {
              if(26412 call _cond_test(26401 call !(26400 call byte_isAlnum b)))
              {
                (26405 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[26422]
            _indexOfInterest[26417]
            _iterator[26418]
          }
          label _breakLabel[26423]
        }
      }
      (26458 'elided on block' 0 tmp[26454])
    }
    (26463 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isPrintable[26471](arg _mt[26476]:_MT[238], arg this[26473] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26488 call _cond_test(26484 call(26480 call . this c"isEmpty")))
    {
      { scopeless
        (26486 return 0)
      }
    }
    { scopeless
      unknown result[26496] 1 bool[10]
      (26499 'end of statement')
    }
    {
      const tmp[26574] "const" "temp"
      (26575 'move' tmp[26574](26572 'deref'(26510 'chpl_on_locale_num'(26509 call chpl_buildLocaleID(26504 call . this c"locale_id") c_sublocid_any))))
      {
        {
          unknown _indexOfInterest[26537] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26538] "expr temp" "temp"
          (26547 'move' _iterator[26538](26545 call _getIterator(26516 call(26513 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26564 call _freeIterator _iterator[26538])
            }
          }
          { scopeless type
            (26553 'move' _indexOfInterest[26537](26550 call iteratorIndex _iterator[26538]))
          }
          ForLoop[26539]
          {
            unknown b[26557] "index var" "insert auto destroy"
            (26559 'move' b[26557] _indexOfInterest[26537])
            {
              if(26532 call _cond_test(26521 call !(26520 call byte_isPrintable b)))
              {
                (26525 call = result 0)
                break nil[44]
              }
            }
            label _continueLabel[26542]
            _indexOfInterest[26537]
            _iterator[26538]
          }
          label _breakLabel[26543]
        }
      }
      (26578 'elided on block' 0 tmp[26574])
    }
    (26583 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].isTitle[26591](arg _mt[26596]:_MT[238], arg this[26593] :
  bytes[24]) : _unknown[51] "method"
  {
    if(26608 call _cond_test(26604 call(26600 call . this c"isEmpty")))
    {
      { scopeless
        (26606 return 0)
      }
    }
    { scopeless
      unknown result[26616] 1 bool[10]
      (26619 'end of statement')
    }
    {
      const tmp[26770] "const" "temp"
      (26771 'move' tmp[26770](26768 'deref'(26630 'chpl_on_locale_num'(26629 call chpl_buildLocaleID(26624 call . this c"locale_id") c_sublocid_any))))
      {
        { scopeless
          unknown UN[26632] "param" 0
          unknown UPPER[26636] "param" 1
          unknown LOWER[26640] "param" 2
          (26643 'end of statement')
        }
        { scopeless
          unknown last[26646] UN
          (26649 'end of statement')
        }
        {
          unknown _indexOfInterest[26734] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[26735] "expr temp" "temp"
          (26744 'move' _iterator[26735](26742 call _getIterator(26655 call(26652 call . this c"chpl_bytes"))))
          Defer
          {
            {
              (26761 call _freeIterator _iterator[26735])
            }
          }
          { scopeless type
            (26750 'move' _indexOfInterest[26734](26747 call iteratorIndex _iterator[26735]))
          }
          ForLoop[26736]
          {
            unknown b[26754] "index var" "insert auto destroy"
            (26756 'move' b[26754] _indexOfInterest[26734])
            {
              if(26728 call _cond_test(26659 call byte_isLower b))
              {
                if(26685 call _cond_test(26668 call ||(26662 call == last UPPER)(26666 call == last LOWER)))
                {
                  (26672 call = last LOWER)
                }
                {
                  (26678 call = result 0)
                  break nil[44]
                }
              }
              {
                { scopeless
                  if(26724 call _cond_test(26693 call byte_isUpper b))
                  {
                    if(26713 call _cond_test(26696 call == last UN))
                    {
                      (26700 call = last UPPER)
                    }
                    {
                      (26706 call = result 0)
                      break nil[44]
                    }
                  }
                  {
                    (26720 call = last UN)
                  }
                }
              }
            }
            label _continueLabel[26739]
            _indexOfInterest[26734]
            _iterator[26735]
          }
          label _breakLabel[26740]
        }
      }
      (26774 'elided on block' 0 tmp[26770])
    }
    (26779 return result)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].toLower[26787](arg _mt[26792]:_MT[238], arg this[26789] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[26797] this bytes[24]
      (26800 'end of statement')
    }
    if(26811 call _cond_test(26807 call(26803 call . result c"isEmpty")))
    {
      { scopeless
        (26809 return result)
      }
    }
    {
      unknown _indexOfInterest[26846] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[26847] "expr temp" "temp"
      (26869 'move' _iterator[26847](26830 call _build_tuple(26858 call _getIterator(26856 call chpl_build_low_bounded_range 0))(26866 call _getIterator(26865 call(26862 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (26899 call _freeIterator _iterator[26847])
        }
      }
      { scopeless type
        (26874 'move' _indexOfInterest[26846](26871 call iteratorIndex _iterator[26847]))
      }
      ForLoop[26848]
      {
        (26879 call _check_tuple_var_decl _indexOfInterest[26846] 2)
        unknown i[26885] "index var" "insert auto destroy"
        (26887 'move' i[26885](26883 call _indexOfInterest[26846] 0))
        unknown b[26892] "index var" "insert auto destroy"
        (26894 'move' b[26892](26890 call _indexOfInterest[26846] 1))
        {
          (26842 call =(26837 call(26832 call . result c"buff") i)(26841 call byte_toLower b))
        }
        label _continueLabel[26851]
        _indexOfInterest[26846]
        _iterator[26847]
      }
      label _breakLabel[26852]
    }
    (26907 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].toUpper[26915](arg _mt[26920]:_MT[238], arg this[26917] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[26925] this bytes[24]
      (26928 'end of statement')
    }
    if(26939 call _cond_test(26935 call(26931 call . result c"isEmpty")))
    {
      { scopeless
        (26937 return result)
      }
    }
    {
      unknown _indexOfInterest[26974] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[26975] "expr temp" "temp"
      (26997 'move' _iterator[26975](26958 call _build_tuple(26986 call _getIterator(26984 call chpl_build_low_bounded_range 0))(26994 call _getIterator(26993 call(26990 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (27027 call _freeIterator _iterator[26975])
        }
      }
      { scopeless type
        (27002 'move' _indexOfInterest[26974](26999 call iteratorIndex _iterator[26975]))
      }
      ForLoop[26976]
      {
        (27007 call _check_tuple_var_decl _indexOfInterest[26974] 2)
        unknown i[27013] "index var" "insert auto destroy"
        (27015 'move' i[27013](27011 call _indexOfInterest[26974] 0))
        unknown b[27020] "index var" "insert auto destroy"
        (27022 'move' b[27020](27018 call _indexOfInterest[26974] 1))
        {
          (26970 call =(26965 call(26960 call . result c"buff") i)(26969 call byte_toUpper b))
        }
        label _continueLabel[26979]
        _indexOfInterest[26974]
        _iterator[26975]
      }
      label _breakLabel[26980]
    }
    (27035 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _unknown[51].toTitle[27043](arg _mt[27048]:_MT[238], arg this[27045] :
  bytes[24]) : _unknown[51] "method"
  {
    { scopeless
      unknown result[27053] this bytes[24]
      (27056 'end of statement')
    }
    if(27067 call _cond_test(27063 call(27059 call . result c"isEmpty")))
    {
      { scopeless
        (27065 return result)
      }
    }
    { scopeless
      unknown UN[27073] "param" 0
      unknown LETTER[27077] "param" 1
      (27080 'end of statement')
    }
    { scopeless
      unknown last[27082] UN
      (27085 'end of statement')
    }
    {
      unknown _indexOfInterest[27160] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[27161] "expr temp" "temp"
      (27183 'move' _iterator[27161](27100 call _build_tuple(27172 call _getIterator(27170 call chpl_build_low_bounded_range 0))(27180 call _getIterator(27179 call(27176 call . result c"chpl_bytes")))))
      Defer
      {
        {
          (27213 call _freeIterator _iterator[27161])
        }
      }
      { scopeless type
        (27188 'move' _indexOfInterest[27160](27185 call iteratorIndex _iterator[27161]))
      }
      ForLoop[27162]
      {
        (27193 call _check_tuple_var_decl _indexOfInterest[27160] 2)
        unknown i[27199] "index var" "insert auto destroy"
        (27201 'move' i[27199](27197 call _indexOfInterest[27160] 0))
        unknown b[27206] "index var" "insert auto destroy"
        (27208 'move' b[27206](27204 call _indexOfInterest[27160] 1))
        {
          if(27155 call _cond_test(27104 call byte_isAlpha b))
          {
            if(27144 call _cond_test(27107 call == last UN))
            {
              (27111 call = last LETTER)
              (27126 call =(27121 call(27116 call . result c"buff") i)(27125 call byte_toUpper b))
            }
            {
              (27140 call =(27135 call(27130 call . result c"buff") i)(27139 call byte_toLower b))
            }
          }
          {
            (27151 call = last UN)
          }
        }
        label _continueLabel[27165]
        _indexOfInterest[27160]
        _iterator[27161]
      }
      label _breakLabel[27166]
    }
    (27221 return result)
  }
  { scopeless type
    bytes[24]
  }
  function _cast[27232](arg t[27229] :
  bytes[24], arg x[27235] :
  string[26]) : _unknown[51] "inline" "no doc"
  {
    (27258 return(27257 call createBytesWithNewBuffer(27240 call . x c"buff")(length =(27245 call . x c"numBytes"))(size =(27254 call +(27250 call . x c"numBytes") 1))))
  }
  function +=[27269](ref arg lhs[27266] :
  bytes[24], const  ref arg rhs[27272] :
  bytes[24]) : _unknown[51] "assignop"
  {
    (27280 call doAppend lhs rhs)
  }
  { scopeless type
    void[4]
  }
  function =[27292](ref arg lhs[27289] :
  bytes[24], arg rhs[27295] :
  bytes[24]) : _unknown[51] "assignop"
  {
    (27302 call doAssign lhs rhs)
  }
  function =[27313](ref arg lhs[27310] :
  bytes[24], arg rhs_c[27316] :
  c_string) : _unknown[51] "assignop"
  {
    (27324 call = lhs(27323 call createBytesWithNewBuffer rhs_c))
  }
  function +[27336](arg s0[27333] :
  bytes[24], arg s1[27339] :
  bytes[24]) : _unknown[51]
  {
    (27347 return(27346 call doConcat s0 s1))
  }
  function +[27358](param arg s0[27355] :
  bytes[24], param arg s1[27361] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (27385 return(27384 'string_concat' s0 s1))
    }
  }
  function *[27396](arg s[27393] :
  bytes[24], arg n[27399] :
  integral) : _unknown[51]
  {
    (27407 return(27406 call doMultiply s n))
  }
  function ==[27418](arg a[27415] :
  bytes[24], arg b[27421] :
  bytes[24]) : _unknown[51] "no doc"
  {
    (27430 return(27429 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function !=[27442](arg a[27439] :
  bytes[24], arg b[27445] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27456 return(27454 call !(27453 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function comparisonDeprWarn[27464]() : _unknown[51] "no doc"
  {
    (27504 call compilerWarning(27501 call + "Comparison between bytes and string is deprecated. " "Cast the string to bytes first"))
  }
  function ==[27515](arg a[27512] :
  bytes[24], arg b[27518] :
  string[26]) : _unknown[51] "no doc"
  {
    (27524 call comparisonDeprWarn)
    (27532 return(27531 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function ==[27543](arg a[27540] :
  string[26], arg b[27546] :
  bytes[24]) : _unknown[51] "no doc"
  {
    (27552 call comparisonDeprWarn)
    (27560 return(27559 call doEq a b))
  }
  { scopeless type
    bool[10]
  }
  function !=[27571](arg a[27568] :
  bytes[24], arg b[27574] :
  string[26]) : _unknown[51] "inline" "no doc"
  {
    (27580 call comparisonDeprWarn)
    (27590 return(27588 call !(27587 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function !=[27601](arg a[27598] :
  string[26], arg b[27604] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27610 call comparisonDeprWarn)
    (27620 return(27618 call !(27617 call doEq a b)))
  }
  { scopeless type
    bool[10]
  }
  function <[27631](arg a[27628] :
  bytes[24], arg b[27634] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27643 return(27642 call doLessThan a b))
  }
  { scopeless type
    bool[10]
  }
  function >[27655](arg a[27652] :
  bytes[24], arg b[27658] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27667 return(27666 call doGreaterThan a b))
  }
  { scopeless type
    bool[10]
  }
  function <=[27679](arg a[27676] :
  bytes[24], arg b[27682] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27691 return(27690 call doLessThanOrEq a b))
  }
  { scopeless type
    bool[10]
  }
  function >=[27703](arg a[27700] :
  bytes[24], arg b[27706] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27715 return(27714 call doGreaterThanOrEq a b))
  }
  { scopeless type
    bool[10]
  }
  function ==[27727](param arg s0[27724] :
  bytes[24], param arg s1[27730] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27741 return(27739 call ==(27737 'string_compare' s0 s1) 0))
  }
  function !=[27752](param arg s0[27749] :
  bytes[24], param arg s1[27755] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27766 return(27764 call !=(27762 'string_compare' s0 s1) 0))
  }
  function <=[27777](param arg a[27774] :
  bytes[24], param arg b[27780] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27791 return(27789 call <=(27787 'string_compare' a b) 0))
  }
  function >=[27802](param arg a[27799] :
  bytes[24], param arg b[27805] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27816 return(27814 call >=(27812 'string_compare' a b) 0))
  }
  function <[27827](param arg a[27824] :
  bytes[24], param arg b[27830] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27841 return(27839 call <(27837 'string_compare' a b) 0))
  }
  function >[27852](param arg a[27849] :
  bytes[24], param arg b[27855] :
  bytes[24]) param : _unknown[51] "inline" "no doc"
  {
    (27866 return(27864 call >(27862 'string_compare' a b) 0))
  }
  function chpl__defaultHash[27877](arg x[27874] :
  bytes[24]) : _unknown[51] "inline" "no doc"
  {
    (27884 return(27883 call getHash x))
  }
  { scopeless type
    uint[115]
  }
}