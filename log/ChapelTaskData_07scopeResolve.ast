AST dump for ChapelTaskData after pass scopeResolve.
Module use list: ChapelStandard SysCTypes 

{
  const chpl_offset_endCount[170892] "const" "private"(170890 call _cast size_t[20654] 0)
  (170895 'end of statement')
  const chpl_offset_serial[170899] "const" "private"(170898 call sizeof_endcount_ptr)
  (170902 'end of statement')
  const chpl_offset_end[170907] "const" "private"(170905 call + chpl_offset_serial[170899] 1)
  (170910 'end of statement')
  function sizeof_endcount_ptr[170913]() : _unknown[51] "private"
  {
    (170925 return(170923 call +(170918 call c_sizeof chpl_localeID_t[209294])(170922 call c_sizeof c_void_ptr[149])))
  }
  function chpl_task_data_setDynamicEndCount[170939](arg tls[170936] :
  (170935 call c_ptr[205045](?) chpl_task_infoChapel_t[88577]), arg end[170942] :
  _remoteEndCountType[12845]) : _unknown[51] "no return value for void"
  {
    unknown prv[170952](170950 call _cast(170949 call c_ptr[205045](?) c_uchar[20605]) tls[170936])
    (170955 'end of statement')
    unknown i[170958] size_t[20654]
    (170961 'end of statement')
    unknown loc[170966](170965 '_wide_get_locale' end[170942])
    (170969 'end of statement')
    unknown adr[170974](170973 '_wide_get_addr' end[170942])
    (170977 'end of statement')
    (170980 call = i[170958] chpl_offset_endCount[170892])
    (171000 call c_memcpy(170990 call c_ptrTo(170988 call prv[170952] i[170958]))(170995 call c_ptrTo loc[170966])(170999 call c_sizeof chpl_localeID_t[209294]))
    (171007 call += i[170958](171006 call c_sizeof chpl_localeID_t[209294]))
    (171027 call c_memcpy(171017 call c_ptrTo(171015 call prv[170952] i[170958]))(171022 call c_ptrTo adr[170974])(171026 call c_sizeof c_void_ptr[149]))
  }
  function chpl_task_data_getDynamicEndCount[171040](arg tls[171037] :
  (171036 call c_ptr[205045](?) chpl_task_infoChapel_t[88577])) : _unknown[51]
  {
    unknown prv[171049](171047 call _cast(171046 call c_ptr[205045](?) c_uchar[20605]) tls[171037])
    (171052 'end of statement')
    unknown i[171055] size_t[20654]
    (171058 'end of statement')
    unknown loc[171060] chpl_localeID_t[209294]
    (171063 'end of statement')
    unknown adr[171065] c_void_ptr[149]
    (171068 'end of statement')
    (171071 call = i[171055] chpl_offset_endCount[170892])
    (171091 call c_memcpy(171078 call c_ptrTo loc[171060])(171086 call c_ptrTo(171084 call prv[171049] i[171055]))(171090 call c_sizeof chpl_localeID_t[209294]))
    (171098 call += i[171055](171097 call c_sizeof chpl_localeID_t[209294]))
    (171118 call c_memcpy(171105 call c_ptrTo adr[171065])(171113 call c_ptrTo(171111 call prv[171049] i[171055]))(171117 call c_sizeof c_void_ptr[149]))
    unknown ret[171142](171141 '_wide_make' _remoteEndCountType[12845] loc[171060] adr[171065])
    (171145 'end of statement')
    (171147 return ret[171142])
  }
  function chpl_task_data_setSerial[171160](arg tls[171157] :
  (171156 call c_ptr[205045](?) chpl_task_infoChapel_t[88577]), arg makeSerial[171163] :
  bool[10]) : _unknown[51] "no return value for void"
  {
    unknown prv[171174](171172 call _cast(171171 call c_ptr[205045](?) c_uchar[20605]) tls[171157])
    (171177 'end of statement')
    unknown i[171180] chpl_offset_serial[170899]
    (171183 'end of statement')
    unknown v[171189] 0(171187 call uint(64)[115] 8)
    (171192 'end of statement')
    if(171199 call _cond_test makeSerial[171163])
    {
      (171196 call = v[171189] 1)
    }
    (171224 call c_memcpy(171211 call c_ptrTo(171209 call prv[171174] i[171180]))(171216 call c_ptrTo v[171189])(171223 call c_sizeof(171221 call uint(64)[115] 8)))
  }
  { scopeless type
    void[4]
  }
  function chpl_task_data_getSerial[171238](arg tls[171235] :
  (171234 call c_ptr[205045](?) chpl_task_infoChapel_t[88577])) : _unknown[51]
  {
    unknown ret[171243] 0 bool[10]
    (171246 'end of statement')
    unknown prv[171255](171253 call _cast(171252 call c_ptr[205045](?) c_uchar[20605]) tls[171235])
    (171258 'end of statement')
    unknown i[171260] chpl_offset_serial[170899]
    (171263 'end of statement')
    unknown v[171269] 0(171267 call uint(64)[115] 8)
    (171272 'end of statement')
    (171293 call c_memcpy(171277 call c_ptrTo v[171269])(171285 call c_ptrTo(171283 call prv[171255] i[171260]))(171292 call c_sizeof(171290 call uint(64)[115] 8)))
    if(171310 call _cond_test 1)
    {
      (171308 call assert(171305 call ||(171299 call == v[171269] 0)(171303 call == v[171269] 1)))
    }
    (171319 return(171317 call == v[171269] 1))
  }
  { scopeless type
    bool[10]
  }
  function chpl_task_setDynamicEndCount[171330](arg end[171327] :
  _remoteEndCountType[12845]) : _unknown[51] "no return value for void"
  {
    (171338 call chpl_task_data_setDynamicEndCount(171335 call chpl_task_getInfoChapel) end[171327])
  }
  function chpl_task_getDynamicEndCount[171345]() : _unknown[51]
  {
    (171354 return(171353 call chpl_task_data_getDynamicEndCount(171351 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    _remoteEndCountType[12845]
  }
  function chpl_task_setSerial[171366](arg makeSerial[171363] :
  bool[10]) : _unknown[51] "export" "local args" "no return value for void"
  {
    (171375 call chpl_task_data_setSerial(171372 call chpl_task_getInfoChapel) makeSerial[171363])
  }
  { scopeless type
    void[4]
  }
  function chpl_task_getSerial[171383]() : _unknown[51] "export" "local args"
  {
    (171392 return(171391 call chpl_task_data_getSerial(171389 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    bool[10]
  }
  {
    (171407 call assert(171404 call <= chpl_offset_end[170907](171403 call c_sizeof chpl_task_infoChapel_t[88577])))
  }
  (355091 'used modules list'(170884 'use' ChapelStandard[20264])(170886 'use' SysCTypes[20940]))
}