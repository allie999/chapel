AST dump for NetworkAtomics after pass expandExternArrayCalls.
Module use list: 

{
  (48468 'use' ChapelStandard)
  (48472 'use' MemConsistency)
  function externFunc[48480](param arg s[48477] :
  string[26], arg T[48482]:_any[178](?)) param : _unknown[51] "private"
  {
    if(48538 call _cond_test(48487 call isInt T))
    {
      { scopeless
        (48536 return(48534 call +(48525 call +(48506 call + "chpl_comm_atomic_" s) "_int")(48532 call _cast string[26](48530 call numBits T))))
      }
    }
    if(48582 call _cond_test(48547 call isUint T))
    {
      { scopeless
        (48580 return(48578 call +(48569 call +(48550 call + "chpl_comm_atomic_" s) "_uint")(48576 call _cast string[26](48574 call numBits T))))
      }
    }
    if(48609 call _cond_test(48590 call isReal T))
    {
      { scopeless
        (48607 return(48605 call +(48596 call +(48593 call + "chpl_comm_atomic_" s) "_real")(48603 call _cast string[26](48601 call numBits T))))
      }
    }
  }
  type RAtomicBool[49676] unknown _v[48621](48620 call int[13] 64) function RAtomicBool[49676].init=[48631](arg _mt[49680]:_MT[238], arg this[49678]:RAtomicBool[49676], arg other[48628] :
  RAtomicBool) : _unknown[51] "method" "primary method"
  {
    (48651 call =(48636 call . this c"_v")(48649 call _cast(48648 call int[13] 64)(48644 call(48640 call . other c"read"))))
  } function RAtomicBool[49676].init=[48663](arg _mt[49684]:_MT[238], arg this[49682]:RAtomicBool[49676], arg other[48660] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    (48676 call =(48666 call . this c"_v")(48674 call _cast(48673 call int[13] 64) other))
  } function RAtomicBool[49676]._localeid[48684](arg _mt[49688]:_MT[238], arg this[49686]:RAtomicBool[49676]) : _unknown[51] "inline" "method" "primary method"
  {
    (48701 return(48699 call _cast(48698 call int[13] 32)(48694 '_wide_get_node' _v)))
  }
  { scopeless type
    (48689 call int[13] 32)
  } function RAtomicBool[49676]._addr[48709](arg _mt[49692]:_MT[238], arg this[49690]:RAtomicBool[49676]) : _unknown[51] "inline" "method" "primary method"
  {
    (48716 return(48715 '_wide_get_addr' _v))
  }
  { scopeless type
    c_void_ptr
  } function RAtomicBool[49676].read[48733](arg _mt[49696]:_MT[238], const arg this[49694]:RAtomicBool[49676], param arg order[48729] :
  memoryOrder =
  (48726 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_read[48767](ref arg result[48764] :
    (48763 call int[13] 64), arg l[48773] :
    (48772 call int[13] 32), const arg obj[48777] :
    c_void_ptr, arg order[48781] :
    memory_order, arg _chpl_cname[48789] :
    string[26] =
    (48757 call externFunc "read"(48756 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[48798](48797 call int[13] 64)
      (48801 'end of statement')
    }
    (48815 call atomic_read ret(48807 call _localeid)(48810 call _addr)(48814 call c_memory_order order))
    (48821 return(48819 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].write[48832](arg _mt[49700]:_MT[238], arg this[49698]:RAtomicBool[49676], arg value[48829] :
  bool[10], param arg order[48839] :
  memoryOrder =
  (48836 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_write[48875](ref arg desired[48872] :
    (48871 call int[13] 64), arg l[48881] :
    (48880 call int[13] 32), arg obj[48885] :
    c_void_ptr, arg order[48889] :
    memory_order, arg _chpl_cname[48897] :
    string[26] =
    (48865 call externFunc "write"(48864 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[48909](48907 call _cast(48906 call int[13] 64) value)
      (48912 'end of statement')
    }
    (48926 call atomic_write v(48918 call _localeid)(48921 call _addr)(48925 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49676].exchange[48937](arg _mt[49704]:_MT[238], arg this[49702]:RAtomicBool[49676], arg value[48934] :
  bool[10], param arg order[48944] :
  memoryOrder =
  (48941 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_xchg[48982](ref arg desired[48979] :
    (48978 call int[13] 64), arg l[48988] :
    (48987 call int[13] 32), arg obj[48992] :
    c_void_ptr, ref arg result[48999] :
    (48998 call int[13] 64), arg order[49003] :
    memory_order, arg _chpl_cname[49011] :
    string[26] =
    (48972 call externFunc "xchg"(48971 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49020](49019 call int[13] 64)
      (49023 'end of statement')
    }
    { scopeless
      unknown v[49031](49029 call _cast(49028 call int[13] 64) value)
      (49034 'end of statement')
    }
    (49049 call atomic_xchg v(49040 call _localeid)(49043 call _addr) ret(49048 call c_memory_order order))
    (49055 return(49053 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].compareExchange[49066](arg _mt[49708]:_MT[238], arg this[49706]:RAtomicBool[49676], ref arg expected[49063] :
  bool[10], arg desired[49069] :
  bool[10], param arg order[49077] :
  memoryOrder =
  (49074 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49095 return(49094 call(49083 call . this c"compareExchange") expected desired order(49093 call readableOrder order)))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].compareExchange[49107](arg _mt[49712]:_MT[238], arg this[49710]:RAtomicBool[49676], ref arg expected[49104] :
  bool[10], arg desired[49110] :
  bool[10], param arg success[49114] :
  memoryOrder, param arg failure[49118] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[49155](ref arg expected[49152] :
    (49151 call int[13] 64), ref arg desired[49161] :
    (49160 call int[13] 64), arg l[49168] :
    (49167 call int[13] 32), arg obj[49172] :
    c_void_ptr, ref arg result[49179] :
    (49178 call bool[10] 32), arg succ[49183] :
    memory_order, arg fail[49187] :
    memory_order, arg _chpl_cname[49195] :
    string[26] =
    (49145 call externFunc "cmpxchg"(49144 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49204](49203 call bool[10] 32)
      (49207 'end of statement')
    }
    { scopeless
      unknown te[49215](49213 call _cast(49212 call int[13] 64) expected)
      (49218 'end of statement')
    }
    { scopeless
      unknown td[49226](49224 call _cast(49223 call int[13] 64) desired)
      (49229 'end of statement')
    }
    (49249 call atomic_cmpxchg te td(49236 call _localeid)(49239 call _addr) ret(49244 call c_memory_order success)(49248 call c_memory_order failure))
    if(49262 call _cond_test(49252 call ! ret))
    {
      { scopeless
        (49259 call = expected(49257 call _cast bool[10] te))
      }
    }
    (49271 return(49269 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].compareExchangeWeak[49282](arg _mt[49716]:_MT[238], arg this[49714]:RAtomicBool[49676], ref arg expected[49279] :
  bool[10], arg desired[49285] :
  bool[10], param arg order[49293] :
  memoryOrder =
  (49290 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49307 return(49306 call(49299 call . this c"compareExchange") expected desired order))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].compareExchangeWeak[49319](arg _mt[49720]:_MT[238], arg this[49718]:RAtomicBool[49676], ref arg expected[49316] :
  bool[10], arg desired[49322] :
  bool[10], param arg success[49326] :
  memoryOrder, param arg failure[49330] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    (49344 return(49343 call(49335 call . this c"compareExchange") expected desired success failure))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].compareAndSwap[49356](arg _mt[49724]:_MT[238], arg this[49722]:RAtomicBool[49676], arg expected[49353] :
  bool[10], arg desired[49359] :
  bool[10], param arg order[49367] :
  memoryOrder =
  (49364 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[49389](ref arg expected[49386] :
    (49385 call int[13] 64), ref arg desired[49395] :
    (49394 call int[13] 64), arg l[49402] :
    (49401 call int[13] 32), arg obj[49406] :
    c_void_ptr, ref arg result[49413] :
    (49412 call bool[10] 32), arg succ[49417] :
    memory_order, arg fail[49421] :
    memory_order, arg _chpl_cname[49429] :
    string[26] =
    (49379 call externFunc "cmpxchg"(49378 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49438](49437 call bool[10] 32)
      (49441 'end of statement')
    }
    { scopeless
      unknown te[49449](49447 call _cast(49446 call int[13] 64) expected)
      (49452 'end of statement')
    }
    { scopeless
      unknown td[49460](49458 call _cast(49457 call int[13] 64) desired)
      (49463 'end of statement')
    }
    (49486 call atomic_cmpxchg te td(49470 call _localeid)(49473 call _addr) ret(49478 call c_memory_order order)(49485 call c_memory_order(49483 call readableOrder order)))
    (49492 return(49490 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].testAndSet[49508](arg _mt[49728]:_MT[238], arg this[49726]:RAtomicBool[49676], param arg order[49504] :
  memoryOrder =
  (49501 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49519 return(49518 call(49512 call . this c"exchange") 1 order))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49676].clear[49536](arg _mt[49732]:_MT[238], arg this[49730]:RAtomicBool[49676], param arg order[49532] :
  memoryOrder =
  (49529 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49546 call(49540 call . this c"write") 0 order)
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49676].waitFor[49558](arg _mt[49736]:_MT[238], const arg this[49734]:RAtomicBool[49676], arg value[49555] :
  bool[10], param arg order[49565] :
  memoryOrder =
  (49562 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[49647] "const" "temp"
      (49649 'move' tmp[49647](49645 'deref'(49644 '_wide_get_locale' this)))
      {
        {
          {
            unknown tmp[49590] "temp"
            (49632 'move' tmp[49590](49618 call _cond_test(49620 call !=(49625 call(49622 call . this c"read")(order =(49627 call . memoryOrder c"relaxed"))) value)))
            WhileDo[49595]
            {
              {
                (49587 call chpl_task_yield)
              }
              label _continueLabel[49593]
              (49613 'move' tmp[49590](49599 call _cond_test(49601 call !=(49606 call(49603 call . this c"read")(order =(49608 call . memoryOrder c"relaxed"))) value)))
              tmp[49590]
            }
            label _breakLabel[49594]
          }
          (49642 call chpl_atomic_thread_fence(49640 call c_memory_order order))
        }
        (49652 'on block' 0 tmp[49647])
      }
    }
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49676].writeThis[49663](arg _mt[49740]:_MT[238], const arg this[49738]:RAtomicBool[49676], arg x[49661]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (49669 call <~> x(49668 call read))
  }
  type RAtomicT[51636](?) unknown T[49744] "type variable" unknown _v[49748] T function RAtomicT[51636](?).init=[49759](arg _mt[51640]:_MT[238], arg this[51638]:RAtomicT[51636](?), arg other[49756] :
  (49755 'typeof' this)) : _unknown[51] "method" "primary method"
  {
    (49769 call =(49762 call . this c"T")(49766 call . other c"T"))
    (49783 call =(49774 call . this c"_v")(49782 call(49778 call . other c"read")))
  } function RAtomicT[51636](?).init=[49798](arg _mt[51644]:_MT[238], arg this[51642]:RAtomicT[51636](?), arg other[49795] :
  (49792 call .(49791 'typeof' this) c"T")) : _unknown[51] "method" "primary method"
  {
    (49806 call =(49801 call . this c"T")(49805 'typeof' other))
    (49815 call =(49811 call . this c"_v") other)
  } function RAtomicT[51636](?)._localeid[49822](arg _mt[51648]:_MT[238], arg this[51646]:RAtomicT[51636](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (49839 return(49837 call _cast(49836 call int[13] 32)(49832 '_wide_get_node' _v)))
  }
  { scopeless type
    (49827 call int[13] 32)
  } function RAtomicT[51636](?)._addr[49847](arg _mt[51652]:_MT[238], arg this[51650]:RAtomicT[51636](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (49854 return(49853 '_wide_get_addr' _v))
  }
  { scopeless type
    c_void_ptr
  } function RAtomicT[51636](?).read[49871](arg _mt[51656]:_MT[238], const arg this[51654]:RAtomicT[51636](?), param arg order[49867] :
  memoryOrder =
  (49864 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_read[49885](ref arg result[49882] :
    T, arg l[49891] :
    (49890 call int[13] 32), const arg obj[49895] :
    c_void_ptr, arg order[49899] :
    memory_order, arg _chpl_cname[49907] :
    string[26] =
    (49878 call externFunc "read" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49913] T
      (49916 'end of statement')
    }
    (49930 call atomic_read ret(49922 call _localeid)(49925 call _addr)(49929 call c_memory_order order))
    (49933 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).write[49944](arg _mt[51660]:_MT[238], arg this[51658]:RAtomicT[51636](?), arg value[49941] :
  T, param arg order[49951] :
  memoryOrder =
  (49948 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_write[49967](ref arg desired[49964] :
    T, arg l[49973] :
    (49972 call int[13] 32), arg obj[49977] :
    c_void_ptr, arg order[49981] :
    memory_order, arg _chpl_cname[49989] :
    string[26] =
    (49960 call externFunc "write" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[49995] value
      (49998 'end of statement')
    }
    (50012 call atomic_write v(50004 call _localeid)(50007 call _addr)(50011 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).exchange[50023](arg _mt[51664]:_MT[238], arg this[51662]:RAtomicT[51636](?), arg value[50020] :
  T, param arg order[50030] :
  memoryOrder =
  (50027 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_xchg[50046](ref arg desired[50043] :
    T, arg l[50052] :
    (50051 call int[13] 32), arg obj[50056] :
    c_void_ptr, ref arg result[50060] :
    T, arg order[50064] :
    memory_order, arg _chpl_cname[50072] :
    string[26] =
    (50039 call externFunc "xchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50078] T
      (50081 'end of statement')
    }
    { scopeless
      unknown v[50083] value
      (50086 'end of statement')
    }
    (50101 call atomic_xchg v(50092 call _localeid)(50095 call _addr) ret(50100 call c_memory_order order))
    (50104 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).compareExchange[50115](arg _mt[51668]:_MT[238], arg this[51666]:RAtomicT[51636](?), ref arg expected[50112] :
  T, arg desired[50118] :
  T, param arg order[50126] :
  memoryOrder =
  (50123 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (50144 return(50143 call(50132 call . this c"compareExchange") expected desired order(50142 call readableOrder order)))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51636](?).compareExchange[50156](arg _mt[51672]:_MT[238], arg this[51670]:RAtomicT[51636](?), ref arg expected[50153] :
  T, arg desired[50159] :
  T, param arg success[50163] :
  memoryOrder, param arg failure[50167] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[50182](ref arg expected[50179] :
    T, ref arg desired[50185] :
    T, arg l[50192] :
    (50191 call int[13] 32), arg obj[50196] :
    c_void_ptr, ref arg result[50203] :
    (50202 call bool[10] 32), arg succ[50207] :
    memory_order, arg fail[50211] :
    memory_order, arg _chpl_cname[50219] :
    string[26] =
    (50175 call externFunc "cmpxchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown te[50225] expected
      (50228 'end of statement')
    }
    { scopeless
      unknown ret[50233](50232 call bool[10] 32)
      (50236 'end of statement')
    }
    { scopeless
      unknown td[50238] desired
      (50241 'end of statement')
    }
    (50261 call atomic_cmpxchg te td(50248 call _localeid)(50251 call _addr) ret(50256 call c_memory_order success)(50260 call c_memory_order failure))
    if(50271 call _cond_test(50264 call ! ret))
    {
      { scopeless
        (50268 call = expected te)
      }
    }
    (50280 return(50278 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51636](?).compareExchangeWeak[50291](arg _mt[51676]:_MT[238], arg this[51674]:RAtomicT[51636](?), ref arg expected[50288] :
  T, arg desired[50294] :
  T, param arg order[50302] :
  memoryOrder =
  (50299 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (50316 return(50315 call(50308 call . this c"compareExchange") expected desired order))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51636](?).compareExchangeWeak[50328](arg _mt[51680]:_MT[238], arg this[51678]:RAtomicT[51636](?), ref arg expected[50325] :
  T, arg desired[50331] :
  T, param arg success[50335] :
  memoryOrder, param arg failure[50339] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    (50353 return(50352 call(50344 call . this c"compareExchange") expected desired success failure))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51636](?).compareAndSwap[50365](arg _mt[51684]:_MT[238], arg this[51682]:RAtomicT[51636](?), arg expected[50362] :
  T, arg desired[50368] :
  T, param arg order[50376] :
  memoryOrder =
  (50373 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[50392](ref arg expected[50389] :
    T, ref arg desired[50395] :
    T, arg l[50402] :
    (50401 call int[13] 32), arg obj[50406] :
    c_void_ptr, ref arg result[50413] :
    (50412 call bool[10] 32), arg succ[50417] :
    memory_order, arg fail[50421] :
    memory_order, arg _chpl_cname[50429] :
    string[26] =
    (50385 call externFunc "cmpxchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50438](50437 call bool[10] 32)
      (50441 'end of statement')
    }
    { scopeless
      unknown te[50443] expected
      (50446 'end of statement')
    }
    { scopeless
      unknown td[50448] desired
      (50451 'end of statement')
    }
    (50474 call atomic_cmpxchg te td(50458 call _localeid)(50461 call _addr) ret(50466 call c_memory_order order)(50473 call c_memory_order(50471 call readableOrder order)))
    (50480 return(50478 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51636](?).fetchAdd[50491](arg _mt[51688]:_MT[238], arg this[51686]:RAtomicT[51636](?), arg value[50488] :
  T, param arg order[50498] :
  memoryOrder =
  (50495 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_fetch_add[50514](ref arg op[50511] :
    T, arg l[50520] :
    (50519 call int[13] 32), arg obj[50524] :
    c_void_ptr, ref arg result[50528] :
    T, arg order[50532] :
    memory_order, arg _chpl_cname[50540] :
    string[26] =
    (50507 call externFunc "fetch_add" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50546] T
      (50549 'end of statement')
    }
    { scopeless
      unknown v[50551] value
      (50554 'end of statement')
    }
    (50569 call atomic_fetch_add v(50560 call _localeid)(50563 call _addr) ret(50568 call c_memory_order order))
    (50572 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).add[50583](arg _mt[51692]:_MT[238], arg this[51690]:RAtomicT[51636](?), arg value[50580] :
  T, param arg order[50590] :
  memoryOrder =
  (50587 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_add[50620](ref arg op[50617] :
    T, arg l[50626] :
    (50625 call int[13] 32), arg obj[50630] :
    c_void_ptr, arg order[50634] :
    memory_order, arg _chpl_cname[50642] :
    string[26] =
    (50613 call externFunc "add" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[50648] value
      (50651 'end of statement')
    }
    (50665 call atomic_add v(50657 call _localeid)(50660 call _addr)(50664 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).fetchSub[50676](arg _mt[51696]:_MT[238], arg this[51694]:RAtomicT[51636](?), arg value[50673] :
  T, param arg order[50683] :
  memoryOrder =
  (50680 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_fetch_sub[50699](ref arg op[50696] :
    T, arg l[50705] :
    (50704 call int[13] 32), arg obj[50709] :
    c_void_ptr, ref arg result[50713] :
    T, arg order[50717] :
    memory_order, arg _chpl_cname[50725] :
    string[26] =
    (50692 call externFunc "fetch_sub" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50731] T
      (50734 'end of statement')
    }
    { scopeless
      unknown v[50736] value
      (50739 'end of statement')
    }
    (50754 call atomic_fetch_sub v(50745 call _localeid)(50748 call _addr) ret(50753 call c_memory_order order))
    (50757 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).sub[50768](arg _mt[51700]:_MT[238], arg this[51698]:RAtomicT[51636](?), arg value[50765] :
  T, param arg order[50775] :
  memoryOrder =
  (50772 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_sub[50805](ref arg op[50802] :
    T, arg l[50811] :
    (50810 call int[13] 32), arg obj[50815] :
    c_void_ptr, arg order[50819] :
    memory_order, arg _chpl_cname[50827] :
    string[26] =
    (50798 call externFunc "sub" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[50833] value
      (50836 'end of statement')
    }
    (50850 call atomic_sub v(50842 call _localeid)(50845 call _addr)(50849 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).fetchOr[50861](arg _mt[51704]:_MT[238], arg this[51702]:RAtomicT[51636](?), arg value[50858] :
  T, param arg order[50868] :
  memoryOrder =
  (50865 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(50884 call _cond_test(50877 call !(50876 call isIntegral T)))
    {
      { scopeless
        (50882 call compilerError "fetchOr is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[50901](ref arg op[50898] :
    T, arg l[50907] :
    (50906 call int[13] 32), arg obj[50911] :
    c_void_ptr, ref arg result[50915] :
    T, arg order[50919] :
    memory_order, arg _chpl_cname[50927] :
    string[26] =
    (50894 call externFunc "fetch_or" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50932] T
      (50935 'end of statement')
    }
    { scopeless
      unknown v[50937] value
      (50940 'end of statement')
    }
    (50955 call atomic_fetch_or v(50946 call _localeid)(50949 call _addr) ret(50954 call c_memory_order order))
    (50958 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).or[50969](arg _mt[51708]:_MT[238], arg this[51706]:RAtomicT[51636](?), arg value[50966] :
  T, param arg order[50976] :
  memoryOrder =
  (50973 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(50992 call _cond_test(50985 call !(50984 call isIntegral T)))
    {
      { scopeless
        (50990 call compilerError "or is only defined for integer atomic types")
      }
    }
    function atomic_or[51025](ref arg op[51022] :
    T, arg l[51031] :
    (51030 call int[13] 32), arg obj[51035] :
    c_void_ptr, arg order[51039] :
    memory_order, arg _chpl_cname[51047] :
    string[26] =
    (51018 call externFunc "or" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51052] value
      (51055 'end of statement')
    }
    (51069 call atomic_or v(51061 call _localeid)(51064 call _addr)(51068 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).fetchAnd[51080](arg _mt[51712]:_MT[238], arg this[51710]:RAtomicT[51636](?), arg value[51077] :
  T, param arg order[51087] :
  memoryOrder =
  (51084 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51103 call _cond_test(51096 call !(51095 call isIntegral T)))
    {
      { scopeless
        (51101 call compilerError "fetchAnd is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[51120](ref arg op[51117] :
    T, arg l[51126] :
    (51125 call int[13] 32), arg obj[51130] :
    c_void_ptr, ref arg result[51134] :
    T, arg order[51138] :
    memory_order, arg _chpl_cname[51146] :
    string[26] =
    (51113 call externFunc "fetch_and" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[51151] T
      (51154 'end of statement')
    }
    { scopeless
      unknown v[51156] value
      (51159 'end of statement')
    }
    (51174 call atomic_fetch_and v(51165 call _localeid)(51168 call _addr) ret(51173 call c_memory_order order))
    (51177 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).and[51188](arg _mt[51716]:_MT[238], arg this[51714]:RAtomicT[51636](?), arg value[51185] :
  T, param arg order[51195] :
  memoryOrder =
  (51192 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51211 call _cond_test(51204 call !(51203 call isIntegral T)))
    {
      { scopeless
        (51209 call compilerError "and is only defined for integer atomic types")
      }
    }
    function atomic_and[51244](ref arg op[51241] :
    T, arg l[51250] :
    (51249 call int[13] 32), arg obj[51254] :
    c_void_ptr, arg order[51258] :
    memory_order, arg _chpl_cname[51266] :
    string[26] =
    (51237 call externFunc "and" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51271] value
      (51274 'end of statement')
    }
    (51288 call atomic_and v(51280 call _localeid)(51283 call _addr)(51287 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).fetchXor[51299](arg _mt[51720]:_MT[238], arg this[51718]:RAtomicT[51636](?), arg value[51296] :
  T, param arg order[51306] :
  memoryOrder =
  (51303 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51322 call _cond_test(51315 call !(51314 call isIntegral T)))
    {
      { scopeless
        (51320 call compilerError "fetchXor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[51339](ref arg op[51336] :
    T, arg l[51345] :
    (51344 call int[13] 32), arg obj[51349] :
    c_void_ptr, ref arg result[51353] :
    T, arg order[51357] :
    memory_order, arg _chpl_cname[51365] :
    string[26] =
    (51332 call externFunc "fetch_xor" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[51370] T
      (51373 'end of statement')
    }
    { scopeless
      unknown v[51375] value
      (51378 'end of statement')
    }
    (51393 call atomic_fetch_xor v(51384 call _localeid)(51387 call _addr) ret(51392 call c_memory_order order))
    (51396 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51636](?).xor[51407](arg _mt[51724]:_MT[238], arg this[51722]:RAtomicT[51636](?), arg value[51404] :
  T, param arg order[51414] :
  memoryOrder =
  (51411 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51430 call _cond_test(51423 call !(51422 call isIntegral T)))
    {
      { scopeless
        (51428 call compilerError "xor is only defined for integer atomic types")
      }
    }
    function atomic_xor[51463](ref arg op[51460] :
    T, arg l[51469] :
    (51468 call int[13] 32), arg obj[51473] :
    c_void_ptr, arg order[51477] :
    memory_order, arg _chpl_cname[51485] :
    string[26] =
    (51456 call externFunc "xor" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51490] value
      (51493 'end of statement')
    }
    (51507 call atomic_xor v(51499 call _localeid)(51502 call _addr)(51506 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).waitFor[51518](arg _mt[51728]:_MT[238], const arg this[51726]:RAtomicT[51636](?), arg value[51515] :
  T, param arg order[51525] :
  memoryOrder =
  (51522 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[51607] "const" "temp"
      (51609 'move' tmp[51607](51605 'deref'(51604 '_wide_get_locale' this)))
      {
        {
          {
            unknown tmp[51550] "temp"
            (51592 'move' tmp[51550](51578 call _cond_test(51580 call !=(51585 call(51582 call . this c"read")(order =(51587 call . memoryOrder c"relaxed"))) value)))
            WhileDo[51555]
            {
              {
                (51547 call chpl_task_yield)
              }
              label _continueLabel[51553]
              (51573 'move' tmp[51550](51559 call _cond_test(51561 call !=(51566 call(51563 call . this c"read")(order =(51568 call . memoryOrder c"relaxed"))) value)))
              tmp[51550]
            }
            label _breakLabel[51554]
          }
          (51602 call chpl_atomic_thread_fence(51600 call c_memory_order order))
        }
        (51612 'on block' 0 tmp[51607])
      }
    }
  }
  { scopeless type
    void[4]
  } function RAtomicT[51636](?).writeThis[51623](arg _mt[51732]:_MT[238], const arg this[51730]:RAtomicT[51636](?), arg x[51621]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (51629 call <~> x(51628 call read))
  }
  function =[51741](ref arg a[51738] :
  RAtomicBool, const arg b[51744] :
  RAtomicBool) : _unknown[51] "assignop" "inline"
  {
    (51758 call(51748 call . a c"write")(51756 call(51752 call . b c"read")))
  }
  function =[51769](ref arg a[51766] :
  RAtomicBool, arg b[51771]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (51776 call compilerError "Cannot directly assign atomic variables")
  }
  function =[51787](ref arg a[51784] :
  RAtomicT, const arg b[51790] :
  RAtomicT) : _unknown[51] "assignop" "inline"
  {
    (51804 call(51794 call . a c"write")(51802 call(51798 call . b c"read")))
  }
  function =[51815](ref arg a[51812] :
  RAtomicT, arg b[51817]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (51822 call compilerError "Cannot directly assign atomic variables")
  }
  function +[51833](arg a[51830] :
  RAtomicT, arg b[51835]:_any[178](?)) : _unknown[51] "inline"
  {
    (51840 call compilerError "Cannot directly add atomic variables")
    (51844 return a)
  }
  function -[51854](arg a[51851] :
  RAtomicT, arg b[51856]:_any[178](?)) : _unknown[51] "inline"
  {
    (51861 call compilerError "Cannot directly subtract atomic variables")
    (51865 return a)
  }
  function *[51875](arg a[51872] :
  RAtomicT, arg b[51877]:_any[178](?)) : _unknown[51] "inline"
  {
    (51882 call compilerError "Cannot directly multiply atomic variables")
    (51886 return a)
  }
  function /[51896](arg a[51893] :
  RAtomicT, arg b[51898]:_any[178](?)) : _unknown[51] "inline"
  {
    (51903 call compilerError "Cannot directly divide atomic variables")
    (51907 return a)
  }
  function %[51917](arg a[51914] :
  RAtomicT, arg b[51919]:_any[178](?)) : _unknown[51] "inline"
  {
    (51924 call compilerError "Cannot directly divide atomic variables")
    (51928 return a)
  }
}