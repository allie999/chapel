AST dump for gpureduce after pass replaceArrayAccessesWithRefTemps.
Module use list: ChapelStandard 

{
  function chpl__init_gpureduce[416129]() : void[4] "insert line file info" "module init" "resolved"
  {
    (704726 'move' call_tmp[704723](209902 call chpl_build_bounded_range[455180] 1 10))
    (704731 'move' call_tmp[704728](209906 call chpl__ensureDomainExpr[1316439] call_tmp[704723]))
    (704736 'move' call_tmp[704733](209908 call chpl__buildArrayRuntimeType[1357123] call_tmp[704728]))
    (1548415 'move' init_coerce_tmp[1366150](1548411 call chpl__coerceCopy[1509237] call_tmp[704733] 2.0))
    (546046 'move' A[209913] init_coerce_tmp[1366150])
    (209916 'end of statement')
    (704741 'move' call_tmp[704738](209919 call chpl_build_bounded_range[455180] 1 10))
    (704746 'move' call_tmp[704743](209923 call chpl__ensureDomainExpr[1316439] call_tmp[704738]))
    (704751 'move' call_tmp[704748](209925 call chpl__buildArrayRuntimeType[1357123] call_tmp[704743]))
    (1551359 'move' _runtime_type_tmp_[1551354](1837951 '.v' call_tmp[704748] dom[1366135]))
    (1551364 'move' B[209927](1551352 call chpl__convertRuntimeTypeToValue[1538542] _runtime_type_tmp_[1551354]))
    (209930 'end of statement')
    (546050 'move' C[209932] 0.0)
    (209935 'end of statement')
    const tmp[209981]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[704753]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (704756 'move' call_tmp[704753](394208 call here[90438]))
    val call_tmp[704758]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1366160]:unmanaged BaseLocale[984799] "dead after last mention" "temp"
    (1366165 'move' _locale_tmp_[1366160](1366162 call _value[89984] call_tmp[704753]))
    (704761 'move' call_tmp[704758](209978 '_wide_get_locale' _locale_tmp_[1366160]))
    (209983 'move' tmp[209981] call_tmp[704758])
    (935599 call on_fn[935595] tmp[209981])
    function on_fn[935595](const in arg dummy_locale_arg[935597]:chpl_localeID_t[209352]) : void[4] "on" "resolved"
    {
      {
        function chpl__scan1[1366170](const?  ref arg chpl_toScan[1366172]:[domain(1,int(64),false)] real(64)[1365901]) : [domain(1,int(64),false)] real(64)[1365901] "compiler nested function" "instantiated generic" "invisible fn" "ReduceScanOp" "resolved" "fn returns iterator"
        {
          val ret[1366174]:[domain(1,int(64),false)] real(64)[1365901] "dead after last mention" "RVV" "temp"
          val chpl_eltType[1366182]:real(64)[16] "dead after last mention" "temp" "type variable"
          const tmp[1366210]:unmanaged SumReduceScanOp(real(64))[1372640] "dead after last mention" "const" "temp"
          val new_temp[1372669]:unmanaged SumReduceScanOp(real(64))[1372640] "dead after last mention" "temp"
          val default_arg_l[1372713]:chpl_LocalSpinlock[187432] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
          (1372717 'move' default_arg_l[1372713](1372715 call _new_default_l[1372679]))
          (1372671 'move' new_temp[1372669](1371577 call _new[1372600] default_arg_l[1372713] 0.0))
          (1366212 'move' tmp[1366210] new_temp[1372669])
          val call_tmp[1366220]:[domain(1,int(64),false)] real(64)[1365901] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          (1366222 'move' call_tmp[1366220](1366225 call chpl__scanIterator[1372784] tmp[1366210] chpl_toScan[1366172]))
          (1366228 'move' ret[1366174] call_tmp[1366220])
          (1366232 return ret[1366174])
        }
        val call_tmp[704783]:[domain(1,int(64),false)] real(64)[1365901] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        (704786 'move' call_tmp[704783](209973 call chpl__scan1[1366170] A[209913]))
        (209974 call =[1540115] B[209927] call_tmp[704783])
        (485971 'end of statement' B[209927] A[209913])
      }
      (935602 return _void[55])
    }
    {
    }
    (210008 call writeln[1543164] "12345678")
    (485974 'end of statement')
    (210012 call =[1540115] B[209927] A[209913])
    (485975 'end of statement' B[209927] A[209913])
    (527843 return _void[55])
  }
  val A[209913]:[domain(1,int(64),false)] real(64)[1365901] "dead at end of block" "insert auto destroy"
  val B[209927]:[domain(1,int(64),false)] real(64)[1365901] "dead at end of block" "insert auto destroy"
  val C[209932]:real(64)[16] "dead at end of block" "insert auto destroy"
  function main[749355]() : void[4] "resolved"
  {
    (749358 return _void[55])
  }
  function chpl_gen_main[749361](const  ref arg _arg[749360]:_ref(chpl_main_argument)[1560221]) : int(64)[13] "compiler generated" "export" "generated main" "local args" "resolved"
  {
    val global_temp[1831278]:domain(1,int(64),false)[1252658] "temp"
    val global_temp[1827012]:string[26] "temp"
    val ret[749404]:int(64)[13] "dead after last mention" "RVV" "temp"
    val _main_ret[749365]:int(64)[13] "dead after last mention" "temp"
    val _endCount[749367]:unmanaged _EndCount(AtomicT(int(64)),int(64))[947148] "dead after last mention" "temp"
    (749372 'move' _endCount[749367](749369 call _endCountAlloc[938879]))
    (749374 'set dynamic end count' _endCount[749367])
    (749394 'end of statement')
    (749376 call chpl_rt_preUserCodeHook[167714])
    (749395 'end of statement')
    (749378 call chpl__init_gpureduce[416129])
    (749396 'end of statement')
    (749380 call main[749355])
    (749397 'end of statement')
    (749382 'move' _main_ret[749365] 0)
    (749385 call chpl_rt_postUserCodeHook[167720])
    (749398 'end of statement')
    (749387 call _waitEndCount[1551419] _endCount[749367])
    (749399 'end of statement')
    (749390 call chpl_deinitModules[167759])
    (749400 'end of statement')
    (749409 'move' ret[749404] _main_ret[749365])
    (749406 return ret[749404])
  }
  val call_tmp[704723]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  val call_tmp[704728]:domain(1,int(64),false)[1252658] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  val call_tmp[704733]:_RuntimeTypeInfo[1366134] "dead at end of block" "maybe param" "temp"
  val init_coerce_tmp[1366150]:[domain(1,int(64),false)] real(64)[1365901] "dead at end of block" "temp"
  val call_tmp[704738]:range(int(64),bounded,false)[1026875] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  val call_tmp[704743]:domain(1,int(64),false)[1252658] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  val call_tmp[704748]:_RuntimeTypeInfo[1366134] "dead at end of block" "expr temp" "maybe param" "temp"
  val _runtime_type_tmp_[1551354]:domain(1,int(64),false)[1252658] "dead at end of block" "temp"
}