AST dump for Builtins after pass addInitCalls.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416003]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_Builtins_p[2407437]
    {
      goto _exit_chpl__init_Builtins[2407474] _exit_chpl__init_Builtins[2407474]
    }
    val modFormatStr[2407445]:c_string[19] "temp"
    val modStr[2407446]:c_string[19] "temp"
    ref refIndentLevel[2407460]:int(32)[95] "temp"
    (2407453 'move' modFormatStr[2407445] c"%*s\n")
    (2407455 'move' modStr[2407446] c"Builtins")
    (2407458 call printModuleInit[20426] modFormatStr[2407445] modStr[2407446] 8)
    (2407464 'move' refIndentLevel[2407460](2407463 'addr of' moduleInitLevel[20416]))
    (2407467 '+=' refIndentLevel[2407460] 1)
    (2407443 'move' chpl__init_Builtins_p[2407437] 1)
    {
      (2405170 call chpl__init_IO[416024])
    }
    (2407470 '-=' refIndentLevel[2407460] 1)
    label _endchpl__init_Builtins[2407476]
    label _exit_chpl__init_Builtins[2407474]
    (527749 return _void[55])
  }
  function _local_assert[2367230](const in arg test[2367232]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2367235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2367237 'move' call_tmp[2367235](2367239 '!' test[2367232]))
    if call_tmp[2367235]
    {
      (2367243 'chpl_error' c"assert failed")
    }
    (2367246 return _void[55])
  }
  function assert[210257](const in arg test[210254]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2060226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060228 'move' call_tmp[2060226](2060230 '!' test[210254]))
    if call_tmp[2060226]
    {
      (210267 'chpl_error' c"assert failed")
    }
    (527727 return _void[55])
  }
  function assert[1416138](const in arg test[1416140]:bool[10], const  ref arg _e0_args[1416142]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4794[2336590]:string[26] "temp"
    (2336591 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2726[2336584]:string[26] "temp"
    (2336585 'move' "assert failed - " "assert failed - ")
    const-val call_tmp[2060703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060705 'move' call_tmp[2060703](2060707 '!' test[1416140]))
    if call_tmp[2060703]
    {
      const-val call_tmp[1416167]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1795240]:string[26] "temp"
      (1416172 call stringify[1416206] _e0_args[1416142] ret_tmp[1795240])
      (1795243 'move' call_tmp[1416167] ret_tmp[1795240])
      const-val call_tmp[1416174]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1787225]:string[26] "temp"
      wide-ref tmp[2373863]:string[26] "temp"
      (2373867 'move' tmp[2373863](2373865 'set reference' call_tmp[1416167]))
      (1416179 call +[38342] "assert failed - " tmp[2373863] ret_tmp[1787225])
      (1787228 'move' call_tmp[1416174] ret_tmp[1787225])
      const-val tmpstring[1416182]:string[26] "dead at end of block" "insert auto destroy"
      (1416184 'move' tmpstring[1416182] call_tmp[1416174])
      const-val coerce_tmp[2097972]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2384224]:int(32)[95] "temp"
      (2097974 'move' tmp[2384224](2097976 '.v' tmpstring[1416182] locale_id[30754]))
      (2384227 'move' coerce_tmp[2097972] tmp[2384224])
      const-val call_tmp[2097979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2097981 'move' call_tmp[2097979](2097983 '!=' coerce_tmp[2097972] chpl_nodeID[208152]))
      if call_tmp[2097979]
      {
        (2097989 call halt[154067] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2097992]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2384230]:c_ptr(uint(8))[937334] "temp"
      (2097994 'move' tmp[2384230](2097996 '.v' tmpstring[1416182] buff[30737]))
      (2384233 'move' coerce_tmp[2097992] tmp[2384230])
      const-val call_tmp[2097999]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098001 'move' call_tmp[2097999](2098003 'cast' c_string[19] coerce_tmp[2097992]))
      (1416197 'chpl_error' call_tmp[2097999])
      ref i_x[2079138]:string[26] "temp"
      (2079142 'move' i_x[2079138](2079140 'set reference' tmpstring[1416182]))
      wide-ref tmp[2382279]:string[26] "temp"
      (2382282 'move' tmp[2382279] i_x[2079138])
      (2079146 call deinit[30831] tmp[2382279])
      ref i_x[2079150]:string[26] "temp"
      (2079154 'move' i_x[2079150](2079152 'set reference' call_tmp[1416167]))
      wide-ref tmp[2382285]:string[26] "temp"
      (2382288 'move' tmp[2382285] i_x[2079150])
      (2079158 call deinit[30831] tmp[2382285])
    }
    (1416202 return _void[55])
  }
  function assert[1439669](const in arg test[1439671]:bool[10], const  ref arg _e0_args[1439673]:string[26], const in arg _e1_args[1439675]:uint(64)[115], const  ref arg _e2_args[1439677]:string[26], const in arg _e3_args[1439679]:int(64)[13]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4794[2336632]:string[26] "temp"
    (2336633 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2726[2336626]:string[26] "temp"
    (2336627 'move' "assert failed - " "assert failed - ")
    const-val call_tmp[2060739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060741 'move' call_tmp[2060739](2060743 '!' test[1439671]))
    if call_tmp[2060739]
    {
      const-val call_tmp[1439710]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1795447]:string[26] "temp"
      (1439715 call stringify[1439758] _e0_args[1439673] _e1_args[1439675] _e2_args[1439677] _e3_args[1439679] ret_tmp[1795447])
      (1795450 'move' call_tmp[1439710] ret_tmp[1795447])
      const-val call_tmp[1439720]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1787231]:string[26] "temp"
      wide-ref tmp[2373945]:string[26] "temp"
      (2373949 'move' tmp[2373945](2373947 'set reference' call_tmp[1439710]))
      (1439725 call +[38342] "assert failed - " tmp[2373945] ret_tmp[1787231])
      (1787234 'move' call_tmp[1439720] ret_tmp[1787231])
      const-val tmpstring[1439728]:string[26] "dead at end of block" "insert auto destroy"
      (1439730 'move' tmpstring[1439728] call_tmp[1439720])
      const-val coerce_tmp[2098015]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2384236]:int(32)[95] "temp"
      (2098017 'move' tmp[2384236](2098019 '.v' tmpstring[1439728] locale_id[30754]))
      (2384239 'move' coerce_tmp[2098015] tmp[2384236])
      const-val call_tmp[2098022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098024 'move' call_tmp[2098022](2098026 '!=' coerce_tmp[2098015] chpl_nodeID[208152]))
      if call_tmp[2098022]
      {
        (2098032 call halt[154067] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2098035]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2384242]:c_ptr(uint(8))[937334] "temp"
      (2098037 'move' tmp[2384242](2098039 '.v' tmpstring[1439728] buff[30737]))
      (2384245 'move' coerce_tmp[2098035] tmp[2384242])
      const-val call_tmp[2098042]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098044 'move' call_tmp[2098042](2098046 'cast' c_string[19] coerce_tmp[2098035]))
      (1439743 'chpl_error' call_tmp[2098042])
      ref i_x[2079162]:string[26] "temp"
      (2079166 'move' i_x[2079162](2079164 'set reference' tmpstring[1439728]))
      wide-ref tmp[2382291]:string[26] "temp"
      (2382294 'move' tmp[2382291] i_x[2079162])
      (2079170 call deinit[30831] tmp[2382291])
      ref i_x[2079174]:string[26] "temp"
      (2079178 'move' i_x[2079174](2079176 'set reference' call_tmp[1439710]))
      wide-ref tmp[2382297]:string[26] "temp"
      (2382300 'move' tmp[2382297] i_x[2079174])
      (2079182 call deinit[30831] tmp[2382297])
    }
    (1439748 return _void[55])
  }
  function compilerAssert[973801]() : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (973829 return _void[55])
  }
}