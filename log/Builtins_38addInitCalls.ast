AST dump for Builtins after pass addInitCalls.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416150]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_Builtins_p[2283266]
    {
      goto _exit_chpl__init_Builtins[2283303] _exit_chpl__init_Builtins[2283303]
    }
    val modFormatStr[2283274]:c_string[19] "temp"
    val modStr[2283275]:c_string[19] "temp"
    ref refIndentLevel[2283289]:int(32)[95] "temp"
    (2283282 'move' modFormatStr[2283274] c"%*s\n")
    (2283284 'move' modStr[2283275] c"Builtins")
    (2283287 call printModuleInit[20426] modFormatStr[2283274] modStr[2283275] 8)
    (2283293 'move' refIndentLevel[2283289](2283292 'addr of' moduleInitLevel[20416]))
    (2283296 '+=' refIndentLevel[2283289] 1)
    (2283272 'move' chpl__init_Builtins_p[2283266] 1)
    {
      (2280999 call chpl__init_IO[416171])
    }
    (2283299 '-=' refIndentLevel[2283289] 1)
    label _endchpl__init_Builtins[2283305]
    label _exit_chpl__init_Builtins[2283303]
    (527904 return _void[55])
  }
  function assert[210262](const in arg test[210259]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2034598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034600 'move' call_tmp[2034598](2034602 '!' test[210259]))
    if call_tmp[2034598]
    {
      (210272 'chpl_error' c"assert failed")
    }
    (527882 return _void[55])
  }
}