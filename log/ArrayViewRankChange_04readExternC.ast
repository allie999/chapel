AST dump for ArrayViewRankChange after pass readExternC.
Module use list: 

{
  (191443 'use' ChapelStandard)
  type ArrayViewRankChangeDist[191674](?) unknown downDistPid[191450] int[13] unknown downDistInst[191454] const collapsedDim[191458] "const" const idx[191462] "const" function ArrayViewRankChangeDist[191674](?).downDist[191468](arg _mt[191678]:_MT[238], arg this[191676]:ArrayViewRankChangeDist[191674](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191485 call _cond_test(191473 call _isPrivatized downDistInst))
    {
      { scopeless
        (191480 return(191479 call chpl_getPrivatizedCopy(191476 'typeof' downDistInst) downDistPid))
      }
    }
    {
      { scopeless
        (191483 return downDistInst)
      }
    }
  } function ArrayViewRankChangeDist[191674](?).dsiNewRectangularDom[191498](arg _mt[191682]:_MT[238], arg this[191680]:ArrayViewRankChangeDist[191674](?), param arg rank[191496]:_any[178](?), arg idxType[191500]:_any[178](?), param arg stridable[191502]:_any[178](?), arg inds[191504]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      unknown newdom[191532](191508 'new'(_chpl_manager = unmanaged[220](?))(191531 call ArrayViewRankChangeDom(rank = rank)(idxType = idxType)(stridable = stridable)(collapsedDim = collapsedDim)(idx = idx)(distPid =(191522 call . this c"pid"))(distInst =(191529 call _to_unmanaged this))))
      (191535 'end of statement')
    }
    (191543 call(191538 call . newdom c"dsiSetIndices") inds)
    (191546 return newdom)
  } function ArrayViewRankChangeDist[191674](?).dsiClone[191552](arg _mt[191686]:_MT[238], arg this[191684]:ArrayViewRankChangeDist[191674](?)) : _unknown[51] "method" "primary method"
  {
    (191578 return(191556 'new'(_chpl_manager = unmanaged[220](?))(191577 call ArrayViewRankChangeDist(downDistPid =(191561 call . this c"downDistPid"))(downDistInst =(191569 call . this c"downDistInst"))(collapsedDim = collapsedDim)(idx = idx))))
  } function ArrayViewRankChangeDist[191674](?).dsiSupportsPrivatization[191585](arg _mt[191690]:_MT[238], arg this[191688]:ArrayViewRankChangeDist[191674](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      (191593 return(191592 call(191588 call . downDistInst c"dsiSupportsPrivatization")))
    }
  } function ArrayViewRankChangeDist[191674](?).dsiGetPrivatizeData[191600](arg _mt[191694]:_MT[238], arg this[191692]:ArrayViewRankChangeDist[191674](?)) : _unknown[51] "method" "primary method"
  {
    (191609 return(191607 call _build_tuple downDistPid downDistInst collapsedDim idx))
  } function ArrayViewRankChangeDist[191674](?).dsiPrivatize[191618](arg _mt[191698]:_MT[238], arg this[191696]:ArrayViewRankChangeDist[191674](?), arg privatizeData[191616]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (191646 return(191622 'new'(_chpl_manager = unmanaged[220](?))(191645 call ArrayViewRankChangeDist(downDistPid =(191627 call privatizeData 0))(downDistInst =(191633 call privatizeData 1))(collapsedDim =(191638 call privatizeData 2))(idx =(191643 call privatizeData 3)))))
  } function ArrayViewRankChangeDist[191674](?).dsiDestroyDist[191653](arg _mt[191702]:_MT[238], arg this[191700]:ArrayViewRankChangeDist[191674](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
  } function ArrayViewRankChangeDist[191674](?).dsiIsLayout[191660](arg _mt[191706]:_MT[238], arg this[191704]:ArrayViewRankChangeDist[191674](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (191668 return(191667 call(191663 call . downDistInst c"dsiIsLayout")))
  } BaseDist
  function downDomType[191715](param arg rank[191712] :
  int[13], arg idxType[191717]:_any[178](?), param arg stridable[191720] :
  bool[10], arg dist[191723]:_any[178](?)) type : _unknown[51] "private"
  {
    { scopeless
      unknown ranges[191737](191735 call * rank(191734 call range idxType(191730 call . BoundedRangeType c"bounded") stridable))
      (191740 'end of statement')
    }
    { scopeless
      unknown a[191759](191758 call(191748 call .(191745 call . dist c"downDist") c"dsiNewRectangularDom")(rank = rank) idxType(stridable = stridable) ranges)
      (191762 'end of statement')
    }
    (191765 return(191764 'typeof' a))
  }
  type ArrayViewRankChangeDom[193415](?) unknown upDomInst[191780](191779 'to unmanaged class from unknown'(191778 'to nilable class from type'(191777 call DefaultRectangularDom rank idxType stridable))) function ArrayViewRankChangeDom[193415](?).chpl_forwarding_expr8_upDom[191786](arg _mt[193419]:_MT[238], arg this[193417]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (191788 return upDom)
  } const collapsedDim[191792] "const" const idx[191796] "const" const distPid[191800] "const" const distInst[191804] "const" function ArrayViewRankChangeDom[193415](?).dist[191810](arg _mt[193423]:_MT[238], arg this[193421]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191827 call _cond_test(191815 call _isPrivatized distInst))
    {
      { scopeless
        (191822 return(191821 call chpl_getPrivatizedCopy(191818 'typeof' distInst) distPid))
      }
    }
    {
      { scopeless
        (191825 return distInst)
      }
    }
  } unknown downDomPid[191837] int[13] unknown downDomInst[191852](191851 'to nilable class from type'(191850 call downDomType(191843 call . collapsedDim c"size") idxType stridable distInst)) function ArrayViewRankChangeDom[193415](?).downrank[191858](arg _mt[193427]:_MT[238], arg this[193425]:ArrayViewRankChangeDom[193415](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    (191864 return(191861 call . collapsedDim c"size"))
  } function ArrayViewRankChangeDom[193415](?).upDom[191871](arg _mt[193431]:_MT[238], arg this[193429]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (191876 return(191874 call postfix! upDomInst))
  } function ArrayViewRankChangeDom[193415](?).downDom[191883](arg _mt[193435]:_MT[238], arg this[193433]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191906 call _cond_test(191890 call _isPrivatized(191887 call postfix! downDomInst)))
    {
      { scopeless
        (191899 return(191898 call chpl_getPrivatizedCopy(191895 'typeof'(191893 call postfix! downDomInst)) downDomPid))
      }
    }
    {
      { scopeless
        (191904 return(191902 call postfix! downDomInst))
      }
    }
  } function ArrayViewRankChangeDom[193415](?).dsiBuildArray[191919](arg _mt[193439]:_MT[238], arg this[193437]:ArrayViewRankChangeDom[193415](?), arg eltType[191917]:_any[178](?), param arg initElts[191922] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    { scopeless
      const downarr[191936] "const" "no auto destroy"(191935 call _newArray(191933 call(191927 call . downDom c"dsiBuildArray") eltType initElts))
      (191939 'end of statement')
    }
    (191975 return(191943 'new'(_chpl_manager = unmanaged[220](?))(191974 call ArrayViewRankChangeArr(eltType = eltType)(_DomPid =(191949 call . this c"pid"))(dom =(191956 call _to_unmanaged this))(_ArrPid =(191959 call . downarr c"_pid"))(_ArrInstance =(191964 call . downarr c"_instance"))(collapsedDim = collapsedDim)(idx = idx)(ownsArrInstance = 1))))
  } function ArrayViewRankChangeDom[193415](?).dsiSetIndices[191983](arg _mt[193443]:_MT[238], arg this[193441]:ArrayViewRankChangeDom[193415](?), arg inds[191981]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (191990 call(191986 call . this c"dsiDestroyDom"))
    { scopeless
      unknown upDomRec[191998] "no auto destroy"(191996 call chpl__buildDomainExpr(191994 'expand_tuple' inds))
      (192001 'end of statement')
    }
    (192007 call = upDomInst(192004 call . upDomRec c"_value"))
    { scopeless
      unknown ranges[192022](192020 call * downrank(192019 call range idxType(192015 call . BoundedRangeType c"bounded") stridable))
      (192025 'end of statement')
    }
    { scopeless
      unknown downDomClass[192041](192040 call(192030 call .(192027 call . dist c"downDist") c"dsiNewRectangularDom")(rank = downrank) idxType(stridable = stridable) ranges)
      (192044 'end of statement')
    }
    { scopeless
      unknown downDomLoc[192050] "no auto destroy"(192045 'new'(192049 call _domain downDomClass))
      (192053 'end of statement')
    }
    (192065 call = downDomLoc(192064 call chpl_rankChangeConvertDom inds(192059 call . inds c"size") collapsedDim idx))
    (192076 call =(192072 call .(192069 call . downDomLoc c"_value") c"_free_when_no_arrs") 1)
    (192084 call = downDomPid(192081 call . downDomLoc c"_pid"))
    (192092 call = downDomInst(192089 call . downDomLoc c"_instance"))
  } function ArrayViewRankChangeDom[193415](?).dsiAssignDomain[192103](arg _mt[193447]:_MT[238], arg this[193445]:ArrayViewRankChangeDom[193415](?), arg rhs[192100] :
  _domain, arg lhsPrivate[192106] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    (192113 call chpl_assignDomainWithGetSetIndices this rhs)
  } function ArrayViewRankChangeDom[193415](?).these[192120](arg _mt[193451]:_MT[238], arg this[193449]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "iterator fn" "method" "primary method"
  {
    if(192207 call _cond_test(192125 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192131] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192132] "expr temp" "temp"
        (192141 'move' _iterator[192132](192139 call _getIterator upDom))
        Defer
        {
          {
            (192157 call _freeIterator _iterator[192132])
          }
        }
        { scopeless type
          (192146 'move' _indexOfInterest[192131](192143 call iteratorIndex _iterator[192132]))
        }
        ForLoop[192133]
        {
          unknown i[192150] "index var" "insert auto destroy"
          (192152 'move' i[192150] _indexOfInterest[192131])
          { scopeless
            (192129 yield i)
          }
          label _continueLabel[192136]
          _indexOfInterest[192131]
          _iterator[192132]
        }
        label _breakLabel[192137]
      }
    }
    {
      {
        unknown _indexOfInterest[192173] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192174] "expr temp" "temp"
        (192183 'move' _iterator[192174](192181 call _getIterator downDom))
        Defer
        {
          {
            (192199 call _freeIterator _iterator[192174])
          }
        }
        { scopeless type
          (192188 'move' _indexOfInterest[192173](192185 call iteratorIndex _iterator[192174]))
        }
        ForLoop[192175]
        {
          unknown i[192192] "index var" "insert auto destroy"
          (192194 'move' i[192192] _indexOfInterest[192173])
          { scopeless
            (192171 yield(192170 call downIdxToUpIdx i))
          }
          label _continueLabel[192178]
          _indexOfInterest[192173]
          _iterator[192174]
        }
        label _breakLabel[192179]
      }
    }
  } function ArrayViewRankChangeDom[193415](?).these[192220](arg _mt[193455]:_MT[238], arg this[193453]:ArrayViewRankChangeDom[193415](?), param arg tag[192217] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method"
  {
    Forall {
      induction variables:
        
        unknown i[192254] "index var" "insert auto destroy"
      iterated expressions:
        upDom
      shadow variables:
      other variables
        forall body
      {
        (192251 yield i)
      }
    }
  }
  where {
    (192246 call &&(192238 call &&(192232 call &&(192227 call == tag(192224 call . iterKind c"standalone"))(192230 call ! localeModelHasSublocales))(192237 call chpl__isDROrDRView downDom))(192245 'method call resolves' upDom "these" tag))
  } function ArrayViewRankChangeDom[193415](?).these[192267](arg _mt[193459]:_MT[238], arg this[193457]:ArrayViewRankChangeDom[193415](?), param arg tag[192264] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method"
  {
    Forall {
      induction variables:
        
        unknown i[192306] "index var" "insert auto destroy"
      iterated expressions:
        downDom
      shadow variables:
      other variables
        forall body
      {
        (192303 yield(192302 call downIdxToUpIdx i))
      }
    }
  }
  where {
    (192295 call &&(192287 call &&(192279 call &&(192274 call == tag(192271 call . iterKind c"standalone"))(192277 call ! localeModelHasSublocales))(192285 call !(192284 call chpl__isDROrDRView downDom)))(192294 'method call resolves' downDom "these" tag))
  } function ArrayViewRankChangeDom[193415](?).these[192319](arg _mt[193463]:_MT[238], arg this[193461]:ArrayViewRankChangeDom[193415](?), param arg tag[192316] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method"
  {
    if(192433 call _cond_test(192331 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192343] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192344] "expr temp" "temp"
        (192353 'move' _iterator[192344](192351 call _getIterator(192339 call(192334 call . upDom c"these") tag)))
        Defer
        {
          {
            (192370 call _freeIterator _iterator[192344])
          }
        }
        { scopeless type
          (192359 'move' _indexOfInterest[192343](192356 call iteratorIndex _iterator[192344]))
        }
        ForLoop[192345]
        {
          unknown followThis[192363] "index var" "insert auto destroy"
          (192365 'move' followThis[192363] _indexOfInterest[192343])
          { scopeless
            (192341 yield followThis)
          }
          label _continueLabel[192348]
          _indexOfInterest[192343]
          _iterator[192344]
        }
        label _breakLabel[192349]
      }
    }
    {
      {
        unknown _indexOfInterest[192398] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192399] "expr temp" "temp"
        (192408 'move' _iterator[192399](192406 call _getIterator(192385 call(192380 call . downDom c"these") tag)))
        Defer
        {
          {
            (192425 call _freeIterator _iterator[192399])
          }
        }
        { scopeless type
          (192414 'move' _indexOfInterest[192398](192411 call iteratorIndex _iterator[192399]))
        }
        ForLoop[192400]
        {
          unknown followThis[192418] "index var" "insert auto destroy"
          (192420 'move' followThis[192418] _indexOfInterest[192398])
          {
            { scopeless
              const followThisLoD[192390] "const"(192389 call chpl_rankChangeConvertHiDTupleToLoD followThis)
              (192393 'end of statement')
            }
            (192396 yield followThisLoD)
          }
          label _continueLabel[192403]
          _indexOfInterest[192398]
          _iterator[192399]
        }
        label _breakLabel[192404]
      }
    }
  }
  where {
    (192326 call == tag(192323 call . iterKind c"leader"))
  } function ArrayViewRankChangeDom[193415](?).these[192447](arg _mt[193467]:_MT[238], arg this[193465]:ArrayViewRankChangeDom[193415](?), param arg tag[192444] :
  iterKind, arg followThis[192449]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method"
  {
    if(192571 call _cond_test(192461 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192474] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192475] "expr temp" "temp"
        (192484 'move' _iterator[192475](192482 call _getIterator(192470 call(192464 call . upDom c"these") tag followThis)))
        Defer
        {
          {
            (192501 call _freeIterator _iterator[192475])
          }
        }
        { scopeless type
          (192490 'move' _indexOfInterest[192474](192487 call iteratorIndex _iterator[192475]))
        }
        ForLoop[192476]
        {
          unknown i[192494] "index var" "insert auto destroy"
          (192496 'move' i[192494] _indexOfInterest[192474])
          { scopeless
            (192472 yield i)
          }
          label _continueLabel[192479]
          _indexOfInterest[192474]
          _iterator[192475]
        }
        label _breakLabel[192480]
      }
    }
    {
      { scopeless
        const followThisHiD[192513] "const"(192512 call chpl_rankChangeConvertLoDTupleToHiD followThis)
        (192516 'end of statement')
      }
      {
        unknown _indexOfInterest[192537] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192538] "expr temp" "temp"
        (192547 'move' _iterator[192538](192545 call _getIterator(192526 call(192520 call . downDom c"these") tag followThisHiD)))
        Defer
        {
          {
            (192564 call _freeIterator _iterator[192538])
          }
        }
        { scopeless type
          (192553 'move' _indexOfInterest[192537](192550 call iteratorIndex _iterator[192538]))
        }
        ForLoop[192539]
        {
          unknown i[192557] "index var" "insert auto destroy"
          (192559 'move' i[192557] _indexOfInterest[192537])
          {
            (192534 yield(192533 call chpl_rankChangeConvertIdxHiDToLoD i collapsedDim idx rank))
          }
          label _continueLabel[192542]
          _indexOfInterest[192537]
          _iterator[192538]
        }
        label _breakLabel[192543]
      }
    }
  }
  where {
    (192456 call == tag(192453 call . iterKind c"follower"))
  } function ArrayViewRankChangeDom[193415](?).chpl_rankChangeConvertLoDTupleToHiD[192583](arg _mt[193471]:_MT[238], arg this[193469]:ArrayViewRankChangeDom[193415](?), arg tup[192581]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    { scopeless
      unknown tupHiD[192593](192591 call * downrank(192590 'typeof'(192589 call tup 0)))
      (192596 'end of statement')
    }
    { scopeless
      unknown i[192599] 0
      (192602 'end of statement')
    }
    {
      unknown d[192647] 0
      unknown tmp[192648] "maybe param" "temp"
      (192660 'move' tmp[192648](192658 call chpl_compute_low_param_loop_bound 0(192606 call - downrank 1)))
      unknown tmp[192649] "maybe param" "temp"
      (192670 'move' tmp[192649](192668 call chpl_compute_high_param_loop_bound 0(192665 call - downrank 1)))
      unknown tmp[192650] "maybe param" "temp"
      (192673 'move' tmp[192650] 1)
      ParamForLoop[192675]
      { d[192647] tmp[192648] tmp[192649] tmp[192650]
        { scopeless
          if(192642 call _cond_test(192613 call collapsedDim d))
          {
            { scopeless
              (192622 call =(192617 call tupHiD d)(192620 call chpl_build_bounded_range 0 0))
            }
          }
          {
            (192633 call =(192628 call tupHiD d)(192632 call tup i))
            (192639 call += i 1)
          }
        }
      }
      label _unused_continueLabel[192652]
      label _breakLabel[192651]
    }
    (192685 return tupHiD)
  } function ArrayViewRankChangeDom[193415](?).chpl_rankChangeConvertHiDTupleToLoD[192693](arg _mt[193475]:_MT[238], arg this[193473]:ArrayViewRankChangeDom[193415](?), arg tup[192691]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    { scopeless
      unknown tupLoD[192703](192701 call * rank(192700 'typeof'(192699 call tup 0)))
      (192706 'end of statement')
    }
    { scopeless
      unknown i[192709] 0
      (192712 'end of statement')
    }
    {
      unknown d[192747] 0
      unknown tmp[192748] "maybe param" "temp"
      (192760 'move' tmp[192748](192758 call chpl_compute_low_param_loop_bound 0(192716 call - downrank 1)))
      unknown tmp[192749] "maybe param" "temp"
      (192770 'move' tmp[192749](192768 call chpl_compute_high_param_loop_bound 0(192765 call - downrank 1)))
      unknown tmp[192750] "maybe param" "temp"
      (192773 'move' tmp[192750] 1)
      ParamForLoop[192775]
      { d[192747] tmp[192748] tmp[192749] tmp[192750]
        { scopeless
          if(192743 call _cond_test(192724 call !(192723 call collapsedDim d)))
          {
            (192734 call =(192729 call tupLoD i)(192733 call tup d))
            (192740 call += i 1)
          }
        }
      }
      label _unused_continueLabel[192752]
      label _breakLabel[192751]
    }
    (192785 return tupLoD)
  } function ArrayViewRankChangeDom[193415](?).downIdxToUpIdx[192793](arg _mt[193479]:_MT[238], arg this[193477]:ArrayViewRankChangeDom[193415](?), arg downIdx[192791]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown upIdx[192799](192797 call * rank idxType)
      (192802 'end of statement')
    }
    { scopeless
      unknown upDim[192805] 0
      (192808 'end of statement')
    }
    {
      unknown downDim[192844] 0
      unknown tmp[192845] "maybe param" "temp"
      (192857 'move' tmp[192845](192855 call chpl_compute_low_param_loop_bound 0(192812 call - downrank 1)))
      unknown tmp[192846] "maybe param" "temp"
      (192867 'move' tmp[192846](192865 call chpl_compute_high_param_loop_bound 0(192862 call - downrank 1)))
      unknown tmp[192847] "maybe param" "temp"
      (192870 'move' tmp[192847] 1)
      ParamForLoop[192872]
      { downDim[192844] tmp[192845] tmp[192846] tmp[192847]
        {
          if(192839 call _cond_test(192820 call !(192819 call collapsedDim downDim)))
          {
            (192830 call =(192825 call upIdx upDim)(192829 call downIdx downDim))
            (192836 call += upDim 1)
          }
        }
      }
      label _unused_continueLabel[192849]
      label _breakLabel[192848]
    }
    if(192894 call _cond_test(192883 call == rank 1))
    {
      { scopeless
        (192889 return(192888 call upIdx 0))
      }
    }
    {
      { scopeless
        (192892 return upIdx)
      }
    }
  } function ArrayViewRankChangeDom[193415](?).dsiSerialWrite[192906](arg _mt[193483]:_MT[238], arg this[193481]:ArrayViewRankChangeDom[193415](?), arg f[192904]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    { scopeless
      unknown first[192909] 1
      (192912 'end of statement')
    }
    {
      unknown _indexOfInterest[192966] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[192967] "expr temp" "temp"
      (192976 'move' _iterator[192967](192974 call _getIterator(192984 call chpl_direct_range_iter 0(192981 call - downrank 1) 1)))
      Defer
      {
        {
          (193000 call _freeIterator _iterator[192967])
        }
      }
      { scopeless type
        (192989 'move' _indexOfInterest[192966](192986 call iteratorIndex _iterator[192967]))
      }
      ForLoop[192968]
      {
        unknown d[192993] "index var" "insert auto destroy"
        (192995 'move' d[192993] _indexOfInterest[192966])
        { scopeless
          if(192962 call _cond_test(192926 call !(192925 call collapsedDim d)))
          {
            if(192945 call _cond_test first)
            {
              (192931 call <~> f "{")
              (192937 call = first 0)
            }
            {
              { scopeless
                (192942 call <~> f ", ")
              }
            }
            (192959 call <~> f(192958 call(192953 call . downDom c"dsiDim") d))
          }
        }
        label _continueLabel[192971]
        _indexOfInterest[192966]
        _iterator[192967]
      }
      label _breakLabel[192972]
    }
    (193009 call <~> f "}")
  } function ArrayViewRankChangeDom[193415](?).dsiMyDist[193016](arg _mt[193487]:_MT[238], arg this[193485]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (193019 return dist)
  } function ArrayViewRankChangeDom[193415](?).dsiTargetLocales[193026](arg _mt[193491]:_MT[238], arg this[193489]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method"
  {
    (193034 return(193033 call(193029 call . downDom c"dsiTargetLocales")))
  } function ArrayViewRankChangeDom[193415](?).dsiHasSingleLocalSubdomain[193041](arg _mt[193495]:_MT[238], arg this[193493]:ArrayViewRankChangeDom[193415](?)) param : _unknown[51] "method" "primary method"
  {
    { scopeless
      (193049 return(193048 call(193044 call . downDom c"dsiHasSingleLocalSubdomain")))
    }
  } function ArrayViewRankChangeDom[193415](?).dsiLocalSubdomain[193060](arg _mt[193499]:_MT[238], arg this[193497]:ArrayViewRankChangeDom[193415](?), arg loc[193057] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    { scopeless
      const dims[193074] "const"(193073 call(193069 call .(193068 call(193063 call . downDom c"dsiLocalSubdomain") loc) c"dims"))
      (193077 'end of statement')
    }
    { scopeless
      const empty[193089] "const"(193087 call chpl__buildDomainRuntimeType defaultDist rank idxType(193085 call chpl__anyStridable dims))
      (193092 'end of statement')
    }
    {
      unknown d[193127] 0
      unknown tmp[193128] "maybe param" "temp"
      (193140 'move' tmp[193128](193138 call chpl_compute_low_param_loop_bound 0(193099 call -(193095 call . dims c"size") 1)))
      unknown tmp[193129] "maybe param" "temp"
      (193153 'move' tmp[193129](193151 call chpl_compute_high_param_loop_bound 0(193145 call -(193147 call . dims c"size") 1)))
      unknown tmp[193130] "maybe param" "temp"
      (193156 'move' tmp[193130] 1)
      ParamForLoop[193158]
      { d[193127] tmp[193128] tmp[193129] tmp[193130]
        {
          if(193121 call _cond_test(193116 call &&(193106 call collapsedDim d)(193115 call(193111 call .(193110 call dims d) c"isEmpty"))))
          {
            { scopeless
              (193119 return empty)
            }
          }
        }
      }
      label _unused_continueLabel[193132]
      label _breakLabel[193131]
    }
    (193173 return(193172 call chpl_rankChangeConvertDownToUp dims rank collapsedDim))
  } function ArrayViewRankChangeDom[193415](?).isRankChangeDomainView[193179](arg _mt[193503]:_MT[238], arg this[193501]:ArrayViewRankChangeDom[193415](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (193182 return 1)
  } function ArrayViewRankChangeDom[193415](?)._getActualDomain[193189](arg _mt[193507]:_MT[238], arg this[193505]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method"
  {
    if(193208 call _cond_test(193194 call chpl__isDomainView downDom))
    {
      (193201 return(193200 call(193196 call . downDom c"_getActualDomain")))
    }
    {
      (193205 return downDom)
    }
  } function ArrayViewRankChangeDom[193415](?).dsiDestroyDom[193217](arg _mt[193511]:_MT[238], arg this[193509]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    if(193231 call _cond_test(193221 call != upDomInst nil[44]))
    {
      { scopeless
        (193229 call _delete_dom(193225 call postfix! upDomInst) 0)
      }
    }
    if(193254 call _cond_test(193239 call != downDomInst nil[44]))
    {
      { scopeless
        (193252 call _delete_dom(193243 call postfix! downDomInst)(193251 call _isPrivatized(193248 call postfix! downDomInst)))
      }
    }
  } function ArrayViewRankChangeDom[193415](?).dsiSupportsPrivatization[193263](arg _mt[193515]:_MT[238], arg this[193513]:ArrayViewRankChangeDom[193415](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      (193273 return(193272 call(193268 call .(193266 call postfix! downDomInst) c"dsiSupportsPrivatization")))
    }
  } function ArrayViewRankChangeDom[193415](?).dsiGetPrivatizeData[193280](arg _mt[193519]:_MT[238], arg this[193517]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method"
  {
    (193292 return(193290 call _build_tuple upDomInst collapsedDim idx distPid distInst downDomPid downDomInst))
  } function ArrayViewRankChangeDom[193415](?).dsiPrivatize[193301](arg _mt[193523]:_MT[238], arg this[193521]:ArrayViewRankChangeDom[193415](?), arg privatizeData[193299]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (193359 return(193305 'new'(_chpl_manager = unmanaged[220](?))(193358 call ArrayViewRankChangeDom(rank =(193308 call . this c"rank"))(idxType =(193314 call . this c"idxType"))(stridable =(193319 call . this c"stridable"))(upDomInst =(193326 call privatizeData 0))(collapsedDim =(193331 call privatizeData 1))(idx =(193336 call privatizeData 2))(distPid =(193341 call privatizeData 3))(distInst =(193346 call privatizeData 4))(downDomPid =(193351 call privatizeData 5))(downDomInst =(193356 call privatizeData 6)))))
  } function ArrayViewRankChangeDom[193415](?).dsiGetReprivatizeData[193366](arg _mt[193527]:_MT[238], arg this[193525]:ArrayViewRankChangeDom[193415](?)) : _unknown[51] "method" "primary method"
  {
    (193374 return(193372 call _build_tuple upDomInst downDomPid downDomInst))
  } function ArrayViewRankChangeDom[193415](?).dsiReprivatize[193383](arg _mt[193531]:_MT[238], arg this[193529]:ArrayViewRankChangeDom[193415](?), arg other[193381]:_any[178](?), arg reprivatizeData[193385]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (193392 call = upDomInst(193391 call reprivatizeData 0))
    (193401 call = downDomPid(193400 call reprivatizeData 1))
    (193409 call = downDomInst(193408 call reprivatizeData 2))
  } BaseRectangularDom forwarding ( )
  function buildIndexCacheHelper[193538](arg arr[193536]:_any[178](?), arg dom[193540]:_any[178](?), arg collapsedDim[193542]:_any[178](?), arg idx[193544]:_any[178](?)) : _unknown[51] "private"
  {
    if(193649 call _cond_test(193549 call chpl__isDROrDRView arr))
    {
      if(193640 call _cond_test(193553 call chpl__isArrayView arr))
      {
        if(193618 call _cond_test(193568 call &&(193559 call(193555 call . arr c"isSliceArrayView"))(193566 call !(193565 call(193561 call . arr c"_containsRCRE")))))
        {
          (193600 return(193599 call(193592 call .(193589 call(193581 call .(193580 call(193576 call .(193575 call(193571 call . arr c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(193585 call . arr c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (193615 return(193614 call(193607 call .(193604 call . arr c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (193637 return(193636 call(193629 call .(193628 call(193624 call . arr c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (193646 return 0)
    }
  }
  type ArrayViewRankChangeArr[195198](?) const _DomPid[193659] "const" const dom[193663] "const" const _ArrPid[193667] "const" const _ArrInstance[193671] "const" const collapsedDim[193675] "const" const idx[193679] "const" const indexCache[193683] "const" const ownsArrInstance[193687] "const" function ArrayViewRankChangeArr[195198](?).init[193695](arg _mt[195202]:_MT[238], arg this[195200]:ArrayViewRankChangeArr[195198](?), arg eltType[193693]:_any[178](?), const arg _DomPid[193697]:_any[178](?), const arg dom[193699]:_any[178](?), const arg _ArrPid[193701]:_any[178](?), const arg _ArrInstance[193703]:_any[178](?), const arg collapsedDim[193705]:_any[178](?), const arg idx[193707]:_any[178](?), const arg ownsArrInstance[193711] :
  bool[10] =
  0) : _unknown[51] "method" "primary method"
  {
    (193722 call(193716 call . super c"init")(eltType = eltType))
    (193730 call =(193726 call . this c"_DomPid") _DomPid)
    (193738 call =(193734 call . this c"dom") dom)
    (193746 call =(193742 call . this c"_ArrPid") _ArrPid)
    (193754 call =(193750 call . this c"_ArrInstance") _ArrInstance)
    (193762 call =(193758 call . this c"collapsedDim") collapsedDim)
    (193770 call =(193766 call . this c"idx") idx)
    (193784 call =(193774 call . this c"indexCache")(193783 call buildIndexCacheHelper _ArrInstance dom collapsedDim idx))
    (193794 call =(193790 call . this c"ownsArrInstance") ownsArrInstance)
  } function ArrayViewRankChangeArr[195198](?).chpl_forwarding_expr9_arr[193808](arg _mt[195206]:_MT[238], arg this[195204]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (193810 return arr)
  } function ArrayViewRankChangeArr[195198](?).idxType[193816](arg _mt[195210]:_MT[238], arg this[195208]:ArrayViewRankChangeArr[195198](?)) type : _unknown[51] "method" "primary method" "no parens"
  {
    { scopeless
      (193822 return(193819 call . dom c"idxType"))
    }
  } function ArrayViewRankChangeArr[195198](?).rank[193829](arg _mt[195214]:_MT[238], arg this[195212]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    { scopeless
      (193835 return(193832 call . dom c"rank"))
    }
  } function ArrayViewRankChangeArr[195198](?).isRankChangeArrayView[193842](arg _mt[195218]:_MT[238], arg this[195216]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (193845 return 1)
  } function ArrayViewRankChangeArr[195198](?).these[193852](arg _mt[195222]:_MT[238], arg this[195220]:ArrayViewRankChangeArr[195198](?)) ref : _unknown[51] "iterator fn" "method" "primary method"
  {
    {
      unknown _indexOfInterest[193863] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[193864] "expr temp" "temp"
      (193873 'move' _iterator[193864](193871 call _getIterator(193859 call chpl__serialViewIter this privDom)))
      Defer
      {
        {
          (193890 call _freeIterator _iterator[193864])
        }
      }
      { scopeless type
        (193879 'move' _indexOfInterest[193863](193876 call iteratorIndex _iterator[193864]))
      }
      ForLoop[193865]
      {
        unknown elem[193883] "index var" "insert auto destroy"
        (193885 'move' elem[193883] _indexOfInterest[193863])
        { scopeless
          (193861 yield elem)
        }
        label _continueLabel[193868]
        _indexOfInterest[193863]
        _iterator[193864]
      }
      label _breakLabel[193869]
    }
  } function ArrayViewRankChangeArr[195198](?).these[193906](arg _mt[195226]:_MT[238], arg this[195224]:ArrayViewRankChangeArr[195198](?), param arg tag[193903] :
  iterKind) ref : _unknown[51] "iterator fn" "method" "primary method"
  {
    Forall {
      induction variables:
        
        unknown i[193965] "index var" "insert auto destroy"
      iterated expressions:
        privDom
      shadow variables:
      other variables
        forall body
      {
        (193961 yield(193958 IfExpr (193932 call shouldUseIndexCache) then
        { scopeless
          (193945 call(193934 call . indexCache c"getDataElem")(193943 call(193938 call . indexCache c"getDataIndex") i))
        } else
        { scopeless
          (193957 call(193947 call . arr c"dsiAccess")(193955 call chpl_rankChangeConvertIdx i collapsedDim idx))
        } ))
      }
    }
  }
  where {
    (193926 call &&(193918 call &&(193913 call == tag(193910 call . iterKind c"standalone"))(193916 call ! localeModelHasSublocales))(193925 'method call resolves' privDom "these" tag))
  } function ArrayViewRankChangeArr[195198](?).these[193978](arg _mt[195230]:_MT[238], arg this[195228]:ArrayViewRankChangeArr[195198](?), param arg tag[193975] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method"
  {
    {
      unknown _indexOfInterest[193999] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[194000] "expr temp" "temp"
      (194009 'move' _iterator[194000](194007 call _getIterator(193994 call(193989 call . privDom c"these") tag)))
      Defer
      {
        {
          (194026 call _freeIterator _iterator[194000])
        }
      }
      { scopeless type
        (194015 'move' _indexOfInterest[193999](194012 call iteratorIndex _iterator[194000]))
      }
      ForLoop[194001]
      {
        unknown followThis[194019] "index var" "insert auto destroy"
        (194021 'move' followThis[194019] _indexOfInterest[193999])
        {
          (193996 yield followThis)
        }
        label _continueLabel[194004]
        _indexOfInterest[193999]
        _iterator[194000]
      }
      label _breakLabel[194005]
    }
  }
  where {
    (193985 call == tag(193982 call . iterKind c"leader"))
  } function ArrayViewRankChangeArr[195198](?).these[194043](arg _mt[195234]:_MT[238], arg this[195232]:ArrayViewRankChangeArr[195198](?), param arg tag[194040] :
  iterKind, arg followThis[194045]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method"
  {
    {
      unknown _indexOfInterest[194107] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[194108] "expr temp" "temp"
      (194117 'move' _iterator[194108](194115 call _getIterator(194062 call(194056 call . privDom c"these") tag followThis)))
      Defer
      {
        {
          (194134 call _freeIterator _iterator[194108])
        }
      }
      { scopeless type
        (194123 'move' _indexOfInterest[194107](194120 call iteratorIndex _iterator[194108]))
      }
      ForLoop[194109]
      {
        unknown i[194127] "index var" "insert auto destroy"
        (194129 'move' i[194127] _indexOfInterest[194107])
        {
          if(194102 call _cond_test(194065 call shouldUseIndexCache))
          {
            { scopeless
              const dataIdx[194073] "const"(194072 call(194067 call . indexCache c"getDataIndex") i)
              (194076 'end of statement')
            }
            (194085 yield(194084 call(194079 call . indexCache c"getDataElem") dataIdx))
          }
          {
            (194099 yield(194098 call(194088 call . arr c"dsiAccess")(194096 call chpl_rankChangeConvertIdx i collapsedDim idx)))
          }
        }
        label _continueLabel[194112]
        _indexOfInterest[194107]
        _iterator[194108]
      }
      label _breakLabel[194113]
    }
  }
  where {
    (194052 call == tag(194049 call . iterKind c"follower"))
  } function ArrayViewRankChangeArr[195198](?).dsiSerialWrite[194149](arg _mt[195238]:_MT[238], arg this[195236]:ArrayViewRankChangeArr[195198](?), arg f[194147]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (194156 call chpl_serialReadWriteRectangular f this privDom)
  } function ArrayViewRankChangeArr[195198](?).dsiSerialRead[194165](arg _mt[195242]:_MT[238], arg this[195240]:ArrayViewRankChangeArr[195198](?), arg f[194163]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (194172 call chpl_serialReadWriteRectangular f this privDom)
  } function ArrayViewRankChangeArr[195198](?).dsiDisplayRepresentation[194179](arg _mt[195246]:_MT[238], arg this[195244]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (194200 call writeln "Rank Change view")
    (194206 call writeln "----------")
    (194211 call writeln "of domain:")
    (194218 call(194214 call . privDom c"dsiDisplayRepresentation"))
    (194223 call writeln "on array:")
    (194230 call(194226 call . arr c"dsiDisplayRepresentation"))
    (194251 call writeln "where the dims are collapsed as follows:")
    (194256 call writeln collapsedDim)
    (194277 call writeln "and the missing indices are:")
    (194282 call writeln idx)
    (194287 call writeln "----------")
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194299](arg _mt[195250]:_MT[238], arg this[195248]:ArrayViewRankChangeArr[195198](?), arg i[194295] ... :
  idxType) ref : _unknown[51] "inline" "method" "primary method"
  {
    (194305 return(194304 call dsiAccess i))
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194318](arg _mt[195254]:_MT[238], arg this[195252]:ArrayViewRankChangeArr[195198](?), arg i[194314] ... :
  idxType) : _unknown[51] "inline" "method" "primary method"
  {
    (194328 return(194327 call dsiAccess i))
  }
  where {
    (194323 call shouldReturnRvalueByValue eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194342](arg _mt[195258]:_MT[238], arg this[195256]:ArrayViewRankChangeArr[195198](?), arg i[194338] ... :
  idxType) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (194352 return(194351 call dsiAccess i))
  }
  where {
    (194347 call shouldReturnRvalueByConstRef eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194362](arg _mt[195262]:_MT[238], arg this[195260]:ArrayViewRankChangeArr[195198](?), arg i[194360]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(194403 call _cond_test(194366 call shouldUseIndexCache))
    {
      { scopeless
        const dataIdx[194374] "const"(194373 call(194368 call . indexCache c"getDataIndex") i)
        (194377 'end of statement')
      }
      (194386 return(194385 call(194380 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194400 return(194399 call(194389 call . arr c"dsiAccess")(194397 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194414](arg _mt[195266]:_MT[238], arg this[195264]:ArrayViewRankChangeArr[195198](?), arg i[194412]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(194459 call _cond_test(194422 call shouldUseIndexCache))
    {
      { scopeless
        const dataIdx[194430] "const"(194429 call(194424 call . indexCache c"getDataIndex") i)
        (194433 'end of statement')
      }
      (194442 return(194441 call(194436 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194456 return(194455 call(194445 call . arr c"dsiAccess")(194453 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194419 call shouldReturnRvalueByValue eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiAccess[194471](arg _mt[195270]:_MT[238], arg this[195268]:ArrayViewRankChangeArr[195198](?), arg i[194469]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    if(194516 call _cond_test(194479 call shouldUseIndexCache))
    {
      { scopeless
        const dataIdx[194487] "const"(194486 call(194481 call . indexCache c"getDataIndex") i)
        (194490 'end of statement')
      }
      (194499 return(194498 call(194493 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194513 return(194512 call(194502 call . arr c"dsiAccess")(194510 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194476 call shouldReturnRvalueByConstRef eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiLocalAccess[194528](arg _mt[195274]:_MT[238], arg this[195272]:ArrayViewRankChangeArr[195198](?), arg i[194526]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      (194542 return(194541 call(194531 call . arr c"dsiLocalAccess")(194539 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  } function ArrayViewRankChangeArr[195198](?).dsiLocalAccess[194551](arg _mt[195278]:_MT[238], arg this[195276]:ArrayViewRankChangeArr[195198](?), arg i[194549]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      (194569 return(194568 call(194558 call . arr c"dsiLocalAccess")(194566 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194556 call shouldReturnRvalueByValue eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiLocalAccess[194579](arg _mt[195282]:_MT[238], arg this[195280]:ArrayViewRankChangeArr[195198](?), arg i[194577]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      (194597 return(194596 call(194586 call . arr c"dsiLocalAccess")(194594 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194584 call shouldReturnRvalueByConstRef eltType)
  } function ArrayViewRankChangeArr[195198](?).dsiBoundsCheck[194607](arg _mt[195286]:_MT[238], arg this[195284]:ArrayViewRankChangeArr[195198](?), arg i[194605]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (194616 return(194615 call(194610 call . privDom c"dsiMember") i))
  } function ArrayViewRankChangeArr[195198](?).dsiHasSingleLocalSubdomain[194623](arg _mt[195290]:_MT[238], arg this[195288]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method"
  {
    { scopeless
      (194631 return(194630 call(194626 call . privDom c"dsiHasSingleLocalSubdomain")))
    }
  } function ArrayViewRankChangeArr[195198](?).dsiLocalSubdomain[194642](arg _mt[195294]:_MT[238], arg this[195292]:ArrayViewRankChangeArr[195198](?), arg loc[194639] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (194651 return(194650 call(194645 call . privDom c"dsiLocalSubdomain") loc))
  } function ArrayViewRankChangeArr[195198](?).dsiSupportsPrivatization[194658](arg _mt[195298]:_MT[238], arg this[195296]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      (194666 return(194665 call(194661 call . _ArrInstance c"dsiSupportsPrivatization")))
    }
  } function ArrayViewRankChangeArr[195198](?).dsiGetPrivatizeData[194673](arg _mt[195302]:_MT[238], arg this[195300]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method"
  {
    (194684 return(194682 call _build_tuple _DomPid dom _ArrPid _ArrInstance collapsedDim idx))
  } function ArrayViewRankChangeArr[195198](?).dsiPrivatize[194693](arg _mt[195306]:_MT[238], arg this[195304]:ArrayViewRankChangeArr[195198](?), arg privatizeData[194691]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (194736 return(194697 'new'(_chpl_manager = unmanaged[220](?))(194735 call ArrayViewRankChangeArr(eltType =(194700 call . this c"eltType"))(_DomPid =(194708 call privatizeData 0))(dom =(194713 call privatizeData 1))(_ArrPid =(194718 call privatizeData 2))(_ArrInstance =(194723 call privatizeData 3))(collapsedDim =(194728 call privatizeData 4))(idx =(194733 call privatizeData 5)))))
  } function ArrayViewRankChangeArr[195198](?).shouldUseIndexCache[194743](arg _mt[195310]:_MT[238], arg this[195308]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method"
  {
    (194749 return(194748 call chpl__isDROrDRView _ArrInstance))
  } function ArrayViewRankChangeArr[195198](?).buildIndexCache[194756](arg _mt[195314]:_MT[238], arg this[195312]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method"
  {
    if(194858 call _cond_test(194760 call shouldUseIndexCache))
    {
      if(194849 call _cond_test(194764 call chpl__isArrayView _ArrInstance))
      {
        if(194827 call _cond_test(194779 call &&(194770 call(194766 call . _ArrInstance c"isSliceArrayView"))(194777 call !(194776 call(194772 call . _ArrInstance c"_containsRCRE")))))
        {
          (194809 return(194808 call(194801 call .(194800 call(194792 call .(194791 call(194787 call .(194786 call(194782 call . _ArrInstance c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(194796 call . _ArrInstance c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (194824 return(194823 call(194816 call .(194813 call . _ArrInstance c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (194846 return(194845 call(194838 call .(194837 call(194833 call . _ArrInstance c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (194855 return 0)
    }
  } function ArrayViewRankChangeArr[195198](?).privDom[194867](arg _mt[195318]:_MT[238], arg this[195316]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(194886 call _cond_test(194872 call _isPrivatized dom))
    {
      (194879 return(194878 call chpl_getPrivatizedCopy(194875 'typeof' dom) _DomPid))
    }
    {
      (194883 return dom)
    }
  } function ArrayViewRankChangeArr[195198](?).arr[194895](arg _mt[195322]:_MT[238], arg this[195320]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(194914 call _cond_test(194900 call _isPrivatized _ArrInstance))
    {
      (194907 return(194906 call chpl_getPrivatizedCopy(194903 'typeof' _ArrInstance) _ArrPid))
    }
    {
      (194911 return _ArrInstance)
    }
  } function ArrayViewRankChangeArr[195198](?).dsiGetBaseDom[194923](arg _mt[195326]:_MT[238], arg this[195324]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (194926 return dom)
  } function ArrayViewRankChangeArr[195198](?)._getActualArray[194933](arg _mt[195330]:_MT[238], arg this[195328]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method"
  {
    if(194952 call _cond_test(194938 call chpl__isArrayView arr))
    {
      (194945 return(194944 call(194940 call . arr c"_getActualArray")))
    }
    {
      (194949 return arr)
    }
  } function ArrayViewRankChangeArr[195198](?)._containsRCRE[194961](arg _mt[195334]:_MT[238], arg this[195332]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method"
  {
    if(194996 call _cond_test(194966 call chpl__isArrayView arr))
    {
      (194989 return(194987 call ||(194979 call ||(194972 call(194968 call . arr c"isRankChangeArrayView"))(194978 call(194974 call . arr c"isReindexArrayView")))(194986 call(194982 call . arr c"_containsRCRE"))))
    }
    {
      (194993 return 0)
    }
  } function ArrayViewRankChangeArr[195198](?)._getRCREView[195005](arg _mt[195338]:_MT[238], arg this[195336]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method"
  {
    (195008 return this)
  } function ArrayViewRankChangeArr[195198](?).dsiElementInitializationComplete[195015](arg _mt[195342]:_MT[238], arg this[195340]:ArrayViewRankChangeArr[195198](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
  } function ArrayViewRankChangeArr[195198](?).dsiDestroyArr[195026](arg _mt[195346]:_MT[238], arg this[195344]:ArrayViewRankChangeArr[195198](?), arg deinitElts[195023] :
  bool[10]) : _unknown[51] "method" "primary method" "method overrides"
  {
    if(195039 call _cond_test ownsArrInstance)
    {
      (195036 call _delete_arr _ArrInstance(195035 call _isPrivatized _ArrInstance))
    }
  } function ArrayViewRankChangeArr[195198](?).doiCanBulkTransferRankChange[195048](arg _mt[195350]:_MT[238], arg this[195348]:ArrayViewRankChangeArr[195198](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    { scopeless
      (195056 return(195055 call(195051 call . arr c"doiCanBulkTransferRankChange")))
    }
  } function ArrayViewRankChangeArr[195198](?).doiBulkTransferFromKnown[195065](arg _mt[195354]:_MT[238], arg this[195352]:ArrayViewRankChangeArr[195198](?), arg destDom[195063]:_any[178](?), arg srcClass[195067]:_any[178](?), arg srcDom[195069]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    { scopeless
      const shifted[195108] "const"(195107 call chpl_rankChangeConvertDom(195087 call(195083 call . destDom c"dims"))(195090 call . destDom c"rank")(195097 call .(195094 call . this c"dom") c"collapsedDim")(195104 call .(195101 call . this c"dom") c"idx"))
      (195111 'end of statement')
    }
    (195123 return(195122 call chpl__bulkTransferArray(195115 call . this c"arr") shifted srcClass srcDom))
  }
  where {
    (195080 call(195076 call .(195073 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  } function ArrayViewRankChangeArr[195198](?).doiBulkTransferToKnown[195133](arg _mt[195358]:_MT[238], arg this[195356]:ArrayViewRankChangeArr[195198](?), arg srcDom[195131]:_any[178](?), arg destClass[195135]:_any[178](?), arg destDom[195137]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    { scopeless
      const shifted[195176] "const"(195175 call chpl_rankChangeConvertDom(195155 call(195151 call . srcDom c"dims"))(195158 call . srcDom c"rank")(195165 call .(195162 call . this c"dom") c"collapsedDim")(195172 call .(195169 call . this c"dom") c"idx"))
      (195179 'end of statement')
    }
    (195191 return(195190 call chpl__bulkTransferArray destClass destDom(195186 call . this c"arr") shifted))
  }
  where {
    (195148 call(195144 call .(195141 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  } AbsBaseArr forwarding ( )
  function chpl_rankChangeConvertIdx[195367](arg i[195364] :
  integral, arg collapsedDim[195369]:_any[178](?), arg idx[195371]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown downrank[195377] "param"(195374 call . collapsedDim c"size")
      (195380 'end of statement')
    }
    { scopeless
      unknown ind[195383] idx
      (195386 'end of statement')
    }
    { scopeless
      unknown j[195388] 0
      (195391 'end of statement')
    }
    {
      unknown d[195424] 0
      unknown tmp[195425] "maybe param" "temp"
      (195437 'move' tmp[195425](195435 call chpl_compute_low_param_loop_bound 0(195395 call - downrank 1)))
      unknown tmp[195426] "maybe param" "temp"
      (195447 'move' tmp[195426](195445 call chpl_compute_high_param_loop_bound 0(195442 call - downrank 1)))
      unknown tmp[195427] "maybe param" "temp"
      (195450 'move' tmp[195427] 1)
      ParamForLoop[195452]
      { d[195424] tmp[195425] tmp[195426] tmp[195427]
        {
          if(195419 call _cond_test(195403 call !(195402 call collapsedDim d)))
          {
            (195410 call =(195408 call ind d) i)
            (195416 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195429]
      label _breakLabel[195428]
    }
    (195467 call assert(195464 call == j 1))
    (195470 return ind)
  }
  function chpl_rankChangeConvertIdx[195478](arg i[195476]:_any[178](?), arg collapsedDim[195480]:_any[178](?), arg idx[195482]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown downrank[195488] "param"(195485 call . collapsedDim c"size")
      (195491 'end of statement')
    }
    { scopeless
      unknown ind[195494] idx
      (195497 'end of statement')
    }
    { scopeless
      unknown j[195499] 0
      (195502 'end of statement')
    }
    {
      unknown d[195538] 0
      unknown tmp[195539] "maybe param" "temp"
      (195551 'move' tmp[195539](195549 call chpl_compute_low_param_loop_bound 0(195506 call - downrank 1)))
      unknown tmp[195540] "maybe param" "temp"
      (195561 'move' tmp[195540](195559 call chpl_compute_high_param_loop_bound 0(195556 call - downrank 1)))
      unknown tmp[195541] "maybe param" "temp"
      (195564 'move' tmp[195541] 1)
      ParamForLoop[195566]
      { d[195538] tmp[195539] tmp[195540] tmp[195541]
        {
          if(195533 call _cond_test(195514 call !(195513 call collapsedDim d)))
          {
            (195524 call =(195519 call ind d)(195523 call i j))
            (195530 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195543]
      label _breakLabel[195542]
    }
    (195576 return ind)
  }
  function chpl_rankChangeConvertIdxHiDToLoD[195584](arg i[195582]:_any[178](?), arg collapsedDim[195586]:_any[178](?), arg idx[195588]:_any[178](?), param arg rank[195590]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown downrank[195596] "param"(195593 call . collapsedDim c"size")
      (195599 'end of statement')
    }
    { scopeless
      unknown ind[195609](195607 call * rank(195606 'typeof'(195605 call i 0)))
      (195612 'end of statement')
    }
    { scopeless
      unknown j[195614] 0
      (195617 'end of statement')
    }
    {
      unknown d[195653] 0
      unknown tmp[195654] "maybe param" "temp"
      (195666 'move' tmp[195654](195664 call chpl_compute_low_param_loop_bound 0(195621 call - downrank 1)))
      unknown tmp[195655] "maybe param" "temp"
      (195676 'move' tmp[195655](195674 call chpl_compute_high_param_loop_bound 0(195671 call - downrank 1)))
      unknown tmp[195656] "maybe param" "temp"
      (195679 'move' tmp[195656] 1)
      ParamForLoop[195681]
      { d[195653] tmp[195654] tmp[195655] tmp[195656]
        {
          if(195648 call _cond_test(195629 call !(195628 call collapsedDim d)))
          {
            (195639 call =(195634 call ind j)(195638 call i d))
            (195645 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195658]
      label _breakLabel[195657]
    }
    if(195703 call _cond_test(195692 call == rank 1))
    {
      { scopeless
        (195698 return(195697 call ind 0))
      }
    }
    {
      { scopeless
        (195701 return ind)
      }
    }
  }
  function chpl_rankChangeConvertDownToUp[195715](arg dims[195713]:_any[178](?), param arg uprank[195717]:_any[178](?), arg collapsedDim[195719]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown ranges[195729](195727 call * uprank(195726 'typeof'(195725 call dims 0)))
      (195732 'end of statement')
    }
    { scopeless
      unknown j[195735] 0
      (195738 'end of statement')
    }
    {
      unknown d[195777] 0
      unknown tmp[195778] "maybe param" "temp"
      (195790 'move' tmp[195778](195788 call chpl_compute_low_param_loop_bound 0(195745 call -(195741 call . dims c"size") 1)))
      unknown tmp[195779] "maybe param" "temp"
      (195803 'move' tmp[195779](195801 call chpl_compute_high_param_loop_bound 0(195795 call -(195797 call . dims c"size") 1)))
      unknown tmp[195780] "maybe param" "temp"
      (195806 'move' tmp[195780] 1)
      ParamForLoop[195808]
      { d[195777] tmp[195778] tmp[195779] tmp[195780]
        {
          if(195772 call _cond_test(195753 call !(195752 call collapsedDim d)))
          {
            (195763 call =(195758 call ranges j)(195762 call dims d))
            (195769 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195782]
      label _breakLabel[195781]
    }
    (195822 return(195820 call chpl__buildDomainExpr(195818 'expand_tuple' ranges)))
  }
  function chpl_rankChangeConvertDom[195830](arg dims[195828]:_any[178](?), param arg uprank[195832]:_any[178](?), arg collapsedDim[195834]:_any[178](?), arg idx[195836]:_any[178](?)) : _unknown[51] "inline"
  {
    { scopeless
      unknown downrank[195842] "param"(195839 call . collapsedDim c"size")
      (195845 'end of statement')
    }
    if(195903 call _cond_test(195852 call != uprank(195849 call . dims c"size")))
    {
      { scopeless
        (195901 call compilerError "Called chpl_rankChangeConvertDom with incorrect rank. Got "(195878 call _cast string[26](195874 call . dims c"size")) ", expecting "(195899 call _cast string[26] uprank))
      }
    }
    { scopeless
      unknown ranges[195916](195914 call * downrank(195913 'typeof'(195912 call dims 0)))
      (195919 'end of statement')
    }
    { scopeless
      unknown j[195921] 0
      (195924 'end of statement')
    }
    {
      unknown d[195978] 0
      unknown tmp[195979] "maybe param" "temp"
      (195991 'move' tmp[195979](195989 call chpl_compute_low_param_loop_bound 0(195928 call - downrank 1)))
      unknown tmp[195980] "maybe param" "temp"
      (196001 'move' tmp[195980](195999 call chpl_compute_high_param_loop_bound 0(195996 call - downrank 1)))
      unknown tmp[195981] "maybe param" "temp"
      (196004 'move' tmp[195981] 1)
      ParamForLoop[196006]
      { d[195978] tmp[195979] tmp[195980] tmp[195981]
        {
          if(195973 call _cond_test(195936 call !(195935 call collapsedDim d)))
          {
            (195946 call =(195941 call ranges d)(195945 call dims j))
            (195952 call += j 1)
          }
          {
            (195969 call =(195958 call ranges d)(195967 call chpl_build_bounded_range(195962 call idx d)(195966 call idx d)))
          }
        }
      }
      label _unused_continueLabel[195983]
      label _breakLabel[195982]
    }
    (196020 return(196018 call chpl__buildDomainExpr(196016 'expand_tuple' ranges)))
  }
}