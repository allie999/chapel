AST dump for ExternalArray after pass insertWideReferences.
Module use list: ChapelStandard HaltWrappers 

{
  function chpl__init_ExternalArray[415970]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524245 return _void[55])
  }
  type chpl_opaque_array[188575] val _pid[188560]:int(64)[13] const-val _instance[188565]:c_void_ptr[149] const-val _unowned[188570]:bool[10]
  function chpl_call_free_func[188662](const in arg func[188659]:c_void_ptr[149], const in arg elts[188665]:c_void_ptr[149]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (524108 return _void[55])
  }
  function cleanupOpaqueArray[189647](const  ref arg arr[189644]:chpl_opaque_array[188575]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1487217]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2374195]:c_void_ptr[149] "temp"
    (1487221 'move' tmp[2374195](2323951 '.v' arr[189644] _instance[188565]))
    (2374198 'move' coerce_tmp[1487217] tmp[2374195])
    val call_tmp[2282853]:BaseArr[149541] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282855 'move' call_tmp[2282853](2282857 'cast' BaseArr[149541] coerce_tmp[1487217]))
    val coerce_tmp[1487253]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487258 'move' coerce_tmp[1487253](1487255 'cast' object[22] call_tmp[2282853]))
    const-val call_tmp[2061418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061420 'move' call_tmp[2061418](2061422 'ptr_neq' coerce_tmp[1487253] nil[44]))
    if call_tmp[2061418]
    {
      const-val coerce_tmp[1488115]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2374201]:bool[10] "temp"
      (1488119 'move' tmp[2374201](2323957 '.v' arr[189644] _unowned[188570]))
      (2374204 'move' coerce_tmp[1488115] tmp[2374201])
      const-val call_tmp[2282868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2282870 'move' call_tmp[2282868](2282872 '!' coerce_tmp[1488115]))
      if call_tmp[2282868]
      {
        const-val call_tmp[2282878]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
        (2282880 'move' call_tmp[2282878](2282882 '_wide_get_locale' call_tmp[2282853]))
        val isdirect[2282887]:bool[10] "temp"
        (2282889 'move' isdirect[2282887](2282892 call chpl_doDirectExecuteOn[187423] call_tmp[2282878]))
        if isdirect[2282887]
        {
          const-val tmp[2397222]:__wide_BaseArr[2337822] "temp"
          (2397225 'move' tmp[2397222] call_tmp[2282853])
          (2282897 call on_fn[1487562] tmp[2397222] 1)
        }
        {
          val _args_foron_fn[2282901]:_class_localson_fn[2044130] "temp"
          (2282903 'move' _args_foron_fn[2282901](2282905 'stack allocate class' _class_localson_fn[2044130]))
          (2282907 '.=' _args_foron_fn[2282901] _0_tmp[2044133] call_tmp[2282878])
          val tmp[2397228]:__wide_BaseArr[2337822] "temp"
          (2397231 'move' tmp[2397228] call_tmp[2282853])
          (2282911 '.=' _args_foron_fn[2282901] _1__instance[2044135] tmp[2397228])
          (2282915 '.=' _args_foron_fn[2282901] _2_deinitElts[2044137] 1)
          val _args_vforon_fn[2282919]:c_void_ptr[149] "temp"
          (2282921 'move' _args_vforon_fn[2282919](2282923 'cast_to_void_star' _args_foron_fn[2282901]))
          val _args_sizeon_fn[2282925]:int(64)[13] "temp"
          (2282927 'move' _args_sizeon_fn[2282925](2282929 'sizeof_bundle' _class_localson_fn[2044130]))
          on(2282932 call wrapon_fn[2044170] call_tmp[2282878] _args_vforon_fn[2282919] _args_sizeon_fn[2282925] _args_foron_fn[2282901])
        }
      }
      {
      }
    }
    (524243 return _void[55])
  }
}