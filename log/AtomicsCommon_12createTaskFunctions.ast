AST dump for AtomicsCommon after pass createTaskFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[415850]() : void[4] "insert line file info" "module init"
  {
    (506767 return _void[55])
  }
  function atomic_refcnt[52099].inc[51959](arg _mt[52103]:_MT[238], arg this[52101]:atomic_refcnt[52099], arg cnt[51956] :
  1 =
  1) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[609098] "expr temp" "maybe param" "maybe type" "temp"
    (609101 'move' call_tmp[609098](51983 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609098]
    {
      unknown call_tmp[609105] "expr temp" "maybe param" "maybe type" "temp"
      (609108 'move' call_tmp[609105](357108 call _cnt _mt[243] this[52101]))
      (51973 call(51963 call (partial) add _mt[243] call_tmp[609105]) cnt[51956](order = relaxed[186964]))
    }
    {
      unknown call_tmp[609114] "expr temp" "maybe param" "maybe type" "temp"
      (609117 'move' call_tmp[609114](357114 call _cnt _mt[243] this[52101]))
      (51981 call(51976 call (partial) add _mt[243] call_tmp[609114]) cnt[51956])
    }
    (506723 return _void[55])
  }
  function atomic_refcnt[52099].dec[51994](arg _mt[52107]:_MT[238], arg this[52105]:atomic_refcnt[52099]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506727] "RVV" "temp"
    unknown got[52004] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[540610] "maybe param" "maybe type" "temp"
    (540618 'move' type_tmp[540610](540616 call int(64)[13] 64))
    (540612 'init var split decl' got[52004] type_tmp[540610])
    (52007 'end of statement')
    unknown call_tmp[609121] "expr temp" "maybe param" "maybe type" "temp"
    (609124 'move' call_tmp[609121](52071 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[609121]
    {
      unknown call_tmp[609128] "expr temp" "maybe param" "maybe type" "temp"
      (609131 'move' call_tmp[609128](357119 call _cnt _mt[243] this[52105]))
      unknown call_tmp[609135] "maybe param" "maybe type" "temp"
      (609138 'move' call_tmp[609135](52022 call(52012 call (partial) fetchSub _mt[243] call_tmp[609128]) 1(order = release[186960])))
      (540620 'init var split init' got[52004] call_tmp[609135] type_tmp[540610])
      (474444 'end of statement' got[52004])
      unknown call_tmp[609140] "expr temp" "maybe param" "maybe type" "temp"
      (609143 'move' call_tmp[609140](52029 call == got[52004] 1))
      unknown call_tmp[609145] "expr temp" "maybe param" "maybe type" "temp"
      (609148 'move' call_tmp[609145](52043 call _cond_test call_tmp[609140]))
      if call_tmp[609145]
      {
        (52037 call atomicFence acquire[186962])
        (474446 'end of statement')
        unknown call_tmp[609150] "expr temp" "maybe param" "maybe type" "temp"
        (609153 'move' call_tmp[609150](506732 call int(64)[13] 64))
        (506735 'move' ret[506727](506734 'coerce' 0 call_tmp[609150]))
        gotoReturn _end_dec[506725] _end_dec[506725]
      }
      unknown call_tmp[609155] "expr temp" "maybe param" "maybe type" "temp"
      (609158 'move' call_tmp[609155](52049 call - got[52004] 1))
      unknown call_tmp[609160] "expr temp" "maybe param" "maybe type" "temp"
      (609163 'move' call_tmp[609160](506740 call int(64)[13] 64))
      (506743 'move' ret[506727](506742 'coerce' call_tmp[609155] call_tmp[609160]))
      gotoReturn _end_dec[506725] _end_dec[506725]
      (474448 'end of statement' got[52004])
    }
    {
      unknown call_tmp[609167] "expr temp" "maybe param" "maybe type" "temp"
      (609170 'move' call_tmp[609167](357126 call _cnt _mt[243] this[52105]))
      unknown call_tmp[609174] "maybe param" "maybe type" "temp"
      (609177 'move' call_tmp[609174](52060 call(52055 call (partial) fetchSub _mt[243] call_tmp[609167]) 1))
      (540623 'init var split init' got[52004] call_tmp[609174] type_tmp[540610])
      (474450 'end of statement' got[52004])
      unknown call_tmp[609179] "expr temp" "maybe param" "maybe type" "temp"
      (609182 'move' call_tmp[609179](52067 call - got[52004] 1))
      unknown call_tmp[609184] "expr temp" "maybe param" "maybe type" "temp"
      (609187 'move' call_tmp[609184](506748 call int(64)[13] 64))
      (506751 'move' ret[506727](506750 'coerce' call_tmp[609179] call_tmp[609184]))
      gotoReturn _end_dec[506725] _end_dec[506725]
      (474452 'end of statement' got[52004])
    }
    label _end_dec[506725]
    (506729 return ret[506727])
  }
  { scopeless type
    (51999 call int(64)[13] 64)
  }
  function atomic_refcnt[52099].read[52080](arg _mt[52111]:_MT[238], arg this[52109]:atomic_refcnt[52099]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[506757] "RVV" "temp"
    unknown call_tmp[609191] "expr temp" "maybe param" "maybe type" "temp"
    (609194 'move' call_tmp[609191](357131 call _cnt _mt[243] this[52109]))
    unknown call_tmp[609198] "expr temp" "maybe param" "maybe type" "temp"
    (609201 'move' call_tmp[609198](52091 call(52087 call (partial) read _mt[243] call_tmp[609191])))
    unknown call_tmp[609203] "expr temp" "maybe param" "maybe type" "temp"
    (609206 'move' call_tmp[609203](506762 call int(64)[13] 64))
    (506765 'move' ret[506757](506764 'coerce' call_tmp[609198] call_tmp[609203]))
    (506759 return ret[506757])
  }
  { scopeless type
    (52085 call int(64)[13] 64)
  }
  function atomic_refcnt[52099]._cnt[765286](arg _mt[765288]:_MT[238], ref arg this[765290]:atomic_refcnt[52099]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[765300] "RVV" "temp"
    unknown call_tmp[765307] "expr temp" "maybe param" "maybe type" "temp"
    (765310 'move' call_tmp[765307](765294 '.' this[765290] c"_cnt"))
    (765305 'move' ret[765300](765304 'addr of' call_tmp[765307]))
    (765302 return ret[765300])
  }
  function atomic_refcnt[52099].init[765312](arg _mt[765314]:_MT[238], ref arg this[765315]:atomic_refcnt[52099], in arg _cnt[765318] :
  (765321 call chpl__processorAtomicType int(64)[13]) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (765334 'init field' this[765315] c"_cnt" _cnt[765318])
    (765338 return _void[55])
  }
  function atomic_refcnt[52099].init=[765340](arg _mt[765343]:_MT[238], ref arg this[765344]:atomic_refcnt[52099], arg other[765345]:atomic_refcnt[52099]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown call_tmp[765375] "maybe param" "maybe type" "temp"
    (765378 'move' call_tmp[765375](765353 call _cnt _mt[243] other[765345]))
    unknown call_tmp[765380] "maybe param" "maybe type" "temp"
    (765383 'move' call_tmp[765380](765362 call chpl__processorAtomicType int(64)[13]))
    unknown tmp[765359] "temp"
    (765364 'init var' tmp[765359] call_tmp[765375] call_tmp[765380])
    (765366 'init field' this[765344] c"_cnt" tmp[765359])
    (765370 'end of statement')
    (765371 return _void[55])
  }
  function atomic_refcnt[52099].deinit[765385](arg _mt[765387]:_MT[238], arg this[765389]:atomic_refcnt[52099]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (765397 return _void[55])
  }
  function atomic_refcnt[52099].writeThis[765399](arg _mt[765403]:_MT[238], arg this[765401]:atomic_refcnt[52099], arg f[765402]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765408 call writeThisDefaultImpl f[765402] this[765401])
    (765413 return _void[55])
  }
  function atomic_refcnt[52099].readThis[765415](arg _mt[765419]:_MT[238], arg this[765417]:atomic_refcnt[52099], arg f[765418]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (765423 call readThisDefaultImpl f[765418] this[765417])
    (765429 return _void[55])
  }
  function chpl_fields_are_comparable[765443](arg _arg1[765445]:atomic_refcnt[52099], arg _arg2[765446]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765464]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765471] "expr temp" "maybe param" "maybe type" "temp"
    (765474 'move' call_tmp[765471](765449 call _cnt _mt[243] _arg1[765445]))
    unknown call_tmp[765476] "expr temp" "maybe param" "maybe type" "temp"
    (765479 'move' call_tmp[765476](765453 call _cnt _mt[243] _arg2[765446]))
    unknown call_tmp[765481] "expr temp" "maybe param" "maybe type" "temp"
    (765484 'move' call_tmp[765481](765457 'call resolves' c"==" call_tmp[765471] call_tmp[765476]))
    (765469 'move' ret[765464](765468 'deref' call_tmp[765481]))
    (765466 return ret[765464])
  }
  function ==[765431](arg _arg1[765433]:atomic_refcnt[52099], arg _arg2[765434]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765513]:bool[10] "RVV" "temp"
    unknown call_tmp[765525] "expr temp" "maybe param" "maybe type" "temp"
    (765528 'move' call_tmp[765525](765492 call _cnt _mt[243] _arg1[765433]))
    unknown call_tmp[765530] "expr temp" "maybe param" "maybe type" "temp"
    (765533 'move' call_tmp[765530](765496 call _cnt _mt[243] _arg2[765434]))
    unknown call_tmp[765535] "expr temp" "maybe param" "maybe type" "temp"
    (765538 'move' call_tmp[765535](765500 call != call_tmp[765525] call_tmp[765530]))
    if call_tmp[765535]
    {
      (765518 'move' ret[765513](765517 'deref' 0))
      gotoReturn _end_==[765511] _end_==[765511]
    }
    (765523 'move' ret[765513](765522 'deref' 1))
    label _end_==[765511]
    (765515 return ret[765513])
  }
  where {
    unknown call_tmp[765540] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765543 'move' call_tmp[765540](765437 'typeof' _arg1[765433]))
    unknown call_tmp[765545] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765548 'move' call_tmp[765545](765439 'typeof' _arg2[765434]))
    unknown call_tmp[765550] "expr temp" "maybe param" "maybe type" "temp"
    (765553 'move' call_tmp[765550](765441 call == call_tmp[765540] call_tmp[765545]))
    unknown call_tmp[765555] "expr temp" "maybe param" "maybe type" "temp"
    (765558 'move' call_tmp[765555](765486 call chpl_fields_are_comparable[765443] _arg1[765433] _arg2[765434]))
    (765490 '&' call_tmp[765550] call_tmp[765555])
  }
  function chpl_fields_are_comparable[765572](arg _arg1[765574]:atomic_refcnt[52099], arg _arg2[765575]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765593]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765600] "expr temp" "maybe param" "maybe type" "temp"
    (765603 'move' call_tmp[765600](765578 call _cnt _mt[243] _arg1[765574]))
    unknown call_tmp[765605] "expr temp" "maybe param" "maybe type" "temp"
    (765608 'move' call_tmp[765605](765582 call _cnt _mt[243] _arg2[765575]))
    unknown call_tmp[765610] "expr temp" "maybe param" "maybe type" "temp"
    (765613 'move' call_tmp[765610](765586 'call resolves' c"!=" call_tmp[765600] call_tmp[765605]))
    (765598 'move' ret[765593](765597 'deref' call_tmp[765610]))
    (765595 return ret[765593])
  }
  function !=[765560](arg _arg1[765562]:atomic_refcnt[52099], arg _arg2[765563]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765642]:bool[10] "RVV" "temp"
    unknown call_tmp[765654] "expr temp" "maybe param" "maybe type" "temp"
    (765657 'move' call_tmp[765654](765621 call _cnt _mt[243] _arg1[765562]))
    unknown call_tmp[765659] "expr temp" "maybe param" "maybe type" "temp"
    (765662 'move' call_tmp[765659](765625 call _cnt _mt[243] _arg2[765563]))
    unknown call_tmp[765664] "expr temp" "maybe param" "maybe type" "temp"
    (765667 'move' call_tmp[765664](765629 call != call_tmp[765654] call_tmp[765659]))
    if call_tmp[765664]
    {
      (765647 'move' ret[765642](765646 'deref' 1))
      gotoReturn _end_!=[765640] _end_!=[765640]
    }
    (765652 'move' ret[765642](765651 'deref' 0))
    label _end_!=[765640]
    (765644 return ret[765642])
  }
  where {
    unknown call_tmp[765669] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765672 'move' call_tmp[765669](765566 'typeof' _arg1[765562]))
    unknown call_tmp[765674] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765677 'move' call_tmp[765674](765568 'typeof' _arg2[765563]))
    unknown call_tmp[765679] "expr temp" "maybe param" "maybe type" "temp"
    (765682 'move' call_tmp[765679](765570 call == call_tmp[765669] call_tmp[765674]))
    unknown call_tmp[765684] "expr temp" "maybe param" "maybe type" "temp"
    (765687 'move' call_tmp[765684](765615 call chpl_fields_are_comparable[765572] _arg1[765562] _arg2[765563]))
    (765619 '&' call_tmp[765679] call_tmp[765684])
  }
  function chpl_fields_are_comparable[765701](arg _arg1[765703]:atomic_refcnt[52099], arg _arg2[765704]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765722]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765729] "expr temp" "maybe param" "maybe type" "temp"
    (765732 'move' call_tmp[765729](765707 call _cnt _mt[243] _arg1[765703]))
    unknown call_tmp[765734] "expr temp" "maybe param" "maybe type" "temp"
    (765737 'move' call_tmp[765734](765711 call _cnt _mt[243] _arg2[765704]))
    unknown call_tmp[765739] "expr temp" "maybe param" "maybe type" "temp"
    (765742 'move' call_tmp[765739](765715 'call resolves' c"<" call_tmp[765729] call_tmp[765734]))
    (765727 'move' ret[765722](765726 'deref' call_tmp[765739]))
    (765724 return ret[765722])
  }
  function <[765689](arg _arg1[765691]:atomic_refcnt[52099], arg _arg2[765692]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765786]:bool[10] "RVV" "temp"
    unknown call_tmp[765803] "expr temp" "maybe param" "maybe type" "temp"
    (765806 'move' call_tmp[765803](765750 call _cnt _mt[243] _arg1[765691]))
    unknown call_tmp[765808] "expr temp" "maybe param" "maybe type" "temp"
    (765811 'move' call_tmp[765808](765754 call _cnt _mt[243] _arg2[765692]))
    unknown call_tmp[765813] "expr temp" "maybe param" "maybe type" "temp"
    (765816 'move' call_tmp[765813](765758 call < call_tmp[765803] call_tmp[765808]))
    if call_tmp[765813]
    {
      (765791 'move' ret[765786](765790 'deref' 1))
      gotoReturn _end_<[765784] _end_<[765784]
    }
    unknown call_tmp[765818] "expr temp" "maybe param" "maybe type" "temp"
    (765821 'move' call_tmp[765818](765764 call _cnt _mt[243] _arg1[765691]))
    unknown call_tmp[765823] "expr temp" "maybe param" "maybe type" "temp"
    (765826 'move' call_tmp[765823](765768 call _cnt _mt[243] _arg2[765692]))
    unknown call_tmp[765828] "expr temp" "maybe param" "maybe type" "temp"
    (765831 'move' call_tmp[765828](765772 call > call_tmp[765818] call_tmp[765823]))
    if call_tmp[765828]
    {
      (765796 'move' ret[765786](765795 'deref' 0))
      gotoReturn _end_<[765784] _end_<[765784]
    }
    (765801 'move' ret[765786](765800 'deref' 0))
    label _end_<[765784]
    (765788 return ret[765786])
  }
  where {
    unknown call_tmp[765833] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765836 'move' call_tmp[765833](765695 'typeof' _arg1[765691]))
    unknown call_tmp[765838] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (765841 'move' call_tmp[765838](765697 'typeof' _arg2[765692]))
    unknown call_tmp[765843] "expr temp" "maybe param" "maybe type" "temp"
    (765846 'move' call_tmp[765843](765699 call == call_tmp[765833] call_tmp[765838]))
    unknown call_tmp[765848] "expr temp" "maybe param" "maybe type" "temp"
    (765851 'move' call_tmp[765848](765744 call chpl_fields_are_comparable[765701] _arg1[765691] _arg2[765692]))
    (765748 '&' call_tmp[765843] call_tmp[765848])
  }
  function chpl_fields_are_comparable[765865](arg _arg1[765867]:atomic_refcnt[52099], arg _arg2[765868]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[765886]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[765893] "expr temp" "maybe param" "maybe type" "temp"
    (765896 'move' call_tmp[765893](765871 call _cnt _mt[243] _arg1[765867]))
    unknown call_tmp[765898] "expr temp" "maybe param" "maybe type" "temp"
    (765901 'move' call_tmp[765898](765875 call _cnt _mt[243] _arg2[765868]))
    unknown call_tmp[765903] "expr temp" "maybe param" "maybe type" "temp"
    (765906 'move' call_tmp[765903](765879 'call resolves' c"<=" call_tmp[765893] call_tmp[765898]))
    (765891 'move' ret[765886](765890 'deref' call_tmp[765903]))
    (765888 return ret[765886])
  }
  function <=[765853](arg _arg1[765855]:atomic_refcnt[52099], arg _arg2[765856]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[765950]:bool[10] "RVV" "temp"
    unknown call_tmp[765967] "expr temp" "maybe param" "maybe type" "temp"
    (765970 'move' call_tmp[765967](765914 call _cnt _mt[243] _arg1[765855]))
    unknown call_tmp[765972] "expr temp" "maybe param" "maybe type" "temp"
    (765975 'move' call_tmp[765972](765918 call _cnt _mt[243] _arg2[765856]))
    unknown call_tmp[765977] "expr temp" "maybe param" "maybe type" "temp"
    (765980 'move' call_tmp[765977](765922 call < call_tmp[765967] call_tmp[765972]))
    if call_tmp[765977]
    {
      (765955 'move' ret[765950](765954 'deref' 1))
      gotoReturn _end_<=[765948] _end_<=[765948]
    }
    unknown call_tmp[765982] "expr temp" "maybe param" "maybe type" "temp"
    (765985 'move' call_tmp[765982](765928 call _cnt _mt[243] _arg1[765855]))
    unknown call_tmp[765987] "expr temp" "maybe param" "maybe type" "temp"
    (765990 'move' call_tmp[765987](765932 call _cnt _mt[243] _arg2[765856]))
    unknown call_tmp[765992] "expr temp" "maybe param" "maybe type" "temp"
    (765995 'move' call_tmp[765992](765936 call > call_tmp[765982] call_tmp[765987]))
    if call_tmp[765992]
    {
      (765960 'move' ret[765950](765959 'deref' 0))
      gotoReturn _end_<=[765948] _end_<=[765948]
    }
    (765965 'move' ret[765950](765964 'deref' 1))
    label _end_<=[765948]
    (765952 return ret[765950])
  }
  where {
    unknown call_tmp[765997] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766000 'move' call_tmp[765997](765859 'typeof' _arg1[765855]))
    unknown call_tmp[766002] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766005 'move' call_tmp[766002](765861 'typeof' _arg2[765856]))
    unknown call_tmp[766007] "expr temp" "maybe param" "maybe type" "temp"
    (766010 'move' call_tmp[766007](765863 call == call_tmp[765997] call_tmp[766002]))
    unknown call_tmp[766012] "expr temp" "maybe param" "maybe type" "temp"
    (766015 'move' call_tmp[766012](765908 call chpl_fields_are_comparable[765865] _arg1[765855] _arg2[765856]))
    (765912 '&' call_tmp[766007] call_tmp[766012])
  }
  function chpl_fields_are_comparable[766029](arg _arg1[766031]:atomic_refcnt[52099], arg _arg2[766032]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766050]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766057] "expr temp" "maybe param" "maybe type" "temp"
    (766060 'move' call_tmp[766057](766035 call _cnt _mt[243] _arg1[766031]))
    unknown call_tmp[766062] "expr temp" "maybe param" "maybe type" "temp"
    (766065 'move' call_tmp[766062](766039 call _cnt _mt[243] _arg2[766032]))
    unknown call_tmp[766067] "expr temp" "maybe param" "maybe type" "temp"
    (766070 'move' call_tmp[766067](766043 'call resolves' c">" call_tmp[766057] call_tmp[766062]))
    (766055 'move' ret[766050](766054 'deref' call_tmp[766067]))
    (766052 return ret[766050])
  }
  function >[766017](arg _arg1[766019]:atomic_refcnt[52099], arg _arg2[766020]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766114]:bool[10] "RVV" "temp"
    unknown call_tmp[766131] "expr temp" "maybe param" "maybe type" "temp"
    (766134 'move' call_tmp[766131](766078 call _cnt _mt[243] _arg1[766019]))
    unknown call_tmp[766136] "expr temp" "maybe param" "maybe type" "temp"
    (766139 'move' call_tmp[766136](766082 call _cnt _mt[243] _arg2[766020]))
    unknown call_tmp[766141] "expr temp" "maybe param" "maybe type" "temp"
    (766144 'move' call_tmp[766141](766086 call > call_tmp[766131] call_tmp[766136]))
    if call_tmp[766141]
    {
      (766119 'move' ret[766114](766118 'deref' 1))
      gotoReturn _end_>[766112] _end_>[766112]
    }
    unknown call_tmp[766146] "expr temp" "maybe param" "maybe type" "temp"
    (766149 'move' call_tmp[766146](766092 call _cnt _mt[243] _arg1[766019]))
    unknown call_tmp[766151] "expr temp" "maybe param" "maybe type" "temp"
    (766154 'move' call_tmp[766151](766096 call _cnt _mt[243] _arg2[766020]))
    unknown call_tmp[766156] "expr temp" "maybe param" "maybe type" "temp"
    (766159 'move' call_tmp[766156](766100 call < call_tmp[766146] call_tmp[766151]))
    if call_tmp[766156]
    {
      (766124 'move' ret[766114](766123 'deref' 0))
      gotoReturn _end_>[766112] _end_>[766112]
    }
    (766129 'move' ret[766114](766128 'deref' 0))
    label _end_>[766112]
    (766116 return ret[766114])
  }
  where {
    unknown call_tmp[766161] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766164 'move' call_tmp[766161](766023 'typeof' _arg1[766019]))
    unknown call_tmp[766166] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766169 'move' call_tmp[766166](766025 'typeof' _arg2[766020]))
    unknown call_tmp[766171] "expr temp" "maybe param" "maybe type" "temp"
    (766174 'move' call_tmp[766171](766027 call == call_tmp[766161] call_tmp[766166]))
    unknown call_tmp[766176] "expr temp" "maybe param" "maybe type" "temp"
    (766179 'move' call_tmp[766176](766072 call chpl_fields_are_comparable[766029] _arg1[766019] _arg2[766020]))
    (766076 '&' call_tmp[766171] call_tmp[766176])
  }
  function chpl_fields_are_comparable[766193](arg _arg1[766195]:atomic_refcnt[52099], arg _arg2[766196]:atomic_refcnt[52099]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[766214]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[766221] "expr temp" "maybe param" "maybe type" "temp"
    (766224 'move' call_tmp[766221](766199 call _cnt _mt[243] _arg1[766195]))
    unknown call_tmp[766226] "expr temp" "maybe param" "maybe type" "temp"
    (766229 'move' call_tmp[766226](766203 call _cnt _mt[243] _arg2[766196]))
    unknown call_tmp[766231] "expr temp" "maybe param" "maybe type" "temp"
    (766234 'move' call_tmp[766231](766207 'call resolves' c">=" call_tmp[766221] call_tmp[766226]))
    (766219 'move' ret[766214](766218 'deref' call_tmp[766231]))
    (766216 return ret[766214])
  }
  function >=[766181](arg _arg1[766183]:atomic_refcnt[52099], arg _arg2[766184]:atomic_refcnt[52099]) : bool[10] "compiler generated" "last resort"
  {
    val ret[766278]:bool[10] "RVV" "temp"
    unknown call_tmp[766295] "expr temp" "maybe param" "maybe type" "temp"
    (766298 'move' call_tmp[766295](766242 call _cnt _mt[243] _arg1[766183]))
    unknown call_tmp[766300] "expr temp" "maybe param" "maybe type" "temp"
    (766303 'move' call_tmp[766300](766246 call _cnt _mt[243] _arg2[766184]))
    unknown call_tmp[766305] "expr temp" "maybe param" "maybe type" "temp"
    (766308 'move' call_tmp[766305](766250 call > call_tmp[766295] call_tmp[766300]))
    if call_tmp[766305]
    {
      (766283 'move' ret[766278](766282 'deref' 1))
      gotoReturn _end_>=[766276] _end_>=[766276]
    }
    unknown call_tmp[766310] "expr temp" "maybe param" "maybe type" "temp"
    (766313 'move' call_tmp[766310](766256 call _cnt _mt[243] _arg1[766183]))
    unknown call_tmp[766315] "expr temp" "maybe param" "maybe type" "temp"
    (766318 'move' call_tmp[766315](766260 call _cnt _mt[243] _arg2[766184]))
    unknown call_tmp[766320] "expr temp" "maybe param" "maybe type" "temp"
    (766323 'move' call_tmp[766320](766264 call < call_tmp[766310] call_tmp[766315]))
    if call_tmp[766320]
    {
      (766288 'move' ret[766278](766287 'deref' 0))
      gotoReturn _end_>=[766276] _end_>=[766276]
    }
    (766293 'move' ret[766278](766292 'deref' 1))
    label _end_>=[766276]
    (766280 return ret[766278])
  }
  where {
    unknown call_tmp[766325] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766328 'move' call_tmp[766325](766187 'typeof' _arg1[766183]))
    unknown call_tmp[766330] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766333 'move' call_tmp[766330](766189 'typeof' _arg2[766184]))
    unknown call_tmp[766335] "expr temp" "maybe param" "maybe type" "temp"
    (766338 'move' call_tmp[766335](766191 call == call_tmp[766325] call_tmp[766330]))
    unknown call_tmp[766340] "expr temp" "maybe param" "maybe type" "temp"
    (766343 'move' call_tmp[766340](766236 call chpl_fields_are_comparable[766193] _arg1[766183] _arg2[766184]))
    (766240 '&' call_tmp[766335] call_tmp[766340])
  }
  function =[766345](ref arg _arg1[766347]:atomic_refcnt[52099], const?  ref arg _arg2[766348]:atomic_refcnt[52099]) : void[4] "assignop" "compiler generated" "last resort"
  {
    unknown call_tmp[766374] "expr temp" "maybe param" "maybe type" "temp"
    (766377 'move' call_tmp[766374](766358 call _cnt _mt[243] _arg1[766347]))
    unknown call_tmp[766381] "expr temp" "maybe param" "maybe type" "temp"
    (766384 'move' call_tmp[766381](766362 call _cnt _mt[243] _arg2[766348]))
    (766366 call = call_tmp[766374] call_tmp[766381])
    (766370 return _void[55])
  }
  where {
    unknown call_tmp[766386] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766389 'move' call_tmp[766386](766351 'typeof' _arg1[766347]))
    unknown call_tmp[766391] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (766394 'move' call_tmp[766391](766353 'typeof' _arg2[766348]))
    (766355 call == call_tmp[766386] call_tmp[766391])
  }
  function chpl__defaultHash[766396](arg r[766398]:atomic_refcnt[52099]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766411] "RVV" "temp"
    unknown call_tmp[766418] "expr temp" "maybe param" "maybe type" "temp"
    (766421 'move' call_tmp[766418](766400 call _cnt _mt[243] r[766398]))
    unknown call_tmp[766423] "expr temp" "maybe param" "maybe type" "temp"
    (766426 'move' call_tmp[766423](766404 call chpl__defaultHash call_tmp[766418]))
    (766416 'move' ret[766411](766415 'deref' call_tmp[766423]))
    (766413 return ret[766411])
  }
  type atomic_refcnt[52099] unknown _cnt[51949](51948 call chpl__processorAtomicType int(64)[13])
  (354953 'used modules list'(51941 'use' ChapelStandard[20264]))
}