AST dump for ExternalArray after pass scalarReplace.
Module use list: ChapelStandard HaltWrappers 

{
  function chpl__init_ExternalArray[415970]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524245 return _void[55])
  }
  type chpl_opaque_array[188575] val _pid[188560]:int(64)[13] const-val _instance[188565]:c_void_ptr[149] const-val _unowned[188570]:bool[10]
  function chpl_call_free_func[188662](const in arg func[188659]:c_void_ptr[149], const in arg elts[188665]:c_void_ptr[149]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (524108 return _void[55])
  }
  function cleanupOpaqueArray[189647](const  ref arg arr[189644]:chpl_opaque_array[188575]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-ref call_tmp[691563]:c_void_ptr[149] "dead at end of block" "maybe param" "reference to a const" "temp"
    ref call_tmp[2161644]:c_void_ptr[149] "dead after last mention" "maybe param" "temp"
    (2161646 'move' call_tmp[2161644](2161648 '.' arr[189644] _instance[188565]))
    (691566 'move' call_tmp[691563] call_tmp[2161644])
    val call_tmp[691568]:BaseArr[149541] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1487217]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1487221 'move' coerce_tmp[1487217](1487219 'deref' call_tmp[691563]))
    val call_tmp[2282853]:BaseArr[149541] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282855 'move' call_tmp[2282853](2282857 'cast' BaseArr[149541] coerce_tmp[1487217]))
    (691571 'move' call_tmp[691568] call_tmp[2282853])
    val cleanup[189658]:BaseArr[149541] "dead at end of block" "insert auto destroy"
    (545455 'move' cleanup[189658] call_tmp[691568])
    const-val call_tmp[691573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1487253]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487258 'move' coerce_tmp[1487253](1487255 'cast' object[22] cleanup[189658]))
    const-val call_tmp[2061418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061420 'move' call_tmp[2061418](2061422 'ptr_neq' coerce_tmp[1487253] nil[44]))
    (691576 'move' call_tmp[691573] call_tmp[2061418])
    if call_tmp[691573]
    {
      const-ref call_tmp[691580]:bool[10] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref call_tmp[2161658]:bool[10] "dead after last mention" "maybe param" "temp"
      (2161660 'move' call_tmp[2161658](2161662 '.' arr[189644] _unowned[188570]))
      (691583 'move' call_tmp[691580] call_tmp[2161658])
      val call_tmp[691585]:BaseArr[149541] "dead after last mention" "expr temp" "maybe param" "temp"
      (691588 'move' call_tmp[691585] cleanup[189658])
      const-val coerce_tmp[1488115]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1488119 'move' coerce_tmp[1488115](1488117 'deref' call_tmp[691580]))
      val inlineImm[2282862]:bool[10] "temp"
      (2282865 'move' inlineImm[2282862] 1)
      const-val call_tmp[2282868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2282870 'move' call_tmp[2282868](2282872 '!' coerce_tmp[1488115]))
      if call_tmp[2282868]
      {
        const-val tmp[2282876]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
        const-val call_tmp[2282878]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
        (2282880 'move' call_tmp[2282878](2282882 '_wide_get_locale' call_tmp[691585]))
        (2282884 'move' tmp[2282876] call_tmp[2282878])
        val isdirect[2282887]:bool[10] "temp"
        (2282889 'move' isdirect[2282887](2282892 call chpl_doDirectExecuteOn[187423] call_tmp[2282878]))
        if isdirect[2282887]
        {
          (2282897 call on_fn[1487562] call_tmp[691585] inlineImm[2282862])
        }
        {
          val _args_foron_fn[2282901]:_class_localson_fn[2044130] "temp"
          (2282903 'move' _args_foron_fn[2282901](2282905 'stack allocate class' _class_localson_fn[2044130]))
          (2282907 '.=' _args_foron_fn[2282901] _0_tmp[2044133] tmp[2282876])
          (2282911 '.=' _args_foron_fn[2282901] _1__instance[2044135] call_tmp[691585])
          (2282915 '.=' _args_foron_fn[2282901] _2_deinitElts[2044137] inlineImm[2282862])
          val _args_vforon_fn[2282919]:c_void_ptr[149] "temp"
          (2282921 'move' _args_vforon_fn[2282919](2282923 'cast_to_void_star' _args_foron_fn[2282901]))
          val _args_sizeon_fn[2282925]:int(64)[13] "temp"
          (2282927 'move' _args_sizeon_fn[2282925](2282929 'sizeof_bundle' _class_localson_fn[2044130]))
          on(2282932 call wrapon_fn[2044170] tmp[2282876] _args_vforon_fn[2282919] _args_sizeon_fn[2282925] _args_foron_fn[2282901])
        }
      }
      {
      }
    }
    (524243 return _void[55])
  }
}