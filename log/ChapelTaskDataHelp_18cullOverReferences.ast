AST dump for ChapelTaskDataHelp after pass cullOverReferences.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelTaskDataHelp[416082]() : void[4] "insert line file info" "module init" "resolved"
  {
    (513451 return _void[55])
  }
  type chpl_task_infoChapel_t[88580]
  function chpl_task_getInfoChapel[88584]() : c_ptr(chpl_task_infoChapel_t)[1593776] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513435]:c_ptr(chpl_task_infoChapel_t)[1593776] "RVV" "temp"
    (513437 return ret[513435])
  }
  function chpl_task_getInfoChapelInBundle[88599](const in arg args[88596]:chpl_task_bundle_p[209381]) : c_ptr(chpl_task_infoChapel_t)[1593776] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513441]:c_ptr(chpl_task_infoChapel_t)[1593776] "RVV" "temp"
    (513443 return ret[513441])
  }
  function chpl_task_data_setup[88614](const in arg args[88611]:chpl_task_bundle_p[209381], const in arg infoChapel[88620]:c_ptr(chpl_task_infoChapel_t)[1593776]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[632055]:c_ptr(chpl_task_infoChapel_t)[1593776] "dead after last mention" "expr temp" "maybe param" "temp"
    (632058 'move' call_tmp[632055](88627 call chpl_task_getInfoChapelInBundle[88599] args[88611]))
    val call_tmp[632060]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (632063 'move' call_tmp[632060](88633 call c_sizeof[1357132]))
    val coerce_tmp[1594304]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1594310 'move' coerce_tmp[1594304](1594306 'cast' c_void_ptr[149] call_tmp[632055]))
    val coerce_tmp[1594312]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1594318 'move' coerce_tmp[1594312](1594314 'cast' c_void_ptr[149] infoChapel[88620]))
    (88634 call c_memcpy[956254] coerce_tmp[1594304] coerce_tmp[1594312] call_tmp[632060])
    (513445 return _void[55])
  }
  function chpl_save_task_error[1230865](const in arg e[1230867]:unmanaged _EndCountBase[1230863], const in arg err[1230869]:unmanaged Error?[415459]) : void[4] "instantiated generic" "invisible fn" "resolved" "task complete impl fn" "no return value for void"
  {
    val call_tmp[1230875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1230925]:borrowed object?[415453] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1230930 'move' coerce_tmp[1230925](1230927 'cast' borrowed object?[415453] err[1230869]))
    (1230877 'move' call_tmp[1230875](1230880 call !=[1485] coerce_tmp[1230925] nil[44]))
    val call_tmp[1230883]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1230885 'move' call_tmp[1230883] call_tmp[1230875])
    if call_tmp[1230883]
    {
      ref call_tmp[1230892]:_ref(chpl_TaskErrors)[941129] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1230943]:_EndCountBase[12717] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1230948 'move' coerce_tmp[1230943](1230945 'cast' _EndCountBase[12717] e[1230867]))
      (1230894 'move' call_tmp[1230892](1230897 call errors[752207] coerce_tmp[1230943]))
      val call_tmp[1230900]:unmanaged Error[415590] "dead after last mention" "expr temp" "maybe param" "temp"
      (1230902 'move' call_tmp[1230900](1230905 call postfix![967963] err[1230869]))
      (1230911 call append[168282] call_tmp[1230892] call_tmp[1230900])
    }
    (1230914 return _void[55])
  }
}