AST dump for ChapelBase after pass scopeResolve.
Module use list: ChapelStandard ChapelEnv SysCTypes HaltWrappers 

{
  unknown rootLocaleInitialized[310] "locale private" "no doc" 0 bool[10]
  (313 'end of statement')
  unknown enablePostfixBangChecks[324] "config" "param" 0
  (327 'end of statement')
  function chpl_config_has_value[334](arg name[331] :
  c_string[19], arg module_name[337] :
  c_string[19]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    bool[10]
  }
  function chpl_config_get_value[350](arg name[347] :
  c_string[19], arg module_name[353] :
  c_string[19]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    c_string[19]
  }
  unknown defaultLowBound[361] "config" "param" 0
  (364 'end of statement')
  unknown CHPL_CACHE_REMOTE[367] "config" "param" 0 bool[10]
  (370 'end of statement')
  unknown chpl_stringMinAllocSize[372] "config" "param" 0
  (375 'end of statement')
  unknown warnMaximalRange[377] "config" "param" 0
  (380 'end of statement')
  function _throwOpError[387](param arg op[384] :
  string[26]) : _unknown[51] "no return value for void"
  {
    (437 call compilerError "illegal use of '" op[384] "' on operands of type uint(64) and signed integer")
  }
  type object[22]
  type unmanaged object[415361]
  type borrowed object?[415248]
  type object?[415245](?)
  type object[366956](?)
  type iterKind[453] def leader[447]:iterKind[453] def follower[449]:iterKind[453] def standalone[451]:iterKind[453]
  {
  }
  function =[467](ref arg a[464] :
  (463 call bool[10] ?[260]), arg b[470] :
  bool[10]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (495 '=' a[464] b[470])
  }
  function =[510](ref arg a[507] :
  (506 call int(64)[13] unknown w[503]), arg b[516] :
  (515 call int(64)[13] w[503])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (523 '=' a[507] b[516])
  }
  function =[538](ref arg a[535] :
  (534 call uint(64)[115] unknown w[531]), arg b[544] :
  (543 call uint(64)[115] w[531])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (551 '=' a[535] b[544])
  }
  function =[566](ref arg a[563] :
  (562 call real(64)[16] unknown w[559]), arg b[572] :
  (571 call real(64)[16] w[559])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (579 '=' a[563] b[572])
  }
  function =[594](ref arg a[591] :
  (590 call imag(64)[130] unknown w[587]), arg b[600] :
  (599 call imag(64)[130] w[587])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (607 '=' a[591] b[600])
  }
  function =[622](ref arg a[619] :
  (618 call complex(128)[140] unknown w[615]), arg b[628] :
  (627 call complex(128)[140] w[615])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (635 '=' a[619] b[628])
  }
  function =[646](ref arg a[643] :
  opaque[158], arg b[649] :
  opaque[158]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (656 '=' a[643] b[649])
  }
  function =[667](ref arg a[664] :
  enum[187](?), arg b[670] :
  enum[187](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (683 '=' a[664] b[670])
  }
  where {
    (677 call ==(674 'typeof' a[664])(676 'typeof' b[670]))
  }
  function =[696](ref arg a[693] :
  _borrowedNonNilable[214](?), arg b[700] :
  (699 'typeof' a[693])) : _unknown[51] "assignop" "inline" "last resort" "no return value for void"
  {
    (713 '=' a[693] b[700])
  }
  where {
    (707 call <=(704 'typeof' b[700])(706 'typeof' a[693]))
  }
  function =[727](ref arg a[724] :
  _borrowedNilable[217](?), arg b[731] :
  (730 'typeof' a[724])) : _unknown[51] "assignop" "inline" "last resort" "no return value for void"
  {
    (744 '=' a[724] b[731])
  }
  where {
    (738 call <=(735 'typeof' b[731])(737 'typeof' a[724]))
  }
  function =[757](ref arg a[754] :
  _unmanagedNonNilable[223](?), arg b[761] :
  (760 'typeof' a[754])) : _unknown[51] "assignop" "inline" "last resort" "no return value for void"
  {
    (774 '=' a[754] b[761])
  }
  where {
    (768 call <=(765 'typeof' b[761])(767 'typeof' a[754]))
  }
  function =[788](ref arg a[785] :
  _unmanagedNilable[226](?), arg b[792] :
  (791 'typeof' a[785])) : _unknown[51] "assignop" "inline" "last resort" "no return value for void"
  {
    (805 '=' a[785] b[792])
  }
  where {
    (799 call <=(796 'typeof' b[792])(798 'typeof' a[785]))
  }
  function =[817](ref arg a[814] :
  nothing[7], arg b[821] :
  unknown t[819]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (849 call compilerError "a nothing variable cannot be assigned")
  }
  where {
    (826 call != t[819] nothing[7])
  }
  function =[862](ref arg a[859] :
  unknown t[857], arg b[865] :
  nothing[7]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (893 call compilerError "cannot assign none to a variable of non-nothing type")
  }
  where {
    (870 call != t[857] nothing[7])
  }
  function =[905](ref arg a[902] :
  nothing[7], arg b[908] :
  nothing[7]) param : _unknown[51] "assignop" "inline" "no return value for void"
  {
  }
  function ==[920](arg a[917] :
  _nilType[42], arg b[923] :
  _nilType[42]) param : _unknown[51] "inline"
  {
    (927 return 1)
  }
  function ==[938](arg a[935] :
  bool[10], arg b[941] :
  bool[10]) : _unknown[51] "inline"
  {
    (967 return(966 '==' a[935] b[941]))
  }
  function ==[982](arg a[979] :
  (978 call int(64)[13] unknown w[975]), arg b[988] :
  (987 call int(64)[13] w[975])) : _unknown[51] "inline"
  {
    (996 return(995 '==' a[979] b[988]))
  }
  function ==[1011](arg a[1008] :
  (1007 call uint(64)[115] unknown w[1004]), arg b[1017] :
  (1016 call uint(64)[115] w[1004])) : _unknown[51] "inline"
  {
    (1025 return(1024 '==' a[1008] b[1017]))
  }
  function ==[1040](arg a[1037] :
  (1036 call real(64)[16] unknown w[1033]), arg b[1046] :
  (1045 call real(64)[16] w[1033])) : _unknown[51] "inline"
  {
    (1054 return(1053 '==' a[1037] b[1046]))
  }
  function ==[1069](arg a[1066] :
  (1065 call imag(64)[130] unknown w[1062]), arg b[1075] :
  (1074 call imag(64)[130] w[1062])) : _unknown[51] "inline"
  {
    (1083 return(1082 '==' a[1066] b[1075]))
  }
  function ==[1098](arg a[1095] :
  (1094 call complex(128)[140] unknown w[1091]), arg b[1104] :
  (1103 call complex(128)[140] w[1091])) : _unknown[51] "inline"
  {
    (1133 return(1131 call &&(1117 call ==(1110 call . a[1095] c"re")(1114 call . b[1104] c"re"))(1129 call ==(1122 call . a[1095] c"im")(1126 call . b[1104] c"im"))))
  }
  function ==[1146](arg a[1143] :
  borrowed object?[415248], arg b[1151] :
  borrowed object?[415248]) : _unknown[51] "inline"
  {
    (1177 return(1176 'ptr_eq' a[1143] b[1151]))
  }
  function ==[1188](arg a[1185] :
  enum[187](?), arg b[1191] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1205 return(1204 '==' a[1185] b[1191]))
  }
  where {
    (1198 call ==(1195 'typeof' a[1185])(1197 'typeof' b[1191]))
  }
  function ==[1217](arg a[1214] :
  enum[187](?), arg b[1220] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1250 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1254 return 0)
  }
  where {
    (1227 call !=(1224 'typeof' a[1214])(1226 'typeof' b[1220]))
  }
  function !=[1265](arg a[1262] :
  _nilType[42], arg b[1268] :
  _nilType[42]) param : _unknown[51] "inline"
  {
    (1272 return 0)
  }
  function !=[1283](arg a[1280] :
  bool[10], arg b[1286] :
  bool[10]) : _unknown[51] "inline"
  {
    (1310 return(1309 '!=' a[1280] b[1286]))
  }
  function !=[1325](arg a[1322] :
  (1321 call int(64)[13] unknown w[1318]), arg b[1331] :
  (1330 call int(64)[13] w[1318])) : _unknown[51] "inline"
  {
    (1339 return(1338 '!=' a[1322] b[1331]))
  }
  function !=[1354](arg a[1351] :
  (1350 call uint(64)[115] unknown w[1347]), arg b[1360] :
  (1359 call uint(64)[115] w[1347])) : _unknown[51] "inline"
  {
    (1368 return(1367 '!=' a[1351] b[1360]))
  }
  function !=[1383](arg a[1380] :
  (1379 call real(64)[16] unknown w[1376]), arg b[1389] :
  (1388 call real(64)[16] w[1376])) : _unknown[51] "inline"
  {
    (1397 return(1396 '!=' a[1380] b[1389]))
  }
  function !=[1412](arg a[1409] :
  (1408 call imag(64)[130] unknown w[1405]), arg b[1418] :
  (1417 call imag(64)[130] w[1405])) : _unknown[51] "inline"
  {
    (1426 return(1425 '!=' a[1409] b[1418]))
  }
  function !=[1441](arg a[1438] :
  (1437 call complex(128)[140] unknown w[1434]), arg b[1447] :
  (1446 call complex(128)[140] w[1434])) : _unknown[51] "inline"
  {
    (1472 return(1470 call ||(1458 call !=(1451 call . a[1438] c"re")(1455 call . b[1447] c"re"))(1468 call !=(1461 call . a[1438] c"im")(1465 call . b[1447] c"im"))))
  }
  function !=[1485](arg a[1482] :
  borrowed object?[415248], arg b[1490] :
  borrowed object?[415248]) : _unknown[51] "inline"
  {
    (1516 return(1515 'ptr_neq' a[1482] b[1490]))
  }
  function !=[1527](arg a[1524] :
  enum[187](?), arg b[1530] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (1544 return(1543 '!=' a[1524] b[1530]))
  }
  where {
    (1537 call ==(1534 'typeof' a[1524])(1536 'typeof' b[1530]))
  }
  function !=[1556](arg a[1553] :
  enum[187](?), arg b[1559] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (1571 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (1575 return 1)
  }
  where {
    (1566 call !=(1563 'typeof' a[1553])(1565 'typeof' b[1559]))
  }
  function ==[1586](param arg a[1583] :
  bool[10], param arg b[1589] :
  bool[10]) param : _unknown[51] "inline"
  {
    (1597 return(1596 '==' a[1583] b[1589]))
  }
  function ==[1612](param arg a[1609] :
  (1608 call int(64)[13] unknown w[1605]), param arg b[1618] :
  (1617 call int(64)[13] w[1605])) param : _unknown[51] "inline"
  {
    (1626 return(1625 '==' a[1609] b[1618]))
  }
  function ==[1641](param arg a[1638] :
  (1637 call uint(64)[115] unknown w[1634]), param arg b[1647] :
  (1646 call uint(64)[115] w[1634])) param : _unknown[51] "inline"
  {
    (1655 return(1654 '==' a[1638] b[1647]))
  }
  function ==[1666](param arg a[1663] :
  enum[187](?), param arg b[1669] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (1683 return(1682 '==' a[1663] b[1669]))
  }
  where {
    (1676 call ==(1673 'typeof' a[1663])(1675 'typeof' b[1669]))
  }
  function ==[1699](param arg a[1696] :
  (1695 call real(64)[16] unknown w[1692]), param arg b[1705] :
  (1704 call real(64)[16] w[1692])) param : _unknown[51] "inline"
  {
    (1713 return(1712 '==' a[1696] b[1705]))
  }
  function ==[1728](param arg a[1725] :
  (1724 call imag(64)[130] unknown w[1721]), param arg b[1734] :
  (1733 call imag(64)[130] w[1721])) param : _unknown[51] "inline"
  {
    (1742 return(1741 '==' a[1725] b[1734]))
  }
  function ==[1757](param arg a[1754] :
  (1753 call complex(128)[140] unknown w[1750]), param arg b[1763] :
  (1762 call complex(128)[140] w[1750])) param : _unknown[51] "inline"
  {
    (1771 return(1770 '==' a[1754] b[1763]))
  }
  function ==[1782](arg a[1779] :
  nothing[7], arg b[1785] :
  nothing[7]) param : _unknown[51] "inline"
  {
    (1789 return 1)
  }
  function !=[1800](param arg a[1797] :
  bool[10], param arg b[1803] :
  bool[10]) param : _unknown[51] "inline"
  {
    (1811 return(1810 '!=' a[1797] b[1803]))
  }
  function !=[1826](param arg a[1823] :
  (1822 call int(64)[13] unknown w[1819]), param arg b[1832] :
  (1831 call int(64)[13] w[1819])) param : _unknown[51] "inline"
  {
    (1840 return(1839 '!=' a[1823] b[1832]))
  }
  function !=[1855](param arg a[1852] :
  (1851 call uint(64)[115] unknown w[1848]), param arg b[1861] :
  (1860 call uint(64)[115] w[1848])) param : _unknown[51] "inline"
  {
    (1869 return(1868 '!=' a[1852] b[1861]))
  }
  function !=[1880](param arg a[1877] :
  enum[187](?), param arg b[1883] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (1903 return(1902 '!='(1897 call chpl__enumToOrder a[1877])(1901 call chpl__enumToOrder b[1883])))
  }
  where {
    (1890 call ==(1887 'typeof' a[1877])(1889 'typeof' b[1883]))
  }
  function !=[1919](param arg a[1916] :
  (1915 call real(64)[16] unknown w[1912]), param arg b[1925] :
  (1924 call real(64)[16] w[1912])) param : _unknown[51] "inline"
  {
    (1933 return(1932 '!=' a[1916] b[1925]))
  }
  function !=[1948](param arg a[1945] :
  (1944 call imag(64)[130] unknown w[1941]), param arg b[1954] :
  (1953 call imag(64)[130] w[1941])) param : _unknown[51] "inline"
  {
    (1962 return(1961 '!=' a[1945] b[1954]))
  }
  function !=[1977](param arg a[1974] :
  (1973 call complex(128)[140] unknown w[1970]), param arg b[1983] :
  (1982 call complex(128)[140] w[1970])) param : _unknown[51] "inline"
  {
    (1991 return(1990 '!=' a[1974] b[1983]))
  }
  function !=[2002](arg a[1999] :
  nothing[7], arg b[2005] :
  nothing[7]) param : _unknown[51] "inline"
  {
    (2009 return 0)
  }
  function <=[2024](arg a[2021] :
  (2020 call int(64)[13] unknown w[2017]), arg b[2030] :
  (2029 call int(64)[13] w[2017])) : _unknown[51] "inline"
  {
    (2054 return(2053 '<=' a[2021] b[2030]))
  }
  function <=[2069](arg a[2066] :
  (2065 call uint(64)[115] unknown w[2062]), arg b[2075] :
  (2074 call uint(64)[115] w[2062])) : _unknown[51] "inline"
  {
    (2083 return(2082 '<=' a[2066] b[2075]))
  }
  function <=[2098](arg a[2095] :
  (2094 call real(64)[16] unknown w[2091]), arg b[2104] :
  (2103 call real(64)[16] w[2091])) : _unknown[51] "inline"
  {
    (2112 return(2111 '<=' a[2095] b[2104]))
  }
  function <=[2123](arg a[2120] :
  enum[187](?), arg b[2126] :
  enum[187](?)) : _unknown[51]
  {
    (2146 return(2145 '<='(2140 call chpl__enumToOrder a[2120])(2144 call chpl__enumToOrder b[2126])))
  }
  where {
    (2133 call ==(2130 'typeof' a[2120])(2132 'typeof' b[2126]))
  }
  function <=[2158](arg a[2155] :
  enum[187](?), arg b[2161] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2173 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2177 return 0)
  }
  where {
    (2168 call !=(2165 'typeof' a[2155])(2167 'typeof' b[2161]))
  }
  function >=[2192](arg a[2189] :
  (2188 call int(64)[13] unknown w[2185]), arg b[2198] :
  (2197 call int(64)[13] w[2185])) : _unknown[51] "inline"
  {
    (2222 return(2221 '>=' a[2189] b[2198]))
  }
  function >=[2237](arg a[2234] :
  (2233 call uint(64)[115] unknown w[2230]), arg b[2243] :
  (2242 call uint(64)[115] w[2230])) : _unknown[51] "inline"
  {
    (2251 return(2250 '>=' a[2234] b[2243]))
  }
  function >=[2266](arg a[2263] :
  (2262 call real(64)[16] unknown w[2259]), arg b[2272] :
  (2271 call real(64)[16] w[2259])) : _unknown[51] "inline"
  {
    (2280 return(2279 '>=' a[2263] b[2272]))
  }
  function >=[2291](arg a[2288] :
  enum[187](?), arg b[2294] :
  enum[187](?)) : _unknown[51]
  {
    (2314 return(2313 '>='(2308 call chpl__enumToOrder a[2288])(2312 call chpl__enumToOrder b[2294])))
  }
  where {
    (2301 call ==(2298 'typeof' a[2288])(2300 'typeof' b[2294]))
  }
  function >=[2326](arg a[2323] :
  enum[187](?), arg b[2329] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2341 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2345 return 0)
  }
  where {
    (2336 call !=(2333 'typeof' a[2323])(2335 'typeof' b[2329]))
  }
  function <[2360](arg a[2357] :
  (2356 call int(64)[13] unknown w[2353]), arg b[2366] :
  (2365 call int(64)[13] w[2353])) : _unknown[51] "inline"
  {
    (2390 return(2389 '<' a[2357] b[2366]))
  }
  function <[2405](arg a[2402] :
  (2401 call uint(64)[115] unknown w[2398]), arg b[2411] :
  (2410 call uint(64)[115] w[2398])) : _unknown[51] "inline"
  {
    (2419 return(2418 '<' a[2402] b[2411]))
  }
  function <[2434](arg a[2431] :
  (2430 call real(64)[16] unknown w[2427]), arg b[2440] :
  (2439 call real(64)[16] w[2427])) : _unknown[51] "inline"
  {
    (2448 return(2447 '<' a[2431] b[2440]))
  }
  function <[2459](arg a[2456] :
  enum[187](?), arg b[2462] :
  enum[187](?)) : _unknown[51]
  {
    (2482 return(2481 '<'(2476 call chpl__enumToOrder a[2456])(2480 call chpl__enumToOrder b[2462])))
  }
  where {
    (2469 call ==(2466 'typeof' a[2456])(2468 'typeof' b[2462]))
  }
  function <[2494](arg a[2491] :
  enum[187](?), arg b[2497] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2509 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2513 return 0)
  }
  where {
    (2504 call !=(2501 'typeof' a[2491])(2503 'typeof' b[2497]))
  }
  function >[2528](arg a[2525] :
  (2524 call int(64)[13] unknown w[2521]), arg b[2534] :
  (2533 call int(64)[13] w[2521])) : _unknown[51] "inline"
  {
    (2558 return(2557 '>' a[2525] b[2534]))
  }
  function >[2573](arg a[2570] :
  (2569 call uint(64)[115] unknown w[2566]), arg b[2579] :
  (2578 call uint(64)[115] w[2566])) : _unknown[51] "inline"
  {
    (2587 return(2586 '>' a[2570] b[2579]))
  }
  function >[2602](arg a[2599] :
  (2598 call real(64)[16] unknown w[2595]), arg b[2608] :
  (2607 call real(64)[16] w[2595])) : _unknown[51] "inline"
  {
    (2616 return(2615 '>' a[2599] b[2608]))
  }
  function >[2627](arg a[2624] :
  enum[187](?), arg b[2630] :
  enum[187](?)) : _unknown[51]
  {
    (2650 return(2649 '>'(2644 call chpl__enumToOrder a[2624])(2648 call chpl__enumToOrder b[2630])))
  }
  where {
    (2637 call ==(2634 'typeof' a[2624])(2636 'typeof' b[2630]))
  }
  function >[2662](arg a[2659] :
  enum[187](?), arg b[2665] :
  enum[187](?)) : _unknown[51] "inline" "last resort"
  {
    (2677 call compilerError "Comparisons between mixed enumerated types not supported by default")
    (2681 return 0)
  }
  where {
    (2672 call !=(2669 'typeof' a[2659])(2671 'typeof' b[2665]))
  }
  function <=[2696](param arg a[2693] :
  (2692 call int(64)[13] unknown w[2689]), param arg b[2702] :
  (2701 call int(64)[13] w[2689])) param : _unknown[51] "inline"
  {
    (2710 return(2709 '<=' a[2693] b[2702]))
  }
  function <=[2725](param arg a[2722] :
  (2721 call uint(64)[115] unknown w[2718]), param arg b[2731] :
  (2730 call uint(64)[115] w[2718])) param : _unknown[51] "inline"
  {
    (2739 return(2738 '<=' a[2722] b[2731]))
  }
  function <=[2750](param arg a[2747] :
  enum[187](?), param arg b[2753] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (2773 return(2772 '<='(2767 call chpl__enumToOrder a[2747])(2771 call chpl__enumToOrder b[2753])))
  }
  where {
    (2760 call ==(2757 'typeof' a[2747])(2759 'typeof' b[2753]))
  }
  function <=[2789](param arg a[2786] :
  (2785 call real(64)[16] unknown w[2782]), param arg b[2795] :
  (2794 call real(64)[16] w[2782])) param : _unknown[51] "inline"
  {
    (2803 return(2802 '<=' a[2786] b[2795]))
  }
  function >=[2818](param arg a[2815] :
  (2814 call int(64)[13] unknown w[2811]), param arg b[2824] :
  (2823 call int(64)[13] w[2811])) param : _unknown[51] "inline"
  {
    (2832 return(2831 '>=' a[2815] b[2824]))
  }
  function >=[2847](param arg a[2844] :
  (2843 call uint(64)[115] unknown w[2840]), param arg b[2853] :
  (2852 call uint(64)[115] w[2840])) param : _unknown[51] "inline"
  {
    (2861 return(2860 '>=' a[2844] b[2853]))
  }
  function >=[2872](param arg a[2869] :
  enum[187](?), param arg b[2875] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (2895 return(2894 '>='(2889 call chpl__enumToOrder a[2869])(2893 call chpl__enumToOrder b[2875])))
  }
  where {
    (2882 call ==(2879 'typeof' a[2869])(2881 'typeof' b[2875]))
  }
  function >=[2911](param arg a[2908] :
  (2907 call real(64)[16] unknown w[2904]), param arg b[2917] :
  (2916 call real(64)[16] w[2904])) param : _unknown[51] "inline"
  {
    (2925 return(2924 '>=' a[2908] b[2917]))
  }
  function <[2940](param arg a[2937] :
  (2936 call int(64)[13] unknown w[2933]), param arg b[2946] :
  (2945 call int(64)[13] w[2933])) param : _unknown[51] "inline"
  {
    (2954 return(2953 '<' a[2937] b[2946]))
  }
  function <[2969](param arg a[2966] :
  (2965 call uint(64)[115] unknown w[2962]), param arg b[2975] :
  (2974 call uint(64)[115] w[2962])) param : _unknown[51] "inline"
  {
    (2983 return(2982 '<' a[2966] b[2975]))
  }
  function <[2994](param arg a[2991] :
  enum[187](?), param arg b[2997] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (3017 return(3016 '<'(3011 call chpl__enumToOrder a[2991])(3015 call chpl__enumToOrder b[2997])))
  }
  where {
    (3004 call ==(3001 'typeof' a[2991])(3003 'typeof' b[2997]))
  }
  function <[3033](param arg a[3030] :
  (3029 call real(64)[16] unknown w[3026]), param arg b[3039] :
  (3038 call real(64)[16] w[3026])) param : _unknown[51] "inline"
  {
    (3047 return(3046 '<' a[3030] b[3039]))
  }
  function >[3062](param arg a[3059] :
  (3058 call int(64)[13] unknown w[3055]), param arg b[3068] :
  (3067 call int(64)[13] w[3055])) param : _unknown[51] "inline"
  {
    (3076 return(3075 '>' a[3059] b[3068]))
  }
  function >[3091](param arg a[3088] :
  (3087 call uint(64)[115] unknown w[3084]), param arg b[3097] :
  (3096 call uint(64)[115] w[3084])) param : _unknown[51] "inline"
  {
    (3105 return(3104 '>' a[3088] b[3097]))
  }
  function >[3116](param arg a[3113] :
  enum[187](?), param arg b[3119] :
  enum[187](?)) param : _unknown[51] "inline"
  {
    (3139 return(3138 '>'(3133 call chpl__enumToOrder a[3113])(3137 call chpl__enumToOrder b[3119])))
  }
  where {
    (3126 call ==(3123 'typeof' a[3113])(3125 'typeof' b[3119]))
  }
  function >[3155](param arg a[3152] :
  (3151 call real(64)[16] unknown w[3148]), param arg b[3161] :
  (3160 call real(64)[16] w[3148])) param : _unknown[51] "inline"
  {
    (3169 return(3168 '>' a[3152] b[3161]))
  }
  function +[3184](arg a[3181] :
  (3180 call int(64)[13] unknown w[3177])) : _unknown[51] "inline"
  {
    (3187 return a[3181])
  }
  function +[3202](arg a[3199] :
  (3198 call uint(64)[115] unknown w[3195])) : _unknown[51] "inline"
  {
    (3205 return a[3199])
  }
  function +[3220](arg a[3217] :
  (3216 call real(64)[16] unknown w[3213])) : _unknown[51] "inline"
  {
    (3223 return a[3217])
  }
  function +[3238](arg a[3235] :
  (3234 call imag(64)[130] unknown w[3231])) : _unknown[51] "inline"
  {
    (3241 return a[3235])
  }
  function +[3256](arg a[3253] :
  (3252 call complex(128)[140] unknown w[3249])) : _unknown[51] "inline"
  {
    (3259 return a[3253])
  }
  function -[3274](arg a[3271] :
  (3270 call int(64)[13] unknown w[3267])) : _unknown[51] "inline"
  {
    (3296 return(3295 'u-' a[3271]))
  }
  function -[3312](arg a[3309] :
  (3308 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (3340 call compilerError "illegal use of '-' on operand of type "(3338 call _cast string[26](3336 'typeof' a[3309])))
  }
  function -[3355](arg a[3352] :
  (3351 call real(64)[16] unknown w[3348])) : _unknown[51] "inline"
  {
    (3361 return(3360 'u-' a[3352]))
  }
  function -[3376](arg a[3373] :
  (3372 call imag(64)[130] unknown w[3369])) : _unknown[51] "inline"
  {
    (3382 return(3381 'u-' a[3373]))
  }
  function -[3397](arg a[3394] :
  (3393 call complex(128)[140] unknown w[3390])) : _unknown[51] "inline"
  {
    (3403 return(3402 'u-' a[3394]))
  }
  function +[3418](param arg a[3415] :
  (3414 call int(64)[13] unknown w[3411])) param : _unknown[51] "inline"
  {
    (3421 return a[3415])
  }
  function +[3436](param arg a[3433] :
  (3432 call uint(64)[115] unknown w[3429])) param : _unknown[51] "inline"
  {
    (3439 return a[3433])
  }
  function +[3454](param arg a[3451] :
  (3450 call real(64)[16] unknown w[3447])) param : _unknown[51] "inline"
  {
    (3457 return a[3451])
  }
  function +[3472](param arg a[3469] :
  (3468 call imag(64)[130] unknown w[3465])) param : _unknown[51] "inline"
  {
    (3475 return a[3469])
  }
  function +[3490](param arg a[3487] :
  (3486 call complex(128)[140] unknown w[3483])) param : _unknown[51] "inline"
  {
    (3493 return a[3487])
  }
  function -[3508](param arg a[3505] :
  (3504 call int(64)[13] unknown w[3501])) param : _unknown[51] "inline"
  {
    (3514 return(3513 'u-' a[3505]))
  }
  function -[3529](param arg a[3526] :
  (3525 call uint(64)[115] unknown w[3522])) param : _unknown[51] "inline"
  {
    if(3562 call _cond_test(3539 call <(3536 call _cast(3535 call int(64)[13] w[3522]) a[3526]) 0))
    {
      (3549 call compilerError "illegal use of '-' on operand of type "(3547 call _cast string[26](3545 'typeof' a[3526])))
    }
    {
      (3560 return(3558 call -(3556 call _cast(3555 call int(64)[13] w[3522]) a[3526])))
    }
  }
  function -[3581](param arg a[3578] :
  (3577 call real(64)[16] unknown w[3574])) param : _unknown[51] "inline"
  {
    (3587 return(3586 'u-' a[3578]))
  }
  function -[3602](param arg a[3599] :
  (3598 call imag(64)[130] unknown w[3595])) param : _unknown[51] "inline"
  {
    (3608 return(3607 'u-' a[3599]))
  }
  function -[3623](param arg a[3620] :
  (3619 call complex(128)[140] unknown w[3616])) param : _unknown[51] "inline"
  {
    (3629 return(3628 'u-' a[3620]))
  }
  function +[3644](arg a[3641] :
  (3640 call int(64)[13] unknown w[3637]), arg b[3650] :
  (3649 call int(64)[13] w[3637])) : _unknown[51] "inline"
  {
    (3674 return(3673 '+' a[3641] b[3650]))
  }
  function +[3689](arg a[3686] :
  (3685 call uint(64)[115] unknown w[3682]), arg b[3695] :
  (3694 call uint(64)[115] w[3682])) : _unknown[51] "inline"
  {
    (3703 return(3702 '+' a[3686] b[3695]))
  }
  function +[3718](arg a[3715] :
  (3714 call real(64)[16] unknown w[3711]), arg b[3724] :
  (3723 call real(64)[16] w[3711])) : _unknown[51] "inline"
  {
    (3732 return(3731 '+' a[3715] b[3724]))
  }
  function +[3747](arg a[3744] :
  (3743 call imag(64)[130] unknown w[3740]), arg b[3753] :
  (3752 call imag(64)[130] w[3740])) : _unknown[51] "inline"
  {
    (3761 return(3760 '+' a[3744] b[3753]))
  }
  function +[3776](arg a[3773] :
  (3772 call complex(128)[140] unknown w[3769]), arg b[3782] :
  (3781 call complex(128)[140] w[3769])) : _unknown[51] "inline"
  {
    (3790 return(3789 '+' a[3773] b[3782]))
  }
  function +[3805](arg a[3802] :
  (3801 call real(64)[16] unknown w[3798]), arg b[3811] :
  (3810 call imag(64)[130] w[3798])) : _unknown[51] "inline"
  {
    (3831 return(3829 call _cast(3828 call complex(128)[140](3825 call * w[3798] 2))(3820 call _build_tuple a[3802](3818 call _i2r b[3811]))))
  }
  function +[3846](arg a[3843] :
  (3842 call imag(64)[130] unknown w[3839]), arg b[3852] :
  (3851 call real(64)[16] w[3839])) : _unknown[51] "inline"
  {
    (3872 return(3870 call _cast(3869 call complex(128)[140](3866 call * w[3839] 2))(3861 call _build_tuple b[3852](3859 call _i2r a[3843]))))
  }
  function +[3887](arg a[3884] :
  (3883 call real(64)[16] unknown w[3880]), arg b[3896] :
  (3895 call complex(128)[140](3892 call * w[3880] 2))) : _unknown[51] "inline"
  {
    (3922 return(3920 call _cast(3919 call complex(128)[140](3916 call * w[3880] 2))(3911 call _build_tuple(3904 call + a[3884](3901 call . b[3896] c"re"))(3907 call . b[3896] c"im"))))
  }
  function +[3937](arg a[3934] :
  (3933 call complex(128)[140] unknown w[3930]), arg b[3946] :
  (3945 call real(64)[16](3942 call / w[3930] 2))) : _unknown[51] "inline"
  {
    (3969 return(3967 call _cast(3966 call complex(128)[140] w[3930])(3961 call _build_tuple(3954 call +(3950 call . a[3934] c"re") b[3946])(3957 call . a[3934] c"im"))))
  }
  function +[3984](arg a[3981] :
  (3980 call imag(64)[130] unknown w[3977]), arg b[3993] :
  (3992 call complex(128)[140](3989 call * w[3977] 2))) : _unknown[51] "inline"
  {
    (4022 return(4020 call _cast(4019 call complex(128)[140](4016 call * w[3977] 2))(4011 call _build_tuple(3997 call . b[3993] c"re")(4008 call +(4003 call _i2r a[3981])(4005 call . b[3993] c"im")))))
  }
  function +[4037](arg a[4034] :
  (4033 call complex(128)[140] unknown w[4030]), arg b[4046] :
  (4045 call imag(64)[130](4042 call / w[4030] 2))) : _unknown[51] "inline"
  {
    (4072 return(4070 call _cast(4069 call complex(128)[140] w[4030])(4064 call _build_tuple(4050 call . a[4034] c"re")(4061 call +(4054 call . a[4034] c"im")(4060 call _i2r b[4046])))))
  }
  function -[4087](arg a[4084] :
  (4083 call int(64)[13] unknown w[4080]), arg b[4093] :
  (4092 call int(64)[13] w[4080])) : _unknown[51] "inline"
  {
    (4117 return(4116 '-' a[4084] b[4093]))
  }
  function -[4132](arg a[4129] :
  (4128 call uint(64)[115] unknown w[4125]), arg b[4138] :
  (4137 call uint(64)[115] w[4125])) : _unknown[51] "inline"
  {
    (4146 return(4145 '-' a[4129] b[4138]))
  }
  function -[4161](arg a[4158] :
  (4157 call real(64)[16] unknown w[4154]), arg b[4167] :
  (4166 call real(64)[16] w[4154])) : _unknown[51] "inline"
  {
    (4175 return(4174 '-' a[4158] b[4167]))
  }
  function -[4190](arg a[4187] :
  (4186 call imag(64)[130] unknown w[4183]), arg b[4196] :
  (4195 call imag(64)[130] w[4183])) : _unknown[51] "inline"
  {
    (4204 return(4203 '-' a[4187] b[4196]))
  }
  function -[4219](arg a[4216] :
  (4215 call complex(128)[140] unknown w[4212]), arg b[4225] :
  (4224 call complex(128)[140] w[4212])) : _unknown[51] "inline"
  {
    (4233 return(4232 '-' a[4216] b[4225]))
  }
  function -[4248](arg a[4245] :
  (4244 call real(64)[16] unknown w[4241]), arg b[4254] :
  (4253 call imag(64)[130] w[4241])) : _unknown[51] "inline"
  {
    (4276 return(4274 call _cast(4273 call complex(128)[140](4270 call * w[4241] 2))(4265 call _build_tuple a[4245](4262 call -(4261 call _i2r b[4254])))))
  }
  function -[4291](arg a[4288] :
  (4287 call imag(64)[130] unknown w[4284]), arg b[4297] :
  (4296 call real(64)[16] w[4284])) : _unknown[51] "inline"
  {
    (4319 return(4317 call _cast(4316 call complex(128)[140](4313 call * w[4284] 2))(4308 call _build_tuple(4301 call - b[4297])(4306 call _i2r a[4288]))))
  }
  function -[4334](arg a[4331] :
  (4330 call real(64)[16] unknown w[4327]), arg b[4343] :
  (4342 call complex(128)[140](4339 call * w[4327] 2))) : _unknown[51] "inline"
  {
    (4371 return(4369 call _cast(4368 call complex(128)[140](4365 call * w[4327] 2))(4360 call _build_tuple(4351 call - a[4331](4348 call . b[4343] c"re"))(4357 call -(4354 call . b[4343] c"im")))))
  }
  function -[4386](arg a[4383] :
  (4382 call complex(128)[140] unknown w[4379]), arg b[4395] :
  (4394 call real(64)[16](4391 call / w[4379] 2))) : _unknown[51] "inline"
  {
    (4418 return(4416 call _cast(4415 call complex(128)[140] w[4379])(4410 call _build_tuple(4403 call -(4399 call . a[4383] c"re") b[4395])(4406 call . a[4383] c"im"))))
  }
  function -[4433](arg a[4430] :
  (4429 call imag(64)[130] unknown w[4426]), arg b[4442] :
  (4441 call complex(128)[140](4438 call * w[4426] 2))) : _unknown[51] "inline"
  {
    (4473 return(4471 call _cast(4470 call complex(128)[140](4467 call * w[4426] 2))(4462 call _build_tuple(4449 call -(4446 call . b[4442] c"re"))(4459 call -(4454 call _i2r a[4430])(4456 call . b[4442] c"im")))))
  }
  function -[4488](arg a[4485] :
  (4484 call complex(128)[140] unknown w[4481]), arg b[4497] :
  (4496 call imag(64)[130](4493 call / w[4481] 2))) : _unknown[51] "inline"
  {
    (4523 return(4521 call _cast(4520 call complex(128)[140] w[4481])(4515 call _build_tuple(4501 call . a[4485] c"re")(4512 call -(4505 call . a[4485] c"im")(4511 call _i2r b[4497])))))
  }
  function +[4538](param arg a[4535] :
  (4534 call int(64)[13] unknown w[4531]), param arg b[4544] :
  (4543 call int(64)[13] w[4531])) param : _unknown[51] "inline"
  {
    (4552 return(4551 '+' a[4535] b[4544]))
  }
  function +[4567](param arg a[4564] :
  (4563 call uint(64)[115] unknown w[4560]), param arg b[4573] :
  (4572 call uint(64)[115] w[4560])) param : _unknown[51] "inline"
  {
    (4581 return(4580 '+' a[4564] b[4573]))
  }
  function +[4596](param arg a[4593] :
  (4592 call real(64)[16] unknown w[4589]), param arg b[4602] :
  (4601 call real(64)[16] w[4589])) param : _unknown[51] "inline"
  {
    (4610 return(4609 '+' a[4593] b[4602]))
  }
  function +[4625](param arg a[4622] :
  (4621 call imag(64)[130] unknown w[4618]), param arg b[4631] :
  (4630 call imag(64)[130] w[4618])) param : _unknown[51] "inline"
  {
    (4639 return(4638 '+' a[4622] b[4631]))
  }
  function +[4654](param arg a[4651] :
  (4650 call complex(128)[140] unknown w[4647]), param arg b[4660] :
  (4659 call complex(128)[140] w[4647])) param : _unknown[51] "inline"
  {
    (4668 return(4667 '+' a[4651] b[4660]))
  }
  function -[4683](param arg a[4680] :
  (4679 call int(64)[13] unknown w[4676]), param arg b[4689] :
  (4688 call int(64)[13] w[4676])) param : _unknown[51] "inline"
  {
    (4697 return(4696 '-' a[4680] b[4689]))
  }
  function -[4712](param arg a[4709] :
  (4708 call uint(64)[115] unknown w[4705]), param arg b[4718] :
  (4717 call uint(64)[115] w[4705])) param : _unknown[51] "inline"
  {
    (4726 return(4725 '-' a[4709] b[4718]))
  }
  function -[4741](param arg a[4738] :
  (4737 call real(64)[16] unknown w[4734]), param arg b[4747] :
  (4746 call real(64)[16] w[4734])) param : _unknown[51] "inline"
  {
    (4755 return(4754 '-' a[4738] b[4747]))
  }
  function -[4770](param arg a[4767] :
  (4766 call imag(64)[130] unknown w[4763]), param arg b[4776] :
  (4775 call imag(64)[130] w[4763])) param : _unknown[51] "inline"
  {
    (4784 return(4783 '-' a[4767] b[4776]))
  }
  function -[4799](param arg a[4796] :
  (4795 call complex(128)[140] unknown w[4792]), param arg b[4805] :
  (4804 call complex(128)[140] w[4792])) param : _unknown[51] "inline"
  {
    (4813 return(4812 '-' a[4796] b[4805]))
  }
  function *[4828](arg a[4825] :
  (4824 call int(64)[13] unknown w[4821]), arg b[4834] :
  (4833 call int(64)[13] w[4821])) : _unknown[51] "inline"
  {
    (4858 return(4857 '*' a[4825] b[4834]))
  }
  function *[4873](arg a[4870] :
  (4869 call uint(64)[115] unknown w[4866]), arg b[4879] :
  (4878 call uint(64)[115] w[4866])) : _unknown[51] "inline"
  {
    (4887 return(4886 '*' a[4870] b[4879]))
  }
  function *[4902](arg a[4899] :
  (4898 call real(64)[16] unknown w[4895]), arg b[4908] :
  (4907 call real(64)[16] w[4895])) : _unknown[51] "inline"
  {
    (4916 return(4915 '*' a[4899] b[4908]))
  }
  function *[4931](arg a[4928] :
  (4927 call imag(64)[130] unknown w[4924]), arg b[4937] :
  (4936 call imag(64)[130] w[4924])) : _unknown[51] "inline"
  {
    (4950 return(4949 call _i2r(4947 '*'(4944 call - a[4928]) b[4937])))
  }
  function *[4965](arg a[4962] :
  (4961 call complex(128)[140] unknown w[4958]), arg b[4971] :
  (4970 call complex(128)[140] w[4958])) : _unknown[51] "inline"
  {
    (4979 return(4978 '*' a[4962] b[4971]))
  }
  function *[4994](arg a[4991] :
  (4990 call real(64)[16] unknown w[4987]), arg b[5000] :
  (4999 call imag(64)[130] w[4987])) : _unknown[51] "inline"
  {
    (5013 return(5012 call _r2i(5009 call * a[4991](5008 call _i2r b[5000]))))
  }
  function *[5028](arg a[5025] :
  (5024 call imag(64)[130] unknown w[5021]), arg b[5034] :
  (5033 call real(64)[16] w[5021])) : _unknown[51] "inline"
  {
    (5047 return(5046 call _r2i(5043 call *(5041 call _i2r a[5025]) b[5034])))
  }
  function *[5062](arg a[5059] :
  (5058 call real(64)[16] unknown w[5055]), arg b[5071] :
  (5070 call complex(128)[140](5067 call * w[5055] 2))) : _unknown[51] "inline"
  {
    (5100 return(5098 call _cast(5097 call complex(128)[140](5094 call * w[5055] 2))(5089 call _build_tuple(5079 call * a[5059](5076 call . b[5071] c"re"))(5086 call * a[5059](5083 call . b[5071] c"im")))))
  }
  function *[5115](arg a[5112] :
  (5111 call complex(128)[140] unknown w[5108]), arg b[5124] :
  (5123 call real(64)[16](5120 call / w[5108] 2))) : _unknown[51] "inline"
  {
    (5150 return(5148 call _cast(5147 call complex(128)[140] w[5108])(5142 call _build_tuple(5132 call *(5128 call . a[5112] c"re") b[5124])(5139 call *(5135 call . a[5112] c"im") b[5124]))))
  }
  function *[5165](arg a[5162] :
  (5161 call imag(64)[130] unknown w[5158]), arg b[5174] :
  (5173 call complex(128)[140](5170 call * w[5158] 2))) : _unknown[51] "inline"
  {
    (5211 return(5209 call _cast(5208 call complex(128)[140](5205 call * w[5158] 2))(5200 call _build_tuple(5187 call -(5185 call *(5180 call _i2r a[5162])(5182 call . b[5174] c"im")))(5197 call *(5192 call _i2r a[5162])(5194 call . b[5174] c"re")))))
  }
  function *[5226](arg a[5223] :
  (5222 call complex(128)[140] unknown w[5219]), arg b[5235] :
  (5234 call imag(64)[130](5231 call / w[5219] 2))) : _unknown[51] "inline"
  {
    (5269 return(5267 call _cast(5266 call complex(128)[140] w[5219])(5261 call _build_tuple(5248 call -(5246 call *(5239 call . a[5223] c"im")(5245 call _i2r b[5235])))(5258 call *(5251 call . a[5223] c"re")(5257 call _i2r b[5235])))))
  }
  function /[5284](arg a[5281] :
  (5280 call int(64)[13] unknown w[5277]), arg b[5290] :
  (5289 call int(64)[13] w[5277])) : _unknown[51] "inline"
  {
    if(5326 call _cond_test 1)
    {
      if(5321 call _cond_test(5296 call == b[5290] 0))
      {
        (5319 call halt "Attempt to divide by zero")
      }
    }
    (5353 return(5352 '/' a[5281] b[5290]))
  }
  function /[5367](arg a[5364] :
  (5363 call uint(64)[115] unknown w[5360]), arg b[5373] :
  (5372 call uint(64)[115] w[5360])) : _unknown[51] "inline"
  {
    if(5391 call _cond_test 1)
    {
      if(5386 call _cond_test(5379 call == b[5373] 0))
      {
        (5384 call halt "Attempt to divide by zero")
      }
    }
    (5402 return(5401 '/' a[5364] b[5373]))
  }
  function /[5416](arg a[5413] :
  (5412 call real(64)[16] unknown w[5409]), arg b[5422] :
  (5421 call real(64)[16] w[5409])) : _unknown[51] "inline"
  {
    (5430 return(5429 '/' a[5413] b[5422]))
  }
  function /[5445](arg a[5442] :
  (5441 call imag(64)[130] unknown w[5438]), arg b[5451] :
  (5450 call imag(64)[130] w[5438])) : _unknown[51] "inline"
  {
    (5462 return(5461 call _i2r(5459 '/' a[5442] b[5451])))
  }
  function /[5477](arg a[5474] :
  (5473 call complex(128)[140] unknown w[5470]), arg b[5483] :
  (5482 call complex(128)[140] w[5470])) : _unknown[51] "inline"
  {
    (5491 return(5490 '/' a[5474] b[5483]))
  }
  function /[5506](arg a[5503] :
  (5502 call real(64)[16] unknown w[5499]), arg b[5512] :
  (5511 call imag(64)[130] w[5499])) : _unknown[51] "inline"
  {
    (5527 return(5526 call _r2i(5523 call -(5521 call / a[5503](5520 call _i2r b[5512])))))
  }
  function /[5542](arg a[5539] :
  (5538 call imag(64)[130] unknown w[5535]), arg b[5548] :
  (5547 call real(64)[16] w[5535])) : _unknown[51] "inline"
  {
    (5561 return(5560 call _r2i(5557 call /(5555 call _i2r a[5539]) b[5548])))
  }
  function /[5576](arg a[5573] :
  (5572 call real(64)[16] unknown w[5569]), arg b[5585] :
  (5584 call complex(128)[140](5581 call * w[5569] 2))) : _unknown[51] "inline"
  {
    const d[5592] "const"(5591 call abs b[5585])
    (5595 'end of statement')
    (5637 return(5635 call _cast(5634 call complex(128)[140](5631 call * w[5569] 2))(5626 call _build_tuple(5608 call *(5599 call / a[5573] d[5592])(5606 call /(5602 call . b[5585] c"re") d[5592]))(5623 call *(5614 call -(5612 call / a[5573] d[5592]))(5621 call /(5617 call . b[5585] c"im") d[5592])))))
  }
  function /[5651](arg a[5648] :
  (5647 call complex(128)[140] unknown w[5644]), arg b[5660] :
  (5659 call real(64)[16](5656 call / w[5644] 2))) : _unknown[51] "inline"
  {
    (5686 return(5684 call _cast(5683 call complex(128)[140] w[5644])(5678 call _build_tuple(5668 call /(5664 call . a[5648] c"re") b[5660])(5675 call /(5671 call . a[5648] c"im") b[5660]))))
  }
  function /[5701](arg a[5698] :
  (5697 call imag(64)[130] unknown w[5694]), arg b[5710] :
  (5709 call complex(128)[140](5706 call * w[5694] 2))) : _unknown[51] "inline"
  {
    const d[5717] "const"(5716 call abs b[5710])
    (5720 'end of statement')
    (5766 return(5764 call _cast(5763 call complex(128)[140](5760 call * w[5694] 2))(5755 call _build_tuple(5736 call *(5727 call /(5725 call _i2r a[5698]) d[5717])(5734 call /(5730 call . b[5710] c"im") d[5717]))(5752 call *(5743 call /(5741 call _i2r a[5698]) d[5717])(5750 call /(5746 call . b[5710] c"re") d[5717])))))
  }
  function /[5780](arg a[5777] :
  (5776 call complex(128)[140] unknown w[5773]), arg b[5789] :
  (5788 call imag(64)[130](5785 call / w[5773] 2))) : _unknown[51] "inline"
  {
    (5823 return(5821 call _cast(5820 call complex(128)[140] w[5773])(5815 call _build_tuple(5800 call /(5793 call . a[5777] c"im")(5799 call _i2r b[5789]))(5812 call -(5810 call /(5803 call . a[5777] c"re")(5809 call _i2r b[5789]))))))
  }
  function *[5838](param arg a[5835] :
  (5834 call int(64)[13] unknown w[5831]), param arg b[5844] :
  (5843 call int(64)[13] w[5831])) param : _unknown[51] "inline"
  {
    (5852 return(5851 '*' a[5835] b[5844]))
  }
  function *[5867](param arg a[5864] :
  (5863 call uint(64)[115] unknown w[5860]), param arg b[5873] :
  (5872 call uint(64)[115] w[5860])) param : _unknown[51] "inline"
  {
    (5881 return(5880 '*' a[5864] b[5873]))
  }
  function *[5896](param arg a[5893] :
  (5892 call real(64)[16] unknown w[5889]), param arg b[5902] :
  (5901 call real(64)[16] w[5889])) param : _unknown[51] "inline"
  {
    (5910 return(5909 '*' a[5893] b[5902]))
  }
  function *[5925](param arg a[5922] :
  (5921 call imag(64)[130] unknown w[5918]), param arg b[5931] :
  (5930 call imag(64)[130] w[5918])) param : _unknown[51] "inline"
  {
    (5947 return(5945 call _cast(5944 call real(64)[16] w[5918])(5940 '*'(5937 call - a[5922]) b[5931])))
  }
  function *[5962](param arg a[5959] :
  (5958 call real(64)[16] unknown w[5955]), param arg b[5968] :
  (5967 call imag(64)[130] w[5955])) param : _unknown[51] "inline"
  {
    (5988 return(5986 call _cast(5985 call imag(64)[130] w[5955])(5981 '*' a[5959](5979 call _cast(5978 call real(64)[16] w[5955]) b[5968]))))
  }
  function *[6003](param arg a[6000] :
  (5999 call imag(64)[130] unknown w[5996]), param arg b[6009] :
  (6008 call real(64)[16] w[5996])) param : _unknown[51] "inline"
  {
    (6029 return(6027 call _cast(6026 call imag(64)[130] w[5996])(6022 '*'(6019 call _cast(6018 call real(64)[16] w[5996]) a[6000]) b[6009])))
  }
  function /[6044](param arg a[6041] :
  (6040 call int(64)[13] unknown w[6037]), param arg b[6050] :
  (6049 call int(64)[13] w[6037])) param : _unknown[51] "inline"
  {
    if(6062 call _cond_test(6055 call == b[6050] 0))
    {
      (6060 call compilerError "Attempt to divide by zero")
    }
    (6073 return(6072 '/' a[6041] b[6050]))
  }
  function /[6087](param arg a[6084] :
  (6083 call uint(64)[115] unknown w[6080]), param arg b[6093] :
  (6092 call uint(64)[115] w[6080])) param : _unknown[51] "inline"
  {
    if(6105 call _cond_test(6098 call == b[6093] 0))
    {
      (6103 call compilerError "Attempt to divide by zero")
    }
    (6116 return(6115 '/' a[6084] b[6093]))
  }
  function /[6130](param arg a[6127] :
  (6126 call real(64)[16] unknown w[6123]), param arg b[6136] :
  (6135 call real(64)[16] w[6123])) param : _unknown[51] "inline"
  {
    (6144 return(6143 '/' a[6127] b[6136]))
  }
  function /[6159](param arg a[6156] :
  (6155 call imag(64)[130] unknown w[6152]), param arg b[6165] :
  (6164 call imag(64)[130] w[6152])) param : _unknown[51] "inline"
  {
    (6179 return(6177 call _cast(6176 call real(64)[16] w[6152])(6172 '/' a[6156] b[6165])))
  }
  function /[6194](param arg a[6191] :
  (6190 call real(64)[16] unknown w[6187]), param arg b[6200] :
  (6199 call imag(64)[130] w[6187])) param : _unknown[51] "inline"
  {
    (6222 return(6220 call _cast(6219 call imag(64)[130] w[6187])(6215 '/'(6206 call - a[6191])(6213 call _cast(6212 call real(64)[16] w[6187]) b[6200]))))
  }
  function /[6237](param arg a[6234] :
  (6233 call imag(64)[130] unknown w[6230]), param arg b[6243] :
  (6242 call real(64)[16] w[6230])) param : _unknown[51] "inline"
  {
    (6263 return(6261 call _cast(6260 call imag(64)[130] w[6230])(6256 '/'(6253 call _cast(6252 call real(64)[16] w[6230]) a[6234]) b[6243])))
  }
  function %[6278](arg a[6275] :
  (6274 call int(64)[13] unknown w[6271]), arg b[6284] :
  (6283 call int(64)[13] w[6271])) : _unknown[51] "inline"
  {
    if(6320 call _cond_test 1)
    {
      if(6315 call _cond_test(6290 call == b[6284] 0))
      {
        (6313 call halt "Attempt to compute a modulus by zero")
      }
    }
    (6347 return(6346 '%' a[6275] b[6284]))
  }
  function %[6361](arg a[6358] :
  (6357 call uint(64)[115] unknown w[6354]), arg b[6367] :
  (6366 call uint(64)[115] w[6354])) : _unknown[51] "inline"
  {
    if(6385 call _cond_test 1)
    {
      if(6380 call _cond_test(6373 call == b[6367] 0))
      {
        (6378 call halt "Attempt to compute a modulus by zero")
      }
    }
    (6396 return(6395 '%' a[6358] b[6367]))
  }
  function %[6410](param arg a[6407] :
  (6406 call int(64)[13] unknown w[6403]), param arg b[6416] :
  (6415 call int(64)[13] w[6403])) param : _unknown[51] "inline"
  {
    if(6428 call _cond_test(6421 call == b[6416] 0))
    {
      (6426 call compilerError "Attempt to compute a modulus by zero")
    }
    (6439 return(6438 '%' a[6407] b[6416]))
  }
  function %[6453](param arg a[6450] :
  (6449 call uint(64)[115] unknown w[6446]), param arg b[6459] :
  (6458 call uint(64)[115] w[6446])) param : _unknown[51] "inline"
  {
    if(6471 call _cond_test(6464 call == b[6459] 0))
    {
      (6469 call compilerError "Attempt to compute a modulus by zero")
    }
    (6482 return(6481 '%' a[6450] b[6459]))
  }
  function _intExpHelp[6492](arg a[6489] :
  integral[199](?), arg b[6494]:_any[178](?)) : _unknown[51] "inline"
  {
    if(6611 call _cond_test(6511 call &&(6506 call isIntType(6504 'typeof' b[6494]))(6509 call < b[6494] 0)))
    {
      if(6605 call _cond_test(6515 call == a[6489] 0))
      {
        (6559 call halt "cannot compute " a[6489] " ** " b[6494])
      }
      {
        if(6599 call _cond_test(6563 call == a[6489] 1))
        {
          (6566 return 1)
        }
        {
          if(6593 call _cond_test(6572 call == a[6489](6570 call - 1)))
          {
            (6588 return(6585 IfExpr (6579 call ==(6576 call % b[6494] 2) 0) then
            { scopeless
              1
            } else
            { scopeless
              (6583 call - 1)
            } ))
          }
          {
            (6591 return 0)
          }
        }
      }
    }
    unknown i[6618] b[6494]
    unknown y[6624] 1(6622 'typeof' a[6489])
    unknown z[6628] a[6489]
    (6631 'end of statement')
    {
      unknown tmp[6664] "temp"
      (6688 'move' tmp[6664](6683 call _cond_test(6685 call != i[6618] 0)))
      WhileDo[6669]
      {
        {
          if(6648 call _cond_test(6641 call ==(6638 call % i[6618] 2) 1))
          {
            (6645 call *= y[6624] z[6628])
          }
          (6656 call *= z[6628] z[6628])
          (6661 call /= i[6618] 2)
        }
        label _continueLabel[6667]
        (6678 'move' tmp[6664](6673 call _cond_test(6675 call != i[6618] 0)))
        tmp[6664]
      }
      label _breakLabel[6668]
    }
    (6692 return y[6624])
  }
  where {
    (6500 call ==(6497 'typeof' a[6489])(6499 'typeof' b[6494]))
  }
  function **[6707](arg a[6704] :
  (6703 call int(64)[13] unknown w[6700]), arg b[6713] :
  (6712 call int(64)[13] w[6700])) : _unknown[51] "inline"
  {
    (6721 return(6720 call _intExpHelp a[6704] b[6713]))
  }
  function **[6736](arg a[6733] :
  (6732 call uint(64)[115] unknown w[6729]), arg b[6742] :
  (6741 call uint(64)[115] w[6729])) : _unknown[51] "inline"
  {
    (6750 return(6749 call _intExpHelp a[6733] b[6742]))
  }
  function **[6765](arg a[6762] :
  (6761 call real(64)[16] unknown w[6758]), arg b[6771] :
  (6770 call real(64)[16] w[6758])) : _unknown[51] "inline"
  {
    (6795 return(6794 '**' a[6762] b[6771]))
  }
  function **[6810](arg a[6807] :
  (6806 call complex(128)[140] unknown w[6803]), arg b[6816] :
  (6815 call complex(128)[140] w[6803])) : _unknown[51] "inline"
  {
    if(6895 call _cond_test(6827 call ==(6820 'typeof' a[6807])(6826 call complex(128)[140] 128)))
    {
      function cpow[6838](arg x[6835] :
      (6834 call complex(128)[140] 128), arg y[6844] :
      (6843 call complex(128)[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (6850 call complex(128)[140] 128)
      }
      (6860 return(6859 call cpow a[6807] b[6816]))
    }
    {
      function cpowf[6871](arg x[6868] :
      (6867 call complex(128)[140] 64), arg y[6877] :
      (6876 call complex(128)[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (6883 call complex(128)[140] 64)
      }
      (6893 return(6892 call cpowf a[6807] b[6816]))
    }
  }
  function **[6912](param arg a[6909] :
  (6908 call int(64)[13] unknown w[6905]), param arg b[6918] :
  (6917 call int(64)[13] w[6905])) param : _unknown[51]
  {
    (6926 return(6925 '**' a[6909] b[6918]))
  }
  function **[6941](param arg a[6938] :
  (6937 call uint(64)[115] unknown w[6934]), param arg b[6947] :
  (6946 call uint(64)[115] w[6934])) param : _unknown[51]
  {
    (6955 return(6954 '**' a[6938] b[6947]))
  }
  function _expHelp[6964](arg a[6962]:_any[178](?), param arg b[6967] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(7168 call _cond_test(6972 call == b[6967] 0))
    {
      (6979 return(6977 call _cast(6976 'typeof' a[6962]) 1))
    }
    {
      if(7163 call _cond_test(6984 call == b[6967] 1))
      {
        (6987 return a[6962])
      }
      {
        if(7158 call _cond_test(6992 call == b[6967] 2))
        {
          (6998 return(6996 call * a[6962] a[6962]))
        }
        {
          if(7153 call _cond_test(7005 call == b[6967] 3))
          {
            (7014 return(7012 call *(7009 call * a[6962] a[6962]) a[6962]))
          }
          {
            if(7148 call _cond_test(7019 call == b[6967] 4))
            {
              const t[7025] "const"(7023 call * a[6962] a[6962])
              (7028 'end of statement')
              (7034 return(7032 call * t[7025] t[7025]))
            }
            {
              if(7143 call _cond_test(7040 call == b[6967] 5))
              {
                const t[7046] "const"(7044 call * a[6962] a[6962])
                (7049 'end of statement')
                (7058 return(7056 call *(7053 call * t[7046] t[7046]) a[6962]))
              }
              {
                if(7138 call _cond_test(7062 call == b[6967] 6))
                {
                  const t[7068] "const"(7066 call * a[6962] a[6962])
                  (7071 'end of statement')
                  (7080 return(7078 call *(7075 call * t[7068] t[7068]) t[7068]))
                }
                {
                  if(7133 call _cond_test(7086 call == b[6967] 8))
                  {
                    const t[7092] "const"(7090 call * a[6962] a[6962])
                    const u[7099] "const"(7097 call * t[7092] t[7092])
                    (7102 'end of statement')
                    (7108 return(7106 call * u[7099] u[7099]))
                  }
                  {
                    (7131 call compilerError "unexpected case in exponentiation optimization")
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _expBaseHelp[7182](param arg a[7179] :
  int(64)[13], arg b[7184]:_any[178](?)) : _unknown[51] "inline"
  {
    if(7201 call _cond_test(7192 call == b[7184] 0))
    {
      (7199 return(7197 call _cast(7196 'typeof' a[7179]) 1))
    }
    if(7227 call _cond_test(7209 call < b[7184] 0))
    {
      if(7221 call _cond_test(7213 call == a[7179] 1))
      {
        (7216 return 1)
      }
      {
        (7219 return 0)
      }
    }
    unknown c[7233] 0
    (7236 'end of statement')
    unknown x[7239] a[7179] int(64)[13]
    (7242 'end of statement')
    {
      unknown tmp[7261] "temp"
      (7285 'move' tmp[7261](7280 call _cond_test(7282 call > x[7239] 1)))
      WhileDo[7266]
      {
        {
          (7249 call += c[7233] 1)
          (7258 call = x[7239](7256 call >> x[7239] 1))
        }
        label _continueLabel[7264]
        (7275 'move' tmp[7261](7270 call _cond_test(7272 call > x[7239] 1)))
        tmp[7261]
      }
      label _breakLabel[7265]
    }
    unknown exp[7295](7293 call * c[7233](7291 call - b[7184] 1))
    (7298 'end of statement')
    (7303 return(7301 call << a[7179] exp[7295]))
  }
  where {
    (7189 call _basePowerTwo a[7179])
  }
  function _canOptimizeExp[7314](param arg b[7311] :
  integral[199](?)) param : _unknown[51]
  {
    (7332 return(7330 call &&(7324 call &&(7318 call >= b[7311] 0)(7322 call <= b[7311] 8))(7328 call != b[7311] 7)))
  }
  function _basePowerTwo[7343](param arg a[7340] :
  integral[199](?)) param : _unknown[51]
  {
    (7363 return(7361 call &&(7347 call > a[7340] 0)(7359 call ==(7356 call & a[7340](7354 call +(7351 call ~ a[7340]) 1)) a[7340])))
  }
  function **[7378](arg a[7375] :
  (7374 call int(64)[13] unknown w[7371]), param arg b[7381] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (7393 return(7392 call _expHelp a[7375] b[7381]))
  }
  where {
    (7387 call _canOptimizeExp b[7381])
  }
  function **[7409](arg a[7406] :
  (7405 call uint(64)[115] unknown w[7402]), param arg b[7412] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (7424 return(7423 call _expHelp a[7406] b[7412]))
  }
  where {
    (7418 call _canOptimizeExp b[7412])
  }
  function **[7440](arg a[7437] :
  (7436 call real(64)[16] unknown w[7433]), param arg b[7443] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (7455 return(7454 call _expHelp a[7437] b[7443]))
  }
  where {
    (7449 call _canOptimizeExp b[7443])
  }
  function **[7467](param arg a[7464] :
  integral[199](?), arg b[7470] :
  int(64)[13]) : _unknown[51] "inline"
  {
    (7482 return(7481 call _expBaseHelp a[7464] b[7470]))
  }
  where {
    (7476 call _basePowerTwo a[7464])
  }
  function ![7494](arg a[7491] :
  bool[10]) : _unknown[51] "inline"
  {
    (7516 return(7515 '!' a[7491]))
  }
  function ![7531](arg a[7528] :
  (7527 call int(64)[13] unknown w[7524])) : _unknown[51] "inline"
  {
    (7537 return(7535 call == a[7528] 0))
  }
  function ![7552](arg a[7549] :
  (7548 call uint(64)[115] unknown w[7545])) : _unknown[51] "inline"
  {
    (7558 return(7556 call == a[7549] 0))
  }
  function isTrue[7569](arg a[7566] :
  bool[10]) : _unknown[51] "inline"
  {
    (7572 return a[7566])
  }
  function isTrue[7583](param arg a[7580] :
  bool[10]) param : _unknown[51] "inline"
  {
    (7586 return a[7580])
  }
  function isTrue[7597](arg a[7594] :
  integral[199](?)) : _unknown[51] "no return value for void"
  {
    (7620 call compilerError "short-circuiting logical operators not supported on integers")
  }
  function ![7631](param arg a[7628] :
  bool[10]) param : _unknown[51] "inline"
  {
    (7637 return(7636 '!' a[7628]))
  }
  function ![7652](param arg a[7649] :
  (7648 call int(64)[13] unknown w[7645])) param : _unknown[51] "inline"
  {
    (7658 return(7656 call == a[7649] 0))
  }
  function ![7673](param arg a[7670] :
  (7669 call uint(64)[115] unknown w[7666])) param : _unknown[51] "inline"
  {
    (7679 return(7677 call == a[7670] 0))
  }
  function ~[7694](arg a[7691] :
  (7690 call int(64)[13] unknown w[7687])) : _unknown[51] "inline"
  {
    (7716 return(7715 'u~' a[7691]))
  }
  function ~[7731](arg a[7728] :
  (7727 call uint(64)[115] unknown w[7724])) : _unknown[51] "inline"
  {
    (7737 return(7736 'u~' a[7728]))
  }
  function ~[7748](arg a[7745] :
  bool[10]) : _unknown[51] "inline" "no return value for void"
  {
    (7769 call compilerError "~ is not supported on operands of boolean type")
  }
  function &[7780](arg a[7777] :
  bool[10], arg b[7783] :
  bool[10]) : _unknown[51] "inline"
  {
    (7807 return(7806 '&' a[7777] b[7783]))
  }
  function &[7822](arg a[7819] :
  (7818 call int(64)[13] unknown w[7815]), arg b[7828] :
  (7827 call int(64)[13] w[7815])) : _unknown[51] "inline"
  {
    (7836 return(7835 '&' a[7819] b[7828]))
  }
  function &[7851](arg a[7848] :
  (7847 call uint(64)[115] unknown w[7844]), arg b[7857] :
  (7856 call uint(64)[115] w[7844])) : _unknown[51] "inline"
  {
    (7865 return(7864 '&' a[7848] b[7857]))
  }
  function &[7880](arg a[7877] :
  (7876 call uint(64)[115] unknown w[7873]), arg b[7886] :
  (7885 call int(64)[13] w[7873])) : _unknown[51] "inline"
  {
    (7900 return(7899 '&' a[7877](7897 call _cast(7896 call uint(64)[115] w[7873]) b[7886])))
  }
  function &[7915](arg a[7912] :
  (7911 call int(64)[13] unknown w[7908]), arg b[7921] :
  (7920 call uint(64)[115] w[7908])) : _unknown[51] "inline"
  {
    (7935 return(7934 '&'(7931 call _cast(7930 call uint(64)[115] w[7908]) a[7912]) b[7921]))
  }
  function |[7946](arg a[7943] :
  bool[10], arg b[7949] :
  bool[10]) : _unknown[51] "inline"
  {
    (7973 return(7972 '|' a[7943] b[7949]))
  }
  function |[7988](arg a[7985] :
  (7984 call int(64)[13] unknown w[7981]), arg b[7994] :
  (7993 call int(64)[13] w[7981])) : _unknown[51] "inline"
  {
    (8002 return(8001 '|' a[7985] b[7994]))
  }
  function |[8017](arg a[8014] :
  (8013 call uint(64)[115] unknown w[8010]), arg b[8023] :
  (8022 call uint(64)[115] w[8010])) : _unknown[51] "inline"
  {
    (8031 return(8030 '|' a[8014] b[8023]))
  }
  function |[8046](arg a[8043] :
  (8042 call uint(64)[115] unknown w[8039]), arg b[8052] :
  (8051 call int(64)[13] w[8039])) : _unknown[51] "inline"
  {
    (8066 return(8065 '|' a[8043](8063 call _cast(8062 call uint(64)[115] w[8039]) b[8052])))
  }
  function |[8081](arg a[8078] :
  (8077 call int(64)[13] unknown w[8074]), arg b[8087] :
  (8086 call uint(64)[115] w[8074])) : _unknown[51] "inline"
  {
    (8101 return(8100 '|'(8097 call _cast(8096 call uint(64)[115] w[8074]) a[8078]) b[8087]))
  }
  function ^[8112](arg a[8109] :
  bool[10], arg b[8115] :
  bool[10]) : _unknown[51] "inline"
  {
    (8139 return(8138 '^' a[8109] b[8115]))
  }
  function ^[8154](arg a[8151] :
  (8150 call int(64)[13] unknown w[8147]), arg b[8160] :
  (8159 call int(64)[13] w[8147])) : _unknown[51] "inline"
  {
    (8168 return(8167 '^' a[8151] b[8160]))
  }
  function ^[8183](arg a[8180] :
  (8179 call uint(64)[115] unknown w[8176]), arg b[8189] :
  (8188 call uint(64)[115] w[8176])) : _unknown[51] "inline"
  {
    (8197 return(8196 '^' a[8180] b[8189]))
  }
  function ^[8212](arg a[8209] :
  (8208 call uint(64)[115] unknown w[8205]), arg b[8218] :
  (8217 call int(64)[13] w[8205])) : _unknown[51] "inline"
  {
    (8232 return(8231 '^' a[8209](8229 call _cast(8228 call uint(64)[115] w[8205]) b[8218])))
  }
  function ^[8247](arg a[8244] :
  (8243 call int(64)[13] unknown w[8240]), arg b[8253] :
  (8252 call uint(64)[115] w[8240])) : _unknown[51] "inline"
  {
    (8267 return(8266 '^'(8263 call _cast(8262 call uint(64)[115] w[8240]) a[8244]) b[8253]))
  }
  function ~[8278](param arg a[8275] :
  bool[10]) : _unknown[51] "inline" "no return value for void"
  {
    (8283 call compilerError "~ is not supported on operands of boolean type")
  }
  function ~[8298](param arg a[8295] :
  (8294 call int(64)[13] unknown w[8291])) param : _unknown[51] "inline"
  {
    (8304 return(8303 'u~' a[8295]))
  }
  function ~[8319](param arg a[8316] :
  (8315 call uint(64)[115] unknown w[8312])) param : _unknown[51] "inline"
  {
    (8325 return(8324 'u~' a[8316]))
  }
  function &[8336](param arg a[8333] :
  bool[10], param arg b[8339] :
  bool[10]) param : _unknown[51] "inline"
  {
    (8347 return(8346 '&' a[8333] b[8339]))
  }
  function &[8362](param arg a[8359] :
  (8358 call int(64)[13] unknown w[8355]), param arg b[8368] :
  (8367 call int(64)[13] w[8355])) param : _unknown[51] "inline"
  {
    (8376 return(8375 '&' a[8359] b[8368]))
  }
  function &[8391](param arg a[8388] :
  (8387 call uint(64)[115] unknown w[8384]), param arg b[8397] :
  (8396 call uint(64)[115] w[8384])) param : _unknown[51] "inline"
  {
    (8405 return(8404 '&' a[8388] b[8397]))
  }
  function &[8420](param arg a[8417] :
  (8416 call uint(64)[115] unknown w[8413]), param arg b[8426] :
  (8425 call int(64)[13] w[8413])) param : _unknown[51] "inline"
  {
    (8440 return(8439 '&' a[8417](8437 call _cast(8436 call uint(64)[115] w[8413]) b[8426])))
  }
  function &[8455](param arg a[8452] :
  (8451 call int(64)[13] unknown w[8448]), param arg b[8461] :
  (8460 call uint(64)[115] w[8448])) param : _unknown[51] "inline"
  {
    (8475 return(8474 '&'(8471 call _cast(8470 call uint(64)[115] w[8448]) a[8452]) b[8461]))
  }
  function |[8486](param arg a[8483] :
  bool[10], param arg b[8489] :
  bool[10]) param : _unknown[51] "inline"
  {
    (8497 return(8496 '|' a[8483] b[8489]))
  }
  function |[8512](param arg a[8509] :
  (8508 call int(64)[13] unknown w[8505]), param arg b[8518] :
  (8517 call int(64)[13] w[8505])) param : _unknown[51] "inline"
  {
    (8526 return(8525 '|' a[8509] b[8518]))
  }
  function |[8541](param arg a[8538] :
  (8537 call uint(64)[115] unknown w[8534]), param arg b[8547] :
  (8546 call uint(64)[115] w[8534])) param : _unknown[51] "inline"
  {
    (8555 return(8554 '|' a[8538] b[8547]))
  }
  function |[8570](param arg a[8567] :
  (8566 call uint(64)[115] unknown w[8563]), param arg b[8576] :
  (8575 call int(64)[13] w[8563])) param : _unknown[51] "inline"
  {
    (8590 return(8589 '|' a[8567](8587 call _cast(8586 call uint(64)[115] w[8563]) b[8576])))
  }
  function |[8605](param arg a[8602] :
  (8601 call int(64)[13] unknown w[8598]), param arg b[8611] :
  (8610 call uint(64)[115] w[8598])) param : _unknown[51] "inline"
  {
    (8625 return(8624 '|'(8621 call _cast(8620 call uint(64)[115] w[8598]) a[8602]) b[8611]))
  }
  function ^[8636](param arg a[8633] :
  bool[10], param arg b[8639] :
  bool[10]) param : _unknown[51] "inline"
  {
    (8647 return(8646 '^' a[8633] b[8639]))
  }
  function ^[8662](param arg a[8659] :
  (8658 call int(64)[13] unknown w[8655]), param arg b[8668] :
  (8667 call int(64)[13] w[8655])) param : _unknown[51] "inline"
  {
    (8676 return(8675 '^' a[8659] b[8668]))
  }
  function ^[8691](param arg a[8688] :
  (8687 call uint(64)[115] unknown w[8684]), param arg b[8697] :
  (8696 call uint(64)[115] w[8684])) param : _unknown[51] "inline"
  {
    (8705 return(8704 '^' a[8688] b[8697]))
  }
  function ^[8720](param arg a[8717] :
  (8716 call uint(64)[115] unknown w[8713]), param arg b[8726] :
  (8725 call int(64)[13] w[8713])) param : _unknown[51] "inline"
  {
    (8740 return(8739 '^' a[8717](8737 call _cast(8736 call uint(64)[115] w[8713]) b[8726])))
  }
  function ^[8755](param arg a[8752] :
  (8751 call int(64)[13] unknown w[8748]), param arg b[8761] :
  (8760 call uint(64)[115] w[8748])) param : _unknown[51] "inline"
  {
    (8775 return(8774 '^'(8771 call _cast(8770 call uint(64)[115] w[8748]) a[8752]) b[8761]))
  }
  function bitshiftChecks[8784](arg a[8782]:_any[178](?), arg b[8787] :
  integral[199](?)) : _unknown[51] "inline" "no return value for void"
  {
    if(8985 call _cond_test(8796 call < b[8787] 0))
    {
      unknown msg[8892](8890 call +(8871 call +(8865 call +(8844 call +(8838 call +(8819 call + "Cannot bitshift "(8817 call _cast string[26] a[8782])) " by ")(8842 call _cast string[26] b[8787])) " because ")(8869 call _cast string[26] b[8787])) " is less than 0")
      (8895 'end of statement')
      (8905 call boundsCheckHalt module=[255] HaltWrappers[209910] msg[8892])
      (356338 'referenced modules list' HaltWrappers[209910])
    }
    {
      if(8981 call _cond_test(8913 call >= b[8787](8912 call numBits(8910 'typeof' a[8782]))))
      {
        unknown msg[8968](8966 call +(8959 call +(8938 call +(8932 call +(8929 call +(8923 call +(8920 call + "Cannot bitshift "(8918 call _cast string[26] a[8782])) " by ")(8927 call _cast string[26] b[8787])) " because ")(8936 call _cast string[26] b[8787])) " is >= the bitwidth of ")(8964 call _cast string[26](8962 'typeof' a[8782])))
        (8971 'end of statement')
        (8979 call boundsCheckHalt module=[255] HaltWrappers[209910] msg[8968])
        (356344 'referenced modules list' HaltWrappers[209910])
      }
    }
    (354853 'used modules list'(8791 'use' HaltWrappers[209910]))
  }
  function bitshiftChecks[8996](param arg a[8994]:_any[178](?), param arg b[8999] :
  integral[199](?)) : _unknown[51] "inline" "no return value for void"
  {
    if(9101 call _cond_test(9004 call < b[8999] 0))
    {
      unknown msg[9034] "param"(9032 call +(9029 call +(9023 call +(9020 call +(9014 call +(9011 call + "Cannot bitshift "(9009 call _cast string[26] a[8994])) " by ")(9018 call _cast string[26] b[8999])) " because ")(9027 call _cast string[26] b[8999])) " is less than 0")
      (9037 'end of statement')
      (9042 call compilerError msg[9034])
    }
    {
      if(9097 call _cond_test(9050 call >= b[8999](9049 call numBits(9047 'typeof' a[8994]))))
      {
        unknown msg[9087] "param"(9085 call +(9078 call +(9075 call +(9069 call +(9066 call +(9060 call +(9057 call + "Cannot bitshift "(9055 call _cast string[26] a[8994])) " by ")(9064 call _cast string[26] b[8999])) " because ")(9073 call _cast string[26] b[8999])) " is >= the bitwidth of ")(9083 call _cast string[26](9081 'typeof' a[8994])))
        (9090 'end of statement')
        (9095 call compilerError msg[9087])
      }
    }
  }
  function <<[9119](arg a[9116] :
  (9115 call int(64)[13] unknown w[9112]), arg b[9122] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(9132 call _cond_test 1)
    {
      (9130 call bitshiftChecks a[9116] b[9122])
    }
    (9171 return(9169 call _cast(9168 call int(64)[13] w[9112])(9164 '<<'(9161 call _cast(9160 call uint(64)[115] w[9112]) a[9116]) b[9122])))
  }
  function <<[9185](arg a[9182] :
  (9181 call uint(64)[115] unknown w[9178]), arg b[9188] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(9198 call _cond_test 1)
    {
      (9196 call bitshiftChecks a[9182] b[9188])
    }
    (9209 return(9208 '<<' a[9182] b[9188]))
  }
  function >>[9223](arg a[9220] :
  (9219 call int(64)[13] unknown w[9216]), arg b[9226] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(9236 call _cond_test 1)
    {
      (9234 call bitshiftChecks a[9220] b[9226])
    }
    (9263 return(9262 '>>' a[9220] b[9226]))
  }
  function >>[9277](arg a[9274] :
  (9273 call uint(64)[115] unknown w[9270]), arg b[9280] :
  integral[199](?)) : _unknown[51] "inline"
  {
    if(9290 call _cond_test 1)
    {
      (9288 call bitshiftChecks a[9274] b[9280])
    }
    (9301 return(9300 '>>' a[9274] b[9280]))
  }
  function <<[9315](param arg a[9312] :
  (9311 call int(64)[13] unknown w[9308]), param arg b[9318] :
  integral[199](?)) param : _unknown[51] "inline"
  {
    if(9328 call _cond_test 1)
    {
      (9326 call bitshiftChecks a[9312] b[9318])
    }
    (9351 return(9349 call _cast(9348 call int(64)[13] w[9308])(9344 '<<'(9341 call _cast(9340 call uint(64)[115] w[9308]) a[9312]) b[9318])))
  }
  function <<[9365](param arg a[9362] :
  (9361 call uint(64)[115] unknown w[9358]), param arg b[9368] :
  integral[199](?)) param : _unknown[51] "inline"
  {
    if(9378 call _cond_test 1)
    {
      (9376 call bitshiftChecks a[9362] b[9368])
    }
    (9389 return(9388 '<<' a[9362] b[9368]))
  }
  function >>[9403](param arg a[9400] :
  (9399 call int(64)[13] unknown w[9396]), param arg b[9406] :
  integral[199](?)) param : _unknown[51] "inline"
  {
    if(9416 call _cond_test 1)
    {
      (9414 call bitshiftChecks a[9400] b[9406])
    }
    (9427 return(9426 '>>' a[9400] b[9406]))
  }
  function >>[9441](param arg a[9438] :
  (9437 call uint(64)[115] unknown w[9434]), param arg b[9444] :
  integral[199](?)) param : _unknown[51] "inline"
  {
    if(9454 call _cond_test 1)
    {
      (9452 call bitshiftChecks a[9438] b[9444])
    }
    (9465 return(9464 '>>' a[9438] b[9444]))
  }
  function checkNotNil[9477](arg x[9474] :
  _borrowedNilable[217](?)) : _unknown[51] "always propagate line file info" "inline" "private" "no return value for void"
  {
    if(9525 call _cond_test(9485 call || 1 enablePostfixBangChecks[324]))
    {
      if(9520 call _cond_test(9489 call == x[9474] nil[44]))
      {
        (9517 call nilCheckHalt module=[255] HaltWrappers[209910] "argument to ! is nil")
        (356350 'referenced modules list' HaltWrappers[209910])
      }
    }
    (354855 'used modules list'(9480 'import' HaltWrappers[209910]))
  }
  function postfix![9537](arg t[9534] :
  class[232](?)) type : _unknown[51] "inline"
  {
    (9560 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9570 return(9569 call _to_borrowed(9567 call _to_nonnil t[9534])))
  }
  function postfix![9581](arg t[9578] :
  _anyManagementNilable[235](?)) type : _unknown[51] "inline"
  {
    (9586 call compilerWarning "applying the postfix-! operator to a type is deprecated; instead use a cast to 'class' or 'borrowed class', e.g. 'MyType :borr)
    (9596 return(9595 call _to_borrowed(9593 call _to_nonnil t[9578])))
  }
  function postfix![9607](arg x[9604] :
  _unmanagedNonNilable[223](?)) : _unknown[51] "inline"
  {
    (9613 return(9612 call _to_nonnil x[9604]))
  }
  function postfix![9625](arg x[9622] :
  _borrowedNonNilable[214](?)) : _unknown[51] "inline"
  {
    (9631 return(9630 call _to_nonnil x[9622]))
  }
  function postfix![9644](arg x[9641] :
  _unmanagedNilable[226](?)) : _unknown[51] "always propagate line file info" "inline"
  {
    (9652 call checkNotNil(9650 call _to_borrowed x[9641]))
    (9659 return(9658 call _to_nonnil x[9641]))
  }
  function postfix![9671](arg x[9668] :
  _borrowedNilable[217](?)) : _unknown[51] "always propagate line file info" "inline"
  {
    (9676 call checkNotNil x[9668])
    (9683 return(9682 call _to_nonnil x[9668]))
  }
  function postfix![9691](arg x[9689]:_any[178](?)) : _unknown[51] "last resort" "no return value for void"
  {
    (9714 call compilerError "postfix ! can only apply to classes")
  }
  function chpl_statementLevelSymbol[9723](arg a[9721]:_any[178](?)) : _unknown[51] "inline" "no return value for void"
  {
  }
  function chpl_statementLevelSymbol[9734](arg a[9731] :
  _syncvar[84944](?)) : _unknown[51] "inline" "no return value for void"
  {
    (9743 call(9739 call . a[9731] c"readFE"))
  }
  function chpl_statementLevelSymbol[9754](arg a[9751] :
  _singlevar[87253](?)) : _unknown[51] "inline" "no return value for void"
  {
    (9763 call(9759 call . a[9751] c"readFF"))
  }
  function chpl_statementLevelSymbol[9774](arg ir[9771] :
  _iteratorRecord[205](?)) : _unknown[51] "inline" "no return value for void"
  {
    function _ir_copy_recursive[9780](arg ir[9778]:_any[178](?)) : _unknown[51] "iterator fn" "no return value for void"
    {
      {
        unknown _indexOfInterest[9790] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[9791] "expr temp" "temp"
        (9800 'move' _iterator[9791](9798 call _getIterator ir[9778]))
        Defer
        {
          {
            (9816 call _freeIterator _iterator[9791])
          }
        }
        { scopeless type
          (9805 'move' _indexOfInterest[9790](9802 call iteratorIndex _iterator[9791]))
        }
        ForLoop[9792]
        {
          unknown e[9809] "index var" "insert auto destroy"
          (9811 'move' e[9809] _indexOfInterest[9790])
          (9788 yield(9787 call chpl__initCopy e[9809]))
          label _continueLabel[9795]
          _indexOfInterest[9790]
          _iterator[9791]
        }
        label _breakLabel[9796]
      }
    }
    unknown irc[9831] "no copy"(9830 call _ir_copy_recursive ir[9771])
    (9834 'end of statement')
    {
      unknown _indexOfInterest[9838] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[9839] "expr temp" "temp"
      (9848 'move' _iterator[9839](9846 call _getIterator irc[9831]))
      Defer
      {
        {
          (9864 call _freeIterator _iterator[9839])
        }
      }
      { scopeless type
        (9853 'move' _indexOfInterest[9838](9850 call iteratorIndex _iterator[9839]))
      }
      ForLoop[9840]
      {
        unknown e[9857] "index var" "insert auto destroy"
        (9859 'move' e[9857] _indexOfInterest[9838])
        {
        }
        label _continueLabel[9843]
        _indexOfInterest[9838]
        _iterator[9839]
      }
      label _breakLabel[9844]
    }
  }
  function _cond_test[9881](arg x[9878] :
  borrowed object?[415248]) : _unknown[51] "inline"
  {
    (9887 return(9885 call != x[9878] nil[44]))
  }
  function _cond_test[9898](arg x[9895] :
  bool[10]) : _unknown[51] "inline"
  {
    (9901 return x[9895])
  }
  function _cond_test[9912](arg x[9909] :
  int(64)[13]) : _unknown[51] "inline"
  {
    (9918 return(9916 call != x[9909] 0))
  }
  function _cond_test[9929](arg x[9926] :
  uint(64)[115]) : _unknown[51] "inline"
  {
    (9935 return(9933 call != x[9926] 0))
  }
  function _cond_test[9946](param arg x[9943] :
  bool[10]) param : _unknown[51] "inline"
  {
    (9949 return x[9943])
  }
  function _cond_test[9960](param arg x[9957] :
  integral[199](?)) param : _unknown[51] "inline"
  {
    (9970 return(9968 call != x[9957](9966 call _cast(9965 'typeof' x[9957]) 0)))
  }
  function _cond_test[9979](arg x[9977]:_any[178](?)) : _unknown[51] "inline" "no return value for void"
  {
    if(10080 call _cond_test(9986 call !(9984 call <=(9982 'typeof' x[9977]) _iteratorRecord[205](?))))
    {
      (10031 call compilerError "type '"(10010 call _cast string[26](10008 'typeof' x[9977])) "' used in if or while condition")
    }
    {
      (10078 call compilerError "iterator or promoted expression "(10057 call _cast string[26](10055 'typeof' x[9977])) " used in if or while condition")
    }
  }
  function _cond_invalid[10097](arg x[10094] :
  borrowed object?[415248]) param : _unknown[51]
  {
    (10100 return 0)
  }
  function _cond_invalid[10111](arg x[10108] :
  bool[10]) param : _unknown[51]
  {
    (10114 return 0)
  }
  function _cond_invalid[10125](arg x[10122] :
  int(64)[13]) param : _unknown[51]
  {
    (10128 return 0)
  }
  function _cond_invalid[10139](arg x[10136] :
  uint(64)[115]) param : _unknown[51]
  {
    (10142 return 0)
  }
  function _cond_invalid[10151](arg x[10149]:_any[178](?)) param : _unknown[51]
  {
    (10154 return 1)
  }
  function isNonnegative[10168](arg i[10165] :
  (10164 call int(64)[13] ?[260])) : _unknown[51] "inline"
  {
    (10174 return(10172 call >= i[10165] 0))
  }
  function isNonnegative[10188](arg i[10185] :
  (10184 call uint(64)[115] ?[260])) param : _unknown[51] "inline"
  {
    (10191 return 1)
  }
  function isNonnegative[10200](param arg i[10198]:_any[178](?)) param : _unknown[51] "inline"
  {
    (10206 return(10204 call >= i[10198] 0))
  }
  function chpl_anycomplex[184](?).re[10214](arg _mt[10219]:_MT[238], ref arg this[10216]:chpl_anycomplex[184](?) :
  chpl_anycomplex[184](?)) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10241 return(10240 'complex_get_real' this[10216]))
  }
  function chpl_anycomplex[184](?).re[10249](arg _mt[10254]:_MT[238], arg this[10251]:chpl_anycomplex[184](?) :
  chpl_anycomplex[184](?)) : _unknown[51] "inline" "method" "no parens"
  {
    if(10314 call _cond_test(10262 call ==(10257 'typeof' this[10251])(10261 call complex(128)[140] 128)))
    {
      function creal[10273](arg x[10270] :
      (10269 call complex(128)[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10278 call real(64)[16] 64)
      }
      (10287 return(10286 call creal this[10251]))
    }
    {
      function crealf[10298](arg x[10295] :
      (10294 call complex(128)[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10303 call real(64)[16] 32)
      }
      (10312 return(10311 call crealf this[10251]))
    }
  }
  function chpl_anycomplex[184](?).im[10324](arg _mt[10329]:_MT[238], ref arg this[10326]:chpl_anycomplex[184](?) :
  chpl_anycomplex[184](?)) ref : _unknown[51] "inline" "method" "no parens"
  {
    (10351 return(10350 'complex_get_imag' this[10326]))
  }
  function chpl_anycomplex[184](?).im[10359](arg _mt[10364]:_MT[238], arg this[10361]:chpl_anycomplex[184](?) :
  chpl_anycomplex[184](?)) : _unknown[51] "inline" "method" "no parens"
  {
    if(10424 call _cond_test(10372 call ==(10367 'typeof' this[10361])(10371 call complex(128)[140] 128)))
    {
      function cimag[10383](arg x[10380] :
      (10379 call complex(128)[140] 128)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10388 call real(64)[16] 64)
      }
      (10397 return(10396 call cimag this[10361]))
    }
    {
      function cimagf[10408](arg x[10405] :
      (10404 call complex(128)[140] 64)) : _unknown[51] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      { scopeless type
        (10413 call real(64)[16] 32)
      }
      (10422 return(10421 call cimagf this[10361]))
    }
  }
  function _i2r[10441](arg a[10438] :
  (10437 call imag(64)[130] unknown w[10434])) : _unknown[51] "inline"
  {
    (10467 return(10466 'cast'(10464 call real(64)[16] w[10434]) a[10438]))
  }
  function _r2i[10482](arg a[10479] :
  (10478 call real(64)[16] unknown w[10475])) : _unknown[51] "inline"
  {
    (10492 return(10491 'cast'(10489 call imag(64)[130] w[10475]) a[10479]))
  }
  function min[10507](arg x[10504] :
  (10503 call int(64)[13] unknown w[10500]), arg y[10513] :
  (10512 call int(64)[13] w[10500])) : _unknown[51] "inline"
  {
    (10525 return(10522 IfExpr (10518 call < x[10504] y[10513]) then
    { scopeless
      x[10504]
    } else
    { scopeless
      y[10513]
    } ))
  }
  function max[10540](arg x[10537] :
  (10536 call int(64)[13] unknown w[10533]), arg y[10546] :
  (10545 call int(64)[13] w[10533])) : _unknown[51] "inline"
  {
    (10558 return(10555 IfExpr (10551 call > x[10537] y[10546]) then
    { scopeless
      x[10537]
    } else
    { scopeless
      y[10546]
    } ))
  }
  function min[10573](arg x[10570] :
  (10569 call uint(64)[115] unknown w[10566]), arg y[10579] :
  (10578 call uint(64)[115] w[10566])) : _unknown[51] "inline"
  {
    (10591 return(10588 IfExpr (10584 call < x[10570] y[10579]) then
    { scopeless
      x[10570]
    } else
    { scopeless
      y[10579]
    } ))
  }
  function max[10606](arg x[10603] :
  (10602 call uint(64)[115] unknown w[10599]), arg y[10612] :
  (10611 call uint(64)[115] w[10599])) : _unknown[51] "inline"
  {
    (10624 return(10621 IfExpr (10617 call > x[10603] y[10612]) then
    { scopeless
      x[10603]
    } else
    { scopeless
      y[10612]
    } ))
  }
  function min[10639](arg x[10636] :
  (10635 call real(64)[16] unknown w[10632]), arg y[10645] :
  (10644 call real(64)[16] w[10632])) : _unknown[51] "inline"
  {
    (10663 return(10660 IfExpr (10656 call |(10650 call < x[10636] y[10645])(10655 call isnan x[10636])) then
    { scopeless
      x[10636]
    } else
    { scopeless
      y[10645]
    } ))
  }
  function max[10678](arg x[10675] :
  (10674 call real(64)[16] unknown w[10671]), arg y[10684] :
  (10683 call real(64)[16] w[10671])) : _unknown[51] "inline"
  {
    (10702 return(10699 IfExpr (10695 call |(10689 call > x[10675] y[10684])(10694 call isnan x[10675])) then
    { scopeless
      x[10675]
    } else
    { scopeless
      y[10684]
    } ))
  }
  function min[10711](arg x[10709]:_any[178](?), arg y[10713]:_any[178](?)) : _unknown[51] "inline"
  {
    (10724 return(10721 IfExpr (10717 call < x[10709] y[10713]) then
    { scopeless
      x[10709]
    } else
    { scopeless
      y[10713]
    } ))
  }
  function max[10733](arg x[10731]:_any[178](?), arg y[10735]:_any[178](?)) : _unknown[51] "inline"
  {
    (10746 return(10743 IfExpr (10739 call > x[10731] y[10735]) then
    { scopeless
      x[10731]
    } else
    { scopeless
      y[10735]
    } ))
  }
  function min[10755](arg x[10753]:_any[178](?), arg y[10757]:_any[178](?), arg z[10761]:_any[178](?) ...) : _unknown[51] "inline"
  {
    (10774 return(10773 call min(10769 call min x[10753] y[10757])(10772 'expand_tuple' z[10761])))
  }
  function max[10783](arg x[10781]:_any[178](?), arg y[10785]:_any[178](?), arg z[10789]:_any[178](?) ...) : _unknown[51] "inline"
  {
    (10802 return(10801 call max(10797 call max x[10781] y[10785])(10800 'expand_tuple' z[10789])))
  }
  function min[10817](param arg x[10814] :
  (10813 call int(64)[13] unknown w[10810]), param arg y[10823] :
  (10822 call int(64)[13] w[10810])) param : _unknown[51] "inline"
  {
    (10835 return(10832 IfExpr (10828 call < x[10814] y[10823]) then
    { scopeless
      x[10814]
    } else
    { scopeless
      y[10823]
    } ))
  }
  function max[10850](param arg x[10847] :
  (10846 call int(64)[13] unknown w[10843]), param arg y[10856] :
  (10855 call int(64)[13] w[10843])) param : _unknown[51] "inline"
  {
    (10868 return(10865 IfExpr (10861 call > x[10847] y[10856]) then
    { scopeless
      x[10847]
    } else
    { scopeless
      y[10856]
    } ))
  }
  function min[10883](param arg x[10880] :
  (10879 call uint(64)[115] unknown w[10876]), param arg y[10889] :
  (10888 call uint(64)[115] w[10876])) param : _unknown[51] "inline"
  {
    (10901 return(10898 IfExpr (10894 call < x[10880] y[10889]) then
    { scopeless
      x[10880]
    } else
    { scopeless
      y[10889]
    } ))
  }
  function max[10916](param arg x[10913] :
  (10912 call uint(64)[115] unknown w[10909]), param arg y[10922] :
  (10921 call uint(64)[115] w[10909])) param : _unknown[51] "inline"
  {
    (10934 return(10931 IfExpr (10927 call > x[10913] y[10922]) then
    { scopeless
      x[10913]
    } else
    { scopeless
      y[10922]
    } ))
  }
  function min[10949](param arg x[10946] :
  (10945 call real(64)[16] unknown w[10942]), param arg y[10955] :
  (10954 call real(64)[16] w[10942])) param : _unknown[51] "inline"
  {
    (10967 return(10964 IfExpr (10960 call < x[10946] y[10955]) then
    { scopeless
      x[10946]
    } else
    { scopeless
      y[10955]
    } ))
  }
  function max[10982](param arg x[10979] :
  (10978 call real(64)[16] unknown w[10975]), param arg y[10988] :
  (10987 call real(64)[16] w[10975])) param : _unknown[51] "inline"
  {
    (11000 return(10997 IfExpr (10993 call > x[10979] y[10988]) then
    { scopeless
      x[10979]
    } else
    { scopeless
      y[10988]
    } ))
  }
  function min[11015](param arg x[11012] :
  (11011 call imag(64)[130] unknown w[11008]), param arg y[11021] :
  (11020 call imag(64)[130] w[11008])) param : _unknown[51] "inline"
  {
    (11033 return(11030 IfExpr (11026 call < x[11012] y[11021]) then
    { scopeless
      x[11012]
    } else
    { scopeless
      y[11021]
    } ))
  }
  function max[11048](param arg x[11045] :
  (11044 call imag(64)[130] unknown w[11041]), param arg y[11054] :
  (11053 call imag(64)[130] w[11041])) param : _unknown[51] "inline"
  {
    (11066 return(11063 IfExpr (11059 call > x[11045] y[11054]) then
    { scopeless
      x[11045]
    } else
    { scopeless
      y[11054]
    } ))
  }
  function min[11075](arg x[11073]:_any[178](?), arg y[11077]:_any[178](?)) : _unknown[51] "inline" "no return value for void"
  {
    (11110 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11087 call ||(11082 call isAtomic x[11073])(11086 call isAtomic y[11077]))
  }
  function max[11120](arg x[11118]:_any[178](?), arg y[11122]:_any[178](?)) : _unknown[51] "inline" "no return value for void"
  {
    (11137 call compilerError "min() and max() are not supported for atomic arguments - apply read() to those arguments first")
  }
  where {
    (11132 call ||(11127 call isAtomic x[11118])(11131 call isAtomic y[11122]))
  }
  type ArrayInit[11152] def heuristicInit[11144]:ArrayInit[11152] def noInit[11146]:ArrayInit[11152] def serialInit[11148]:ArrayInit[11152] def parallelInit[11150]:ArrayInit[11152]
  {
  }
  unknown chpl_defaultArrayInitMethod[11163] "config" "param" heuristicInit[11144]
  (11166 'end of statement')
  unknown chpl_arrayInitMethodRuntimeSelectable[11168] "config" "param" 0
  (11171 'end of statement')
  unknown chpl_arrayInitMethod[11173] "private" chpl_defaultArrayInitMethod[11163]
  (11176 'end of statement')
  function chpl_setArrayInitMethod[11183](arg initMethod[11180] :
  ArrayInit[11152]) : _unknown[51] "inline"
  {
    if(11232 call _cond_test(11187 call == chpl_arrayInitMethodRuntimeSelectable[11168] 0))
    {
      (11229 call compilerWarning "must set 'chpl_arrayInitMethodRuntimeSelectable' for " "'chpl_setArrayInitMethod' to have any effect")
    }
    const oldInit[11238] "const" chpl_arrayInitMethod[11173]
    (11241 'end of statement')
    (11244 call = chpl_arrayInitMethod[11173] initMethod[11180])
    (11248 return oldInit[11238])
  }
  function chpl_getArrayInitMethod[11254]() : _unknown[51] "inline"
  {
    if(11268 call _cond_test(11258 call == chpl_arrayInitMethodRuntimeSelectable[11168] 0))
    {
      (11261 return chpl_defaultArrayInitMethod[11163])
    }
    {
      (11265 return chpl_arrayInitMethod[11173])
    }
  }
  function init_elts_method[11279](arg s[11277]:_any[178](?), arg t[11281]:_any[178](?)) : _unknown[51]
  {
    unknown initMethod[11286](11285 call chpl_getArrayInitMethod)
    (11289 'end of statement')
    if(11424 call _cond_test(11293 call == s[11277] 0))
    {
      (11302 call = initMethod[11286] noInit[11146])
    }
    {
      if(11419 call _cond_test(11307 call ! rootLocaleInitialized[310]))
      {
        (11316 call = initMethod[11286] serialInit[11148])
      }
      {
        if(11415 call _cond_test(11325 call == initMethod[11286] heuristicInit[11144]))
        {
          const elemsizeInBytes[11350] "const"(11347 IfExpr (11330 call isNumericType t[11281]) then
          { scopeless
            (11334 call numBytes t[11281])
          } else
          { scopeless
            (11346 call(11341 call .(11338 call c_sizeof t[11281]) c"safeCast") int(64)[13])
          } )
          (11353 'end of statement')
          const arrsizeInBytes[11365] "const"(11363 call *(11361 call(11356 call . s[11277] c"safeCast") int(64)[13]) elemsizeInBytes[11350])
          (11368 'end of statement')
          unknown heuristicThresh[11378] "param"(11376 call *(11373 call * 2 1024) 1024)
          (11381 'end of statement')
          const heuristicWantsPar[11386] "const"(11384 call > arrsizeInBytes[11365] heuristicThresh[11378])
          (11389 'end of statement')
          if(11411 call _cond_test heuristicWantsPar[11386])
          {
            (11398 call = initMethod[11286] parallelInit[11150])
          }
          {
            (11407 call = initMethod[11286] serialInit[11148])
          }
        }
      }
    }
    (11430 return initMethod[11286])
  }
  function init_elts[11438](arg x[11436]:_any[178](?), arg s[11440]:_any[178](?), arg t[11442]:_any[178](?), arg lo[11449] =
  (11447 call _cast(11446 'typeof' s[11440]) 0)) : _unknown[51] "no return value for void"
  {
    unknown initMethod[11458](11457 call init_elts_method s[11440] t[11442])
    (11461 'end of statement')
    {
      unknown tmp[11621] "expr temp" "maybe param" "maybe type" "temp"
      (11623 'move' tmp[11621] initMethod[11458])
      if(11628 call _cond_test(11625 call == tmp[11621] noInit[11146]))
      {
        (11470 return _void[55])
      }
      {
        if(11634 call _cond_test(11631 call == tmp[11621] serialInit[11148]))
        {
          {
            unknown _indexOfInterest[11517] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[11518] "expr temp" "temp"
            (11527 'move' _iterator[11518](11525 call _getIterator(11535 call chpl_direct_range_iter lo[11449](11532 call - s[11440] 1) 1)))
            Defer
            {
              {
                (11551 call _freeIterator _iterator[11518])
              }
            }
            { scopeless type
              (11540 'move' _indexOfInterest[11517](11537 call iteratorIndex _iterator[11518]))
            }
            ForLoop[11519]
            {
              unknown i[11544] "index var" "insert auto destroy"
              (11546 'move' i[11544] _indexOfInterest[11517])
              {
                unknown y[11489] "no auto destroy" "unsafe" t[11442]
                (11492 'end of statement')
                (11515 'array_set_first' x[11436] i[11544] y[11489])
              }
              label _continueLabel[11522]
              _indexOfInterest[11517]
              _iterator[11518]
            }
            label _breakLabel[11523]
          }
        }
        {
          if(11641 call _cond_test(11638 call == tmp[11621] parallelInit[11150]))
          {
            Forall {
              induction variables:
                
                unknown i[11588] "index var" "insert auto destroy"
              iterated expressions:
                (11572 call chpl_build_bounded_range lo[11449](11570 call - s[11440] 1))
              shadow variables:
              other variables
                forall body
              {
                unknown y[11575] "no auto destroy" "unsafe" t[11442]
                (11578 'end of statement')
                (11585 'array_set_first' x[11436] i[11588] y[11575])
              }
            }
          }
          {
            (11615 call halt "ArrayInit.heuristicInit should have been made concrete")
          }
        }
      }
    }
  }
  { scopeless type
    void[4]
  }
  unknown chpl_mem_descInt_t[11653] "extern" "no doc" "type variable"(11652 call int(64)[13] 16)
  function _ddata[11695](?).this[11666](arg _mt[11699]:_MT[238], arg this[11697]:_ddata[11695](?), arg i[11663] :
  integral[199](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (11689 return(11688 'array_get' this[11697] i[11663]))
  }
  type _ddata[11695](?) unknown eltType[11657] "type variable"
  function chpl_isDdata[11708](arg t[11705] :
  _ddata[11695](?)) param : _unknown[51]
  {
    (11711 return 1)
  }
  function chpl_isDdata[11720](arg t[11718]:_any[178](?)) param : _unknown[51]
  {
    (11723 return 0)
  }
  function =[11738](ref arg a[11735] :
  (11734 call _ddata[11695](?) unknown t[11731]), arg b[11744] :
  (11743 call _ddata[11695](?) t[11731])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (11751 '=' a[11735] b[11744])
  }
  function _ddata_shift[11760](arg eltType[11758]:_any[178](?), arg data[11766] :
  (11765 call _ddata[11695](?) eltType[11758]), arg shift[11770] :
  integral[199](?)) : _unknown[51] "inline"
  {
    unknown ret[11777](11776 call _ddata[11695](?) eltType[11758])
    (11780 'end of statement')
    (11805 'shift_base_pointer' ret[11777] data[11766] shift[11770])
    (11808 return ret[11777])
  }
  function _ddata_sizeof_element[11818](arg t[11815] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (11844 return(11842 call _cast size_t[20654](11840 'sizeof_ddata_element' t[11815])))
  }
  { scopeless type
    size_t[20654]
  }
  function _ddata_sizeof_element[11856](arg x[11853] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (11864 return(11863 call _ddata_sizeof_element(11861 'typeof' x[11853])))
  }
  { scopeless type
    size_t[20654]
  }
  function _ddata_allocate_noinit[11874](arg eltType[11872]:_any[178](?), arg size[11877] :
  integral[199](?), out arg callPostAlloc[11881] :
  bool[10], arg subloc[11885] =
  c_sublocid_none[89870]) : _unknown[51] "llvm return noalias"
  {
    function chpl_mem_array_alloc[11894](arg nmemb[11891] :
    size_t[20654], arg eltSize[11897] :
    size_t[20654], arg subloc[11901] :
    chpl_sublocID_t[89866], ref arg callPostAlloc[11905] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      c_void_ptr[149]
    }
    unknown ret[11917](11916 call _ddata[11695](?) eltType[11872])
    (11920 'end of statement')
    (11939 call = ret[11917](11937 call _cast(11936 'typeof' ret[11917])(11934 call chpl_mem_array_alloc(11925 call _cast size_t[20654] size[11877])(11931 call _ddata_sizeof_element ret[11917]) subloc[11885] callPostAlloc[11881])))
    (11943 return ret[11917])
  }
  function _ddata_allocate_postalloc[11953](arg data[11950] :
  _ddata[11695](?), arg size[11956] :
  integral[199](?)) : _unknown[51] "inline" "no return value for void"
  {
    function chpl_mem_array_postAlloc[11965](arg data[11962] :
    c_void_ptr[149], arg nmemb[11968] :
    size_t[20654], arg eltSize[11972] :
    size_t[20654]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (11992 call chpl_mem_array_postAlloc(11981 call _cast c_void_ptr[149] data[11950])(11986 call _cast size_t[20654] size[11956])(11991 call _ddata_sizeof_element data[11950]))
  }
  function _ddata_allocate[12000](arg eltType[11998]:_any[178](?), arg size[12003] :
  integral[199](?), arg subloc[12007] =
  c_sublocid_none[89870], param arg initElts[12012] :
  bool[10] =
  1) : _unknown[51] "inline"
  {
    unknown callPostAlloc[12017] bool[10]
    (12020 'end of statement')
    unknown ret[12026](12025 call _ddata[11695](?) eltType[11998])
    (12029 'end of statement')
    (12038 call = ret[12026](12037 call _ddata_allocate_noinit eltType[11998] size[12003] callPostAlloc[12017] subloc[12007]))
    if(12049 call _cond_test initElts[12012])
    {
      (12047 call init_elts ret[12026] size[12003] eltType[11998])
    }
    if(12062 call _cond_test callPostAlloc[12017])
    {
      (12059 call _ddata_allocate_postalloc ret[12026] size[12003])
    }
    (12067 return ret[12026])
  }
  function _ddata_reallocate[12075](arg oldDdata[12073]:_any[178](?), arg eltType[12077]:_any[178](?), arg oldSize[12080] :
  integral[199](?), arg newSize[12084] :
  integral[199](?), arg subloc[12088] =
  c_sublocid_none[89870]) : _unknown[51] "inline"
  {
    function chpl_mem_array_realloc[12097](arg ptr[12094] :
    c_void_ptr[149], arg oldNmemb[12100] :
    size_t[20654], arg newNmemb[12104] :
    size_t[20654], arg eltSize[12108] :
    size_t[20654], arg subloc[12112] :
    chpl_sublocID_t[89866], ref arg callPostAlloc[12116] :
    bool[10]) : _unknown[51] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      c_void_ptr[149]
    }
    unknown callPostAlloc[12125] bool[10]
    (12128 'end of statement')
    unknown needsDestroy[12171] "param"(12170 'needs auto destroy'(12169 'deref'(12168 call oldDdata[12073] 0)))
    (12174 'end of statement')
    if(12270 call _cond_test(12180 call && needsDestroy[12171](12178 call > oldSize[12080] newSize[12084])))
    {
      if(12265 call _cond_test(12185 call _deinitElementsIsParallel eltType[12077]))
      {
        Forall {
          induction variables:
            
            unknown i[12203] "index var" "insert auto destroy"
          iterated expressions:
            (12192 call chpl_build_bounded_range newSize[12084](12190 call - oldSize[12080] 1))
          shadow variables:
          other variables
            forall body
          {
            (12200 call chpl__autoDestroy(12198 call oldDdata[12073] i[12203]))
          }
        }
      }
      {
        {
          unknown _indexOfInterest[12223] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[12224] "expr temp" "temp"
          (12233 'move' _iterator[12224](12231 call _getIterator(12241 call chpl_direct_range_iter newSize[12084](12238 call - oldSize[12080] 1) 1)))
          Defer
          {
            {
              (12257 call _freeIterator _iterator[12224])
            }
          }
          { scopeless type
            (12246 'move' _indexOfInterest[12223](12243 call iteratorIndex _iterator[12224]))
          }
          ForLoop[12225]
          {
            unknown i[12250] "index var" "insert auto destroy"
            (12252 'move' i[12250] _indexOfInterest[12223])
            (12221 call chpl__autoDestroy(12219 call oldDdata[12073] i[12250]))
            label _continueLabel[12228]
            _indexOfInterest[12223]
            _iterator[12224]
          }
          label _breakLabel[12229]
        }
      }
    }
    const newDdata[12305] "const"(12303 call _cast(12302 'typeof' oldDdata[12073])(12300 call chpl_mem_array_realloc(12277 call _cast c_void_ptr[149] oldDdata[12073])(12286 call(12281 call . oldSize[12080] c"safeCast") size_t[20654])(12293 call(12288 call . newSize[12084] c"safeCast") size_t[20654])(12297 call _ddata_sizeof_element oldDdata[12073]) subloc[12088] callPostAlloc[12125]))
    (12308 'end of statement')
    (12316 call init_elts newDdata[12305] newSize[12084] eltType[12077](lo = oldSize[12080]))
    if(12376 call _cond_test callPostAlloc[12125])
    {
      function chpl_mem_array_postRealloc[12325](arg oldData[12322] :
      c_void_ptr[149], arg oldNmemb[12328] :
      size_t[20654], arg newData[12332] :
      c_void_ptr[149], arg newNmemb[12336] :
      size_t[20654], arg eltSize[12340] :
      size_t[20654]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
      {
      }
      (12374 call chpl_mem_array_postRealloc(12349 call _cast c_void_ptr[149] oldDdata[12073])(12358 call(12353 call . oldSize[12080] c"safeCast") size_t[20654])(12361 call _cast c_void_ptr[149] newDdata[12305])(12369 call(12364 call . newSize[12084] c"safeCast") size_t[20654])(12373 call _ddata_sizeof_element oldDdata[12073]))
    }
    (12381 return newDdata[12305])
  }
  function _ddata_free[12391](arg data[12388] :
  _ddata[11695](?), arg size[12394] :
  integral[199](?)) : _unknown[51] "inline" "no return value for void"
  {
    function chpl_mem_array_free[12403](arg data[12400] :
    c_void_ptr[149], arg nmemb[12406] :
    size_t[20654], arg eltSize[12410] :
    size_t[20654]) : void[4] "extern" "insert line file info" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (12430 call chpl_mem_array_free(12419 call _cast c_void_ptr[149] data[12388])(12424 call _cast size_t[20654] size[12394])(12429 call _ddata_sizeof_element data[12388]))
  }
  function ==[12440](arg a[12437] :
  _ddata[11695](?), arg b[12443] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (12469 return(12468 'ptr_eq' a[12437] b[12443]))
  }
  where {
    (12462 call ==(12454 call _to_borrowed(12450 call . a[12437] c"eltType"))(12461 call _to_borrowed(12457 call . b[12443] c"eltType")))
  }
  function ==[12481](arg a[12478] :
  _ddata[11695](?), arg b[12484] :
  _nilType[42]) : _unknown[51] "inline"
  {
    (12492 return(12491 'ptr_eq' a[12478] nil[44]))
  }
  function ==[12503](arg a[12500] :
  _nilType[42], arg b[12506] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (12514 return(12513 'ptr_eq' nil[44] b[12506]))
  }
  function !=[12525](arg a[12522] :
  _ddata[11695](?), arg b[12528] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (12546 return(12545 'ptr_neq' a[12522] b[12528]))
  }
  where {
    (12539 call ==(12532 call . a[12522] c"eltType")(12536 call . b[12528] c"eltType"))
  }
  function !=[12558](arg a[12555] :
  _ddata[11695](?), arg b[12561] :
  _nilType[42]) : _unknown[51] "inline"
  {
    (12569 return(12568 'ptr_neq' a[12555] nil[44]))
  }
  function !=[12580](arg a[12577] :
  _nilType[42], arg b[12583] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (12591 return(12590 'ptr_neq' nil[44] b[12583]))
  }
  function _cond_test[12602](arg x[12599] :
  _ddata[11695](?)) : _unknown[51] "inline"
  {
    (12608 return(12606 call != x[12599] nil[44]))
  }
  type _ref[12619](?) unknown _val[12614]
  function chpl_rt_reset_task_spawn[12624]() : _unknown[51] "inline" "no return value for void"
  {
    function chpl_task_reset_spawn_order[12628]() : void[4] "extern" "local args" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    (12635 call chpl_task_reset_spawn_order)
  }
  function chpl_resetTaskSpawn[12643](arg numTasks[12641]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    const dptpl[12659] "const"(12656 IfExpr (12647 call == dataParTasksPerLocale[93281] 0) then
    { scopeless
      (12652 call .(356375 call here[90435]) c"maxTaskPar")
    } else
    { scopeless
      dataParTasksPerLocale[93281]
    } )
    (12662 'end of statement')
    if(12672 call _cond_test(12666 call >= numTasks[12641] dptpl[12659]))
    {
      (12670 call chpl_rt_reset_task_spawn)
    }
  }
  unknown useAtomicTaskCnt[12699] "config" "param"(12697 call != CHPL_NETWORK_ATOMICS[21517] "none")
  (12702 'end of statement')
  type _EndCountBase[12715] val super[355510]:object[22] "super class" unknown errors[12705] chpl_TaskErrors[168302] unknown taskList[12710] c_void_ptr[149]
  type _EndCountBase[377543](?)
  function _EndCount[12769](?).init[12741](arg _mt[12773]:_MT[238], arg this[12771]:_EndCount[12769](?), arg iType[12739]:_any[178](?), arg taskType[12743]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (12752 call =(12748 call . this[12771] c"iType") iType[12739])
    (12763 call =(12759 call . this[12771] c"taskType") taskType[12743])
  }
  type _EndCount[12769](?) val super[355512]:_EndCountBase[12715] "super class" unknown iType[12721] "type variable" unknown taskType[12724] "type variable" unknown i[12728] iType[12721] unknown taskCnt[12733] taskType[12724]
  type _EndCount[368074](?)
  function _endCountAlloc[12782](param arg forceLocalTypes[12779] :
  bool[10]) : _unknown[51] "dont disable remote value forwarding" "inline"
  {
    unknown taskCntType[12797] "type variable"(12794 IfExpr (12788 call &&(12785 call ! forceLocalTypes[12779]) useAtomicTaskCnt[12699]) then
    { scopeless
      (12791 call chpl__atomicType int(64)[13])
    } else
    { scopeless
      int(64)[13]
    } )
    if(12834 call _cond_test forceLocalTypes[12779])
    {
      (12815 return(12804 'new'(_chpl_manager = unmanaged[220](?))(12814 call _EndCount[368074](?)(iType =(12809 call chpl__processorAtomicType int(64)[13]))(taskType = taskCntType[12797]))))
    }
    {
      (12831 return(12820 'new'(_chpl_manager = unmanaged[220](?))(12830 call _EndCount[368074](?)(iType =(12825 call chpl__atomicType int(64)[13]))(taskType = taskCntType[12797]))))
    }
  }
  unknown _remoteEndCountType[12845] "type variable"(12844 'typeof'(12843 call _endCountAlloc 0))
  function _endCountFree[12854](arg e[12851] :
  _EndCount[368074](?)) : _unknown[51] "dont disable remote value forwarding" "inline" "no return value for void"
  {
    (12861 call chpl__delete(12859 call _to_unmanaged e[12851]))
  }
  function _upEndCount[12873](arg e[12870] :
  _EndCount[368074](?), param arg countRunningTasks[12876] =
  1) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn" "no return value for void"
  {
    if(12970 call _cond_test(12887 call isAtomic(12883 call . e[12870] c"taskCnt")))
    {
      (12907 call(12896 call .(12891 call . e[12870] c"i") c"add") 1 release[186960])
      (12923 call(12914 call .(12911 call . e[12870] c"taskCnt") c"add") 1 release[186960])
    }
    {
      (12931 call chpl_rmem_consist_fence release[186960])
      const tmp[12962] "const" "temp"
      (12964 'move' tmp[12962](12960 'deref'(12959 '_wide_get_locale' e[12870])))
      {
        {
          (12948 call(12939 call .(12936 call . e[12870] c"i") c"add") 1 release[186960])
          (12956 call +=(12952 call . e[12870] c"taskCnt") 1)
        }
        (12967 'on block' 0 tmp[12962])
      }
    }
    if(12987 call _cond_test countRunningTasks[12876])
    {
      (12984 call(12979 call .(356388 call here[90435]) c"runningTaskCntAdd") 1)
    }
  }
  function _upEndCount[12999](arg e[12996] :
  _EndCount[368074](?), param arg countRunningTasks[13002] =
  1, arg numTasks[13005]:_any[178](?)) : _unknown[51] "dont disable remote value forwarding" "no remote memory fence" "task spawn impl fn" "no return value for void"
  {
    (13023 call(13011 call .(13008 call . e[12996] c"i") c"add")(13016 call _cast int(64)[13] numTasks[13005]) release[186960])
    if(13053 call _cond_test countRunningTasks[13002])
    {
      (13039 call(13028 call .(356392 call here[90435]) c"runningTaskCntAdd")(13036 call -(13033 call _cast int(64)[13] numTasks[13005]) 1))
    }
    {
      (13050 call(13045 call .(356394 call here[90435]) c"runningTaskCntSub") 1)
    }
  }
  function chpl_comm_task_end[13061]() : _unknown[51] "extern" "local args" "no fn body" "task complete impl fn" "no return value for void"
  {
  }
  { scopeless type
    void[4]
  }
  function chpl_after_forall_fence[13069]() : _unknown[51] "task complete impl fn" "no return value for void"
  {
    (13073 call chpl_comm_task_end)
  }
  function _downEndCount[13084](arg e[13081] :
  _EndCount[368074](?), arg err[13089] :
  unmanaged Error?[415254]) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn" "no return value for void"
  {
    (13096 call chpl_save_task_error e[13081] err[13089])
    (13101 call chpl_comm_task_end)
    (13118 call(13109 call .(13104 call . e[13081] c"i") c"sub") 1 release[186960])
  }
  function _waitEndCount[13128](arg e[13125] :
  _EndCount[368074](?), param arg countRunningTasks[13131] =
  1) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws" "no return value for void"
  {
    (13140 call(13135 call .(356398 call here[90435]) c"runningTaskCntSub") 1)
    (13151 call chpl_taskListExecute(13147 call . e[13125] c"taskList"))
    (13170 call(13159 call .(13154 call . e[13125] c"i") c"waitFor") 0 acquire[186962])
    if(13223 call _cond_test countRunningTasks[13131])
    {
      const taskDec[13198] "const"(13195 IfExpr (13179 call isAtomic(13175 call . e[13125] c"taskCnt")) then
      { scopeless
        (13190 call(13186 call .(13181 call . e[13125] c"taskCnt") c"read"))
      } else
      { scopeless
        (13192 call . e[13125] c"taskCnt")
      } )
      (13201 'end of statement')
      (13212 call(13204 call .(356406 call here[90435]) c"runningTaskCntSub")(13209 call - taskDec[13198] 1))
    }
    {
      (13220 call(13215 call .(356408 call here[90435]) c"runningTaskCntAdd") 1)
    }
    if(13254 call _cond_test(13240 call !(13239 call(13235 call .(13230 call . e[13125] c"errors") c"empty"))))
    {
      (13252 'throw'(13244 'new'(_chpl_manager = _owned[30](?))(13251 call TaskErrors[368100](?)(13247 call . e[13125] c"errors"))))
    }
  }
  function _waitEndCount[13267](arg e[13264] :
  _EndCount[368074](?), param arg countRunningTasks[13270] =
  1, arg numTasks[13273]:_any[178](?)) : _unknown[51] throws "dont disable remote value forwarding" "task join impl fn" "unchecked throws" "no return value for void"
  {
    (13281 call chpl_taskListExecute(13277 call . e[13264] c"taskList"))
    (13297 call(13288 call .(13285 call . e[13264] c"i") c"waitFor") 0 acquire[186962])
    if(13324 call _cond_test countRunningTasks[13270])
    {
      (13312 call(13301 call .(356415 call here[90435]) c"runningTaskCntSub")(13309 call -(13306 call _cast int(64)[13] numTasks[13273]) 1))
    }
    {
      (13321 call(13316 call .(356417 call here[90435]) c"runningTaskCntAdd") 1)
    }
    if(13351 call _cond_test(13337 call !(13336 call(13332 call .(13329 call . e[13264] c"errors") c"empty"))))
    {
      (13349 'throw'(13341 'new'(_chpl_manager = _owned[30](?))(13348 call TaskErrors[368100](?)(13344 call . e[13264] c"errors"))))
    }
  }
  function _upDynamicEndCount[13364](param arg countRunningTasks[13361] =
  1) : _unknown[51] "task spawn impl fn" "no return value for void"
  {
    unknown e[13387](13386 'get dynamic end count')
    (13390 'end of statement')
    (13396 call _upEndCount e[13387] countRunningTasks[13361])
  }
  function _downDynamicEndCount[13408](arg err[13405] :
  unmanaged Error?[415254]) : _unknown[51] "dont disable remote value forwarding" "down end count fn" "task complete impl fn" "no return value for void"
  {
    unknown e[13413](13412 'get dynamic end count')
    (13416 'end of statement')
    (13422 call _downEndCount e[13413] err[13405])
  }
  function chpl_waitDynamicEndCount[13432](param arg countRunningTasks[13429] =
  1) : _unknown[51] throws "task join impl fn" "unchecked throws" "no return value for void"
  {
    unknown e[13437](13436 'get dynamic end count')
    (13440 'end of statement')
    (13446 call _waitEndCount e[13437] countRunningTasks[13429])
    if(13471 call _cond_test(13457 call !(13456 call(13452 call .(13449 call . e[13437] c"errors") c"empty"))))
    {
      (13469 'throw'(13461 'new'(_chpl_manager = _owned[30](?))(13468 call TaskErrors[368100](?)(13464 call . e[13437] c"errors"))))
    }
  }
  function _do_command_line_cast[13482](arg t[13480]:_any[178](?), arg x[13485] :
  c_string[19]) : _unknown[51] throws
  {
    if(13515 call _cond_test(13491 call isSyncType t[13480]))
    {
      (13513 call compilerError "config variables of sync type are not supported")
    }
    if(13546 call _cond_test(13524 call isSingleType t[13480]))
    {
      (13544 call compilerError "config variables of single type are not supported")
    }
    if(13576 call _cond_test(13554 call isAtomicType t[13480]))
    {
      (13574 call compilerError "config variables of atomic type are not supported")
    }
    unknown str[13582] string[26]
    (13585 'end of statement')
    Try!
    {
      {
        (13591 call = str[13582](13590 call createStringWithNewBuffer x[13485]))
      }
    }
    if(13613 call _cond_test(13600 call == t[13480] string[26]))
    {
      (13603 return str[13582])
    }
    {
      (13610 return(13608 call _cast t[13480] str[13582]))
    }
  }
  function _command_line_cast[13625](param arg s[13622] :
  c_string[19], arg t[13627]:_any[178](?), arg x[13630] :
  c_string[19]) : _unknown[51] "command line setting"
  {
    Try!
    {
      {
        (13638 return(13637 call _do_command_line_cast t[13627] x[13630]))
      }
    }
  }
  function chpl_typeSupportsPrimitiveCast[13651](arg t[13649]:_any[178](?)) param : _unknown[51] "inline"
  {
    (13669 return(13667 call ||(13661 call ||(13656 call isBoolType t[13649])(13660 call isIntegralType t[13649]))(13666 call isRealType t[13649])))
  }
  function _cast[13680](arg t[13677] :
  chpl_anybool[181](?), arg x[13683] :
  chpl_anybool[181](?)) : _unknown[51] "inline"
  {
    (13691 return(13690 'cast' t[13677] x[13683]))
  }
  function _cast[13702](arg t[13699] :
  integral[199](?), arg x[13705] :
  chpl_anybool[181](?)) : _unknown[51] "inline"
  {
    (13713 return(13712 'cast' t[13699] x[13705]))
  }
  function _cast[13724](arg t[13721] :
  chpl_anyreal[193](?), arg x[13727] :
  chpl_anybool[181](?)) : _unknown[51] "inline"
  {
    (13735 return(13734 'cast' t[13721] x[13727]))
  }
  function _cast[13746](arg t[13743] :
  chpl_anybool[181](?), arg x[13749] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (13757 return(13756 'cast' t[13743] x[13749]))
  }
  function _cast[13768](arg t[13765] :
  integral[199](?), arg x[13771] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (13779 return(13778 'cast' t[13765] x[13771]))
  }
  function _cast[13790](arg t[13787] :
  chpl_anyreal[193](?), arg x[13793] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (13801 return(13800 'cast' t[13787] x[13793]))
  }
  function _cast[13812](arg t[13809] :
  chpl_anybool[181](?), arg x[13815] :
  chpl_anyreal[193](?)) : _unknown[51] "inline"
  {
    (13823 return(13822 'cast' t[13809] x[13815]))
  }
  function _cast[13834](arg t[13831] :
  integral[199](?), arg x[13837] :
  chpl_anyreal[193](?)) : _unknown[51] "inline"
  {
    (13845 return(13844 'cast' t[13831] x[13837]))
  }
  function _cast[13856](arg t[13853] :
  chpl_anyreal[193](?), arg x[13859] :
  chpl_anyreal[193](?)) : _unknown[51] "inline"
  {
    (13867 return(13866 'cast' t[13853] x[13859]))
  }
  function _cast[13878](arg t[13875] :
  chpl_anybool[181](?), arg x[13881] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13907 call _cond_test 0)
    {
      (13904 call compilerWarning "enum-to-bool casts are likely to be deprecated in the future")
    }
    (13919 return(13917 call _cast bool[10](13914 call _cast int(64)[13] x[13881])))
  }
  function _cast[13929](arg t[13926] :
  enum[187](?), arg x[13932] :
  enum[187](?)) : _unknown[51] "inline"
  {
    (13941 return x[13932])
  }
  where {
    (13938 call ==(13936 'typeof' x[13932]) t[13926])
  }
  function _cast[13953](arg t[13950] :
  chpl_anyreal[193](?), arg x[13956] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    if(13984 call _cond_test 0)
    {
      (13981 call compilerWarning "enum-to-float casts are likely to be deprecated in the future")
    }
    (13996 return(13994 call _cast real(64)[16](13991 call _cast int(64)[13] x[13956])))
  }
  function _cast[14007](arg t[14004] :
  _unmanagedNonNilable[223](?), arg x[14010] :
  _nilType[42]) : _unknown[51] "inline" "no return value for void"
  {
    (14040 call compilerError(14037 call + "cannot cast nil to "(14035 call _cast string[26] t[14004])))
  }
  function _cast[14052](arg t[14049] :
  _borrowedNonNilable[214](?), arg x[14055] :
  _nilType[42]) : _unknown[51] "inline" "no return value for void"
  {
    (14067 call compilerError(14064 call + "cannot cast nil to "(14062 call _cast string[26] t[14049])))
  }
  function _cast[14080](arg t[14077] :
  _unmanagedNilable[226](?), arg x[14085] :
  _borrowedNilable[217](?)) : _unknown[51] "inline"
  {
    (14102 return(14101 'cast' t[14077] x[14085]))
  }
  where {
    (354033 'is_subtype' t[14077](14093 call _to_unmanaged(14091 'typeof' x[14085])))
  }
  function _cast[14116](arg t[14113] :
  _unmanagedNilable[226](?), arg x[14120] :
  _borrowedNonNilable[214](?)) : _unknown[51] "inline"
  {
    (14140 return(14139 'cast' t[14113] x[14120]))
  }
  where {
    (354034 'is_subtype' t[14113](14131 call _to_nonnil(14129 call _to_unmanaged(14127 'typeof' x[14120]))))
  }
  function _cast[14153](arg t[14150] :
  _unmanagedNonNilable[223](?), arg x[14157] :
  _borrowedNonNilable[214](?)) : _unknown[51] "inline"
  {
    (14174 return(14173 'cast' t[14150] x[14157]))
  }
  where {
    (354035 'is_subtype' t[14150](14165 call _to_unmanaged(14163 'typeof' x[14157])))
  }
  function _cast[14187](arg t[14184] :
  _borrowedNonNilable[214](?), arg x[14192] :
  _unmanagedNilable[226](?)) : _unknown[51] throws "inline"
  {
    if(14217 call _cond_test(14206 call == x[14192] nil[44]))
    {
      (14214 'throw'(14210 'new'(_chpl_manager = _owned[30](?))(14213 call NilClassError[368197](?))))
    }
    (14227 return(14226 'cast' t[14184] x[14192]))
  }
  where {
    (354036 'is_subtype' t[14184](14200 call _to_nonnil(14198 'typeof' x[14192])))
  }
  function _cast[14239](arg t[14236] :
  _borrowedNonNilable[214](?), arg x[14244] :
  _borrowedNilable[217](?)) : _unknown[51] throws "inline"
  {
    if(14269 call _cond_test(14258 call == x[14244] nil[44]))
    {
      (14266 'throw'(14262 'new'(_chpl_manager = _owned[30](?))(14265 call NilClassError[368197](?))))
    }
    (14279 return(14278 'cast' t[14236] x[14244]))
  }
  where {
    (354037 'is_subtype' t[14236](14252 call _to_nonnil(14250 'typeof' x[14244])))
  }
  function _cast[14291](arg t[14288] :
  _unmanagedNonNilable[223](?), arg x[14296] :
  _borrowedNilable[217](?)) : _unknown[51] throws "inline"
  {
    if(14324 call _cond_test(14313 call == x[14296] nil[44]))
    {
      (14321 'throw'(14317 'new'(_chpl_manager = _owned[30](?))(14320 call NilClassError[368197](?))))
    }
    (14334 return(14333 'cast' t[14288] x[14296]))
  }
  where {
    (354038 'is_subtype' t[14288](14307 call _to_nonnil(14305 call _to_unmanaged(14303 'typeof' x[14296]))))
  }
  function _cast[14346](arg t[14343] :
  _borrowedNonNilable[214](?), arg x[14351] :
  _borrowedNilable[217](?)) : _unknown[51] throws "inline"
  {
    if(14376 call _cond_test(14365 call == x[14351] nil[44]))
    {
      (14373 'throw'(14369 'new'(_chpl_manager = _owned[30](?))(14372 call NilClassError[368197](?))))
    }
    unknown tmp[14404](14403 'dynamic_cast' t[14343] x[14351])
    (14407 'end of statement')
    if(14421 call _cond_test(14410 call == tmp[14404] nil[44]))
    {
      (14418 'throw'(14414 'new'(_chpl_manager = _owned[30](?))(14417 call ClassCastError[368222](?))))
    }
    (14432 return(14431 call _to_nonnil(14429 call _to_borrowed tmp[14404])))
  }
  where {
    (354039 'is_proper_subtype'(14361 call _to_nonnil(14359 'typeof' x[14351])) t[14343])
  }
  function _cast[14445](arg t[14442] :
  _borrowedNilable[217](?), arg x[14450] :
  _borrowedNilable[217](?)) : _unknown[51] "inline"
  {
    if(14467 call _cond_test(14461 call == x[14450] nil[44]))
    {
      (14464 return nil[44])
    }
    unknown tmp[14477](14476 'dynamic_cast' t[14442] x[14450])
    (14480 'end of statement')
    (14488 return(14487 call _to_nilable(14485 call _to_borrowed tmp[14477])))
  }
  where {
    (354040 'is_proper_subtype'(14457 'typeof' x[14450]) t[14442])
  }
  function _cast[14500](arg t[14497] :
  _unmanagedNonNilable[223](?), arg x[14505] :
  _borrowedNilable[217](?)) : _unknown[51] throws "inline"
  {
    if(14533 call _cond_test(14522 call == x[14505] nil[44]))
    {
      (14530 'throw'(14526 'new'(_chpl_manager = _owned[30](?))(14529 call NilClassError[368197](?))))
    }
    unknown tmp[14543](14542 'dynamic_cast' t[14497] x[14505])
    (14546 'end of statement')
    if(14560 call _cond_test(14549 call == tmp[14543] nil[44]))
    {
      (14557 'throw'(14553 'new'(_chpl_manager = _owned[30](?))(14556 call ClassCastError[368222](?))))
    }
    (14571 return(14570 call _to_nonnil(14568 call _to_unmanaged tmp[14543])))
  }
  where {
    (354041 'is_proper_subtype'(14518 call _to_nonnil(14516 call _to_unmanaged(14514 'typeof' x[14505]))) t[14497])
  }
  function _cast[14584](arg t[14581] :
  _unmanagedNilable[226](?), arg x[14589] :
  _borrowedNilable[217](?)) : _unknown[51] "inline"
  {
    if(14609 call _cond_test(14603 call == x[14589] nil[44]))
    {
      (14606 return nil[44])
    }
    unknown tmp[14619](14618 'dynamic_cast' t[14581] x[14589])
    (14622 'end of statement')
    (14630 return(14629 call _to_nilable(14627 call _to_unmanaged tmp[14619])))
  }
  where {
    (354042 'is_proper_subtype'(14599 call _to_unmanaged(14597 'typeof' x[14589])) t[14581])
  }
  function _cast[14643](arg t[14640] :
  _unmanagedNilable[226](?), arg x[14647] :
  _borrowedNonNilable[214](?)) : _unknown[51] "inline"
  {
    if(14670 call _cond_test(14664 call == x[14647] nil[44]))
    {
      (14667 return nil[44])
    }
    unknown tmp[14680](14679 'dynamic_cast' t[14640] x[14647])
    (14683 'end of statement')
    (14691 return(14690 call _to_nilable(14688 call _to_unmanaged tmp[14680])))
  }
  where {
    (354043 'is_proper_subtype'(14660 'typeof' x[14647])(14657 call _to_nonnil(14655 call _to_borrowed t[14640])))
  }
  function _cast[14702](arg t[14699] :
  chpl_anycomplex[184](?), arg x[14705] :
  bool[10]) : _unknown[51] "inline"
  {
    (14716 return(14714 call _cast t[14699](14711 call _build_tuple x[14705] 0)))
  }
  function _cast[14727](arg t[14724] :
  chpl_anycomplex[184](?), arg x[14730] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (14741 return(14739 call _cast t[14724](14736 call _build_tuple x[14730] 0)))
  }
  function _cast[14752](arg t[14749] :
  chpl_anycomplex[184](?), arg x[14755] :
  chpl_anyreal[193](?)) : _unknown[51] "inline"
  {
    (14766 return(14764 call _cast t[14749](14761 call _build_tuple x[14755] 0)))
  }
  function _cast[14777](arg t[14774] :
  chpl_anycomplex[184](?), arg x[14780] :
  chpl_anyimag[190](?)) : _unknown[51] "inline"
  {
    (14794 return(14792 call _cast t[14774](14789 call _build_tuple 0(14787 call _i2r x[14780]))))
  }
  function _cast[14805](arg t[14802] :
  chpl_anycomplex[184](?), arg x[14808] :
  chpl_anycomplex[184](?)) : _unknown[51] "inline"
  {
    (14825 return(14823 call _cast t[14802](14820 call _build_tuple(14812 call . x[14808] c"re")(14816 call . x[14808] c"im"))))
  }
  function _cast[14836](arg t[14833] :
  chpl_anycomplex[184](?), arg x[14839] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    (14853 return(14851 call _cast t[14833](14848 call _build_tuple(14844 call _cast real(64)[16] x[14839]) 0)))
  }
  function _cast[14864](arg t[14861] :
  chpl_anyimag[190](?), arg x[14867] :
  bool[10]) : _unknown[51] "inline"
  {
    (14884 return(14881 IfExpr  x[14867] then
    { scopeless
      (14875 call _cast t[14861] 1.0i)
    } else
    { scopeless
      (14879 call _cast t[14861] 0.0i)
    } ))
  }
  function _cast[14895](arg t[14892] :
  chpl_anyimag[190](?), arg x[14898] :
  integral[199](?)) : _unknown[51] "inline"
  {
    (14906 return(14905 'cast' t[14892] x[14898]))
  }
  function _cast[14917](arg t[14914] :
  chpl_anyimag[190](?), arg x[14920] :
  chpl_anyreal[193](?)) : _unknown[51] "inline"
  {
    (14928 return(14927 'cast' t[14914] x[14920]))
  }
  function _cast[14939](arg t[14936] :
  chpl_anyimag[190](?), arg x[14942] :
  chpl_anyimag[190](?)) : _unknown[51] "inline"
  {
    (14950 return(14949 'cast' t[14936] x[14942]))
  }
  function _cast[14961](arg t[14958] :
  chpl_anyimag[190](?), arg x[14964] :
  chpl_anycomplex[184](?)) : _unknown[51] "inline"
  {
    (14975 return(14974 'cast' t[14958](14971 call . x[14964] c"im")))
  }
  function _cast[14986](arg t[14983] :
  chpl_anyimag[190](?), arg x[14989] :
  enum[187](?)) : _unknown[51] throws "inline"
  {
    (14999 return(14997 call _cast imag(64)[130](14994 call _cast real(64)[16] x[14989])))
  }
  function _cast[15010](arg t[15007] :
  chpl_anyreal[193](?), arg x[15013] :
  chpl_anycomplex[184](?)) : _unknown[51] "inline"
  {
    unknown y[15017] t[15007]
    (15020 'end of statement')
    (15030 call = y[15017](15028 call _cast t[15007](15024 call . x[15013] c"re")))
    (15034 return y[15017])
  }
  function _cast[15044](arg t[15041] :
  integral[199](?), arg x[15047] :
  chpl_anycomplex[184](?)) : _unknown[51] "inline"
  {
    unknown y[15051] t[15041]
    (15054 'end of statement')
    (15064 call = y[15051](15062 call _cast t[15041](15058 call . x[15047] c"re")))
    (15068 return y[15051])
  }
  function _cast[15078](arg t[15075] :
  chpl_anyreal[193](?), arg x[15081] :
  chpl_anyimag[190](?)) : _unknown[51] "inline"
  {
    (15089 return(15088 'cast' t[15075] x[15081]))
  }
  function _cast[15100](arg t[15097] :
  integral[199](?), arg x[15103] :
  chpl_anyimag[190](?)) : _unknown[51] "inline"
  {
    (15111 return(15110 'cast' t[15097] x[15103]))
  }
  function _cast[15122](arg t[15119] :
  chpl_anybool[181](?), arg x[15125] :
  chpl_anyimag[190](?)) : _unknown[51] "inline"
  {
    (15137 return(15134 IfExpr (15130 call != x[15125] 0.0i) then
    { scopeless
      1
    } else
    { scopeless
      0
    } ))
  }
  function chpl__initCopy[15146](arg t[15144]:_any[178](?)) type : _unknown[51] "init copy fn" "inline"
  {
    (15167 call compilerError "illegal assignment of type to value")
    (15171 return t[15144])
  }
  function chpl__initCopy[15181](arg x[15178] :
  _tuple[56199](?)) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__initCopy[15190](const arg x[15188]:_any[178](?)) : _unknown[51] "compiler generated" "init copy fn" "inline" "last resort" "suppress lvalue error"
  {
    (15193 return x[15188])
  }
  function chpl__autoCopy[15204](arg x[15201] :
  _tuple[56199](?)) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__unref[15215](arg x[15212] :
  _tuple[56199](?)) : _unknown[51] "compiler generated" "inline" "last resort" "unref fn" "no return value for void"
  {
  }
  function chpl__autoCopy[15226](arg ir[15223] :
  _iteratorRecord[205](?)) : _unknown[51] "auto copy fn" "compiler generated" "inline"
  {
    (15229 return ir[15223])
  }
  function chpl__autoCopy[15238](const arg x[15236]:_any[178](?)) : _unknown[51] "auto copy fn" "compiler generated" "inline" "last resort" "suppress lvalue error"
  {
    (15244 return(15243 call chpl__initCopy x[15236]))
  }
  function chpl__unalias[15253](arg x[15251]:_any[178](?)) : _unknown[51] "compiler generated" "inline" "last resort" "unalias fn"
  {
    unknown ret[15256] "no copy" x[15251]
    (15259 'end of statement')
    (15262 return ret[15256])
  }
  function chpl__unalias[15272](arg x[15269] :
  _iteratorClass[208](?)) : _unknown[51] "inline" "unalias fn"
  {
    unknown ret[15275] "no copy" x[15269]
    (15278 'end of statement')
    (15281 return ret[15275])
  }
  function chpl__unalias[15291](const  ref arg x[15288] :
  _iteratorRecord[205](?)) : _unknown[51] "inline" "unalias fn"
  {
    unknown ret[15294] "no copy" x[15288]
    (15297 'end of statement')
    (15300 return ret[15294])
  }
  function chpl__autoDestroy[15310](arg x[15307] :
  object[366956](?)) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__autoDestroy[15319](arg t[15317]:_any[178](?)) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
  }
  function chpl__autoDestroy[15331](arg x[15328] :
  unknown t[15326]) : _unknown[51] "auto destroy fn" "compiler generated" "inline" "last resort" "no return value for void"
  {
    (15352 'call destructor' x[15328])
  }
  function chpl__autoDestroy[15363](arg ir[15360] :
  _iteratorRecord[205](?)) : _unknown[51] "auto destroy fn" "inline" "no return value for void"
  {
  }
  function chpl__autoDestroy[15374](arg x[15371] :
  _distribution[118967](?)) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15379 'call destructor' x[15371])
  }
  function chpl__autoDestroy[15390](arg x[15387] :
  _domain[125902](?)) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15395 'call destructor' x[15387])
  }
  function chpl__autoDestroy[15408](arg x[15405] :
  (15402 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "auto destroy fn" "dont disable remote value forwarding" "removable auto destroy" "no return value for void"
  {
    (15413 'call destructor' x[15405])
  }
  function chpl__delete[15422](arg arg[15420]:_any[178](?)) : _unknown[51] "inline" "no borrow convert" "no return value for void"
  {
    if(15452 call _cond_test(15428 call chpl_isDdata(15426 'typeof' arg[15420])))
    {
      (15450 call compilerError "cannot delete data class")
    }
    if(15484 call _cond_test(15461 call ==(15459 'typeof' arg[15420]) _nilType[42]))
    {
      (15482 call compilerError "should not delete 'nil'")
    }
    if(15516 call _cond_test(354044 'is_subtype' _owned[30](?)(15491 'typeof' arg[15420])))
    {
      (15514 call compilerError "'delete' is not allowed on an owned class type")
    }
    if(15548 call _cond_test(354045 'is_subtype' _shared[32](?)(15523 'typeof' arg[15420])))
    {
      (15546 call compilerError "'delete' is not allowed on a shared class type")
    }
    if(15580 call _cond_test(15556 call isRecord arg[15420]))
    {
      (15578 call compilerError "'delete' is not allowed on records")
    }
    if(15623 call _cond_test(15593 call !(354046 'is_coercible' _borrowedNilable[217](?)(15587 'typeof' arg[15420]))))
    {
      (15621 call compilerError "'delete' is not allowed on non-class type "(15619 call _cast string[26](15617 'typeof' arg[15420])))
    }
    if(15659 call _cond_test(15636 call !(354047 'is_coercible' _unmanagedNilable[226](?)(15630 'typeof' arg[15420]))))
    {
      (15657 call compilerError "'delete' can only be applied to unmanaged classes")
    }
    if(15718 call _cond_test(15666 call != arg[15420] nil[44]))
    {
      (15677 call(15673 call .(15669 call postfix! arg[15420]) c"deinit"))
      const tmp[15710] "const" "temp"
      (15712 'move' tmp[15710](15708 'deref'(15707 '_wide_get_locale' arg[15420])))
      {
        (15705 call chpl_here_free(15703 '_wide_get_addr' arg[15420]))
        (15715 'on block' 0 tmp[15710])
      }
    }
  }
  function chpl__delete[15732](arg arr[15729] :
  (15726 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown a[15742] "index var" "insert auto destroy"
      iterated expressions:
        arr[15729]
      shadow variables:
      other variables
        forall body
      {
        (15739 call chpl__delete a[15742])
      }
    }
  }
  function chpl__delete[15752](arg arg[15750]:_any[178](?), arg args[15755]:_any[178](?) ...) : _unknown[51] "inline" "no return value for void"
  {
    (15761 call chpl__delete arg[15750])
    {
      unknown i[15784] 0
      unknown tmp[15785] "maybe param" "temp"
      (15797 'move' tmp[15785](15795 call chpl_compute_low_param_loop_bound 0(15772 call -(15768 call . args[15755] c"size") 1)))
      unknown tmp[15786] "maybe param" "temp"
      (15810 'move' tmp[15786](15808 call chpl_compute_high_param_loop_bound 0(15802 call -(15804 call . args[15755] c"size") 1)))
      unknown tmp[15787] "maybe param" "temp"
      (15813 'move' tmp[15787] 1)
      ParamForLoop[15815]
      { i[15784] tmp[15785] tmp[15786] tmp[15787]
        (15782 call chpl__delete(15780 call args[15755] i[15784]))
      }
      label _unused_continueLabel[15789]
      label _breakLabel[15788]
    }
  }
  function =[15832](ref arg a[15829] :
  c_void_ptr[149], arg b[15835] :
  c_void_ptr[149]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (15842 '=' a[15829] b[15835])
  }
  function ==[15853](arg a[15850] :
  c_void_ptr[149], arg b[15856] :
  c_void_ptr[149]) : _unknown[51] "inline"
  {
    (15864 return(15863 'ptr_eq' a[15850] b[15856]))
  }
  function !=[15875](arg a[15872] :
  c_void_ptr[149], arg b[15878] :
  c_void_ptr[149]) : _unknown[51] "inline"
  {
    (15886 return(15885 'ptr_neq' a[15872] b[15878]))
  }
  function func[15893]() type : _unknown[51] "inline"
  {
    (15915 return(15914 'create fn type' void[4]))
  }
  function func[15924](arg rettype[15922]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15930 return(15929 'create fn type' rettype[15922]))
  }
  function func[15942](arg t[15939]:_any[178](?) ..., arg rettype[15944]:_any[178](?)) type : _unknown[51] "inline"
  {
    (15952 return(15951 'create fn type'(15949 'expand_tuple' t[15939]) rettype[15944]))
  }
  function isIterator[15963](arg ic[15960] :
  _iteratorClass[208](?)) param : _unknown[51]
  {
    (15966 return 1)
  }
  function isIterator[15977](arg ir[15974] :
  _iteratorRecord[205](?)) param : _unknown[51]
  {
    (15980 return 1)
  }
  function isIterator[15989](arg not_an_iterator[15987]:_any[178](?)) param : _unknown[51]
  {
    (15992 return 0)
  }
  function +=[16007](ref arg lhs[16004] :
  (16003 call int(64)[13] unknown w[16000]), arg rhs[16013] :
  (16012 call int(64)[13] w[16000])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16036 '+=' lhs[16004] rhs[16013])
  }
  function +=[16051](ref arg lhs[16048] :
  (16047 call uint(64)[115] unknown w[16044]), arg rhs[16057] :
  (16056 call uint(64)[115] w[16044])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16064 '+=' lhs[16048] rhs[16057])
  }
  function +=[16079](ref arg lhs[16076] :
  (16075 call real(64)[16] unknown w[16072]), arg rhs[16085] :
  (16084 call real(64)[16] w[16072])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16092 '+=' lhs[16076] rhs[16085])
  }
  function +=[16107](ref arg lhs[16104] :
  (16103 call imag(64)[130] unknown w[16100]), arg rhs[16113] :
  (16112 call imag(64)[130] w[16100])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16120 '+=' lhs[16104] rhs[16113])
  }
  function +=[16129](ref arg lhs[16127]:_any[178](?), arg rhs[16131]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16138 call = lhs[16127](16136 call + lhs[16127] rhs[16131]))
  }
  function -=[16154](ref arg lhs[16151] :
  (16150 call int(64)[13] unknown w[16147]), arg rhs[16160] :
  (16159 call int(64)[13] w[16147])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16183 '-=' lhs[16151] rhs[16160])
  }
  function -=[16198](ref arg lhs[16195] :
  (16194 call uint(64)[115] unknown w[16191]), arg rhs[16204] :
  (16203 call uint(64)[115] w[16191])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16211 '-=' lhs[16195] rhs[16204])
  }
  function -=[16226](ref arg lhs[16223] :
  (16222 call real(64)[16] unknown w[16219]), arg rhs[16232] :
  (16231 call real(64)[16] w[16219])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16239 '-=' lhs[16223] rhs[16232])
  }
  function -=[16254](ref arg lhs[16251] :
  (16250 call imag(64)[130] unknown w[16247]), arg rhs[16260] :
  (16259 call imag(64)[130] w[16247])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16267 '-=' lhs[16251] rhs[16260])
  }
  function -=[16276](ref arg lhs[16274]:_any[178](?), arg rhs[16278]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16285 call = lhs[16274](16283 call - lhs[16274] rhs[16278]))
  }
  function *=[16301](ref arg lhs[16298] :
  (16297 call int(64)[13] unknown w[16294]), arg rhs[16307] :
  (16306 call int(64)[13] w[16294])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16330 '*=' lhs[16298] rhs[16307])
  }
  function *=[16345](ref arg lhs[16342] :
  (16341 call uint(64)[115] unknown w[16338]), arg rhs[16351] :
  (16350 call uint(64)[115] w[16338])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16358 '*=' lhs[16342] rhs[16351])
  }
  function *=[16373](ref arg lhs[16370] :
  (16369 call real(64)[16] unknown w[16366]), arg rhs[16379] :
  (16378 call real(64)[16] w[16366])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16386 '*=' lhs[16370] rhs[16379])
  }
  function *=[16395](ref arg lhs[16393]:_any[178](?), arg rhs[16397]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16404 call = lhs[16393](16402 call * lhs[16393] rhs[16397]))
  }
  function /=[16420](ref arg lhs[16417] :
  (16416 call int(64)[13] unknown w[16413]), arg rhs[16426] :
  (16425 call int(64)[13] w[16413])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    if(16444 call _cond_test 1)
    {
      if(16439 call _cond_test(16432 call == rhs[16426] 0))
      {
        (16437 call halt "Attempt to divide by zero")
      }
    }
    (16470 '/=' lhs[16417] rhs[16426])
  }
  function /=[16484](ref arg lhs[16481] :
  (16480 call uint(64)[115] unknown w[16477]), arg rhs[16490] :
  (16489 call uint(64)[115] w[16477])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    if(16508 call _cond_test 1)
    {
      if(16503 call _cond_test(16496 call == rhs[16490] 0))
      {
        (16501 call halt "Attempt to divide by zero")
      }
    }
    (16518 '/=' lhs[16481] rhs[16490])
  }
  function /=[16532](ref arg lhs[16529] :
  (16528 call real(64)[16] unknown w[16525]), arg rhs[16538] :
  (16537 call real(64)[16] w[16525])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16545 '/=' lhs[16529] rhs[16538])
  }
  function /=[16554](ref arg lhs[16552]:_any[178](?), arg rhs[16556]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16563 call = lhs[16552](16561 call / lhs[16552] rhs[16556]))
  }
  function %=[16579](ref arg lhs[16576] :
  (16575 call int(64)[13] unknown w[16572]), arg rhs[16585] :
  (16584 call int(64)[13] w[16572])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    if(16603 call _cond_test 1)
    {
      if(16598 call _cond_test(16591 call == rhs[16585] 0))
      {
        (16596 call halt "Attempt to compute a modulus by zero")
      }
    }
    (16629 '%=' lhs[16576] rhs[16585])
  }
  function %=[16643](ref arg lhs[16640] :
  (16639 call uint(64)[115] unknown w[16636]), arg rhs[16649] :
  (16648 call uint(64)[115] w[16636])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    if(16667 call _cond_test 1)
    {
      if(16662 call _cond_test(16655 call == rhs[16649] 0))
      {
        (16660 call halt "Attempt to compute a modulus by zero")
      }
    }
    (16677 '%=' lhs[16640] rhs[16649])
  }
  function %=[16691](ref arg lhs[16688] :
  (16687 call real(64)[16] unknown w[16684]), arg rhs[16697] :
  (16696 call real(64)[16] w[16684])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16704 '%=' lhs[16688] rhs[16697])
  }
  function %=[16713](ref arg lhs[16711]:_any[178](?), arg rhs[16715]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16722 call = lhs[16711](16720 call % lhs[16711] rhs[16715]))
  }
  function **=[16732](ref arg lhs[16730]:_any[178](?), arg rhs[16734]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16741 call = lhs[16730](16739 call ** lhs[16730] rhs[16734]))
  }
  function &=[16757](ref arg lhs[16754] :
  (16753 call int(64)[13] unknown w[16750]), arg rhs[16763] :
  (16762 call int(64)[13] w[16750])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16786 '&=' lhs[16754] rhs[16763])
  }
  function &=[16801](ref arg lhs[16798] :
  (16797 call uint(64)[115] unknown w[16794]), arg rhs[16807] :
  (16806 call uint(64)[115] w[16794])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16814 '&=' lhs[16798] rhs[16807])
  }
  function &=[16823](ref arg lhs[16821]:_any[178](?), arg rhs[16825]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16832 call = lhs[16821](16830 call & lhs[16821] rhs[16825]))
  }
  function |=[16848](ref arg lhs[16845] :
  (16844 call int(64)[13] unknown w[16841]), arg rhs[16854] :
  (16853 call int(64)[13] w[16841])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16877 '|=' lhs[16845] rhs[16854])
  }
  function |=[16892](ref arg lhs[16889] :
  (16888 call uint(64)[115] unknown w[16885]), arg rhs[16898] :
  (16897 call uint(64)[115] w[16885])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16905 '|=' lhs[16889] rhs[16898])
  }
  function |=[16914](ref arg lhs[16912]:_any[178](?), arg rhs[16916]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16923 call = lhs[16912](16921 call | lhs[16912] rhs[16916]))
  }
  function ^=[16939](ref arg lhs[16936] :
  (16935 call int(64)[13] unknown w[16932]), arg rhs[16945] :
  (16944 call int(64)[13] w[16932])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16968 '^=' lhs[16936] rhs[16945])
  }
  function ^=[16983](ref arg lhs[16980] :
  (16979 call uint(64)[115] unknown w[16976]), arg rhs[16989] :
  (16988 call uint(64)[115] w[16976])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (16996 '^=' lhs[16980] rhs[16989])
  }
  function ^=[17005](ref arg lhs[17003]:_any[178](?), arg rhs[17007]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17014 call = lhs[17003](17012 call ^ lhs[17003] rhs[17007]))
  }
  function >>=[17030](ref arg lhs[17027] :
  (17026 call int(64)[13] unknown w[17023]), arg rhs[17036] :
  (17035 call int(64)[13] w[17023])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17059 '>>=' lhs[17027] rhs[17036])
  }
  function >>=[17074](ref arg lhs[17071] :
  (17070 call uint(64)[115] unknown w[17067]), arg rhs[17080] :
  (17079 call uint(64)[115] w[17067])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17087 '>>=' lhs[17071] rhs[17080])
  }
  function >>=[17096](ref arg lhs[17094]:_any[178](?), arg rhs[17098]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17105 call = lhs[17094](17103 call >> lhs[17094] rhs[17098]))
  }
  function <<=[17121](ref arg lhs[17118] :
  (17117 call int(64)[13] unknown w[17114]), arg rhs[17127] :
  (17126 call int(64)[13] w[17114])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17150 '<<=' lhs[17118] rhs[17127])
  }
  function <<=[17165](ref arg lhs[17162] :
  (17161 call uint(64)[115] unknown w[17158]), arg rhs[17171] :
  (17170 call uint(64)[115] w[17158])) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17178 '<<=' lhs[17162] rhs[17171])
  }
  function <<=[17187](ref arg lhs[17185]:_any[178](?), arg rhs[17189]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17196 call = lhs[17185](17194 call << lhs[17185] rhs[17189]))
  }
  function +=[17208](ref arg D[17205] :
  _domain[125902](?), arg idx[17210]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17218 call(17213 call . D[17205] c"add") idx[17210])
  }
  function -=[17229](ref arg D[17226] :
  _domain[125902](?), arg idx[17231]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17241 call(17236 call . D[17226] c"remove") idx[17231])
  }
  function +=[17252](ref arg D[17249] :
  _domain[125902](?), param arg idx[17254]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17262 call(17257 call . D[17249] c"add") idx[17254])
  }
  function -=[17273](ref arg D[17270] :
  _domain[125902](?), param arg idx[17275]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (17283 call(17278 call . D[17270] c"remove") idx[17275])
  }
  function <=>[17292](ref arg lhs[17290]:_any[178](?), ref arg rhs[17294]:_any[178](?)) : _unknown[51] "inline" "ignore transfer errors" "no return value for void"
  {
    unknown tmp[17297] lhs[17290]
    (17300 'end of statement')
    (17304 call = lhs[17290] rhs[17294])
    (17309 call = rhs[17294] tmp[17297])
  }
  function +[17323](arg a[17320] :
  (17319 call uint(64)[115] 64), arg b[17329] :
  (17328 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17335 call _throwOpError "+")
  }
  function +[17349](arg a[17346] :
  (17345 call int(64)[13] 64), arg b[17355] :
  (17354 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17361 call _throwOpError "+")
  }
  function +[17375](arg a[17372] :
  (17371 call uint(64)[115] 64), param arg b[17381] :
  (17380 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17389 return(17388 '+' a[17372] b[17381]))
  }
  function +[17403](param arg a[17400] :
  (17399 call uint(64)[115] 64), arg b[17409] :
  (17408 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17417 return(17416 '+' a[17400] b[17409]))
  }
  function +[17431](arg a[17428] :
  (17427 call int(64)[13] 64), param arg b[17437] :
  (17436 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17445 return(17444 '+' a[17428] b[17437]))
  }
  function +[17459](param arg a[17456] :
  (17455 call int(64)[13] 64), arg b[17465] :
  (17464 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17473 return(17472 '+' a[17456] b[17465]))
  }
  function -[17487](arg a[17484] :
  (17483 call uint(64)[115] 64), arg b[17493] :
  (17492 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17499 call _throwOpError "-")
  }
  function -[17513](arg a[17510] :
  (17509 call int(64)[13] 64), arg b[17519] :
  (17518 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17525 call _throwOpError "-")
  }
  function -[17539](arg a[17536] :
  (17535 call uint(64)[115] 64), param arg b[17545] :
  (17544 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17553 return(17552 '-' a[17536] b[17545]))
  }
  function -[17567](param arg a[17564] :
  (17563 call uint(64)[115] 64), arg b[17573] :
  (17572 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17581 return(17580 '-' a[17564] b[17573]))
  }
  function -[17595](arg a[17592] :
  (17591 call int(64)[13] 64), param arg b[17601] :
  (17600 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17609 return(17608 '-' a[17592] b[17601]))
  }
  function -[17623](param arg a[17620] :
  (17619 call int(64)[13] 64), arg b[17629] :
  (17628 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17637 return(17636 '-' a[17620] b[17629]))
  }
  function *[17651](arg a[17648] :
  (17647 call uint(64)[115] 64), arg b[17657] :
  (17656 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17663 call _throwOpError "*")
  }
  function *[17677](arg a[17674] :
  (17673 call int(64)[13] 64), arg b[17683] :
  (17682 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17689 call _throwOpError "*")
  }
  function *[17703](arg a[17700] :
  (17699 call uint(64)[115] 64), param arg b[17709] :
  (17708 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17717 return(17716 '*' a[17700] b[17709]))
  }
  function *[17731](param arg a[17728] :
  (17727 call uint(64)[115] 64), arg b[17737] :
  (17736 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (17745 return(17744 '*' a[17728] b[17737]))
  }
  function *[17759](arg a[17756] :
  (17755 call int(64)[13] 64), param arg b[17765] :
  (17764 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17773 return(17772 '*' a[17756] b[17765]))
  }
  function *[17787](param arg a[17784] :
  (17783 call int(64)[13] 64), arg b[17793] :
  (17792 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (17801 return(17800 '*' a[17784] b[17793]))
  }
  function /[17815](arg a[17812] :
  (17811 call uint(64)[115] 64), arg b[17821] :
  (17820 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17827 call _throwOpError "/")
  }
  function /[17841](arg a[17838] :
  (17837 call int(64)[13] 64), arg b[17847] :
  (17846 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (17853 call _throwOpError "/")
  }
  function /[17867](arg a[17864] :
  (17863 call int(64)[13] 64), param arg b[17873] :
  (17872 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    if(17885 call _cond_test(17878 call == b[17873] 0))
    {
      (17883 call compilerError "Attempt to divide by zero")
    }
    (17896 return(17895 '/' a[17864] b[17873]))
  }
  function /[17909](arg a[17906] :
  (17905 call uint(64)[115] 64), param arg b[17915] :
  (17914 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    if(17927 call _cond_test(17920 call == b[17915] 0))
    {
      (17925 call compilerError "Attempt to divide by zero")
    }
    (17938 return(17937 '/' a[17906] b[17915]))
  }
  function /[17951](param arg a[17948] :
  (17947 call uint(64)[115] 64), arg b[17957] :
  (17956 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    if(17975 call _cond_test 1)
    {
      if(17970 call _cond_test(17963 call == b[17957] 0))
      {
        (17968 call halt "Attempt to divide by zero")
      }
    }
    (17986 return(17985 '/' a[17948] b[17957]))
  }
  function /[17999](param arg a[17996] :
  (17995 call int(64)[13] 64), arg b[18005] :
  (18004 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    if(18023 call _cond_test 1)
    {
      if(18018 call _cond_test(18011 call == b[18005] 0))
      {
        (18016 call halt "Attempt to divide by zero")
      }
    }
    (18034 return(18033 '/' a[17996] b[18005]))
  }
  function **[18047](arg a[18044] :
  (18043 call uint(64)[115] 64), arg b[18053] :
  (18052 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (18059 call _throwOpError "**")
  }
  function **[18073](arg a[18070] :
  (18069 call int(64)[13] 64), arg b[18079] :
  (18078 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (18085 call _throwOpError "**")
  }
  function **[18099](arg a[18096] :
  (18095 call uint(64)[115] 64), param arg b[18105] :
  (18104 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18113 return(18112 '**' a[18096] b[18105]))
  }
  function **[18127](param arg a[18124] :
  (18123 call uint(64)[115] 64), arg b[18133] :
  (18132 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18141 return(18140 '**' a[18124] b[18133]))
  }
  function **[18155](arg a[18152] :
  (18151 call int(64)[13] 64), param arg b[18161] :
  (18160 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18169 return(18168 '**' a[18152] b[18161]))
  }
  function **[18183](param arg a[18180] :
  (18179 call int(64)[13] 64), arg b[18189] :
  (18188 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18197 return(18196 '**' a[18180] b[18189]))
  }
  function %[18211](arg a[18208] :
  (18207 call uint(64)[115] 64), arg b[18217] :
  (18216 call int(64)[13] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (18223 call _throwOpError "%")
  }
  function %[18237](arg a[18234] :
  (18233 call int(64)[13] 64), arg b[18243] :
  (18242 call uint(64)[115] 64)) : _unknown[51] "inline" "no return value for void"
  {
    (18249 call _throwOpError "%")
  }
  function %[18263](arg a[18260] :
  (18259 call uint(64)[115] 64), param arg b[18269] :
  (18268 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    if(18281 call _cond_test(18274 call == b[18269] 0))
    {
      (18279 call compilerError "Attempt to compute a modulus by zero")
    }
    (18292 return(18291 '%' a[18260] b[18269]))
  }
  function %[18305](param arg a[18302] :
  (18301 call uint(64)[115] 64), arg b[18311] :
  (18310 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    if(18329 call _cond_test 1)
    {
      if(18324 call _cond_test(18317 call == b[18311] 0))
      {
        (18322 call halt "Attempt to compute a modulus by zero")
      }
    }
    (18340 return(18339 '%' a[18302] b[18311]))
  }
  function %[18353](arg a[18350] :
  (18349 call int(64)[13] 64), param arg b[18359] :
  (18358 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    if(18371 call _cond_test(18364 call == b[18359] 0))
    {
      (18369 call compilerError "Attempt to compute a modulus by zero")
    }
    (18382 return(18381 '%' a[18350] b[18359]))
  }
  function %[18395](param arg a[18392] :
  (18391 call int(64)[13] 64), arg b[18401] :
  (18400 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    if(18419 call _cond_test 1)
    {
      if(18414 call _cond_test(18407 call == b[18401] 0))
      {
        (18412 call halt "Attempt to compute a modulus by zero")
      }
    }
    (18430 return(18429 '%' a[18392] b[18401]))
  }
  function ==[18443](arg a[18440] :
  (18439 call uint(64)[115] 64), arg b[18449] :
  (18448 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18470 return(18468 call &&(18456 call !(18454 call < b[18449] 0))(18466 call == a[18440](18464 call _cast(18463 call uint(64)[115] 64) b[18449]))))
  }
  function ==[18484](arg a[18481] :
  (18480 call int(64)[13] 64), arg b[18490] :
  (18489 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18511 return(18509 call &&(18497 call !(18495 call < a[18481] 0))(18507 call ==(18504 call _cast(18503 call uint(64)[115] 64) a[18481]) b[18490])))
  }
  function !=[18525](arg a[18522] :
  (18521 call uint(64)[115] 64), arg b[18531] :
  (18530 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18550 return(18548 call ||(18536 call < b[18531] 0)(18546 call != a[18522](18544 call _cast(18543 call uint(64)[115] 64) b[18531]))))
  }
  function !=[18564](arg a[18561] :
  (18560 call int(64)[13] 64), arg b[18570] :
  (18569 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18589 return(18587 call ||(18575 call < a[18561] 0)(18585 call !=(18582 call _cast(18581 call uint(64)[115] 64) a[18561]) b[18570])))
  }
  function >[18603](arg a[18600] :
  (18599 call uint(64)[115] 64), arg b[18609] :
  (18608 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18628 return(18626 call ||(18614 call < b[18609] 0)(18624 call > a[18600](18622 call _cast(18621 call uint(64)[115] 64) b[18609]))))
  }
  function >[18642](arg a[18639] :
  (18638 call int(64)[13] 64), arg b[18648] :
  (18647 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18669 return(18667 call &&(18655 call !(18653 call < a[18639] 0))(18665 call >(18662 call _cast(18661 call uint(64)[115] 64) a[18639]) b[18648])))
  }
  function >[18683](param arg a[18680] :
  (18679 call uint(64)[115] 64), arg b[18689] :
  (18688 call uint(64)[115] 64)) param : _unknown[51] "inline"
  {
    (18697 return 0)
  }
  where {
    (18694 call == a[18680] 0)
  }
  function >[18712](param arg a[18709] :
  (18708 call uint(64)[115] 64), arg b[18718] :
  (18717 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18726 return(18725 '>' a[18709] b[18718]))
  }
  function >[18740](param arg a[18737] :
  (18736 call int(64)[13] 64), arg b[18746] :
  (18745 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18754 return(18753 '>' a[18737] b[18746]))
  }
  function <[18768](arg a[18765] :
  (18764 call uint(64)[115] 64), arg b[18774] :
  (18773 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18795 return(18793 call &&(18781 call !(18779 call < b[18774] 0))(18791 call < a[18765](18789 call _cast(18788 call uint(64)[115] 64) b[18774]))))
  }
  function <[18809](arg a[18806] :
  (18805 call int(64)[13] 64), arg b[18815] :
  (18814 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18834 return(18832 call ||(18820 call < a[18806] 0)(18830 call <(18827 call _cast(18826 call uint(64)[115] 64) a[18806]) b[18815])))
  }
  function <[18848](arg a[18845] :
  (18844 call uint(64)[115] 64), param arg b[18854] :
  (18853 call uint(64)[115] 64)) param : _unknown[51] "inline"
  {
    (18862 return 0)
  }
  where {
    (18859 call == b[18854] 0)
  }
  function <[18877](arg a[18874] :
  (18873 call uint(64)[115] 64), param arg b[18883] :
  (18882 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18891 return(18890 '<' a[18874] b[18883]))
  }
  function <[18905](arg a[18902] :
  (18901 call int(64)[13] 64), param arg b[18911] :
  (18910 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18919 return(18918 '<' a[18902] b[18911]))
  }
  function >=[18933](arg a[18930] :
  (18929 call uint(64)[115] 64), arg b[18939] :
  (18938 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (18958 return(18956 call ||(18944 call < b[18939] 0)(18954 call >= a[18930](18952 call _cast(18951 call uint(64)[115] 64) b[18939]))))
  }
  function >=[18972](arg a[18969] :
  (18968 call int(64)[13] 64), arg b[18978] :
  (18977 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (18999 return(18997 call &&(18985 call !(18983 call < a[18969] 0))(18995 call >=(18992 call _cast(18991 call uint(64)[115] 64) a[18969]) b[18978])))
  }
  function >=[19013](arg a[19010] :
  (19009 call uint(64)[115] 64), param arg b[19019] :
  (19018 call uint(64)[115] 64)) param : _unknown[51] "inline"
  {
    (19027 return 1)
  }
  where {
    (19024 call == b[19019] 0)
  }
  function >=[19042](arg a[19039] :
  (19038 call uint(64)[115] 64), param arg b[19048] :
  (19047 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (19056 return(19055 '>=' a[19039] b[19048]))
  }
  function >=[19070](arg a[19067] :
  (19066 call int(64)[13] 64), param arg b[19076] :
  (19075 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (19084 return(19083 '>=' a[19067] b[19076]))
  }
  function <=[19098](arg a[19095] :
  (19094 call uint(64)[115] 64), arg b[19104] :
  (19103 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (19125 return(19123 call &&(19111 call !(19109 call < b[19104] 0))(19121 call <= a[19095](19119 call _cast(19118 call uint(64)[115] 64) b[19104]))))
  }
  function <=[19139](arg a[19136] :
  (19135 call int(64)[13] 64), arg b[19145] :
  (19144 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (19164 return(19162 call ||(19150 call < a[19136] 0)(19160 call <=(19157 call _cast(19156 call uint(64)[115] 64) a[19136]) b[19145])))
  }
  function <=[19178](param arg a[19175] :
  (19174 call uint(64)[115] 64), arg b[19184] :
  (19183 call uint(64)[115] 64)) param : _unknown[51] "inline"
  {
    (19192 return 1)
  }
  where {
    (19189 call == a[19175] 0)
  }
  function <=[19207](param arg a[19204] :
  (19203 call uint(64)[115] 64), arg b[19213] :
  (19212 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    (19221 return(19220 '<=' a[19204] b[19213]))
  }
  function <=[19235](param arg a[19232] :
  (19231 call int(64)[13] 64), arg b[19241] :
  (19240 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    (19249 return(19248 '<=' a[19232] b[19241]))
  }
  function isGenericType[19258](arg t[19256]:_any[178](?)) param : _unknown[51]
  {
    (19280 return(19279 'is generic type' t[19256]))
  }
  function isClassType[19289](arg t[19287]:_any[178](?)) param : _unknown[51]
  {
    (19313 return(19312 'is class type' t[19287]))
  }
  function isNilableClassType[19322](arg t[19320]:_any[178](?)) param : _unknown[51]
  {
    (19344 return(19343 'is nilable class type' t[19320]))
  }
  function isNonNilableClassType[19353](arg t[19351]:_any[178](?)) param : _unknown[51]
  {
    (19375 return(19374 'is non nilable class type' t[19351]))
  }
  function isBorrowedOrUnmanagedClassType[19386](arg t[19383] :
  unmanaged[220](?)) param : _unknown[51]
  {
    (19389 return 1)
  }
  function isBorrowedOrUnmanagedClassType[19400](arg t[19397] :
  borrowed[211](?)) param : _unknown[51]
  {
    (19403 return 1)
  }
  function isBorrowedOrUnmanagedClassType[19412](arg t[19410]:_any[178](?)) param : _unknown[51]
  {
    (19415 return 0)
  }
  function chpl_legacyClasses[19422]() param : _unknown[51] "no parens"
  {
    (19445 call compilerWarning "'chpl_legacyClasses' is deprecated and will be removed in the next release; it is now always false")
    (19449 return 0)
  }
  function isRecordType[19457](arg t[19455]:_any[178](?)) param : _unknown[51]
  {
    if(19549 call _cond_test(19480 call ==(19478 'is record type' t[19455]) 0))
    {
      (19483 return 0)
    }
    {
      if(19543 call _cond_test(19535 call ||(19529 call ||(19523 call ||(19517 call ||(19511 call ||(19505 call ||(19499 call ||(19493 call ||(19488 call isDmapType t[19455])(19492 call isDomainType t[19455]))(19498 call isArrayType t[19455]))(19504 call isRangeType t[19455]))(19510 call isTupleType t[19455]))(19516 call isSyncType t[19455]))(19522 call isSingleType t[19455]))(19528 call isStringType t[19455]))(19534 call isAtomicType t[19455])))
      {
        (19538 return 0)
      }
      {
        (19541 return 1)
      }
    }
  }
  function isUnionType[19562](arg t[19560]:_any[178](?)) param : _unknown[51]
  {
    (19584 return(19583 'is union type' t[19560]))
  }
  function isAtomicType[19593](arg t[19591]:_any[178](?)) param : _unknown[51]
  {
    (19615 return(19614 'is atomic type' t[19591]))
  }
  function isRefIterType[19624](arg t[19622]:_any[178](?)) param : _unknown[51]
  {
    (19646 return(19645 'is ref iter type' t[19622]))
  }
  const QIO_STYLE_ELEMENT_STRING[19652] "const" "extern" int(64)[13]
  (19655 'end of statement')
  const QIO_STYLE_ELEMENT_COMPLEX[19657] "const" "extern" int(64)[13]
  (19660 'end of statement')
  const QIO_STYLE_ELEMENT_ARRAY[19662] "const" "extern" int(64)[13]
  (19665 'end of statement')
  const QIO_STYLE_ELEMENT_AGGREGATE[19667] "const" "extern" int(64)[13]
  (19670 'end of statement')
  const QIO_STYLE_ELEMENT_TUPLE[19672] "const" "extern" int(64)[13]
  (19675 'end of statement')
  const QIO_STYLE_ELEMENT_BYTE_ORDER[19677] "const" "extern" int(64)[13]
  (19680 'end of statement')
  const QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19682] "const" "extern" int(64)[13]
  (19685 'end of statement')
  const QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS[19687] "const" "extern" int(64)[13]
  (19690 'end of statement')
  const QIO_ARRAY_FORMAT_SPACE[19692] "const" "extern" int(64)[13]
  (19695 'end of statement')
  const QIO_ARRAY_FORMAT_CHPL[19697] "const" "extern" int(64)[13]
  (19700 'end of statement')
  const QIO_ARRAY_FORMAT_JSON[19702] "const" "extern" int(64)[13]
  (19705 'end of statement')
  const QIO_AGGREGATE_FORMAT_BRACES[19707] "const" "extern" int(64)[13]
  (19710 'end of statement')
  const QIO_AGGREGATE_FORMAT_CHPL[19712] "const" "extern" int(64)[13]
  (19715 'end of statement')
  const QIO_AGGREGATE_FORMAT_JSON[19717] "const" "extern" int(64)[13]
  (19720 'end of statement')
  const QIO_TUPLE_FORMAT_CHPL[19722] "const" "extern" int(64)[13]
  (19725 'end of statement')
  const QIO_TUPLE_FORMAT_SPACE[19727] "const" "extern" int(64)[13]
  (19730 'end of statement')
  const QIO_TUPLE_FORMAT_JSON[19732] "const" "extern" int(64)[13]
  (19735 'end of statement')
  function chpl_ModuleDeinit[19824].writeThis[19758](arg _mt[19828]:_MT[238], arg this[19826]:chpl_ModuleDeinit[19824], arg ch[19756]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    Try
    {
      {
        (19788 call(19763 call . ch[19756] c"writef") "chpl_ModuleDeinit(%s)"(19787 call createStringWithNewBuffer(368655 call . this[19826] c"moduleName")))
      }
    }
    Catch e : DecodeError
    {
      unknown tmp[354049] "temp"(354053 'dynamic_cast' unmanaged DecodeError?[415511](354052 'current error'))
      if(354056 '!=' tmp[354049] nil[44])
      {
        unknown e[354062](354067 'new'(354065 call _owned[30](?)(354063 'to non nilable class' tmp[354049])))
        {
          (19814 call halt "Module name is not valid string!")
        }
      }
      {
      }
    }
  }
  type chpl_ModuleDeinit[19824] val super[355514]:object[22] "super class" const moduleName[19738] "const" c_string[19] const deinitFun[19743] "const" c_fn_ptr[152] const prevModule[19750] "const" unmanaged chpl_ModuleDeinit?[415260]
  type unmanaged chpl_ModuleDeinit?[415260]
  type chpl_ModuleDeinit?[415257](?)
  type chpl_ModuleDeinit[368650](?)
  unknown chpl_moduleDeinitFuns[19837](19835 call _cast unmanaged chpl_ModuleDeinit?[415260] nil[44])
  (19840 'end of statement')
  function chpl_checkLegalTypeFieldAccessor[19845](arg thisArg[19843]:_any[178](?), arg fieldType[19847]:_any[178](?), param arg fieldName[19849]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19928 call _cond_test(19866 call &&(19855 call isNilableClassType(19853 'typeof' thisArg[19843]))(19864 call ||(19859 call isDomainType fieldType[19847])(19863 call isArrayType fieldType[19847]))))
    {
      (19926 call compilerError "accessing the runtime-type field " fieldName[19849] " of a nilable class. Consider applying postfix-! operator" " to the class before accessing this field.")
    }
    (19935 return fieldType[19847])
  }
  function chpl_checkLegalTypeFieldAccessor[19943](arg thisArg[19941]:_any[178](?), arg fieldType[19945]:_any[178](?), param arg fieldName[19947]:_any[178](?)) type : _unknown[51] "inline"
  {
    if(19984 call _cond_test(19957 call ||(19952 call isDomainType fieldType[19945])(19956 call isArrayType fieldType[19945])))
    {
      (19982 call compilerError "accessing the runtime-type field " fieldName[19947] " of a class type is currently unsupported")
    }
    (19991 return fieldType[19945])
  }
  function _to_unmanaged[19999](arg t[19997]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20021] "type variable"(20020 'to unmanaged class' t[19997])
    (20026 return rt[20021])
  }
  function _to_unmanaged[20034](arg arg[20032]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[20040](20039 'to unmanaged class' arg[20032])
    (20043 'end of statement')
    (20046 return ret[20040])
  }
  function _to_borrowed[20054](arg t[20052]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20078] "type variable"(20077 'to borrowed class' t[20052])
    (20083 return rt[20078])
  }
  function _to_borrowed[20091](arg arg[20089]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[20097](20096 'to borrowed class' arg[20089])
    (20100 'end of statement')
    (20103 return ret[20097])
  }
  function _to_nonnil[20111](arg t[20109]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20133] "type variable"(20132 'to non nilable class' t[20109])
    (20138 return rt[20133])
  }
  function _to_nonnil[20146](arg arg[20144]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[20152](20151 'to non nilable class' arg[20144])
    (20155 'end of statement')
    (20158 return ret[20152])
  }
  function _to_nilable[20166](arg t[20164]:_any[178](?)) type : _unknown[51]
  {
    unknown rt[20188] "type variable"(20187 'to nilable class' t[20164])
    (20193 return rt[20188])
  }
  function _to_nilable[20201](arg arg[20199]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[20207](20206 'to nilable class' arg[20199])
    (20210 'end of statement')
    (20213 return ret[20207])
  }
  function _removed_cast[20221](in arg x[20219]:_any[178](?)) : _unknown[51] "inline" "no borrow convert"
  {
    (20224 return x[20219])
  }
  function enumerated[20231]() type : _unknown[51] "no parens"
  {
    (20252 call compilerWarning "'enumerated' is deprecated - please use 'enum' instead")
    (20256 return enum[187](?))
  }
  (352900 'used modules list'(352898 'use' _root[2])(316 'use' ChapelStandard[20264])(320 'use' ChapelEnv[20943])(322 'use' SysCTypes[20940]))
}