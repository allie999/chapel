AST dump for ChapelUtil after pass denormalize.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416130](const in arg _ln[2684602]:int(64)[13], in arg _fn[2684604]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelUtil_p[2656108]
    {
      goto _exit_chpl__init_ChapelUtil[2656145] _exit_chpl__init_ChapelUtil[2656145]
    }
    ref refIndentLevel[2656131]:int(32)[95] "temp"
    (2656129 call printModuleInit[20429] c"%*s\n" c"ChapelUtil" 10 _ln[2684602] _fn[2684604])
    (2656135 'move' refIndentLevel[2656131](2656134 'addr of' moduleInitLevel[20419]))
    (2656138 '+=' refIndentLevel[2656131] 1)
    (2656114 'move' chpl__init_ChapelUtil_p[2656108] 1)
    (2656141 '-=' refIndentLevel[2656131] 1)
    label _exit_chpl__init_ChapelUtil[2656145]
    (522208 return _void[55])
  }
  function _local_safeAdd[2613165](const in arg a[2613167]:int(64)[13], const in arg b[2613169]:int(64)[13]) : bool[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[2613172]:bool[10] "dead after last mention" "RVV" "temp"
    if(2613178 '<' a[2613167] 0)
    {
      if(2613187 '>=' b[2613169] 0)
      {
        (2613192 'move' ret[2613172] 1)
        gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
      }
      {
        if(2613209 '<' b[2613169](2708762 'cast' int(64)[13](2613202 '-' -9223372036854775808 a[2613167])))
        {
          (2613214 'move' ret[2613172] 0)
          gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
        }
        {
          (2613220 'move' ret[2613172] 1)
          gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
        }
      }
    }
    {
      if(2613232 '<=' b[2613169] 0)
      {
        (2613237 'move' ret[2613172] 1)
        gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
      }
      {
        if(2613254 '>' b[2613169](2708764 'cast' int(64)[13](2613247 '-' 9223372036854775807 a[2613167])))
        {
          (2613259 'move' ret[2613172] 0)
          gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
        }
        {
          (2613265 'move' ret[2613172] 1)
          gotoReturn _end_safeAdd[2613273] _end_safeAdd[2613273]
        }
      }
    }
    label _end_safeAdd[2613273]
    (2613275 return ret[2613172])
  }
  function safeAdd[979918](const in arg a[979920]:int(64)[13], const in arg b[979925]:int(64)[13]) : bool[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[979927]:bool[10] "dead after last mention" "RVV" "temp"
    if(2230502 '<' a[979920] 0)
    {
      if(2335464 '>=' b[979925] 0)
      {
        (980002 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        if(2244712 '<' b[979925](2708014 'cast' int(64)[13](2342696 '-' -9223372036854775808 a[979920])))
        {
          (980047 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980054 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    {
      if(2290178 '<=' b[979925] 0)
      {
        (980080 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        if(2240237 '>' b[979925](2708012 'cast' int(64)[13](2342726 '-' 9223372036854775807 a[979920])))
        {
          (980125 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980132 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    label _end_safeAdd[980141]
    (980143 return ret[979927])
  }
  type chpl_main_argument[167416] val argc[167403]:int(64)[13] val return_value[167411]:int(32)[95]
  function chpl_rt_preUserCodeHook[167714]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522194 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167720]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522196 return _void[55])
  }
  function chpl_addModule[167735](const in arg moduleName[167732]:c_string[19], const in arg deinitFun[167738]:c_fn_ptr[152], const in arg _ln[2676104]:int(64)[13], in arg _fn[2676106]:int(32)[95]) : void[4] "resolved" "no return value for void"
  {
    val new_temp[1593239]:chpl_ModuleDeinit[19827] "dead after last mention" "temp"
    val tmp[2197456]:__wide_chpl_ModuleDeinit[2581327] "temp"
    (2658823 '_check_nil' chpl_moduleDeinitFuns[19840] _ln[2676104] _fn[2676106])
    (2197461 'move' tmp[2197456](2197458 '.v' chpl_moduleDeinitFuns[19840] value[2197422]))
    (1593241 'move' new_temp[1593239](1593110 call _new[1593175] moduleName[167732] deinitFun[167738] tmp[2197456] _ln[2676104] _fn[2676106]))
    val tmp[2647948]:__wide_chpl_ModuleDeinit[2581327] "temp"
    (2647951 'move' tmp[2647948] new_temp[1593239])
    (2664961 '_check_nil' chpl_moduleDeinitFuns[19840] _ln[2676104] _fn[2676106])
    (2564133 '.=' chpl_moduleDeinitFuns[19840] value[2197422] tmp[2647948])
    (522198 return _void[55])
  }
  function chpl_deinitModules[167759]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2576775]:string[26] "temp"
    (2576776 'move' "argument to ! is nil" "argument to ! is nil")
    val prev[167810]:__wide_chpl_ModuleDeinit[2581327] "dead at end of block" "insert auto destroy"
    val tmp[2197448]:__wide_chpl_ModuleDeinit[2581327] "temp"
    (2658821 '_check_nil' chpl_moduleDeinitFuns[19840] 2327 2)
    (2197453 'move' tmp[2197448](2197450 '.v' chpl_moduleDeinitFuns[19840] value[2197422]))
    (544692 'move' prev[167810] tmp[2197448])
    val tmp[167867]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[1591539]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1591544 'move' coerce_tmp[1591539](1591541 'cast' object[22] tmp[2197448] 194 39))
    val tmp[2626819]:__wide_object[2581313] "temp"
    (2626822 'move' tmp[2626819] nil[44])
    (167885 'move' tmp[167867](2229585 'ptr_neq' coerce_tmp[1591539] tmp[2626819]))
    WhileDo[167872] hazard
    {
      val coerce_tmp[2512023]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2512025 'move' coerce_tmp[2512023](2512027 'cast' object[22] prev[167810] 195 39))
      val tmp[2646160]:__wide_object[2581313] "temp"
      (2646163 'move' tmp[2646160] nil[44])
      if(2512034 'ptr_eq' coerce_tmp[2512023] tmp[2646160])
      {
        (2512040 call nilCheckHalt[210238] "argument to ! is nil" 195 39)
      }
      const curr[167818]:__wide_chpl_ModuleDeinit[2581327] "dead at end of block" "const" "insert auto destroy"
      (544694 'move' curr[167818] prev[167810])
      val coerce_tmp[1591869]:__wide_chpl_ModuleDeinit[2581327] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591874 'move' coerce_tmp[1591869] prev[167810])
      val tmp[2618780]:c_fn_ptr[152] "temp"
      (2664963 '_check_nil' coerce_tmp[1591869] 198 39)
      (1591881 'move' tmp[2618780](2564141 '.v' coerce_tmp[1591869] deinitFun[19746]))
      (167850 call chpl_execute_module_deinit[167792] tmp[2618780])
      val coerce_tmp[1591884]:__wide_chpl_ModuleDeinit[2581327] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591889 'move' coerce_tmp[1591884] prev[167810])
      val coerce_tmp[1591955]:__wide_chpl_ModuleDeinit[2581327] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2664965 '_check_nil' coerce_tmp[1591884] 199 39)
      (1591959 'move' coerce_tmp[1591955](2564147 '.v' coerce_tmp[1591884] prevModule[19753]))
      (2512052 '=' prev[167810] coerce_tmp[1591955])
      val coerce_tmp[2512064]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2512066 'move' coerce_tmp[2512064](2512068 'cast' object[22] curr[167818] 200 39))
      val tmp[2646166]:__wide_object[2581313] "temp"
      (2646169 'move' tmp[2646166] nil[44])
      if(2512075 'ptr_neq' coerce_tmp[2512064] tmp[2646166])
      {
        const-val call_tmp[2512087]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2512089 'move' call_tmp[2512087](2512091 '_wide_get_locale' curr[167818]))
        val isdirect[2512096]:bool[10] "temp"
        (2512098 'move' isdirect[2512096](2512101 call chpl_doDirectExecuteOn[187469] call_tmp[2512087]))
        if isdirect[2512096]
        {
          (2512106 call on_fn[1592221] curr[167818] 200 39)
        }
        {
          val _args_foron_fn[2512109]:_class_localson_fn[2209849] "temp"
          (2512111 'move' _args_foron_fn[2512109](2512113 'stack allocate class' _class_localson_fn[2209849]))
          (2664579 '_check_nil' _args_foron_fn[2512109] 200 39)
          (2512115 '.=' _args_foron_fn[2512109] _0_tmp[2209852] call_tmp[2512087])
          (2664581 '_check_nil' _args_foron_fn[2512109] 200 39)
          (2512119 '.=' _args_foron_fn[2512109] _1_arg[2209854] curr[167818])
          val _args_vforon_fn[2512123]:c_void_ptr[149] "temp"
          (2512125 'move' _args_vforon_fn[2512123](2512127 'cast_to_void_star' _args_foron_fn[2512109]))
          val _args_sizeon_fn[2512129]:int(64)[13] "temp"
          (2512131 'move' _args_sizeon_fn[2512129](2512133 'sizeof_bundle' _class_localson_fn[2209849]))
          (2653898 call chpl_taskRunningCntDec[93219] 200 39)
          (2705701 '.=' _args_foron_fn[2512109] _ln[2705682] 200)
          (2705704 '.=' _args_foron_fn[2512109] _fn[2705691] 39)
          on(2512136 call wrapon_fn[2209883] call_tmp[2512087] _args_vforon_fn[2512123] _args_sizeon_fn[2512129] _args_foron_fn[2512109])
          (2653900 call chpl_taskRunningCntInc[93198] 200 39)
        }
      }
      val coerce_tmp[1593021]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1593026 'move' coerce_tmp[1593021](1593023 'cast' object[22] coerce_tmp[1591955] 194 39))
      val tmp[2626825]:__wide_object[2581313] "temp"
      (2626828 'move' tmp[2626825] nil[44])
      (167878 'move' tmp[167867](2229595 'ptr_neq' coerce_tmp[1593021] tmp[2626825]))
      tmp[167867]
    }
    val tmp[2564149]:chpl_ModuleDeinit[19827] "temp"
    (2564151 'move' tmp[2564149](2512148 'cast' chpl_ModuleDeinit[19827] nil[44] 203 39))
    val tmp[2647954]:__wide_chpl_ModuleDeinit[2581327] "temp"
    (2647957 'move' tmp[2647954] tmp[2564149])
    (2664967 '_check_nil' chpl_moduleDeinitFuns[19840] 203 39)
    (2564155 '.=' chpl_moduleDeinitFuns[19840] value[2197422] tmp[2647954])
    (522206 return _void[55])
  }
  function chpl_execute_module_deinit[167792](const in arg deinitFun[167789]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522204 return _void[55])
  }
}