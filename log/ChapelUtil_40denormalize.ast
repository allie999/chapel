AST dump for ChapelUtil after pass denormalize.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416072](const in arg _ln[2298912]:int(64)[13], in arg _fn[2298914]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelUtil_p[2282396]
    {
      goto _exit_chpl__init_ChapelUtil[2282433] _exit_chpl__init_ChapelUtil[2282433]
    }
    ref refIndentLevel[2282419]:int(32)[95] "temp"
    (2282417 call printModuleInit[20426] c"%*s\n" c"ChapelUtil" 10 _ln[2298912] _fn[2298914])
    (2282423 'move' refIndentLevel[2282419](2282422 'addr of' moduleInitLevel[20416]))
    (2282426 '+=' refIndentLevel[2282419] 1)
    (2282402 'move' chpl__init_ChapelUtil_p[2282396] 1)
    (2282429 '-=' refIndentLevel[2282419] 1)
    label _exit_chpl__init_ChapelUtil[2282433]
    (522148 return _void[55])
  }
  function safeAdd[976700](const in arg a[976702]:int(64)[13], const in arg b[976707]:int(64)[13]) : bool[10] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    val ret[976709]:bool[10] "dead after last mention" "RVV" "temp"
    if(2036100 '<' a[976702] 0)
    {
      if(2132373 '>=' b[976707] 0)
      {
        (976784 'move' ret[976709] 1)
        gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
      }
      {
        if(2046106 '<' b[976707](2309858 'cast' int(64)[13](2132433 '-' -9223372036854775808 a[976702])))
        {
          (976829 'move' ret[976709] 0)
          gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
        }
        {
          (976836 'move' ret[976709] 1)
          gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
        }
      }
    }
    {
      if(2086048 '<=' b[976707] 0)
      {
        (976862 'move' ret[976709] 1)
        gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
      }
      {
        if(2042146 '>' b[976707](2309856 'cast' int(64)[13](2132463 '-' 9223372036854775807 a[976702])))
        {
          (976907 'move' ret[976709] 0)
          gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
        }
        {
          (976914 'move' ret[976709] 1)
          gotoReturn _end_safeAdd[976923] _end_safeAdd[976923]
        }
      }
    }
    label _end_safeAdd[976923]
    (976925 return ret[976709])
  }
  type chpl_main_argument[167374] val argc[167361]:int(64)[13] val return_value[167369]:int(32)[95]
  function chpl_rt_preUserCodeHook[167672]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522134 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167678]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522136 return _void[55])
  }
  function chpl_addModule[167693](const in arg moduleName[167690]:c_string[19], const in arg deinitFun[167696]:c_fn_ptr[152], const in arg _ln[2303052]:int(64)[13], in arg _fn[2303054]:int(32)[95]) : void[4] "resolved" "no return value for void"
  {
    val new_temp[1380544]:chpl_ModuleDeinit[19824] "dead after last mention" "temp"
    (1380546 'move' new_temp[1380544](1380415 call _new[1380480] moduleName[167690] deinitFun[167696] chpl_moduleDeinitFuns[19837] _ln[2303052] _fn[2303054]))
    (2228589 '=' chpl_moduleDeinitFuns[19837] new_temp[1380544])
    (522138 return _void[55])
  }
  function chpl_deinitModules[167717]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2277454]:string[26] "temp"
    (2277455 'move' "argument to ! is nil" "argument to ! is nil")
    val prev[167768]:chpl_ModuleDeinit[19824] "dead at end of block" "insert auto destroy"
    (544614 'move' prev[167768] chpl_moduleDeinitFuns[19837])
    val tmp[167825]:bool[10] "dead after last mention" "temp"
    (167843 'move' tmp[167825](2035648 'ptr_neq'(1378855 'cast' object[22] prev[167768] 194 39) nil[44]))
    WhileDo[167830] hazard
    {
      if(2228559 'ptr_eq'(2228552 'cast' object[22] prev[167768] 195 39) nil[44])
      {
        (2228565 call nilCheckHalt[210068] "argument to ! is nil" 195 39)
      }
      const curr[167776]:chpl_ModuleDeinit[19824] "dead at end of block" "const" "insert auto destroy"
      (544616 'move' curr[167776] prev[167768])
      val coerce_tmp[1379183]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379188 'move' coerce_tmp[1379183] prev[167768])
      (2288119 '_check_nil' coerce_tmp[1379183] 198 39)
      (167808 call chpl_execute_module_deinit[167750](2268860 '.v' coerce_tmp[1379183] deinitFun[19743]))
      val coerce_tmp[1379198]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379203 'move' coerce_tmp[1379198] prev[167768])
      val coerce_tmp[1379269]:chpl_ModuleDeinit[19824] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288121 '_check_nil' coerce_tmp[1379198] 199 39)
      (1379273 'move' coerce_tmp[1379269](2268866 '.v' coerce_tmp[1379198] prevModule[19750]))
      (2228577 '=' prev[167768] coerce_tmp[1379269])
      if(2228606 'ptr_neq'(2228599 'cast' object[22] curr[167776] 200 39) nil[44])
      {
        (2228618 call chpl_here_free[188093](2228615 '_wide_get_addr' curr[167776]) 200 39)
      }
      (167836 'move' tmp[167825](2035658 'ptr_neq'(1380328 'cast' object[22] coerce_tmp[1379269] 194 39) nil[44]))
      tmp[167825]
    }
    (2228630 '=' chpl_moduleDeinitFuns[19837](2228632 'cast' chpl_ModuleDeinit[19824] nil[44] 203 39))
    (522146 return _void[55])
  }
  function chpl_execute_module_deinit[167750](const in arg deinitFun[167747]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522144 return _void[55])
  }
}