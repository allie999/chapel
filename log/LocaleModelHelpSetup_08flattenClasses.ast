AST dump for LocaleModelHelpSetup after pass flattenClasses.
Module use list: ChapelLocale DefaultRectangular ChapelNumLocales ChapelEnv Sys SysCTypes 

{
  unknown debugLocaleModel[208159] "config" "param" 0
  (208162 'end of statement')
  unknown chpl_nodeID[208164] "extern" chpl_nodeID_t[89863]
  (208167 'end of statement')
  function chpl_root_locale_accum[208356].accum[208210](arg _mt[208360]:_MT[238], arg this[208358]:chpl_root_locale_accum[208356], arg loc[208207] :
  locale[28]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (208223 call(208213 call .(363009 call . this[208358] c"nPUsPhysAcc") c"add")(208219 call . loc[208207] c"nPUsPhysAcc"))
    (208237 call(208227 call .(363015 call . this[208358] c"nPUsPhysAll") c"add")(208233 call . loc[208207] c"nPUsPhysAll"))
    (208250 call(208240 call .(363021 call . this[208358] c"nPUsLogAcc") c"add")(208246 call . loc[208207] c"nPUsLogAcc"))
    (208263 call(208253 call .(363027 call . this[208358] c"nPUsLogAll") c"add")(208259 call . loc[208207] c"nPUsLogAll"))
    (208274 call(208266 call .(363033 call . this[208358] c"maxTaskPar") c"add")(208270 call . loc[208207] c"maxTaskPar"))
  }
  function chpl_root_locale_accum[208356].setRootLocaleValues[208285](arg _mt[208364]:_MT[238], arg this[208362]:chpl_root_locale_accum[208356], arg dst[208282] :
  RootLocale[89695]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (208297 call =(208288 call . dst[208282] c"nPUsPhysAcc")(208296 call(208292 call .(363040 call . this[208362] c"nPUsPhysAcc") c"read")))
    (208311 call =(208302 call . dst[208282] c"nPUsPhysAll")(208310 call(208306 call .(363046 call . this[208362] c"nPUsPhysAll") c"read")))
    (208324 call =(208315 call . dst[208282] c"nPUsLogAcc")(208323 call(208319 call .(363052 call . this[208362] c"nPUsLogAcc") c"read")))
    (208337 call =(208328 call . dst[208282] c"nPUsLogAll")(208336 call(208332 call .(363058 call . this[208362] c"nPUsLogAll") c"read")))
    (208350 call =(208341 call . dst[208282] c"maxTaskPar")(208349 call(208345 call .(363064 call . this[208362] c"maxTaskPar") c"read")))
  }
  type chpl_root_locale_accum[208356] unknown nPUsPhysAcc[208172](208170 call chpl__atomicType int(64)[13]) unknown nPUsPhysAll[208179](208177 call chpl__atomicType int(64)[13]) unknown nPUsLogAcc[208186](208184 call chpl__atomicType int(64)[13]) unknown nPUsLogAll[208193](208191 call chpl__atomicType int(64)[13]) unknown maxTaskPar[208200](208198 call chpl__atomicType int(64)[13])
  function helpSetupRootLocaleFlat[208374](arg dst[208371] :
  RootLocale[89695]) : _unknown[51] "no return value for void"
  {
    unknown root_accum[208377] chpl_root_locale_accum[208356]
    (208380 'end of statement')
    Forall {
      induction variables:
        
        unknown locIdx[208439] "index var" "insert auto destroy"
      iterated expressions:
        (208390 call(208386 call . dst[208371] c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208392] 'ref' intent outer var root_accum[208377]
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        const node[208412] "const"(208397 'new'(208411 call locale[28](208401 'new'(_chpl_manager = unmanaged[220](?))(208409 call LocaleModel[394077](?)(208403 'new'(208407 call locale[28] dst[208371]))))))
        (208415 'end of statement')
        (208425 call =(208423 call(208418 call . dst[208371] c"myLocales") locIdx[208439]) node[208412])
        (208436 call(208431 call . root_accum[208392] c"accum") node[208412])
      }
    }
    (208450 call(208445 call . root_accum[208377] c"setRootLocaleValues") dst[208371])
  }
  function helpSetupRootLocaleNUMA[208461](arg dst[208458] :
  RootLocale[89695]) : _unknown[51] "no return value for void"
  {
    unknown root_accum[208464] chpl_root_locale_accum[208356]
    (208467 'end of statement')
    Forall {
      induction variables:
        
        unknown locIdx[208527] "index var" "insert auto destroy"
      iterated expressions:
        (208475 call(208471 call . dst[208458] c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208477] 'ref' intent outer var root_accum[208464]
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208485 call chpl_task_setSubloc c_sublocid_any[89879])
        const node[208503] "const"(208488 'new'(208502 call locale[28](208492 'new'(_chpl_manager = unmanaged[220](?))(208500 call LocaleModel[394077](?)(208494 'new'(208498 call locale[28] dst[208458]))))))
        (208506 'end of statement')
        (208515 call =(208513 call(208508 call . dst[208458] c"myLocales") locIdx[208527]) node[208503])
        (208524 call(208519 call . root_accum[208477] c"accum") node[208503])
      }
    }
    (208536 call(208531 call . root_accum[208464] c"setRootLocaleValues") dst[208458])
  }
  function helpSetupRootLocaleAPU[208547](arg dst[208544] :
  RootLocale[89695]) : _unknown[51] "no return value for void"
  {
    unknown root_accum[208550] chpl_root_locale_accum[208356]
    (208553 'end of statement')
    Forall {
      induction variables:
        
        unknown locIdx[208613] "index var" "insert auto destroy"
      iterated expressions:
        (208561 call(208557 call . dst[208544] c"chpl_initOnLocales"))
      shadow variables:
        root_accum[208563] 'ref' intent outer var root_accum[208550]
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        (208571 call chpl_task_setSubloc c_sublocid_any[89879])
        const node[208589] "const"(208574 'new'(208588 call locale[28](208578 'new'(_chpl_manager = unmanaged[220](?))(208586 call LocaleModel[394077](?)(208580 'new'(208584 call locale[28] dst[208544]))))))
        (208592 'end of statement')
        (208601 call =(208599 call(208594 call . dst[208544] c"myLocales") locIdx[208613]) node[208589])
        (208610 call(208605 call . root_accum[208563] c"accum") node[208589])
      }
    }
    (208622 call(208617 call . root_accum[208550] c"setRootLocaleValues") dst[208544])
    (208630 call(208625 call .(363079 call here[90439]) c"runningTaskCntSet") 0)
  }
  function localSpawn[208636]() : _unknown[51] "inline" "private"
  {
    if(208741 call _cond_test(208656 call == CHPL_COMM[21238] "gasnet"))
    {
      unknown spawnfn[208659] c_string[19]
      (208662 'end of statement')
      if(208736 call _cond_test(208702 call &&(208694 call &&(208682 call == CHPL_COMM_SUBSTRATE[21263] "udp")(208692 call ==(208690 call sys_getenv c"GASNET_SPAWNFN" spawnfn[208659]) 1))(208700 call == spawnfn[208659] c"L")))
      {
        (208705 return 1)
      }
      {
        if(208732 call _cond_test(208726 call == CHPL_COMM_SUBSTRATE[21263] "smp"))
        {
          (208729 return 1)
        }
      }
    }
    (208747 return 0)
  }
  function getNodeName[208753]() : _unknown[51] "inline" "private"
  {
    function chpl_nodeName[208757]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      c_string[19]
    }
    unknown _node_name[208765] string[26]
    (208768 'end of statement')
    Try!
    {
      {
        (208776 call = _node_name[208765](208775 call createStringWithNewBuffer(208773 call chpl_nodeName)))
      }
    }
    const _node_id[208790] "const"(208788 call _cast string[26](208785 call _cast int(64)[13] chpl_nodeID[208164]))
    (208793 'end of statement')
    (208808 return(208805 IfExpr (208796 call localSpawn) then
    { scopeless
      (208802 call +(208799 call + _node_name[208765] "-") _node_id[208790])
    } else
    { scopeless
      _node_name[208765]
    } ))
  }
  function helpSetupLocaleFlat[208819](arg dst[208816] :
  LocaleModel[89196], out arg local_name[208822] :
  string[26]) : _unknown[51] "no return value for void"
  {
    (208829 call = local_name[208822](208828 call getNodeName))
    function chpl_task_getCallStackSize[208835]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      size_t[20654]
    }
    (208848 call =(208842 call . dst[208816] c"callStackSize")(208847 call chpl_task_getCallStackSize))
    function chpl_topo_getNumCPUsPhysical[208857](arg accessible_only[208854] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      c_int[20549]
    }
    (208871 call =(208864 call . dst[208816] c"nPUsPhysAcc")(208870 call chpl_topo_getNumCPUsPhysical 1))
    (208882 call =(208875 call . dst[208816] c"nPUsPhysAll")(208881 call chpl_topo_getNumCPUsPhysical 0))
    function chpl_topo_getNumCPUsLogical[208891](arg accessible_only[208888] :
    bool[10]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      c_int[20549]
    }
    (208905 call =(208898 call . dst[208816] c"nPUsLogAcc")(208904 call chpl_topo_getNumCPUsLogical 1))
    (208916 call =(208909 call . dst[208816] c"nPUsLogAll")(208915 call chpl_topo_getNumCPUsLogical 0))
    function chpl_task_getMaxPar[208921]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (208926 call uint(64)[115] 32)
    }
    (208937 call =(208931 call . dst[208816] c"maxTaskPar")(208936 call chpl_task_getMaxPar))
  }
  function helpSetupLocaleNUMA[208949](arg dst[208946] :
  LocaleModel[89196], out arg local_name[208952] :
  string[26], arg numSublocales[208955]:_any[178](?), arg NumaDomain[208957]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    (208963 call helpSetupLocaleFlat dst[208946] local_name[208952])
    function chpl_task_getMaxPar[208968]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (208973 call uint(64)[115] 32)
    }
    if(209195 call _cond_test(208979 call >= numSublocales[208955] 1))
    {
      const nPUsPhysAccPerSubloc[208988] "const"(208986 call /(208982 call . dst[208946] c"nPUsPhysAcc") numSublocales[208955])
      (208991 'end of statement')
      const nPUsPhysAllPerSubloc[209000] "const"(208998 call /(208994 call . dst[208946] c"nPUsPhysAll") numSublocales[208955])
      (209003 'end of statement')
      const nPUsLogAccPerSubloc[209011] "const"(209009 call /(209005 call . dst[208946] c"nPUsLogAcc") numSublocales[208955])
      (209014 'end of statement')
      const nPUsLogAllPerSubloc[209022] "const"(209020 call /(209016 call . dst[208946] c"nPUsLogAll") numSublocales[208955])
      (209025 'end of statement')
      const maxTaskParPerSubloc[209032] "const"(209030 call /(209028 call chpl_task_getMaxPar) numSublocales[208955])
      (209035 'end of statement')
      const origSubloc[209039] "const"(209038 call chpl_task_getRequestedSubloc)
      (209042 'end of statement')
      {
        unknown _indexOfInterest[209156] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[209157] "expr temp" "temp"
        (209166 'move' _iterator[209157](209164 call _getIterator(209047 call . dst[208946] c"childSpace")))
        Defer
        {
          {
            (209183 call _freeIterator _iterator[209157])
          }
        }
        { scopeless type
          (209172 'move' _indexOfInterest[209156](209169 call iteratorIndex _iterator[209157]))
        }
        ForLoop[209158]
        {
          unknown i[209176] "index var" "insert auto destroy"
          (209178 'move' i[209176] _indexOfInterest[209156])
          {
            (209056 call chpl_task_setSubloc(209053 call _cast chpl_sublocID_t[89870] i[209176]))
            (209083 call =(209067 call(209062 call . dst[208946] c"childLocales") i[209176])(209070 'new'(_chpl_manager = unmanaged[220](?))(209082 call NumaDomain[208957](209074 call _cast chpl_sublocID_t[89870] i[209176])(209077 'new'(209081 call locale[28] dst[208946])))))
            (209097 call =(209093 call .(209092 call(209087 call . dst[208946] c"childLocales") i[209176]) c"nPUsPhysAcc") nPUsPhysAccPerSubloc[208988])
            (209111 call =(209107 call .(209106 call(209101 call . dst[208946] c"childLocales") i[209176]) c"nPUsPhysAll") nPUsPhysAllPerSubloc[209000])
            (209125 call =(209121 call .(209120 call(209115 call . dst[208946] c"childLocales") i[209176]) c"nPUsLogAcc") nPUsLogAccPerSubloc[209011])
            (209139 call =(209135 call .(209134 call(209129 call . dst[208946] c"childLocales") i[209176]) c"nPUsLogAll") nPUsLogAllPerSubloc[209022])
            (209153 call =(209149 call .(209148 call(209143 call . dst[208946] c"childLocales") i[209176]) c"maxTaskPar") maxTaskParPerSubloc[209032])
          }
          label _continueLabel[209161]
          _indexOfInterest[209156]
          _iterator[209157]
        }
        label _breakLabel[209162]
      }
      (209193 call chpl_task_setSubloc origSubloc[209039])
    }
  }
  function helpSetupLocaleAPU[209208](arg dst[209205] :
  LocaleModel[89196], out arg local_name[209211] :
  string[26], out arg numSublocales[209214]:_any[178](?), arg CPULocale[209216]:_any[178](?), arg GPULocale[209218]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    (209224 call helpSetupLocaleFlat dst[209205] local_name[209211])
    function chpl_task_getMaxPar[209229]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (209234 call uint(64)[115] 32)
    }
    (209240 call = numSublocales[209214] 2)
    const origSubloc[209246] "const"(209245 call chpl_task_getRequestedSubloc)
    (209249 'end of statement')
    (209256 call chpl_task_setSubloc(209253 call _cast chpl_sublocID_t[89870] 0))
    (209275 call =(209261 call . dst[209205] c"CPU")(209266 'new'(_chpl_manager = unmanaged[220](?))(209274 call CPULocale[209216](209270 call _cast chpl_sublocID_t[89870] 0) dst[209205])))
    (209284 call chpl_task_setSubloc(209281 call _cast chpl_sublocID_t[89870] 1))
    (209289 call chpl_task_setSubloc origSubloc[209246])
  }
  (355320 'used modules list'(208140 'use' ChapelLocale[89848])(208144 'use' DefaultRectangular[93287])(208147 'use' ChapelNumLocales[209830])(208150 'use' ChapelEnv[20943])(208153 'use' Sys[292072])(208156 'use' SysCTypes[20940]))
}