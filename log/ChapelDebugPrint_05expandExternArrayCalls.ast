AST dump for ChapelDebugPrint after pass expandExternArrayCalls.
Module use list: 

{
  { scopeless
    (188112 'use' ChapelStandard)
    (188114 'use' SysCTypes)
  }
  (188117 'use' IO)
  function chpl_debug_stringify[188125](arg args[188122]:_any[178](?) ...) : _unknown[51]
  {
    { scopeless
      unknown str[188145] ""
      (188148 'end of statement')
    }
    {
      unknown i[188192] 0
      unknown tmp[188193] "maybe param" "temp"
      (188205 'move' tmp[188193](188203 call chpl_compute_low_param_loop_bound 0(188156 call -(188152 call . args c"size") 1)))
      unknown tmp[188194] "maybe param" "temp"
      (188218 'move' tmp[188194](188216 call chpl_compute_high_param_loop_bound 0(188210 call -(188212 call . args c"size") 1)))
      unknown tmp[188195] "maybe param" "temp"
      (188221 'move' tmp[188195] 1)
      ParamForLoop[188223]
      { i[188192] tmp[188193] tmp[188194] tmp[188195]
        {
          { scopeless
            unknown tmp[188164](188163 call args i)
            (188167 'end of statement')
          }
          if(188188 call _cond_test(188172 call _can_stringify_direct tmp))
          {
            (188178 call += str(188177 call stringify tmp))
          }
          {
            (188184 call += str "\?")
          }
        }
      }
      label _unused_continueLabel[188197]
      label _breakLabel[188196]
    }
    (188233 return str)
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188244](arg args[188241]:_any[178](?) ...) : _unknown[51]
  {
    function printf[188252](arg fmt[188249] :
    c_string, arg f[188255] :
    c_string) : void[4] "extern" "local args" "no fn body"
    {
    }
    { scopeless
      unknown str[188266](188265 call chpl_debug_stringify(188263 'expand_tuple' args))
      (188269 'end of statement')
    }
    (188295 call printf "%s\n"(188294 call(188290 call . str c"c_str")))
  }
  { scopeless
    unknown chpl__testParFlag[188300] "config" "no doc" "param" 0
    (188303 'end of statement')
  }
  { scopeless
    unknown chpl__testParOn[188305] "no doc" 0
    (188308 'end of statement')
  }
  function chpl__testParStart[188311]() : _unknown[51] "no doc"
  {
    (188315 call = chpl__testParOn 1)
  }
  function chpl__testParStop[188323]() : _unknown[51] "no doc"
  {
    (188327 call = chpl__testParOn 0)
  }
  function chpl__testPar[188339](arg args[188336]:_any[178](?) ...) : _unknown[51] "no doc"
  {
    if(188444 call _cond_test(188343 call && chpl__testParFlag chpl__testParOn))
    {
      { scopeless
        const file_cs[188352] "const"(188351 'chpl_lookupFilename'(188350 '_get_user_file')) c_string
        (188355 'end of statement')
      }
      { scopeless
        unknown file[188358] string[26]
        (188361 'end of statement')
      }
      Try!
      {
        {
          (188367 call = file(188366 call createStringWithNewBuffer file_cs))
        }
      }
      { scopeless
        const line[188377] "const"(188376 '_get_user_line')
        (188380 'end of statement')
      }
      { scopeless
        unknown str[188386](188385 call chpl_debug_stringify(188383 'expand_tuple' args))
        (188389 'end of statement')
      }
      function printf[188396](arg fmt[188393] :
      c_string, arg f[188399] :
      c_string, arg ln[188403] :
      c_int, arg s[188407] :
      c_string) : void[4] "extern" "local args" "no fn body"
      {
      }
      (188442 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs(188434 call _cast c_int line)(188441 call(188437 call . str c"c_str")))
    }
  }
  function chpl__testParWriteln[188457](arg args[188454]:_any[178](?) ...) : _unknown[51] "no doc"
  {
    if(188542 call _cond_test(188461 call && chpl__testParFlag chpl__testParOn))
    {
      { scopeless
        const file_cs[188470] "const"(188469 'chpl_lookupFilename'(188468 '_get_user_file')) c_string
        (188473 'end of statement')
      }
      { scopeless
        unknown file[188476] string[26]
        (188479 'end of statement')
      }
      Try!
      {
        {
          (188485 call = file(188484 call createStringWithNewBuffer file_cs))
        }
      }
      { scopeless
        const line[188495] "const"(188494 '_get_user_line')
        (188498 'end of statement')
      }
      (188540 call writeln "CHPL TEST PAR (" file ":" line "): "(188539 'expand_tuple' args))
    }
  }
}