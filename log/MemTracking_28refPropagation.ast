AST dump for MemTracking after pass refPropagation.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_MemTracking[416069]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val call_tmp[678491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678494 'move' call_tmp[678491](544331 call chpl_config_has_value[334] c"memTrack" c"Built-in"))
    const-val call_tmp[678496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034915 'move' call_tmp[2034913](2034917 '!' call_tmp[678491]))
    (678499 'move' call_tmp[678496] call_tmp[2034913])
    if call_tmp[678496]
    {
      (544350 'move' tmp[544322] 0)
    }
    {
      const-val call_tmp[678506]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678509 'move' call_tmp[678506](544341 call chpl_config_get_value[350] c"memTrack" c"Built-in"))
      (544346 'move' tmp[544322](544344 call _command_line_cast[1349516] call_tmp[678506]))
    }
    (544324 'move' memTrack[166615] tmp[544322])
    const-val call_tmp[678511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678514 'move' call_tmp[678511](544361 call chpl_config_has_value[334] c"memStats" c"Built-in"))
    const-val call_tmp[678516]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034924 'move' call_tmp[2034922](2034926 '!' call_tmp[678511]))
    (678519 'move' call_tmp[678516] call_tmp[2034922])
    if call_tmp[678516]
    {
      (544380 'move' tmp[544352] 0)
    }
    {
      const-val call_tmp[678526]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678529 'move' call_tmp[678526](544371 call chpl_config_get_value[350] c"memStats" c"Built-in"))
      (544376 'move' tmp[544352](544374 call _command_line_cast[1349559] call_tmp[678526]))
    }
    (544354 'move' memStats[166620] tmp[544352])
    const-val call_tmp[678531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678534 'move' call_tmp[678531](544391 call chpl_config_has_value[334] c"memLeaksByType" c"Built-in"))
    const-val call_tmp[678536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034933 'move' call_tmp[2034931](2034935 '!' call_tmp[678531]))
    (678539 'move' call_tmp[678536] call_tmp[2034931])
    if call_tmp[678536]
    {
      (544410 'move' tmp[544382] 0)
    }
    {
      const-val call_tmp[678546]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678549 'move' call_tmp[678546](544401 call chpl_config_get_value[350] c"memLeaksByType" c"Built-in"))
      (544406 'move' tmp[544382](544404 call _command_line_cast[1349602] call_tmp[678546]))
    }
    (544384 'move' memLeaksByType[166625] tmp[544382])
    const-val call_tmp[678551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678554 'move' call_tmp[678551](544421 call chpl_config_has_value[334] c"memLeaks" c"Built-in"))
    const-val call_tmp[678556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034942 'move' call_tmp[2034940](2034944 '!' call_tmp[678551]))
    (678559 'move' call_tmp[678556] call_tmp[2034940])
    if call_tmp[678556]
    {
      (544440 'move' tmp[544412] 0)
    }
    {
      const-val call_tmp[678566]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678569 'move' call_tmp[678566](544431 call chpl_config_get_value[350] c"memLeaks" c"Built-in"))
      (544436 'move' tmp[544412](544434 call _command_line_cast[1349645] call_tmp[678566]))
    }
    (544414 'move' memLeaks[166630] tmp[544412])
    const-val call_tmp[678571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678574 'move' call_tmp[678571](544451 call chpl_config_has_value[334] c"memMax" c"Built-in"))
    const-val call_tmp[678576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034951 'move' call_tmp[2034949](2034953 '!' call_tmp[678571]))
    (678579 'move' call_tmp[678576] call_tmp[2034949])
    if call_tmp[678576]
    {
      const-val init_coerce_tmp[1349687]:uint(64)[115] "dead at end of block" "temp"
      (1349690 'move' init_coerce_tmp[1349687](1352466 'cast' uint(64)[115] 0))
      (544470 'move' tmp[544442] init_coerce_tmp[1349687])
    }
    {
      const-val call_tmp[678586]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678589 'move' call_tmp[678586](544461 call chpl_config_get_value[350] c"memMax" c"Built-in"))
      (544466 'move' tmp[544442](544464 call _command_line_cast[1349696] call_tmp[678586]))
    }
    (544444 'move' memMax[166635] tmp[544442])
    const-val call_tmp[678591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678594 'move' call_tmp[678591](544481 call chpl_config_has_value[334] c"memThreshold" c"Built-in"))
    const-val call_tmp[678596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034960 'move' call_tmp[2034958](2034962 '!' call_tmp[678591]))
    (678599 'move' call_tmp[678596] call_tmp[2034958])
    if call_tmp[678596]
    {
      const-val init_coerce_tmp[1352021]:uint(64)[115] "dead at end of block" "temp"
      (1352024 'move' init_coerce_tmp[1352021](1352470 'cast' uint(64)[115] 0))
      (544500 'move' tmp[544472] init_coerce_tmp[1352021])
    }
    {
      const-val call_tmp[678606]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678609 'move' call_tmp[678606](544491 call chpl_config_get_value[350] c"memThreshold" c"Built-in"))
      (544496 'move' tmp[544472](544494 call _command_line_cast[1352030] call_tmp[678606]))
    }
    (544474 'move' memThreshold[166640] tmp[544472])
    const-val call_tmp[678611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678614 'move' call_tmp[678611](544511 call chpl_config_has_value[334] c"memLog" c"Built-in"))
    const-val call_tmp[678616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034969 'move' call_tmp[2034967](2034971 '!' call_tmp[678611]))
    (678619 'move' call_tmp[678616] call_tmp[2034967])
    if call_tmp[678616]
    {
      (1352474 call init[30760] tmp[544502])
    }
    {
      const-val call_tmp[678626]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678629 'move' call_tmp[678626](544521 call chpl_config_get_value[350] c"memLog" c"Built-in"))
      const-val ret_tmp[1790353]:string[26] "temp"
      (544524 call _command_line_cast[1352074] call_tmp[678626] ret_tmp[1790353])
      (1790356 'move' tmp[544502] ret_tmp[1790353])
    }
    (544504 'move' memLog[166644] tmp[544502])
    const-val call_tmp[678631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678634 'move' call_tmp[678631](544541 call chpl_config_has_value[334] c"memLeaksLog" c"Built-in"))
    const-val call_tmp[678636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034978 'move' call_tmp[2034976](2034980 '!' call_tmp[678631]))
    (678639 'move' call_tmp[678636] call_tmp[2034976])
    if call_tmp[678636]
    {
      (1352479 call init[30760] tmp[544532])
    }
    {
      const-val call_tmp[678646]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678649 'move' call_tmp[678646](544551 call chpl_config_get_value[350] c"memLeaksLog" c"Built-in"))
      const-val ret_tmp[1790389]:string[26] "temp"
      (544554 call _command_line_cast[1352380] call_tmp[678646] ret_tmp[1790389])
      (1790392 'move' tmp[544532] ret_tmp[1790389])
    }
    (544534 'move' memLeaksLog[166649] tmp[544532])
    const-val call_tmp[678651]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678654 'move' call_tmp[678651](544571 call chpl_config_has_value[334] c"memLeaksByDesc" c"Built-in"))
    const-val call_tmp[678656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034987 'move' call_tmp[2034985](2034989 '!' call_tmp[678651]))
    (678659 'move' call_tmp[678656] call_tmp[2034985])
    if call_tmp[678656]
    {
      (1352484 call init[30760] tmp[544562])
    }
    {
      const-val call_tmp[678666]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678669 'move' call_tmp[678666](544581 call chpl_config_get_value[350] c"memLeaksByDesc" c"Built-in"))
      const-val ret_tmp[1790401]:string[26] "temp"
      (544584 call _command_line_cast[1352424] call_tmp[678666] ret_tmp[1790401])
      (1790404 'move' tmp[544562] ret_tmp[1790401])
    }
    (544564 'move' memLeaksByDesc[166654] tmp[544562])
    (678676 'move' call_tmp[678673] memMax[166635])
    (544592 'move' cMemMax[166665] call_tmp[678673])
    (678683 'move' call_tmp[678680] memThreshold[166640])
    (544594 'move' cMemThreshold[166675] call_tmp[678680])
    (521982 return _void[55])
  }
  const-val memTrack[166615]:bool[10] "config" "const" "insert auto destroy"
  const-val memStats[166620]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaksByType[166625]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaks[166630]:bool[10] "config" "const" "insert auto destroy"
  const-val memMax[166635]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memThreshold[166640]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memLog[166644]:string[26] "config" "const" "insert auto destroy"
  const-val memLeaksLog[166649]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val memLeaksByDesc[166654]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val cMemMax[166665]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[166675]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[166685](ref arg ret_memTrack[166682]:bool[10], ref arg ret_memStats[166688]:bool[10], ref arg ret_memLeaksByType[166692]:bool[10], ref arg ret_memLeaksByDesc[166696]:c_string[19], ref arg ret_memLeaks[166700]:bool[10], ref arg ret_memMax[166704]:uint(64)[115], ref arg ret_memThreshold[166708]:uint(64)[115], ref arg ret_memLog[166712]:c_string[19], ref arg ret_memLeaksLog[166716]:c_string[19]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    (2054528 '=' ret_memTrack[166682] memTrack[166615])
    (2054534 '=' ret_memStats[166688] memStats[166620])
    (2054540 '=' ret_memLeaksByType[166692] memLeaksByType[166625])
    (2054546 '=' ret_memLeaks[166700] memLeaks[166630])
    (2125506 '=' ret_memMax[166704] cMemMax[166665])
    (2125512 '=' ret_memThreshold[166708] cMemThreshold[166675])
    const-val call_tmp[678685]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1783016]:locale[28] "temp"
    const-val call_tmp[2083635]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2083637]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2083639 'move' call_tmp[2083637](2083642 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2083645 'move' call_tmp[2083635] call_tmp[2083637])
    const-val call_tmp[2083648]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2083650]:locale[28] "temp"
    (2083653 call chpl_localeID_to_locale[92857] call_tmp[2083635] ret_tmp[2083650])
    (2083656 'move' call_tmp[2083648] ret_tmp[2083650])
    (2083659 '=' ret_tmp[1783016] call_tmp[2083648])
    (1783019 'move' call_tmp[678685] ret_tmp[1783016])
    const-val call_tmp[678692]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2084895]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2084897 'move' coerce_tmp[2084895](2084899 '.v' call_tmp[678685] _instance[89979]))
    val coerce_tmp[2084902]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2084904 'move' coerce_tmp[2084902](2084906 'cast' object[22] coerce_tmp[2084895]))
    const-val call_tmp[2084909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084911 'move' call_tmp[2084909](2084913 'ptr_eq' coerce_tmp[2084902] nil[44]))
    if call_tmp[2084909]
    {
      (2084919 call nilCheckHalt[210068] "argument to ! is nil")
    }
    const-val call_tmp[2084922]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084924 'move' call_tmp[2084922](2084927 call id[90758] coerce_tmp[2084895]))
    (678695 'move' call_tmp[678692] call_tmp[2084922])
    const-val call_tmp[678697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2035828]:int(64)[13] "temp"
    (2035831 'move' inlineImm[2035828] 0)
    const-val call_tmp[2035834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2035836 'move' call_tmp[2035834](2035838 '!=' call_tmp[678692] inlineImm[2035828]))
    (678700 'move' call_tmp[678697] call_tmp[2035834])
    const-val call_tmp[678702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678705 'move' call_tmp[678702] call_tmp[678697])
    if call_tmp[678702]
    {
      const-val call_tmp[678709]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2065225]:string[26] "temp"
      (2065229 'move' i_this[2065225](2065227 'set reference' memLeaksByDesc[166654]))
      const-val n[2065232]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2065234]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065236 'move' coerce_tmp[2065234](2065238 '.v' memLeaksByDesc[166654] cachedNumCodepoints[30731]))
      (2065241 '=' n[2065232] coerce_tmp[2065234])
      (2065244 'noop')
      const-val call_tmp[2065245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065247 'move' call_tmp[2065245](2065250 call countNumCodepoints[181346] i_this[2065225]))
      const-val call_tmp[2065252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065254 'move' call_tmp[2065252](2065256 '!=' coerce_tmp[2065234] call_tmp[2065245]))
      if call_tmp[2065252]
      {
        (2065262 call halt[154071] "Encountered corrupt string metadata")
      }
      (678712 'move' call_tmp[678709] n[2065232])
      const-val call_tmp[678714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2035843]:int(64)[13] "temp"
      (2035846 'move' inlineImm[2035843] 0)
      const-val call_tmp[2035849]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2035851 'move' call_tmp[2035849](2035853 '!=' call_tmp[678709] inlineImm[2035843]))
      (678717 'move' call_tmp[678714] call_tmp[2035849])
      const-val call_tmp[678719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678722 'move' call_tmp[678719] call_tmp[678714])
      if call_tmp[678719]
      {
        val local_memLeaksByDesc[166765]:string[26] "dead at end of block" "insert auto destroy"
        (544596 call init=[30771] local_memLeaksByDesc[166765] memLeaksByDesc[166654])
        val inlineImm[2054551]:bool[10] "temp"
        (2054554 'move' inlineImm[2054551] 0)
        (2268829 '.=' local_memLeaksByDesc[166765] isOwned[30743] inlineImm[2054551])
        const-val call_tmp[678733]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2068280]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2068282 'move' coerce_tmp[2068280](2068284 '.v' local_memLeaksByDesc[166765] buff[30737]))
        const-val call_tmp[2068287]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2068289 'move' call_tmp[2068287](2068291 'cast' c_string[19] coerce_tmp[2068280]))
        (678736 'move' call_tmp[678733] call_tmp[2068287])
        (2037804 '=' ret_memLeaksByDesc[166696] call_tmp[678733])
        ref i_x[2049196]:string[26] "temp"
        (2049200 'move' i_x[2049196](2049198 'set reference' local_memLeaksByDesc[166765]))
        (2049204 call deinit[30831] i_x[2049196])
      }
      {
        const-val call_tmp[2037932]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037934 'move' call_tmp[2037932](2037936 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2037939]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037941 'move' call_tmp[2037939](2037943 'cast' c_string[19] call_tmp[2037932]))
        (2037946 '=' ret_memLeaksByDesc[166696] call_tmp[2037939])
      }
      const-val call_tmp[678740]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2065267]:string[26] "temp"
      (2065271 'move' i_this[2065267](2065269 'set reference' memLog[166644]))
      const-val n[2065274]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2065276]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065278 'move' coerce_tmp[2065276](2065280 '.v' memLog[166644] cachedNumCodepoints[30731]))
      (2065283 '=' n[2065274] coerce_tmp[2065276])
      (2065286 'noop')
      const-val call_tmp[2065287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065289 'move' call_tmp[2065287](2065292 call countNumCodepoints[181346] i_this[2065267]))
      const-val call_tmp[2065294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065296 'move' call_tmp[2065294](2065298 '!=' coerce_tmp[2065276] call_tmp[2065287]))
      if call_tmp[2065294]
      {
        (2065304 call halt[154071] "Encountered corrupt string metadata")
      }
      (678743 'move' call_tmp[678740] n[2065274])
      const-val call_tmp[678745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2035858]:int(64)[13] "temp"
      (2035861 'move' inlineImm[2035858] 0)
      const-val call_tmp[2035864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2035866 'move' call_tmp[2035864](2035868 '!=' call_tmp[678740] inlineImm[2035858]))
      (678748 'move' call_tmp[678745] call_tmp[2035864])
      const-val call_tmp[678750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678753 'move' call_tmp[678750] call_tmp[678745])
      if call_tmp[678750]
      {
        val local_memLog[166807]:string[26] "dead at end of block" "insert auto destroy"
        (544598 call init=[30771] local_memLog[166807] memLog[166644])
        val inlineImm[2054562]:bool[10] "temp"
        (2054565 'move' inlineImm[2054562] 0)
        (2268838 '.=' local_memLog[166807] isOwned[30743] inlineImm[2054562])
        const-val call_tmp[678764]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2068303]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2068305 'move' coerce_tmp[2068303](2068307 '.v' local_memLog[166807] buff[30737]))
        const-val call_tmp[2068310]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2068312 'move' call_tmp[2068310](2068314 'cast' c_string[19] coerce_tmp[2068303]))
        (678767 'move' call_tmp[678764] call_tmp[2068310])
        (2037816 '=' ret_memLog[166712] call_tmp[678764])
        ref i_x[2049208]:string[26] "temp"
        (2049212 'move' i_x[2049208](2049210 'set reference' local_memLog[166807]))
        (2049216 call deinit[30831] i_x[2049208])
      }
      {
        const-val call_tmp[2037952]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037954 'move' call_tmp[2037952](2037956 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2037959]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037961 'move' call_tmp[2037959](2037963 'cast' c_string[19] call_tmp[2037952]))
        (2037966 '=' ret_memLog[166712] call_tmp[2037959])
      }
      const-val call_tmp[678771]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2065309]:string[26] "temp"
      (2065313 'move' i_this[2065309](2065311 'set reference' memLeaksLog[166649]))
      const-val n[2065316]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2065318]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065320 'move' coerce_tmp[2065318](2065322 '.v' memLeaksLog[166649] cachedNumCodepoints[30731]))
      (2065325 '=' n[2065316] coerce_tmp[2065318])
      (2065328 'noop')
      const-val call_tmp[2065329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065331 'move' call_tmp[2065329](2065334 call countNumCodepoints[181346] i_this[2065309]))
      const-val call_tmp[2065336]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065338 'move' call_tmp[2065336](2065340 '!=' coerce_tmp[2065318] call_tmp[2065329]))
      if call_tmp[2065336]
      {
        (2065346 call halt[154071] "Encountered corrupt string metadata")
      }
      (678774 'move' call_tmp[678771] n[2065316])
      const-val call_tmp[678776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2035873]:int(64)[13] "temp"
      (2035876 'move' inlineImm[2035873] 0)
      const-val call_tmp[2035879]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2035881 'move' call_tmp[2035879](2035883 '!=' call_tmp[678771] inlineImm[2035873]))
      (678779 'move' call_tmp[678776] call_tmp[2035879])
      const-val call_tmp[678781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (678784 'move' call_tmp[678781] call_tmp[678776])
      if call_tmp[678781]
      {
        val local_memLeaksLog[166848]:string[26] "dead at end of block" "insert auto destroy"
        (544600 call init=[30771] local_memLeaksLog[166848] memLeaksLog[166649])
        val inlineImm[2054573]:bool[10] "temp"
        (2054576 'move' inlineImm[2054573] 0)
        (2268847 '.=' local_memLeaksLog[166848] isOwned[30743] inlineImm[2054573])
        const-val call_tmp[678795]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2068326]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2068328 'move' coerce_tmp[2068326](2068330 '.v' local_memLeaksLog[166848] buff[30737]))
        const-val call_tmp[2068333]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2068335 'move' call_tmp[2068333](2068337 'cast' c_string[19] coerce_tmp[2068326]))
        (678798 'move' call_tmp[678795] call_tmp[2068333])
        (2037822 '=' ret_memLeaksLog[166716] call_tmp[678795])
        ref i_x[2049220]:string[26] "temp"
        (2049224 'move' i_x[2049220](2049222 'set reference' local_memLeaksLog[166848]))
        (2049228 call deinit[30831] i_x[2049220])
      }
      {
        const-val call_tmp[2037972]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037974 'move' call_tmp[2037972](2037976 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2037979]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2037981 'move' call_tmp[2037979](2037983 'cast' c_string[19] call_tmp[2037972]))
        (2037986 '=' ret_memLeaksLog[166716] call_tmp[2037979])
      }
    }
    {
      const-val call_tmp[678802]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2068349]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2068351 'move' coerce_tmp[2068349](2068353 '.v' memLeaksByDesc[166654] buff[30737]))
      const-val call_tmp[2068356]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2068358 'move' call_tmp[2068356](2068360 'cast' c_string[19] coerce_tmp[2068349]))
      (678805 'move' call_tmp[678802] call_tmp[2068356])
      (2037828 '=' ret_memLeaksByDesc[166696] call_tmp[678802])
      const-val call_tmp[678809]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2068372]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2068374 'move' coerce_tmp[2068372](2068376 '.v' memLog[166644] buff[30737]))
      const-val call_tmp[2068379]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2068381 'move' call_tmp[2068379](2068383 'cast' c_string[19] coerce_tmp[2068372]))
      (678812 'move' call_tmp[678809] call_tmp[2068379])
      (2037834 '=' ret_memLog[166712] call_tmp[678809])
      const-val call_tmp[678816]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2068395]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2068397 'move' coerce_tmp[2068395](2068399 '.v' memLeaksLog[166649] buff[30737]))
      const-val call_tmp[2068402]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2068404 'move' call_tmp[2068402](2068406 'cast' c_string[19] coerce_tmp[2068395]))
      (678819 'move' call_tmp[678816] call_tmp[2068402])
      (2037840 '=' ret_memLeaksLog[166716] call_tmp[678816])
    }
    ref i_x[2177944]:locale[28] "temp"
    (2177948 'move' i_x[2177944](2177946 'set reference' call_tmp[678685]))
    (2177952 call deinit[90189] i_x[2177944])
    (521980 return _void[55])
  }
  val tmp[544322]:bool[10] "dead at end of block" "temp"
  val tmp[544352]:bool[10] "dead at end of block" "temp"
  val tmp[544382]:bool[10] "dead at end of block" "temp"
  val tmp[544412]:bool[10] "dead at end of block" "temp"
  val tmp[544442]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544472]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544502]:string[26] "dead at end of block" "temp"
  val tmp[544532]:string[26] "dead at end of block" "temp"
  val tmp[544562]:string[26] "dead at end of block" "temp"
  const-val call_tmp[678673]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[678680]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_MemTracking[1803859]() : void[4] "resolved"
  {
    label _endchpl__deinit_MemTracking[1803865]
    ref i_x[2052580]:string[26] "temp"
    (2052584 'move' i_x[2052580](2052582 'set reference' memLog[166644]))
    (2052588 call deinit[30831] i_x[2052580])
    (1803862 return _void[55])
  }
}