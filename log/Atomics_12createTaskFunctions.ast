AST dump for Atomics after pass createTaskFunctions.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[415841]() : void[4] "insert line file info" "module init"
  {
    (506160 return _void[55])
  }
  function chpl_atomic_thread_fence[43975](arg order[43972]:memory_order[186607]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505467 return _void[55])
  }
  function atomic_fence[43987](arg order[43983]:memory_order[186607] =
  memory_order_seq_cst[186951]) : _unknown[51] "no doc" "no return value for void"
  {
    (43992 call chpl_atomic_thread_fence order[43983])
    (474147 'end of statement')
    unknown call_tmp[605850] "expr temp" "maybe param" "maybe type" "temp"
    (605853 'move' call_tmp[605850](44001 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[605850]
    {
      (43999 call chpl_rmem_consist_fence order[43983])
    }
    (505469 return _void[55])
  }
  function atomicFence[44021](param arg order[44017]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[605855] "expr temp" "maybe param" "maybe type" "temp"
    (605858 'move' call_tmp[605855](44027 call c_memory_order order[44017]))
    (44029 call atomic_fence call_tmp[605855])
    (505471 return _void[55])
  }
  function isSupported[44038](arg T[44036]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505475] "RVV" "param" "temp"
    unknown tmp[418306] "maybe param" "temp"
    unknown tmp[418327] "maybe param" "temp"
    unknown tmp[418348] "maybe param" "temp"
    (418359 'move' tmp[418348](44042 call == T[44036] bool[10]))
    unknown call_tmp[605860] "expr temp" "maybe param" "maybe type" "temp"
    (605863 'move' call_tmp[605860](418361 call _cond_invalid tmp[418348]))
    if call_tmp[605860]
    {
      (418364 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554208] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554209] "maybe param" "temp"
    unknown call_tmp[605865] "expr temp" "maybe param" "maybe type" "temp"
    (605868 'move' call_tmp[605865](418349 call isTrue tmp[418348]))
    (554214 'move' tmp[554209](554212 call _cond_test call_tmp[605865]))
    if tmp[554209]
    {
      (554219 'move' tmp[554208](554216 '_paramFoldLogical' tmp[554209] 1))
    }
    {
      unknown tmp[554221] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605870] "expr temp" "maybe param" "maybe type" "temp"
      (605873 'move' call_tmp[605870](44047 call isInt T[44036]))
      (554223 'move' tmp[554221](418353 call isTrue call_tmp[605870]))
      (554228 'move' tmp[554208](554225 '_paramFoldLogical' tmp[554209] tmp[554221]))
    }
    (418338 'move' tmp[418327] tmp[554208])
    unknown call_tmp[605875] "expr temp" "maybe param" "maybe type" "temp"
    (605878 'move' call_tmp[605875](418340 call _cond_invalid tmp[418327]))
    if call_tmp[605875]
    {
      (418343 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554235] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554236] "maybe param" "temp"
    unknown call_tmp[605880] "expr temp" "maybe param" "maybe type" "temp"
    (605883 'move' call_tmp[605880](418328 call isTrue tmp[418327]))
    (554241 'move' tmp[554236](554239 call _cond_test call_tmp[605880]))
    if tmp[554236]
    {
      (554246 'move' tmp[554235](554243 '_paramFoldLogical' tmp[554236] 1))
    }
    {
      unknown tmp[554248] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605885] "expr temp" "maybe param" "maybe type" "temp"
      (605888 'move' call_tmp[605885](44053 call isUint T[44036]))
      (554250 'move' tmp[554248](418332 call isTrue call_tmp[605885]))
      (554255 'move' tmp[554235](554252 '_paramFoldLogical' tmp[554236] tmp[554248]))
    }
    (418317 'move' tmp[418306] tmp[554235])
    unknown call_tmp[605890] "expr temp" "maybe param" "maybe type" "temp"
    (605893 'move' call_tmp[605890](418319 call _cond_invalid tmp[418306]))
    if call_tmp[605890]
    {
      (418322 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554262] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554263] "maybe param" "temp"
    unknown call_tmp[605895] "expr temp" "maybe param" "maybe type" "temp"
    (605898 'move' call_tmp[605895](418307 call isTrue tmp[418306]))
    (554268 'move' tmp[554263](554266 call _cond_test call_tmp[605895]))
    if tmp[554263]
    {
      (554273 'move' tmp[554262](554270 '_paramFoldLogical' tmp[554263] 1))
    }
    {
      unknown tmp[554275] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605900] "expr temp" "maybe param" "maybe type" "temp"
      (605903 'move' call_tmp[605900](44059 call isReal T[44036]))
      (554277 'move' tmp[554275](418311 call isTrue call_tmp[605900]))
      (554282 'move' tmp[554262](554279 '_paramFoldLogical' tmp[554263] tmp[554275]))
    }
    (505480 'move' ret[505475](505479 'deref' tmp[554262]))
    (505477 return ret[505475])
  }
  function externT[44071](arg T[44069]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505484] "RVV" "temp" "type variable"
    function =[760925](ref arg _arg1[760927]:atomic_bool[44077], arg _arg2[760928]:atomic_bool[44077]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760931 '=' _arg1[760927] _arg2[760928])
      (760936 return _void[55])
    }
    type atomic_bool[44077]
    function =[760938](ref arg _arg1[760940]:atomic_int_least8_t[44084], arg _arg2[760941]:atomic_int_least8_t[44084]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760944 '=' _arg1[760940] _arg2[760941])
      (760949 return _void[55])
    }
    type atomic_int_least8_t[44084]
    function =[760951](ref arg _arg1[760953]:atomic_int_least16_t[44090], arg _arg2[760954]:atomic_int_least16_t[44090]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760957 '=' _arg1[760953] _arg2[760954])
      (760962 return _void[55])
    }
    type atomic_int_least16_t[44090]
    function =[760964](ref arg _arg1[760966]:atomic_int_least32_t[44096], arg _arg2[760967]:atomic_int_least32_t[44096]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760970 '=' _arg1[760966] _arg2[760967])
      (760975 return _void[55])
    }
    type atomic_int_least32_t[44096]
    function =[760977](ref arg _arg1[760979]:atomic_int_least64_t[44102], arg _arg2[760980]:atomic_int_least64_t[44102]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760983 '=' _arg1[760979] _arg2[760980])
      (760988 return _void[55])
    }
    type atomic_int_least64_t[44102]
    function =[760990](ref arg _arg1[760992]:atomic_uint_least8_t[44108], arg _arg2[760993]:atomic_uint_least8_t[44108]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (760996 '=' _arg1[760992] _arg2[760993])
      (761001 return _void[55])
    }
    type atomic_uint_least8_t[44108]
    function =[761003](ref arg _arg1[761005]:atomic_uint_least16_t[44114], arg _arg2[761006]:atomic_uint_least16_t[44114]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761009 '=' _arg1[761005] _arg2[761006])
      (761014 return _void[55])
    }
    type atomic_uint_least16_t[44114]
    function =[761016](ref arg _arg1[761018]:atomic_uint_least32_t[44120], arg _arg2[761019]:atomic_uint_least32_t[44120]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761022 '=' _arg1[761018] _arg2[761019])
      (761027 return _void[55])
    }
    type atomic_uint_least32_t[44120]
    function =[761029](ref arg _arg1[761031]:atomic_uint_least64_t[44126], arg _arg2[761032]:atomic_uint_least64_t[44126]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761035 '=' _arg1[761031] _arg2[761032])
      (761040 return _void[55])
    }
    type atomic_uint_least64_t[44126]
    function =[761042](ref arg _arg1[761044]:atomic__real64[44132], arg _arg2[761045]:atomic__real64[44132]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761048 '=' _arg1[761044] _arg2[761045])
      (761053 return _void[55])
    }
    type atomic__real64[44132]
    function =[761055](ref arg _arg1[761057]:atomic__real32[44138], arg _arg2[761058]:atomic__real32[44138]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761061 '=' _arg1[761057] _arg2[761058])
      (761066 return _void[55])
    }
    type atomic__real32[44138]
    {
      unknown tmp[44261] "expr temp" "maybe param" "maybe type" "temp"
      (44263 'move' tmp[44261] T[44069])
      unknown call_tmp[605905] "expr temp" "maybe param" "maybe type" "temp"
      (605908 'move' call_tmp[605905](44265 call == tmp[44261] bool[10]))
      unknown call_tmp[605910] "expr temp" "maybe param" "maybe type" "temp"
      (605913 'move' call_tmp[605910](44268 call _cond_test call_tmp[605905]))
      if call_tmp[605910]
      {
        (505489 'move' ret[505484](505488 'deref' atomic_bool[44077]))
        gotoReturn _end_externT[505482] _end_externT[505482]
      }
      {
        unknown call_tmp[605915] "expr temp" "maybe param" "maybe type" "temp"
        (605918 'move' call_tmp[605915](44153 call int(64)[13] 8))
        unknown call_tmp[605920] "expr temp" "maybe param" "maybe type" "temp"
        (605923 'move' call_tmp[605920](44271 call == tmp[44261] call_tmp[605915]))
        unknown call_tmp[605925] "expr temp" "maybe param" "maybe type" "temp"
        (605928 'move' call_tmp[605925](44274 call _cond_test call_tmp[605920]))
        if call_tmp[605925]
        {
          (505494 'move' ret[505484](505493 'deref' atomic_int_least8_t[44084]))
          gotoReturn _end_externT[505482] _end_externT[505482]
        }
        {
          unknown call_tmp[605930] "expr temp" "maybe param" "maybe type" "temp"
          (605933 'move' call_tmp[605930](44164 call int(64)[13] 16))
          unknown call_tmp[605935] "expr temp" "maybe param" "maybe type" "temp"
          (605938 'move' call_tmp[605935](44278 call == tmp[44261] call_tmp[605930]))
          unknown call_tmp[605940] "expr temp" "maybe param" "maybe type" "temp"
          (605943 'move' call_tmp[605940](44281 call _cond_test call_tmp[605935]))
          if call_tmp[605940]
          {
            (505499 'move' ret[505484](505498 'deref' atomic_int_least16_t[44090]))
            gotoReturn _end_externT[505482] _end_externT[505482]
          }
          {
            unknown call_tmp[605945] "expr temp" "maybe param" "maybe type" "temp"
            (605948 'move' call_tmp[605945](44175 call int(64)[13] 32))
            unknown call_tmp[605950] "expr temp" "maybe param" "maybe type" "temp"
            (605953 'move' call_tmp[605950](44285 call == tmp[44261] call_tmp[605945]))
            unknown call_tmp[605955] "expr temp" "maybe param" "maybe type" "temp"
            (605958 'move' call_tmp[605955](44288 call _cond_test call_tmp[605950]))
            if call_tmp[605955]
            {
              (505504 'move' ret[505484](505503 'deref' atomic_int_least32_t[44096]))
              gotoReturn _end_externT[505482] _end_externT[505482]
            }
            {
              unknown call_tmp[605960] "expr temp" "maybe param" "maybe type" "temp"
              (605963 'move' call_tmp[605960](44186 call int(64)[13] 64))
              unknown call_tmp[605965] "expr temp" "maybe param" "maybe type" "temp"
              (605968 'move' call_tmp[605965](44292 call == tmp[44261] call_tmp[605960]))
              unknown call_tmp[605970] "expr temp" "maybe param" "maybe type" "temp"
              (605973 'move' call_tmp[605970](44295 call _cond_test call_tmp[605965]))
              if call_tmp[605970]
              {
                (505509 'move' ret[505484](505508 'deref' atomic_int_least64_t[44102]))
                gotoReturn _end_externT[505482] _end_externT[505482]
              }
              {
                unknown call_tmp[605975] "expr temp" "maybe param" "maybe type" "temp"
                (605978 'move' call_tmp[605975](44197 call uint(64)[115] 8))
                unknown call_tmp[605980] "expr temp" "maybe param" "maybe type" "temp"
                (605983 'move' call_tmp[605980](44299 call == tmp[44261] call_tmp[605975]))
                unknown call_tmp[605985] "expr temp" "maybe param" "maybe type" "temp"
                (605988 'move' call_tmp[605985](44302 call _cond_test call_tmp[605980]))
                if call_tmp[605985]
                {
                  (505514 'move' ret[505484](505513 'deref' atomic_uint_least8_t[44108]))
                  gotoReturn _end_externT[505482] _end_externT[505482]
                }
                {
                  unknown call_tmp[605990] "expr temp" "maybe param" "maybe type" "temp"
                  (605993 'move' call_tmp[605990](44208 call uint(64)[115] 16))
                  unknown call_tmp[605995] "expr temp" "maybe param" "maybe type" "temp"
                  (605998 'move' call_tmp[605995](44306 call == tmp[44261] call_tmp[605990]))
                  unknown call_tmp[606000] "expr temp" "maybe param" "maybe type" "temp"
                  (606003 'move' call_tmp[606000](44309 call _cond_test call_tmp[605995]))
                  if call_tmp[606000]
                  {
                    (505519 'move' ret[505484](505518 'deref' atomic_uint_least16_t[44114]))
                    gotoReturn _end_externT[505482] _end_externT[505482]
                  }
                  {
                    unknown call_tmp[606005] "expr temp" "maybe param" "maybe type" "temp"
                    (606008 'move' call_tmp[606005](44219 call uint(64)[115] 32))
                    unknown call_tmp[606010] "expr temp" "maybe param" "maybe type" "temp"
                    (606013 'move' call_tmp[606010](44313 call == tmp[44261] call_tmp[606005]))
                    unknown call_tmp[606015] "expr temp" "maybe param" "maybe type" "temp"
                    (606018 'move' call_tmp[606015](44316 call _cond_test call_tmp[606010]))
                    if call_tmp[606015]
                    {
                      (505524 'move' ret[505484](505523 'deref' atomic_uint_least32_t[44120]))
                      gotoReturn _end_externT[505482] _end_externT[505482]
                    }
                    {
                      unknown call_tmp[606020] "expr temp" "maybe param" "maybe type" "temp"
                      (606023 'move' call_tmp[606020](44230 call uint(64)[115] 64))
                      unknown call_tmp[606025] "expr temp" "maybe param" "maybe type" "temp"
                      (606028 'move' call_tmp[606025](44320 call == tmp[44261] call_tmp[606020]))
                      unknown call_tmp[606030] "expr temp" "maybe param" "maybe type" "temp"
                      (606033 'move' call_tmp[606030](44323 call _cond_test call_tmp[606025]))
                      if call_tmp[606030]
                      {
                        (505529 'move' ret[505484](505528 'deref' atomic_uint_least64_t[44126]))
                        gotoReturn _end_externT[505482] _end_externT[505482]
                      }
                      {
                        unknown call_tmp[606035] "expr temp" "maybe param" "maybe type" "temp"
                        (606038 'move' call_tmp[606035](44241 call real(64)[16] 32))
                        unknown call_tmp[606040] "expr temp" "maybe param" "maybe type" "temp"
                        (606043 'move' call_tmp[606040](44327 call == tmp[44261] call_tmp[606035]))
                        unknown call_tmp[606045] "expr temp" "maybe param" "maybe type" "temp"
                        (606048 'move' call_tmp[606045](44330 call _cond_test call_tmp[606040]))
                        if call_tmp[606045]
                        {
                          (505534 'move' ret[505484](505533 'deref' atomic__real32[44138]))
                          gotoReturn _end_externT[505482] _end_externT[505482]
                        }
                        {
                          unknown call_tmp[606050] "expr temp" "maybe param" "maybe type" "temp"
                          (606053 'move' call_tmp[606050](44252 call real(64)[16] 64))
                          unknown call_tmp[606055] "expr temp" "maybe param" "maybe type" "temp"
                          (606058 'move' call_tmp[606055](44334 call == tmp[44261] call_tmp[606050]))
                          unknown call_tmp[606060] "expr temp" "maybe param" "maybe type" "temp"
                          (606063 'move' call_tmp[606060](44337 call _cond_test call_tmp[606055]))
                          if call_tmp[606060]
                          {
                            (505539 'move' ret[505484](505538 'deref' atomic__real64[44132]))
                            gotoReturn _end_externT[505482] _end_externT[505482]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505482]
    (505486 return ret[505484])
  }
  function externTString[44348](arg T[44346]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505545] "RVV" "param" "temp"
    unknown call_tmp[606065] "expr temp" "maybe param" "maybe type" "temp"
    (606068 'move' call_tmp[606065](44352 call == T[44346] bool[10]))
    unknown call_tmp[606070] "expr temp" "maybe param" "maybe type" "temp"
    (606073 'move' call_tmp[606070](44373 call _cond_test call_tmp[606065]))
    if call_tmp[606070]
    {
      (505550 'move' ret[505545](505549 'deref' "bool"))
      gotoReturn _end_externTString[505543] _end_externTString[505543]
    }
    unknown call_tmp[606075] "expr temp" "maybe param" "maybe type" "temp"
    (606078 'move' call_tmp[606075](44382 call isInt T[44346]))
    unknown call_tmp[606080] "expr temp" "maybe param" "maybe type" "temp"
    (606083 'move' call_tmp[606080](44430 call _cond_test call_tmp[606075]))
    if call_tmp[606080]
    {
      unknown call_tmp[606085] "expr temp" "maybe param" "maybe type" "temp"
      (606088 'move' call_tmp[606085](44403 call numBits T[44346]))
      unknown call_tmp[606090] "expr temp" "maybe param" "maybe type" "temp"
      (606093 'move' call_tmp[606090](44405 call _cast string[26] call_tmp[606085]))
      unknown call_tmp[606095] "expr temp" "maybe param" "maybe type" "temp"
      (606098 'move' call_tmp[606095](44407 call + "int_least" call_tmp[606090]))
      unknown call_tmp[606100] "expr temp" "maybe param" "maybe type" "temp"
      (606103 'move' call_tmp[606100](44426 call + call_tmp[606095] "_t"))
      (505555 'move' ret[505545](505554 'deref' call_tmp[606100]))
      gotoReturn _end_externTString[505543] _end_externTString[505543]
    }
    unknown call_tmp[606105] "expr temp" "maybe param" "maybe type" "temp"
    (606108 'move' call_tmp[606105](44438 call isUint T[44346]))
    unknown call_tmp[606110] "expr temp" "maybe param" "maybe type" "temp"
    (606113 'move' call_tmp[606110](44470 call _cond_test call_tmp[606105]))
    if call_tmp[606110]
    {
      unknown call_tmp[606115] "expr temp" "maybe param" "maybe type" "temp"
      (606118 'move' call_tmp[606115](44459 call numBits T[44346]))
      unknown call_tmp[606120] "expr temp" "maybe param" "maybe type" "temp"
      (606123 'move' call_tmp[606120](44461 call _cast string[26] call_tmp[606115]))
      unknown call_tmp[606125] "expr temp" "maybe param" "maybe type" "temp"
      (606128 'move' call_tmp[606125](44463 call + "uint_least" call_tmp[606120]))
      unknown call_tmp[606130] "expr temp" "maybe param" "maybe type" "temp"
      (606133 'move' call_tmp[606130](44466 call + call_tmp[606125] "_t"))
      (505560 'move' ret[505545](505559 'deref' call_tmp[606130]))
      gotoReturn _end_externTString[505543] _end_externTString[505543]
    }
    unknown call_tmp[606135] "expr temp" "maybe param" "maybe type" "temp"
    (606138 'move' call_tmp[606135](44478 call isReal T[44346]))
    unknown call_tmp[606140] "expr temp" "maybe param" "maybe type" "temp"
    (606143 'move' call_tmp[606140](44507 call _cond_test call_tmp[606135]))
    if call_tmp[606140]
    {
      unknown call_tmp[606145] "expr temp" "maybe param" "maybe type" "temp"
      (606148 'move' call_tmp[606145](44499 call numBits T[44346]))
      unknown call_tmp[606150] "expr temp" "maybe param" "maybe type" "temp"
      (606153 'move' call_tmp[606150](44501 call _cast string[26] call_tmp[606145]))
      unknown call_tmp[606155] "expr temp" "maybe param" "maybe type" "temp"
      (606158 'move' call_tmp[606155](44503 call + "_real" call_tmp[606150]))
      (505565 'move' ret[505545](505564 'deref' call_tmp[606155]))
      gotoReturn _end_externTString[505543] _end_externTString[505543]
    }
    label _end_externTString[505543]
    (505547 return ret[505545])
  }
  function externFunc[44520](param arg s[44517]:string[26], arg T[44522]:_any[178](?), param arg explicit[44525] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505571] "RVV" "param" "temp"
    unknown call_tmp[606160] "expr temp" "maybe param" "maybe type" "temp"
    (606163 'move' call_tmp[606160](44607 call _cond_test explicit[44525]))
    if call_tmp[606160]
    {
      unknown call_tmp[606165] "expr temp" "maybe param" "maybe type" "temp"
      (606168 'move' call_tmp[606165](44547 call + "atomic_" s[44517]))
      unknown call_tmp[606170] "expr temp" "maybe param" "maybe type" "temp"
      (606173 'move' call_tmp[606170](44566 call + call_tmp[606165] "_explicit_"))
      unknown call_tmp[606175] "expr temp" "maybe param" "maybe type" "temp"
      (606178 'move' call_tmp[606175](44571 call externTString T[44522]))
      unknown call_tmp[606180] "expr temp" "maybe param" "maybe type" "temp"
      (606183 'move' call_tmp[606180](44572 call + call_tmp[606170] call_tmp[606175]))
      (505576 'move' ret[505571](505575 'deref' call_tmp[606180]))
      gotoReturn _end_externFunc[505569] _end_externFunc[505569]
    }
    {
      unknown call_tmp[606185] "expr temp" "maybe param" "maybe type" "temp"
      (606188 'move' call_tmp[606185](44578 call + "atomic_" s[44517]))
      unknown call_tmp[606190] "expr temp" "maybe param" "maybe type" "temp"
      (606193 'move' call_tmp[606190](44597 call + call_tmp[606185] "_"))
      unknown call_tmp[606195] "expr temp" "maybe param" "maybe type" "temp"
      (606198 'move' call_tmp[606195](44602 call externTString T[44522]))
      unknown call_tmp[606200] "expr temp" "maybe param" "maybe type" "temp"
      (606203 'move' call_tmp[606200](44603 call + call_tmp[606190] call_tmp[606195]))
      (505581 'move' ret[505571](505580 'deref' call_tmp[606200]))
      gotoReturn _end_externFunc[505569] _end_externFunc[505569]
    }
    label _end_externFunc[505569]
    (505573 return ret[505571])
  }
  function chpl__processorAtomicType[44620](arg T[44618]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505587] "RVV" "temp" "type variable"
    unknown call_tmp[606205] "expr temp" "maybe param" "maybe type" "temp"
    (606208 'move' call_tmp[606205](44624 call == T[44618] bool[10]))
    unknown call_tmp[606210] "expr temp" "maybe param" "maybe type" "temp"
    (606213 'move' call_tmp[606210](44672 call _cond_test call_tmp[606205]))
    if call_tmp[606210]
    {
      (505592 'move' ret[505587](505591 'deref' AtomicBool[45874]))
      gotoReturn _end_chpl__processorAtomicType[505585] _end_chpl__processorAtomicType[505585]
    }
    {
      unknown call_tmp[606215] "expr temp" "maybe param" "maybe type" "temp"
      (606218 'move' call_tmp[606215](44632 call isSupported T[44618]))
      unknown call_tmp[606220] "expr temp" "maybe param" "maybe type" "temp"
      (606223 'move' call_tmp[606220](44666 call _cond_test call_tmp[606215]))
      if call_tmp[606220]
      {
        unknown call_tmp[606225] "expr temp" "maybe param" "maybe type" "temp"
        (606228 'move' call_tmp[606225](44636 call AtomicT[48077](?) T[44618]))
        (505597 'move' ret[505587](505596 'deref' call_tmp[606225]))
        gotoReturn _end_chpl__processorAtomicType[505585] _end_chpl__processorAtomicType[505585]
      }
      {
        unknown call_tmp[606230] "expr temp" "maybe param" "maybe type" "temp"
        (606233 'move' call_tmp[606230](44659 call _cast string[26] T[44618]))
        unknown call_tmp[606235] "expr temp" "maybe param" "maybe type" "temp"
        (606238 'move' call_tmp[606235](44661 call + "Unsupported atomic type: " call_tmp[606230]))
        (44664 call compilerError call_tmp[606235])
      }
    }
    label _end_chpl__processorAtomicType[505585]
    (505589 return ret[505587])
  }
  function chpl__atomicType[44685](arg T[44683]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505603] "RVV" "temp" "type variable"
    unknown call_tmp[606240] "expr temp" "maybe param" "maybe type" "temp"
    (606243 'move' call_tmp[606240](44689 call == CHPL_NETWORK_ATOMICS[21517] "none"))
    unknown call_tmp[606245] "expr temp" "maybe param" "maybe type" "temp"
    (606248 'move' call_tmp[606245](44705 call _cond_test call_tmp[606240]))
    if call_tmp[606245]
    {
      unknown call_tmp[606250] "expr temp" "maybe param" "maybe type" "temp"
      (606253 'move' call_tmp[606250](44694 call chpl__processorAtomicType T[44683]))
      (505608 'move' ret[505603](505607 'deref' call_tmp[606250]))
      gotoReturn _end_chpl__atomicType[505601] _end_chpl__atomicType[505601]
    }
    {
      unknown call_tmp[606255] "expr temp" "maybe param" "maybe type" "temp"
      (606258 'move' call_tmp[606255](44701 call chpl__networkAtomicType T[44683]))
      (505613 'move' ret[505603](505612 'deref' call_tmp[606255]))
      gotoReturn _end_chpl__atomicType[505601] _end_chpl__atomicType[505601]
    }
    label _end_chpl__atomicType[505601]
    (505605 return ret[505603])
  }
  function AtomicBool[45874].init_helper[44727](arg _mt[45878]:_MT[238], arg this[45876]:AtomicBool[45874], arg value[44724]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44759](ref arg obj[44756] :
    (44755 call externT bool[10]), arg value[44762]:bool[10], arg _chpl_cname[44770]:string[26] =
    (44749 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505619] "RVV" "temp"
      (505621 return ret[505619])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606262] "expr temp" "maybe param" "maybe type" "temp"
    (606265 'move' call_tmp[606262](370785 call _v _mt[243] this[45876]))
    (44779 call atomic_init call_tmp[606262] value[44724])
    (505623 return _void[55])
  }
  function AtomicBool[45874].init[44785](arg _mt[45882]:_MT[238], ref arg this[45880]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454465] "temp"
    unknown call_tmp[606267] "expr temp" "maybe param" "maybe type" "temp"
    (606270 'move' call_tmp[606267](454468 call externT bool[10]))
    (454470 'default init var' tmp[454465] call_tmp[606267])
    (454472 '.=' this[45880] c"_v" tmp[454465])
    (474177 'end of statement')
    const default[44796] "dead at end of block" "const" "insert auto destroy"
    (540494 'default init var' default[44796] bool[10])
    (44799 'end of statement')
    (44803 call(370792 call (partial) init_helper _mt[243] this[45880]) default[44796])
    (474178 'end of statement' default[44796])
    (505625 return _void[55])
  }
  function AtomicBool[45874].init=[44813](arg _mt[45886]:_MT[238], ref arg this[45884]:AtomicBool[45874], arg other[44810]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454476] "temp"
    unknown call_tmp[606274] "expr temp" "maybe param" "maybe type" "temp"
    (606277 'move' call_tmp[606274](454479 call externT bool[10]))
    (454481 'default init var' tmp[454476] call_tmp[606274])
    (454483 '.=' this[45884] c"_v" tmp[454476])
    (474180 'end of statement')
    unknown call_tmp[606283] "expr temp" "maybe param" "maybe type" "temp"
    (606286 'move' call_tmp[606283](44829 call(44825 call (partial) read _mt[243] other[44810])))
    (44831 call(370798 call (partial) init_helper _mt[243] this[45884]) call_tmp[606283])
    (505627 return _void[55])
  }
  function AtomicBool[45874].init=[44841](arg _mt[45890]:_MT[238], ref arg this[45888]:AtomicBool[45874], arg other[44838]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454487] "temp"
    unknown call_tmp[606288] "expr temp" "maybe param" "maybe type" "temp"
    (606291 'move' call_tmp[606288](454490 call externT bool[10]))
    (454492 'default init var' tmp[454487] call_tmp[606288])
    (454494 '.=' this[45888] c"_v" tmp[454487])
    (474182 'end of statement')
    (44854 call(370802 call (partial) init_helper _mt[243] this[45888]) other[44838])
    (505629 return _void[55])
  }
  function AtomicBool[45874].deinit[44860](arg _mt[45894]:_MT[238], arg this[45892]:AtomicBool[45874]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44894](ref arg obj[44891] :
    (44890 call externT bool[10]), arg _chpl_cname[44901]:string[26] =
    (44884 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505633] "RVV" "temp"
      (505635 return ret[505633])
    }
    { scopeless type
      void[4]
    }
    const tmp[44915] "const" "temp"
    unknown call_tmp[606295] "expr temp" "maybe param" "maybe type" "temp"
    (606298 'move' call_tmp[606295](44912 '_wide_get_locale' this[45892]))
    (44917 'move' tmp[44915](44913 'deref' call_tmp[606295]))
    (933791 call on_fn[933787] tmp[44915])
    function on_fn[933787](const in arg dummy_locale_arg[933789]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606302] "expr temp" "maybe param" "maybe type" "temp"
      (606305 'move' call_tmp[606302](370809 call _v _mt[243] this[45892]))
      (44910 call atomic_destroy call_tmp[606302])
      (933794 return _void[55])
    }
    {
    }
    (505637 return _void[55])
  }
  function AtomicBool[45874].read[44936](arg _mt[45898]:_MT[238], const arg this[45896]:AtomicBool[45874], param arg order[44932]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505647] "RVV" "temp"
    function atomic_load[44969](const  ref arg obj[44966] :
    (44965 call externT bool[10]), arg order[44972]:memory_order[186607], arg _chpl_cname[44980]:string[26] =
    (44959 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505641] "RVV" "temp"
      (505643 return ret[505641])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44986] "dead at end of block" "insert auto destroy"
    (540496 'default init var' ret[44986] bool[10])
    (44989 'end of statement')
    const tmp[45006] "const" "temp"
    unknown call_tmp[606307] "expr temp" "maybe param" "maybe type" "temp"
    (606310 'move' call_tmp[606307](45003 '_wide_get_locale' this[45896]))
    (45008 'move' tmp[45006](45004 'deref' call_tmp[606307]))
    (933800 call on_fn[933796] tmp[45006])
    function on_fn[933796](const in arg dummy_locale_arg[933798]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606314] "expr temp" "maybe param" "maybe type" "temp"
      (606317 'move' call_tmp[606314](370818 call _v _mt[243] this[45896]))
      unknown call_tmp[606319] "expr temp" "maybe param" "maybe type" "temp"
      (606322 'move' call_tmp[606319](44998 call c_memory_order order[44932]))
      unknown call_tmp[606324] "expr temp" "maybe param" "maybe type" "temp"
      (606327 'move' call_tmp[606324](44999 call atomic_load call_tmp[606314] call_tmp[606319]))
      (45000 call = ret[44986] call_tmp[606324])
      (474185 'end of statement' ret[44986])
      (933803 return _void[55])
    }
    {
    }
    (505653 'move' ret[505647](505652 'coerce' ret[44986] bool[10]))
    gotoReturn _end_read[505645] _end_read[505645]
    (474187 'end of statement' ret[44986])
    label _end_read[505645]
    (505649 return ret[505647])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].write[45026](arg _mt[45902]:_MT[238], arg this[45900]:AtomicBool[45874], arg value[45023]:bool[10], param arg order[45033]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505665] "RVV" "temp"
    function atomic_store[45068](ref arg obj[45065] :
    (45064 call externT bool[10]), arg value[45071]:bool[10], arg order[45075]:memory_order[186607], arg _chpl_cname[45083]:string[26] =
    (45058 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505659] "RVV" "temp"
      (505661 return ret[505659])
    }
    { scopeless type
      void[4]
    }
    const tmp[45102] "const" "temp"
    unknown call_tmp[606329] "expr temp" "maybe param" "maybe type" "temp"
    (606332 'move' call_tmp[606329](45099 '_wide_get_locale' this[45900]))
    (45104 'move' tmp[45102](45100 'deref' call_tmp[606329]))
    (933809 call on_fn[933805] tmp[45102])
    function on_fn[933805](const in arg dummy_locale_arg[933807]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606336] "expr temp" "maybe param" "maybe type" "temp"
      (606339 'move' call_tmp[606336](370828 call _v _mt[243] this[45900]))
      unknown call_tmp[606341] "expr temp" "maybe param" "maybe type" "temp"
      (606344 'move' call_tmp[606341](45096 call c_memory_order order[45033]))
      (45097 call atomic_store call_tmp[606336] value[45023] call_tmp[606341])
      (933812 return _void[55])
    }
    {
    }
    (505667 return ret[505665])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].exchange[45119](arg _mt[45906]:_MT[238], arg this[45904]:AtomicBool[45874], arg value[45116]:bool[10], param arg order[45126]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505677] "RVV" "temp"
    function atomic_exchange[45161](ref arg obj[45158] :
    (45157 call externT bool[10]), arg value[45164]:bool[10], arg order[45168]:memory_order[186607], arg _chpl_cname[45176]:string[26] =
    (45151 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505671] "RVV" "temp"
      (505673 return ret[505671])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45182] "dead at end of block" "insert auto destroy"
    (540498 'default init var' ret[45182] bool[10])
    (45185 'end of statement')
    const tmp[45203] "const" "temp"
    unknown call_tmp[606346] "expr temp" "maybe param" "maybe type" "temp"
    (606349 'move' call_tmp[606346](45200 '_wide_get_locale' this[45904]))
    (45205 'move' tmp[45203](45201 'deref' call_tmp[606346]))
    (933818 call on_fn[933814] tmp[45203])
    function on_fn[933814](const in arg dummy_locale_arg[933816]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606353] "expr temp" "maybe param" "maybe type" "temp"
      (606356 'move' call_tmp[606353](370839 call _v _mt[243] this[45904]))
      unknown call_tmp[606358] "expr temp" "maybe param" "maybe type" "temp"
      (606361 'move' call_tmp[606358](45195 call c_memory_order order[45126]))
      unknown call_tmp[606363] "expr temp" "maybe param" "maybe type" "temp"
      (606366 'move' call_tmp[606363](45196 call atomic_exchange call_tmp[606353] value[45116] call_tmp[606358]))
      (45197 call = ret[45182] call_tmp[606363])
      (474190 'end of statement' ret[45182])
      (933821 return _void[55])
    }
    {
    }
    (505683 'move' ret[505677](505682 'coerce' ret[45182] bool[10]))
    gotoReturn _end_exchange[505675] _end_exchange[505675]
    (474192 'end of statement' ret[45182])
    label _end_exchange[505675]
    (505679 return ret[505677])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45223](arg _mt[45910]:_MT[238], arg this[45908]:AtomicBool[45874], ref arg expected[45220]:bool[10], arg desired[45226]:bool[10], param arg order[45234]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505689] "RVV" "temp"
    unknown call_tmp[606370] "expr temp" "maybe param" "maybe type" "temp"
    (606373 'move' call_tmp[606370](45252 call readableOrder order[45234]))
    unknown call_tmp[606375] "expr temp" "maybe param" "maybe type" "temp"
    (606378 'move' call_tmp[606375](45253 call(45242 call (partial) compareExchange _mt[243] this[45908]) expected[45220] desired[45226] order[45234] call_tmp[606370]))
    (505695 'move' ret[505689](505694 'coerce' call_tmp[606375] bool[10]))
    (505691 return ret[505689])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45266](arg _mt[45914]:_MT[238], arg this[45912]:AtomicBool[45874], ref arg expected[45263]:bool[10], arg desired[45269]:bool[10], param arg success[45273]:memoryOrder[186966], param arg failure[45277]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505705] "RVV" "temp"
    function atomic_compare_exchange_strong[45311](ref arg obj[45308] :
    (45307 call externT bool[10]), ref arg expected[45314]:bool[10], arg desired[45318]:bool[10], arg succ[45322]:memory_order[186607], arg fail[45326]:memory_order[186607], arg _chpl_cname[45334]:string[26] =
    (45301 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505699] "RVV" "temp"
      (505701 return ret[505699])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45340] "dead at end of block" "insert auto destroy"
    (540500 'default init var' ret[45340] bool[10])
    (45343 'end of statement')
    const tmp[45385] "const" "temp"
    unknown call_tmp[606380] "expr temp" "maybe param" "maybe type" "temp"
    (606383 'move' call_tmp[606380](45382 '_wide_get_locale' this[45912]))
    (45387 'move' tmp[45385](45383 'deref' call_tmp[606380]))
    (933827 call on_fn[933823] tmp[45385])
    function on_fn[933823](const in arg dummy_locale_arg[933825]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown localizedExpected[45346] "dead at end of block" "insert auto destroy"
        (540502 'init var' localizedExpected[45346] expected[45263])
        (45349 'end of statement')
        unknown call_tmp[606387] "expr temp" "maybe param" "maybe type" "temp"
        (606390 'move' call_tmp[606387](370859 call _v _mt[243] this[45912]))
        unknown call_tmp[606392] "expr temp" "maybe param" "maybe type" "temp"
        (606395 'move' call_tmp[606392](45360 call c_memory_order success[45273]))
        unknown call_tmp[606397] "expr temp" "maybe param" "maybe type" "temp"
        (606400 'move' call_tmp[606397](45364 call c_memory_order failure[45277]))
        unknown call_tmp[606402] "expr temp" "maybe param" "maybe type" "temp"
        (606405 'move' call_tmp[606402](45365 call atomic_compare_exchange_strong call_tmp[606387] localizedExpected[45346] desired[45269] call_tmp[606392] call_tmp[606397]))
        (45366 call = ret[45340] call_tmp[606402])
        (474195 'end of statement' ret[45340] localizedExpected[45346])
        unknown call_tmp[606407] "expr temp" "maybe param" "maybe type" "temp"
        (606410 'move' call_tmp[606407](45370 call ! ret[45340]))
        unknown call_tmp[606412] "expr temp" "maybe param" "maybe type" "temp"
        (606415 'move' call_tmp[606412](45377 call _cond_test call_tmp[606407]))
        if call_tmp[606412]
        {
          (45374 call = expected[45263] localizedExpected[45346])
          (474198 'end of statement' localizedExpected[45346])
        }
      }
      (933830 return _void[55])
    }
    {
    }
    (505711 'move' ret[505705](505710 'coerce' ret[45340] bool[10]))
    gotoReturn _end_compareExchange[505703] _end_compareExchange[505703]
    (474200 'end of statement' ret[45340])
    label _end_compareExchange[505703]
    (505707 return ret[505705])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45405](arg _mt[45918]:_MT[238], arg this[45916]:AtomicBool[45874], ref arg expected[45402]:bool[10], arg desired[45408]:bool[10], param arg order[45416]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505717] "RVV" "temp"
    unknown call_tmp[606419] "expr temp" "maybe param" "maybe type" "temp"
    (606422 'move' call_tmp[606419](45434 call readableOrder order[45416]))
    unknown call_tmp[606424] "expr temp" "maybe param" "maybe type" "temp"
    (606427 'move' call_tmp[606424](45435 call(45424 call (partial) compareExchangeWeak _mt[243] this[45916]) expected[45402] desired[45408] order[45416] call_tmp[606419]))
    (505723 'move' ret[505717](505722 'coerce' call_tmp[606424] bool[10]))
    (505719 return ret[505717])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45448](arg _mt[45922]:_MT[238], arg this[45920]:AtomicBool[45874], ref arg expected[45445]:bool[10], arg desired[45451]:bool[10], param arg success[45455]:memoryOrder[186966], param arg failure[45459]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505733] "RVV" "temp"
    function atomic_compare_exchange_weak[45492](ref arg obj[45489] :
    (45488 call externT bool[10]), ref arg expected[45495]:bool[10], arg desired[45499]:bool[10], arg succ[45503]:memory_order[186607], arg fail[45507]:memory_order[186607], arg _chpl_cname[45515]:string[26] =
    (45482 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505727] "RVV" "temp"
      (505729 return ret[505727])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45521] "dead at end of block" "insert auto destroy"
    (540504 'default init var' ret[45521] bool[10])
    (45524 'end of statement')
    const tmp[45566] "const" "temp"
    unknown call_tmp[606429] "expr temp" "maybe param" "maybe type" "temp"
    (606432 'move' call_tmp[606429](45563 '_wide_get_locale' this[45920]))
    (45568 'move' tmp[45566](45564 'deref' call_tmp[606429]))
    (933836 call on_fn[933832] tmp[45566])
    function on_fn[933832](const in arg dummy_locale_arg[933834]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown localizedExpected[45527] "dead at end of block" "insert auto destroy"
        (540506 'init var' localizedExpected[45527] expected[45445])
        (45530 'end of statement')
        unknown call_tmp[606436] "expr temp" "maybe param" "maybe type" "temp"
        (606439 'move' call_tmp[606436](370884 call _v _mt[243] this[45920]))
        unknown call_tmp[606441] "expr temp" "maybe param" "maybe type" "temp"
        (606444 'move' call_tmp[606441](45541 call c_memory_order success[45455]))
        unknown call_tmp[606446] "expr temp" "maybe param" "maybe type" "temp"
        (606449 'move' call_tmp[606446](45545 call c_memory_order failure[45459]))
        unknown call_tmp[606451] "expr temp" "maybe param" "maybe type" "temp"
        (606454 'move' call_tmp[606451](45546 call atomic_compare_exchange_weak call_tmp[606436] localizedExpected[45527] desired[45451] call_tmp[606441] call_tmp[606446]))
        (45547 call = ret[45521] call_tmp[606451])
        (474203 'end of statement' ret[45521] localizedExpected[45527])
        unknown call_tmp[606456] "expr temp" "maybe param" "maybe type" "temp"
        (606459 'move' call_tmp[606456](45551 call ! ret[45521]))
        unknown call_tmp[606461] "expr temp" "maybe param" "maybe type" "temp"
        (606464 'move' call_tmp[606461](45558 call _cond_test call_tmp[606456]))
        if call_tmp[606461]
        {
          (45555 call = expected[45445] localizedExpected[45527])
          (474206 'end of statement' localizedExpected[45527])
        }
      }
      (933839 return _void[55])
    }
    {
    }
    (505738 'move' ret[505733](505737 'deref' ret[45521]))
    gotoReturn _end_compareExchangeWeak[505731] _end_compareExchangeWeak[505731]
    (474208 'end of statement' ret[45521])
    label _end_compareExchangeWeak[505731]
    (505735 return ret[505733])
  }
  function AtomicBool[45874].compareAndSwap[45585](arg _mt[45926]:_MT[238], arg this[45924]:AtomicBool[45874], arg expected[45582]:bool[10], arg desired[45588]:bool[10], param arg order[45596]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505750] "RVV" "temp"
    function atomic_compare_exchange_strong[45615](ref arg obj[45612] :
    (45611 call externT bool[10]), ref arg expected[45618]:bool[10], arg desired[45622]:bool[10], arg succ[45626]:memory_order[186607], arg fail[45630]:memory_order[186607], arg _chpl_cname[45638]:string[26] =
    (45605 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505744] "RVV" "temp"
      (505746 return ret[505744])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45644] "dead at end of block" "insert auto destroy"
    (540508 'default init var' ret[45644] bool[10])
    (45647 'end of statement')
    const tmp[45679] "const" "temp"
    unknown call_tmp[606466] "expr temp" "maybe param" "maybe type" "temp"
    (606469 'move' call_tmp[606466](45676 '_wide_get_locale' this[45924]))
    (45681 'move' tmp[45679](45677 'deref' call_tmp[606466]))
    (933845 call on_fn[933841] tmp[45679])
    function on_fn[933841](const in arg dummy_locale_arg[933843]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown mutableExpected[45650] "dead at end of block" "insert auto destroy"
        (540510 'init var' mutableExpected[45650] expected[45582])
        (45653 'end of statement')
        unknown call_tmp[606473] "expr temp" "maybe param" "maybe type" "temp"
        (606476 'move' call_tmp[606473](370903 call _v _mt[243] this[45924]))
        unknown call_tmp[606478] "expr temp" "maybe param" "maybe type" "temp"
        (606481 'move' call_tmp[606478](45664 call c_memory_order order[45596]))
        unknown call_tmp[606483] "expr temp" "maybe param" "maybe type" "temp"
        (606486 'move' call_tmp[606483](45669 call readableOrder order[45596]))
        unknown call_tmp[606488] "expr temp" "maybe param" "maybe type" "temp"
        (606491 'move' call_tmp[606488](45671 call c_memory_order call_tmp[606483]))
        unknown call_tmp[606493] "expr temp" "maybe param" "maybe type" "temp"
        (606496 'move' call_tmp[606493](45672 call atomic_compare_exchange_strong call_tmp[606473] mutableExpected[45650] desired[45588] call_tmp[606478] call_tmp[606488]))
        (45673 call = ret[45644] call_tmp[606493])
        (474210 'end of statement' ret[45644] mutableExpected[45650])
      }
      (933848 return _void[55])
    }
    {
    }
    (505756 'move' ret[505750](505755 'coerce' ret[45644] bool[10]))
    gotoReturn _end_compareAndSwap[505748] _end_compareAndSwap[505748]
    (474213 'end of statement' ret[45644])
    label _end_compareAndSwap[505748]
    (505752 return ret[505750])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].testAndSet[45704](arg _mt[45930]:_MT[238], arg this[45928]:AtomicBool[45874], param arg order[45700]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505762] "RVV" "temp"
    unknown call_tmp[606500] "expr temp" "maybe param" "maybe type" "temp"
    (606503 'move' call_tmp[606500](45714 call(45708 call (partial) exchange _mt[243] this[45928]) 1 order[45700]))
    (505768 'move' ret[505762](505767 'coerce' call_tmp[606500] bool[10]))
    (505764 return ret[505762])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].clear[45732](arg _mt[45934]:_MT[238], arg this[45932]:AtomicBool[45874], param arg order[45728]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505772] "RVV" "temp"
    (45742 call(45736 call (partial) write _mt[243] this[45932]) 0 order[45728])
    (505774 return ret[505772])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].waitFor[45754](arg _mt[45938]:_MT[238], const arg this[45936]:AtomicBool[45874], arg value[45751]:bool[10], param arg order[45761]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505778] "RVV" "temp"
    const tmp[45845] "const" "temp"
    unknown call_tmp[606507] "expr temp" "maybe param" "maybe type" "temp"
    (606510 'move' call_tmp[606507](45842 '_wide_get_locale' this[45936]))
    (45847 'move' tmp[45845](45843 'deref' call_tmp[606507]))
    (933854 call on_fn[933850] tmp[45845])
    function on_fn[933850](const in arg dummy_locale_arg[933852]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        {
          unknown tmp[45788] "temp"
          unknown call_tmp[606514] "expr temp" "maybe param" "maybe type" "temp"
          (606517 'move' call_tmp[606514](45823 call(45820 call (partial) read _mt[243] this[45936])(order = relaxed[186964])))
          unknown call_tmp[606519] "expr temp" "maybe param" "maybe type" "temp"
          (606522 'move' call_tmp[606519](45818 call != call_tmp[606514] value[45751]))
          (45830 'move' tmp[45788](45816 call _cond_test call_tmp[606519]))
          WhileDo[45793]
          {
            {
              (45785 call chpl_task_yield)
            }
            label _continueLabel[45791]
            unknown call_tmp[606526] "expr temp" "maybe param" "maybe type" "temp"
            (606529 'move' call_tmp[606526](45804 call(45801 call (partial) read _mt[243] this[45936])(order = relaxed[186964])))
            unknown call_tmp[606531] "expr temp" "maybe param" "maybe type" "temp"
            (606534 'move' call_tmp[606531](45799 call != call_tmp[606526] value[45751]))
            (45811 'move' tmp[45788](45797 call _cond_test call_tmp[606531]))
            tmp[45788]
          }
          label _breakLabel[45792]
        }
        unknown call_tmp[606536] "expr temp" "maybe param" "maybe type" "temp"
        (606539 'move' call_tmp[606536](45838 call c_memory_order order[45761]))
        (45840 call chpl_atomic_thread_fence call_tmp[606536])
      }
      (933857 return _void[55])
    }
    {
    }
    (505780 return ret[505778])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].writeThis[45861](arg _mt[45942]:_MT[238], const arg this[45940]:AtomicBool[45874], arg x[45859]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606543] "expr temp" "maybe param" "maybe type" "temp"
    (606546 'move' call_tmp[606543](45866 call(370922 call (partial) read _mt[243] this[45940])))
    (45867 call <~> x[45859] call_tmp[606543])
    (505782 return _void[55])
  }
  function AtomicBool[45874]._v[761068](arg _mt[761070]:_MT[238], ref arg this[761072]:AtomicBool[45874]) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[761082] "RVV" "temp"
    unknown call_tmp[761089] "expr temp" "maybe param" "maybe type" "temp"
    (761092 'move' call_tmp[761089](761076 '.' this[761072] c"_v"))
    (761087 'move' ret[761082](761086 'addr of' call_tmp[761089]))
    (761084 return ret[761082])
  }
  function chpl_fields_are_comparable[761106](arg _arg1[761108]:AtomicBool[45874], arg _arg2[761109]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761127]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761134] "expr temp" "maybe param" "maybe type" "temp"
    (761137 'move' call_tmp[761134](761112 call _v _mt[243] _arg1[761108]))
    unknown call_tmp[761139] "expr temp" "maybe param" "maybe type" "temp"
    (761142 'move' call_tmp[761139](761116 call _v _mt[243] _arg2[761109]))
    unknown call_tmp[761144] "expr temp" "maybe param" "maybe type" "temp"
    (761147 'move' call_tmp[761144](761120 'call resolves' c"==" call_tmp[761134] call_tmp[761139]))
    (761132 'move' ret[761127](761131 'deref' call_tmp[761144]))
    (761129 return ret[761127])
  }
  function ==[761094](arg _arg1[761096]:AtomicBool[45874], arg _arg2[761097]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761176]:bool[10] "RVV" "temp"
    unknown call_tmp[761188] "expr temp" "maybe param" "maybe type" "temp"
    (761191 'move' call_tmp[761188](761155 call _v _mt[243] _arg1[761096]))
    unknown call_tmp[761193] "expr temp" "maybe param" "maybe type" "temp"
    (761196 'move' call_tmp[761193](761159 call _v _mt[243] _arg2[761097]))
    unknown call_tmp[761198] "expr temp" "maybe param" "maybe type" "temp"
    (761201 'move' call_tmp[761198](761163 call != call_tmp[761188] call_tmp[761193]))
    if call_tmp[761198]
    {
      (761181 'move' ret[761176](761180 'deref' 0))
      gotoReturn _end_==[761174] _end_==[761174]
    }
    (761186 'move' ret[761176](761185 'deref' 1))
    label _end_==[761174]
    (761178 return ret[761176])
  }
  where {
    unknown call_tmp[761203] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761206 'move' call_tmp[761203](761100 'typeof' _arg1[761096]))
    unknown call_tmp[761208] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761211 'move' call_tmp[761208](761102 'typeof' _arg2[761097]))
    unknown call_tmp[761213] "expr temp" "maybe param" "maybe type" "temp"
    (761216 'move' call_tmp[761213](761104 call == call_tmp[761203] call_tmp[761208]))
    unknown call_tmp[761218] "expr temp" "maybe param" "maybe type" "temp"
    (761221 'move' call_tmp[761218](761149 call chpl_fields_are_comparable[761106] _arg1[761096] _arg2[761097]))
    (761153 '&' call_tmp[761213] call_tmp[761218])
  }
  function chpl_fields_are_comparable[761235](arg _arg1[761237]:AtomicBool[45874], arg _arg2[761238]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761256]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761263] "expr temp" "maybe param" "maybe type" "temp"
    (761266 'move' call_tmp[761263](761241 call _v _mt[243] _arg1[761237]))
    unknown call_tmp[761268] "expr temp" "maybe param" "maybe type" "temp"
    (761271 'move' call_tmp[761268](761245 call _v _mt[243] _arg2[761238]))
    unknown call_tmp[761273] "expr temp" "maybe param" "maybe type" "temp"
    (761276 'move' call_tmp[761273](761249 'call resolves' c"!=" call_tmp[761263] call_tmp[761268]))
    (761261 'move' ret[761256](761260 'deref' call_tmp[761273]))
    (761258 return ret[761256])
  }
  function !=[761223](arg _arg1[761225]:AtomicBool[45874], arg _arg2[761226]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761305]:bool[10] "RVV" "temp"
    unknown call_tmp[761317] "expr temp" "maybe param" "maybe type" "temp"
    (761320 'move' call_tmp[761317](761284 call _v _mt[243] _arg1[761225]))
    unknown call_tmp[761322] "expr temp" "maybe param" "maybe type" "temp"
    (761325 'move' call_tmp[761322](761288 call _v _mt[243] _arg2[761226]))
    unknown call_tmp[761327] "expr temp" "maybe param" "maybe type" "temp"
    (761330 'move' call_tmp[761327](761292 call != call_tmp[761317] call_tmp[761322]))
    if call_tmp[761327]
    {
      (761310 'move' ret[761305](761309 'deref' 1))
      gotoReturn _end_!=[761303] _end_!=[761303]
    }
    (761315 'move' ret[761305](761314 'deref' 0))
    label _end_!=[761303]
    (761307 return ret[761305])
  }
  where {
    unknown call_tmp[761332] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761335 'move' call_tmp[761332](761229 'typeof' _arg1[761225]))
    unknown call_tmp[761337] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761340 'move' call_tmp[761337](761231 'typeof' _arg2[761226]))
    unknown call_tmp[761342] "expr temp" "maybe param" "maybe type" "temp"
    (761345 'move' call_tmp[761342](761233 call == call_tmp[761332] call_tmp[761337]))
    unknown call_tmp[761347] "expr temp" "maybe param" "maybe type" "temp"
    (761350 'move' call_tmp[761347](761278 call chpl_fields_are_comparable[761235] _arg1[761225] _arg2[761226]))
    (761282 '&' call_tmp[761342] call_tmp[761347])
  }
  function chpl_fields_are_comparable[761364](arg _arg1[761366]:AtomicBool[45874], arg _arg2[761367]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761385]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761392] "expr temp" "maybe param" "maybe type" "temp"
    (761395 'move' call_tmp[761392](761370 call _v _mt[243] _arg1[761366]))
    unknown call_tmp[761397] "expr temp" "maybe param" "maybe type" "temp"
    (761400 'move' call_tmp[761397](761374 call _v _mt[243] _arg2[761367]))
    unknown call_tmp[761402] "expr temp" "maybe param" "maybe type" "temp"
    (761405 'move' call_tmp[761402](761378 'call resolves' c"<" call_tmp[761392] call_tmp[761397]))
    (761390 'move' ret[761385](761389 'deref' call_tmp[761402]))
    (761387 return ret[761385])
  }
  function <[761352](arg _arg1[761354]:AtomicBool[45874], arg _arg2[761355]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761449]:bool[10] "RVV" "temp"
    unknown call_tmp[761466] "expr temp" "maybe param" "maybe type" "temp"
    (761469 'move' call_tmp[761466](761413 call _v _mt[243] _arg1[761354]))
    unknown call_tmp[761471] "expr temp" "maybe param" "maybe type" "temp"
    (761474 'move' call_tmp[761471](761417 call _v _mt[243] _arg2[761355]))
    unknown call_tmp[761476] "expr temp" "maybe param" "maybe type" "temp"
    (761479 'move' call_tmp[761476](761421 call < call_tmp[761466] call_tmp[761471]))
    if call_tmp[761476]
    {
      (761454 'move' ret[761449](761453 'deref' 1))
      gotoReturn _end_<[761447] _end_<[761447]
    }
    unknown call_tmp[761481] "expr temp" "maybe param" "maybe type" "temp"
    (761484 'move' call_tmp[761481](761427 call _v _mt[243] _arg1[761354]))
    unknown call_tmp[761486] "expr temp" "maybe param" "maybe type" "temp"
    (761489 'move' call_tmp[761486](761431 call _v _mt[243] _arg2[761355]))
    unknown call_tmp[761491] "expr temp" "maybe param" "maybe type" "temp"
    (761494 'move' call_tmp[761491](761435 call > call_tmp[761481] call_tmp[761486]))
    if call_tmp[761491]
    {
      (761459 'move' ret[761449](761458 'deref' 0))
      gotoReturn _end_<[761447] _end_<[761447]
    }
    (761464 'move' ret[761449](761463 'deref' 0))
    label _end_<[761447]
    (761451 return ret[761449])
  }
  where {
    unknown call_tmp[761496] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761499 'move' call_tmp[761496](761358 'typeof' _arg1[761354]))
    unknown call_tmp[761501] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761504 'move' call_tmp[761501](761360 'typeof' _arg2[761355]))
    unknown call_tmp[761506] "expr temp" "maybe param" "maybe type" "temp"
    (761509 'move' call_tmp[761506](761362 call == call_tmp[761496] call_tmp[761501]))
    unknown call_tmp[761511] "expr temp" "maybe param" "maybe type" "temp"
    (761514 'move' call_tmp[761511](761407 call chpl_fields_are_comparable[761364] _arg1[761354] _arg2[761355]))
    (761411 '&' call_tmp[761506] call_tmp[761511])
  }
  function chpl_fields_are_comparable[761528](arg _arg1[761530]:AtomicBool[45874], arg _arg2[761531]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761549]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761556] "expr temp" "maybe param" "maybe type" "temp"
    (761559 'move' call_tmp[761556](761534 call _v _mt[243] _arg1[761530]))
    unknown call_tmp[761561] "expr temp" "maybe param" "maybe type" "temp"
    (761564 'move' call_tmp[761561](761538 call _v _mt[243] _arg2[761531]))
    unknown call_tmp[761566] "expr temp" "maybe param" "maybe type" "temp"
    (761569 'move' call_tmp[761566](761542 'call resolves' c"<=" call_tmp[761556] call_tmp[761561]))
    (761554 'move' ret[761549](761553 'deref' call_tmp[761566]))
    (761551 return ret[761549])
  }
  function <=[761516](arg _arg1[761518]:AtomicBool[45874], arg _arg2[761519]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761613]:bool[10] "RVV" "temp"
    unknown call_tmp[761630] "expr temp" "maybe param" "maybe type" "temp"
    (761633 'move' call_tmp[761630](761577 call _v _mt[243] _arg1[761518]))
    unknown call_tmp[761635] "expr temp" "maybe param" "maybe type" "temp"
    (761638 'move' call_tmp[761635](761581 call _v _mt[243] _arg2[761519]))
    unknown call_tmp[761640] "expr temp" "maybe param" "maybe type" "temp"
    (761643 'move' call_tmp[761640](761585 call < call_tmp[761630] call_tmp[761635]))
    if call_tmp[761640]
    {
      (761618 'move' ret[761613](761617 'deref' 1))
      gotoReturn _end_<=[761611] _end_<=[761611]
    }
    unknown call_tmp[761645] "expr temp" "maybe param" "maybe type" "temp"
    (761648 'move' call_tmp[761645](761591 call _v _mt[243] _arg1[761518]))
    unknown call_tmp[761650] "expr temp" "maybe param" "maybe type" "temp"
    (761653 'move' call_tmp[761650](761595 call _v _mt[243] _arg2[761519]))
    unknown call_tmp[761655] "expr temp" "maybe param" "maybe type" "temp"
    (761658 'move' call_tmp[761655](761599 call > call_tmp[761645] call_tmp[761650]))
    if call_tmp[761655]
    {
      (761623 'move' ret[761613](761622 'deref' 0))
      gotoReturn _end_<=[761611] _end_<=[761611]
    }
    (761628 'move' ret[761613](761627 'deref' 1))
    label _end_<=[761611]
    (761615 return ret[761613])
  }
  where {
    unknown call_tmp[761660] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761663 'move' call_tmp[761660](761522 'typeof' _arg1[761518]))
    unknown call_tmp[761665] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761668 'move' call_tmp[761665](761524 'typeof' _arg2[761519]))
    unknown call_tmp[761670] "expr temp" "maybe param" "maybe type" "temp"
    (761673 'move' call_tmp[761670](761526 call == call_tmp[761660] call_tmp[761665]))
    unknown call_tmp[761675] "expr temp" "maybe param" "maybe type" "temp"
    (761678 'move' call_tmp[761675](761571 call chpl_fields_are_comparable[761528] _arg1[761518] _arg2[761519]))
    (761575 '&' call_tmp[761670] call_tmp[761675])
  }
  function chpl_fields_are_comparable[761692](arg _arg1[761694]:AtomicBool[45874], arg _arg2[761695]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761713]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761720] "expr temp" "maybe param" "maybe type" "temp"
    (761723 'move' call_tmp[761720](761698 call _v _mt[243] _arg1[761694]))
    unknown call_tmp[761725] "expr temp" "maybe param" "maybe type" "temp"
    (761728 'move' call_tmp[761725](761702 call _v _mt[243] _arg2[761695]))
    unknown call_tmp[761730] "expr temp" "maybe param" "maybe type" "temp"
    (761733 'move' call_tmp[761730](761706 'call resolves' c">" call_tmp[761720] call_tmp[761725]))
    (761718 'move' ret[761713](761717 'deref' call_tmp[761730]))
    (761715 return ret[761713])
  }
  function >[761680](arg _arg1[761682]:AtomicBool[45874], arg _arg2[761683]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761777]:bool[10] "RVV" "temp"
    unknown call_tmp[761794] "expr temp" "maybe param" "maybe type" "temp"
    (761797 'move' call_tmp[761794](761741 call _v _mt[243] _arg1[761682]))
    unknown call_tmp[761799] "expr temp" "maybe param" "maybe type" "temp"
    (761802 'move' call_tmp[761799](761745 call _v _mt[243] _arg2[761683]))
    unknown call_tmp[761804] "expr temp" "maybe param" "maybe type" "temp"
    (761807 'move' call_tmp[761804](761749 call > call_tmp[761794] call_tmp[761799]))
    if call_tmp[761804]
    {
      (761782 'move' ret[761777](761781 'deref' 1))
      gotoReturn _end_>[761775] _end_>[761775]
    }
    unknown call_tmp[761809] "expr temp" "maybe param" "maybe type" "temp"
    (761812 'move' call_tmp[761809](761755 call _v _mt[243] _arg1[761682]))
    unknown call_tmp[761814] "expr temp" "maybe param" "maybe type" "temp"
    (761817 'move' call_tmp[761814](761759 call _v _mt[243] _arg2[761683]))
    unknown call_tmp[761819] "expr temp" "maybe param" "maybe type" "temp"
    (761822 'move' call_tmp[761819](761763 call < call_tmp[761809] call_tmp[761814]))
    if call_tmp[761819]
    {
      (761787 'move' ret[761777](761786 'deref' 0))
      gotoReturn _end_>[761775] _end_>[761775]
    }
    (761792 'move' ret[761777](761791 'deref' 0))
    label _end_>[761775]
    (761779 return ret[761777])
  }
  where {
    unknown call_tmp[761824] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761827 'move' call_tmp[761824](761686 'typeof' _arg1[761682]))
    unknown call_tmp[761829] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761832 'move' call_tmp[761829](761688 'typeof' _arg2[761683]))
    unknown call_tmp[761834] "expr temp" "maybe param" "maybe type" "temp"
    (761837 'move' call_tmp[761834](761690 call == call_tmp[761824] call_tmp[761829]))
    unknown call_tmp[761839] "expr temp" "maybe param" "maybe type" "temp"
    (761842 'move' call_tmp[761839](761735 call chpl_fields_are_comparable[761692] _arg1[761682] _arg2[761683]))
    (761739 '&' call_tmp[761834] call_tmp[761839])
  }
  function chpl_fields_are_comparable[761856](arg _arg1[761858]:AtomicBool[45874], arg _arg2[761859]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761877]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761884] "expr temp" "maybe param" "maybe type" "temp"
    (761887 'move' call_tmp[761884](761862 call _v _mt[243] _arg1[761858]))
    unknown call_tmp[761889] "expr temp" "maybe param" "maybe type" "temp"
    (761892 'move' call_tmp[761889](761866 call _v _mt[243] _arg2[761859]))
    unknown call_tmp[761894] "expr temp" "maybe param" "maybe type" "temp"
    (761897 'move' call_tmp[761894](761870 'call resolves' c">=" call_tmp[761884] call_tmp[761889]))
    (761882 'move' ret[761877](761881 'deref' call_tmp[761894]))
    (761879 return ret[761877])
  }
  function >=[761844](arg _arg1[761846]:AtomicBool[45874], arg _arg2[761847]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761941]:bool[10] "RVV" "temp"
    unknown call_tmp[761958] "expr temp" "maybe param" "maybe type" "temp"
    (761961 'move' call_tmp[761958](761905 call _v _mt[243] _arg1[761846]))
    unknown call_tmp[761963] "expr temp" "maybe param" "maybe type" "temp"
    (761966 'move' call_tmp[761963](761909 call _v _mt[243] _arg2[761847]))
    unknown call_tmp[761968] "expr temp" "maybe param" "maybe type" "temp"
    (761971 'move' call_tmp[761968](761913 call > call_tmp[761958] call_tmp[761963]))
    if call_tmp[761968]
    {
      (761946 'move' ret[761941](761945 'deref' 1))
      gotoReturn _end_>=[761939] _end_>=[761939]
    }
    unknown call_tmp[761973] "expr temp" "maybe param" "maybe type" "temp"
    (761976 'move' call_tmp[761973](761919 call _v _mt[243] _arg1[761846]))
    unknown call_tmp[761978] "expr temp" "maybe param" "maybe type" "temp"
    (761981 'move' call_tmp[761978](761923 call _v _mt[243] _arg2[761847]))
    unknown call_tmp[761983] "expr temp" "maybe param" "maybe type" "temp"
    (761986 'move' call_tmp[761983](761927 call < call_tmp[761973] call_tmp[761978]))
    if call_tmp[761983]
    {
      (761951 'move' ret[761941](761950 'deref' 0))
      gotoReturn _end_>=[761939] _end_>=[761939]
    }
    (761956 'move' ret[761941](761955 'deref' 1))
    label _end_>=[761939]
    (761943 return ret[761941])
  }
  where {
    unknown call_tmp[761988] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761991 'move' call_tmp[761988](761850 'typeof' _arg1[761846]))
    unknown call_tmp[761993] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761996 'move' call_tmp[761993](761852 'typeof' _arg2[761847]))
    unknown call_tmp[761998] "expr temp" "maybe param" "maybe type" "temp"
    (762001 'move' call_tmp[761998](761854 call == call_tmp[761988] call_tmp[761993]))
    unknown call_tmp[762003] "expr temp" "maybe param" "maybe type" "temp"
    (762006 'move' call_tmp[762003](761899 call chpl_fields_are_comparable[761856] _arg1[761846] _arg2[761847]))
    (761903 '&' call_tmp[761998] call_tmp[762003])
  }
  function chpl__defaultHash[762008](arg r[762010]:AtomicBool[45874]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[762023] "RVV" "temp"
    unknown call_tmp[762030] "expr temp" "maybe param" "maybe type" "temp"
    (762033 'move' call_tmp[762030](762012 call _v _mt[243] r[762010]))
    unknown call_tmp[762035] "expr temp" "maybe param" "maybe type" "temp"
    (762038 'move' call_tmp[762035](762016 call chpl__defaultHash call_tmp[762030]))
    (762028 'move' ret[762023](762027 'deref' call_tmp[762035]))
    (762025 return ret[762023])
  }
  type AtomicBool[45874] unknown _v[44717] "no doc"(44716 call externT bool[10])
  function AtomicT[48077](?).init_helper[45963](arg _mt[48081]:_MT[238], arg this[48079]:AtomicT[48077](?), arg value[45960] :
  (370928 call T _mt[243] this[48079])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45981](ref arg obj[45978] :
    unknown call_tmp[606552] "expr temp" "maybe param" "maybe type" "temp", arg value[45984] :
    (370943 call T _mt[243] this[48079]), arg _chpl_cname[45992]:string[26] =
    unknown call_tmp[606561] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505786] "RVV" "temp"
      (505788 return ret[505786])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606568] "expr temp" "maybe param" "maybe type" "temp"
    (606571 'move' call_tmp[606568](370948 call _v _mt[243] this[48079]))
    (46001 call atomic_init call_tmp[606568] value[45960])
    (505790 return _void[55])
  }
  function AtomicT[48077](?).init[46009](arg _mt[48085]:_MT[238], ref arg this[48083]:AtomicT[48077](?), arg T[46007]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454498] "temp" "type variable"
    (454500 'move' tmp[454498] T[46007])
    (454502 'init field' this[48083] c"T" tmp[454498])
    (474221 'end of statement')
    unknown tmp[454506] "temp"
    unknown call_tmp[606573] "expr temp" "maybe param" "maybe type" "temp"
    (606576 'move' call_tmp[606573](454517 '.v' this[48083] c"T"))
    unknown call_tmp[606578] "expr temp" "maybe param" "maybe type" "temp"
    (606581 'move' call_tmp[606578](454509 call externT call_tmp[606573]))
    (454511 'default init var' tmp[454506] call_tmp[606578])
    (454513 '.=' this[48083] c"_v" tmp[454506])
    (474222 'end of statement')
    const default[46030] "dead at end of block" "const" "insert auto destroy"
    (540512 'default init var' default[46030] T[46007])
    (46033 'end of statement')
    (46037 call(370955 call (partial) init_helper _mt[243] this[48083]) default[46030])
    (474223 'end of statement' default[46030])
    (505792 return _void[55])
  }
  function AtomicT[48077](?).init=[46048](arg _mt[48089]:_MT[238], ref arg this[48087]:AtomicT[48077](?), const  ref arg other[46045]:AtomicT[48077](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454520] "temp" "type variable"
    (454522 'move' tmp[454520](46055 call T _mt[243] other[46045]))
    (454524 'init field' this[48087] c"T" tmp[454520])
    (474225 'end of statement')
    unknown tmp[454528] "temp"
    unknown call_tmp[606587] "expr temp" "maybe param" "maybe type" "temp"
    (606590 'move' call_tmp[606587](454539 '.v' this[48087] c"T"))
    unknown call_tmp[606592] "expr temp" "maybe param" "maybe type" "temp"
    (606595 'move' call_tmp[606592](454531 call externT call_tmp[606587]))
    (454533 'default init var' tmp[454528] call_tmp[606592])
    (454535 '.=' this[48087] c"_v" tmp[454528])
    (474226 'end of statement')
    unknown call_tmp[606601] "expr temp" "maybe param" "maybe type" "temp"
    (606604 'move' call_tmp[606601](46075 call(46071 call (partial) read _mt[243] other[46045])))
    (46077 call(370961 call (partial) init_helper _mt[243] this[48087]) call_tmp[606601])
    (505794 return _void[55])
  }
  function AtomicT[48077](?).init=[46091](arg _mt[48093]:_MT[238], ref arg this[48091]:AtomicT[48077](?), arg other[46088] :
  unknown call_tmp[606606] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454542] "temp" "type variable"
    (454544 'move' tmp[454542](46098 'typeof' other[46088]))
    (454546 'init field' this[48091] c"T" tmp[454542])
    (474228 'end of statement')
    unknown tmp[454550] "temp"
    unknown call_tmp[606613] "expr temp" "maybe param" "maybe type" "temp"
    (606616 'move' call_tmp[606613](454561 '.v' this[48091] c"T"))
    unknown call_tmp[606618] "expr temp" "maybe param" "maybe type" "temp"
    (606621 'move' call_tmp[606618](454553 call externT call_tmp[606613]))
    (454555 'default init var' tmp[454550] call_tmp[606618])
    (454557 '.=' this[48091] c"_v" tmp[454550])
    (474229 'end of statement')
    (46113 call(370967 call (partial) init_helper _mt[243] this[48091]) other[46088])
    (505796 return _void[55])
  }
  function AtomicT[48077](?).deinit[46119](arg _mt[48097]:_MT[238], arg this[48095]:AtomicT[48077](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46137](ref arg obj[46134] :
    unknown call_tmp[606627] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46144]:string[26] =
    unknown call_tmp[606634] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505800] "RVV" "temp"
      (505802 return ret[505800])
    }
    { scopeless type
      void[4]
    }
    const tmp[46158] "const" "temp"
    unknown call_tmp[606639] "expr temp" "maybe param" "maybe type" "temp"
    (606642 'move' call_tmp[606639](46155 '_wide_get_locale' this[48095]))
    (46160 'move' tmp[46158](46156 'deref' call_tmp[606639]))
    (933863 call on_fn[933859] tmp[46158])
    function on_fn[933859](const in arg dummy_locale_arg[933861]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606646] "expr temp" "maybe param" "maybe type" "temp"
      (606649 'move' call_tmp[606646](370984 call _v _mt[243] this[48095]))
      (46153 call atomic_destroy call_tmp[606646])
      (933866 return _void[55])
    }
    {
    }
    (505804 return _void[55])
  }
  function AtomicT[48077](?).read[46179](arg _mt[48101]:_MT[238], const arg this[48099]:AtomicT[48077](?), param arg order[46175]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505814] "RVV" "temp"
    function atomic_load[46196](const  ref arg obj[46193] :
    unknown call_tmp[606653] "expr temp" "maybe param" "maybe type" "temp", arg order[46199]:memory_order[186607], arg _chpl_cname[46207]:string[26] =
    unknown call_tmp[606660] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505808] "RVV" "temp"
      (505810 return ret[505808])
    }
    { scopeless type
      (371006 call T _mt[243] this[48099])
    }
    unknown ret[46213] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606669] "expr temp" "maybe param" "maybe type" "temp"
    (606672 'move' call_tmp[606669](371011 call T _mt[243] this[48099]))
    (540514 'default init var' ret[46213] call_tmp[606669])
    (46216 'end of statement')
    const tmp[46233] "const" "temp"
    unknown call_tmp[606674] "expr temp" "maybe param" "maybe type" "temp"
    (606677 'move' call_tmp[606674](46230 '_wide_get_locale' this[48099]))
    (46235 'move' tmp[46233](46231 'deref' call_tmp[606674]))
    (933872 call on_fn[933868] tmp[46233])
    function on_fn[933868](const in arg dummy_locale_arg[933870]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606681] "expr temp" "maybe param" "maybe type" "temp"
      (606684 'move' call_tmp[606681](371018 call _v _mt[243] this[48099]))
      unknown call_tmp[606686] "expr temp" "maybe param" "maybe type" "temp"
      (606689 'move' call_tmp[606686](46225 call c_memory_order order[46175]))
      unknown call_tmp[606691] "expr temp" "maybe param" "maybe type" "temp"
      (606694 'move' call_tmp[606691](46226 call atomic_load call_tmp[606681] call_tmp[606686]))
      (46227 call = ret[46213] call_tmp[606691])
      (474232 'end of statement' ret[46213])
      (933875 return _void[55])
    }
    {
    }
    unknown call_tmp[606698] "expr temp" "maybe param" "maybe type" "temp"
    (606701 'move' call_tmp[606698](505819 call T _mt[243] this[48099]))
    (505823 'move' ret[505814](505822 'coerce' ret[46213] call_tmp[606698]))
    gotoReturn _end_read[505812] _end_read[505812]
    (474234 'end of statement' ret[46213])
    label _end_read[505812]
    (505816 return ret[505814])
  }
  { scopeless type
    (370990 call T _mt[243] this[48099])
  }
  function AtomicT[48077](?).write[46253](arg _mt[48105]:_MT[238], arg this[48103]:AtomicT[48077](?), arg value[46250] :
  (371025 call T _mt[243] this[48103]), param arg order[46260]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505835] "RVV" "temp"
    function atomic_store[46279](ref arg obj[46276] :
    unknown call_tmp[606709] "expr temp" "maybe param" "maybe type" "temp", arg value[46282] :
    (371041 call T _mt[243] this[48103]), arg order[46286]:memory_order[186607], arg _chpl_cname[46294]:string[26] =
    unknown call_tmp[606718] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505829] "RVV" "temp"
      (505831 return ret[505829])
    }
    { scopeless type
      void[4]
    }
    const tmp[46313] "const" "temp"
    unknown call_tmp[606723] "expr temp" "maybe param" "maybe type" "temp"
    (606726 'move' call_tmp[606723](46310 '_wide_get_locale' this[48103]))
    (46315 'move' tmp[46313](46311 'deref' call_tmp[606723]))
    (933881 call on_fn[933877] tmp[46313])
    function on_fn[933877](const in arg dummy_locale_arg[933879]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606730] "expr temp" "maybe param" "maybe type" "temp"
      (606733 'move' call_tmp[606730](371048 call _v _mt[243] this[48103]))
      unknown call_tmp[606735] "expr temp" "maybe param" "maybe type" "temp"
      (606738 'move' call_tmp[606735](46307 call c_memory_order order[46260]))
      (46308 call atomic_store call_tmp[606730] value[46250] call_tmp[606735])
      (933884 return _void[55])
    }
    {
    }
    (505837 return ret[505835])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).exchange[46330](arg _mt[48109]:_MT[238], arg this[48107]:AtomicT[48077](?), arg value[46327] :
  (371055 call T _mt[243] this[48107]), param arg order[46337]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505847] "RVV" "temp"
    function atomic_exchange[46356](ref arg obj[46353] :
    unknown call_tmp[606744] "expr temp" "maybe param" "maybe type" "temp", arg value[46359] :
    (371076 call T _mt[243] this[48107]), arg order[46363]:memory_order[186607], arg _chpl_cname[46371]:string[26] =
    unknown call_tmp[606753] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505841] "RVV" "temp"
      (505843 return ret[505841])
    }
    { scopeless type
      (371082 call T _mt[243] this[48107])
    }
    unknown ret[46377] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606762] "expr temp" "maybe param" "maybe type" "temp"
    (606765 'move' call_tmp[606762](371087 call T _mt[243] this[48107]))
    (540516 'default init var' ret[46377] call_tmp[606762])
    (46380 'end of statement')
    const tmp[46398] "const" "temp"
    unknown call_tmp[606767] "expr temp" "maybe param" "maybe type" "temp"
    (606770 'move' call_tmp[606767](46395 '_wide_get_locale' this[48107]))
    (46400 'move' tmp[46398](46396 'deref' call_tmp[606767]))
    (933890 call on_fn[933886] tmp[46398])
    function on_fn[933886](const in arg dummy_locale_arg[933888]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[606774] "expr temp" "maybe param" "maybe type" "temp"
      (606777 'move' call_tmp[606774](371094 call _v _mt[243] this[48107]))
      unknown call_tmp[606779] "expr temp" "maybe param" "maybe type" "temp"
      (606782 'move' call_tmp[606779](46390 call c_memory_order order[46337]))
      unknown call_tmp[606784] "expr temp" "maybe param" "maybe type" "temp"
      (606787 'move' call_tmp[606784](46391 call atomic_exchange call_tmp[606774] value[46327] call_tmp[606779]))
      (46392 call = ret[46377] call_tmp[606784])
      (474237 'end of statement' ret[46377])
      (933893 return _void[55])
    }
    {
    }
    unknown call_tmp[606791] "expr temp" "maybe param" "maybe type" "temp"
    (606794 'move' call_tmp[606791](505852 call T _mt[243] this[48107]))
    (505856 'move' ret[505847](505855 'coerce' ret[46377] call_tmp[606791]))
    gotoReturn _end_exchange[505845] _end_exchange[505845]
    (474239 'end of statement' ret[46377])
    label _end_exchange[505845]
    (505849 return ret[505847])
  }
  { scopeless type
    (371061 call T _mt[243] this[48107])
  }
  function AtomicT[48077](?).compareExchange[46418](arg _mt[48113]:_MT[238], arg this[48111]:AtomicT[48077](?), ref arg expected[46415] :
  (371102 call T _mt[243] this[48111]), arg desired[46421] :
  (371107 call T _mt[243] this[48111]), param arg order[46429]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505862] "RVV" "temp"
    unknown call_tmp[606804] "expr temp" "maybe param" "maybe type" "temp"
    (606807 'move' call_tmp[606804](46445 call readableOrder order[46429]))
    unknown call_tmp[606809] "expr temp" "maybe param" "maybe type" "temp"
    (606812 'move' call_tmp[606809](46446 call(46435 call (partial) compareExchange _mt[243] this[48111]) expected[46415] desired[46421] order[46429] call_tmp[606804]))
    (505868 'move' ret[505862](505867 'coerce' call_tmp[606809] bool[10]))
    (505864 return ret[505862])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchange[46459](arg _mt[48117]:_MT[238], arg this[48115]:AtomicT[48077](?), ref arg expected[46456] :
  (371117 call T _mt[243] this[48115]), arg desired[46462] :
  (371122 call T _mt[243] this[48115]), param arg success[46466]:memoryOrder[186966], param arg failure[46470]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505878] "RVV" "temp"
    function atomic_compare_exchange_strong[46488](ref arg obj[46485] :
    unknown call_tmp[606820] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46491] :
    (371139 call T _mt[243] this[48115]), arg desired[46495] :
    (371144 call T _mt[243] this[48115]), arg succ[46499]:memory_order[186607], arg fail[46503]:memory_order[186607], arg _chpl_cname[46511]:string[26] =
    unknown call_tmp[606831] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505872] "RVV" "temp"
      (505874 return ret[505872])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46517] "dead at end of block" "insert auto destroy"
    (540518 'default init var' ret[46517] bool[10])
    (46520 'end of statement')
    const tmp[46562] "const" "temp"
    unknown call_tmp[606836] "expr temp" "maybe param" "maybe type" "temp"
    (606839 'move' call_tmp[606836](46559 '_wide_get_locale' this[48115]))
    (46564 'move' tmp[46562](46560 'deref' call_tmp[606836]))
    (933899 call on_fn[933895] tmp[46562])
    function on_fn[933895](const in arg dummy_locale_arg[933897]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown localizedExpected[46523] "dead at end of block" "insert auto destroy"
        (540520 'init var' localizedExpected[46523] expected[46456])
        (46526 'end of statement')
        unknown call_tmp[606843] "expr temp" "maybe param" "maybe type" "temp"
        (606846 'move' call_tmp[606843](371154 call _v _mt[243] this[48115]))
        unknown call_tmp[606848] "expr temp" "maybe param" "maybe type" "temp"
        (606851 'move' call_tmp[606848](46537 call c_memory_order success[46466]))
        unknown call_tmp[606853] "expr temp" "maybe param" "maybe type" "temp"
        (606856 'move' call_tmp[606853](46541 call c_memory_order failure[46470]))
        unknown call_tmp[606858] "expr temp" "maybe param" "maybe type" "temp"
        (606861 'move' call_tmp[606858](46542 call atomic_compare_exchange_strong call_tmp[606843] localizedExpected[46523] desired[46462] call_tmp[606848] call_tmp[606853]))
        (46543 call = ret[46517] call_tmp[606858])
        (474242 'end of statement' ret[46517] localizedExpected[46523])
        unknown call_tmp[606863] "expr temp" "maybe param" "maybe type" "temp"
        (606866 'move' call_tmp[606863](46547 call ! ret[46517]))
        unknown call_tmp[606868] "expr temp" "maybe param" "maybe type" "temp"
        (606871 'move' call_tmp[606868](46554 call _cond_test call_tmp[606863]))
        if call_tmp[606868]
        {
          (46551 call = expected[46456] localizedExpected[46523])
          (474245 'end of statement' localizedExpected[46523])
        }
      }
      (933902 return _void[55])
    }
    {
    }
    (505884 'move' ret[505878](505883 'coerce' ret[46517] bool[10]))
    gotoReturn _end_compareExchange[505876] _end_compareExchange[505876]
    (474247 'end of statement' ret[46517])
    label _end_compareExchange[505876]
    (505880 return ret[505878])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46582](arg _mt[48121]:_MT[238], arg this[48119]:AtomicT[48077](?), ref arg expected[46579] :
  (371167 call T _mt[243] this[48119]), arg desired[46585] :
  (371172 call T _mt[243] this[48119]), param arg order[46593]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505890] "RVV" "temp"
    unknown call_tmp[606879] "expr temp" "maybe param" "maybe type" "temp"
    (606882 'move' call_tmp[606879](46609 call readableOrder order[46593]))
    unknown call_tmp[606884] "expr temp" "maybe param" "maybe type" "temp"
    (606887 'move' call_tmp[606884](46610 call(46599 call (partial) compareExchangeWeak _mt[243] this[48119]) expected[46579] desired[46585] order[46593] call_tmp[606879]))
    (505896 'move' ret[505890](505895 'coerce' call_tmp[606884] bool[10]))
    (505892 return ret[505890])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46623](arg _mt[48125]:_MT[238], arg this[48123]:AtomicT[48077](?), ref arg expected[46620] :
  (371182 call T _mt[243] this[48123]), arg desired[46626] :
  (371187 call T _mt[243] this[48123]), param arg success[46630]:memoryOrder[186966], param arg failure[46634]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505906] "RVV" "temp"
    function atomic_compare_exchange_weak[46652](ref arg obj[46649] :
    unknown call_tmp[606895] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46655] :
    (371204 call T _mt[243] this[48123]), arg desired[46659] :
    (371209 call T _mt[243] this[48123]), arg succ[46663]:memory_order[186607], arg fail[46667]:memory_order[186607], arg _chpl_cname[46675]:string[26] =
    unknown call_tmp[606906] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505900] "RVV" "temp"
      (505902 return ret[505900])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46681] "dead at end of block" "insert auto destroy"
    (540522 'default init var' ret[46681] bool[10])
    (46684 'end of statement')
    const tmp[46726] "const" "temp"
    unknown call_tmp[606911] "expr temp" "maybe param" "maybe type" "temp"
    (606914 'move' call_tmp[606911](46723 '_wide_get_locale' this[48123]))
    (46728 'move' tmp[46726](46724 'deref' call_tmp[606911]))
    (933908 call on_fn[933904] tmp[46726])
    function on_fn[933904](const in arg dummy_locale_arg[933906]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown localizedExpected[46687] "dead at end of block" "insert auto destroy"
        (540524 'init var' localizedExpected[46687] expected[46620])
        (46690 'end of statement')
        unknown call_tmp[606918] "expr temp" "maybe param" "maybe type" "temp"
        (606921 'move' call_tmp[606918](371219 call _v _mt[243] this[48123]))
        unknown call_tmp[606923] "expr temp" "maybe param" "maybe type" "temp"
        (606926 'move' call_tmp[606923](46701 call c_memory_order success[46630]))
        unknown call_tmp[606928] "expr temp" "maybe param" "maybe type" "temp"
        (606931 'move' call_tmp[606928](46705 call c_memory_order failure[46634]))
        unknown call_tmp[606933] "expr temp" "maybe param" "maybe type" "temp"
        (606936 'move' call_tmp[606933](46706 call atomic_compare_exchange_weak call_tmp[606918] localizedExpected[46687] desired[46626] call_tmp[606923] call_tmp[606928]))
        (46707 call = ret[46681] call_tmp[606933])
        (474250 'end of statement' ret[46681] localizedExpected[46687])
        unknown call_tmp[606938] "expr temp" "maybe param" "maybe type" "temp"
        (606941 'move' call_tmp[606938](46711 call ! ret[46681]))
        unknown call_tmp[606943] "expr temp" "maybe param" "maybe type" "temp"
        (606946 'move' call_tmp[606943](46718 call _cond_test call_tmp[606938]))
        if call_tmp[606943]
        {
          (46715 call = expected[46620] localizedExpected[46687])
          (474253 'end of statement' localizedExpected[46687])
        }
      }
      (933911 return _void[55])
    }
    {
    }
    (505912 'move' ret[505906](505911 'coerce' ret[46681] bool[10]))
    gotoReturn _end_compareExchangeWeak[505904] _end_compareExchangeWeak[505904]
    (474255 'end of statement' ret[46681])
    label _end_compareExchangeWeak[505904]
    (505908 return ret[505906])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareAndSwap[46746](arg _mt[48129]:_MT[238], arg this[48127]:AtomicT[48077](?), arg expected[46743] :
  (371232 call T _mt[243] this[48127]), arg desired[46749] :
  (371237 call T _mt[243] this[48127]), param arg order[46757]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505924] "RVV" "temp"
    function atomic_compare_exchange_strong[46776](ref arg obj[46773] :
    unknown call_tmp[606954] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46779] :
    (371253 call T _mt[243] this[48127]), arg desired[46783] :
    (371258 call T _mt[243] this[48127]), arg succ[46787]:memory_order[186607], arg fail[46791]:memory_order[186607], arg _chpl_cname[46799]:string[26] =
    unknown call_tmp[606965] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505918] "RVV" "temp"
      (505920 return ret[505918])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46805] "dead at end of block" "insert auto destroy"
    (540526 'default init var' ret[46805] bool[10])
    (46808 'end of statement')
    const tmp[46840] "const" "temp"
    unknown call_tmp[606970] "expr temp" "maybe param" "maybe type" "temp"
    (606973 'move' call_tmp[606970](46837 '_wide_get_locale' this[48127]))
    (46842 'move' tmp[46840](46838 'deref' call_tmp[606970]))
    (933917 call on_fn[933913] tmp[46840])
    function on_fn[933913](const in arg dummy_locale_arg[933915]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        unknown mutableExpected[46811] "dead at end of block" "insert auto destroy"
        (540528 'init var' mutableExpected[46811] expected[46743])
        (46814 'end of statement')
        unknown call_tmp[606977] "expr temp" "maybe param" "maybe type" "temp"
        (606980 'move' call_tmp[606977](371268 call _v _mt[243] this[48127]))
        unknown call_tmp[606982] "expr temp" "maybe param" "maybe type" "temp"
        (606985 'move' call_tmp[606982](46825 call c_memory_order order[46757]))
        unknown call_tmp[606987] "expr temp" "maybe param" "maybe type" "temp"
        (606990 'move' call_tmp[606987](46830 call readableOrder order[46757]))
        unknown call_tmp[606992] "expr temp" "maybe param" "maybe type" "temp"
        (606995 'move' call_tmp[606992](46832 call c_memory_order call_tmp[606987]))
        unknown call_tmp[606997] "expr temp" "maybe param" "maybe type" "temp"
        (607000 'move' call_tmp[606997](46833 call atomic_compare_exchange_strong call_tmp[606977] mutableExpected[46811] desired[46749] call_tmp[606982] call_tmp[606992]))
        (46834 call = ret[46805] call_tmp[606997])
        (474257 'end of statement' ret[46805] mutableExpected[46811])
      }
      (933920 return _void[55])
    }
    {
    }
    (505930 'move' ret[505924](505929 'coerce' ret[46805] bool[10]))
    gotoReturn _end_compareAndSwap[505922] _end_compareAndSwap[505922]
    (474260 'end of statement' ret[46805])
    label _end_compareAndSwap[505922]
    (505926 return ret[505924])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).fetchAdd[46860](arg _mt[48133]:_MT[238], arg this[48131]:AtomicT[48077](?), arg value[46857] :
  (371278 call T _mt[243] this[48131]), param arg order[46867]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505942] "RVV" "temp"
    function atomic_fetch_add[46902](ref arg obj[46899] :
    unknown call_tmp[607006] "expr temp" "maybe param" "maybe type" "temp", arg operand[46905] :
    (371299 call T _mt[243] this[48131]), arg order[46909]:memory_order[186607], arg _chpl_cname[46917]:string[26] =
    unknown call_tmp[607015] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505936] "RVV" "temp"
      (505938 return ret[505936])
    }
    { scopeless type
      (371305 call T _mt[243] this[48131])
    }
    unknown ret[46923] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607024] "expr temp" "maybe param" "maybe type" "temp"
    (607027 'move' call_tmp[607024](371310 call T _mt[243] this[48131]))
    (540530 'default init var' ret[46923] call_tmp[607024])
    (46926 'end of statement')
    const tmp[46944] "const" "temp"
    unknown call_tmp[607029] "expr temp" "maybe param" "maybe type" "temp"
    (607032 'move' call_tmp[607029](46941 '_wide_get_locale' this[48131]))
    (46946 'move' tmp[46944](46942 'deref' call_tmp[607029]))
    (933926 call on_fn[933922] tmp[46944])
    function on_fn[933922](const in arg dummy_locale_arg[933924]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607036] "expr temp" "maybe param" "maybe type" "temp"
      (607039 'move' call_tmp[607036](371317 call _v _mt[243] this[48131]))
      unknown call_tmp[607041] "expr temp" "maybe param" "maybe type" "temp"
      (607044 'move' call_tmp[607041](46936 call c_memory_order order[46867]))
      unknown call_tmp[607046] "expr temp" "maybe param" "maybe type" "temp"
      (607049 'move' call_tmp[607046](46937 call atomic_fetch_add call_tmp[607036] value[46857] call_tmp[607041]))
      (46938 call = ret[46923] call_tmp[607046])
      (474262 'end of statement' ret[46923])
      (933929 return _void[55])
    }
    {
    }
    unknown call_tmp[607053] "expr temp" "maybe param" "maybe type" "temp"
    (607056 'move' call_tmp[607053](505947 call T _mt[243] this[48131]))
    (505951 'move' ret[505942](505950 'coerce' ret[46923] call_tmp[607053]))
    gotoReturn _end_fetchAdd[505940] _end_fetchAdd[505940]
    (474264 'end of statement' ret[46923])
    label _end_fetchAdd[505940]
    (505944 return ret[505942])
  }
  { scopeless type
    (371284 call T _mt[243] this[48131])
  }
  function AtomicT[48077](?).add[46964](arg _mt[48137]:_MT[238], arg this[48135]:AtomicT[48077](?), arg value[46961] :
  (371325 call T _mt[243] this[48135]), param arg order[46971]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505963] "RVV" "temp"
    function atomic_fetch_add[46990](ref arg obj[46987] :
    unknown call_tmp[607064] "expr temp" "maybe param" "maybe type" "temp", arg operand[46993] :
    (371341 call T _mt[243] this[48135]), arg order[46997]:memory_order[186607], arg _chpl_cname[47005]:string[26] =
    unknown call_tmp[607073] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505957] "RVV" "temp"
      (505959 return ret[505957])
    }
    { scopeless type
      (371347 call T _mt[243] this[48135])
    }
    const tmp[47024] "const" "temp"
    unknown call_tmp[607080] "expr temp" "maybe param" "maybe type" "temp"
    (607083 'move' call_tmp[607080](47021 '_wide_get_locale' this[48135]))
    (47026 'move' tmp[47024](47022 'deref' call_tmp[607080]))
    (933935 call on_fn[933931] tmp[47024])
    function on_fn[933931](const in arg dummy_locale_arg[933933]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607087] "expr temp" "maybe param" "maybe type" "temp"
      (607090 'move' call_tmp[607087](371353 call _v _mt[243] this[48135]))
      unknown call_tmp[607092] "expr temp" "maybe param" "maybe type" "temp"
      (607095 'move' call_tmp[607092](47018 call c_memory_order order[46971]))
      (47019 call atomic_fetch_add call_tmp[607087] value[46961] call_tmp[607092])
      (933938 return _void[55])
    }
    {
    }
    (505965 return ret[505963])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchSub[47041](arg _mt[48141]:_MT[238], arg this[48139]:AtomicT[48077](?), arg value[47038] :
  (371360 call T _mt[243] this[48139]), param arg order[47048]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505975] "RVV" "temp"
    function atomic_fetch_sub[47083](ref arg obj[47080] :
    unknown call_tmp[607101] "expr temp" "maybe param" "maybe type" "temp", arg operand[47086] :
    (371381 call T _mt[243] this[48139]), arg order[47090]:memory_order[186607], arg _chpl_cname[47098]:string[26] =
    unknown call_tmp[607110] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505969] "RVV" "temp"
      (505971 return ret[505969])
    }
    { scopeless type
      (371387 call T _mt[243] this[48139])
    }
    unknown ret[47104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607119] "expr temp" "maybe param" "maybe type" "temp"
    (607122 'move' call_tmp[607119](371392 call T _mt[243] this[48139]))
    (540532 'default init var' ret[47104] call_tmp[607119])
    (47107 'end of statement')
    const tmp[47125] "const" "temp"
    unknown call_tmp[607124] "expr temp" "maybe param" "maybe type" "temp"
    (607127 'move' call_tmp[607124](47122 '_wide_get_locale' this[48139]))
    (47127 'move' tmp[47125](47123 'deref' call_tmp[607124]))
    (933944 call on_fn[933940] tmp[47125])
    function on_fn[933940](const in arg dummy_locale_arg[933942]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607131] "expr temp" "maybe param" "maybe type" "temp"
      (607134 'move' call_tmp[607131](371399 call _v _mt[243] this[48139]))
      unknown call_tmp[607136] "expr temp" "maybe param" "maybe type" "temp"
      (607139 'move' call_tmp[607136](47117 call c_memory_order order[47048]))
      unknown call_tmp[607141] "expr temp" "maybe param" "maybe type" "temp"
      (607144 'move' call_tmp[607141](47118 call atomic_fetch_sub call_tmp[607131] value[47038] call_tmp[607136]))
      (47119 call = ret[47104] call_tmp[607141])
      (474267 'end of statement' ret[47104])
      (933947 return _void[55])
    }
    {
    }
    unknown call_tmp[607148] "expr temp" "maybe param" "maybe type" "temp"
    (607151 'move' call_tmp[607148](505980 call T _mt[243] this[48139]))
    (505984 'move' ret[505975](505983 'coerce' ret[47104] call_tmp[607148]))
    gotoReturn _end_fetchSub[505973] _end_fetchSub[505973]
    (474269 'end of statement' ret[47104])
    label _end_fetchSub[505973]
    (505977 return ret[505975])
  }
  { scopeless type
    (371366 call T _mt[243] this[48139])
  }
  function AtomicT[48077](?).sub[47145](arg _mt[48145]:_MT[238], arg this[48143]:AtomicT[48077](?), arg value[47142] :
  (371407 call T _mt[243] this[48143]), param arg order[47152]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505996] "RVV" "temp"
    function atomic_fetch_sub[47171](ref arg obj[47168] :
    unknown call_tmp[607159] "expr temp" "maybe param" "maybe type" "temp", arg operand[47174] :
    (371423 call T _mt[243] this[48143]), arg order[47178]:memory_order[186607], arg _chpl_cname[47186]:string[26] =
    unknown call_tmp[607168] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505990] "RVV" "temp"
      (505992 return ret[505990])
    }
    { scopeless type
      (371429 call T _mt[243] this[48143])
    }
    const tmp[47205] "const" "temp"
    unknown call_tmp[607175] "expr temp" "maybe param" "maybe type" "temp"
    (607178 'move' call_tmp[607175](47202 '_wide_get_locale' this[48143]))
    (47207 'move' tmp[47205](47203 'deref' call_tmp[607175]))
    (933953 call on_fn[933949] tmp[47205])
    function on_fn[933949](const in arg dummy_locale_arg[933951]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607182] "expr temp" "maybe param" "maybe type" "temp"
      (607185 'move' call_tmp[607182](371435 call _v _mt[243] this[48143]))
      unknown call_tmp[607187] "expr temp" "maybe param" "maybe type" "temp"
      (607190 'move' call_tmp[607187](47199 call c_memory_order order[47152]))
      (47200 call atomic_fetch_sub call_tmp[607182] value[47142] call_tmp[607187])
      (933956 return _void[55])
    }
    {
    }
    (505998 return ret[505996])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchOr[47222](arg _mt[48149]:_MT[238], arg this[48147]:AtomicT[48077](?), arg value[47219] :
  (371442 call T _mt[243] this[48147]), param arg order[47229]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506008] "RVV" "temp"
    unknown call_tmp[607196] "expr temp" "maybe param" "maybe type" "temp"
    (607199 'move' call_tmp[607196](371453 call T _mt[243] this[48147]))
    unknown call_tmp[607201] "expr temp" "maybe param" "maybe type" "temp"
    (607204 'move' call_tmp[607201](47237 call isIntegral call_tmp[607196]))
    unknown call_tmp[607206] "expr temp" "maybe param" "maybe type" "temp"
    (607209 'move' call_tmp[607206](47238 call ! call_tmp[607201]))
    unknown call_tmp[607211] "expr temp" "maybe param" "maybe type" "temp"
    (607214 'move' call_tmp[607211](47261 call _cond_test call_tmp[607206]))
    if call_tmp[607211]
    {
      (47259 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47297](ref arg obj[47294] :
    unknown call_tmp[607218] "expr temp" "maybe param" "maybe type" "temp", arg operand[47300] :
    (371468 call T _mt[243] this[48147]), arg order[47304]:memory_order[186607], arg _chpl_cname[47312]:string[26] =
    unknown call_tmp[607227] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506002] "RVV" "temp"
      (506004 return ret[506002])
    }
    { scopeless type
      (371474 call T _mt[243] this[48147])
    }
    unknown ret[47317] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607236] "expr temp" "maybe param" "maybe type" "temp"
    (607239 'move' call_tmp[607236](371479 call T _mt[243] this[48147]))
    (540534 'default init var' ret[47317] call_tmp[607236])
    (47320 'end of statement')
    const tmp[47338] "const" "temp"
    unknown call_tmp[607241] "expr temp" "maybe param" "maybe type" "temp"
    (607244 'move' call_tmp[607241](47335 '_wide_get_locale' this[48147]))
    (47340 'move' tmp[47338](47336 'deref' call_tmp[607241]))
    (933962 call on_fn[933958] tmp[47338])
    function on_fn[933958](const in arg dummy_locale_arg[933960]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607248] "expr temp" "maybe param" "maybe type" "temp"
      (607251 'move' call_tmp[607248](371486 call _v _mt[243] this[48147]))
      unknown call_tmp[607253] "expr temp" "maybe param" "maybe type" "temp"
      (607256 'move' call_tmp[607253](47330 call c_memory_order order[47229]))
      unknown call_tmp[607258] "expr temp" "maybe param" "maybe type" "temp"
      (607261 'move' call_tmp[607258](47331 call atomic_fetch_or call_tmp[607248] value[47219] call_tmp[607253]))
      (47332 call = ret[47317] call_tmp[607258])
      (474273 'end of statement' ret[47317])
      (933965 return _void[55])
    }
    {
    }
    unknown call_tmp[607265] "expr temp" "maybe param" "maybe type" "temp"
    (607268 'move' call_tmp[607265](506013 call T _mt[243] this[48147]))
    (506017 'move' ret[506008](506016 'coerce' ret[47317] call_tmp[607265]))
    gotoReturn _end_fetchOr[506006] _end_fetchOr[506006]
    (474275 'end of statement' ret[47317])
    label _end_fetchOr[506006]
    (506010 return ret[506008])
  }
  { scopeless type
    (371448 call T _mt[243] this[48147])
  }
  function AtomicT[48077](?).or[47358](arg _mt[48153]:_MT[238], arg this[48151]:AtomicT[48077](?), arg value[47355] :
  (371494 call T _mt[243] this[48151]), param arg order[47365]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506029] "RVV" "temp"
    unknown call_tmp[607276] "expr temp" "maybe param" "maybe type" "temp"
    (607279 'move' call_tmp[607276](371500 call T _mt[243] this[48151]))
    unknown call_tmp[607281] "expr temp" "maybe param" "maybe type" "temp"
    (607284 'move' call_tmp[607281](47373 call isIntegral call_tmp[607276]))
    unknown call_tmp[607286] "expr temp" "maybe param" "maybe type" "temp"
    (607289 'move' call_tmp[607286](47374 call ! call_tmp[607281]))
    unknown call_tmp[607291] "expr temp" "maybe param" "maybe type" "temp"
    (607294 'move' call_tmp[607291](47399 call _cond_test call_tmp[607286]))
    if call_tmp[607291]
    {
      (47397 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47419](ref arg obj[47416] :
    unknown call_tmp[607298] "expr temp" "maybe param" "maybe type" "temp", arg operand[47422] :
    (371515 call T _mt[243] this[48151]), arg order[47426]:memory_order[186607], arg _chpl_cname[47434]:string[26] =
    unknown call_tmp[607307] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506023] "RVV" "temp"
      (506025 return ret[506023])
    }
    { scopeless type
      (371521 call T _mt[243] this[48151])
    }
    const tmp[47452] "const" "temp"
    unknown call_tmp[607314] "expr temp" "maybe param" "maybe type" "temp"
    (607317 'move' call_tmp[607314](47449 '_wide_get_locale' this[48151]))
    (47454 'move' tmp[47452](47450 'deref' call_tmp[607314]))
    (933971 call on_fn[933967] tmp[47452])
    function on_fn[933967](const in arg dummy_locale_arg[933969]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607321] "expr temp" "maybe param" "maybe type" "temp"
      (607324 'move' call_tmp[607321](371527 call _v _mt[243] this[48151]))
      unknown call_tmp[607326] "expr temp" "maybe param" "maybe type" "temp"
      (607329 'move' call_tmp[607326](47446 call c_memory_order order[47365]))
      (47447 call atomic_fetch_or call_tmp[607321] value[47355] call_tmp[607326])
      (933974 return _void[55])
    }
    {
    }
    (506031 return ret[506029])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchAnd[47469](arg _mt[48157]:_MT[238], arg this[48155]:AtomicT[48077](?), arg value[47466] :
  (371534 call T _mt[243] this[48155]), param arg order[47476]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506041] "RVV" "temp"
    unknown call_tmp[607335] "expr temp" "maybe param" "maybe type" "temp"
    (607338 'move' call_tmp[607335](371545 call T _mt[243] this[48155]))
    unknown call_tmp[607340] "expr temp" "maybe param" "maybe type" "temp"
    (607343 'move' call_tmp[607340](47484 call isIntegral call_tmp[607335]))
    unknown call_tmp[607345] "expr temp" "maybe param" "maybe type" "temp"
    (607348 'move' call_tmp[607345](47485 call ! call_tmp[607340]))
    unknown call_tmp[607350] "expr temp" "maybe param" "maybe type" "temp"
    (607353 'move' call_tmp[607350](47508 call _cond_test call_tmp[607345]))
    if call_tmp[607350]
    {
      (47506 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47544](ref arg obj[47541] :
    unknown call_tmp[607357] "expr temp" "maybe param" "maybe type" "temp", arg operand[47547] :
    (371560 call T _mt[243] this[48155]), arg order[47551]:memory_order[186607], arg _chpl_cname[47559]:string[26] =
    unknown call_tmp[607366] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506035] "RVV" "temp"
      (506037 return ret[506035])
    }
    { scopeless type
      (371566 call T _mt[243] this[48155])
    }
    unknown ret[47564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607375] "expr temp" "maybe param" "maybe type" "temp"
    (607378 'move' call_tmp[607375](371571 call T _mt[243] this[48155]))
    (540536 'default init var' ret[47564] call_tmp[607375])
    (47567 'end of statement')
    const tmp[47585] "const" "temp"
    unknown call_tmp[607380] "expr temp" "maybe param" "maybe type" "temp"
    (607383 'move' call_tmp[607380](47582 '_wide_get_locale' this[48155]))
    (47587 'move' tmp[47585](47583 'deref' call_tmp[607380]))
    (933980 call on_fn[933976] tmp[47585])
    function on_fn[933976](const in arg dummy_locale_arg[933978]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607387] "expr temp" "maybe param" "maybe type" "temp"
      (607390 'move' call_tmp[607387](371578 call _v _mt[243] this[48155]))
      unknown call_tmp[607392] "expr temp" "maybe param" "maybe type" "temp"
      (607395 'move' call_tmp[607392](47577 call c_memory_order order[47476]))
      unknown call_tmp[607397] "expr temp" "maybe param" "maybe type" "temp"
      (607400 'move' call_tmp[607397](47578 call atomic_fetch_and call_tmp[607387] value[47466] call_tmp[607392]))
      (47579 call = ret[47564] call_tmp[607397])
      (474280 'end of statement' ret[47564])
      (933983 return _void[55])
    }
    {
    }
    unknown call_tmp[607404] "expr temp" "maybe param" "maybe type" "temp"
    (607407 'move' call_tmp[607404](506046 call T _mt[243] this[48155]))
    (506050 'move' ret[506041](506049 'coerce' ret[47564] call_tmp[607404]))
    gotoReturn _end_fetchAnd[506039] _end_fetchAnd[506039]
    (474282 'end of statement' ret[47564])
    label _end_fetchAnd[506039]
    (506043 return ret[506041])
  }
  { scopeless type
    (371540 call T _mt[243] this[48155])
  }
  function AtomicT[48077](?).and[47605](arg _mt[48161]:_MT[238], arg this[48159]:AtomicT[48077](?), arg value[47602] :
  (371586 call T _mt[243] this[48159]), param arg order[47612]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506062] "RVV" "temp"
    unknown call_tmp[607415] "expr temp" "maybe param" "maybe type" "temp"
    (607418 'move' call_tmp[607415](371592 call T _mt[243] this[48159]))
    unknown call_tmp[607420] "expr temp" "maybe param" "maybe type" "temp"
    (607423 'move' call_tmp[607420](47620 call isIntegral call_tmp[607415]))
    unknown call_tmp[607425] "expr temp" "maybe param" "maybe type" "temp"
    (607428 'move' call_tmp[607425](47621 call ! call_tmp[607420]))
    unknown call_tmp[607430] "expr temp" "maybe param" "maybe type" "temp"
    (607433 'move' call_tmp[607430](47644 call _cond_test call_tmp[607425]))
    if call_tmp[607430]
    {
      (47642 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47664](ref arg obj[47661] :
    unknown call_tmp[607437] "expr temp" "maybe param" "maybe type" "temp", arg operand[47667] :
    (371607 call T _mt[243] this[48159]), arg order[47671]:memory_order[186607], arg _chpl_cname[47679]:string[26] =
    unknown call_tmp[607446] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506056] "RVV" "temp"
      (506058 return ret[506056])
    }
    { scopeless type
      (371613 call T _mt[243] this[48159])
    }
    const tmp[47697] "const" "temp"
    unknown call_tmp[607453] "expr temp" "maybe param" "maybe type" "temp"
    (607456 'move' call_tmp[607453](47694 '_wide_get_locale' this[48159]))
    (47699 'move' tmp[47697](47695 'deref' call_tmp[607453]))
    (933989 call on_fn[933985] tmp[47697])
    function on_fn[933985](const in arg dummy_locale_arg[933987]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607460] "expr temp" "maybe param" "maybe type" "temp"
      (607463 'move' call_tmp[607460](371619 call _v _mt[243] this[48159]))
      unknown call_tmp[607465] "expr temp" "maybe param" "maybe type" "temp"
      (607468 'move' call_tmp[607465](47691 call c_memory_order order[47612]))
      (47692 call atomic_fetch_and call_tmp[607460] value[47602] call_tmp[607465])
      (933992 return _void[55])
    }
    {
    }
    (506064 return ret[506062])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchXor[47714](arg _mt[48165]:_MT[238], arg this[48163]:AtomicT[48077](?), arg value[47711] :
  (371626 call T _mt[243] this[48163]), param arg order[47721]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506074] "RVV" "temp"
    unknown call_tmp[607474] "expr temp" "maybe param" "maybe type" "temp"
    (607477 'move' call_tmp[607474](371637 call T _mt[243] this[48163]))
    unknown call_tmp[607479] "expr temp" "maybe param" "maybe type" "temp"
    (607482 'move' call_tmp[607479](47729 call isIntegral call_tmp[607474]))
    unknown call_tmp[607484] "expr temp" "maybe param" "maybe type" "temp"
    (607487 'move' call_tmp[607484](47730 call ! call_tmp[607479]))
    unknown call_tmp[607489] "expr temp" "maybe param" "maybe type" "temp"
    (607492 'move' call_tmp[607489](47753 call _cond_test call_tmp[607484]))
    if call_tmp[607489]
    {
      (47751 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47789](ref arg obj[47786] :
    unknown call_tmp[607496] "expr temp" "maybe param" "maybe type" "temp", arg operand[47792] :
    (371652 call T _mt[243] this[48163]), arg order[47796]:memory_order[186607], arg _chpl_cname[47804]:string[26] =
    unknown call_tmp[607505] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506068] "RVV" "temp"
      (506070 return ret[506068])
    }
    { scopeless type
      (371658 call T _mt[243] this[48163])
    }
    unknown ret[47809] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607514] "expr temp" "maybe param" "maybe type" "temp"
    (607517 'move' call_tmp[607514](371663 call T _mt[243] this[48163]))
    (540538 'default init var' ret[47809] call_tmp[607514])
    (47812 'end of statement')
    const tmp[47830] "const" "temp"
    unknown call_tmp[607519] "expr temp" "maybe param" "maybe type" "temp"
    (607522 'move' call_tmp[607519](47827 '_wide_get_locale' this[48163]))
    (47832 'move' tmp[47830](47828 'deref' call_tmp[607519]))
    (933998 call on_fn[933994] tmp[47830])
    function on_fn[933994](const in arg dummy_locale_arg[933996]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607526] "expr temp" "maybe param" "maybe type" "temp"
      (607529 'move' call_tmp[607526](371670 call _v _mt[243] this[48163]))
      unknown call_tmp[607531] "expr temp" "maybe param" "maybe type" "temp"
      (607534 'move' call_tmp[607531](47822 call c_memory_order order[47721]))
      unknown call_tmp[607536] "expr temp" "maybe param" "maybe type" "temp"
      (607539 'move' call_tmp[607536](47823 call atomic_fetch_xor call_tmp[607526] value[47711] call_tmp[607531]))
      (47824 call = ret[47809] call_tmp[607536])
      (474287 'end of statement' ret[47809])
      (934001 return _void[55])
    }
    {
    }
    unknown call_tmp[607543] "expr temp" "maybe param" "maybe type" "temp"
    (607546 'move' call_tmp[607543](506079 call T _mt[243] this[48163]))
    (506083 'move' ret[506074](506082 'coerce' ret[47809] call_tmp[607543]))
    gotoReturn _end_fetchXor[506072] _end_fetchXor[506072]
    (474289 'end of statement' ret[47809])
    label _end_fetchXor[506072]
    (506076 return ret[506074])
  }
  { scopeless type
    (371632 call T _mt[243] this[48163])
  }
  function AtomicT[48077](?).xor[47850](arg _mt[48169]:_MT[238], arg this[48167]:AtomicT[48077](?), arg value[47847] :
  (371678 call T _mt[243] this[48167]), param arg order[47857]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506095] "RVV" "temp"
    unknown call_tmp[607554] "expr temp" "maybe param" "maybe type" "temp"
    (607557 'move' call_tmp[607554](371684 call T _mt[243] this[48167]))
    unknown call_tmp[607559] "expr temp" "maybe param" "maybe type" "temp"
    (607562 'move' call_tmp[607559](47865 call isIntegral call_tmp[607554]))
    unknown call_tmp[607564] "expr temp" "maybe param" "maybe type" "temp"
    (607567 'move' call_tmp[607564](47866 call ! call_tmp[607559]))
    unknown call_tmp[607569] "expr temp" "maybe param" "maybe type" "temp"
    (607572 'move' call_tmp[607569](47889 call _cond_test call_tmp[607564]))
    if call_tmp[607569]
    {
      (47887 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47909](ref arg obj[47906] :
    unknown call_tmp[607576] "expr temp" "maybe param" "maybe type" "temp", arg operand[47912] :
    (371699 call T _mt[243] this[48167]), arg order[47916]:memory_order[186607], arg _chpl_cname[47924]:string[26] =
    unknown call_tmp[607585] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506089] "RVV" "temp"
      (506091 return ret[506089])
    }
    { scopeless type
      (371705 call T _mt[243] this[48167])
    }
    const tmp[47942] "const" "temp"
    unknown call_tmp[607592] "expr temp" "maybe param" "maybe type" "temp"
    (607595 'move' call_tmp[607592](47939 '_wide_get_locale' this[48167]))
    (47944 'move' tmp[47942](47940 'deref' call_tmp[607592]))
    (934007 call on_fn[934003] tmp[47942])
    function on_fn[934003](const in arg dummy_locale_arg[934005]:chpl_localeID_t[209294]) : void[4] "on"
    {
      unknown call_tmp[607599] "expr temp" "maybe param" "maybe type" "temp"
      (607602 'move' call_tmp[607599](371711 call _v _mt[243] this[48167]))
      unknown call_tmp[607604] "expr temp" "maybe param" "maybe type" "temp"
      (607607 'move' call_tmp[607604](47936 call c_memory_order order[47857]))
      (47937 call atomic_fetch_xor call_tmp[607599] value[47847] call_tmp[607604])
      (934010 return _void[55])
    }
    {
    }
    (506097 return ret[506095])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).waitFor[47959](arg _mt[48173]:_MT[238], const arg this[48171]:AtomicT[48077](?), arg value[47956] :
  (371718 call T _mt[243] this[48171]), param arg order[47966]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506101] "RVV" "temp"
    const tmp[48048] "const" "temp"
    unknown call_tmp[607611] "expr temp" "maybe param" "maybe type" "temp"
    (607614 'move' call_tmp[607611](48045 '_wide_get_locale' this[48171]))
    (48050 'move' tmp[48048](48046 'deref' call_tmp[607611]))
    (934016 call on_fn[934012] tmp[48048])
    function on_fn[934012](const in arg dummy_locale_arg[934014]:chpl_localeID_t[209294]) : void[4] "on"
    {
      {
        {
          unknown tmp[47991] "temp"
          unknown call_tmp[607618] "expr temp" "maybe param" "maybe type" "temp"
          (607621 'move' call_tmp[607618](48026 call(48023 call (partial) read _mt[243] this[48171])(order = relaxed[186964])))
          unknown call_tmp[607623] "expr temp" "maybe param" "maybe type" "temp"
          (607626 'move' call_tmp[607623](48021 call != call_tmp[607618] value[47956]))
          (48033 'move' tmp[47991](48019 call _cond_test call_tmp[607623]))
          WhileDo[47996]
          {
            {
              (47988 call chpl_task_yield)
            }
            label _continueLabel[47994]
            unknown call_tmp[607630] "expr temp" "maybe param" "maybe type" "temp"
            (607633 'move' call_tmp[607630](48007 call(48004 call (partial) read _mt[243] this[48171])(order = relaxed[186964])))
            unknown call_tmp[607635] "expr temp" "maybe param" "maybe type" "temp"
            (607638 'move' call_tmp[607635](48002 call != call_tmp[607630] value[47956]))
            (48014 'move' tmp[47991](48000 call _cond_test call_tmp[607635]))
            tmp[47991]
          }
          label _breakLabel[47995]
        }
        unknown call_tmp[607640] "expr temp" "maybe param" "maybe type" "temp"
        (607643 'move' call_tmp[607640](48041 call c_memory_order order[47966]))
        (48043 call chpl_atomic_thread_fence call_tmp[607640])
      }
      (934019 return _void[55])
    }
    {
    }
    (506103 return ret[506101])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).writeThis[48064](arg _mt[48177]:_MT[238], const arg this[48175]:AtomicT[48077](?), arg x[48062]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607647] "expr temp" "maybe param" "maybe type" "temp"
    (607650 'move' call_tmp[607647](48069 call(371728 call (partial) read _mt[243] this[48175])))
    (48070 call <~> x[48062] call_tmp[607647])
    (506105 return _void[55])
  }
  function AtomicT[48077](?).T[762040](arg _mt[762042]:_MT[238], arg this[762044]:AtomicT[48077](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[762063] "RVV" "temp" "type variable"
    unknown call_tmp[762077] "expr temp" "maybe param" "maybe type" "temp"
    (762080 'move' call_tmp[762077](762049 'is bound' this[762044] c"T"))
    if call_tmp[762077]
    {
      unknown call_tmp[762082] "expr temp" "maybe param" "maybe type" "temp"
      (762085 'move' call_tmp[762082](762048 '.v' this[762044] c"T"))
      (762068 'move' ret[762063](762067 'deref' call_tmp[762082]))
      gotoReturn _end_T[762061] _end_T[762061]
    }
    {
      (762073 'move' ret[762063](762072 'deref' _uninstantiated[258]))
      gotoReturn _end_T[762061] _end_T[762061]
    }
    label _end_T[762061]
    (762065 return ret[762063])
  }
  function AtomicT[48077](?).T[762087](arg _mt[762089]:_MT[238], arg this[762091]:AtomicT[48077](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[762110] "RVV" "temp" "type variable"
    unknown call_tmp[762124] "expr temp" "maybe param" "maybe type" "temp"
    (762127 'move' call_tmp[762124](762096 'is bound' this[762091] c"T"))
    if call_tmp[762124]
    {
      unknown call_tmp[762129] "expr temp" "maybe param" "maybe type" "temp"
      (762132 'move' call_tmp[762129](762095 '.v' this[762091] c"T"))
      (762115 'move' ret[762110](762114 'deref' call_tmp[762129]))
      gotoReturn _end_T[762108] _end_T[762108]
    }
    {
      (762120 'move' ret[762110](762119 'deref' _uninstantiated[258]))
      gotoReturn _end_T[762108] _end_T[762108]
    }
    label _end_T[762108]
    (762112 return ret[762110])
  }
  function AtomicT[48077](?)._v[762134](arg _mt[762136]:_MT[238], ref arg this[762138]:AtomicT[48077](?)) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[762148] "RVV" "temp"
    unknown call_tmp[762155] "expr temp" "maybe param" "maybe type" "temp"
    (762158 'move' call_tmp[762155](762142 '.' this[762138] c"_v"))
    (762153 'move' ret[762148](762152 'addr of' call_tmp[762155]))
    (762150 return ret[762148])
  }
  function chpl_fields_are_comparable[762172](arg _arg1[762174]:AtomicT[48077](?), arg _arg2[762175]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762193]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762200] "expr temp" "maybe param" "maybe type" "temp"
    (762203 'move' call_tmp[762200](762178 call _v _mt[243] _arg1[762174]))
    unknown call_tmp[762205] "expr temp" "maybe param" "maybe type" "temp"
    (762208 'move' call_tmp[762205](762182 call _v _mt[243] _arg2[762175]))
    unknown call_tmp[762210] "expr temp" "maybe param" "maybe type" "temp"
    (762213 'move' call_tmp[762210](762186 'call resolves' c"==" call_tmp[762200] call_tmp[762205]))
    (762198 'move' ret[762193](762197 'deref' call_tmp[762210]))
    (762195 return ret[762193])
  }
  function ==[762160](arg _arg1[762162]:AtomicT[48077](?), arg _arg2[762163]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762242]:bool[10] "RVV" "temp"
    unknown call_tmp[762254] "expr temp" "maybe param" "maybe type" "temp"
    (762257 'move' call_tmp[762254](762221 call _v _mt[243] _arg1[762162]))
    unknown call_tmp[762259] "expr temp" "maybe param" "maybe type" "temp"
    (762262 'move' call_tmp[762259](762225 call _v _mt[243] _arg2[762163]))
    unknown call_tmp[762264] "expr temp" "maybe param" "maybe type" "temp"
    (762267 'move' call_tmp[762264](762229 call != call_tmp[762254] call_tmp[762259]))
    if call_tmp[762264]
    {
      (762247 'move' ret[762242](762246 'deref' 0))
      gotoReturn _end_==[762240] _end_==[762240]
    }
    (762252 'move' ret[762242](762251 'deref' 1))
    label _end_==[762240]
    (762244 return ret[762242])
  }
  where {
    unknown call_tmp[762269] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762272 'move' call_tmp[762269](762166 'typeof' _arg1[762162]))
    unknown call_tmp[762274] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762277 'move' call_tmp[762274](762168 'typeof' _arg2[762163]))
    unknown call_tmp[762279] "expr temp" "maybe param" "maybe type" "temp"
    (762282 'move' call_tmp[762279](762170 call == call_tmp[762269] call_tmp[762274]))
    unknown call_tmp[762284] "expr temp" "maybe param" "maybe type" "temp"
    (762287 'move' call_tmp[762284](762215 call chpl_fields_are_comparable[762172] _arg1[762162] _arg2[762163]))
    (762219 '&' call_tmp[762279] call_tmp[762284])
  }
  function chpl_fields_are_comparable[762301](arg _arg1[762303]:AtomicT[48077](?), arg _arg2[762304]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762322]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762329] "expr temp" "maybe param" "maybe type" "temp"
    (762332 'move' call_tmp[762329](762307 call _v _mt[243] _arg1[762303]))
    unknown call_tmp[762334] "expr temp" "maybe param" "maybe type" "temp"
    (762337 'move' call_tmp[762334](762311 call _v _mt[243] _arg2[762304]))
    unknown call_tmp[762339] "expr temp" "maybe param" "maybe type" "temp"
    (762342 'move' call_tmp[762339](762315 'call resolves' c"!=" call_tmp[762329] call_tmp[762334]))
    (762327 'move' ret[762322](762326 'deref' call_tmp[762339]))
    (762324 return ret[762322])
  }
  function !=[762289](arg _arg1[762291]:AtomicT[48077](?), arg _arg2[762292]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762371]:bool[10] "RVV" "temp"
    unknown call_tmp[762383] "expr temp" "maybe param" "maybe type" "temp"
    (762386 'move' call_tmp[762383](762350 call _v _mt[243] _arg1[762291]))
    unknown call_tmp[762388] "expr temp" "maybe param" "maybe type" "temp"
    (762391 'move' call_tmp[762388](762354 call _v _mt[243] _arg2[762292]))
    unknown call_tmp[762393] "expr temp" "maybe param" "maybe type" "temp"
    (762396 'move' call_tmp[762393](762358 call != call_tmp[762383] call_tmp[762388]))
    if call_tmp[762393]
    {
      (762376 'move' ret[762371](762375 'deref' 1))
      gotoReturn _end_!=[762369] _end_!=[762369]
    }
    (762381 'move' ret[762371](762380 'deref' 0))
    label _end_!=[762369]
    (762373 return ret[762371])
  }
  where {
    unknown call_tmp[762398] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762401 'move' call_tmp[762398](762295 'typeof' _arg1[762291]))
    unknown call_tmp[762403] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762406 'move' call_tmp[762403](762297 'typeof' _arg2[762292]))
    unknown call_tmp[762408] "expr temp" "maybe param" "maybe type" "temp"
    (762411 'move' call_tmp[762408](762299 call == call_tmp[762398] call_tmp[762403]))
    unknown call_tmp[762413] "expr temp" "maybe param" "maybe type" "temp"
    (762416 'move' call_tmp[762413](762344 call chpl_fields_are_comparable[762301] _arg1[762291] _arg2[762292]))
    (762348 '&' call_tmp[762408] call_tmp[762413])
  }
  function chpl_fields_are_comparable[762430](arg _arg1[762432]:AtomicT[48077](?), arg _arg2[762433]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762451]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762458] "expr temp" "maybe param" "maybe type" "temp"
    (762461 'move' call_tmp[762458](762436 call _v _mt[243] _arg1[762432]))
    unknown call_tmp[762463] "expr temp" "maybe param" "maybe type" "temp"
    (762466 'move' call_tmp[762463](762440 call _v _mt[243] _arg2[762433]))
    unknown call_tmp[762468] "expr temp" "maybe param" "maybe type" "temp"
    (762471 'move' call_tmp[762468](762444 'call resolves' c"<" call_tmp[762458] call_tmp[762463]))
    (762456 'move' ret[762451](762455 'deref' call_tmp[762468]))
    (762453 return ret[762451])
  }
  function <[762418](arg _arg1[762420]:AtomicT[48077](?), arg _arg2[762421]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762515]:bool[10] "RVV" "temp"
    unknown call_tmp[762532] "expr temp" "maybe param" "maybe type" "temp"
    (762535 'move' call_tmp[762532](762479 call _v _mt[243] _arg1[762420]))
    unknown call_tmp[762537] "expr temp" "maybe param" "maybe type" "temp"
    (762540 'move' call_tmp[762537](762483 call _v _mt[243] _arg2[762421]))
    unknown call_tmp[762542] "expr temp" "maybe param" "maybe type" "temp"
    (762545 'move' call_tmp[762542](762487 call < call_tmp[762532] call_tmp[762537]))
    if call_tmp[762542]
    {
      (762520 'move' ret[762515](762519 'deref' 1))
      gotoReturn _end_<[762513] _end_<[762513]
    }
    unknown call_tmp[762547] "expr temp" "maybe param" "maybe type" "temp"
    (762550 'move' call_tmp[762547](762493 call _v _mt[243] _arg1[762420]))
    unknown call_tmp[762552] "expr temp" "maybe param" "maybe type" "temp"
    (762555 'move' call_tmp[762552](762497 call _v _mt[243] _arg2[762421]))
    unknown call_tmp[762557] "expr temp" "maybe param" "maybe type" "temp"
    (762560 'move' call_tmp[762557](762501 call > call_tmp[762547] call_tmp[762552]))
    if call_tmp[762557]
    {
      (762525 'move' ret[762515](762524 'deref' 0))
      gotoReturn _end_<[762513] _end_<[762513]
    }
    (762530 'move' ret[762515](762529 'deref' 0))
    label _end_<[762513]
    (762517 return ret[762515])
  }
  where {
    unknown call_tmp[762562] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762565 'move' call_tmp[762562](762424 'typeof' _arg1[762420]))
    unknown call_tmp[762567] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762570 'move' call_tmp[762567](762426 'typeof' _arg2[762421]))
    unknown call_tmp[762572] "expr temp" "maybe param" "maybe type" "temp"
    (762575 'move' call_tmp[762572](762428 call == call_tmp[762562] call_tmp[762567]))
    unknown call_tmp[762577] "expr temp" "maybe param" "maybe type" "temp"
    (762580 'move' call_tmp[762577](762473 call chpl_fields_are_comparable[762430] _arg1[762420] _arg2[762421]))
    (762477 '&' call_tmp[762572] call_tmp[762577])
  }
  function chpl_fields_are_comparable[762594](arg _arg1[762596]:AtomicT[48077](?), arg _arg2[762597]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762615]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762622] "expr temp" "maybe param" "maybe type" "temp"
    (762625 'move' call_tmp[762622](762600 call _v _mt[243] _arg1[762596]))
    unknown call_tmp[762627] "expr temp" "maybe param" "maybe type" "temp"
    (762630 'move' call_tmp[762627](762604 call _v _mt[243] _arg2[762597]))
    unknown call_tmp[762632] "expr temp" "maybe param" "maybe type" "temp"
    (762635 'move' call_tmp[762632](762608 'call resolves' c"<=" call_tmp[762622] call_tmp[762627]))
    (762620 'move' ret[762615](762619 'deref' call_tmp[762632]))
    (762617 return ret[762615])
  }
  function <=[762582](arg _arg1[762584]:AtomicT[48077](?), arg _arg2[762585]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762679]:bool[10] "RVV" "temp"
    unknown call_tmp[762696] "expr temp" "maybe param" "maybe type" "temp"
    (762699 'move' call_tmp[762696](762643 call _v _mt[243] _arg1[762584]))
    unknown call_tmp[762701] "expr temp" "maybe param" "maybe type" "temp"
    (762704 'move' call_tmp[762701](762647 call _v _mt[243] _arg2[762585]))
    unknown call_tmp[762706] "expr temp" "maybe param" "maybe type" "temp"
    (762709 'move' call_tmp[762706](762651 call < call_tmp[762696] call_tmp[762701]))
    if call_tmp[762706]
    {
      (762684 'move' ret[762679](762683 'deref' 1))
      gotoReturn _end_<=[762677] _end_<=[762677]
    }
    unknown call_tmp[762711] "expr temp" "maybe param" "maybe type" "temp"
    (762714 'move' call_tmp[762711](762657 call _v _mt[243] _arg1[762584]))
    unknown call_tmp[762716] "expr temp" "maybe param" "maybe type" "temp"
    (762719 'move' call_tmp[762716](762661 call _v _mt[243] _arg2[762585]))
    unknown call_tmp[762721] "expr temp" "maybe param" "maybe type" "temp"
    (762724 'move' call_tmp[762721](762665 call > call_tmp[762711] call_tmp[762716]))
    if call_tmp[762721]
    {
      (762689 'move' ret[762679](762688 'deref' 0))
      gotoReturn _end_<=[762677] _end_<=[762677]
    }
    (762694 'move' ret[762679](762693 'deref' 1))
    label _end_<=[762677]
    (762681 return ret[762679])
  }
  where {
    unknown call_tmp[762726] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762729 'move' call_tmp[762726](762588 'typeof' _arg1[762584]))
    unknown call_tmp[762731] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762734 'move' call_tmp[762731](762590 'typeof' _arg2[762585]))
    unknown call_tmp[762736] "expr temp" "maybe param" "maybe type" "temp"
    (762739 'move' call_tmp[762736](762592 call == call_tmp[762726] call_tmp[762731]))
    unknown call_tmp[762741] "expr temp" "maybe param" "maybe type" "temp"
    (762744 'move' call_tmp[762741](762637 call chpl_fields_are_comparable[762594] _arg1[762584] _arg2[762585]))
    (762641 '&' call_tmp[762736] call_tmp[762741])
  }
  function chpl_fields_are_comparable[762758](arg _arg1[762760]:AtomicT[48077](?), arg _arg2[762761]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762779]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762786] "expr temp" "maybe param" "maybe type" "temp"
    (762789 'move' call_tmp[762786](762764 call _v _mt[243] _arg1[762760]))
    unknown call_tmp[762791] "expr temp" "maybe param" "maybe type" "temp"
    (762794 'move' call_tmp[762791](762768 call _v _mt[243] _arg2[762761]))
    unknown call_tmp[762796] "expr temp" "maybe param" "maybe type" "temp"
    (762799 'move' call_tmp[762796](762772 'call resolves' c">" call_tmp[762786] call_tmp[762791]))
    (762784 'move' ret[762779](762783 'deref' call_tmp[762796]))
    (762781 return ret[762779])
  }
  function >[762746](arg _arg1[762748]:AtomicT[48077](?), arg _arg2[762749]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762843]:bool[10] "RVV" "temp"
    unknown call_tmp[762860] "expr temp" "maybe param" "maybe type" "temp"
    (762863 'move' call_tmp[762860](762807 call _v _mt[243] _arg1[762748]))
    unknown call_tmp[762865] "expr temp" "maybe param" "maybe type" "temp"
    (762868 'move' call_tmp[762865](762811 call _v _mt[243] _arg2[762749]))
    unknown call_tmp[762870] "expr temp" "maybe param" "maybe type" "temp"
    (762873 'move' call_tmp[762870](762815 call > call_tmp[762860] call_tmp[762865]))
    if call_tmp[762870]
    {
      (762848 'move' ret[762843](762847 'deref' 1))
      gotoReturn _end_>[762841] _end_>[762841]
    }
    unknown call_tmp[762875] "expr temp" "maybe param" "maybe type" "temp"
    (762878 'move' call_tmp[762875](762821 call _v _mt[243] _arg1[762748]))
    unknown call_tmp[762880] "expr temp" "maybe param" "maybe type" "temp"
    (762883 'move' call_tmp[762880](762825 call _v _mt[243] _arg2[762749]))
    unknown call_tmp[762885] "expr temp" "maybe param" "maybe type" "temp"
    (762888 'move' call_tmp[762885](762829 call < call_tmp[762875] call_tmp[762880]))
    if call_tmp[762885]
    {
      (762853 'move' ret[762843](762852 'deref' 0))
      gotoReturn _end_>[762841] _end_>[762841]
    }
    (762858 'move' ret[762843](762857 'deref' 0))
    label _end_>[762841]
    (762845 return ret[762843])
  }
  where {
    unknown call_tmp[762890] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762893 'move' call_tmp[762890](762752 'typeof' _arg1[762748]))
    unknown call_tmp[762895] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762898 'move' call_tmp[762895](762754 'typeof' _arg2[762749]))
    unknown call_tmp[762900] "expr temp" "maybe param" "maybe type" "temp"
    (762903 'move' call_tmp[762900](762756 call == call_tmp[762890] call_tmp[762895]))
    unknown call_tmp[762905] "expr temp" "maybe param" "maybe type" "temp"
    (762908 'move' call_tmp[762905](762801 call chpl_fields_are_comparable[762758] _arg1[762748] _arg2[762749]))
    (762805 '&' call_tmp[762900] call_tmp[762905])
  }
  function chpl_fields_are_comparable[762922](arg _arg1[762924]:AtomicT[48077](?), arg _arg2[762925]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762943]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762950] "expr temp" "maybe param" "maybe type" "temp"
    (762953 'move' call_tmp[762950](762928 call _v _mt[243] _arg1[762924]))
    unknown call_tmp[762955] "expr temp" "maybe param" "maybe type" "temp"
    (762958 'move' call_tmp[762955](762932 call _v _mt[243] _arg2[762925]))
    unknown call_tmp[762960] "expr temp" "maybe param" "maybe type" "temp"
    (762963 'move' call_tmp[762960](762936 'call resolves' c">=" call_tmp[762950] call_tmp[762955]))
    (762948 'move' ret[762943](762947 'deref' call_tmp[762960]))
    (762945 return ret[762943])
  }
  function >=[762910](arg _arg1[762912]:AtomicT[48077](?), arg _arg2[762913]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[763007]:bool[10] "RVV" "temp"
    unknown call_tmp[763024] "expr temp" "maybe param" "maybe type" "temp"
    (763027 'move' call_tmp[763024](762971 call _v _mt[243] _arg1[762912]))
    unknown call_tmp[763029] "expr temp" "maybe param" "maybe type" "temp"
    (763032 'move' call_tmp[763029](762975 call _v _mt[243] _arg2[762913]))
    unknown call_tmp[763034] "expr temp" "maybe param" "maybe type" "temp"
    (763037 'move' call_tmp[763034](762979 call > call_tmp[763024] call_tmp[763029]))
    if call_tmp[763034]
    {
      (763012 'move' ret[763007](763011 'deref' 1))
      gotoReturn _end_>=[763005] _end_>=[763005]
    }
    unknown call_tmp[763039] "expr temp" "maybe param" "maybe type" "temp"
    (763042 'move' call_tmp[763039](762985 call _v _mt[243] _arg1[762912]))
    unknown call_tmp[763044] "expr temp" "maybe param" "maybe type" "temp"
    (763047 'move' call_tmp[763044](762989 call _v _mt[243] _arg2[762913]))
    unknown call_tmp[763049] "expr temp" "maybe param" "maybe type" "temp"
    (763052 'move' call_tmp[763049](762993 call < call_tmp[763039] call_tmp[763044]))
    if call_tmp[763049]
    {
      (763017 'move' ret[763007](763016 'deref' 0))
      gotoReturn _end_>=[763005] _end_>=[763005]
    }
    (763022 'move' ret[763007](763021 'deref' 1))
    label _end_>=[763005]
    (763009 return ret[763007])
  }
  where {
    unknown call_tmp[763054] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763057 'move' call_tmp[763054](762916 'typeof' _arg1[762912]))
    unknown call_tmp[763059] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763062 'move' call_tmp[763059](762918 'typeof' _arg2[762913]))
    unknown call_tmp[763064] "expr temp" "maybe param" "maybe type" "temp"
    (763067 'move' call_tmp[763064](762920 call == call_tmp[763054] call_tmp[763059]))
    unknown call_tmp[763069] "expr temp" "maybe param" "maybe type" "temp"
    (763072 'move' call_tmp[763069](762965 call chpl_fields_are_comparable[762922] _arg1[762912] _arg2[762913]))
    (762969 '&' call_tmp[763064] call_tmp[763069])
  }
  function chpl__defaultHash[763074](arg r[763076]:AtomicT[48077](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[763098] "RVV" "temp"
    unknown call_tmp[763105] "expr temp" "maybe param" "maybe type" "temp"
    (763108 'move' call_tmp[763105](763084 call _v _mt[243] r[763076]))
    unknown call_tmp[763110] "expr temp" "maybe param" "maybe type" "temp"
    (763113 'move' call_tmp[763110](763088 call chpl__defaultHash call_tmp[763105]))
    unknown call_tmp[763115] "expr temp" "maybe param" "maybe type" "temp"
    (763118 'move' call_tmp[763115](763078 call T _mt[243] r[763076]))
    unknown call_tmp[763120] "expr temp" "maybe param" "maybe type" "temp"
    (763123 'move' call_tmp[763120](763082 call chpl__defaultHash call_tmp[763115]))
    unknown call_tmp[763125] "expr temp" "maybe param" "maybe type" "temp"
    (763128 'move' call_tmp[763125](763090 call chpl__defaultHashCombine call_tmp[763110] call_tmp[763120] 2))
    (763103 'move' ret[763098](763102 'deref' call_tmp[763125]))
    (763100 return ret[763098])
  }
  type AtomicT[48077](?) unknown T[45946] "no doc" "type variable" unknown _v[45953] "no doc"(45952 call externT T[45946])
  function =[48186](ref arg a[48183]:AtomicBool[45874], const  ref arg b[48189]:AtomicBool[45874]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607656] "expr temp" "maybe param" "maybe type" "temp"
    (607659 'move' call_tmp[607656](48201 call(48197 call (partial) read _mt[243] b[48189])))
    (48203 call(48193 call (partial) write _mt[243] a[48183]) call_tmp[607656])
    (506107 return _void[55])
  }
  function =[48214](ref arg a[48211]:AtomicBool[45874], arg b[48216]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48239 call compilerError "Cannot directly assign atomic variables")
    (506109 return _void[55])
  }
  function =[48250](ref arg a[48247]:AtomicT[48077](?), const  ref arg b[48253]:AtomicT[48077](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607665] "expr temp" "maybe param" "maybe type" "temp"
    (607668 'move' call_tmp[607665](48265 call(48261 call (partial) read _mt[243] b[48253])))
    (48267 call(48257 call (partial) write _mt[243] a[48247]) call_tmp[607665])
    (506111 return _void[55])
  }
  function =[48278](ref arg a[48275]:AtomicT[48077](?), arg b[48280]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48285 call compilerError "Cannot directly assign atomic variables")
    (506113 return _void[55])
  }
  function +[48296](arg a[48293]:AtomicT[48077](?), arg b[48298]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506117] "RVV" "temp"
    (48319 call compilerError "Cannot directly add atomic variables")
    (474300 'end of statement')
    (506122 'move' ret[506117](506121 'deref' a[48293]))
    (506119 return ret[506117])
  }
  function -[48333](arg a[48330]:AtomicT[48077](?), arg b[48335]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506126] "RVV" "temp"
    (48356 call compilerError "Cannot directly subtract atomic variables")
    (474302 'end of statement')
    (506131 'move' ret[506126](506130 'deref' a[48330]))
    (506128 return ret[506126])
  }
  function *[48370](arg a[48367]:AtomicT[48077](?), arg b[48372]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506135] "RVV" "temp"
    (48393 call compilerError "Cannot directly multiply atomic variables")
    (474304 'end of statement')
    (506140 'move' ret[506135](506139 'deref' a[48367]))
    (506137 return ret[506135])
  }
  function /[48407](arg a[48404]:AtomicT[48077](?), arg b[48409]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506144] "RVV" "temp"
    (48430 call compilerError "Cannot directly divide atomic variables")
    (474306 'end of statement')
    (506149 'move' ret[506144](506148 'deref' a[48404]))
    (506146 return ret[506144])
  }
  function %[48444](arg a[48441]:AtomicT[48077](?), arg b[48446]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506153] "RVV" "temp"
    (48451 call compilerError "Cannot directly divide atomic variables")
    (474308 'end of statement')
    (506158 'move' ret[506153](506157 'deref' a[48441]))
    (506155 return ret[506153])
  }
  (354947 'used modules list'(43963 'use' ChapelBase[307])(43967 'use' MemConsistency[186602]))
}