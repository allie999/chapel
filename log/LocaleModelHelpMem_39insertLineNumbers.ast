AST dump for LocaleModelHelpMem after pass insertLineNumbers.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[416111](const in arg _ln[2298948]:int(64)[13], in arg _fn[2298950]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_LocaleModelHelpMem_p[2282810]
    {
      goto _exit_chpl__init_LocaleModelHelpMem[2282847] _exit_chpl__init_LocaleModelHelpMem[2282847]
    }
    val modFormatStr[2282818]:c_string[19] "temp"
    val modStr[2282819]:c_string[19] "temp"
    ref refIndentLevel[2282833]:int(32)[95] "temp"
    (2282826 'move' modFormatStr[2282818] c"%*s\n")
    (2282828 'move' modStr[2282819] c"LocaleModelHelpMem")
    (2282831 call printModuleInit[20426] modFormatStr[2282818] modStr[2282819] 18 _ln[2298948] _fn[2298950])
    (2282837 'move' refIndentLevel[2282833](2282836 'addr of' moduleInitLevel[20416]))
    (2282840 '+=' refIndentLevel[2282833] 1)
    (2282816 'move' chpl__init_LocaleModelHelpMem_p[2282810] 1)
    {
      (2280945 call chpl__init_SysCTypes[415961] _ln[2298948] _fn[2298950])
    }
    (2282843 '-=' refIndentLevel[2282833] 1)
    label _endchpl__init_LocaleModelHelpMem[2282849]
    label _exit_chpl__init_LocaleModelHelpMem[2282847]
    (524213 return _void[55])
  }
  function chpl_memhook_md_num[187739]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524100]:int(16)[90] "RVV" "temp"
    (524102 return ret[524100])
  }
  function chpl_here_alloc[187754](const in arg size[187751]:int(64)[13], const in arg md[187757]:int(16)[90], const in arg _ln[2291118]:int(64)[13], in arg _fn[2291120]:int(32)[95]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4772[2277632]:string[26] "temp"
    (2277633 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2070244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070246 'move' call_tmp[2070244](2070248 '<' size[187751] 0))
    if call_tmp[2070244]
    {
      (2070254 call safeCastCheckHalt[210132] "casting int(64) less than 0 to uint(64)" _ln[2291118] _fn[2291120])
    }
    const-val call_tmp[2070257]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070259 'move' call_tmp[2070257](2070261 'cast' uint(64)[115] size[187751] _ln[2291118] _fn[2291120]))
    const-val call_tmp[690747]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690750 'move' call_tmp[690747](187790 call chpl_memhook_md_num[187739]))
    const-val call_tmp[2125784]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125786 'move' call_tmp[2125784](2125788 '+' md[187757] call_tmp[690747]))
    const-val call_tmp[690757]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690760 'move' call_tmp[690757](187793 call chpl_mem_alloc[187767] call_tmp[2070257] call_tmp[2125784] _ln[2291118] _fn[2291120]))
    (524114 return call_tmp[690757])
  }
  function chpl_here_alloc[1077523](const in arg size[1077525]:uint(64)[115], const in arg md[1077529]:int(16)[90], const in arg _ln[2306244]:int(64)[13], in arg _fn[2306246]:int(32)[95]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[1077569]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1077571 'move' call_tmp[1077569](1077574 call chpl_memhook_md_num[187739]))
    const-val call_tmp[2125794]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125796 'move' call_tmp[2125794](2125798 '+' md[1077529] call_tmp[1077569]))
    const-val call_tmp[1077583]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1077585 'move' call_tmp[1077583](1077588 call chpl_mem_alloc[1077541] size[1077525] call_tmp[2125794] _ln[2306244] _fn[2306246]))
    (1077596 return call_tmp[1077583])
  }
  function chpl_here_calloc[1235260](const in arg size[1235262]:uint(64)[115], const in arg number[1235264]:int(64)[13], const in arg md[1235268]:int(16)[90], const in arg _ln[2291136]:int(64)[13], in arg _fn[2291138]:int(32)[95]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val local__str_literal_4772[2279130]:string[26] "temp"
    (2279131 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2070451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070453 'move' call_tmp[2070451](2070455 '<' number[1235264] 0))
    if call_tmp[2070451]
    {
      (2070461 call safeCastCheckHalt[210132] "casting int(64) less than 0 to uint(64)" _ln[2291136] _fn[2291138])
    }
    const-val call_tmp[2070464]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070466 'move' call_tmp[2070464](2070468 'cast' uint(64)[115] number[1235264] _ln[2291136] _fn[2291138]))
    const-val call_tmp[1235324]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1235326 'move' call_tmp[1235324](1235329 call chpl_memhook_md_num[187739]))
    const-val call_tmp[2125804]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125806 'move' call_tmp[2125804](2125808 '+' md[1235268] call_tmp[1235324]))
    const-val call_tmp[1235338]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1235340 'move' call_tmp[1235338](1235343 call chpl_mem_calloc[1235282] call_tmp[2070464] size[1235262] call_tmp[2125804] _ln[2291136] _fn[2291138]))
    (1235352 return call_tmp[1235338])
  }
  function chpl_here_realloc[965900](const in arg ptr[965902]:c_void_ptr[149], const in arg size[965904]:int(64)[13], const in arg md[965908]:int(16)[90], const in arg _ln[2291130]:int(64)[13], in arg _fn[2291132]:int(32)[95]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4772[2278013]:string[26] "temp"
    (2278014 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2070313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070315 'move' call_tmp[2070313](2070317 '<' size[965904] 0))
    if call_tmp[2070313]
    {
      (2070323 call safeCastCheckHalt[210132] "casting int(64) less than 0 to uint(64)" _ln[2291130] _fn[2291132])
    }
    const-val call_tmp[2070326]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070328 'move' call_tmp[2070326](2070330 'cast' uint(64)[115] size[965904] _ln[2291130] _fn[2291132]))
    const-val call_tmp[965950]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (965952 'move' call_tmp[965950](965955 call chpl_memhook_md_num[187739]))
    const-val call_tmp[2125774]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125776 'move' call_tmp[2125774](2125778 '+' md[965908] call_tmp[965950]))
    const-val call_tmp[965964]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (965966 'move' call_tmp[965964](965969 call chpl_mem_realloc[965920] ptr[965902] call_tmp[2070326] call_tmp[2125774] _ln[2291130] _fn[2291132]))
    (965978 return call_tmp[965964])
  }
  function chpl_here_good_alloc_size[947621](const in arg min_size[947623]:int(64)[13], const in arg _ln[2291124]:int(64)[13], in arg _fn[2291126]:int(32)[95]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4783[2277989]:string[26] "temp"
    (2277990 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4772[2277983]:string[26] "temp"
    (2277984 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2070267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070269 'move' call_tmp[2070267](2070271 '<' min_size[947623] 0))
    if call_tmp[2070267]
    {
      (2070277 call safeCastCheckHalt[210132] "casting int(64) less than 0 to uint(64)" _ln[2291124] _fn[2291126])
    }
    const-val call_tmp[2070280]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070282 'move' call_tmp[2070280](2070284 'cast' uint(64)[115] min_size[947623] _ln[2291124] _fn[2291126]))
    const-val call_tmp[947660]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (947662 'move' call_tmp[947660](947665 call chpl_mem_good_alloc_size[947636] call_tmp[2070280] _ln[2291124] _fn[2291126]))
    const-val call_tmp[2131103]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131105 'move' call_tmp[2131103](2131107 '>' call_tmp[947660] 9223372036854775807))
    if call_tmp[2131103]
    {
      (2131113 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)" _ln[2291124] _fn[2291126])
    }
    const-val call_tmp[2131116]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2131118 'move' call_tmp[2131116](2131120 'cast' int(64)[13] call_tmp[947660] _ln[2291124] _fn[2291126]))
    (947694 return call_tmp[2131116])
  }
  function chpl_here_free[188093](const in arg ptr[188090]:c_void_ptr[149], const in arg _ln[2305840]:int(64)[13], in arg _fn[2305842]:int(32)[95]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524209]:void[4] "dead after last mention" "RVV" "temp"
    (188112 call chpl_mem_free[188102] ptr[188090] _ln[2305840] _fn[2305842])
    (524211 return ret[524209])
  }
  function chpl_mem_alloc[187767](const in arg size[187764]:uint(64)[115], const in arg md[187770]:int(16)[90], const in arg _ln[2298764]:int(64)[13], in arg _fn[2298766]:int(32)[95]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524106]:c_void_ptr[149] "RVV" "temp"
    (524108 return ret[524106])
  }
  function chpl_mem_free[188102](const in arg ptr[188099]:c_void_ptr[149], const in arg _ln[2298768]:int(64)[13], in arg _fn[2298770]:int(32)[95]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524203]:void[4] "RVV" "temp"
    (524205 return ret[524203])
  }
  function chpl_mem_good_alloc_size[947636](const in arg min_size[947640]:uint(64)[115], const in arg _ln[2299052]:int(64)[13], in arg _fn[2299054]:int(32)[95]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[947643]:uint(64)[115] "RVV" "temp"
    (947645 return ret[947643])
  }
  function chpl_mem_realloc[965920](const in arg ptr[965922]:c_void_ptr[149], const in arg size[965926]:uint(64)[115], const in arg md[965930]:int(16)[90], const in arg _ln[2299056]:int(64)[13], in arg _fn[2299058]:int(32)[95]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[965933]:c_void_ptr[149] "RVV" "temp"
    (965935 return ret[965933])
  }
  function chpl_mem_alloc[1077541](const in arg size[1077545]:uint(64)[115], const in arg md[1077549]:int(16)[90], const in arg _ln[2299064]:int(64)[13], in arg _fn[2299066]:int(32)[95]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1077552]:c_void_ptr[149] "RVV" "temp"
    (1077554 return ret[1077552])
  }
  function chpl_mem_calloc[1235282](const in arg number[1235286]:uint(64)[115], const in arg size[1235290]:uint(64)[115], const in arg md[1235294]:int(16)[90], const in arg _ln[2299072]:int(64)[13], in arg _fn[2299074]:int(32)[95]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1235297]:c_void_ptr[149] "RVV" "temp"
    (1235299 return ret[1235297])
  }
}