AST dump for SharedObject after pass cleanup.
Module use list: 

{
  (41672 'use' ChapelError)
  (41674 'use' Atomics)
  (41675 'use' ChapelBase)
  (41678 'use' OwnedObject)
  function ReferenceCount[41754].init[41690](arg _mt[41758]:_MT[238], arg this[41756]:ReferenceCount[41754]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (41697 call(41693 call . this c"complete"))
    (41708 call(41703 call . count c"write") 1)
  }
  function ReferenceCount[41754].retain[41714](arg _mt[41762]:_MT[238], arg this[41760]:ReferenceCount[41754]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (41722 call(41717 call . count c"add") 1)
  }
  function ReferenceCount[41754].release[41729](arg _mt[41766]:_MT[238], arg this[41764]:ReferenceCount[41754]) : _unknown[51] "method" "primary method"
  {
    unknown oldValue[41740](41739 call(41734 call . count c"fetchSub") 1)
    (41743 'end of statement')
    (41749 return(41747 call - oldValue 1))
  }
  type ReferenceCount[41754] unknown count[41684](41682 call chpl__atomicType int[13])
  function _shared[32](?).chpl_forwarding_expr2[41784](arg _mt[42959]:_MT[238], arg this[42957]:_shared[32](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (41786 return(41783 call borrow))
  }
  function _shared[32](?).init[41801](arg _mt[42963]:_MT[238], arg this[42961]:_shared[32](?), arg chpl_t[41799]:_any[178](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    if(41830 call _cond_test(41807 call !(41806 call isClass chpl_t)))
    {
      (41828 call compilerError "shared only works with classes")
    }
    (41844 call =(41837 call . this c"chpl_t")(41843 call _to_borrowed chpl_t))
    (41852 call =(41848 call . this c"chpl_p") nil[44])
    (41862 call =(41858 call . this c"chpl_pn") nil[44])
  }
  function _shared[32](?).init[41873](arg _mt[42967]:_MT[238], arg this[42965]:_shared[32](?), arg p[41870] :
  borrowed[211](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (41894 call compilerError "cannot initialize shared from a borrow")
    (41906 call(41898 call . this c"init")(41904 call _to_unmanaged p))
  }
  function _shared[32](?).init[41916](arg _mt[42971]:_MT[238], arg this[42969]:_shared[32](?), arg p[41913] :
  unmanaged[220](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (41927 call =(41919 call . this c"chpl_t")(41926 call _to_borrowed(41924 'typeof' p)))
    unknown rc[41935] nil[44](41933 'to unmanaged class from unknown'(41932 'to nilable class from type' ReferenceCount))
    (41938 'end of statement')
    if(41953 call _cond_test(41941 call != p nil[44]))
    {
      (41950 call = rc(41946 'new'(_chpl_manager = unmanaged[220](?))(41949 call ReferenceCount)))
    }
    (41966 call =(41959 call . this c"chpl_p")(41965 call _to_borrowed p))
    (41974 call =(41970 call . this c"chpl_pn") rc)
    (41982 call(41978 call . this c"complete"))
  }
  function _shared[32](?).init[41993](arg _mt[42975]:_MT[238], arg this[42973]:_shared[32](?), arg p[41990] :
  unknown T[41988]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (42024 call compilerError "shared only works with classes")
    (42032 call =(42028 call . this c"chpl_t") T)
    (42040 call =(42036 call . this c"chpl_p") p)
  }
  where {
    (42019 call &&(42010 call &&(42000 call ==(41998 call isClass T) 0)(42008 call ==(354240 'is_subtype' _shared T) 0))(42017 call ==(42015 call isIterator p) 0))
  }
  function _shared[32](?).init[42052](arg _mt[42979]:_MT[238], arg this[42977]:_shared[32](?), in arg take[42049] :
  _owned) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown p[42060](42059 call(42055 call . take c"release"))
    (42063 'end of statement')
    (42090 call =(42066 call . this c"chpl_t")(42087 IfExpr (42075 call ==(42071 call .(42070 'typeof' this) c"chpl_t") ?[260]) then
    { scopeless
      (42081 call _to_borrowed(42079 'typeof' p))
    } else
    { scopeless
      (42084 call .(42083 'typeof' this) c"chpl_t")
    } ))
    if(42104 call _cond_test(42097 call !(42096 call isClass p)))
    {
      (42102 call compilerError "shared only works with classes")
    }
    unknown rc[42113] nil[44](42111 'to unmanaged class from unknown'(42110 'to nilable class from type' ReferenceCount))
    (42116 'end of statement')
    if(42131 call _cond_test(42119 call != p nil[44]))
    {
      (42128 call = rc(42124 'new'(_chpl_manager = unmanaged[220](?))(42127 call ReferenceCount)))
    }
    (42141 call =(42137 call . this c"chpl_p") p)
    (42149 call =(42145 call . this c"chpl_pn") rc)
    (42157 call(42153 call . this c"complete"))
  }
  function _shared[32](?).init[42167](arg _mt[42983]:_MT[238], arg this[42981]:_shared[32](?), arg _private[42164] :
  bool[10], arg t[42169]:_any[178](?), ref arg src[42172] :
  _shared) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (42180 call =(42176 call . this c"chpl_t") t)
    (42201 call =(42185 call . this c"chpl_p")(42199 call _cast(42198 call _to_nilable(42196 call _to_unmanaged t))(42189 call . src c"chpl_p")))
    (42212 call =(42205 call . this c"chpl_pn")(42209 call . src c"chpl_pn"))
    (42220 call =(42216 call . src c"chpl_p") nil[44])
    (42228 call =(42224 call . src c"chpl_pn") nil[44])
  }
  function _shared[32](?).init[42239](arg _mt[42987]:_MT[238], arg this[42985]:_shared[32](?), arg _private[42236] :
  bool[10], arg t[42241]:_any[178](?), arg p[42243]:_any[178](?), arg pn[42245]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ptr[42257](42255 call _cast(42254 call _to_nilable(42252 call _to_unmanaged t)) p)
    (42260 'end of statement')
    unknown count[42263] pn
    (42266 'end of statement')
    if(42287 call _cond_test(42269 call != ptr nil[44]))
    {
      (42278 call(42274 call .(42272 call postfix! count) c"retain"))
    }
    {
      (42283 call = count nil[44])
    }
    (42296 call =(42292 call . this c"chpl_t") t)
    (42304 call =(42300 call . this c"chpl_p") ptr)
    (42312 call =(42308 call . this c"chpl_pn") count)
  }
  function _shared[32](?).init=[42323](arg _mt[42991]:_MT[238], arg this[42989]:_shared[32](?), in arg take[42320] :
  _owned) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    if(42359 call _cond_test(42334 call &&(42329 call isNonNilableClass(42327 'typeof' this))(42333 call isNilableClass take)))
    {
      (42357 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (42371 call(42366 call . this c"init") take)
  }
  function _shared[32](?).init=[42381](arg _mt[42995]:_MT[238], arg this[42993]:_shared[32](?), const  ref arg src[42378] :
  _shared) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(42399 call _cond_test(42392 call &&(42387 call isNonNilableClass(42385 'typeof' this))(42391 call isNilableClass src)))
    {
      (42397 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    if(42437 call _cond_test(42418 call ==(354241 'is_coercible'(42413 call .(42412 'typeof' this) c"chpl_t")(42407 call . src c"chpl_t")) 0))
    {
      (42435 call compilerError "cannot coerce '"(42426 call _cast string[26](42424 'typeof' src)) "' to '"(42432 call _cast string[26](42430 'typeof' this)) "' in initialization")
    }
    (42451 call =(42443 call . this c"chpl_t")(42448 call .(42447 'typeof' this) c"chpl_t"))
    (42462 call =(42455 call . this c"chpl_p")(42459 call . src c"chpl_p"))
    (42473 call =(42466 call . this c"chpl_pn")(42470 call . src c"chpl_pn"))
    (42481 call(42477 call . this c"complete"))
    if(42502 call _cond_test(42488 call !=(42484 call . this c"chpl_pn") nil[44]))
    {
      (42500 call(42496 call .(42494 call postfix!(42491 call . this c"chpl_pn")) c"retain"))
    }
  }
  function _shared[32](?).init=[42515](arg _mt[42999]:_MT[238], arg this[42997]:_shared[32](?), arg src[42512] :
  borrowed[211](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (42536 call compilerError "cannot create a shared variable from a borrowed class instance")
    (42544 call =(42540 call . this c"chpl_t") int[13])
  }
  function _shared[32](?).init=[42555](arg _mt[43003]:_MT[238], arg this[43001]:_shared[32](?), arg src[42552] :
  unmanaged[220](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (42576 call compilerError "cannot create a shared variable from an unmanaged class instance")
    (42584 call =(42580 call . this c"chpl_t") int[13])
  }
  function _shared[32](?).init=[42595](arg _mt[43007]:_MT[238], arg this[43005]:_shared[32](?), arg src[42592] :
  _nilType) : _unknown[51] "leaves this nil" "method" "primary method" "no doc" "no return value for void"
  {
    (42607 call(42598 call . this c"init")(42603 call .(42602 'typeof' this) c"chpl_t"))
    if(42635 call _cond_test(42613 call isNonNilableClass chpl_t))
    {
      (42633 call compilerError "Assigning non-nilable shared to nil")
    }
  }
  function _shared[32](?).doClear[42644](arg _mt[43011]:_MT[238], ref arg this[43009]:_shared[32](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    if(42691 call _cond_test(42654 call &&(42648 call != chpl_p nil[44])(42652 call != chpl_pn nil[44])))
    {
      unknown count[42664](42663 call(42659 call .(42657 call postfix! chpl_pn) c"release"))
      (42667 'end of statement')
      if(42687 call _cond_test(42671 call == count 0))
      {
        (42678 call chpl__delete(42676 call _to_unmanaged chpl_p))
        (42684 call chpl__delete chpl_pn)
      }
    }
    (42698 call = chpl_p nil[44])
    (42703 call = chpl_pn nil[44])
  }
  function _shared[32](?).create[42712](arg _mt[43015]:_MT[238], arg this[43013]:_shared[32](?), arg source[42710]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (42738 call compilerError "cannot create a 'shared' from "(42736 call _cast string[26](42734 'typeof' source)))
  }
  function _shared[32](?).create[42749](arg _mt[43019]:_MT[238], arg this[43017]:_shared[32](?), in arg take[42746] :
  _owned) : _unknown[51] "inline" "method" "primary method"
  {
    unknown result[42753] take _shared
    (42756 'end of statement')
    (42759 return result)
  }
  function _shared[32](?).create[42769](arg _mt[43023]:_MT[238], arg this[43021]:_shared[32](?), in arg src[42766] :
  _shared) : _unknown[51] "inline" "method" "primary method"
  {
    (42772 return src)
  }
  function _shared[32](?).create[42783](arg _mt[43027]:_MT[238], arg this[43025]:_shared[32](?), arg p[42780] :
  unmanaged[220](?)) : _unknown[51] "inline" "method" "primary method" "unsafe"
  {
    unknown result[42790](42788 call _cast _shared(42786 'typeof' p))
    (42793 'end of statement')
    (42801 call(42796 call . result c"retain") p)
    (42804 return result)
  }
  function _shared[32](?).deinit[42810](arg _mt[43031]:_MT[238], arg this[43029]:_shared[32](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    if(42821 call _cond_test(42815 call isClass chpl_p))
    {
      (42818 call doClear)
    }
  }
  function _shared[32](?).retain[42834](arg _mt[43035]:_MT[238], ref arg this[43033]:_shared[32](?), arg newPtr[42831] :
  unmanaged[220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(42874 call _cond_test(42842 call !(354242 'is_coercible' chpl_t(42838 'typeof' newPtr))))
    {
      (42872 call compilerError(42869 call +(42866 call +(42857 call +(42854 call +(42851 call + "cannot retain '"(42849 call _cast string[26](42847 'typeof' newPtr))) "' ") "(expected '")(42864 call _cast string[26](42862 call _to_unmanaged chpl_t))) "')"))
    }
    (42882 call doClear)
    (42889 call =(42885 call . this c"chpl_p") newPtr)
    if(42910 call _cond_test(42894 call != newPtr nil[44]))
    {
      (42906 call =(42897 call . this c"chpl_pn")(42902 'new'(_chpl_manager = unmanaged[220](?))(42905 call ReferenceCount)))
    }
  }
  function _shared[32](?).clear[42918](arg _mt[43039]:_MT[238], ref arg this[43037]:_shared[32](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    (42922 call doClear)
  }
  function _shared[32](?).borrow[42929](arg _mt[43043]:_MT[238], arg this[43041]:_shared[32](?)) : _unknown[51] "nil from this" "method" "primary method"
  {
    if(42948 call _cond_test(42936 call ==(42934 call _to_nilable chpl_t) chpl_t))
    {
      (42939 return chpl_p)
    }
    {
      (42945 return(42943 call postfix! chpl_p))
    }
  }
  type _shared[32](?) unknown chpl_t[41770] "no doc" "type variable" unknown chpl_p[41777] "no doc" "owned"(41776 'to nilable class' chpl_t) unknown chpl_pn[41793] "no doc" "owned"(41792 'to unmanaged class from unknown'(41791 'to nilable class from type' ReferenceCount)) forwarding ( )
  function =[43052](ref arg lhs[43049] :
  _shared, arg rhs[43055] :
  _shared) : _unknown[51] "assignop" "no return value for void"
  {
    if(43089 call _cond_test(43075 call !=(43071 call . rhs c"chpl_pn") nil[44]))
    {
      (43087 call(43083 call .(43081 call postfix!(43078 call . rhs c"chpl_pn")) c"retain"))
    }
    const chpl_p_tmp[43099] "const"(43096 call . rhs c"chpl_p")
    (43102 'end of statement')
    const chpl_pn_tmp[43107] "const"(43104 call . rhs c"chpl_pn")
    (43110 'end of statement')
    (43118 call(43114 call . lhs c"doClear"))
    (43125 call =(43121 call . lhs c"chpl_p") chpl_p_tmp)
    (43133 call =(43129 call . lhs c"chpl_pn") chpl_pn_tmp)
  }
  where {
    (43068 call !(43066 call &&(43061 call isNonNilableClass lhs)(43065 call isNilableClass rhs)))
  }
  function =[43145](ref arg lhs[43142] :
  _shared, in arg rhs[43148] :
  _owned) : _unknown[51] "assignop" "no return value for void"
  {
    (43174 call(43164 call . lhs c"retain")(43172 call(43168 call . rhs c"release")))
  }
  where {
    (43161 call !(43159 call &&(43154 call isNonNilableClass lhs)(43158 call isNilableClass rhs)))
  }
  function =[43186](ref arg lhs[43183] :
  _shared, arg rhs[43189] :
  _nilType) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (43203 call(43199 call . lhs c"clear"))
  }
  where {
    (43196 call !(43195 call isNonNilableClass lhs))
  }
  function <=>[43215](ref arg lhs[43212] :
  _shared, ref arg rhs[43218] :
  _shared) : _unknown[51] "no return value for void"
  {
    (43229 call <=>(43222 call . lhs c"chpl_pn")(43226 call . rhs c"chpl_pn"))
    (43241 call <=>(43234 call . lhs c"chpl_p")(43238 call . rhs c"chpl_p"))
  }
  function chpl__autoDestroy[43252](ref arg x[43249] :
  _shared) : _unknown[51] "auto destroy fn" "no doc" "no return value for void"
  {
    (43260 'call destructor'(43259 'deref' x))
  }
  function _unknown[51].readWriteThis[43270](arg _mt[43275]:_MT[238], arg this[43272] :
  _shared, arg f[43268]:_any[178](?)) : _unknown[51] throws "method" "no doc" "no return value for void"
  {
    (43282 call <~> f(43279 call . this c"chpl_p"))
  }
  function _cast[43294](arg t[43291] :
  borrowed[211](?), const  ref arg x[43297] :
  _shared) : _unknown[51] "inline" "no doc"
  {
    (43316 return(43315 call(43311 call . x c"borrow")))
  }
  where {
    (354243 'is_subtype'(43304 call . x c"chpl_t") t)
  }
  function _cast[43331](arg t[43328] :
  (43326 call _shared(43325 'to nilable class from type' class[232](?))), in arg x[43336] :
  (43334 call _shared class[232](?))) : _unknown[51] "inline" "no doc"
  {
    (43366 return(43353 'new'(43365 call _shared 1(43363 call _to_nilable(43359 call . t c"chpl_t")) x)))
  }
  where {
    (354244 'is_subtype'(43351 call _to_nonnil(43347 call . t c"chpl_t"))(43341 call . x c"chpl_t"))
  }
  function _cast[43381](arg t[43378] :
  (43376 call _shared(43375 'to nilable class from type' class[232](?))), in arg x[43387] :
  (43385 call _shared(43384 'to nilable class from type' class[232](?)))) : _unknown[51] "inline" "no doc"
  {
    (43411 return(43401 'new'(43410 call _shared 1(43406 call . t c"chpl_t") x)))
  }
  where {
    (354245 'is_subtype'(43397 call . t c"chpl_t")(43392 call . x c"chpl_t"))
  }
  function _cast[43425](arg t[43422] :
  (43420 call _shared class[232](?)), in arg x[43430] :
  (43428 call _shared class[232](?))) : _unknown[51] "inline" "no doc"
  {
    (43454 return(43444 'new'(43453 call _shared 1(43449 call . t c"chpl_t") x)))
  }
  where {
    (354246 'is_subtype'(43440 call . t c"chpl_t")(43435 call . x c"chpl_t"))
  }
  function _cast[43468](arg t[43465] :
  (43463 call _shared class[232](?)), in arg x[43474] :
  (43472 call _shared(43471 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline" "no doc"
  {
    if(43507 call _cond_test(43496 call ==(43492 call . x c"chpl_p") nil[44]))
    {
      (43504 'throw'(43500 'new'(_chpl_manager = _owned[30](?))(43503 call NilClassError)))
    }
    (43525 return(43512 'new'(43524 call _shared 1(43522 call _to_nonnil(43518 call . t c"chpl_t")) x)))
  }
  where {
    (354247 'is_subtype'(43487 call . t c"chpl_t")(43484 call _to_nonnil(43480 call . x c"chpl_t")))
  }
  function _cast[43538](arg t[43535] :
  (43533 call _shared class[232](?)), const  ref arg x[43544] :
  (43542 call _shared(43541 'to nilable class from type' class[232](?)))) : _unknown[51] throws "inline" "no doc"
  {
    if(43577 call _cond_test(43566 call ==(43562 call . x c"chpl_p") nil[44]))
    {
      (43574 'throw'(43570 'new'(_chpl_manager = _owned[30](?))(43573 call NilClassError)))
    }
    unknown p[43599](43598 'try-expr'(43596 call _cast(43595 call _to_nonnil(43593 call _to_unmanaged(43589 call . t c"chpl_t")))(43583 call . x c"chpl_p")))
    (43602 'end of statement')
    (43618 return(43603 'new'(43617 call _shared 1(43611 call _to_borrowed(43609 'typeof' p)) p(43614 call . x c"chpl_pn"))))
  }
  where {
    (354248 'is_proper_subtype'(43559 call _to_nonnil(43555 call . x c"chpl_t"))(43549 call . t c"chpl_t"))
  }
  function _cast[43631](arg t[43628] :
  (43626 call _shared class[232](?)), const  ref arg x[43636] :
  (43634 call _shared class[232](?))) : _unknown[51] throws "inline" "no doc"
  {
    unknown p[43667](43666 'try-expr'(43664 call _cast(43663 call _to_nonnil(43661 call _to_unmanaged(43657 call . t c"chpl_t")))(43651 call . x c"chpl_p")))
    (43670 'end of statement')
    (43687 return(43672 'new'(43686 call _shared 1(43680 call _to_borrowed(43678 'typeof' p)) p(43683 call . x c"chpl_pn"))))
  }
  where {
    (354249 'is_proper_subtype'(43646 call . x c"chpl_t")(43641 call . t c"chpl_t"))
  }
  function _cast[43701](arg t[43698] :
  (43696 call _shared(43695 'to nilable class from type' class[232](?))), const  ref arg x[43707] :
  (43705 call _shared(43704 'to nilable class from type' class[232](?)))) : _unknown[51] "inline" "no doc"
  {
    unknown p[43737](43735 call _cast(43734 call _to_nilable(43732 call _to_unmanaged(43728 call . t c"chpl_t")))(43722 call . x c"chpl_p"))
    (43740 'end of statement')
    (43757 return(43742 'new'(43756 call _shared 1(43750 call _to_borrowed(43748 'typeof' p)) p(43753 call . x c"chpl_pn"))))
  }
  where {
    (354250 'is_proper_subtype'(43717 call . x c"chpl_t")(43712 call . t c"chpl_t"))
  }
  function _cast[43771](arg t[43768] :
  (43766 call _shared(43765 'to nilable class from type' class[232](?))), const  ref arg x[43776] :
  (43774 call _shared class[232](?))) : _unknown[51] "inline" "no doc"
  {
    unknown p[43809](43807 call _cast(43806 call _to_nilable(43804 call _to_unmanaged(43800 call . t c"chpl_t")))(43794 call . x c"chpl_p"))
    (43812 'end of statement')
    (43829 return(43814 'new'(43828 call _shared 1(43822 call _to_borrowed(43820 'typeof' p)) p(43825 call . x c"chpl_pn"))))
  }
  where {
    (354251 'is_proper_subtype'(43791 call _to_nilable(43787 call . x c"chpl_t"))(43781 call . t c"chpl_t"))
  }
  function _cast[43840](arg t[43837] :
  _shared, arg x[43843] :
  _nilType) : _unknown[51] "inline" "no doc"
  {
    if(43874 call _cond_test(43852 call isNonNilableClass(43848 call . t c"chpl_t")))
    {
      (43872 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[43881] t
    (43884 'end of statement')
    (43886 return tmp)
  }
  function postfix![43896](arg x[43893] :
  _shared) : _unknown[51] "always propagate line file info" "inline" "no doc"
  {
    (43899 'import' HaltWrappers)
    if(43945 call _cond_test(43904 call || chpl_checkNilDereferences enablePostfixBangChecks))
    {
      if(43940 call _cond_test(43917 call ==(43912 call _to_nilable(43908 call . x c"chpl_t"))(43914 call . x c"chpl_t")))
      {
        if(43935 call _cond_test(43924 call ==(43920 call . x c"chpl_p") nil[44]))
        {
          (43932 call(43927 call . HaltWrappers c"nilCheckHalt") "argument to ! is nil")
        }
      }
    }
    (43956 return(43955 call _to_nonnil(43951 call . x c"chpl_p")))
  }
}