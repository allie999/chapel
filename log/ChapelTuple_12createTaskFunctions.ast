AST dump for ChapelTuple after pass createTaskFunctions.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415991]() : void[4] "insert line file info" "module init"
  {
    (540842 'init var' CHPL_WARN_TUPLE_ITERATION[57026] "unset")
    (57029 'end of statement')
    (509020 return _void[55])
  }
  function _tuple[56202](?).size[766578](arg _mt[766580]:_MT[238], arg this[766582]:_tuple[56202](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[766601] "RVV" "param" "temp"
    unknown call_tmp[766615] "expr temp" "maybe param" "maybe type" "temp"
    (766618 'move' call_tmp[766615](766587 'is bound' this[766582] c"size"))
    if call_tmp[766615]
    {
      unknown call_tmp[766620] "expr temp" "maybe param" "maybe type" "temp"
      (766623 'move' call_tmp[766620](766586 '.' this[766582] c"size"))
      (766606 'move' ret[766601](766605 'deref' call_tmp[766620]))
      gotoReturn _end_size[766599] _end_size[766599]
    }
    {
      (766611 'move' ret[766601](766610 'deref' ?[260]))
      gotoReturn _end_size[766599] _end_size[766599]
    }
    label _end_size[766599]
    (766603 return ret[766601])
  }
  function _tuple[56202](?).size[766625](arg _mt[766627]:_MT[238], arg this[766629]:_tuple[56202](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[766648] "RVV" "param" "temp"
    unknown call_tmp[766662] "expr temp" "maybe param" "maybe type" "temp"
    (766665 'move' call_tmp[766662](766634 'is bound' this[766629] c"size"))
    if call_tmp[766662]
    {
      unknown call_tmp[766667] "expr temp" "maybe param" "maybe type" "temp"
      (766670 'move' call_tmp[766667](766633 '.' this[766629] c"size"))
      (766653 'move' ret[766648](766652 'deref' call_tmp[766667]))
      gotoReturn _end_size[766646] _end_size[766646]
    }
    {
      (766658 'move' ret[766648](766657 'deref' ?[260]))
      gotoReturn _end_size[766646] _end_size[766646]
    }
    label _end_size[766646]
    (766650 return ret[766648])
  }
  function _tuple[56202](?).deinit[766672](arg _mt[766674]:_MT[238], arg this[766676]:_tuple[56202](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (766684 return _void[55])
  }
  function _defaultOf[766686](arg t[766688]:_tuple[56202](?)) : _unknown[51] "compiler generated" "inline" "last resort"
  {
    (766691 return _void[55])
  }
  function _tuple[56202](?).writeThis[766693](arg _mt[766697]:_MT[238], arg this[766695]:_tuple[56202](?), arg f[766696]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766706 call(766702 call (partial) readWriteThis _mt[243] this[766695]) f[766696])
    (766709 return _void[55])
  }
  function _tuple[56202](?).readThis[766713](arg _mt[766717]:_MT[238], arg this[766715]:_tuple[56202](?), arg f[766716]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766725 call(766721 call (partial) readWriteThis _mt[243] this[766715]) f[766716])
    (766729 return _void[55])
  }
  function chpl__defaultHash[766733](arg r[766735]:_tuple[56202](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766748] "RVV" "temp"
    unknown call_tmp[766755] "expr temp" "maybe param" "maybe type" "temp"
    (766758 'move' call_tmp[766755](766737 call size _mt[243] r[766735]))
    unknown call_tmp[766760] "expr temp" "maybe param" "maybe type" "temp"
    (766763 'move' call_tmp[766760](766741 call chpl__defaultHash call_tmp[766755]))
    (766753 'move' ret[766748](766752 'deref' call_tmp[766760]))
    (766750 return ret[766748])
  }
  type _tuple[56202](?) unknown size[56197] "param" int(64)[13]
  function chpl__init_tuple[56211](param arg size[56208]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (508020 return _void[55])
  }
  function _build_tuple[56222](arg t[56219]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508022 return _void[55])
  }
  function _build_tuple[56233](arg x[56230]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[508026] "RVV" "temp"
    (508031 'move' ret[508026](508030 'deref' x[56230]))
    (508028 return ret[508026])
  }
  function _build_tuple_noref[56247](arg t[56244]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508033 return _void[55])
  }
  function _build_tuple_always_allow_ref[56258](arg x[56255]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[508037] "RVV" "temp"
    (508042 'move' ret[508037](508041 'deref' x[56255]))
    (508039 return ret[508037])
  }
  function chpl__unref[56270](arg t[56268]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[508046] "RVV" "temp" "type variable"
    unknown call_tmp[611278] "expr temp" "maybe param" "maybe type" "temp"
    (611281 'move' call_tmp[611278](56275 call isTupleType t[56268]))
    unknown call_tmp[611283] "expr temp" "maybe param" "maybe type" "temp"
    (611286 'move' call_tmp[611283](56286 call _cond_test call_tmp[611278]))
    if call_tmp[611283]
    {
      unknown call_tmp[611288] "expr temp" "maybe param" "maybe type" "temp"
      (611291 'move' call_tmp[611288](56280 call _build_tuple_noref(56278 'expand_tuple' t[56268])))
      (508051 'move' ret[508046](508050 'deref' call_tmp[611288]))
      gotoReturn _end_chpl__unref[508044] _end_chpl__unref[508044]
    }
    {
      (508056 'move' ret[508046](508055 'deref' t[56268]))
      gotoReturn _end_chpl__unref[508044] _end_chpl__unref[508044]
    }
    label _end_chpl__unref[508044]
    (508048 return ret[508046])
  }
  function *[56301](param arg p[56298]:int(64)[13], arg t[56303]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508060 return _void[55])
  }
  function *[56314](param arg p[56311]:uint(64)[115], arg t[56316]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[508064] "RVV" "temp" "type variable"
    unknown call_tmp[611293] "expr temp" "maybe param" "maybe type" "temp"
    (611296 'move' call_tmp[611293](56322 call max int(64)[13]))
    unknown call_tmp[611298] "expr temp" "maybe param" "maybe type" "temp"
    (611301 'move' call_tmp[611298](56323 call > p[56311] call_tmp[611293]))
    unknown call_tmp[611303] "expr temp" "maybe param" "maybe type" "temp"
    (611306 'move' call_tmp[611303](56374 call _cond_test call_tmp[611298]))
    if call_tmp[611303]
    {
      unknown call_tmp[611308] "expr temp" "maybe param" "maybe type" "temp"
      (611311 'move' call_tmp[611308](56346 call max int(64)[13]))
      unknown call_tmp[611313] "expr temp" "maybe param" "maybe type" "temp"
      (611316 'move' call_tmp[611313](56348 call _cast string[26] call_tmp[611308]))
      unknown call_tmp[611318] "expr temp" "maybe param" "maybe type" "temp"
      (611321 'move' call_tmp[611318](56350 call + "Tuples of size >" call_tmp[611313]))
      unknown call_tmp[611323] "expr temp" "maybe param" "maybe type" "temp"
      (611326 'move' call_tmp[611323](56369 call + call_tmp[611318] " are not currently supported"))
      (56372 call compilerError call_tmp[611323])
    }
    unknown call_tmp[611328] "maybe param" "maybe type" "temp"
    (611331 'move' call_tmp[611328](56382 call _cast int(64)[13] p[56311]))
    unknown pAsInt[56384] "dead at end of block" "param"
    (540838 'init var' pAsInt[56384] call_tmp[611328])
    (56387 'end of statement')
    unknown call_tmp[611333] "expr temp" "maybe param" "maybe type" "temp"
    (611336 'move' call_tmp[611333](56390 call * pAsInt[56384] t[56316]))
    (508069 'move' ret[508064](508068 'deref' call_tmp[611333]))
    (508066 return ret[508064])
  }
  function *[56402](param arg p[56399]:bool[10], arg t[56404]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56425 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508071 return _void[55])
  }
  function *[56436](arg p[56433]:bool[10], arg t[56438]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56443 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508073 return _void[55])
  }
  function _build_star_tuple_noref[56454](param arg p[56451]:int(64)[13], arg t[56456]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508075 return _void[55])
  }
  function *[56465](arg t[56463]:_any[178](?), param arg p[56468]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56492 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (508077 return _void[55])
  }
  function *[56503](arg p[56500]:integral[199](?), arg t[56505]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56526 call compilerError "tuple size must be known at compile-time")
    (508079 return _void[55])
  }
  function chpl__tuplify[56535](arg x[56533]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[508083] "RVV" "temp"
    unknown call_tmp[611338] "expr temp" "maybe param" "maybe type" "temp"
    (611341 'move' call_tmp[611338](56540 call isTuple x[56533]))
    unknown call_tmp[611343] "expr temp" "maybe param" "maybe type" "temp"
    (611346 'move' call_tmp[611343](56549 call _cond_test call_tmp[611338]))
    if call_tmp[611343]
    {
      (508088 'move' ret[508083](508087 'deref' x[56533]))
      gotoReturn _end_chpl__tuplify[508081] _end_chpl__tuplify[508081]
    }
    {
      unknown call_tmp[611348] "expr temp" "maybe param" "maybe type" "temp"
      (611351 'move' call_tmp[611348](56545 call _build_tuple x[56533]))
      (508093 'move' ret[508083](508092 'deref' call_tmp[611348]))
      gotoReturn _end_chpl__tuplify[508081] _end_chpl__tuplify[508081]
    }
    label _end_chpl__tuplify[508081]
    (508085 return ret[508083])
  }
  function isTupleValue[56564](arg x[56561]:_tuple[56202](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508099] "RVV" "param" "temp"
    (508104 'move' ret[508099](508103 'deref' 1))
    (508101 return ret[508099])
  }
  function isTupleValue[56576](arg x[56574]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508108] "RVV" "param" "temp"
    (508113 'move' ret[508108](508112 'deref' 0))
    (508110 return ret[508108])
  }
  function isHomogeneousTupleValue[56588](arg x[56586]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508117] "RVV" "param" "temp"
    unknown call_tmp[611353] "expr temp" "maybe param" "maybe type" "temp"
    (611356 'move' call_tmp[611353](56609 'is star tuple type' x[56586]))
    (508122 'move' ret[508117](508121 'deref' call_tmp[611353]))
    (508119 return ret[508117])
  }
  function _check_tuple_var_decl[56621](arg x[56618]:_tuple[56202](?), param arg p[56623]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508126] "RVV" "param" "temp"
    unknown call_tmp[611360] "expr temp" "maybe param" "maybe type" "temp"
    (611363 'move' call_tmp[611360](56627 call size _mt[243] x[56618]))
    unknown call_tmp[611365] "expr temp" "maybe param" "maybe type" "temp"
    (611368 'move' call_tmp[611365](56630 call == p[56623] call_tmp[611360]))
    unknown call_tmp[611370] "expr temp" "maybe param" "maybe type" "temp"
    (611373 'move' call_tmp[611370](56714 call _cond_test call_tmp[611365]))
    if call_tmp[611370]
    {
      (508131 'move' ret[508126](508130 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[508124] _end__check_tuple_var_decl[508124]
    }
    {
      unknown call_tmp[611377] "expr temp" "maybe param" "maybe type" "temp"
      (611380 'move' call_tmp[611377](56655 call size _mt[243] x[56618]))
      unknown call_tmp[611382] "expr temp" "maybe param" "maybe type" "temp"
      (611385 'move' call_tmp[611382](56659 call _cast string[26] call_tmp[611377]))
      unknown call_tmp[611387] "expr temp" "maybe param" "maybe type" "temp"
      (611390 'move' call_tmp[611387](56661 call + "tuple size (" call_tmp[611382]))
      unknown call_tmp[611392] "expr temp" "maybe param" "maybe type" "temp"
      (611395 'move' call_tmp[611392](56680 call + call_tmp[611387] ") must match the number of grouped variables ("))
      unknown call_tmp[611397] "expr temp" "maybe param" "maybe type" "temp"
      (611400 'move' call_tmp[611397](56684 call _cast string[26] p[56623]))
      unknown call_tmp[611402] "expr temp" "maybe param" "maybe type" "temp"
      (611405 'move' call_tmp[611402](56686 call + call_tmp[611392] call_tmp[611397]))
      unknown call_tmp[611407] "expr temp" "maybe param" "maybe type" "temp"
      (611410 'move' call_tmp[611407](56705 call + call_tmp[611402] ")"))
      (56708 call compilerError call_tmp[611407])
      (474851 'end of statement')
      (508136 'move' ret[508126](508135 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[508124] _end__check_tuple_var_decl[508124]
    }
    label _end__check_tuple_var_decl[508124]
    (508128 return ret[508126])
  }
  function _check_tuple_var_decl[56725](arg x[56723]:_any[178](?), param arg p[56727]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508142] "RVV" "param" "temp"
    (56748 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474853 'end of statement')
    (508147 'move' ret[508142](508146 'deref' 0))
    (508144 return ret[508142])
  }
  function isTupleType[56760](arg t[56758]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508151] "RVV" "param" "temp"
    unknown call_tmp[611412] "expr temp" "maybe param" "maybe type" "temp"
    (611415 'move' call_tmp[611412](56781 'is tuple type' t[56758]))
    (508156 'move' ret[508151](508155 'deref' call_tmp[611412]))
    (508153 return ret[508151])
  }
  function isHomogeneousTupleType[56791](arg t[56789]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508160] "RVV" "param" "temp"
    unknown call_tmp[611417] "expr temp" "maybe param" "maybe type" "temp"
    (611420 'move' call_tmp[611417](56796 'is star tuple type' t[56789]))
    (508165 'move' ret[508160](508164 'deref' call_tmp[611417]))
    (508162 return ret[508160])
  }
  function =[56808](ref arg x[56805]:_tuple[56202](?), arg y[56811]:_tuple[56202](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56845] "dead at end of block" "insert auto destroy"
      (540840 'init var' i[56845] 0)
      unknown tmp[56846] "maybe param" "temp"
      unknown call_tmp[611424] "expr temp" "maybe param" "maybe type" "temp"
      (611427 'move' call_tmp[611424](56826 call size _mt[243] x[56805]))
      unknown call_tmp[611429] "expr temp" "maybe param" "maybe type" "temp"
      (611432 'move' call_tmp[611429](56830 call - call_tmp[611424] 1))
      (56858 'move' tmp[56846](56856 call chpl_compute_low_param_loop_bound 0 call_tmp[611429]))
      unknown tmp[56847] "maybe param" "temp"
      unknown call_tmp[611436] "expr temp" "maybe param" "maybe type" "temp"
      (611439 'move' call_tmp[611436](56865 call size _mt[243] x[56805]))
      unknown call_tmp[611441] "expr temp" "maybe param" "maybe type" "temp"
      (611444 'move' call_tmp[611441](56863 call - call_tmp[611436] 1))
      (56871 'move' tmp[56847](56869 call chpl_compute_high_param_loop_bound 0 call_tmp[611441]))
      unknown tmp[56848] "maybe param" "temp"
      (56874 'move' tmp[56848] 1)
      ParamForLoop[56876]
      { i[56845] tmp[56846] tmp[56847] tmp[56848]
        unknown call_tmp[611446] "expr temp" "maybe param" "maybe type" "temp"
        (611449 'move' call_tmp[611446](56837 call x[56805] i[56845]))
        unknown call_tmp[611451] "expr temp" "maybe param" "maybe type" "temp"
        (611454 'move' call_tmp[611451](56841 call y[56811] i[56845]))
        (56842 call = call_tmp[611446] call_tmp[611451])
      }
      label _unused_continueLabel[56850]
      label _breakLabel[56849]
    }
    (508167 return _void[55])
  }
  where {
    unknown call_tmp[611458] "expr temp" "maybe param" "maybe type" "temp"
    (611461 'move' call_tmp[611458](56815 call size _mt[243] x[56805]))
    unknown call_tmp[611465] "expr temp" "maybe param" "maybe type" "temp"
    (611468 'move' call_tmp[611465](56819 call size _mt[243] y[56811]))
    (56822 call == call_tmp[611458] call_tmp[611465])
  }
  function _tuple[56202](?).this[56896](arg _mt[56901]:_MT[238], arg this[56898]:_tuple[56202](?) :
  _tuple[56202](?), arg i[56893]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508171] "RVV" "temp"
    unknown call_tmp[611470] "expr temp" "maybe param" "maybe type" "temp"
    (611473 'move' call_tmp[611470](56906 call isHomogeneousTuple this[56898]))
    unknown call_tmp[611475] "expr temp" "maybe param" "maybe type" "temp"
    (611478 'move' call_tmp[611475](56907 call ! call_tmp[611470]))
    unknown call_tmp[611480] "expr temp" "maybe param" "maybe type" "temp"
    (611483 'move' call_tmp[611480](56932 call _cond_test call_tmp[611475]))
    if call_tmp[611480]
    {
      (56930 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611485] "expr temp" "maybe param" "maybe type" "temp"
    (611488 'move' call_tmp[611485](56979 call _cond_test 1))
    if call_tmp[611485]
    {
      unknown tmp[418921] "maybe param" "temp"
      (418932 'move' tmp[418921](56941 call < i[56893] 0))
      unknown call_tmp[611490] "expr temp" "maybe param" "maybe type" "temp"
      (611493 'move' call_tmp[611490](418934 call _cond_invalid tmp[418921]))
      if call_tmp[611490]
      {
        (418937 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[554989] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[554990] "maybe param" "temp"
      unknown call_tmp[611495] "expr temp" "maybe param" "maybe type" "temp"
      (611498 'move' call_tmp[611495](418922 call isTrue tmp[418921]))
      (554995 'move' tmp[554990](554993 call _cond_test call_tmp[611495]))
      if tmp[554990]
      {
        (555000 'move' tmp[554989](554997 '_paramFoldLogical' tmp[554990] 1))
      }
      {
        unknown tmp[555002] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611502] "expr temp" "maybe param" "maybe type" "temp"
        (611505 'move' call_tmp[611502](373108 call size _mt[243] this[56898]))
        unknown call_tmp[611507] "expr temp" "maybe param" "maybe type" "temp"
        (611510 'move' call_tmp[611507](56946 call - call_tmp[611502] 1))
        unknown call_tmp[611512] "expr temp" "maybe param" "maybe type" "temp"
        (611515 'move' call_tmp[611512](56948 call > i[56893] call_tmp[611507]))
        (555004 'move' tmp[555002](418926 call isTrue call_tmp[611512]))
        (555009 'move' tmp[554989](555006 '_paramFoldLogical' tmp[554990] tmp[555002]))
      }
      unknown call_tmp[611517] "expr temp" "maybe param" "maybe type" "temp"
      (611520 'move' call_tmp[611517](56974 call _cond_test tmp[554989]))
      if call_tmp[611517]
      {
        (56972 call halt "tuple access out of bounds: " i[56893])
      }
    }
    unknown call_tmp[611522] "expr temp" "maybe param" "maybe type" "temp"
    (611525 'move' call_tmp[611522](57004 'get svec member' this[56898] i[56893]))
    (508176 'move' ret[508171](508175 'addr of' call_tmp[611522]))
    (508173 return ret[508171])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57026] "config" "no doc" "param"
  function _tuple[56202](?).these[57033](arg _mt[57038]:_MT[238], arg this[57035]:_tuple[56202](?) :
  _tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508180] "RVV" "temp"
    unknown call_tmp[611527] "expr temp" "maybe param" "maybe type" "temp"
    (611530 'move' call_tmp[611527](57043 call isHomogeneousTuple this[57035]))
    unknown call_tmp[611532] "expr temp" "maybe param" "maybe type" "temp"
    (611535 'move' call_tmp[611532](57044 call ! call_tmp[611527]))
    unknown call_tmp[611537] "expr temp" "maybe param" "maybe type" "temp"
    (611540 'move' call_tmp[611537](57067 call _cond_test call_tmp[611532]))
    if call_tmp[611537]
    {
      (57065 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611542] "expr temp" "maybe param" "maybe type" "temp"
    (611545 'move' call_tmp[611542](57091 call == CHPL_WARN_TUPLE_ITERATION[57026] "true"))
    unknown call_tmp[611547] "expr temp" "maybe param" "maybe type" "temp"
    (611550 'move' call_tmp[611547](57116 call _cond_test call_tmp[611542]))
    if call_tmp[611547]
    {
      (57114 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57138] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57139] "expr temp" "temp"
      unknown call_tmp[611554] "expr temp" "maybe param" "maybe type" "temp"
      (611557 'move' call_tmp[611554](57154 call size _mt[243] this[57035]))
      unknown call_tmp[611559] "expr temp" "maybe param" "maybe type" "temp"
      (611562 'move' call_tmp[611559](57158 call chpl_direct_counted_range_iter 0 call_tmp[611554]))
      (57148 'move' _iterator[57139](57146 call _getIterator call_tmp[611559]))
      Defer
      {
        {
          (57174 call _freeIterator _iterator[57139])
        }
      }
      { scopeless type
        (57163 'move' _indexOfInterest[57138](57160 call iteratorIndex _iterator[57139]))
      }
      ForLoop[57140]
      {
        unknown i[57167] "index var" "insert auto destroy"
        (474864 'end of statement')
        (57169 'move' i[57167] _indexOfInterest[57138])
        (474865 'end of statement' i[57167])
        {
          unknown yret[508184] "YVV" "temp"
          unknown call_tmp[611564] "expr temp" "maybe param" "maybe type" "temp"
          (611567 'move' call_tmp[611564](57134 call this[57035] i[57167]))
          (508187 'move' yret[508184](508186 'addr of' call_tmp[611564]))
          (508189 yield yret[508184])
          (474867 'end of statement' i[57167])
        }
        label _continueLabel[57143]
        _indexOfInterest[57138]
        _iterator[57139]
      }
      label _breakLabel[57144]
    }
    (508182 return ret[508180])
  }
  function _tuple[56202](?).these[57190](arg _mt[57195]:_MT[238], arg this[57192]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57187]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508193] "RVV" "temp"
    const numTasks[57216] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[555016] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555017] "maybe param" "temp"
    unknown call_tmp[611569] "expr temp" "maybe param" "maybe type" "temp"
    (611572 'move' call_tmp[611569](57206 call == dataParTasksPerLocale[93284] 0))
    (555022 'move' tmp[555017](555020 call _cond_test call_tmp[611569]))
    if tmp[555017]
    {
      unknown tmp[555024] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611574] "expr temp" "maybe param" "maybe type" "temp"
      (611577 'move' call_tmp[611574](357345 call here[90438]))
      (555026 'move' tmp[555024](57209 call maxTaskPar _mt[243] call_tmp[611574]))
      (555031 'move' tmp[555016](555028 '_paramFoldLogical' tmp[555017] tmp[555024]))
    }
    {
      (555036 'move' tmp[555016](555033 '_paramFoldLogical' tmp[555017] dataParTasksPerLocale[93284]))
    }
    (540844 'init var' numTasks[57216] tmp[555016])
    (57219 'end of statement')
    const ignoreRunning[57222] "dead at end of block" "const" "insert auto destroy"
    (540846 'init var' ignoreRunning[57222] dataParIgnoreRunningTasks[93290])
    (57225 'end of statement')
    const minIndicesPerTask[57227] "dead at end of block" "const" "insert auto destroy"
    (540848 'init var' minIndicesPerTask[57227] dataParMinGranularity[93296])
    (57230 'end of statement')
    unknown call_tmp[611583] "maybe param" "maybe type" "temp"
    (611586 'move' call_tmp[611583](57232 call size _mt[243] this[57192]))
    const length[57235] "dead at end of block" "const" "insert auto destroy"
    (540850 'init var' length[57235] call_tmp[611583])
    (57238 'end of statement')
    unknown call_tmp[611588] "expr temp" "maybe param" "maybe type" "temp"
    (611591 'move' call_tmp[611588](57240 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611593] "expr temp" "maybe param" "maybe type" "temp"
    (611596 'move' call_tmp[611593](57243 call # call_tmp[611588] length[57235]))
    unknown call_tmp[611598] "maybe param" "maybe type" "temp"
    (611601 'move' call_tmp[611598](57245 call _build_tuple call_tmp[611593]))
    const myRange[57247] "dead at end of block" "const" "insert auto destroy"
    (540852 'init var' myRange[57247] call_tmp[611598])
    (57250 'end of statement')
    unknown call_tmp[611603] "maybe param" "maybe type" "temp"
    (611606 'move' call_tmp[611603](57262 call _computeChunkStuff numTasks[57216] ignoreRunning[57222] minIndicesPerTask[57227] myRange[57247]))
    unknown tmp[57263] "dead at end of block" "insert auto destroy" "temp"
    (540854 'init var' tmp[57263] call_tmp[611603])
    (57267 call _check_tuple_var_decl tmp[57263] 2)
    (474870 'end of statement')
    unknown call_tmp[611608] "maybe param" "maybe type" "temp"
    (611611 'move' call_tmp[611608](57264 call tmp[57263] 0))
    unknown numChunks[57251] "dead at end of block" "insert auto destroy"
    (540856 'init var' numChunks[57251] call_tmp[611608])
    (57272 'end of statement' length[57235])
    unknown call_tmp[611613] "expr temp" "maybe param" "maybe type" "temp"
    (611616 'move' call_tmp[611613](57275 call == numChunks[57251] 1))
    unknown call_tmp[611618] "expr temp" "maybe param" "maybe type" "temp"
    (611621 'move' call_tmp[611618](57519 call _cond_test call_tmp[611613]))
    if call_tmp[611618]
    {
      unknown yret[508197] "YVV" "temp"
      (508200 'move' yret[508197](508199 'addr of' myRange[57247]))
      (508202 yield yret[508197])
      (474871 'end of statement' myRange[57247])
    }
    {
      {
        unknown tmpIter[57325] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611623] "expr temp" "maybe param" "maybe type" "temp"
        (611626 'move' call_tmp[611623](57283 call chpl_build_low_bounded_range 0))
        (57328 'move' tmpIter[57325](57286 call # call_tmp[611623] numChunks[57251]))
        unknown isRngDomArr[57499] "maybe param" "temp"
        unknown tmp[418942] "maybe param" "temp"
        (418953 'move' tmp[418942](57501 call isBoundedRange tmpIter[57325]))
        unknown call_tmp[611628] "expr temp" "maybe param" "maybe type" "temp"
        (611631 'move' call_tmp[611628](418955 call _cond_invalid tmp[418942]))
        if call_tmp[611628]
        {
          (418958 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[555070] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[555071] "maybe param" "temp"
        unknown call_tmp[611633] "expr temp" "maybe param" "maybe type" "temp"
        (611636 'move' call_tmp[611633](418943 call isTrue tmp[418942]))
        (555076 'move' tmp[555071](555074 call _cond_test call_tmp[611633]))
        if tmp[555071]
        {
          (555081 'move' tmp[555070](555078 '_paramFoldLogical' tmp[555071] 1))
        }
        {
          unknown tmp[418963] "maybe param" "temp"
          (418974 'move' tmp[418963](57504 call isDomain tmpIter[57325]))
          unknown call_tmp[611638] "expr temp" "maybe param" "maybe type" "temp"
          (611641 'move' call_tmp[611638](418976 call _cond_invalid tmp[418963]))
          if call_tmp[611638]
          {
            (418979 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[555043] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[555044] "maybe param" "temp"
          unknown call_tmp[611643] "expr temp" "maybe param" "maybe type" "temp"
          (611646 'move' call_tmp[611643](418964 call isTrue tmp[418963]))
          (555049 'move' tmp[555044](555047 call _cond_test call_tmp[611643]))
          if tmp[555044]
          {
            (555054 'move' tmp[555043](555051 '_paramFoldLogical' tmp[555044] 1))
          }
          {
            unknown tmp[555056] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611648] "expr temp" "maybe param" "maybe type" "temp"
            (611651 'move' call_tmp[611648](57507 call isArray tmpIter[57325]))
            (555058 'move' tmp[555056](418968 call isTrue call_tmp[611648]))
            (555063 'move' tmp[555043](555060 '_paramFoldLogical' tmp[555044] tmp[555056]))
          }
          unknown tmp[555083] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (555085 'move' tmp[555083](418947 call isTrue tmp[555043]))
          (555090 'move' tmp[555070](555087 '_paramFoldLogical' tmp[555071] tmp[555083]))
        }
        (57514 'move' isRngDomArr[57499] tmp[555070])
        if isRngDomArr[57499]
        {
          const _coforallCount[57366] "const" "end count" "temp"
          (57435 'move' _coforallCount[57366](57432 call _endCountAlloc 1))
          unknown numTasks[57367] "temp"
          (57419 'move' numTasks[57367](57415 call size _mt[243] tmpIter[57325]))
          (57410 call _upEndCount _coforallCount[57366] 1 numTasks[57367])
          (474874 'end of statement')
          (57407 call chpl_resetTaskSpawn numTasks[57367])
          (474875 'end of statement')
          unknown _indexOfInterest[57374] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57375] "expr temp" "temp"
          (57384 'move' _iterator[57375](57382 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57400 call _freeIterator _iterator[57375])
            }
          }
          { scopeless type
            (57389 'move' _indexOfInterest[57374](57386 call iteratorIndex _iterator[57375]))
          }
          ForLoop[57376]
          {
            unknown chunk[57393] "coforall index var" "index var" "insert auto destroy"
            (474877 'end of statement')
            (57395 'move' chunk[57393] _indexOfInterest[57374])
            (474878 'end of statement' chunk[57393])
            (934191 call coforall_fn[934189] length[57235] numChunks[57251])
            function coforall_fn[934189](arg length[934196], arg numChunks[934199]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611655] "expr temp" "maybe param" "maybe type" "temp"
                (611658 'move' call_tmp[611655](57339 call - length[934196] 1))
                unknown call_tmp[611660] "maybe param" "maybe type" "temp"
                (611663 'move' call_tmp[611660](57334 call _computeBlock length[934196] numChunks[934199] chunk[57393] call_tmp[611655]))
                const tmp[57332] "dead at end of block" "const" "insert auto destroy" "temp"
                (540858 'init var' tmp[57332] call_tmp[611660])
                (57344 call _check_tuple_var_decl tmp[57332] 2)
                (474880 'end of statement')
                unknown call_tmp[611665] "maybe param" "maybe type" "temp"
                (611668 'move' call_tmp[611665](57349 call tmp[57332] 0))
                const lo[57347] "dead at end of block" "const" "insert auto destroy"
                (540860 'init var' lo[57347] call_tmp[611665])
                unknown call_tmp[611670] "maybe param" "maybe type" "temp"
                (611673 'move' call_tmp[611670](57354 call tmp[57332] 1))
                const hi[57352] "dead at end of block" "const" "insert auto destroy"
                (540862 'init var' hi[57352] call_tmp[611670])
                (57357 'end of statement')
                unknown yret[508204] "YVV" "temp"
                unknown call_tmp[611675] "expr temp" "maybe param" "maybe type" "temp"
                (611678 'move' call_tmp[611675](57362 call chpl_build_bounded_range lo[57347] hi[57352]))
                unknown call_tmp[611680] "expr temp" "maybe param" "maybe type" "temp"
                (611683 'move' call_tmp[611680](57360 call _build_tuple call_tmp[611675]))
                (508207 'move' yret[508204](508206 'addr of' call_tmp[611680]))
                (508209 yield yret[508204])
                (474881 'end of statement' lo[57347] hi[57352])
              }
              (57369 call _downEndCount _coforallCount[57366] nil[44])
              (934194 return _void[55])
            }
            {
            }
            label _continueLabel[57379]
            _indexOfInterest[57374]
            _iterator[57375]
          }
          label _breakLabel[57380]
          Defer
          {
            {
              (57422 call _endCountFree _coforallCount[57366])
            }
          }
          (57427 call _waitEndCount _coforallCount[57366] 1 numTasks[57367])
        }
        {
          const _coforallCount[57439] "const" "end count" "temp"
          (57496 'move' _coforallCount[57439](57493 call _endCountAlloc 1))
          unknown _indexOfInterest[57447] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57448] "expr temp" "temp"
          (57457 'move' _iterator[57448](57455 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57473 call _freeIterator _iterator[57448])
            }
          }
          { scopeless type
            (57462 'move' _indexOfInterest[57447](57459 call iteratorIndex _iterator[57448]))
          }
          ForLoop[57449]
          {
            unknown chunk[57466] "coforall index var" "index var" "insert auto destroy"
            (474888 'end of statement')
            (57468 'move' chunk[57466] _indexOfInterest[57447])
            (474889 'end of statement' chunk[57466])
            (57480 call _upEndCount _coforallCount[57439] 1)
            (474891 'end of statement')
            (934204 call coforall_fn[934202] length[57235] numChunks[57251])
            function coforall_fn[934202](arg length[934209], arg numChunks[934212]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611685] "expr temp" "maybe param" "maybe type" "temp"
                (611688 'move' call_tmp[611685](57300 call - length[934209] 1))
                unknown call_tmp[611690] "maybe param" "maybe type" "temp"
                (611693 'move' call_tmp[611690](57302 call _computeBlock length[934209] numChunks[934212] chunk[57466] call_tmp[611685]))
                const tmp[57303] "dead at end of block" "const" "insert auto destroy" "temp"
                (540864 'init var' tmp[57303] call_tmp[611690])
                (57310 call _check_tuple_var_decl tmp[57303] 2)
                (474892 'end of statement')
                unknown call_tmp[611695] "maybe param" "maybe type" "temp"
                (611698 'move' call_tmp[611695](57304 call tmp[57303] 0))
                const lo[57288] "dead at end of block" "const" "insert auto destroy"
                (540866 'init var' lo[57288] call_tmp[611695])
                unknown call_tmp[611700] "maybe param" "maybe type" "temp"
                (611703 'move' call_tmp[611700](57307 call tmp[57303] 1))
                const hi[57290] "dead at end of block" "const" "insert auto destroy"
                (540868 'init var' hi[57290] call_tmp[611700])
                (57315 'end of statement')
                unknown yret[508211] "YVV" "temp"
                unknown call_tmp[611705] "expr temp" "maybe param" "maybe type" "temp"
                (611708 'move' call_tmp[611705](57319 call chpl_build_bounded_range lo[57288] hi[57290]))
                unknown call_tmp[611710] "expr temp" "maybe param" "maybe type" "temp"
                (611713 'move' call_tmp[611710](57321 call _build_tuple call_tmp[611705]))
                (508214 'move' yret[508211](508213 'addr of' call_tmp[611710]))
                (508216 yield yret[508211])
                (474893 'end of statement' lo[57288] hi[57290])
              }
              (57442 call _downEndCount _coforallCount[57439] nil[44])
              (934207 return _void[55])
            }
            {
            }
            label _continueLabel[57452]
            _indexOfInterest[57447]
            _iterator[57448]
          }
          label _breakLabel[57453]
          Defer
          {
            {
              (57484 call _endCountFree _coforallCount[57439])
            }
          }
          (57489 call _waitEndCount _coforallCount[57439] 1)
        }
      }
    }
    (508195 return ret[508193])
  }
  where {
    (57202 call == tag[57187] leader[447])
  }
  function _tuple[56202](?).these[57533](arg _mt[57542]:_MT[238], arg this[57539]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57530]:iterKind[453], arg followThis[57536]:_tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508220] "RVV" "temp"
    unknown call_tmp[611717] "expr temp" "maybe param" "maybe type" "temp"
    (611720 'move' call_tmp[611717](57552 call size _mt[243] followThis[57536]))
    unknown call_tmp[611722] "expr temp" "maybe param" "maybe type" "temp"
    (611725 'move' call_tmp[611722](57556 call != call_tmp[611717] 1))
    unknown call_tmp[611727] "expr temp" "maybe param" "maybe type" "temp"
    (611730 'move' call_tmp[611727](57579 call _cond_test call_tmp[611722]))
    if call_tmp[611727]
    {
      (57577 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611732] "maybe param" "maybe type" "temp"
    (611735 'move' call_tmp[611732](57588 call followThis[57536] 0))
    unknown fThis[57589] "dead at end of block" "insert auto destroy"
    (540870 'init var' fThis[57589] call_tmp[611732])
    (57592 'end of statement')
    {
      unknown _indexOfInterest[57602] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57603] "expr temp" "temp"
      (57612 'move' _iterator[57603](57610 call _getIterator fThis[57589]))
      Defer
      {
        {
          (57628 call _freeIterator _iterator[57603])
        }
      }
      { scopeless type
        (57617 'move' _indexOfInterest[57602](57614 call iteratorIndex _iterator[57603]))
      }
      ForLoop[57604]
      {
        unknown i[57621] "index var" "insert auto destroy"
        (474901 'end of statement')
        (57623 'move' i[57621] _indexOfInterest[57602])
        (474902 'end of statement' i[57621])
        {
          unknown yret[508224] "YVV" "temp"
          unknown call_tmp[611737] "expr temp" "maybe param" "maybe type" "temp"
          (611740 'move' call_tmp[611737](57598 call this[57539] i[57621]))
          (508227 'move' yret[508224](508226 'addr of' call_tmp[611737]))
          (508229 yield yret[508224])
          (474904 'end of statement' i[57621])
        }
        label _continueLabel[57607]
        _indexOfInterest[57602]
        _iterator[57603]
      }
      label _breakLabel[57608]
    }
    (508222 return ret[508220])
  }
  where {
    (57549 call == tag[57530] follower[449])
  }
  function _tuple[56202](?).indices[57641](arg _mt[57646]:_MT[238], arg this[57643]:_tuple[56202](?) :
  _tuple[56202](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508233] "RVV" "temp"
    unknown call_tmp[611744] "expr temp" "maybe param" "maybe type" "temp"
    (611747 'move' call_tmp[611744](57650 call size _mt[243] this[57643]))
    unknown call_tmp[611749] "expr temp" "maybe param" "maybe type" "temp"
    (611752 'move' call_tmp[611749](57654 call - call_tmp[611744] 1))
    unknown call_tmp[611754] "expr temp" "maybe param" "maybe type" "temp"
    (611757 'move' call_tmp[611754](57656 call chpl_build_bounded_range 0 call_tmp[611749]))
    (508238 'move' ret[508233](508237 'deref' call_tmp[611754]))
    (508235 return ret[508233])
  }
  function _cast[57672](arg t[57669] :
  (57668 call complex(128)[140] 64), arg x[57679]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508248] "RVV" "temp"
    function _chpl_complex64[57691](arg re[57688] :
    (57687 call real(64)[16] 32), arg im[57697] :
    (57696 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508242] "RVV" "temp"
      (508244 return ret[508242])
    }
    { scopeless type
      (57703 call complex(128)[140] 64)
    }
    unknown call_tmp[611759] "expr temp" "maybe param" "maybe type" "temp"
    (611762 'move' call_tmp[611759](57716 call real(64)[16] 32))
    unknown call_tmp[611764] "expr temp" "maybe param" "maybe type" "temp"
    (611767 'move' call_tmp[611764](57712 call x[57679] 0))
    unknown call_tmp[611769] "expr temp" "maybe param" "maybe type" "temp"
    (611772 'move' call_tmp[611769](57717 call _cast call_tmp[611759] call_tmp[611764]))
    unknown call_tmp[611774] "expr temp" "maybe param" "maybe type" "temp"
    (611777 'move' call_tmp[611774](57727 call real(64)[16] 32))
    unknown call_tmp[611779] "expr temp" "maybe param" "maybe type" "temp"
    (611782 'move' call_tmp[611779](57723 call x[57679] 1))
    unknown call_tmp[611784] "expr temp" "maybe param" "maybe type" "temp"
    (611787 'move' call_tmp[611784](57728 call _cast call_tmp[611774] call_tmp[611779]))
    unknown call_tmp[611789] "expr temp" "maybe param" "maybe type" "temp"
    (611792 'move' call_tmp[611789](57730 call _chpl_complex64 call_tmp[611769] call_tmp[611784]))
    (508253 'move' ret[508248](508252 'deref' call_tmp[611789]))
    (508250 return ret[508248])
  }
  where {
    unknown call_tmp[611794] "expr temp" "maybe param" "maybe type" "temp"
    (611797 'move' call_tmp[611794](454781 'query' x[57679] c"size"))
    unknown call_tmp[611799] "expr temp" "maybe param" "maybe type" "temp"
    (611802 'move' call_tmp[611799](454782 call == 2 call_tmp[611794]))
    (454786 call & 1 call_tmp[611799])
  }
  function _cast[57744](arg t[57741] :
  (57740 call complex(128)[140] 128), arg x[57751]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508263] "RVV" "temp"
    function _chpl_complex128[57763](arg re[57760] :
    (57759 call real(64)[16] 64), arg im[57769] :
    (57768 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508257] "RVV" "temp"
      (508259 return ret[508257])
    }
    { scopeless type
      (57775 call complex(128)[140] 128)
    }
    unknown call_tmp[611804] "expr temp" "maybe param" "maybe type" "temp"
    (611807 'move' call_tmp[611804](57788 call real(64)[16] 64))
    unknown call_tmp[611809] "expr temp" "maybe param" "maybe type" "temp"
    (611812 'move' call_tmp[611809](57784 call x[57751] 0))
    unknown call_tmp[611814] "expr temp" "maybe param" "maybe type" "temp"
    (611817 'move' call_tmp[611814](57789 call _cast call_tmp[611804] call_tmp[611809]))
    unknown call_tmp[611819] "expr temp" "maybe param" "maybe type" "temp"
    (611822 'move' call_tmp[611819](57799 call real(64)[16] 64))
    unknown call_tmp[611824] "expr temp" "maybe param" "maybe type" "temp"
    (611827 'move' call_tmp[611824](57795 call x[57751] 1))
    unknown call_tmp[611829] "expr temp" "maybe param" "maybe type" "temp"
    (611832 'move' call_tmp[611829](57800 call _cast call_tmp[611819] call_tmp[611824]))
    unknown call_tmp[611834] "expr temp" "maybe param" "maybe type" "temp"
    (611837 'move' call_tmp[611834](57802 call _chpl_complex128 call_tmp[611814] call_tmp[611829]))
    (508268 'move' ret[508263](508267 'deref' call_tmp[611834]))
    (508265 return ret[508263])
  }
  where {
    unknown call_tmp[611839] "expr temp" "maybe param" "maybe type" "temp"
    (611842 'move' call_tmp[611839](454802 'query' x[57751] c"size"))
    unknown call_tmp[611844] "expr temp" "maybe param" "maybe type" "temp"
    (611847 'move' call_tmp[611844](454803 call == 2 call_tmp[611839]))
    (454807 call & 1 call_tmp[611844])
  }
  function _cast[57813](arg t[57810]:_tuple[56202](?), arg x[57816]:_tuple[56202](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508270 return _void[55])
  }
  function chpl__tupleRest[57828](arg t[57825]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508283] "RVV" "temp"
    function chpl__tupleRestHelper[57834](arg first[57832]:_any[178](?), arg rest[57837]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508274] "RVV" "temp"
      (508279 'move' ret[508274](508278 'deref' rest[57837]))
      (508276 return ret[508274])
    }
    unknown call_tmp[611849] "expr temp" "maybe param" "maybe type" "temp"
    (611852 'move' call_tmp[611849](57851 call chpl__tupleRestHelper(57849 'expand_tuple' t[57825])))
    (508288 'move' ret[508283](508287 'deref' call_tmp[611849]))
    (508285 return ret[508283])
  }
  function +[57862](arg a[57859]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508292] "RVV" "temp"
    unknown result[57866] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611854] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611857 'move' call_tmp[611854](57865 'typeof' a[57859]))
    (540872 'default init var' result[57866] call_tmp[611854])
    (57869 'end of statement')
    {
      unknown d[57894] "dead at end of block" "insert auto destroy"
      (540874 'init var' d[57894] 0)
      (474911 'end of statement')
      unknown tmp[57895] "maybe param" "temp"
      unknown call_tmp[611861] "expr temp" "maybe param" "maybe type" "temp"
      (611864 'move' call_tmp[611861](57873 call size _mt[243] a[57859]))
      unknown call_tmp[611866] "expr temp" "maybe param" "maybe type" "temp"
      (611869 'move' call_tmp[611866](57877 call - call_tmp[611861] 1))
      (57907 'move' tmp[57895](57905 call chpl_compute_low_param_loop_bound 0 call_tmp[611866]))
      unknown tmp[57896] "maybe param" "temp"
      unknown call_tmp[611873] "expr temp" "maybe param" "maybe type" "temp"
      (611876 'move' call_tmp[611873](57914 call size _mt[243] a[57859]))
      unknown call_tmp[611878] "expr temp" "maybe param" "maybe type" "temp"
      (611881 'move' call_tmp[611878](57912 call - call_tmp[611873] 1))
      (57920 'move' tmp[57896](57918 call chpl_compute_high_param_loop_bound 0 call_tmp[611878]))
      unknown tmp[57897] "maybe param" "temp"
      (57923 'move' tmp[57897] 1)
      ParamForLoop[57925]
      { d[57894] tmp[57895] tmp[57896] tmp[57897]
        unknown call_tmp[611883] "expr temp" "maybe param" "maybe type" "temp"
        (611886 'move' call_tmp[611883](57884 call result[57866] d[57894]))
        unknown call_tmp[611888] "expr temp" "maybe param" "maybe type" "temp"
        (611891 'move' call_tmp[611888](57888 call a[57859] d[57894]))
        unknown call_tmp[611893] "expr temp" "maybe param" "maybe type" "temp"
        (611896 'move' call_tmp[611893](57889 call + call_tmp[611888]))
        (57891 call = call_tmp[611883] call_tmp[611893])
        (474912 'end of statement' result[57866] d[57894] d[57894])
      }
      label _unused_continueLabel[57899]
      label _breakLabel[57898]
    }
    (508297 'move' ret[508292](508296 'deref' result[57866]))
    gotoReturn _end_+[508290] _end_+[508290]
    (474916 'end of statement' result[57866])
    label _end_+[508290]
    (508294 return ret[508292])
  }
  function -[57945](arg a[57942]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508303] "RVV" "temp"
    unknown result[57949] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611898] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611901 'move' call_tmp[611898](57948 'typeof' a[57942]))
    (540876 'default init var' result[57949] call_tmp[611898])
    (57952 'end of statement')
    {
      unknown d[57977] "dead at end of block" "insert auto destroy"
      (540878 'init var' d[57977] 0)
      (474918 'end of statement')
      unknown tmp[57978] "maybe param" "temp"
      unknown call_tmp[611905] "expr temp" "maybe param" "maybe type" "temp"
      (611908 'move' call_tmp[611905](57956 call size _mt[243] a[57942]))
      unknown call_tmp[611910] "expr temp" "maybe param" "maybe type" "temp"
      (611913 'move' call_tmp[611910](57960 call - call_tmp[611905] 1))
      (57990 'move' tmp[57978](57988 call chpl_compute_low_param_loop_bound 0 call_tmp[611910]))
      unknown tmp[57979] "maybe param" "temp"
      unknown call_tmp[611917] "expr temp" "maybe param" "maybe type" "temp"
      (611920 'move' call_tmp[611917](57997 call size _mt[243] a[57942]))
      unknown call_tmp[611922] "expr temp" "maybe param" "maybe type" "temp"
      (611925 'move' call_tmp[611922](57995 call - call_tmp[611917] 1))
      (58003 'move' tmp[57979](58001 call chpl_compute_high_param_loop_bound 0 call_tmp[611922]))
      unknown tmp[57980] "maybe param" "temp"
      (58006 'move' tmp[57980] 1)
      ParamForLoop[58008]
      { d[57977] tmp[57978] tmp[57979] tmp[57980]
        unknown call_tmp[611927] "expr temp" "maybe param" "maybe type" "temp"
        (611930 'move' call_tmp[611927](57967 call result[57949] d[57977]))
        unknown call_tmp[611932] "expr temp" "maybe param" "maybe type" "temp"
        (611935 'move' call_tmp[611932](57971 call a[57942] d[57977]))
        unknown call_tmp[611937] "expr temp" "maybe param" "maybe type" "temp"
        (611940 'move' call_tmp[611937](57972 call - call_tmp[611932]))
        (57974 call = call_tmp[611927] call_tmp[611937])
        (474919 'end of statement' result[57949] d[57977] d[57977])
      }
      label _unused_continueLabel[57982]
      label _breakLabel[57981]
    }
    (508308 'move' ret[508303](508307 'deref' result[57949]))
    gotoReturn _end_-[508301] _end_-[508301]
    (474923 'end of statement' result[57949])
    label _end_-[508301]
    (508305 return ret[508303])
  }
  function ~[58028](arg a[58025]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508314] "RVV" "temp"
    unknown result[58032] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611942] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611945 'move' call_tmp[611942](58031 'typeof' a[58025]))
    (540880 'default init var' result[58032] call_tmp[611942])
    (58035 'end of statement')
    {
      unknown d[58060] "dead at end of block" "insert auto destroy"
      (540882 'init var' d[58060] 0)
      (474925 'end of statement')
      unknown tmp[58061] "maybe param" "temp"
      unknown call_tmp[611949] "expr temp" "maybe param" "maybe type" "temp"
      (611952 'move' call_tmp[611949](58039 call size _mt[243] a[58025]))
      unknown call_tmp[611954] "expr temp" "maybe param" "maybe type" "temp"
      (611957 'move' call_tmp[611954](58043 call - call_tmp[611949] 1))
      (58073 'move' tmp[58061](58071 call chpl_compute_low_param_loop_bound 0 call_tmp[611954]))
      unknown tmp[58062] "maybe param" "temp"
      unknown call_tmp[611961] "expr temp" "maybe param" "maybe type" "temp"
      (611964 'move' call_tmp[611961](58080 call size _mt[243] a[58025]))
      unknown call_tmp[611966] "expr temp" "maybe param" "maybe type" "temp"
      (611969 'move' call_tmp[611966](58078 call - call_tmp[611961] 1))
      (58086 'move' tmp[58062](58084 call chpl_compute_high_param_loop_bound 0 call_tmp[611966]))
      unknown tmp[58063] "maybe param" "temp"
      (58089 'move' tmp[58063] 1)
      ParamForLoop[58091]
      { d[58060] tmp[58061] tmp[58062] tmp[58063]
        unknown call_tmp[611971] "expr temp" "maybe param" "maybe type" "temp"
        (611974 'move' call_tmp[611971](58050 call result[58032] d[58060]))
        unknown call_tmp[611976] "expr temp" "maybe param" "maybe type" "temp"
        (611979 'move' call_tmp[611976](58054 call a[58025] d[58060]))
        unknown call_tmp[611981] "expr temp" "maybe param" "maybe type" "temp"
        (611984 'move' call_tmp[611981](58055 call ~ call_tmp[611976]))
        (58057 call = call_tmp[611971] call_tmp[611981])
        (474926 'end of statement' result[58032] d[58060] d[58060])
      }
      label _unused_continueLabel[58065]
      label _breakLabel[58064]
    }
    (508319 'move' ret[508314](508318 'deref' result[58032]))
    gotoReturn _end_~[508312] _end_~[508312]
    (474930 'end of statement' result[58032])
    label _end_~[508312]
    (508316 return ret[508314])
  }
  function ![58111](arg a[58108]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508325] "RVV" "temp"
    unknown result[58115] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611986] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611989 'move' call_tmp[611986](58114 'typeof' a[58108]))
    (540884 'default init var' result[58115] call_tmp[611986])
    (58118 'end of statement')
    {
      unknown d[58143] "dead at end of block" "insert auto destroy"
      (540886 'init var' d[58143] 0)
      (474932 'end of statement')
      unknown tmp[58144] "maybe param" "temp"
      unknown call_tmp[611993] "expr temp" "maybe param" "maybe type" "temp"
      (611996 'move' call_tmp[611993](58122 call size _mt[243] a[58108]))
      unknown call_tmp[611998] "expr temp" "maybe param" "maybe type" "temp"
      (612001 'move' call_tmp[611998](58126 call - call_tmp[611993] 1))
      (58156 'move' tmp[58144](58154 call chpl_compute_low_param_loop_bound 0 call_tmp[611998]))
      unknown tmp[58145] "maybe param" "temp"
      unknown call_tmp[612005] "expr temp" "maybe param" "maybe type" "temp"
      (612008 'move' call_tmp[612005](58163 call size _mt[243] a[58108]))
      unknown call_tmp[612010] "expr temp" "maybe param" "maybe type" "temp"
      (612013 'move' call_tmp[612010](58161 call - call_tmp[612005] 1))
      (58169 'move' tmp[58145](58167 call chpl_compute_high_param_loop_bound 0 call_tmp[612010]))
      unknown tmp[58146] "maybe param" "temp"
      (58172 'move' tmp[58146] 1)
      ParamForLoop[58174]
      { d[58143] tmp[58144] tmp[58145] tmp[58146]
        unknown call_tmp[612015] "expr temp" "maybe param" "maybe type" "temp"
        (612018 'move' call_tmp[612015](58133 call result[58115] d[58143]))
        unknown call_tmp[612020] "expr temp" "maybe param" "maybe type" "temp"
        (612023 'move' call_tmp[612020](58137 call a[58108] d[58143]))
        unknown call_tmp[612025] "expr temp" "maybe param" "maybe type" "temp"
        (612028 'move' call_tmp[612025](58138 call ! call_tmp[612020]))
        (58140 call = call_tmp[612015] call_tmp[612025])
        (474933 'end of statement' result[58115] d[58143] d[58143])
      }
      label _unused_continueLabel[58148]
      label _breakLabel[58147]
    }
    (508330 'move' ret[508325](508329 'deref' result[58115]))
    gotoReturn _end_![508323] _end_![508323]
    (474937 'end of statement' result[58115])
    label _end_![508323]
    (508327 return ret[508325])
  }
  function max[58192](arg t[58190]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508336] "RVV" "temp"
    unknown result[58200] "dead at end of block" "insert auto destroy"
    (540888 'default init var' result[58200] t[58190])
    (58203 'end of statement')
    {
      unknown i[58230] "dead at end of block" "insert auto destroy"
      (540890 'init var' i[58230] 0)
      (474939 'end of statement')
      unknown tmp[58231] "maybe param" "temp"
      unknown call_tmp[612032] "expr temp" "maybe param" "maybe type" "temp"
      (612035 'move' call_tmp[612032](58207 call size _mt[243] result[58200]))
      unknown call_tmp[612037] "expr temp" "maybe param" "maybe type" "temp"
      (612040 'move' call_tmp[612037](58211 call - call_tmp[612032] 1))
      (58243 'move' tmp[58231](58241 call chpl_compute_low_param_loop_bound 0 call_tmp[612037]))
      unknown tmp[58232] "maybe param" "temp"
      unknown call_tmp[612044] "expr temp" "maybe param" "maybe type" "temp"
      (612047 'move' call_tmp[612044](58250 call size _mt[243] result[58200]))
      unknown call_tmp[612049] "expr temp" "maybe param" "maybe type" "temp"
      (612052 'move' call_tmp[612049](58248 call - call_tmp[612044] 1))
      (58256 'move' tmp[58232](58254 call chpl_compute_high_param_loop_bound 0 call_tmp[612049]))
      unknown tmp[58233] "maybe param" "temp"
      (58259 'move' tmp[58233] 1)
      ParamForLoop[58261]
      { i[58230] tmp[58231] tmp[58232] tmp[58233]
        {
          unknown call_tmp[612054] "expr temp" "maybe param" "maybe type" "temp"
          (612057 'move' call_tmp[612054](58218 call result[58200] i[58230]))
          unknown call_tmp[612059] "expr temp" "maybe param" "maybe type" "temp"
          (612062 'move' call_tmp[612059](58223 call t[58190] i[58230]))
          unknown call_tmp[612064] "expr temp" "maybe param" "maybe type" "temp"
          (612067 'move' call_tmp[612064](58225 call max call_tmp[612059]))
          (58226 call = call_tmp[612054] call_tmp[612064])
          (474940 'end of statement' result[58200] i[58230] i[58230])
        }
      }
      label _unused_continueLabel[58235]
      label _breakLabel[58234]
    }
    (508342 'move' ret[508336](508341 'coerce' result[58200] t[58190]))
    gotoReturn _end_max[508334] _end_max[508334]
    (474944 'end of statement' result[58200])
    label _end_max[508334]
    (508338 return ret[508336])
  }
  where {
    (58198 call isTupleType t[58190])
  }
  { scopeless type
    t[58190]
  }
  function min[58281](arg t[58279]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508348] "RVV" "temp"
    unknown result[58289] "dead at end of block" "insert auto destroy"
    (540892 'default init var' result[58289] t[58279])
    (58292 'end of statement')
    {
      unknown i[58319] "dead at end of block" "insert auto destroy"
      (540894 'init var' i[58319] 0)
      (474946 'end of statement')
      unknown tmp[58320] "maybe param" "temp"
      unknown call_tmp[612071] "expr temp" "maybe param" "maybe type" "temp"
      (612074 'move' call_tmp[612071](58296 call size _mt[243] result[58289]))
      unknown call_tmp[612076] "expr temp" "maybe param" "maybe type" "temp"
      (612079 'move' call_tmp[612076](58300 call - call_tmp[612071] 1))
      (58332 'move' tmp[58320](58330 call chpl_compute_low_param_loop_bound 0 call_tmp[612076]))
      unknown tmp[58321] "maybe param" "temp"
      unknown call_tmp[612083] "expr temp" "maybe param" "maybe type" "temp"
      (612086 'move' call_tmp[612083](58339 call size _mt[243] result[58289]))
      unknown call_tmp[612088] "expr temp" "maybe param" "maybe type" "temp"
      (612091 'move' call_tmp[612088](58337 call - call_tmp[612083] 1))
      (58345 'move' tmp[58321](58343 call chpl_compute_high_param_loop_bound 0 call_tmp[612088]))
      unknown tmp[58322] "maybe param" "temp"
      (58348 'move' tmp[58322] 1)
      ParamForLoop[58350]
      { i[58319] tmp[58320] tmp[58321] tmp[58322]
        {
          unknown call_tmp[612093] "expr temp" "maybe param" "maybe type" "temp"
          (612096 'move' call_tmp[612093](58307 call result[58289] i[58319]))
          unknown call_tmp[612098] "expr temp" "maybe param" "maybe type" "temp"
          (612101 'move' call_tmp[612098](58312 call t[58279] i[58319]))
          unknown call_tmp[612103] "expr temp" "maybe param" "maybe type" "temp"
          (612106 'move' call_tmp[612103](58314 call min call_tmp[612098]))
          (58315 call = call_tmp[612093] call_tmp[612103])
          (474947 'end of statement' result[58289] i[58319] i[58319])
        }
      }
      label _unused_continueLabel[58324]
      label _breakLabel[58323]
    }
    (508354 'move' ret[508348](508353 'coerce' result[58289] t[58279]))
    gotoReturn _end_min[508346] _end_min[508346]
    (474951 'end of statement' result[58289])
    label _end_min[508346]
    (508350 return ret[508348])
  }
  where {
    (58287 call isTupleType t[58279])
  }
  { scopeless type
    t[58279]
  }
  function chpl_TwoHomogTuples[58370](arg t1[58368]:_any[178](?), arg t2[58372]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508360] "RVV" "param" "temp"
    unknown tmp[418984] "maybe param" "temp"
    (418995 'move' tmp[418984](58377 call isHomogeneousTuple t1[58368]))
    unknown call_tmp[612108] "expr temp" "maybe param" "maybe type" "temp"
    (612111 'move' call_tmp[612108](418997 call _cond_invalid tmp[418984]))
    if call_tmp[612108]
    {
      (419000 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555097] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555098] "maybe param" "temp"
    unknown call_tmp[612113] "expr temp" "maybe param" "maybe type" "temp"
    (612116 'move' call_tmp[612113](418985 call isTrue tmp[418984]))
    (555103 'move' tmp[555098](555101 call _cond_test call_tmp[612113]))
    if tmp[555098]
    {
      unknown tmp[555105] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[612118] "expr temp" "maybe param" "maybe type" "temp"
      (612121 'move' call_tmp[612118](58381 call isHomogeneousTuple t2[58372]))
      (555107 'move' tmp[555105](418988 call isTrue call_tmp[612118]))
      (555112 'move' tmp[555097](555109 '_paramFoldLogical' tmp[555098] tmp[555105]))
    }
    {
      (555117 'move' tmp[555097](555114 '_paramFoldLogical' tmp[555098] 0))
    }
    (508365 'move' ret[508360](508364 'deref' tmp[555097]))
    (508362 return ret[508360])
  }
  function +[58395](arg a[58392]:_tuple[56202](?), arg b[58398]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508369] "RVV" "temp"
    unknown call_tmp[612125] "expr temp" "maybe param" "maybe type" "temp"
    (612128 'move' call_tmp[612125](58407 call size _mt[243] a[58392]))
    unknown call_tmp[612132] "expr temp" "maybe param" "maybe type" "temp"
    (612135 'move' call_tmp[612132](58411 call size _mt[243] b[58398]))
    unknown call_tmp[612137] "expr temp" "maybe param" "maybe type" "temp"
    (612140 'move' call_tmp[612137](58414 call != call_tmp[612125] call_tmp[612132]))
    unknown call_tmp[612142] "expr temp" "maybe param" "maybe type" "temp"
    (612145 'move' call_tmp[612142](58437 call _cond_test call_tmp[612137]))
    if call_tmp[612142]
    {
      (58435 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491625] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612147] "expr temp" "maybe param" "maybe type" "temp"
      (612150 'move' call_tmp[612147](58450 call a[58392] 0))
      unknown call_tmp[612152] "expr temp" "maybe param" "maybe type" "temp"
      (612155 'move' call_tmp[612152](58454 call b[58398] 0))
      unknown call_tmp[612157] "expr temp" "maybe param" "maybe type" "temp"
      (612160 'move' call_tmp[612157](58455 call + call_tmp[612147] call_tmp[612152]))
      (491629 'move' call_type_tmp[491625](58457 'typeof' call_tmp[612157]))
    }
    unknown result[58460] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612164] "expr temp" "maybe param" "maybe type" "temp"
    (612167 'move' call_tmp[612164](58444 call size _mt[243] a[58392]))
    unknown call_tmp[612169] "expr temp" "maybe param" "maybe type" "temp"
    (612172 'move' call_tmp[612169](58458 call * call_tmp[612164] call_type_tmp[491625]))
    (540896 'default init var' result[58460] call_tmp[612169])
    (58463 'end of statement')
    {
      unknown d[58491] "dead at end of block" "insert auto destroy"
      (540898 'init var' d[58491] 0)
      (474956 'end of statement')
      unknown tmp[58492] "maybe param" "temp"
      unknown call_tmp[612176] "expr temp" "maybe param" "maybe type" "temp"
      (612179 'move' call_tmp[612176](58466 call size _mt[243] a[58392]))
      unknown call_tmp[612181] "expr temp" "maybe param" "maybe type" "temp"
      (612184 'move' call_tmp[612181](58470 call - call_tmp[612176] 1))
      (58504 'move' tmp[58492](58502 call chpl_compute_low_param_loop_bound 0 call_tmp[612181]))
      unknown tmp[58493] "maybe param" "temp"
      unknown call_tmp[612188] "expr temp" "maybe param" "maybe type" "temp"
      (612191 'move' call_tmp[612188](58511 call size _mt[243] a[58392]))
      unknown call_tmp[612193] "expr temp" "maybe param" "maybe type" "temp"
      (612196 'move' call_tmp[612193](58509 call - call_tmp[612188] 1))
      (58517 'move' tmp[58493](58515 call chpl_compute_high_param_loop_bound 0 call_tmp[612193]))
      unknown tmp[58494] "maybe param" "temp"
      (58520 'move' tmp[58494] 1)
      ParamForLoop[58522]
      { d[58491] tmp[58492] tmp[58493] tmp[58494]
        unknown call_tmp[612198] "expr temp" "maybe param" "maybe type" "temp"
        (612201 'move' call_tmp[612198](58477 call result[58460] d[58491]))
        unknown call_tmp[612203] "expr temp" "maybe param" "maybe type" "temp"
        (612206 'move' call_tmp[612203](58481 call a[58392] d[58491]))
        unknown call_tmp[612208] "expr temp" "maybe param" "maybe type" "temp"
        (612211 'move' call_tmp[612208](58485 call b[58398] d[58491]))
        unknown call_tmp[612213] "expr temp" "maybe param" "maybe type" "temp"
        (612216 'move' call_tmp[612213](58486 call + call_tmp[612203] call_tmp[612208]))
        (58488 call = call_tmp[612198] call_tmp[612213])
        (474957 'end of statement' result[58460] d[58491] d[58491] d[58491])
      }
      label _unused_continueLabel[58496]
      label _breakLabel[58495]
    }
    (508374 'move' ret[508369](508373 'deref' result[58460]))
    gotoReturn _end_+[508367] _end_+[508367]
    (474962 'end of statement' result[58460])
    label _end_+[508367]
    (508371 return ret[508369])
  }
  where {
    (58405 call chpl_TwoHomogTuples a[58392] b[58398])
  }
  function +[58543](arg a[58540]:_tuple[56202](?), arg b[58546]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508380] "RVV" "temp"
    unknown call_tmp[612220] "expr temp" "maybe param" "maybe type" "temp"
    (612223 'move' call_tmp[612220](58550 call size _mt[243] a[58540]))
    unknown call_tmp[612227] "expr temp" "maybe param" "maybe type" "temp"
    (612230 'move' call_tmp[612227](58554 call size _mt[243] b[58546]))
    unknown call_tmp[612232] "expr temp" "maybe param" "maybe type" "temp"
    (612235 'move' call_tmp[612232](58557 call != call_tmp[612220] call_tmp[612227]))
    unknown call_tmp[612237] "expr temp" "maybe param" "maybe type" "temp"
    (612240 'move' call_tmp[612237](58564 call _cond_test call_tmp[612232]))
    if call_tmp[612237]
    {
      (58562 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612244] "expr temp" "maybe param" "maybe type" "temp"
    (612247 'move' call_tmp[612244](58571 call size _mt[243] a[58540]))
    unknown call_tmp[612249] "expr temp" "maybe param" "maybe type" "temp"
    (612252 'move' call_tmp[612249](58575 call == call_tmp[612244] 1))
    unknown call_tmp[612254] "expr temp" "maybe param" "maybe type" "temp"
    (612257 'move' call_tmp[612254](58617 call _cond_test call_tmp[612249]))
    if call_tmp[612254]
    {
      unknown call_tmp[612259] "expr temp" "maybe param" "maybe type" "temp"
      (612262 'move' call_tmp[612259](58580 call a[58540] 0))
      unknown call_tmp[612264] "expr temp" "maybe param" "maybe type" "temp"
      (612267 'move' call_tmp[612264](58584 call b[58546] 0))
      unknown call_tmp[612269] "expr temp" "maybe param" "maybe type" "temp"
      (612272 'move' call_tmp[612269](58585 call + call_tmp[612259] call_tmp[612264]))
      unknown call_tmp[612274] "expr temp" "maybe param" "maybe type" "temp"
      (612277 'move' call_tmp[612274](58587 call _build_tuple call_tmp[612269]))
      (508385 'move' ret[508380](508384 'deref' call_tmp[612274]))
      gotoReturn _end_+[508378] _end_+[508378]
    }
    {
      unknown call_tmp[612279] "expr temp" "maybe param" "maybe type" "temp"
      (612282 'move' call_tmp[612279](58594 call a[58540] 0))
      unknown call_tmp[612284] "expr temp" "maybe param" "maybe type" "temp"
      (612287 'move' call_tmp[612284](58598 call b[58546] 0))
      unknown call_tmp[612289] "expr temp" "maybe param" "maybe type" "temp"
      (612292 'move' call_tmp[612289](58599 call + call_tmp[612279] call_tmp[612284]))
      unknown call_tmp[612294] "expr temp" "maybe param" "maybe type" "temp"
      (612297 'move' call_tmp[612294](58604 call chpl__tupleRest a[58540]))
      unknown call_tmp[612299] "expr temp" "maybe param" "maybe type" "temp"
      (612302 'move' call_tmp[612299](58608 call chpl__tupleRest b[58546]))
      unknown call_tmp[612304] "expr temp" "maybe param" "maybe type" "temp"
      (612307 'move' call_tmp[612304](58609 call + call_tmp[612294] call_tmp[612299]))
      unknown call_tmp[612309] "expr temp" "maybe param" "maybe type" "temp"
      (612312 'move' call_tmp[612309](58613 call _build_tuple call_tmp[612289](58611 'expand_tuple' call_tmp[612304])))
      (508390 'move' ret[508380](508389 'deref' call_tmp[612309]))
      gotoReturn _end_+[508378] _end_+[508378]
    }
    label _end_+[508378]
    (508382 return ret[508380])
  }
  function -[58631](arg a[58628]:_tuple[56202](?), arg b[58634]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508396] "RVV" "temp"
    unknown call_tmp[612316] "expr temp" "maybe param" "maybe type" "temp"
    (612319 'move' call_tmp[612316](58643 call size _mt[243] a[58628]))
    unknown call_tmp[612323] "expr temp" "maybe param" "maybe type" "temp"
    (612326 'move' call_tmp[612323](58647 call size _mt[243] b[58634]))
    unknown call_tmp[612328] "expr temp" "maybe param" "maybe type" "temp"
    (612331 'move' call_tmp[612328](58650 call != call_tmp[612316] call_tmp[612323]))
    unknown call_tmp[612333] "expr temp" "maybe param" "maybe type" "temp"
    (612336 'move' call_tmp[612333](58673 call _cond_test call_tmp[612328]))
    if call_tmp[612333]
    {
      (58671 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491631] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612338] "expr temp" "maybe param" "maybe type" "temp"
      (612341 'move' call_tmp[612338](58686 call a[58628] 0))
      unknown call_tmp[612343] "expr temp" "maybe param" "maybe type" "temp"
      (612346 'move' call_tmp[612343](58690 call b[58634] 0))
      unknown call_tmp[612348] "expr temp" "maybe param" "maybe type" "temp"
      (612351 'move' call_tmp[612348](58691 call - call_tmp[612338] call_tmp[612343]))
      (491635 'move' call_type_tmp[491631](58693 'typeof' call_tmp[612348]))
    }
    unknown result[58696] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612355] "expr temp" "maybe param" "maybe type" "temp"
    (612358 'move' call_tmp[612355](58680 call size _mt[243] a[58628]))
    unknown call_tmp[612360] "expr temp" "maybe param" "maybe type" "temp"
    (612363 'move' call_tmp[612360](58694 call * call_tmp[612355] call_type_tmp[491631]))
    (540900 'default init var' result[58696] call_tmp[612360])
    (58699 'end of statement')
    {
      unknown d[58727] "dead at end of block" "insert auto destroy"
      (540902 'init var' d[58727] 0)
      (474968 'end of statement')
      unknown tmp[58728] "maybe param" "temp"
      unknown call_tmp[612367] "expr temp" "maybe param" "maybe type" "temp"
      (612370 'move' call_tmp[612367](58702 call size _mt[243] a[58628]))
      unknown call_tmp[612372] "expr temp" "maybe param" "maybe type" "temp"
      (612375 'move' call_tmp[612372](58706 call - call_tmp[612367] 1))
      (58740 'move' tmp[58728](58738 call chpl_compute_low_param_loop_bound 0 call_tmp[612372]))
      unknown tmp[58729] "maybe param" "temp"
      unknown call_tmp[612379] "expr temp" "maybe param" "maybe type" "temp"
      (612382 'move' call_tmp[612379](58747 call size _mt[243] a[58628]))
      unknown call_tmp[612384] "expr temp" "maybe param" "maybe type" "temp"
      (612387 'move' call_tmp[612384](58745 call - call_tmp[612379] 1))
      (58753 'move' tmp[58729](58751 call chpl_compute_high_param_loop_bound 0 call_tmp[612384]))
      unknown tmp[58730] "maybe param" "temp"
      (58756 'move' tmp[58730] 1)
      ParamForLoop[58758]
      { d[58727] tmp[58728] tmp[58729] tmp[58730]
        unknown call_tmp[612389] "expr temp" "maybe param" "maybe type" "temp"
        (612392 'move' call_tmp[612389](58713 call result[58696] d[58727]))
        unknown call_tmp[612394] "expr temp" "maybe param" "maybe type" "temp"
        (612397 'move' call_tmp[612394](58717 call a[58628] d[58727]))
        unknown call_tmp[612399] "expr temp" "maybe param" "maybe type" "temp"
        (612402 'move' call_tmp[612399](58721 call b[58634] d[58727]))
        unknown call_tmp[612404] "expr temp" "maybe param" "maybe type" "temp"
        (612407 'move' call_tmp[612404](58722 call - call_tmp[612394] call_tmp[612399]))
        (58724 call = call_tmp[612389] call_tmp[612404])
        (474969 'end of statement' result[58696] d[58727] d[58727] d[58727])
      }
      label _unused_continueLabel[58732]
      label _breakLabel[58731]
    }
    (508401 'move' ret[508396](508400 'deref' result[58696]))
    gotoReturn _end_-[508394] _end_-[508394]
    (474974 'end of statement' result[58696])
    label _end_-[508394]
    (508398 return ret[508396])
  }
  where {
    (58641 call chpl_TwoHomogTuples a[58628] b[58634])
  }
  function -[58779](arg a[58776]:_tuple[56202](?), arg b[58782]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508407] "RVV" "temp"
    unknown call_tmp[612411] "expr temp" "maybe param" "maybe type" "temp"
    (612414 'move' call_tmp[612411](58786 call size _mt[243] a[58776]))
    unknown call_tmp[612418] "expr temp" "maybe param" "maybe type" "temp"
    (612421 'move' call_tmp[612418](58790 call size _mt[243] b[58782]))
    unknown call_tmp[612423] "expr temp" "maybe param" "maybe type" "temp"
    (612426 'move' call_tmp[612423](58793 call != call_tmp[612411] call_tmp[612418]))
    unknown call_tmp[612428] "expr temp" "maybe param" "maybe type" "temp"
    (612431 'move' call_tmp[612428](58800 call _cond_test call_tmp[612423]))
    if call_tmp[612428]
    {
      (58798 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612435] "expr temp" "maybe param" "maybe type" "temp"
    (612438 'move' call_tmp[612435](58807 call size _mt[243] a[58776]))
    unknown call_tmp[612440] "expr temp" "maybe param" "maybe type" "temp"
    (612443 'move' call_tmp[612440](58811 call == call_tmp[612435] 1))
    unknown call_tmp[612445] "expr temp" "maybe param" "maybe type" "temp"
    (612448 'move' call_tmp[612445](58853 call _cond_test call_tmp[612440]))
    if call_tmp[612445]
    {
      unknown call_tmp[612450] "expr temp" "maybe param" "maybe type" "temp"
      (612453 'move' call_tmp[612450](58816 call a[58776] 0))
      unknown call_tmp[612455] "expr temp" "maybe param" "maybe type" "temp"
      (612458 'move' call_tmp[612455](58820 call b[58782] 0))
      unknown call_tmp[612460] "expr temp" "maybe param" "maybe type" "temp"
      (612463 'move' call_tmp[612460](58821 call - call_tmp[612450] call_tmp[612455]))
      unknown call_tmp[612465] "expr temp" "maybe param" "maybe type" "temp"
      (612468 'move' call_tmp[612465](58823 call _build_tuple call_tmp[612460]))
      (508412 'move' ret[508407](508411 'deref' call_tmp[612465]))
      gotoReturn _end_-[508405] _end_-[508405]
    }
    {
      unknown call_tmp[612470] "expr temp" "maybe param" "maybe type" "temp"
      (612473 'move' call_tmp[612470](58830 call a[58776] 0))
      unknown call_tmp[612475] "expr temp" "maybe param" "maybe type" "temp"
      (612478 'move' call_tmp[612475](58834 call b[58782] 0))
      unknown call_tmp[612480] "expr temp" "maybe param" "maybe type" "temp"
      (612483 'move' call_tmp[612480](58835 call - call_tmp[612470] call_tmp[612475]))
      unknown call_tmp[612485] "expr temp" "maybe param" "maybe type" "temp"
      (612488 'move' call_tmp[612485](58840 call chpl__tupleRest a[58776]))
      unknown call_tmp[612490] "expr temp" "maybe param" "maybe type" "temp"
      (612493 'move' call_tmp[612490](58844 call chpl__tupleRest b[58782]))
      unknown call_tmp[612495] "expr temp" "maybe param" "maybe type" "temp"
      (612498 'move' call_tmp[612495](58845 call - call_tmp[612485] call_tmp[612490]))
      unknown call_tmp[612500] "expr temp" "maybe param" "maybe type" "temp"
      (612503 'move' call_tmp[612500](58849 call _build_tuple call_tmp[612480](58847 'expand_tuple' call_tmp[612495])))
      (508417 'move' ret[508407](508416 'deref' call_tmp[612500]))
      gotoReturn _end_-[508405] _end_-[508405]
    }
    label _end_-[508405]
    (508409 return ret[508407])
  }
  function *[58867](arg a[58864]:_tuple[56202](?), arg b[58870]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508423] "RVV" "temp"
    unknown call_tmp[612507] "expr temp" "maybe param" "maybe type" "temp"
    (612510 'move' call_tmp[612507](58879 call size _mt[243] a[58864]))
    unknown call_tmp[612514] "expr temp" "maybe param" "maybe type" "temp"
    (612517 'move' call_tmp[612514](58883 call size _mt[243] b[58870]))
    unknown call_tmp[612519] "expr temp" "maybe param" "maybe type" "temp"
    (612522 'move' call_tmp[612519](58886 call != call_tmp[612507] call_tmp[612514]))
    unknown call_tmp[612524] "expr temp" "maybe param" "maybe type" "temp"
    (612527 'move' call_tmp[612524](58909 call _cond_test call_tmp[612519]))
    if call_tmp[612524]
    {
      (58907 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491637] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612529] "expr temp" "maybe param" "maybe type" "temp"
      (612532 'move' call_tmp[612529](58922 call a[58864] 0))
      unknown call_tmp[612534] "expr temp" "maybe param" "maybe type" "temp"
      (612537 'move' call_tmp[612534](58926 call b[58870] 0))
      unknown call_tmp[612539] "expr temp" "maybe param" "maybe type" "temp"
      (612542 'move' call_tmp[612539](58927 call * call_tmp[612529] call_tmp[612534]))
      (491641 'move' call_type_tmp[491637](58929 'typeof' call_tmp[612539]))
    }
    unknown result[58932] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612546] "expr temp" "maybe param" "maybe type" "temp"
    (612549 'move' call_tmp[612546](58916 call size _mt[243] a[58864]))
    unknown call_tmp[612551] "expr temp" "maybe param" "maybe type" "temp"
    (612554 'move' call_tmp[612551](58930 call * call_tmp[612546] call_type_tmp[491637]))
    (540904 'default init var' result[58932] call_tmp[612551])
    (58935 'end of statement')
    {
      unknown d[58963] "dead at end of block" "insert auto destroy"
      (540906 'init var' d[58963] 0)
      (474980 'end of statement')
      unknown tmp[58964] "maybe param" "temp"
      unknown call_tmp[612558] "expr temp" "maybe param" "maybe type" "temp"
      (612561 'move' call_tmp[612558](58938 call size _mt[243] a[58864]))
      unknown call_tmp[612563] "expr temp" "maybe param" "maybe type" "temp"
      (612566 'move' call_tmp[612563](58942 call - call_tmp[612558] 1))
      (58976 'move' tmp[58964](58974 call chpl_compute_low_param_loop_bound 0 call_tmp[612563]))
      unknown tmp[58965] "maybe param" "temp"
      unknown call_tmp[612570] "expr temp" "maybe param" "maybe type" "temp"
      (612573 'move' call_tmp[612570](58983 call size _mt[243] a[58864]))
      unknown call_tmp[612575] "expr temp" "maybe param" "maybe type" "temp"
      (612578 'move' call_tmp[612575](58981 call - call_tmp[612570] 1))
      (58989 'move' tmp[58965](58987 call chpl_compute_high_param_loop_bound 0 call_tmp[612575]))
      unknown tmp[58966] "maybe param" "temp"
      (58992 'move' tmp[58966] 1)
      ParamForLoop[58994]
      { d[58963] tmp[58964] tmp[58965] tmp[58966]
        unknown call_tmp[612580] "expr temp" "maybe param" "maybe type" "temp"
        (612583 'move' call_tmp[612580](58949 call result[58932] d[58963]))
        unknown call_tmp[612585] "expr temp" "maybe param" "maybe type" "temp"
        (612588 'move' call_tmp[612585](58953 call a[58864] d[58963]))
        unknown call_tmp[612590] "expr temp" "maybe param" "maybe type" "temp"
        (612593 'move' call_tmp[612590](58957 call b[58870] d[58963]))
        unknown call_tmp[612595] "expr temp" "maybe param" "maybe type" "temp"
        (612598 'move' call_tmp[612595](58958 call * call_tmp[612585] call_tmp[612590]))
        (58960 call = call_tmp[612580] call_tmp[612595])
        (474981 'end of statement' result[58932] d[58963] d[58963] d[58963])
      }
      label _unused_continueLabel[58968]
      label _breakLabel[58967]
    }
    (508428 'move' ret[508423](508427 'deref' result[58932]))
    gotoReturn _end_*[508421] _end_*[508421]
    (474986 'end of statement' result[58932])
    label _end_*[508421]
    (508425 return ret[508423])
  }
  where {
    (58877 call chpl_TwoHomogTuples a[58864] b[58870])
  }
  function *[59015](arg a[59012]:_tuple[56202](?), arg b[59018]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508434] "RVV" "temp"
    unknown call_tmp[612602] "expr temp" "maybe param" "maybe type" "temp"
    (612605 'move' call_tmp[612602](59022 call size _mt[243] a[59012]))
    unknown call_tmp[612609] "expr temp" "maybe param" "maybe type" "temp"
    (612612 'move' call_tmp[612609](59026 call size _mt[243] b[59018]))
    unknown call_tmp[612614] "expr temp" "maybe param" "maybe type" "temp"
    (612617 'move' call_tmp[612614](59029 call != call_tmp[612602] call_tmp[612609]))
    unknown call_tmp[612619] "expr temp" "maybe param" "maybe type" "temp"
    (612622 'move' call_tmp[612619](59036 call _cond_test call_tmp[612614]))
    if call_tmp[612619]
    {
      (59034 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612626] "expr temp" "maybe param" "maybe type" "temp"
    (612629 'move' call_tmp[612626](59043 call size _mt[243] a[59012]))
    unknown call_tmp[612631] "expr temp" "maybe param" "maybe type" "temp"
    (612634 'move' call_tmp[612631](59047 call == call_tmp[612626] 1))
    unknown call_tmp[612636] "expr temp" "maybe param" "maybe type" "temp"
    (612639 'move' call_tmp[612636](59089 call _cond_test call_tmp[612631]))
    if call_tmp[612636]
    {
      unknown call_tmp[612641] "expr temp" "maybe param" "maybe type" "temp"
      (612644 'move' call_tmp[612641](59052 call a[59012] 0))
      unknown call_tmp[612646] "expr temp" "maybe param" "maybe type" "temp"
      (612649 'move' call_tmp[612646](59056 call b[59018] 0))
      unknown call_tmp[612651] "expr temp" "maybe param" "maybe type" "temp"
      (612654 'move' call_tmp[612651](59057 call * call_tmp[612641] call_tmp[612646]))
      unknown call_tmp[612656] "expr temp" "maybe param" "maybe type" "temp"
      (612659 'move' call_tmp[612656](59059 call _build_tuple call_tmp[612651]))
      (508439 'move' ret[508434](508438 'deref' call_tmp[612656]))
      gotoReturn _end_*[508432] _end_*[508432]
    }
    {
      unknown call_tmp[612661] "expr temp" "maybe param" "maybe type" "temp"
      (612664 'move' call_tmp[612661](59066 call a[59012] 0))
      unknown call_tmp[612666] "expr temp" "maybe param" "maybe type" "temp"
      (612669 'move' call_tmp[612666](59070 call b[59018] 0))
      unknown call_tmp[612671] "expr temp" "maybe param" "maybe type" "temp"
      (612674 'move' call_tmp[612671](59071 call * call_tmp[612661] call_tmp[612666]))
      unknown call_tmp[612676] "expr temp" "maybe param" "maybe type" "temp"
      (612679 'move' call_tmp[612676](59076 call chpl__tupleRest a[59012]))
      unknown call_tmp[612681] "expr temp" "maybe param" "maybe type" "temp"
      (612684 'move' call_tmp[612681](59080 call chpl__tupleRest b[59018]))
      unknown call_tmp[612686] "expr temp" "maybe param" "maybe type" "temp"
      (612689 'move' call_tmp[612686](59081 call * call_tmp[612676] call_tmp[612681]))
      unknown call_tmp[612691] "expr temp" "maybe param" "maybe type" "temp"
      (612694 'move' call_tmp[612691](59085 call _build_tuple call_tmp[612671](59083 'expand_tuple' call_tmp[612686])))
      (508444 'move' ret[508434](508443 'deref' call_tmp[612691]))
      gotoReturn _end_*[508432] _end_*[508432]
    }
    label _end_*[508432]
    (508436 return ret[508434])
  }
  function /[59103](arg a[59100]:_tuple[56202](?), arg b[59106]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508450] "RVV" "temp"
    unknown call_tmp[612698] "expr temp" "maybe param" "maybe type" "temp"
    (612701 'move' call_tmp[612698](59115 call size _mt[243] a[59100]))
    unknown call_tmp[612705] "expr temp" "maybe param" "maybe type" "temp"
    (612708 'move' call_tmp[612705](59119 call size _mt[243] b[59106]))
    unknown call_tmp[612710] "expr temp" "maybe param" "maybe type" "temp"
    (612713 'move' call_tmp[612710](59122 call != call_tmp[612698] call_tmp[612705]))
    unknown call_tmp[612715] "expr temp" "maybe param" "maybe type" "temp"
    (612718 'move' call_tmp[612715](59145 call _cond_test call_tmp[612710]))
    if call_tmp[612715]
    {
      (59143 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491643] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612720] "expr temp" "maybe param" "maybe type" "temp"
      (612723 'move' call_tmp[612720](59158 call a[59100] 0))
      unknown call_tmp[612725] "expr temp" "maybe param" "maybe type" "temp"
      (612728 'move' call_tmp[612725](59162 call b[59106] 0))
      unknown call_tmp[612730] "expr temp" "maybe param" "maybe type" "temp"
      (612733 'move' call_tmp[612730](59163 call / call_tmp[612720] call_tmp[612725]))
      (491647 'move' call_type_tmp[491643](59165 'typeof' call_tmp[612730]))
    }
    unknown result[59168] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612737] "expr temp" "maybe param" "maybe type" "temp"
    (612740 'move' call_tmp[612737](59152 call size _mt[243] a[59100]))
    unknown call_tmp[612742] "expr temp" "maybe param" "maybe type" "temp"
    (612745 'move' call_tmp[612742](59166 call * call_tmp[612737] call_type_tmp[491643]))
    (540908 'default init var' result[59168] call_tmp[612742])
    (59171 'end of statement')
    {
      unknown d[59199] "dead at end of block" "insert auto destroy"
      (540910 'init var' d[59199] 0)
      (474992 'end of statement')
      unknown tmp[59200] "maybe param" "temp"
      unknown call_tmp[612749] "expr temp" "maybe param" "maybe type" "temp"
      (612752 'move' call_tmp[612749](59174 call size _mt[243] a[59100]))
      unknown call_tmp[612754] "expr temp" "maybe param" "maybe type" "temp"
      (612757 'move' call_tmp[612754](59178 call - call_tmp[612749] 1))
      (59212 'move' tmp[59200](59210 call chpl_compute_low_param_loop_bound 0 call_tmp[612754]))
      unknown tmp[59201] "maybe param" "temp"
      unknown call_tmp[612761] "expr temp" "maybe param" "maybe type" "temp"
      (612764 'move' call_tmp[612761](59219 call size _mt[243] a[59100]))
      unknown call_tmp[612766] "expr temp" "maybe param" "maybe type" "temp"
      (612769 'move' call_tmp[612766](59217 call - call_tmp[612761] 1))
      (59225 'move' tmp[59201](59223 call chpl_compute_high_param_loop_bound 0 call_tmp[612766]))
      unknown tmp[59202] "maybe param" "temp"
      (59228 'move' tmp[59202] 1)
      ParamForLoop[59230]
      { d[59199] tmp[59200] tmp[59201] tmp[59202]
        unknown call_tmp[612771] "expr temp" "maybe param" "maybe type" "temp"
        (612774 'move' call_tmp[612771](59185 call result[59168] d[59199]))
        unknown call_tmp[612776] "expr temp" "maybe param" "maybe type" "temp"
        (612779 'move' call_tmp[612776](59189 call a[59100] d[59199]))
        unknown call_tmp[612781] "expr temp" "maybe param" "maybe type" "temp"
        (612784 'move' call_tmp[612781](59193 call b[59106] d[59199]))
        unknown call_tmp[612786] "expr temp" "maybe param" "maybe type" "temp"
        (612789 'move' call_tmp[612786](59194 call / call_tmp[612776] call_tmp[612781]))
        (59196 call = call_tmp[612771] call_tmp[612786])
        (474993 'end of statement' result[59168] d[59199] d[59199] d[59199])
      }
      label _unused_continueLabel[59204]
      label _breakLabel[59203]
    }
    (508455 'move' ret[508450](508454 'deref' result[59168]))
    gotoReturn _end_/[508448] _end_/[508448]
    (474998 'end of statement' result[59168])
    label _end_/[508448]
    (508452 return ret[508450])
  }
  where {
    (59113 call chpl_TwoHomogTuples a[59100] b[59106])
  }
  function /[59251](arg a[59248]:_tuple[56202](?), arg b[59254]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508461] "RVV" "temp"
    unknown call_tmp[612793] "expr temp" "maybe param" "maybe type" "temp"
    (612796 'move' call_tmp[612793](59258 call size _mt[243] a[59248]))
    unknown call_tmp[612800] "expr temp" "maybe param" "maybe type" "temp"
    (612803 'move' call_tmp[612800](59262 call size _mt[243] b[59254]))
    unknown call_tmp[612805] "expr temp" "maybe param" "maybe type" "temp"
    (612808 'move' call_tmp[612805](59265 call != call_tmp[612793] call_tmp[612800]))
    unknown call_tmp[612810] "expr temp" "maybe param" "maybe type" "temp"
    (612813 'move' call_tmp[612810](59272 call _cond_test call_tmp[612805]))
    if call_tmp[612810]
    {
      (59270 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612817] "expr temp" "maybe param" "maybe type" "temp"
    (612820 'move' call_tmp[612817](59279 call size _mt[243] a[59248]))
    unknown call_tmp[612822] "expr temp" "maybe param" "maybe type" "temp"
    (612825 'move' call_tmp[612822](59283 call == call_tmp[612817] 1))
    unknown call_tmp[612827] "expr temp" "maybe param" "maybe type" "temp"
    (612830 'move' call_tmp[612827](59325 call _cond_test call_tmp[612822]))
    if call_tmp[612827]
    {
      unknown call_tmp[612832] "expr temp" "maybe param" "maybe type" "temp"
      (612835 'move' call_tmp[612832](59288 call a[59248] 0))
      unknown call_tmp[612837] "expr temp" "maybe param" "maybe type" "temp"
      (612840 'move' call_tmp[612837](59292 call b[59254] 0))
      unknown call_tmp[612842] "expr temp" "maybe param" "maybe type" "temp"
      (612845 'move' call_tmp[612842](59293 call / call_tmp[612832] call_tmp[612837]))
      unknown call_tmp[612847] "expr temp" "maybe param" "maybe type" "temp"
      (612850 'move' call_tmp[612847](59295 call _build_tuple call_tmp[612842]))
      (508466 'move' ret[508461](508465 'deref' call_tmp[612847]))
      gotoReturn _end_/[508459] _end_/[508459]
    }
    {
      unknown call_tmp[612852] "expr temp" "maybe param" "maybe type" "temp"
      (612855 'move' call_tmp[612852](59302 call a[59248] 0))
      unknown call_tmp[612857] "expr temp" "maybe param" "maybe type" "temp"
      (612860 'move' call_tmp[612857](59306 call b[59254] 0))
      unknown call_tmp[612862] "expr temp" "maybe param" "maybe type" "temp"
      (612865 'move' call_tmp[612862](59307 call / call_tmp[612852] call_tmp[612857]))
      unknown call_tmp[612867] "expr temp" "maybe param" "maybe type" "temp"
      (612870 'move' call_tmp[612867](59312 call chpl__tupleRest a[59248]))
      unknown call_tmp[612872] "expr temp" "maybe param" "maybe type" "temp"
      (612875 'move' call_tmp[612872](59316 call chpl__tupleRest b[59254]))
      unknown call_tmp[612877] "expr temp" "maybe param" "maybe type" "temp"
      (612880 'move' call_tmp[612877](59317 call / call_tmp[612867] call_tmp[612872]))
      unknown call_tmp[612882] "expr temp" "maybe param" "maybe type" "temp"
      (612885 'move' call_tmp[612882](59321 call _build_tuple call_tmp[612862](59319 'expand_tuple' call_tmp[612877])))
      (508471 'move' ret[508461](508470 'deref' call_tmp[612882]))
      gotoReturn _end_/[508459] _end_/[508459]
    }
    label _end_/[508459]
    (508463 return ret[508461])
  }
  function %[59339](arg a[59336]:_tuple[56202](?), arg b[59342]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508477] "RVV" "temp"
    unknown call_tmp[612889] "expr temp" "maybe param" "maybe type" "temp"
    (612892 'move' call_tmp[612889](59351 call size _mt[243] a[59336]))
    unknown call_tmp[612896] "expr temp" "maybe param" "maybe type" "temp"
    (612899 'move' call_tmp[612896](59355 call size _mt[243] b[59342]))
    unknown call_tmp[612901] "expr temp" "maybe param" "maybe type" "temp"
    (612904 'move' call_tmp[612901](59358 call != call_tmp[612889] call_tmp[612896]))
    unknown call_tmp[612906] "expr temp" "maybe param" "maybe type" "temp"
    (612909 'move' call_tmp[612906](59381 call _cond_test call_tmp[612901]))
    if call_tmp[612906]
    {
      (59379 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491649] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612911] "expr temp" "maybe param" "maybe type" "temp"
      (612914 'move' call_tmp[612911](59394 call a[59336] 0))
      unknown call_tmp[612916] "expr temp" "maybe param" "maybe type" "temp"
      (612919 'move' call_tmp[612916](59398 call b[59342] 0))
      unknown call_tmp[612921] "expr temp" "maybe param" "maybe type" "temp"
      (612924 'move' call_tmp[612921](59399 call % call_tmp[612911] call_tmp[612916]))
      (491653 'move' call_type_tmp[491649](59401 'typeof' call_tmp[612921]))
    }
    unknown result[59404] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612928] "expr temp" "maybe param" "maybe type" "temp"
    (612931 'move' call_tmp[612928](59388 call size _mt[243] a[59336]))
    unknown call_tmp[612933] "expr temp" "maybe param" "maybe type" "temp"
    (612936 'move' call_tmp[612933](59402 call * call_tmp[612928] call_type_tmp[491649]))
    (540912 'default init var' result[59404] call_tmp[612933])
    (59407 'end of statement')
    {
      unknown d[59435] "dead at end of block" "insert auto destroy"
      (540914 'init var' d[59435] 0)
      (475004 'end of statement')
      unknown tmp[59436] "maybe param" "temp"
      unknown call_tmp[612940] "expr temp" "maybe param" "maybe type" "temp"
      (612943 'move' call_tmp[612940](59410 call size _mt[243] a[59336]))
      unknown call_tmp[612945] "expr temp" "maybe param" "maybe type" "temp"
      (612948 'move' call_tmp[612945](59414 call - call_tmp[612940] 1))
      (59448 'move' tmp[59436](59446 call chpl_compute_low_param_loop_bound 0 call_tmp[612945]))
      unknown tmp[59437] "maybe param" "temp"
      unknown call_tmp[612952] "expr temp" "maybe param" "maybe type" "temp"
      (612955 'move' call_tmp[612952](59455 call size _mt[243] a[59336]))
      unknown call_tmp[612957] "expr temp" "maybe param" "maybe type" "temp"
      (612960 'move' call_tmp[612957](59453 call - call_tmp[612952] 1))
      (59461 'move' tmp[59437](59459 call chpl_compute_high_param_loop_bound 0 call_tmp[612957]))
      unknown tmp[59438] "maybe param" "temp"
      (59464 'move' tmp[59438] 1)
      ParamForLoop[59466]
      { d[59435] tmp[59436] tmp[59437] tmp[59438]
        unknown call_tmp[612962] "expr temp" "maybe param" "maybe type" "temp"
        (612965 'move' call_tmp[612962](59421 call result[59404] d[59435]))
        unknown call_tmp[612967] "expr temp" "maybe param" "maybe type" "temp"
        (612970 'move' call_tmp[612967](59425 call a[59336] d[59435]))
        unknown call_tmp[612972] "expr temp" "maybe param" "maybe type" "temp"
        (612975 'move' call_tmp[612972](59429 call b[59342] d[59435]))
        unknown call_tmp[612977] "expr temp" "maybe param" "maybe type" "temp"
        (612980 'move' call_tmp[612977](59430 call % call_tmp[612967] call_tmp[612972]))
        (59432 call = call_tmp[612962] call_tmp[612977])
        (475005 'end of statement' result[59404] d[59435] d[59435] d[59435])
      }
      label _unused_continueLabel[59440]
      label _breakLabel[59439]
    }
    (508482 'move' ret[508477](508481 'deref' result[59404]))
    gotoReturn _end_%[508475] _end_%[508475]
    (475010 'end of statement' result[59404])
    label _end_%[508475]
    (508479 return ret[508477])
  }
  where {
    (59349 call chpl_TwoHomogTuples a[59336] b[59342])
  }
  function %[59487](arg a[59484]:_tuple[56202](?), arg b[59490]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508488] "RVV" "temp"
    unknown call_tmp[612984] "expr temp" "maybe param" "maybe type" "temp"
    (612987 'move' call_tmp[612984](59494 call size _mt[243] a[59484]))
    unknown call_tmp[612991] "expr temp" "maybe param" "maybe type" "temp"
    (612994 'move' call_tmp[612991](59498 call size _mt[243] b[59490]))
    unknown call_tmp[612996] "expr temp" "maybe param" "maybe type" "temp"
    (612999 'move' call_tmp[612996](59501 call != call_tmp[612984] call_tmp[612991]))
    unknown call_tmp[613001] "expr temp" "maybe param" "maybe type" "temp"
    (613004 'move' call_tmp[613001](59508 call _cond_test call_tmp[612996]))
    if call_tmp[613001]
    {
      (59506 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[613008] "expr temp" "maybe param" "maybe type" "temp"
    (613011 'move' call_tmp[613008](59515 call size _mt[243] a[59484]))
    unknown call_tmp[613013] "expr temp" "maybe param" "maybe type" "temp"
    (613016 'move' call_tmp[613013](59519 call == call_tmp[613008] 1))
    unknown call_tmp[613018] "expr temp" "maybe param" "maybe type" "temp"
    (613021 'move' call_tmp[613018](59561 call _cond_test call_tmp[613013]))
    if call_tmp[613018]
    {
      unknown call_tmp[613023] "expr temp" "maybe param" "maybe type" "temp"
      (613026 'move' call_tmp[613023](59524 call a[59484] 0))
      unknown call_tmp[613028] "expr temp" "maybe param" "maybe type" "temp"
      (613031 'move' call_tmp[613028](59528 call b[59490] 0))
      unknown call_tmp[613033] "expr temp" "maybe param" "maybe type" "temp"
      (613036 'move' call_tmp[613033](59529 call % call_tmp[613023] call_tmp[613028]))
      unknown call_tmp[613038] "expr temp" "maybe param" "maybe type" "temp"
      (613041 'move' call_tmp[613038](59531 call _build_tuple call_tmp[613033]))
      (508493 'move' ret[508488](508492 'deref' call_tmp[613038]))
      gotoReturn _end_%[508486] _end_%[508486]
    }
    {
      unknown call_tmp[613043] "expr temp" "maybe param" "maybe type" "temp"
      (613046 'move' call_tmp[613043](59538 call a[59484] 0))
      unknown call_tmp[613048] "expr temp" "maybe param" "maybe type" "temp"
      (613051 'move' call_tmp[613048](59542 call b[59490] 0))
      unknown call_tmp[613053] "expr temp" "maybe param" "maybe type" "temp"
      (613056 'move' call_tmp[613053](59543 call % call_tmp[613043] call_tmp[613048]))
      unknown call_tmp[613058] "expr temp" "maybe param" "maybe type" "temp"
      (613061 'move' call_tmp[613058](59548 call chpl__tupleRest a[59484]))
      unknown call_tmp[613063] "expr temp" "maybe param" "maybe type" "temp"
      (613066 'move' call_tmp[613063](59552 call chpl__tupleRest b[59490]))
      unknown call_tmp[613068] "expr temp" "maybe param" "maybe type" "temp"
      (613071 'move' call_tmp[613068](59553 call % call_tmp[613058] call_tmp[613063]))
      unknown call_tmp[613073] "expr temp" "maybe param" "maybe type" "temp"
      (613076 'move' call_tmp[613073](59557 call _build_tuple call_tmp[613053](59555 'expand_tuple' call_tmp[613068])))
      (508498 'move' ret[508488](508497 'deref' call_tmp[613073]))
      gotoReturn _end_%[508486] _end_%[508486]
    }
    label _end_%[508486]
    (508490 return ret[508488])
  }
  function **[59575](arg a[59572]:_tuple[56202](?), arg b[59578]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508504] "RVV" "temp"
    unknown call_tmp[613080] "expr temp" "maybe param" "maybe type" "temp"
    (613083 'move' call_tmp[613080](59587 call size _mt[243] a[59572]))
    unknown call_tmp[613087] "expr temp" "maybe param" "maybe type" "temp"
    (613090 'move' call_tmp[613087](59591 call size _mt[243] b[59578]))
    unknown call_tmp[613092] "expr temp" "maybe param" "maybe type" "temp"
    (613095 'move' call_tmp[613092](59594 call != call_tmp[613080] call_tmp[613087]))
    unknown call_tmp[613097] "expr temp" "maybe param" "maybe type" "temp"
    (613100 'move' call_tmp[613097](59617 call _cond_test call_tmp[613092]))
    if call_tmp[613097]
    {
      (59615 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491655] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613102] "expr temp" "maybe param" "maybe type" "temp"
      (613105 'move' call_tmp[613102](59630 call a[59572] 0))
      unknown call_tmp[613107] "expr temp" "maybe param" "maybe type" "temp"
      (613110 'move' call_tmp[613107](59634 call b[59578] 0))
      unknown call_tmp[613112] "expr temp" "maybe param" "maybe type" "temp"
      (613115 'move' call_tmp[613112](59635 call ** call_tmp[613102] call_tmp[613107]))
      (491659 'move' call_type_tmp[491655](59637 'typeof' call_tmp[613112]))
    }
    unknown result[59640] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613119] "expr temp" "maybe param" "maybe type" "temp"
    (613122 'move' call_tmp[613119](59624 call size _mt[243] a[59572]))
    unknown call_tmp[613124] "expr temp" "maybe param" "maybe type" "temp"
    (613127 'move' call_tmp[613124](59638 call * call_tmp[613119] call_type_tmp[491655]))
    (540916 'default init var' result[59640] call_tmp[613124])
    (59643 'end of statement')
    {
      unknown d[59671] "dead at end of block" "insert auto destroy"
      (540918 'init var' d[59671] 0)
      (475016 'end of statement')
      unknown tmp[59672] "maybe param" "temp"
      unknown call_tmp[613131] "expr temp" "maybe param" "maybe type" "temp"
      (613134 'move' call_tmp[613131](59646 call size _mt[243] a[59572]))
      unknown call_tmp[613136] "expr temp" "maybe param" "maybe type" "temp"
      (613139 'move' call_tmp[613136](59650 call - call_tmp[613131] 1))
      (59684 'move' tmp[59672](59682 call chpl_compute_low_param_loop_bound 0 call_tmp[613136]))
      unknown tmp[59673] "maybe param" "temp"
      unknown call_tmp[613143] "expr temp" "maybe param" "maybe type" "temp"
      (613146 'move' call_tmp[613143](59691 call size _mt[243] a[59572]))
      unknown call_tmp[613148] "expr temp" "maybe param" "maybe type" "temp"
      (613151 'move' call_tmp[613148](59689 call - call_tmp[613143] 1))
      (59697 'move' tmp[59673](59695 call chpl_compute_high_param_loop_bound 0 call_tmp[613148]))
      unknown tmp[59674] "maybe param" "temp"
      (59700 'move' tmp[59674] 1)
      ParamForLoop[59702]
      { d[59671] tmp[59672] tmp[59673] tmp[59674]
        unknown call_tmp[613153] "expr temp" "maybe param" "maybe type" "temp"
        (613156 'move' call_tmp[613153](59657 call result[59640] d[59671]))
        unknown call_tmp[613158] "expr temp" "maybe param" "maybe type" "temp"
        (613161 'move' call_tmp[613158](59661 call a[59572] d[59671]))
        unknown call_tmp[613163] "expr temp" "maybe param" "maybe type" "temp"
        (613166 'move' call_tmp[613163](59665 call b[59578] d[59671]))
        unknown call_tmp[613168] "expr temp" "maybe param" "maybe type" "temp"
        (613171 'move' call_tmp[613168](59666 call ** call_tmp[613158] call_tmp[613163]))
        (59668 call = call_tmp[613153] call_tmp[613168])
        (475017 'end of statement' result[59640] d[59671] d[59671] d[59671])
      }
      label _unused_continueLabel[59676]
      label _breakLabel[59675]
    }
    (508509 'move' ret[508504](508508 'deref' result[59640]))
    gotoReturn _end_**[508502] _end_**[508502]
    (475022 'end of statement' result[59640])
    label _end_**[508502]
    (508506 return ret[508504])
  }
  where {
    (59585 call chpl_TwoHomogTuples a[59572] b[59578])
  }
  function **[59723](arg a[59720]:_tuple[56202](?), arg b[59726]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508515] "RVV" "temp"
    unknown call_tmp[613175] "expr temp" "maybe param" "maybe type" "temp"
    (613178 'move' call_tmp[613175](59730 call size _mt[243] a[59720]))
    unknown call_tmp[613182] "expr temp" "maybe param" "maybe type" "temp"
    (613185 'move' call_tmp[613182](59734 call size _mt[243] b[59726]))
    unknown call_tmp[613187] "expr temp" "maybe param" "maybe type" "temp"
    (613190 'move' call_tmp[613187](59737 call != call_tmp[613175] call_tmp[613182]))
    unknown call_tmp[613192] "expr temp" "maybe param" "maybe type" "temp"
    (613195 'move' call_tmp[613192](59744 call _cond_test call_tmp[613187]))
    if call_tmp[613192]
    {
      (59742 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613199] "expr temp" "maybe param" "maybe type" "temp"
    (613202 'move' call_tmp[613199](59751 call size _mt[243] a[59720]))
    unknown call_tmp[613204] "expr temp" "maybe param" "maybe type" "temp"
    (613207 'move' call_tmp[613204](59755 call == call_tmp[613199] 1))
    unknown call_tmp[613209] "expr temp" "maybe param" "maybe type" "temp"
    (613212 'move' call_tmp[613209](59797 call _cond_test call_tmp[613204]))
    if call_tmp[613209]
    {
      unknown call_tmp[613214] "expr temp" "maybe param" "maybe type" "temp"
      (613217 'move' call_tmp[613214](59760 call a[59720] 0))
      unknown call_tmp[613219] "expr temp" "maybe param" "maybe type" "temp"
      (613222 'move' call_tmp[613219](59764 call b[59726] 0))
      unknown call_tmp[613224] "expr temp" "maybe param" "maybe type" "temp"
      (613227 'move' call_tmp[613224](59765 call ** call_tmp[613214] call_tmp[613219]))
      unknown call_tmp[613229] "expr temp" "maybe param" "maybe type" "temp"
      (613232 'move' call_tmp[613229](59767 call _build_tuple call_tmp[613224]))
      (508520 'move' ret[508515](508519 'deref' call_tmp[613229]))
      gotoReturn _end_**[508513] _end_**[508513]
    }
    {
      unknown call_tmp[613234] "expr temp" "maybe param" "maybe type" "temp"
      (613237 'move' call_tmp[613234](59774 call a[59720] 0))
      unknown call_tmp[613239] "expr temp" "maybe param" "maybe type" "temp"
      (613242 'move' call_tmp[613239](59778 call b[59726] 0))
      unknown call_tmp[613244] "expr temp" "maybe param" "maybe type" "temp"
      (613247 'move' call_tmp[613244](59779 call ** call_tmp[613234] call_tmp[613239]))
      unknown call_tmp[613249] "expr temp" "maybe param" "maybe type" "temp"
      (613252 'move' call_tmp[613249](59784 call chpl__tupleRest a[59720]))
      unknown call_tmp[613254] "expr temp" "maybe param" "maybe type" "temp"
      (613257 'move' call_tmp[613254](59788 call chpl__tupleRest b[59726]))
      unknown call_tmp[613259] "expr temp" "maybe param" "maybe type" "temp"
      (613262 'move' call_tmp[613259](59789 call ** call_tmp[613249] call_tmp[613254]))
      unknown call_tmp[613264] "expr temp" "maybe param" "maybe type" "temp"
      (613267 'move' call_tmp[613264](59793 call _build_tuple call_tmp[613244](59791 'expand_tuple' call_tmp[613259])))
      (508525 'move' ret[508515](508524 'deref' call_tmp[613264]))
      gotoReturn _end_**[508513] _end_**[508513]
    }
    label _end_**[508513]
    (508517 return ret[508515])
  }
  function &[59811](arg a[59808]:_tuple[56202](?), arg b[59814]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508531] "RVV" "temp"
    unknown call_tmp[613271] "expr temp" "maybe param" "maybe type" "temp"
    (613274 'move' call_tmp[613271](59823 call size _mt[243] a[59808]))
    unknown call_tmp[613278] "expr temp" "maybe param" "maybe type" "temp"
    (613281 'move' call_tmp[613278](59827 call size _mt[243] b[59814]))
    unknown call_tmp[613283] "expr temp" "maybe param" "maybe type" "temp"
    (613286 'move' call_tmp[613283](59830 call != call_tmp[613271] call_tmp[613278]))
    unknown call_tmp[613288] "expr temp" "maybe param" "maybe type" "temp"
    (613291 'move' call_tmp[613288](59853 call _cond_test call_tmp[613283]))
    if call_tmp[613288]
    {
      (59851 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491661] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613293] "expr temp" "maybe param" "maybe type" "temp"
      (613296 'move' call_tmp[613293](59866 call a[59808] 0))
      unknown call_tmp[613298] "expr temp" "maybe param" "maybe type" "temp"
      (613301 'move' call_tmp[613298](59870 call b[59814] 0))
      unknown call_tmp[613303] "expr temp" "maybe param" "maybe type" "temp"
      (613306 'move' call_tmp[613303](59871 call & call_tmp[613293] call_tmp[613298]))
      (491665 'move' call_type_tmp[491661](59873 'typeof' call_tmp[613303]))
    }
    unknown result[59876] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613310] "expr temp" "maybe param" "maybe type" "temp"
    (613313 'move' call_tmp[613310](59860 call size _mt[243] a[59808]))
    unknown call_tmp[613315] "expr temp" "maybe param" "maybe type" "temp"
    (613318 'move' call_tmp[613315](59874 call * call_tmp[613310] call_type_tmp[491661]))
    (540920 'default init var' result[59876] call_tmp[613315])
    (59879 'end of statement')
    {
      unknown d[59907] "dead at end of block" "insert auto destroy"
      (540922 'init var' d[59907] 0)
      (475028 'end of statement')
      unknown tmp[59908] "maybe param" "temp"
      unknown call_tmp[613322] "expr temp" "maybe param" "maybe type" "temp"
      (613325 'move' call_tmp[613322](59882 call size _mt[243] a[59808]))
      unknown call_tmp[613327] "expr temp" "maybe param" "maybe type" "temp"
      (613330 'move' call_tmp[613327](59886 call - call_tmp[613322] 1))
      (59920 'move' tmp[59908](59918 call chpl_compute_low_param_loop_bound 0 call_tmp[613327]))
      unknown tmp[59909] "maybe param" "temp"
      unknown call_tmp[613334] "expr temp" "maybe param" "maybe type" "temp"
      (613337 'move' call_tmp[613334](59927 call size _mt[243] a[59808]))
      unknown call_tmp[613339] "expr temp" "maybe param" "maybe type" "temp"
      (613342 'move' call_tmp[613339](59925 call - call_tmp[613334] 1))
      (59933 'move' tmp[59909](59931 call chpl_compute_high_param_loop_bound 0 call_tmp[613339]))
      unknown tmp[59910] "maybe param" "temp"
      (59936 'move' tmp[59910] 1)
      ParamForLoop[59938]
      { d[59907] tmp[59908] tmp[59909] tmp[59910]
        unknown call_tmp[613344] "expr temp" "maybe param" "maybe type" "temp"
        (613347 'move' call_tmp[613344](59893 call result[59876] d[59907]))
        unknown call_tmp[613349] "expr temp" "maybe param" "maybe type" "temp"
        (613352 'move' call_tmp[613349](59897 call a[59808] d[59907]))
        unknown call_tmp[613354] "expr temp" "maybe param" "maybe type" "temp"
        (613357 'move' call_tmp[613354](59901 call b[59814] d[59907]))
        unknown call_tmp[613359] "expr temp" "maybe param" "maybe type" "temp"
        (613362 'move' call_tmp[613359](59902 call & call_tmp[613349] call_tmp[613354]))
        (59904 call = call_tmp[613344] call_tmp[613359])
        (475029 'end of statement' result[59876] d[59907] d[59907] d[59907])
      }
      label _unused_continueLabel[59912]
      label _breakLabel[59911]
    }
    (508536 'move' ret[508531](508535 'deref' result[59876]))
    gotoReturn _end_&[508529] _end_&[508529]
    (475034 'end of statement' result[59876])
    label _end_&[508529]
    (508533 return ret[508531])
  }
  where {
    (59821 call chpl_TwoHomogTuples a[59808] b[59814])
  }
  function &[59959](arg a[59956]:_tuple[56202](?), arg b[59962]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508542] "RVV" "temp"
    unknown call_tmp[613366] "expr temp" "maybe param" "maybe type" "temp"
    (613369 'move' call_tmp[613366](59966 call size _mt[243] a[59956]))
    unknown call_tmp[613373] "expr temp" "maybe param" "maybe type" "temp"
    (613376 'move' call_tmp[613373](59970 call size _mt[243] b[59962]))
    unknown call_tmp[613378] "expr temp" "maybe param" "maybe type" "temp"
    (613381 'move' call_tmp[613378](59973 call != call_tmp[613366] call_tmp[613373]))
    unknown call_tmp[613383] "expr temp" "maybe param" "maybe type" "temp"
    (613386 'move' call_tmp[613383](59980 call _cond_test call_tmp[613378]))
    if call_tmp[613383]
    {
      (59978 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613390] "expr temp" "maybe param" "maybe type" "temp"
    (613393 'move' call_tmp[613390](59987 call size _mt[243] a[59956]))
    unknown call_tmp[613395] "expr temp" "maybe param" "maybe type" "temp"
    (613398 'move' call_tmp[613395](59991 call == call_tmp[613390] 1))
    unknown call_tmp[613400] "expr temp" "maybe param" "maybe type" "temp"
    (613403 'move' call_tmp[613400](60033 call _cond_test call_tmp[613395]))
    if call_tmp[613400]
    {
      unknown call_tmp[613405] "expr temp" "maybe param" "maybe type" "temp"
      (613408 'move' call_tmp[613405](59996 call a[59956] 0))
      unknown call_tmp[613410] "expr temp" "maybe param" "maybe type" "temp"
      (613413 'move' call_tmp[613410](60000 call b[59962] 0))
      unknown call_tmp[613415] "expr temp" "maybe param" "maybe type" "temp"
      (613418 'move' call_tmp[613415](60001 call & call_tmp[613405] call_tmp[613410]))
      unknown call_tmp[613420] "expr temp" "maybe param" "maybe type" "temp"
      (613423 'move' call_tmp[613420](60003 call _build_tuple call_tmp[613415]))
      (508547 'move' ret[508542](508546 'deref' call_tmp[613420]))
      gotoReturn _end_&[508540] _end_&[508540]
    }
    {
      unknown call_tmp[613425] "expr temp" "maybe param" "maybe type" "temp"
      (613428 'move' call_tmp[613425](60010 call a[59956] 0))
      unknown call_tmp[613430] "expr temp" "maybe param" "maybe type" "temp"
      (613433 'move' call_tmp[613430](60014 call b[59962] 0))
      unknown call_tmp[613435] "expr temp" "maybe param" "maybe type" "temp"
      (613438 'move' call_tmp[613435](60015 call & call_tmp[613425] call_tmp[613430]))
      unknown call_tmp[613440] "expr temp" "maybe param" "maybe type" "temp"
      (613443 'move' call_tmp[613440](60020 call chpl__tupleRest a[59956]))
      unknown call_tmp[613445] "expr temp" "maybe param" "maybe type" "temp"
      (613448 'move' call_tmp[613445](60024 call chpl__tupleRest b[59962]))
      unknown call_tmp[613450] "expr temp" "maybe param" "maybe type" "temp"
      (613453 'move' call_tmp[613450](60025 call & call_tmp[613440] call_tmp[613445]))
      unknown call_tmp[613455] "expr temp" "maybe param" "maybe type" "temp"
      (613458 'move' call_tmp[613455](60029 call _build_tuple call_tmp[613435](60027 'expand_tuple' call_tmp[613450])))
      (508552 'move' ret[508542](508551 'deref' call_tmp[613455]))
      gotoReturn _end_&[508540] _end_&[508540]
    }
    label _end_&[508540]
    (508544 return ret[508542])
  }
  function |[60047](arg a[60044]:_tuple[56202](?), arg b[60050]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508558] "RVV" "temp"
    unknown call_tmp[613462] "expr temp" "maybe param" "maybe type" "temp"
    (613465 'move' call_tmp[613462](60059 call size _mt[243] a[60044]))
    unknown call_tmp[613469] "expr temp" "maybe param" "maybe type" "temp"
    (613472 'move' call_tmp[613469](60063 call size _mt[243] b[60050]))
    unknown call_tmp[613474] "expr temp" "maybe param" "maybe type" "temp"
    (613477 'move' call_tmp[613474](60066 call != call_tmp[613462] call_tmp[613469]))
    unknown call_tmp[613479] "expr temp" "maybe param" "maybe type" "temp"
    (613482 'move' call_tmp[613479](60089 call _cond_test call_tmp[613474]))
    if call_tmp[613479]
    {
      (60087 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491667] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613484] "expr temp" "maybe param" "maybe type" "temp"
      (613487 'move' call_tmp[613484](60102 call a[60044] 0))
      unknown call_tmp[613489] "expr temp" "maybe param" "maybe type" "temp"
      (613492 'move' call_tmp[613489](60106 call b[60050] 0))
      unknown call_tmp[613494] "expr temp" "maybe param" "maybe type" "temp"
      (613497 'move' call_tmp[613494](60107 call | call_tmp[613484] call_tmp[613489]))
      (491671 'move' call_type_tmp[491667](60109 'typeof' call_tmp[613494]))
    }
    unknown result[60112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613501] "expr temp" "maybe param" "maybe type" "temp"
    (613504 'move' call_tmp[613501](60096 call size _mt[243] a[60044]))
    unknown call_tmp[613506] "expr temp" "maybe param" "maybe type" "temp"
    (613509 'move' call_tmp[613506](60110 call * call_tmp[613501] call_type_tmp[491667]))
    (540924 'default init var' result[60112] call_tmp[613506])
    (60115 'end of statement')
    {
      unknown d[60143] "dead at end of block" "insert auto destroy"
      (540926 'init var' d[60143] 0)
      (475040 'end of statement')
      unknown tmp[60144] "maybe param" "temp"
      unknown call_tmp[613513] "expr temp" "maybe param" "maybe type" "temp"
      (613516 'move' call_tmp[613513](60118 call size _mt[243] a[60044]))
      unknown call_tmp[613518] "expr temp" "maybe param" "maybe type" "temp"
      (613521 'move' call_tmp[613518](60122 call - call_tmp[613513] 1))
      (60156 'move' tmp[60144](60154 call chpl_compute_low_param_loop_bound 0 call_tmp[613518]))
      unknown tmp[60145] "maybe param" "temp"
      unknown call_tmp[613525] "expr temp" "maybe param" "maybe type" "temp"
      (613528 'move' call_tmp[613525](60163 call size _mt[243] a[60044]))
      unknown call_tmp[613530] "expr temp" "maybe param" "maybe type" "temp"
      (613533 'move' call_tmp[613530](60161 call - call_tmp[613525] 1))
      (60169 'move' tmp[60145](60167 call chpl_compute_high_param_loop_bound 0 call_tmp[613530]))
      unknown tmp[60146] "maybe param" "temp"
      (60172 'move' tmp[60146] 1)
      ParamForLoop[60174]
      { d[60143] tmp[60144] tmp[60145] tmp[60146]
        unknown call_tmp[613535] "expr temp" "maybe param" "maybe type" "temp"
        (613538 'move' call_tmp[613535](60129 call result[60112] d[60143]))
        unknown call_tmp[613540] "expr temp" "maybe param" "maybe type" "temp"
        (613543 'move' call_tmp[613540](60133 call a[60044] d[60143]))
        unknown call_tmp[613545] "expr temp" "maybe param" "maybe type" "temp"
        (613548 'move' call_tmp[613545](60137 call b[60050] d[60143]))
        unknown call_tmp[613550] "expr temp" "maybe param" "maybe type" "temp"
        (613553 'move' call_tmp[613550](60138 call | call_tmp[613540] call_tmp[613545]))
        (60140 call = call_tmp[613535] call_tmp[613550])
        (475041 'end of statement' result[60112] d[60143] d[60143] d[60143])
      }
      label _unused_continueLabel[60148]
      label _breakLabel[60147]
    }
    (508563 'move' ret[508558](508562 'deref' result[60112]))
    gotoReturn _end_|[508556] _end_|[508556]
    (475046 'end of statement' result[60112])
    label _end_|[508556]
    (508560 return ret[508558])
  }
  where {
    (60057 call chpl_TwoHomogTuples a[60044] b[60050])
  }
  function |[60195](arg a[60192]:_tuple[56202](?), arg b[60198]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508569] "RVV" "temp"
    unknown call_tmp[613557] "expr temp" "maybe param" "maybe type" "temp"
    (613560 'move' call_tmp[613557](60202 call size _mt[243] a[60192]))
    unknown call_tmp[613564] "expr temp" "maybe param" "maybe type" "temp"
    (613567 'move' call_tmp[613564](60206 call size _mt[243] b[60198]))
    unknown call_tmp[613569] "expr temp" "maybe param" "maybe type" "temp"
    (613572 'move' call_tmp[613569](60209 call != call_tmp[613557] call_tmp[613564]))
    unknown call_tmp[613574] "expr temp" "maybe param" "maybe type" "temp"
    (613577 'move' call_tmp[613574](60216 call _cond_test call_tmp[613569]))
    if call_tmp[613574]
    {
      (60214 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613581] "expr temp" "maybe param" "maybe type" "temp"
    (613584 'move' call_tmp[613581](60223 call size _mt[243] a[60192]))
    unknown call_tmp[613586] "expr temp" "maybe param" "maybe type" "temp"
    (613589 'move' call_tmp[613586](60227 call == call_tmp[613581] 1))
    unknown call_tmp[613591] "expr temp" "maybe param" "maybe type" "temp"
    (613594 'move' call_tmp[613591](60269 call _cond_test call_tmp[613586]))
    if call_tmp[613591]
    {
      unknown call_tmp[613596] "expr temp" "maybe param" "maybe type" "temp"
      (613599 'move' call_tmp[613596](60232 call a[60192] 0))
      unknown call_tmp[613601] "expr temp" "maybe param" "maybe type" "temp"
      (613604 'move' call_tmp[613601](60236 call b[60198] 0))
      unknown call_tmp[613606] "expr temp" "maybe param" "maybe type" "temp"
      (613609 'move' call_tmp[613606](60237 call | call_tmp[613596] call_tmp[613601]))
      unknown call_tmp[613611] "expr temp" "maybe param" "maybe type" "temp"
      (613614 'move' call_tmp[613611](60239 call _build_tuple call_tmp[613606]))
      (508574 'move' ret[508569](508573 'deref' call_tmp[613611]))
      gotoReturn _end_|[508567] _end_|[508567]
    }
    {
      unknown call_tmp[613616] "expr temp" "maybe param" "maybe type" "temp"
      (613619 'move' call_tmp[613616](60246 call a[60192] 0))
      unknown call_tmp[613621] "expr temp" "maybe param" "maybe type" "temp"
      (613624 'move' call_tmp[613621](60250 call b[60198] 0))
      unknown call_tmp[613626] "expr temp" "maybe param" "maybe type" "temp"
      (613629 'move' call_tmp[613626](60251 call | call_tmp[613616] call_tmp[613621]))
      unknown call_tmp[613631] "expr temp" "maybe param" "maybe type" "temp"
      (613634 'move' call_tmp[613631](60256 call chpl__tupleRest a[60192]))
      unknown call_tmp[613636] "expr temp" "maybe param" "maybe type" "temp"
      (613639 'move' call_tmp[613636](60260 call chpl__tupleRest b[60198]))
      unknown call_tmp[613641] "expr temp" "maybe param" "maybe type" "temp"
      (613644 'move' call_tmp[613641](60261 call | call_tmp[613631] call_tmp[613636]))
      unknown call_tmp[613646] "expr temp" "maybe param" "maybe type" "temp"
      (613649 'move' call_tmp[613646](60265 call _build_tuple call_tmp[613626](60263 'expand_tuple' call_tmp[613641])))
      (508579 'move' ret[508569](508578 'deref' call_tmp[613646]))
      gotoReturn _end_|[508567] _end_|[508567]
    }
    label _end_|[508567]
    (508571 return ret[508569])
  }
  function ^[60283](arg a[60280]:_tuple[56202](?), arg b[60286]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508585] "RVV" "temp"
    unknown call_tmp[613653] "expr temp" "maybe param" "maybe type" "temp"
    (613656 'move' call_tmp[613653](60295 call size _mt[243] a[60280]))
    unknown call_tmp[613660] "expr temp" "maybe param" "maybe type" "temp"
    (613663 'move' call_tmp[613660](60299 call size _mt[243] b[60286]))
    unknown call_tmp[613665] "expr temp" "maybe param" "maybe type" "temp"
    (613668 'move' call_tmp[613665](60302 call != call_tmp[613653] call_tmp[613660]))
    unknown call_tmp[613670] "expr temp" "maybe param" "maybe type" "temp"
    (613673 'move' call_tmp[613670](60325 call _cond_test call_tmp[613665]))
    if call_tmp[613670]
    {
      (60323 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491673] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613675] "expr temp" "maybe param" "maybe type" "temp"
      (613678 'move' call_tmp[613675](60338 call a[60280] 0))
      unknown call_tmp[613680] "expr temp" "maybe param" "maybe type" "temp"
      (613683 'move' call_tmp[613680](60342 call b[60286] 0))
      unknown call_tmp[613685] "expr temp" "maybe param" "maybe type" "temp"
      (613688 'move' call_tmp[613685](60343 call ^ call_tmp[613675] call_tmp[613680]))
      (491677 'move' call_type_tmp[491673](60345 'typeof' call_tmp[613685]))
    }
    unknown result[60348] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613692] "expr temp" "maybe param" "maybe type" "temp"
    (613695 'move' call_tmp[613692](60332 call size _mt[243] a[60280]))
    unknown call_tmp[613697] "expr temp" "maybe param" "maybe type" "temp"
    (613700 'move' call_tmp[613697](60346 call * call_tmp[613692] call_type_tmp[491673]))
    (540928 'default init var' result[60348] call_tmp[613697])
    (60351 'end of statement')
    {
      unknown d[60379] "dead at end of block" "insert auto destroy"
      (540930 'init var' d[60379] 0)
      (475052 'end of statement')
      unknown tmp[60380] "maybe param" "temp"
      unknown call_tmp[613704] "expr temp" "maybe param" "maybe type" "temp"
      (613707 'move' call_tmp[613704](60354 call size _mt[243] a[60280]))
      unknown call_tmp[613709] "expr temp" "maybe param" "maybe type" "temp"
      (613712 'move' call_tmp[613709](60358 call - call_tmp[613704] 1))
      (60392 'move' tmp[60380](60390 call chpl_compute_low_param_loop_bound 0 call_tmp[613709]))
      unknown tmp[60381] "maybe param" "temp"
      unknown call_tmp[613716] "expr temp" "maybe param" "maybe type" "temp"
      (613719 'move' call_tmp[613716](60399 call size _mt[243] a[60280]))
      unknown call_tmp[613721] "expr temp" "maybe param" "maybe type" "temp"
      (613724 'move' call_tmp[613721](60397 call - call_tmp[613716] 1))
      (60405 'move' tmp[60381](60403 call chpl_compute_high_param_loop_bound 0 call_tmp[613721]))
      unknown tmp[60382] "maybe param" "temp"
      (60408 'move' tmp[60382] 1)
      ParamForLoop[60410]
      { d[60379] tmp[60380] tmp[60381] tmp[60382]
        unknown call_tmp[613726] "expr temp" "maybe param" "maybe type" "temp"
        (613729 'move' call_tmp[613726](60365 call result[60348] d[60379]))
        unknown call_tmp[613731] "expr temp" "maybe param" "maybe type" "temp"
        (613734 'move' call_tmp[613731](60369 call a[60280] d[60379]))
        unknown call_tmp[613736] "expr temp" "maybe param" "maybe type" "temp"
        (613739 'move' call_tmp[613736](60373 call b[60286] d[60379]))
        unknown call_tmp[613741] "expr temp" "maybe param" "maybe type" "temp"
        (613744 'move' call_tmp[613741](60374 call ^ call_tmp[613731] call_tmp[613736]))
        (60376 call = call_tmp[613726] call_tmp[613741])
        (475053 'end of statement' result[60348] d[60379] d[60379] d[60379])
      }
      label _unused_continueLabel[60384]
      label _breakLabel[60383]
    }
    (508590 'move' ret[508585](508589 'deref' result[60348]))
    gotoReturn _end_^[508583] _end_^[508583]
    (475058 'end of statement' result[60348])
    label _end_^[508583]
    (508587 return ret[508585])
  }
  where {
    (60293 call chpl_TwoHomogTuples a[60280] b[60286])
  }
  function ^[60431](arg a[60428]:_tuple[56202](?), arg b[60434]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508596] "RVV" "temp"
    unknown call_tmp[613748] "expr temp" "maybe param" "maybe type" "temp"
    (613751 'move' call_tmp[613748](60438 call size _mt[243] a[60428]))
    unknown call_tmp[613755] "expr temp" "maybe param" "maybe type" "temp"
    (613758 'move' call_tmp[613755](60442 call size _mt[243] b[60434]))
    unknown call_tmp[613760] "expr temp" "maybe param" "maybe type" "temp"
    (613763 'move' call_tmp[613760](60445 call != call_tmp[613748] call_tmp[613755]))
    unknown call_tmp[613765] "expr temp" "maybe param" "maybe type" "temp"
    (613768 'move' call_tmp[613765](60452 call _cond_test call_tmp[613760]))
    if call_tmp[613765]
    {
      (60450 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613772] "expr temp" "maybe param" "maybe type" "temp"
    (613775 'move' call_tmp[613772](60459 call size _mt[243] a[60428]))
    unknown call_tmp[613777] "expr temp" "maybe param" "maybe type" "temp"
    (613780 'move' call_tmp[613777](60463 call == call_tmp[613772] 1))
    unknown call_tmp[613782] "expr temp" "maybe param" "maybe type" "temp"
    (613785 'move' call_tmp[613782](60505 call _cond_test call_tmp[613777]))
    if call_tmp[613782]
    {
      unknown call_tmp[613787] "expr temp" "maybe param" "maybe type" "temp"
      (613790 'move' call_tmp[613787](60468 call a[60428] 0))
      unknown call_tmp[613792] "expr temp" "maybe param" "maybe type" "temp"
      (613795 'move' call_tmp[613792](60472 call b[60434] 0))
      unknown call_tmp[613797] "expr temp" "maybe param" "maybe type" "temp"
      (613800 'move' call_tmp[613797](60473 call ^ call_tmp[613787] call_tmp[613792]))
      unknown call_tmp[613802] "expr temp" "maybe param" "maybe type" "temp"
      (613805 'move' call_tmp[613802](60475 call _build_tuple call_tmp[613797]))
      (508601 'move' ret[508596](508600 'deref' call_tmp[613802]))
      gotoReturn _end_^[508594] _end_^[508594]
    }
    {
      unknown call_tmp[613807] "expr temp" "maybe param" "maybe type" "temp"
      (613810 'move' call_tmp[613807](60482 call a[60428] 0))
      unknown call_tmp[613812] "expr temp" "maybe param" "maybe type" "temp"
      (613815 'move' call_tmp[613812](60486 call b[60434] 0))
      unknown call_tmp[613817] "expr temp" "maybe param" "maybe type" "temp"
      (613820 'move' call_tmp[613817](60487 call ^ call_tmp[613807] call_tmp[613812]))
      unknown call_tmp[613822] "expr temp" "maybe param" "maybe type" "temp"
      (613825 'move' call_tmp[613822](60492 call chpl__tupleRest a[60428]))
      unknown call_tmp[613827] "expr temp" "maybe param" "maybe type" "temp"
      (613830 'move' call_tmp[613827](60496 call chpl__tupleRest b[60434]))
      unknown call_tmp[613832] "expr temp" "maybe param" "maybe type" "temp"
      (613835 'move' call_tmp[613832](60497 call ^ call_tmp[613822] call_tmp[613827]))
      unknown call_tmp[613837] "expr temp" "maybe param" "maybe type" "temp"
      (613840 'move' call_tmp[613837](60501 call _build_tuple call_tmp[613817](60499 'expand_tuple' call_tmp[613832])))
      (508606 'move' ret[508596](508605 'deref' call_tmp[613837]))
      gotoReturn _end_^[508594] _end_^[508594]
    }
    label _end_^[508594]
    (508598 return ret[508596])
  }
  function <<[60519](arg a[60516]:_tuple[56202](?), arg b[60522]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508612] "RVV" "temp"
    unknown call_tmp[613844] "expr temp" "maybe param" "maybe type" "temp"
    (613847 'move' call_tmp[613844](60531 call size _mt[243] a[60516]))
    unknown call_tmp[613851] "expr temp" "maybe param" "maybe type" "temp"
    (613854 'move' call_tmp[613851](60535 call size _mt[243] b[60522]))
    unknown call_tmp[613856] "expr temp" "maybe param" "maybe type" "temp"
    (613859 'move' call_tmp[613856](60538 call != call_tmp[613844] call_tmp[613851]))
    unknown call_tmp[613861] "expr temp" "maybe param" "maybe type" "temp"
    (613864 'move' call_tmp[613861](60561 call _cond_test call_tmp[613856]))
    if call_tmp[613861]
    {
      (60559 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491679] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613866] "expr temp" "maybe param" "maybe type" "temp"
      (613869 'move' call_tmp[613866](60574 call a[60516] 0))
      unknown call_tmp[613871] "expr temp" "maybe param" "maybe type" "temp"
      (613874 'move' call_tmp[613871](60578 call b[60522] 0))
      unknown call_tmp[613876] "expr temp" "maybe param" "maybe type" "temp"
      (613879 'move' call_tmp[613876](60579 call << call_tmp[613866] call_tmp[613871]))
      (491683 'move' call_type_tmp[491679](60581 'typeof' call_tmp[613876]))
    }
    unknown result[60584] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613883] "expr temp" "maybe param" "maybe type" "temp"
    (613886 'move' call_tmp[613883](60568 call size _mt[243] a[60516]))
    unknown call_tmp[613888] "expr temp" "maybe param" "maybe type" "temp"
    (613891 'move' call_tmp[613888](60582 call * call_tmp[613883] call_type_tmp[491679]))
    (540932 'default init var' result[60584] call_tmp[613888])
    (60587 'end of statement')
    {
      unknown d[60615] "dead at end of block" "insert auto destroy"
      (540934 'init var' d[60615] 0)
      (475064 'end of statement')
      unknown tmp[60616] "maybe param" "temp"
      unknown call_tmp[613895] "expr temp" "maybe param" "maybe type" "temp"
      (613898 'move' call_tmp[613895](60590 call size _mt[243] a[60516]))
      unknown call_tmp[613900] "expr temp" "maybe param" "maybe type" "temp"
      (613903 'move' call_tmp[613900](60594 call - call_tmp[613895] 1))
      (60628 'move' tmp[60616](60626 call chpl_compute_low_param_loop_bound 0 call_tmp[613900]))
      unknown tmp[60617] "maybe param" "temp"
      unknown call_tmp[613907] "expr temp" "maybe param" "maybe type" "temp"
      (613910 'move' call_tmp[613907](60635 call size _mt[243] a[60516]))
      unknown call_tmp[613912] "expr temp" "maybe param" "maybe type" "temp"
      (613915 'move' call_tmp[613912](60633 call - call_tmp[613907] 1))
      (60641 'move' tmp[60617](60639 call chpl_compute_high_param_loop_bound 0 call_tmp[613912]))
      unknown tmp[60618] "maybe param" "temp"
      (60644 'move' tmp[60618] 1)
      ParamForLoop[60646]
      { d[60615] tmp[60616] tmp[60617] tmp[60618]
        unknown call_tmp[613917] "expr temp" "maybe param" "maybe type" "temp"
        (613920 'move' call_tmp[613917](60601 call result[60584] d[60615]))
        unknown call_tmp[613922] "expr temp" "maybe param" "maybe type" "temp"
        (613925 'move' call_tmp[613922](60605 call a[60516] d[60615]))
        unknown call_tmp[613927] "expr temp" "maybe param" "maybe type" "temp"
        (613930 'move' call_tmp[613927](60609 call b[60522] d[60615]))
        unknown call_tmp[613932] "expr temp" "maybe param" "maybe type" "temp"
        (613935 'move' call_tmp[613932](60610 call << call_tmp[613922] call_tmp[613927]))
        (60612 call = call_tmp[613917] call_tmp[613932])
        (475065 'end of statement' result[60584] d[60615] d[60615] d[60615])
      }
      label _unused_continueLabel[60620]
      label _breakLabel[60619]
    }
    (508617 'move' ret[508612](508616 'deref' result[60584]))
    gotoReturn _end_<<[508610] _end_<<[508610]
    (475070 'end of statement' result[60584])
    label _end_<<[508610]
    (508614 return ret[508612])
  }
  where {
    (60529 call chpl_TwoHomogTuples a[60516] b[60522])
  }
  function <<[60667](arg a[60664]:_tuple[56202](?), arg b[60670]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508623] "RVV" "temp"
    unknown call_tmp[613939] "expr temp" "maybe param" "maybe type" "temp"
    (613942 'move' call_tmp[613939](60674 call size _mt[243] a[60664]))
    unknown call_tmp[613946] "expr temp" "maybe param" "maybe type" "temp"
    (613949 'move' call_tmp[613946](60678 call size _mt[243] b[60670]))
    unknown call_tmp[613951] "expr temp" "maybe param" "maybe type" "temp"
    (613954 'move' call_tmp[613951](60681 call != call_tmp[613939] call_tmp[613946]))
    unknown call_tmp[613956] "expr temp" "maybe param" "maybe type" "temp"
    (613959 'move' call_tmp[613956](60688 call _cond_test call_tmp[613951]))
    if call_tmp[613956]
    {
      (60686 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[613963] "expr temp" "maybe param" "maybe type" "temp"
    (613966 'move' call_tmp[613963](60695 call size _mt[243] a[60664]))
    unknown call_tmp[613968] "expr temp" "maybe param" "maybe type" "temp"
    (613971 'move' call_tmp[613968](60699 call == call_tmp[613963] 1))
    unknown call_tmp[613973] "expr temp" "maybe param" "maybe type" "temp"
    (613976 'move' call_tmp[613973](60741 call _cond_test call_tmp[613968]))
    if call_tmp[613973]
    {
      unknown call_tmp[613978] "expr temp" "maybe param" "maybe type" "temp"
      (613981 'move' call_tmp[613978](60704 call a[60664] 0))
      unknown call_tmp[613983] "expr temp" "maybe param" "maybe type" "temp"
      (613986 'move' call_tmp[613983](60708 call b[60670] 0))
      unknown call_tmp[613988] "expr temp" "maybe param" "maybe type" "temp"
      (613991 'move' call_tmp[613988](60709 call << call_tmp[613978] call_tmp[613983]))
      unknown call_tmp[613993] "expr temp" "maybe param" "maybe type" "temp"
      (613996 'move' call_tmp[613993](60711 call _build_tuple call_tmp[613988]))
      (508628 'move' ret[508623](508627 'deref' call_tmp[613993]))
      gotoReturn _end_<<[508621] _end_<<[508621]
    }
    {
      unknown call_tmp[613998] "expr temp" "maybe param" "maybe type" "temp"
      (614001 'move' call_tmp[613998](60718 call a[60664] 0))
      unknown call_tmp[614003] "expr temp" "maybe param" "maybe type" "temp"
      (614006 'move' call_tmp[614003](60722 call b[60670] 0))
      unknown call_tmp[614008] "expr temp" "maybe param" "maybe type" "temp"
      (614011 'move' call_tmp[614008](60723 call << call_tmp[613998] call_tmp[614003]))
      unknown call_tmp[614013] "expr temp" "maybe param" "maybe type" "temp"
      (614016 'move' call_tmp[614013](60728 call chpl__tupleRest a[60664]))
      unknown call_tmp[614018] "expr temp" "maybe param" "maybe type" "temp"
      (614021 'move' call_tmp[614018](60732 call chpl__tupleRest b[60670]))
      unknown call_tmp[614023] "expr temp" "maybe param" "maybe type" "temp"
      (614026 'move' call_tmp[614023](60733 call << call_tmp[614013] call_tmp[614018]))
      unknown call_tmp[614028] "expr temp" "maybe param" "maybe type" "temp"
      (614031 'move' call_tmp[614028](60737 call _build_tuple call_tmp[614008](60735 'expand_tuple' call_tmp[614023])))
      (508633 'move' ret[508623](508632 'deref' call_tmp[614028]))
      gotoReturn _end_<<[508621] _end_<<[508621]
    }
    label _end_<<[508621]
    (508625 return ret[508623])
  }
  function >>[60755](arg a[60752]:_tuple[56202](?), arg b[60758]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508639] "RVV" "temp"
    unknown call_tmp[614035] "expr temp" "maybe param" "maybe type" "temp"
    (614038 'move' call_tmp[614035](60767 call size _mt[243] a[60752]))
    unknown call_tmp[614042] "expr temp" "maybe param" "maybe type" "temp"
    (614045 'move' call_tmp[614042](60771 call size _mt[243] b[60758]))
    unknown call_tmp[614047] "expr temp" "maybe param" "maybe type" "temp"
    (614050 'move' call_tmp[614047](60774 call != call_tmp[614035] call_tmp[614042]))
    unknown call_tmp[614052] "expr temp" "maybe param" "maybe type" "temp"
    (614055 'move' call_tmp[614052](60797 call _cond_test call_tmp[614047]))
    if call_tmp[614052]
    {
      (60795 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491685] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614057] "expr temp" "maybe param" "maybe type" "temp"
      (614060 'move' call_tmp[614057](60810 call a[60752] 0))
      unknown call_tmp[614062] "expr temp" "maybe param" "maybe type" "temp"
      (614065 'move' call_tmp[614062](60814 call b[60758] 0))
      unknown call_tmp[614067] "expr temp" "maybe param" "maybe type" "temp"
      (614070 'move' call_tmp[614067](60815 call >> call_tmp[614057] call_tmp[614062]))
      (491689 'move' call_type_tmp[491685](60817 'typeof' call_tmp[614067]))
    }
    unknown result[60820] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614074] "expr temp" "maybe param" "maybe type" "temp"
    (614077 'move' call_tmp[614074](60804 call size _mt[243] a[60752]))
    unknown call_tmp[614079] "expr temp" "maybe param" "maybe type" "temp"
    (614082 'move' call_tmp[614079](60818 call * call_tmp[614074] call_type_tmp[491685]))
    (540936 'default init var' result[60820] call_tmp[614079])
    (60823 'end of statement')
    {
      unknown d[60851] "dead at end of block" "insert auto destroy"
      (540938 'init var' d[60851] 0)
      (475076 'end of statement')
      unknown tmp[60852] "maybe param" "temp"
      unknown call_tmp[614086] "expr temp" "maybe param" "maybe type" "temp"
      (614089 'move' call_tmp[614086](60826 call size _mt[243] a[60752]))
      unknown call_tmp[614091] "expr temp" "maybe param" "maybe type" "temp"
      (614094 'move' call_tmp[614091](60830 call - call_tmp[614086] 1))
      (60864 'move' tmp[60852](60862 call chpl_compute_low_param_loop_bound 0 call_tmp[614091]))
      unknown tmp[60853] "maybe param" "temp"
      unknown call_tmp[614098] "expr temp" "maybe param" "maybe type" "temp"
      (614101 'move' call_tmp[614098](60871 call size _mt[243] a[60752]))
      unknown call_tmp[614103] "expr temp" "maybe param" "maybe type" "temp"
      (614106 'move' call_tmp[614103](60869 call - call_tmp[614098] 1))
      (60877 'move' tmp[60853](60875 call chpl_compute_high_param_loop_bound 0 call_tmp[614103]))
      unknown tmp[60854] "maybe param" "temp"
      (60880 'move' tmp[60854] 1)
      ParamForLoop[60882]
      { d[60851] tmp[60852] tmp[60853] tmp[60854]
        unknown call_tmp[614108] "expr temp" "maybe param" "maybe type" "temp"
        (614111 'move' call_tmp[614108](60837 call result[60820] d[60851]))
        unknown call_tmp[614113] "expr temp" "maybe param" "maybe type" "temp"
        (614116 'move' call_tmp[614113](60841 call a[60752] d[60851]))
        unknown call_tmp[614118] "expr temp" "maybe param" "maybe type" "temp"
        (614121 'move' call_tmp[614118](60845 call b[60758] d[60851]))
        unknown call_tmp[614123] "expr temp" "maybe param" "maybe type" "temp"
        (614126 'move' call_tmp[614123](60846 call >> call_tmp[614113] call_tmp[614118]))
        (60848 call = call_tmp[614108] call_tmp[614123])
        (475077 'end of statement' result[60820] d[60851] d[60851] d[60851])
      }
      label _unused_continueLabel[60856]
      label _breakLabel[60855]
    }
    (508644 'move' ret[508639](508643 'deref' result[60820]))
    gotoReturn _end_>>[508637] _end_>>[508637]
    (475082 'end of statement' result[60820])
    label _end_>>[508637]
    (508641 return ret[508639])
  }
  where {
    (60765 call chpl_TwoHomogTuples a[60752] b[60758])
  }
  function >>[60903](arg a[60900]:_tuple[56202](?), arg b[60906]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508650] "RVV" "temp"
    unknown call_tmp[614130] "expr temp" "maybe param" "maybe type" "temp"
    (614133 'move' call_tmp[614130](60910 call size _mt[243] a[60900]))
    unknown call_tmp[614137] "expr temp" "maybe param" "maybe type" "temp"
    (614140 'move' call_tmp[614137](60914 call size _mt[243] b[60906]))
    unknown call_tmp[614142] "expr temp" "maybe param" "maybe type" "temp"
    (614145 'move' call_tmp[614142](60917 call != call_tmp[614130] call_tmp[614137]))
    unknown call_tmp[614147] "expr temp" "maybe param" "maybe type" "temp"
    (614150 'move' call_tmp[614147](60924 call _cond_test call_tmp[614142]))
    if call_tmp[614147]
    {
      (60922 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614154] "expr temp" "maybe param" "maybe type" "temp"
    (614157 'move' call_tmp[614154](60931 call size _mt[243] a[60900]))
    unknown call_tmp[614159] "expr temp" "maybe param" "maybe type" "temp"
    (614162 'move' call_tmp[614159](60935 call == call_tmp[614154] 1))
    unknown call_tmp[614164] "expr temp" "maybe param" "maybe type" "temp"
    (614167 'move' call_tmp[614164](60977 call _cond_test call_tmp[614159]))
    if call_tmp[614164]
    {
      unknown call_tmp[614169] "expr temp" "maybe param" "maybe type" "temp"
      (614172 'move' call_tmp[614169](60940 call a[60900] 0))
      unknown call_tmp[614174] "expr temp" "maybe param" "maybe type" "temp"
      (614177 'move' call_tmp[614174](60944 call b[60906] 0))
      unknown call_tmp[614179] "expr temp" "maybe param" "maybe type" "temp"
      (614182 'move' call_tmp[614179](60945 call >> call_tmp[614169] call_tmp[614174]))
      unknown call_tmp[614184] "expr temp" "maybe param" "maybe type" "temp"
      (614187 'move' call_tmp[614184](60947 call _build_tuple call_tmp[614179]))
      (508655 'move' ret[508650](508654 'deref' call_tmp[614184]))
      gotoReturn _end_>>[508648] _end_>>[508648]
    }
    {
      unknown call_tmp[614189] "expr temp" "maybe param" "maybe type" "temp"
      (614192 'move' call_tmp[614189](60954 call a[60900] 0))
      unknown call_tmp[614194] "expr temp" "maybe param" "maybe type" "temp"
      (614197 'move' call_tmp[614194](60958 call b[60906] 0))
      unknown call_tmp[614199] "expr temp" "maybe param" "maybe type" "temp"
      (614202 'move' call_tmp[614199](60959 call >> call_tmp[614189] call_tmp[614194]))
      unknown call_tmp[614204] "expr temp" "maybe param" "maybe type" "temp"
      (614207 'move' call_tmp[614204](60964 call chpl__tupleRest a[60900]))
      unknown call_tmp[614209] "expr temp" "maybe param" "maybe type" "temp"
      (614212 'move' call_tmp[614209](60968 call chpl__tupleRest b[60906]))
      unknown call_tmp[614214] "expr temp" "maybe param" "maybe type" "temp"
      (614217 'move' call_tmp[614214](60969 call >> call_tmp[614204] call_tmp[614209]))
      unknown call_tmp[614219] "expr temp" "maybe param" "maybe type" "temp"
      (614222 'move' call_tmp[614219](60973 call _build_tuple call_tmp[614199](60971 'expand_tuple' call_tmp[614214])))
      (508660 'move' ret[508650](508659 'deref' call_tmp[614219]))
      gotoReturn _end_>>[508648] _end_>>[508648]
    }
    label _end_>>[508648]
    (508652 return ret[508650])
  }
  function >[60991](arg a[60988]:_tuple[56202](?), arg b[60994]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508666] "RVV" "temp"
    unknown call_tmp[614226] "expr temp" "maybe param" "maybe type" "temp"
    (614229 'move' call_tmp[614226](60998 call size _mt[243] a[60988]))
    unknown call_tmp[614233] "expr temp" "maybe param" "maybe type" "temp"
    (614236 'move' call_tmp[614233](61002 call size _mt[243] b[60994]))
    unknown call_tmp[614238] "expr temp" "maybe param" "maybe type" "temp"
    (614241 'move' call_tmp[614238](61005 call != call_tmp[614226] call_tmp[614233]))
    unknown call_tmp[614243] "expr temp" "maybe param" "maybe type" "temp"
    (614246 'move' call_tmp[614243](61028 call _cond_test call_tmp[614238]))
    if call_tmp[614243]
    {
      (61026 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61081] "dead at end of block" "insert auto destroy"
      (540940 'init var' i[61081] 0)
      (475088 'end of statement')
      unknown tmp[61082] "maybe param" "temp"
      unknown call_tmp[614250] "expr temp" "maybe param" "maybe type" "temp"
      (614253 'move' call_tmp[614250](61036 call size _mt[243] a[60988]))
      unknown call_tmp[614255] "expr temp" "maybe param" "maybe type" "temp"
      (614258 'move' call_tmp[614255](61040 call - call_tmp[614250] 1))
      (61094 'move' tmp[61082](61092 call chpl_compute_low_param_loop_bound 0 call_tmp[614255]))
      unknown tmp[61083] "maybe param" "temp"
      unknown call_tmp[614262] "expr temp" "maybe param" "maybe type" "temp"
      (614265 'move' call_tmp[614262](61101 call size _mt[243] a[60988]))
      unknown call_tmp[614267] "expr temp" "maybe param" "maybe type" "temp"
      (614270 'move' call_tmp[614267](61099 call - call_tmp[614262] 1))
      (61107 'move' tmp[61083](61105 call chpl_compute_high_param_loop_bound 0 call_tmp[614267]))
      unknown tmp[61084] "maybe param" "temp"
      (61110 'move' tmp[61084] 1)
      ParamForLoop[61112]
      { i[61081] tmp[61082] tmp[61083] tmp[61084]
        unknown call_tmp[614272] "expr temp" "maybe param" "maybe type" "temp"
        (614275 'move' call_tmp[614272](61047 call a[60988] i[61081]))
        unknown call_tmp[614277] "expr temp" "maybe param" "maybe type" "temp"
        (614280 'move' call_tmp[614277](61051 call b[60994] i[61081]))
        unknown call_tmp[614282] "expr temp" "maybe param" "maybe type" "temp"
        (614285 'move' call_tmp[614282](61052 call > call_tmp[614272] call_tmp[614277]))
        unknown call_tmp[614287] "expr temp" "maybe param" "maybe type" "temp"
        (614290 'move' call_tmp[614287](61075 call _cond_test call_tmp[614282]))
        if call_tmp[614287]
        {
          (508671 'move' ret[508666](508670 'deref' 1))
          gotoReturn _end_>[508664] _end_>[508664]
        }
        {
          unknown call_tmp[614292] "expr temp" "maybe param" "maybe type" "temp"
          (614295 'move' call_tmp[614292](61060 call a[60988] i[61081]))
          unknown call_tmp[614297] "expr temp" "maybe param" "maybe type" "temp"
          (614300 'move' call_tmp[614297](61064 call b[60994] i[61081]))
          unknown call_tmp[614302] "expr temp" "maybe param" "maybe type" "temp"
          (614305 'move' call_tmp[614302](61065 call < call_tmp[614292] call_tmp[614297]))
          unknown call_tmp[614307] "expr temp" "maybe param" "maybe type" "temp"
          (614310 'move' call_tmp[614307](61070 call _cond_test call_tmp[614302]))
          if call_tmp[614307]
          {
            (508676 'move' ret[508666](508675 'deref' 0))
            gotoReturn _end_>[508664] _end_>[508664]
          }
        }
      }
      label _unused_continueLabel[61086]
      label _breakLabel[61085]
    }
    (508681 'move' ret[508666](508680 'deref' 0))
    label _end_>[508664]
    (508668 return ret[508666])
  }
  function >=[61132](arg a[61129]:_tuple[56202](?), arg b[61135]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508685] "RVV" "temp"
    unknown call_tmp[614314] "expr temp" "maybe param" "maybe type" "temp"
    (614317 'move' call_tmp[614314](61139 call size _mt[243] a[61129]))
    unknown call_tmp[614321] "expr temp" "maybe param" "maybe type" "temp"
    (614324 'move' call_tmp[614321](61143 call size _mt[243] b[61135]))
    unknown call_tmp[614326] "expr temp" "maybe param" "maybe type" "temp"
    (614329 'move' call_tmp[614326](61146 call != call_tmp[614314] call_tmp[614321]))
    unknown call_tmp[614331] "expr temp" "maybe param" "maybe type" "temp"
    (614334 'move' call_tmp[614331](61169 call _cond_test call_tmp[614326]))
    if call_tmp[614331]
    {
      (61167 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61222] "dead at end of block" "insert auto destroy"
      (540942 'init var' i[61222] 0)
      (475093 'end of statement')
      unknown tmp[61223] "maybe param" "temp"
      unknown call_tmp[614338] "expr temp" "maybe param" "maybe type" "temp"
      (614341 'move' call_tmp[614338](61177 call size _mt[243] a[61129]))
      unknown call_tmp[614343] "expr temp" "maybe param" "maybe type" "temp"
      (614346 'move' call_tmp[614343](61181 call - call_tmp[614338] 1))
      (61235 'move' tmp[61223](61233 call chpl_compute_low_param_loop_bound 0 call_tmp[614343]))
      unknown tmp[61224] "maybe param" "temp"
      unknown call_tmp[614350] "expr temp" "maybe param" "maybe type" "temp"
      (614353 'move' call_tmp[614350](61242 call size _mt[243] a[61129]))
      unknown call_tmp[614355] "expr temp" "maybe param" "maybe type" "temp"
      (614358 'move' call_tmp[614355](61240 call - call_tmp[614350] 1))
      (61248 'move' tmp[61224](61246 call chpl_compute_high_param_loop_bound 0 call_tmp[614355]))
      unknown tmp[61225] "maybe param" "temp"
      (61251 'move' tmp[61225] 1)
      ParamForLoop[61253]
      { i[61222] tmp[61223] tmp[61224] tmp[61225]
        unknown call_tmp[614360] "expr temp" "maybe param" "maybe type" "temp"
        (614363 'move' call_tmp[614360](61188 call a[61129] i[61222]))
        unknown call_tmp[614365] "expr temp" "maybe param" "maybe type" "temp"
        (614368 'move' call_tmp[614365](61192 call b[61135] i[61222]))
        unknown call_tmp[614370] "expr temp" "maybe param" "maybe type" "temp"
        (614373 'move' call_tmp[614370](61193 call > call_tmp[614360] call_tmp[614365]))
        unknown call_tmp[614375] "expr temp" "maybe param" "maybe type" "temp"
        (614378 'move' call_tmp[614375](61216 call _cond_test call_tmp[614370]))
        if call_tmp[614375]
        {
          (508690 'move' ret[508685](508689 'deref' 1))
          gotoReturn _end_>=[508683] _end_>=[508683]
        }
        {
          unknown call_tmp[614380] "expr temp" "maybe param" "maybe type" "temp"
          (614383 'move' call_tmp[614380](61201 call a[61129] i[61222]))
          unknown call_tmp[614385] "expr temp" "maybe param" "maybe type" "temp"
          (614388 'move' call_tmp[614385](61205 call b[61135] i[61222]))
          unknown call_tmp[614390] "expr temp" "maybe param" "maybe type" "temp"
          (614393 'move' call_tmp[614390](61206 call < call_tmp[614380] call_tmp[614385]))
          unknown call_tmp[614395] "expr temp" "maybe param" "maybe type" "temp"
          (614398 'move' call_tmp[614395](61211 call _cond_test call_tmp[614390]))
          if call_tmp[614395]
          {
            (508695 'move' ret[508685](508694 'deref' 0))
            gotoReturn _end_>=[508683] _end_>=[508683]
          }
        }
      }
      label _unused_continueLabel[61227]
      label _breakLabel[61226]
    }
    (508700 'move' ret[508685](508699 'deref' 1))
    label _end_>=[508683]
    (508687 return ret[508685])
  }
  function <[61273](arg a[61270]:_tuple[56202](?), arg b[61276]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508704] "RVV" "temp"
    unknown call_tmp[614402] "expr temp" "maybe param" "maybe type" "temp"
    (614405 'move' call_tmp[614402](61280 call size _mt[243] a[61270]))
    unknown call_tmp[614409] "expr temp" "maybe param" "maybe type" "temp"
    (614412 'move' call_tmp[614409](61284 call size _mt[243] b[61276]))
    unknown call_tmp[614414] "expr temp" "maybe param" "maybe type" "temp"
    (614417 'move' call_tmp[614414](61287 call != call_tmp[614402] call_tmp[614409]))
    unknown call_tmp[614419] "expr temp" "maybe param" "maybe type" "temp"
    (614422 'move' call_tmp[614419](61310 call _cond_test call_tmp[614414]))
    if call_tmp[614419]
    {
      (61308 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61363] "dead at end of block" "insert auto destroy"
      (540944 'init var' i[61363] 0)
      (475098 'end of statement')
      unknown tmp[61364] "maybe param" "temp"
      unknown call_tmp[614426] "expr temp" "maybe param" "maybe type" "temp"
      (614429 'move' call_tmp[614426](61318 call size _mt[243] a[61270]))
      unknown call_tmp[614431] "expr temp" "maybe param" "maybe type" "temp"
      (614434 'move' call_tmp[614431](61322 call - call_tmp[614426] 1))
      (61376 'move' tmp[61364](61374 call chpl_compute_low_param_loop_bound 0 call_tmp[614431]))
      unknown tmp[61365] "maybe param" "temp"
      unknown call_tmp[614438] "expr temp" "maybe param" "maybe type" "temp"
      (614441 'move' call_tmp[614438](61383 call size _mt[243] a[61270]))
      unknown call_tmp[614443] "expr temp" "maybe param" "maybe type" "temp"
      (614446 'move' call_tmp[614443](61381 call - call_tmp[614438] 1))
      (61389 'move' tmp[61365](61387 call chpl_compute_high_param_loop_bound 0 call_tmp[614443]))
      unknown tmp[61366] "maybe param" "temp"
      (61392 'move' tmp[61366] 1)
      ParamForLoop[61394]
      { i[61363] tmp[61364] tmp[61365] tmp[61366]
        unknown call_tmp[614448] "expr temp" "maybe param" "maybe type" "temp"
        (614451 'move' call_tmp[614448](61329 call a[61270] i[61363]))
        unknown call_tmp[614453] "expr temp" "maybe param" "maybe type" "temp"
        (614456 'move' call_tmp[614453](61333 call b[61276] i[61363]))
        unknown call_tmp[614458] "expr temp" "maybe param" "maybe type" "temp"
        (614461 'move' call_tmp[614458](61334 call < call_tmp[614448] call_tmp[614453]))
        unknown call_tmp[614463] "expr temp" "maybe param" "maybe type" "temp"
        (614466 'move' call_tmp[614463](61357 call _cond_test call_tmp[614458]))
        if call_tmp[614463]
        {
          (508709 'move' ret[508704](508708 'deref' 1))
          gotoReturn _end_<[508702] _end_<[508702]
        }
        {
          unknown call_tmp[614468] "expr temp" "maybe param" "maybe type" "temp"
          (614471 'move' call_tmp[614468](61342 call a[61270] i[61363]))
          unknown call_tmp[614473] "expr temp" "maybe param" "maybe type" "temp"
          (614476 'move' call_tmp[614473](61346 call b[61276] i[61363]))
          unknown call_tmp[614478] "expr temp" "maybe param" "maybe type" "temp"
          (614481 'move' call_tmp[614478](61347 call > call_tmp[614468] call_tmp[614473]))
          unknown call_tmp[614483] "expr temp" "maybe param" "maybe type" "temp"
          (614486 'move' call_tmp[614483](61352 call _cond_test call_tmp[614478]))
          if call_tmp[614483]
          {
            (508714 'move' ret[508704](508713 'deref' 0))
            gotoReturn _end_<[508702] _end_<[508702]
          }
        }
      }
      label _unused_continueLabel[61368]
      label _breakLabel[61367]
    }
    (508719 'move' ret[508704](508718 'deref' 0))
    label _end_<[508702]
    (508706 return ret[508704])
  }
  function <=[61414](arg a[61411]:_tuple[56202](?), arg b[61417]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508723] "RVV" "temp"
    unknown call_tmp[614490] "expr temp" "maybe param" "maybe type" "temp"
    (614493 'move' call_tmp[614490](61421 call size _mt[243] a[61411]))
    unknown call_tmp[614497] "expr temp" "maybe param" "maybe type" "temp"
    (614500 'move' call_tmp[614497](61425 call size _mt[243] b[61417]))
    unknown call_tmp[614502] "expr temp" "maybe param" "maybe type" "temp"
    (614505 'move' call_tmp[614502](61428 call != call_tmp[614490] call_tmp[614497]))
    unknown call_tmp[614507] "expr temp" "maybe param" "maybe type" "temp"
    (614510 'move' call_tmp[614507](61451 call _cond_test call_tmp[614502]))
    if call_tmp[614507]
    {
      (61449 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61504] "dead at end of block" "insert auto destroy"
      (540946 'init var' i[61504] 0)
      (475103 'end of statement')
      unknown tmp[61505] "maybe param" "temp"
      unknown call_tmp[614514] "expr temp" "maybe param" "maybe type" "temp"
      (614517 'move' call_tmp[614514](61459 call size _mt[243] a[61411]))
      unknown call_tmp[614519] "expr temp" "maybe param" "maybe type" "temp"
      (614522 'move' call_tmp[614519](61463 call - call_tmp[614514] 1))
      (61517 'move' tmp[61505](61515 call chpl_compute_low_param_loop_bound 0 call_tmp[614519]))
      unknown tmp[61506] "maybe param" "temp"
      unknown call_tmp[614526] "expr temp" "maybe param" "maybe type" "temp"
      (614529 'move' call_tmp[614526](61524 call size _mt[243] a[61411]))
      unknown call_tmp[614531] "expr temp" "maybe param" "maybe type" "temp"
      (614534 'move' call_tmp[614531](61522 call - call_tmp[614526] 1))
      (61530 'move' tmp[61506](61528 call chpl_compute_high_param_loop_bound 0 call_tmp[614531]))
      unknown tmp[61507] "maybe param" "temp"
      (61533 'move' tmp[61507] 1)
      ParamForLoop[61535]
      { i[61504] tmp[61505] tmp[61506] tmp[61507]
        unknown call_tmp[614536] "expr temp" "maybe param" "maybe type" "temp"
        (614539 'move' call_tmp[614536](61470 call a[61411] i[61504]))
        unknown call_tmp[614541] "expr temp" "maybe param" "maybe type" "temp"
        (614544 'move' call_tmp[614541](61474 call b[61417] i[61504]))
        unknown call_tmp[614546] "expr temp" "maybe param" "maybe type" "temp"
        (614549 'move' call_tmp[614546](61475 call < call_tmp[614536] call_tmp[614541]))
        unknown call_tmp[614551] "expr temp" "maybe param" "maybe type" "temp"
        (614554 'move' call_tmp[614551](61498 call _cond_test call_tmp[614546]))
        if call_tmp[614551]
        {
          (508728 'move' ret[508723](508727 'deref' 1))
          gotoReturn _end_<=[508721] _end_<=[508721]
        }
        {
          unknown call_tmp[614556] "expr temp" "maybe param" "maybe type" "temp"
          (614559 'move' call_tmp[614556](61483 call a[61411] i[61504]))
          unknown call_tmp[614561] "expr temp" "maybe param" "maybe type" "temp"
          (614564 'move' call_tmp[614561](61487 call b[61417] i[61504]))
          unknown call_tmp[614566] "expr temp" "maybe param" "maybe type" "temp"
          (614569 'move' call_tmp[614566](61488 call > call_tmp[614556] call_tmp[614561]))
          unknown call_tmp[614571] "expr temp" "maybe param" "maybe type" "temp"
          (614574 'move' call_tmp[614571](61493 call _cond_test call_tmp[614566]))
          if call_tmp[614571]
          {
            (508733 'move' ret[508723](508732 'deref' 0))
            gotoReturn _end_<=[508721] _end_<=[508721]
          }
        }
      }
      label _unused_continueLabel[61509]
      label _breakLabel[61508]
    }
    (508738 'move' ret[508723](508737 'deref' 1))
    label _end_<=[508721]
    (508725 return ret[508723])
  }
  function ==[61555](arg a[61552]:_tuple[56202](?), arg b[61558]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508742] "RVV" "temp"
    unknown call_tmp[614578] "expr temp" "maybe param" "maybe type" "temp"
    (614581 'move' call_tmp[614578](61562 call size _mt[243] a[61552]))
    unknown call_tmp[614585] "expr temp" "maybe param" "maybe type" "temp"
    (614588 'move' call_tmp[614585](61566 call size _mt[243] b[61558]))
    unknown call_tmp[614590] "expr temp" "maybe param" "maybe type" "temp"
    (614593 'move' call_tmp[614590](61569 call != call_tmp[614578] call_tmp[614585]))
    unknown call_tmp[614595] "expr temp" "maybe param" "maybe type" "temp"
    (614598 'move' call_tmp[614595](61644 call _cond_test call_tmp[614590]))
    if call_tmp[614595]
    {
      (508747 'move' ret[508742](508746 'deref' 0))
      gotoReturn _end_==[508740] _end_==[508740]
    }
    {
      {
        unknown i[61603] "dead at end of block" "insert auto destroy"
        (540948 'init var' i[61603] 0)
        (475108 'end of statement')
        unknown tmp[61604] "maybe param" "temp"
        unknown call_tmp[614602] "expr temp" "maybe param" "maybe type" "temp"
        (614605 'move' call_tmp[614602](61577 call size _mt[243] a[61552]))
        unknown call_tmp[614607] "expr temp" "maybe param" "maybe type" "temp"
        (614610 'move' call_tmp[614607](61581 call - call_tmp[614602] 1))
        (61616 'move' tmp[61604](61614 call chpl_compute_low_param_loop_bound 0 call_tmp[614607]))
        unknown tmp[61605] "maybe param" "temp"
        unknown call_tmp[614614] "expr temp" "maybe param" "maybe type" "temp"
        (614617 'move' call_tmp[614614](61623 call size _mt[243] a[61552]))
        unknown call_tmp[614619] "expr temp" "maybe param" "maybe type" "temp"
        (614622 'move' call_tmp[614619](61621 call - call_tmp[614614] 1))
        (61629 'move' tmp[61605](61627 call chpl_compute_high_param_loop_bound 0 call_tmp[614619]))
        unknown tmp[61606] "maybe param" "temp"
        (61632 'move' tmp[61606] 1)
        ParamForLoop[61634]
        { i[61603] tmp[61604] tmp[61605] tmp[61606]
          unknown call_tmp[614624] "expr temp" "maybe param" "maybe type" "temp"
          (614627 'move' call_tmp[614624](61588 call a[61552] i[61603]))
          unknown call_tmp[614629] "expr temp" "maybe param" "maybe type" "temp"
          (614632 'move' call_tmp[614629](61592 call b[61558] i[61603]))
          unknown call_tmp[614634] "expr temp" "maybe param" "maybe type" "temp"
          (614637 'move' call_tmp[614634](61593 call != call_tmp[614624] call_tmp[614629]))
          unknown call_tmp[614639] "expr temp" "maybe param" "maybe type" "temp"
          (614642 'move' call_tmp[614639](61598 call _cond_test call_tmp[614634]))
          if call_tmp[614639]
          {
            (508752 'move' ret[508742](508751 'deref' 0))
            gotoReturn _end_==[508740] _end_==[508740]
          }
        }
        label _unused_continueLabel[61608]
        label _breakLabel[61607]
      }
    }
    (508757 'move' ret[508742](508756 'deref' 1))
    label _end_==[508740]
    (508744 return ret[508742])
  }
  function !=[61660](arg a[61657]:_tuple[56202](?), arg b[61663]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508761] "RVV" "temp"
    unknown call_tmp[614646] "expr temp" "maybe param" "maybe type" "temp"
    (614649 'move' call_tmp[614646](61667 call size _mt[243] a[61657]))
    unknown call_tmp[614653] "expr temp" "maybe param" "maybe type" "temp"
    (614656 'move' call_tmp[614653](61671 call size _mt[243] b[61663]))
    unknown call_tmp[614658] "expr temp" "maybe param" "maybe type" "temp"
    (614661 'move' call_tmp[614658](61674 call != call_tmp[614646] call_tmp[614653]))
    unknown call_tmp[614663] "expr temp" "maybe param" "maybe type" "temp"
    (614666 'move' call_tmp[614663](61749 call _cond_test call_tmp[614658]))
    if call_tmp[614663]
    {
      (508766 'move' ret[508761](508765 'deref' 1))
      gotoReturn _end_!=[508759] _end_!=[508759]
    }
    {
      {
        unknown i[61708] "dead at end of block" "insert auto destroy"
        (540950 'init var' i[61708] 0)
        (475112 'end of statement')
        unknown tmp[61709] "maybe param" "temp"
        unknown call_tmp[614670] "expr temp" "maybe param" "maybe type" "temp"
        (614673 'move' call_tmp[614670](61682 call size _mt[243] a[61657]))
        unknown call_tmp[614675] "expr temp" "maybe param" "maybe type" "temp"
        (614678 'move' call_tmp[614675](61686 call - call_tmp[614670] 1))
        (61721 'move' tmp[61709](61719 call chpl_compute_low_param_loop_bound 0 call_tmp[614675]))
        unknown tmp[61710] "maybe param" "temp"
        unknown call_tmp[614682] "expr temp" "maybe param" "maybe type" "temp"
        (614685 'move' call_tmp[614682](61728 call size _mt[243] a[61657]))
        unknown call_tmp[614687] "expr temp" "maybe param" "maybe type" "temp"
        (614690 'move' call_tmp[614687](61726 call - call_tmp[614682] 1))
        (61734 'move' tmp[61710](61732 call chpl_compute_high_param_loop_bound 0 call_tmp[614687]))
        unknown tmp[61711] "maybe param" "temp"
        (61737 'move' tmp[61711] 1)
        ParamForLoop[61739]
        { i[61708] tmp[61709] tmp[61710] tmp[61711]
          unknown call_tmp[614692] "expr temp" "maybe param" "maybe type" "temp"
          (614695 'move' call_tmp[614692](61693 call a[61657] i[61708]))
          unknown call_tmp[614697] "expr temp" "maybe param" "maybe type" "temp"
          (614700 'move' call_tmp[614697](61697 call b[61663] i[61708]))
          unknown call_tmp[614702] "expr temp" "maybe param" "maybe type" "temp"
          (614705 'move' call_tmp[614702](61698 call != call_tmp[614692] call_tmp[614697]))
          unknown call_tmp[614707] "expr temp" "maybe param" "maybe type" "temp"
          (614710 'move' call_tmp[614707](61703 call _cond_test call_tmp[614702]))
          if call_tmp[614707]
          {
            (508771 'move' ret[508761](508770 'deref' 1))
            gotoReturn _end_!=[508759] _end_!=[508759]
          }
        }
        label _unused_continueLabel[61713]
        label _breakLabel[61712]
      }
    }
    (508776 'move' ret[508761](508775 'deref' 0))
    label _end_!=[508759]
    (508763 return ret[508761])
  }
  function +[61765](arg x[61762]:_tuple[56202](?), arg y[61772] :
  unknown call_tmp[614712] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508780] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491691] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614717] "expr temp" "maybe param" "maybe type" "temp"
      (614720 'move' call_tmp[614717](61786 call x[61762] 0))
      (491695 'move' call_type_tmp[491691](61787 'typeof' call_tmp[614717]))
    }
    unknown result[61790] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614724] "expr temp" "maybe param" "maybe type" "temp"
    (614727 'move' call_tmp[614724](61780 call size _mt[243] x[61762]))
    unknown call_tmp[614729] "expr temp" "maybe param" "maybe type" "temp"
    (614732 'move' call_tmp[614729](61788 call * call_tmp[614724] call_type_tmp[491691]))
    (540952 'default init var' result[61790] call_tmp[614729])
    (61793 'end of statement')
    {
      unknown d[61819] "dead at end of block" "insert auto destroy"
      (540954 'init var' d[61819] 0)
      (475115 'end of statement')
      unknown tmp[61820] "maybe param" "temp"
      unknown call_tmp[614736] "expr temp" "maybe param" "maybe type" "temp"
      (614739 'move' call_tmp[614736](61797 call size _mt[243] x[61762]))
      unknown call_tmp[614741] "expr temp" "maybe param" "maybe type" "temp"
      (614744 'move' call_tmp[614741](61801 call - call_tmp[614736] 1))
      (61832 'move' tmp[61820](61830 call chpl_compute_low_param_loop_bound 0 call_tmp[614741]))
      unknown tmp[61821] "maybe param" "temp"
      unknown call_tmp[614748] "expr temp" "maybe param" "maybe type" "temp"
      (614751 'move' call_tmp[614748](61839 call size _mt[243] x[61762]))
      unknown call_tmp[614753] "expr temp" "maybe param" "maybe type" "temp"
      (614756 'move' call_tmp[614753](61837 call - call_tmp[614748] 1))
      (61845 'move' tmp[61821](61843 call chpl_compute_high_param_loop_bound 0 call_tmp[614753]))
      unknown tmp[61822] "maybe param" "temp"
      (61848 'move' tmp[61822] 1)
      ParamForLoop[61850]
      { d[61819] tmp[61820] tmp[61821] tmp[61822]
        unknown call_tmp[614758] "expr temp" "maybe param" "maybe type" "temp"
        (614761 'move' call_tmp[614758](61808 call result[61790] d[61819]))
        unknown call_tmp[614763] "expr temp" "maybe param" "maybe type" "temp"
        (614766 'move' call_tmp[614763](61812 call x[61762] d[61819]))
        unknown call_tmp[614768] "expr temp" "maybe param" "maybe type" "temp"
        (614771 'move' call_tmp[614768](61814 call + call_tmp[614763] y[61772]))
        (61816 call = call_tmp[614758] call_tmp[614768])
        (475116 'end of statement' result[61790] d[61819] d[61819])
      }
      label _unused_continueLabel[61824]
      label _breakLabel[61823]
    }
    (508785 'move' ret[508780](508784 'deref' result[61790]))
    gotoReturn _end_+[508778] _end_+[508778]
    (475120 'end of statement' result[61790])
    label _end_+[508778]
    (508782 return ret[508780])
  }
  where {
    (61778 call isHomogeneousTuple x[61762])
  }
  function +[61872](arg x[61869]:_any[178](?), arg y[61875]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508791] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491697] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614773] "expr temp" "maybe param" "maybe type" "temp"
      (614776 'move' call_tmp[614773](61900 call y[61875] 0))
      (491701 'move' call_type_tmp[491697](61901 'typeof' call_tmp[614773]))
    }
    unknown result[61904] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614780] "expr temp" "maybe param" "maybe type" "temp"
    (614783 'move' call_tmp[614780](61894 call size _mt[243] y[61875]))
    unknown call_tmp[614785] "expr temp" "maybe param" "maybe type" "temp"
    (614788 'move' call_tmp[614785](61902 call * call_tmp[614780] call_type_tmp[491697]))
    (540956 'default init var' result[61904] call_tmp[614785])
    (61907 'end of statement')
    {
      unknown d[61933] "dead at end of block" "insert auto destroy"
      (540958 'init var' d[61933] 0)
      (475122 'end of statement')
      unknown tmp[61934] "maybe param" "temp"
      unknown call_tmp[614792] "expr temp" "maybe param" "maybe type" "temp"
      (614795 'move' call_tmp[614792](61911 call size _mt[243] y[61875]))
      unknown call_tmp[614797] "expr temp" "maybe param" "maybe type" "temp"
      (614800 'move' call_tmp[614797](61915 call - call_tmp[614792] 1))
      (61946 'move' tmp[61934](61944 call chpl_compute_low_param_loop_bound 0 call_tmp[614797]))
      unknown tmp[61935] "maybe param" "temp"
      unknown call_tmp[614804] "expr temp" "maybe param" "maybe type" "temp"
      (614807 'move' call_tmp[614804](61953 call size _mt[243] y[61875]))
      unknown call_tmp[614809] "expr temp" "maybe param" "maybe type" "temp"
      (614812 'move' call_tmp[614809](61951 call - call_tmp[614804] 1))
      (61959 'move' tmp[61935](61957 call chpl_compute_high_param_loop_bound 0 call_tmp[614809]))
      unknown tmp[61936] "maybe param" "temp"
      (61962 'move' tmp[61936] 1)
      ParamForLoop[61964]
      { d[61933] tmp[61934] tmp[61935] tmp[61936]
        unknown call_tmp[614814] "expr temp" "maybe param" "maybe type" "temp"
        (614817 'move' call_tmp[614814](61922 call result[61904] d[61933]))
        unknown call_tmp[614819] "expr temp" "maybe param" "maybe type" "temp"
        (614822 'move' call_tmp[614819](61927 call y[61875] d[61933]))
        unknown call_tmp[614824] "expr temp" "maybe param" "maybe type" "temp"
        (614827 'move' call_tmp[614824](61928 call + x[61869] call_tmp[614819]))
        (61930 call = call_tmp[614814] call_tmp[614824])
        (475123 'end of statement' result[61904] d[61933] d[61933])
      }
      label _unused_continueLabel[61938]
      label _breakLabel[61937]
    }
    (508796 'move' ret[508791](508795 'deref' result[61904]))
    gotoReturn _end_+[508789] _end_+[508789]
    (475127 'end of statement' result[61904])
    label _end_+[508789]
    (508793 return ret[508791])
  }
  where {
    unknown tmp[419005] "maybe param" "temp"
    (419016 'move' tmp[419005](61881 call isHomogeneousTuple y[61875]))
    unknown call_tmp[614829] "expr temp" "maybe param" "maybe type" "temp"
    (614832 'move' call_tmp[614829](419018 call _cond_invalid tmp[419005]))
    if call_tmp[614829]
    {
      (419021 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555124] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555125] "maybe param" "temp"
    unknown call_tmp[614834] "expr temp" "maybe param" "maybe type" "temp"
    (614837 'move' call_tmp[614834](419006 call isTrue tmp[419005]))
    (555130 'move' tmp[555125](555128 call _cond_test call_tmp[614834]))
    if tmp[555125]
    {
      { scopeless type
        unknown call_type_tmp[491703] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614839] "expr temp" "maybe param" "maybe type" "temp"
        (614842 'move' call_tmp[614839](61888 call y[61875] 0))
        (491707 'move' call_type_tmp[491703](61889 'typeof' call_tmp[614839]))
      }
      unknown tmp[555132] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614844] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614847 'move' call_tmp[614844](454819 'typeof' x[61869]))
      unknown call_tmp[614849] "expr temp" "maybe param" "maybe type" "temp"
      (614852 'move' call_tmp[614849](354254 'is_subtype' call_type_tmp[491703] call_tmp[614844]))
      (555134 'move' tmp[555132](419009 call isTrue call_tmp[614849]))
      (555139 'move' tmp[555124](555136 '_paramFoldLogical' tmp[555125] tmp[555132]))
    }
    {
      (555144 'move' tmp[555124](555141 '_paramFoldLogical' tmp[555125] 0))
    }
    (748263 call chpl_statementLevelSymbol tmp[555124])
  }
  function -[61985](arg x[61982]:_tuple[56202](?), arg y[61992] :
  unknown call_tmp[614854] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508802] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491709] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614859] "expr temp" "maybe param" "maybe type" "temp"
      (614862 'move' call_tmp[614859](62006 call x[61982] 0))
      (491713 'move' call_type_tmp[491709](62007 'typeof' call_tmp[614859]))
    }
    unknown result[62010] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614866] "expr temp" "maybe param" "maybe type" "temp"
    (614869 'move' call_tmp[614866](62000 call size _mt[243] x[61982]))
    unknown call_tmp[614871] "expr temp" "maybe param" "maybe type" "temp"
    (614874 'move' call_tmp[614871](62008 call * call_tmp[614866] call_type_tmp[491709]))
    (540960 'default init var' result[62010] call_tmp[614871])
    (62013 'end of statement')
    {
      unknown d[62039] "dead at end of block" "insert auto destroy"
      (540962 'init var' d[62039] 0)
      (475129 'end of statement')
      unknown tmp[62040] "maybe param" "temp"
      unknown call_tmp[614878] "expr temp" "maybe param" "maybe type" "temp"
      (614881 'move' call_tmp[614878](62017 call size _mt[243] x[61982]))
      unknown call_tmp[614883] "expr temp" "maybe param" "maybe type" "temp"
      (614886 'move' call_tmp[614883](62021 call - call_tmp[614878] 1))
      (62052 'move' tmp[62040](62050 call chpl_compute_low_param_loop_bound 0 call_tmp[614883]))
      unknown tmp[62041] "maybe param" "temp"
      unknown call_tmp[614890] "expr temp" "maybe param" "maybe type" "temp"
      (614893 'move' call_tmp[614890](62059 call size _mt[243] x[61982]))
      unknown call_tmp[614895] "expr temp" "maybe param" "maybe type" "temp"
      (614898 'move' call_tmp[614895](62057 call - call_tmp[614890] 1))
      (62065 'move' tmp[62041](62063 call chpl_compute_high_param_loop_bound 0 call_tmp[614895]))
      unknown tmp[62042] "maybe param" "temp"
      (62068 'move' tmp[62042] 1)
      ParamForLoop[62070]
      { d[62039] tmp[62040] tmp[62041] tmp[62042]
        unknown call_tmp[614900] "expr temp" "maybe param" "maybe type" "temp"
        (614903 'move' call_tmp[614900](62028 call result[62010] d[62039]))
        unknown call_tmp[614905] "expr temp" "maybe param" "maybe type" "temp"
        (614908 'move' call_tmp[614905](62032 call x[61982] d[62039]))
        unknown call_tmp[614910] "expr temp" "maybe param" "maybe type" "temp"
        (614913 'move' call_tmp[614910](62034 call - call_tmp[614905] y[61992]))
        (62036 call = call_tmp[614900] call_tmp[614910])
        (475130 'end of statement' result[62010] d[62039] d[62039])
      }
      label _unused_continueLabel[62044]
      label _breakLabel[62043]
    }
    (508807 'move' ret[508802](508806 'deref' result[62010]))
    gotoReturn _end_-[508800] _end_-[508800]
    (475134 'end of statement' result[62010])
    label _end_-[508800]
    (508804 return ret[508802])
  }
  where {
    (61998 call isHomogeneousTuple x[61982])
  }
  function -[62092](arg x[62089]:_any[178](?), arg y[62095]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508813] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491715] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614915] "expr temp" "maybe param" "maybe type" "temp"
      (614918 'move' call_tmp[614915](62120 call y[62095] 0))
      (491719 'move' call_type_tmp[491715](62121 'typeof' call_tmp[614915]))
    }
    unknown result[62124] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614922] "expr temp" "maybe param" "maybe type" "temp"
    (614925 'move' call_tmp[614922](62114 call size _mt[243] y[62095]))
    unknown call_tmp[614927] "expr temp" "maybe param" "maybe type" "temp"
    (614930 'move' call_tmp[614927](62122 call * call_tmp[614922] call_type_tmp[491715]))
    (540964 'default init var' result[62124] call_tmp[614927])
    (62127 'end of statement')
    {
      unknown d[62153] "dead at end of block" "insert auto destroy"
      (540966 'init var' d[62153] 0)
      (475136 'end of statement')
      unknown tmp[62154] "maybe param" "temp"
      unknown call_tmp[614934] "expr temp" "maybe param" "maybe type" "temp"
      (614937 'move' call_tmp[614934](62131 call size _mt[243] y[62095]))
      unknown call_tmp[614939] "expr temp" "maybe param" "maybe type" "temp"
      (614942 'move' call_tmp[614939](62135 call - call_tmp[614934] 1))
      (62166 'move' tmp[62154](62164 call chpl_compute_low_param_loop_bound 0 call_tmp[614939]))
      unknown tmp[62155] "maybe param" "temp"
      unknown call_tmp[614946] "expr temp" "maybe param" "maybe type" "temp"
      (614949 'move' call_tmp[614946](62173 call size _mt[243] y[62095]))
      unknown call_tmp[614951] "expr temp" "maybe param" "maybe type" "temp"
      (614954 'move' call_tmp[614951](62171 call - call_tmp[614946] 1))
      (62179 'move' tmp[62155](62177 call chpl_compute_high_param_loop_bound 0 call_tmp[614951]))
      unknown tmp[62156] "maybe param" "temp"
      (62182 'move' tmp[62156] 1)
      ParamForLoop[62184]
      { d[62153] tmp[62154] tmp[62155] tmp[62156]
        unknown call_tmp[614956] "expr temp" "maybe param" "maybe type" "temp"
        (614959 'move' call_tmp[614956](62142 call result[62124] d[62153]))
        unknown call_tmp[614961] "expr temp" "maybe param" "maybe type" "temp"
        (614964 'move' call_tmp[614961](62147 call y[62095] d[62153]))
        unknown call_tmp[614966] "expr temp" "maybe param" "maybe type" "temp"
        (614969 'move' call_tmp[614966](62148 call - x[62089] call_tmp[614961]))
        (62150 call = call_tmp[614956] call_tmp[614966])
        (475137 'end of statement' result[62124] d[62153] d[62153])
      }
      label _unused_continueLabel[62158]
      label _breakLabel[62157]
    }
    (508818 'move' ret[508813](508817 'deref' result[62124]))
    gotoReturn _end_-[508811] _end_-[508811]
    (475141 'end of statement' result[62124])
    label _end_-[508811]
    (508815 return ret[508813])
  }
  where {
    unknown tmp[419026] "maybe param" "temp"
    (419037 'move' tmp[419026](62101 call isHomogeneousTuple y[62095]))
    unknown call_tmp[614971] "expr temp" "maybe param" "maybe type" "temp"
    (614974 'move' call_tmp[614971](419039 call _cond_invalid tmp[419026]))
    if call_tmp[614971]
    {
      (419042 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555151] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555152] "maybe param" "temp"
    unknown call_tmp[614976] "expr temp" "maybe param" "maybe type" "temp"
    (614979 'move' call_tmp[614976](419027 call isTrue tmp[419026]))
    (555157 'move' tmp[555152](555155 call _cond_test call_tmp[614976]))
    if tmp[555152]
    {
      { scopeless type
        unknown call_type_tmp[491721] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614981] "expr temp" "maybe param" "maybe type" "temp"
        (614984 'move' call_tmp[614981](62108 call y[62095] 0))
        (491725 'move' call_type_tmp[491721](62109 'typeof' call_tmp[614981]))
      }
      unknown tmp[555159] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614986] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614989 'move' call_tmp[614986](454821 'typeof' x[62089]))
      unknown call_tmp[614991] "expr temp" "maybe param" "maybe type" "temp"
      (614994 'move' call_tmp[614991](354255 'is_subtype' call_type_tmp[491721] call_tmp[614986]))
      (555161 'move' tmp[555159](419030 call isTrue call_tmp[614991]))
      (555166 'move' tmp[555151](555163 '_paramFoldLogical' tmp[555152] tmp[555159]))
    }
    {
      (555171 'move' tmp[555151](555168 '_paramFoldLogical' tmp[555152] 0))
    }
    (748265 call chpl_statementLevelSymbol tmp[555151])
  }
  function *[62205](arg x[62202]:_tuple[56202](?), arg y[62212] :
  unknown call_tmp[614996] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508824] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491727] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615001] "expr temp" "maybe param" "maybe type" "temp"
      (615004 'move' call_tmp[615001](62226 call x[62202] 0))
      (491731 'move' call_type_tmp[491727](62227 'typeof' call_tmp[615001]))
    }
    unknown result[62230] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615008] "expr temp" "maybe param" "maybe type" "temp"
    (615011 'move' call_tmp[615008](62220 call size _mt[243] x[62202]))
    unknown call_tmp[615013] "expr temp" "maybe param" "maybe type" "temp"
    (615016 'move' call_tmp[615013](62228 call * call_tmp[615008] call_type_tmp[491727]))
    (540968 'default init var' result[62230] call_tmp[615013])
    (62233 'end of statement')
    {
      unknown d[62259] "dead at end of block" "insert auto destroy"
      (540970 'init var' d[62259] 0)
      (475143 'end of statement')
      unknown tmp[62260] "maybe param" "temp"
      unknown call_tmp[615020] "expr temp" "maybe param" "maybe type" "temp"
      (615023 'move' call_tmp[615020](62237 call size _mt[243] x[62202]))
      unknown call_tmp[615025] "expr temp" "maybe param" "maybe type" "temp"
      (615028 'move' call_tmp[615025](62241 call - call_tmp[615020] 1))
      (62272 'move' tmp[62260](62270 call chpl_compute_low_param_loop_bound 0 call_tmp[615025]))
      unknown tmp[62261] "maybe param" "temp"
      unknown call_tmp[615032] "expr temp" "maybe param" "maybe type" "temp"
      (615035 'move' call_tmp[615032](62279 call size _mt[243] x[62202]))
      unknown call_tmp[615037] "expr temp" "maybe param" "maybe type" "temp"
      (615040 'move' call_tmp[615037](62277 call - call_tmp[615032] 1))
      (62285 'move' tmp[62261](62283 call chpl_compute_high_param_loop_bound 0 call_tmp[615037]))
      unknown tmp[62262] "maybe param" "temp"
      (62288 'move' tmp[62262] 1)
      ParamForLoop[62290]
      { d[62259] tmp[62260] tmp[62261] tmp[62262]
        unknown call_tmp[615042] "expr temp" "maybe param" "maybe type" "temp"
        (615045 'move' call_tmp[615042](62248 call result[62230] d[62259]))
        unknown call_tmp[615047] "expr temp" "maybe param" "maybe type" "temp"
        (615050 'move' call_tmp[615047](62252 call x[62202] d[62259]))
        unknown call_tmp[615052] "expr temp" "maybe param" "maybe type" "temp"
        (615055 'move' call_tmp[615052](62254 call * call_tmp[615047] y[62212]))
        (62256 call = call_tmp[615042] call_tmp[615052])
        (475144 'end of statement' result[62230] d[62259] d[62259])
      }
      label _unused_continueLabel[62264]
      label _breakLabel[62263]
    }
    (508829 'move' ret[508824](508828 'deref' result[62230]))
    gotoReturn _end_*[508822] _end_*[508822]
    (475148 'end of statement' result[62230])
    label _end_*[508822]
    (508826 return ret[508824])
  }
  where {
    (62218 call isHomogeneousTuple x[62202])
  }
  function *[62312](arg x[62309]:_any[178](?), arg y[62315]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508835] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491733] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615057] "expr temp" "maybe param" "maybe type" "temp"
      (615060 'move' call_tmp[615057](62340 call y[62315] 0))
      (491737 'move' call_type_tmp[491733](62341 'typeof' call_tmp[615057]))
    }
    unknown result[62344] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615064] "expr temp" "maybe param" "maybe type" "temp"
    (615067 'move' call_tmp[615064](62334 call size _mt[243] y[62315]))
    unknown call_tmp[615069] "expr temp" "maybe param" "maybe type" "temp"
    (615072 'move' call_tmp[615069](62342 call * call_tmp[615064] call_type_tmp[491733]))
    (540972 'default init var' result[62344] call_tmp[615069])
    (62347 'end of statement')
    {
      unknown d[62373] "dead at end of block" "insert auto destroy"
      (540974 'init var' d[62373] 0)
      (475150 'end of statement')
      unknown tmp[62374] "maybe param" "temp"
      unknown call_tmp[615076] "expr temp" "maybe param" "maybe type" "temp"
      (615079 'move' call_tmp[615076](62351 call size _mt[243] y[62315]))
      unknown call_tmp[615081] "expr temp" "maybe param" "maybe type" "temp"
      (615084 'move' call_tmp[615081](62355 call - call_tmp[615076] 1))
      (62386 'move' tmp[62374](62384 call chpl_compute_low_param_loop_bound 0 call_tmp[615081]))
      unknown tmp[62375] "maybe param" "temp"
      unknown call_tmp[615088] "expr temp" "maybe param" "maybe type" "temp"
      (615091 'move' call_tmp[615088](62393 call size _mt[243] y[62315]))
      unknown call_tmp[615093] "expr temp" "maybe param" "maybe type" "temp"
      (615096 'move' call_tmp[615093](62391 call - call_tmp[615088] 1))
      (62399 'move' tmp[62375](62397 call chpl_compute_high_param_loop_bound 0 call_tmp[615093]))
      unknown tmp[62376] "maybe param" "temp"
      (62402 'move' tmp[62376] 1)
      ParamForLoop[62404]
      { d[62373] tmp[62374] tmp[62375] tmp[62376]
        unknown call_tmp[615098] "expr temp" "maybe param" "maybe type" "temp"
        (615101 'move' call_tmp[615098](62362 call result[62344] d[62373]))
        unknown call_tmp[615103] "expr temp" "maybe param" "maybe type" "temp"
        (615106 'move' call_tmp[615103](62367 call y[62315] d[62373]))
        unknown call_tmp[615108] "expr temp" "maybe param" "maybe type" "temp"
        (615111 'move' call_tmp[615108](62368 call * x[62309] call_tmp[615103]))
        (62370 call = call_tmp[615098] call_tmp[615108])
        (475151 'end of statement' result[62344] d[62373] d[62373])
      }
      label _unused_continueLabel[62378]
      label _breakLabel[62377]
    }
    (508840 'move' ret[508835](508839 'deref' result[62344]))
    gotoReturn _end_*[508833] _end_*[508833]
    (475155 'end of statement' result[62344])
    label _end_*[508833]
    (508837 return ret[508835])
  }
  where {
    unknown tmp[419047] "maybe param" "temp"
    (419058 'move' tmp[419047](62321 call isHomogeneousTuple y[62315]))
    unknown call_tmp[615113] "expr temp" "maybe param" "maybe type" "temp"
    (615116 'move' call_tmp[615113](419060 call _cond_invalid tmp[419047]))
    if call_tmp[615113]
    {
      (419063 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555178] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555179] "maybe param" "temp"
    unknown call_tmp[615118] "expr temp" "maybe param" "maybe type" "temp"
    (615121 'move' call_tmp[615118](419048 call isTrue tmp[419047]))
    (555184 'move' tmp[555179](555182 call _cond_test call_tmp[615118]))
    if tmp[555179]
    {
      { scopeless type
        unknown call_type_tmp[491739] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615123] "expr temp" "maybe param" "maybe type" "temp"
        (615126 'move' call_tmp[615123](62328 call y[62315] 0))
        (491743 'move' call_type_tmp[491739](62329 'typeof' call_tmp[615123]))
      }
      unknown tmp[555186] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615128] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615131 'move' call_tmp[615128](454823 'typeof' x[62309]))
      unknown call_tmp[615133] "expr temp" "maybe param" "maybe type" "temp"
      (615136 'move' call_tmp[615133](354256 'is_subtype' call_type_tmp[491739] call_tmp[615128]))
      (555188 'move' tmp[555186](419051 call isTrue call_tmp[615133]))
      (555193 'move' tmp[555178](555190 '_paramFoldLogical' tmp[555179] tmp[555186]))
    }
    {
      (555198 'move' tmp[555178](555195 '_paramFoldLogical' tmp[555179] 0))
    }
    (748267 call chpl_statementLevelSymbol tmp[555178])
  }
  function /[62425](arg x[62422]:_tuple[56202](?), arg y[62432] :
  unknown call_tmp[615138] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508846] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491745] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615143] "expr temp" "maybe param" "maybe type" "temp"
      (615146 'move' call_tmp[615143](62446 call x[62422] 0))
      (491749 'move' call_type_tmp[491745](62447 'typeof' call_tmp[615143]))
    }
    unknown result[62450] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615150] "expr temp" "maybe param" "maybe type" "temp"
    (615153 'move' call_tmp[615150](62440 call size _mt[243] x[62422]))
    unknown call_tmp[615155] "expr temp" "maybe param" "maybe type" "temp"
    (615158 'move' call_tmp[615155](62448 call * call_tmp[615150] call_type_tmp[491745]))
    (540976 'default init var' result[62450] call_tmp[615155])
    (62453 'end of statement')
    {
      unknown d[62479] "dead at end of block" "insert auto destroy"
      (540978 'init var' d[62479] 0)
      (475157 'end of statement')
      unknown tmp[62480] "maybe param" "temp"
      unknown call_tmp[615162] "expr temp" "maybe param" "maybe type" "temp"
      (615165 'move' call_tmp[615162](62457 call size _mt[243] x[62422]))
      unknown call_tmp[615167] "expr temp" "maybe param" "maybe type" "temp"
      (615170 'move' call_tmp[615167](62461 call - call_tmp[615162] 1))
      (62492 'move' tmp[62480](62490 call chpl_compute_low_param_loop_bound 0 call_tmp[615167]))
      unknown tmp[62481] "maybe param" "temp"
      unknown call_tmp[615174] "expr temp" "maybe param" "maybe type" "temp"
      (615177 'move' call_tmp[615174](62499 call size _mt[243] x[62422]))
      unknown call_tmp[615179] "expr temp" "maybe param" "maybe type" "temp"
      (615182 'move' call_tmp[615179](62497 call - call_tmp[615174] 1))
      (62505 'move' tmp[62481](62503 call chpl_compute_high_param_loop_bound 0 call_tmp[615179]))
      unknown tmp[62482] "maybe param" "temp"
      (62508 'move' tmp[62482] 1)
      ParamForLoop[62510]
      { d[62479] tmp[62480] tmp[62481] tmp[62482]
        unknown call_tmp[615184] "expr temp" "maybe param" "maybe type" "temp"
        (615187 'move' call_tmp[615184](62468 call result[62450] d[62479]))
        unknown call_tmp[615189] "expr temp" "maybe param" "maybe type" "temp"
        (615192 'move' call_tmp[615189](62472 call x[62422] d[62479]))
        unknown call_tmp[615194] "expr temp" "maybe param" "maybe type" "temp"
        (615197 'move' call_tmp[615194](62474 call / call_tmp[615189] y[62432]))
        (62476 call = call_tmp[615184] call_tmp[615194])
        (475158 'end of statement' result[62450] d[62479] d[62479])
      }
      label _unused_continueLabel[62484]
      label _breakLabel[62483]
    }
    (508851 'move' ret[508846](508850 'deref' result[62450]))
    gotoReturn _end_/[508844] _end_/[508844]
    (475162 'end of statement' result[62450])
    label _end_/[508844]
    (508848 return ret[508846])
  }
  where {
    (62438 call isHomogeneousTuple x[62422])
  }
  function /[62532](arg x[62529]:_any[178](?), arg y[62535]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508857] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491751] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615199] "expr temp" "maybe param" "maybe type" "temp"
      (615202 'move' call_tmp[615199](62560 call y[62535] 0))
      (491755 'move' call_type_tmp[491751](62561 'typeof' call_tmp[615199]))
    }
    unknown result[62564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615206] "expr temp" "maybe param" "maybe type" "temp"
    (615209 'move' call_tmp[615206](62554 call size _mt[243] y[62535]))
    unknown call_tmp[615211] "expr temp" "maybe param" "maybe type" "temp"
    (615214 'move' call_tmp[615211](62562 call * call_tmp[615206] call_type_tmp[491751]))
    (540980 'default init var' result[62564] call_tmp[615211])
    (62567 'end of statement')
    {
      unknown d[62593] "dead at end of block" "insert auto destroy"
      (540982 'init var' d[62593] 0)
      (475164 'end of statement')
      unknown tmp[62594] "maybe param" "temp"
      unknown call_tmp[615218] "expr temp" "maybe param" "maybe type" "temp"
      (615221 'move' call_tmp[615218](62571 call size _mt[243] y[62535]))
      unknown call_tmp[615223] "expr temp" "maybe param" "maybe type" "temp"
      (615226 'move' call_tmp[615223](62575 call - call_tmp[615218] 1))
      (62606 'move' tmp[62594](62604 call chpl_compute_low_param_loop_bound 0 call_tmp[615223]))
      unknown tmp[62595] "maybe param" "temp"
      unknown call_tmp[615230] "expr temp" "maybe param" "maybe type" "temp"
      (615233 'move' call_tmp[615230](62613 call size _mt[243] y[62535]))
      unknown call_tmp[615235] "expr temp" "maybe param" "maybe type" "temp"
      (615238 'move' call_tmp[615235](62611 call - call_tmp[615230] 1))
      (62619 'move' tmp[62595](62617 call chpl_compute_high_param_loop_bound 0 call_tmp[615235]))
      unknown tmp[62596] "maybe param" "temp"
      (62622 'move' tmp[62596] 1)
      ParamForLoop[62624]
      { d[62593] tmp[62594] tmp[62595] tmp[62596]
        unknown call_tmp[615240] "expr temp" "maybe param" "maybe type" "temp"
        (615243 'move' call_tmp[615240](62582 call result[62564] d[62593]))
        unknown call_tmp[615245] "expr temp" "maybe param" "maybe type" "temp"
        (615248 'move' call_tmp[615245](62587 call y[62535] d[62593]))
        unknown call_tmp[615250] "expr temp" "maybe param" "maybe type" "temp"
        (615253 'move' call_tmp[615250](62588 call / x[62529] call_tmp[615245]))
        (62590 call = call_tmp[615240] call_tmp[615250])
        (475165 'end of statement' result[62564] d[62593] d[62593])
      }
      label _unused_continueLabel[62598]
      label _breakLabel[62597]
    }
    (508862 'move' ret[508857](508861 'deref' result[62564]))
    gotoReturn _end_/[508855] _end_/[508855]
    (475169 'end of statement' result[62564])
    label _end_/[508855]
    (508859 return ret[508857])
  }
  where {
    unknown tmp[419068] "maybe param" "temp"
    (419079 'move' tmp[419068](62541 call isHomogeneousTuple y[62535]))
    unknown call_tmp[615255] "expr temp" "maybe param" "maybe type" "temp"
    (615258 'move' call_tmp[615255](419081 call _cond_invalid tmp[419068]))
    if call_tmp[615255]
    {
      (419084 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555206] "maybe param" "temp"
    unknown call_tmp[615260] "expr temp" "maybe param" "maybe type" "temp"
    (615263 'move' call_tmp[615260](419069 call isTrue tmp[419068]))
    (555211 'move' tmp[555206](555209 call _cond_test call_tmp[615260]))
    if tmp[555206]
    {
      { scopeless type
        unknown call_type_tmp[491757] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615265] "expr temp" "maybe param" "maybe type" "temp"
        (615268 'move' call_tmp[615265](62548 call y[62535] 0))
        (491761 'move' call_type_tmp[491757](62549 'typeof' call_tmp[615265]))
      }
      unknown tmp[555213] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615270] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615273 'move' call_tmp[615270](454825 'typeof' x[62529]))
      unknown call_tmp[615275] "expr temp" "maybe param" "maybe type" "temp"
      (615278 'move' call_tmp[615275](354257 'is_subtype' call_type_tmp[491757] call_tmp[615270]))
      (555215 'move' tmp[555213](419072 call isTrue call_tmp[615275]))
      (555220 'move' tmp[555205](555217 '_paramFoldLogical' tmp[555206] tmp[555213]))
    }
    {
      (555225 'move' tmp[555205](555222 '_paramFoldLogical' tmp[555206] 0))
    }
    (748269 call chpl_statementLevelSymbol tmp[555205])
  }
  function %[62645](arg x[62642]:_tuple[56202](?), arg y[62652] :
  unknown call_tmp[615280] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508868] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491763] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615285] "expr temp" "maybe param" "maybe type" "temp"
      (615288 'move' call_tmp[615285](62666 call x[62642] 0))
      (491767 'move' call_type_tmp[491763](62667 'typeof' call_tmp[615285]))
    }
    unknown result[62670] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615292] "expr temp" "maybe param" "maybe type" "temp"
    (615295 'move' call_tmp[615292](62660 call size _mt[243] x[62642]))
    unknown call_tmp[615297] "expr temp" "maybe param" "maybe type" "temp"
    (615300 'move' call_tmp[615297](62668 call * call_tmp[615292] call_type_tmp[491763]))
    (540984 'default init var' result[62670] call_tmp[615297])
    (62673 'end of statement')
    {
      unknown d[62699] "dead at end of block" "insert auto destroy"
      (540986 'init var' d[62699] 0)
      (475171 'end of statement')
      unknown tmp[62700] "maybe param" "temp"
      unknown call_tmp[615304] "expr temp" "maybe param" "maybe type" "temp"
      (615307 'move' call_tmp[615304](62677 call size _mt[243] x[62642]))
      unknown call_tmp[615309] "expr temp" "maybe param" "maybe type" "temp"
      (615312 'move' call_tmp[615309](62681 call - call_tmp[615304] 1))
      (62712 'move' tmp[62700](62710 call chpl_compute_low_param_loop_bound 0 call_tmp[615309]))
      unknown tmp[62701] "maybe param" "temp"
      unknown call_tmp[615316] "expr temp" "maybe param" "maybe type" "temp"
      (615319 'move' call_tmp[615316](62719 call size _mt[243] x[62642]))
      unknown call_tmp[615321] "expr temp" "maybe param" "maybe type" "temp"
      (615324 'move' call_tmp[615321](62717 call - call_tmp[615316] 1))
      (62725 'move' tmp[62701](62723 call chpl_compute_high_param_loop_bound 0 call_tmp[615321]))
      unknown tmp[62702] "maybe param" "temp"
      (62728 'move' tmp[62702] 1)
      ParamForLoop[62730]
      { d[62699] tmp[62700] tmp[62701] tmp[62702]
        unknown call_tmp[615326] "expr temp" "maybe param" "maybe type" "temp"
        (615329 'move' call_tmp[615326](62688 call result[62670] d[62699]))
        unknown call_tmp[615331] "expr temp" "maybe param" "maybe type" "temp"
        (615334 'move' call_tmp[615331](62692 call x[62642] d[62699]))
        unknown call_tmp[615336] "expr temp" "maybe param" "maybe type" "temp"
        (615339 'move' call_tmp[615336](62694 call % call_tmp[615331] y[62652]))
        (62696 call = call_tmp[615326] call_tmp[615336])
        (475172 'end of statement' result[62670] d[62699] d[62699])
      }
      label _unused_continueLabel[62704]
      label _breakLabel[62703]
    }
    (508873 'move' ret[508868](508872 'deref' result[62670]))
    gotoReturn _end_%[508866] _end_%[508866]
    (475176 'end of statement' result[62670])
    label _end_%[508866]
    (508870 return ret[508868])
  }
  where {
    (62658 call isHomogeneousTuple x[62642])
  }
  function %[62752](arg x[62749]:_any[178](?), arg y[62755]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508879] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491769] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615341] "expr temp" "maybe param" "maybe type" "temp"
      (615344 'move' call_tmp[615341](62780 call y[62755] 0))
      (491773 'move' call_type_tmp[491769](62781 'typeof' call_tmp[615341]))
    }
    unknown result[62784] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615348] "expr temp" "maybe param" "maybe type" "temp"
    (615351 'move' call_tmp[615348](62774 call size _mt[243] y[62755]))
    unknown call_tmp[615353] "expr temp" "maybe param" "maybe type" "temp"
    (615356 'move' call_tmp[615353](62782 call * call_tmp[615348] call_type_tmp[491769]))
    (540988 'default init var' result[62784] call_tmp[615353])
    (62787 'end of statement')
    {
      unknown d[62813] "dead at end of block" "insert auto destroy"
      (540990 'init var' d[62813] 0)
      (475178 'end of statement')
      unknown tmp[62814] "maybe param" "temp"
      unknown call_tmp[615360] "expr temp" "maybe param" "maybe type" "temp"
      (615363 'move' call_tmp[615360](62791 call size _mt[243] y[62755]))
      unknown call_tmp[615365] "expr temp" "maybe param" "maybe type" "temp"
      (615368 'move' call_tmp[615365](62795 call - call_tmp[615360] 1))
      (62826 'move' tmp[62814](62824 call chpl_compute_low_param_loop_bound 0 call_tmp[615365]))
      unknown tmp[62815] "maybe param" "temp"
      unknown call_tmp[615372] "expr temp" "maybe param" "maybe type" "temp"
      (615375 'move' call_tmp[615372](62833 call size _mt[243] y[62755]))
      unknown call_tmp[615377] "expr temp" "maybe param" "maybe type" "temp"
      (615380 'move' call_tmp[615377](62831 call - call_tmp[615372] 1))
      (62839 'move' tmp[62815](62837 call chpl_compute_high_param_loop_bound 0 call_tmp[615377]))
      unknown tmp[62816] "maybe param" "temp"
      (62842 'move' tmp[62816] 1)
      ParamForLoop[62844]
      { d[62813] tmp[62814] tmp[62815] tmp[62816]
        unknown call_tmp[615382] "expr temp" "maybe param" "maybe type" "temp"
        (615385 'move' call_tmp[615382](62802 call result[62784] d[62813]))
        unknown call_tmp[615387] "expr temp" "maybe param" "maybe type" "temp"
        (615390 'move' call_tmp[615387](62807 call y[62755] d[62813]))
        unknown call_tmp[615392] "expr temp" "maybe param" "maybe type" "temp"
        (615395 'move' call_tmp[615392](62808 call % x[62749] call_tmp[615387]))
        (62810 call = call_tmp[615382] call_tmp[615392])
        (475179 'end of statement' result[62784] d[62813] d[62813])
      }
      label _unused_continueLabel[62818]
      label _breakLabel[62817]
    }
    (508884 'move' ret[508879](508883 'deref' result[62784]))
    gotoReturn _end_%[508877] _end_%[508877]
    (475183 'end of statement' result[62784])
    label _end_%[508877]
    (508881 return ret[508879])
  }
  where {
    unknown tmp[419089] "maybe param" "temp"
    (419100 'move' tmp[419089](62761 call isHomogeneousTuple y[62755]))
    unknown call_tmp[615397] "expr temp" "maybe param" "maybe type" "temp"
    (615400 'move' call_tmp[615397](419102 call _cond_invalid tmp[419089]))
    if call_tmp[615397]
    {
      (419105 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555233] "maybe param" "temp"
    unknown call_tmp[615402] "expr temp" "maybe param" "maybe type" "temp"
    (615405 'move' call_tmp[615402](419090 call isTrue tmp[419089]))
    (555238 'move' tmp[555233](555236 call _cond_test call_tmp[615402]))
    if tmp[555233]
    {
      { scopeless type
        unknown call_type_tmp[491775] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615407] "expr temp" "maybe param" "maybe type" "temp"
        (615410 'move' call_tmp[615407](62768 call y[62755] 0))
        (491779 'move' call_type_tmp[491775](62769 'typeof' call_tmp[615407]))
      }
      unknown tmp[555240] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615412] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615415 'move' call_tmp[615412](454827 'typeof' x[62749]))
      unknown call_tmp[615417] "expr temp" "maybe param" "maybe type" "temp"
      (615420 'move' call_tmp[615417](354258 'is_subtype' call_type_tmp[491775] call_tmp[615412]))
      (555242 'move' tmp[555240](419093 call isTrue call_tmp[615417]))
      (555247 'move' tmp[555232](555244 '_paramFoldLogical' tmp[555233] tmp[555240]))
    }
    {
      (555252 'move' tmp[555232](555249 '_paramFoldLogical' tmp[555233] 0))
    }
    (748271 call chpl_statementLevelSymbol tmp[555232])
  }
  function **[62865](arg x[62862]:_tuple[56202](?), arg y[62872] :
  unknown call_tmp[615422] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508890] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491781] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615427] "expr temp" "maybe param" "maybe type" "temp"
      (615430 'move' call_tmp[615427](62886 call x[62862] 0))
      (491785 'move' call_type_tmp[491781](62887 'typeof' call_tmp[615427]))
    }
    unknown result[62890] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615434] "expr temp" "maybe param" "maybe type" "temp"
    (615437 'move' call_tmp[615434](62880 call size _mt[243] x[62862]))
    unknown call_tmp[615439] "expr temp" "maybe param" "maybe type" "temp"
    (615442 'move' call_tmp[615439](62888 call * call_tmp[615434] call_type_tmp[491781]))
    (540992 'default init var' result[62890] call_tmp[615439])
    (62893 'end of statement')
    {
      unknown d[62919] "dead at end of block" "insert auto destroy"
      (540994 'init var' d[62919] 0)
      (475185 'end of statement')
      unknown tmp[62920] "maybe param" "temp"
      unknown call_tmp[615446] "expr temp" "maybe param" "maybe type" "temp"
      (615449 'move' call_tmp[615446](62897 call size _mt[243] x[62862]))
      unknown call_tmp[615451] "expr temp" "maybe param" "maybe type" "temp"
      (615454 'move' call_tmp[615451](62901 call - call_tmp[615446] 1))
      (62932 'move' tmp[62920](62930 call chpl_compute_low_param_loop_bound 0 call_tmp[615451]))
      unknown tmp[62921] "maybe param" "temp"
      unknown call_tmp[615458] "expr temp" "maybe param" "maybe type" "temp"
      (615461 'move' call_tmp[615458](62939 call size _mt[243] x[62862]))
      unknown call_tmp[615463] "expr temp" "maybe param" "maybe type" "temp"
      (615466 'move' call_tmp[615463](62937 call - call_tmp[615458] 1))
      (62945 'move' tmp[62921](62943 call chpl_compute_high_param_loop_bound 0 call_tmp[615463]))
      unknown tmp[62922] "maybe param" "temp"
      (62948 'move' tmp[62922] 1)
      ParamForLoop[62950]
      { d[62919] tmp[62920] tmp[62921] tmp[62922]
        unknown call_tmp[615468] "expr temp" "maybe param" "maybe type" "temp"
        (615471 'move' call_tmp[615468](62908 call result[62890] d[62919]))
        unknown call_tmp[615473] "expr temp" "maybe param" "maybe type" "temp"
        (615476 'move' call_tmp[615473](62912 call x[62862] d[62919]))
        unknown call_tmp[615478] "expr temp" "maybe param" "maybe type" "temp"
        (615481 'move' call_tmp[615478](62914 call ** call_tmp[615473] y[62872]))
        (62916 call = call_tmp[615468] call_tmp[615478])
        (475186 'end of statement' result[62890] d[62919] d[62919])
      }
      label _unused_continueLabel[62924]
      label _breakLabel[62923]
    }
    (508895 'move' ret[508890](508894 'deref' result[62890]))
    gotoReturn _end_**[508888] _end_**[508888]
    (475190 'end of statement' result[62890])
    label _end_**[508888]
    (508892 return ret[508890])
  }
  where {
    (62878 call isHomogeneousTuple x[62862])
  }
  function **[62972](arg x[62969]:_any[178](?), arg y[62975]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508901] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491787] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615483] "expr temp" "maybe param" "maybe type" "temp"
      (615486 'move' call_tmp[615483](63000 call y[62975] 0))
      (491791 'move' call_type_tmp[491787](63001 'typeof' call_tmp[615483]))
    }
    unknown result[63004] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615490] "expr temp" "maybe param" "maybe type" "temp"
    (615493 'move' call_tmp[615490](62994 call size _mt[243] y[62975]))
    unknown call_tmp[615495] "expr temp" "maybe param" "maybe type" "temp"
    (615498 'move' call_tmp[615495](63002 call * call_tmp[615490] call_type_tmp[491787]))
    (540996 'default init var' result[63004] call_tmp[615495])
    (63007 'end of statement')
    {
      unknown d[63033] "dead at end of block" "insert auto destroy"
      (540998 'init var' d[63033] 0)
      (475192 'end of statement')
      unknown tmp[63034] "maybe param" "temp"
      unknown call_tmp[615502] "expr temp" "maybe param" "maybe type" "temp"
      (615505 'move' call_tmp[615502](63011 call size _mt[243] y[62975]))
      unknown call_tmp[615507] "expr temp" "maybe param" "maybe type" "temp"
      (615510 'move' call_tmp[615507](63015 call - call_tmp[615502] 1))
      (63046 'move' tmp[63034](63044 call chpl_compute_low_param_loop_bound 0 call_tmp[615507]))
      unknown tmp[63035] "maybe param" "temp"
      unknown call_tmp[615514] "expr temp" "maybe param" "maybe type" "temp"
      (615517 'move' call_tmp[615514](63053 call size _mt[243] y[62975]))
      unknown call_tmp[615519] "expr temp" "maybe param" "maybe type" "temp"
      (615522 'move' call_tmp[615519](63051 call - call_tmp[615514] 1))
      (63059 'move' tmp[63035](63057 call chpl_compute_high_param_loop_bound 0 call_tmp[615519]))
      unknown tmp[63036] "maybe param" "temp"
      (63062 'move' tmp[63036] 1)
      ParamForLoop[63064]
      { d[63033] tmp[63034] tmp[63035] tmp[63036]
        unknown call_tmp[615524] "expr temp" "maybe param" "maybe type" "temp"
        (615527 'move' call_tmp[615524](63022 call result[63004] d[63033]))
        unknown call_tmp[615529] "expr temp" "maybe param" "maybe type" "temp"
        (615532 'move' call_tmp[615529](63027 call y[62975] d[63033]))
        unknown call_tmp[615534] "expr temp" "maybe param" "maybe type" "temp"
        (615537 'move' call_tmp[615534](63028 call ** x[62969] call_tmp[615529]))
        (63030 call = call_tmp[615524] call_tmp[615534])
        (475193 'end of statement' result[63004] d[63033] d[63033])
      }
      label _unused_continueLabel[63038]
      label _breakLabel[63037]
    }
    (508906 'move' ret[508901](508905 'deref' result[63004]))
    gotoReturn _end_**[508899] _end_**[508899]
    (475197 'end of statement' result[63004])
    label _end_**[508899]
    (508903 return ret[508901])
  }
  where {
    unknown tmp[419110] "maybe param" "temp"
    (419121 'move' tmp[419110](62981 call isHomogeneousTuple y[62975]))
    unknown call_tmp[615539] "expr temp" "maybe param" "maybe type" "temp"
    (615542 'move' call_tmp[615539](419123 call _cond_invalid tmp[419110]))
    if call_tmp[615539]
    {
      (419126 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555260] "maybe param" "temp"
    unknown call_tmp[615544] "expr temp" "maybe param" "maybe type" "temp"
    (615547 'move' call_tmp[615544](419111 call isTrue tmp[419110]))
    (555265 'move' tmp[555260](555263 call _cond_test call_tmp[615544]))
    if tmp[555260]
    {
      { scopeless type
        unknown call_type_tmp[491793] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615549] "expr temp" "maybe param" "maybe type" "temp"
        (615552 'move' call_tmp[615549](62988 call y[62975] 0))
        (491797 'move' call_type_tmp[491793](62989 'typeof' call_tmp[615549]))
      }
      unknown tmp[555267] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615554] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615557 'move' call_tmp[615554](454829 'typeof' x[62969]))
      unknown call_tmp[615559] "expr temp" "maybe param" "maybe type" "temp"
      (615562 'move' call_tmp[615559](354259 'is_subtype' call_type_tmp[491793] call_tmp[615554]))
      (555269 'move' tmp[555267](419114 call isTrue call_tmp[615559]))
      (555274 'move' tmp[555259](555271 '_paramFoldLogical' tmp[555260] tmp[555267]))
    }
    {
      (555279 'move' tmp[555259](555276 '_paramFoldLogical' tmp[555260] 0))
    }
    (748273 call chpl_statementLevelSymbol tmp[555259])
  }
  function &[63085](arg x[63082]:_tuple[56202](?), arg y[63092] :
  unknown call_tmp[615564] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508912] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491799] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615569] "expr temp" "maybe param" "maybe type" "temp"
      (615572 'move' call_tmp[615569](63106 call x[63082] 0))
      (491803 'move' call_type_tmp[491799](63107 'typeof' call_tmp[615569]))
    }
    unknown result[63110] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615576] "expr temp" "maybe param" "maybe type" "temp"
    (615579 'move' call_tmp[615576](63100 call size _mt[243] x[63082]))
    unknown call_tmp[615581] "expr temp" "maybe param" "maybe type" "temp"
    (615584 'move' call_tmp[615581](63108 call * call_tmp[615576] call_type_tmp[491799]))
    (541000 'default init var' result[63110] call_tmp[615581])
    (63113 'end of statement')
    {
      unknown d[63139] "dead at end of block" "insert auto destroy"
      (541002 'init var' d[63139] 0)
      (475199 'end of statement')
      unknown tmp[63140] "maybe param" "temp"
      unknown call_tmp[615588] "expr temp" "maybe param" "maybe type" "temp"
      (615591 'move' call_tmp[615588](63117 call size _mt[243] x[63082]))
      unknown call_tmp[615593] "expr temp" "maybe param" "maybe type" "temp"
      (615596 'move' call_tmp[615593](63121 call - call_tmp[615588] 1))
      (63152 'move' tmp[63140](63150 call chpl_compute_low_param_loop_bound 0 call_tmp[615593]))
      unknown tmp[63141] "maybe param" "temp"
      unknown call_tmp[615600] "expr temp" "maybe param" "maybe type" "temp"
      (615603 'move' call_tmp[615600](63159 call size _mt[243] x[63082]))
      unknown call_tmp[615605] "expr temp" "maybe param" "maybe type" "temp"
      (615608 'move' call_tmp[615605](63157 call - call_tmp[615600] 1))
      (63165 'move' tmp[63141](63163 call chpl_compute_high_param_loop_bound 0 call_tmp[615605]))
      unknown tmp[63142] "maybe param" "temp"
      (63168 'move' tmp[63142] 1)
      ParamForLoop[63170]
      { d[63139] tmp[63140] tmp[63141] tmp[63142]
        unknown call_tmp[615610] "expr temp" "maybe param" "maybe type" "temp"
        (615613 'move' call_tmp[615610](63128 call result[63110] d[63139]))
        unknown call_tmp[615615] "expr temp" "maybe param" "maybe type" "temp"
        (615618 'move' call_tmp[615615](63132 call x[63082] d[63139]))
        unknown call_tmp[615620] "expr temp" "maybe param" "maybe type" "temp"
        (615623 'move' call_tmp[615620](63134 call & call_tmp[615615] y[63092]))
        (63136 call = call_tmp[615610] call_tmp[615620])
        (475200 'end of statement' result[63110] d[63139] d[63139])
      }
      label _unused_continueLabel[63144]
      label _breakLabel[63143]
    }
    (508917 'move' ret[508912](508916 'deref' result[63110]))
    gotoReturn _end_&[508910] _end_&[508910]
    (475204 'end of statement' result[63110])
    label _end_&[508910]
    (508914 return ret[508912])
  }
  where {
    (63098 call isHomogeneousTuple x[63082])
  }
  function &[63192](arg x[63189]:_any[178](?), arg y[63195]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508923] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491805] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615625] "expr temp" "maybe param" "maybe type" "temp"
      (615628 'move' call_tmp[615625](63220 call y[63195] 0))
      (491809 'move' call_type_tmp[491805](63221 'typeof' call_tmp[615625]))
    }
    unknown result[63224] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615632] "expr temp" "maybe param" "maybe type" "temp"
    (615635 'move' call_tmp[615632](63214 call size _mt[243] y[63195]))
    unknown call_tmp[615637] "expr temp" "maybe param" "maybe type" "temp"
    (615640 'move' call_tmp[615637](63222 call * call_tmp[615632] call_type_tmp[491805]))
    (541004 'default init var' result[63224] call_tmp[615637])
    (63227 'end of statement')
    {
      unknown d[63253] "dead at end of block" "insert auto destroy"
      (541006 'init var' d[63253] 0)
      (475206 'end of statement')
      unknown tmp[63254] "maybe param" "temp"
      unknown call_tmp[615644] "expr temp" "maybe param" "maybe type" "temp"
      (615647 'move' call_tmp[615644](63231 call size _mt[243] y[63195]))
      unknown call_tmp[615649] "expr temp" "maybe param" "maybe type" "temp"
      (615652 'move' call_tmp[615649](63235 call - call_tmp[615644] 1))
      (63266 'move' tmp[63254](63264 call chpl_compute_low_param_loop_bound 0 call_tmp[615649]))
      unknown tmp[63255] "maybe param" "temp"
      unknown call_tmp[615656] "expr temp" "maybe param" "maybe type" "temp"
      (615659 'move' call_tmp[615656](63273 call size _mt[243] y[63195]))
      unknown call_tmp[615661] "expr temp" "maybe param" "maybe type" "temp"
      (615664 'move' call_tmp[615661](63271 call - call_tmp[615656] 1))
      (63279 'move' tmp[63255](63277 call chpl_compute_high_param_loop_bound 0 call_tmp[615661]))
      unknown tmp[63256] "maybe param" "temp"
      (63282 'move' tmp[63256] 1)
      ParamForLoop[63284]
      { d[63253] tmp[63254] tmp[63255] tmp[63256]
        unknown call_tmp[615666] "expr temp" "maybe param" "maybe type" "temp"
        (615669 'move' call_tmp[615666](63242 call result[63224] d[63253]))
        unknown call_tmp[615671] "expr temp" "maybe param" "maybe type" "temp"
        (615674 'move' call_tmp[615671](63247 call y[63195] d[63253]))
        unknown call_tmp[615676] "expr temp" "maybe param" "maybe type" "temp"
        (615679 'move' call_tmp[615676](63248 call & x[63189] call_tmp[615671]))
        (63250 call = call_tmp[615666] call_tmp[615676])
        (475207 'end of statement' result[63224] d[63253] d[63253])
      }
      label _unused_continueLabel[63258]
      label _breakLabel[63257]
    }
    (508928 'move' ret[508923](508927 'deref' result[63224]))
    gotoReturn _end_&[508921] _end_&[508921]
    (475211 'end of statement' result[63224])
    label _end_&[508921]
    (508925 return ret[508923])
  }
  where {
    unknown tmp[419131] "maybe param" "temp"
    (419142 'move' tmp[419131](63201 call isHomogeneousTuple y[63195]))
    unknown call_tmp[615681] "expr temp" "maybe param" "maybe type" "temp"
    (615684 'move' call_tmp[615681](419144 call _cond_invalid tmp[419131]))
    if call_tmp[615681]
    {
      (419147 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555286] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555287] "maybe param" "temp"
    unknown call_tmp[615686] "expr temp" "maybe param" "maybe type" "temp"
    (615689 'move' call_tmp[615686](419132 call isTrue tmp[419131]))
    (555292 'move' tmp[555287](555290 call _cond_test call_tmp[615686]))
    if tmp[555287]
    {
      { scopeless type
        unknown call_type_tmp[491811] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615691] "expr temp" "maybe param" "maybe type" "temp"
        (615694 'move' call_tmp[615691](63208 call y[63195] 0))
        (491815 'move' call_type_tmp[491811](63209 'typeof' call_tmp[615691]))
      }
      unknown tmp[555294] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615696] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615699 'move' call_tmp[615696](454831 'typeof' x[63189]))
      unknown call_tmp[615701] "expr temp" "maybe param" "maybe type" "temp"
      (615704 'move' call_tmp[615701](354260 'is_subtype' call_type_tmp[491811] call_tmp[615696]))
      (555296 'move' tmp[555294](419135 call isTrue call_tmp[615701]))
      (555301 'move' tmp[555286](555298 '_paramFoldLogical' tmp[555287] tmp[555294]))
    }
    {
      (555306 'move' tmp[555286](555303 '_paramFoldLogical' tmp[555287] 0))
    }
    (748275 call chpl_statementLevelSymbol tmp[555286])
  }
  function |[63305](arg x[63302]:_tuple[56202](?), arg y[63312] :
  unknown call_tmp[615706] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508934] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491817] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615711] "expr temp" "maybe param" "maybe type" "temp"
      (615714 'move' call_tmp[615711](63326 call x[63302] 0))
      (491821 'move' call_type_tmp[491817](63327 'typeof' call_tmp[615711]))
    }
    unknown result[63330] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615718] "expr temp" "maybe param" "maybe type" "temp"
    (615721 'move' call_tmp[615718](63320 call size _mt[243] x[63302]))
    unknown call_tmp[615723] "expr temp" "maybe param" "maybe type" "temp"
    (615726 'move' call_tmp[615723](63328 call * call_tmp[615718] call_type_tmp[491817]))
    (541008 'default init var' result[63330] call_tmp[615723])
    (63333 'end of statement')
    {
      unknown d[63359] "dead at end of block" "insert auto destroy"
      (541010 'init var' d[63359] 0)
      (475213 'end of statement')
      unknown tmp[63360] "maybe param" "temp"
      unknown call_tmp[615730] "expr temp" "maybe param" "maybe type" "temp"
      (615733 'move' call_tmp[615730](63337 call size _mt[243] x[63302]))
      unknown call_tmp[615735] "expr temp" "maybe param" "maybe type" "temp"
      (615738 'move' call_tmp[615735](63341 call - call_tmp[615730] 1))
      (63372 'move' tmp[63360](63370 call chpl_compute_low_param_loop_bound 0 call_tmp[615735]))
      unknown tmp[63361] "maybe param" "temp"
      unknown call_tmp[615742] "expr temp" "maybe param" "maybe type" "temp"
      (615745 'move' call_tmp[615742](63379 call size _mt[243] x[63302]))
      unknown call_tmp[615747] "expr temp" "maybe param" "maybe type" "temp"
      (615750 'move' call_tmp[615747](63377 call - call_tmp[615742] 1))
      (63385 'move' tmp[63361](63383 call chpl_compute_high_param_loop_bound 0 call_tmp[615747]))
      unknown tmp[63362] "maybe param" "temp"
      (63388 'move' tmp[63362] 1)
      ParamForLoop[63390]
      { d[63359] tmp[63360] tmp[63361] tmp[63362]
        unknown call_tmp[615752] "expr temp" "maybe param" "maybe type" "temp"
        (615755 'move' call_tmp[615752](63348 call result[63330] d[63359]))
        unknown call_tmp[615757] "expr temp" "maybe param" "maybe type" "temp"
        (615760 'move' call_tmp[615757](63352 call x[63302] d[63359]))
        unknown call_tmp[615762] "expr temp" "maybe param" "maybe type" "temp"
        (615765 'move' call_tmp[615762](63354 call | call_tmp[615757] y[63312]))
        (63356 call = call_tmp[615752] call_tmp[615762])
        (475214 'end of statement' result[63330] d[63359] d[63359])
      }
      label _unused_continueLabel[63364]
      label _breakLabel[63363]
    }
    (508939 'move' ret[508934](508938 'deref' result[63330]))
    gotoReturn _end_|[508932] _end_|[508932]
    (475218 'end of statement' result[63330])
    label _end_|[508932]
    (508936 return ret[508934])
  }
  where {
    (63318 call isHomogeneousTuple x[63302])
  }
  function |[63412](arg x[63409]:_any[178](?), arg y[63415]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508945] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491823] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615767] "expr temp" "maybe param" "maybe type" "temp"
      (615770 'move' call_tmp[615767](63440 call y[63415] 0))
      (491827 'move' call_type_tmp[491823](63441 'typeof' call_tmp[615767]))
    }
    unknown result[63444] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615774] "expr temp" "maybe param" "maybe type" "temp"
    (615777 'move' call_tmp[615774](63434 call size _mt[243] y[63415]))
    unknown call_tmp[615779] "expr temp" "maybe param" "maybe type" "temp"
    (615782 'move' call_tmp[615779](63442 call * call_tmp[615774] call_type_tmp[491823]))
    (541012 'default init var' result[63444] call_tmp[615779])
    (63447 'end of statement')
    {
      unknown d[63473] "dead at end of block" "insert auto destroy"
      (541014 'init var' d[63473] 0)
      (475220 'end of statement')
      unknown tmp[63474] "maybe param" "temp"
      unknown call_tmp[615786] "expr temp" "maybe param" "maybe type" "temp"
      (615789 'move' call_tmp[615786](63451 call size _mt[243] y[63415]))
      unknown call_tmp[615791] "expr temp" "maybe param" "maybe type" "temp"
      (615794 'move' call_tmp[615791](63455 call - call_tmp[615786] 1))
      (63486 'move' tmp[63474](63484 call chpl_compute_low_param_loop_bound 0 call_tmp[615791]))
      unknown tmp[63475] "maybe param" "temp"
      unknown call_tmp[615798] "expr temp" "maybe param" "maybe type" "temp"
      (615801 'move' call_tmp[615798](63493 call size _mt[243] y[63415]))
      unknown call_tmp[615803] "expr temp" "maybe param" "maybe type" "temp"
      (615806 'move' call_tmp[615803](63491 call - call_tmp[615798] 1))
      (63499 'move' tmp[63475](63497 call chpl_compute_high_param_loop_bound 0 call_tmp[615803]))
      unknown tmp[63476] "maybe param" "temp"
      (63502 'move' tmp[63476] 1)
      ParamForLoop[63504]
      { d[63473] tmp[63474] tmp[63475] tmp[63476]
        unknown call_tmp[615808] "expr temp" "maybe param" "maybe type" "temp"
        (615811 'move' call_tmp[615808](63462 call result[63444] d[63473]))
        unknown call_tmp[615813] "expr temp" "maybe param" "maybe type" "temp"
        (615816 'move' call_tmp[615813](63467 call y[63415] d[63473]))
        unknown call_tmp[615818] "expr temp" "maybe param" "maybe type" "temp"
        (615821 'move' call_tmp[615818](63468 call | x[63409] call_tmp[615813]))
        (63470 call = call_tmp[615808] call_tmp[615818])
        (475221 'end of statement' result[63444] d[63473] d[63473])
      }
      label _unused_continueLabel[63478]
      label _breakLabel[63477]
    }
    (508950 'move' ret[508945](508949 'deref' result[63444]))
    gotoReturn _end_|[508943] _end_|[508943]
    (475225 'end of statement' result[63444])
    label _end_|[508943]
    (508947 return ret[508945])
  }
  where {
    unknown tmp[419152] "maybe param" "temp"
    (419163 'move' tmp[419152](63421 call isHomogeneousTuple y[63415]))
    unknown call_tmp[615823] "expr temp" "maybe param" "maybe type" "temp"
    (615826 'move' call_tmp[615823](419165 call _cond_invalid tmp[419152]))
    if call_tmp[615823]
    {
      (419168 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555313] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555314] "maybe param" "temp"
    unknown call_tmp[615828] "expr temp" "maybe param" "maybe type" "temp"
    (615831 'move' call_tmp[615828](419153 call isTrue tmp[419152]))
    (555319 'move' tmp[555314](555317 call _cond_test call_tmp[615828]))
    if tmp[555314]
    {
      { scopeless type
        unknown call_type_tmp[491829] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615833] "expr temp" "maybe param" "maybe type" "temp"
        (615836 'move' call_tmp[615833](63428 call y[63415] 0))
        (491833 'move' call_type_tmp[491829](63429 'typeof' call_tmp[615833]))
      }
      unknown tmp[555321] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615838] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615841 'move' call_tmp[615838](454833 'typeof' x[63409]))
      unknown call_tmp[615843] "expr temp" "maybe param" "maybe type" "temp"
      (615846 'move' call_tmp[615843](354261 'is_subtype' call_type_tmp[491829] call_tmp[615838]))
      (555323 'move' tmp[555321](419156 call isTrue call_tmp[615843]))
      (555328 'move' tmp[555313](555325 '_paramFoldLogical' tmp[555314] tmp[555321]))
    }
    {
      (555333 'move' tmp[555313](555330 '_paramFoldLogical' tmp[555314] 0))
    }
    (748277 call chpl_statementLevelSymbol tmp[555313])
  }
  function ^[63525](arg x[63522]:_tuple[56202](?), arg y[63532] :
  unknown call_tmp[615848] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508956] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491835] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615853] "expr temp" "maybe param" "maybe type" "temp"
      (615856 'move' call_tmp[615853](63546 call x[63522] 0))
      (491839 'move' call_type_tmp[491835](63547 'typeof' call_tmp[615853]))
    }
    unknown result[63550] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615860] "expr temp" "maybe param" "maybe type" "temp"
    (615863 'move' call_tmp[615860](63540 call size _mt[243] x[63522]))
    unknown call_tmp[615865] "expr temp" "maybe param" "maybe type" "temp"
    (615868 'move' call_tmp[615865](63548 call * call_tmp[615860] call_type_tmp[491835]))
    (541016 'default init var' result[63550] call_tmp[615865])
    (63553 'end of statement')
    {
      unknown d[63579] "dead at end of block" "insert auto destroy"
      (541018 'init var' d[63579] 0)
      (475227 'end of statement')
      unknown tmp[63580] "maybe param" "temp"
      unknown call_tmp[615872] "expr temp" "maybe param" "maybe type" "temp"
      (615875 'move' call_tmp[615872](63557 call size _mt[243] x[63522]))
      unknown call_tmp[615877] "expr temp" "maybe param" "maybe type" "temp"
      (615880 'move' call_tmp[615877](63561 call - call_tmp[615872] 1))
      (63592 'move' tmp[63580](63590 call chpl_compute_low_param_loop_bound 0 call_tmp[615877]))
      unknown tmp[63581] "maybe param" "temp"
      unknown call_tmp[615884] "expr temp" "maybe param" "maybe type" "temp"
      (615887 'move' call_tmp[615884](63599 call size _mt[243] x[63522]))
      unknown call_tmp[615889] "expr temp" "maybe param" "maybe type" "temp"
      (615892 'move' call_tmp[615889](63597 call - call_tmp[615884] 1))
      (63605 'move' tmp[63581](63603 call chpl_compute_high_param_loop_bound 0 call_tmp[615889]))
      unknown tmp[63582] "maybe param" "temp"
      (63608 'move' tmp[63582] 1)
      ParamForLoop[63610]
      { d[63579] tmp[63580] tmp[63581] tmp[63582]
        unknown call_tmp[615894] "expr temp" "maybe param" "maybe type" "temp"
        (615897 'move' call_tmp[615894](63568 call result[63550] d[63579]))
        unknown call_tmp[615899] "expr temp" "maybe param" "maybe type" "temp"
        (615902 'move' call_tmp[615899](63572 call x[63522] d[63579]))
        unknown call_tmp[615904] "expr temp" "maybe param" "maybe type" "temp"
        (615907 'move' call_tmp[615904](63574 call ^ call_tmp[615899] y[63532]))
        (63576 call = call_tmp[615894] call_tmp[615904])
        (475228 'end of statement' result[63550] d[63579] d[63579])
      }
      label _unused_continueLabel[63584]
      label _breakLabel[63583]
    }
    (508961 'move' ret[508956](508960 'deref' result[63550]))
    gotoReturn _end_^[508954] _end_^[508954]
    (475232 'end of statement' result[63550])
    label _end_^[508954]
    (508958 return ret[508956])
  }
  where {
    (63538 call isHomogeneousTuple x[63522])
  }
  function ^[63632](arg x[63629]:_any[178](?), arg y[63635]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508967] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491841] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615909] "expr temp" "maybe param" "maybe type" "temp"
      (615912 'move' call_tmp[615909](63660 call y[63635] 0))
      (491845 'move' call_type_tmp[491841](63661 'typeof' call_tmp[615909]))
    }
    unknown result[63664] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615916] "expr temp" "maybe param" "maybe type" "temp"
    (615919 'move' call_tmp[615916](63654 call size _mt[243] y[63635]))
    unknown call_tmp[615921] "expr temp" "maybe param" "maybe type" "temp"
    (615924 'move' call_tmp[615921](63662 call * call_tmp[615916] call_type_tmp[491841]))
    (541020 'default init var' result[63664] call_tmp[615921])
    (63667 'end of statement')
    {
      unknown d[63693] "dead at end of block" "insert auto destroy"
      (541022 'init var' d[63693] 0)
      (475234 'end of statement')
      unknown tmp[63694] "maybe param" "temp"
      unknown call_tmp[615928] "expr temp" "maybe param" "maybe type" "temp"
      (615931 'move' call_tmp[615928](63671 call size _mt[243] y[63635]))
      unknown call_tmp[615933] "expr temp" "maybe param" "maybe type" "temp"
      (615936 'move' call_tmp[615933](63675 call - call_tmp[615928] 1))
      (63706 'move' tmp[63694](63704 call chpl_compute_low_param_loop_bound 0 call_tmp[615933]))
      unknown tmp[63695] "maybe param" "temp"
      unknown call_tmp[615940] "expr temp" "maybe param" "maybe type" "temp"
      (615943 'move' call_tmp[615940](63713 call size _mt[243] y[63635]))
      unknown call_tmp[615945] "expr temp" "maybe param" "maybe type" "temp"
      (615948 'move' call_tmp[615945](63711 call - call_tmp[615940] 1))
      (63719 'move' tmp[63695](63717 call chpl_compute_high_param_loop_bound 0 call_tmp[615945]))
      unknown tmp[63696] "maybe param" "temp"
      (63722 'move' tmp[63696] 1)
      ParamForLoop[63724]
      { d[63693] tmp[63694] tmp[63695] tmp[63696]
        unknown call_tmp[615950] "expr temp" "maybe param" "maybe type" "temp"
        (615953 'move' call_tmp[615950](63682 call result[63664] d[63693]))
        unknown call_tmp[615955] "expr temp" "maybe param" "maybe type" "temp"
        (615958 'move' call_tmp[615955](63687 call y[63635] d[63693]))
        unknown call_tmp[615960] "expr temp" "maybe param" "maybe type" "temp"
        (615963 'move' call_tmp[615960](63688 call ^ x[63629] call_tmp[615955]))
        (63690 call = call_tmp[615950] call_tmp[615960])
        (475235 'end of statement' result[63664] d[63693] d[63693])
      }
      label _unused_continueLabel[63698]
      label _breakLabel[63697]
    }
    (508972 'move' ret[508967](508971 'deref' result[63664]))
    gotoReturn _end_^[508965] _end_^[508965]
    (475239 'end of statement' result[63664])
    label _end_^[508965]
    (508969 return ret[508967])
  }
  where {
    unknown tmp[419173] "maybe param" "temp"
    (419184 'move' tmp[419173](63641 call isHomogeneousTuple y[63635]))
    unknown call_tmp[615965] "expr temp" "maybe param" "maybe type" "temp"
    (615968 'move' call_tmp[615965](419186 call _cond_invalid tmp[419173]))
    if call_tmp[615965]
    {
      (419189 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555340] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555341] "maybe param" "temp"
    unknown call_tmp[615970] "expr temp" "maybe param" "maybe type" "temp"
    (615973 'move' call_tmp[615970](419174 call isTrue tmp[419173]))
    (555346 'move' tmp[555341](555344 call _cond_test call_tmp[615970]))
    if tmp[555341]
    {
      { scopeless type
        unknown call_type_tmp[491847] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615975] "expr temp" "maybe param" "maybe type" "temp"
        (615978 'move' call_tmp[615975](63648 call y[63635] 0))
        (491851 'move' call_type_tmp[491847](63649 'typeof' call_tmp[615975]))
      }
      unknown tmp[555348] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615980] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615983 'move' call_tmp[615980](454835 'typeof' x[63629]))
      unknown call_tmp[615985] "expr temp" "maybe param" "maybe type" "temp"
      (615988 'move' call_tmp[615985](354262 'is_subtype' call_type_tmp[491847] call_tmp[615980]))
      (555350 'move' tmp[555348](419177 call isTrue call_tmp[615985]))
      (555355 'move' tmp[555340](555352 '_paramFoldLogical' tmp[555341] tmp[555348]))
    }
    {
      (555360 'move' tmp[555340](555357 '_paramFoldLogical' tmp[555341] 0))
    }
    (748279 call chpl_statementLevelSymbol tmp[555340])
  }
  function <<[63745](arg x[63742]:_tuple[56202](?), arg y[63752] :
  unknown call_tmp[615990] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508978] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491853] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615995] "expr temp" "maybe param" "maybe type" "temp"
      (615998 'move' call_tmp[615995](63766 call x[63742] 0))
      (491857 'move' call_type_tmp[491853](63767 'typeof' call_tmp[615995]))
    }
    unknown result[63770] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616002] "expr temp" "maybe param" "maybe type" "temp"
    (616005 'move' call_tmp[616002](63760 call size _mt[243] x[63742]))
    unknown call_tmp[616007] "expr temp" "maybe param" "maybe type" "temp"
    (616010 'move' call_tmp[616007](63768 call * call_tmp[616002] call_type_tmp[491853]))
    (541024 'default init var' result[63770] call_tmp[616007])
    (63773 'end of statement')
    {
      unknown d[63799] "dead at end of block" "insert auto destroy"
      (541026 'init var' d[63799] 0)
      (475241 'end of statement')
      unknown tmp[63800] "maybe param" "temp"
      unknown call_tmp[616014] "expr temp" "maybe param" "maybe type" "temp"
      (616017 'move' call_tmp[616014](63777 call size _mt[243] x[63742]))
      unknown call_tmp[616019] "expr temp" "maybe param" "maybe type" "temp"
      (616022 'move' call_tmp[616019](63781 call - call_tmp[616014] 1))
      (63812 'move' tmp[63800](63810 call chpl_compute_low_param_loop_bound 0 call_tmp[616019]))
      unknown tmp[63801] "maybe param" "temp"
      unknown call_tmp[616026] "expr temp" "maybe param" "maybe type" "temp"
      (616029 'move' call_tmp[616026](63819 call size _mt[243] x[63742]))
      unknown call_tmp[616031] "expr temp" "maybe param" "maybe type" "temp"
      (616034 'move' call_tmp[616031](63817 call - call_tmp[616026] 1))
      (63825 'move' tmp[63801](63823 call chpl_compute_high_param_loop_bound 0 call_tmp[616031]))
      unknown tmp[63802] "maybe param" "temp"
      (63828 'move' tmp[63802] 1)
      ParamForLoop[63830]
      { d[63799] tmp[63800] tmp[63801] tmp[63802]
        unknown call_tmp[616036] "expr temp" "maybe param" "maybe type" "temp"
        (616039 'move' call_tmp[616036](63788 call result[63770] d[63799]))
        unknown call_tmp[616041] "expr temp" "maybe param" "maybe type" "temp"
        (616044 'move' call_tmp[616041](63792 call x[63742] d[63799]))
        unknown call_tmp[616046] "expr temp" "maybe param" "maybe type" "temp"
        (616049 'move' call_tmp[616046](63794 call << call_tmp[616041] y[63752]))
        (63796 call = call_tmp[616036] call_tmp[616046])
        (475242 'end of statement' result[63770] d[63799] d[63799])
      }
      label _unused_continueLabel[63804]
      label _breakLabel[63803]
    }
    (508983 'move' ret[508978](508982 'deref' result[63770]))
    gotoReturn _end_<<[508976] _end_<<[508976]
    (475246 'end of statement' result[63770])
    label _end_<<[508976]
    (508980 return ret[508978])
  }
  where {
    (63758 call isHomogeneousTuple x[63742])
  }
  function <<[63852](arg x[63849]:_any[178](?), arg y[63855]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508989] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491859] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616051] "expr temp" "maybe param" "maybe type" "temp"
      (616054 'move' call_tmp[616051](63880 call y[63855] 0))
      (491863 'move' call_type_tmp[491859](63881 'typeof' call_tmp[616051]))
    }
    unknown result[63884] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616058] "expr temp" "maybe param" "maybe type" "temp"
    (616061 'move' call_tmp[616058](63874 call size _mt[243] y[63855]))
    unknown call_tmp[616063] "expr temp" "maybe param" "maybe type" "temp"
    (616066 'move' call_tmp[616063](63882 call * call_tmp[616058] call_type_tmp[491859]))
    (541028 'default init var' result[63884] call_tmp[616063])
    (63887 'end of statement')
    {
      unknown d[63913] "dead at end of block" "insert auto destroy"
      (541030 'init var' d[63913] 0)
      (475248 'end of statement')
      unknown tmp[63914] "maybe param" "temp"
      unknown call_tmp[616070] "expr temp" "maybe param" "maybe type" "temp"
      (616073 'move' call_tmp[616070](63891 call size _mt[243] y[63855]))
      unknown call_tmp[616075] "expr temp" "maybe param" "maybe type" "temp"
      (616078 'move' call_tmp[616075](63895 call - call_tmp[616070] 1))
      (63926 'move' tmp[63914](63924 call chpl_compute_low_param_loop_bound 0 call_tmp[616075]))
      unknown tmp[63915] "maybe param" "temp"
      unknown call_tmp[616082] "expr temp" "maybe param" "maybe type" "temp"
      (616085 'move' call_tmp[616082](63933 call size _mt[243] y[63855]))
      unknown call_tmp[616087] "expr temp" "maybe param" "maybe type" "temp"
      (616090 'move' call_tmp[616087](63931 call - call_tmp[616082] 1))
      (63939 'move' tmp[63915](63937 call chpl_compute_high_param_loop_bound 0 call_tmp[616087]))
      unknown tmp[63916] "maybe param" "temp"
      (63942 'move' tmp[63916] 1)
      ParamForLoop[63944]
      { d[63913] tmp[63914] tmp[63915] tmp[63916]
        unknown call_tmp[616092] "expr temp" "maybe param" "maybe type" "temp"
        (616095 'move' call_tmp[616092](63902 call result[63884] d[63913]))
        unknown call_tmp[616097] "expr temp" "maybe param" "maybe type" "temp"
        (616100 'move' call_tmp[616097](63907 call y[63855] d[63913]))
        unknown call_tmp[616102] "expr temp" "maybe param" "maybe type" "temp"
        (616105 'move' call_tmp[616102](63908 call << x[63849] call_tmp[616097]))
        (63910 call = call_tmp[616092] call_tmp[616102])
        (475249 'end of statement' result[63884] d[63913] d[63913])
      }
      label _unused_continueLabel[63918]
      label _breakLabel[63917]
    }
    (508994 'move' ret[508989](508993 'deref' result[63884]))
    gotoReturn _end_<<[508987] _end_<<[508987]
    (475253 'end of statement' result[63884])
    label _end_<<[508987]
    (508991 return ret[508989])
  }
  where {
    unknown tmp[419194] "maybe param" "temp"
    (419205 'move' tmp[419194](63861 call isHomogeneousTuple y[63855]))
    unknown call_tmp[616107] "expr temp" "maybe param" "maybe type" "temp"
    (616110 'move' call_tmp[616107](419207 call _cond_invalid tmp[419194]))
    if call_tmp[616107]
    {
      (419210 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555367] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555368] "maybe param" "temp"
    unknown call_tmp[616112] "expr temp" "maybe param" "maybe type" "temp"
    (616115 'move' call_tmp[616112](419195 call isTrue tmp[419194]))
    (555373 'move' tmp[555368](555371 call _cond_test call_tmp[616112]))
    if tmp[555368]
    {
      { scopeless type
        unknown call_type_tmp[491865] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616117] "expr temp" "maybe param" "maybe type" "temp"
        (616120 'move' call_tmp[616117](63868 call y[63855] 0))
        (491869 'move' call_type_tmp[491865](63869 'typeof' call_tmp[616117]))
      }
      unknown tmp[555375] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616122] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616125 'move' call_tmp[616122](454837 'typeof' x[63849]))
      unknown call_tmp[616127] "expr temp" "maybe param" "maybe type" "temp"
      (616130 'move' call_tmp[616127](354263 'is_subtype' call_type_tmp[491865] call_tmp[616122]))
      (555377 'move' tmp[555375](419198 call isTrue call_tmp[616127]))
      (555382 'move' tmp[555367](555379 '_paramFoldLogical' tmp[555368] tmp[555375]))
    }
    {
      (555387 'move' tmp[555367](555384 '_paramFoldLogical' tmp[555368] 0))
    }
    (748281 call chpl_statementLevelSymbol tmp[555367])
  }
  function >>[63965](arg x[63962]:_tuple[56202](?), arg y[63972] :
  unknown call_tmp[616132] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509000] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491871] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616137] "expr temp" "maybe param" "maybe type" "temp"
      (616140 'move' call_tmp[616137](63986 call x[63962] 0))
      (491875 'move' call_type_tmp[491871](63987 'typeof' call_tmp[616137]))
    }
    unknown result[63990] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616144] "expr temp" "maybe param" "maybe type" "temp"
    (616147 'move' call_tmp[616144](63980 call size _mt[243] x[63962]))
    unknown call_tmp[616149] "expr temp" "maybe param" "maybe type" "temp"
    (616152 'move' call_tmp[616149](63988 call * call_tmp[616144] call_type_tmp[491871]))
    (541032 'default init var' result[63990] call_tmp[616149])
    (63993 'end of statement')
    {
      unknown d[64019] "dead at end of block" "insert auto destroy"
      (541034 'init var' d[64019] 0)
      (475255 'end of statement')
      unknown tmp[64020] "maybe param" "temp"
      unknown call_tmp[616156] "expr temp" "maybe param" "maybe type" "temp"
      (616159 'move' call_tmp[616156](63997 call size _mt[243] x[63962]))
      unknown call_tmp[616161] "expr temp" "maybe param" "maybe type" "temp"
      (616164 'move' call_tmp[616161](64001 call - call_tmp[616156] 1))
      (64032 'move' tmp[64020](64030 call chpl_compute_low_param_loop_bound 0 call_tmp[616161]))
      unknown tmp[64021] "maybe param" "temp"
      unknown call_tmp[616168] "expr temp" "maybe param" "maybe type" "temp"
      (616171 'move' call_tmp[616168](64039 call size _mt[243] x[63962]))
      unknown call_tmp[616173] "expr temp" "maybe param" "maybe type" "temp"
      (616176 'move' call_tmp[616173](64037 call - call_tmp[616168] 1))
      (64045 'move' tmp[64021](64043 call chpl_compute_high_param_loop_bound 0 call_tmp[616173]))
      unknown tmp[64022] "maybe param" "temp"
      (64048 'move' tmp[64022] 1)
      ParamForLoop[64050]
      { d[64019] tmp[64020] tmp[64021] tmp[64022]
        unknown call_tmp[616178] "expr temp" "maybe param" "maybe type" "temp"
        (616181 'move' call_tmp[616178](64008 call result[63990] d[64019]))
        unknown call_tmp[616183] "expr temp" "maybe param" "maybe type" "temp"
        (616186 'move' call_tmp[616183](64012 call x[63962] d[64019]))
        unknown call_tmp[616188] "expr temp" "maybe param" "maybe type" "temp"
        (616191 'move' call_tmp[616188](64014 call >> call_tmp[616183] y[63972]))
        (64016 call = call_tmp[616178] call_tmp[616188])
        (475256 'end of statement' result[63990] d[64019] d[64019])
      }
      label _unused_continueLabel[64024]
      label _breakLabel[64023]
    }
    (509005 'move' ret[509000](509004 'deref' result[63990]))
    gotoReturn _end_>>[508998] _end_>>[508998]
    (475260 'end of statement' result[63990])
    label _end_>>[508998]
    (509002 return ret[509000])
  }
  where {
    (63978 call isHomogeneousTuple x[63962])
  }
  function >>[64072](arg x[64069]:_any[178](?), arg y[64075]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509011] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491877] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616193] "expr temp" "maybe param" "maybe type" "temp"
      (616196 'move' call_tmp[616193](64100 call y[64075] 0))
      (491881 'move' call_type_tmp[491877](64101 'typeof' call_tmp[616193]))
    }
    unknown result[64104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616200] "expr temp" "maybe param" "maybe type" "temp"
    (616203 'move' call_tmp[616200](64094 call size _mt[243] y[64075]))
    unknown call_tmp[616205] "expr temp" "maybe param" "maybe type" "temp"
    (616208 'move' call_tmp[616205](64102 call * call_tmp[616200] call_type_tmp[491877]))
    (541036 'default init var' result[64104] call_tmp[616205])
    (64107 'end of statement')
    {
      unknown d[64133] "dead at end of block" "insert auto destroy"
      (541038 'init var' d[64133] 0)
      (475262 'end of statement')
      unknown tmp[64134] "maybe param" "temp"
      unknown call_tmp[616212] "expr temp" "maybe param" "maybe type" "temp"
      (616215 'move' call_tmp[616212](64111 call size _mt[243] y[64075]))
      unknown call_tmp[616217] "expr temp" "maybe param" "maybe type" "temp"
      (616220 'move' call_tmp[616217](64115 call - call_tmp[616212] 1))
      (64146 'move' tmp[64134](64144 call chpl_compute_low_param_loop_bound 0 call_tmp[616217]))
      unknown tmp[64135] "maybe param" "temp"
      unknown call_tmp[616224] "expr temp" "maybe param" "maybe type" "temp"
      (616227 'move' call_tmp[616224](64153 call size _mt[243] y[64075]))
      unknown call_tmp[616229] "expr temp" "maybe param" "maybe type" "temp"
      (616232 'move' call_tmp[616229](64151 call - call_tmp[616224] 1))
      (64159 'move' tmp[64135](64157 call chpl_compute_high_param_loop_bound 0 call_tmp[616229]))
      unknown tmp[64136] "maybe param" "temp"
      (64162 'move' tmp[64136] 1)
      ParamForLoop[64164]
      { d[64133] tmp[64134] tmp[64135] tmp[64136]
        unknown call_tmp[616234] "expr temp" "maybe param" "maybe type" "temp"
        (616237 'move' call_tmp[616234](64122 call result[64104] d[64133]))
        unknown call_tmp[616239] "expr temp" "maybe param" "maybe type" "temp"
        (616242 'move' call_tmp[616239](64127 call y[64075] d[64133]))
        unknown call_tmp[616244] "expr temp" "maybe param" "maybe type" "temp"
        (616247 'move' call_tmp[616244](64128 call >> x[64069] call_tmp[616239]))
        (64130 call = call_tmp[616234] call_tmp[616244])
        (475263 'end of statement' result[64104] d[64133] d[64133])
      }
      label _unused_continueLabel[64138]
      label _breakLabel[64137]
    }
    (509016 'move' ret[509011](509015 'deref' result[64104]))
    gotoReturn _end_>>[509009] _end_>>[509009]
    (475267 'end of statement' result[64104])
    label _end_>>[509009]
    (509013 return ret[509011])
  }
  where {
    unknown tmp[419215] "maybe param" "temp"
    (419226 'move' tmp[419215](64081 call isHomogeneousTuple y[64075]))
    unknown call_tmp[616249] "expr temp" "maybe param" "maybe type" "temp"
    (616252 'move' call_tmp[616249](419228 call _cond_invalid tmp[419215]))
    if call_tmp[616249]
    {
      (419231 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555395] "maybe param" "temp"
    unknown call_tmp[616254] "expr temp" "maybe param" "maybe type" "temp"
    (616257 'move' call_tmp[616254](419216 call isTrue tmp[419215]))
    (555400 'move' tmp[555395](555398 call _cond_test call_tmp[616254]))
    if tmp[555395]
    {
      { scopeless type
        unknown call_type_tmp[491883] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616259] "expr temp" "maybe param" "maybe type" "temp"
        (616262 'move' call_tmp[616259](64088 call y[64075] 0))
        (491887 'move' call_type_tmp[491883](64089 'typeof' call_tmp[616259]))
      }
      unknown tmp[555402] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616264] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616267 'move' call_tmp[616264](454839 'typeof' x[64069]))
      unknown call_tmp[616269] "expr temp" "maybe param" "maybe type" "temp"
      (616272 'move' call_tmp[616269](354264 'is_subtype' call_type_tmp[491883] call_tmp[616264]))
      (555404 'move' tmp[555402](419219 call isTrue call_tmp[616269]))
      (555409 'move' tmp[555394](555406 '_paramFoldLogical' tmp[555395] tmp[555402]))
    }
    {
      (555414 'move' tmp[555394](555411 '_paramFoldLogical' tmp[555395] 0))
    }
    (748283 call chpl_statementLevelSymbol tmp[555394])
  }
  (355089 'used modules list'(56191 'use' ChapelStandard[20267])(56193 'use' DSIUtil[230909]))
}