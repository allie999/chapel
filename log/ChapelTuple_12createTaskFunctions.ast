AST dump for ChapelTuple after pass createTaskFunctions.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415986]() : void[4] "insert line file info" "module init"
  {
    (540828 'init var' CHPL_WARN_TUPLE_ITERATION[57026] "unset")
    (57029 'end of statement')
    (509015 return _void[55])
  }
  function _tuple[56202](?).size[766536](arg _mt[766538]:_MT[238], arg this[766540]:_tuple[56202](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[766559] "RVV" "param" "temp"
    unknown call_tmp[766573] "expr temp" "maybe param" "maybe type" "temp"
    (766576 'move' call_tmp[766573](766545 'is bound' this[766540] c"size"))
    if call_tmp[766573]
    {
      unknown call_tmp[766578] "expr temp" "maybe param" "maybe type" "temp"
      (766581 'move' call_tmp[766578](766544 '.' this[766540] c"size"))
      (766564 'move' ret[766559](766563 'deref' call_tmp[766578]))
      gotoReturn _end_size[766557] _end_size[766557]
    }
    {
      (766569 'move' ret[766559](766568 'deref' ?[260]))
      gotoReturn _end_size[766557] _end_size[766557]
    }
    label _end_size[766557]
    (766561 return ret[766559])
  }
  function _tuple[56202](?).size[766583](arg _mt[766585]:_MT[238], arg this[766587]:_tuple[56202](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[766606] "RVV" "param" "temp"
    unknown call_tmp[766620] "expr temp" "maybe param" "maybe type" "temp"
    (766623 'move' call_tmp[766620](766592 'is bound' this[766587] c"size"))
    if call_tmp[766620]
    {
      unknown call_tmp[766625] "expr temp" "maybe param" "maybe type" "temp"
      (766628 'move' call_tmp[766625](766591 '.' this[766587] c"size"))
      (766611 'move' ret[766606](766610 'deref' call_tmp[766625]))
      gotoReturn _end_size[766604] _end_size[766604]
    }
    {
      (766616 'move' ret[766606](766615 'deref' ?[260]))
      gotoReturn _end_size[766604] _end_size[766604]
    }
    label _end_size[766604]
    (766608 return ret[766606])
  }
  function _tuple[56202](?).deinit[766630](arg _mt[766632]:_MT[238], arg this[766634]:_tuple[56202](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (766642 return _void[55])
  }
  function _defaultOf[766644](arg t[766646]:_tuple[56202](?)) : _unknown[51] "compiler generated" "inline" "last resort"
  {
    (766649 return _void[55])
  }
  function _tuple[56202](?).writeThis[766651](arg _mt[766655]:_MT[238], arg this[766653]:_tuple[56202](?), arg f[766654]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766664 call(766660 call (partial) readWriteThis _mt[243] this[766653]) f[766654])
    (766667 return _void[55])
  }
  function _tuple[56202](?).readThis[766671](arg _mt[766675]:_MT[238], arg this[766673]:_tuple[56202](?), arg f[766674]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766683 call(766679 call (partial) readWriteThis _mt[243] this[766673]) f[766674])
    (766687 return _void[55])
  }
  function chpl__defaultHash[766691](arg r[766693]:_tuple[56202](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766706] "RVV" "temp"
    unknown call_tmp[766713] "expr temp" "maybe param" "maybe type" "temp"
    (766716 'move' call_tmp[766713](766695 call size _mt[243] r[766693]))
    unknown call_tmp[766718] "expr temp" "maybe param" "maybe type" "temp"
    (766721 'move' call_tmp[766718](766699 call chpl__defaultHash call_tmp[766713]))
    (766711 'move' ret[766706](766710 'deref' call_tmp[766718]))
    (766708 return ret[766706])
  }
  type _tuple[56202](?) unknown size[56197] "param" int(64)[13]
  function chpl__init_tuple[56211](param arg size[56208]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (508015 return _void[55])
  }
  function _build_tuple[56222](arg t[56219]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508017 return _void[55])
  }
  function _build_tuple[56233](arg x[56230]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[508021] "RVV" "temp"
    (508026 'move' ret[508021](508025 'deref' x[56230]))
    (508023 return ret[508021])
  }
  function _build_tuple_noref[56247](arg t[56244]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508028 return _void[55])
  }
  function _build_tuple_always_allow_ref[56258](arg x[56255]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[508032] "RVV" "temp"
    (508037 'move' ret[508032](508036 'deref' x[56255]))
    (508034 return ret[508032])
  }
  function chpl__unref[56270](arg t[56268]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[508041] "RVV" "temp" "type variable"
    unknown call_tmp[611262] "expr temp" "maybe param" "maybe type" "temp"
    (611265 'move' call_tmp[611262](56275 call isTupleType t[56268]))
    unknown call_tmp[611267] "expr temp" "maybe param" "maybe type" "temp"
    (611270 'move' call_tmp[611267](56286 call _cond_test call_tmp[611262]))
    if call_tmp[611267]
    {
      unknown call_tmp[611272] "expr temp" "maybe param" "maybe type" "temp"
      (611275 'move' call_tmp[611272](56280 call _build_tuple_noref(56278 'expand_tuple' t[56268])))
      (508046 'move' ret[508041](508045 'deref' call_tmp[611272]))
      gotoReturn _end_chpl__unref[508039] _end_chpl__unref[508039]
    }
    {
      (508051 'move' ret[508041](508050 'deref' t[56268]))
      gotoReturn _end_chpl__unref[508039] _end_chpl__unref[508039]
    }
    label _end_chpl__unref[508039]
    (508043 return ret[508041])
  }
  function *[56301](param arg p[56298]:int(64)[13], arg t[56303]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508055 return _void[55])
  }
  function *[56314](param arg p[56311]:uint(64)[115], arg t[56316]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[508059] "RVV" "temp" "type variable"
    unknown call_tmp[611277] "expr temp" "maybe param" "maybe type" "temp"
    (611280 'move' call_tmp[611277](56322 call max int(64)[13]))
    unknown call_tmp[611282] "expr temp" "maybe param" "maybe type" "temp"
    (611285 'move' call_tmp[611282](56323 call > p[56311] call_tmp[611277]))
    unknown call_tmp[611287] "expr temp" "maybe param" "maybe type" "temp"
    (611290 'move' call_tmp[611287](56374 call _cond_test call_tmp[611282]))
    if call_tmp[611287]
    {
      unknown call_tmp[611292] "expr temp" "maybe param" "maybe type" "temp"
      (611295 'move' call_tmp[611292](56346 call max int(64)[13]))
      unknown call_tmp[611297] "expr temp" "maybe param" "maybe type" "temp"
      (611300 'move' call_tmp[611297](56348 call _cast string[26] call_tmp[611292]))
      unknown call_tmp[611302] "expr temp" "maybe param" "maybe type" "temp"
      (611305 'move' call_tmp[611302](56350 call + "Tuples of size >" call_tmp[611297]))
      unknown call_tmp[611307] "expr temp" "maybe param" "maybe type" "temp"
      (611310 'move' call_tmp[611307](56369 call + call_tmp[611302] " are not currently supported"))
      (56372 call compilerError call_tmp[611307])
    }
    unknown call_tmp[611312] "maybe param" "maybe type" "temp"
    (611315 'move' call_tmp[611312](56382 call _cast int(64)[13] p[56311]))
    unknown pAsInt[56384] "dead at end of block" "param"
    (540824 'init var' pAsInt[56384] call_tmp[611312])
    (56387 'end of statement')
    unknown call_tmp[611317] "expr temp" "maybe param" "maybe type" "temp"
    (611320 'move' call_tmp[611317](56390 call * pAsInt[56384] t[56316]))
    (508064 'move' ret[508059](508063 'deref' call_tmp[611317]))
    (508061 return ret[508059])
  }
  function *[56402](param arg p[56399]:bool[10], arg t[56404]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56425 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508066 return _void[55])
  }
  function *[56436](arg p[56433]:bool[10], arg t[56438]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56443 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508068 return _void[55])
  }
  function _build_star_tuple_noref[56454](param arg p[56451]:int(64)[13], arg t[56456]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508070 return _void[55])
  }
  function *[56465](arg t[56463]:_any[178](?), param arg p[56468]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56492 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (508072 return _void[55])
  }
  function *[56503](arg p[56500]:integral[199](?), arg t[56505]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56526 call compilerError "tuple size must be known at compile-time")
    (508074 return _void[55])
  }
  function chpl__tuplify[56535](arg x[56533]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[508078] "RVV" "temp"
    unknown call_tmp[611322] "expr temp" "maybe param" "maybe type" "temp"
    (611325 'move' call_tmp[611322](56540 call isTuple x[56533]))
    unknown call_tmp[611327] "expr temp" "maybe param" "maybe type" "temp"
    (611330 'move' call_tmp[611327](56549 call _cond_test call_tmp[611322]))
    if call_tmp[611327]
    {
      (508083 'move' ret[508078](508082 'deref' x[56533]))
      gotoReturn _end_chpl__tuplify[508076] _end_chpl__tuplify[508076]
    }
    {
      unknown call_tmp[611332] "expr temp" "maybe param" "maybe type" "temp"
      (611335 'move' call_tmp[611332](56545 call _build_tuple x[56533]))
      (508088 'move' ret[508078](508087 'deref' call_tmp[611332]))
      gotoReturn _end_chpl__tuplify[508076] _end_chpl__tuplify[508076]
    }
    label _end_chpl__tuplify[508076]
    (508080 return ret[508078])
  }
  function isTupleValue[56564](arg x[56561]:_tuple[56202](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508094] "RVV" "param" "temp"
    (508099 'move' ret[508094](508098 'deref' 1))
    (508096 return ret[508094])
  }
  function isTupleValue[56576](arg x[56574]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508103] "RVV" "param" "temp"
    (508108 'move' ret[508103](508107 'deref' 0))
    (508105 return ret[508103])
  }
  function isHomogeneousTupleValue[56588](arg x[56586]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508112] "RVV" "param" "temp"
    unknown call_tmp[611337] "expr temp" "maybe param" "maybe type" "temp"
    (611340 'move' call_tmp[611337](56609 'is star tuple type' x[56586]))
    (508117 'move' ret[508112](508116 'deref' call_tmp[611337]))
    (508114 return ret[508112])
  }
  function _check_tuple_var_decl[56621](arg x[56618]:_tuple[56202](?), param arg p[56623]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508121] "RVV" "param" "temp"
    unknown call_tmp[611344] "expr temp" "maybe param" "maybe type" "temp"
    (611347 'move' call_tmp[611344](56627 call size _mt[243] x[56618]))
    unknown call_tmp[611349] "expr temp" "maybe param" "maybe type" "temp"
    (611352 'move' call_tmp[611349](56630 call == p[56623] call_tmp[611344]))
    unknown call_tmp[611354] "expr temp" "maybe param" "maybe type" "temp"
    (611357 'move' call_tmp[611354](56714 call _cond_test call_tmp[611349]))
    if call_tmp[611354]
    {
      (508126 'move' ret[508121](508125 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[508119] _end__check_tuple_var_decl[508119]
    }
    {
      unknown call_tmp[611361] "expr temp" "maybe param" "maybe type" "temp"
      (611364 'move' call_tmp[611361](56655 call size _mt[243] x[56618]))
      unknown call_tmp[611366] "expr temp" "maybe param" "maybe type" "temp"
      (611369 'move' call_tmp[611366](56659 call _cast string[26] call_tmp[611361]))
      unknown call_tmp[611371] "expr temp" "maybe param" "maybe type" "temp"
      (611374 'move' call_tmp[611371](56661 call + "tuple size (" call_tmp[611366]))
      unknown call_tmp[611376] "expr temp" "maybe param" "maybe type" "temp"
      (611379 'move' call_tmp[611376](56680 call + call_tmp[611371] ") must match the number of grouped variables ("))
      unknown call_tmp[611381] "expr temp" "maybe param" "maybe type" "temp"
      (611384 'move' call_tmp[611381](56684 call _cast string[26] p[56623]))
      unknown call_tmp[611386] "expr temp" "maybe param" "maybe type" "temp"
      (611389 'move' call_tmp[611386](56686 call + call_tmp[611376] call_tmp[611381]))
      unknown call_tmp[611391] "expr temp" "maybe param" "maybe type" "temp"
      (611394 'move' call_tmp[611391](56705 call + call_tmp[611386] ")"))
      (56708 call compilerError call_tmp[611391])
      (474848 'end of statement')
      (508131 'move' ret[508121](508130 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[508119] _end__check_tuple_var_decl[508119]
    }
    label _end__check_tuple_var_decl[508119]
    (508123 return ret[508121])
  }
  function _check_tuple_var_decl[56725](arg x[56723]:_any[178](?), param arg p[56727]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508137] "RVV" "param" "temp"
    (56748 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474850 'end of statement')
    (508142 'move' ret[508137](508141 'deref' 0))
    (508139 return ret[508137])
  }
  function isTupleType[56760](arg t[56758]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508146] "RVV" "param" "temp"
    unknown call_tmp[611396] "expr temp" "maybe param" "maybe type" "temp"
    (611399 'move' call_tmp[611396](56781 'is tuple type' t[56758]))
    (508151 'move' ret[508146](508150 'deref' call_tmp[611396]))
    (508148 return ret[508146])
  }
  function isHomogeneousTupleType[56791](arg t[56789]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508155] "RVV" "param" "temp"
    unknown call_tmp[611401] "expr temp" "maybe param" "maybe type" "temp"
    (611404 'move' call_tmp[611401](56796 'is star tuple type' t[56789]))
    (508160 'move' ret[508155](508159 'deref' call_tmp[611401]))
    (508157 return ret[508155])
  }
  function =[56808](ref arg x[56805]:_tuple[56202](?), arg y[56811]:_tuple[56202](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56845] "dead at end of block" "insert auto destroy"
      (540826 'init var' i[56845] 0)
      unknown tmp[56846] "maybe param" "temp"
      unknown call_tmp[611408] "expr temp" "maybe param" "maybe type" "temp"
      (611411 'move' call_tmp[611408](56826 call size _mt[243] x[56805]))
      unknown call_tmp[611413] "expr temp" "maybe param" "maybe type" "temp"
      (611416 'move' call_tmp[611413](56830 call - call_tmp[611408] 1))
      (56858 'move' tmp[56846](56856 call chpl_compute_low_param_loop_bound 0 call_tmp[611413]))
      unknown tmp[56847] "maybe param" "temp"
      unknown call_tmp[611420] "expr temp" "maybe param" "maybe type" "temp"
      (611423 'move' call_tmp[611420](56865 call size _mt[243] x[56805]))
      unknown call_tmp[611425] "expr temp" "maybe param" "maybe type" "temp"
      (611428 'move' call_tmp[611425](56863 call - call_tmp[611420] 1))
      (56871 'move' tmp[56847](56869 call chpl_compute_high_param_loop_bound 0 call_tmp[611425]))
      unknown tmp[56848] "maybe param" "temp"
      (56874 'move' tmp[56848] 1)
      ParamForLoop[56876]
      { i[56845] tmp[56846] tmp[56847] tmp[56848]
        unknown call_tmp[611430] "expr temp" "maybe param" "maybe type" "temp"
        (611433 'move' call_tmp[611430](56837 call x[56805] i[56845]))
        unknown call_tmp[611435] "expr temp" "maybe param" "maybe type" "temp"
        (611438 'move' call_tmp[611435](56841 call y[56811] i[56845]))
        (56842 call = call_tmp[611430] call_tmp[611435])
      }
      label _unused_continueLabel[56850]
      label _breakLabel[56849]
    }
    (508162 return _void[55])
  }
  where {
    unknown call_tmp[611442] "expr temp" "maybe param" "maybe type" "temp"
    (611445 'move' call_tmp[611442](56815 call size _mt[243] x[56805]))
    unknown call_tmp[611449] "expr temp" "maybe param" "maybe type" "temp"
    (611452 'move' call_tmp[611449](56819 call size _mt[243] y[56811]))
    (56822 call == call_tmp[611442] call_tmp[611449])
  }
  function _tuple[56202](?).this[56896](arg _mt[56901]:_MT[238], arg this[56898]:_tuple[56202](?) :
  _tuple[56202](?), arg i[56893]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508166] "RVV" "temp"
    unknown call_tmp[611454] "expr temp" "maybe param" "maybe type" "temp"
    (611457 'move' call_tmp[611454](56906 call isHomogeneousTuple this[56898]))
    unknown call_tmp[611459] "expr temp" "maybe param" "maybe type" "temp"
    (611462 'move' call_tmp[611459](56907 call ! call_tmp[611454]))
    unknown call_tmp[611464] "expr temp" "maybe param" "maybe type" "temp"
    (611467 'move' call_tmp[611464](56932 call _cond_test call_tmp[611459]))
    if call_tmp[611464]
    {
      (56930 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611469] "expr temp" "maybe param" "maybe type" "temp"
    (611472 'move' call_tmp[611469](56979 call _cond_test 1))
    if call_tmp[611469]
    {
      unknown tmp[418916] "maybe param" "temp"
      (418927 'move' tmp[418916](56941 call < i[56893] 0))
      unknown call_tmp[611474] "expr temp" "maybe param" "maybe type" "temp"
      (611477 'move' call_tmp[611474](418929 call _cond_invalid tmp[418916]))
      if call_tmp[611474]
      {
        (418932 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[554973] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[554974] "maybe param" "temp"
      unknown call_tmp[611479] "expr temp" "maybe param" "maybe type" "temp"
      (611482 'move' call_tmp[611479](418917 call isTrue tmp[418916]))
      (554979 'move' tmp[554974](554977 call _cond_test call_tmp[611479]))
      if tmp[554974]
      {
        (554984 'move' tmp[554973](554981 '_paramFoldLogical' tmp[554974] 1))
      }
      {
        unknown tmp[554986] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611486] "expr temp" "maybe param" "maybe type" "temp"
        (611489 'move' call_tmp[611486](373105 call size _mt[243] this[56898]))
        unknown call_tmp[611491] "expr temp" "maybe param" "maybe type" "temp"
        (611494 'move' call_tmp[611491](56946 call - call_tmp[611486] 1))
        unknown call_tmp[611496] "expr temp" "maybe param" "maybe type" "temp"
        (611499 'move' call_tmp[611496](56948 call > i[56893] call_tmp[611491]))
        (554988 'move' tmp[554986](418921 call isTrue call_tmp[611496]))
        (554993 'move' tmp[554973](554990 '_paramFoldLogical' tmp[554974] tmp[554986]))
      }
      unknown call_tmp[611501] "expr temp" "maybe param" "maybe type" "temp"
      (611504 'move' call_tmp[611501](56974 call _cond_test tmp[554973]))
      if call_tmp[611501]
      {
        (56972 call halt "tuple access out of bounds: " i[56893])
      }
    }
    unknown call_tmp[611506] "expr temp" "maybe param" "maybe type" "temp"
    (611509 'move' call_tmp[611506](57004 'get svec member' this[56898] i[56893]))
    (508171 'move' ret[508166](508170 'addr of' call_tmp[611506]))
    (508168 return ret[508166])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57026] "config" "no doc" "param"
  function _tuple[56202](?).these[57033](arg _mt[57038]:_MT[238], arg this[57035]:_tuple[56202](?) :
  _tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508175] "RVV" "temp"
    unknown call_tmp[611511] "expr temp" "maybe param" "maybe type" "temp"
    (611514 'move' call_tmp[611511](57043 call isHomogeneousTuple this[57035]))
    unknown call_tmp[611516] "expr temp" "maybe param" "maybe type" "temp"
    (611519 'move' call_tmp[611516](57044 call ! call_tmp[611511]))
    unknown call_tmp[611521] "expr temp" "maybe param" "maybe type" "temp"
    (611524 'move' call_tmp[611521](57067 call _cond_test call_tmp[611516]))
    if call_tmp[611521]
    {
      (57065 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611526] "expr temp" "maybe param" "maybe type" "temp"
    (611529 'move' call_tmp[611526](57091 call == CHPL_WARN_TUPLE_ITERATION[57026] "true"))
    unknown call_tmp[611531] "expr temp" "maybe param" "maybe type" "temp"
    (611534 'move' call_tmp[611531](57116 call _cond_test call_tmp[611526]))
    if call_tmp[611531]
    {
      (57114 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57138] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57139] "expr temp" "temp"
      unknown call_tmp[611538] "expr temp" "maybe param" "maybe type" "temp"
      (611541 'move' call_tmp[611538](57154 call size _mt[243] this[57035]))
      unknown call_tmp[611543] "expr temp" "maybe param" "maybe type" "temp"
      (611546 'move' call_tmp[611543](57158 call chpl_direct_counted_range_iter 0 call_tmp[611538]))
      (57148 'move' _iterator[57139](57146 call _getIterator call_tmp[611543]))
      Defer
      {
        {
          (57174 call _freeIterator _iterator[57139])
        }
      }
      { scopeless type
        (57163 'move' _indexOfInterest[57138](57160 call iteratorIndex _iterator[57139]))
      }
      ForLoop[57140]
      {
        unknown i[57167] "index var" "insert auto destroy"
        (474861 'end of statement')
        (57169 'move' i[57167] _indexOfInterest[57138])
        (474862 'end of statement' i[57167])
        {
          unknown yret[508179] "YVV" "temp"
          unknown call_tmp[611548] "expr temp" "maybe param" "maybe type" "temp"
          (611551 'move' call_tmp[611548](57134 call this[57035] i[57167]))
          (508182 'move' yret[508179](508181 'addr of' call_tmp[611548]))
          (508184 yield yret[508179])
          (474864 'end of statement' i[57167])
        }
        label _continueLabel[57143]
        _indexOfInterest[57138]
        _iterator[57139]
      }
      label _breakLabel[57144]
    }
    (508177 return ret[508175])
  }
  function _tuple[56202](?).these[57190](arg _mt[57195]:_MT[238], arg this[57192]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57187]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508188] "RVV" "temp"
    const numTasks[57216] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[555000] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555001] "maybe param" "temp"
    unknown call_tmp[611553] "expr temp" "maybe param" "maybe type" "temp"
    (611556 'move' call_tmp[611553](57206 call == dataParTasksPerLocale[93284] 0))
    (555006 'move' tmp[555001](555004 call _cond_test call_tmp[611553]))
    if tmp[555001]
    {
      unknown tmp[555008] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611558] "expr temp" "maybe param" "maybe type" "temp"
      (611561 'move' call_tmp[611558](357342 call here[90438]))
      (555010 'move' tmp[555008](57209 call maxTaskPar _mt[243] call_tmp[611558]))
      (555015 'move' tmp[555000](555012 '_paramFoldLogical' tmp[555001] tmp[555008]))
    }
    {
      (555020 'move' tmp[555000](555017 '_paramFoldLogical' tmp[555001] dataParTasksPerLocale[93284]))
    }
    (540830 'init var' numTasks[57216] tmp[555000])
    (57219 'end of statement')
    const ignoreRunning[57222] "dead at end of block" "const" "insert auto destroy"
    (540832 'init var' ignoreRunning[57222] dataParIgnoreRunningTasks[93290])
    (57225 'end of statement')
    const minIndicesPerTask[57227] "dead at end of block" "const" "insert auto destroy"
    (540834 'init var' minIndicesPerTask[57227] dataParMinGranularity[93296])
    (57230 'end of statement')
    unknown call_tmp[611567] "maybe param" "maybe type" "temp"
    (611570 'move' call_tmp[611567](57232 call size _mt[243] this[57192]))
    const length[57235] "dead at end of block" "const" "insert auto destroy"
    (540836 'init var' length[57235] call_tmp[611567])
    (57238 'end of statement')
    unknown call_tmp[611572] "expr temp" "maybe param" "maybe type" "temp"
    (611575 'move' call_tmp[611572](57240 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611577] "expr temp" "maybe param" "maybe type" "temp"
    (611580 'move' call_tmp[611577](57243 call # call_tmp[611572] length[57235]))
    unknown call_tmp[611582] "maybe param" "maybe type" "temp"
    (611585 'move' call_tmp[611582](57245 call _build_tuple call_tmp[611577]))
    const myRange[57247] "dead at end of block" "const" "insert auto destroy"
    (540838 'init var' myRange[57247] call_tmp[611582])
    (57250 'end of statement')
    unknown call_tmp[611587] "maybe param" "maybe type" "temp"
    (611590 'move' call_tmp[611587](57262 call _computeChunkStuff numTasks[57216] ignoreRunning[57222] minIndicesPerTask[57227] myRange[57247]))
    unknown tmp[57263] "dead at end of block" "insert auto destroy" "temp"
    (540840 'init var' tmp[57263] call_tmp[611587])
    (57267 call _check_tuple_var_decl tmp[57263] 2)
    (474867 'end of statement')
    unknown call_tmp[611592] "maybe param" "maybe type" "temp"
    (611595 'move' call_tmp[611592](57264 call tmp[57263] 0))
    unknown numChunks[57251] "dead at end of block" "insert auto destroy"
    (540842 'init var' numChunks[57251] call_tmp[611592])
    (57272 'end of statement' length[57235])
    unknown call_tmp[611597] "expr temp" "maybe param" "maybe type" "temp"
    (611600 'move' call_tmp[611597](57275 call == numChunks[57251] 1))
    unknown call_tmp[611602] "expr temp" "maybe param" "maybe type" "temp"
    (611605 'move' call_tmp[611602](57519 call _cond_test call_tmp[611597]))
    if call_tmp[611602]
    {
      unknown yret[508192] "YVV" "temp"
      (508195 'move' yret[508192](508194 'addr of' myRange[57247]))
      (508197 yield yret[508192])
      (474868 'end of statement' myRange[57247])
    }
    {
      {
        unknown tmpIter[57325] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611607] "expr temp" "maybe param" "maybe type" "temp"
        (611610 'move' call_tmp[611607](57283 call chpl_build_low_bounded_range 0))
        (57328 'move' tmpIter[57325](57286 call # call_tmp[611607] numChunks[57251]))
        unknown isRngDomArr[57499] "maybe param" "temp"
        unknown tmp[418937] "maybe param" "temp"
        (418948 'move' tmp[418937](57501 call isBoundedRange tmpIter[57325]))
        unknown call_tmp[611612] "expr temp" "maybe param" "maybe type" "temp"
        (611615 'move' call_tmp[611612](418950 call _cond_invalid tmp[418937]))
        if call_tmp[611612]
        {
          (418953 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[555054] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[555055] "maybe param" "temp"
        unknown call_tmp[611617] "expr temp" "maybe param" "maybe type" "temp"
        (611620 'move' call_tmp[611617](418938 call isTrue tmp[418937]))
        (555060 'move' tmp[555055](555058 call _cond_test call_tmp[611617]))
        if tmp[555055]
        {
          (555065 'move' tmp[555054](555062 '_paramFoldLogical' tmp[555055] 1))
        }
        {
          unknown tmp[418958] "maybe param" "temp"
          (418969 'move' tmp[418958](57504 call isDomain tmpIter[57325]))
          unknown call_tmp[611622] "expr temp" "maybe param" "maybe type" "temp"
          (611625 'move' call_tmp[611622](418971 call _cond_invalid tmp[418958]))
          if call_tmp[611622]
          {
            (418974 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[555027] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[555028] "maybe param" "temp"
          unknown call_tmp[611627] "expr temp" "maybe param" "maybe type" "temp"
          (611630 'move' call_tmp[611627](418959 call isTrue tmp[418958]))
          (555033 'move' tmp[555028](555031 call _cond_test call_tmp[611627]))
          if tmp[555028]
          {
            (555038 'move' tmp[555027](555035 '_paramFoldLogical' tmp[555028] 1))
          }
          {
            unknown tmp[555040] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611632] "expr temp" "maybe param" "maybe type" "temp"
            (611635 'move' call_tmp[611632](57507 call isArray tmpIter[57325]))
            (555042 'move' tmp[555040](418963 call isTrue call_tmp[611632]))
            (555047 'move' tmp[555027](555044 '_paramFoldLogical' tmp[555028] tmp[555040]))
          }
          unknown tmp[555067] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (555069 'move' tmp[555067](418942 call isTrue tmp[555027]))
          (555074 'move' tmp[555054](555071 '_paramFoldLogical' tmp[555055] tmp[555067]))
        }
        (57514 'move' isRngDomArr[57499] tmp[555054])
        if isRngDomArr[57499]
        {
          const _coforallCount[57366] "const" "end count" "temp"
          (57435 'move' _coforallCount[57366](57432 call _endCountAlloc 1))
          unknown numTasks[57367] "temp"
          (57419 'move' numTasks[57367](57415 call size _mt[243] tmpIter[57325]))
          (57410 call _upEndCount _coforallCount[57366] 1 numTasks[57367])
          (474871 'end of statement')
          (57407 call chpl_resetTaskSpawn numTasks[57367])
          (474872 'end of statement')
          unknown _indexOfInterest[57374] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57375] "expr temp" "temp"
          (57384 'move' _iterator[57375](57382 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57400 call _freeIterator _iterator[57375])
            }
          }
          { scopeless type
            (57389 'move' _indexOfInterest[57374](57386 call iteratorIndex _iterator[57375]))
          }
          ForLoop[57376]
          {
            unknown chunk[57393] "coforall index var" "index var" "insert auto destroy"
            (474874 'end of statement')
            (57395 'move' chunk[57393] _indexOfInterest[57374])
            (474875 'end of statement' chunk[57393])
            (934149 call coforall_fn[934147] length[57235] numChunks[57251])
            function coforall_fn[934147](arg length[934154], arg numChunks[934157]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611639] "expr temp" "maybe param" "maybe type" "temp"
                (611642 'move' call_tmp[611639](57339 call - length[934154] 1))
                unknown call_tmp[611644] "maybe param" "maybe type" "temp"
                (611647 'move' call_tmp[611644](57334 call _computeBlock length[934154] numChunks[934157] chunk[57393] call_tmp[611639]))
                const tmp[57332] "dead at end of block" "const" "insert auto destroy" "temp"
                (540844 'init var' tmp[57332] call_tmp[611644])
                (57344 call _check_tuple_var_decl tmp[57332] 2)
                (474877 'end of statement')
                unknown call_tmp[611649] "maybe param" "maybe type" "temp"
                (611652 'move' call_tmp[611649](57349 call tmp[57332] 0))
                const lo[57347] "dead at end of block" "const" "insert auto destroy"
                (540846 'init var' lo[57347] call_tmp[611649])
                unknown call_tmp[611654] "maybe param" "maybe type" "temp"
                (611657 'move' call_tmp[611654](57354 call tmp[57332] 1))
                const hi[57352] "dead at end of block" "const" "insert auto destroy"
                (540848 'init var' hi[57352] call_tmp[611654])
                (57357 'end of statement')
                unknown yret[508199] "YVV" "temp"
                unknown call_tmp[611659] "expr temp" "maybe param" "maybe type" "temp"
                (611662 'move' call_tmp[611659](57362 call chpl_build_bounded_range lo[57347] hi[57352]))
                unknown call_tmp[611664] "expr temp" "maybe param" "maybe type" "temp"
                (611667 'move' call_tmp[611664](57360 call _build_tuple call_tmp[611659]))
                (508202 'move' yret[508199](508201 'addr of' call_tmp[611664]))
                (508204 yield yret[508199])
                (474878 'end of statement' lo[57347] hi[57352])
              }
              (57369 call _downEndCount _coforallCount[57366] nil[44])
              (934152 return _void[55])
            }
            {
            }
            label _continueLabel[57379]
            _indexOfInterest[57374]
            _iterator[57375]
          }
          label _breakLabel[57380]
          Defer
          {
            {
              (57422 call _endCountFree _coforallCount[57366])
            }
          }
          (57427 call _waitEndCount _coforallCount[57366] 1 numTasks[57367])
        }
        {
          const _coforallCount[57439] "const" "end count" "temp"
          (57496 'move' _coforallCount[57439](57493 call _endCountAlloc 1))
          unknown _indexOfInterest[57447] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57448] "expr temp" "temp"
          (57457 'move' _iterator[57448](57455 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57473 call _freeIterator _iterator[57448])
            }
          }
          { scopeless type
            (57462 'move' _indexOfInterest[57447](57459 call iteratorIndex _iterator[57448]))
          }
          ForLoop[57449]
          {
            unknown chunk[57466] "coforall index var" "index var" "insert auto destroy"
            (474885 'end of statement')
            (57468 'move' chunk[57466] _indexOfInterest[57447])
            (474886 'end of statement' chunk[57466])
            (57480 call _upEndCount _coforallCount[57439] 1)
            (474888 'end of statement')
            (934162 call coforall_fn[934160] length[57235] numChunks[57251])
            function coforall_fn[934160](arg length[934167], arg numChunks[934170]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611669] "expr temp" "maybe param" "maybe type" "temp"
                (611672 'move' call_tmp[611669](57300 call - length[934167] 1))
                unknown call_tmp[611674] "maybe param" "maybe type" "temp"
                (611677 'move' call_tmp[611674](57302 call _computeBlock length[934167] numChunks[934170] chunk[57466] call_tmp[611669]))
                const tmp[57303] "dead at end of block" "const" "insert auto destroy" "temp"
                (540850 'init var' tmp[57303] call_tmp[611674])
                (57310 call _check_tuple_var_decl tmp[57303] 2)
                (474889 'end of statement')
                unknown call_tmp[611679] "maybe param" "maybe type" "temp"
                (611682 'move' call_tmp[611679](57304 call tmp[57303] 0))
                const lo[57288] "dead at end of block" "const" "insert auto destroy"
                (540852 'init var' lo[57288] call_tmp[611679])
                unknown call_tmp[611684] "maybe param" "maybe type" "temp"
                (611687 'move' call_tmp[611684](57307 call tmp[57303] 1))
                const hi[57290] "dead at end of block" "const" "insert auto destroy"
                (540854 'init var' hi[57290] call_tmp[611684])
                (57315 'end of statement')
                unknown yret[508206] "YVV" "temp"
                unknown call_tmp[611689] "expr temp" "maybe param" "maybe type" "temp"
                (611692 'move' call_tmp[611689](57319 call chpl_build_bounded_range lo[57288] hi[57290]))
                unknown call_tmp[611694] "expr temp" "maybe param" "maybe type" "temp"
                (611697 'move' call_tmp[611694](57321 call _build_tuple call_tmp[611689]))
                (508209 'move' yret[508206](508208 'addr of' call_tmp[611694]))
                (508211 yield yret[508206])
                (474890 'end of statement' lo[57288] hi[57290])
              }
              (57442 call _downEndCount _coforallCount[57439] nil[44])
              (934165 return _void[55])
            }
            {
            }
            label _continueLabel[57452]
            _indexOfInterest[57447]
            _iterator[57448]
          }
          label _breakLabel[57453]
          Defer
          {
            {
              (57484 call _endCountFree _coforallCount[57439])
            }
          }
          (57489 call _waitEndCount _coforallCount[57439] 1)
        }
      }
    }
    (508190 return ret[508188])
  }
  where {
    (57202 call == tag[57187] leader[447])
  }
  function _tuple[56202](?).these[57533](arg _mt[57542]:_MT[238], arg this[57539]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57530]:iterKind[453], arg followThis[57536]:_tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508215] "RVV" "temp"
    unknown call_tmp[611701] "expr temp" "maybe param" "maybe type" "temp"
    (611704 'move' call_tmp[611701](57552 call size _mt[243] followThis[57536]))
    unknown call_tmp[611706] "expr temp" "maybe param" "maybe type" "temp"
    (611709 'move' call_tmp[611706](57556 call != call_tmp[611701] 1))
    unknown call_tmp[611711] "expr temp" "maybe param" "maybe type" "temp"
    (611714 'move' call_tmp[611711](57579 call _cond_test call_tmp[611706]))
    if call_tmp[611711]
    {
      (57577 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611716] "maybe param" "maybe type" "temp"
    (611719 'move' call_tmp[611716](57588 call followThis[57536] 0))
    unknown fThis[57589] "dead at end of block" "insert auto destroy"
    (540856 'init var' fThis[57589] call_tmp[611716])
    (57592 'end of statement')
    {
      unknown _indexOfInterest[57602] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57603] "expr temp" "temp"
      (57612 'move' _iterator[57603](57610 call _getIterator fThis[57589]))
      Defer
      {
        {
          (57628 call _freeIterator _iterator[57603])
        }
      }
      { scopeless type
        (57617 'move' _indexOfInterest[57602](57614 call iteratorIndex _iterator[57603]))
      }
      ForLoop[57604]
      {
        unknown i[57621] "index var" "insert auto destroy"
        (474898 'end of statement')
        (57623 'move' i[57621] _indexOfInterest[57602])
        (474899 'end of statement' i[57621])
        {
          unknown yret[508219] "YVV" "temp"
          unknown call_tmp[611721] "expr temp" "maybe param" "maybe type" "temp"
          (611724 'move' call_tmp[611721](57598 call this[57539] i[57621]))
          (508222 'move' yret[508219](508221 'addr of' call_tmp[611721]))
          (508224 yield yret[508219])
          (474901 'end of statement' i[57621])
        }
        label _continueLabel[57607]
        _indexOfInterest[57602]
        _iterator[57603]
      }
      label _breakLabel[57608]
    }
    (508217 return ret[508215])
  }
  where {
    (57549 call == tag[57530] follower[449])
  }
  function _tuple[56202](?).indices[57641](arg _mt[57646]:_MT[238], arg this[57643]:_tuple[56202](?) :
  _tuple[56202](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508228] "RVV" "temp"
    unknown call_tmp[611728] "expr temp" "maybe param" "maybe type" "temp"
    (611731 'move' call_tmp[611728](57650 call size _mt[243] this[57643]))
    unknown call_tmp[611733] "expr temp" "maybe param" "maybe type" "temp"
    (611736 'move' call_tmp[611733](57654 call - call_tmp[611728] 1))
    unknown call_tmp[611738] "expr temp" "maybe param" "maybe type" "temp"
    (611741 'move' call_tmp[611738](57656 call chpl_build_bounded_range 0 call_tmp[611733]))
    (508233 'move' ret[508228](508232 'deref' call_tmp[611738]))
    (508230 return ret[508228])
  }
  function _cast[57672](arg t[57669] :
  (57668 call complex(128)[140] 64), arg x[57679]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508243] "RVV" "temp"
    function _chpl_complex64[57691](arg re[57688] :
    (57687 call real(64)[16] 32), arg im[57697] :
    (57696 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508237] "RVV" "temp"
      (508239 return ret[508237])
    }
    { scopeless type
      (57703 call complex(128)[140] 64)
    }
    unknown call_tmp[611743] "expr temp" "maybe param" "maybe type" "temp"
    (611746 'move' call_tmp[611743](57716 call real(64)[16] 32))
    unknown call_tmp[611748] "expr temp" "maybe param" "maybe type" "temp"
    (611751 'move' call_tmp[611748](57712 call x[57679] 0))
    unknown call_tmp[611753] "expr temp" "maybe param" "maybe type" "temp"
    (611756 'move' call_tmp[611753](57717 call _cast call_tmp[611743] call_tmp[611748]))
    unknown call_tmp[611758] "expr temp" "maybe param" "maybe type" "temp"
    (611761 'move' call_tmp[611758](57727 call real(64)[16] 32))
    unknown call_tmp[611763] "expr temp" "maybe param" "maybe type" "temp"
    (611766 'move' call_tmp[611763](57723 call x[57679] 1))
    unknown call_tmp[611768] "expr temp" "maybe param" "maybe type" "temp"
    (611771 'move' call_tmp[611768](57728 call _cast call_tmp[611758] call_tmp[611763]))
    unknown call_tmp[611773] "expr temp" "maybe param" "maybe type" "temp"
    (611776 'move' call_tmp[611773](57730 call _chpl_complex64 call_tmp[611753] call_tmp[611768]))
    (508248 'move' ret[508243](508247 'deref' call_tmp[611773]))
    (508245 return ret[508243])
  }
  where {
    unknown call_tmp[611778] "expr temp" "maybe param" "maybe type" "temp"
    (611781 'move' call_tmp[611778](454776 'query' x[57679] c"size"))
    unknown call_tmp[611783] "expr temp" "maybe param" "maybe type" "temp"
    (611786 'move' call_tmp[611783](454777 call == 2 call_tmp[611778]))
    (454781 call & 1 call_tmp[611783])
  }
  function _cast[57744](arg t[57741] :
  (57740 call complex(128)[140] 128), arg x[57751]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508258] "RVV" "temp"
    function _chpl_complex128[57763](arg re[57760] :
    (57759 call real(64)[16] 64), arg im[57769] :
    (57768 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508252] "RVV" "temp"
      (508254 return ret[508252])
    }
    { scopeless type
      (57775 call complex(128)[140] 128)
    }
    unknown call_tmp[611788] "expr temp" "maybe param" "maybe type" "temp"
    (611791 'move' call_tmp[611788](57788 call real(64)[16] 64))
    unknown call_tmp[611793] "expr temp" "maybe param" "maybe type" "temp"
    (611796 'move' call_tmp[611793](57784 call x[57751] 0))
    unknown call_tmp[611798] "expr temp" "maybe param" "maybe type" "temp"
    (611801 'move' call_tmp[611798](57789 call _cast call_tmp[611788] call_tmp[611793]))
    unknown call_tmp[611803] "expr temp" "maybe param" "maybe type" "temp"
    (611806 'move' call_tmp[611803](57799 call real(64)[16] 64))
    unknown call_tmp[611808] "expr temp" "maybe param" "maybe type" "temp"
    (611811 'move' call_tmp[611808](57795 call x[57751] 1))
    unknown call_tmp[611813] "expr temp" "maybe param" "maybe type" "temp"
    (611816 'move' call_tmp[611813](57800 call _cast call_tmp[611803] call_tmp[611808]))
    unknown call_tmp[611818] "expr temp" "maybe param" "maybe type" "temp"
    (611821 'move' call_tmp[611818](57802 call _chpl_complex128 call_tmp[611798] call_tmp[611813]))
    (508263 'move' ret[508258](508262 'deref' call_tmp[611818]))
    (508260 return ret[508258])
  }
  where {
    unknown call_tmp[611823] "expr temp" "maybe param" "maybe type" "temp"
    (611826 'move' call_tmp[611823](454797 'query' x[57751] c"size"))
    unknown call_tmp[611828] "expr temp" "maybe param" "maybe type" "temp"
    (611831 'move' call_tmp[611828](454798 call == 2 call_tmp[611823]))
    (454802 call & 1 call_tmp[611828])
  }
  function _cast[57813](arg t[57810]:_tuple[56202](?), arg x[57816]:_tuple[56202](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508265 return _void[55])
  }
  function chpl__tupleRest[57828](arg t[57825]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508278] "RVV" "temp"
    function chpl__tupleRestHelper[57834](arg first[57832]:_any[178](?), arg rest[57837]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508269] "RVV" "temp"
      (508274 'move' ret[508269](508273 'deref' rest[57837]))
      (508271 return ret[508269])
    }
    unknown call_tmp[611833] "expr temp" "maybe param" "maybe type" "temp"
    (611836 'move' call_tmp[611833](57851 call chpl__tupleRestHelper(57849 'expand_tuple' t[57825])))
    (508283 'move' ret[508278](508282 'deref' call_tmp[611833]))
    (508280 return ret[508278])
  }
  function +[57862](arg a[57859]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508287] "RVV" "temp"
    unknown result[57866] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611838] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611841 'move' call_tmp[611838](57865 'typeof' a[57859]))
    (540858 'default init var' result[57866] call_tmp[611838])
    (57869 'end of statement')
    {
      unknown d[57894] "dead at end of block" "insert auto destroy"
      (540860 'init var' d[57894] 0)
      (474908 'end of statement')
      unknown tmp[57895] "maybe param" "temp"
      unknown call_tmp[611845] "expr temp" "maybe param" "maybe type" "temp"
      (611848 'move' call_tmp[611845](57873 call size _mt[243] a[57859]))
      unknown call_tmp[611850] "expr temp" "maybe param" "maybe type" "temp"
      (611853 'move' call_tmp[611850](57877 call - call_tmp[611845] 1))
      (57907 'move' tmp[57895](57905 call chpl_compute_low_param_loop_bound 0 call_tmp[611850]))
      unknown tmp[57896] "maybe param" "temp"
      unknown call_tmp[611857] "expr temp" "maybe param" "maybe type" "temp"
      (611860 'move' call_tmp[611857](57914 call size _mt[243] a[57859]))
      unknown call_tmp[611862] "expr temp" "maybe param" "maybe type" "temp"
      (611865 'move' call_tmp[611862](57912 call - call_tmp[611857] 1))
      (57920 'move' tmp[57896](57918 call chpl_compute_high_param_loop_bound 0 call_tmp[611862]))
      unknown tmp[57897] "maybe param" "temp"
      (57923 'move' tmp[57897] 1)
      ParamForLoop[57925]
      { d[57894] tmp[57895] tmp[57896] tmp[57897]
        unknown call_tmp[611867] "expr temp" "maybe param" "maybe type" "temp"
        (611870 'move' call_tmp[611867](57884 call result[57866] d[57894]))
        unknown call_tmp[611872] "expr temp" "maybe param" "maybe type" "temp"
        (611875 'move' call_tmp[611872](57888 call a[57859] d[57894]))
        unknown call_tmp[611877] "expr temp" "maybe param" "maybe type" "temp"
        (611880 'move' call_tmp[611877](57889 call + call_tmp[611872]))
        (57891 call = call_tmp[611867] call_tmp[611877])
        (474909 'end of statement' result[57866] d[57894] d[57894])
      }
      label _unused_continueLabel[57899]
      label _breakLabel[57898]
    }
    (508292 'move' ret[508287](508291 'deref' result[57866]))
    gotoReturn _end_+[508285] _end_+[508285]
    (474913 'end of statement' result[57866])
    label _end_+[508285]
    (508289 return ret[508287])
  }
  function -[57945](arg a[57942]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508298] "RVV" "temp"
    unknown result[57949] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611882] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611885 'move' call_tmp[611882](57948 'typeof' a[57942]))
    (540862 'default init var' result[57949] call_tmp[611882])
    (57952 'end of statement')
    {
      unknown d[57977] "dead at end of block" "insert auto destroy"
      (540864 'init var' d[57977] 0)
      (474915 'end of statement')
      unknown tmp[57978] "maybe param" "temp"
      unknown call_tmp[611889] "expr temp" "maybe param" "maybe type" "temp"
      (611892 'move' call_tmp[611889](57956 call size _mt[243] a[57942]))
      unknown call_tmp[611894] "expr temp" "maybe param" "maybe type" "temp"
      (611897 'move' call_tmp[611894](57960 call - call_tmp[611889] 1))
      (57990 'move' tmp[57978](57988 call chpl_compute_low_param_loop_bound 0 call_tmp[611894]))
      unknown tmp[57979] "maybe param" "temp"
      unknown call_tmp[611901] "expr temp" "maybe param" "maybe type" "temp"
      (611904 'move' call_tmp[611901](57997 call size _mt[243] a[57942]))
      unknown call_tmp[611906] "expr temp" "maybe param" "maybe type" "temp"
      (611909 'move' call_tmp[611906](57995 call - call_tmp[611901] 1))
      (58003 'move' tmp[57979](58001 call chpl_compute_high_param_loop_bound 0 call_tmp[611906]))
      unknown tmp[57980] "maybe param" "temp"
      (58006 'move' tmp[57980] 1)
      ParamForLoop[58008]
      { d[57977] tmp[57978] tmp[57979] tmp[57980]
        unknown call_tmp[611911] "expr temp" "maybe param" "maybe type" "temp"
        (611914 'move' call_tmp[611911](57967 call result[57949] d[57977]))
        unknown call_tmp[611916] "expr temp" "maybe param" "maybe type" "temp"
        (611919 'move' call_tmp[611916](57971 call a[57942] d[57977]))
        unknown call_tmp[611921] "expr temp" "maybe param" "maybe type" "temp"
        (611924 'move' call_tmp[611921](57972 call - call_tmp[611916]))
        (57974 call = call_tmp[611911] call_tmp[611921])
        (474916 'end of statement' result[57949] d[57977] d[57977])
      }
      label _unused_continueLabel[57982]
      label _breakLabel[57981]
    }
    (508303 'move' ret[508298](508302 'deref' result[57949]))
    gotoReturn _end_-[508296] _end_-[508296]
    (474920 'end of statement' result[57949])
    label _end_-[508296]
    (508300 return ret[508298])
  }
  function ~[58028](arg a[58025]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508309] "RVV" "temp"
    unknown result[58032] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611926] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611929 'move' call_tmp[611926](58031 'typeof' a[58025]))
    (540866 'default init var' result[58032] call_tmp[611926])
    (58035 'end of statement')
    {
      unknown d[58060] "dead at end of block" "insert auto destroy"
      (540868 'init var' d[58060] 0)
      (474922 'end of statement')
      unknown tmp[58061] "maybe param" "temp"
      unknown call_tmp[611933] "expr temp" "maybe param" "maybe type" "temp"
      (611936 'move' call_tmp[611933](58039 call size _mt[243] a[58025]))
      unknown call_tmp[611938] "expr temp" "maybe param" "maybe type" "temp"
      (611941 'move' call_tmp[611938](58043 call - call_tmp[611933] 1))
      (58073 'move' tmp[58061](58071 call chpl_compute_low_param_loop_bound 0 call_tmp[611938]))
      unknown tmp[58062] "maybe param" "temp"
      unknown call_tmp[611945] "expr temp" "maybe param" "maybe type" "temp"
      (611948 'move' call_tmp[611945](58080 call size _mt[243] a[58025]))
      unknown call_tmp[611950] "expr temp" "maybe param" "maybe type" "temp"
      (611953 'move' call_tmp[611950](58078 call - call_tmp[611945] 1))
      (58086 'move' tmp[58062](58084 call chpl_compute_high_param_loop_bound 0 call_tmp[611950]))
      unknown tmp[58063] "maybe param" "temp"
      (58089 'move' tmp[58063] 1)
      ParamForLoop[58091]
      { d[58060] tmp[58061] tmp[58062] tmp[58063]
        unknown call_tmp[611955] "expr temp" "maybe param" "maybe type" "temp"
        (611958 'move' call_tmp[611955](58050 call result[58032] d[58060]))
        unknown call_tmp[611960] "expr temp" "maybe param" "maybe type" "temp"
        (611963 'move' call_tmp[611960](58054 call a[58025] d[58060]))
        unknown call_tmp[611965] "expr temp" "maybe param" "maybe type" "temp"
        (611968 'move' call_tmp[611965](58055 call ~ call_tmp[611960]))
        (58057 call = call_tmp[611955] call_tmp[611965])
        (474923 'end of statement' result[58032] d[58060] d[58060])
      }
      label _unused_continueLabel[58065]
      label _breakLabel[58064]
    }
    (508314 'move' ret[508309](508313 'deref' result[58032]))
    gotoReturn _end_~[508307] _end_~[508307]
    (474927 'end of statement' result[58032])
    label _end_~[508307]
    (508311 return ret[508309])
  }
  function ![58111](arg a[58108]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508320] "RVV" "temp"
    unknown result[58115] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611970] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611973 'move' call_tmp[611970](58114 'typeof' a[58108]))
    (540870 'default init var' result[58115] call_tmp[611970])
    (58118 'end of statement')
    {
      unknown d[58143] "dead at end of block" "insert auto destroy"
      (540872 'init var' d[58143] 0)
      (474929 'end of statement')
      unknown tmp[58144] "maybe param" "temp"
      unknown call_tmp[611977] "expr temp" "maybe param" "maybe type" "temp"
      (611980 'move' call_tmp[611977](58122 call size _mt[243] a[58108]))
      unknown call_tmp[611982] "expr temp" "maybe param" "maybe type" "temp"
      (611985 'move' call_tmp[611982](58126 call - call_tmp[611977] 1))
      (58156 'move' tmp[58144](58154 call chpl_compute_low_param_loop_bound 0 call_tmp[611982]))
      unknown tmp[58145] "maybe param" "temp"
      unknown call_tmp[611989] "expr temp" "maybe param" "maybe type" "temp"
      (611992 'move' call_tmp[611989](58163 call size _mt[243] a[58108]))
      unknown call_tmp[611994] "expr temp" "maybe param" "maybe type" "temp"
      (611997 'move' call_tmp[611994](58161 call - call_tmp[611989] 1))
      (58169 'move' tmp[58145](58167 call chpl_compute_high_param_loop_bound 0 call_tmp[611994]))
      unknown tmp[58146] "maybe param" "temp"
      (58172 'move' tmp[58146] 1)
      ParamForLoop[58174]
      { d[58143] tmp[58144] tmp[58145] tmp[58146]
        unknown call_tmp[611999] "expr temp" "maybe param" "maybe type" "temp"
        (612002 'move' call_tmp[611999](58133 call result[58115] d[58143]))
        unknown call_tmp[612004] "expr temp" "maybe param" "maybe type" "temp"
        (612007 'move' call_tmp[612004](58137 call a[58108] d[58143]))
        unknown call_tmp[612009] "expr temp" "maybe param" "maybe type" "temp"
        (612012 'move' call_tmp[612009](58138 call ! call_tmp[612004]))
        (58140 call = call_tmp[611999] call_tmp[612009])
        (474930 'end of statement' result[58115] d[58143] d[58143])
      }
      label _unused_continueLabel[58148]
      label _breakLabel[58147]
    }
    (508325 'move' ret[508320](508324 'deref' result[58115]))
    gotoReturn _end_![508318] _end_![508318]
    (474934 'end of statement' result[58115])
    label _end_![508318]
    (508322 return ret[508320])
  }
  function max[58192](arg t[58190]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508331] "RVV" "temp"
    unknown result[58200] "dead at end of block" "insert auto destroy"
    (540874 'default init var' result[58200] t[58190])
    (58203 'end of statement')
    {
      unknown i[58230] "dead at end of block" "insert auto destroy"
      (540876 'init var' i[58230] 0)
      (474936 'end of statement')
      unknown tmp[58231] "maybe param" "temp"
      unknown call_tmp[612016] "expr temp" "maybe param" "maybe type" "temp"
      (612019 'move' call_tmp[612016](58207 call size _mt[243] result[58200]))
      unknown call_tmp[612021] "expr temp" "maybe param" "maybe type" "temp"
      (612024 'move' call_tmp[612021](58211 call - call_tmp[612016] 1))
      (58243 'move' tmp[58231](58241 call chpl_compute_low_param_loop_bound 0 call_tmp[612021]))
      unknown tmp[58232] "maybe param" "temp"
      unknown call_tmp[612028] "expr temp" "maybe param" "maybe type" "temp"
      (612031 'move' call_tmp[612028](58250 call size _mt[243] result[58200]))
      unknown call_tmp[612033] "expr temp" "maybe param" "maybe type" "temp"
      (612036 'move' call_tmp[612033](58248 call - call_tmp[612028] 1))
      (58256 'move' tmp[58232](58254 call chpl_compute_high_param_loop_bound 0 call_tmp[612033]))
      unknown tmp[58233] "maybe param" "temp"
      (58259 'move' tmp[58233] 1)
      ParamForLoop[58261]
      { i[58230] tmp[58231] tmp[58232] tmp[58233]
        {
          unknown call_tmp[612038] "expr temp" "maybe param" "maybe type" "temp"
          (612041 'move' call_tmp[612038](58218 call result[58200] i[58230]))
          unknown call_tmp[612043] "expr temp" "maybe param" "maybe type" "temp"
          (612046 'move' call_tmp[612043](58223 call t[58190] i[58230]))
          unknown call_tmp[612048] "expr temp" "maybe param" "maybe type" "temp"
          (612051 'move' call_tmp[612048](58225 call max call_tmp[612043]))
          (58226 call = call_tmp[612038] call_tmp[612048])
          (474937 'end of statement' result[58200] i[58230] i[58230])
        }
      }
      label _unused_continueLabel[58235]
      label _breakLabel[58234]
    }
    (508337 'move' ret[508331](508336 'coerce' result[58200] t[58190]))
    gotoReturn _end_max[508329] _end_max[508329]
    (474941 'end of statement' result[58200])
    label _end_max[508329]
    (508333 return ret[508331])
  }
  where {
    (58198 call isTupleType t[58190])
  }
  { scopeless type
    t[58190]
  }
  function min[58281](arg t[58279]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508343] "RVV" "temp"
    unknown result[58289] "dead at end of block" "insert auto destroy"
    (540878 'default init var' result[58289] t[58279])
    (58292 'end of statement')
    {
      unknown i[58319] "dead at end of block" "insert auto destroy"
      (540880 'init var' i[58319] 0)
      (474943 'end of statement')
      unknown tmp[58320] "maybe param" "temp"
      unknown call_tmp[612055] "expr temp" "maybe param" "maybe type" "temp"
      (612058 'move' call_tmp[612055](58296 call size _mt[243] result[58289]))
      unknown call_tmp[612060] "expr temp" "maybe param" "maybe type" "temp"
      (612063 'move' call_tmp[612060](58300 call - call_tmp[612055] 1))
      (58332 'move' tmp[58320](58330 call chpl_compute_low_param_loop_bound 0 call_tmp[612060]))
      unknown tmp[58321] "maybe param" "temp"
      unknown call_tmp[612067] "expr temp" "maybe param" "maybe type" "temp"
      (612070 'move' call_tmp[612067](58339 call size _mt[243] result[58289]))
      unknown call_tmp[612072] "expr temp" "maybe param" "maybe type" "temp"
      (612075 'move' call_tmp[612072](58337 call - call_tmp[612067] 1))
      (58345 'move' tmp[58321](58343 call chpl_compute_high_param_loop_bound 0 call_tmp[612072]))
      unknown tmp[58322] "maybe param" "temp"
      (58348 'move' tmp[58322] 1)
      ParamForLoop[58350]
      { i[58319] tmp[58320] tmp[58321] tmp[58322]
        {
          unknown call_tmp[612077] "expr temp" "maybe param" "maybe type" "temp"
          (612080 'move' call_tmp[612077](58307 call result[58289] i[58319]))
          unknown call_tmp[612082] "expr temp" "maybe param" "maybe type" "temp"
          (612085 'move' call_tmp[612082](58312 call t[58279] i[58319]))
          unknown call_tmp[612087] "expr temp" "maybe param" "maybe type" "temp"
          (612090 'move' call_tmp[612087](58314 call min call_tmp[612082]))
          (58315 call = call_tmp[612077] call_tmp[612087])
          (474944 'end of statement' result[58289] i[58319] i[58319])
        }
      }
      label _unused_continueLabel[58324]
      label _breakLabel[58323]
    }
    (508349 'move' ret[508343](508348 'coerce' result[58289] t[58279]))
    gotoReturn _end_min[508341] _end_min[508341]
    (474948 'end of statement' result[58289])
    label _end_min[508341]
    (508345 return ret[508343])
  }
  where {
    (58287 call isTupleType t[58279])
  }
  { scopeless type
    t[58279]
  }
  function chpl_TwoHomogTuples[58370](arg t1[58368]:_any[178](?), arg t2[58372]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508355] "RVV" "param" "temp"
    unknown tmp[418979] "maybe param" "temp"
    (418990 'move' tmp[418979](58377 call isHomogeneousTuple t1[58368]))
    unknown call_tmp[612092] "expr temp" "maybe param" "maybe type" "temp"
    (612095 'move' call_tmp[612092](418992 call _cond_invalid tmp[418979]))
    if call_tmp[612092]
    {
      (418995 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555081] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555082] "maybe param" "temp"
    unknown call_tmp[612097] "expr temp" "maybe param" "maybe type" "temp"
    (612100 'move' call_tmp[612097](418980 call isTrue tmp[418979]))
    (555087 'move' tmp[555082](555085 call _cond_test call_tmp[612097]))
    if tmp[555082]
    {
      unknown tmp[555089] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[612102] "expr temp" "maybe param" "maybe type" "temp"
      (612105 'move' call_tmp[612102](58381 call isHomogeneousTuple t2[58372]))
      (555091 'move' tmp[555089](418983 call isTrue call_tmp[612102]))
      (555096 'move' tmp[555081](555093 '_paramFoldLogical' tmp[555082] tmp[555089]))
    }
    {
      (555101 'move' tmp[555081](555098 '_paramFoldLogical' tmp[555082] 0))
    }
    (508360 'move' ret[508355](508359 'deref' tmp[555081]))
    (508357 return ret[508355])
  }
  function +[58395](arg a[58392]:_tuple[56202](?), arg b[58398]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508364] "RVV" "temp"
    unknown call_tmp[612109] "expr temp" "maybe param" "maybe type" "temp"
    (612112 'move' call_tmp[612109](58407 call size _mt[243] a[58392]))
    unknown call_tmp[612116] "expr temp" "maybe param" "maybe type" "temp"
    (612119 'move' call_tmp[612116](58411 call size _mt[243] b[58398]))
    unknown call_tmp[612121] "expr temp" "maybe param" "maybe type" "temp"
    (612124 'move' call_tmp[612121](58414 call != call_tmp[612109] call_tmp[612116]))
    unknown call_tmp[612126] "expr temp" "maybe param" "maybe type" "temp"
    (612129 'move' call_tmp[612126](58437 call _cond_test call_tmp[612121]))
    if call_tmp[612126]
    {
      (58435 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491620] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612131] "expr temp" "maybe param" "maybe type" "temp"
      (612134 'move' call_tmp[612131](58450 call a[58392] 0))
      unknown call_tmp[612136] "expr temp" "maybe param" "maybe type" "temp"
      (612139 'move' call_tmp[612136](58454 call b[58398] 0))
      unknown call_tmp[612141] "expr temp" "maybe param" "maybe type" "temp"
      (612144 'move' call_tmp[612141](58455 call + call_tmp[612131] call_tmp[612136]))
      (491624 'move' call_type_tmp[491620](58457 'typeof' call_tmp[612141]))
    }
    unknown result[58460] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612148] "expr temp" "maybe param" "maybe type" "temp"
    (612151 'move' call_tmp[612148](58444 call size _mt[243] a[58392]))
    unknown call_tmp[612153] "expr temp" "maybe param" "maybe type" "temp"
    (612156 'move' call_tmp[612153](58458 call * call_tmp[612148] call_type_tmp[491620]))
    (540882 'default init var' result[58460] call_tmp[612153])
    (58463 'end of statement')
    {
      unknown d[58491] "dead at end of block" "insert auto destroy"
      (540884 'init var' d[58491] 0)
      (474953 'end of statement')
      unknown tmp[58492] "maybe param" "temp"
      unknown call_tmp[612160] "expr temp" "maybe param" "maybe type" "temp"
      (612163 'move' call_tmp[612160](58466 call size _mt[243] a[58392]))
      unknown call_tmp[612165] "expr temp" "maybe param" "maybe type" "temp"
      (612168 'move' call_tmp[612165](58470 call - call_tmp[612160] 1))
      (58504 'move' tmp[58492](58502 call chpl_compute_low_param_loop_bound 0 call_tmp[612165]))
      unknown tmp[58493] "maybe param" "temp"
      unknown call_tmp[612172] "expr temp" "maybe param" "maybe type" "temp"
      (612175 'move' call_tmp[612172](58511 call size _mt[243] a[58392]))
      unknown call_tmp[612177] "expr temp" "maybe param" "maybe type" "temp"
      (612180 'move' call_tmp[612177](58509 call - call_tmp[612172] 1))
      (58517 'move' tmp[58493](58515 call chpl_compute_high_param_loop_bound 0 call_tmp[612177]))
      unknown tmp[58494] "maybe param" "temp"
      (58520 'move' tmp[58494] 1)
      ParamForLoop[58522]
      { d[58491] tmp[58492] tmp[58493] tmp[58494]
        unknown call_tmp[612182] "expr temp" "maybe param" "maybe type" "temp"
        (612185 'move' call_tmp[612182](58477 call result[58460] d[58491]))
        unknown call_tmp[612187] "expr temp" "maybe param" "maybe type" "temp"
        (612190 'move' call_tmp[612187](58481 call a[58392] d[58491]))
        unknown call_tmp[612192] "expr temp" "maybe param" "maybe type" "temp"
        (612195 'move' call_tmp[612192](58485 call b[58398] d[58491]))
        unknown call_tmp[612197] "expr temp" "maybe param" "maybe type" "temp"
        (612200 'move' call_tmp[612197](58486 call + call_tmp[612187] call_tmp[612192]))
        (58488 call = call_tmp[612182] call_tmp[612197])
        (474954 'end of statement' result[58460] d[58491] d[58491] d[58491])
      }
      label _unused_continueLabel[58496]
      label _breakLabel[58495]
    }
    (508369 'move' ret[508364](508368 'deref' result[58460]))
    gotoReturn _end_+[508362] _end_+[508362]
    (474959 'end of statement' result[58460])
    label _end_+[508362]
    (508366 return ret[508364])
  }
  where {
    (58405 call chpl_TwoHomogTuples a[58392] b[58398])
  }
  function +[58543](arg a[58540]:_tuple[56202](?), arg b[58546]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508375] "RVV" "temp"
    unknown call_tmp[612204] "expr temp" "maybe param" "maybe type" "temp"
    (612207 'move' call_tmp[612204](58550 call size _mt[243] a[58540]))
    unknown call_tmp[612211] "expr temp" "maybe param" "maybe type" "temp"
    (612214 'move' call_tmp[612211](58554 call size _mt[243] b[58546]))
    unknown call_tmp[612216] "expr temp" "maybe param" "maybe type" "temp"
    (612219 'move' call_tmp[612216](58557 call != call_tmp[612204] call_tmp[612211]))
    unknown call_tmp[612221] "expr temp" "maybe param" "maybe type" "temp"
    (612224 'move' call_tmp[612221](58564 call _cond_test call_tmp[612216]))
    if call_tmp[612221]
    {
      (58562 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612228] "expr temp" "maybe param" "maybe type" "temp"
    (612231 'move' call_tmp[612228](58571 call size _mt[243] a[58540]))
    unknown call_tmp[612233] "expr temp" "maybe param" "maybe type" "temp"
    (612236 'move' call_tmp[612233](58575 call == call_tmp[612228] 1))
    unknown call_tmp[612238] "expr temp" "maybe param" "maybe type" "temp"
    (612241 'move' call_tmp[612238](58617 call _cond_test call_tmp[612233]))
    if call_tmp[612238]
    {
      unknown call_tmp[612243] "expr temp" "maybe param" "maybe type" "temp"
      (612246 'move' call_tmp[612243](58580 call a[58540] 0))
      unknown call_tmp[612248] "expr temp" "maybe param" "maybe type" "temp"
      (612251 'move' call_tmp[612248](58584 call b[58546] 0))
      unknown call_tmp[612253] "expr temp" "maybe param" "maybe type" "temp"
      (612256 'move' call_tmp[612253](58585 call + call_tmp[612243] call_tmp[612248]))
      unknown call_tmp[612258] "expr temp" "maybe param" "maybe type" "temp"
      (612261 'move' call_tmp[612258](58587 call _build_tuple call_tmp[612253]))
      (508380 'move' ret[508375](508379 'deref' call_tmp[612258]))
      gotoReturn _end_+[508373] _end_+[508373]
    }
    {
      unknown call_tmp[612263] "expr temp" "maybe param" "maybe type" "temp"
      (612266 'move' call_tmp[612263](58594 call a[58540] 0))
      unknown call_tmp[612268] "expr temp" "maybe param" "maybe type" "temp"
      (612271 'move' call_tmp[612268](58598 call b[58546] 0))
      unknown call_tmp[612273] "expr temp" "maybe param" "maybe type" "temp"
      (612276 'move' call_tmp[612273](58599 call + call_tmp[612263] call_tmp[612268]))
      unknown call_tmp[612278] "expr temp" "maybe param" "maybe type" "temp"
      (612281 'move' call_tmp[612278](58604 call chpl__tupleRest a[58540]))
      unknown call_tmp[612283] "expr temp" "maybe param" "maybe type" "temp"
      (612286 'move' call_tmp[612283](58608 call chpl__tupleRest b[58546]))
      unknown call_tmp[612288] "expr temp" "maybe param" "maybe type" "temp"
      (612291 'move' call_tmp[612288](58609 call + call_tmp[612278] call_tmp[612283]))
      unknown call_tmp[612293] "expr temp" "maybe param" "maybe type" "temp"
      (612296 'move' call_tmp[612293](58613 call _build_tuple call_tmp[612273](58611 'expand_tuple' call_tmp[612288])))
      (508385 'move' ret[508375](508384 'deref' call_tmp[612293]))
      gotoReturn _end_+[508373] _end_+[508373]
    }
    label _end_+[508373]
    (508377 return ret[508375])
  }
  function -[58631](arg a[58628]:_tuple[56202](?), arg b[58634]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508391] "RVV" "temp"
    unknown call_tmp[612300] "expr temp" "maybe param" "maybe type" "temp"
    (612303 'move' call_tmp[612300](58643 call size _mt[243] a[58628]))
    unknown call_tmp[612307] "expr temp" "maybe param" "maybe type" "temp"
    (612310 'move' call_tmp[612307](58647 call size _mt[243] b[58634]))
    unknown call_tmp[612312] "expr temp" "maybe param" "maybe type" "temp"
    (612315 'move' call_tmp[612312](58650 call != call_tmp[612300] call_tmp[612307]))
    unknown call_tmp[612317] "expr temp" "maybe param" "maybe type" "temp"
    (612320 'move' call_tmp[612317](58673 call _cond_test call_tmp[612312]))
    if call_tmp[612317]
    {
      (58671 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491626] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612322] "expr temp" "maybe param" "maybe type" "temp"
      (612325 'move' call_tmp[612322](58686 call a[58628] 0))
      unknown call_tmp[612327] "expr temp" "maybe param" "maybe type" "temp"
      (612330 'move' call_tmp[612327](58690 call b[58634] 0))
      unknown call_tmp[612332] "expr temp" "maybe param" "maybe type" "temp"
      (612335 'move' call_tmp[612332](58691 call - call_tmp[612322] call_tmp[612327]))
      (491630 'move' call_type_tmp[491626](58693 'typeof' call_tmp[612332]))
    }
    unknown result[58696] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612339] "expr temp" "maybe param" "maybe type" "temp"
    (612342 'move' call_tmp[612339](58680 call size _mt[243] a[58628]))
    unknown call_tmp[612344] "expr temp" "maybe param" "maybe type" "temp"
    (612347 'move' call_tmp[612344](58694 call * call_tmp[612339] call_type_tmp[491626]))
    (540886 'default init var' result[58696] call_tmp[612344])
    (58699 'end of statement')
    {
      unknown d[58727] "dead at end of block" "insert auto destroy"
      (540888 'init var' d[58727] 0)
      (474965 'end of statement')
      unknown tmp[58728] "maybe param" "temp"
      unknown call_tmp[612351] "expr temp" "maybe param" "maybe type" "temp"
      (612354 'move' call_tmp[612351](58702 call size _mt[243] a[58628]))
      unknown call_tmp[612356] "expr temp" "maybe param" "maybe type" "temp"
      (612359 'move' call_tmp[612356](58706 call - call_tmp[612351] 1))
      (58740 'move' tmp[58728](58738 call chpl_compute_low_param_loop_bound 0 call_tmp[612356]))
      unknown tmp[58729] "maybe param" "temp"
      unknown call_tmp[612363] "expr temp" "maybe param" "maybe type" "temp"
      (612366 'move' call_tmp[612363](58747 call size _mt[243] a[58628]))
      unknown call_tmp[612368] "expr temp" "maybe param" "maybe type" "temp"
      (612371 'move' call_tmp[612368](58745 call - call_tmp[612363] 1))
      (58753 'move' tmp[58729](58751 call chpl_compute_high_param_loop_bound 0 call_tmp[612368]))
      unknown tmp[58730] "maybe param" "temp"
      (58756 'move' tmp[58730] 1)
      ParamForLoop[58758]
      { d[58727] tmp[58728] tmp[58729] tmp[58730]
        unknown call_tmp[612373] "expr temp" "maybe param" "maybe type" "temp"
        (612376 'move' call_tmp[612373](58713 call result[58696] d[58727]))
        unknown call_tmp[612378] "expr temp" "maybe param" "maybe type" "temp"
        (612381 'move' call_tmp[612378](58717 call a[58628] d[58727]))
        unknown call_tmp[612383] "expr temp" "maybe param" "maybe type" "temp"
        (612386 'move' call_tmp[612383](58721 call b[58634] d[58727]))
        unknown call_tmp[612388] "expr temp" "maybe param" "maybe type" "temp"
        (612391 'move' call_tmp[612388](58722 call - call_tmp[612378] call_tmp[612383]))
        (58724 call = call_tmp[612373] call_tmp[612388])
        (474966 'end of statement' result[58696] d[58727] d[58727] d[58727])
      }
      label _unused_continueLabel[58732]
      label _breakLabel[58731]
    }
    (508396 'move' ret[508391](508395 'deref' result[58696]))
    gotoReturn _end_-[508389] _end_-[508389]
    (474971 'end of statement' result[58696])
    label _end_-[508389]
    (508393 return ret[508391])
  }
  where {
    (58641 call chpl_TwoHomogTuples a[58628] b[58634])
  }
  function -[58779](arg a[58776]:_tuple[56202](?), arg b[58782]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508402] "RVV" "temp"
    unknown call_tmp[612395] "expr temp" "maybe param" "maybe type" "temp"
    (612398 'move' call_tmp[612395](58786 call size _mt[243] a[58776]))
    unknown call_tmp[612402] "expr temp" "maybe param" "maybe type" "temp"
    (612405 'move' call_tmp[612402](58790 call size _mt[243] b[58782]))
    unknown call_tmp[612407] "expr temp" "maybe param" "maybe type" "temp"
    (612410 'move' call_tmp[612407](58793 call != call_tmp[612395] call_tmp[612402]))
    unknown call_tmp[612412] "expr temp" "maybe param" "maybe type" "temp"
    (612415 'move' call_tmp[612412](58800 call _cond_test call_tmp[612407]))
    if call_tmp[612412]
    {
      (58798 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612419] "expr temp" "maybe param" "maybe type" "temp"
    (612422 'move' call_tmp[612419](58807 call size _mt[243] a[58776]))
    unknown call_tmp[612424] "expr temp" "maybe param" "maybe type" "temp"
    (612427 'move' call_tmp[612424](58811 call == call_tmp[612419] 1))
    unknown call_tmp[612429] "expr temp" "maybe param" "maybe type" "temp"
    (612432 'move' call_tmp[612429](58853 call _cond_test call_tmp[612424]))
    if call_tmp[612429]
    {
      unknown call_tmp[612434] "expr temp" "maybe param" "maybe type" "temp"
      (612437 'move' call_tmp[612434](58816 call a[58776] 0))
      unknown call_tmp[612439] "expr temp" "maybe param" "maybe type" "temp"
      (612442 'move' call_tmp[612439](58820 call b[58782] 0))
      unknown call_tmp[612444] "expr temp" "maybe param" "maybe type" "temp"
      (612447 'move' call_tmp[612444](58821 call - call_tmp[612434] call_tmp[612439]))
      unknown call_tmp[612449] "expr temp" "maybe param" "maybe type" "temp"
      (612452 'move' call_tmp[612449](58823 call _build_tuple call_tmp[612444]))
      (508407 'move' ret[508402](508406 'deref' call_tmp[612449]))
      gotoReturn _end_-[508400] _end_-[508400]
    }
    {
      unknown call_tmp[612454] "expr temp" "maybe param" "maybe type" "temp"
      (612457 'move' call_tmp[612454](58830 call a[58776] 0))
      unknown call_tmp[612459] "expr temp" "maybe param" "maybe type" "temp"
      (612462 'move' call_tmp[612459](58834 call b[58782] 0))
      unknown call_tmp[612464] "expr temp" "maybe param" "maybe type" "temp"
      (612467 'move' call_tmp[612464](58835 call - call_tmp[612454] call_tmp[612459]))
      unknown call_tmp[612469] "expr temp" "maybe param" "maybe type" "temp"
      (612472 'move' call_tmp[612469](58840 call chpl__tupleRest a[58776]))
      unknown call_tmp[612474] "expr temp" "maybe param" "maybe type" "temp"
      (612477 'move' call_tmp[612474](58844 call chpl__tupleRest b[58782]))
      unknown call_tmp[612479] "expr temp" "maybe param" "maybe type" "temp"
      (612482 'move' call_tmp[612479](58845 call - call_tmp[612469] call_tmp[612474]))
      unknown call_tmp[612484] "expr temp" "maybe param" "maybe type" "temp"
      (612487 'move' call_tmp[612484](58849 call _build_tuple call_tmp[612464](58847 'expand_tuple' call_tmp[612479])))
      (508412 'move' ret[508402](508411 'deref' call_tmp[612484]))
      gotoReturn _end_-[508400] _end_-[508400]
    }
    label _end_-[508400]
    (508404 return ret[508402])
  }
  function *[58867](arg a[58864]:_tuple[56202](?), arg b[58870]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508418] "RVV" "temp"
    unknown call_tmp[612491] "expr temp" "maybe param" "maybe type" "temp"
    (612494 'move' call_tmp[612491](58879 call size _mt[243] a[58864]))
    unknown call_tmp[612498] "expr temp" "maybe param" "maybe type" "temp"
    (612501 'move' call_tmp[612498](58883 call size _mt[243] b[58870]))
    unknown call_tmp[612503] "expr temp" "maybe param" "maybe type" "temp"
    (612506 'move' call_tmp[612503](58886 call != call_tmp[612491] call_tmp[612498]))
    unknown call_tmp[612508] "expr temp" "maybe param" "maybe type" "temp"
    (612511 'move' call_tmp[612508](58909 call _cond_test call_tmp[612503]))
    if call_tmp[612508]
    {
      (58907 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491632] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612513] "expr temp" "maybe param" "maybe type" "temp"
      (612516 'move' call_tmp[612513](58922 call a[58864] 0))
      unknown call_tmp[612518] "expr temp" "maybe param" "maybe type" "temp"
      (612521 'move' call_tmp[612518](58926 call b[58870] 0))
      unknown call_tmp[612523] "expr temp" "maybe param" "maybe type" "temp"
      (612526 'move' call_tmp[612523](58927 call * call_tmp[612513] call_tmp[612518]))
      (491636 'move' call_type_tmp[491632](58929 'typeof' call_tmp[612523]))
    }
    unknown result[58932] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612530] "expr temp" "maybe param" "maybe type" "temp"
    (612533 'move' call_tmp[612530](58916 call size _mt[243] a[58864]))
    unknown call_tmp[612535] "expr temp" "maybe param" "maybe type" "temp"
    (612538 'move' call_tmp[612535](58930 call * call_tmp[612530] call_type_tmp[491632]))
    (540890 'default init var' result[58932] call_tmp[612535])
    (58935 'end of statement')
    {
      unknown d[58963] "dead at end of block" "insert auto destroy"
      (540892 'init var' d[58963] 0)
      (474977 'end of statement')
      unknown tmp[58964] "maybe param" "temp"
      unknown call_tmp[612542] "expr temp" "maybe param" "maybe type" "temp"
      (612545 'move' call_tmp[612542](58938 call size _mt[243] a[58864]))
      unknown call_tmp[612547] "expr temp" "maybe param" "maybe type" "temp"
      (612550 'move' call_tmp[612547](58942 call - call_tmp[612542] 1))
      (58976 'move' tmp[58964](58974 call chpl_compute_low_param_loop_bound 0 call_tmp[612547]))
      unknown tmp[58965] "maybe param" "temp"
      unknown call_tmp[612554] "expr temp" "maybe param" "maybe type" "temp"
      (612557 'move' call_tmp[612554](58983 call size _mt[243] a[58864]))
      unknown call_tmp[612559] "expr temp" "maybe param" "maybe type" "temp"
      (612562 'move' call_tmp[612559](58981 call - call_tmp[612554] 1))
      (58989 'move' tmp[58965](58987 call chpl_compute_high_param_loop_bound 0 call_tmp[612559]))
      unknown tmp[58966] "maybe param" "temp"
      (58992 'move' tmp[58966] 1)
      ParamForLoop[58994]
      { d[58963] tmp[58964] tmp[58965] tmp[58966]
        unknown call_tmp[612564] "expr temp" "maybe param" "maybe type" "temp"
        (612567 'move' call_tmp[612564](58949 call result[58932] d[58963]))
        unknown call_tmp[612569] "expr temp" "maybe param" "maybe type" "temp"
        (612572 'move' call_tmp[612569](58953 call a[58864] d[58963]))
        unknown call_tmp[612574] "expr temp" "maybe param" "maybe type" "temp"
        (612577 'move' call_tmp[612574](58957 call b[58870] d[58963]))
        unknown call_tmp[612579] "expr temp" "maybe param" "maybe type" "temp"
        (612582 'move' call_tmp[612579](58958 call * call_tmp[612569] call_tmp[612574]))
        (58960 call = call_tmp[612564] call_tmp[612579])
        (474978 'end of statement' result[58932] d[58963] d[58963] d[58963])
      }
      label _unused_continueLabel[58968]
      label _breakLabel[58967]
    }
    (508423 'move' ret[508418](508422 'deref' result[58932]))
    gotoReturn _end_*[508416] _end_*[508416]
    (474983 'end of statement' result[58932])
    label _end_*[508416]
    (508420 return ret[508418])
  }
  where {
    (58877 call chpl_TwoHomogTuples a[58864] b[58870])
  }
  function *[59015](arg a[59012]:_tuple[56202](?), arg b[59018]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508429] "RVV" "temp"
    unknown call_tmp[612586] "expr temp" "maybe param" "maybe type" "temp"
    (612589 'move' call_tmp[612586](59022 call size _mt[243] a[59012]))
    unknown call_tmp[612593] "expr temp" "maybe param" "maybe type" "temp"
    (612596 'move' call_tmp[612593](59026 call size _mt[243] b[59018]))
    unknown call_tmp[612598] "expr temp" "maybe param" "maybe type" "temp"
    (612601 'move' call_tmp[612598](59029 call != call_tmp[612586] call_tmp[612593]))
    unknown call_tmp[612603] "expr temp" "maybe param" "maybe type" "temp"
    (612606 'move' call_tmp[612603](59036 call _cond_test call_tmp[612598]))
    if call_tmp[612603]
    {
      (59034 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612610] "expr temp" "maybe param" "maybe type" "temp"
    (612613 'move' call_tmp[612610](59043 call size _mt[243] a[59012]))
    unknown call_tmp[612615] "expr temp" "maybe param" "maybe type" "temp"
    (612618 'move' call_tmp[612615](59047 call == call_tmp[612610] 1))
    unknown call_tmp[612620] "expr temp" "maybe param" "maybe type" "temp"
    (612623 'move' call_tmp[612620](59089 call _cond_test call_tmp[612615]))
    if call_tmp[612620]
    {
      unknown call_tmp[612625] "expr temp" "maybe param" "maybe type" "temp"
      (612628 'move' call_tmp[612625](59052 call a[59012] 0))
      unknown call_tmp[612630] "expr temp" "maybe param" "maybe type" "temp"
      (612633 'move' call_tmp[612630](59056 call b[59018] 0))
      unknown call_tmp[612635] "expr temp" "maybe param" "maybe type" "temp"
      (612638 'move' call_tmp[612635](59057 call * call_tmp[612625] call_tmp[612630]))
      unknown call_tmp[612640] "expr temp" "maybe param" "maybe type" "temp"
      (612643 'move' call_tmp[612640](59059 call _build_tuple call_tmp[612635]))
      (508434 'move' ret[508429](508433 'deref' call_tmp[612640]))
      gotoReturn _end_*[508427] _end_*[508427]
    }
    {
      unknown call_tmp[612645] "expr temp" "maybe param" "maybe type" "temp"
      (612648 'move' call_tmp[612645](59066 call a[59012] 0))
      unknown call_tmp[612650] "expr temp" "maybe param" "maybe type" "temp"
      (612653 'move' call_tmp[612650](59070 call b[59018] 0))
      unknown call_tmp[612655] "expr temp" "maybe param" "maybe type" "temp"
      (612658 'move' call_tmp[612655](59071 call * call_tmp[612645] call_tmp[612650]))
      unknown call_tmp[612660] "expr temp" "maybe param" "maybe type" "temp"
      (612663 'move' call_tmp[612660](59076 call chpl__tupleRest a[59012]))
      unknown call_tmp[612665] "expr temp" "maybe param" "maybe type" "temp"
      (612668 'move' call_tmp[612665](59080 call chpl__tupleRest b[59018]))
      unknown call_tmp[612670] "expr temp" "maybe param" "maybe type" "temp"
      (612673 'move' call_tmp[612670](59081 call * call_tmp[612660] call_tmp[612665]))
      unknown call_tmp[612675] "expr temp" "maybe param" "maybe type" "temp"
      (612678 'move' call_tmp[612675](59085 call _build_tuple call_tmp[612655](59083 'expand_tuple' call_tmp[612670])))
      (508439 'move' ret[508429](508438 'deref' call_tmp[612675]))
      gotoReturn _end_*[508427] _end_*[508427]
    }
    label _end_*[508427]
    (508431 return ret[508429])
  }
  function /[59103](arg a[59100]:_tuple[56202](?), arg b[59106]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508445] "RVV" "temp"
    unknown call_tmp[612682] "expr temp" "maybe param" "maybe type" "temp"
    (612685 'move' call_tmp[612682](59115 call size _mt[243] a[59100]))
    unknown call_tmp[612689] "expr temp" "maybe param" "maybe type" "temp"
    (612692 'move' call_tmp[612689](59119 call size _mt[243] b[59106]))
    unknown call_tmp[612694] "expr temp" "maybe param" "maybe type" "temp"
    (612697 'move' call_tmp[612694](59122 call != call_tmp[612682] call_tmp[612689]))
    unknown call_tmp[612699] "expr temp" "maybe param" "maybe type" "temp"
    (612702 'move' call_tmp[612699](59145 call _cond_test call_tmp[612694]))
    if call_tmp[612699]
    {
      (59143 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491638] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612704] "expr temp" "maybe param" "maybe type" "temp"
      (612707 'move' call_tmp[612704](59158 call a[59100] 0))
      unknown call_tmp[612709] "expr temp" "maybe param" "maybe type" "temp"
      (612712 'move' call_tmp[612709](59162 call b[59106] 0))
      unknown call_tmp[612714] "expr temp" "maybe param" "maybe type" "temp"
      (612717 'move' call_tmp[612714](59163 call / call_tmp[612704] call_tmp[612709]))
      (491642 'move' call_type_tmp[491638](59165 'typeof' call_tmp[612714]))
    }
    unknown result[59168] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612721] "expr temp" "maybe param" "maybe type" "temp"
    (612724 'move' call_tmp[612721](59152 call size _mt[243] a[59100]))
    unknown call_tmp[612726] "expr temp" "maybe param" "maybe type" "temp"
    (612729 'move' call_tmp[612726](59166 call * call_tmp[612721] call_type_tmp[491638]))
    (540894 'default init var' result[59168] call_tmp[612726])
    (59171 'end of statement')
    {
      unknown d[59199] "dead at end of block" "insert auto destroy"
      (540896 'init var' d[59199] 0)
      (474989 'end of statement')
      unknown tmp[59200] "maybe param" "temp"
      unknown call_tmp[612733] "expr temp" "maybe param" "maybe type" "temp"
      (612736 'move' call_tmp[612733](59174 call size _mt[243] a[59100]))
      unknown call_tmp[612738] "expr temp" "maybe param" "maybe type" "temp"
      (612741 'move' call_tmp[612738](59178 call - call_tmp[612733] 1))
      (59212 'move' tmp[59200](59210 call chpl_compute_low_param_loop_bound 0 call_tmp[612738]))
      unknown tmp[59201] "maybe param" "temp"
      unknown call_tmp[612745] "expr temp" "maybe param" "maybe type" "temp"
      (612748 'move' call_tmp[612745](59219 call size _mt[243] a[59100]))
      unknown call_tmp[612750] "expr temp" "maybe param" "maybe type" "temp"
      (612753 'move' call_tmp[612750](59217 call - call_tmp[612745] 1))
      (59225 'move' tmp[59201](59223 call chpl_compute_high_param_loop_bound 0 call_tmp[612750]))
      unknown tmp[59202] "maybe param" "temp"
      (59228 'move' tmp[59202] 1)
      ParamForLoop[59230]
      { d[59199] tmp[59200] tmp[59201] tmp[59202]
        unknown call_tmp[612755] "expr temp" "maybe param" "maybe type" "temp"
        (612758 'move' call_tmp[612755](59185 call result[59168] d[59199]))
        unknown call_tmp[612760] "expr temp" "maybe param" "maybe type" "temp"
        (612763 'move' call_tmp[612760](59189 call a[59100] d[59199]))
        unknown call_tmp[612765] "expr temp" "maybe param" "maybe type" "temp"
        (612768 'move' call_tmp[612765](59193 call b[59106] d[59199]))
        unknown call_tmp[612770] "expr temp" "maybe param" "maybe type" "temp"
        (612773 'move' call_tmp[612770](59194 call / call_tmp[612760] call_tmp[612765]))
        (59196 call = call_tmp[612755] call_tmp[612770])
        (474990 'end of statement' result[59168] d[59199] d[59199] d[59199])
      }
      label _unused_continueLabel[59204]
      label _breakLabel[59203]
    }
    (508450 'move' ret[508445](508449 'deref' result[59168]))
    gotoReturn _end_/[508443] _end_/[508443]
    (474995 'end of statement' result[59168])
    label _end_/[508443]
    (508447 return ret[508445])
  }
  where {
    (59113 call chpl_TwoHomogTuples a[59100] b[59106])
  }
  function /[59251](arg a[59248]:_tuple[56202](?), arg b[59254]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508456] "RVV" "temp"
    unknown call_tmp[612777] "expr temp" "maybe param" "maybe type" "temp"
    (612780 'move' call_tmp[612777](59258 call size _mt[243] a[59248]))
    unknown call_tmp[612784] "expr temp" "maybe param" "maybe type" "temp"
    (612787 'move' call_tmp[612784](59262 call size _mt[243] b[59254]))
    unknown call_tmp[612789] "expr temp" "maybe param" "maybe type" "temp"
    (612792 'move' call_tmp[612789](59265 call != call_tmp[612777] call_tmp[612784]))
    unknown call_tmp[612794] "expr temp" "maybe param" "maybe type" "temp"
    (612797 'move' call_tmp[612794](59272 call _cond_test call_tmp[612789]))
    if call_tmp[612794]
    {
      (59270 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612801] "expr temp" "maybe param" "maybe type" "temp"
    (612804 'move' call_tmp[612801](59279 call size _mt[243] a[59248]))
    unknown call_tmp[612806] "expr temp" "maybe param" "maybe type" "temp"
    (612809 'move' call_tmp[612806](59283 call == call_tmp[612801] 1))
    unknown call_tmp[612811] "expr temp" "maybe param" "maybe type" "temp"
    (612814 'move' call_tmp[612811](59325 call _cond_test call_tmp[612806]))
    if call_tmp[612811]
    {
      unknown call_tmp[612816] "expr temp" "maybe param" "maybe type" "temp"
      (612819 'move' call_tmp[612816](59288 call a[59248] 0))
      unknown call_tmp[612821] "expr temp" "maybe param" "maybe type" "temp"
      (612824 'move' call_tmp[612821](59292 call b[59254] 0))
      unknown call_tmp[612826] "expr temp" "maybe param" "maybe type" "temp"
      (612829 'move' call_tmp[612826](59293 call / call_tmp[612816] call_tmp[612821]))
      unknown call_tmp[612831] "expr temp" "maybe param" "maybe type" "temp"
      (612834 'move' call_tmp[612831](59295 call _build_tuple call_tmp[612826]))
      (508461 'move' ret[508456](508460 'deref' call_tmp[612831]))
      gotoReturn _end_/[508454] _end_/[508454]
    }
    {
      unknown call_tmp[612836] "expr temp" "maybe param" "maybe type" "temp"
      (612839 'move' call_tmp[612836](59302 call a[59248] 0))
      unknown call_tmp[612841] "expr temp" "maybe param" "maybe type" "temp"
      (612844 'move' call_tmp[612841](59306 call b[59254] 0))
      unknown call_tmp[612846] "expr temp" "maybe param" "maybe type" "temp"
      (612849 'move' call_tmp[612846](59307 call / call_tmp[612836] call_tmp[612841]))
      unknown call_tmp[612851] "expr temp" "maybe param" "maybe type" "temp"
      (612854 'move' call_tmp[612851](59312 call chpl__tupleRest a[59248]))
      unknown call_tmp[612856] "expr temp" "maybe param" "maybe type" "temp"
      (612859 'move' call_tmp[612856](59316 call chpl__tupleRest b[59254]))
      unknown call_tmp[612861] "expr temp" "maybe param" "maybe type" "temp"
      (612864 'move' call_tmp[612861](59317 call / call_tmp[612851] call_tmp[612856]))
      unknown call_tmp[612866] "expr temp" "maybe param" "maybe type" "temp"
      (612869 'move' call_tmp[612866](59321 call _build_tuple call_tmp[612846](59319 'expand_tuple' call_tmp[612861])))
      (508466 'move' ret[508456](508465 'deref' call_tmp[612866]))
      gotoReturn _end_/[508454] _end_/[508454]
    }
    label _end_/[508454]
    (508458 return ret[508456])
  }
  function %[59339](arg a[59336]:_tuple[56202](?), arg b[59342]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508472] "RVV" "temp"
    unknown call_tmp[612873] "expr temp" "maybe param" "maybe type" "temp"
    (612876 'move' call_tmp[612873](59351 call size _mt[243] a[59336]))
    unknown call_tmp[612880] "expr temp" "maybe param" "maybe type" "temp"
    (612883 'move' call_tmp[612880](59355 call size _mt[243] b[59342]))
    unknown call_tmp[612885] "expr temp" "maybe param" "maybe type" "temp"
    (612888 'move' call_tmp[612885](59358 call != call_tmp[612873] call_tmp[612880]))
    unknown call_tmp[612890] "expr temp" "maybe param" "maybe type" "temp"
    (612893 'move' call_tmp[612890](59381 call _cond_test call_tmp[612885]))
    if call_tmp[612890]
    {
      (59379 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491644] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612895] "expr temp" "maybe param" "maybe type" "temp"
      (612898 'move' call_tmp[612895](59394 call a[59336] 0))
      unknown call_tmp[612900] "expr temp" "maybe param" "maybe type" "temp"
      (612903 'move' call_tmp[612900](59398 call b[59342] 0))
      unknown call_tmp[612905] "expr temp" "maybe param" "maybe type" "temp"
      (612908 'move' call_tmp[612905](59399 call % call_tmp[612895] call_tmp[612900]))
      (491648 'move' call_type_tmp[491644](59401 'typeof' call_tmp[612905]))
    }
    unknown result[59404] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612912] "expr temp" "maybe param" "maybe type" "temp"
    (612915 'move' call_tmp[612912](59388 call size _mt[243] a[59336]))
    unknown call_tmp[612917] "expr temp" "maybe param" "maybe type" "temp"
    (612920 'move' call_tmp[612917](59402 call * call_tmp[612912] call_type_tmp[491644]))
    (540898 'default init var' result[59404] call_tmp[612917])
    (59407 'end of statement')
    {
      unknown d[59435] "dead at end of block" "insert auto destroy"
      (540900 'init var' d[59435] 0)
      (475001 'end of statement')
      unknown tmp[59436] "maybe param" "temp"
      unknown call_tmp[612924] "expr temp" "maybe param" "maybe type" "temp"
      (612927 'move' call_tmp[612924](59410 call size _mt[243] a[59336]))
      unknown call_tmp[612929] "expr temp" "maybe param" "maybe type" "temp"
      (612932 'move' call_tmp[612929](59414 call - call_tmp[612924] 1))
      (59448 'move' tmp[59436](59446 call chpl_compute_low_param_loop_bound 0 call_tmp[612929]))
      unknown tmp[59437] "maybe param" "temp"
      unknown call_tmp[612936] "expr temp" "maybe param" "maybe type" "temp"
      (612939 'move' call_tmp[612936](59455 call size _mt[243] a[59336]))
      unknown call_tmp[612941] "expr temp" "maybe param" "maybe type" "temp"
      (612944 'move' call_tmp[612941](59453 call - call_tmp[612936] 1))
      (59461 'move' tmp[59437](59459 call chpl_compute_high_param_loop_bound 0 call_tmp[612941]))
      unknown tmp[59438] "maybe param" "temp"
      (59464 'move' tmp[59438] 1)
      ParamForLoop[59466]
      { d[59435] tmp[59436] tmp[59437] tmp[59438]
        unknown call_tmp[612946] "expr temp" "maybe param" "maybe type" "temp"
        (612949 'move' call_tmp[612946](59421 call result[59404] d[59435]))
        unknown call_tmp[612951] "expr temp" "maybe param" "maybe type" "temp"
        (612954 'move' call_tmp[612951](59425 call a[59336] d[59435]))
        unknown call_tmp[612956] "expr temp" "maybe param" "maybe type" "temp"
        (612959 'move' call_tmp[612956](59429 call b[59342] d[59435]))
        unknown call_tmp[612961] "expr temp" "maybe param" "maybe type" "temp"
        (612964 'move' call_tmp[612961](59430 call % call_tmp[612951] call_tmp[612956]))
        (59432 call = call_tmp[612946] call_tmp[612961])
        (475002 'end of statement' result[59404] d[59435] d[59435] d[59435])
      }
      label _unused_continueLabel[59440]
      label _breakLabel[59439]
    }
    (508477 'move' ret[508472](508476 'deref' result[59404]))
    gotoReturn _end_%[508470] _end_%[508470]
    (475007 'end of statement' result[59404])
    label _end_%[508470]
    (508474 return ret[508472])
  }
  where {
    (59349 call chpl_TwoHomogTuples a[59336] b[59342])
  }
  function %[59487](arg a[59484]:_tuple[56202](?), arg b[59490]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508483] "RVV" "temp"
    unknown call_tmp[612968] "expr temp" "maybe param" "maybe type" "temp"
    (612971 'move' call_tmp[612968](59494 call size _mt[243] a[59484]))
    unknown call_tmp[612975] "expr temp" "maybe param" "maybe type" "temp"
    (612978 'move' call_tmp[612975](59498 call size _mt[243] b[59490]))
    unknown call_tmp[612980] "expr temp" "maybe param" "maybe type" "temp"
    (612983 'move' call_tmp[612980](59501 call != call_tmp[612968] call_tmp[612975]))
    unknown call_tmp[612985] "expr temp" "maybe param" "maybe type" "temp"
    (612988 'move' call_tmp[612985](59508 call _cond_test call_tmp[612980]))
    if call_tmp[612985]
    {
      (59506 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[612992] "expr temp" "maybe param" "maybe type" "temp"
    (612995 'move' call_tmp[612992](59515 call size _mt[243] a[59484]))
    unknown call_tmp[612997] "expr temp" "maybe param" "maybe type" "temp"
    (613000 'move' call_tmp[612997](59519 call == call_tmp[612992] 1))
    unknown call_tmp[613002] "expr temp" "maybe param" "maybe type" "temp"
    (613005 'move' call_tmp[613002](59561 call _cond_test call_tmp[612997]))
    if call_tmp[613002]
    {
      unknown call_tmp[613007] "expr temp" "maybe param" "maybe type" "temp"
      (613010 'move' call_tmp[613007](59524 call a[59484] 0))
      unknown call_tmp[613012] "expr temp" "maybe param" "maybe type" "temp"
      (613015 'move' call_tmp[613012](59528 call b[59490] 0))
      unknown call_tmp[613017] "expr temp" "maybe param" "maybe type" "temp"
      (613020 'move' call_tmp[613017](59529 call % call_tmp[613007] call_tmp[613012]))
      unknown call_tmp[613022] "expr temp" "maybe param" "maybe type" "temp"
      (613025 'move' call_tmp[613022](59531 call _build_tuple call_tmp[613017]))
      (508488 'move' ret[508483](508487 'deref' call_tmp[613022]))
      gotoReturn _end_%[508481] _end_%[508481]
    }
    {
      unknown call_tmp[613027] "expr temp" "maybe param" "maybe type" "temp"
      (613030 'move' call_tmp[613027](59538 call a[59484] 0))
      unknown call_tmp[613032] "expr temp" "maybe param" "maybe type" "temp"
      (613035 'move' call_tmp[613032](59542 call b[59490] 0))
      unknown call_tmp[613037] "expr temp" "maybe param" "maybe type" "temp"
      (613040 'move' call_tmp[613037](59543 call % call_tmp[613027] call_tmp[613032]))
      unknown call_tmp[613042] "expr temp" "maybe param" "maybe type" "temp"
      (613045 'move' call_tmp[613042](59548 call chpl__tupleRest a[59484]))
      unknown call_tmp[613047] "expr temp" "maybe param" "maybe type" "temp"
      (613050 'move' call_tmp[613047](59552 call chpl__tupleRest b[59490]))
      unknown call_tmp[613052] "expr temp" "maybe param" "maybe type" "temp"
      (613055 'move' call_tmp[613052](59553 call % call_tmp[613042] call_tmp[613047]))
      unknown call_tmp[613057] "expr temp" "maybe param" "maybe type" "temp"
      (613060 'move' call_tmp[613057](59557 call _build_tuple call_tmp[613037](59555 'expand_tuple' call_tmp[613052])))
      (508493 'move' ret[508483](508492 'deref' call_tmp[613057]))
      gotoReturn _end_%[508481] _end_%[508481]
    }
    label _end_%[508481]
    (508485 return ret[508483])
  }
  function **[59575](arg a[59572]:_tuple[56202](?), arg b[59578]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508499] "RVV" "temp"
    unknown call_tmp[613064] "expr temp" "maybe param" "maybe type" "temp"
    (613067 'move' call_tmp[613064](59587 call size _mt[243] a[59572]))
    unknown call_tmp[613071] "expr temp" "maybe param" "maybe type" "temp"
    (613074 'move' call_tmp[613071](59591 call size _mt[243] b[59578]))
    unknown call_tmp[613076] "expr temp" "maybe param" "maybe type" "temp"
    (613079 'move' call_tmp[613076](59594 call != call_tmp[613064] call_tmp[613071]))
    unknown call_tmp[613081] "expr temp" "maybe param" "maybe type" "temp"
    (613084 'move' call_tmp[613081](59617 call _cond_test call_tmp[613076]))
    if call_tmp[613081]
    {
      (59615 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491650] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613086] "expr temp" "maybe param" "maybe type" "temp"
      (613089 'move' call_tmp[613086](59630 call a[59572] 0))
      unknown call_tmp[613091] "expr temp" "maybe param" "maybe type" "temp"
      (613094 'move' call_tmp[613091](59634 call b[59578] 0))
      unknown call_tmp[613096] "expr temp" "maybe param" "maybe type" "temp"
      (613099 'move' call_tmp[613096](59635 call ** call_tmp[613086] call_tmp[613091]))
      (491654 'move' call_type_tmp[491650](59637 'typeof' call_tmp[613096]))
    }
    unknown result[59640] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613103] "expr temp" "maybe param" "maybe type" "temp"
    (613106 'move' call_tmp[613103](59624 call size _mt[243] a[59572]))
    unknown call_tmp[613108] "expr temp" "maybe param" "maybe type" "temp"
    (613111 'move' call_tmp[613108](59638 call * call_tmp[613103] call_type_tmp[491650]))
    (540902 'default init var' result[59640] call_tmp[613108])
    (59643 'end of statement')
    {
      unknown d[59671] "dead at end of block" "insert auto destroy"
      (540904 'init var' d[59671] 0)
      (475013 'end of statement')
      unknown tmp[59672] "maybe param" "temp"
      unknown call_tmp[613115] "expr temp" "maybe param" "maybe type" "temp"
      (613118 'move' call_tmp[613115](59646 call size _mt[243] a[59572]))
      unknown call_tmp[613120] "expr temp" "maybe param" "maybe type" "temp"
      (613123 'move' call_tmp[613120](59650 call - call_tmp[613115] 1))
      (59684 'move' tmp[59672](59682 call chpl_compute_low_param_loop_bound 0 call_tmp[613120]))
      unknown tmp[59673] "maybe param" "temp"
      unknown call_tmp[613127] "expr temp" "maybe param" "maybe type" "temp"
      (613130 'move' call_tmp[613127](59691 call size _mt[243] a[59572]))
      unknown call_tmp[613132] "expr temp" "maybe param" "maybe type" "temp"
      (613135 'move' call_tmp[613132](59689 call - call_tmp[613127] 1))
      (59697 'move' tmp[59673](59695 call chpl_compute_high_param_loop_bound 0 call_tmp[613132]))
      unknown tmp[59674] "maybe param" "temp"
      (59700 'move' tmp[59674] 1)
      ParamForLoop[59702]
      { d[59671] tmp[59672] tmp[59673] tmp[59674]
        unknown call_tmp[613137] "expr temp" "maybe param" "maybe type" "temp"
        (613140 'move' call_tmp[613137](59657 call result[59640] d[59671]))
        unknown call_tmp[613142] "expr temp" "maybe param" "maybe type" "temp"
        (613145 'move' call_tmp[613142](59661 call a[59572] d[59671]))
        unknown call_tmp[613147] "expr temp" "maybe param" "maybe type" "temp"
        (613150 'move' call_tmp[613147](59665 call b[59578] d[59671]))
        unknown call_tmp[613152] "expr temp" "maybe param" "maybe type" "temp"
        (613155 'move' call_tmp[613152](59666 call ** call_tmp[613142] call_tmp[613147]))
        (59668 call = call_tmp[613137] call_tmp[613152])
        (475014 'end of statement' result[59640] d[59671] d[59671] d[59671])
      }
      label _unused_continueLabel[59676]
      label _breakLabel[59675]
    }
    (508504 'move' ret[508499](508503 'deref' result[59640]))
    gotoReturn _end_**[508497] _end_**[508497]
    (475019 'end of statement' result[59640])
    label _end_**[508497]
    (508501 return ret[508499])
  }
  where {
    (59585 call chpl_TwoHomogTuples a[59572] b[59578])
  }
  function **[59723](arg a[59720]:_tuple[56202](?), arg b[59726]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508510] "RVV" "temp"
    unknown call_tmp[613159] "expr temp" "maybe param" "maybe type" "temp"
    (613162 'move' call_tmp[613159](59730 call size _mt[243] a[59720]))
    unknown call_tmp[613166] "expr temp" "maybe param" "maybe type" "temp"
    (613169 'move' call_tmp[613166](59734 call size _mt[243] b[59726]))
    unknown call_tmp[613171] "expr temp" "maybe param" "maybe type" "temp"
    (613174 'move' call_tmp[613171](59737 call != call_tmp[613159] call_tmp[613166]))
    unknown call_tmp[613176] "expr temp" "maybe param" "maybe type" "temp"
    (613179 'move' call_tmp[613176](59744 call _cond_test call_tmp[613171]))
    if call_tmp[613176]
    {
      (59742 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613183] "expr temp" "maybe param" "maybe type" "temp"
    (613186 'move' call_tmp[613183](59751 call size _mt[243] a[59720]))
    unknown call_tmp[613188] "expr temp" "maybe param" "maybe type" "temp"
    (613191 'move' call_tmp[613188](59755 call == call_tmp[613183] 1))
    unknown call_tmp[613193] "expr temp" "maybe param" "maybe type" "temp"
    (613196 'move' call_tmp[613193](59797 call _cond_test call_tmp[613188]))
    if call_tmp[613193]
    {
      unknown call_tmp[613198] "expr temp" "maybe param" "maybe type" "temp"
      (613201 'move' call_tmp[613198](59760 call a[59720] 0))
      unknown call_tmp[613203] "expr temp" "maybe param" "maybe type" "temp"
      (613206 'move' call_tmp[613203](59764 call b[59726] 0))
      unknown call_tmp[613208] "expr temp" "maybe param" "maybe type" "temp"
      (613211 'move' call_tmp[613208](59765 call ** call_tmp[613198] call_tmp[613203]))
      unknown call_tmp[613213] "expr temp" "maybe param" "maybe type" "temp"
      (613216 'move' call_tmp[613213](59767 call _build_tuple call_tmp[613208]))
      (508515 'move' ret[508510](508514 'deref' call_tmp[613213]))
      gotoReturn _end_**[508508] _end_**[508508]
    }
    {
      unknown call_tmp[613218] "expr temp" "maybe param" "maybe type" "temp"
      (613221 'move' call_tmp[613218](59774 call a[59720] 0))
      unknown call_tmp[613223] "expr temp" "maybe param" "maybe type" "temp"
      (613226 'move' call_tmp[613223](59778 call b[59726] 0))
      unknown call_tmp[613228] "expr temp" "maybe param" "maybe type" "temp"
      (613231 'move' call_tmp[613228](59779 call ** call_tmp[613218] call_tmp[613223]))
      unknown call_tmp[613233] "expr temp" "maybe param" "maybe type" "temp"
      (613236 'move' call_tmp[613233](59784 call chpl__tupleRest a[59720]))
      unknown call_tmp[613238] "expr temp" "maybe param" "maybe type" "temp"
      (613241 'move' call_tmp[613238](59788 call chpl__tupleRest b[59726]))
      unknown call_tmp[613243] "expr temp" "maybe param" "maybe type" "temp"
      (613246 'move' call_tmp[613243](59789 call ** call_tmp[613233] call_tmp[613238]))
      unknown call_tmp[613248] "expr temp" "maybe param" "maybe type" "temp"
      (613251 'move' call_tmp[613248](59793 call _build_tuple call_tmp[613228](59791 'expand_tuple' call_tmp[613243])))
      (508520 'move' ret[508510](508519 'deref' call_tmp[613248]))
      gotoReturn _end_**[508508] _end_**[508508]
    }
    label _end_**[508508]
    (508512 return ret[508510])
  }
  function &[59811](arg a[59808]:_tuple[56202](?), arg b[59814]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508526] "RVV" "temp"
    unknown call_tmp[613255] "expr temp" "maybe param" "maybe type" "temp"
    (613258 'move' call_tmp[613255](59823 call size _mt[243] a[59808]))
    unknown call_tmp[613262] "expr temp" "maybe param" "maybe type" "temp"
    (613265 'move' call_tmp[613262](59827 call size _mt[243] b[59814]))
    unknown call_tmp[613267] "expr temp" "maybe param" "maybe type" "temp"
    (613270 'move' call_tmp[613267](59830 call != call_tmp[613255] call_tmp[613262]))
    unknown call_tmp[613272] "expr temp" "maybe param" "maybe type" "temp"
    (613275 'move' call_tmp[613272](59853 call _cond_test call_tmp[613267]))
    if call_tmp[613272]
    {
      (59851 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491656] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613277] "expr temp" "maybe param" "maybe type" "temp"
      (613280 'move' call_tmp[613277](59866 call a[59808] 0))
      unknown call_tmp[613282] "expr temp" "maybe param" "maybe type" "temp"
      (613285 'move' call_tmp[613282](59870 call b[59814] 0))
      unknown call_tmp[613287] "expr temp" "maybe param" "maybe type" "temp"
      (613290 'move' call_tmp[613287](59871 call & call_tmp[613277] call_tmp[613282]))
      (491660 'move' call_type_tmp[491656](59873 'typeof' call_tmp[613287]))
    }
    unknown result[59876] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613294] "expr temp" "maybe param" "maybe type" "temp"
    (613297 'move' call_tmp[613294](59860 call size _mt[243] a[59808]))
    unknown call_tmp[613299] "expr temp" "maybe param" "maybe type" "temp"
    (613302 'move' call_tmp[613299](59874 call * call_tmp[613294] call_type_tmp[491656]))
    (540906 'default init var' result[59876] call_tmp[613299])
    (59879 'end of statement')
    {
      unknown d[59907] "dead at end of block" "insert auto destroy"
      (540908 'init var' d[59907] 0)
      (475025 'end of statement')
      unknown tmp[59908] "maybe param" "temp"
      unknown call_tmp[613306] "expr temp" "maybe param" "maybe type" "temp"
      (613309 'move' call_tmp[613306](59882 call size _mt[243] a[59808]))
      unknown call_tmp[613311] "expr temp" "maybe param" "maybe type" "temp"
      (613314 'move' call_tmp[613311](59886 call - call_tmp[613306] 1))
      (59920 'move' tmp[59908](59918 call chpl_compute_low_param_loop_bound 0 call_tmp[613311]))
      unknown tmp[59909] "maybe param" "temp"
      unknown call_tmp[613318] "expr temp" "maybe param" "maybe type" "temp"
      (613321 'move' call_tmp[613318](59927 call size _mt[243] a[59808]))
      unknown call_tmp[613323] "expr temp" "maybe param" "maybe type" "temp"
      (613326 'move' call_tmp[613323](59925 call - call_tmp[613318] 1))
      (59933 'move' tmp[59909](59931 call chpl_compute_high_param_loop_bound 0 call_tmp[613323]))
      unknown tmp[59910] "maybe param" "temp"
      (59936 'move' tmp[59910] 1)
      ParamForLoop[59938]
      { d[59907] tmp[59908] tmp[59909] tmp[59910]
        unknown call_tmp[613328] "expr temp" "maybe param" "maybe type" "temp"
        (613331 'move' call_tmp[613328](59893 call result[59876] d[59907]))
        unknown call_tmp[613333] "expr temp" "maybe param" "maybe type" "temp"
        (613336 'move' call_tmp[613333](59897 call a[59808] d[59907]))
        unknown call_tmp[613338] "expr temp" "maybe param" "maybe type" "temp"
        (613341 'move' call_tmp[613338](59901 call b[59814] d[59907]))
        unknown call_tmp[613343] "expr temp" "maybe param" "maybe type" "temp"
        (613346 'move' call_tmp[613343](59902 call & call_tmp[613333] call_tmp[613338]))
        (59904 call = call_tmp[613328] call_tmp[613343])
        (475026 'end of statement' result[59876] d[59907] d[59907] d[59907])
      }
      label _unused_continueLabel[59912]
      label _breakLabel[59911]
    }
    (508531 'move' ret[508526](508530 'deref' result[59876]))
    gotoReturn _end_&[508524] _end_&[508524]
    (475031 'end of statement' result[59876])
    label _end_&[508524]
    (508528 return ret[508526])
  }
  where {
    (59821 call chpl_TwoHomogTuples a[59808] b[59814])
  }
  function &[59959](arg a[59956]:_tuple[56202](?), arg b[59962]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508537] "RVV" "temp"
    unknown call_tmp[613350] "expr temp" "maybe param" "maybe type" "temp"
    (613353 'move' call_tmp[613350](59966 call size _mt[243] a[59956]))
    unknown call_tmp[613357] "expr temp" "maybe param" "maybe type" "temp"
    (613360 'move' call_tmp[613357](59970 call size _mt[243] b[59962]))
    unknown call_tmp[613362] "expr temp" "maybe param" "maybe type" "temp"
    (613365 'move' call_tmp[613362](59973 call != call_tmp[613350] call_tmp[613357]))
    unknown call_tmp[613367] "expr temp" "maybe param" "maybe type" "temp"
    (613370 'move' call_tmp[613367](59980 call _cond_test call_tmp[613362]))
    if call_tmp[613367]
    {
      (59978 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613374] "expr temp" "maybe param" "maybe type" "temp"
    (613377 'move' call_tmp[613374](59987 call size _mt[243] a[59956]))
    unknown call_tmp[613379] "expr temp" "maybe param" "maybe type" "temp"
    (613382 'move' call_tmp[613379](59991 call == call_tmp[613374] 1))
    unknown call_tmp[613384] "expr temp" "maybe param" "maybe type" "temp"
    (613387 'move' call_tmp[613384](60033 call _cond_test call_tmp[613379]))
    if call_tmp[613384]
    {
      unknown call_tmp[613389] "expr temp" "maybe param" "maybe type" "temp"
      (613392 'move' call_tmp[613389](59996 call a[59956] 0))
      unknown call_tmp[613394] "expr temp" "maybe param" "maybe type" "temp"
      (613397 'move' call_tmp[613394](60000 call b[59962] 0))
      unknown call_tmp[613399] "expr temp" "maybe param" "maybe type" "temp"
      (613402 'move' call_tmp[613399](60001 call & call_tmp[613389] call_tmp[613394]))
      unknown call_tmp[613404] "expr temp" "maybe param" "maybe type" "temp"
      (613407 'move' call_tmp[613404](60003 call _build_tuple call_tmp[613399]))
      (508542 'move' ret[508537](508541 'deref' call_tmp[613404]))
      gotoReturn _end_&[508535] _end_&[508535]
    }
    {
      unknown call_tmp[613409] "expr temp" "maybe param" "maybe type" "temp"
      (613412 'move' call_tmp[613409](60010 call a[59956] 0))
      unknown call_tmp[613414] "expr temp" "maybe param" "maybe type" "temp"
      (613417 'move' call_tmp[613414](60014 call b[59962] 0))
      unknown call_tmp[613419] "expr temp" "maybe param" "maybe type" "temp"
      (613422 'move' call_tmp[613419](60015 call & call_tmp[613409] call_tmp[613414]))
      unknown call_tmp[613424] "expr temp" "maybe param" "maybe type" "temp"
      (613427 'move' call_tmp[613424](60020 call chpl__tupleRest a[59956]))
      unknown call_tmp[613429] "expr temp" "maybe param" "maybe type" "temp"
      (613432 'move' call_tmp[613429](60024 call chpl__tupleRest b[59962]))
      unknown call_tmp[613434] "expr temp" "maybe param" "maybe type" "temp"
      (613437 'move' call_tmp[613434](60025 call & call_tmp[613424] call_tmp[613429]))
      unknown call_tmp[613439] "expr temp" "maybe param" "maybe type" "temp"
      (613442 'move' call_tmp[613439](60029 call _build_tuple call_tmp[613419](60027 'expand_tuple' call_tmp[613434])))
      (508547 'move' ret[508537](508546 'deref' call_tmp[613439]))
      gotoReturn _end_&[508535] _end_&[508535]
    }
    label _end_&[508535]
    (508539 return ret[508537])
  }
  function |[60047](arg a[60044]:_tuple[56202](?), arg b[60050]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508553] "RVV" "temp"
    unknown call_tmp[613446] "expr temp" "maybe param" "maybe type" "temp"
    (613449 'move' call_tmp[613446](60059 call size _mt[243] a[60044]))
    unknown call_tmp[613453] "expr temp" "maybe param" "maybe type" "temp"
    (613456 'move' call_tmp[613453](60063 call size _mt[243] b[60050]))
    unknown call_tmp[613458] "expr temp" "maybe param" "maybe type" "temp"
    (613461 'move' call_tmp[613458](60066 call != call_tmp[613446] call_tmp[613453]))
    unknown call_tmp[613463] "expr temp" "maybe param" "maybe type" "temp"
    (613466 'move' call_tmp[613463](60089 call _cond_test call_tmp[613458]))
    if call_tmp[613463]
    {
      (60087 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491662] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613468] "expr temp" "maybe param" "maybe type" "temp"
      (613471 'move' call_tmp[613468](60102 call a[60044] 0))
      unknown call_tmp[613473] "expr temp" "maybe param" "maybe type" "temp"
      (613476 'move' call_tmp[613473](60106 call b[60050] 0))
      unknown call_tmp[613478] "expr temp" "maybe param" "maybe type" "temp"
      (613481 'move' call_tmp[613478](60107 call | call_tmp[613468] call_tmp[613473]))
      (491666 'move' call_type_tmp[491662](60109 'typeof' call_tmp[613478]))
    }
    unknown result[60112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613485] "expr temp" "maybe param" "maybe type" "temp"
    (613488 'move' call_tmp[613485](60096 call size _mt[243] a[60044]))
    unknown call_tmp[613490] "expr temp" "maybe param" "maybe type" "temp"
    (613493 'move' call_tmp[613490](60110 call * call_tmp[613485] call_type_tmp[491662]))
    (540910 'default init var' result[60112] call_tmp[613490])
    (60115 'end of statement')
    {
      unknown d[60143] "dead at end of block" "insert auto destroy"
      (540912 'init var' d[60143] 0)
      (475037 'end of statement')
      unknown tmp[60144] "maybe param" "temp"
      unknown call_tmp[613497] "expr temp" "maybe param" "maybe type" "temp"
      (613500 'move' call_tmp[613497](60118 call size _mt[243] a[60044]))
      unknown call_tmp[613502] "expr temp" "maybe param" "maybe type" "temp"
      (613505 'move' call_tmp[613502](60122 call - call_tmp[613497] 1))
      (60156 'move' tmp[60144](60154 call chpl_compute_low_param_loop_bound 0 call_tmp[613502]))
      unknown tmp[60145] "maybe param" "temp"
      unknown call_tmp[613509] "expr temp" "maybe param" "maybe type" "temp"
      (613512 'move' call_tmp[613509](60163 call size _mt[243] a[60044]))
      unknown call_tmp[613514] "expr temp" "maybe param" "maybe type" "temp"
      (613517 'move' call_tmp[613514](60161 call - call_tmp[613509] 1))
      (60169 'move' tmp[60145](60167 call chpl_compute_high_param_loop_bound 0 call_tmp[613514]))
      unknown tmp[60146] "maybe param" "temp"
      (60172 'move' tmp[60146] 1)
      ParamForLoop[60174]
      { d[60143] tmp[60144] tmp[60145] tmp[60146]
        unknown call_tmp[613519] "expr temp" "maybe param" "maybe type" "temp"
        (613522 'move' call_tmp[613519](60129 call result[60112] d[60143]))
        unknown call_tmp[613524] "expr temp" "maybe param" "maybe type" "temp"
        (613527 'move' call_tmp[613524](60133 call a[60044] d[60143]))
        unknown call_tmp[613529] "expr temp" "maybe param" "maybe type" "temp"
        (613532 'move' call_tmp[613529](60137 call b[60050] d[60143]))
        unknown call_tmp[613534] "expr temp" "maybe param" "maybe type" "temp"
        (613537 'move' call_tmp[613534](60138 call | call_tmp[613524] call_tmp[613529]))
        (60140 call = call_tmp[613519] call_tmp[613534])
        (475038 'end of statement' result[60112] d[60143] d[60143] d[60143])
      }
      label _unused_continueLabel[60148]
      label _breakLabel[60147]
    }
    (508558 'move' ret[508553](508557 'deref' result[60112]))
    gotoReturn _end_|[508551] _end_|[508551]
    (475043 'end of statement' result[60112])
    label _end_|[508551]
    (508555 return ret[508553])
  }
  where {
    (60057 call chpl_TwoHomogTuples a[60044] b[60050])
  }
  function |[60195](arg a[60192]:_tuple[56202](?), arg b[60198]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508564] "RVV" "temp"
    unknown call_tmp[613541] "expr temp" "maybe param" "maybe type" "temp"
    (613544 'move' call_tmp[613541](60202 call size _mt[243] a[60192]))
    unknown call_tmp[613548] "expr temp" "maybe param" "maybe type" "temp"
    (613551 'move' call_tmp[613548](60206 call size _mt[243] b[60198]))
    unknown call_tmp[613553] "expr temp" "maybe param" "maybe type" "temp"
    (613556 'move' call_tmp[613553](60209 call != call_tmp[613541] call_tmp[613548]))
    unknown call_tmp[613558] "expr temp" "maybe param" "maybe type" "temp"
    (613561 'move' call_tmp[613558](60216 call _cond_test call_tmp[613553]))
    if call_tmp[613558]
    {
      (60214 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613565] "expr temp" "maybe param" "maybe type" "temp"
    (613568 'move' call_tmp[613565](60223 call size _mt[243] a[60192]))
    unknown call_tmp[613570] "expr temp" "maybe param" "maybe type" "temp"
    (613573 'move' call_tmp[613570](60227 call == call_tmp[613565] 1))
    unknown call_tmp[613575] "expr temp" "maybe param" "maybe type" "temp"
    (613578 'move' call_tmp[613575](60269 call _cond_test call_tmp[613570]))
    if call_tmp[613575]
    {
      unknown call_tmp[613580] "expr temp" "maybe param" "maybe type" "temp"
      (613583 'move' call_tmp[613580](60232 call a[60192] 0))
      unknown call_tmp[613585] "expr temp" "maybe param" "maybe type" "temp"
      (613588 'move' call_tmp[613585](60236 call b[60198] 0))
      unknown call_tmp[613590] "expr temp" "maybe param" "maybe type" "temp"
      (613593 'move' call_tmp[613590](60237 call | call_tmp[613580] call_tmp[613585]))
      unknown call_tmp[613595] "expr temp" "maybe param" "maybe type" "temp"
      (613598 'move' call_tmp[613595](60239 call _build_tuple call_tmp[613590]))
      (508569 'move' ret[508564](508568 'deref' call_tmp[613595]))
      gotoReturn _end_|[508562] _end_|[508562]
    }
    {
      unknown call_tmp[613600] "expr temp" "maybe param" "maybe type" "temp"
      (613603 'move' call_tmp[613600](60246 call a[60192] 0))
      unknown call_tmp[613605] "expr temp" "maybe param" "maybe type" "temp"
      (613608 'move' call_tmp[613605](60250 call b[60198] 0))
      unknown call_tmp[613610] "expr temp" "maybe param" "maybe type" "temp"
      (613613 'move' call_tmp[613610](60251 call | call_tmp[613600] call_tmp[613605]))
      unknown call_tmp[613615] "expr temp" "maybe param" "maybe type" "temp"
      (613618 'move' call_tmp[613615](60256 call chpl__tupleRest a[60192]))
      unknown call_tmp[613620] "expr temp" "maybe param" "maybe type" "temp"
      (613623 'move' call_tmp[613620](60260 call chpl__tupleRest b[60198]))
      unknown call_tmp[613625] "expr temp" "maybe param" "maybe type" "temp"
      (613628 'move' call_tmp[613625](60261 call | call_tmp[613615] call_tmp[613620]))
      unknown call_tmp[613630] "expr temp" "maybe param" "maybe type" "temp"
      (613633 'move' call_tmp[613630](60265 call _build_tuple call_tmp[613610](60263 'expand_tuple' call_tmp[613625])))
      (508574 'move' ret[508564](508573 'deref' call_tmp[613630]))
      gotoReturn _end_|[508562] _end_|[508562]
    }
    label _end_|[508562]
    (508566 return ret[508564])
  }
  function ^[60283](arg a[60280]:_tuple[56202](?), arg b[60286]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508580] "RVV" "temp"
    unknown call_tmp[613637] "expr temp" "maybe param" "maybe type" "temp"
    (613640 'move' call_tmp[613637](60295 call size _mt[243] a[60280]))
    unknown call_tmp[613644] "expr temp" "maybe param" "maybe type" "temp"
    (613647 'move' call_tmp[613644](60299 call size _mt[243] b[60286]))
    unknown call_tmp[613649] "expr temp" "maybe param" "maybe type" "temp"
    (613652 'move' call_tmp[613649](60302 call != call_tmp[613637] call_tmp[613644]))
    unknown call_tmp[613654] "expr temp" "maybe param" "maybe type" "temp"
    (613657 'move' call_tmp[613654](60325 call _cond_test call_tmp[613649]))
    if call_tmp[613654]
    {
      (60323 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491668] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613659] "expr temp" "maybe param" "maybe type" "temp"
      (613662 'move' call_tmp[613659](60338 call a[60280] 0))
      unknown call_tmp[613664] "expr temp" "maybe param" "maybe type" "temp"
      (613667 'move' call_tmp[613664](60342 call b[60286] 0))
      unknown call_tmp[613669] "expr temp" "maybe param" "maybe type" "temp"
      (613672 'move' call_tmp[613669](60343 call ^ call_tmp[613659] call_tmp[613664]))
      (491672 'move' call_type_tmp[491668](60345 'typeof' call_tmp[613669]))
    }
    unknown result[60348] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613676] "expr temp" "maybe param" "maybe type" "temp"
    (613679 'move' call_tmp[613676](60332 call size _mt[243] a[60280]))
    unknown call_tmp[613681] "expr temp" "maybe param" "maybe type" "temp"
    (613684 'move' call_tmp[613681](60346 call * call_tmp[613676] call_type_tmp[491668]))
    (540914 'default init var' result[60348] call_tmp[613681])
    (60351 'end of statement')
    {
      unknown d[60379] "dead at end of block" "insert auto destroy"
      (540916 'init var' d[60379] 0)
      (475049 'end of statement')
      unknown tmp[60380] "maybe param" "temp"
      unknown call_tmp[613688] "expr temp" "maybe param" "maybe type" "temp"
      (613691 'move' call_tmp[613688](60354 call size _mt[243] a[60280]))
      unknown call_tmp[613693] "expr temp" "maybe param" "maybe type" "temp"
      (613696 'move' call_tmp[613693](60358 call - call_tmp[613688] 1))
      (60392 'move' tmp[60380](60390 call chpl_compute_low_param_loop_bound 0 call_tmp[613693]))
      unknown tmp[60381] "maybe param" "temp"
      unknown call_tmp[613700] "expr temp" "maybe param" "maybe type" "temp"
      (613703 'move' call_tmp[613700](60399 call size _mt[243] a[60280]))
      unknown call_tmp[613705] "expr temp" "maybe param" "maybe type" "temp"
      (613708 'move' call_tmp[613705](60397 call - call_tmp[613700] 1))
      (60405 'move' tmp[60381](60403 call chpl_compute_high_param_loop_bound 0 call_tmp[613705]))
      unknown tmp[60382] "maybe param" "temp"
      (60408 'move' tmp[60382] 1)
      ParamForLoop[60410]
      { d[60379] tmp[60380] tmp[60381] tmp[60382]
        unknown call_tmp[613710] "expr temp" "maybe param" "maybe type" "temp"
        (613713 'move' call_tmp[613710](60365 call result[60348] d[60379]))
        unknown call_tmp[613715] "expr temp" "maybe param" "maybe type" "temp"
        (613718 'move' call_tmp[613715](60369 call a[60280] d[60379]))
        unknown call_tmp[613720] "expr temp" "maybe param" "maybe type" "temp"
        (613723 'move' call_tmp[613720](60373 call b[60286] d[60379]))
        unknown call_tmp[613725] "expr temp" "maybe param" "maybe type" "temp"
        (613728 'move' call_tmp[613725](60374 call ^ call_tmp[613715] call_tmp[613720]))
        (60376 call = call_tmp[613710] call_tmp[613725])
        (475050 'end of statement' result[60348] d[60379] d[60379] d[60379])
      }
      label _unused_continueLabel[60384]
      label _breakLabel[60383]
    }
    (508585 'move' ret[508580](508584 'deref' result[60348]))
    gotoReturn _end_^[508578] _end_^[508578]
    (475055 'end of statement' result[60348])
    label _end_^[508578]
    (508582 return ret[508580])
  }
  where {
    (60293 call chpl_TwoHomogTuples a[60280] b[60286])
  }
  function ^[60431](arg a[60428]:_tuple[56202](?), arg b[60434]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508591] "RVV" "temp"
    unknown call_tmp[613732] "expr temp" "maybe param" "maybe type" "temp"
    (613735 'move' call_tmp[613732](60438 call size _mt[243] a[60428]))
    unknown call_tmp[613739] "expr temp" "maybe param" "maybe type" "temp"
    (613742 'move' call_tmp[613739](60442 call size _mt[243] b[60434]))
    unknown call_tmp[613744] "expr temp" "maybe param" "maybe type" "temp"
    (613747 'move' call_tmp[613744](60445 call != call_tmp[613732] call_tmp[613739]))
    unknown call_tmp[613749] "expr temp" "maybe param" "maybe type" "temp"
    (613752 'move' call_tmp[613749](60452 call _cond_test call_tmp[613744]))
    if call_tmp[613749]
    {
      (60450 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613756] "expr temp" "maybe param" "maybe type" "temp"
    (613759 'move' call_tmp[613756](60459 call size _mt[243] a[60428]))
    unknown call_tmp[613761] "expr temp" "maybe param" "maybe type" "temp"
    (613764 'move' call_tmp[613761](60463 call == call_tmp[613756] 1))
    unknown call_tmp[613766] "expr temp" "maybe param" "maybe type" "temp"
    (613769 'move' call_tmp[613766](60505 call _cond_test call_tmp[613761]))
    if call_tmp[613766]
    {
      unknown call_tmp[613771] "expr temp" "maybe param" "maybe type" "temp"
      (613774 'move' call_tmp[613771](60468 call a[60428] 0))
      unknown call_tmp[613776] "expr temp" "maybe param" "maybe type" "temp"
      (613779 'move' call_tmp[613776](60472 call b[60434] 0))
      unknown call_tmp[613781] "expr temp" "maybe param" "maybe type" "temp"
      (613784 'move' call_tmp[613781](60473 call ^ call_tmp[613771] call_tmp[613776]))
      unknown call_tmp[613786] "expr temp" "maybe param" "maybe type" "temp"
      (613789 'move' call_tmp[613786](60475 call _build_tuple call_tmp[613781]))
      (508596 'move' ret[508591](508595 'deref' call_tmp[613786]))
      gotoReturn _end_^[508589] _end_^[508589]
    }
    {
      unknown call_tmp[613791] "expr temp" "maybe param" "maybe type" "temp"
      (613794 'move' call_tmp[613791](60482 call a[60428] 0))
      unknown call_tmp[613796] "expr temp" "maybe param" "maybe type" "temp"
      (613799 'move' call_tmp[613796](60486 call b[60434] 0))
      unknown call_tmp[613801] "expr temp" "maybe param" "maybe type" "temp"
      (613804 'move' call_tmp[613801](60487 call ^ call_tmp[613791] call_tmp[613796]))
      unknown call_tmp[613806] "expr temp" "maybe param" "maybe type" "temp"
      (613809 'move' call_tmp[613806](60492 call chpl__tupleRest a[60428]))
      unknown call_tmp[613811] "expr temp" "maybe param" "maybe type" "temp"
      (613814 'move' call_tmp[613811](60496 call chpl__tupleRest b[60434]))
      unknown call_tmp[613816] "expr temp" "maybe param" "maybe type" "temp"
      (613819 'move' call_tmp[613816](60497 call ^ call_tmp[613806] call_tmp[613811]))
      unknown call_tmp[613821] "expr temp" "maybe param" "maybe type" "temp"
      (613824 'move' call_tmp[613821](60501 call _build_tuple call_tmp[613801](60499 'expand_tuple' call_tmp[613816])))
      (508601 'move' ret[508591](508600 'deref' call_tmp[613821]))
      gotoReturn _end_^[508589] _end_^[508589]
    }
    label _end_^[508589]
    (508593 return ret[508591])
  }
  function <<[60519](arg a[60516]:_tuple[56202](?), arg b[60522]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508607] "RVV" "temp"
    unknown call_tmp[613828] "expr temp" "maybe param" "maybe type" "temp"
    (613831 'move' call_tmp[613828](60531 call size _mt[243] a[60516]))
    unknown call_tmp[613835] "expr temp" "maybe param" "maybe type" "temp"
    (613838 'move' call_tmp[613835](60535 call size _mt[243] b[60522]))
    unknown call_tmp[613840] "expr temp" "maybe param" "maybe type" "temp"
    (613843 'move' call_tmp[613840](60538 call != call_tmp[613828] call_tmp[613835]))
    unknown call_tmp[613845] "expr temp" "maybe param" "maybe type" "temp"
    (613848 'move' call_tmp[613845](60561 call _cond_test call_tmp[613840]))
    if call_tmp[613845]
    {
      (60559 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491674] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613850] "expr temp" "maybe param" "maybe type" "temp"
      (613853 'move' call_tmp[613850](60574 call a[60516] 0))
      unknown call_tmp[613855] "expr temp" "maybe param" "maybe type" "temp"
      (613858 'move' call_tmp[613855](60578 call b[60522] 0))
      unknown call_tmp[613860] "expr temp" "maybe param" "maybe type" "temp"
      (613863 'move' call_tmp[613860](60579 call << call_tmp[613850] call_tmp[613855]))
      (491678 'move' call_type_tmp[491674](60581 'typeof' call_tmp[613860]))
    }
    unknown result[60584] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613867] "expr temp" "maybe param" "maybe type" "temp"
    (613870 'move' call_tmp[613867](60568 call size _mt[243] a[60516]))
    unknown call_tmp[613872] "expr temp" "maybe param" "maybe type" "temp"
    (613875 'move' call_tmp[613872](60582 call * call_tmp[613867] call_type_tmp[491674]))
    (540918 'default init var' result[60584] call_tmp[613872])
    (60587 'end of statement')
    {
      unknown d[60615] "dead at end of block" "insert auto destroy"
      (540920 'init var' d[60615] 0)
      (475061 'end of statement')
      unknown tmp[60616] "maybe param" "temp"
      unknown call_tmp[613879] "expr temp" "maybe param" "maybe type" "temp"
      (613882 'move' call_tmp[613879](60590 call size _mt[243] a[60516]))
      unknown call_tmp[613884] "expr temp" "maybe param" "maybe type" "temp"
      (613887 'move' call_tmp[613884](60594 call - call_tmp[613879] 1))
      (60628 'move' tmp[60616](60626 call chpl_compute_low_param_loop_bound 0 call_tmp[613884]))
      unknown tmp[60617] "maybe param" "temp"
      unknown call_tmp[613891] "expr temp" "maybe param" "maybe type" "temp"
      (613894 'move' call_tmp[613891](60635 call size _mt[243] a[60516]))
      unknown call_tmp[613896] "expr temp" "maybe param" "maybe type" "temp"
      (613899 'move' call_tmp[613896](60633 call - call_tmp[613891] 1))
      (60641 'move' tmp[60617](60639 call chpl_compute_high_param_loop_bound 0 call_tmp[613896]))
      unknown tmp[60618] "maybe param" "temp"
      (60644 'move' tmp[60618] 1)
      ParamForLoop[60646]
      { d[60615] tmp[60616] tmp[60617] tmp[60618]
        unknown call_tmp[613901] "expr temp" "maybe param" "maybe type" "temp"
        (613904 'move' call_tmp[613901](60601 call result[60584] d[60615]))
        unknown call_tmp[613906] "expr temp" "maybe param" "maybe type" "temp"
        (613909 'move' call_tmp[613906](60605 call a[60516] d[60615]))
        unknown call_tmp[613911] "expr temp" "maybe param" "maybe type" "temp"
        (613914 'move' call_tmp[613911](60609 call b[60522] d[60615]))
        unknown call_tmp[613916] "expr temp" "maybe param" "maybe type" "temp"
        (613919 'move' call_tmp[613916](60610 call << call_tmp[613906] call_tmp[613911]))
        (60612 call = call_tmp[613901] call_tmp[613916])
        (475062 'end of statement' result[60584] d[60615] d[60615] d[60615])
      }
      label _unused_continueLabel[60620]
      label _breakLabel[60619]
    }
    (508612 'move' ret[508607](508611 'deref' result[60584]))
    gotoReturn _end_<<[508605] _end_<<[508605]
    (475067 'end of statement' result[60584])
    label _end_<<[508605]
    (508609 return ret[508607])
  }
  where {
    (60529 call chpl_TwoHomogTuples a[60516] b[60522])
  }
  function <<[60667](arg a[60664]:_tuple[56202](?), arg b[60670]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508618] "RVV" "temp"
    unknown call_tmp[613923] "expr temp" "maybe param" "maybe type" "temp"
    (613926 'move' call_tmp[613923](60674 call size _mt[243] a[60664]))
    unknown call_tmp[613930] "expr temp" "maybe param" "maybe type" "temp"
    (613933 'move' call_tmp[613930](60678 call size _mt[243] b[60670]))
    unknown call_tmp[613935] "expr temp" "maybe param" "maybe type" "temp"
    (613938 'move' call_tmp[613935](60681 call != call_tmp[613923] call_tmp[613930]))
    unknown call_tmp[613940] "expr temp" "maybe param" "maybe type" "temp"
    (613943 'move' call_tmp[613940](60688 call _cond_test call_tmp[613935]))
    if call_tmp[613940]
    {
      (60686 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[613947] "expr temp" "maybe param" "maybe type" "temp"
    (613950 'move' call_tmp[613947](60695 call size _mt[243] a[60664]))
    unknown call_tmp[613952] "expr temp" "maybe param" "maybe type" "temp"
    (613955 'move' call_tmp[613952](60699 call == call_tmp[613947] 1))
    unknown call_tmp[613957] "expr temp" "maybe param" "maybe type" "temp"
    (613960 'move' call_tmp[613957](60741 call _cond_test call_tmp[613952]))
    if call_tmp[613957]
    {
      unknown call_tmp[613962] "expr temp" "maybe param" "maybe type" "temp"
      (613965 'move' call_tmp[613962](60704 call a[60664] 0))
      unknown call_tmp[613967] "expr temp" "maybe param" "maybe type" "temp"
      (613970 'move' call_tmp[613967](60708 call b[60670] 0))
      unknown call_tmp[613972] "expr temp" "maybe param" "maybe type" "temp"
      (613975 'move' call_tmp[613972](60709 call << call_tmp[613962] call_tmp[613967]))
      unknown call_tmp[613977] "expr temp" "maybe param" "maybe type" "temp"
      (613980 'move' call_tmp[613977](60711 call _build_tuple call_tmp[613972]))
      (508623 'move' ret[508618](508622 'deref' call_tmp[613977]))
      gotoReturn _end_<<[508616] _end_<<[508616]
    }
    {
      unknown call_tmp[613982] "expr temp" "maybe param" "maybe type" "temp"
      (613985 'move' call_tmp[613982](60718 call a[60664] 0))
      unknown call_tmp[613987] "expr temp" "maybe param" "maybe type" "temp"
      (613990 'move' call_tmp[613987](60722 call b[60670] 0))
      unknown call_tmp[613992] "expr temp" "maybe param" "maybe type" "temp"
      (613995 'move' call_tmp[613992](60723 call << call_tmp[613982] call_tmp[613987]))
      unknown call_tmp[613997] "expr temp" "maybe param" "maybe type" "temp"
      (614000 'move' call_tmp[613997](60728 call chpl__tupleRest a[60664]))
      unknown call_tmp[614002] "expr temp" "maybe param" "maybe type" "temp"
      (614005 'move' call_tmp[614002](60732 call chpl__tupleRest b[60670]))
      unknown call_tmp[614007] "expr temp" "maybe param" "maybe type" "temp"
      (614010 'move' call_tmp[614007](60733 call << call_tmp[613997] call_tmp[614002]))
      unknown call_tmp[614012] "expr temp" "maybe param" "maybe type" "temp"
      (614015 'move' call_tmp[614012](60737 call _build_tuple call_tmp[613992](60735 'expand_tuple' call_tmp[614007])))
      (508628 'move' ret[508618](508627 'deref' call_tmp[614012]))
      gotoReturn _end_<<[508616] _end_<<[508616]
    }
    label _end_<<[508616]
    (508620 return ret[508618])
  }
  function >>[60755](arg a[60752]:_tuple[56202](?), arg b[60758]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508634] "RVV" "temp"
    unknown call_tmp[614019] "expr temp" "maybe param" "maybe type" "temp"
    (614022 'move' call_tmp[614019](60767 call size _mt[243] a[60752]))
    unknown call_tmp[614026] "expr temp" "maybe param" "maybe type" "temp"
    (614029 'move' call_tmp[614026](60771 call size _mt[243] b[60758]))
    unknown call_tmp[614031] "expr temp" "maybe param" "maybe type" "temp"
    (614034 'move' call_tmp[614031](60774 call != call_tmp[614019] call_tmp[614026]))
    unknown call_tmp[614036] "expr temp" "maybe param" "maybe type" "temp"
    (614039 'move' call_tmp[614036](60797 call _cond_test call_tmp[614031]))
    if call_tmp[614036]
    {
      (60795 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491680] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614041] "expr temp" "maybe param" "maybe type" "temp"
      (614044 'move' call_tmp[614041](60810 call a[60752] 0))
      unknown call_tmp[614046] "expr temp" "maybe param" "maybe type" "temp"
      (614049 'move' call_tmp[614046](60814 call b[60758] 0))
      unknown call_tmp[614051] "expr temp" "maybe param" "maybe type" "temp"
      (614054 'move' call_tmp[614051](60815 call >> call_tmp[614041] call_tmp[614046]))
      (491684 'move' call_type_tmp[491680](60817 'typeof' call_tmp[614051]))
    }
    unknown result[60820] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614058] "expr temp" "maybe param" "maybe type" "temp"
    (614061 'move' call_tmp[614058](60804 call size _mt[243] a[60752]))
    unknown call_tmp[614063] "expr temp" "maybe param" "maybe type" "temp"
    (614066 'move' call_tmp[614063](60818 call * call_tmp[614058] call_type_tmp[491680]))
    (540922 'default init var' result[60820] call_tmp[614063])
    (60823 'end of statement')
    {
      unknown d[60851] "dead at end of block" "insert auto destroy"
      (540924 'init var' d[60851] 0)
      (475073 'end of statement')
      unknown tmp[60852] "maybe param" "temp"
      unknown call_tmp[614070] "expr temp" "maybe param" "maybe type" "temp"
      (614073 'move' call_tmp[614070](60826 call size _mt[243] a[60752]))
      unknown call_tmp[614075] "expr temp" "maybe param" "maybe type" "temp"
      (614078 'move' call_tmp[614075](60830 call - call_tmp[614070] 1))
      (60864 'move' tmp[60852](60862 call chpl_compute_low_param_loop_bound 0 call_tmp[614075]))
      unknown tmp[60853] "maybe param" "temp"
      unknown call_tmp[614082] "expr temp" "maybe param" "maybe type" "temp"
      (614085 'move' call_tmp[614082](60871 call size _mt[243] a[60752]))
      unknown call_tmp[614087] "expr temp" "maybe param" "maybe type" "temp"
      (614090 'move' call_tmp[614087](60869 call - call_tmp[614082] 1))
      (60877 'move' tmp[60853](60875 call chpl_compute_high_param_loop_bound 0 call_tmp[614087]))
      unknown tmp[60854] "maybe param" "temp"
      (60880 'move' tmp[60854] 1)
      ParamForLoop[60882]
      { d[60851] tmp[60852] tmp[60853] tmp[60854]
        unknown call_tmp[614092] "expr temp" "maybe param" "maybe type" "temp"
        (614095 'move' call_tmp[614092](60837 call result[60820] d[60851]))
        unknown call_tmp[614097] "expr temp" "maybe param" "maybe type" "temp"
        (614100 'move' call_tmp[614097](60841 call a[60752] d[60851]))
        unknown call_tmp[614102] "expr temp" "maybe param" "maybe type" "temp"
        (614105 'move' call_tmp[614102](60845 call b[60758] d[60851]))
        unknown call_tmp[614107] "expr temp" "maybe param" "maybe type" "temp"
        (614110 'move' call_tmp[614107](60846 call >> call_tmp[614097] call_tmp[614102]))
        (60848 call = call_tmp[614092] call_tmp[614107])
        (475074 'end of statement' result[60820] d[60851] d[60851] d[60851])
      }
      label _unused_continueLabel[60856]
      label _breakLabel[60855]
    }
    (508639 'move' ret[508634](508638 'deref' result[60820]))
    gotoReturn _end_>>[508632] _end_>>[508632]
    (475079 'end of statement' result[60820])
    label _end_>>[508632]
    (508636 return ret[508634])
  }
  where {
    (60765 call chpl_TwoHomogTuples a[60752] b[60758])
  }
  function >>[60903](arg a[60900]:_tuple[56202](?), arg b[60906]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508645] "RVV" "temp"
    unknown call_tmp[614114] "expr temp" "maybe param" "maybe type" "temp"
    (614117 'move' call_tmp[614114](60910 call size _mt[243] a[60900]))
    unknown call_tmp[614121] "expr temp" "maybe param" "maybe type" "temp"
    (614124 'move' call_tmp[614121](60914 call size _mt[243] b[60906]))
    unknown call_tmp[614126] "expr temp" "maybe param" "maybe type" "temp"
    (614129 'move' call_tmp[614126](60917 call != call_tmp[614114] call_tmp[614121]))
    unknown call_tmp[614131] "expr temp" "maybe param" "maybe type" "temp"
    (614134 'move' call_tmp[614131](60924 call _cond_test call_tmp[614126]))
    if call_tmp[614131]
    {
      (60922 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614138] "expr temp" "maybe param" "maybe type" "temp"
    (614141 'move' call_tmp[614138](60931 call size _mt[243] a[60900]))
    unknown call_tmp[614143] "expr temp" "maybe param" "maybe type" "temp"
    (614146 'move' call_tmp[614143](60935 call == call_tmp[614138] 1))
    unknown call_tmp[614148] "expr temp" "maybe param" "maybe type" "temp"
    (614151 'move' call_tmp[614148](60977 call _cond_test call_tmp[614143]))
    if call_tmp[614148]
    {
      unknown call_tmp[614153] "expr temp" "maybe param" "maybe type" "temp"
      (614156 'move' call_tmp[614153](60940 call a[60900] 0))
      unknown call_tmp[614158] "expr temp" "maybe param" "maybe type" "temp"
      (614161 'move' call_tmp[614158](60944 call b[60906] 0))
      unknown call_tmp[614163] "expr temp" "maybe param" "maybe type" "temp"
      (614166 'move' call_tmp[614163](60945 call >> call_tmp[614153] call_tmp[614158]))
      unknown call_tmp[614168] "expr temp" "maybe param" "maybe type" "temp"
      (614171 'move' call_tmp[614168](60947 call _build_tuple call_tmp[614163]))
      (508650 'move' ret[508645](508649 'deref' call_tmp[614168]))
      gotoReturn _end_>>[508643] _end_>>[508643]
    }
    {
      unknown call_tmp[614173] "expr temp" "maybe param" "maybe type" "temp"
      (614176 'move' call_tmp[614173](60954 call a[60900] 0))
      unknown call_tmp[614178] "expr temp" "maybe param" "maybe type" "temp"
      (614181 'move' call_tmp[614178](60958 call b[60906] 0))
      unknown call_tmp[614183] "expr temp" "maybe param" "maybe type" "temp"
      (614186 'move' call_tmp[614183](60959 call >> call_tmp[614173] call_tmp[614178]))
      unknown call_tmp[614188] "expr temp" "maybe param" "maybe type" "temp"
      (614191 'move' call_tmp[614188](60964 call chpl__tupleRest a[60900]))
      unknown call_tmp[614193] "expr temp" "maybe param" "maybe type" "temp"
      (614196 'move' call_tmp[614193](60968 call chpl__tupleRest b[60906]))
      unknown call_tmp[614198] "expr temp" "maybe param" "maybe type" "temp"
      (614201 'move' call_tmp[614198](60969 call >> call_tmp[614188] call_tmp[614193]))
      unknown call_tmp[614203] "expr temp" "maybe param" "maybe type" "temp"
      (614206 'move' call_tmp[614203](60973 call _build_tuple call_tmp[614183](60971 'expand_tuple' call_tmp[614198])))
      (508655 'move' ret[508645](508654 'deref' call_tmp[614203]))
      gotoReturn _end_>>[508643] _end_>>[508643]
    }
    label _end_>>[508643]
    (508647 return ret[508645])
  }
  function >[60991](arg a[60988]:_tuple[56202](?), arg b[60994]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508661] "RVV" "temp"
    unknown call_tmp[614210] "expr temp" "maybe param" "maybe type" "temp"
    (614213 'move' call_tmp[614210](60998 call size _mt[243] a[60988]))
    unknown call_tmp[614217] "expr temp" "maybe param" "maybe type" "temp"
    (614220 'move' call_tmp[614217](61002 call size _mt[243] b[60994]))
    unknown call_tmp[614222] "expr temp" "maybe param" "maybe type" "temp"
    (614225 'move' call_tmp[614222](61005 call != call_tmp[614210] call_tmp[614217]))
    unknown call_tmp[614227] "expr temp" "maybe param" "maybe type" "temp"
    (614230 'move' call_tmp[614227](61028 call _cond_test call_tmp[614222]))
    if call_tmp[614227]
    {
      (61026 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61081] "dead at end of block" "insert auto destroy"
      (540926 'init var' i[61081] 0)
      (475085 'end of statement')
      unknown tmp[61082] "maybe param" "temp"
      unknown call_tmp[614234] "expr temp" "maybe param" "maybe type" "temp"
      (614237 'move' call_tmp[614234](61036 call size _mt[243] a[60988]))
      unknown call_tmp[614239] "expr temp" "maybe param" "maybe type" "temp"
      (614242 'move' call_tmp[614239](61040 call - call_tmp[614234] 1))
      (61094 'move' tmp[61082](61092 call chpl_compute_low_param_loop_bound 0 call_tmp[614239]))
      unknown tmp[61083] "maybe param" "temp"
      unknown call_tmp[614246] "expr temp" "maybe param" "maybe type" "temp"
      (614249 'move' call_tmp[614246](61101 call size _mt[243] a[60988]))
      unknown call_tmp[614251] "expr temp" "maybe param" "maybe type" "temp"
      (614254 'move' call_tmp[614251](61099 call - call_tmp[614246] 1))
      (61107 'move' tmp[61083](61105 call chpl_compute_high_param_loop_bound 0 call_tmp[614251]))
      unknown tmp[61084] "maybe param" "temp"
      (61110 'move' tmp[61084] 1)
      ParamForLoop[61112]
      { i[61081] tmp[61082] tmp[61083] tmp[61084]
        unknown call_tmp[614256] "expr temp" "maybe param" "maybe type" "temp"
        (614259 'move' call_tmp[614256](61047 call a[60988] i[61081]))
        unknown call_tmp[614261] "expr temp" "maybe param" "maybe type" "temp"
        (614264 'move' call_tmp[614261](61051 call b[60994] i[61081]))
        unknown call_tmp[614266] "expr temp" "maybe param" "maybe type" "temp"
        (614269 'move' call_tmp[614266](61052 call > call_tmp[614256] call_tmp[614261]))
        unknown call_tmp[614271] "expr temp" "maybe param" "maybe type" "temp"
        (614274 'move' call_tmp[614271](61075 call _cond_test call_tmp[614266]))
        if call_tmp[614271]
        {
          (508666 'move' ret[508661](508665 'deref' 1))
          gotoReturn _end_>[508659] _end_>[508659]
        }
        {
          unknown call_tmp[614276] "expr temp" "maybe param" "maybe type" "temp"
          (614279 'move' call_tmp[614276](61060 call a[60988] i[61081]))
          unknown call_tmp[614281] "expr temp" "maybe param" "maybe type" "temp"
          (614284 'move' call_tmp[614281](61064 call b[60994] i[61081]))
          unknown call_tmp[614286] "expr temp" "maybe param" "maybe type" "temp"
          (614289 'move' call_tmp[614286](61065 call < call_tmp[614276] call_tmp[614281]))
          unknown call_tmp[614291] "expr temp" "maybe param" "maybe type" "temp"
          (614294 'move' call_tmp[614291](61070 call _cond_test call_tmp[614286]))
          if call_tmp[614291]
          {
            (508671 'move' ret[508661](508670 'deref' 0))
            gotoReturn _end_>[508659] _end_>[508659]
          }
        }
      }
      label _unused_continueLabel[61086]
      label _breakLabel[61085]
    }
    (508676 'move' ret[508661](508675 'deref' 0))
    label _end_>[508659]
    (508663 return ret[508661])
  }
  function >=[61132](arg a[61129]:_tuple[56202](?), arg b[61135]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508680] "RVV" "temp"
    unknown call_tmp[614298] "expr temp" "maybe param" "maybe type" "temp"
    (614301 'move' call_tmp[614298](61139 call size _mt[243] a[61129]))
    unknown call_tmp[614305] "expr temp" "maybe param" "maybe type" "temp"
    (614308 'move' call_tmp[614305](61143 call size _mt[243] b[61135]))
    unknown call_tmp[614310] "expr temp" "maybe param" "maybe type" "temp"
    (614313 'move' call_tmp[614310](61146 call != call_tmp[614298] call_tmp[614305]))
    unknown call_tmp[614315] "expr temp" "maybe param" "maybe type" "temp"
    (614318 'move' call_tmp[614315](61169 call _cond_test call_tmp[614310]))
    if call_tmp[614315]
    {
      (61167 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61222] "dead at end of block" "insert auto destroy"
      (540928 'init var' i[61222] 0)
      (475090 'end of statement')
      unknown tmp[61223] "maybe param" "temp"
      unknown call_tmp[614322] "expr temp" "maybe param" "maybe type" "temp"
      (614325 'move' call_tmp[614322](61177 call size _mt[243] a[61129]))
      unknown call_tmp[614327] "expr temp" "maybe param" "maybe type" "temp"
      (614330 'move' call_tmp[614327](61181 call - call_tmp[614322] 1))
      (61235 'move' tmp[61223](61233 call chpl_compute_low_param_loop_bound 0 call_tmp[614327]))
      unknown tmp[61224] "maybe param" "temp"
      unknown call_tmp[614334] "expr temp" "maybe param" "maybe type" "temp"
      (614337 'move' call_tmp[614334](61242 call size _mt[243] a[61129]))
      unknown call_tmp[614339] "expr temp" "maybe param" "maybe type" "temp"
      (614342 'move' call_tmp[614339](61240 call - call_tmp[614334] 1))
      (61248 'move' tmp[61224](61246 call chpl_compute_high_param_loop_bound 0 call_tmp[614339]))
      unknown tmp[61225] "maybe param" "temp"
      (61251 'move' tmp[61225] 1)
      ParamForLoop[61253]
      { i[61222] tmp[61223] tmp[61224] tmp[61225]
        unknown call_tmp[614344] "expr temp" "maybe param" "maybe type" "temp"
        (614347 'move' call_tmp[614344](61188 call a[61129] i[61222]))
        unknown call_tmp[614349] "expr temp" "maybe param" "maybe type" "temp"
        (614352 'move' call_tmp[614349](61192 call b[61135] i[61222]))
        unknown call_tmp[614354] "expr temp" "maybe param" "maybe type" "temp"
        (614357 'move' call_tmp[614354](61193 call > call_tmp[614344] call_tmp[614349]))
        unknown call_tmp[614359] "expr temp" "maybe param" "maybe type" "temp"
        (614362 'move' call_tmp[614359](61216 call _cond_test call_tmp[614354]))
        if call_tmp[614359]
        {
          (508685 'move' ret[508680](508684 'deref' 1))
          gotoReturn _end_>=[508678] _end_>=[508678]
        }
        {
          unknown call_tmp[614364] "expr temp" "maybe param" "maybe type" "temp"
          (614367 'move' call_tmp[614364](61201 call a[61129] i[61222]))
          unknown call_tmp[614369] "expr temp" "maybe param" "maybe type" "temp"
          (614372 'move' call_tmp[614369](61205 call b[61135] i[61222]))
          unknown call_tmp[614374] "expr temp" "maybe param" "maybe type" "temp"
          (614377 'move' call_tmp[614374](61206 call < call_tmp[614364] call_tmp[614369]))
          unknown call_tmp[614379] "expr temp" "maybe param" "maybe type" "temp"
          (614382 'move' call_tmp[614379](61211 call _cond_test call_tmp[614374]))
          if call_tmp[614379]
          {
            (508690 'move' ret[508680](508689 'deref' 0))
            gotoReturn _end_>=[508678] _end_>=[508678]
          }
        }
      }
      label _unused_continueLabel[61227]
      label _breakLabel[61226]
    }
    (508695 'move' ret[508680](508694 'deref' 1))
    label _end_>=[508678]
    (508682 return ret[508680])
  }
  function <[61273](arg a[61270]:_tuple[56202](?), arg b[61276]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508699] "RVV" "temp"
    unknown call_tmp[614386] "expr temp" "maybe param" "maybe type" "temp"
    (614389 'move' call_tmp[614386](61280 call size _mt[243] a[61270]))
    unknown call_tmp[614393] "expr temp" "maybe param" "maybe type" "temp"
    (614396 'move' call_tmp[614393](61284 call size _mt[243] b[61276]))
    unknown call_tmp[614398] "expr temp" "maybe param" "maybe type" "temp"
    (614401 'move' call_tmp[614398](61287 call != call_tmp[614386] call_tmp[614393]))
    unknown call_tmp[614403] "expr temp" "maybe param" "maybe type" "temp"
    (614406 'move' call_tmp[614403](61310 call _cond_test call_tmp[614398]))
    if call_tmp[614403]
    {
      (61308 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61363] "dead at end of block" "insert auto destroy"
      (540930 'init var' i[61363] 0)
      (475095 'end of statement')
      unknown tmp[61364] "maybe param" "temp"
      unknown call_tmp[614410] "expr temp" "maybe param" "maybe type" "temp"
      (614413 'move' call_tmp[614410](61318 call size _mt[243] a[61270]))
      unknown call_tmp[614415] "expr temp" "maybe param" "maybe type" "temp"
      (614418 'move' call_tmp[614415](61322 call - call_tmp[614410] 1))
      (61376 'move' tmp[61364](61374 call chpl_compute_low_param_loop_bound 0 call_tmp[614415]))
      unknown tmp[61365] "maybe param" "temp"
      unknown call_tmp[614422] "expr temp" "maybe param" "maybe type" "temp"
      (614425 'move' call_tmp[614422](61383 call size _mt[243] a[61270]))
      unknown call_tmp[614427] "expr temp" "maybe param" "maybe type" "temp"
      (614430 'move' call_tmp[614427](61381 call - call_tmp[614422] 1))
      (61389 'move' tmp[61365](61387 call chpl_compute_high_param_loop_bound 0 call_tmp[614427]))
      unknown tmp[61366] "maybe param" "temp"
      (61392 'move' tmp[61366] 1)
      ParamForLoop[61394]
      { i[61363] tmp[61364] tmp[61365] tmp[61366]
        unknown call_tmp[614432] "expr temp" "maybe param" "maybe type" "temp"
        (614435 'move' call_tmp[614432](61329 call a[61270] i[61363]))
        unknown call_tmp[614437] "expr temp" "maybe param" "maybe type" "temp"
        (614440 'move' call_tmp[614437](61333 call b[61276] i[61363]))
        unknown call_tmp[614442] "expr temp" "maybe param" "maybe type" "temp"
        (614445 'move' call_tmp[614442](61334 call < call_tmp[614432] call_tmp[614437]))
        unknown call_tmp[614447] "expr temp" "maybe param" "maybe type" "temp"
        (614450 'move' call_tmp[614447](61357 call _cond_test call_tmp[614442]))
        if call_tmp[614447]
        {
          (508704 'move' ret[508699](508703 'deref' 1))
          gotoReturn _end_<[508697] _end_<[508697]
        }
        {
          unknown call_tmp[614452] "expr temp" "maybe param" "maybe type" "temp"
          (614455 'move' call_tmp[614452](61342 call a[61270] i[61363]))
          unknown call_tmp[614457] "expr temp" "maybe param" "maybe type" "temp"
          (614460 'move' call_tmp[614457](61346 call b[61276] i[61363]))
          unknown call_tmp[614462] "expr temp" "maybe param" "maybe type" "temp"
          (614465 'move' call_tmp[614462](61347 call > call_tmp[614452] call_tmp[614457]))
          unknown call_tmp[614467] "expr temp" "maybe param" "maybe type" "temp"
          (614470 'move' call_tmp[614467](61352 call _cond_test call_tmp[614462]))
          if call_tmp[614467]
          {
            (508709 'move' ret[508699](508708 'deref' 0))
            gotoReturn _end_<[508697] _end_<[508697]
          }
        }
      }
      label _unused_continueLabel[61368]
      label _breakLabel[61367]
    }
    (508714 'move' ret[508699](508713 'deref' 0))
    label _end_<[508697]
    (508701 return ret[508699])
  }
  function <=[61414](arg a[61411]:_tuple[56202](?), arg b[61417]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508718] "RVV" "temp"
    unknown call_tmp[614474] "expr temp" "maybe param" "maybe type" "temp"
    (614477 'move' call_tmp[614474](61421 call size _mt[243] a[61411]))
    unknown call_tmp[614481] "expr temp" "maybe param" "maybe type" "temp"
    (614484 'move' call_tmp[614481](61425 call size _mt[243] b[61417]))
    unknown call_tmp[614486] "expr temp" "maybe param" "maybe type" "temp"
    (614489 'move' call_tmp[614486](61428 call != call_tmp[614474] call_tmp[614481]))
    unknown call_tmp[614491] "expr temp" "maybe param" "maybe type" "temp"
    (614494 'move' call_tmp[614491](61451 call _cond_test call_tmp[614486]))
    if call_tmp[614491]
    {
      (61449 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61504] "dead at end of block" "insert auto destroy"
      (540932 'init var' i[61504] 0)
      (475100 'end of statement')
      unknown tmp[61505] "maybe param" "temp"
      unknown call_tmp[614498] "expr temp" "maybe param" "maybe type" "temp"
      (614501 'move' call_tmp[614498](61459 call size _mt[243] a[61411]))
      unknown call_tmp[614503] "expr temp" "maybe param" "maybe type" "temp"
      (614506 'move' call_tmp[614503](61463 call - call_tmp[614498] 1))
      (61517 'move' tmp[61505](61515 call chpl_compute_low_param_loop_bound 0 call_tmp[614503]))
      unknown tmp[61506] "maybe param" "temp"
      unknown call_tmp[614510] "expr temp" "maybe param" "maybe type" "temp"
      (614513 'move' call_tmp[614510](61524 call size _mt[243] a[61411]))
      unknown call_tmp[614515] "expr temp" "maybe param" "maybe type" "temp"
      (614518 'move' call_tmp[614515](61522 call - call_tmp[614510] 1))
      (61530 'move' tmp[61506](61528 call chpl_compute_high_param_loop_bound 0 call_tmp[614515]))
      unknown tmp[61507] "maybe param" "temp"
      (61533 'move' tmp[61507] 1)
      ParamForLoop[61535]
      { i[61504] tmp[61505] tmp[61506] tmp[61507]
        unknown call_tmp[614520] "expr temp" "maybe param" "maybe type" "temp"
        (614523 'move' call_tmp[614520](61470 call a[61411] i[61504]))
        unknown call_tmp[614525] "expr temp" "maybe param" "maybe type" "temp"
        (614528 'move' call_tmp[614525](61474 call b[61417] i[61504]))
        unknown call_tmp[614530] "expr temp" "maybe param" "maybe type" "temp"
        (614533 'move' call_tmp[614530](61475 call < call_tmp[614520] call_tmp[614525]))
        unknown call_tmp[614535] "expr temp" "maybe param" "maybe type" "temp"
        (614538 'move' call_tmp[614535](61498 call _cond_test call_tmp[614530]))
        if call_tmp[614535]
        {
          (508723 'move' ret[508718](508722 'deref' 1))
          gotoReturn _end_<=[508716] _end_<=[508716]
        }
        {
          unknown call_tmp[614540] "expr temp" "maybe param" "maybe type" "temp"
          (614543 'move' call_tmp[614540](61483 call a[61411] i[61504]))
          unknown call_tmp[614545] "expr temp" "maybe param" "maybe type" "temp"
          (614548 'move' call_tmp[614545](61487 call b[61417] i[61504]))
          unknown call_tmp[614550] "expr temp" "maybe param" "maybe type" "temp"
          (614553 'move' call_tmp[614550](61488 call > call_tmp[614540] call_tmp[614545]))
          unknown call_tmp[614555] "expr temp" "maybe param" "maybe type" "temp"
          (614558 'move' call_tmp[614555](61493 call _cond_test call_tmp[614550]))
          if call_tmp[614555]
          {
            (508728 'move' ret[508718](508727 'deref' 0))
            gotoReturn _end_<=[508716] _end_<=[508716]
          }
        }
      }
      label _unused_continueLabel[61509]
      label _breakLabel[61508]
    }
    (508733 'move' ret[508718](508732 'deref' 1))
    label _end_<=[508716]
    (508720 return ret[508718])
  }
  function ==[61555](arg a[61552]:_tuple[56202](?), arg b[61558]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508737] "RVV" "temp"
    unknown call_tmp[614562] "expr temp" "maybe param" "maybe type" "temp"
    (614565 'move' call_tmp[614562](61562 call size _mt[243] a[61552]))
    unknown call_tmp[614569] "expr temp" "maybe param" "maybe type" "temp"
    (614572 'move' call_tmp[614569](61566 call size _mt[243] b[61558]))
    unknown call_tmp[614574] "expr temp" "maybe param" "maybe type" "temp"
    (614577 'move' call_tmp[614574](61569 call != call_tmp[614562] call_tmp[614569]))
    unknown call_tmp[614579] "expr temp" "maybe param" "maybe type" "temp"
    (614582 'move' call_tmp[614579](61644 call _cond_test call_tmp[614574]))
    if call_tmp[614579]
    {
      (508742 'move' ret[508737](508741 'deref' 0))
      gotoReturn _end_==[508735] _end_==[508735]
    }
    {
      {
        unknown i[61603] "dead at end of block" "insert auto destroy"
        (540934 'init var' i[61603] 0)
        (475105 'end of statement')
        unknown tmp[61604] "maybe param" "temp"
        unknown call_tmp[614586] "expr temp" "maybe param" "maybe type" "temp"
        (614589 'move' call_tmp[614586](61577 call size _mt[243] a[61552]))
        unknown call_tmp[614591] "expr temp" "maybe param" "maybe type" "temp"
        (614594 'move' call_tmp[614591](61581 call - call_tmp[614586] 1))
        (61616 'move' tmp[61604](61614 call chpl_compute_low_param_loop_bound 0 call_tmp[614591]))
        unknown tmp[61605] "maybe param" "temp"
        unknown call_tmp[614598] "expr temp" "maybe param" "maybe type" "temp"
        (614601 'move' call_tmp[614598](61623 call size _mt[243] a[61552]))
        unknown call_tmp[614603] "expr temp" "maybe param" "maybe type" "temp"
        (614606 'move' call_tmp[614603](61621 call - call_tmp[614598] 1))
        (61629 'move' tmp[61605](61627 call chpl_compute_high_param_loop_bound 0 call_tmp[614603]))
        unknown tmp[61606] "maybe param" "temp"
        (61632 'move' tmp[61606] 1)
        ParamForLoop[61634]
        { i[61603] tmp[61604] tmp[61605] tmp[61606]
          unknown call_tmp[614608] "expr temp" "maybe param" "maybe type" "temp"
          (614611 'move' call_tmp[614608](61588 call a[61552] i[61603]))
          unknown call_tmp[614613] "expr temp" "maybe param" "maybe type" "temp"
          (614616 'move' call_tmp[614613](61592 call b[61558] i[61603]))
          unknown call_tmp[614618] "expr temp" "maybe param" "maybe type" "temp"
          (614621 'move' call_tmp[614618](61593 call != call_tmp[614608] call_tmp[614613]))
          unknown call_tmp[614623] "expr temp" "maybe param" "maybe type" "temp"
          (614626 'move' call_tmp[614623](61598 call _cond_test call_tmp[614618]))
          if call_tmp[614623]
          {
            (508747 'move' ret[508737](508746 'deref' 0))
            gotoReturn _end_==[508735] _end_==[508735]
          }
        }
        label _unused_continueLabel[61608]
        label _breakLabel[61607]
      }
    }
    (508752 'move' ret[508737](508751 'deref' 1))
    label _end_==[508735]
    (508739 return ret[508737])
  }
  function !=[61660](arg a[61657]:_tuple[56202](?), arg b[61663]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508756] "RVV" "temp"
    unknown call_tmp[614630] "expr temp" "maybe param" "maybe type" "temp"
    (614633 'move' call_tmp[614630](61667 call size _mt[243] a[61657]))
    unknown call_tmp[614637] "expr temp" "maybe param" "maybe type" "temp"
    (614640 'move' call_tmp[614637](61671 call size _mt[243] b[61663]))
    unknown call_tmp[614642] "expr temp" "maybe param" "maybe type" "temp"
    (614645 'move' call_tmp[614642](61674 call != call_tmp[614630] call_tmp[614637]))
    unknown call_tmp[614647] "expr temp" "maybe param" "maybe type" "temp"
    (614650 'move' call_tmp[614647](61749 call _cond_test call_tmp[614642]))
    if call_tmp[614647]
    {
      (508761 'move' ret[508756](508760 'deref' 1))
      gotoReturn _end_!=[508754] _end_!=[508754]
    }
    {
      {
        unknown i[61708] "dead at end of block" "insert auto destroy"
        (540936 'init var' i[61708] 0)
        (475109 'end of statement')
        unknown tmp[61709] "maybe param" "temp"
        unknown call_tmp[614654] "expr temp" "maybe param" "maybe type" "temp"
        (614657 'move' call_tmp[614654](61682 call size _mt[243] a[61657]))
        unknown call_tmp[614659] "expr temp" "maybe param" "maybe type" "temp"
        (614662 'move' call_tmp[614659](61686 call - call_tmp[614654] 1))
        (61721 'move' tmp[61709](61719 call chpl_compute_low_param_loop_bound 0 call_tmp[614659]))
        unknown tmp[61710] "maybe param" "temp"
        unknown call_tmp[614666] "expr temp" "maybe param" "maybe type" "temp"
        (614669 'move' call_tmp[614666](61728 call size _mt[243] a[61657]))
        unknown call_tmp[614671] "expr temp" "maybe param" "maybe type" "temp"
        (614674 'move' call_tmp[614671](61726 call - call_tmp[614666] 1))
        (61734 'move' tmp[61710](61732 call chpl_compute_high_param_loop_bound 0 call_tmp[614671]))
        unknown tmp[61711] "maybe param" "temp"
        (61737 'move' tmp[61711] 1)
        ParamForLoop[61739]
        { i[61708] tmp[61709] tmp[61710] tmp[61711]
          unknown call_tmp[614676] "expr temp" "maybe param" "maybe type" "temp"
          (614679 'move' call_tmp[614676](61693 call a[61657] i[61708]))
          unknown call_tmp[614681] "expr temp" "maybe param" "maybe type" "temp"
          (614684 'move' call_tmp[614681](61697 call b[61663] i[61708]))
          unknown call_tmp[614686] "expr temp" "maybe param" "maybe type" "temp"
          (614689 'move' call_tmp[614686](61698 call != call_tmp[614676] call_tmp[614681]))
          unknown call_tmp[614691] "expr temp" "maybe param" "maybe type" "temp"
          (614694 'move' call_tmp[614691](61703 call _cond_test call_tmp[614686]))
          if call_tmp[614691]
          {
            (508766 'move' ret[508756](508765 'deref' 1))
            gotoReturn _end_!=[508754] _end_!=[508754]
          }
        }
        label _unused_continueLabel[61713]
        label _breakLabel[61712]
      }
    }
    (508771 'move' ret[508756](508770 'deref' 0))
    label _end_!=[508754]
    (508758 return ret[508756])
  }
  function +[61765](arg x[61762]:_tuple[56202](?), arg y[61772] :
  unknown call_tmp[614696] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508775] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491686] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614701] "expr temp" "maybe param" "maybe type" "temp"
      (614704 'move' call_tmp[614701](61786 call x[61762] 0))
      (491690 'move' call_type_tmp[491686](61787 'typeof' call_tmp[614701]))
    }
    unknown result[61790] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614708] "expr temp" "maybe param" "maybe type" "temp"
    (614711 'move' call_tmp[614708](61780 call size _mt[243] x[61762]))
    unknown call_tmp[614713] "expr temp" "maybe param" "maybe type" "temp"
    (614716 'move' call_tmp[614713](61788 call * call_tmp[614708] call_type_tmp[491686]))
    (540938 'default init var' result[61790] call_tmp[614713])
    (61793 'end of statement')
    {
      unknown d[61819] "dead at end of block" "insert auto destroy"
      (540940 'init var' d[61819] 0)
      (475112 'end of statement')
      unknown tmp[61820] "maybe param" "temp"
      unknown call_tmp[614720] "expr temp" "maybe param" "maybe type" "temp"
      (614723 'move' call_tmp[614720](61797 call size _mt[243] x[61762]))
      unknown call_tmp[614725] "expr temp" "maybe param" "maybe type" "temp"
      (614728 'move' call_tmp[614725](61801 call - call_tmp[614720] 1))
      (61832 'move' tmp[61820](61830 call chpl_compute_low_param_loop_bound 0 call_tmp[614725]))
      unknown tmp[61821] "maybe param" "temp"
      unknown call_tmp[614732] "expr temp" "maybe param" "maybe type" "temp"
      (614735 'move' call_tmp[614732](61839 call size _mt[243] x[61762]))
      unknown call_tmp[614737] "expr temp" "maybe param" "maybe type" "temp"
      (614740 'move' call_tmp[614737](61837 call - call_tmp[614732] 1))
      (61845 'move' tmp[61821](61843 call chpl_compute_high_param_loop_bound 0 call_tmp[614737]))
      unknown tmp[61822] "maybe param" "temp"
      (61848 'move' tmp[61822] 1)
      ParamForLoop[61850]
      { d[61819] tmp[61820] tmp[61821] tmp[61822]
        unknown call_tmp[614742] "expr temp" "maybe param" "maybe type" "temp"
        (614745 'move' call_tmp[614742](61808 call result[61790] d[61819]))
        unknown call_tmp[614747] "expr temp" "maybe param" "maybe type" "temp"
        (614750 'move' call_tmp[614747](61812 call x[61762] d[61819]))
        unknown call_tmp[614752] "expr temp" "maybe param" "maybe type" "temp"
        (614755 'move' call_tmp[614752](61814 call + call_tmp[614747] y[61772]))
        (61816 call = call_tmp[614742] call_tmp[614752])
        (475113 'end of statement' result[61790] d[61819] d[61819])
      }
      label _unused_continueLabel[61824]
      label _breakLabel[61823]
    }
    (508780 'move' ret[508775](508779 'deref' result[61790]))
    gotoReturn _end_+[508773] _end_+[508773]
    (475117 'end of statement' result[61790])
    label _end_+[508773]
    (508777 return ret[508775])
  }
  where {
    (61778 call isHomogeneousTuple x[61762])
  }
  function +[61872](arg x[61869]:_any[178](?), arg y[61875]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508786] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491692] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614757] "expr temp" "maybe param" "maybe type" "temp"
      (614760 'move' call_tmp[614757](61900 call y[61875] 0))
      (491696 'move' call_type_tmp[491692](61901 'typeof' call_tmp[614757]))
    }
    unknown result[61904] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614764] "expr temp" "maybe param" "maybe type" "temp"
    (614767 'move' call_tmp[614764](61894 call size _mt[243] y[61875]))
    unknown call_tmp[614769] "expr temp" "maybe param" "maybe type" "temp"
    (614772 'move' call_tmp[614769](61902 call * call_tmp[614764] call_type_tmp[491692]))
    (540942 'default init var' result[61904] call_tmp[614769])
    (61907 'end of statement')
    {
      unknown d[61933] "dead at end of block" "insert auto destroy"
      (540944 'init var' d[61933] 0)
      (475119 'end of statement')
      unknown tmp[61934] "maybe param" "temp"
      unknown call_tmp[614776] "expr temp" "maybe param" "maybe type" "temp"
      (614779 'move' call_tmp[614776](61911 call size _mt[243] y[61875]))
      unknown call_tmp[614781] "expr temp" "maybe param" "maybe type" "temp"
      (614784 'move' call_tmp[614781](61915 call - call_tmp[614776] 1))
      (61946 'move' tmp[61934](61944 call chpl_compute_low_param_loop_bound 0 call_tmp[614781]))
      unknown tmp[61935] "maybe param" "temp"
      unknown call_tmp[614788] "expr temp" "maybe param" "maybe type" "temp"
      (614791 'move' call_tmp[614788](61953 call size _mt[243] y[61875]))
      unknown call_tmp[614793] "expr temp" "maybe param" "maybe type" "temp"
      (614796 'move' call_tmp[614793](61951 call - call_tmp[614788] 1))
      (61959 'move' tmp[61935](61957 call chpl_compute_high_param_loop_bound 0 call_tmp[614793]))
      unknown tmp[61936] "maybe param" "temp"
      (61962 'move' tmp[61936] 1)
      ParamForLoop[61964]
      { d[61933] tmp[61934] tmp[61935] tmp[61936]
        unknown call_tmp[614798] "expr temp" "maybe param" "maybe type" "temp"
        (614801 'move' call_tmp[614798](61922 call result[61904] d[61933]))
        unknown call_tmp[614803] "expr temp" "maybe param" "maybe type" "temp"
        (614806 'move' call_tmp[614803](61927 call y[61875] d[61933]))
        unknown call_tmp[614808] "expr temp" "maybe param" "maybe type" "temp"
        (614811 'move' call_tmp[614808](61928 call + x[61869] call_tmp[614803]))
        (61930 call = call_tmp[614798] call_tmp[614808])
        (475120 'end of statement' result[61904] d[61933] d[61933])
      }
      label _unused_continueLabel[61938]
      label _breakLabel[61937]
    }
    (508791 'move' ret[508786](508790 'deref' result[61904]))
    gotoReturn _end_+[508784] _end_+[508784]
    (475124 'end of statement' result[61904])
    label _end_+[508784]
    (508788 return ret[508786])
  }
  where {
    unknown tmp[419000] "maybe param" "temp"
    (419011 'move' tmp[419000](61881 call isHomogeneousTuple y[61875]))
    unknown call_tmp[614813] "expr temp" "maybe param" "maybe type" "temp"
    (614816 'move' call_tmp[614813](419013 call _cond_invalid tmp[419000]))
    if call_tmp[614813]
    {
      (419016 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555108] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555109] "maybe param" "temp"
    unknown call_tmp[614818] "expr temp" "maybe param" "maybe type" "temp"
    (614821 'move' call_tmp[614818](419001 call isTrue tmp[419000]))
    (555114 'move' tmp[555109](555112 call _cond_test call_tmp[614818]))
    if tmp[555109]
    {
      { scopeless type
        unknown call_type_tmp[491698] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614823] "expr temp" "maybe param" "maybe type" "temp"
        (614826 'move' call_tmp[614823](61888 call y[61875] 0))
        (491702 'move' call_type_tmp[491698](61889 'typeof' call_tmp[614823]))
      }
      unknown tmp[555116] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614828] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614831 'move' call_tmp[614828](454814 'typeof' x[61869]))
      unknown call_tmp[614833] "expr temp" "maybe param" "maybe type" "temp"
      (614836 'move' call_tmp[614833](354252 'is_subtype' call_type_tmp[491698] call_tmp[614828]))
      (555118 'move' tmp[555116](419004 call isTrue call_tmp[614833]))
      (555123 'move' tmp[555108](555120 '_paramFoldLogical' tmp[555109] tmp[555116]))
    }
    {
      (555128 'move' tmp[555108](555125 '_paramFoldLogical' tmp[555109] 0))
    }
    (748221 call chpl_statementLevelSymbol tmp[555108])
  }
  function -[61985](arg x[61982]:_tuple[56202](?), arg y[61992] :
  unknown call_tmp[614838] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508797] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491704] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614843] "expr temp" "maybe param" "maybe type" "temp"
      (614846 'move' call_tmp[614843](62006 call x[61982] 0))
      (491708 'move' call_type_tmp[491704](62007 'typeof' call_tmp[614843]))
    }
    unknown result[62010] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614850] "expr temp" "maybe param" "maybe type" "temp"
    (614853 'move' call_tmp[614850](62000 call size _mt[243] x[61982]))
    unknown call_tmp[614855] "expr temp" "maybe param" "maybe type" "temp"
    (614858 'move' call_tmp[614855](62008 call * call_tmp[614850] call_type_tmp[491704]))
    (540946 'default init var' result[62010] call_tmp[614855])
    (62013 'end of statement')
    {
      unknown d[62039] "dead at end of block" "insert auto destroy"
      (540948 'init var' d[62039] 0)
      (475126 'end of statement')
      unknown tmp[62040] "maybe param" "temp"
      unknown call_tmp[614862] "expr temp" "maybe param" "maybe type" "temp"
      (614865 'move' call_tmp[614862](62017 call size _mt[243] x[61982]))
      unknown call_tmp[614867] "expr temp" "maybe param" "maybe type" "temp"
      (614870 'move' call_tmp[614867](62021 call - call_tmp[614862] 1))
      (62052 'move' tmp[62040](62050 call chpl_compute_low_param_loop_bound 0 call_tmp[614867]))
      unknown tmp[62041] "maybe param" "temp"
      unknown call_tmp[614874] "expr temp" "maybe param" "maybe type" "temp"
      (614877 'move' call_tmp[614874](62059 call size _mt[243] x[61982]))
      unknown call_tmp[614879] "expr temp" "maybe param" "maybe type" "temp"
      (614882 'move' call_tmp[614879](62057 call - call_tmp[614874] 1))
      (62065 'move' tmp[62041](62063 call chpl_compute_high_param_loop_bound 0 call_tmp[614879]))
      unknown tmp[62042] "maybe param" "temp"
      (62068 'move' tmp[62042] 1)
      ParamForLoop[62070]
      { d[62039] tmp[62040] tmp[62041] tmp[62042]
        unknown call_tmp[614884] "expr temp" "maybe param" "maybe type" "temp"
        (614887 'move' call_tmp[614884](62028 call result[62010] d[62039]))
        unknown call_tmp[614889] "expr temp" "maybe param" "maybe type" "temp"
        (614892 'move' call_tmp[614889](62032 call x[61982] d[62039]))
        unknown call_tmp[614894] "expr temp" "maybe param" "maybe type" "temp"
        (614897 'move' call_tmp[614894](62034 call - call_tmp[614889] y[61992]))
        (62036 call = call_tmp[614884] call_tmp[614894])
        (475127 'end of statement' result[62010] d[62039] d[62039])
      }
      label _unused_continueLabel[62044]
      label _breakLabel[62043]
    }
    (508802 'move' ret[508797](508801 'deref' result[62010]))
    gotoReturn _end_-[508795] _end_-[508795]
    (475131 'end of statement' result[62010])
    label _end_-[508795]
    (508799 return ret[508797])
  }
  where {
    (61998 call isHomogeneousTuple x[61982])
  }
  function -[62092](arg x[62089]:_any[178](?), arg y[62095]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508808] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491710] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614899] "expr temp" "maybe param" "maybe type" "temp"
      (614902 'move' call_tmp[614899](62120 call y[62095] 0))
      (491714 'move' call_type_tmp[491710](62121 'typeof' call_tmp[614899]))
    }
    unknown result[62124] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614906] "expr temp" "maybe param" "maybe type" "temp"
    (614909 'move' call_tmp[614906](62114 call size _mt[243] y[62095]))
    unknown call_tmp[614911] "expr temp" "maybe param" "maybe type" "temp"
    (614914 'move' call_tmp[614911](62122 call * call_tmp[614906] call_type_tmp[491710]))
    (540950 'default init var' result[62124] call_tmp[614911])
    (62127 'end of statement')
    {
      unknown d[62153] "dead at end of block" "insert auto destroy"
      (540952 'init var' d[62153] 0)
      (475133 'end of statement')
      unknown tmp[62154] "maybe param" "temp"
      unknown call_tmp[614918] "expr temp" "maybe param" "maybe type" "temp"
      (614921 'move' call_tmp[614918](62131 call size _mt[243] y[62095]))
      unknown call_tmp[614923] "expr temp" "maybe param" "maybe type" "temp"
      (614926 'move' call_tmp[614923](62135 call - call_tmp[614918] 1))
      (62166 'move' tmp[62154](62164 call chpl_compute_low_param_loop_bound 0 call_tmp[614923]))
      unknown tmp[62155] "maybe param" "temp"
      unknown call_tmp[614930] "expr temp" "maybe param" "maybe type" "temp"
      (614933 'move' call_tmp[614930](62173 call size _mt[243] y[62095]))
      unknown call_tmp[614935] "expr temp" "maybe param" "maybe type" "temp"
      (614938 'move' call_tmp[614935](62171 call - call_tmp[614930] 1))
      (62179 'move' tmp[62155](62177 call chpl_compute_high_param_loop_bound 0 call_tmp[614935]))
      unknown tmp[62156] "maybe param" "temp"
      (62182 'move' tmp[62156] 1)
      ParamForLoop[62184]
      { d[62153] tmp[62154] tmp[62155] tmp[62156]
        unknown call_tmp[614940] "expr temp" "maybe param" "maybe type" "temp"
        (614943 'move' call_tmp[614940](62142 call result[62124] d[62153]))
        unknown call_tmp[614945] "expr temp" "maybe param" "maybe type" "temp"
        (614948 'move' call_tmp[614945](62147 call y[62095] d[62153]))
        unknown call_tmp[614950] "expr temp" "maybe param" "maybe type" "temp"
        (614953 'move' call_tmp[614950](62148 call - x[62089] call_tmp[614945]))
        (62150 call = call_tmp[614940] call_tmp[614950])
        (475134 'end of statement' result[62124] d[62153] d[62153])
      }
      label _unused_continueLabel[62158]
      label _breakLabel[62157]
    }
    (508813 'move' ret[508808](508812 'deref' result[62124]))
    gotoReturn _end_-[508806] _end_-[508806]
    (475138 'end of statement' result[62124])
    label _end_-[508806]
    (508810 return ret[508808])
  }
  where {
    unknown tmp[419021] "maybe param" "temp"
    (419032 'move' tmp[419021](62101 call isHomogeneousTuple y[62095]))
    unknown call_tmp[614955] "expr temp" "maybe param" "maybe type" "temp"
    (614958 'move' call_tmp[614955](419034 call _cond_invalid tmp[419021]))
    if call_tmp[614955]
    {
      (419037 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555135] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555136] "maybe param" "temp"
    unknown call_tmp[614960] "expr temp" "maybe param" "maybe type" "temp"
    (614963 'move' call_tmp[614960](419022 call isTrue tmp[419021]))
    (555141 'move' tmp[555136](555139 call _cond_test call_tmp[614960]))
    if tmp[555136]
    {
      { scopeless type
        unknown call_type_tmp[491716] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614965] "expr temp" "maybe param" "maybe type" "temp"
        (614968 'move' call_tmp[614965](62108 call y[62095] 0))
        (491720 'move' call_type_tmp[491716](62109 'typeof' call_tmp[614965]))
      }
      unknown tmp[555143] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614970] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614973 'move' call_tmp[614970](454816 'typeof' x[62089]))
      unknown call_tmp[614975] "expr temp" "maybe param" "maybe type" "temp"
      (614978 'move' call_tmp[614975](354253 'is_subtype' call_type_tmp[491716] call_tmp[614970]))
      (555145 'move' tmp[555143](419025 call isTrue call_tmp[614975]))
      (555150 'move' tmp[555135](555147 '_paramFoldLogical' tmp[555136] tmp[555143]))
    }
    {
      (555155 'move' tmp[555135](555152 '_paramFoldLogical' tmp[555136] 0))
    }
    (748223 call chpl_statementLevelSymbol tmp[555135])
  }
  function *[62205](arg x[62202]:_tuple[56202](?), arg y[62212] :
  unknown call_tmp[614980] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508819] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491722] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614985] "expr temp" "maybe param" "maybe type" "temp"
      (614988 'move' call_tmp[614985](62226 call x[62202] 0))
      (491726 'move' call_type_tmp[491722](62227 'typeof' call_tmp[614985]))
    }
    unknown result[62230] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614992] "expr temp" "maybe param" "maybe type" "temp"
    (614995 'move' call_tmp[614992](62220 call size _mt[243] x[62202]))
    unknown call_tmp[614997] "expr temp" "maybe param" "maybe type" "temp"
    (615000 'move' call_tmp[614997](62228 call * call_tmp[614992] call_type_tmp[491722]))
    (540954 'default init var' result[62230] call_tmp[614997])
    (62233 'end of statement')
    {
      unknown d[62259] "dead at end of block" "insert auto destroy"
      (540956 'init var' d[62259] 0)
      (475140 'end of statement')
      unknown tmp[62260] "maybe param" "temp"
      unknown call_tmp[615004] "expr temp" "maybe param" "maybe type" "temp"
      (615007 'move' call_tmp[615004](62237 call size _mt[243] x[62202]))
      unknown call_tmp[615009] "expr temp" "maybe param" "maybe type" "temp"
      (615012 'move' call_tmp[615009](62241 call - call_tmp[615004] 1))
      (62272 'move' tmp[62260](62270 call chpl_compute_low_param_loop_bound 0 call_tmp[615009]))
      unknown tmp[62261] "maybe param" "temp"
      unknown call_tmp[615016] "expr temp" "maybe param" "maybe type" "temp"
      (615019 'move' call_tmp[615016](62279 call size _mt[243] x[62202]))
      unknown call_tmp[615021] "expr temp" "maybe param" "maybe type" "temp"
      (615024 'move' call_tmp[615021](62277 call - call_tmp[615016] 1))
      (62285 'move' tmp[62261](62283 call chpl_compute_high_param_loop_bound 0 call_tmp[615021]))
      unknown tmp[62262] "maybe param" "temp"
      (62288 'move' tmp[62262] 1)
      ParamForLoop[62290]
      { d[62259] tmp[62260] tmp[62261] tmp[62262]
        unknown call_tmp[615026] "expr temp" "maybe param" "maybe type" "temp"
        (615029 'move' call_tmp[615026](62248 call result[62230] d[62259]))
        unknown call_tmp[615031] "expr temp" "maybe param" "maybe type" "temp"
        (615034 'move' call_tmp[615031](62252 call x[62202] d[62259]))
        unknown call_tmp[615036] "expr temp" "maybe param" "maybe type" "temp"
        (615039 'move' call_tmp[615036](62254 call * call_tmp[615031] y[62212]))
        (62256 call = call_tmp[615026] call_tmp[615036])
        (475141 'end of statement' result[62230] d[62259] d[62259])
      }
      label _unused_continueLabel[62264]
      label _breakLabel[62263]
    }
    (508824 'move' ret[508819](508823 'deref' result[62230]))
    gotoReturn _end_*[508817] _end_*[508817]
    (475145 'end of statement' result[62230])
    label _end_*[508817]
    (508821 return ret[508819])
  }
  where {
    (62218 call isHomogeneousTuple x[62202])
  }
  function *[62312](arg x[62309]:_any[178](?), arg y[62315]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508830] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491728] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615041] "expr temp" "maybe param" "maybe type" "temp"
      (615044 'move' call_tmp[615041](62340 call y[62315] 0))
      (491732 'move' call_type_tmp[491728](62341 'typeof' call_tmp[615041]))
    }
    unknown result[62344] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615048] "expr temp" "maybe param" "maybe type" "temp"
    (615051 'move' call_tmp[615048](62334 call size _mt[243] y[62315]))
    unknown call_tmp[615053] "expr temp" "maybe param" "maybe type" "temp"
    (615056 'move' call_tmp[615053](62342 call * call_tmp[615048] call_type_tmp[491728]))
    (540958 'default init var' result[62344] call_tmp[615053])
    (62347 'end of statement')
    {
      unknown d[62373] "dead at end of block" "insert auto destroy"
      (540960 'init var' d[62373] 0)
      (475147 'end of statement')
      unknown tmp[62374] "maybe param" "temp"
      unknown call_tmp[615060] "expr temp" "maybe param" "maybe type" "temp"
      (615063 'move' call_tmp[615060](62351 call size _mt[243] y[62315]))
      unknown call_tmp[615065] "expr temp" "maybe param" "maybe type" "temp"
      (615068 'move' call_tmp[615065](62355 call - call_tmp[615060] 1))
      (62386 'move' tmp[62374](62384 call chpl_compute_low_param_loop_bound 0 call_tmp[615065]))
      unknown tmp[62375] "maybe param" "temp"
      unknown call_tmp[615072] "expr temp" "maybe param" "maybe type" "temp"
      (615075 'move' call_tmp[615072](62393 call size _mt[243] y[62315]))
      unknown call_tmp[615077] "expr temp" "maybe param" "maybe type" "temp"
      (615080 'move' call_tmp[615077](62391 call - call_tmp[615072] 1))
      (62399 'move' tmp[62375](62397 call chpl_compute_high_param_loop_bound 0 call_tmp[615077]))
      unknown tmp[62376] "maybe param" "temp"
      (62402 'move' tmp[62376] 1)
      ParamForLoop[62404]
      { d[62373] tmp[62374] tmp[62375] tmp[62376]
        unknown call_tmp[615082] "expr temp" "maybe param" "maybe type" "temp"
        (615085 'move' call_tmp[615082](62362 call result[62344] d[62373]))
        unknown call_tmp[615087] "expr temp" "maybe param" "maybe type" "temp"
        (615090 'move' call_tmp[615087](62367 call y[62315] d[62373]))
        unknown call_tmp[615092] "expr temp" "maybe param" "maybe type" "temp"
        (615095 'move' call_tmp[615092](62368 call * x[62309] call_tmp[615087]))
        (62370 call = call_tmp[615082] call_tmp[615092])
        (475148 'end of statement' result[62344] d[62373] d[62373])
      }
      label _unused_continueLabel[62378]
      label _breakLabel[62377]
    }
    (508835 'move' ret[508830](508834 'deref' result[62344]))
    gotoReturn _end_*[508828] _end_*[508828]
    (475152 'end of statement' result[62344])
    label _end_*[508828]
    (508832 return ret[508830])
  }
  where {
    unknown tmp[419042] "maybe param" "temp"
    (419053 'move' tmp[419042](62321 call isHomogeneousTuple y[62315]))
    unknown call_tmp[615097] "expr temp" "maybe param" "maybe type" "temp"
    (615100 'move' call_tmp[615097](419055 call _cond_invalid tmp[419042]))
    if call_tmp[615097]
    {
      (419058 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555162] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555163] "maybe param" "temp"
    unknown call_tmp[615102] "expr temp" "maybe param" "maybe type" "temp"
    (615105 'move' call_tmp[615102](419043 call isTrue tmp[419042]))
    (555168 'move' tmp[555163](555166 call _cond_test call_tmp[615102]))
    if tmp[555163]
    {
      { scopeless type
        unknown call_type_tmp[491734] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615107] "expr temp" "maybe param" "maybe type" "temp"
        (615110 'move' call_tmp[615107](62328 call y[62315] 0))
        (491738 'move' call_type_tmp[491734](62329 'typeof' call_tmp[615107]))
      }
      unknown tmp[555170] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615112] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615115 'move' call_tmp[615112](454818 'typeof' x[62309]))
      unknown call_tmp[615117] "expr temp" "maybe param" "maybe type" "temp"
      (615120 'move' call_tmp[615117](354254 'is_subtype' call_type_tmp[491734] call_tmp[615112]))
      (555172 'move' tmp[555170](419046 call isTrue call_tmp[615117]))
      (555177 'move' tmp[555162](555174 '_paramFoldLogical' tmp[555163] tmp[555170]))
    }
    {
      (555182 'move' tmp[555162](555179 '_paramFoldLogical' tmp[555163] 0))
    }
    (748225 call chpl_statementLevelSymbol tmp[555162])
  }
  function /[62425](arg x[62422]:_tuple[56202](?), arg y[62432] :
  unknown call_tmp[615122] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508841] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491740] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615127] "expr temp" "maybe param" "maybe type" "temp"
      (615130 'move' call_tmp[615127](62446 call x[62422] 0))
      (491744 'move' call_type_tmp[491740](62447 'typeof' call_tmp[615127]))
    }
    unknown result[62450] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615134] "expr temp" "maybe param" "maybe type" "temp"
    (615137 'move' call_tmp[615134](62440 call size _mt[243] x[62422]))
    unknown call_tmp[615139] "expr temp" "maybe param" "maybe type" "temp"
    (615142 'move' call_tmp[615139](62448 call * call_tmp[615134] call_type_tmp[491740]))
    (540962 'default init var' result[62450] call_tmp[615139])
    (62453 'end of statement')
    {
      unknown d[62479] "dead at end of block" "insert auto destroy"
      (540964 'init var' d[62479] 0)
      (475154 'end of statement')
      unknown tmp[62480] "maybe param" "temp"
      unknown call_tmp[615146] "expr temp" "maybe param" "maybe type" "temp"
      (615149 'move' call_tmp[615146](62457 call size _mt[243] x[62422]))
      unknown call_tmp[615151] "expr temp" "maybe param" "maybe type" "temp"
      (615154 'move' call_tmp[615151](62461 call - call_tmp[615146] 1))
      (62492 'move' tmp[62480](62490 call chpl_compute_low_param_loop_bound 0 call_tmp[615151]))
      unknown tmp[62481] "maybe param" "temp"
      unknown call_tmp[615158] "expr temp" "maybe param" "maybe type" "temp"
      (615161 'move' call_tmp[615158](62499 call size _mt[243] x[62422]))
      unknown call_tmp[615163] "expr temp" "maybe param" "maybe type" "temp"
      (615166 'move' call_tmp[615163](62497 call - call_tmp[615158] 1))
      (62505 'move' tmp[62481](62503 call chpl_compute_high_param_loop_bound 0 call_tmp[615163]))
      unknown tmp[62482] "maybe param" "temp"
      (62508 'move' tmp[62482] 1)
      ParamForLoop[62510]
      { d[62479] tmp[62480] tmp[62481] tmp[62482]
        unknown call_tmp[615168] "expr temp" "maybe param" "maybe type" "temp"
        (615171 'move' call_tmp[615168](62468 call result[62450] d[62479]))
        unknown call_tmp[615173] "expr temp" "maybe param" "maybe type" "temp"
        (615176 'move' call_tmp[615173](62472 call x[62422] d[62479]))
        unknown call_tmp[615178] "expr temp" "maybe param" "maybe type" "temp"
        (615181 'move' call_tmp[615178](62474 call / call_tmp[615173] y[62432]))
        (62476 call = call_tmp[615168] call_tmp[615178])
        (475155 'end of statement' result[62450] d[62479] d[62479])
      }
      label _unused_continueLabel[62484]
      label _breakLabel[62483]
    }
    (508846 'move' ret[508841](508845 'deref' result[62450]))
    gotoReturn _end_/[508839] _end_/[508839]
    (475159 'end of statement' result[62450])
    label _end_/[508839]
    (508843 return ret[508841])
  }
  where {
    (62438 call isHomogeneousTuple x[62422])
  }
  function /[62532](arg x[62529]:_any[178](?), arg y[62535]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508852] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491746] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615183] "expr temp" "maybe param" "maybe type" "temp"
      (615186 'move' call_tmp[615183](62560 call y[62535] 0))
      (491750 'move' call_type_tmp[491746](62561 'typeof' call_tmp[615183]))
    }
    unknown result[62564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615190] "expr temp" "maybe param" "maybe type" "temp"
    (615193 'move' call_tmp[615190](62554 call size _mt[243] y[62535]))
    unknown call_tmp[615195] "expr temp" "maybe param" "maybe type" "temp"
    (615198 'move' call_tmp[615195](62562 call * call_tmp[615190] call_type_tmp[491746]))
    (540966 'default init var' result[62564] call_tmp[615195])
    (62567 'end of statement')
    {
      unknown d[62593] "dead at end of block" "insert auto destroy"
      (540968 'init var' d[62593] 0)
      (475161 'end of statement')
      unknown tmp[62594] "maybe param" "temp"
      unknown call_tmp[615202] "expr temp" "maybe param" "maybe type" "temp"
      (615205 'move' call_tmp[615202](62571 call size _mt[243] y[62535]))
      unknown call_tmp[615207] "expr temp" "maybe param" "maybe type" "temp"
      (615210 'move' call_tmp[615207](62575 call - call_tmp[615202] 1))
      (62606 'move' tmp[62594](62604 call chpl_compute_low_param_loop_bound 0 call_tmp[615207]))
      unknown tmp[62595] "maybe param" "temp"
      unknown call_tmp[615214] "expr temp" "maybe param" "maybe type" "temp"
      (615217 'move' call_tmp[615214](62613 call size _mt[243] y[62535]))
      unknown call_tmp[615219] "expr temp" "maybe param" "maybe type" "temp"
      (615222 'move' call_tmp[615219](62611 call - call_tmp[615214] 1))
      (62619 'move' tmp[62595](62617 call chpl_compute_high_param_loop_bound 0 call_tmp[615219]))
      unknown tmp[62596] "maybe param" "temp"
      (62622 'move' tmp[62596] 1)
      ParamForLoop[62624]
      { d[62593] tmp[62594] tmp[62595] tmp[62596]
        unknown call_tmp[615224] "expr temp" "maybe param" "maybe type" "temp"
        (615227 'move' call_tmp[615224](62582 call result[62564] d[62593]))
        unknown call_tmp[615229] "expr temp" "maybe param" "maybe type" "temp"
        (615232 'move' call_tmp[615229](62587 call y[62535] d[62593]))
        unknown call_tmp[615234] "expr temp" "maybe param" "maybe type" "temp"
        (615237 'move' call_tmp[615234](62588 call / x[62529] call_tmp[615229]))
        (62590 call = call_tmp[615224] call_tmp[615234])
        (475162 'end of statement' result[62564] d[62593] d[62593])
      }
      label _unused_continueLabel[62598]
      label _breakLabel[62597]
    }
    (508857 'move' ret[508852](508856 'deref' result[62564]))
    gotoReturn _end_/[508850] _end_/[508850]
    (475166 'end of statement' result[62564])
    label _end_/[508850]
    (508854 return ret[508852])
  }
  where {
    unknown tmp[419063] "maybe param" "temp"
    (419074 'move' tmp[419063](62541 call isHomogeneousTuple y[62535]))
    unknown call_tmp[615239] "expr temp" "maybe param" "maybe type" "temp"
    (615242 'move' call_tmp[615239](419076 call _cond_invalid tmp[419063]))
    if call_tmp[615239]
    {
      (419079 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555189] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555190] "maybe param" "temp"
    unknown call_tmp[615244] "expr temp" "maybe param" "maybe type" "temp"
    (615247 'move' call_tmp[615244](419064 call isTrue tmp[419063]))
    (555195 'move' tmp[555190](555193 call _cond_test call_tmp[615244]))
    if tmp[555190]
    {
      { scopeless type
        unknown call_type_tmp[491752] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615249] "expr temp" "maybe param" "maybe type" "temp"
        (615252 'move' call_tmp[615249](62548 call y[62535] 0))
        (491756 'move' call_type_tmp[491752](62549 'typeof' call_tmp[615249]))
      }
      unknown tmp[555197] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615254] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615257 'move' call_tmp[615254](454820 'typeof' x[62529]))
      unknown call_tmp[615259] "expr temp" "maybe param" "maybe type" "temp"
      (615262 'move' call_tmp[615259](354255 'is_subtype' call_type_tmp[491752] call_tmp[615254]))
      (555199 'move' tmp[555197](419067 call isTrue call_tmp[615259]))
      (555204 'move' tmp[555189](555201 '_paramFoldLogical' tmp[555190] tmp[555197]))
    }
    {
      (555209 'move' tmp[555189](555206 '_paramFoldLogical' tmp[555190] 0))
    }
    (748227 call chpl_statementLevelSymbol tmp[555189])
  }
  function %[62645](arg x[62642]:_tuple[56202](?), arg y[62652] :
  unknown call_tmp[615264] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508863] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491758] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615269] "expr temp" "maybe param" "maybe type" "temp"
      (615272 'move' call_tmp[615269](62666 call x[62642] 0))
      (491762 'move' call_type_tmp[491758](62667 'typeof' call_tmp[615269]))
    }
    unknown result[62670] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615276] "expr temp" "maybe param" "maybe type" "temp"
    (615279 'move' call_tmp[615276](62660 call size _mt[243] x[62642]))
    unknown call_tmp[615281] "expr temp" "maybe param" "maybe type" "temp"
    (615284 'move' call_tmp[615281](62668 call * call_tmp[615276] call_type_tmp[491758]))
    (540970 'default init var' result[62670] call_tmp[615281])
    (62673 'end of statement')
    {
      unknown d[62699] "dead at end of block" "insert auto destroy"
      (540972 'init var' d[62699] 0)
      (475168 'end of statement')
      unknown tmp[62700] "maybe param" "temp"
      unknown call_tmp[615288] "expr temp" "maybe param" "maybe type" "temp"
      (615291 'move' call_tmp[615288](62677 call size _mt[243] x[62642]))
      unknown call_tmp[615293] "expr temp" "maybe param" "maybe type" "temp"
      (615296 'move' call_tmp[615293](62681 call - call_tmp[615288] 1))
      (62712 'move' tmp[62700](62710 call chpl_compute_low_param_loop_bound 0 call_tmp[615293]))
      unknown tmp[62701] "maybe param" "temp"
      unknown call_tmp[615300] "expr temp" "maybe param" "maybe type" "temp"
      (615303 'move' call_tmp[615300](62719 call size _mt[243] x[62642]))
      unknown call_tmp[615305] "expr temp" "maybe param" "maybe type" "temp"
      (615308 'move' call_tmp[615305](62717 call - call_tmp[615300] 1))
      (62725 'move' tmp[62701](62723 call chpl_compute_high_param_loop_bound 0 call_tmp[615305]))
      unknown tmp[62702] "maybe param" "temp"
      (62728 'move' tmp[62702] 1)
      ParamForLoop[62730]
      { d[62699] tmp[62700] tmp[62701] tmp[62702]
        unknown call_tmp[615310] "expr temp" "maybe param" "maybe type" "temp"
        (615313 'move' call_tmp[615310](62688 call result[62670] d[62699]))
        unknown call_tmp[615315] "expr temp" "maybe param" "maybe type" "temp"
        (615318 'move' call_tmp[615315](62692 call x[62642] d[62699]))
        unknown call_tmp[615320] "expr temp" "maybe param" "maybe type" "temp"
        (615323 'move' call_tmp[615320](62694 call % call_tmp[615315] y[62652]))
        (62696 call = call_tmp[615310] call_tmp[615320])
        (475169 'end of statement' result[62670] d[62699] d[62699])
      }
      label _unused_continueLabel[62704]
      label _breakLabel[62703]
    }
    (508868 'move' ret[508863](508867 'deref' result[62670]))
    gotoReturn _end_%[508861] _end_%[508861]
    (475173 'end of statement' result[62670])
    label _end_%[508861]
    (508865 return ret[508863])
  }
  where {
    (62658 call isHomogeneousTuple x[62642])
  }
  function %[62752](arg x[62749]:_any[178](?), arg y[62755]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508874] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491764] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615325] "expr temp" "maybe param" "maybe type" "temp"
      (615328 'move' call_tmp[615325](62780 call y[62755] 0))
      (491768 'move' call_type_tmp[491764](62781 'typeof' call_tmp[615325]))
    }
    unknown result[62784] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615332] "expr temp" "maybe param" "maybe type" "temp"
    (615335 'move' call_tmp[615332](62774 call size _mt[243] y[62755]))
    unknown call_tmp[615337] "expr temp" "maybe param" "maybe type" "temp"
    (615340 'move' call_tmp[615337](62782 call * call_tmp[615332] call_type_tmp[491764]))
    (540974 'default init var' result[62784] call_tmp[615337])
    (62787 'end of statement')
    {
      unknown d[62813] "dead at end of block" "insert auto destroy"
      (540976 'init var' d[62813] 0)
      (475175 'end of statement')
      unknown tmp[62814] "maybe param" "temp"
      unknown call_tmp[615344] "expr temp" "maybe param" "maybe type" "temp"
      (615347 'move' call_tmp[615344](62791 call size _mt[243] y[62755]))
      unknown call_tmp[615349] "expr temp" "maybe param" "maybe type" "temp"
      (615352 'move' call_tmp[615349](62795 call - call_tmp[615344] 1))
      (62826 'move' tmp[62814](62824 call chpl_compute_low_param_loop_bound 0 call_tmp[615349]))
      unknown tmp[62815] "maybe param" "temp"
      unknown call_tmp[615356] "expr temp" "maybe param" "maybe type" "temp"
      (615359 'move' call_tmp[615356](62833 call size _mt[243] y[62755]))
      unknown call_tmp[615361] "expr temp" "maybe param" "maybe type" "temp"
      (615364 'move' call_tmp[615361](62831 call - call_tmp[615356] 1))
      (62839 'move' tmp[62815](62837 call chpl_compute_high_param_loop_bound 0 call_tmp[615361]))
      unknown tmp[62816] "maybe param" "temp"
      (62842 'move' tmp[62816] 1)
      ParamForLoop[62844]
      { d[62813] tmp[62814] tmp[62815] tmp[62816]
        unknown call_tmp[615366] "expr temp" "maybe param" "maybe type" "temp"
        (615369 'move' call_tmp[615366](62802 call result[62784] d[62813]))
        unknown call_tmp[615371] "expr temp" "maybe param" "maybe type" "temp"
        (615374 'move' call_tmp[615371](62807 call y[62755] d[62813]))
        unknown call_tmp[615376] "expr temp" "maybe param" "maybe type" "temp"
        (615379 'move' call_tmp[615376](62808 call % x[62749] call_tmp[615371]))
        (62810 call = call_tmp[615366] call_tmp[615376])
        (475176 'end of statement' result[62784] d[62813] d[62813])
      }
      label _unused_continueLabel[62818]
      label _breakLabel[62817]
    }
    (508879 'move' ret[508874](508878 'deref' result[62784]))
    gotoReturn _end_%[508872] _end_%[508872]
    (475180 'end of statement' result[62784])
    label _end_%[508872]
    (508876 return ret[508874])
  }
  where {
    unknown tmp[419084] "maybe param" "temp"
    (419095 'move' tmp[419084](62761 call isHomogeneousTuple y[62755]))
    unknown call_tmp[615381] "expr temp" "maybe param" "maybe type" "temp"
    (615384 'move' call_tmp[615381](419097 call _cond_invalid tmp[419084]))
    if call_tmp[615381]
    {
      (419100 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555216] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555217] "maybe param" "temp"
    unknown call_tmp[615386] "expr temp" "maybe param" "maybe type" "temp"
    (615389 'move' call_tmp[615386](419085 call isTrue tmp[419084]))
    (555222 'move' tmp[555217](555220 call _cond_test call_tmp[615386]))
    if tmp[555217]
    {
      { scopeless type
        unknown call_type_tmp[491770] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615391] "expr temp" "maybe param" "maybe type" "temp"
        (615394 'move' call_tmp[615391](62768 call y[62755] 0))
        (491774 'move' call_type_tmp[491770](62769 'typeof' call_tmp[615391]))
      }
      unknown tmp[555224] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615396] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615399 'move' call_tmp[615396](454822 'typeof' x[62749]))
      unknown call_tmp[615401] "expr temp" "maybe param" "maybe type" "temp"
      (615404 'move' call_tmp[615401](354256 'is_subtype' call_type_tmp[491770] call_tmp[615396]))
      (555226 'move' tmp[555224](419088 call isTrue call_tmp[615401]))
      (555231 'move' tmp[555216](555228 '_paramFoldLogical' tmp[555217] tmp[555224]))
    }
    {
      (555236 'move' tmp[555216](555233 '_paramFoldLogical' tmp[555217] 0))
    }
    (748229 call chpl_statementLevelSymbol tmp[555216])
  }
  function **[62865](arg x[62862]:_tuple[56202](?), arg y[62872] :
  unknown call_tmp[615406] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508885] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491776] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615411] "expr temp" "maybe param" "maybe type" "temp"
      (615414 'move' call_tmp[615411](62886 call x[62862] 0))
      (491780 'move' call_type_tmp[491776](62887 'typeof' call_tmp[615411]))
    }
    unknown result[62890] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615418] "expr temp" "maybe param" "maybe type" "temp"
    (615421 'move' call_tmp[615418](62880 call size _mt[243] x[62862]))
    unknown call_tmp[615423] "expr temp" "maybe param" "maybe type" "temp"
    (615426 'move' call_tmp[615423](62888 call * call_tmp[615418] call_type_tmp[491776]))
    (540978 'default init var' result[62890] call_tmp[615423])
    (62893 'end of statement')
    {
      unknown d[62919] "dead at end of block" "insert auto destroy"
      (540980 'init var' d[62919] 0)
      (475182 'end of statement')
      unknown tmp[62920] "maybe param" "temp"
      unknown call_tmp[615430] "expr temp" "maybe param" "maybe type" "temp"
      (615433 'move' call_tmp[615430](62897 call size _mt[243] x[62862]))
      unknown call_tmp[615435] "expr temp" "maybe param" "maybe type" "temp"
      (615438 'move' call_tmp[615435](62901 call - call_tmp[615430] 1))
      (62932 'move' tmp[62920](62930 call chpl_compute_low_param_loop_bound 0 call_tmp[615435]))
      unknown tmp[62921] "maybe param" "temp"
      unknown call_tmp[615442] "expr temp" "maybe param" "maybe type" "temp"
      (615445 'move' call_tmp[615442](62939 call size _mt[243] x[62862]))
      unknown call_tmp[615447] "expr temp" "maybe param" "maybe type" "temp"
      (615450 'move' call_tmp[615447](62937 call - call_tmp[615442] 1))
      (62945 'move' tmp[62921](62943 call chpl_compute_high_param_loop_bound 0 call_tmp[615447]))
      unknown tmp[62922] "maybe param" "temp"
      (62948 'move' tmp[62922] 1)
      ParamForLoop[62950]
      { d[62919] tmp[62920] tmp[62921] tmp[62922]
        unknown call_tmp[615452] "expr temp" "maybe param" "maybe type" "temp"
        (615455 'move' call_tmp[615452](62908 call result[62890] d[62919]))
        unknown call_tmp[615457] "expr temp" "maybe param" "maybe type" "temp"
        (615460 'move' call_tmp[615457](62912 call x[62862] d[62919]))
        unknown call_tmp[615462] "expr temp" "maybe param" "maybe type" "temp"
        (615465 'move' call_tmp[615462](62914 call ** call_tmp[615457] y[62872]))
        (62916 call = call_tmp[615452] call_tmp[615462])
        (475183 'end of statement' result[62890] d[62919] d[62919])
      }
      label _unused_continueLabel[62924]
      label _breakLabel[62923]
    }
    (508890 'move' ret[508885](508889 'deref' result[62890]))
    gotoReturn _end_**[508883] _end_**[508883]
    (475187 'end of statement' result[62890])
    label _end_**[508883]
    (508887 return ret[508885])
  }
  where {
    (62878 call isHomogeneousTuple x[62862])
  }
  function **[62972](arg x[62969]:_any[178](?), arg y[62975]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508896] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491782] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615467] "expr temp" "maybe param" "maybe type" "temp"
      (615470 'move' call_tmp[615467](63000 call y[62975] 0))
      (491786 'move' call_type_tmp[491782](63001 'typeof' call_tmp[615467]))
    }
    unknown result[63004] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615474] "expr temp" "maybe param" "maybe type" "temp"
    (615477 'move' call_tmp[615474](62994 call size _mt[243] y[62975]))
    unknown call_tmp[615479] "expr temp" "maybe param" "maybe type" "temp"
    (615482 'move' call_tmp[615479](63002 call * call_tmp[615474] call_type_tmp[491782]))
    (540982 'default init var' result[63004] call_tmp[615479])
    (63007 'end of statement')
    {
      unknown d[63033] "dead at end of block" "insert auto destroy"
      (540984 'init var' d[63033] 0)
      (475189 'end of statement')
      unknown tmp[63034] "maybe param" "temp"
      unknown call_tmp[615486] "expr temp" "maybe param" "maybe type" "temp"
      (615489 'move' call_tmp[615486](63011 call size _mt[243] y[62975]))
      unknown call_tmp[615491] "expr temp" "maybe param" "maybe type" "temp"
      (615494 'move' call_tmp[615491](63015 call - call_tmp[615486] 1))
      (63046 'move' tmp[63034](63044 call chpl_compute_low_param_loop_bound 0 call_tmp[615491]))
      unknown tmp[63035] "maybe param" "temp"
      unknown call_tmp[615498] "expr temp" "maybe param" "maybe type" "temp"
      (615501 'move' call_tmp[615498](63053 call size _mt[243] y[62975]))
      unknown call_tmp[615503] "expr temp" "maybe param" "maybe type" "temp"
      (615506 'move' call_tmp[615503](63051 call - call_tmp[615498] 1))
      (63059 'move' tmp[63035](63057 call chpl_compute_high_param_loop_bound 0 call_tmp[615503]))
      unknown tmp[63036] "maybe param" "temp"
      (63062 'move' tmp[63036] 1)
      ParamForLoop[63064]
      { d[63033] tmp[63034] tmp[63035] tmp[63036]
        unknown call_tmp[615508] "expr temp" "maybe param" "maybe type" "temp"
        (615511 'move' call_tmp[615508](63022 call result[63004] d[63033]))
        unknown call_tmp[615513] "expr temp" "maybe param" "maybe type" "temp"
        (615516 'move' call_tmp[615513](63027 call y[62975] d[63033]))
        unknown call_tmp[615518] "expr temp" "maybe param" "maybe type" "temp"
        (615521 'move' call_tmp[615518](63028 call ** x[62969] call_tmp[615513]))
        (63030 call = call_tmp[615508] call_tmp[615518])
        (475190 'end of statement' result[63004] d[63033] d[63033])
      }
      label _unused_continueLabel[63038]
      label _breakLabel[63037]
    }
    (508901 'move' ret[508896](508900 'deref' result[63004]))
    gotoReturn _end_**[508894] _end_**[508894]
    (475194 'end of statement' result[63004])
    label _end_**[508894]
    (508898 return ret[508896])
  }
  where {
    unknown tmp[419105] "maybe param" "temp"
    (419116 'move' tmp[419105](62981 call isHomogeneousTuple y[62975]))
    unknown call_tmp[615523] "expr temp" "maybe param" "maybe type" "temp"
    (615526 'move' call_tmp[615523](419118 call _cond_invalid tmp[419105]))
    if call_tmp[615523]
    {
      (419121 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555243] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555244] "maybe param" "temp"
    unknown call_tmp[615528] "expr temp" "maybe param" "maybe type" "temp"
    (615531 'move' call_tmp[615528](419106 call isTrue tmp[419105]))
    (555249 'move' tmp[555244](555247 call _cond_test call_tmp[615528]))
    if tmp[555244]
    {
      { scopeless type
        unknown call_type_tmp[491788] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615533] "expr temp" "maybe param" "maybe type" "temp"
        (615536 'move' call_tmp[615533](62988 call y[62975] 0))
        (491792 'move' call_type_tmp[491788](62989 'typeof' call_tmp[615533]))
      }
      unknown tmp[555251] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615538] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615541 'move' call_tmp[615538](454824 'typeof' x[62969]))
      unknown call_tmp[615543] "expr temp" "maybe param" "maybe type" "temp"
      (615546 'move' call_tmp[615543](354257 'is_subtype' call_type_tmp[491788] call_tmp[615538]))
      (555253 'move' tmp[555251](419109 call isTrue call_tmp[615543]))
      (555258 'move' tmp[555243](555255 '_paramFoldLogical' tmp[555244] tmp[555251]))
    }
    {
      (555263 'move' tmp[555243](555260 '_paramFoldLogical' tmp[555244] 0))
    }
    (748231 call chpl_statementLevelSymbol tmp[555243])
  }
  function &[63085](arg x[63082]:_tuple[56202](?), arg y[63092] :
  unknown call_tmp[615548] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508907] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491794] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615553] "expr temp" "maybe param" "maybe type" "temp"
      (615556 'move' call_tmp[615553](63106 call x[63082] 0))
      (491798 'move' call_type_tmp[491794](63107 'typeof' call_tmp[615553]))
    }
    unknown result[63110] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615560] "expr temp" "maybe param" "maybe type" "temp"
    (615563 'move' call_tmp[615560](63100 call size _mt[243] x[63082]))
    unknown call_tmp[615565] "expr temp" "maybe param" "maybe type" "temp"
    (615568 'move' call_tmp[615565](63108 call * call_tmp[615560] call_type_tmp[491794]))
    (540986 'default init var' result[63110] call_tmp[615565])
    (63113 'end of statement')
    {
      unknown d[63139] "dead at end of block" "insert auto destroy"
      (540988 'init var' d[63139] 0)
      (475196 'end of statement')
      unknown tmp[63140] "maybe param" "temp"
      unknown call_tmp[615572] "expr temp" "maybe param" "maybe type" "temp"
      (615575 'move' call_tmp[615572](63117 call size _mt[243] x[63082]))
      unknown call_tmp[615577] "expr temp" "maybe param" "maybe type" "temp"
      (615580 'move' call_tmp[615577](63121 call - call_tmp[615572] 1))
      (63152 'move' tmp[63140](63150 call chpl_compute_low_param_loop_bound 0 call_tmp[615577]))
      unknown tmp[63141] "maybe param" "temp"
      unknown call_tmp[615584] "expr temp" "maybe param" "maybe type" "temp"
      (615587 'move' call_tmp[615584](63159 call size _mt[243] x[63082]))
      unknown call_tmp[615589] "expr temp" "maybe param" "maybe type" "temp"
      (615592 'move' call_tmp[615589](63157 call - call_tmp[615584] 1))
      (63165 'move' tmp[63141](63163 call chpl_compute_high_param_loop_bound 0 call_tmp[615589]))
      unknown tmp[63142] "maybe param" "temp"
      (63168 'move' tmp[63142] 1)
      ParamForLoop[63170]
      { d[63139] tmp[63140] tmp[63141] tmp[63142]
        unknown call_tmp[615594] "expr temp" "maybe param" "maybe type" "temp"
        (615597 'move' call_tmp[615594](63128 call result[63110] d[63139]))
        unknown call_tmp[615599] "expr temp" "maybe param" "maybe type" "temp"
        (615602 'move' call_tmp[615599](63132 call x[63082] d[63139]))
        unknown call_tmp[615604] "expr temp" "maybe param" "maybe type" "temp"
        (615607 'move' call_tmp[615604](63134 call & call_tmp[615599] y[63092]))
        (63136 call = call_tmp[615594] call_tmp[615604])
        (475197 'end of statement' result[63110] d[63139] d[63139])
      }
      label _unused_continueLabel[63144]
      label _breakLabel[63143]
    }
    (508912 'move' ret[508907](508911 'deref' result[63110]))
    gotoReturn _end_&[508905] _end_&[508905]
    (475201 'end of statement' result[63110])
    label _end_&[508905]
    (508909 return ret[508907])
  }
  where {
    (63098 call isHomogeneousTuple x[63082])
  }
  function &[63192](arg x[63189]:_any[178](?), arg y[63195]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508918] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491800] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615609] "expr temp" "maybe param" "maybe type" "temp"
      (615612 'move' call_tmp[615609](63220 call y[63195] 0))
      (491804 'move' call_type_tmp[491800](63221 'typeof' call_tmp[615609]))
    }
    unknown result[63224] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615616] "expr temp" "maybe param" "maybe type" "temp"
    (615619 'move' call_tmp[615616](63214 call size _mt[243] y[63195]))
    unknown call_tmp[615621] "expr temp" "maybe param" "maybe type" "temp"
    (615624 'move' call_tmp[615621](63222 call * call_tmp[615616] call_type_tmp[491800]))
    (540990 'default init var' result[63224] call_tmp[615621])
    (63227 'end of statement')
    {
      unknown d[63253] "dead at end of block" "insert auto destroy"
      (540992 'init var' d[63253] 0)
      (475203 'end of statement')
      unknown tmp[63254] "maybe param" "temp"
      unknown call_tmp[615628] "expr temp" "maybe param" "maybe type" "temp"
      (615631 'move' call_tmp[615628](63231 call size _mt[243] y[63195]))
      unknown call_tmp[615633] "expr temp" "maybe param" "maybe type" "temp"
      (615636 'move' call_tmp[615633](63235 call - call_tmp[615628] 1))
      (63266 'move' tmp[63254](63264 call chpl_compute_low_param_loop_bound 0 call_tmp[615633]))
      unknown tmp[63255] "maybe param" "temp"
      unknown call_tmp[615640] "expr temp" "maybe param" "maybe type" "temp"
      (615643 'move' call_tmp[615640](63273 call size _mt[243] y[63195]))
      unknown call_tmp[615645] "expr temp" "maybe param" "maybe type" "temp"
      (615648 'move' call_tmp[615645](63271 call - call_tmp[615640] 1))
      (63279 'move' tmp[63255](63277 call chpl_compute_high_param_loop_bound 0 call_tmp[615645]))
      unknown tmp[63256] "maybe param" "temp"
      (63282 'move' tmp[63256] 1)
      ParamForLoop[63284]
      { d[63253] tmp[63254] tmp[63255] tmp[63256]
        unknown call_tmp[615650] "expr temp" "maybe param" "maybe type" "temp"
        (615653 'move' call_tmp[615650](63242 call result[63224] d[63253]))
        unknown call_tmp[615655] "expr temp" "maybe param" "maybe type" "temp"
        (615658 'move' call_tmp[615655](63247 call y[63195] d[63253]))
        unknown call_tmp[615660] "expr temp" "maybe param" "maybe type" "temp"
        (615663 'move' call_tmp[615660](63248 call & x[63189] call_tmp[615655]))
        (63250 call = call_tmp[615650] call_tmp[615660])
        (475204 'end of statement' result[63224] d[63253] d[63253])
      }
      label _unused_continueLabel[63258]
      label _breakLabel[63257]
    }
    (508923 'move' ret[508918](508922 'deref' result[63224]))
    gotoReturn _end_&[508916] _end_&[508916]
    (475208 'end of statement' result[63224])
    label _end_&[508916]
    (508920 return ret[508918])
  }
  where {
    unknown tmp[419126] "maybe param" "temp"
    (419137 'move' tmp[419126](63201 call isHomogeneousTuple y[63195]))
    unknown call_tmp[615665] "expr temp" "maybe param" "maybe type" "temp"
    (615668 'move' call_tmp[615665](419139 call _cond_invalid tmp[419126]))
    if call_tmp[615665]
    {
      (419142 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555270] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555271] "maybe param" "temp"
    unknown call_tmp[615670] "expr temp" "maybe param" "maybe type" "temp"
    (615673 'move' call_tmp[615670](419127 call isTrue tmp[419126]))
    (555276 'move' tmp[555271](555274 call _cond_test call_tmp[615670]))
    if tmp[555271]
    {
      { scopeless type
        unknown call_type_tmp[491806] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615675] "expr temp" "maybe param" "maybe type" "temp"
        (615678 'move' call_tmp[615675](63208 call y[63195] 0))
        (491810 'move' call_type_tmp[491806](63209 'typeof' call_tmp[615675]))
      }
      unknown tmp[555278] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615680] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615683 'move' call_tmp[615680](454826 'typeof' x[63189]))
      unknown call_tmp[615685] "expr temp" "maybe param" "maybe type" "temp"
      (615688 'move' call_tmp[615685](354258 'is_subtype' call_type_tmp[491806] call_tmp[615680]))
      (555280 'move' tmp[555278](419130 call isTrue call_tmp[615685]))
      (555285 'move' tmp[555270](555282 '_paramFoldLogical' tmp[555271] tmp[555278]))
    }
    {
      (555290 'move' tmp[555270](555287 '_paramFoldLogical' tmp[555271] 0))
    }
    (748233 call chpl_statementLevelSymbol tmp[555270])
  }
  function |[63305](arg x[63302]:_tuple[56202](?), arg y[63312] :
  unknown call_tmp[615690] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508929] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491812] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615695] "expr temp" "maybe param" "maybe type" "temp"
      (615698 'move' call_tmp[615695](63326 call x[63302] 0))
      (491816 'move' call_type_tmp[491812](63327 'typeof' call_tmp[615695]))
    }
    unknown result[63330] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615702] "expr temp" "maybe param" "maybe type" "temp"
    (615705 'move' call_tmp[615702](63320 call size _mt[243] x[63302]))
    unknown call_tmp[615707] "expr temp" "maybe param" "maybe type" "temp"
    (615710 'move' call_tmp[615707](63328 call * call_tmp[615702] call_type_tmp[491812]))
    (540994 'default init var' result[63330] call_tmp[615707])
    (63333 'end of statement')
    {
      unknown d[63359] "dead at end of block" "insert auto destroy"
      (540996 'init var' d[63359] 0)
      (475210 'end of statement')
      unknown tmp[63360] "maybe param" "temp"
      unknown call_tmp[615714] "expr temp" "maybe param" "maybe type" "temp"
      (615717 'move' call_tmp[615714](63337 call size _mt[243] x[63302]))
      unknown call_tmp[615719] "expr temp" "maybe param" "maybe type" "temp"
      (615722 'move' call_tmp[615719](63341 call - call_tmp[615714] 1))
      (63372 'move' tmp[63360](63370 call chpl_compute_low_param_loop_bound 0 call_tmp[615719]))
      unknown tmp[63361] "maybe param" "temp"
      unknown call_tmp[615726] "expr temp" "maybe param" "maybe type" "temp"
      (615729 'move' call_tmp[615726](63379 call size _mt[243] x[63302]))
      unknown call_tmp[615731] "expr temp" "maybe param" "maybe type" "temp"
      (615734 'move' call_tmp[615731](63377 call - call_tmp[615726] 1))
      (63385 'move' tmp[63361](63383 call chpl_compute_high_param_loop_bound 0 call_tmp[615731]))
      unknown tmp[63362] "maybe param" "temp"
      (63388 'move' tmp[63362] 1)
      ParamForLoop[63390]
      { d[63359] tmp[63360] tmp[63361] tmp[63362]
        unknown call_tmp[615736] "expr temp" "maybe param" "maybe type" "temp"
        (615739 'move' call_tmp[615736](63348 call result[63330] d[63359]))
        unknown call_tmp[615741] "expr temp" "maybe param" "maybe type" "temp"
        (615744 'move' call_tmp[615741](63352 call x[63302] d[63359]))
        unknown call_tmp[615746] "expr temp" "maybe param" "maybe type" "temp"
        (615749 'move' call_tmp[615746](63354 call | call_tmp[615741] y[63312]))
        (63356 call = call_tmp[615736] call_tmp[615746])
        (475211 'end of statement' result[63330] d[63359] d[63359])
      }
      label _unused_continueLabel[63364]
      label _breakLabel[63363]
    }
    (508934 'move' ret[508929](508933 'deref' result[63330]))
    gotoReturn _end_|[508927] _end_|[508927]
    (475215 'end of statement' result[63330])
    label _end_|[508927]
    (508931 return ret[508929])
  }
  where {
    (63318 call isHomogeneousTuple x[63302])
  }
  function |[63412](arg x[63409]:_any[178](?), arg y[63415]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508940] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491818] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615751] "expr temp" "maybe param" "maybe type" "temp"
      (615754 'move' call_tmp[615751](63440 call y[63415] 0))
      (491822 'move' call_type_tmp[491818](63441 'typeof' call_tmp[615751]))
    }
    unknown result[63444] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615758] "expr temp" "maybe param" "maybe type" "temp"
    (615761 'move' call_tmp[615758](63434 call size _mt[243] y[63415]))
    unknown call_tmp[615763] "expr temp" "maybe param" "maybe type" "temp"
    (615766 'move' call_tmp[615763](63442 call * call_tmp[615758] call_type_tmp[491818]))
    (540998 'default init var' result[63444] call_tmp[615763])
    (63447 'end of statement')
    {
      unknown d[63473] "dead at end of block" "insert auto destroy"
      (541000 'init var' d[63473] 0)
      (475217 'end of statement')
      unknown tmp[63474] "maybe param" "temp"
      unknown call_tmp[615770] "expr temp" "maybe param" "maybe type" "temp"
      (615773 'move' call_tmp[615770](63451 call size _mt[243] y[63415]))
      unknown call_tmp[615775] "expr temp" "maybe param" "maybe type" "temp"
      (615778 'move' call_tmp[615775](63455 call - call_tmp[615770] 1))
      (63486 'move' tmp[63474](63484 call chpl_compute_low_param_loop_bound 0 call_tmp[615775]))
      unknown tmp[63475] "maybe param" "temp"
      unknown call_tmp[615782] "expr temp" "maybe param" "maybe type" "temp"
      (615785 'move' call_tmp[615782](63493 call size _mt[243] y[63415]))
      unknown call_tmp[615787] "expr temp" "maybe param" "maybe type" "temp"
      (615790 'move' call_tmp[615787](63491 call - call_tmp[615782] 1))
      (63499 'move' tmp[63475](63497 call chpl_compute_high_param_loop_bound 0 call_tmp[615787]))
      unknown tmp[63476] "maybe param" "temp"
      (63502 'move' tmp[63476] 1)
      ParamForLoop[63504]
      { d[63473] tmp[63474] tmp[63475] tmp[63476]
        unknown call_tmp[615792] "expr temp" "maybe param" "maybe type" "temp"
        (615795 'move' call_tmp[615792](63462 call result[63444] d[63473]))
        unknown call_tmp[615797] "expr temp" "maybe param" "maybe type" "temp"
        (615800 'move' call_tmp[615797](63467 call y[63415] d[63473]))
        unknown call_tmp[615802] "expr temp" "maybe param" "maybe type" "temp"
        (615805 'move' call_tmp[615802](63468 call | x[63409] call_tmp[615797]))
        (63470 call = call_tmp[615792] call_tmp[615802])
        (475218 'end of statement' result[63444] d[63473] d[63473])
      }
      label _unused_continueLabel[63478]
      label _breakLabel[63477]
    }
    (508945 'move' ret[508940](508944 'deref' result[63444]))
    gotoReturn _end_|[508938] _end_|[508938]
    (475222 'end of statement' result[63444])
    label _end_|[508938]
    (508942 return ret[508940])
  }
  where {
    unknown tmp[419147] "maybe param" "temp"
    (419158 'move' tmp[419147](63421 call isHomogeneousTuple y[63415]))
    unknown call_tmp[615807] "expr temp" "maybe param" "maybe type" "temp"
    (615810 'move' call_tmp[615807](419160 call _cond_invalid tmp[419147]))
    if call_tmp[615807]
    {
      (419163 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555297] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555298] "maybe param" "temp"
    unknown call_tmp[615812] "expr temp" "maybe param" "maybe type" "temp"
    (615815 'move' call_tmp[615812](419148 call isTrue tmp[419147]))
    (555303 'move' tmp[555298](555301 call _cond_test call_tmp[615812]))
    if tmp[555298]
    {
      { scopeless type
        unknown call_type_tmp[491824] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615817] "expr temp" "maybe param" "maybe type" "temp"
        (615820 'move' call_tmp[615817](63428 call y[63415] 0))
        (491828 'move' call_type_tmp[491824](63429 'typeof' call_tmp[615817]))
      }
      unknown tmp[555305] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615822] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615825 'move' call_tmp[615822](454828 'typeof' x[63409]))
      unknown call_tmp[615827] "expr temp" "maybe param" "maybe type" "temp"
      (615830 'move' call_tmp[615827](354259 'is_subtype' call_type_tmp[491824] call_tmp[615822]))
      (555307 'move' tmp[555305](419151 call isTrue call_tmp[615827]))
      (555312 'move' tmp[555297](555309 '_paramFoldLogical' tmp[555298] tmp[555305]))
    }
    {
      (555317 'move' tmp[555297](555314 '_paramFoldLogical' tmp[555298] 0))
    }
    (748235 call chpl_statementLevelSymbol tmp[555297])
  }
  function ^[63525](arg x[63522]:_tuple[56202](?), arg y[63532] :
  unknown call_tmp[615832] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508951] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491830] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615837] "expr temp" "maybe param" "maybe type" "temp"
      (615840 'move' call_tmp[615837](63546 call x[63522] 0))
      (491834 'move' call_type_tmp[491830](63547 'typeof' call_tmp[615837]))
    }
    unknown result[63550] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615844] "expr temp" "maybe param" "maybe type" "temp"
    (615847 'move' call_tmp[615844](63540 call size _mt[243] x[63522]))
    unknown call_tmp[615849] "expr temp" "maybe param" "maybe type" "temp"
    (615852 'move' call_tmp[615849](63548 call * call_tmp[615844] call_type_tmp[491830]))
    (541002 'default init var' result[63550] call_tmp[615849])
    (63553 'end of statement')
    {
      unknown d[63579] "dead at end of block" "insert auto destroy"
      (541004 'init var' d[63579] 0)
      (475224 'end of statement')
      unknown tmp[63580] "maybe param" "temp"
      unknown call_tmp[615856] "expr temp" "maybe param" "maybe type" "temp"
      (615859 'move' call_tmp[615856](63557 call size _mt[243] x[63522]))
      unknown call_tmp[615861] "expr temp" "maybe param" "maybe type" "temp"
      (615864 'move' call_tmp[615861](63561 call - call_tmp[615856] 1))
      (63592 'move' tmp[63580](63590 call chpl_compute_low_param_loop_bound 0 call_tmp[615861]))
      unknown tmp[63581] "maybe param" "temp"
      unknown call_tmp[615868] "expr temp" "maybe param" "maybe type" "temp"
      (615871 'move' call_tmp[615868](63599 call size _mt[243] x[63522]))
      unknown call_tmp[615873] "expr temp" "maybe param" "maybe type" "temp"
      (615876 'move' call_tmp[615873](63597 call - call_tmp[615868] 1))
      (63605 'move' tmp[63581](63603 call chpl_compute_high_param_loop_bound 0 call_tmp[615873]))
      unknown tmp[63582] "maybe param" "temp"
      (63608 'move' tmp[63582] 1)
      ParamForLoop[63610]
      { d[63579] tmp[63580] tmp[63581] tmp[63582]
        unknown call_tmp[615878] "expr temp" "maybe param" "maybe type" "temp"
        (615881 'move' call_tmp[615878](63568 call result[63550] d[63579]))
        unknown call_tmp[615883] "expr temp" "maybe param" "maybe type" "temp"
        (615886 'move' call_tmp[615883](63572 call x[63522] d[63579]))
        unknown call_tmp[615888] "expr temp" "maybe param" "maybe type" "temp"
        (615891 'move' call_tmp[615888](63574 call ^ call_tmp[615883] y[63532]))
        (63576 call = call_tmp[615878] call_tmp[615888])
        (475225 'end of statement' result[63550] d[63579] d[63579])
      }
      label _unused_continueLabel[63584]
      label _breakLabel[63583]
    }
    (508956 'move' ret[508951](508955 'deref' result[63550]))
    gotoReturn _end_^[508949] _end_^[508949]
    (475229 'end of statement' result[63550])
    label _end_^[508949]
    (508953 return ret[508951])
  }
  where {
    (63538 call isHomogeneousTuple x[63522])
  }
  function ^[63632](arg x[63629]:_any[178](?), arg y[63635]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508962] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491836] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615893] "expr temp" "maybe param" "maybe type" "temp"
      (615896 'move' call_tmp[615893](63660 call y[63635] 0))
      (491840 'move' call_type_tmp[491836](63661 'typeof' call_tmp[615893]))
    }
    unknown result[63664] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615900] "expr temp" "maybe param" "maybe type" "temp"
    (615903 'move' call_tmp[615900](63654 call size _mt[243] y[63635]))
    unknown call_tmp[615905] "expr temp" "maybe param" "maybe type" "temp"
    (615908 'move' call_tmp[615905](63662 call * call_tmp[615900] call_type_tmp[491836]))
    (541006 'default init var' result[63664] call_tmp[615905])
    (63667 'end of statement')
    {
      unknown d[63693] "dead at end of block" "insert auto destroy"
      (541008 'init var' d[63693] 0)
      (475231 'end of statement')
      unknown tmp[63694] "maybe param" "temp"
      unknown call_tmp[615912] "expr temp" "maybe param" "maybe type" "temp"
      (615915 'move' call_tmp[615912](63671 call size _mt[243] y[63635]))
      unknown call_tmp[615917] "expr temp" "maybe param" "maybe type" "temp"
      (615920 'move' call_tmp[615917](63675 call - call_tmp[615912] 1))
      (63706 'move' tmp[63694](63704 call chpl_compute_low_param_loop_bound 0 call_tmp[615917]))
      unknown tmp[63695] "maybe param" "temp"
      unknown call_tmp[615924] "expr temp" "maybe param" "maybe type" "temp"
      (615927 'move' call_tmp[615924](63713 call size _mt[243] y[63635]))
      unknown call_tmp[615929] "expr temp" "maybe param" "maybe type" "temp"
      (615932 'move' call_tmp[615929](63711 call - call_tmp[615924] 1))
      (63719 'move' tmp[63695](63717 call chpl_compute_high_param_loop_bound 0 call_tmp[615929]))
      unknown tmp[63696] "maybe param" "temp"
      (63722 'move' tmp[63696] 1)
      ParamForLoop[63724]
      { d[63693] tmp[63694] tmp[63695] tmp[63696]
        unknown call_tmp[615934] "expr temp" "maybe param" "maybe type" "temp"
        (615937 'move' call_tmp[615934](63682 call result[63664] d[63693]))
        unknown call_tmp[615939] "expr temp" "maybe param" "maybe type" "temp"
        (615942 'move' call_tmp[615939](63687 call y[63635] d[63693]))
        unknown call_tmp[615944] "expr temp" "maybe param" "maybe type" "temp"
        (615947 'move' call_tmp[615944](63688 call ^ x[63629] call_tmp[615939]))
        (63690 call = call_tmp[615934] call_tmp[615944])
        (475232 'end of statement' result[63664] d[63693] d[63693])
      }
      label _unused_continueLabel[63698]
      label _breakLabel[63697]
    }
    (508967 'move' ret[508962](508966 'deref' result[63664]))
    gotoReturn _end_^[508960] _end_^[508960]
    (475236 'end of statement' result[63664])
    label _end_^[508960]
    (508964 return ret[508962])
  }
  where {
    unknown tmp[419168] "maybe param" "temp"
    (419179 'move' tmp[419168](63641 call isHomogeneousTuple y[63635]))
    unknown call_tmp[615949] "expr temp" "maybe param" "maybe type" "temp"
    (615952 'move' call_tmp[615949](419181 call _cond_invalid tmp[419168]))
    if call_tmp[615949]
    {
      (419184 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555324] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555325] "maybe param" "temp"
    unknown call_tmp[615954] "expr temp" "maybe param" "maybe type" "temp"
    (615957 'move' call_tmp[615954](419169 call isTrue tmp[419168]))
    (555330 'move' tmp[555325](555328 call _cond_test call_tmp[615954]))
    if tmp[555325]
    {
      { scopeless type
        unknown call_type_tmp[491842] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615959] "expr temp" "maybe param" "maybe type" "temp"
        (615962 'move' call_tmp[615959](63648 call y[63635] 0))
        (491846 'move' call_type_tmp[491842](63649 'typeof' call_tmp[615959]))
      }
      unknown tmp[555332] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615964] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615967 'move' call_tmp[615964](454830 'typeof' x[63629]))
      unknown call_tmp[615969] "expr temp" "maybe param" "maybe type" "temp"
      (615972 'move' call_tmp[615969](354260 'is_subtype' call_type_tmp[491842] call_tmp[615964]))
      (555334 'move' tmp[555332](419172 call isTrue call_tmp[615969]))
      (555339 'move' tmp[555324](555336 '_paramFoldLogical' tmp[555325] tmp[555332]))
    }
    {
      (555344 'move' tmp[555324](555341 '_paramFoldLogical' tmp[555325] 0))
    }
    (748237 call chpl_statementLevelSymbol tmp[555324])
  }
  function <<[63745](arg x[63742]:_tuple[56202](?), arg y[63752] :
  unknown call_tmp[615974] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508973] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491848] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615979] "expr temp" "maybe param" "maybe type" "temp"
      (615982 'move' call_tmp[615979](63766 call x[63742] 0))
      (491852 'move' call_type_tmp[491848](63767 'typeof' call_tmp[615979]))
    }
    unknown result[63770] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615986] "expr temp" "maybe param" "maybe type" "temp"
    (615989 'move' call_tmp[615986](63760 call size _mt[243] x[63742]))
    unknown call_tmp[615991] "expr temp" "maybe param" "maybe type" "temp"
    (615994 'move' call_tmp[615991](63768 call * call_tmp[615986] call_type_tmp[491848]))
    (541010 'default init var' result[63770] call_tmp[615991])
    (63773 'end of statement')
    {
      unknown d[63799] "dead at end of block" "insert auto destroy"
      (541012 'init var' d[63799] 0)
      (475238 'end of statement')
      unknown tmp[63800] "maybe param" "temp"
      unknown call_tmp[615998] "expr temp" "maybe param" "maybe type" "temp"
      (616001 'move' call_tmp[615998](63777 call size _mt[243] x[63742]))
      unknown call_tmp[616003] "expr temp" "maybe param" "maybe type" "temp"
      (616006 'move' call_tmp[616003](63781 call - call_tmp[615998] 1))
      (63812 'move' tmp[63800](63810 call chpl_compute_low_param_loop_bound 0 call_tmp[616003]))
      unknown tmp[63801] "maybe param" "temp"
      unknown call_tmp[616010] "expr temp" "maybe param" "maybe type" "temp"
      (616013 'move' call_tmp[616010](63819 call size _mt[243] x[63742]))
      unknown call_tmp[616015] "expr temp" "maybe param" "maybe type" "temp"
      (616018 'move' call_tmp[616015](63817 call - call_tmp[616010] 1))
      (63825 'move' tmp[63801](63823 call chpl_compute_high_param_loop_bound 0 call_tmp[616015]))
      unknown tmp[63802] "maybe param" "temp"
      (63828 'move' tmp[63802] 1)
      ParamForLoop[63830]
      { d[63799] tmp[63800] tmp[63801] tmp[63802]
        unknown call_tmp[616020] "expr temp" "maybe param" "maybe type" "temp"
        (616023 'move' call_tmp[616020](63788 call result[63770] d[63799]))
        unknown call_tmp[616025] "expr temp" "maybe param" "maybe type" "temp"
        (616028 'move' call_tmp[616025](63792 call x[63742] d[63799]))
        unknown call_tmp[616030] "expr temp" "maybe param" "maybe type" "temp"
        (616033 'move' call_tmp[616030](63794 call << call_tmp[616025] y[63752]))
        (63796 call = call_tmp[616020] call_tmp[616030])
        (475239 'end of statement' result[63770] d[63799] d[63799])
      }
      label _unused_continueLabel[63804]
      label _breakLabel[63803]
    }
    (508978 'move' ret[508973](508977 'deref' result[63770]))
    gotoReturn _end_<<[508971] _end_<<[508971]
    (475243 'end of statement' result[63770])
    label _end_<<[508971]
    (508975 return ret[508973])
  }
  where {
    (63758 call isHomogeneousTuple x[63742])
  }
  function <<[63852](arg x[63849]:_any[178](?), arg y[63855]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508984] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491854] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616035] "expr temp" "maybe param" "maybe type" "temp"
      (616038 'move' call_tmp[616035](63880 call y[63855] 0))
      (491858 'move' call_type_tmp[491854](63881 'typeof' call_tmp[616035]))
    }
    unknown result[63884] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616042] "expr temp" "maybe param" "maybe type" "temp"
    (616045 'move' call_tmp[616042](63874 call size _mt[243] y[63855]))
    unknown call_tmp[616047] "expr temp" "maybe param" "maybe type" "temp"
    (616050 'move' call_tmp[616047](63882 call * call_tmp[616042] call_type_tmp[491854]))
    (541014 'default init var' result[63884] call_tmp[616047])
    (63887 'end of statement')
    {
      unknown d[63913] "dead at end of block" "insert auto destroy"
      (541016 'init var' d[63913] 0)
      (475245 'end of statement')
      unknown tmp[63914] "maybe param" "temp"
      unknown call_tmp[616054] "expr temp" "maybe param" "maybe type" "temp"
      (616057 'move' call_tmp[616054](63891 call size _mt[243] y[63855]))
      unknown call_tmp[616059] "expr temp" "maybe param" "maybe type" "temp"
      (616062 'move' call_tmp[616059](63895 call - call_tmp[616054] 1))
      (63926 'move' tmp[63914](63924 call chpl_compute_low_param_loop_bound 0 call_tmp[616059]))
      unknown tmp[63915] "maybe param" "temp"
      unknown call_tmp[616066] "expr temp" "maybe param" "maybe type" "temp"
      (616069 'move' call_tmp[616066](63933 call size _mt[243] y[63855]))
      unknown call_tmp[616071] "expr temp" "maybe param" "maybe type" "temp"
      (616074 'move' call_tmp[616071](63931 call - call_tmp[616066] 1))
      (63939 'move' tmp[63915](63937 call chpl_compute_high_param_loop_bound 0 call_tmp[616071]))
      unknown tmp[63916] "maybe param" "temp"
      (63942 'move' tmp[63916] 1)
      ParamForLoop[63944]
      { d[63913] tmp[63914] tmp[63915] tmp[63916]
        unknown call_tmp[616076] "expr temp" "maybe param" "maybe type" "temp"
        (616079 'move' call_tmp[616076](63902 call result[63884] d[63913]))
        unknown call_tmp[616081] "expr temp" "maybe param" "maybe type" "temp"
        (616084 'move' call_tmp[616081](63907 call y[63855] d[63913]))
        unknown call_tmp[616086] "expr temp" "maybe param" "maybe type" "temp"
        (616089 'move' call_tmp[616086](63908 call << x[63849] call_tmp[616081]))
        (63910 call = call_tmp[616076] call_tmp[616086])
        (475246 'end of statement' result[63884] d[63913] d[63913])
      }
      label _unused_continueLabel[63918]
      label _breakLabel[63917]
    }
    (508989 'move' ret[508984](508988 'deref' result[63884]))
    gotoReturn _end_<<[508982] _end_<<[508982]
    (475250 'end of statement' result[63884])
    label _end_<<[508982]
    (508986 return ret[508984])
  }
  where {
    unknown tmp[419189] "maybe param" "temp"
    (419200 'move' tmp[419189](63861 call isHomogeneousTuple y[63855]))
    unknown call_tmp[616091] "expr temp" "maybe param" "maybe type" "temp"
    (616094 'move' call_tmp[616091](419202 call _cond_invalid tmp[419189]))
    if call_tmp[616091]
    {
      (419205 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555351] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555352] "maybe param" "temp"
    unknown call_tmp[616096] "expr temp" "maybe param" "maybe type" "temp"
    (616099 'move' call_tmp[616096](419190 call isTrue tmp[419189]))
    (555357 'move' tmp[555352](555355 call _cond_test call_tmp[616096]))
    if tmp[555352]
    {
      { scopeless type
        unknown call_type_tmp[491860] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616101] "expr temp" "maybe param" "maybe type" "temp"
        (616104 'move' call_tmp[616101](63868 call y[63855] 0))
        (491864 'move' call_type_tmp[491860](63869 'typeof' call_tmp[616101]))
      }
      unknown tmp[555359] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616106] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616109 'move' call_tmp[616106](454832 'typeof' x[63849]))
      unknown call_tmp[616111] "expr temp" "maybe param" "maybe type" "temp"
      (616114 'move' call_tmp[616111](354261 'is_subtype' call_type_tmp[491860] call_tmp[616106]))
      (555361 'move' tmp[555359](419193 call isTrue call_tmp[616111]))
      (555366 'move' tmp[555351](555363 '_paramFoldLogical' tmp[555352] tmp[555359]))
    }
    {
      (555371 'move' tmp[555351](555368 '_paramFoldLogical' tmp[555352] 0))
    }
    (748239 call chpl_statementLevelSymbol tmp[555351])
  }
  function >>[63965](arg x[63962]:_tuple[56202](?), arg y[63972] :
  unknown call_tmp[616116] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508995] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491866] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616121] "expr temp" "maybe param" "maybe type" "temp"
      (616124 'move' call_tmp[616121](63986 call x[63962] 0))
      (491870 'move' call_type_tmp[491866](63987 'typeof' call_tmp[616121]))
    }
    unknown result[63990] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616128] "expr temp" "maybe param" "maybe type" "temp"
    (616131 'move' call_tmp[616128](63980 call size _mt[243] x[63962]))
    unknown call_tmp[616133] "expr temp" "maybe param" "maybe type" "temp"
    (616136 'move' call_tmp[616133](63988 call * call_tmp[616128] call_type_tmp[491866]))
    (541018 'default init var' result[63990] call_tmp[616133])
    (63993 'end of statement')
    {
      unknown d[64019] "dead at end of block" "insert auto destroy"
      (541020 'init var' d[64019] 0)
      (475252 'end of statement')
      unknown tmp[64020] "maybe param" "temp"
      unknown call_tmp[616140] "expr temp" "maybe param" "maybe type" "temp"
      (616143 'move' call_tmp[616140](63997 call size _mt[243] x[63962]))
      unknown call_tmp[616145] "expr temp" "maybe param" "maybe type" "temp"
      (616148 'move' call_tmp[616145](64001 call - call_tmp[616140] 1))
      (64032 'move' tmp[64020](64030 call chpl_compute_low_param_loop_bound 0 call_tmp[616145]))
      unknown tmp[64021] "maybe param" "temp"
      unknown call_tmp[616152] "expr temp" "maybe param" "maybe type" "temp"
      (616155 'move' call_tmp[616152](64039 call size _mt[243] x[63962]))
      unknown call_tmp[616157] "expr temp" "maybe param" "maybe type" "temp"
      (616160 'move' call_tmp[616157](64037 call - call_tmp[616152] 1))
      (64045 'move' tmp[64021](64043 call chpl_compute_high_param_loop_bound 0 call_tmp[616157]))
      unknown tmp[64022] "maybe param" "temp"
      (64048 'move' tmp[64022] 1)
      ParamForLoop[64050]
      { d[64019] tmp[64020] tmp[64021] tmp[64022]
        unknown call_tmp[616162] "expr temp" "maybe param" "maybe type" "temp"
        (616165 'move' call_tmp[616162](64008 call result[63990] d[64019]))
        unknown call_tmp[616167] "expr temp" "maybe param" "maybe type" "temp"
        (616170 'move' call_tmp[616167](64012 call x[63962] d[64019]))
        unknown call_tmp[616172] "expr temp" "maybe param" "maybe type" "temp"
        (616175 'move' call_tmp[616172](64014 call >> call_tmp[616167] y[63972]))
        (64016 call = call_tmp[616162] call_tmp[616172])
        (475253 'end of statement' result[63990] d[64019] d[64019])
      }
      label _unused_continueLabel[64024]
      label _breakLabel[64023]
    }
    (509000 'move' ret[508995](508999 'deref' result[63990]))
    gotoReturn _end_>>[508993] _end_>>[508993]
    (475257 'end of statement' result[63990])
    label _end_>>[508993]
    (508997 return ret[508995])
  }
  where {
    (63978 call isHomogeneousTuple x[63962])
  }
  function >>[64072](arg x[64069]:_any[178](?), arg y[64075]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509006] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491872] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616177] "expr temp" "maybe param" "maybe type" "temp"
      (616180 'move' call_tmp[616177](64100 call y[64075] 0))
      (491876 'move' call_type_tmp[491872](64101 'typeof' call_tmp[616177]))
    }
    unknown result[64104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616184] "expr temp" "maybe param" "maybe type" "temp"
    (616187 'move' call_tmp[616184](64094 call size _mt[243] y[64075]))
    unknown call_tmp[616189] "expr temp" "maybe param" "maybe type" "temp"
    (616192 'move' call_tmp[616189](64102 call * call_tmp[616184] call_type_tmp[491872]))
    (541022 'default init var' result[64104] call_tmp[616189])
    (64107 'end of statement')
    {
      unknown d[64133] "dead at end of block" "insert auto destroy"
      (541024 'init var' d[64133] 0)
      (475259 'end of statement')
      unknown tmp[64134] "maybe param" "temp"
      unknown call_tmp[616196] "expr temp" "maybe param" "maybe type" "temp"
      (616199 'move' call_tmp[616196](64111 call size _mt[243] y[64075]))
      unknown call_tmp[616201] "expr temp" "maybe param" "maybe type" "temp"
      (616204 'move' call_tmp[616201](64115 call - call_tmp[616196] 1))
      (64146 'move' tmp[64134](64144 call chpl_compute_low_param_loop_bound 0 call_tmp[616201]))
      unknown tmp[64135] "maybe param" "temp"
      unknown call_tmp[616208] "expr temp" "maybe param" "maybe type" "temp"
      (616211 'move' call_tmp[616208](64153 call size _mt[243] y[64075]))
      unknown call_tmp[616213] "expr temp" "maybe param" "maybe type" "temp"
      (616216 'move' call_tmp[616213](64151 call - call_tmp[616208] 1))
      (64159 'move' tmp[64135](64157 call chpl_compute_high_param_loop_bound 0 call_tmp[616213]))
      unknown tmp[64136] "maybe param" "temp"
      (64162 'move' tmp[64136] 1)
      ParamForLoop[64164]
      { d[64133] tmp[64134] tmp[64135] tmp[64136]
        unknown call_tmp[616218] "expr temp" "maybe param" "maybe type" "temp"
        (616221 'move' call_tmp[616218](64122 call result[64104] d[64133]))
        unknown call_tmp[616223] "expr temp" "maybe param" "maybe type" "temp"
        (616226 'move' call_tmp[616223](64127 call y[64075] d[64133]))
        unknown call_tmp[616228] "expr temp" "maybe param" "maybe type" "temp"
        (616231 'move' call_tmp[616228](64128 call >> x[64069] call_tmp[616223]))
        (64130 call = call_tmp[616218] call_tmp[616228])
        (475260 'end of statement' result[64104] d[64133] d[64133])
      }
      label _unused_continueLabel[64138]
      label _breakLabel[64137]
    }
    (509011 'move' ret[509006](509010 'deref' result[64104]))
    gotoReturn _end_>>[509004] _end_>>[509004]
    (475264 'end of statement' result[64104])
    label _end_>>[509004]
    (509008 return ret[509006])
  }
  where {
    unknown tmp[419210] "maybe param" "temp"
    (419221 'move' tmp[419210](64081 call isHomogeneousTuple y[64075]))
    unknown call_tmp[616233] "expr temp" "maybe param" "maybe type" "temp"
    (616236 'move' call_tmp[616233](419223 call _cond_invalid tmp[419210]))
    if call_tmp[616233]
    {
      (419226 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555378] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555379] "maybe param" "temp"
    unknown call_tmp[616238] "expr temp" "maybe param" "maybe type" "temp"
    (616241 'move' call_tmp[616238](419211 call isTrue tmp[419210]))
    (555384 'move' tmp[555379](555382 call _cond_test call_tmp[616238]))
    if tmp[555379]
    {
      { scopeless type
        unknown call_type_tmp[491878] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616243] "expr temp" "maybe param" "maybe type" "temp"
        (616246 'move' call_tmp[616243](64088 call y[64075] 0))
        (491882 'move' call_type_tmp[491878](64089 'typeof' call_tmp[616243]))
      }
      unknown tmp[555386] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616248] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616251 'move' call_tmp[616248](454834 'typeof' x[64069]))
      unknown call_tmp[616253] "expr temp" "maybe param" "maybe type" "temp"
      (616256 'move' call_tmp[616253](354262 'is_subtype' call_type_tmp[491878] call_tmp[616248]))
      (555388 'move' tmp[555386](419214 call isTrue call_tmp[616253]))
      (555393 'move' tmp[555378](555390 '_paramFoldLogical' tmp[555379] tmp[555386]))
    }
    {
      (555398 'move' tmp[555378](555395 '_paramFoldLogical' tmp[555379] 0))
    }
    (748241 call chpl_statementLevelSymbol tmp[555378])
  }
  (355086 'used modules list'(56191 'use' ChapelStandard[20267])(56193 'use' DSIUtil[230907]))
}