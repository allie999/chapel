AST dump for ChapelTuple after pass createTaskFunctions.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415859]() : void[4] "insert line file info" "module init"
  {
    (540696 'init var' CHPL_WARN_TUPLE_ITERATION[57023] "unset")
    (57026 'end of statement')
    (508883 return _void[55])
  }
  function _tuple[56199](?).size[766428](arg _mt[766430]:_MT[238], arg this[766432]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[766451] "RVV" "param" "temp"
    unknown call_tmp[766465] "expr temp" "maybe param" "maybe type" "temp"
    (766468 'move' call_tmp[766465](766437 'is bound' this[766432] c"size"))
    if call_tmp[766465]
    {
      unknown call_tmp[766470] "expr temp" "maybe param" "maybe type" "temp"
      (766473 'move' call_tmp[766470](766436 '.' this[766432] c"size"))
      (766456 'move' ret[766451](766455 'deref' call_tmp[766470]))
      gotoReturn _end_size[766449] _end_size[766449]
    }
    {
      (766461 'move' ret[766451](766460 'deref' ?[260]))
      gotoReturn _end_size[766449] _end_size[766449]
    }
    label _end_size[766449]
    (766453 return ret[766451])
  }
  function _tuple[56199](?).size[766475](arg _mt[766477]:_MT[238], arg this[766479]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[766498] "RVV" "param" "temp"
    unknown call_tmp[766512] "expr temp" "maybe param" "maybe type" "temp"
    (766515 'move' call_tmp[766512](766484 'is bound' this[766479] c"size"))
    if call_tmp[766512]
    {
      unknown call_tmp[766517] "expr temp" "maybe param" "maybe type" "temp"
      (766520 'move' call_tmp[766517](766483 '.' this[766479] c"size"))
      (766503 'move' ret[766498](766502 'deref' call_tmp[766517]))
      gotoReturn _end_size[766496] _end_size[766496]
    }
    {
      (766508 'move' ret[766498](766507 'deref' ?[260]))
      gotoReturn _end_size[766496] _end_size[766496]
    }
    label _end_size[766496]
    (766500 return ret[766498])
  }
  function _tuple[56199](?).deinit[766522](arg _mt[766524]:_MT[238], arg this[766526]:_tuple[56199](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (766534 return _void[55])
  }
  function _defaultOf[766536](arg t[766538]:_tuple[56199](?)) : _unknown[51] "compiler generated" "inline" "last resort"
  {
    (766541 return _void[55])
  }
  function _tuple[56199](?).writeThis[766543](arg _mt[766547]:_MT[238], arg this[766545]:_tuple[56199](?), arg f[766546]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766556 call(766552 call (partial) readWriteThis _mt[243] this[766545]) f[766546])
    (766559 return _void[55])
  }
  function _tuple[56199](?).readThis[766563](arg _mt[766567]:_MT[238], arg this[766565]:_tuple[56199](?), arg f[766566]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766575 call(766571 call (partial) readWriteThis _mt[243] this[766565]) f[766566])
    (766579 return _void[55])
  }
  function chpl__defaultHash[766583](arg r[766585]:_tuple[56199](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766598] "RVV" "temp"
    unknown call_tmp[766605] "expr temp" "maybe param" "maybe type" "temp"
    (766608 'move' call_tmp[766605](766587 call size _mt[243] r[766585]))
    unknown call_tmp[766610] "expr temp" "maybe param" "maybe type" "temp"
    (766613 'move' call_tmp[766610](766591 call chpl__defaultHash call_tmp[766605]))
    (766603 'move' ret[766598](766602 'deref' call_tmp[766610]))
    (766600 return ret[766598])
  }
  type _tuple[56199](?) unknown size[56194] "param" int(64)[13]
  function chpl__init_tuple[56208](param arg size[56205]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (507883 return _void[55])
  }
  function _build_tuple[56219](arg t[56216]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (507885 return _void[55])
  }
  function _build_tuple[56230](arg x[56227]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[507889] "RVV" "temp"
    (507894 'move' ret[507889](507893 'deref' x[56227]))
    (507891 return ret[507889])
  }
  function _build_tuple_noref[56244](arg t[56241]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (507896 return _void[55])
  }
  function _build_tuple_always_allow_ref[56255](arg x[56252]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[507900] "RVV" "temp"
    (507905 'move' ret[507900](507904 'deref' x[56252]))
    (507902 return ret[507900])
  }
  function chpl__unref[56267](arg t[56265]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[507909] "RVV" "temp" "type variable"
    unknown call_tmp[611149] "expr temp" "maybe param" "maybe type" "temp"
    (611152 'move' call_tmp[611149](56272 call isTupleType t[56265]))
    unknown call_tmp[611154] "expr temp" "maybe param" "maybe type" "temp"
    (611157 'move' call_tmp[611154](56283 call _cond_test call_tmp[611149]))
    if call_tmp[611154]
    {
      unknown call_tmp[611159] "expr temp" "maybe param" "maybe type" "temp"
      (611162 'move' call_tmp[611159](56277 call _build_tuple_noref(56275 'expand_tuple' t[56265])))
      (507914 'move' ret[507909](507913 'deref' call_tmp[611159]))
      gotoReturn _end_chpl__unref[507907] _end_chpl__unref[507907]
    }
    {
      (507919 'move' ret[507909](507918 'deref' t[56265]))
      gotoReturn _end_chpl__unref[507907] _end_chpl__unref[507907]
    }
    label _end_chpl__unref[507907]
    (507911 return ret[507909])
  }
  function *[56298](param arg p[56295]:int(64)[13], arg t[56300]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (507923 return _void[55])
  }
  function *[56311](param arg p[56308]:uint(64)[115], arg t[56313]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[507927] "RVV" "temp" "type variable"
    unknown call_tmp[611164] "expr temp" "maybe param" "maybe type" "temp"
    (611167 'move' call_tmp[611164](56319 call max int(64)[13]))
    unknown call_tmp[611169] "expr temp" "maybe param" "maybe type" "temp"
    (611172 'move' call_tmp[611169](56320 call > p[56308] call_tmp[611164]))
    unknown call_tmp[611174] "expr temp" "maybe param" "maybe type" "temp"
    (611177 'move' call_tmp[611174](56371 call _cond_test call_tmp[611169]))
    if call_tmp[611174]
    {
      unknown call_tmp[611179] "expr temp" "maybe param" "maybe type" "temp"
      (611182 'move' call_tmp[611179](56343 call max int(64)[13]))
      unknown call_tmp[611184] "expr temp" "maybe param" "maybe type" "temp"
      (611187 'move' call_tmp[611184](56345 call _cast string[26] call_tmp[611179]))
      unknown call_tmp[611189] "expr temp" "maybe param" "maybe type" "temp"
      (611192 'move' call_tmp[611189](56347 call + "Tuples of size >" call_tmp[611184]))
      unknown call_tmp[611194] "expr temp" "maybe param" "maybe type" "temp"
      (611197 'move' call_tmp[611194](56366 call + call_tmp[611189] " are not currently supported"))
      (56369 call compilerError call_tmp[611194])
    }
    unknown call_tmp[611199] "maybe param" "maybe type" "temp"
    (611202 'move' call_tmp[611199](56379 call _cast int(64)[13] p[56308]))
    unknown pAsInt[56381] "dead at end of block" "param"
    (540692 'init var' pAsInt[56381] call_tmp[611199])
    (56384 'end of statement')
    unknown call_tmp[611204] "expr temp" "maybe param" "maybe type" "temp"
    (611207 'move' call_tmp[611204](56387 call * pAsInt[56381] t[56313]))
    (507932 'move' ret[507927](507931 'deref' call_tmp[611204]))
    (507929 return ret[507927])
  }
  function *[56399](param arg p[56396]:bool[10], arg t[56401]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56422 call compilerError "Tuple types cannot be defined using boolean sizes")
    (507934 return _void[55])
  }
  function *[56433](arg p[56430]:bool[10], arg t[56435]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56440 call compilerError "Tuple types cannot be defined using boolean sizes")
    (507936 return _void[55])
  }
  function _build_star_tuple_noref[56451](param arg p[56448]:int(64)[13], arg t[56453]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (507938 return _void[55])
  }
  function *[56462](arg t[56460]:_any[178](?), param arg p[56465]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56489 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (507940 return _void[55])
  }
  function *[56500](arg p[56497]:integral[199](?), arg t[56502]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56523 call compilerError "tuple size must be known at compile-time")
    (507942 return _void[55])
  }
  function chpl__tuplify[56532](arg x[56530]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[507946] "RVV" "temp"
    unknown call_tmp[611209] "expr temp" "maybe param" "maybe type" "temp"
    (611212 'move' call_tmp[611209](56537 call isTuple x[56530]))
    unknown call_tmp[611214] "expr temp" "maybe param" "maybe type" "temp"
    (611217 'move' call_tmp[611214](56546 call _cond_test call_tmp[611209]))
    if call_tmp[611214]
    {
      (507951 'move' ret[507946](507950 'deref' x[56530]))
      gotoReturn _end_chpl__tuplify[507944] _end_chpl__tuplify[507944]
    }
    {
      unknown call_tmp[611219] "expr temp" "maybe param" "maybe type" "temp"
      (611222 'move' call_tmp[611219](56542 call _build_tuple x[56530]))
      (507956 'move' ret[507946](507955 'deref' call_tmp[611219]))
      gotoReturn _end_chpl__tuplify[507944] _end_chpl__tuplify[507944]
    }
    label _end_chpl__tuplify[507944]
    (507948 return ret[507946])
  }
  function isTupleValue[56561](arg x[56558]:_tuple[56199](?)) param : _unknown[51] "no doc"
  {
    unknown ret[507962] "RVV" "param" "temp"
    (507967 'move' ret[507962](507966 'deref' 1))
    (507964 return ret[507962])
  }
  function isTupleValue[56573](arg x[56571]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[507971] "RVV" "param" "temp"
    (507976 'move' ret[507971](507975 'deref' 0))
    (507973 return ret[507971])
  }
  function isHomogeneousTupleValue[56585](arg x[56583]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[507980] "RVV" "param" "temp"
    unknown call_tmp[611224] "expr temp" "maybe param" "maybe type" "temp"
    (611227 'move' call_tmp[611224](56606 'is star tuple type' x[56583]))
    (507985 'move' ret[507980](507984 'deref' call_tmp[611224]))
    (507982 return ret[507980])
  }
  function _check_tuple_var_decl[56618](arg x[56615]:_tuple[56199](?), param arg p[56620]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[507989] "RVV" "param" "temp"
    unknown call_tmp[611231] "expr temp" "maybe param" "maybe type" "temp"
    (611234 'move' call_tmp[611231](56624 call size _mt[243] x[56615]))
    unknown call_tmp[611236] "expr temp" "maybe param" "maybe type" "temp"
    (611239 'move' call_tmp[611236](56627 call == p[56620] call_tmp[611231]))
    unknown call_tmp[611241] "expr temp" "maybe param" "maybe type" "temp"
    (611244 'move' call_tmp[611241](56711 call _cond_test call_tmp[611236]))
    if call_tmp[611241]
    {
      (507994 'move' ret[507989](507993 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[507987] _end__check_tuple_var_decl[507987]
    }
    {
      unknown call_tmp[611248] "expr temp" "maybe param" "maybe type" "temp"
      (611251 'move' call_tmp[611248](56652 call size _mt[243] x[56615]))
      unknown call_tmp[611253] "expr temp" "maybe param" "maybe type" "temp"
      (611256 'move' call_tmp[611253](56656 call _cast string[26] call_tmp[611248]))
      unknown call_tmp[611258] "expr temp" "maybe param" "maybe type" "temp"
      (611261 'move' call_tmp[611258](56658 call + "tuple size (" call_tmp[611253]))
      unknown call_tmp[611263] "expr temp" "maybe param" "maybe type" "temp"
      (611266 'move' call_tmp[611263](56677 call + call_tmp[611258] ") must match the number of grouped variables ("))
      unknown call_tmp[611268] "expr temp" "maybe param" "maybe type" "temp"
      (611271 'move' call_tmp[611268](56681 call _cast string[26] p[56620]))
      unknown call_tmp[611273] "expr temp" "maybe param" "maybe type" "temp"
      (611276 'move' call_tmp[611273](56683 call + call_tmp[611263] call_tmp[611268]))
      unknown call_tmp[611278] "expr temp" "maybe param" "maybe type" "temp"
      (611281 'move' call_tmp[611278](56702 call + call_tmp[611273] ")"))
      (56705 call compilerError call_tmp[611278])
      (474717 'end of statement')
      (507999 'move' ret[507989](507998 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[507987] _end__check_tuple_var_decl[507987]
    }
    label _end__check_tuple_var_decl[507987]
    (507991 return ret[507989])
  }
  function _check_tuple_var_decl[56722](arg x[56720]:_any[178](?), param arg p[56724]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508005] "RVV" "param" "temp"
    (56745 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474719 'end of statement')
    (508010 'move' ret[508005](508009 'deref' 0))
    (508007 return ret[508005])
  }
  function isTupleType[56757](arg t[56755]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508014] "RVV" "param" "temp"
    unknown call_tmp[611283] "expr temp" "maybe param" "maybe type" "temp"
    (611286 'move' call_tmp[611283](56778 'is tuple type' t[56755]))
    (508019 'move' ret[508014](508018 'deref' call_tmp[611283]))
    (508016 return ret[508014])
  }
  function isHomogeneousTupleType[56788](arg t[56786]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508023] "RVV" "param" "temp"
    unknown call_tmp[611288] "expr temp" "maybe param" "maybe type" "temp"
    (611291 'move' call_tmp[611288](56793 'is star tuple type' t[56786]))
    (508028 'move' ret[508023](508027 'deref' call_tmp[611288]))
    (508025 return ret[508023])
  }
  function =[56805](ref arg x[56802]:_tuple[56199](?), arg y[56808]:_tuple[56199](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56842] "dead at end of block" "insert auto destroy"
      (540694 'init var' i[56842] 0)
      unknown tmp[56843] "maybe param" "temp"
      unknown call_tmp[611295] "expr temp" "maybe param" "maybe type" "temp"
      (611298 'move' call_tmp[611295](56823 call size _mt[243] x[56802]))
      unknown call_tmp[611300] "expr temp" "maybe param" "maybe type" "temp"
      (611303 'move' call_tmp[611300](56827 call - call_tmp[611295] 1))
      (56855 'move' tmp[56843](56853 call chpl_compute_low_param_loop_bound 0 call_tmp[611300]))
      unknown tmp[56844] "maybe param" "temp"
      unknown call_tmp[611307] "expr temp" "maybe param" "maybe type" "temp"
      (611310 'move' call_tmp[611307](56862 call size _mt[243] x[56802]))
      unknown call_tmp[611312] "expr temp" "maybe param" "maybe type" "temp"
      (611315 'move' call_tmp[611312](56860 call - call_tmp[611307] 1))
      (56868 'move' tmp[56844](56866 call chpl_compute_high_param_loop_bound 0 call_tmp[611312]))
      unknown tmp[56845] "maybe param" "temp"
      (56871 'move' tmp[56845] 1)
      ParamForLoop[56873]
      { i[56842] tmp[56843] tmp[56844] tmp[56845]
        unknown call_tmp[611317] "expr temp" "maybe param" "maybe type" "temp"
        (611320 'move' call_tmp[611317](56834 call x[56802] i[56842]))
        unknown call_tmp[611322] "expr temp" "maybe param" "maybe type" "temp"
        (611325 'move' call_tmp[611322](56838 call y[56808] i[56842]))
        (56839 call = call_tmp[611317] call_tmp[611322])
      }
      label _unused_continueLabel[56847]
      label _breakLabel[56846]
    }
    (508030 return _void[55])
  }
  where {
    unknown call_tmp[611329] "expr temp" "maybe param" "maybe type" "temp"
    (611332 'move' call_tmp[611329](56812 call size _mt[243] x[56802]))
    unknown call_tmp[611336] "expr temp" "maybe param" "maybe type" "temp"
    (611339 'move' call_tmp[611336](56816 call size _mt[243] y[56808]))
    (56819 call == call_tmp[611329] call_tmp[611336])
  }
  function _tuple[56199](?).this[56893](arg _mt[56898]:_MT[238], arg this[56895]:_tuple[56199](?) :
  _tuple[56199](?), arg i[56890]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508034] "RVV" "temp"
    unknown call_tmp[611341] "expr temp" "maybe param" "maybe type" "temp"
    (611344 'move' call_tmp[611341](56903 call isHomogeneousTuple this[56895]))
    unknown call_tmp[611346] "expr temp" "maybe param" "maybe type" "temp"
    (611349 'move' call_tmp[611346](56904 call ! call_tmp[611341]))
    unknown call_tmp[611351] "expr temp" "maybe param" "maybe type" "temp"
    (611354 'move' call_tmp[611351](56929 call _cond_test call_tmp[611346]))
    if call_tmp[611351]
    {
      (56927 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611356] "expr temp" "maybe param" "maybe type" "temp"
    (611359 'move' call_tmp[611356](56976 call _cond_test 1))
    if call_tmp[611356]
    {
      unknown tmp[418789] "maybe param" "temp"
      (418800 'move' tmp[418789](56938 call < i[56890] 0))
      unknown call_tmp[611361] "expr temp" "maybe param" "maybe type" "temp"
      (611364 'move' call_tmp[611361](418802 call _cond_invalid tmp[418789]))
      if call_tmp[611361]
      {
        (418805 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[554860] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[554861] "maybe param" "temp"
      unknown call_tmp[611366] "expr temp" "maybe param" "maybe type" "temp"
      (611369 'move' call_tmp[611366](418790 call isTrue tmp[418789]))
      (554866 'move' tmp[554861](554864 call _cond_test call_tmp[611366]))
      if tmp[554861]
      {
        (554871 'move' tmp[554860](554868 '_paramFoldLogical' tmp[554861] 1))
      }
      {
        unknown tmp[554873] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611373] "expr temp" "maybe param" "maybe type" "temp"
        (611376 'move' call_tmp[611373](372977 call size _mt[243] this[56895]))
        unknown call_tmp[611378] "expr temp" "maybe param" "maybe type" "temp"
        (611381 'move' call_tmp[611378](56943 call - call_tmp[611373] 1))
        unknown call_tmp[611383] "expr temp" "maybe param" "maybe type" "temp"
        (611386 'move' call_tmp[611383](56945 call > i[56890] call_tmp[611378]))
        (554875 'move' tmp[554873](418794 call isTrue call_tmp[611383]))
        (554880 'move' tmp[554860](554877 '_paramFoldLogical' tmp[554861] tmp[554873]))
      }
      unknown call_tmp[611388] "expr temp" "maybe param" "maybe type" "temp"
      (611391 'move' call_tmp[611388](56971 call _cond_test tmp[554860]))
      if call_tmp[611388]
      {
        (56969 call halt "tuple access out of bounds: " i[56890])
      }
    }
    unknown call_tmp[611393] "expr temp" "maybe param" "maybe type" "temp"
    (611396 'move' call_tmp[611393](57001 'get svec member' this[56895] i[56890]))
    (508039 'move' ret[508034](508038 'addr of' call_tmp[611393]))
    (508036 return ret[508034])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57023] "config" "no doc" "param"
  function _tuple[56199](?).these[57030](arg _mt[57035]:_MT[238], arg this[57032]:_tuple[56199](?) :
  _tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508043] "RVV" "temp"
    unknown call_tmp[611398] "expr temp" "maybe param" "maybe type" "temp"
    (611401 'move' call_tmp[611398](57040 call isHomogeneousTuple this[57032]))
    unknown call_tmp[611403] "expr temp" "maybe param" "maybe type" "temp"
    (611406 'move' call_tmp[611403](57041 call ! call_tmp[611398]))
    unknown call_tmp[611408] "expr temp" "maybe param" "maybe type" "temp"
    (611411 'move' call_tmp[611408](57064 call _cond_test call_tmp[611403]))
    if call_tmp[611408]
    {
      (57062 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611413] "expr temp" "maybe param" "maybe type" "temp"
    (611416 'move' call_tmp[611413](57088 call == CHPL_WARN_TUPLE_ITERATION[57023] "true"))
    unknown call_tmp[611418] "expr temp" "maybe param" "maybe type" "temp"
    (611421 'move' call_tmp[611418](57113 call _cond_test call_tmp[611413]))
    if call_tmp[611418]
    {
      (57111 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57135] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57136] "expr temp" "temp"
      unknown call_tmp[611425] "expr temp" "maybe param" "maybe type" "temp"
      (611428 'move' call_tmp[611425](57151 call size _mt[243] this[57032]))
      unknown call_tmp[611430] "expr temp" "maybe param" "maybe type" "temp"
      (611433 'move' call_tmp[611430](57155 call chpl_direct_counted_range_iter 0 call_tmp[611425]))
      (57145 'move' _iterator[57136](57143 call _getIterator call_tmp[611430]))
      Defer
      {
        {
          (57171 call _freeIterator _iterator[57136])
        }
      }
      { scopeless type
        (57160 'move' _indexOfInterest[57135](57157 call iteratorIndex _iterator[57136]))
      }
      ForLoop[57137]
      {
        unknown i[57164] "index var" "insert auto destroy"
        (474730 'end of statement')
        (57166 'move' i[57164] _indexOfInterest[57135])
        (474731 'end of statement' i[57164])
        {
          unknown yret[508047] "YVV" "temp"
          unknown call_tmp[611435] "expr temp" "maybe param" "maybe type" "temp"
          (611438 'move' call_tmp[611435](57131 call this[57032] i[57164]))
          (508050 'move' yret[508047](508049 'addr of' call_tmp[611435]))
          (508052 yield yret[508047])
          (474733 'end of statement' i[57164])
        }
        label _continueLabel[57140]
        _indexOfInterest[57135]
        _iterator[57136]
      }
      label _breakLabel[57141]
    }
    (508045 return ret[508043])
  }
  function _tuple[56199](?).these[57187](arg _mt[57192]:_MT[238], arg this[57189]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57184]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508056] "RVV" "temp"
    const numTasks[57213] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[554887] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554888] "maybe param" "temp"
    unknown call_tmp[611440] "expr temp" "maybe param" "maybe type" "temp"
    (611443 'move' call_tmp[611440](57203 call == dataParTasksPerLocale[93281] 0))
    (554893 'move' tmp[554888](554891 call _cond_test call_tmp[611440]))
    if tmp[554888]
    {
      unknown tmp[554895] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611445] "expr temp" "maybe param" "maybe type" "temp"
      (611448 'move' call_tmp[611445](357214 call here[90435]))
      (554897 'move' tmp[554895](57206 call maxTaskPar _mt[243] call_tmp[611445]))
      (554902 'move' tmp[554887](554899 '_paramFoldLogical' tmp[554888] tmp[554895]))
    }
    {
      (554907 'move' tmp[554887](554904 '_paramFoldLogical' tmp[554888] dataParTasksPerLocale[93281]))
    }
    (540698 'init var' numTasks[57213] tmp[554887])
    (57216 'end of statement')
    const ignoreRunning[57219] "dead at end of block" "const" "insert auto destroy"
    (540700 'init var' ignoreRunning[57219] dataParIgnoreRunningTasks[93287])
    (57222 'end of statement')
    const minIndicesPerTask[57224] "dead at end of block" "const" "insert auto destroy"
    (540702 'init var' minIndicesPerTask[57224] dataParMinGranularity[93293])
    (57227 'end of statement')
    unknown call_tmp[611454] "maybe param" "maybe type" "temp"
    (611457 'move' call_tmp[611454](57229 call size _mt[243] this[57189]))
    const length[57232] "dead at end of block" "const" "insert auto destroy"
    (540704 'init var' length[57232] call_tmp[611454])
    (57235 'end of statement')
    unknown call_tmp[611459] "expr temp" "maybe param" "maybe type" "temp"
    (611462 'move' call_tmp[611459](57237 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611464] "expr temp" "maybe param" "maybe type" "temp"
    (611467 'move' call_tmp[611464](57240 call # call_tmp[611459] length[57232]))
    unknown call_tmp[611469] "maybe param" "maybe type" "temp"
    (611472 'move' call_tmp[611469](57242 call _build_tuple call_tmp[611464]))
    const myRange[57244] "dead at end of block" "const" "insert auto destroy"
    (540706 'init var' myRange[57244] call_tmp[611469])
    (57247 'end of statement')
    unknown call_tmp[611474] "maybe param" "maybe type" "temp"
    (611477 'move' call_tmp[611474](57259 call _computeChunkStuff numTasks[57213] ignoreRunning[57219] minIndicesPerTask[57224] myRange[57244]))
    unknown tmp[57260] "dead at end of block" "insert auto destroy" "temp"
    (540708 'init var' tmp[57260] call_tmp[611474])
    (57264 call _check_tuple_var_decl tmp[57260] 2)
    (474736 'end of statement')
    unknown call_tmp[611479] "maybe param" "maybe type" "temp"
    (611482 'move' call_tmp[611479](57261 call tmp[57260] 0))
    unknown numChunks[57248] "dead at end of block" "insert auto destroy"
    (540710 'init var' numChunks[57248] call_tmp[611479])
    (57269 'end of statement' length[57232])
    unknown call_tmp[611484] "expr temp" "maybe param" "maybe type" "temp"
    (611487 'move' call_tmp[611484](57272 call == numChunks[57248] 1))
    unknown call_tmp[611489] "expr temp" "maybe param" "maybe type" "temp"
    (611492 'move' call_tmp[611489](57516 call _cond_test call_tmp[611484]))
    if call_tmp[611489]
    {
      unknown yret[508060] "YVV" "temp"
      (508063 'move' yret[508060](508062 'addr of' myRange[57244]))
      (508065 yield yret[508060])
      (474737 'end of statement' myRange[57244])
    }
    {
      {
        unknown tmpIter[57322] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611494] "expr temp" "maybe param" "maybe type" "temp"
        (611497 'move' call_tmp[611494](57280 call chpl_build_low_bounded_range 0))
        (57325 'move' tmpIter[57322](57283 call # call_tmp[611494] numChunks[57248]))
        unknown isRngDomArr[57496] "maybe param" "temp"
        unknown tmp[418810] "maybe param" "temp"
        (418821 'move' tmp[418810](57498 call isBoundedRange tmpIter[57322]))
        unknown call_tmp[611499] "expr temp" "maybe param" "maybe type" "temp"
        (611502 'move' call_tmp[611499](418823 call _cond_invalid tmp[418810]))
        if call_tmp[611499]
        {
          (418826 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[554941] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[554942] "maybe param" "temp"
        unknown call_tmp[611504] "expr temp" "maybe param" "maybe type" "temp"
        (611507 'move' call_tmp[611504](418811 call isTrue tmp[418810]))
        (554947 'move' tmp[554942](554945 call _cond_test call_tmp[611504]))
        if tmp[554942]
        {
          (554952 'move' tmp[554941](554949 '_paramFoldLogical' tmp[554942] 1))
        }
        {
          unknown tmp[418831] "maybe param" "temp"
          (418842 'move' tmp[418831](57501 call isDomain tmpIter[57322]))
          unknown call_tmp[611509] "expr temp" "maybe param" "maybe type" "temp"
          (611512 'move' call_tmp[611509](418844 call _cond_invalid tmp[418831]))
          if call_tmp[611509]
          {
            (418847 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[554914] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[554915] "maybe param" "temp"
          unknown call_tmp[611514] "expr temp" "maybe param" "maybe type" "temp"
          (611517 'move' call_tmp[611514](418832 call isTrue tmp[418831]))
          (554920 'move' tmp[554915](554918 call _cond_test call_tmp[611514]))
          if tmp[554915]
          {
            (554925 'move' tmp[554914](554922 '_paramFoldLogical' tmp[554915] 1))
          }
          {
            unknown tmp[554927] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611519] "expr temp" "maybe param" "maybe type" "temp"
            (611522 'move' call_tmp[611519](57504 call isArray tmpIter[57322]))
            (554929 'move' tmp[554927](418836 call isTrue call_tmp[611519]))
            (554934 'move' tmp[554914](554931 '_paramFoldLogical' tmp[554915] tmp[554927]))
          }
          unknown tmp[554954] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (554956 'move' tmp[554954](418815 call isTrue tmp[554914]))
          (554961 'move' tmp[554941](554958 '_paramFoldLogical' tmp[554942] tmp[554954]))
        }
        (57511 'move' isRngDomArr[57496] tmp[554941])
        if isRngDomArr[57496]
        {
          const _coforallCount[57363] "const" "end count" "temp"
          (57432 'move' _coforallCount[57363](57429 call _endCountAlloc 1))
          unknown numTasks[57364] "temp"
          (57416 'move' numTasks[57364](57412 call size _mt[243] tmpIter[57322]))
          (57407 call _upEndCount _coforallCount[57363] 1 numTasks[57364])
          (474740 'end of statement')
          (57404 call chpl_resetTaskSpawn numTasks[57364])
          (474741 'end of statement')
          unknown _indexOfInterest[57371] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57372] "expr temp" "temp"
          (57381 'move' _iterator[57372](57379 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57397 call _freeIterator _iterator[57372])
            }
          }
          { scopeless type
            (57386 'move' _indexOfInterest[57371](57383 call iteratorIndex _iterator[57372]))
          }
          ForLoop[57373]
          {
            unknown chunk[57390] "coforall index var" "index var" "insert auto destroy"
            (474743 'end of statement')
            (57392 'move' chunk[57390] _indexOfInterest[57371])
            (474744 'end of statement' chunk[57390])
            (934041 call coforall_fn[934039] length[57232] numChunks[57248])
            function coforall_fn[934039](arg length[934046], arg numChunks[934049]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611526] "expr temp" "maybe param" "maybe type" "temp"
                (611529 'move' call_tmp[611526](57336 call - length[934046] 1))
                unknown call_tmp[611531] "maybe param" "maybe type" "temp"
                (611534 'move' call_tmp[611531](57331 call _computeBlock length[934046] numChunks[934049] chunk[57390] call_tmp[611526]))
                const tmp[57329] "dead at end of block" "const" "insert auto destroy" "temp"
                (540712 'init var' tmp[57329] call_tmp[611531])
                (57341 call _check_tuple_var_decl tmp[57329] 2)
                (474746 'end of statement')
                unknown call_tmp[611536] "maybe param" "maybe type" "temp"
                (611539 'move' call_tmp[611536](57346 call tmp[57329] 0))
                const lo[57344] "dead at end of block" "const" "insert auto destroy"
                (540714 'init var' lo[57344] call_tmp[611536])
                unknown call_tmp[611541] "maybe param" "maybe type" "temp"
                (611544 'move' call_tmp[611541](57351 call tmp[57329] 1))
                const hi[57349] "dead at end of block" "const" "insert auto destroy"
                (540716 'init var' hi[57349] call_tmp[611541])
                (57354 'end of statement')
                unknown yret[508067] "YVV" "temp"
                unknown call_tmp[611546] "expr temp" "maybe param" "maybe type" "temp"
                (611549 'move' call_tmp[611546](57359 call chpl_build_bounded_range lo[57344] hi[57349]))
                unknown call_tmp[611551] "expr temp" "maybe param" "maybe type" "temp"
                (611554 'move' call_tmp[611551](57357 call _build_tuple call_tmp[611546]))
                (508070 'move' yret[508067](508069 'addr of' call_tmp[611551]))
                (508072 yield yret[508067])
                (474747 'end of statement' lo[57344] hi[57349])
              }
              (57366 call _downEndCount _coforallCount[57363] nil[44])
              (934044 return _void[55])
            }
            {
            }
            label _continueLabel[57376]
            _indexOfInterest[57371]
            _iterator[57372]
          }
          label _breakLabel[57377]
          Defer
          {
            {
              (57419 call _endCountFree _coforallCount[57363])
            }
          }
          (57424 call _waitEndCount _coforallCount[57363] 1 numTasks[57364])
        }
        {
          const _coforallCount[57436] "const" "end count" "temp"
          (57493 'move' _coforallCount[57436](57490 call _endCountAlloc 1))
          unknown _indexOfInterest[57444] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57445] "expr temp" "temp"
          (57454 'move' _iterator[57445](57452 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57470 call _freeIterator _iterator[57445])
            }
          }
          { scopeless type
            (57459 'move' _indexOfInterest[57444](57456 call iteratorIndex _iterator[57445]))
          }
          ForLoop[57446]
          {
            unknown chunk[57463] "coforall index var" "index var" "insert auto destroy"
            (474754 'end of statement')
            (57465 'move' chunk[57463] _indexOfInterest[57444])
            (474755 'end of statement' chunk[57463])
            (57477 call _upEndCount _coforallCount[57436] 1)
            (474757 'end of statement')
            (934054 call coforall_fn[934052] length[57232] numChunks[57248])
            function coforall_fn[934052](arg length[934059], arg numChunks[934062]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611556] "expr temp" "maybe param" "maybe type" "temp"
                (611559 'move' call_tmp[611556](57297 call - length[934059] 1))
                unknown call_tmp[611561] "maybe param" "maybe type" "temp"
                (611564 'move' call_tmp[611561](57299 call _computeBlock length[934059] numChunks[934062] chunk[57463] call_tmp[611556]))
                const tmp[57300] "dead at end of block" "const" "insert auto destroy" "temp"
                (540718 'init var' tmp[57300] call_tmp[611561])
                (57307 call _check_tuple_var_decl tmp[57300] 2)
                (474758 'end of statement')
                unknown call_tmp[611566] "maybe param" "maybe type" "temp"
                (611569 'move' call_tmp[611566](57301 call tmp[57300] 0))
                const lo[57285] "dead at end of block" "const" "insert auto destroy"
                (540720 'init var' lo[57285] call_tmp[611566])
                unknown call_tmp[611571] "maybe param" "maybe type" "temp"
                (611574 'move' call_tmp[611571](57304 call tmp[57300] 1))
                const hi[57287] "dead at end of block" "const" "insert auto destroy"
                (540722 'init var' hi[57287] call_tmp[611571])
                (57312 'end of statement')
                unknown yret[508074] "YVV" "temp"
                unknown call_tmp[611576] "expr temp" "maybe param" "maybe type" "temp"
                (611579 'move' call_tmp[611576](57316 call chpl_build_bounded_range lo[57285] hi[57287]))
                unknown call_tmp[611581] "expr temp" "maybe param" "maybe type" "temp"
                (611584 'move' call_tmp[611581](57318 call _build_tuple call_tmp[611576]))
                (508077 'move' yret[508074](508076 'addr of' call_tmp[611581]))
                (508079 yield yret[508074])
                (474759 'end of statement' lo[57285] hi[57287])
              }
              (57439 call _downEndCount _coforallCount[57436] nil[44])
              (934057 return _void[55])
            }
            {
            }
            label _continueLabel[57449]
            _indexOfInterest[57444]
            _iterator[57445]
          }
          label _breakLabel[57450]
          Defer
          {
            {
              (57481 call _endCountFree _coforallCount[57436])
            }
          }
          (57486 call _waitEndCount _coforallCount[57436] 1)
        }
      }
    }
    (508058 return ret[508056])
  }
  where {
    (57199 call == tag[57184] leader[447])
  }
  function _tuple[56199](?).these[57530](arg _mt[57539]:_MT[238], arg this[57536]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57527]:iterKind[453], arg followThis[57533]:_tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508083] "RVV" "temp"
    unknown call_tmp[611588] "expr temp" "maybe param" "maybe type" "temp"
    (611591 'move' call_tmp[611588](57549 call size _mt[243] followThis[57533]))
    unknown call_tmp[611593] "expr temp" "maybe param" "maybe type" "temp"
    (611596 'move' call_tmp[611593](57553 call != call_tmp[611588] 1))
    unknown call_tmp[611598] "expr temp" "maybe param" "maybe type" "temp"
    (611601 'move' call_tmp[611598](57576 call _cond_test call_tmp[611593]))
    if call_tmp[611598]
    {
      (57574 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611603] "maybe param" "maybe type" "temp"
    (611606 'move' call_tmp[611603](57585 call followThis[57533] 0))
    unknown fThis[57586] "dead at end of block" "insert auto destroy"
    (540724 'init var' fThis[57586] call_tmp[611603])
    (57589 'end of statement')
    {
      unknown _indexOfInterest[57599] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57600] "expr temp" "temp"
      (57609 'move' _iterator[57600](57607 call _getIterator fThis[57586]))
      Defer
      {
        {
          (57625 call _freeIterator _iterator[57600])
        }
      }
      { scopeless type
        (57614 'move' _indexOfInterest[57599](57611 call iteratorIndex _iterator[57600]))
      }
      ForLoop[57601]
      {
        unknown i[57618] "index var" "insert auto destroy"
        (474767 'end of statement')
        (57620 'move' i[57618] _indexOfInterest[57599])
        (474768 'end of statement' i[57618])
        {
          unknown yret[508087] "YVV" "temp"
          unknown call_tmp[611608] "expr temp" "maybe param" "maybe type" "temp"
          (611611 'move' call_tmp[611608](57595 call this[57536] i[57618]))
          (508090 'move' yret[508087](508089 'addr of' call_tmp[611608]))
          (508092 yield yret[508087])
          (474770 'end of statement' i[57618])
        }
        label _continueLabel[57604]
        _indexOfInterest[57599]
        _iterator[57600]
      }
      label _breakLabel[57605]
    }
    (508085 return ret[508083])
  }
  where {
    (57546 call == tag[57527] follower[449])
  }
  function _tuple[56199](?).indices[57638](arg _mt[57643]:_MT[238], arg this[57640]:_tuple[56199](?) :
  _tuple[56199](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508096] "RVV" "temp"
    unknown call_tmp[611615] "expr temp" "maybe param" "maybe type" "temp"
    (611618 'move' call_tmp[611615](57647 call size _mt[243] this[57640]))
    unknown call_tmp[611620] "expr temp" "maybe param" "maybe type" "temp"
    (611623 'move' call_tmp[611620](57651 call - call_tmp[611615] 1))
    unknown call_tmp[611625] "expr temp" "maybe param" "maybe type" "temp"
    (611628 'move' call_tmp[611625](57653 call chpl_build_bounded_range 0 call_tmp[611620]))
    (508101 'move' ret[508096](508100 'deref' call_tmp[611625]))
    (508098 return ret[508096])
  }
  function _cast[57669](arg t[57666] :
  (57665 call complex(128)[140] 64), arg x[57676]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508111] "RVV" "temp"
    function _chpl_complex64[57688](arg re[57685] :
    (57684 call real(64)[16] 32), arg im[57694] :
    (57693 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508105] "RVV" "temp"
      (508107 return ret[508105])
    }
    { scopeless type
      (57700 call complex(128)[140] 64)
    }
    unknown call_tmp[611630] "expr temp" "maybe param" "maybe type" "temp"
    (611633 'move' call_tmp[611630](57713 call real(64)[16] 32))
    unknown call_tmp[611635] "expr temp" "maybe param" "maybe type" "temp"
    (611638 'move' call_tmp[611635](57709 call x[57676] 0))
    unknown call_tmp[611640] "expr temp" "maybe param" "maybe type" "temp"
    (611643 'move' call_tmp[611640](57714 call _cast call_tmp[611630] call_tmp[611635]))
    unknown call_tmp[611645] "expr temp" "maybe param" "maybe type" "temp"
    (611648 'move' call_tmp[611645](57724 call real(64)[16] 32))
    unknown call_tmp[611650] "expr temp" "maybe param" "maybe type" "temp"
    (611653 'move' call_tmp[611650](57720 call x[57676] 1))
    unknown call_tmp[611655] "expr temp" "maybe param" "maybe type" "temp"
    (611658 'move' call_tmp[611655](57725 call _cast call_tmp[611645] call_tmp[611650]))
    unknown call_tmp[611660] "expr temp" "maybe param" "maybe type" "temp"
    (611663 'move' call_tmp[611660](57727 call _chpl_complex64 call_tmp[611640] call_tmp[611655]))
    (508116 'move' ret[508111](508115 'deref' call_tmp[611660]))
    (508113 return ret[508111])
  }
  where {
    unknown call_tmp[611665] "expr temp" "maybe param" "maybe type" "temp"
    (611668 'move' call_tmp[611665](454649 'query' x[57676] c"size"))
    unknown call_tmp[611670] "expr temp" "maybe param" "maybe type" "temp"
    (611673 'move' call_tmp[611670](454650 call == 2 call_tmp[611665]))
    (454654 call & 1 call_tmp[611670])
  }
  function _cast[57741](arg t[57738] :
  (57737 call complex(128)[140] 128), arg x[57748]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508126] "RVV" "temp"
    function _chpl_complex128[57760](arg re[57757] :
    (57756 call real(64)[16] 64), arg im[57766] :
    (57765 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508120] "RVV" "temp"
      (508122 return ret[508120])
    }
    { scopeless type
      (57772 call complex(128)[140] 128)
    }
    unknown call_tmp[611675] "expr temp" "maybe param" "maybe type" "temp"
    (611678 'move' call_tmp[611675](57785 call real(64)[16] 64))
    unknown call_tmp[611680] "expr temp" "maybe param" "maybe type" "temp"
    (611683 'move' call_tmp[611680](57781 call x[57748] 0))
    unknown call_tmp[611685] "expr temp" "maybe param" "maybe type" "temp"
    (611688 'move' call_tmp[611685](57786 call _cast call_tmp[611675] call_tmp[611680]))
    unknown call_tmp[611690] "expr temp" "maybe param" "maybe type" "temp"
    (611693 'move' call_tmp[611690](57796 call real(64)[16] 64))
    unknown call_tmp[611695] "expr temp" "maybe param" "maybe type" "temp"
    (611698 'move' call_tmp[611695](57792 call x[57748] 1))
    unknown call_tmp[611700] "expr temp" "maybe param" "maybe type" "temp"
    (611703 'move' call_tmp[611700](57797 call _cast call_tmp[611690] call_tmp[611695]))
    unknown call_tmp[611705] "expr temp" "maybe param" "maybe type" "temp"
    (611708 'move' call_tmp[611705](57799 call _chpl_complex128 call_tmp[611685] call_tmp[611700]))
    (508131 'move' ret[508126](508130 'deref' call_tmp[611705]))
    (508128 return ret[508126])
  }
  where {
    unknown call_tmp[611710] "expr temp" "maybe param" "maybe type" "temp"
    (611713 'move' call_tmp[611710](454670 'query' x[57748] c"size"))
    unknown call_tmp[611715] "expr temp" "maybe param" "maybe type" "temp"
    (611718 'move' call_tmp[611715](454671 call == 2 call_tmp[611710]))
    (454675 call & 1 call_tmp[611715])
  }
  function _cast[57810](arg t[57807]:_tuple[56199](?), arg x[57813]:_tuple[56199](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508133 return _void[55])
  }
  function chpl__tupleRest[57825](arg t[57822]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508146] "RVV" "temp"
    function chpl__tupleRestHelper[57831](arg first[57829]:_any[178](?), arg rest[57834]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508137] "RVV" "temp"
      (508142 'move' ret[508137](508141 'deref' rest[57834]))
      (508139 return ret[508137])
    }
    unknown call_tmp[611720] "expr temp" "maybe param" "maybe type" "temp"
    (611723 'move' call_tmp[611720](57848 call chpl__tupleRestHelper(57846 'expand_tuple' t[57822])))
    (508151 'move' ret[508146](508150 'deref' call_tmp[611720]))
    (508148 return ret[508146])
  }
  function +[57859](arg a[57856]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508155] "RVV" "temp"
    unknown result[57863] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611725] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611728 'move' call_tmp[611725](57862 'typeof' a[57856]))
    (540726 'default init var' result[57863] call_tmp[611725])
    (57866 'end of statement')
    {
      unknown d[57891] "dead at end of block" "insert auto destroy"
      (540728 'init var' d[57891] 0)
      (474777 'end of statement')
      unknown tmp[57892] "maybe param" "temp"
      unknown call_tmp[611732] "expr temp" "maybe param" "maybe type" "temp"
      (611735 'move' call_tmp[611732](57870 call size _mt[243] a[57856]))
      unknown call_tmp[611737] "expr temp" "maybe param" "maybe type" "temp"
      (611740 'move' call_tmp[611737](57874 call - call_tmp[611732] 1))
      (57904 'move' tmp[57892](57902 call chpl_compute_low_param_loop_bound 0 call_tmp[611737]))
      unknown tmp[57893] "maybe param" "temp"
      unknown call_tmp[611744] "expr temp" "maybe param" "maybe type" "temp"
      (611747 'move' call_tmp[611744](57911 call size _mt[243] a[57856]))
      unknown call_tmp[611749] "expr temp" "maybe param" "maybe type" "temp"
      (611752 'move' call_tmp[611749](57909 call - call_tmp[611744] 1))
      (57917 'move' tmp[57893](57915 call chpl_compute_high_param_loop_bound 0 call_tmp[611749]))
      unknown tmp[57894] "maybe param" "temp"
      (57920 'move' tmp[57894] 1)
      ParamForLoop[57922]
      { d[57891] tmp[57892] tmp[57893] tmp[57894]
        unknown call_tmp[611754] "expr temp" "maybe param" "maybe type" "temp"
        (611757 'move' call_tmp[611754](57881 call result[57863] d[57891]))
        unknown call_tmp[611759] "expr temp" "maybe param" "maybe type" "temp"
        (611762 'move' call_tmp[611759](57885 call a[57856] d[57891]))
        unknown call_tmp[611764] "expr temp" "maybe param" "maybe type" "temp"
        (611767 'move' call_tmp[611764](57886 call + call_tmp[611759]))
        (57888 call = call_tmp[611754] call_tmp[611764])
        (474778 'end of statement' result[57863] d[57891] d[57891])
      }
      label _unused_continueLabel[57896]
      label _breakLabel[57895]
    }
    (508160 'move' ret[508155](508159 'deref' result[57863]))
    gotoReturn _end_+[508153] _end_+[508153]
    (474782 'end of statement' result[57863])
    label _end_+[508153]
    (508157 return ret[508155])
  }
  function -[57942](arg a[57939]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508166] "RVV" "temp"
    unknown result[57946] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611769] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611772 'move' call_tmp[611769](57945 'typeof' a[57939]))
    (540730 'default init var' result[57946] call_tmp[611769])
    (57949 'end of statement')
    {
      unknown d[57974] "dead at end of block" "insert auto destroy"
      (540732 'init var' d[57974] 0)
      (474784 'end of statement')
      unknown tmp[57975] "maybe param" "temp"
      unknown call_tmp[611776] "expr temp" "maybe param" "maybe type" "temp"
      (611779 'move' call_tmp[611776](57953 call size _mt[243] a[57939]))
      unknown call_tmp[611781] "expr temp" "maybe param" "maybe type" "temp"
      (611784 'move' call_tmp[611781](57957 call - call_tmp[611776] 1))
      (57987 'move' tmp[57975](57985 call chpl_compute_low_param_loop_bound 0 call_tmp[611781]))
      unknown tmp[57976] "maybe param" "temp"
      unknown call_tmp[611788] "expr temp" "maybe param" "maybe type" "temp"
      (611791 'move' call_tmp[611788](57994 call size _mt[243] a[57939]))
      unknown call_tmp[611793] "expr temp" "maybe param" "maybe type" "temp"
      (611796 'move' call_tmp[611793](57992 call - call_tmp[611788] 1))
      (58000 'move' tmp[57976](57998 call chpl_compute_high_param_loop_bound 0 call_tmp[611793]))
      unknown tmp[57977] "maybe param" "temp"
      (58003 'move' tmp[57977] 1)
      ParamForLoop[58005]
      { d[57974] tmp[57975] tmp[57976] tmp[57977]
        unknown call_tmp[611798] "expr temp" "maybe param" "maybe type" "temp"
        (611801 'move' call_tmp[611798](57964 call result[57946] d[57974]))
        unknown call_tmp[611803] "expr temp" "maybe param" "maybe type" "temp"
        (611806 'move' call_tmp[611803](57968 call a[57939] d[57974]))
        unknown call_tmp[611808] "expr temp" "maybe param" "maybe type" "temp"
        (611811 'move' call_tmp[611808](57969 call - call_tmp[611803]))
        (57971 call = call_tmp[611798] call_tmp[611808])
        (474785 'end of statement' result[57946] d[57974] d[57974])
      }
      label _unused_continueLabel[57979]
      label _breakLabel[57978]
    }
    (508171 'move' ret[508166](508170 'deref' result[57946]))
    gotoReturn _end_-[508164] _end_-[508164]
    (474789 'end of statement' result[57946])
    label _end_-[508164]
    (508168 return ret[508166])
  }
  function ~[58025](arg a[58022]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508177] "RVV" "temp"
    unknown result[58029] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611813] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611816 'move' call_tmp[611813](58028 'typeof' a[58022]))
    (540734 'default init var' result[58029] call_tmp[611813])
    (58032 'end of statement')
    {
      unknown d[58057] "dead at end of block" "insert auto destroy"
      (540736 'init var' d[58057] 0)
      (474791 'end of statement')
      unknown tmp[58058] "maybe param" "temp"
      unknown call_tmp[611820] "expr temp" "maybe param" "maybe type" "temp"
      (611823 'move' call_tmp[611820](58036 call size _mt[243] a[58022]))
      unknown call_tmp[611825] "expr temp" "maybe param" "maybe type" "temp"
      (611828 'move' call_tmp[611825](58040 call - call_tmp[611820] 1))
      (58070 'move' tmp[58058](58068 call chpl_compute_low_param_loop_bound 0 call_tmp[611825]))
      unknown tmp[58059] "maybe param" "temp"
      unknown call_tmp[611832] "expr temp" "maybe param" "maybe type" "temp"
      (611835 'move' call_tmp[611832](58077 call size _mt[243] a[58022]))
      unknown call_tmp[611837] "expr temp" "maybe param" "maybe type" "temp"
      (611840 'move' call_tmp[611837](58075 call - call_tmp[611832] 1))
      (58083 'move' tmp[58059](58081 call chpl_compute_high_param_loop_bound 0 call_tmp[611837]))
      unknown tmp[58060] "maybe param" "temp"
      (58086 'move' tmp[58060] 1)
      ParamForLoop[58088]
      { d[58057] tmp[58058] tmp[58059] tmp[58060]
        unknown call_tmp[611842] "expr temp" "maybe param" "maybe type" "temp"
        (611845 'move' call_tmp[611842](58047 call result[58029] d[58057]))
        unknown call_tmp[611847] "expr temp" "maybe param" "maybe type" "temp"
        (611850 'move' call_tmp[611847](58051 call a[58022] d[58057]))
        unknown call_tmp[611852] "expr temp" "maybe param" "maybe type" "temp"
        (611855 'move' call_tmp[611852](58052 call ~ call_tmp[611847]))
        (58054 call = call_tmp[611842] call_tmp[611852])
        (474792 'end of statement' result[58029] d[58057] d[58057])
      }
      label _unused_continueLabel[58062]
      label _breakLabel[58061]
    }
    (508182 'move' ret[508177](508181 'deref' result[58029]))
    gotoReturn _end_~[508175] _end_~[508175]
    (474796 'end of statement' result[58029])
    label _end_~[508175]
    (508179 return ret[508177])
  }
  function ![58108](arg a[58105]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508188] "RVV" "temp"
    unknown result[58112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611857] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611860 'move' call_tmp[611857](58111 'typeof' a[58105]))
    (540738 'default init var' result[58112] call_tmp[611857])
    (58115 'end of statement')
    {
      unknown d[58140] "dead at end of block" "insert auto destroy"
      (540740 'init var' d[58140] 0)
      (474798 'end of statement')
      unknown tmp[58141] "maybe param" "temp"
      unknown call_tmp[611864] "expr temp" "maybe param" "maybe type" "temp"
      (611867 'move' call_tmp[611864](58119 call size _mt[243] a[58105]))
      unknown call_tmp[611869] "expr temp" "maybe param" "maybe type" "temp"
      (611872 'move' call_tmp[611869](58123 call - call_tmp[611864] 1))
      (58153 'move' tmp[58141](58151 call chpl_compute_low_param_loop_bound 0 call_tmp[611869]))
      unknown tmp[58142] "maybe param" "temp"
      unknown call_tmp[611876] "expr temp" "maybe param" "maybe type" "temp"
      (611879 'move' call_tmp[611876](58160 call size _mt[243] a[58105]))
      unknown call_tmp[611881] "expr temp" "maybe param" "maybe type" "temp"
      (611884 'move' call_tmp[611881](58158 call - call_tmp[611876] 1))
      (58166 'move' tmp[58142](58164 call chpl_compute_high_param_loop_bound 0 call_tmp[611881]))
      unknown tmp[58143] "maybe param" "temp"
      (58169 'move' tmp[58143] 1)
      ParamForLoop[58171]
      { d[58140] tmp[58141] tmp[58142] tmp[58143]
        unknown call_tmp[611886] "expr temp" "maybe param" "maybe type" "temp"
        (611889 'move' call_tmp[611886](58130 call result[58112] d[58140]))
        unknown call_tmp[611891] "expr temp" "maybe param" "maybe type" "temp"
        (611894 'move' call_tmp[611891](58134 call a[58105] d[58140]))
        unknown call_tmp[611896] "expr temp" "maybe param" "maybe type" "temp"
        (611899 'move' call_tmp[611896](58135 call ! call_tmp[611891]))
        (58137 call = call_tmp[611886] call_tmp[611896])
        (474799 'end of statement' result[58112] d[58140] d[58140])
      }
      label _unused_continueLabel[58145]
      label _breakLabel[58144]
    }
    (508193 'move' ret[508188](508192 'deref' result[58112]))
    gotoReturn _end_![508186] _end_![508186]
    (474803 'end of statement' result[58112])
    label _end_![508186]
    (508190 return ret[508188])
  }
  function max[58189](arg t[58187]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508199] "RVV" "temp"
    unknown result[58197] "dead at end of block" "insert auto destroy"
    (540742 'default init var' result[58197] t[58187])
    (58200 'end of statement')
    {
      unknown i[58227] "dead at end of block" "insert auto destroy"
      (540744 'init var' i[58227] 0)
      (474805 'end of statement')
      unknown tmp[58228] "maybe param" "temp"
      unknown call_tmp[611903] "expr temp" "maybe param" "maybe type" "temp"
      (611906 'move' call_tmp[611903](58204 call size _mt[243] result[58197]))
      unknown call_tmp[611908] "expr temp" "maybe param" "maybe type" "temp"
      (611911 'move' call_tmp[611908](58208 call - call_tmp[611903] 1))
      (58240 'move' tmp[58228](58238 call chpl_compute_low_param_loop_bound 0 call_tmp[611908]))
      unknown tmp[58229] "maybe param" "temp"
      unknown call_tmp[611915] "expr temp" "maybe param" "maybe type" "temp"
      (611918 'move' call_tmp[611915](58247 call size _mt[243] result[58197]))
      unknown call_tmp[611920] "expr temp" "maybe param" "maybe type" "temp"
      (611923 'move' call_tmp[611920](58245 call - call_tmp[611915] 1))
      (58253 'move' tmp[58229](58251 call chpl_compute_high_param_loop_bound 0 call_tmp[611920]))
      unknown tmp[58230] "maybe param" "temp"
      (58256 'move' tmp[58230] 1)
      ParamForLoop[58258]
      { i[58227] tmp[58228] tmp[58229] tmp[58230]
        {
          unknown call_tmp[611925] "expr temp" "maybe param" "maybe type" "temp"
          (611928 'move' call_tmp[611925](58215 call result[58197] i[58227]))
          unknown call_tmp[611930] "expr temp" "maybe param" "maybe type" "temp"
          (611933 'move' call_tmp[611930](58220 call t[58187] i[58227]))
          unknown call_tmp[611935] "expr temp" "maybe param" "maybe type" "temp"
          (611938 'move' call_tmp[611935](58222 call max call_tmp[611930]))
          (58223 call = call_tmp[611925] call_tmp[611935])
          (474806 'end of statement' result[58197] i[58227] i[58227])
        }
      }
      label _unused_continueLabel[58232]
      label _breakLabel[58231]
    }
    (508205 'move' ret[508199](508204 'coerce' result[58197] t[58187]))
    gotoReturn _end_max[508197] _end_max[508197]
    (474810 'end of statement' result[58197])
    label _end_max[508197]
    (508201 return ret[508199])
  }
  where {
    (58195 call isTupleType t[58187])
  }
  { scopeless type
    t[58187]
  }
  function min[58278](arg t[58276]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508211] "RVV" "temp"
    unknown result[58286] "dead at end of block" "insert auto destroy"
    (540746 'default init var' result[58286] t[58276])
    (58289 'end of statement')
    {
      unknown i[58316] "dead at end of block" "insert auto destroy"
      (540748 'init var' i[58316] 0)
      (474812 'end of statement')
      unknown tmp[58317] "maybe param" "temp"
      unknown call_tmp[611942] "expr temp" "maybe param" "maybe type" "temp"
      (611945 'move' call_tmp[611942](58293 call size _mt[243] result[58286]))
      unknown call_tmp[611947] "expr temp" "maybe param" "maybe type" "temp"
      (611950 'move' call_tmp[611947](58297 call - call_tmp[611942] 1))
      (58329 'move' tmp[58317](58327 call chpl_compute_low_param_loop_bound 0 call_tmp[611947]))
      unknown tmp[58318] "maybe param" "temp"
      unknown call_tmp[611954] "expr temp" "maybe param" "maybe type" "temp"
      (611957 'move' call_tmp[611954](58336 call size _mt[243] result[58286]))
      unknown call_tmp[611959] "expr temp" "maybe param" "maybe type" "temp"
      (611962 'move' call_tmp[611959](58334 call - call_tmp[611954] 1))
      (58342 'move' tmp[58318](58340 call chpl_compute_high_param_loop_bound 0 call_tmp[611959]))
      unknown tmp[58319] "maybe param" "temp"
      (58345 'move' tmp[58319] 1)
      ParamForLoop[58347]
      { i[58316] tmp[58317] tmp[58318] tmp[58319]
        {
          unknown call_tmp[611964] "expr temp" "maybe param" "maybe type" "temp"
          (611967 'move' call_tmp[611964](58304 call result[58286] i[58316]))
          unknown call_tmp[611969] "expr temp" "maybe param" "maybe type" "temp"
          (611972 'move' call_tmp[611969](58309 call t[58276] i[58316]))
          unknown call_tmp[611974] "expr temp" "maybe param" "maybe type" "temp"
          (611977 'move' call_tmp[611974](58311 call min call_tmp[611969]))
          (58312 call = call_tmp[611964] call_tmp[611974])
          (474813 'end of statement' result[58286] i[58316] i[58316])
        }
      }
      label _unused_continueLabel[58321]
      label _breakLabel[58320]
    }
    (508217 'move' ret[508211](508216 'coerce' result[58286] t[58276]))
    gotoReturn _end_min[508209] _end_min[508209]
    (474817 'end of statement' result[58286])
    label _end_min[508209]
    (508213 return ret[508211])
  }
  where {
    (58284 call isTupleType t[58276])
  }
  { scopeless type
    t[58276]
  }
  function chpl_TwoHomogTuples[58367](arg t1[58365]:_any[178](?), arg t2[58369]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508223] "RVV" "param" "temp"
    unknown tmp[418852] "maybe param" "temp"
    (418863 'move' tmp[418852](58374 call isHomogeneousTuple t1[58365]))
    unknown call_tmp[611979] "expr temp" "maybe param" "maybe type" "temp"
    (611982 'move' call_tmp[611979](418865 call _cond_invalid tmp[418852]))
    if call_tmp[611979]
    {
      (418868 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554968] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554969] "maybe param" "temp"
    unknown call_tmp[611984] "expr temp" "maybe param" "maybe type" "temp"
    (611987 'move' call_tmp[611984](418853 call isTrue tmp[418852]))
    (554974 'move' tmp[554969](554972 call _cond_test call_tmp[611984]))
    if tmp[554969]
    {
      unknown tmp[554976] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611989] "expr temp" "maybe param" "maybe type" "temp"
      (611992 'move' call_tmp[611989](58378 call isHomogeneousTuple t2[58369]))
      (554978 'move' tmp[554976](418856 call isTrue call_tmp[611989]))
      (554983 'move' tmp[554968](554980 '_paramFoldLogical' tmp[554969] tmp[554976]))
    }
    {
      (554988 'move' tmp[554968](554985 '_paramFoldLogical' tmp[554969] 0))
    }
    (508228 'move' ret[508223](508227 'deref' tmp[554968]))
    (508225 return ret[508223])
  }
  function +[58392](arg a[58389]:_tuple[56199](?), arg b[58395]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508232] "RVV" "temp"
    unknown call_tmp[611996] "expr temp" "maybe param" "maybe type" "temp"
    (611999 'move' call_tmp[611996](58404 call size _mt[243] a[58389]))
    unknown call_tmp[612003] "expr temp" "maybe param" "maybe type" "temp"
    (612006 'move' call_tmp[612003](58408 call size _mt[243] b[58395]))
    unknown call_tmp[612008] "expr temp" "maybe param" "maybe type" "temp"
    (612011 'move' call_tmp[612008](58411 call != call_tmp[611996] call_tmp[612003]))
    unknown call_tmp[612013] "expr temp" "maybe param" "maybe type" "temp"
    (612016 'move' call_tmp[612013](58434 call _cond_test call_tmp[612008]))
    if call_tmp[612013]
    {
      (58432 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491488] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612018] "expr temp" "maybe param" "maybe type" "temp"
      (612021 'move' call_tmp[612018](58447 call a[58389] 0))
      unknown call_tmp[612023] "expr temp" "maybe param" "maybe type" "temp"
      (612026 'move' call_tmp[612023](58451 call b[58395] 0))
      unknown call_tmp[612028] "expr temp" "maybe param" "maybe type" "temp"
      (612031 'move' call_tmp[612028](58452 call + call_tmp[612018] call_tmp[612023]))
      (491492 'move' call_type_tmp[491488](58454 'typeof' call_tmp[612028]))
    }
    unknown result[58457] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612035] "expr temp" "maybe param" "maybe type" "temp"
    (612038 'move' call_tmp[612035](58441 call size _mt[243] a[58389]))
    unknown call_tmp[612040] "expr temp" "maybe param" "maybe type" "temp"
    (612043 'move' call_tmp[612040](58455 call * call_tmp[612035] call_type_tmp[491488]))
    (540750 'default init var' result[58457] call_tmp[612040])
    (58460 'end of statement')
    {
      unknown d[58488] "dead at end of block" "insert auto destroy"
      (540752 'init var' d[58488] 0)
      (474822 'end of statement')
      unknown tmp[58489] "maybe param" "temp"
      unknown call_tmp[612047] "expr temp" "maybe param" "maybe type" "temp"
      (612050 'move' call_tmp[612047](58463 call size _mt[243] a[58389]))
      unknown call_tmp[612052] "expr temp" "maybe param" "maybe type" "temp"
      (612055 'move' call_tmp[612052](58467 call - call_tmp[612047] 1))
      (58501 'move' tmp[58489](58499 call chpl_compute_low_param_loop_bound 0 call_tmp[612052]))
      unknown tmp[58490] "maybe param" "temp"
      unknown call_tmp[612059] "expr temp" "maybe param" "maybe type" "temp"
      (612062 'move' call_tmp[612059](58508 call size _mt[243] a[58389]))
      unknown call_tmp[612064] "expr temp" "maybe param" "maybe type" "temp"
      (612067 'move' call_tmp[612064](58506 call - call_tmp[612059] 1))
      (58514 'move' tmp[58490](58512 call chpl_compute_high_param_loop_bound 0 call_tmp[612064]))
      unknown tmp[58491] "maybe param" "temp"
      (58517 'move' tmp[58491] 1)
      ParamForLoop[58519]
      { d[58488] tmp[58489] tmp[58490] tmp[58491]
        unknown call_tmp[612069] "expr temp" "maybe param" "maybe type" "temp"
        (612072 'move' call_tmp[612069](58474 call result[58457] d[58488]))
        unknown call_tmp[612074] "expr temp" "maybe param" "maybe type" "temp"
        (612077 'move' call_tmp[612074](58478 call a[58389] d[58488]))
        unknown call_tmp[612079] "expr temp" "maybe param" "maybe type" "temp"
        (612082 'move' call_tmp[612079](58482 call b[58395] d[58488]))
        unknown call_tmp[612084] "expr temp" "maybe param" "maybe type" "temp"
        (612087 'move' call_tmp[612084](58483 call + call_tmp[612074] call_tmp[612079]))
        (58485 call = call_tmp[612069] call_tmp[612084])
        (474823 'end of statement' result[58457] d[58488] d[58488] d[58488])
      }
      label _unused_continueLabel[58493]
      label _breakLabel[58492]
    }
    (508237 'move' ret[508232](508236 'deref' result[58457]))
    gotoReturn _end_+[508230] _end_+[508230]
    (474828 'end of statement' result[58457])
    label _end_+[508230]
    (508234 return ret[508232])
  }
  where {
    (58402 call chpl_TwoHomogTuples a[58389] b[58395])
  }
  function +[58540](arg a[58537]:_tuple[56199](?), arg b[58543]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508243] "RVV" "temp"
    unknown call_tmp[612091] "expr temp" "maybe param" "maybe type" "temp"
    (612094 'move' call_tmp[612091](58547 call size _mt[243] a[58537]))
    unknown call_tmp[612098] "expr temp" "maybe param" "maybe type" "temp"
    (612101 'move' call_tmp[612098](58551 call size _mt[243] b[58543]))
    unknown call_tmp[612103] "expr temp" "maybe param" "maybe type" "temp"
    (612106 'move' call_tmp[612103](58554 call != call_tmp[612091] call_tmp[612098]))
    unknown call_tmp[612108] "expr temp" "maybe param" "maybe type" "temp"
    (612111 'move' call_tmp[612108](58561 call _cond_test call_tmp[612103]))
    if call_tmp[612108]
    {
      (58559 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612115] "expr temp" "maybe param" "maybe type" "temp"
    (612118 'move' call_tmp[612115](58568 call size _mt[243] a[58537]))
    unknown call_tmp[612120] "expr temp" "maybe param" "maybe type" "temp"
    (612123 'move' call_tmp[612120](58572 call == call_tmp[612115] 1))
    unknown call_tmp[612125] "expr temp" "maybe param" "maybe type" "temp"
    (612128 'move' call_tmp[612125](58614 call _cond_test call_tmp[612120]))
    if call_tmp[612125]
    {
      unknown call_tmp[612130] "expr temp" "maybe param" "maybe type" "temp"
      (612133 'move' call_tmp[612130](58577 call a[58537] 0))
      unknown call_tmp[612135] "expr temp" "maybe param" "maybe type" "temp"
      (612138 'move' call_tmp[612135](58581 call b[58543] 0))
      unknown call_tmp[612140] "expr temp" "maybe param" "maybe type" "temp"
      (612143 'move' call_tmp[612140](58582 call + call_tmp[612130] call_tmp[612135]))
      unknown call_tmp[612145] "expr temp" "maybe param" "maybe type" "temp"
      (612148 'move' call_tmp[612145](58584 call _build_tuple call_tmp[612140]))
      (508248 'move' ret[508243](508247 'deref' call_tmp[612145]))
      gotoReturn _end_+[508241] _end_+[508241]
    }
    {
      unknown call_tmp[612150] "expr temp" "maybe param" "maybe type" "temp"
      (612153 'move' call_tmp[612150](58591 call a[58537] 0))
      unknown call_tmp[612155] "expr temp" "maybe param" "maybe type" "temp"
      (612158 'move' call_tmp[612155](58595 call b[58543] 0))
      unknown call_tmp[612160] "expr temp" "maybe param" "maybe type" "temp"
      (612163 'move' call_tmp[612160](58596 call + call_tmp[612150] call_tmp[612155]))
      unknown call_tmp[612165] "expr temp" "maybe param" "maybe type" "temp"
      (612168 'move' call_tmp[612165](58601 call chpl__tupleRest a[58537]))
      unknown call_tmp[612170] "expr temp" "maybe param" "maybe type" "temp"
      (612173 'move' call_tmp[612170](58605 call chpl__tupleRest b[58543]))
      unknown call_tmp[612175] "expr temp" "maybe param" "maybe type" "temp"
      (612178 'move' call_tmp[612175](58606 call + call_tmp[612165] call_tmp[612170]))
      unknown call_tmp[612180] "expr temp" "maybe param" "maybe type" "temp"
      (612183 'move' call_tmp[612180](58610 call _build_tuple call_tmp[612160](58608 'expand_tuple' call_tmp[612175])))
      (508253 'move' ret[508243](508252 'deref' call_tmp[612180]))
      gotoReturn _end_+[508241] _end_+[508241]
    }
    label _end_+[508241]
    (508245 return ret[508243])
  }
  function -[58628](arg a[58625]:_tuple[56199](?), arg b[58631]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508259] "RVV" "temp"
    unknown call_tmp[612187] "expr temp" "maybe param" "maybe type" "temp"
    (612190 'move' call_tmp[612187](58640 call size _mt[243] a[58625]))
    unknown call_tmp[612194] "expr temp" "maybe param" "maybe type" "temp"
    (612197 'move' call_tmp[612194](58644 call size _mt[243] b[58631]))
    unknown call_tmp[612199] "expr temp" "maybe param" "maybe type" "temp"
    (612202 'move' call_tmp[612199](58647 call != call_tmp[612187] call_tmp[612194]))
    unknown call_tmp[612204] "expr temp" "maybe param" "maybe type" "temp"
    (612207 'move' call_tmp[612204](58670 call _cond_test call_tmp[612199]))
    if call_tmp[612204]
    {
      (58668 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491494] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612209] "expr temp" "maybe param" "maybe type" "temp"
      (612212 'move' call_tmp[612209](58683 call a[58625] 0))
      unknown call_tmp[612214] "expr temp" "maybe param" "maybe type" "temp"
      (612217 'move' call_tmp[612214](58687 call b[58631] 0))
      unknown call_tmp[612219] "expr temp" "maybe param" "maybe type" "temp"
      (612222 'move' call_tmp[612219](58688 call - call_tmp[612209] call_tmp[612214]))
      (491498 'move' call_type_tmp[491494](58690 'typeof' call_tmp[612219]))
    }
    unknown result[58693] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612226] "expr temp" "maybe param" "maybe type" "temp"
    (612229 'move' call_tmp[612226](58677 call size _mt[243] a[58625]))
    unknown call_tmp[612231] "expr temp" "maybe param" "maybe type" "temp"
    (612234 'move' call_tmp[612231](58691 call * call_tmp[612226] call_type_tmp[491494]))
    (540754 'default init var' result[58693] call_tmp[612231])
    (58696 'end of statement')
    {
      unknown d[58724] "dead at end of block" "insert auto destroy"
      (540756 'init var' d[58724] 0)
      (474834 'end of statement')
      unknown tmp[58725] "maybe param" "temp"
      unknown call_tmp[612238] "expr temp" "maybe param" "maybe type" "temp"
      (612241 'move' call_tmp[612238](58699 call size _mt[243] a[58625]))
      unknown call_tmp[612243] "expr temp" "maybe param" "maybe type" "temp"
      (612246 'move' call_tmp[612243](58703 call - call_tmp[612238] 1))
      (58737 'move' tmp[58725](58735 call chpl_compute_low_param_loop_bound 0 call_tmp[612243]))
      unknown tmp[58726] "maybe param" "temp"
      unknown call_tmp[612250] "expr temp" "maybe param" "maybe type" "temp"
      (612253 'move' call_tmp[612250](58744 call size _mt[243] a[58625]))
      unknown call_tmp[612255] "expr temp" "maybe param" "maybe type" "temp"
      (612258 'move' call_tmp[612255](58742 call - call_tmp[612250] 1))
      (58750 'move' tmp[58726](58748 call chpl_compute_high_param_loop_bound 0 call_tmp[612255]))
      unknown tmp[58727] "maybe param" "temp"
      (58753 'move' tmp[58727] 1)
      ParamForLoop[58755]
      { d[58724] tmp[58725] tmp[58726] tmp[58727]
        unknown call_tmp[612260] "expr temp" "maybe param" "maybe type" "temp"
        (612263 'move' call_tmp[612260](58710 call result[58693] d[58724]))
        unknown call_tmp[612265] "expr temp" "maybe param" "maybe type" "temp"
        (612268 'move' call_tmp[612265](58714 call a[58625] d[58724]))
        unknown call_tmp[612270] "expr temp" "maybe param" "maybe type" "temp"
        (612273 'move' call_tmp[612270](58718 call b[58631] d[58724]))
        unknown call_tmp[612275] "expr temp" "maybe param" "maybe type" "temp"
        (612278 'move' call_tmp[612275](58719 call - call_tmp[612265] call_tmp[612270]))
        (58721 call = call_tmp[612260] call_tmp[612275])
        (474835 'end of statement' result[58693] d[58724] d[58724] d[58724])
      }
      label _unused_continueLabel[58729]
      label _breakLabel[58728]
    }
    (508264 'move' ret[508259](508263 'deref' result[58693]))
    gotoReturn _end_-[508257] _end_-[508257]
    (474840 'end of statement' result[58693])
    label _end_-[508257]
    (508261 return ret[508259])
  }
  where {
    (58638 call chpl_TwoHomogTuples a[58625] b[58631])
  }
  function -[58776](arg a[58773]:_tuple[56199](?), arg b[58779]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508270] "RVV" "temp"
    unknown call_tmp[612282] "expr temp" "maybe param" "maybe type" "temp"
    (612285 'move' call_tmp[612282](58783 call size _mt[243] a[58773]))
    unknown call_tmp[612289] "expr temp" "maybe param" "maybe type" "temp"
    (612292 'move' call_tmp[612289](58787 call size _mt[243] b[58779]))
    unknown call_tmp[612294] "expr temp" "maybe param" "maybe type" "temp"
    (612297 'move' call_tmp[612294](58790 call != call_tmp[612282] call_tmp[612289]))
    unknown call_tmp[612299] "expr temp" "maybe param" "maybe type" "temp"
    (612302 'move' call_tmp[612299](58797 call _cond_test call_tmp[612294]))
    if call_tmp[612299]
    {
      (58795 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612306] "expr temp" "maybe param" "maybe type" "temp"
    (612309 'move' call_tmp[612306](58804 call size _mt[243] a[58773]))
    unknown call_tmp[612311] "expr temp" "maybe param" "maybe type" "temp"
    (612314 'move' call_tmp[612311](58808 call == call_tmp[612306] 1))
    unknown call_tmp[612316] "expr temp" "maybe param" "maybe type" "temp"
    (612319 'move' call_tmp[612316](58850 call _cond_test call_tmp[612311]))
    if call_tmp[612316]
    {
      unknown call_tmp[612321] "expr temp" "maybe param" "maybe type" "temp"
      (612324 'move' call_tmp[612321](58813 call a[58773] 0))
      unknown call_tmp[612326] "expr temp" "maybe param" "maybe type" "temp"
      (612329 'move' call_tmp[612326](58817 call b[58779] 0))
      unknown call_tmp[612331] "expr temp" "maybe param" "maybe type" "temp"
      (612334 'move' call_tmp[612331](58818 call - call_tmp[612321] call_tmp[612326]))
      unknown call_tmp[612336] "expr temp" "maybe param" "maybe type" "temp"
      (612339 'move' call_tmp[612336](58820 call _build_tuple call_tmp[612331]))
      (508275 'move' ret[508270](508274 'deref' call_tmp[612336]))
      gotoReturn _end_-[508268] _end_-[508268]
    }
    {
      unknown call_tmp[612341] "expr temp" "maybe param" "maybe type" "temp"
      (612344 'move' call_tmp[612341](58827 call a[58773] 0))
      unknown call_tmp[612346] "expr temp" "maybe param" "maybe type" "temp"
      (612349 'move' call_tmp[612346](58831 call b[58779] 0))
      unknown call_tmp[612351] "expr temp" "maybe param" "maybe type" "temp"
      (612354 'move' call_tmp[612351](58832 call - call_tmp[612341] call_tmp[612346]))
      unknown call_tmp[612356] "expr temp" "maybe param" "maybe type" "temp"
      (612359 'move' call_tmp[612356](58837 call chpl__tupleRest a[58773]))
      unknown call_tmp[612361] "expr temp" "maybe param" "maybe type" "temp"
      (612364 'move' call_tmp[612361](58841 call chpl__tupleRest b[58779]))
      unknown call_tmp[612366] "expr temp" "maybe param" "maybe type" "temp"
      (612369 'move' call_tmp[612366](58842 call - call_tmp[612356] call_tmp[612361]))
      unknown call_tmp[612371] "expr temp" "maybe param" "maybe type" "temp"
      (612374 'move' call_tmp[612371](58846 call _build_tuple call_tmp[612351](58844 'expand_tuple' call_tmp[612366])))
      (508280 'move' ret[508270](508279 'deref' call_tmp[612371]))
      gotoReturn _end_-[508268] _end_-[508268]
    }
    label _end_-[508268]
    (508272 return ret[508270])
  }
  function *[58864](arg a[58861]:_tuple[56199](?), arg b[58867]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508286] "RVV" "temp"
    unknown call_tmp[612378] "expr temp" "maybe param" "maybe type" "temp"
    (612381 'move' call_tmp[612378](58876 call size _mt[243] a[58861]))
    unknown call_tmp[612385] "expr temp" "maybe param" "maybe type" "temp"
    (612388 'move' call_tmp[612385](58880 call size _mt[243] b[58867]))
    unknown call_tmp[612390] "expr temp" "maybe param" "maybe type" "temp"
    (612393 'move' call_tmp[612390](58883 call != call_tmp[612378] call_tmp[612385]))
    unknown call_tmp[612395] "expr temp" "maybe param" "maybe type" "temp"
    (612398 'move' call_tmp[612395](58906 call _cond_test call_tmp[612390]))
    if call_tmp[612395]
    {
      (58904 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491500] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612400] "expr temp" "maybe param" "maybe type" "temp"
      (612403 'move' call_tmp[612400](58919 call a[58861] 0))
      unknown call_tmp[612405] "expr temp" "maybe param" "maybe type" "temp"
      (612408 'move' call_tmp[612405](58923 call b[58867] 0))
      unknown call_tmp[612410] "expr temp" "maybe param" "maybe type" "temp"
      (612413 'move' call_tmp[612410](58924 call * call_tmp[612400] call_tmp[612405]))
      (491504 'move' call_type_tmp[491500](58926 'typeof' call_tmp[612410]))
    }
    unknown result[58929] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612417] "expr temp" "maybe param" "maybe type" "temp"
    (612420 'move' call_tmp[612417](58913 call size _mt[243] a[58861]))
    unknown call_tmp[612422] "expr temp" "maybe param" "maybe type" "temp"
    (612425 'move' call_tmp[612422](58927 call * call_tmp[612417] call_type_tmp[491500]))
    (540758 'default init var' result[58929] call_tmp[612422])
    (58932 'end of statement')
    {
      unknown d[58960] "dead at end of block" "insert auto destroy"
      (540760 'init var' d[58960] 0)
      (474846 'end of statement')
      unknown tmp[58961] "maybe param" "temp"
      unknown call_tmp[612429] "expr temp" "maybe param" "maybe type" "temp"
      (612432 'move' call_tmp[612429](58935 call size _mt[243] a[58861]))
      unknown call_tmp[612434] "expr temp" "maybe param" "maybe type" "temp"
      (612437 'move' call_tmp[612434](58939 call - call_tmp[612429] 1))
      (58973 'move' tmp[58961](58971 call chpl_compute_low_param_loop_bound 0 call_tmp[612434]))
      unknown tmp[58962] "maybe param" "temp"
      unknown call_tmp[612441] "expr temp" "maybe param" "maybe type" "temp"
      (612444 'move' call_tmp[612441](58980 call size _mt[243] a[58861]))
      unknown call_tmp[612446] "expr temp" "maybe param" "maybe type" "temp"
      (612449 'move' call_tmp[612446](58978 call - call_tmp[612441] 1))
      (58986 'move' tmp[58962](58984 call chpl_compute_high_param_loop_bound 0 call_tmp[612446]))
      unknown tmp[58963] "maybe param" "temp"
      (58989 'move' tmp[58963] 1)
      ParamForLoop[58991]
      { d[58960] tmp[58961] tmp[58962] tmp[58963]
        unknown call_tmp[612451] "expr temp" "maybe param" "maybe type" "temp"
        (612454 'move' call_tmp[612451](58946 call result[58929] d[58960]))
        unknown call_tmp[612456] "expr temp" "maybe param" "maybe type" "temp"
        (612459 'move' call_tmp[612456](58950 call a[58861] d[58960]))
        unknown call_tmp[612461] "expr temp" "maybe param" "maybe type" "temp"
        (612464 'move' call_tmp[612461](58954 call b[58867] d[58960]))
        unknown call_tmp[612466] "expr temp" "maybe param" "maybe type" "temp"
        (612469 'move' call_tmp[612466](58955 call * call_tmp[612456] call_tmp[612461]))
        (58957 call = call_tmp[612451] call_tmp[612466])
        (474847 'end of statement' result[58929] d[58960] d[58960] d[58960])
      }
      label _unused_continueLabel[58965]
      label _breakLabel[58964]
    }
    (508291 'move' ret[508286](508290 'deref' result[58929]))
    gotoReturn _end_*[508284] _end_*[508284]
    (474852 'end of statement' result[58929])
    label _end_*[508284]
    (508288 return ret[508286])
  }
  where {
    (58874 call chpl_TwoHomogTuples a[58861] b[58867])
  }
  function *[59012](arg a[59009]:_tuple[56199](?), arg b[59015]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508297] "RVV" "temp"
    unknown call_tmp[612473] "expr temp" "maybe param" "maybe type" "temp"
    (612476 'move' call_tmp[612473](59019 call size _mt[243] a[59009]))
    unknown call_tmp[612480] "expr temp" "maybe param" "maybe type" "temp"
    (612483 'move' call_tmp[612480](59023 call size _mt[243] b[59015]))
    unknown call_tmp[612485] "expr temp" "maybe param" "maybe type" "temp"
    (612488 'move' call_tmp[612485](59026 call != call_tmp[612473] call_tmp[612480]))
    unknown call_tmp[612490] "expr temp" "maybe param" "maybe type" "temp"
    (612493 'move' call_tmp[612490](59033 call _cond_test call_tmp[612485]))
    if call_tmp[612490]
    {
      (59031 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612497] "expr temp" "maybe param" "maybe type" "temp"
    (612500 'move' call_tmp[612497](59040 call size _mt[243] a[59009]))
    unknown call_tmp[612502] "expr temp" "maybe param" "maybe type" "temp"
    (612505 'move' call_tmp[612502](59044 call == call_tmp[612497] 1))
    unknown call_tmp[612507] "expr temp" "maybe param" "maybe type" "temp"
    (612510 'move' call_tmp[612507](59086 call _cond_test call_tmp[612502]))
    if call_tmp[612507]
    {
      unknown call_tmp[612512] "expr temp" "maybe param" "maybe type" "temp"
      (612515 'move' call_tmp[612512](59049 call a[59009] 0))
      unknown call_tmp[612517] "expr temp" "maybe param" "maybe type" "temp"
      (612520 'move' call_tmp[612517](59053 call b[59015] 0))
      unknown call_tmp[612522] "expr temp" "maybe param" "maybe type" "temp"
      (612525 'move' call_tmp[612522](59054 call * call_tmp[612512] call_tmp[612517]))
      unknown call_tmp[612527] "expr temp" "maybe param" "maybe type" "temp"
      (612530 'move' call_tmp[612527](59056 call _build_tuple call_tmp[612522]))
      (508302 'move' ret[508297](508301 'deref' call_tmp[612527]))
      gotoReturn _end_*[508295] _end_*[508295]
    }
    {
      unknown call_tmp[612532] "expr temp" "maybe param" "maybe type" "temp"
      (612535 'move' call_tmp[612532](59063 call a[59009] 0))
      unknown call_tmp[612537] "expr temp" "maybe param" "maybe type" "temp"
      (612540 'move' call_tmp[612537](59067 call b[59015] 0))
      unknown call_tmp[612542] "expr temp" "maybe param" "maybe type" "temp"
      (612545 'move' call_tmp[612542](59068 call * call_tmp[612532] call_tmp[612537]))
      unknown call_tmp[612547] "expr temp" "maybe param" "maybe type" "temp"
      (612550 'move' call_tmp[612547](59073 call chpl__tupleRest a[59009]))
      unknown call_tmp[612552] "expr temp" "maybe param" "maybe type" "temp"
      (612555 'move' call_tmp[612552](59077 call chpl__tupleRest b[59015]))
      unknown call_tmp[612557] "expr temp" "maybe param" "maybe type" "temp"
      (612560 'move' call_tmp[612557](59078 call * call_tmp[612547] call_tmp[612552]))
      unknown call_tmp[612562] "expr temp" "maybe param" "maybe type" "temp"
      (612565 'move' call_tmp[612562](59082 call _build_tuple call_tmp[612542](59080 'expand_tuple' call_tmp[612557])))
      (508307 'move' ret[508297](508306 'deref' call_tmp[612562]))
      gotoReturn _end_*[508295] _end_*[508295]
    }
    label _end_*[508295]
    (508299 return ret[508297])
  }
  function /[59100](arg a[59097]:_tuple[56199](?), arg b[59103]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508313] "RVV" "temp"
    unknown call_tmp[612569] "expr temp" "maybe param" "maybe type" "temp"
    (612572 'move' call_tmp[612569](59112 call size _mt[243] a[59097]))
    unknown call_tmp[612576] "expr temp" "maybe param" "maybe type" "temp"
    (612579 'move' call_tmp[612576](59116 call size _mt[243] b[59103]))
    unknown call_tmp[612581] "expr temp" "maybe param" "maybe type" "temp"
    (612584 'move' call_tmp[612581](59119 call != call_tmp[612569] call_tmp[612576]))
    unknown call_tmp[612586] "expr temp" "maybe param" "maybe type" "temp"
    (612589 'move' call_tmp[612586](59142 call _cond_test call_tmp[612581]))
    if call_tmp[612586]
    {
      (59140 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491506] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612591] "expr temp" "maybe param" "maybe type" "temp"
      (612594 'move' call_tmp[612591](59155 call a[59097] 0))
      unknown call_tmp[612596] "expr temp" "maybe param" "maybe type" "temp"
      (612599 'move' call_tmp[612596](59159 call b[59103] 0))
      unknown call_tmp[612601] "expr temp" "maybe param" "maybe type" "temp"
      (612604 'move' call_tmp[612601](59160 call / call_tmp[612591] call_tmp[612596]))
      (491510 'move' call_type_tmp[491506](59162 'typeof' call_tmp[612601]))
    }
    unknown result[59165] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612608] "expr temp" "maybe param" "maybe type" "temp"
    (612611 'move' call_tmp[612608](59149 call size _mt[243] a[59097]))
    unknown call_tmp[612613] "expr temp" "maybe param" "maybe type" "temp"
    (612616 'move' call_tmp[612613](59163 call * call_tmp[612608] call_type_tmp[491506]))
    (540762 'default init var' result[59165] call_tmp[612613])
    (59168 'end of statement')
    {
      unknown d[59196] "dead at end of block" "insert auto destroy"
      (540764 'init var' d[59196] 0)
      (474858 'end of statement')
      unknown tmp[59197] "maybe param" "temp"
      unknown call_tmp[612620] "expr temp" "maybe param" "maybe type" "temp"
      (612623 'move' call_tmp[612620](59171 call size _mt[243] a[59097]))
      unknown call_tmp[612625] "expr temp" "maybe param" "maybe type" "temp"
      (612628 'move' call_tmp[612625](59175 call - call_tmp[612620] 1))
      (59209 'move' tmp[59197](59207 call chpl_compute_low_param_loop_bound 0 call_tmp[612625]))
      unknown tmp[59198] "maybe param" "temp"
      unknown call_tmp[612632] "expr temp" "maybe param" "maybe type" "temp"
      (612635 'move' call_tmp[612632](59216 call size _mt[243] a[59097]))
      unknown call_tmp[612637] "expr temp" "maybe param" "maybe type" "temp"
      (612640 'move' call_tmp[612637](59214 call - call_tmp[612632] 1))
      (59222 'move' tmp[59198](59220 call chpl_compute_high_param_loop_bound 0 call_tmp[612637]))
      unknown tmp[59199] "maybe param" "temp"
      (59225 'move' tmp[59199] 1)
      ParamForLoop[59227]
      { d[59196] tmp[59197] tmp[59198] tmp[59199]
        unknown call_tmp[612642] "expr temp" "maybe param" "maybe type" "temp"
        (612645 'move' call_tmp[612642](59182 call result[59165] d[59196]))
        unknown call_tmp[612647] "expr temp" "maybe param" "maybe type" "temp"
        (612650 'move' call_tmp[612647](59186 call a[59097] d[59196]))
        unknown call_tmp[612652] "expr temp" "maybe param" "maybe type" "temp"
        (612655 'move' call_tmp[612652](59190 call b[59103] d[59196]))
        unknown call_tmp[612657] "expr temp" "maybe param" "maybe type" "temp"
        (612660 'move' call_tmp[612657](59191 call / call_tmp[612647] call_tmp[612652]))
        (59193 call = call_tmp[612642] call_tmp[612657])
        (474859 'end of statement' result[59165] d[59196] d[59196] d[59196])
      }
      label _unused_continueLabel[59201]
      label _breakLabel[59200]
    }
    (508318 'move' ret[508313](508317 'deref' result[59165]))
    gotoReturn _end_/[508311] _end_/[508311]
    (474864 'end of statement' result[59165])
    label _end_/[508311]
    (508315 return ret[508313])
  }
  where {
    (59110 call chpl_TwoHomogTuples a[59097] b[59103])
  }
  function /[59248](arg a[59245]:_tuple[56199](?), arg b[59251]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508324] "RVV" "temp"
    unknown call_tmp[612664] "expr temp" "maybe param" "maybe type" "temp"
    (612667 'move' call_tmp[612664](59255 call size _mt[243] a[59245]))
    unknown call_tmp[612671] "expr temp" "maybe param" "maybe type" "temp"
    (612674 'move' call_tmp[612671](59259 call size _mt[243] b[59251]))
    unknown call_tmp[612676] "expr temp" "maybe param" "maybe type" "temp"
    (612679 'move' call_tmp[612676](59262 call != call_tmp[612664] call_tmp[612671]))
    unknown call_tmp[612681] "expr temp" "maybe param" "maybe type" "temp"
    (612684 'move' call_tmp[612681](59269 call _cond_test call_tmp[612676]))
    if call_tmp[612681]
    {
      (59267 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612688] "expr temp" "maybe param" "maybe type" "temp"
    (612691 'move' call_tmp[612688](59276 call size _mt[243] a[59245]))
    unknown call_tmp[612693] "expr temp" "maybe param" "maybe type" "temp"
    (612696 'move' call_tmp[612693](59280 call == call_tmp[612688] 1))
    unknown call_tmp[612698] "expr temp" "maybe param" "maybe type" "temp"
    (612701 'move' call_tmp[612698](59322 call _cond_test call_tmp[612693]))
    if call_tmp[612698]
    {
      unknown call_tmp[612703] "expr temp" "maybe param" "maybe type" "temp"
      (612706 'move' call_tmp[612703](59285 call a[59245] 0))
      unknown call_tmp[612708] "expr temp" "maybe param" "maybe type" "temp"
      (612711 'move' call_tmp[612708](59289 call b[59251] 0))
      unknown call_tmp[612713] "expr temp" "maybe param" "maybe type" "temp"
      (612716 'move' call_tmp[612713](59290 call / call_tmp[612703] call_tmp[612708]))
      unknown call_tmp[612718] "expr temp" "maybe param" "maybe type" "temp"
      (612721 'move' call_tmp[612718](59292 call _build_tuple call_tmp[612713]))
      (508329 'move' ret[508324](508328 'deref' call_tmp[612718]))
      gotoReturn _end_/[508322] _end_/[508322]
    }
    {
      unknown call_tmp[612723] "expr temp" "maybe param" "maybe type" "temp"
      (612726 'move' call_tmp[612723](59299 call a[59245] 0))
      unknown call_tmp[612728] "expr temp" "maybe param" "maybe type" "temp"
      (612731 'move' call_tmp[612728](59303 call b[59251] 0))
      unknown call_tmp[612733] "expr temp" "maybe param" "maybe type" "temp"
      (612736 'move' call_tmp[612733](59304 call / call_tmp[612723] call_tmp[612728]))
      unknown call_tmp[612738] "expr temp" "maybe param" "maybe type" "temp"
      (612741 'move' call_tmp[612738](59309 call chpl__tupleRest a[59245]))
      unknown call_tmp[612743] "expr temp" "maybe param" "maybe type" "temp"
      (612746 'move' call_tmp[612743](59313 call chpl__tupleRest b[59251]))
      unknown call_tmp[612748] "expr temp" "maybe param" "maybe type" "temp"
      (612751 'move' call_tmp[612748](59314 call / call_tmp[612738] call_tmp[612743]))
      unknown call_tmp[612753] "expr temp" "maybe param" "maybe type" "temp"
      (612756 'move' call_tmp[612753](59318 call _build_tuple call_tmp[612733](59316 'expand_tuple' call_tmp[612748])))
      (508334 'move' ret[508324](508333 'deref' call_tmp[612753]))
      gotoReturn _end_/[508322] _end_/[508322]
    }
    label _end_/[508322]
    (508326 return ret[508324])
  }
  function %[59336](arg a[59333]:_tuple[56199](?), arg b[59339]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508340] "RVV" "temp"
    unknown call_tmp[612760] "expr temp" "maybe param" "maybe type" "temp"
    (612763 'move' call_tmp[612760](59348 call size _mt[243] a[59333]))
    unknown call_tmp[612767] "expr temp" "maybe param" "maybe type" "temp"
    (612770 'move' call_tmp[612767](59352 call size _mt[243] b[59339]))
    unknown call_tmp[612772] "expr temp" "maybe param" "maybe type" "temp"
    (612775 'move' call_tmp[612772](59355 call != call_tmp[612760] call_tmp[612767]))
    unknown call_tmp[612777] "expr temp" "maybe param" "maybe type" "temp"
    (612780 'move' call_tmp[612777](59378 call _cond_test call_tmp[612772]))
    if call_tmp[612777]
    {
      (59376 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491512] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612782] "expr temp" "maybe param" "maybe type" "temp"
      (612785 'move' call_tmp[612782](59391 call a[59333] 0))
      unknown call_tmp[612787] "expr temp" "maybe param" "maybe type" "temp"
      (612790 'move' call_tmp[612787](59395 call b[59339] 0))
      unknown call_tmp[612792] "expr temp" "maybe param" "maybe type" "temp"
      (612795 'move' call_tmp[612792](59396 call % call_tmp[612782] call_tmp[612787]))
      (491516 'move' call_type_tmp[491512](59398 'typeof' call_tmp[612792]))
    }
    unknown result[59401] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612799] "expr temp" "maybe param" "maybe type" "temp"
    (612802 'move' call_tmp[612799](59385 call size _mt[243] a[59333]))
    unknown call_tmp[612804] "expr temp" "maybe param" "maybe type" "temp"
    (612807 'move' call_tmp[612804](59399 call * call_tmp[612799] call_type_tmp[491512]))
    (540766 'default init var' result[59401] call_tmp[612804])
    (59404 'end of statement')
    {
      unknown d[59432] "dead at end of block" "insert auto destroy"
      (540768 'init var' d[59432] 0)
      (474870 'end of statement')
      unknown tmp[59433] "maybe param" "temp"
      unknown call_tmp[612811] "expr temp" "maybe param" "maybe type" "temp"
      (612814 'move' call_tmp[612811](59407 call size _mt[243] a[59333]))
      unknown call_tmp[612816] "expr temp" "maybe param" "maybe type" "temp"
      (612819 'move' call_tmp[612816](59411 call - call_tmp[612811] 1))
      (59445 'move' tmp[59433](59443 call chpl_compute_low_param_loop_bound 0 call_tmp[612816]))
      unknown tmp[59434] "maybe param" "temp"
      unknown call_tmp[612823] "expr temp" "maybe param" "maybe type" "temp"
      (612826 'move' call_tmp[612823](59452 call size _mt[243] a[59333]))
      unknown call_tmp[612828] "expr temp" "maybe param" "maybe type" "temp"
      (612831 'move' call_tmp[612828](59450 call - call_tmp[612823] 1))
      (59458 'move' tmp[59434](59456 call chpl_compute_high_param_loop_bound 0 call_tmp[612828]))
      unknown tmp[59435] "maybe param" "temp"
      (59461 'move' tmp[59435] 1)
      ParamForLoop[59463]
      { d[59432] tmp[59433] tmp[59434] tmp[59435]
        unknown call_tmp[612833] "expr temp" "maybe param" "maybe type" "temp"
        (612836 'move' call_tmp[612833](59418 call result[59401] d[59432]))
        unknown call_tmp[612838] "expr temp" "maybe param" "maybe type" "temp"
        (612841 'move' call_tmp[612838](59422 call a[59333] d[59432]))
        unknown call_tmp[612843] "expr temp" "maybe param" "maybe type" "temp"
        (612846 'move' call_tmp[612843](59426 call b[59339] d[59432]))
        unknown call_tmp[612848] "expr temp" "maybe param" "maybe type" "temp"
        (612851 'move' call_tmp[612848](59427 call % call_tmp[612838] call_tmp[612843]))
        (59429 call = call_tmp[612833] call_tmp[612848])
        (474871 'end of statement' result[59401] d[59432] d[59432] d[59432])
      }
      label _unused_continueLabel[59437]
      label _breakLabel[59436]
    }
    (508345 'move' ret[508340](508344 'deref' result[59401]))
    gotoReturn _end_%[508338] _end_%[508338]
    (474876 'end of statement' result[59401])
    label _end_%[508338]
    (508342 return ret[508340])
  }
  where {
    (59346 call chpl_TwoHomogTuples a[59333] b[59339])
  }
  function %[59484](arg a[59481]:_tuple[56199](?), arg b[59487]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508351] "RVV" "temp"
    unknown call_tmp[612855] "expr temp" "maybe param" "maybe type" "temp"
    (612858 'move' call_tmp[612855](59491 call size _mt[243] a[59481]))
    unknown call_tmp[612862] "expr temp" "maybe param" "maybe type" "temp"
    (612865 'move' call_tmp[612862](59495 call size _mt[243] b[59487]))
    unknown call_tmp[612867] "expr temp" "maybe param" "maybe type" "temp"
    (612870 'move' call_tmp[612867](59498 call != call_tmp[612855] call_tmp[612862]))
    unknown call_tmp[612872] "expr temp" "maybe param" "maybe type" "temp"
    (612875 'move' call_tmp[612872](59505 call _cond_test call_tmp[612867]))
    if call_tmp[612872]
    {
      (59503 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[612879] "expr temp" "maybe param" "maybe type" "temp"
    (612882 'move' call_tmp[612879](59512 call size _mt[243] a[59481]))
    unknown call_tmp[612884] "expr temp" "maybe param" "maybe type" "temp"
    (612887 'move' call_tmp[612884](59516 call == call_tmp[612879] 1))
    unknown call_tmp[612889] "expr temp" "maybe param" "maybe type" "temp"
    (612892 'move' call_tmp[612889](59558 call _cond_test call_tmp[612884]))
    if call_tmp[612889]
    {
      unknown call_tmp[612894] "expr temp" "maybe param" "maybe type" "temp"
      (612897 'move' call_tmp[612894](59521 call a[59481] 0))
      unknown call_tmp[612899] "expr temp" "maybe param" "maybe type" "temp"
      (612902 'move' call_tmp[612899](59525 call b[59487] 0))
      unknown call_tmp[612904] "expr temp" "maybe param" "maybe type" "temp"
      (612907 'move' call_tmp[612904](59526 call % call_tmp[612894] call_tmp[612899]))
      unknown call_tmp[612909] "expr temp" "maybe param" "maybe type" "temp"
      (612912 'move' call_tmp[612909](59528 call _build_tuple call_tmp[612904]))
      (508356 'move' ret[508351](508355 'deref' call_tmp[612909]))
      gotoReturn _end_%[508349] _end_%[508349]
    }
    {
      unknown call_tmp[612914] "expr temp" "maybe param" "maybe type" "temp"
      (612917 'move' call_tmp[612914](59535 call a[59481] 0))
      unknown call_tmp[612919] "expr temp" "maybe param" "maybe type" "temp"
      (612922 'move' call_tmp[612919](59539 call b[59487] 0))
      unknown call_tmp[612924] "expr temp" "maybe param" "maybe type" "temp"
      (612927 'move' call_tmp[612924](59540 call % call_tmp[612914] call_tmp[612919]))
      unknown call_tmp[612929] "expr temp" "maybe param" "maybe type" "temp"
      (612932 'move' call_tmp[612929](59545 call chpl__tupleRest a[59481]))
      unknown call_tmp[612934] "expr temp" "maybe param" "maybe type" "temp"
      (612937 'move' call_tmp[612934](59549 call chpl__tupleRest b[59487]))
      unknown call_tmp[612939] "expr temp" "maybe param" "maybe type" "temp"
      (612942 'move' call_tmp[612939](59550 call % call_tmp[612929] call_tmp[612934]))
      unknown call_tmp[612944] "expr temp" "maybe param" "maybe type" "temp"
      (612947 'move' call_tmp[612944](59554 call _build_tuple call_tmp[612924](59552 'expand_tuple' call_tmp[612939])))
      (508361 'move' ret[508351](508360 'deref' call_tmp[612944]))
      gotoReturn _end_%[508349] _end_%[508349]
    }
    label _end_%[508349]
    (508353 return ret[508351])
  }
  function **[59572](arg a[59569]:_tuple[56199](?), arg b[59575]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508367] "RVV" "temp"
    unknown call_tmp[612951] "expr temp" "maybe param" "maybe type" "temp"
    (612954 'move' call_tmp[612951](59584 call size _mt[243] a[59569]))
    unknown call_tmp[612958] "expr temp" "maybe param" "maybe type" "temp"
    (612961 'move' call_tmp[612958](59588 call size _mt[243] b[59575]))
    unknown call_tmp[612963] "expr temp" "maybe param" "maybe type" "temp"
    (612966 'move' call_tmp[612963](59591 call != call_tmp[612951] call_tmp[612958]))
    unknown call_tmp[612968] "expr temp" "maybe param" "maybe type" "temp"
    (612971 'move' call_tmp[612968](59614 call _cond_test call_tmp[612963]))
    if call_tmp[612968]
    {
      (59612 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491518] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612973] "expr temp" "maybe param" "maybe type" "temp"
      (612976 'move' call_tmp[612973](59627 call a[59569] 0))
      unknown call_tmp[612978] "expr temp" "maybe param" "maybe type" "temp"
      (612981 'move' call_tmp[612978](59631 call b[59575] 0))
      unknown call_tmp[612983] "expr temp" "maybe param" "maybe type" "temp"
      (612986 'move' call_tmp[612983](59632 call ** call_tmp[612973] call_tmp[612978]))
      (491522 'move' call_type_tmp[491518](59634 'typeof' call_tmp[612983]))
    }
    unknown result[59637] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612990] "expr temp" "maybe param" "maybe type" "temp"
    (612993 'move' call_tmp[612990](59621 call size _mt[243] a[59569]))
    unknown call_tmp[612995] "expr temp" "maybe param" "maybe type" "temp"
    (612998 'move' call_tmp[612995](59635 call * call_tmp[612990] call_type_tmp[491518]))
    (540770 'default init var' result[59637] call_tmp[612995])
    (59640 'end of statement')
    {
      unknown d[59668] "dead at end of block" "insert auto destroy"
      (540772 'init var' d[59668] 0)
      (474882 'end of statement')
      unknown tmp[59669] "maybe param" "temp"
      unknown call_tmp[613002] "expr temp" "maybe param" "maybe type" "temp"
      (613005 'move' call_tmp[613002](59643 call size _mt[243] a[59569]))
      unknown call_tmp[613007] "expr temp" "maybe param" "maybe type" "temp"
      (613010 'move' call_tmp[613007](59647 call - call_tmp[613002] 1))
      (59681 'move' tmp[59669](59679 call chpl_compute_low_param_loop_bound 0 call_tmp[613007]))
      unknown tmp[59670] "maybe param" "temp"
      unknown call_tmp[613014] "expr temp" "maybe param" "maybe type" "temp"
      (613017 'move' call_tmp[613014](59688 call size _mt[243] a[59569]))
      unknown call_tmp[613019] "expr temp" "maybe param" "maybe type" "temp"
      (613022 'move' call_tmp[613019](59686 call - call_tmp[613014] 1))
      (59694 'move' tmp[59670](59692 call chpl_compute_high_param_loop_bound 0 call_tmp[613019]))
      unknown tmp[59671] "maybe param" "temp"
      (59697 'move' tmp[59671] 1)
      ParamForLoop[59699]
      { d[59668] tmp[59669] tmp[59670] tmp[59671]
        unknown call_tmp[613024] "expr temp" "maybe param" "maybe type" "temp"
        (613027 'move' call_tmp[613024](59654 call result[59637] d[59668]))
        unknown call_tmp[613029] "expr temp" "maybe param" "maybe type" "temp"
        (613032 'move' call_tmp[613029](59658 call a[59569] d[59668]))
        unknown call_tmp[613034] "expr temp" "maybe param" "maybe type" "temp"
        (613037 'move' call_tmp[613034](59662 call b[59575] d[59668]))
        unknown call_tmp[613039] "expr temp" "maybe param" "maybe type" "temp"
        (613042 'move' call_tmp[613039](59663 call ** call_tmp[613029] call_tmp[613034]))
        (59665 call = call_tmp[613024] call_tmp[613039])
        (474883 'end of statement' result[59637] d[59668] d[59668] d[59668])
      }
      label _unused_continueLabel[59673]
      label _breakLabel[59672]
    }
    (508372 'move' ret[508367](508371 'deref' result[59637]))
    gotoReturn _end_**[508365] _end_**[508365]
    (474888 'end of statement' result[59637])
    label _end_**[508365]
    (508369 return ret[508367])
  }
  where {
    (59582 call chpl_TwoHomogTuples a[59569] b[59575])
  }
  function **[59720](arg a[59717]:_tuple[56199](?), arg b[59723]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508378] "RVV" "temp"
    unknown call_tmp[613046] "expr temp" "maybe param" "maybe type" "temp"
    (613049 'move' call_tmp[613046](59727 call size _mt[243] a[59717]))
    unknown call_tmp[613053] "expr temp" "maybe param" "maybe type" "temp"
    (613056 'move' call_tmp[613053](59731 call size _mt[243] b[59723]))
    unknown call_tmp[613058] "expr temp" "maybe param" "maybe type" "temp"
    (613061 'move' call_tmp[613058](59734 call != call_tmp[613046] call_tmp[613053]))
    unknown call_tmp[613063] "expr temp" "maybe param" "maybe type" "temp"
    (613066 'move' call_tmp[613063](59741 call _cond_test call_tmp[613058]))
    if call_tmp[613063]
    {
      (59739 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613070] "expr temp" "maybe param" "maybe type" "temp"
    (613073 'move' call_tmp[613070](59748 call size _mt[243] a[59717]))
    unknown call_tmp[613075] "expr temp" "maybe param" "maybe type" "temp"
    (613078 'move' call_tmp[613075](59752 call == call_tmp[613070] 1))
    unknown call_tmp[613080] "expr temp" "maybe param" "maybe type" "temp"
    (613083 'move' call_tmp[613080](59794 call _cond_test call_tmp[613075]))
    if call_tmp[613080]
    {
      unknown call_tmp[613085] "expr temp" "maybe param" "maybe type" "temp"
      (613088 'move' call_tmp[613085](59757 call a[59717] 0))
      unknown call_tmp[613090] "expr temp" "maybe param" "maybe type" "temp"
      (613093 'move' call_tmp[613090](59761 call b[59723] 0))
      unknown call_tmp[613095] "expr temp" "maybe param" "maybe type" "temp"
      (613098 'move' call_tmp[613095](59762 call ** call_tmp[613085] call_tmp[613090]))
      unknown call_tmp[613100] "expr temp" "maybe param" "maybe type" "temp"
      (613103 'move' call_tmp[613100](59764 call _build_tuple call_tmp[613095]))
      (508383 'move' ret[508378](508382 'deref' call_tmp[613100]))
      gotoReturn _end_**[508376] _end_**[508376]
    }
    {
      unknown call_tmp[613105] "expr temp" "maybe param" "maybe type" "temp"
      (613108 'move' call_tmp[613105](59771 call a[59717] 0))
      unknown call_tmp[613110] "expr temp" "maybe param" "maybe type" "temp"
      (613113 'move' call_tmp[613110](59775 call b[59723] 0))
      unknown call_tmp[613115] "expr temp" "maybe param" "maybe type" "temp"
      (613118 'move' call_tmp[613115](59776 call ** call_tmp[613105] call_tmp[613110]))
      unknown call_tmp[613120] "expr temp" "maybe param" "maybe type" "temp"
      (613123 'move' call_tmp[613120](59781 call chpl__tupleRest a[59717]))
      unknown call_tmp[613125] "expr temp" "maybe param" "maybe type" "temp"
      (613128 'move' call_tmp[613125](59785 call chpl__tupleRest b[59723]))
      unknown call_tmp[613130] "expr temp" "maybe param" "maybe type" "temp"
      (613133 'move' call_tmp[613130](59786 call ** call_tmp[613120] call_tmp[613125]))
      unknown call_tmp[613135] "expr temp" "maybe param" "maybe type" "temp"
      (613138 'move' call_tmp[613135](59790 call _build_tuple call_tmp[613115](59788 'expand_tuple' call_tmp[613130])))
      (508388 'move' ret[508378](508387 'deref' call_tmp[613135]))
      gotoReturn _end_**[508376] _end_**[508376]
    }
    label _end_**[508376]
    (508380 return ret[508378])
  }
  function &[59808](arg a[59805]:_tuple[56199](?), arg b[59811]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508394] "RVV" "temp"
    unknown call_tmp[613142] "expr temp" "maybe param" "maybe type" "temp"
    (613145 'move' call_tmp[613142](59820 call size _mt[243] a[59805]))
    unknown call_tmp[613149] "expr temp" "maybe param" "maybe type" "temp"
    (613152 'move' call_tmp[613149](59824 call size _mt[243] b[59811]))
    unknown call_tmp[613154] "expr temp" "maybe param" "maybe type" "temp"
    (613157 'move' call_tmp[613154](59827 call != call_tmp[613142] call_tmp[613149]))
    unknown call_tmp[613159] "expr temp" "maybe param" "maybe type" "temp"
    (613162 'move' call_tmp[613159](59850 call _cond_test call_tmp[613154]))
    if call_tmp[613159]
    {
      (59848 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491524] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613164] "expr temp" "maybe param" "maybe type" "temp"
      (613167 'move' call_tmp[613164](59863 call a[59805] 0))
      unknown call_tmp[613169] "expr temp" "maybe param" "maybe type" "temp"
      (613172 'move' call_tmp[613169](59867 call b[59811] 0))
      unknown call_tmp[613174] "expr temp" "maybe param" "maybe type" "temp"
      (613177 'move' call_tmp[613174](59868 call & call_tmp[613164] call_tmp[613169]))
      (491528 'move' call_type_tmp[491524](59870 'typeof' call_tmp[613174]))
    }
    unknown result[59873] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613181] "expr temp" "maybe param" "maybe type" "temp"
    (613184 'move' call_tmp[613181](59857 call size _mt[243] a[59805]))
    unknown call_tmp[613186] "expr temp" "maybe param" "maybe type" "temp"
    (613189 'move' call_tmp[613186](59871 call * call_tmp[613181] call_type_tmp[491524]))
    (540774 'default init var' result[59873] call_tmp[613186])
    (59876 'end of statement')
    {
      unknown d[59904] "dead at end of block" "insert auto destroy"
      (540776 'init var' d[59904] 0)
      (474894 'end of statement')
      unknown tmp[59905] "maybe param" "temp"
      unknown call_tmp[613193] "expr temp" "maybe param" "maybe type" "temp"
      (613196 'move' call_tmp[613193](59879 call size _mt[243] a[59805]))
      unknown call_tmp[613198] "expr temp" "maybe param" "maybe type" "temp"
      (613201 'move' call_tmp[613198](59883 call - call_tmp[613193] 1))
      (59917 'move' tmp[59905](59915 call chpl_compute_low_param_loop_bound 0 call_tmp[613198]))
      unknown tmp[59906] "maybe param" "temp"
      unknown call_tmp[613205] "expr temp" "maybe param" "maybe type" "temp"
      (613208 'move' call_tmp[613205](59924 call size _mt[243] a[59805]))
      unknown call_tmp[613210] "expr temp" "maybe param" "maybe type" "temp"
      (613213 'move' call_tmp[613210](59922 call - call_tmp[613205] 1))
      (59930 'move' tmp[59906](59928 call chpl_compute_high_param_loop_bound 0 call_tmp[613210]))
      unknown tmp[59907] "maybe param" "temp"
      (59933 'move' tmp[59907] 1)
      ParamForLoop[59935]
      { d[59904] tmp[59905] tmp[59906] tmp[59907]
        unknown call_tmp[613215] "expr temp" "maybe param" "maybe type" "temp"
        (613218 'move' call_tmp[613215](59890 call result[59873] d[59904]))
        unknown call_tmp[613220] "expr temp" "maybe param" "maybe type" "temp"
        (613223 'move' call_tmp[613220](59894 call a[59805] d[59904]))
        unknown call_tmp[613225] "expr temp" "maybe param" "maybe type" "temp"
        (613228 'move' call_tmp[613225](59898 call b[59811] d[59904]))
        unknown call_tmp[613230] "expr temp" "maybe param" "maybe type" "temp"
        (613233 'move' call_tmp[613230](59899 call & call_tmp[613220] call_tmp[613225]))
        (59901 call = call_tmp[613215] call_tmp[613230])
        (474895 'end of statement' result[59873] d[59904] d[59904] d[59904])
      }
      label _unused_continueLabel[59909]
      label _breakLabel[59908]
    }
    (508399 'move' ret[508394](508398 'deref' result[59873]))
    gotoReturn _end_&[508392] _end_&[508392]
    (474900 'end of statement' result[59873])
    label _end_&[508392]
    (508396 return ret[508394])
  }
  where {
    (59818 call chpl_TwoHomogTuples a[59805] b[59811])
  }
  function &[59956](arg a[59953]:_tuple[56199](?), arg b[59959]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508405] "RVV" "temp"
    unknown call_tmp[613237] "expr temp" "maybe param" "maybe type" "temp"
    (613240 'move' call_tmp[613237](59963 call size _mt[243] a[59953]))
    unknown call_tmp[613244] "expr temp" "maybe param" "maybe type" "temp"
    (613247 'move' call_tmp[613244](59967 call size _mt[243] b[59959]))
    unknown call_tmp[613249] "expr temp" "maybe param" "maybe type" "temp"
    (613252 'move' call_tmp[613249](59970 call != call_tmp[613237] call_tmp[613244]))
    unknown call_tmp[613254] "expr temp" "maybe param" "maybe type" "temp"
    (613257 'move' call_tmp[613254](59977 call _cond_test call_tmp[613249]))
    if call_tmp[613254]
    {
      (59975 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613261] "expr temp" "maybe param" "maybe type" "temp"
    (613264 'move' call_tmp[613261](59984 call size _mt[243] a[59953]))
    unknown call_tmp[613266] "expr temp" "maybe param" "maybe type" "temp"
    (613269 'move' call_tmp[613266](59988 call == call_tmp[613261] 1))
    unknown call_tmp[613271] "expr temp" "maybe param" "maybe type" "temp"
    (613274 'move' call_tmp[613271](60030 call _cond_test call_tmp[613266]))
    if call_tmp[613271]
    {
      unknown call_tmp[613276] "expr temp" "maybe param" "maybe type" "temp"
      (613279 'move' call_tmp[613276](59993 call a[59953] 0))
      unknown call_tmp[613281] "expr temp" "maybe param" "maybe type" "temp"
      (613284 'move' call_tmp[613281](59997 call b[59959] 0))
      unknown call_tmp[613286] "expr temp" "maybe param" "maybe type" "temp"
      (613289 'move' call_tmp[613286](59998 call & call_tmp[613276] call_tmp[613281]))
      unknown call_tmp[613291] "expr temp" "maybe param" "maybe type" "temp"
      (613294 'move' call_tmp[613291](60000 call _build_tuple call_tmp[613286]))
      (508410 'move' ret[508405](508409 'deref' call_tmp[613291]))
      gotoReturn _end_&[508403] _end_&[508403]
    }
    {
      unknown call_tmp[613296] "expr temp" "maybe param" "maybe type" "temp"
      (613299 'move' call_tmp[613296](60007 call a[59953] 0))
      unknown call_tmp[613301] "expr temp" "maybe param" "maybe type" "temp"
      (613304 'move' call_tmp[613301](60011 call b[59959] 0))
      unknown call_tmp[613306] "expr temp" "maybe param" "maybe type" "temp"
      (613309 'move' call_tmp[613306](60012 call & call_tmp[613296] call_tmp[613301]))
      unknown call_tmp[613311] "expr temp" "maybe param" "maybe type" "temp"
      (613314 'move' call_tmp[613311](60017 call chpl__tupleRest a[59953]))
      unknown call_tmp[613316] "expr temp" "maybe param" "maybe type" "temp"
      (613319 'move' call_tmp[613316](60021 call chpl__tupleRest b[59959]))
      unknown call_tmp[613321] "expr temp" "maybe param" "maybe type" "temp"
      (613324 'move' call_tmp[613321](60022 call & call_tmp[613311] call_tmp[613316]))
      unknown call_tmp[613326] "expr temp" "maybe param" "maybe type" "temp"
      (613329 'move' call_tmp[613326](60026 call _build_tuple call_tmp[613306](60024 'expand_tuple' call_tmp[613321])))
      (508415 'move' ret[508405](508414 'deref' call_tmp[613326]))
      gotoReturn _end_&[508403] _end_&[508403]
    }
    label _end_&[508403]
    (508407 return ret[508405])
  }
  function |[60044](arg a[60041]:_tuple[56199](?), arg b[60047]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508421] "RVV" "temp"
    unknown call_tmp[613333] "expr temp" "maybe param" "maybe type" "temp"
    (613336 'move' call_tmp[613333](60056 call size _mt[243] a[60041]))
    unknown call_tmp[613340] "expr temp" "maybe param" "maybe type" "temp"
    (613343 'move' call_tmp[613340](60060 call size _mt[243] b[60047]))
    unknown call_tmp[613345] "expr temp" "maybe param" "maybe type" "temp"
    (613348 'move' call_tmp[613345](60063 call != call_tmp[613333] call_tmp[613340]))
    unknown call_tmp[613350] "expr temp" "maybe param" "maybe type" "temp"
    (613353 'move' call_tmp[613350](60086 call _cond_test call_tmp[613345]))
    if call_tmp[613350]
    {
      (60084 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491530] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613355] "expr temp" "maybe param" "maybe type" "temp"
      (613358 'move' call_tmp[613355](60099 call a[60041] 0))
      unknown call_tmp[613360] "expr temp" "maybe param" "maybe type" "temp"
      (613363 'move' call_tmp[613360](60103 call b[60047] 0))
      unknown call_tmp[613365] "expr temp" "maybe param" "maybe type" "temp"
      (613368 'move' call_tmp[613365](60104 call | call_tmp[613355] call_tmp[613360]))
      (491534 'move' call_type_tmp[491530](60106 'typeof' call_tmp[613365]))
    }
    unknown result[60109] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613372] "expr temp" "maybe param" "maybe type" "temp"
    (613375 'move' call_tmp[613372](60093 call size _mt[243] a[60041]))
    unknown call_tmp[613377] "expr temp" "maybe param" "maybe type" "temp"
    (613380 'move' call_tmp[613377](60107 call * call_tmp[613372] call_type_tmp[491530]))
    (540778 'default init var' result[60109] call_tmp[613377])
    (60112 'end of statement')
    {
      unknown d[60140] "dead at end of block" "insert auto destroy"
      (540780 'init var' d[60140] 0)
      (474906 'end of statement')
      unknown tmp[60141] "maybe param" "temp"
      unknown call_tmp[613384] "expr temp" "maybe param" "maybe type" "temp"
      (613387 'move' call_tmp[613384](60115 call size _mt[243] a[60041]))
      unknown call_tmp[613389] "expr temp" "maybe param" "maybe type" "temp"
      (613392 'move' call_tmp[613389](60119 call - call_tmp[613384] 1))
      (60153 'move' tmp[60141](60151 call chpl_compute_low_param_loop_bound 0 call_tmp[613389]))
      unknown tmp[60142] "maybe param" "temp"
      unknown call_tmp[613396] "expr temp" "maybe param" "maybe type" "temp"
      (613399 'move' call_tmp[613396](60160 call size _mt[243] a[60041]))
      unknown call_tmp[613401] "expr temp" "maybe param" "maybe type" "temp"
      (613404 'move' call_tmp[613401](60158 call - call_tmp[613396] 1))
      (60166 'move' tmp[60142](60164 call chpl_compute_high_param_loop_bound 0 call_tmp[613401]))
      unknown tmp[60143] "maybe param" "temp"
      (60169 'move' tmp[60143] 1)
      ParamForLoop[60171]
      { d[60140] tmp[60141] tmp[60142] tmp[60143]
        unknown call_tmp[613406] "expr temp" "maybe param" "maybe type" "temp"
        (613409 'move' call_tmp[613406](60126 call result[60109] d[60140]))
        unknown call_tmp[613411] "expr temp" "maybe param" "maybe type" "temp"
        (613414 'move' call_tmp[613411](60130 call a[60041] d[60140]))
        unknown call_tmp[613416] "expr temp" "maybe param" "maybe type" "temp"
        (613419 'move' call_tmp[613416](60134 call b[60047] d[60140]))
        unknown call_tmp[613421] "expr temp" "maybe param" "maybe type" "temp"
        (613424 'move' call_tmp[613421](60135 call | call_tmp[613411] call_tmp[613416]))
        (60137 call = call_tmp[613406] call_tmp[613421])
        (474907 'end of statement' result[60109] d[60140] d[60140] d[60140])
      }
      label _unused_continueLabel[60145]
      label _breakLabel[60144]
    }
    (508426 'move' ret[508421](508425 'deref' result[60109]))
    gotoReturn _end_|[508419] _end_|[508419]
    (474912 'end of statement' result[60109])
    label _end_|[508419]
    (508423 return ret[508421])
  }
  where {
    (60054 call chpl_TwoHomogTuples a[60041] b[60047])
  }
  function |[60192](arg a[60189]:_tuple[56199](?), arg b[60195]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508432] "RVV" "temp"
    unknown call_tmp[613428] "expr temp" "maybe param" "maybe type" "temp"
    (613431 'move' call_tmp[613428](60199 call size _mt[243] a[60189]))
    unknown call_tmp[613435] "expr temp" "maybe param" "maybe type" "temp"
    (613438 'move' call_tmp[613435](60203 call size _mt[243] b[60195]))
    unknown call_tmp[613440] "expr temp" "maybe param" "maybe type" "temp"
    (613443 'move' call_tmp[613440](60206 call != call_tmp[613428] call_tmp[613435]))
    unknown call_tmp[613445] "expr temp" "maybe param" "maybe type" "temp"
    (613448 'move' call_tmp[613445](60213 call _cond_test call_tmp[613440]))
    if call_tmp[613445]
    {
      (60211 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613452] "expr temp" "maybe param" "maybe type" "temp"
    (613455 'move' call_tmp[613452](60220 call size _mt[243] a[60189]))
    unknown call_tmp[613457] "expr temp" "maybe param" "maybe type" "temp"
    (613460 'move' call_tmp[613457](60224 call == call_tmp[613452] 1))
    unknown call_tmp[613462] "expr temp" "maybe param" "maybe type" "temp"
    (613465 'move' call_tmp[613462](60266 call _cond_test call_tmp[613457]))
    if call_tmp[613462]
    {
      unknown call_tmp[613467] "expr temp" "maybe param" "maybe type" "temp"
      (613470 'move' call_tmp[613467](60229 call a[60189] 0))
      unknown call_tmp[613472] "expr temp" "maybe param" "maybe type" "temp"
      (613475 'move' call_tmp[613472](60233 call b[60195] 0))
      unknown call_tmp[613477] "expr temp" "maybe param" "maybe type" "temp"
      (613480 'move' call_tmp[613477](60234 call | call_tmp[613467] call_tmp[613472]))
      unknown call_tmp[613482] "expr temp" "maybe param" "maybe type" "temp"
      (613485 'move' call_tmp[613482](60236 call _build_tuple call_tmp[613477]))
      (508437 'move' ret[508432](508436 'deref' call_tmp[613482]))
      gotoReturn _end_|[508430] _end_|[508430]
    }
    {
      unknown call_tmp[613487] "expr temp" "maybe param" "maybe type" "temp"
      (613490 'move' call_tmp[613487](60243 call a[60189] 0))
      unknown call_tmp[613492] "expr temp" "maybe param" "maybe type" "temp"
      (613495 'move' call_tmp[613492](60247 call b[60195] 0))
      unknown call_tmp[613497] "expr temp" "maybe param" "maybe type" "temp"
      (613500 'move' call_tmp[613497](60248 call | call_tmp[613487] call_tmp[613492]))
      unknown call_tmp[613502] "expr temp" "maybe param" "maybe type" "temp"
      (613505 'move' call_tmp[613502](60253 call chpl__tupleRest a[60189]))
      unknown call_tmp[613507] "expr temp" "maybe param" "maybe type" "temp"
      (613510 'move' call_tmp[613507](60257 call chpl__tupleRest b[60195]))
      unknown call_tmp[613512] "expr temp" "maybe param" "maybe type" "temp"
      (613515 'move' call_tmp[613512](60258 call | call_tmp[613502] call_tmp[613507]))
      unknown call_tmp[613517] "expr temp" "maybe param" "maybe type" "temp"
      (613520 'move' call_tmp[613517](60262 call _build_tuple call_tmp[613497](60260 'expand_tuple' call_tmp[613512])))
      (508442 'move' ret[508432](508441 'deref' call_tmp[613517]))
      gotoReturn _end_|[508430] _end_|[508430]
    }
    label _end_|[508430]
    (508434 return ret[508432])
  }
  function ^[60280](arg a[60277]:_tuple[56199](?), arg b[60283]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508448] "RVV" "temp"
    unknown call_tmp[613524] "expr temp" "maybe param" "maybe type" "temp"
    (613527 'move' call_tmp[613524](60292 call size _mt[243] a[60277]))
    unknown call_tmp[613531] "expr temp" "maybe param" "maybe type" "temp"
    (613534 'move' call_tmp[613531](60296 call size _mt[243] b[60283]))
    unknown call_tmp[613536] "expr temp" "maybe param" "maybe type" "temp"
    (613539 'move' call_tmp[613536](60299 call != call_tmp[613524] call_tmp[613531]))
    unknown call_tmp[613541] "expr temp" "maybe param" "maybe type" "temp"
    (613544 'move' call_tmp[613541](60322 call _cond_test call_tmp[613536]))
    if call_tmp[613541]
    {
      (60320 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491536] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613546] "expr temp" "maybe param" "maybe type" "temp"
      (613549 'move' call_tmp[613546](60335 call a[60277] 0))
      unknown call_tmp[613551] "expr temp" "maybe param" "maybe type" "temp"
      (613554 'move' call_tmp[613551](60339 call b[60283] 0))
      unknown call_tmp[613556] "expr temp" "maybe param" "maybe type" "temp"
      (613559 'move' call_tmp[613556](60340 call ^ call_tmp[613546] call_tmp[613551]))
      (491540 'move' call_type_tmp[491536](60342 'typeof' call_tmp[613556]))
    }
    unknown result[60345] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613563] "expr temp" "maybe param" "maybe type" "temp"
    (613566 'move' call_tmp[613563](60329 call size _mt[243] a[60277]))
    unknown call_tmp[613568] "expr temp" "maybe param" "maybe type" "temp"
    (613571 'move' call_tmp[613568](60343 call * call_tmp[613563] call_type_tmp[491536]))
    (540782 'default init var' result[60345] call_tmp[613568])
    (60348 'end of statement')
    {
      unknown d[60376] "dead at end of block" "insert auto destroy"
      (540784 'init var' d[60376] 0)
      (474918 'end of statement')
      unknown tmp[60377] "maybe param" "temp"
      unknown call_tmp[613575] "expr temp" "maybe param" "maybe type" "temp"
      (613578 'move' call_tmp[613575](60351 call size _mt[243] a[60277]))
      unknown call_tmp[613580] "expr temp" "maybe param" "maybe type" "temp"
      (613583 'move' call_tmp[613580](60355 call - call_tmp[613575] 1))
      (60389 'move' tmp[60377](60387 call chpl_compute_low_param_loop_bound 0 call_tmp[613580]))
      unknown tmp[60378] "maybe param" "temp"
      unknown call_tmp[613587] "expr temp" "maybe param" "maybe type" "temp"
      (613590 'move' call_tmp[613587](60396 call size _mt[243] a[60277]))
      unknown call_tmp[613592] "expr temp" "maybe param" "maybe type" "temp"
      (613595 'move' call_tmp[613592](60394 call - call_tmp[613587] 1))
      (60402 'move' tmp[60378](60400 call chpl_compute_high_param_loop_bound 0 call_tmp[613592]))
      unknown tmp[60379] "maybe param" "temp"
      (60405 'move' tmp[60379] 1)
      ParamForLoop[60407]
      { d[60376] tmp[60377] tmp[60378] tmp[60379]
        unknown call_tmp[613597] "expr temp" "maybe param" "maybe type" "temp"
        (613600 'move' call_tmp[613597](60362 call result[60345] d[60376]))
        unknown call_tmp[613602] "expr temp" "maybe param" "maybe type" "temp"
        (613605 'move' call_tmp[613602](60366 call a[60277] d[60376]))
        unknown call_tmp[613607] "expr temp" "maybe param" "maybe type" "temp"
        (613610 'move' call_tmp[613607](60370 call b[60283] d[60376]))
        unknown call_tmp[613612] "expr temp" "maybe param" "maybe type" "temp"
        (613615 'move' call_tmp[613612](60371 call ^ call_tmp[613602] call_tmp[613607]))
        (60373 call = call_tmp[613597] call_tmp[613612])
        (474919 'end of statement' result[60345] d[60376] d[60376] d[60376])
      }
      label _unused_continueLabel[60381]
      label _breakLabel[60380]
    }
    (508453 'move' ret[508448](508452 'deref' result[60345]))
    gotoReturn _end_^[508446] _end_^[508446]
    (474924 'end of statement' result[60345])
    label _end_^[508446]
    (508450 return ret[508448])
  }
  where {
    (60290 call chpl_TwoHomogTuples a[60277] b[60283])
  }
  function ^[60428](arg a[60425]:_tuple[56199](?), arg b[60431]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508459] "RVV" "temp"
    unknown call_tmp[613619] "expr temp" "maybe param" "maybe type" "temp"
    (613622 'move' call_tmp[613619](60435 call size _mt[243] a[60425]))
    unknown call_tmp[613626] "expr temp" "maybe param" "maybe type" "temp"
    (613629 'move' call_tmp[613626](60439 call size _mt[243] b[60431]))
    unknown call_tmp[613631] "expr temp" "maybe param" "maybe type" "temp"
    (613634 'move' call_tmp[613631](60442 call != call_tmp[613619] call_tmp[613626]))
    unknown call_tmp[613636] "expr temp" "maybe param" "maybe type" "temp"
    (613639 'move' call_tmp[613636](60449 call _cond_test call_tmp[613631]))
    if call_tmp[613636]
    {
      (60447 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613643] "expr temp" "maybe param" "maybe type" "temp"
    (613646 'move' call_tmp[613643](60456 call size _mt[243] a[60425]))
    unknown call_tmp[613648] "expr temp" "maybe param" "maybe type" "temp"
    (613651 'move' call_tmp[613648](60460 call == call_tmp[613643] 1))
    unknown call_tmp[613653] "expr temp" "maybe param" "maybe type" "temp"
    (613656 'move' call_tmp[613653](60502 call _cond_test call_tmp[613648]))
    if call_tmp[613653]
    {
      unknown call_tmp[613658] "expr temp" "maybe param" "maybe type" "temp"
      (613661 'move' call_tmp[613658](60465 call a[60425] 0))
      unknown call_tmp[613663] "expr temp" "maybe param" "maybe type" "temp"
      (613666 'move' call_tmp[613663](60469 call b[60431] 0))
      unknown call_tmp[613668] "expr temp" "maybe param" "maybe type" "temp"
      (613671 'move' call_tmp[613668](60470 call ^ call_tmp[613658] call_tmp[613663]))
      unknown call_tmp[613673] "expr temp" "maybe param" "maybe type" "temp"
      (613676 'move' call_tmp[613673](60472 call _build_tuple call_tmp[613668]))
      (508464 'move' ret[508459](508463 'deref' call_tmp[613673]))
      gotoReturn _end_^[508457] _end_^[508457]
    }
    {
      unknown call_tmp[613678] "expr temp" "maybe param" "maybe type" "temp"
      (613681 'move' call_tmp[613678](60479 call a[60425] 0))
      unknown call_tmp[613683] "expr temp" "maybe param" "maybe type" "temp"
      (613686 'move' call_tmp[613683](60483 call b[60431] 0))
      unknown call_tmp[613688] "expr temp" "maybe param" "maybe type" "temp"
      (613691 'move' call_tmp[613688](60484 call ^ call_tmp[613678] call_tmp[613683]))
      unknown call_tmp[613693] "expr temp" "maybe param" "maybe type" "temp"
      (613696 'move' call_tmp[613693](60489 call chpl__tupleRest a[60425]))
      unknown call_tmp[613698] "expr temp" "maybe param" "maybe type" "temp"
      (613701 'move' call_tmp[613698](60493 call chpl__tupleRest b[60431]))
      unknown call_tmp[613703] "expr temp" "maybe param" "maybe type" "temp"
      (613706 'move' call_tmp[613703](60494 call ^ call_tmp[613693] call_tmp[613698]))
      unknown call_tmp[613708] "expr temp" "maybe param" "maybe type" "temp"
      (613711 'move' call_tmp[613708](60498 call _build_tuple call_tmp[613688](60496 'expand_tuple' call_tmp[613703])))
      (508469 'move' ret[508459](508468 'deref' call_tmp[613708]))
      gotoReturn _end_^[508457] _end_^[508457]
    }
    label _end_^[508457]
    (508461 return ret[508459])
  }
  function <<[60516](arg a[60513]:_tuple[56199](?), arg b[60519]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508475] "RVV" "temp"
    unknown call_tmp[613715] "expr temp" "maybe param" "maybe type" "temp"
    (613718 'move' call_tmp[613715](60528 call size _mt[243] a[60513]))
    unknown call_tmp[613722] "expr temp" "maybe param" "maybe type" "temp"
    (613725 'move' call_tmp[613722](60532 call size _mt[243] b[60519]))
    unknown call_tmp[613727] "expr temp" "maybe param" "maybe type" "temp"
    (613730 'move' call_tmp[613727](60535 call != call_tmp[613715] call_tmp[613722]))
    unknown call_tmp[613732] "expr temp" "maybe param" "maybe type" "temp"
    (613735 'move' call_tmp[613732](60558 call _cond_test call_tmp[613727]))
    if call_tmp[613732]
    {
      (60556 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491542] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613737] "expr temp" "maybe param" "maybe type" "temp"
      (613740 'move' call_tmp[613737](60571 call a[60513] 0))
      unknown call_tmp[613742] "expr temp" "maybe param" "maybe type" "temp"
      (613745 'move' call_tmp[613742](60575 call b[60519] 0))
      unknown call_tmp[613747] "expr temp" "maybe param" "maybe type" "temp"
      (613750 'move' call_tmp[613747](60576 call << call_tmp[613737] call_tmp[613742]))
      (491546 'move' call_type_tmp[491542](60578 'typeof' call_tmp[613747]))
    }
    unknown result[60581] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613754] "expr temp" "maybe param" "maybe type" "temp"
    (613757 'move' call_tmp[613754](60565 call size _mt[243] a[60513]))
    unknown call_tmp[613759] "expr temp" "maybe param" "maybe type" "temp"
    (613762 'move' call_tmp[613759](60579 call * call_tmp[613754] call_type_tmp[491542]))
    (540786 'default init var' result[60581] call_tmp[613759])
    (60584 'end of statement')
    {
      unknown d[60612] "dead at end of block" "insert auto destroy"
      (540788 'init var' d[60612] 0)
      (474930 'end of statement')
      unknown tmp[60613] "maybe param" "temp"
      unknown call_tmp[613766] "expr temp" "maybe param" "maybe type" "temp"
      (613769 'move' call_tmp[613766](60587 call size _mt[243] a[60513]))
      unknown call_tmp[613771] "expr temp" "maybe param" "maybe type" "temp"
      (613774 'move' call_tmp[613771](60591 call - call_tmp[613766] 1))
      (60625 'move' tmp[60613](60623 call chpl_compute_low_param_loop_bound 0 call_tmp[613771]))
      unknown tmp[60614] "maybe param" "temp"
      unknown call_tmp[613778] "expr temp" "maybe param" "maybe type" "temp"
      (613781 'move' call_tmp[613778](60632 call size _mt[243] a[60513]))
      unknown call_tmp[613783] "expr temp" "maybe param" "maybe type" "temp"
      (613786 'move' call_tmp[613783](60630 call - call_tmp[613778] 1))
      (60638 'move' tmp[60614](60636 call chpl_compute_high_param_loop_bound 0 call_tmp[613783]))
      unknown tmp[60615] "maybe param" "temp"
      (60641 'move' tmp[60615] 1)
      ParamForLoop[60643]
      { d[60612] tmp[60613] tmp[60614] tmp[60615]
        unknown call_tmp[613788] "expr temp" "maybe param" "maybe type" "temp"
        (613791 'move' call_tmp[613788](60598 call result[60581] d[60612]))
        unknown call_tmp[613793] "expr temp" "maybe param" "maybe type" "temp"
        (613796 'move' call_tmp[613793](60602 call a[60513] d[60612]))
        unknown call_tmp[613798] "expr temp" "maybe param" "maybe type" "temp"
        (613801 'move' call_tmp[613798](60606 call b[60519] d[60612]))
        unknown call_tmp[613803] "expr temp" "maybe param" "maybe type" "temp"
        (613806 'move' call_tmp[613803](60607 call << call_tmp[613793] call_tmp[613798]))
        (60609 call = call_tmp[613788] call_tmp[613803])
        (474931 'end of statement' result[60581] d[60612] d[60612] d[60612])
      }
      label _unused_continueLabel[60617]
      label _breakLabel[60616]
    }
    (508480 'move' ret[508475](508479 'deref' result[60581]))
    gotoReturn _end_<<[508473] _end_<<[508473]
    (474936 'end of statement' result[60581])
    label _end_<<[508473]
    (508477 return ret[508475])
  }
  where {
    (60526 call chpl_TwoHomogTuples a[60513] b[60519])
  }
  function <<[60664](arg a[60661]:_tuple[56199](?), arg b[60667]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508486] "RVV" "temp"
    unknown call_tmp[613810] "expr temp" "maybe param" "maybe type" "temp"
    (613813 'move' call_tmp[613810](60671 call size _mt[243] a[60661]))
    unknown call_tmp[613817] "expr temp" "maybe param" "maybe type" "temp"
    (613820 'move' call_tmp[613817](60675 call size _mt[243] b[60667]))
    unknown call_tmp[613822] "expr temp" "maybe param" "maybe type" "temp"
    (613825 'move' call_tmp[613822](60678 call != call_tmp[613810] call_tmp[613817]))
    unknown call_tmp[613827] "expr temp" "maybe param" "maybe type" "temp"
    (613830 'move' call_tmp[613827](60685 call _cond_test call_tmp[613822]))
    if call_tmp[613827]
    {
      (60683 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[613834] "expr temp" "maybe param" "maybe type" "temp"
    (613837 'move' call_tmp[613834](60692 call size _mt[243] a[60661]))
    unknown call_tmp[613839] "expr temp" "maybe param" "maybe type" "temp"
    (613842 'move' call_tmp[613839](60696 call == call_tmp[613834] 1))
    unknown call_tmp[613844] "expr temp" "maybe param" "maybe type" "temp"
    (613847 'move' call_tmp[613844](60738 call _cond_test call_tmp[613839]))
    if call_tmp[613844]
    {
      unknown call_tmp[613849] "expr temp" "maybe param" "maybe type" "temp"
      (613852 'move' call_tmp[613849](60701 call a[60661] 0))
      unknown call_tmp[613854] "expr temp" "maybe param" "maybe type" "temp"
      (613857 'move' call_tmp[613854](60705 call b[60667] 0))
      unknown call_tmp[613859] "expr temp" "maybe param" "maybe type" "temp"
      (613862 'move' call_tmp[613859](60706 call << call_tmp[613849] call_tmp[613854]))
      unknown call_tmp[613864] "expr temp" "maybe param" "maybe type" "temp"
      (613867 'move' call_tmp[613864](60708 call _build_tuple call_tmp[613859]))
      (508491 'move' ret[508486](508490 'deref' call_tmp[613864]))
      gotoReturn _end_<<[508484] _end_<<[508484]
    }
    {
      unknown call_tmp[613869] "expr temp" "maybe param" "maybe type" "temp"
      (613872 'move' call_tmp[613869](60715 call a[60661] 0))
      unknown call_tmp[613874] "expr temp" "maybe param" "maybe type" "temp"
      (613877 'move' call_tmp[613874](60719 call b[60667] 0))
      unknown call_tmp[613879] "expr temp" "maybe param" "maybe type" "temp"
      (613882 'move' call_tmp[613879](60720 call << call_tmp[613869] call_tmp[613874]))
      unknown call_tmp[613884] "expr temp" "maybe param" "maybe type" "temp"
      (613887 'move' call_tmp[613884](60725 call chpl__tupleRest a[60661]))
      unknown call_tmp[613889] "expr temp" "maybe param" "maybe type" "temp"
      (613892 'move' call_tmp[613889](60729 call chpl__tupleRest b[60667]))
      unknown call_tmp[613894] "expr temp" "maybe param" "maybe type" "temp"
      (613897 'move' call_tmp[613894](60730 call << call_tmp[613884] call_tmp[613889]))
      unknown call_tmp[613899] "expr temp" "maybe param" "maybe type" "temp"
      (613902 'move' call_tmp[613899](60734 call _build_tuple call_tmp[613879](60732 'expand_tuple' call_tmp[613894])))
      (508496 'move' ret[508486](508495 'deref' call_tmp[613899]))
      gotoReturn _end_<<[508484] _end_<<[508484]
    }
    label _end_<<[508484]
    (508488 return ret[508486])
  }
  function >>[60752](arg a[60749]:_tuple[56199](?), arg b[60755]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508502] "RVV" "temp"
    unknown call_tmp[613906] "expr temp" "maybe param" "maybe type" "temp"
    (613909 'move' call_tmp[613906](60764 call size _mt[243] a[60749]))
    unknown call_tmp[613913] "expr temp" "maybe param" "maybe type" "temp"
    (613916 'move' call_tmp[613913](60768 call size _mt[243] b[60755]))
    unknown call_tmp[613918] "expr temp" "maybe param" "maybe type" "temp"
    (613921 'move' call_tmp[613918](60771 call != call_tmp[613906] call_tmp[613913]))
    unknown call_tmp[613923] "expr temp" "maybe param" "maybe type" "temp"
    (613926 'move' call_tmp[613923](60794 call _cond_test call_tmp[613918]))
    if call_tmp[613923]
    {
      (60792 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491548] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613928] "expr temp" "maybe param" "maybe type" "temp"
      (613931 'move' call_tmp[613928](60807 call a[60749] 0))
      unknown call_tmp[613933] "expr temp" "maybe param" "maybe type" "temp"
      (613936 'move' call_tmp[613933](60811 call b[60755] 0))
      unknown call_tmp[613938] "expr temp" "maybe param" "maybe type" "temp"
      (613941 'move' call_tmp[613938](60812 call >> call_tmp[613928] call_tmp[613933]))
      (491552 'move' call_type_tmp[491548](60814 'typeof' call_tmp[613938]))
    }
    unknown result[60817] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613945] "expr temp" "maybe param" "maybe type" "temp"
    (613948 'move' call_tmp[613945](60801 call size _mt[243] a[60749]))
    unknown call_tmp[613950] "expr temp" "maybe param" "maybe type" "temp"
    (613953 'move' call_tmp[613950](60815 call * call_tmp[613945] call_type_tmp[491548]))
    (540790 'default init var' result[60817] call_tmp[613950])
    (60820 'end of statement')
    {
      unknown d[60848] "dead at end of block" "insert auto destroy"
      (540792 'init var' d[60848] 0)
      (474942 'end of statement')
      unknown tmp[60849] "maybe param" "temp"
      unknown call_tmp[613957] "expr temp" "maybe param" "maybe type" "temp"
      (613960 'move' call_tmp[613957](60823 call size _mt[243] a[60749]))
      unknown call_tmp[613962] "expr temp" "maybe param" "maybe type" "temp"
      (613965 'move' call_tmp[613962](60827 call - call_tmp[613957] 1))
      (60861 'move' tmp[60849](60859 call chpl_compute_low_param_loop_bound 0 call_tmp[613962]))
      unknown tmp[60850] "maybe param" "temp"
      unknown call_tmp[613969] "expr temp" "maybe param" "maybe type" "temp"
      (613972 'move' call_tmp[613969](60868 call size _mt[243] a[60749]))
      unknown call_tmp[613974] "expr temp" "maybe param" "maybe type" "temp"
      (613977 'move' call_tmp[613974](60866 call - call_tmp[613969] 1))
      (60874 'move' tmp[60850](60872 call chpl_compute_high_param_loop_bound 0 call_tmp[613974]))
      unknown tmp[60851] "maybe param" "temp"
      (60877 'move' tmp[60851] 1)
      ParamForLoop[60879]
      { d[60848] tmp[60849] tmp[60850] tmp[60851]
        unknown call_tmp[613979] "expr temp" "maybe param" "maybe type" "temp"
        (613982 'move' call_tmp[613979](60834 call result[60817] d[60848]))
        unknown call_tmp[613984] "expr temp" "maybe param" "maybe type" "temp"
        (613987 'move' call_tmp[613984](60838 call a[60749] d[60848]))
        unknown call_tmp[613989] "expr temp" "maybe param" "maybe type" "temp"
        (613992 'move' call_tmp[613989](60842 call b[60755] d[60848]))
        unknown call_tmp[613994] "expr temp" "maybe param" "maybe type" "temp"
        (613997 'move' call_tmp[613994](60843 call >> call_tmp[613984] call_tmp[613989]))
        (60845 call = call_tmp[613979] call_tmp[613994])
        (474943 'end of statement' result[60817] d[60848] d[60848] d[60848])
      }
      label _unused_continueLabel[60853]
      label _breakLabel[60852]
    }
    (508507 'move' ret[508502](508506 'deref' result[60817]))
    gotoReturn _end_>>[508500] _end_>>[508500]
    (474948 'end of statement' result[60817])
    label _end_>>[508500]
    (508504 return ret[508502])
  }
  where {
    (60762 call chpl_TwoHomogTuples a[60749] b[60755])
  }
  function >>[60900](arg a[60897]:_tuple[56199](?), arg b[60903]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508513] "RVV" "temp"
    unknown call_tmp[614001] "expr temp" "maybe param" "maybe type" "temp"
    (614004 'move' call_tmp[614001](60907 call size _mt[243] a[60897]))
    unknown call_tmp[614008] "expr temp" "maybe param" "maybe type" "temp"
    (614011 'move' call_tmp[614008](60911 call size _mt[243] b[60903]))
    unknown call_tmp[614013] "expr temp" "maybe param" "maybe type" "temp"
    (614016 'move' call_tmp[614013](60914 call != call_tmp[614001] call_tmp[614008]))
    unknown call_tmp[614018] "expr temp" "maybe param" "maybe type" "temp"
    (614021 'move' call_tmp[614018](60921 call _cond_test call_tmp[614013]))
    if call_tmp[614018]
    {
      (60919 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614025] "expr temp" "maybe param" "maybe type" "temp"
    (614028 'move' call_tmp[614025](60928 call size _mt[243] a[60897]))
    unknown call_tmp[614030] "expr temp" "maybe param" "maybe type" "temp"
    (614033 'move' call_tmp[614030](60932 call == call_tmp[614025] 1))
    unknown call_tmp[614035] "expr temp" "maybe param" "maybe type" "temp"
    (614038 'move' call_tmp[614035](60974 call _cond_test call_tmp[614030]))
    if call_tmp[614035]
    {
      unknown call_tmp[614040] "expr temp" "maybe param" "maybe type" "temp"
      (614043 'move' call_tmp[614040](60937 call a[60897] 0))
      unknown call_tmp[614045] "expr temp" "maybe param" "maybe type" "temp"
      (614048 'move' call_tmp[614045](60941 call b[60903] 0))
      unknown call_tmp[614050] "expr temp" "maybe param" "maybe type" "temp"
      (614053 'move' call_tmp[614050](60942 call >> call_tmp[614040] call_tmp[614045]))
      unknown call_tmp[614055] "expr temp" "maybe param" "maybe type" "temp"
      (614058 'move' call_tmp[614055](60944 call _build_tuple call_tmp[614050]))
      (508518 'move' ret[508513](508517 'deref' call_tmp[614055]))
      gotoReturn _end_>>[508511] _end_>>[508511]
    }
    {
      unknown call_tmp[614060] "expr temp" "maybe param" "maybe type" "temp"
      (614063 'move' call_tmp[614060](60951 call a[60897] 0))
      unknown call_tmp[614065] "expr temp" "maybe param" "maybe type" "temp"
      (614068 'move' call_tmp[614065](60955 call b[60903] 0))
      unknown call_tmp[614070] "expr temp" "maybe param" "maybe type" "temp"
      (614073 'move' call_tmp[614070](60956 call >> call_tmp[614060] call_tmp[614065]))
      unknown call_tmp[614075] "expr temp" "maybe param" "maybe type" "temp"
      (614078 'move' call_tmp[614075](60961 call chpl__tupleRest a[60897]))
      unknown call_tmp[614080] "expr temp" "maybe param" "maybe type" "temp"
      (614083 'move' call_tmp[614080](60965 call chpl__tupleRest b[60903]))
      unknown call_tmp[614085] "expr temp" "maybe param" "maybe type" "temp"
      (614088 'move' call_tmp[614085](60966 call >> call_tmp[614075] call_tmp[614080]))
      unknown call_tmp[614090] "expr temp" "maybe param" "maybe type" "temp"
      (614093 'move' call_tmp[614090](60970 call _build_tuple call_tmp[614070](60968 'expand_tuple' call_tmp[614085])))
      (508523 'move' ret[508513](508522 'deref' call_tmp[614090]))
      gotoReturn _end_>>[508511] _end_>>[508511]
    }
    label _end_>>[508511]
    (508515 return ret[508513])
  }
  function >[60988](arg a[60985]:_tuple[56199](?), arg b[60991]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508529] "RVV" "temp"
    unknown call_tmp[614097] "expr temp" "maybe param" "maybe type" "temp"
    (614100 'move' call_tmp[614097](60995 call size _mt[243] a[60985]))
    unknown call_tmp[614104] "expr temp" "maybe param" "maybe type" "temp"
    (614107 'move' call_tmp[614104](60999 call size _mt[243] b[60991]))
    unknown call_tmp[614109] "expr temp" "maybe param" "maybe type" "temp"
    (614112 'move' call_tmp[614109](61002 call != call_tmp[614097] call_tmp[614104]))
    unknown call_tmp[614114] "expr temp" "maybe param" "maybe type" "temp"
    (614117 'move' call_tmp[614114](61025 call _cond_test call_tmp[614109]))
    if call_tmp[614114]
    {
      (61023 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61078] "dead at end of block" "insert auto destroy"
      (540794 'init var' i[61078] 0)
      (474954 'end of statement')
      unknown tmp[61079] "maybe param" "temp"
      unknown call_tmp[614121] "expr temp" "maybe param" "maybe type" "temp"
      (614124 'move' call_tmp[614121](61033 call size _mt[243] a[60985]))
      unknown call_tmp[614126] "expr temp" "maybe param" "maybe type" "temp"
      (614129 'move' call_tmp[614126](61037 call - call_tmp[614121] 1))
      (61091 'move' tmp[61079](61089 call chpl_compute_low_param_loop_bound 0 call_tmp[614126]))
      unknown tmp[61080] "maybe param" "temp"
      unknown call_tmp[614133] "expr temp" "maybe param" "maybe type" "temp"
      (614136 'move' call_tmp[614133](61098 call size _mt[243] a[60985]))
      unknown call_tmp[614138] "expr temp" "maybe param" "maybe type" "temp"
      (614141 'move' call_tmp[614138](61096 call - call_tmp[614133] 1))
      (61104 'move' tmp[61080](61102 call chpl_compute_high_param_loop_bound 0 call_tmp[614138]))
      unknown tmp[61081] "maybe param" "temp"
      (61107 'move' tmp[61081] 1)
      ParamForLoop[61109]
      { i[61078] tmp[61079] tmp[61080] tmp[61081]
        unknown call_tmp[614143] "expr temp" "maybe param" "maybe type" "temp"
        (614146 'move' call_tmp[614143](61044 call a[60985] i[61078]))
        unknown call_tmp[614148] "expr temp" "maybe param" "maybe type" "temp"
        (614151 'move' call_tmp[614148](61048 call b[60991] i[61078]))
        unknown call_tmp[614153] "expr temp" "maybe param" "maybe type" "temp"
        (614156 'move' call_tmp[614153](61049 call > call_tmp[614143] call_tmp[614148]))
        unknown call_tmp[614158] "expr temp" "maybe param" "maybe type" "temp"
        (614161 'move' call_tmp[614158](61072 call _cond_test call_tmp[614153]))
        if call_tmp[614158]
        {
          (508534 'move' ret[508529](508533 'deref' 1))
          gotoReturn _end_>[508527] _end_>[508527]
        }
        {
          unknown call_tmp[614163] "expr temp" "maybe param" "maybe type" "temp"
          (614166 'move' call_tmp[614163](61057 call a[60985] i[61078]))
          unknown call_tmp[614168] "expr temp" "maybe param" "maybe type" "temp"
          (614171 'move' call_tmp[614168](61061 call b[60991] i[61078]))
          unknown call_tmp[614173] "expr temp" "maybe param" "maybe type" "temp"
          (614176 'move' call_tmp[614173](61062 call < call_tmp[614163] call_tmp[614168]))
          unknown call_tmp[614178] "expr temp" "maybe param" "maybe type" "temp"
          (614181 'move' call_tmp[614178](61067 call _cond_test call_tmp[614173]))
          if call_tmp[614178]
          {
            (508539 'move' ret[508529](508538 'deref' 0))
            gotoReturn _end_>[508527] _end_>[508527]
          }
        }
      }
      label _unused_continueLabel[61083]
      label _breakLabel[61082]
    }
    (508544 'move' ret[508529](508543 'deref' 0))
    label _end_>[508527]
    (508531 return ret[508529])
  }
  function >=[61129](arg a[61126]:_tuple[56199](?), arg b[61132]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508548] "RVV" "temp"
    unknown call_tmp[614185] "expr temp" "maybe param" "maybe type" "temp"
    (614188 'move' call_tmp[614185](61136 call size _mt[243] a[61126]))
    unknown call_tmp[614192] "expr temp" "maybe param" "maybe type" "temp"
    (614195 'move' call_tmp[614192](61140 call size _mt[243] b[61132]))
    unknown call_tmp[614197] "expr temp" "maybe param" "maybe type" "temp"
    (614200 'move' call_tmp[614197](61143 call != call_tmp[614185] call_tmp[614192]))
    unknown call_tmp[614202] "expr temp" "maybe param" "maybe type" "temp"
    (614205 'move' call_tmp[614202](61166 call _cond_test call_tmp[614197]))
    if call_tmp[614202]
    {
      (61164 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61219] "dead at end of block" "insert auto destroy"
      (540796 'init var' i[61219] 0)
      (474959 'end of statement')
      unknown tmp[61220] "maybe param" "temp"
      unknown call_tmp[614209] "expr temp" "maybe param" "maybe type" "temp"
      (614212 'move' call_tmp[614209](61174 call size _mt[243] a[61126]))
      unknown call_tmp[614214] "expr temp" "maybe param" "maybe type" "temp"
      (614217 'move' call_tmp[614214](61178 call - call_tmp[614209] 1))
      (61232 'move' tmp[61220](61230 call chpl_compute_low_param_loop_bound 0 call_tmp[614214]))
      unknown tmp[61221] "maybe param" "temp"
      unknown call_tmp[614221] "expr temp" "maybe param" "maybe type" "temp"
      (614224 'move' call_tmp[614221](61239 call size _mt[243] a[61126]))
      unknown call_tmp[614226] "expr temp" "maybe param" "maybe type" "temp"
      (614229 'move' call_tmp[614226](61237 call - call_tmp[614221] 1))
      (61245 'move' tmp[61221](61243 call chpl_compute_high_param_loop_bound 0 call_tmp[614226]))
      unknown tmp[61222] "maybe param" "temp"
      (61248 'move' tmp[61222] 1)
      ParamForLoop[61250]
      { i[61219] tmp[61220] tmp[61221] tmp[61222]
        unknown call_tmp[614231] "expr temp" "maybe param" "maybe type" "temp"
        (614234 'move' call_tmp[614231](61185 call a[61126] i[61219]))
        unknown call_tmp[614236] "expr temp" "maybe param" "maybe type" "temp"
        (614239 'move' call_tmp[614236](61189 call b[61132] i[61219]))
        unknown call_tmp[614241] "expr temp" "maybe param" "maybe type" "temp"
        (614244 'move' call_tmp[614241](61190 call > call_tmp[614231] call_tmp[614236]))
        unknown call_tmp[614246] "expr temp" "maybe param" "maybe type" "temp"
        (614249 'move' call_tmp[614246](61213 call _cond_test call_tmp[614241]))
        if call_tmp[614246]
        {
          (508553 'move' ret[508548](508552 'deref' 1))
          gotoReturn _end_>=[508546] _end_>=[508546]
        }
        {
          unknown call_tmp[614251] "expr temp" "maybe param" "maybe type" "temp"
          (614254 'move' call_tmp[614251](61198 call a[61126] i[61219]))
          unknown call_tmp[614256] "expr temp" "maybe param" "maybe type" "temp"
          (614259 'move' call_tmp[614256](61202 call b[61132] i[61219]))
          unknown call_tmp[614261] "expr temp" "maybe param" "maybe type" "temp"
          (614264 'move' call_tmp[614261](61203 call < call_tmp[614251] call_tmp[614256]))
          unknown call_tmp[614266] "expr temp" "maybe param" "maybe type" "temp"
          (614269 'move' call_tmp[614266](61208 call _cond_test call_tmp[614261]))
          if call_tmp[614266]
          {
            (508558 'move' ret[508548](508557 'deref' 0))
            gotoReturn _end_>=[508546] _end_>=[508546]
          }
        }
      }
      label _unused_continueLabel[61224]
      label _breakLabel[61223]
    }
    (508563 'move' ret[508548](508562 'deref' 1))
    label _end_>=[508546]
    (508550 return ret[508548])
  }
  function <[61270](arg a[61267]:_tuple[56199](?), arg b[61273]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508567] "RVV" "temp"
    unknown call_tmp[614273] "expr temp" "maybe param" "maybe type" "temp"
    (614276 'move' call_tmp[614273](61277 call size _mt[243] a[61267]))
    unknown call_tmp[614280] "expr temp" "maybe param" "maybe type" "temp"
    (614283 'move' call_tmp[614280](61281 call size _mt[243] b[61273]))
    unknown call_tmp[614285] "expr temp" "maybe param" "maybe type" "temp"
    (614288 'move' call_tmp[614285](61284 call != call_tmp[614273] call_tmp[614280]))
    unknown call_tmp[614290] "expr temp" "maybe param" "maybe type" "temp"
    (614293 'move' call_tmp[614290](61307 call _cond_test call_tmp[614285]))
    if call_tmp[614290]
    {
      (61305 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61360] "dead at end of block" "insert auto destroy"
      (540798 'init var' i[61360] 0)
      (474964 'end of statement')
      unknown tmp[61361] "maybe param" "temp"
      unknown call_tmp[614297] "expr temp" "maybe param" "maybe type" "temp"
      (614300 'move' call_tmp[614297](61315 call size _mt[243] a[61267]))
      unknown call_tmp[614302] "expr temp" "maybe param" "maybe type" "temp"
      (614305 'move' call_tmp[614302](61319 call - call_tmp[614297] 1))
      (61373 'move' tmp[61361](61371 call chpl_compute_low_param_loop_bound 0 call_tmp[614302]))
      unknown tmp[61362] "maybe param" "temp"
      unknown call_tmp[614309] "expr temp" "maybe param" "maybe type" "temp"
      (614312 'move' call_tmp[614309](61380 call size _mt[243] a[61267]))
      unknown call_tmp[614314] "expr temp" "maybe param" "maybe type" "temp"
      (614317 'move' call_tmp[614314](61378 call - call_tmp[614309] 1))
      (61386 'move' tmp[61362](61384 call chpl_compute_high_param_loop_bound 0 call_tmp[614314]))
      unknown tmp[61363] "maybe param" "temp"
      (61389 'move' tmp[61363] 1)
      ParamForLoop[61391]
      { i[61360] tmp[61361] tmp[61362] tmp[61363]
        unknown call_tmp[614319] "expr temp" "maybe param" "maybe type" "temp"
        (614322 'move' call_tmp[614319](61326 call a[61267] i[61360]))
        unknown call_tmp[614324] "expr temp" "maybe param" "maybe type" "temp"
        (614327 'move' call_tmp[614324](61330 call b[61273] i[61360]))
        unknown call_tmp[614329] "expr temp" "maybe param" "maybe type" "temp"
        (614332 'move' call_tmp[614329](61331 call < call_tmp[614319] call_tmp[614324]))
        unknown call_tmp[614334] "expr temp" "maybe param" "maybe type" "temp"
        (614337 'move' call_tmp[614334](61354 call _cond_test call_tmp[614329]))
        if call_tmp[614334]
        {
          (508572 'move' ret[508567](508571 'deref' 1))
          gotoReturn _end_<[508565] _end_<[508565]
        }
        {
          unknown call_tmp[614339] "expr temp" "maybe param" "maybe type" "temp"
          (614342 'move' call_tmp[614339](61339 call a[61267] i[61360]))
          unknown call_tmp[614344] "expr temp" "maybe param" "maybe type" "temp"
          (614347 'move' call_tmp[614344](61343 call b[61273] i[61360]))
          unknown call_tmp[614349] "expr temp" "maybe param" "maybe type" "temp"
          (614352 'move' call_tmp[614349](61344 call > call_tmp[614339] call_tmp[614344]))
          unknown call_tmp[614354] "expr temp" "maybe param" "maybe type" "temp"
          (614357 'move' call_tmp[614354](61349 call _cond_test call_tmp[614349]))
          if call_tmp[614354]
          {
            (508577 'move' ret[508567](508576 'deref' 0))
            gotoReturn _end_<[508565] _end_<[508565]
          }
        }
      }
      label _unused_continueLabel[61365]
      label _breakLabel[61364]
    }
    (508582 'move' ret[508567](508581 'deref' 0))
    label _end_<[508565]
    (508569 return ret[508567])
  }
  function <=[61411](arg a[61408]:_tuple[56199](?), arg b[61414]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508586] "RVV" "temp"
    unknown call_tmp[614361] "expr temp" "maybe param" "maybe type" "temp"
    (614364 'move' call_tmp[614361](61418 call size _mt[243] a[61408]))
    unknown call_tmp[614368] "expr temp" "maybe param" "maybe type" "temp"
    (614371 'move' call_tmp[614368](61422 call size _mt[243] b[61414]))
    unknown call_tmp[614373] "expr temp" "maybe param" "maybe type" "temp"
    (614376 'move' call_tmp[614373](61425 call != call_tmp[614361] call_tmp[614368]))
    unknown call_tmp[614378] "expr temp" "maybe param" "maybe type" "temp"
    (614381 'move' call_tmp[614378](61448 call _cond_test call_tmp[614373]))
    if call_tmp[614378]
    {
      (61446 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61501] "dead at end of block" "insert auto destroy"
      (540800 'init var' i[61501] 0)
      (474969 'end of statement')
      unknown tmp[61502] "maybe param" "temp"
      unknown call_tmp[614385] "expr temp" "maybe param" "maybe type" "temp"
      (614388 'move' call_tmp[614385](61456 call size _mt[243] a[61408]))
      unknown call_tmp[614390] "expr temp" "maybe param" "maybe type" "temp"
      (614393 'move' call_tmp[614390](61460 call - call_tmp[614385] 1))
      (61514 'move' tmp[61502](61512 call chpl_compute_low_param_loop_bound 0 call_tmp[614390]))
      unknown tmp[61503] "maybe param" "temp"
      unknown call_tmp[614397] "expr temp" "maybe param" "maybe type" "temp"
      (614400 'move' call_tmp[614397](61521 call size _mt[243] a[61408]))
      unknown call_tmp[614402] "expr temp" "maybe param" "maybe type" "temp"
      (614405 'move' call_tmp[614402](61519 call - call_tmp[614397] 1))
      (61527 'move' tmp[61503](61525 call chpl_compute_high_param_loop_bound 0 call_tmp[614402]))
      unknown tmp[61504] "maybe param" "temp"
      (61530 'move' tmp[61504] 1)
      ParamForLoop[61532]
      { i[61501] tmp[61502] tmp[61503] tmp[61504]
        unknown call_tmp[614407] "expr temp" "maybe param" "maybe type" "temp"
        (614410 'move' call_tmp[614407](61467 call a[61408] i[61501]))
        unknown call_tmp[614412] "expr temp" "maybe param" "maybe type" "temp"
        (614415 'move' call_tmp[614412](61471 call b[61414] i[61501]))
        unknown call_tmp[614417] "expr temp" "maybe param" "maybe type" "temp"
        (614420 'move' call_tmp[614417](61472 call < call_tmp[614407] call_tmp[614412]))
        unknown call_tmp[614422] "expr temp" "maybe param" "maybe type" "temp"
        (614425 'move' call_tmp[614422](61495 call _cond_test call_tmp[614417]))
        if call_tmp[614422]
        {
          (508591 'move' ret[508586](508590 'deref' 1))
          gotoReturn _end_<=[508584] _end_<=[508584]
        }
        {
          unknown call_tmp[614427] "expr temp" "maybe param" "maybe type" "temp"
          (614430 'move' call_tmp[614427](61480 call a[61408] i[61501]))
          unknown call_tmp[614432] "expr temp" "maybe param" "maybe type" "temp"
          (614435 'move' call_tmp[614432](61484 call b[61414] i[61501]))
          unknown call_tmp[614437] "expr temp" "maybe param" "maybe type" "temp"
          (614440 'move' call_tmp[614437](61485 call > call_tmp[614427] call_tmp[614432]))
          unknown call_tmp[614442] "expr temp" "maybe param" "maybe type" "temp"
          (614445 'move' call_tmp[614442](61490 call _cond_test call_tmp[614437]))
          if call_tmp[614442]
          {
            (508596 'move' ret[508586](508595 'deref' 0))
            gotoReturn _end_<=[508584] _end_<=[508584]
          }
        }
      }
      label _unused_continueLabel[61506]
      label _breakLabel[61505]
    }
    (508601 'move' ret[508586](508600 'deref' 1))
    label _end_<=[508584]
    (508588 return ret[508586])
  }
  function ==[61552](arg a[61549]:_tuple[56199](?), arg b[61555]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508605] "RVV" "temp"
    unknown call_tmp[614449] "expr temp" "maybe param" "maybe type" "temp"
    (614452 'move' call_tmp[614449](61559 call size _mt[243] a[61549]))
    unknown call_tmp[614456] "expr temp" "maybe param" "maybe type" "temp"
    (614459 'move' call_tmp[614456](61563 call size _mt[243] b[61555]))
    unknown call_tmp[614461] "expr temp" "maybe param" "maybe type" "temp"
    (614464 'move' call_tmp[614461](61566 call != call_tmp[614449] call_tmp[614456]))
    unknown call_tmp[614466] "expr temp" "maybe param" "maybe type" "temp"
    (614469 'move' call_tmp[614466](61641 call _cond_test call_tmp[614461]))
    if call_tmp[614466]
    {
      (508610 'move' ret[508605](508609 'deref' 0))
      gotoReturn _end_==[508603] _end_==[508603]
    }
    {
      {
        unknown i[61600] "dead at end of block" "insert auto destroy"
        (540802 'init var' i[61600] 0)
        (474974 'end of statement')
        unknown tmp[61601] "maybe param" "temp"
        unknown call_tmp[614473] "expr temp" "maybe param" "maybe type" "temp"
        (614476 'move' call_tmp[614473](61574 call size _mt[243] a[61549]))
        unknown call_tmp[614478] "expr temp" "maybe param" "maybe type" "temp"
        (614481 'move' call_tmp[614478](61578 call - call_tmp[614473] 1))
        (61613 'move' tmp[61601](61611 call chpl_compute_low_param_loop_bound 0 call_tmp[614478]))
        unknown tmp[61602] "maybe param" "temp"
        unknown call_tmp[614485] "expr temp" "maybe param" "maybe type" "temp"
        (614488 'move' call_tmp[614485](61620 call size _mt[243] a[61549]))
        unknown call_tmp[614490] "expr temp" "maybe param" "maybe type" "temp"
        (614493 'move' call_tmp[614490](61618 call - call_tmp[614485] 1))
        (61626 'move' tmp[61602](61624 call chpl_compute_high_param_loop_bound 0 call_tmp[614490]))
        unknown tmp[61603] "maybe param" "temp"
        (61629 'move' tmp[61603] 1)
        ParamForLoop[61631]
        { i[61600] tmp[61601] tmp[61602] tmp[61603]
          unknown call_tmp[614495] "expr temp" "maybe param" "maybe type" "temp"
          (614498 'move' call_tmp[614495](61585 call a[61549] i[61600]))
          unknown call_tmp[614500] "expr temp" "maybe param" "maybe type" "temp"
          (614503 'move' call_tmp[614500](61589 call b[61555] i[61600]))
          unknown call_tmp[614505] "expr temp" "maybe param" "maybe type" "temp"
          (614508 'move' call_tmp[614505](61590 call != call_tmp[614495] call_tmp[614500]))
          unknown call_tmp[614510] "expr temp" "maybe param" "maybe type" "temp"
          (614513 'move' call_tmp[614510](61595 call _cond_test call_tmp[614505]))
          if call_tmp[614510]
          {
            (508615 'move' ret[508605](508614 'deref' 0))
            gotoReturn _end_==[508603] _end_==[508603]
          }
        }
        label _unused_continueLabel[61605]
        label _breakLabel[61604]
      }
    }
    (508620 'move' ret[508605](508619 'deref' 1))
    label _end_==[508603]
    (508607 return ret[508605])
  }
  function !=[61657](arg a[61654]:_tuple[56199](?), arg b[61660]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508624] "RVV" "temp"
    unknown call_tmp[614517] "expr temp" "maybe param" "maybe type" "temp"
    (614520 'move' call_tmp[614517](61664 call size _mt[243] a[61654]))
    unknown call_tmp[614524] "expr temp" "maybe param" "maybe type" "temp"
    (614527 'move' call_tmp[614524](61668 call size _mt[243] b[61660]))
    unknown call_tmp[614529] "expr temp" "maybe param" "maybe type" "temp"
    (614532 'move' call_tmp[614529](61671 call != call_tmp[614517] call_tmp[614524]))
    unknown call_tmp[614534] "expr temp" "maybe param" "maybe type" "temp"
    (614537 'move' call_tmp[614534](61746 call _cond_test call_tmp[614529]))
    if call_tmp[614534]
    {
      (508629 'move' ret[508624](508628 'deref' 1))
      gotoReturn _end_!=[508622] _end_!=[508622]
    }
    {
      {
        unknown i[61705] "dead at end of block" "insert auto destroy"
        (540804 'init var' i[61705] 0)
        (474978 'end of statement')
        unknown tmp[61706] "maybe param" "temp"
        unknown call_tmp[614541] "expr temp" "maybe param" "maybe type" "temp"
        (614544 'move' call_tmp[614541](61679 call size _mt[243] a[61654]))
        unknown call_tmp[614546] "expr temp" "maybe param" "maybe type" "temp"
        (614549 'move' call_tmp[614546](61683 call - call_tmp[614541] 1))
        (61718 'move' tmp[61706](61716 call chpl_compute_low_param_loop_bound 0 call_tmp[614546]))
        unknown tmp[61707] "maybe param" "temp"
        unknown call_tmp[614553] "expr temp" "maybe param" "maybe type" "temp"
        (614556 'move' call_tmp[614553](61725 call size _mt[243] a[61654]))
        unknown call_tmp[614558] "expr temp" "maybe param" "maybe type" "temp"
        (614561 'move' call_tmp[614558](61723 call - call_tmp[614553] 1))
        (61731 'move' tmp[61707](61729 call chpl_compute_high_param_loop_bound 0 call_tmp[614558]))
        unknown tmp[61708] "maybe param" "temp"
        (61734 'move' tmp[61708] 1)
        ParamForLoop[61736]
        { i[61705] tmp[61706] tmp[61707] tmp[61708]
          unknown call_tmp[614563] "expr temp" "maybe param" "maybe type" "temp"
          (614566 'move' call_tmp[614563](61690 call a[61654] i[61705]))
          unknown call_tmp[614568] "expr temp" "maybe param" "maybe type" "temp"
          (614571 'move' call_tmp[614568](61694 call b[61660] i[61705]))
          unknown call_tmp[614573] "expr temp" "maybe param" "maybe type" "temp"
          (614576 'move' call_tmp[614573](61695 call != call_tmp[614563] call_tmp[614568]))
          unknown call_tmp[614578] "expr temp" "maybe param" "maybe type" "temp"
          (614581 'move' call_tmp[614578](61700 call _cond_test call_tmp[614573]))
          if call_tmp[614578]
          {
            (508634 'move' ret[508624](508633 'deref' 1))
            gotoReturn _end_!=[508622] _end_!=[508622]
          }
        }
        label _unused_continueLabel[61710]
        label _breakLabel[61709]
      }
    }
    (508639 'move' ret[508624](508638 'deref' 0))
    label _end_!=[508622]
    (508626 return ret[508624])
  }
  function +[61762](arg x[61759]:_tuple[56199](?), arg y[61769] :
  unknown call_tmp[614583] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508643] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491554] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614588] "expr temp" "maybe param" "maybe type" "temp"
      (614591 'move' call_tmp[614588](61783 call x[61759] 0))
      (491558 'move' call_type_tmp[491554](61784 'typeof' call_tmp[614588]))
    }
    unknown result[61787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614595] "expr temp" "maybe param" "maybe type" "temp"
    (614598 'move' call_tmp[614595](61777 call size _mt[243] x[61759]))
    unknown call_tmp[614600] "expr temp" "maybe param" "maybe type" "temp"
    (614603 'move' call_tmp[614600](61785 call * call_tmp[614595] call_type_tmp[491554]))
    (540806 'default init var' result[61787] call_tmp[614600])
    (61790 'end of statement')
    {
      unknown d[61816] "dead at end of block" "insert auto destroy"
      (540808 'init var' d[61816] 0)
      (474981 'end of statement')
      unknown tmp[61817] "maybe param" "temp"
      unknown call_tmp[614607] "expr temp" "maybe param" "maybe type" "temp"
      (614610 'move' call_tmp[614607](61794 call size _mt[243] x[61759]))
      unknown call_tmp[614612] "expr temp" "maybe param" "maybe type" "temp"
      (614615 'move' call_tmp[614612](61798 call - call_tmp[614607] 1))
      (61829 'move' tmp[61817](61827 call chpl_compute_low_param_loop_bound 0 call_tmp[614612]))
      unknown tmp[61818] "maybe param" "temp"
      unknown call_tmp[614619] "expr temp" "maybe param" "maybe type" "temp"
      (614622 'move' call_tmp[614619](61836 call size _mt[243] x[61759]))
      unknown call_tmp[614624] "expr temp" "maybe param" "maybe type" "temp"
      (614627 'move' call_tmp[614624](61834 call - call_tmp[614619] 1))
      (61842 'move' tmp[61818](61840 call chpl_compute_high_param_loop_bound 0 call_tmp[614624]))
      unknown tmp[61819] "maybe param" "temp"
      (61845 'move' tmp[61819] 1)
      ParamForLoop[61847]
      { d[61816] tmp[61817] tmp[61818] tmp[61819]
        unknown call_tmp[614629] "expr temp" "maybe param" "maybe type" "temp"
        (614632 'move' call_tmp[614629](61805 call result[61787] d[61816]))
        unknown call_tmp[614634] "expr temp" "maybe param" "maybe type" "temp"
        (614637 'move' call_tmp[614634](61809 call x[61759] d[61816]))
        unknown call_tmp[614639] "expr temp" "maybe param" "maybe type" "temp"
        (614642 'move' call_tmp[614639](61811 call + call_tmp[614634] y[61769]))
        (61813 call = call_tmp[614629] call_tmp[614639])
        (474982 'end of statement' result[61787] d[61816] d[61816])
      }
      label _unused_continueLabel[61821]
      label _breakLabel[61820]
    }
    (508648 'move' ret[508643](508647 'deref' result[61787]))
    gotoReturn _end_+[508641] _end_+[508641]
    (474986 'end of statement' result[61787])
    label _end_+[508641]
    (508645 return ret[508643])
  }
  where {
    (61775 call isHomogeneousTuple x[61759])
  }
  function +[61869](arg x[61866]:_any[178](?), arg y[61872]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508654] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491560] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614644] "expr temp" "maybe param" "maybe type" "temp"
      (614647 'move' call_tmp[614644](61897 call y[61872] 0))
      (491564 'move' call_type_tmp[491560](61898 'typeof' call_tmp[614644]))
    }
    unknown result[61901] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614651] "expr temp" "maybe param" "maybe type" "temp"
    (614654 'move' call_tmp[614651](61891 call size _mt[243] y[61872]))
    unknown call_tmp[614656] "expr temp" "maybe param" "maybe type" "temp"
    (614659 'move' call_tmp[614656](61899 call * call_tmp[614651] call_type_tmp[491560]))
    (540810 'default init var' result[61901] call_tmp[614656])
    (61904 'end of statement')
    {
      unknown d[61930] "dead at end of block" "insert auto destroy"
      (540812 'init var' d[61930] 0)
      (474988 'end of statement')
      unknown tmp[61931] "maybe param" "temp"
      unknown call_tmp[614663] "expr temp" "maybe param" "maybe type" "temp"
      (614666 'move' call_tmp[614663](61908 call size _mt[243] y[61872]))
      unknown call_tmp[614668] "expr temp" "maybe param" "maybe type" "temp"
      (614671 'move' call_tmp[614668](61912 call - call_tmp[614663] 1))
      (61943 'move' tmp[61931](61941 call chpl_compute_low_param_loop_bound 0 call_tmp[614668]))
      unknown tmp[61932] "maybe param" "temp"
      unknown call_tmp[614675] "expr temp" "maybe param" "maybe type" "temp"
      (614678 'move' call_tmp[614675](61950 call size _mt[243] y[61872]))
      unknown call_tmp[614680] "expr temp" "maybe param" "maybe type" "temp"
      (614683 'move' call_tmp[614680](61948 call - call_tmp[614675] 1))
      (61956 'move' tmp[61932](61954 call chpl_compute_high_param_loop_bound 0 call_tmp[614680]))
      unknown tmp[61933] "maybe param" "temp"
      (61959 'move' tmp[61933] 1)
      ParamForLoop[61961]
      { d[61930] tmp[61931] tmp[61932] tmp[61933]
        unknown call_tmp[614685] "expr temp" "maybe param" "maybe type" "temp"
        (614688 'move' call_tmp[614685](61919 call result[61901] d[61930]))
        unknown call_tmp[614690] "expr temp" "maybe param" "maybe type" "temp"
        (614693 'move' call_tmp[614690](61924 call y[61872] d[61930]))
        unknown call_tmp[614695] "expr temp" "maybe param" "maybe type" "temp"
        (614698 'move' call_tmp[614695](61925 call + x[61866] call_tmp[614690]))
        (61927 call = call_tmp[614685] call_tmp[614695])
        (474989 'end of statement' result[61901] d[61930] d[61930])
      }
      label _unused_continueLabel[61935]
      label _breakLabel[61934]
    }
    (508659 'move' ret[508654](508658 'deref' result[61901]))
    gotoReturn _end_+[508652] _end_+[508652]
    (474993 'end of statement' result[61901])
    label _end_+[508652]
    (508656 return ret[508654])
  }
  where {
    unknown tmp[418873] "maybe param" "temp"
    (418884 'move' tmp[418873](61878 call isHomogeneousTuple y[61872]))
    unknown call_tmp[614700] "expr temp" "maybe param" "maybe type" "temp"
    (614703 'move' call_tmp[614700](418886 call _cond_invalid tmp[418873]))
    if call_tmp[614700]
    {
      (418889 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554995] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554996] "maybe param" "temp"
    unknown call_tmp[614705] "expr temp" "maybe param" "maybe type" "temp"
    (614708 'move' call_tmp[614705](418874 call isTrue tmp[418873]))
    (555001 'move' tmp[554996](554999 call _cond_test call_tmp[614705]))
    if tmp[554996]
    {
      { scopeless type
        unknown call_type_tmp[491566] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614710] "expr temp" "maybe param" "maybe type" "temp"
        (614713 'move' call_tmp[614710](61885 call y[61872] 0))
        (491570 'move' call_type_tmp[491566](61886 'typeof' call_tmp[614710]))
      }
      unknown tmp[555003] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614715] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614718 'move' call_tmp[614715](454687 'typeof' x[61866]))
      unknown call_tmp[614720] "expr temp" "maybe param" "maybe type" "temp"
      (614723 'move' call_tmp[614720](354124 'is_subtype' call_type_tmp[491566] call_tmp[614715]))
      (555005 'move' tmp[555003](418877 call isTrue call_tmp[614720]))
      (555010 'move' tmp[554995](555007 '_paramFoldLogical' tmp[554996] tmp[555003]))
    }
    {
      (555015 'move' tmp[554995](555012 '_paramFoldLogical' tmp[554996] 0))
    }
    (748113 call chpl_statementLevelSymbol tmp[554995])
  }
  function -[61982](arg x[61979]:_tuple[56199](?), arg y[61989] :
  unknown call_tmp[614725] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508665] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491572] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614730] "expr temp" "maybe param" "maybe type" "temp"
      (614733 'move' call_tmp[614730](62003 call x[61979] 0))
      (491576 'move' call_type_tmp[491572](62004 'typeof' call_tmp[614730]))
    }
    unknown result[62007] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614737] "expr temp" "maybe param" "maybe type" "temp"
    (614740 'move' call_tmp[614737](61997 call size _mt[243] x[61979]))
    unknown call_tmp[614742] "expr temp" "maybe param" "maybe type" "temp"
    (614745 'move' call_tmp[614742](62005 call * call_tmp[614737] call_type_tmp[491572]))
    (540814 'default init var' result[62007] call_tmp[614742])
    (62010 'end of statement')
    {
      unknown d[62036] "dead at end of block" "insert auto destroy"
      (540816 'init var' d[62036] 0)
      (474995 'end of statement')
      unknown tmp[62037] "maybe param" "temp"
      unknown call_tmp[614749] "expr temp" "maybe param" "maybe type" "temp"
      (614752 'move' call_tmp[614749](62014 call size _mt[243] x[61979]))
      unknown call_tmp[614754] "expr temp" "maybe param" "maybe type" "temp"
      (614757 'move' call_tmp[614754](62018 call - call_tmp[614749] 1))
      (62049 'move' tmp[62037](62047 call chpl_compute_low_param_loop_bound 0 call_tmp[614754]))
      unknown tmp[62038] "maybe param" "temp"
      unknown call_tmp[614761] "expr temp" "maybe param" "maybe type" "temp"
      (614764 'move' call_tmp[614761](62056 call size _mt[243] x[61979]))
      unknown call_tmp[614766] "expr temp" "maybe param" "maybe type" "temp"
      (614769 'move' call_tmp[614766](62054 call - call_tmp[614761] 1))
      (62062 'move' tmp[62038](62060 call chpl_compute_high_param_loop_bound 0 call_tmp[614766]))
      unknown tmp[62039] "maybe param" "temp"
      (62065 'move' tmp[62039] 1)
      ParamForLoop[62067]
      { d[62036] tmp[62037] tmp[62038] tmp[62039]
        unknown call_tmp[614771] "expr temp" "maybe param" "maybe type" "temp"
        (614774 'move' call_tmp[614771](62025 call result[62007] d[62036]))
        unknown call_tmp[614776] "expr temp" "maybe param" "maybe type" "temp"
        (614779 'move' call_tmp[614776](62029 call x[61979] d[62036]))
        unknown call_tmp[614781] "expr temp" "maybe param" "maybe type" "temp"
        (614784 'move' call_tmp[614781](62031 call - call_tmp[614776] y[61989]))
        (62033 call = call_tmp[614771] call_tmp[614781])
        (474996 'end of statement' result[62007] d[62036] d[62036])
      }
      label _unused_continueLabel[62041]
      label _breakLabel[62040]
    }
    (508670 'move' ret[508665](508669 'deref' result[62007]))
    gotoReturn _end_-[508663] _end_-[508663]
    (475000 'end of statement' result[62007])
    label _end_-[508663]
    (508667 return ret[508665])
  }
  where {
    (61995 call isHomogeneousTuple x[61979])
  }
  function -[62089](arg x[62086]:_any[178](?), arg y[62092]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508676] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491578] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614786] "expr temp" "maybe param" "maybe type" "temp"
      (614789 'move' call_tmp[614786](62117 call y[62092] 0))
      (491582 'move' call_type_tmp[491578](62118 'typeof' call_tmp[614786]))
    }
    unknown result[62121] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614793] "expr temp" "maybe param" "maybe type" "temp"
    (614796 'move' call_tmp[614793](62111 call size _mt[243] y[62092]))
    unknown call_tmp[614798] "expr temp" "maybe param" "maybe type" "temp"
    (614801 'move' call_tmp[614798](62119 call * call_tmp[614793] call_type_tmp[491578]))
    (540818 'default init var' result[62121] call_tmp[614798])
    (62124 'end of statement')
    {
      unknown d[62150] "dead at end of block" "insert auto destroy"
      (540820 'init var' d[62150] 0)
      (475002 'end of statement')
      unknown tmp[62151] "maybe param" "temp"
      unknown call_tmp[614805] "expr temp" "maybe param" "maybe type" "temp"
      (614808 'move' call_tmp[614805](62128 call size _mt[243] y[62092]))
      unknown call_tmp[614810] "expr temp" "maybe param" "maybe type" "temp"
      (614813 'move' call_tmp[614810](62132 call - call_tmp[614805] 1))
      (62163 'move' tmp[62151](62161 call chpl_compute_low_param_loop_bound 0 call_tmp[614810]))
      unknown tmp[62152] "maybe param" "temp"
      unknown call_tmp[614817] "expr temp" "maybe param" "maybe type" "temp"
      (614820 'move' call_tmp[614817](62170 call size _mt[243] y[62092]))
      unknown call_tmp[614822] "expr temp" "maybe param" "maybe type" "temp"
      (614825 'move' call_tmp[614822](62168 call - call_tmp[614817] 1))
      (62176 'move' tmp[62152](62174 call chpl_compute_high_param_loop_bound 0 call_tmp[614822]))
      unknown tmp[62153] "maybe param" "temp"
      (62179 'move' tmp[62153] 1)
      ParamForLoop[62181]
      { d[62150] tmp[62151] tmp[62152] tmp[62153]
        unknown call_tmp[614827] "expr temp" "maybe param" "maybe type" "temp"
        (614830 'move' call_tmp[614827](62139 call result[62121] d[62150]))
        unknown call_tmp[614832] "expr temp" "maybe param" "maybe type" "temp"
        (614835 'move' call_tmp[614832](62144 call y[62092] d[62150]))
        unknown call_tmp[614837] "expr temp" "maybe param" "maybe type" "temp"
        (614840 'move' call_tmp[614837](62145 call - x[62086] call_tmp[614832]))
        (62147 call = call_tmp[614827] call_tmp[614837])
        (475003 'end of statement' result[62121] d[62150] d[62150])
      }
      label _unused_continueLabel[62155]
      label _breakLabel[62154]
    }
    (508681 'move' ret[508676](508680 'deref' result[62121]))
    gotoReturn _end_-[508674] _end_-[508674]
    (475007 'end of statement' result[62121])
    label _end_-[508674]
    (508678 return ret[508676])
  }
  where {
    unknown tmp[418894] "maybe param" "temp"
    (418905 'move' tmp[418894](62098 call isHomogeneousTuple y[62092]))
    unknown call_tmp[614842] "expr temp" "maybe param" "maybe type" "temp"
    (614845 'move' call_tmp[614842](418907 call _cond_invalid tmp[418894]))
    if call_tmp[614842]
    {
      (418910 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555022] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555023] "maybe param" "temp"
    unknown call_tmp[614847] "expr temp" "maybe param" "maybe type" "temp"
    (614850 'move' call_tmp[614847](418895 call isTrue tmp[418894]))
    (555028 'move' tmp[555023](555026 call _cond_test call_tmp[614847]))
    if tmp[555023]
    {
      { scopeless type
        unknown call_type_tmp[491584] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614852] "expr temp" "maybe param" "maybe type" "temp"
        (614855 'move' call_tmp[614852](62105 call y[62092] 0))
        (491588 'move' call_type_tmp[491584](62106 'typeof' call_tmp[614852]))
      }
      unknown tmp[555030] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614857] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614860 'move' call_tmp[614857](454689 'typeof' x[62086]))
      unknown call_tmp[614862] "expr temp" "maybe param" "maybe type" "temp"
      (614865 'move' call_tmp[614862](354125 'is_subtype' call_type_tmp[491584] call_tmp[614857]))
      (555032 'move' tmp[555030](418898 call isTrue call_tmp[614862]))
      (555037 'move' tmp[555022](555034 '_paramFoldLogical' tmp[555023] tmp[555030]))
    }
    {
      (555042 'move' tmp[555022](555039 '_paramFoldLogical' tmp[555023] 0))
    }
    (748115 call chpl_statementLevelSymbol tmp[555022])
  }
  function *[62202](arg x[62199]:_tuple[56199](?), arg y[62209] :
  unknown call_tmp[614867] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508687] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491590] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614872] "expr temp" "maybe param" "maybe type" "temp"
      (614875 'move' call_tmp[614872](62223 call x[62199] 0))
      (491594 'move' call_type_tmp[491590](62224 'typeof' call_tmp[614872]))
    }
    unknown result[62227] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614879] "expr temp" "maybe param" "maybe type" "temp"
    (614882 'move' call_tmp[614879](62217 call size _mt[243] x[62199]))
    unknown call_tmp[614884] "expr temp" "maybe param" "maybe type" "temp"
    (614887 'move' call_tmp[614884](62225 call * call_tmp[614879] call_type_tmp[491590]))
    (540822 'default init var' result[62227] call_tmp[614884])
    (62230 'end of statement')
    {
      unknown d[62256] "dead at end of block" "insert auto destroy"
      (540824 'init var' d[62256] 0)
      (475009 'end of statement')
      unknown tmp[62257] "maybe param" "temp"
      unknown call_tmp[614891] "expr temp" "maybe param" "maybe type" "temp"
      (614894 'move' call_tmp[614891](62234 call size _mt[243] x[62199]))
      unknown call_tmp[614896] "expr temp" "maybe param" "maybe type" "temp"
      (614899 'move' call_tmp[614896](62238 call - call_tmp[614891] 1))
      (62269 'move' tmp[62257](62267 call chpl_compute_low_param_loop_bound 0 call_tmp[614896]))
      unknown tmp[62258] "maybe param" "temp"
      unknown call_tmp[614903] "expr temp" "maybe param" "maybe type" "temp"
      (614906 'move' call_tmp[614903](62276 call size _mt[243] x[62199]))
      unknown call_tmp[614908] "expr temp" "maybe param" "maybe type" "temp"
      (614911 'move' call_tmp[614908](62274 call - call_tmp[614903] 1))
      (62282 'move' tmp[62258](62280 call chpl_compute_high_param_loop_bound 0 call_tmp[614908]))
      unknown tmp[62259] "maybe param" "temp"
      (62285 'move' tmp[62259] 1)
      ParamForLoop[62287]
      { d[62256] tmp[62257] tmp[62258] tmp[62259]
        unknown call_tmp[614913] "expr temp" "maybe param" "maybe type" "temp"
        (614916 'move' call_tmp[614913](62245 call result[62227] d[62256]))
        unknown call_tmp[614918] "expr temp" "maybe param" "maybe type" "temp"
        (614921 'move' call_tmp[614918](62249 call x[62199] d[62256]))
        unknown call_tmp[614923] "expr temp" "maybe param" "maybe type" "temp"
        (614926 'move' call_tmp[614923](62251 call * call_tmp[614918] y[62209]))
        (62253 call = call_tmp[614913] call_tmp[614923])
        (475010 'end of statement' result[62227] d[62256] d[62256])
      }
      label _unused_continueLabel[62261]
      label _breakLabel[62260]
    }
    (508692 'move' ret[508687](508691 'deref' result[62227]))
    gotoReturn _end_*[508685] _end_*[508685]
    (475014 'end of statement' result[62227])
    label _end_*[508685]
    (508689 return ret[508687])
  }
  where {
    (62215 call isHomogeneousTuple x[62199])
  }
  function *[62309](arg x[62306]:_any[178](?), arg y[62312]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508698] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491596] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614928] "expr temp" "maybe param" "maybe type" "temp"
      (614931 'move' call_tmp[614928](62337 call y[62312] 0))
      (491600 'move' call_type_tmp[491596](62338 'typeof' call_tmp[614928]))
    }
    unknown result[62341] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614935] "expr temp" "maybe param" "maybe type" "temp"
    (614938 'move' call_tmp[614935](62331 call size _mt[243] y[62312]))
    unknown call_tmp[614940] "expr temp" "maybe param" "maybe type" "temp"
    (614943 'move' call_tmp[614940](62339 call * call_tmp[614935] call_type_tmp[491596]))
    (540826 'default init var' result[62341] call_tmp[614940])
    (62344 'end of statement')
    {
      unknown d[62370] "dead at end of block" "insert auto destroy"
      (540828 'init var' d[62370] 0)
      (475016 'end of statement')
      unknown tmp[62371] "maybe param" "temp"
      unknown call_tmp[614947] "expr temp" "maybe param" "maybe type" "temp"
      (614950 'move' call_tmp[614947](62348 call size _mt[243] y[62312]))
      unknown call_tmp[614952] "expr temp" "maybe param" "maybe type" "temp"
      (614955 'move' call_tmp[614952](62352 call - call_tmp[614947] 1))
      (62383 'move' tmp[62371](62381 call chpl_compute_low_param_loop_bound 0 call_tmp[614952]))
      unknown tmp[62372] "maybe param" "temp"
      unknown call_tmp[614959] "expr temp" "maybe param" "maybe type" "temp"
      (614962 'move' call_tmp[614959](62390 call size _mt[243] y[62312]))
      unknown call_tmp[614964] "expr temp" "maybe param" "maybe type" "temp"
      (614967 'move' call_tmp[614964](62388 call - call_tmp[614959] 1))
      (62396 'move' tmp[62372](62394 call chpl_compute_high_param_loop_bound 0 call_tmp[614964]))
      unknown tmp[62373] "maybe param" "temp"
      (62399 'move' tmp[62373] 1)
      ParamForLoop[62401]
      { d[62370] tmp[62371] tmp[62372] tmp[62373]
        unknown call_tmp[614969] "expr temp" "maybe param" "maybe type" "temp"
        (614972 'move' call_tmp[614969](62359 call result[62341] d[62370]))
        unknown call_tmp[614974] "expr temp" "maybe param" "maybe type" "temp"
        (614977 'move' call_tmp[614974](62364 call y[62312] d[62370]))
        unknown call_tmp[614979] "expr temp" "maybe param" "maybe type" "temp"
        (614982 'move' call_tmp[614979](62365 call * x[62306] call_tmp[614974]))
        (62367 call = call_tmp[614969] call_tmp[614979])
        (475017 'end of statement' result[62341] d[62370] d[62370])
      }
      label _unused_continueLabel[62375]
      label _breakLabel[62374]
    }
    (508703 'move' ret[508698](508702 'deref' result[62341]))
    gotoReturn _end_*[508696] _end_*[508696]
    (475021 'end of statement' result[62341])
    label _end_*[508696]
    (508700 return ret[508698])
  }
  where {
    unknown tmp[418915] "maybe param" "temp"
    (418926 'move' tmp[418915](62318 call isHomogeneousTuple y[62312]))
    unknown call_tmp[614984] "expr temp" "maybe param" "maybe type" "temp"
    (614987 'move' call_tmp[614984](418928 call _cond_invalid tmp[418915]))
    if call_tmp[614984]
    {
      (418931 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555049] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555050] "maybe param" "temp"
    unknown call_tmp[614989] "expr temp" "maybe param" "maybe type" "temp"
    (614992 'move' call_tmp[614989](418916 call isTrue tmp[418915]))
    (555055 'move' tmp[555050](555053 call _cond_test call_tmp[614989]))
    if tmp[555050]
    {
      { scopeless type
        unknown call_type_tmp[491602] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614994] "expr temp" "maybe param" "maybe type" "temp"
        (614997 'move' call_tmp[614994](62325 call y[62312] 0))
        (491606 'move' call_type_tmp[491602](62326 'typeof' call_tmp[614994]))
      }
      unknown tmp[555057] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614999] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615002 'move' call_tmp[614999](454691 'typeof' x[62306]))
      unknown call_tmp[615004] "expr temp" "maybe param" "maybe type" "temp"
      (615007 'move' call_tmp[615004](354126 'is_subtype' call_type_tmp[491602] call_tmp[614999]))
      (555059 'move' tmp[555057](418919 call isTrue call_tmp[615004]))
      (555064 'move' tmp[555049](555061 '_paramFoldLogical' tmp[555050] tmp[555057]))
    }
    {
      (555069 'move' tmp[555049](555066 '_paramFoldLogical' tmp[555050] 0))
    }
    (748117 call chpl_statementLevelSymbol tmp[555049])
  }
  function /[62422](arg x[62419]:_tuple[56199](?), arg y[62429] :
  unknown call_tmp[615009] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508709] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491608] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615014] "expr temp" "maybe param" "maybe type" "temp"
      (615017 'move' call_tmp[615014](62443 call x[62419] 0))
      (491612 'move' call_type_tmp[491608](62444 'typeof' call_tmp[615014]))
    }
    unknown result[62447] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615021] "expr temp" "maybe param" "maybe type" "temp"
    (615024 'move' call_tmp[615021](62437 call size _mt[243] x[62419]))
    unknown call_tmp[615026] "expr temp" "maybe param" "maybe type" "temp"
    (615029 'move' call_tmp[615026](62445 call * call_tmp[615021] call_type_tmp[491608]))
    (540830 'default init var' result[62447] call_tmp[615026])
    (62450 'end of statement')
    {
      unknown d[62476] "dead at end of block" "insert auto destroy"
      (540832 'init var' d[62476] 0)
      (475023 'end of statement')
      unknown tmp[62477] "maybe param" "temp"
      unknown call_tmp[615033] "expr temp" "maybe param" "maybe type" "temp"
      (615036 'move' call_tmp[615033](62454 call size _mt[243] x[62419]))
      unknown call_tmp[615038] "expr temp" "maybe param" "maybe type" "temp"
      (615041 'move' call_tmp[615038](62458 call - call_tmp[615033] 1))
      (62489 'move' tmp[62477](62487 call chpl_compute_low_param_loop_bound 0 call_tmp[615038]))
      unknown tmp[62478] "maybe param" "temp"
      unknown call_tmp[615045] "expr temp" "maybe param" "maybe type" "temp"
      (615048 'move' call_tmp[615045](62496 call size _mt[243] x[62419]))
      unknown call_tmp[615050] "expr temp" "maybe param" "maybe type" "temp"
      (615053 'move' call_tmp[615050](62494 call - call_tmp[615045] 1))
      (62502 'move' tmp[62478](62500 call chpl_compute_high_param_loop_bound 0 call_tmp[615050]))
      unknown tmp[62479] "maybe param" "temp"
      (62505 'move' tmp[62479] 1)
      ParamForLoop[62507]
      { d[62476] tmp[62477] tmp[62478] tmp[62479]
        unknown call_tmp[615055] "expr temp" "maybe param" "maybe type" "temp"
        (615058 'move' call_tmp[615055](62465 call result[62447] d[62476]))
        unknown call_tmp[615060] "expr temp" "maybe param" "maybe type" "temp"
        (615063 'move' call_tmp[615060](62469 call x[62419] d[62476]))
        unknown call_tmp[615065] "expr temp" "maybe param" "maybe type" "temp"
        (615068 'move' call_tmp[615065](62471 call / call_tmp[615060] y[62429]))
        (62473 call = call_tmp[615055] call_tmp[615065])
        (475024 'end of statement' result[62447] d[62476] d[62476])
      }
      label _unused_continueLabel[62481]
      label _breakLabel[62480]
    }
    (508714 'move' ret[508709](508713 'deref' result[62447]))
    gotoReturn _end_/[508707] _end_/[508707]
    (475028 'end of statement' result[62447])
    label _end_/[508707]
    (508711 return ret[508709])
  }
  where {
    (62435 call isHomogeneousTuple x[62419])
  }
  function /[62529](arg x[62526]:_any[178](?), arg y[62532]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508720] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491614] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615070] "expr temp" "maybe param" "maybe type" "temp"
      (615073 'move' call_tmp[615070](62557 call y[62532] 0))
      (491618 'move' call_type_tmp[491614](62558 'typeof' call_tmp[615070]))
    }
    unknown result[62561] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615077] "expr temp" "maybe param" "maybe type" "temp"
    (615080 'move' call_tmp[615077](62551 call size _mt[243] y[62532]))
    unknown call_tmp[615082] "expr temp" "maybe param" "maybe type" "temp"
    (615085 'move' call_tmp[615082](62559 call * call_tmp[615077] call_type_tmp[491614]))
    (540834 'default init var' result[62561] call_tmp[615082])
    (62564 'end of statement')
    {
      unknown d[62590] "dead at end of block" "insert auto destroy"
      (540836 'init var' d[62590] 0)
      (475030 'end of statement')
      unknown tmp[62591] "maybe param" "temp"
      unknown call_tmp[615089] "expr temp" "maybe param" "maybe type" "temp"
      (615092 'move' call_tmp[615089](62568 call size _mt[243] y[62532]))
      unknown call_tmp[615094] "expr temp" "maybe param" "maybe type" "temp"
      (615097 'move' call_tmp[615094](62572 call - call_tmp[615089] 1))
      (62603 'move' tmp[62591](62601 call chpl_compute_low_param_loop_bound 0 call_tmp[615094]))
      unknown tmp[62592] "maybe param" "temp"
      unknown call_tmp[615101] "expr temp" "maybe param" "maybe type" "temp"
      (615104 'move' call_tmp[615101](62610 call size _mt[243] y[62532]))
      unknown call_tmp[615106] "expr temp" "maybe param" "maybe type" "temp"
      (615109 'move' call_tmp[615106](62608 call - call_tmp[615101] 1))
      (62616 'move' tmp[62592](62614 call chpl_compute_high_param_loop_bound 0 call_tmp[615106]))
      unknown tmp[62593] "maybe param" "temp"
      (62619 'move' tmp[62593] 1)
      ParamForLoop[62621]
      { d[62590] tmp[62591] tmp[62592] tmp[62593]
        unknown call_tmp[615111] "expr temp" "maybe param" "maybe type" "temp"
        (615114 'move' call_tmp[615111](62579 call result[62561] d[62590]))
        unknown call_tmp[615116] "expr temp" "maybe param" "maybe type" "temp"
        (615119 'move' call_tmp[615116](62584 call y[62532] d[62590]))
        unknown call_tmp[615121] "expr temp" "maybe param" "maybe type" "temp"
        (615124 'move' call_tmp[615121](62585 call / x[62526] call_tmp[615116]))
        (62587 call = call_tmp[615111] call_tmp[615121])
        (475031 'end of statement' result[62561] d[62590] d[62590])
      }
      label _unused_continueLabel[62595]
      label _breakLabel[62594]
    }
    (508725 'move' ret[508720](508724 'deref' result[62561]))
    gotoReturn _end_/[508718] _end_/[508718]
    (475035 'end of statement' result[62561])
    label _end_/[508718]
    (508722 return ret[508720])
  }
  where {
    unknown tmp[418936] "maybe param" "temp"
    (418947 'move' tmp[418936](62538 call isHomogeneousTuple y[62532]))
    unknown call_tmp[615126] "expr temp" "maybe param" "maybe type" "temp"
    (615129 'move' call_tmp[615126](418949 call _cond_invalid tmp[418936]))
    if call_tmp[615126]
    {
      (418952 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555076] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555077] "maybe param" "temp"
    unknown call_tmp[615131] "expr temp" "maybe param" "maybe type" "temp"
    (615134 'move' call_tmp[615131](418937 call isTrue tmp[418936]))
    (555082 'move' tmp[555077](555080 call _cond_test call_tmp[615131]))
    if tmp[555077]
    {
      { scopeless type
        unknown call_type_tmp[491620] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615136] "expr temp" "maybe param" "maybe type" "temp"
        (615139 'move' call_tmp[615136](62545 call y[62532] 0))
        (491624 'move' call_type_tmp[491620](62546 'typeof' call_tmp[615136]))
      }
      unknown tmp[555084] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615141] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615144 'move' call_tmp[615141](454693 'typeof' x[62526]))
      unknown call_tmp[615146] "expr temp" "maybe param" "maybe type" "temp"
      (615149 'move' call_tmp[615146](354127 'is_subtype' call_type_tmp[491620] call_tmp[615141]))
      (555086 'move' tmp[555084](418940 call isTrue call_tmp[615146]))
      (555091 'move' tmp[555076](555088 '_paramFoldLogical' tmp[555077] tmp[555084]))
    }
    {
      (555096 'move' tmp[555076](555093 '_paramFoldLogical' tmp[555077] 0))
    }
    (748119 call chpl_statementLevelSymbol tmp[555076])
  }
  function %[62642](arg x[62639]:_tuple[56199](?), arg y[62649] :
  unknown call_tmp[615151] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508731] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491626] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615156] "expr temp" "maybe param" "maybe type" "temp"
      (615159 'move' call_tmp[615156](62663 call x[62639] 0))
      (491630 'move' call_type_tmp[491626](62664 'typeof' call_tmp[615156]))
    }
    unknown result[62667] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615163] "expr temp" "maybe param" "maybe type" "temp"
    (615166 'move' call_tmp[615163](62657 call size _mt[243] x[62639]))
    unknown call_tmp[615168] "expr temp" "maybe param" "maybe type" "temp"
    (615171 'move' call_tmp[615168](62665 call * call_tmp[615163] call_type_tmp[491626]))
    (540838 'default init var' result[62667] call_tmp[615168])
    (62670 'end of statement')
    {
      unknown d[62696] "dead at end of block" "insert auto destroy"
      (540840 'init var' d[62696] 0)
      (475037 'end of statement')
      unknown tmp[62697] "maybe param" "temp"
      unknown call_tmp[615175] "expr temp" "maybe param" "maybe type" "temp"
      (615178 'move' call_tmp[615175](62674 call size _mt[243] x[62639]))
      unknown call_tmp[615180] "expr temp" "maybe param" "maybe type" "temp"
      (615183 'move' call_tmp[615180](62678 call - call_tmp[615175] 1))
      (62709 'move' tmp[62697](62707 call chpl_compute_low_param_loop_bound 0 call_tmp[615180]))
      unknown tmp[62698] "maybe param" "temp"
      unknown call_tmp[615187] "expr temp" "maybe param" "maybe type" "temp"
      (615190 'move' call_tmp[615187](62716 call size _mt[243] x[62639]))
      unknown call_tmp[615192] "expr temp" "maybe param" "maybe type" "temp"
      (615195 'move' call_tmp[615192](62714 call - call_tmp[615187] 1))
      (62722 'move' tmp[62698](62720 call chpl_compute_high_param_loop_bound 0 call_tmp[615192]))
      unknown tmp[62699] "maybe param" "temp"
      (62725 'move' tmp[62699] 1)
      ParamForLoop[62727]
      { d[62696] tmp[62697] tmp[62698] tmp[62699]
        unknown call_tmp[615197] "expr temp" "maybe param" "maybe type" "temp"
        (615200 'move' call_tmp[615197](62685 call result[62667] d[62696]))
        unknown call_tmp[615202] "expr temp" "maybe param" "maybe type" "temp"
        (615205 'move' call_tmp[615202](62689 call x[62639] d[62696]))
        unknown call_tmp[615207] "expr temp" "maybe param" "maybe type" "temp"
        (615210 'move' call_tmp[615207](62691 call % call_tmp[615202] y[62649]))
        (62693 call = call_tmp[615197] call_tmp[615207])
        (475038 'end of statement' result[62667] d[62696] d[62696])
      }
      label _unused_continueLabel[62701]
      label _breakLabel[62700]
    }
    (508736 'move' ret[508731](508735 'deref' result[62667]))
    gotoReturn _end_%[508729] _end_%[508729]
    (475042 'end of statement' result[62667])
    label _end_%[508729]
    (508733 return ret[508731])
  }
  where {
    (62655 call isHomogeneousTuple x[62639])
  }
  function %[62749](arg x[62746]:_any[178](?), arg y[62752]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508742] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491632] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615212] "expr temp" "maybe param" "maybe type" "temp"
      (615215 'move' call_tmp[615212](62777 call y[62752] 0))
      (491636 'move' call_type_tmp[491632](62778 'typeof' call_tmp[615212]))
    }
    unknown result[62781] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615219] "expr temp" "maybe param" "maybe type" "temp"
    (615222 'move' call_tmp[615219](62771 call size _mt[243] y[62752]))
    unknown call_tmp[615224] "expr temp" "maybe param" "maybe type" "temp"
    (615227 'move' call_tmp[615224](62779 call * call_tmp[615219] call_type_tmp[491632]))
    (540842 'default init var' result[62781] call_tmp[615224])
    (62784 'end of statement')
    {
      unknown d[62810] "dead at end of block" "insert auto destroy"
      (540844 'init var' d[62810] 0)
      (475044 'end of statement')
      unknown tmp[62811] "maybe param" "temp"
      unknown call_tmp[615231] "expr temp" "maybe param" "maybe type" "temp"
      (615234 'move' call_tmp[615231](62788 call size _mt[243] y[62752]))
      unknown call_tmp[615236] "expr temp" "maybe param" "maybe type" "temp"
      (615239 'move' call_tmp[615236](62792 call - call_tmp[615231] 1))
      (62823 'move' tmp[62811](62821 call chpl_compute_low_param_loop_bound 0 call_tmp[615236]))
      unknown tmp[62812] "maybe param" "temp"
      unknown call_tmp[615243] "expr temp" "maybe param" "maybe type" "temp"
      (615246 'move' call_tmp[615243](62830 call size _mt[243] y[62752]))
      unknown call_tmp[615248] "expr temp" "maybe param" "maybe type" "temp"
      (615251 'move' call_tmp[615248](62828 call - call_tmp[615243] 1))
      (62836 'move' tmp[62812](62834 call chpl_compute_high_param_loop_bound 0 call_tmp[615248]))
      unknown tmp[62813] "maybe param" "temp"
      (62839 'move' tmp[62813] 1)
      ParamForLoop[62841]
      { d[62810] tmp[62811] tmp[62812] tmp[62813]
        unknown call_tmp[615253] "expr temp" "maybe param" "maybe type" "temp"
        (615256 'move' call_tmp[615253](62799 call result[62781] d[62810]))
        unknown call_tmp[615258] "expr temp" "maybe param" "maybe type" "temp"
        (615261 'move' call_tmp[615258](62804 call y[62752] d[62810]))
        unknown call_tmp[615263] "expr temp" "maybe param" "maybe type" "temp"
        (615266 'move' call_tmp[615263](62805 call % x[62746] call_tmp[615258]))
        (62807 call = call_tmp[615253] call_tmp[615263])
        (475045 'end of statement' result[62781] d[62810] d[62810])
      }
      label _unused_continueLabel[62815]
      label _breakLabel[62814]
    }
    (508747 'move' ret[508742](508746 'deref' result[62781]))
    gotoReturn _end_%[508740] _end_%[508740]
    (475049 'end of statement' result[62781])
    label _end_%[508740]
    (508744 return ret[508742])
  }
  where {
    unknown tmp[418957] "maybe param" "temp"
    (418968 'move' tmp[418957](62758 call isHomogeneousTuple y[62752]))
    unknown call_tmp[615268] "expr temp" "maybe param" "maybe type" "temp"
    (615271 'move' call_tmp[615268](418970 call _cond_invalid tmp[418957]))
    if call_tmp[615268]
    {
      (418973 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555103] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555104] "maybe param" "temp"
    unknown call_tmp[615273] "expr temp" "maybe param" "maybe type" "temp"
    (615276 'move' call_tmp[615273](418958 call isTrue tmp[418957]))
    (555109 'move' tmp[555104](555107 call _cond_test call_tmp[615273]))
    if tmp[555104]
    {
      { scopeless type
        unknown call_type_tmp[491638] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615278] "expr temp" "maybe param" "maybe type" "temp"
        (615281 'move' call_tmp[615278](62765 call y[62752] 0))
        (491642 'move' call_type_tmp[491638](62766 'typeof' call_tmp[615278]))
      }
      unknown tmp[555111] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615283] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615286 'move' call_tmp[615283](454695 'typeof' x[62746]))
      unknown call_tmp[615288] "expr temp" "maybe param" "maybe type" "temp"
      (615291 'move' call_tmp[615288](354128 'is_subtype' call_type_tmp[491638] call_tmp[615283]))
      (555113 'move' tmp[555111](418961 call isTrue call_tmp[615288]))
      (555118 'move' tmp[555103](555115 '_paramFoldLogical' tmp[555104] tmp[555111]))
    }
    {
      (555123 'move' tmp[555103](555120 '_paramFoldLogical' tmp[555104] 0))
    }
    (748121 call chpl_statementLevelSymbol tmp[555103])
  }
  function **[62862](arg x[62859]:_tuple[56199](?), arg y[62869] :
  unknown call_tmp[615293] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508753] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491644] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615298] "expr temp" "maybe param" "maybe type" "temp"
      (615301 'move' call_tmp[615298](62883 call x[62859] 0))
      (491648 'move' call_type_tmp[491644](62884 'typeof' call_tmp[615298]))
    }
    unknown result[62887] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615305] "expr temp" "maybe param" "maybe type" "temp"
    (615308 'move' call_tmp[615305](62877 call size _mt[243] x[62859]))
    unknown call_tmp[615310] "expr temp" "maybe param" "maybe type" "temp"
    (615313 'move' call_tmp[615310](62885 call * call_tmp[615305] call_type_tmp[491644]))
    (540846 'default init var' result[62887] call_tmp[615310])
    (62890 'end of statement')
    {
      unknown d[62916] "dead at end of block" "insert auto destroy"
      (540848 'init var' d[62916] 0)
      (475051 'end of statement')
      unknown tmp[62917] "maybe param" "temp"
      unknown call_tmp[615317] "expr temp" "maybe param" "maybe type" "temp"
      (615320 'move' call_tmp[615317](62894 call size _mt[243] x[62859]))
      unknown call_tmp[615322] "expr temp" "maybe param" "maybe type" "temp"
      (615325 'move' call_tmp[615322](62898 call - call_tmp[615317] 1))
      (62929 'move' tmp[62917](62927 call chpl_compute_low_param_loop_bound 0 call_tmp[615322]))
      unknown tmp[62918] "maybe param" "temp"
      unknown call_tmp[615329] "expr temp" "maybe param" "maybe type" "temp"
      (615332 'move' call_tmp[615329](62936 call size _mt[243] x[62859]))
      unknown call_tmp[615334] "expr temp" "maybe param" "maybe type" "temp"
      (615337 'move' call_tmp[615334](62934 call - call_tmp[615329] 1))
      (62942 'move' tmp[62918](62940 call chpl_compute_high_param_loop_bound 0 call_tmp[615334]))
      unknown tmp[62919] "maybe param" "temp"
      (62945 'move' tmp[62919] 1)
      ParamForLoop[62947]
      { d[62916] tmp[62917] tmp[62918] tmp[62919]
        unknown call_tmp[615339] "expr temp" "maybe param" "maybe type" "temp"
        (615342 'move' call_tmp[615339](62905 call result[62887] d[62916]))
        unknown call_tmp[615344] "expr temp" "maybe param" "maybe type" "temp"
        (615347 'move' call_tmp[615344](62909 call x[62859] d[62916]))
        unknown call_tmp[615349] "expr temp" "maybe param" "maybe type" "temp"
        (615352 'move' call_tmp[615349](62911 call ** call_tmp[615344] y[62869]))
        (62913 call = call_tmp[615339] call_tmp[615349])
        (475052 'end of statement' result[62887] d[62916] d[62916])
      }
      label _unused_continueLabel[62921]
      label _breakLabel[62920]
    }
    (508758 'move' ret[508753](508757 'deref' result[62887]))
    gotoReturn _end_**[508751] _end_**[508751]
    (475056 'end of statement' result[62887])
    label _end_**[508751]
    (508755 return ret[508753])
  }
  where {
    (62875 call isHomogeneousTuple x[62859])
  }
  function **[62969](arg x[62966]:_any[178](?), arg y[62972]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508764] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491650] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615354] "expr temp" "maybe param" "maybe type" "temp"
      (615357 'move' call_tmp[615354](62997 call y[62972] 0))
      (491654 'move' call_type_tmp[491650](62998 'typeof' call_tmp[615354]))
    }
    unknown result[63001] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615361] "expr temp" "maybe param" "maybe type" "temp"
    (615364 'move' call_tmp[615361](62991 call size _mt[243] y[62972]))
    unknown call_tmp[615366] "expr temp" "maybe param" "maybe type" "temp"
    (615369 'move' call_tmp[615366](62999 call * call_tmp[615361] call_type_tmp[491650]))
    (540850 'default init var' result[63001] call_tmp[615366])
    (63004 'end of statement')
    {
      unknown d[63030] "dead at end of block" "insert auto destroy"
      (540852 'init var' d[63030] 0)
      (475058 'end of statement')
      unknown tmp[63031] "maybe param" "temp"
      unknown call_tmp[615373] "expr temp" "maybe param" "maybe type" "temp"
      (615376 'move' call_tmp[615373](63008 call size _mt[243] y[62972]))
      unknown call_tmp[615378] "expr temp" "maybe param" "maybe type" "temp"
      (615381 'move' call_tmp[615378](63012 call - call_tmp[615373] 1))
      (63043 'move' tmp[63031](63041 call chpl_compute_low_param_loop_bound 0 call_tmp[615378]))
      unknown tmp[63032] "maybe param" "temp"
      unknown call_tmp[615385] "expr temp" "maybe param" "maybe type" "temp"
      (615388 'move' call_tmp[615385](63050 call size _mt[243] y[62972]))
      unknown call_tmp[615390] "expr temp" "maybe param" "maybe type" "temp"
      (615393 'move' call_tmp[615390](63048 call - call_tmp[615385] 1))
      (63056 'move' tmp[63032](63054 call chpl_compute_high_param_loop_bound 0 call_tmp[615390]))
      unknown tmp[63033] "maybe param" "temp"
      (63059 'move' tmp[63033] 1)
      ParamForLoop[63061]
      { d[63030] tmp[63031] tmp[63032] tmp[63033]
        unknown call_tmp[615395] "expr temp" "maybe param" "maybe type" "temp"
        (615398 'move' call_tmp[615395](63019 call result[63001] d[63030]))
        unknown call_tmp[615400] "expr temp" "maybe param" "maybe type" "temp"
        (615403 'move' call_tmp[615400](63024 call y[62972] d[63030]))
        unknown call_tmp[615405] "expr temp" "maybe param" "maybe type" "temp"
        (615408 'move' call_tmp[615405](63025 call ** x[62966] call_tmp[615400]))
        (63027 call = call_tmp[615395] call_tmp[615405])
        (475059 'end of statement' result[63001] d[63030] d[63030])
      }
      label _unused_continueLabel[63035]
      label _breakLabel[63034]
    }
    (508769 'move' ret[508764](508768 'deref' result[63001]))
    gotoReturn _end_**[508762] _end_**[508762]
    (475063 'end of statement' result[63001])
    label _end_**[508762]
    (508766 return ret[508764])
  }
  where {
    unknown tmp[418978] "maybe param" "temp"
    (418989 'move' tmp[418978](62978 call isHomogeneousTuple y[62972]))
    unknown call_tmp[615410] "expr temp" "maybe param" "maybe type" "temp"
    (615413 'move' call_tmp[615410](418991 call _cond_invalid tmp[418978]))
    if call_tmp[615410]
    {
      (418994 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555130] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555131] "maybe param" "temp"
    unknown call_tmp[615415] "expr temp" "maybe param" "maybe type" "temp"
    (615418 'move' call_tmp[615415](418979 call isTrue tmp[418978]))
    (555136 'move' tmp[555131](555134 call _cond_test call_tmp[615415]))
    if tmp[555131]
    {
      { scopeless type
        unknown call_type_tmp[491656] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615420] "expr temp" "maybe param" "maybe type" "temp"
        (615423 'move' call_tmp[615420](62985 call y[62972] 0))
        (491660 'move' call_type_tmp[491656](62986 'typeof' call_tmp[615420]))
      }
      unknown tmp[555138] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615425] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615428 'move' call_tmp[615425](454697 'typeof' x[62966]))
      unknown call_tmp[615430] "expr temp" "maybe param" "maybe type" "temp"
      (615433 'move' call_tmp[615430](354129 'is_subtype' call_type_tmp[491656] call_tmp[615425]))
      (555140 'move' tmp[555138](418982 call isTrue call_tmp[615430]))
      (555145 'move' tmp[555130](555142 '_paramFoldLogical' tmp[555131] tmp[555138]))
    }
    {
      (555150 'move' tmp[555130](555147 '_paramFoldLogical' tmp[555131] 0))
    }
    (748123 call chpl_statementLevelSymbol tmp[555130])
  }
  function &[63082](arg x[63079]:_tuple[56199](?), arg y[63089] :
  unknown call_tmp[615435] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508775] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491662] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615440] "expr temp" "maybe param" "maybe type" "temp"
      (615443 'move' call_tmp[615440](63103 call x[63079] 0))
      (491666 'move' call_type_tmp[491662](63104 'typeof' call_tmp[615440]))
    }
    unknown result[63107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615447] "expr temp" "maybe param" "maybe type" "temp"
    (615450 'move' call_tmp[615447](63097 call size _mt[243] x[63079]))
    unknown call_tmp[615452] "expr temp" "maybe param" "maybe type" "temp"
    (615455 'move' call_tmp[615452](63105 call * call_tmp[615447] call_type_tmp[491662]))
    (540854 'default init var' result[63107] call_tmp[615452])
    (63110 'end of statement')
    {
      unknown d[63136] "dead at end of block" "insert auto destroy"
      (540856 'init var' d[63136] 0)
      (475065 'end of statement')
      unknown tmp[63137] "maybe param" "temp"
      unknown call_tmp[615459] "expr temp" "maybe param" "maybe type" "temp"
      (615462 'move' call_tmp[615459](63114 call size _mt[243] x[63079]))
      unknown call_tmp[615464] "expr temp" "maybe param" "maybe type" "temp"
      (615467 'move' call_tmp[615464](63118 call - call_tmp[615459] 1))
      (63149 'move' tmp[63137](63147 call chpl_compute_low_param_loop_bound 0 call_tmp[615464]))
      unknown tmp[63138] "maybe param" "temp"
      unknown call_tmp[615471] "expr temp" "maybe param" "maybe type" "temp"
      (615474 'move' call_tmp[615471](63156 call size _mt[243] x[63079]))
      unknown call_tmp[615476] "expr temp" "maybe param" "maybe type" "temp"
      (615479 'move' call_tmp[615476](63154 call - call_tmp[615471] 1))
      (63162 'move' tmp[63138](63160 call chpl_compute_high_param_loop_bound 0 call_tmp[615476]))
      unknown tmp[63139] "maybe param" "temp"
      (63165 'move' tmp[63139] 1)
      ParamForLoop[63167]
      { d[63136] tmp[63137] tmp[63138] tmp[63139]
        unknown call_tmp[615481] "expr temp" "maybe param" "maybe type" "temp"
        (615484 'move' call_tmp[615481](63125 call result[63107] d[63136]))
        unknown call_tmp[615486] "expr temp" "maybe param" "maybe type" "temp"
        (615489 'move' call_tmp[615486](63129 call x[63079] d[63136]))
        unknown call_tmp[615491] "expr temp" "maybe param" "maybe type" "temp"
        (615494 'move' call_tmp[615491](63131 call & call_tmp[615486] y[63089]))
        (63133 call = call_tmp[615481] call_tmp[615491])
        (475066 'end of statement' result[63107] d[63136] d[63136])
      }
      label _unused_continueLabel[63141]
      label _breakLabel[63140]
    }
    (508780 'move' ret[508775](508779 'deref' result[63107]))
    gotoReturn _end_&[508773] _end_&[508773]
    (475070 'end of statement' result[63107])
    label _end_&[508773]
    (508777 return ret[508775])
  }
  where {
    (63095 call isHomogeneousTuple x[63079])
  }
  function &[63189](arg x[63186]:_any[178](?), arg y[63192]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508786] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491668] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615496] "expr temp" "maybe param" "maybe type" "temp"
      (615499 'move' call_tmp[615496](63217 call y[63192] 0))
      (491672 'move' call_type_tmp[491668](63218 'typeof' call_tmp[615496]))
    }
    unknown result[63221] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615503] "expr temp" "maybe param" "maybe type" "temp"
    (615506 'move' call_tmp[615503](63211 call size _mt[243] y[63192]))
    unknown call_tmp[615508] "expr temp" "maybe param" "maybe type" "temp"
    (615511 'move' call_tmp[615508](63219 call * call_tmp[615503] call_type_tmp[491668]))
    (540858 'default init var' result[63221] call_tmp[615508])
    (63224 'end of statement')
    {
      unknown d[63250] "dead at end of block" "insert auto destroy"
      (540860 'init var' d[63250] 0)
      (475072 'end of statement')
      unknown tmp[63251] "maybe param" "temp"
      unknown call_tmp[615515] "expr temp" "maybe param" "maybe type" "temp"
      (615518 'move' call_tmp[615515](63228 call size _mt[243] y[63192]))
      unknown call_tmp[615520] "expr temp" "maybe param" "maybe type" "temp"
      (615523 'move' call_tmp[615520](63232 call - call_tmp[615515] 1))
      (63263 'move' tmp[63251](63261 call chpl_compute_low_param_loop_bound 0 call_tmp[615520]))
      unknown tmp[63252] "maybe param" "temp"
      unknown call_tmp[615527] "expr temp" "maybe param" "maybe type" "temp"
      (615530 'move' call_tmp[615527](63270 call size _mt[243] y[63192]))
      unknown call_tmp[615532] "expr temp" "maybe param" "maybe type" "temp"
      (615535 'move' call_tmp[615532](63268 call - call_tmp[615527] 1))
      (63276 'move' tmp[63252](63274 call chpl_compute_high_param_loop_bound 0 call_tmp[615532]))
      unknown tmp[63253] "maybe param" "temp"
      (63279 'move' tmp[63253] 1)
      ParamForLoop[63281]
      { d[63250] tmp[63251] tmp[63252] tmp[63253]
        unknown call_tmp[615537] "expr temp" "maybe param" "maybe type" "temp"
        (615540 'move' call_tmp[615537](63239 call result[63221] d[63250]))
        unknown call_tmp[615542] "expr temp" "maybe param" "maybe type" "temp"
        (615545 'move' call_tmp[615542](63244 call y[63192] d[63250]))
        unknown call_tmp[615547] "expr temp" "maybe param" "maybe type" "temp"
        (615550 'move' call_tmp[615547](63245 call & x[63186] call_tmp[615542]))
        (63247 call = call_tmp[615537] call_tmp[615547])
        (475073 'end of statement' result[63221] d[63250] d[63250])
      }
      label _unused_continueLabel[63255]
      label _breakLabel[63254]
    }
    (508791 'move' ret[508786](508790 'deref' result[63221]))
    gotoReturn _end_&[508784] _end_&[508784]
    (475077 'end of statement' result[63221])
    label _end_&[508784]
    (508788 return ret[508786])
  }
  where {
    unknown tmp[418999] "maybe param" "temp"
    (419010 'move' tmp[418999](63198 call isHomogeneousTuple y[63192]))
    unknown call_tmp[615552] "expr temp" "maybe param" "maybe type" "temp"
    (615555 'move' call_tmp[615552](419012 call _cond_invalid tmp[418999]))
    if call_tmp[615552]
    {
      (419015 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555157] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555158] "maybe param" "temp"
    unknown call_tmp[615557] "expr temp" "maybe param" "maybe type" "temp"
    (615560 'move' call_tmp[615557](419000 call isTrue tmp[418999]))
    (555163 'move' tmp[555158](555161 call _cond_test call_tmp[615557]))
    if tmp[555158]
    {
      { scopeless type
        unknown call_type_tmp[491674] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615562] "expr temp" "maybe param" "maybe type" "temp"
        (615565 'move' call_tmp[615562](63205 call y[63192] 0))
        (491678 'move' call_type_tmp[491674](63206 'typeof' call_tmp[615562]))
      }
      unknown tmp[555165] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615567] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615570 'move' call_tmp[615567](454699 'typeof' x[63186]))
      unknown call_tmp[615572] "expr temp" "maybe param" "maybe type" "temp"
      (615575 'move' call_tmp[615572](354130 'is_subtype' call_type_tmp[491674] call_tmp[615567]))
      (555167 'move' tmp[555165](419003 call isTrue call_tmp[615572]))
      (555172 'move' tmp[555157](555169 '_paramFoldLogical' tmp[555158] tmp[555165]))
    }
    {
      (555177 'move' tmp[555157](555174 '_paramFoldLogical' tmp[555158] 0))
    }
    (748125 call chpl_statementLevelSymbol tmp[555157])
  }
  function |[63302](arg x[63299]:_tuple[56199](?), arg y[63309] :
  unknown call_tmp[615577] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508797] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491680] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615582] "expr temp" "maybe param" "maybe type" "temp"
      (615585 'move' call_tmp[615582](63323 call x[63299] 0))
      (491684 'move' call_type_tmp[491680](63324 'typeof' call_tmp[615582]))
    }
    unknown result[63327] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615589] "expr temp" "maybe param" "maybe type" "temp"
    (615592 'move' call_tmp[615589](63317 call size _mt[243] x[63299]))
    unknown call_tmp[615594] "expr temp" "maybe param" "maybe type" "temp"
    (615597 'move' call_tmp[615594](63325 call * call_tmp[615589] call_type_tmp[491680]))
    (540862 'default init var' result[63327] call_tmp[615594])
    (63330 'end of statement')
    {
      unknown d[63356] "dead at end of block" "insert auto destroy"
      (540864 'init var' d[63356] 0)
      (475079 'end of statement')
      unknown tmp[63357] "maybe param" "temp"
      unknown call_tmp[615601] "expr temp" "maybe param" "maybe type" "temp"
      (615604 'move' call_tmp[615601](63334 call size _mt[243] x[63299]))
      unknown call_tmp[615606] "expr temp" "maybe param" "maybe type" "temp"
      (615609 'move' call_tmp[615606](63338 call - call_tmp[615601] 1))
      (63369 'move' tmp[63357](63367 call chpl_compute_low_param_loop_bound 0 call_tmp[615606]))
      unknown tmp[63358] "maybe param" "temp"
      unknown call_tmp[615613] "expr temp" "maybe param" "maybe type" "temp"
      (615616 'move' call_tmp[615613](63376 call size _mt[243] x[63299]))
      unknown call_tmp[615618] "expr temp" "maybe param" "maybe type" "temp"
      (615621 'move' call_tmp[615618](63374 call - call_tmp[615613] 1))
      (63382 'move' tmp[63358](63380 call chpl_compute_high_param_loop_bound 0 call_tmp[615618]))
      unknown tmp[63359] "maybe param" "temp"
      (63385 'move' tmp[63359] 1)
      ParamForLoop[63387]
      { d[63356] tmp[63357] tmp[63358] tmp[63359]
        unknown call_tmp[615623] "expr temp" "maybe param" "maybe type" "temp"
        (615626 'move' call_tmp[615623](63345 call result[63327] d[63356]))
        unknown call_tmp[615628] "expr temp" "maybe param" "maybe type" "temp"
        (615631 'move' call_tmp[615628](63349 call x[63299] d[63356]))
        unknown call_tmp[615633] "expr temp" "maybe param" "maybe type" "temp"
        (615636 'move' call_tmp[615633](63351 call | call_tmp[615628] y[63309]))
        (63353 call = call_tmp[615623] call_tmp[615633])
        (475080 'end of statement' result[63327] d[63356] d[63356])
      }
      label _unused_continueLabel[63361]
      label _breakLabel[63360]
    }
    (508802 'move' ret[508797](508801 'deref' result[63327]))
    gotoReturn _end_|[508795] _end_|[508795]
    (475084 'end of statement' result[63327])
    label _end_|[508795]
    (508799 return ret[508797])
  }
  where {
    (63315 call isHomogeneousTuple x[63299])
  }
  function |[63409](arg x[63406]:_any[178](?), arg y[63412]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508808] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491686] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615638] "expr temp" "maybe param" "maybe type" "temp"
      (615641 'move' call_tmp[615638](63437 call y[63412] 0))
      (491690 'move' call_type_tmp[491686](63438 'typeof' call_tmp[615638]))
    }
    unknown result[63441] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615645] "expr temp" "maybe param" "maybe type" "temp"
    (615648 'move' call_tmp[615645](63431 call size _mt[243] y[63412]))
    unknown call_tmp[615650] "expr temp" "maybe param" "maybe type" "temp"
    (615653 'move' call_tmp[615650](63439 call * call_tmp[615645] call_type_tmp[491686]))
    (540866 'default init var' result[63441] call_tmp[615650])
    (63444 'end of statement')
    {
      unknown d[63470] "dead at end of block" "insert auto destroy"
      (540868 'init var' d[63470] 0)
      (475086 'end of statement')
      unknown tmp[63471] "maybe param" "temp"
      unknown call_tmp[615657] "expr temp" "maybe param" "maybe type" "temp"
      (615660 'move' call_tmp[615657](63448 call size _mt[243] y[63412]))
      unknown call_tmp[615662] "expr temp" "maybe param" "maybe type" "temp"
      (615665 'move' call_tmp[615662](63452 call - call_tmp[615657] 1))
      (63483 'move' tmp[63471](63481 call chpl_compute_low_param_loop_bound 0 call_tmp[615662]))
      unknown tmp[63472] "maybe param" "temp"
      unknown call_tmp[615669] "expr temp" "maybe param" "maybe type" "temp"
      (615672 'move' call_tmp[615669](63490 call size _mt[243] y[63412]))
      unknown call_tmp[615674] "expr temp" "maybe param" "maybe type" "temp"
      (615677 'move' call_tmp[615674](63488 call - call_tmp[615669] 1))
      (63496 'move' tmp[63472](63494 call chpl_compute_high_param_loop_bound 0 call_tmp[615674]))
      unknown tmp[63473] "maybe param" "temp"
      (63499 'move' tmp[63473] 1)
      ParamForLoop[63501]
      { d[63470] tmp[63471] tmp[63472] tmp[63473]
        unknown call_tmp[615679] "expr temp" "maybe param" "maybe type" "temp"
        (615682 'move' call_tmp[615679](63459 call result[63441] d[63470]))
        unknown call_tmp[615684] "expr temp" "maybe param" "maybe type" "temp"
        (615687 'move' call_tmp[615684](63464 call y[63412] d[63470]))
        unknown call_tmp[615689] "expr temp" "maybe param" "maybe type" "temp"
        (615692 'move' call_tmp[615689](63465 call | x[63406] call_tmp[615684]))
        (63467 call = call_tmp[615679] call_tmp[615689])
        (475087 'end of statement' result[63441] d[63470] d[63470])
      }
      label _unused_continueLabel[63475]
      label _breakLabel[63474]
    }
    (508813 'move' ret[508808](508812 'deref' result[63441]))
    gotoReturn _end_|[508806] _end_|[508806]
    (475091 'end of statement' result[63441])
    label _end_|[508806]
    (508810 return ret[508808])
  }
  where {
    unknown tmp[419020] "maybe param" "temp"
    (419031 'move' tmp[419020](63418 call isHomogeneousTuple y[63412]))
    unknown call_tmp[615694] "expr temp" "maybe param" "maybe type" "temp"
    (615697 'move' call_tmp[615694](419033 call _cond_invalid tmp[419020]))
    if call_tmp[615694]
    {
      (419036 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555184] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555185] "maybe param" "temp"
    unknown call_tmp[615699] "expr temp" "maybe param" "maybe type" "temp"
    (615702 'move' call_tmp[615699](419021 call isTrue tmp[419020]))
    (555190 'move' tmp[555185](555188 call _cond_test call_tmp[615699]))
    if tmp[555185]
    {
      { scopeless type
        unknown call_type_tmp[491692] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615704] "expr temp" "maybe param" "maybe type" "temp"
        (615707 'move' call_tmp[615704](63425 call y[63412] 0))
        (491696 'move' call_type_tmp[491692](63426 'typeof' call_tmp[615704]))
      }
      unknown tmp[555192] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615712 'move' call_tmp[615709](454701 'typeof' x[63406]))
      unknown call_tmp[615714] "expr temp" "maybe param" "maybe type" "temp"
      (615717 'move' call_tmp[615714](354131 'is_subtype' call_type_tmp[491692] call_tmp[615709]))
      (555194 'move' tmp[555192](419024 call isTrue call_tmp[615714]))
      (555199 'move' tmp[555184](555196 '_paramFoldLogical' tmp[555185] tmp[555192]))
    }
    {
      (555204 'move' tmp[555184](555201 '_paramFoldLogical' tmp[555185] 0))
    }
    (748127 call chpl_statementLevelSymbol tmp[555184])
  }
  function ^[63522](arg x[63519]:_tuple[56199](?), arg y[63529] :
  unknown call_tmp[615719] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508819] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491698] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615724] "expr temp" "maybe param" "maybe type" "temp"
      (615727 'move' call_tmp[615724](63543 call x[63519] 0))
      (491702 'move' call_type_tmp[491698](63544 'typeof' call_tmp[615724]))
    }
    unknown result[63547] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615731] "expr temp" "maybe param" "maybe type" "temp"
    (615734 'move' call_tmp[615731](63537 call size _mt[243] x[63519]))
    unknown call_tmp[615736] "expr temp" "maybe param" "maybe type" "temp"
    (615739 'move' call_tmp[615736](63545 call * call_tmp[615731] call_type_tmp[491698]))
    (540870 'default init var' result[63547] call_tmp[615736])
    (63550 'end of statement')
    {
      unknown d[63576] "dead at end of block" "insert auto destroy"
      (540872 'init var' d[63576] 0)
      (475093 'end of statement')
      unknown tmp[63577] "maybe param" "temp"
      unknown call_tmp[615743] "expr temp" "maybe param" "maybe type" "temp"
      (615746 'move' call_tmp[615743](63554 call size _mt[243] x[63519]))
      unknown call_tmp[615748] "expr temp" "maybe param" "maybe type" "temp"
      (615751 'move' call_tmp[615748](63558 call - call_tmp[615743] 1))
      (63589 'move' tmp[63577](63587 call chpl_compute_low_param_loop_bound 0 call_tmp[615748]))
      unknown tmp[63578] "maybe param" "temp"
      unknown call_tmp[615755] "expr temp" "maybe param" "maybe type" "temp"
      (615758 'move' call_tmp[615755](63596 call size _mt[243] x[63519]))
      unknown call_tmp[615760] "expr temp" "maybe param" "maybe type" "temp"
      (615763 'move' call_tmp[615760](63594 call - call_tmp[615755] 1))
      (63602 'move' tmp[63578](63600 call chpl_compute_high_param_loop_bound 0 call_tmp[615760]))
      unknown tmp[63579] "maybe param" "temp"
      (63605 'move' tmp[63579] 1)
      ParamForLoop[63607]
      { d[63576] tmp[63577] tmp[63578] tmp[63579]
        unknown call_tmp[615765] "expr temp" "maybe param" "maybe type" "temp"
        (615768 'move' call_tmp[615765](63565 call result[63547] d[63576]))
        unknown call_tmp[615770] "expr temp" "maybe param" "maybe type" "temp"
        (615773 'move' call_tmp[615770](63569 call x[63519] d[63576]))
        unknown call_tmp[615775] "expr temp" "maybe param" "maybe type" "temp"
        (615778 'move' call_tmp[615775](63571 call ^ call_tmp[615770] y[63529]))
        (63573 call = call_tmp[615765] call_tmp[615775])
        (475094 'end of statement' result[63547] d[63576] d[63576])
      }
      label _unused_continueLabel[63581]
      label _breakLabel[63580]
    }
    (508824 'move' ret[508819](508823 'deref' result[63547]))
    gotoReturn _end_^[508817] _end_^[508817]
    (475098 'end of statement' result[63547])
    label _end_^[508817]
    (508821 return ret[508819])
  }
  where {
    (63535 call isHomogeneousTuple x[63519])
  }
  function ^[63629](arg x[63626]:_any[178](?), arg y[63632]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508830] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491704] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615780] "expr temp" "maybe param" "maybe type" "temp"
      (615783 'move' call_tmp[615780](63657 call y[63632] 0))
      (491708 'move' call_type_tmp[491704](63658 'typeof' call_tmp[615780]))
    }
    unknown result[63661] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615787] "expr temp" "maybe param" "maybe type" "temp"
    (615790 'move' call_tmp[615787](63651 call size _mt[243] y[63632]))
    unknown call_tmp[615792] "expr temp" "maybe param" "maybe type" "temp"
    (615795 'move' call_tmp[615792](63659 call * call_tmp[615787] call_type_tmp[491704]))
    (540874 'default init var' result[63661] call_tmp[615792])
    (63664 'end of statement')
    {
      unknown d[63690] "dead at end of block" "insert auto destroy"
      (540876 'init var' d[63690] 0)
      (475100 'end of statement')
      unknown tmp[63691] "maybe param" "temp"
      unknown call_tmp[615799] "expr temp" "maybe param" "maybe type" "temp"
      (615802 'move' call_tmp[615799](63668 call size _mt[243] y[63632]))
      unknown call_tmp[615804] "expr temp" "maybe param" "maybe type" "temp"
      (615807 'move' call_tmp[615804](63672 call - call_tmp[615799] 1))
      (63703 'move' tmp[63691](63701 call chpl_compute_low_param_loop_bound 0 call_tmp[615804]))
      unknown tmp[63692] "maybe param" "temp"
      unknown call_tmp[615811] "expr temp" "maybe param" "maybe type" "temp"
      (615814 'move' call_tmp[615811](63710 call size _mt[243] y[63632]))
      unknown call_tmp[615816] "expr temp" "maybe param" "maybe type" "temp"
      (615819 'move' call_tmp[615816](63708 call - call_tmp[615811] 1))
      (63716 'move' tmp[63692](63714 call chpl_compute_high_param_loop_bound 0 call_tmp[615816]))
      unknown tmp[63693] "maybe param" "temp"
      (63719 'move' tmp[63693] 1)
      ParamForLoop[63721]
      { d[63690] tmp[63691] tmp[63692] tmp[63693]
        unknown call_tmp[615821] "expr temp" "maybe param" "maybe type" "temp"
        (615824 'move' call_tmp[615821](63679 call result[63661] d[63690]))
        unknown call_tmp[615826] "expr temp" "maybe param" "maybe type" "temp"
        (615829 'move' call_tmp[615826](63684 call y[63632] d[63690]))
        unknown call_tmp[615831] "expr temp" "maybe param" "maybe type" "temp"
        (615834 'move' call_tmp[615831](63685 call ^ x[63626] call_tmp[615826]))
        (63687 call = call_tmp[615821] call_tmp[615831])
        (475101 'end of statement' result[63661] d[63690] d[63690])
      }
      label _unused_continueLabel[63695]
      label _breakLabel[63694]
    }
    (508835 'move' ret[508830](508834 'deref' result[63661]))
    gotoReturn _end_^[508828] _end_^[508828]
    (475105 'end of statement' result[63661])
    label _end_^[508828]
    (508832 return ret[508830])
  }
  where {
    unknown tmp[419041] "maybe param" "temp"
    (419052 'move' tmp[419041](63638 call isHomogeneousTuple y[63632]))
    unknown call_tmp[615836] "expr temp" "maybe param" "maybe type" "temp"
    (615839 'move' call_tmp[615836](419054 call _cond_invalid tmp[419041]))
    if call_tmp[615836]
    {
      (419057 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555211] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555212] "maybe param" "temp"
    unknown call_tmp[615841] "expr temp" "maybe param" "maybe type" "temp"
    (615844 'move' call_tmp[615841](419042 call isTrue tmp[419041]))
    (555217 'move' tmp[555212](555215 call _cond_test call_tmp[615841]))
    if tmp[555212]
    {
      { scopeless type
        unknown call_type_tmp[491710] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615846] "expr temp" "maybe param" "maybe type" "temp"
        (615849 'move' call_tmp[615846](63645 call y[63632] 0))
        (491714 'move' call_type_tmp[491710](63646 'typeof' call_tmp[615846]))
      }
      unknown tmp[555219] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615851] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615854 'move' call_tmp[615851](454703 'typeof' x[63626]))
      unknown call_tmp[615856] "expr temp" "maybe param" "maybe type" "temp"
      (615859 'move' call_tmp[615856](354132 'is_subtype' call_type_tmp[491710] call_tmp[615851]))
      (555221 'move' tmp[555219](419045 call isTrue call_tmp[615856]))
      (555226 'move' tmp[555211](555223 '_paramFoldLogical' tmp[555212] tmp[555219]))
    }
    {
      (555231 'move' tmp[555211](555228 '_paramFoldLogical' tmp[555212] 0))
    }
    (748129 call chpl_statementLevelSymbol tmp[555211])
  }
  function <<[63742](arg x[63739]:_tuple[56199](?), arg y[63749] :
  unknown call_tmp[615861] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508841] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491716] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615866] "expr temp" "maybe param" "maybe type" "temp"
      (615869 'move' call_tmp[615866](63763 call x[63739] 0))
      (491720 'move' call_type_tmp[491716](63764 'typeof' call_tmp[615866]))
    }
    unknown result[63767] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615873] "expr temp" "maybe param" "maybe type" "temp"
    (615876 'move' call_tmp[615873](63757 call size _mt[243] x[63739]))
    unknown call_tmp[615878] "expr temp" "maybe param" "maybe type" "temp"
    (615881 'move' call_tmp[615878](63765 call * call_tmp[615873] call_type_tmp[491716]))
    (540878 'default init var' result[63767] call_tmp[615878])
    (63770 'end of statement')
    {
      unknown d[63796] "dead at end of block" "insert auto destroy"
      (540880 'init var' d[63796] 0)
      (475107 'end of statement')
      unknown tmp[63797] "maybe param" "temp"
      unknown call_tmp[615885] "expr temp" "maybe param" "maybe type" "temp"
      (615888 'move' call_tmp[615885](63774 call size _mt[243] x[63739]))
      unknown call_tmp[615890] "expr temp" "maybe param" "maybe type" "temp"
      (615893 'move' call_tmp[615890](63778 call - call_tmp[615885] 1))
      (63809 'move' tmp[63797](63807 call chpl_compute_low_param_loop_bound 0 call_tmp[615890]))
      unknown tmp[63798] "maybe param" "temp"
      unknown call_tmp[615897] "expr temp" "maybe param" "maybe type" "temp"
      (615900 'move' call_tmp[615897](63816 call size _mt[243] x[63739]))
      unknown call_tmp[615902] "expr temp" "maybe param" "maybe type" "temp"
      (615905 'move' call_tmp[615902](63814 call - call_tmp[615897] 1))
      (63822 'move' tmp[63798](63820 call chpl_compute_high_param_loop_bound 0 call_tmp[615902]))
      unknown tmp[63799] "maybe param" "temp"
      (63825 'move' tmp[63799] 1)
      ParamForLoop[63827]
      { d[63796] tmp[63797] tmp[63798] tmp[63799]
        unknown call_tmp[615907] "expr temp" "maybe param" "maybe type" "temp"
        (615910 'move' call_tmp[615907](63785 call result[63767] d[63796]))
        unknown call_tmp[615912] "expr temp" "maybe param" "maybe type" "temp"
        (615915 'move' call_tmp[615912](63789 call x[63739] d[63796]))
        unknown call_tmp[615917] "expr temp" "maybe param" "maybe type" "temp"
        (615920 'move' call_tmp[615917](63791 call << call_tmp[615912] y[63749]))
        (63793 call = call_tmp[615907] call_tmp[615917])
        (475108 'end of statement' result[63767] d[63796] d[63796])
      }
      label _unused_continueLabel[63801]
      label _breakLabel[63800]
    }
    (508846 'move' ret[508841](508845 'deref' result[63767]))
    gotoReturn _end_<<[508839] _end_<<[508839]
    (475112 'end of statement' result[63767])
    label _end_<<[508839]
    (508843 return ret[508841])
  }
  where {
    (63755 call isHomogeneousTuple x[63739])
  }
  function <<[63849](arg x[63846]:_any[178](?), arg y[63852]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508852] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491722] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615922] "expr temp" "maybe param" "maybe type" "temp"
      (615925 'move' call_tmp[615922](63877 call y[63852] 0))
      (491726 'move' call_type_tmp[491722](63878 'typeof' call_tmp[615922]))
    }
    unknown result[63881] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615929] "expr temp" "maybe param" "maybe type" "temp"
    (615932 'move' call_tmp[615929](63871 call size _mt[243] y[63852]))
    unknown call_tmp[615934] "expr temp" "maybe param" "maybe type" "temp"
    (615937 'move' call_tmp[615934](63879 call * call_tmp[615929] call_type_tmp[491722]))
    (540882 'default init var' result[63881] call_tmp[615934])
    (63884 'end of statement')
    {
      unknown d[63910] "dead at end of block" "insert auto destroy"
      (540884 'init var' d[63910] 0)
      (475114 'end of statement')
      unknown tmp[63911] "maybe param" "temp"
      unknown call_tmp[615941] "expr temp" "maybe param" "maybe type" "temp"
      (615944 'move' call_tmp[615941](63888 call size _mt[243] y[63852]))
      unknown call_tmp[615946] "expr temp" "maybe param" "maybe type" "temp"
      (615949 'move' call_tmp[615946](63892 call - call_tmp[615941] 1))
      (63923 'move' tmp[63911](63921 call chpl_compute_low_param_loop_bound 0 call_tmp[615946]))
      unknown tmp[63912] "maybe param" "temp"
      unknown call_tmp[615953] "expr temp" "maybe param" "maybe type" "temp"
      (615956 'move' call_tmp[615953](63930 call size _mt[243] y[63852]))
      unknown call_tmp[615958] "expr temp" "maybe param" "maybe type" "temp"
      (615961 'move' call_tmp[615958](63928 call - call_tmp[615953] 1))
      (63936 'move' tmp[63912](63934 call chpl_compute_high_param_loop_bound 0 call_tmp[615958]))
      unknown tmp[63913] "maybe param" "temp"
      (63939 'move' tmp[63913] 1)
      ParamForLoop[63941]
      { d[63910] tmp[63911] tmp[63912] tmp[63913]
        unknown call_tmp[615963] "expr temp" "maybe param" "maybe type" "temp"
        (615966 'move' call_tmp[615963](63899 call result[63881] d[63910]))
        unknown call_tmp[615968] "expr temp" "maybe param" "maybe type" "temp"
        (615971 'move' call_tmp[615968](63904 call y[63852] d[63910]))
        unknown call_tmp[615973] "expr temp" "maybe param" "maybe type" "temp"
        (615976 'move' call_tmp[615973](63905 call << x[63846] call_tmp[615968]))
        (63907 call = call_tmp[615963] call_tmp[615973])
        (475115 'end of statement' result[63881] d[63910] d[63910])
      }
      label _unused_continueLabel[63915]
      label _breakLabel[63914]
    }
    (508857 'move' ret[508852](508856 'deref' result[63881]))
    gotoReturn _end_<<[508850] _end_<<[508850]
    (475119 'end of statement' result[63881])
    label _end_<<[508850]
    (508854 return ret[508852])
  }
  where {
    unknown tmp[419062] "maybe param" "temp"
    (419073 'move' tmp[419062](63858 call isHomogeneousTuple y[63852]))
    unknown call_tmp[615978] "expr temp" "maybe param" "maybe type" "temp"
    (615981 'move' call_tmp[615978](419075 call _cond_invalid tmp[419062]))
    if call_tmp[615978]
    {
      (419078 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555238] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555239] "maybe param" "temp"
    unknown call_tmp[615983] "expr temp" "maybe param" "maybe type" "temp"
    (615986 'move' call_tmp[615983](419063 call isTrue tmp[419062]))
    (555244 'move' tmp[555239](555242 call _cond_test call_tmp[615983]))
    if tmp[555239]
    {
      { scopeless type
        unknown call_type_tmp[491728] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615988] "expr temp" "maybe param" "maybe type" "temp"
        (615991 'move' call_tmp[615988](63865 call y[63852] 0))
        (491732 'move' call_type_tmp[491728](63866 'typeof' call_tmp[615988]))
      }
      unknown tmp[555246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615993] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615996 'move' call_tmp[615993](454705 'typeof' x[63846]))
      unknown call_tmp[615998] "expr temp" "maybe param" "maybe type" "temp"
      (616001 'move' call_tmp[615998](354133 'is_subtype' call_type_tmp[491728] call_tmp[615993]))
      (555248 'move' tmp[555246](419066 call isTrue call_tmp[615998]))
      (555253 'move' tmp[555238](555250 '_paramFoldLogical' tmp[555239] tmp[555246]))
    }
    {
      (555258 'move' tmp[555238](555255 '_paramFoldLogical' tmp[555239] 0))
    }
    (748131 call chpl_statementLevelSymbol tmp[555238])
  }
  function >>[63962](arg x[63959]:_tuple[56199](?), arg y[63969] :
  unknown call_tmp[616003] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508863] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491734] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616008] "expr temp" "maybe param" "maybe type" "temp"
      (616011 'move' call_tmp[616008](63983 call x[63959] 0))
      (491738 'move' call_type_tmp[491734](63984 'typeof' call_tmp[616008]))
    }
    unknown result[63987] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616015] "expr temp" "maybe param" "maybe type" "temp"
    (616018 'move' call_tmp[616015](63977 call size _mt[243] x[63959]))
    unknown call_tmp[616020] "expr temp" "maybe param" "maybe type" "temp"
    (616023 'move' call_tmp[616020](63985 call * call_tmp[616015] call_type_tmp[491734]))
    (540886 'default init var' result[63987] call_tmp[616020])
    (63990 'end of statement')
    {
      unknown d[64016] "dead at end of block" "insert auto destroy"
      (540888 'init var' d[64016] 0)
      (475121 'end of statement')
      unknown tmp[64017] "maybe param" "temp"
      unknown call_tmp[616027] "expr temp" "maybe param" "maybe type" "temp"
      (616030 'move' call_tmp[616027](63994 call size _mt[243] x[63959]))
      unknown call_tmp[616032] "expr temp" "maybe param" "maybe type" "temp"
      (616035 'move' call_tmp[616032](63998 call - call_tmp[616027] 1))
      (64029 'move' tmp[64017](64027 call chpl_compute_low_param_loop_bound 0 call_tmp[616032]))
      unknown tmp[64018] "maybe param" "temp"
      unknown call_tmp[616039] "expr temp" "maybe param" "maybe type" "temp"
      (616042 'move' call_tmp[616039](64036 call size _mt[243] x[63959]))
      unknown call_tmp[616044] "expr temp" "maybe param" "maybe type" "temp"
      (616047 'move' call_tmp[616044](64034 call - call_tmp[616039] 1))
      (64042 'move' tmp[64018](64040 call chpl_compute_high_param_loop_bound 0 call_tmp[616044]))
      unknown tmp[64019] "maybe param" "temp"
      (64045 'move' tmp[64019] 1)
      ParamForLoop[64047]
      { d[64016] tmp[64017] tmp[64018] tmp[64019]
        unknown call_tmp[616049] "expr temp" "maybe param" "maybe type" "temp"
        (616052 'move' call_tmp[616049](64005 call result[63987] d[64016]))
        unknown call_tmp[616054] "expr temp" "maybe param" "maybe type" "temp"
        (616057 'move' call_tmp[616054](64009 call x[63959] d[64016]))
        unknown call_tmp[616059] "expr temp" "maybe param" "maybe type" "temp"
        (616062 'move' call_tmp[616059](64011 call >> call_tmp[616054] y[63969]))
        (64013 call = call_tmp[616049] call_tmp[616059])
        (475122 'end of statement' result[63987] d[64016] d[64016])
      }
      label _unused_continueLabel[64021]
      label _breakLabel[64020]
    }
    (508868 'move' ret[508863](508867 'deref' result[63987]))
    gotoReturn _end_>>[508861] _end_>>[508861]
    (475126 'end of statement' result[63987])
    label _end_>>[508861]
    (508865 return ret[508863])
  }
  where {
    (63975 call isHomogeneousTuple x[63959])
  }
  function >>[64069](arg x[64066]:_any[178](?), arg y[64072]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508874] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491740] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616064] "expr temp" "maybe param" "maybe type" "temp"
      (616067 'move' call_tmp[616064](64097 call y[64072] 0))
      (491744 'move' call_type_tmp[491740](64098 'typeof' call_tmp[616064]))
    }
    unknown result[64101] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616071] "expr temp" "maybe param" "maybe type" "temp"
    (616074 'move' call_tmp[616071](64091 call size _mt[243] y[64072]))
    unknown call_tmp[616076] "expr temp" "maybe param" "maybe type" "temp"
    (616079 'move' call_tmp[616076](64099 call * call_tmp[616071] call_type_tmp[491740]))
    (540890 'default init var' result[64101] call_tmp[616076])
    (64104 'end of statement')
    {
      unknown d[64130] "dead at end of block" "insert auto destroy"
      (540892 'init var' d[64130] 0)
      (475128 'end of statement')
      unknown tmp[64131] "maybe param" "temp"
      unknown call_tmp[616083] "expr temp" "maybe param" "maybe type" "temp"
      (616086 'move' call_tmp[616083](64108 call size _mt[243] y[64072]))
      unknown call_tmp[616088] "expr temp" "maybe param" "maybe type" "temp"
      (616091 'move' call_tmp[616088](64112 call - call_tmp[616083] 1))
      (64143 'move' tmp[64131](64141 call chpl_compute_low_param_loop_bound 0 call_tmp[616088]))
      unknown tmp[64132] "maybe param" "temp"
      unknown call_tmp[616095] "expr temp" "maybe param" "maybe type" "temp"
      (616098 'move' call_tmp[616095](64150 call size _mt[243] y[64072]))
      unknown call_tmp[616100] "expr temp" "maybe param" "maybe type" "temp"
      (616103 'move' call_tmp[616100](64148 call - call_tmp[616095] 1))
      (64156 'move' tmp[64132](64154 call chpl_compute_high_param_loop_bound 0 call_tmp[616100]))
      unknown tmp[64133] "maybe param" "temp"
      (64159 'move' tmp[64133] 1)
      ParamForLoop[64161]
      { d[64130] tmp[64131] tmp[64132] tmp[64133]
        unknown call_tmp[616105] "expr temp" "maybe param" "maybe type" "temp"
        (616108 'move' call_tmp[616105](64119 call result[64101] d[64130]))
        unknown call_tmp[616110] "expr temp" "maybe param" "maybe type" "temp"
        (616113 'move' call_tmp[616110](64124 call y[64072] d[64130]))
        unknown call_tmp[616115] "expr temp" "maybe param" "maybe type" "temp"
        (616118 'move' call_tmp[616115](64125 call >> x[64066] call_tmp[616110]))
        (64127 call = call_tmp[616105] call_tmp[616115])
        (475129 'end of statement' result[64101] d[64130] d[64130])
      }
      label _unused_continueLabel[64135]
      label _breakLabel[64134]
    }
    (508879 'move' ret[508874](508878 'deref' result[64101]))
    gotoReturn _end_>>[508872] _end_>>[508872]
    (475133 'end of statement' result[64101])
    label _end_>>[508872]
    (508876 return ret[508874])
  }
  where {
    unknown tmp[419083] "maybe param" "temp"
    (419094 'move' tmp[419083](64078 call isHomogeneousTuple y[64072]))
    unknown call_tmp[616120] "expr temp" "maybe param" "maybe type" "temp"
    (616123 'move' call_tmp[616120](419096 call _cond_invalid tmp[419083]))
    if call_tmp[616120]
    {
      (419099 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555265] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555266] "maybe param" "temp"
    unknown call_tmp[616125] "expr temp" "maybe param" "maybe type" "temp"
    (616128 'move' call_tmp[616125](419084 call isTrue tmp[419083]))
    (555271 'move' tmp[555266](555269 call _cond_test call_tmp[616125]))
    if tmp[555266]
    {
      { scopeless type
        unknown call_type_tmp[491746] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616130] "expr temp" "maybe param" "maybe type" "temp"
        (616133 'move' call_tmp[616130](64085 call y[64072] 0))
        (491750 'move' call_type_tmp[491746](64086 'typeof' call_tmp[616130]))
      }
      unknown tmp[555273] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616135] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616138 'move' call_tmp[616135](454707 'typeof' x[64066]))
      unknown call_tmp[616140] "expr temp" "maybe param" "maybe type" "temp"
      (616143 'move' call_tmp[616140](354134 'is_subtype' call_type_tmp[491746] call_tmp[616135]))
      (555275 'move' tmp[555273](419087 call isTrue call_tmp[616140]))
      (555280 'move' tmp[555265](555277 '_paramFoldLogical' tmp[555266] tmp[555273]))
    }
    {
      (555285 'move' tmp[555265](555282 '_paramFoldLogical' tmp[555266] 0))
    }
    (748133 call chpl_statementLevelSymbol tmp[555265])
  }
  (354958 'used modules list'(56188 'use' ChapelStandard[20264])(56190 'use' DSIUtil[230800]))
}