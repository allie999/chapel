AST dump for ChapelTuple after pass createTaskFunctions.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[416006]() : void[4] "insert line file info" "module init"
  {
    (540851 'init var' CHPL_WARN_TUPLE_ITERATION[57023] "unset")
    (57026 'end of statement')
    (509038 return _void[55])
  }
  function _tuple[56199](?).size[766556](arg _mt[766558]:_MT[238], arg this[766560]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[766579] "RVV" "param" "temp"
    unknown call_tmp[766593] "expr temp" "maybe param" "maybe type" "temp"
    (766596 'move' call_tmp[766593](766565 'is bound' this[766560] c"size"))
    if call_tmp[766593]
    {
      unknown call_tmp[766598] "expr temp" "maybe param" "maybe type" "temp"
      (766601 'move' call_tmp[766598](766564 '.' this[766560] c"size"))
      (766584 'move' ret[766579](766583 'deref' call_tmp[766598]))
      gotoReturn _end_size[766577] _end_size[766577]
    }
    {
      (766589 'move' ret[766579](766588 'deref' ?[260]))
      gotoReturn _end_size[766577] _end_size[766577]
    }
    label _end_size[766577]
    (766581 return ret[766579])
  }
  function _tuple[56199](?).size[766603](arg _mt[766605]:_MT[238], arg this[766607]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[766626] "RVV" "param" "temp"
    unknown call_tmp[766640] "expr temp" "maybe param" "maybe type" "temp"
    (766643 'move' call_tmp[766640](766612 'is bound' this[766607] c"size"))
    if call_tmp[766640]
    {
      unknown call_tmp[766645] "expr temp" "maybe param" "maybe type" "temp"
      (766648 'move' call_tmp[766645](766611 '.' this[766607] c"size"))
      (766631 'move' ret[766626](766630 'deref' call_tmp[766645]))
      gotoReturn _end_size[766624] _end_size[766624]
    }
    {
      (766636 'move' ret[766626](766635 'deref' ?[260]))
      gotoReturn _end_size[766624] _end_size[766624]
    }
    label _end_size[766624]
    (766628 return ret[766626])
  }
  function _tuple[56199](?).deinit[766650](arg _mt[766652]:_MT[238], arg this[766654]:_tuple[56199](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (766662 return _void[55])
  }
  function _defaultOf[766664](arg t[766666]:_tuple[56199](?)) : _unknown[51] "compiler generated" "inline" "last resort"
  {
    (766669 return _void[55])
  }
  function _tuple[56199](?).writeThis[766671](arg _mt[766675]:_MT[238], arg this[766673]:_tuple[56199](?), arg f[766674]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766684 call(766680 call (partial) readWriteThis _mt[243] this[766673]) f[766674])
    (766687 return _void[55])
  }
  function _tuple[56199](?).readThis[766691](arg _mt[766695]:_MT[238], arg this[766693]:_tuple[56199](?), arg f[766694]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766703 call(766699 call (partial) readWriteThis _mt[243] this[766693]) f[766694])
    (766707 return _void[55])
  }
  function chpl__defaultHash[766711](arg r[766713]:_tuple[56199](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766726] "RVV" "temp"
    unknown call_tmp[766733] "expr temp" "maybe param" "maybe type" "temp"
    (766736 'move' call_tmp[766733](766715 call size _mt[243] r[766713]))
    unknown call_tmp[766738] "expr temp" "maybe param" "maybe type" "temp"
    (766741 'move' call_tmp[766738](766719 call chpl__defaultHash call_tmp[766733]))
    (766731 'move' ret[766726](766730 'deref' call_tmp[766738]))
    (766728 return ret[766726])
  }
  type _tuple[56199](?) unknown size[56194] "param" int(64)[13]
  function chpl__init_tuple[56208](param arg size[56205]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (508038 return _void[55])
  }
  function _build_tuple[56219](arg t[56216]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508040 return _void[55])
  }
  function _build_tuple[56230](arg x[56227]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[508044] "RVV" "temp"
    (508049 'move' ret[508044](508048 'deref' x[56227]))
    (508046 return ret[508044])
  }
  function _build_tuple_noref[56244](arg t[56241]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508051 return _void[55])
  }
  function _build_tuple_always_allow_ref[56255](arg x[56252]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[508055] "RVV" "temp"
    (508060 'move' ret[508055](508059 'deref' x[56252]))
    (508057 return ret[508055])
  }
  function chpl__unref[56267](arg t[56265]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[508064] "RVV" "temp" "type variable"
    unknown call_tmp[611287] "expr temp" "maybe param" "maybe type" "temp"
    (611290 'move' call_tmp[611287](56272 call isTupleType t[56265]))
    unknown call_tmp[611292] "expr temp" "maybe param" "maybe type" "temp"
    (611295 'move' call_tmp[611292](56283 call _cond_test call_tmp[611287]))
    if call_tmp[611292]
    {
      unknown call_tmp[611297] "expr temp" "maybe param" "maybe type" "temp"
      (611300 'move' call_tmp[611297](56277 call _build_tuple_noref(56275 'expand_tuple' t[56265])))
      (508069 'move' ret[508064](508068 'deref' call_tmp[611297]))
      gotoReturn _end_chpl__unref[508062] _end_chpl__unref[508062]
    }
    {
      (508074 'move' ret[508064](508073 'deref' t[56265]))
      gotoReturn _end_chpl__unref[508062] _end_chpl__unref[508062]
    }
    label _end_chpl__unref[508062]
    (508066 return ret[508064])
  }
  function *[56298](param arg p[56295]:int(64)[13], arg t[56300]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508078 return _void[55])
  }
  function *[56311](param arg p[56308]:uint(64)[115], arg t[56313]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[508082] "RVV" "temp" "type variable"
    unknown call_tmp[611302] "expr temp" "maybe param" "maybe type" "temp"
    (611305 'move' call_tmp[611302](56319 call max int(64)[13]))
    unknown call_tmp[611307] "expr temp" "maybe param" "maybe type" "temp"
    (611310 'move' call_tmp[611307](56320 call > p[56308] call_tmp[611302]))
    unknown call_tmp[611312] "expr temp" "maybe param" "maybe type" "temp"
    (611315 'move' call_tmp[611312](56371 call _cond_test call_tmp[611307]))
    if call_tmp[611312]
    {
      unknown call_tmp[611317] "expr temp" "maybe param" "maybe type" "temp"
      (611320 'move' call_tmp[611317](56343 call max int(64)[13]))
      unknown call_tmp[611322] "expr temp" "maybe param" "maybe type" "temp"
      (611325 'move' call_tmp[611322](56345 call _cast string[26] call_tmp[611317]))
      unknown call_tmp[611327] "expr temp" "maybe param" "maybe type" "temp"
      (611330 'move' call_tmp[611327](56347 call + "Tuples of size >" call_tmp[611322]))
      unknown call_tmp[611332] "expr temp" "maybe param" "maybe type" "temp"
      (611335 'move' call_tmp[611332](56366 call + call_tmp[611327] " are not currently supported"))
      (56369 call compilerError call_tmp[611332])
    }
    unknown call_tmp[611337] "maybe param" "maybe type" "temp"
    (611340 'move' call_tmp[611337](56379 call _cast int(64)[13] p[56308]))
    unknown pAsInt[56381] "dead at end of block" "param"
    (540847 'init var' pAsInt[56381] call_tmp[611337])
    (56384 'end of statement')
    unknown call_tmp[611342] "expr temp" "maybe param" "maybe type" "temp"
    (611345 'move' call_tmp[611342](56387 call * pAsInt[56381] t[56313]))
    (508087 'move' ret[508082](508086 'deref' call_tmp[611342]))
    (508084 return ret[508082])
  }
  function *[56399](param arg p[56396]:bool[10], arg t[56401]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56422 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508089 return _void[55])
  }
  function *[56433](arg p[56430]:bool[10], arg t[56435]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56440 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508091 return _void[55])
  }
  function _build_star_tuple_noref[56451](param arg p[56448]:int(64)[13], arg t[56453]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508093 return _void[55])
  }
  function *[56462](arg t[56460]:_any[178](?), param arg p[56465]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56489 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (508095 return _void[55])
  }
  function *[56500](arg p[56497]:integral[199](?), arg t[56502]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56523 call compilerError "tuple size must be known at compile-time")
    (508097 return _void[55])
  }
  function chpl__tuplify[56532](arg x[56530]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[508101] "RVV" "temp"
    unknown call_tmp[611347] "expr temp" "maybe param" "maybe type" "temp"
    (611350 'move' call_tmp[611347](56537 call isTuple x[56530]))
    unknown call_tmp[611352] "expr temp" "maybe param" "maybe type" "temp"
    (611355 'move' call_tmp[611352](56546 call _cond_test call_tmp[611347]))
    if call_tmp[611352]
    {
      (508106 'move' ret[508101](508105 'deref' x[56530]))
      gotoReturn _end_chpl__tuplify[508099] _end_chpl__tuplify[508099]
    }
    {
      unknown call_tmp[611357] "expr temp" "maybe param" "maybe type" "temp"
      (611360 'move' call_tmp[611357](56542 call _build_tuple x[56530]))
      (508111 'move' ret[508101](508110 'deref' call_tmp[611357]))
      gotoReturn _end_chpl__tuplify[508099] _end_chpl__tuplify[508099]
    }
    label _end_chpl__tuplify[508099]
    (508103 return ret[508101])
  }
  function isTupleValue[56561](arg x[56558]:_tuple[56199](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508117] "RVV" "param" "temp"
    (508122 'move' ret[508117](508121 'deref' 1))
    (508119 return ret[508117])
  }
  function isTupleValue[56573](arg x[56571]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508126] "RVV" "param" "temp"
    (508131 'move' ret[508126](508130 'deref' 0))
    (508128 return ret[508126])
  }
  function isHomogeneousTupleValue[56585](arg x[56583]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508135] "RVV" "param" "temp"
    unknown call_tmp[611362] "expr temp" "maybe param" "maybe type" "temp"
    (611365 'move' call_tmp[611362](56606 'is star tuple type' x[56583]))
    (508140 'move' ret[508135](508139 'deref' call_tmp[611362]))
    (508137 return ret[508135])
  }
  function _check_tuple_var_decl[56618](arg x[56615]:_tuple[56199](?), param arg p[56620]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508144] "RVV" "param" "temp"
    unknown call_tmp[611369] "expr temp" "maybe param" "maybe type" "temp"
    (611372 'move' call_tmp[611369](56624 call size _mt[243] x[56615]))
    unknown call_tmp[611374] "expr temp" "maybe param" "maybe type" "temp"
    (611377 'move' call_tmp[611374](56627 call == p[56620] call_tmp[611369]))
    unknown call_tmp[611379] "expr temp" "maybe param" "maybe type" "temp"
    (611382 'move' call_tmp[611379](56711 call _cond_test call_tmp[611374]))
    if call_tmp[611379]
    {
      (508149 'move' ret[508144](508148 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[508142] _end__check_tuple_var_decl[508142]
    }
    {
      unknown call_tmp[611386] "expr temp" "maybe param" "maybe type" "temp"
      (611389 'move' call_tmp[611386](56652 call size _mt[243] x[56615]))
      unknown call_tmp[611391] "expr temp" "maybe param" "maybe type" "temp"
      (611394 'move' call_tmp[611391](56656 call _cast string[26] call_tmp[611386]))
      unknown call_tmp[611396] "expr temp" "maybe param" "maybe type" "temp"
      (611399 'move' call_tmp[611396](56658 call + "tuple size (" call_tmp[611391]))
      unknown call_tmp[611401] "expr temp" "maybe param" "maybe type" "temp"
      (611404 'move' call_tmp[611401](56677 call + call_tmp[611396] ") must match the number of grouped variables ("))
      unknown call_tmp[611406] "expr temp" "maybe param" "maybe type" "temp"
      (611409 'move' call_tmp[611406](56681 call _cast string[26] p[56620]))
      unknown call_tmp[611411] "expr temp" "maybe param" "maybe type" "temp"
      (611414 'move' call_tmp[611411](56683 call + call_tmp[611401] call_tmp[611406]))
      unknown call_tmp[611416] "expr temp" "maybe param" "maybe type" "temp"
      (611419 'move' call_tmp[611416](56702 call + call_tmp[611411] ")"))
      (56705 call compilerError call_tmp[611416])
      (474864 'end of statement')
      (508154 'move' ret[508144](508153 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[508142] _end__check_tuple_var_decl[508142]
    }
    label _end__check_tuple_var_decl[508142]
    (508146 return ret[508144])
  }
  function _check_tuple_var_decl[56722](arg x[56720]:_any[178](?), param arg p[56724]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508160] "RVV" "param" "temp"
    (56745 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474866 'end of statement')
    (508165 'move' ret[508160](508164 'deref' 0))
    (508162 return ret[508160])
  }
  function isTupleType[56757](arg t[56755]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508169] "RVV" "param" "temp"
    unknown call_tmp[611421] "expr temp" "maybe param" "maybe type" "temp"
    (611424 'move' call_tmp[611421](56778 'is tuple type' t[56755]))
    (508174 'move' ret[508169](508173 'deref' call_tmp[611421]))
    (508171 return ret[508169])
  }
  function isHomogeneousTupleType[56788](arg t[56786]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508178] "RVV" "param" "temp"
    unknown call_tmp[611426] "expr temp" "maybe param" "maybe type" "temp"
    (611429 'move' call_tmp[611426](56793 'is star tuple type' t[56786]))
    (508183 'move' ret[508178](508182 'deref' call_tmp[611426]))
    (508180 return ret[508178])
  }
  function =[56805](ref arg x[56802]:_tuple[56199](?), arg y[56808]:_tuple[56199](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56842] "dead at end of block" "insert auto destroy"
      (540849 'init var' i[56842] 0)
      unknown tmp[56843] "maybe param" "temp"
      unknown call_tmp[611433] "expr temp" "maybe param" "maybe type" "temp"
      (611436 'move' call_tmp[611433](56823 call size _mt[243] x[56802]))
      unknown call_tmp[611438] "expr temp" "maybe param" "maybe type" "temp"
      (611441 'move' call_tmp[611438](56827 call - call_tmp[611433] 1))
      (56855 'move' tmp[56843](56853 call chpl_compute_low_param_loop_bound 0 call_tmp[611438]))
      unknown tmp[56844] "maybe param" "temp"
      unknown call_tmp[611445] "expr temp" "maybe param" "maybe type" "temp"
      (611448 'move' call_tmp[611445](56862 call size _mt[243] x[56802]))
      unknown call_tmp[611450] "expr temp" "maybe param" "maybe type" "temp"
      (611453 'move' call_tmp[611450](56860 call - call_tmp[611445] 1))
      (56868 'move' tmp[56844](56866 call chpl_compute_high_param_loop_bound 0 call_tmp[611450]))
      unknown tmp[56845] "maybe param" "temp"
      (56871 'move' tmp[56845] 1)
      ParamForLoop[56873]
      { i[56842] tmp[56843] tmp[56844] tmp[56845]
        unknown call_tmp[611455] "expr temp" "maybe param" "maybe type" "temp"
        (611458 'move' call_tmp[611455](56834 call x[56802] i[56842]))
        unknown call_tmp[611460] "expr temp" "maybe param" "maybe type" "temp"
        (611463 'move' call_tmp[611460](56838 call y[56808] i[56842]))
        (56839 call = call_tmp[611455] call_tmp[611460])
      }
      label _unused_continueLabel[56847]
      label _breakLabel[56846]
    }
    (508185 return _void[55])
  }
  where {
    unknown call_tmp[611467] "expr temp" "maybe param" "maybe type" "temp"
    (611470 'move' call_tmp[611467](56812 call size _mt[243] x[56802]))
    unknown call_tmp[611474] "expr temp" "maybe param" "maybe type" "temp"
    (611477 'move' call_tmp[611474](56816 call size _mt[243] y[56808]))
    (56819 call == call_tmp[611467] call_tmp[611474])
  }
  function _tuple[56199](?).this[56893](arg _mt[56898]:_MT[238], arg this[56895]:_tuple[56199](?) :
  _tuple[56199](?), arg i[56890]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508189] "RVV" "temp"
    unknown call_tmp[611479] "expr temp" "maybe param" "maybe type" "temp"
    (611482 'move' call_tmp[611479](56903 call isHomogeneousTuple this[56895]))
    unknown call_tmp[611484] "expr temp" "maybe param" "maybe type" "temp"
    (611487 'move' call_tmp[611484](56904 call ! call_tmp[611479]))
    unknown call_tmp[611489] "expr temp" "maybe param" "maybe type" "temp"
    (611492 'move' call_tmp[611489](56929 call _cond_test call_tmp[611484]))
    if call_tmp[611489]
    {
      (56927 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611494] "expr temp" "maybe param" "maybe type" "temp"
    (611497 'move' call_tmp[611494](56976 call _cond_test 1))
    if call_tmp[611494]
    {
      unknown tmp[418936] "maybe param" "temp"
      (418947 'move' tmp[418936](56938 call < i[56890] 0))
      unknown call_tmp[611499] "expr temp" "maybe param" "maybe type" "temp"
      (611502 'move' call_tmp[611499](418949 call _cond_invalid tmp[418936]))
      if call_tmp[611499]
      {
        (418952 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[554998] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[554999] "maybe param" "temp"
      unknown call_tmp[611504] "expr temp" "maybe param" "maybe type" "temp"
      (611507 'move' call_tmp[611504](418937 call isTrue tmp[418936]))
      (555004 'move' tmp[554999](555002 call _cond_test call_tmp[611504]))
      if tmp[554999]
      {
        (555009 'move' tmp[554998](555006 '_paramFoldLogical' tmp[554999] 1))
      }
      {
        unknown tmp[555011] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611511] "expr temp" "maybe param" "maybe type" "temp"
        (611514 'move' call_tmp[611511](373122 call size _mt[243] this[56895]))
        unknown call_tmp[611516] "expr temp" "maybe param" "maybe type" "temp"
        (611519 'move' call_tmp[611516](56943 call - call_tmp[611511] 1))
        unknown call_tmp[611521] "expr temp" "maybe param" "maybe type" "temp"
        (611524 'move' call_tmp[611521](56945 call > i[56890] call_tmp[611516]))
        (555013 'move' tmp[555011](418941 call isTrue call_tmp[611521]))
        (555018 'move' tmp[554998](555015 '_paramFoldLogical' tmp[554999] tmp[555011]))
      }
      unknown call_tmp[611526] "expr temp" "maybe param" "maybe type" "temp"
      (611529 'move' call_tmp[611526](56971 call _cond_test tmp[554998]))
      if call_tmp[611526]
      {
        (56969 call halt "tuple access out of bounds: " i[56890])
      }
    }
    unknown call_tmp[611531] "expr temp" "maybe param" "maybe type" "temp"
    (611534 'move' call_tmp[611531](57001 'get svec member' this[56895] i[56890]))
    (508194 'move' ret[508189](508193 'addr of' call_tmp[611531]))
    (508191 return ret[508189])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57023] "config" "no doc" "param"
  function _tuple[56199](?).these[57030](arg _mt[57035]:_MT[238], arg this[57032]:_tuple[56199](?) :
  _tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508198] "RVV" "temp"
    unknown call_tmp[611536] "expr temp" "maybe param" "maybe type" "temp"
    (611539 'move' call_tmp[611536](57040 call isHomogeneousTuple this[57032]))
    unknown call_tmp[611541] "expr temp" "maybe param" "maybe type" "temp"
    (611544 'move' call_tmp[611541](57041 call ! call_tmp[611536]))
    unknown call_tmp[611546] "expr temp" "maybe param" "maybe type" "temp"
    (611549 'move' call_tmp[611546](57064 call _cond_test call_tmp[611541]))
    if call_tmp[611546]
    {
      (57062 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611551] "expr temp" "maybe param" "maybe type" "temp"
    (611554 'move' call_tmp[611551](57088 call == CHPL_WARN_TUPLE_ITERATION[57023] "true"))
    unknown call_tmp[611556] "expr temp" "maybe param" "maybe type" "temp"
    (611559 'move' call_tmp[611556](57113 call _cond_test call_tmp[611551]))
    if call_tmp[611556]
    {
      (57111 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57135] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57136] "expr temp" "temp"
      unknown call_tmp[611563] "expr temp" "maybe param" "maybe type" "temp"
      (611566 'move' call_tmp[611563](57151 call size _mt[243] this[57032]))
      unknown call_tmp[611568] "expr temp" "maybe param" "maybe type" "temp"
      (611571 'move' call_tmp[611568](57155 call chpl_direct_counted_range_iter 0 call_tmp[611563]))
      (57145 'move' _iterator[57136](57143 call _getIterator call_tmp[611568]))
      Defer
      {
        {
          (57171 call _freeIterator _iterator[57136])
        }
      }
      { scopeless type
        (57160 'move' _indexOfInterest[57135](57157 call iteratorIndex _iterator[57136]))
      }
      ForLoop[57137]
      {
        unknown i[57164] "index var" "insert auto destroy"
        (474877 'end of statement')
        (57166 'move' i[57164] _indexOfInterest[57135])
        (474878 'end of statement' i[57164])
        {
          unknown yret[508202] "YVV" "temp"
          unknown call_tmp[611573] "expr temp" "maybe param" "maybe type" "temp"
          (611576 'move' call_tmp[611573](57131 call this[57032] i[57164]))
          (508205 'move' yret[508202](508204 'addr of' call_tmp[611573]))
          (508207 yield yret[508202])
          (474880 'end of statement' i[57164])
        }
        label _continueLabel[57140]
        _indexOfInterest[57135]
        _iterator[57136]
      }
      label _breakLabel[57141]
    }
    (508200 return ret[508198])
  }
  function _tuple[56199](?).these[57187](arg _mt[57192]:_MT[238], arg this[57189]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57184]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508211] "RVV" "temp"
    const numTasks[57213] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[555025] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555026] "maybe param" "temp"
    unknown call_tmp[611578] "expr temp" "maybe param" "maybe type" "temp"
    (611581 'move' call_tmp[611578](57203 call == dataParTasksPerLocale[93289] 0))
    (555031 'move' tmp[555026](555029 call _cond_test call_tmp[611578]))
    if tmp[555026]
    {
      unknown tmp[555033] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611583] "expr temp" "maybe param" "maybe type" "temp"
      (611586 'move' call_tmp[611583](357359 call here[90439]))
      (555035 'move' tmp[555033](57206 call maxTaskPar _mt[243] call_tmp[611583]))
      (555040 'move' tmp[555025](555037 '_paramFoldLogical' tmp[555026] tmp[555033]))
    }
    {
      (555045 'move' tmp[555025](555042 '_paramFoldLogical' tmp[555026] dataParTasksPerLocale[93289]))
    }
    (540853 'init var' numTasks[57213] tmp[555025])
    (57216 'end of statement')
    const ignoreRunning[57219] "dead at end of block" "const" "insert auto destroy"
    (540855 'init var' ignoreRunning[57219] dataParIgnoreRunningTasks[93295])
    (57222 'end of statement')
    const minIndicesPerTask[57224] "dead at end of block" "const" "insert auto destroy"
    (540857 'init var' minIndicesPerTask[57224] dataParMinGranularity[93301])
    (57227 'end of statement')
    unknown call_tmp[611592] "maybe param" "maybe type" "temp"
    (611595 'move' call_tmp[611592](57229 call size _mt[243] this[57189]))
    const length[57232] "dead at end of block" "const" "insert auto destroy"
    (540859 'init var' length[57232] call_tmp[611592])
    (57235 'end of statement')
    unknown call_tmp[611597] "expr temp" "maybe param" "maybe type" "temp"
    (611600 'move' call_tmp[611597](57237 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611602] "expr temp" "maybe param" "maybe type" "temp"
    (611605 'move' call_tmp[611602](57240 call # call_tmp[611597] length[57232]))
    unknown call_tmp[611607] "maybe param" "maybe type" "temp"
    (611610 'move' call_tmp[611607](57242 call _build_tuple call_tmp[611602]))
    const myRange[57244] "dead at end of block" "const" "insert auto destroy"
    (540861 'init var' myRange[57244] call_tmp[611607])
    (57247 'end of statement')
    unknown call_tmp[611612] "maybe param" "maybe type" "temp"
    (611615 'move' call_tmp[611612](57259 call _computeChunkStuff numTasks[57213] ignoreRunning[57219] minIndicesPerTask[57224] myRange[57244]))
    unknown tmp[57260] "dead at end of block" "insert auto destroy" "temp"
    (540863 'init var' tmp[57260] call_tmp[611612])
    (57264 call _check_tuple_var_decl tmp[57260] 2)
    (474883 'end of statement')
    unknown call_tmp[611617] "maybe param" "maybe type" "temp"
    (611620 'move' call_tmp[611617](57261 call tmp[57260] 0))
    unknown numChunks[57248] "dead at end of block" "insert auto destroy"
    (540865 'init var' numChunks[57248] call_tmp[611617])
    (57269 'end of statement' length[57232])
    unknown call_tmp[611622] "expr temp" "maybe param" "maybe type" "temp"
    (611625 'move' call_tmp[611622](57272 call == numChunks[57248] 1))
    unknown call_tmp[611627] "expr temp" "maybe param" "maybe type" "temp"
    (611630 'move' call_tmp[611627](57516 call _cond_test call_tmp[611622]))
    if call_tmp[611627]
    {
      unknown yret[508215] "YVV" "temp"
      (508218 'move' yret[508215](508217 'addr of' myRange[57244]))
      (508220 yield yret[508215])
      (474884 'end of statement' myRange[57244])
    }
    {
      {
        unknown tmpIter[57322] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611632] "expr temp" "maybe param" "maybe type" "temp"
        (611635 'move' call_tmp[611632](57280 call chpl_build_low_bounded_range 0))
        (57325 'move' tmpIter[57322](57283 call # call_tmp[611632] numChunks[57248]))
        unknown isRngDomArr[57496] "maybe param" "temp"
        unknown tmp[418957] "maybe param" "temp"
        (418968 'move' tmp[418957](57498 call isBoundedRange tmpIter[57322]))
        unknown call_tmp[611637] "expr temp" "maybe param" "maybe type" "temp"
        (611640 'move' call_tmp[611637](418970 call _cond_invalid tmp[418957]))
        if call_tmp[611637]
        {
          (418973 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[555079] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[555080] "maybe param" "temp"
        unknown call_tmp[611642] "expr temp" "maybe param" "maybe type" "temp"
        (611645 'move' call_tmp[611642](418958 call isTrue tmp[418957]))
        (555085 'move' tmp[555080](555083 call _cond_test call_tmp[611642]))
        if tmp[555080]
        {
          (555090 'move' tmp[555079](555087 '_paramFoldLogical' tmp[555080] 1))
        }
        {
          unknown tmp[418978] "maybe param" "temp"
          (418989 'move' tmp[418978](57501 call isDomain tmpIter[57322]))
          unknown call_tmp[611647] "expr temp" "maybe param" "maybe type" "temp"
          (611650 'move' call_tmp[611647](418991 call _cond_invalid tmp[418978]))
          if call_tmp[611647]
          {
            (418994 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[555052] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[555053] "maybe param" "temp"
          unknown call_tmp[611652] "expr temp" "maybe param" "maybe type" "temp"
          (611655 'move' call_tmp[611652](418979 call isTrue tmp[418978]))
          (555058 'move' tmp[555053](555056 call _cond_test call_tmp[611652]))
          if tmp[555053]
          {
            (555063 'move' tmp[555052](555060 '_paramFoldLogical' tmp[555053] 1))
          }
          {
            unknown tmp[555065] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611657] "expr temp" "maybe param" "maybe type" "temp"
            (611660 'move' call_tmp[611657](57504 call isArray tmpIter[57322]))
            (555067 'move' tmp[555065](418983 call isTrue call_tmp[611657]))
            (555072 'move' tmp[555052](555069 '_paramFoldLogical' tmp[555053] tmp[555065]))
          }
          unknown tmp[555092] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (555094 'move' tmp[555092](418962 call isTrue tmp[555052]))
          (555099 'move' tmp[555079](555096 '_paramFoldLogical' tmp[555080] tmp[555092]))
        }
        (57511 'move' isRngDomArr[57496] tmp[555079])
        if isRngDomArr[57496]
        {
          const _coforallCount[57363] "const" "end count" "temp"
          (57432 'move' _coforallCount[57363](57429 call _endCountAlloc 1))
          unknown numTasks[57364] "temp"
          (57416 'move' numTasks[57364](57412 call size _mt[243] tmpIter[57322]))
          (57407 call _upEndCount _coforallCount[57363] 1 numTasks[57364])
          (474887 'end of statement')
          (57404 call chpl_resetTaskSpawn numTasks[57364])
          (474888 'end of statement')
          unknown _indexOfInterest[57371] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57372] "expr temp" "temp"
          (57381 'move' _iterator[57372](57379 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57397 call _freeIterator _iterator[57372])
            }
          }
          { scopeless type
            (57386 'move' _indexOfInterest[57371](57383 call iteratorIndex _iterator[57372]))
          }
          ForLoop[57373]
          {
            unknown chunk[57390] "coforall index var" "index var" "insert auto destroy"
            (474890 'end of statement')
            (57392 'move' chunk[57390] _indexOfInterest[57371])
            (474891 'end of statement' chunk[57390])
            (933728 call coforall_fn[933726] length[57232] numChunks[57248])
            function coforall_fn[933726](arg length[933733], arg numChunks[933736]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611664] "expr temp" "maybe param" "maybe type" "temp"
                (611667 'move' call_tmp[611664](57336 call - length[933733] 1))
                unknown call_tmp[611669] "maybe param" "maybe type" "temp"
                (611672 'move' call_tmp[611669](57331 call _computeBlock length[933733] numChunks[933736] chunk[57390] call_tmp[611664]))
                const tmp[57329] "dead at end of block" "const" "insert auto destroy" "temp"
                (540867 'init var' tmp[57329] call_tmp[611669])
                (57341 call _check_tuple_var_decl tmp[57329] 2)
                (474893 'end of statement')
                unknown call_tmp[611674] "maybe param" "maybe type" "temp"
                (611677 'move' call_tmp[611674](57346 call tmp[57329] 0))
                const lo[57344] "dead at end of block" "const" "insert auto destroy"
                (540869 'init var' lo[57344] call_tmp[611674])
                unknown call_tmp[611679] "maybe param" "maybe type" "temp"
                (611682 'move' call_tmp[611679](57351 call tmp[57329] 1))
                const hi[57349] "dead at end of block" "const" "insert auto destroy"
                (540871 'init var' hi[57349] call_tmp[611679])
                (57354 'end of statement')
                unknown yret[508222] "YVV" "temp"
                unknown call_tmp[611684] "expr temp" "maybe param" "maybe type" "temp"
                (611687 'move' call_tmp[611684](57359 call chpl_build_bounded_range lo[57344] hi[57349]))
                unknown call_tmp[611689] "expr temp" "maybe param" "maybe type" "temp"
                (611692 'move' call_tmp[611689](57357 call _build_tuple call_tmp[611684]))
                (508225 'move' yret[508222](508224 'addr of' call_tmp[611689]))
                (508227 yield yret[508222])
                (474894 'end of statement' lo[57344] hi[57349])
              }
              (57366 call _downEndCount _coforallCount[57363] nil[44])
              (933731 return _void[55])
            }
            {
            }
            label _continueLabel[57376]
            _indexOfInterest[57371]
            _iterator[57372]
          }
          label _breakLabel[57377]
          Defer
          {
            {
              (57419 call _endCountFree _coforallCount[57363])
            }
          }
          (57424 call _waitEndCount _coforallCount[57363] 1 numTasks[57364])
        }
        {
          const _coforallCount[57436] "const" "end count" "temp"
          (57493 'move' _coforallCount[57436](57490 call _endCountAlloc 1))
          unknown _indexOfInterest[57444] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57445] "expr temp" "temp"
          (57454 'move' _iterator[57445](57452 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57470 call _freeIterator _iterator[57445])
            }
          }
          { scopeless type
            (57459 'move' _indexOfInterest[57444](57456 call iteratorIndex _iterator[57445]))
          }
          ForLoop[57446]
          {
            unknown chunk[57463] "coforall index var" "index var" "insert auto destroy"
            (474901 'end of statement')
            (57465 'move' chunk[57463] _indexOfInterest[57444])
            (474902 'end of statement' chunk[57463])
            (57477 call _upEndCount _coforallCount[57436] 1)
            (474904 'end of statement')
            (933741 call coforall_fn[933739] length[57232] numChunks[57248])
            function coforall_fn[933739](arg length[933746], arg numChunks[933749]) : void[4] "cobegin or coforall"
            {
              {
                unknown call_tmp[611694] "expr temp" "maybe param" "maybe type" "temp"
                (611697 'move' call_tmp[611694](57297 call - length[933746] 1))
                unknown call_tmp[611699] "maybe param" "maybe type" "temp"
                (611702 'move' call_tmp[611699](57299 call _computeBlock length[933746] numChunks[933749] chunk[57463] call_tmp[611694]))
                const tmp[57300] "dead at end of block" "const" "insert auto destroy" "temp"
                (540873 'init var' tmp[57300] call_tmp[611699])
                (57307 call _check_tuple_var_decl tmp[57300] 2)
                (474905 'end of statement')
                unknown call_tmp[611704] "maybe param" "maybe type" "temp"
                (611707 'move' call_tmp[611704](57301 call tmp[57300] 0))
                const lo[57285] "dead at end of block" "const" "insert auto destroy"
                (540875 'init var' lo[57285] call_tmp[611704])
                unknown call_tmp[611709] "maybe param" "maybe type" "temp"
                (611712 'move' call_tmp[611709](57304 call tmp[57300] 1))
                const hi[57287] "dead at end of block" "const" "insert auto destroy"
                (540877 'init var' hi[57287] call_tmp[611709])
                (57312 'end of statement')
                unknown yret[508229] "YVV" "temp"
                unknown call_tmp[611714] "expr temp" "maybe param" "maybe type" "temp"
                (611717 'move' call_tmp[611714](57316 call chpl_build_bounded_range lo[57285] hi[57287]))
                unknown call_tmp[611719] "expr temp" "maybe param" "maybe type" "temp"
                (611722 'move' call_tmp[611719](57318 call _build_tuple call_tmp[611714]))
                (508232 'move' yret[508229](508231 'addr of' call_tmp[611719]))
                (508234 yield yret[508229])
                (474906 'end of statement' lo[57285] hi[57287])
              }
              (57439 call _downEndCount _coforallCount[57436] nil[44])
              (933744 return _void[55])
            }
            {
            }
            label _continueLabel[57449]
            _indexOfInterest[57444]
            _iterator[57445]
          }
          label _breakLabel[57450]
          Defer
          {
            {
              (57481 call _endCountFree _coforallCount[57436])
            }
          }
          (57486 call _waitEndCount _coforallCount[57436] 1)
        }
      }
    }
    (508213 return ret[508211])
  }
  where {
    (57199 call == tag[57184] leader[447])
  }
  function _tuple[56199](?).these[57530](arg _mt[57539]:_MT[238], arg this[57536]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57527]:iterKind[453], arg followThis[57533]:_tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508238] "RVV" "temp"
    unknown call_tmp[611726] "expr temp" "maybe param" "maybe type" "temp"
    (611729 'move' call_tmp[611726](57549 call size _mt[243] followThis[57533]))
    unknown call_tmp[611731] "expr temp" "maybe param" "maybe type" "temp"
    (611734 'move' call_tmp[611731](57553 call != call_tmp[611726] 1))
    unknown call_tmp[611736] "expr temp" "maybe param" "maybe type" "temp"
    (611739 'move' call_tmp[611736](57576 call _cond_test call_tmp[611731]))
    if call_tmp[611736]
    {
      (57574 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611741] "maybe param" "maybe type" "temp"
    (611744 'move' call_tmp[611741](57585 call followThis[57533] 0))
    unknown fThis[57586] "dead at end of block" "insert auto destroy"
    (540879 'init var' fThis[57586] call_tmp[611741])
    (57589 'end of statement')
    {
      unknown _indexOfInterest[57599] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57600] "expr temp" "temp"
      (57609 'move' _iterator[57600](57607 call _getIterator fThis[57586]))
      Defer
      {
        {
          (57625 call _freeIterator _iterator[57600])
        }
      }
      { scopeless type
        (57614 'move' _indexOfInterest[57599](57611 call iteratorIndex _iterator[57600]))
      }
      ForLoop[57601]
      {
        unknown i[57618] "index var" "insert auto destroy"
        (474914 'end of statement')
        (57620 'move' i[57618] _indexOfInterest[57599])
        (474915 'end of statement' i[57618])
        {
          unknown yret[508242] "YVV" "temp"
          unknown call_tmp[611746] "expr temp" "maybe param" "maybe type" "temp"
          (611749 'move' call_tmp[611746](57595 call this[57536] i[57618]))
          (508245 'move' yret[508242](508244 'addr of' call_tmp[611746]))
          (508247 yield yret[508242])
          (474917 'end of statement' i[57618])
        }
        label _continueLabel[57604]
        _indexOfInterest[57599]
        _iterator[57600]
      }
      label _breakLabel[57605]
    }
    (508240 return ret[508238])
  }
  where {
    (57546 call == tag[57527] follower[449])
  }
  function _tuple[56199](?).indices[57638](arg _mt[57643]:_MT[238], arg this[57640]:_tuple[56199](?) :
  _tuple[56199](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508251] "RVV" "temp"
    unknown call_tmp[611753] "expr temp" "maybe param" "maybe type" "temp"
    (611756 'move' call_tmp[611753](57647 call size _mt[243] this[57640]))
    unknown call_tmp[611758] "expr temp" "maybe param" "maybe type" "temp"
    (611761 'move' call_tmp[611758](57651 call - call_tmp[611753] 1))
    unknown call_tmp[611763] "expr temp" "maybe param" "maybe type" "temp"
    (611766 'move' call_tmp[611763](57653 call chpl_build_bounded_range 0 call_tmp[611758]))
    (508256 'move' ret[508251](508255 'deref' call_tmp[611763]))
    (508253 return ret[508251])
  }
  function _cast[57669](arg t[57666] :
  (57665 call complex(128)[140] 64), arg x[57676]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508266] "RVV" "temp"
    function _chpl_complex64[57688](arg re[57685] :
    (57684 call real(64)[16] 32), arg im[57694] :
    (57693 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508260] "RVV" "temp"
      (508262 return ret[508260])
    }
    { scopeless type
      (57700 call complex(128)[140] 64)
    }
    unknown call_tmp[611768] "expr temp" "maybe param" "maybe type" "temp"
    (611771 'move' call_tmp[611768](57713 call real(64)[16] 32))
    unknown call_tmp[611773] "expr temp" "maybe param" "maybe type" "temp"
    (611776 'move' call_tmp[611773](57709 call x[57676] 0))
    unknown call_tmp[611778] "expr temp" "maybe param" "maybe type" "temp"
    (611781 'move' call_tmp[611778](57714 call _cast call_tmp[611768] call_tmp[611773]))
    unknown call_tmp[611783] "expr temp" "maybe param" "maybe type" "temp"
    (611786 'move' call_tmp[611783](57724 call real(64)[16] 32))
    unknown call_tmp[611788] "expr temp" "maybe param" "maybe type" "temp"
    (611791 'move' call_tmp[611788](57720 call x[57676] 1))
    unknown call_tmp[611793] "expr temp" "maybe param" "maybe type" "temp"
    (611796 'move' call_tmp[611793](57725 call _cast call_tmp[611783] call_tmp[611788]))
    unknown call_tmp[611798] "expr temp" "maybe param" "maybe type" "temp"
    (611801 'move' call_tmp[611798](57727 call _chpl_complex64 call_tmp[611778] call_tmp[611793]))
    (508271 'move' ret[508266](508270 'deref' call_tmp[611798]))
    (508268 return ret[508266])
  }
  where {
    unknown call_tmp[611803] "expr temp" "maybe param" "maybe type" "temp"
    (611806 'move' call_tmp[611803](454796 'query' x[57676] c"size"))
    unknown call_tmp[611808] "expr temp" "maybe param" "maybe type" "temp"
    (611811 'move' call_tmp[611808](454797 call == 2 call_tmp[611803]))
    (454801 call & 1 call_tmp[611808])
  }
  function _cast[57741](arg t[57738] :
  (57737 call complex(128)[140] 128), arg x[57748]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508281] "RVV" "temp"
    function _chpl_complex128[57760](arg re[57757] :
    (57756 call real(64)[16] 64), arg im[57766] :
    (57765 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508275] "RVV" "temp"
      (508277 return ret[508275])
    }
    { scopeless type
      (57772 call complex(128)[140] 128)
    }
    unknown call_tmp[611813] "expr temp" "maybe param" "maybe type" "temp"
    (611816 'move' call_tmp[611813](57785 call real(64)[16] 64))
    unknown call_tmp[611818] "expr temp" "maybe param" "maybe type" "temp"
    (611821 'move' call_tmp[611818](57781 call x[57748] 0))
    unknown call_tmp[611823] "expr temp" "maybe param" "maybe type" "temp"
    (611826 'move' call_tmp[611823](57786 call _cast call_tmp[611813] call_tmp[611818]))
    unknown call_tmp[611828] "expr temp" "maybe param" "maybe type" "temp"
    (611831 'move' call_tmp[611828](57796 call real(64)[16] 64))
    unknown call_tmp[611833] "expr temp" "maybe param" "maybe type" "temp"
    (611836 'move' call_tmp[611833](57792 call x[57748] 1))
    unknown call_tmp[611838] "expr temp" "maybe param" "maybe type" "temp"
    (611841 'move' call_tmp[611838](57797 call _cast call_tmp[611828] call_tmp[611833]))
    unknown call_tmp[611843] "expr temp" "maybe param" "maybe type" "temp"
    (611846 'move' call_tmp[611843](57799 call _chpl_complex128 call_tmp[611823] call_tmp[611838]))
    (508286 'move' ret[508281](508285 'deref' call_tmp[611843]))
    (508283 return ret[508281])
  }
  where {
    unknown call_tmp[611848] "expr temp" "maybe param" "maybe type" "temp"
    (611851 'move' call_tmp[611848](454817 'query' x[57748] c"size"))
    unknown call_tmp[611853] "expr temp" "maybe param" "maybe type" "temp"
    (611856 'move' call_tmp[611853](454818 call == 2 call_tmp[611848]))
    (454822 call & 1 call_tmp[611853])
  }
  function _cast[57810](arg t[57807]:_tuple[56199](?), arg x[57813]:_tuple[56199](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508288 return _void[55])
  }
  function chpl__tupleRest[57825](arg t[57822]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508301] "RVV" "temp"
    function chpl__tupleRestHelper[57831](arg first[57829]:_any[178](?), arg rest[57834]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508292] "RVV" "temp"
      (508297 'move' ret[508292](508296 'deref' rest[57834]))
      (508294 return ret[508292])
    }
    unknown call_tmp[611858] "expr temp" "maybe param" "maybe type" "temp"
    (611861 'move' call_tmp[611858](57848 call chpl__tupleRestHelper(57846 'expand_tuple' t[57822])))
    (508306 'move' ret[508301](508305 'deref' call_tmp[611858]))
    (508303 return ret[508301])
  }
  function +[57859](arg a[57856]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508310] "RVV" "temp"
    unknown result[57863] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611863] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611866 'move' call_tmp[611863](57862 'typeof' a[57856]))
    (540881 'default init var' result[57863] call_tmp[611863])
    (57866 'end of statement')
    {
      unknown d[57891] "dead at end of block" "insert auto destroy"
      (540883 'init var' d[57891] 0)
      (474924 'end of statement')
      unknown tmp[57892] "maybe param" "temp"
      unknown call_tmp[611870] "expr temp" "maybe param" "maybe type" "temp"
      (611873 'move' call_tmp[611870](57870 call size _mt[243] a[57856]))
      unknown call_tmp[611875] "expr temp" "maybe param" "maybe type" "temp"
      (611878 'move' call_tmp[611875](57874 call - call_tmp[611870] 1))
      (57904 'move' tmp[57892](57902 call chpl_compute_low_param_loop_bound 0 call_tmp[611875]))
      unknown tmp[57893] "maybe param" "temp"
      unknown call_tmp[611882] "expr temp" "maybe param" "maybe type" "temp"
      (611885 'move' call_tmp[611882](57911 call size _mt[243] a[57856]))
      unknown call_tmp[611887] "expr temp" "maybe param" "maybe type" "temp"
      (611890 'move' call_tmp[611887](57909 call - call_tmp[611882] 1))
      (57917 'move' tmp[57893](57915 call chpl_compute_high_param_loop_bound 0 call_tmp[611887]))
      unknown tmp[57894] "maybe param" "temp"
      (57920 'move' tmp[57894] 1)
      ParamForLoop[57922]
      { d[57891] tmp[57892] tmp[57893] tmp[57894]
        unknown call_tmp[611892] "expr temp" "maybe param" "maybe type" "temp"
        (611895 'move' call_tmp[611892](57881 call result[57863] d[57891]))
        unknown call_tmp[611897] "expr temp" "maybe param" "maybe type" "temp"
        (611900 'move' call_tmp[611897](57885 call a[57856] d[57891]))
        unknown call_tmp[611902] "expr temp" "maybe param" "maybe type" "temp"
        (611905 'move' call_tmp[611902](57886 call + call_tmp[611897]))
        (57888 call = call_tmp[611892] call_tmp[611902])
        (474925 'end of statement' result[57863] d[57891] d[57891])
      }
      label _unused_continueLabel[57896]
      label _breakLabel[57895]
    }
    (508315 'move' ret[508310](508314 'deref' result[57863]))
    gotoReturn _end_+[508308] _end_+[508308]
    (474929 'end of statement' result[57863])
    label _end_+[508308]
    (508312 return ret[508310])
  }
  function -[57942](arg a[57939]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508321] "RVV" "temp"
    unknown result[57946] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611907] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611910 'move' call_tmp[611907](57945 'typeof' a[57939]))
    (540885 'default init var' result[57946] call_tmp[611907])
    (57949 'end of statement')
    {
      unknown d[57974] "dead at end of block" "insert auto destroy"
      (540887 'init var' d[57974] 0)
      (474931 'end of statement')
      unknown tmp[57975] "maybe param" "temp"
      unknown call_tmp[611914] "expr temp" "maybe param" "maybe type" "temp"
      (611917 'move' call_tmp[611914](57953 call size _mt[243] a[57939]))
      unknown call_tmp[611919] "expr temp" "maybe param" "maybe type" "temp"
      (611922 'move' call_tmp[611919](57957 call - call_tmp[611914] 1))
      (57987 'move' tmp[57975](57985 call chpl_compute_low_param_loop_bound 0 call_tmp[611919]))
      unknown tmp[57976] "maybe param" "temp"
      unknown call_tmp[611926] "expr temp" "maybe param" "maybe type" "temp"
      (611929 'move' call_tmp[611926](57994 call size _mt[243] a[57939]))
      unknown call_tmp[611931] "expr temp" "maybe param" "maybe type" "temp"
      (611934 'move' call_tmp[611931](57992 call - call_tmp[611926] 1))
      (58000 'move' tmp[57976](57998 call chpl_compute_high_param_loop_bound 0 call_tmp[611931]))
      unknown tmp[57977] "maybe param" "temp"
      (58003 'move' tmp[57977] 1)
      ParamForLoop[58005]
      { d[57974] tmp[57975] tmp[57976] tmp[57977]
        unknown call_tmp[611936] "expr temp" "maybe param" "maybe type" "temp"
        (611939 'move' call_tmp[611936](57964 call result[57946] d[57974]))
        unknown call_tmp[611941] "expr temp" "maybe param" "maybe type" "temp"
        (611944 'move' call_tmp[611941](57968 call a[57939] d[57974]))
        unknown call_tmp[611946] "expr temp" "maybe param" "maybe type" "temp"
        (611949 'move' call_tmp[611946](57969 call - call_tmp[611941]))
        (57971 call = call_tmp[611936] call_tmp[611946])
        (474932 'end of statement' result[57946] d[57974] d[57974])
      }
      label _unused_continueLabel[57979]
      label _breakLabel[57978]
    }
    (508326 'move' ret[508321](508325 'deref' result[57946]))
    gotoReturn _end_-[508319] _end_-[508319]
    (474936 'end of statement' result[57946])
    label _end_-[508319]
    (508323 return ret[508321])
  }
  function ~[58025](arg a[58022]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508332] "RVV" "temp"
    unknown result[58029] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611951] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611954 'move' call_tmp[611951](58028 'typeof' a[58022]))
    (540889 'default init var' result[58029] call_tmp[611951])
    (58032 'end of statement')
    {
      unknown d[58057] "dead at end of block" "insert auto destroy"
      (540891 'init var' d[58057] 0)
      (474938 'end of statement')
      unknown tmp[58058] "maybe param" "temp"
      unknown call_tmp[611958] "expr temp" "maybe param" "maybe type" "temp"
      (611961 'move' call_tmp[611958](58036 call size _mt[243] a[58022]))
      unknown call_tmp[611963] "expr temp" "maybe param" "maybe type" "temp"
      (611966 'move' call_tmp[611963](58040 call - call_tmp[611958] 1))
      (58070 'move' tmp[58058](58068 call chpl_compute_low_param_loop_bound 0 call_tmp[611963]))
      unknown tmp[58059] "maybe param" "temp"
      unknown call_tmp[611970] "expr temp" "maybe param" "maybe type" "temp"
      (611973 'move' call_tmp[611970](58077 call size _mt[243] a[58022]))
      unknown call_tmp[611975] "expr temp" "maybe param" "maybe type" "temp"
      (611978 'move' call_tmp[611975](58075 call - call_tmp[611970] 1))
      (58083 'move' tmp[58059](58081 call chpl_compute_high_param_loop_bound 0 call_tmp[611975]))
      unknown tmp[58060] "maybe param" "temp"
      (58086 'move' tmp[58060] 1)
      ParamForLoop[58088]
      { d[58057] tmp[58058] tmp[58059] tmp[58060]
        unknown call_tmp[611980] "expr temp" "maybe param" "maybe type" "temp"
        (611983 'move' call_tmp[611980](58047 call result[58029] d[58057]))
        unknown call_tmp[611985] "expr temp" "maybe param" "maybe type" "temp"
        (611988 'move' call_tmp[611985](58051 call a[58022] d[58057]))
        unknown call_tmp[611990] "expr temp" "maybe param" "maybe type" "temp"
        (611993 'move' call_tmp[611990](58052 call ~ call_tmp[611985]))
        (58054 call = call_tmp[611980] call_tmp[611990])
        (474939 'end of statement' result[58029] d[58057] d[58057])
      }
      label _unused_continueLabel[58062]
      label _breakLabel[58061]
    }
    (508337 'move' ret[508332](508336 'deref' result[58029]))
    gotoReturn _end_~[508330] _end_~[508330]
    (474943 'end of statement' result[58029])
    label _end_~[508330]
    (508334 return ret[508332])
  }
  function ![58108](arg a[58105]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508343] "RVV" "temp"
    unknown result[58112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611995] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611998 'move' call_tmp[611995](58111 'typeof' a[58105]))
    (540893 'default init var' result[58112] call_tmp[611995])
    (58115 'end of statement')
    {
      unknown d[58140] "dead at end of block" "insert auto destroy"
      (540895 'init var' d[58140] 0)
      (474945 'end of statement')
      unknown tmp[58141] "maybe param" "temp"
      unknown call_tmp[612002] "expr temp" "maybe param" "maybe type" "temp"
      (612005 'move' call_tmp[612002](58119 call size _mt[243] a[58105]))
      unknown call_tmp[612007] "expr temp" "maybe param" "maybe type" "temp"
      (612010 'move' call_tmp[612007](58123 call - call_tmp[612002] 1))
      (58153 'move' tmp[58141](58151 call chpl_compute_low_param_loop_bound 0 call_tmp[612007]))
      unknown tmp[58142] "maybe param" "temp"
      unknown call_tmp[612014] "expr temp" "maybe param" "maybe type" "temp"
      (612017 'move' call_tmp[612014](58160 call size _mt[243] a[58105]))
      unknown call_tmp[612019] "expr temp" "maybe param" "maybe type" "temp"
      (612022 'move' call_tmp[612019](58158 call - call_tmp[612014] 1))
      (58166 'move' tmp[58142](58164 call chpl_compute_high_param_loop_bound 0 call_tmp[612019]))
      unknown tmp[58143] "maybe param" "temp"
      (58169 'move' tmp[58143] 1)
      ParamForLoop[58171]
      { d[58140] tmp[58141] tmp[58142] tmp[58143]
        unknown call_tmp[612024] "expr temp" "maybe param" "maybe type" "temp"
        (612027 'move' call_tmp[612024](58130 call result[58112] d[58140]))
        unknown call_tmp[612029] "expr temp" "maybe param" "maybe type" "temp"
        (612032 'move' call_tmp[612029](58134 call a[58105] d[58140]))
        unknown call_tmp[612034] "expr temp" "maybe param" "maybe type" "temp"
        (612037 'move' call_tmp[612034](58135 call ! call_tmp[612029]))
        (58137 call = call_tmp[612024] call_tmp[612034])
        (474946 'end of statement' result[58112] d[58140] d[58140])
      }
      label _unused_continueLabel[58145]
      label _breakLabel[58144]
    }
    (508348 'move' ret[508343](508347 'deref' result[58112]))
    gotoReturn _end_![508341] _end_![508341]
    (474950 'end of statement' result[58112])
    label _end_![508341]
    (508345 return ret[508343])
  }
  function max[58189](arg t[58187]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508354] "RVV" "temp"
    unknown result[58197] "dead at end of block" "insert auto destroy"
    (540897 'default init var' result[58197] t[58187])
    (58200 'end of statement')
    {
      unknown i[58227] "dead at end of block" "insert auto destroy"
      (540899 'init var' i[58227] 0)
      (474952 'end of statement')
      unknown tmp[58228] "maybe param" "temp"
      unknown call_tmp[612041] "expr temp" "maybe param" "maybe type" "temp"
      (612044 'move' call_tmp[612041](58204 call size _mt[243] result[58197]))
      unknown call_tmp[612046] "expr temp" "maybe param" "maybe type" "temp"
      (612049 'move' call_tmp[612046](58208 call - call_tmp[612041] 1))
      (58240 'move' tmp[58228](58238 call chpl_compute_low_param_loop_bound 0 call_tmp[612046]))
      unknown tmp[58229] "maybe param" "temp"
      unknown call_tmp[612053] "expr temp" "maybe param" "maybe type" "temp"
      (612056 'move' call_tmp[612053](58247 call size _mt[243] result[58197]))
      unknown call_tmp[612058] "expr temp" "maybe param" "maybe type" "temp"
      (612061 'move' call_tmp[612058](58245 call - call_tmp[612053] 1))
      (58253 'move' tmp[58229](58251 call chpl_compute_high_param_loop_bound 0 call_tmp[612058]))
      unknown tmp[58230] "maybe param" "temp"
      (58256 'move' tmp[58230] 1)
      ParamForLoop[58258]
      { i[58227] tmp[58228] tmp[58229] tmp[58230]
        {
          unknown call_tmp[612063] "expr temp" "maybe param" "maybe type" "temp"
          (612066 'move' call_tmp[612063](58215 call result[58197] i[58227]))
          unknown call_tmp[612068] "expr temp" "maybe param" "maybe type" "temp"
          (612071 'move' call_tmp[612068](58220 call t[58187] i[58227]))
          unknown call_tmp[612073] "expr temp" "maybe param" "maybe type" "temp"
          (612076 'move' call_tmp[612073](58222 call max call_tmp[612068]))
          (58223 call = call_tmp[612063] call_tmp[612073])
          (474953 'end of statement' result[58197] i[58227] i[58227])
        }
      }
      label _unused_continueLabel[58232]
      label _breakLabel[58231]
    }
    (508360 'move' ret[508354](508359 'coerce' result[58197] t[58187]))
    gotoReturn _end_max[508352] _end_max[508352]
    (474957 'end of statement' result[58197])
    label _end_max[508352]
    (508356 return ret[508354])
  }
  where {
    (58195 call isTupleType t[58187])
  }
  { scopeless type
    t[58187]
  }
  function min[58278](arg t[58276]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508366] "RVV" "temp"
    unknown result[58286] "dead at end of block" "insert auto destroy"
    (540901 'default init var' result[58286] t[58276])
    (58289 'end of statement')
    {
      unknown i[58316] "dead at end of block" "insert auto destroy"
      (540903 'init var' i[58316] 0)
      (474959 'end of statement')
      unknown tmp[58317] "maybe param" "temp"
      unknown call_tmp[612080] "expr temp" "maybe param" "maybe type" "temp"
      (612083 'move' call_tmp[612080](58293 call size _mt[243] result[58286]))
      unknown call_tmp[612085] "expr temp" "maybe param" "maybe type" "temp"
      (612088 'move' call_tmp[612085](58297 call - call_tmp[612080] 1))
      (58329 'move' tmp[58317](58327 call chpl_compute_low_param_loop_bound 0 call_tmp[612085]))
      unknown tmp[58318] "maybe param" "temp"
      unknown call_tmp[612092] "expr temp" "maybe param" "maybe type" "temp"
      (612095 'move' call_tmp[612092](58336 call size _mt[243] result[58286]))
      unknown call_tmp[612097] "expr temp" "maybe param" "maybe type" "temp"
      (612100 'move' call_tmp[612097](58334 call - call_tmp[612092] 1))
      (58342 'move' tmp[58318](58340 call chpl_compute_high_param_loop_bound 0 call_tmp[612097]))
      unknown tmp[58319] "maybe param" "temp"
      (58345 'move' tmp[58319] 1)
      ParamForLoop[58347]
      { i[58316] tmp[58317] tmp[58318] tmp[58319]
        {
          unknown call_tmp[612102] "expr temp" "maybe param" "maybe type" "temp"
          (612105 'move' call_tmp[612102](58304 call result[58286] i[58316]))
          unknown call_tmp[612107] "expr temp" "maybe param" "maybe type" "temp"
          (612110 'move' call_tmp[612107](58309 call t[58276] i[58316]))
          unknown call_tmp[612112] "expr temp" "maybe param" "maybe type" "temp"
          (612115 'move' call_tmp[612112](58311 call min call_tmp[612107]))
          (58312 call = call_tmp[612102] call_tmp[612112])
          (474960 'end of statement' result[58286] i[58316] i[58316])
        }
      }
      label _unused_continueLabel[58321]
      label _breakLabel[58320]
    }
    (508372 'move' ret[508366](508371 'coerce' result[58286] t[58276]))
    gotoReturn _end_min[508364] _end_min[508364]
    (474964 'end of statement' result[58286])
    label _end_min[508364]
    (508368 return ret[508366])
  }
  where {
    (58284 call isTupleType t[58276])
  }
  { scopeless type
    t[58276]
  }
  function chpl_TwoHomogTuples[58367](arg t1[58365]:_any[178](?), arg t2[58369]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508378] "RVV" "param" "temp"
    unknown tmp[418999] "maybe param" "temp"
    (419010 'move' tmp[418999](58374 call isHomogeneousTuple t1[58365]))
    unknown call_tmp[612117] "expr temp" "maybe param" "maybe type" "temp"
    (612120 'move' call_tmp[612117](419012 call _cond_invalid tmp[418999]))
    if call_tmp[612117]
    {
      (419015 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555106] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555107] "maybe param" "temp"
    unknown call_tmp[612122] "expr temp" "maybe param" "maybe type" "temp"
    (612125 'move' call_tmp[612122](419000 call isTrue tmp[418999]))
    (555112 'move' tmp[555107](555110 call _cond_test call_tmp[612122]))
    if tmp[555107]
    {
      unknown tmp[555114] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[612127] "expr temp" "maybe param" "maybe type" "temp"
      (612130 'move' call_tmp[612127](58378 call isHomogeneousTuple t2[58369]))
      (555116 'move' tmp[555114](419003 call isTrue call_tmp[612127]))
      (555121 'move' tmp[555106](555118 '_paramFoldLogical' tmp[555107] tmp[555114]))
    }
    {
      (555126 'move' tmp[555106](555123 '_paramFoldLogical' tmp[555107] 0))
    }
    (508383 'move' ret[508378](508382 'deref' tmp[555106]))
    (508380 return ret[508378])
  }
  function +[58392](arg a[58389]:_tuple[56199](?), arg b[58395]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508387] "RVV" "temp"
    unknown call_tmp[612134] "expr temp" "maybe param" "maybe type" "temp"
    (612137 'move' call_tmp[612134](58404 call size _mt[243] a[58389]))
    unknown call_tmp[612141] "expr temp" "maybe param" "maybe type" "temp"
    (612144 'move' call_tmp[612141](58408 call size _mt[243] b[58395]))
    unknown call_tmp[612146] "expr temp" "maybe param" "maybe type" "temp"
    (612149 'move' call_tmp[612146](58411 call != call_tmp[612134] call_tmp[612141]))
    unknown call_tmp[612151] "expr temp" "maybe param" "maybe type" "temp"
    (612154 'move' call_tmp[612151](58434 call _cond_test call_tmp[612146]))
    if call_tmp[612151]
    {
      (58432 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491643] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612156] "expr temp" "maybe param" "maybe type" "temp"
      (612159 'move' call_tmp[612156](58447 call a[58389] 0))
      unknown call_tmp[612161] "expr temp" "maybe param" "maybe type" "temp"
      (612164 'move' call_tmp[612161](58451 call b[58395] 0))
      unknown call_tmp[612166] "expr temp" "maybe param" "maybe type" "temp"
      (612169 'move' call_tmp[612166](58452 call + call_tmp[612156] call_tmp[612161]))
      (491647 'move' call_type_tmp[491643](58454 'typeof' call_tmp[612166]))
    }
    unknown result[58457] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612173] "expr temp" "maybe param" "maybe type" "temp"
    (612176 'move' call_tmp[612173](58441 call size _mt[243] a[58389]))
    unknown call_tmp[612178] "expr temp" "maybe param" "maybe type" "temp"
    (612181 'move' call_tmp[612178](58455 call * call_tmp[612173] call_type_tmp[491643]))
    (540905 'default init var' result[58457] call_tmp[612178])
    (58460 'end of statement')
    {
      unknown d[58488] "dead at end of block" "insert auto destroy"
      (540907 'init var' d[58488] 0)
      (474969 'end of statement')
      unknown tmp[58489] "maybe param" "temp"
      unknown call_tmp[612185] "expr temp" "maybe param" "maybe type" "temp"
      (612188 'move' call_tmp[612185](58463 call size _mt[243] a[58389]))
      unknown call_tmp[612190] "expr temp" "maybe param" "maybe type" "temp"
      (612193 'move' call_tmp[612190](58467 call - call_tmp[612185] 1))
      (58501 'move' tmp[58489](58499 call chpl_compute_low_param_loop_bound 0 call_tmp[612190]))
      unknown tmp[58490] "maybe param" "temp"
      unknown call_tmp[612197] "expr temp" "maybe param" "maybe type" "temp"
      (612200 'move' call_tmp[612197](58508 call size _mt[243] a[58389]))
      unknown call_tmp[612202] "expr temp" "maybe param" "maybe type" "temp"
      (612205 'move' call_tmp[612202](58506 call - call_tmp[612197] 1))
      (58514 'move' tmp[58490](58512 call chpl_compute_high_param_loop_bound 0 call_tmp[612202]))
      unknown tmp[58491] "maybe param" "temp"
      (58517 'move' tmp[58491] 1)
      ParamForLoop[58519]
      { d[58488] tmp[58489] tmp[58490] tmp[58491]
        unknown call_tmp[612207] "expr temp" "maybe param" "maybe type" "temp"
        (612210 'move' call_tmp[612207](58474 call result[58457] d[58488]))
        unknown call_tmp[612212] "expr temp" "maybe param" "maybe type" "temp"
        (612215 'move' call_tmp[612212](58478 call a[58389] d[58488]))
        unknown call_tmp[612217] "expr temp" "maybe param" "maybe type" "temp"
        (612220 'move' call_tmp[612217](58482 call b[58395] d[58488]))
        unknown call_tmp[612222] "expr temp" "maybe param" "maybe type" "temp"
        (612225 'move' call_tmp[612222](58483 call + call_tmp[612212] call_tmp[612217]))
        (58485 call = call_tmp[612207] call_tmp[612222])
        (474970 'end of statement' result[58457] d[58488] d[58488] d[58488])
      }
      label _unused_continueLabel[58493]
      label _breakLabel[58492]
    }
    (508392 'move' ret[508387](508391 'deref' result[58457]))
    gotoReturn _end_+[508385] _end_+[508385]
    (474975 'end of statement' result[58457])
    label _end_+[508385]
    (508389 return ret[508387])
  }
  where {
    (58402 call chpl_TwoHomogTuples a[58389] b[58395])
  }
  function +[58540](arg a[58537]:_tuple[56199](?), arg b[58543]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508398] "RVV" "temp"
    unknown call_tmp[612229] "expr temp" "maybe param" "maybe type" "temp"
    (612232 'move' call_tmp[612229](58547 call size _mt[243] a[58537]))
    unknown call_tmp[612236] "expr temp" "maybe param" "maybe type" "temp"
    (612239 'move' call_tmp[612236](58551 call size _mt[243] b[58543]))
    unknown call_tmp[612241] "expr temp" "maybe param" "maybe type" "temp"
    (612244 'move' call_tmp[612241](58554 call != call_tmp[612229] call_tmp[612236]))
    unknown call_tmp[612246] "expr temp" "maybe param" "maybe type" "temp"
    (612249 'move' call_tmp[612246](58561 call _cond_test call_tmp[612241]))
    if call_tmp[612246]
    {
      (58559 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612253] "expr temp" "maybe param" "maybe type" "temp"
    (612256 'move' call_tmp[612253](58568 call size _mt[243] a[58537]))
    unknown call_tmp[612258] "expr temp" "maybe param" "maybe type" "temp"
    (612261 'move' call_tmp[612258](58572 call == call_tmp[612253] 1))
    unknown call_tmp[612263] "expr temp" "maybe param" "maybe type" "temp"
    (612266 'move' call_tmp[612263](58614 call _cond_test call_tmp[612258]))
    if call_tmp[612263]
    {
      unknown call_tmp[612268] "expr temp" "maybe param" "maybe type" "temp"
      (612271 'move' call_tmp[612268](58577 call a[58537] 0))
      unknown call_tmp[612273] "expr temp" "maybe param" "maybe type" "temp"
      (612276 'move' call_tmp[612273](58581 call b[58543] 0))
      unknown call_tmp[612278] "expr temp" "maybe param" "maybe type" "temp"
      (612281 'move' call_tmp[612278](58582 call + call_tmp[612268] call_tmp[612273]))
      unknown call_tmp[612283] "expr temp" "maybe param" "maybe type" "temp"
      (612286 'move' call_tmp[612283](58584 call _build_tuple call_tmp[612278]))
      (508403 'move' ret[508398](508402 'deref' call_tmp[612283]))
      gotoReturn _end_+[508396] _end_+[508396]
    }
    {
      unknown call_tmp[612288] "expr temp" "maybe param" "maybe type" "temp"
      (612291 'move' call_tmp[612288](58591 call a[58537] 0))
      unknown call_tmp[612293] "expr temp" "maybe param" "maybe type" "temp"
      (612296 'move' call_tmp[612293](58595 call b[58543] 0))
      unknown call_tmp[612298] "expr temp" "maybe param" "maybe type" "temp"
      (612301 'move' call_tmp[612298](58596 call + call_tmp[612288] call_tmp[612293]))
      unknown call_tmp[612303] "expr temp" "maybe param" "maybe type" "temp"
      (612306 'move' call_tmp[612303](58601 call chpl__tupleRest a[58537]))
      unknown call_tmp[612308] "expr temp" "maybe param" "maybe type" "temp"
      (612311 'move' call_tmp[612308](58605 call chpl__tupleRest b[58543]))
      unknown call_tmp[612313] "expr temp" "maybe param" "maybe type" "temp"
      (612316 'move' call_tmp[612313](58606 call + call_tmp[612303] call_tmp[612308]))
      unknown call_tmp[612318] "expr temp" "maybe param" "maybe type" "temp"
      (612321 'move' call_tmp[612318](58610 call _build_tuple call_tmp[612298](58608 'expand_tuple' call_tmp[612313])))
      (508408 'move' ret[508398](508407 'deref' call_tmp[612318]))
      gotoReturn _end_+[508396] _end_+[508396]
    }
    label _end_+[508396]
    (508400 return ret[508398])
  }
  function -[58628](arg a[58625]:_tuple[56199](?), arg b[58631]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508414] "RVV" "temp"
    unknown call_tmp[612325] "expr temp" "maybe param" "maybe type" "temp"
    (612328 'move' call_tmp[612325](58640 call size _mt[243] a[58625]))
    unknown call_tmp[612332] "expr temp" "maybe param" "maybe type" "temp"
    (612335 'move' call_tmp[612332](58644 call size _mt[243] b[58631]))
    unknown call_tmp[612337] "expr temp" "maybe param" "maybe type" "temp"
    (612340 'move' call_tmp[612337](58647 call != call_tmp[612325] call_tmp[612332]))
    unknown call_tmp[612342] "expr temp" "maybe param" "maybe type" "temp"
    (612345 'move' call_tmp[612342](58670 call _cond_test call_tmp[612337]))
    if call_tmp[612342]
    {
      (58668 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491649] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612347] "expr temp" "maybe param" "maybe type" "temp"
      (612350 'move' call_tmp[612347](58683 call a[58625] 0))
      unknown call_tmp[612352] "expr temp" "maybe param" "maybe type" "temp"
      (612355 'move' call_tmp[612352](58687 call b[58631] 0))
      unknown call_tmp[612357] "expr temp" "maybe param" "maybe type" "temp"
      (612360 'move' call_tmp[612357](58688 call - call_tmp[612347] call_tmp[612352]))
      (491653 'move' call_type_tmp[491649](58690 'typeof' call_tmp[612357]))
    }
    unknown result[58693] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612364] "expr temp" "maybe param" "maybe type" "temp"
    (612367 'move' call_tmp[612364](58677 call size _mt[243] a[58625]))
    unknown call_tmp[612369] "expr temp" "maybe param" "maybe type" "temp"
    (612372 'move' call_tmp[612369](58691 call * call_tmp[612364] call_type_tmp[491649]))
    (540909 'default init var' result[58693] call_tmp[612369])
    (58696 'end of statement')
    {
      unknown d[58724] "dead at end of block" "insert auto destroy"
      (540911 'init var' d[58724] 0)
      (474981 'end of statement')
      unknown tmp[58725] "maybe param" "temp"
      unknown call_tmp[612376] "expr temp" "maybe param" "maybe type" "temp"
      (612379 'move' call_tmp[612376](58699 call size _mt[243] a[58625]))
      unknown call_tmp[612381] "expr temp" "maybe param" "maybe type" "temp"
      (612384 'move' call_tmp[612381](58703 call - call_tmp[612376] 1))
      (58737 'move' tmp[58725](58735 call chpl_compute_low_param_loop_bound 0 call_tmp[612381]))
      unknown tmp[58726] "maybe param" "temp"
      unknown call_tmp[612388] "expr temp" "maybe param" "maybe type" "temp"
      (612391 'move' call_tmp[612388](58744 call size _mt[243] a[58625]))
      unknown call_tmp[612393] "expr temp" "maybe param" "maybe type" "temp"
      (612396 'move' call_tmp[612393](58742 call - call_tmp[612388] 1))
      (58750 'move' tmp[58726](58748 call chpl_compute_high_param_loop_bound 0 call_tmp[612393]))
      unknown tmp[58727] "maybe param" "temp"
      (58753 'move' tmp[58727] 1)
      ParamForLoop[58755]
      { d[58724] tmp[58725] tmp[58726] tmp[58727]
        unknown call_tmp[612398] "expr temp" "maybe param" "maybe type" "temp"
        (612401 'move' call_tmp[612398](58710 call result[58693] d[58724]))
        unknown call_tmp[612403] "expr temp" "maybe param" "maybe type" "temp"
        (612406 'move' call_tmp[612403](58714 call a[58625] d[58724]))
        unknown call_tmp[612408] "expr temp" "maybe param" "maybe type" "temp"
        (612411 'move' call_tmp[612408](58718 call b[58631] d[58724]))
        unknown call_tmp[612413] "expr temp" "maybe param" "maybe type" "temp"
        (612416 'move' call_tmp[612413](58719 call - call_tmp[612403] call_tmp[612408]))
        (58721 call = call_tmp[612398] call_tmp[612413])
        (474982 'end of statement' result[58693] d[58724] d[58724] d[58724])
      }
      label _unused_continueLabel[58729]
      label _breakLabel[58728]
    }
    (508419 'move' ret[508414](508418 'deref' result[58693]))
    gotoReturn _end_-[508412] _end_-[508412]
    (474987 'end of statement' result[58693])
    label _end_-[508412]
    (508416 return ret[508414])
  }
  where {
    (58638 call chpl_TwoHomogTuples a[58625] b[58631])
  }
  function -[58776](arg a[58773]:_tuple[56199](?), arg b[58779]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508425] "RVV" "temp"
    unknown call_tmp[612420] "expr temp" "maybe param" "maybe type" "temp"
    (612423 'move' call_tmp[612420](58783 call size _mt[243] a[58773]))
    unknown call_tmp[612427] "expr temp" "maybe param" "maybe type" "temp"
    (612430 'move' call_tmp[612427](58787 call size _mt[243] b[58779]))
    unknown call_tmp[612432] "expr temp" "maybe param" "maybe type" "temp"
    (612435 'move' call_tmp[612432](58790 call != call_tmp[612420] call_tmp[612427]))
    unknown call_tmp[612437] "expr temp" "maybe param" "maybe type" "temp"
    (612440 'move' call_tmp[612437](58797 call _cond_test call_tmp[612432]))
    if call_tmp[612437]
    {
      (58795 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612444] "expr temp" "maybe param" "maybe type" "temp"
    (612447 'move' call_tmp[612444](58804 call size _mt[243] a[58773]))
    unknown call_tmp[612449] "expr temp" "maybe param" "maybe type" "temp"
    (612452 'move' call_tmp[612449](58808 call == call_tmp[612444] 1))
    unknown call_tmp[612454] "expr temp" "maybe param" "maybe type" "temp"
    (612457 'move' call_tmp[612454](58850 call _cond_test call_tmp[612449]))
    if call_tmp[612454]
    {
      unknown call_tmp[612459] "expr temp" "maybe param" "maybe type" "temp"
      (612462 'move' call_tmp[612459](58813 call a[58773] 0))
      unknown call_tmp[612464] "expr temp" "maybe param" "maybe type" "temp"
      (612467 'move' call_tmp[612464](58817 call b[58779] 0))
      unknown call_tmp[612469] "expr temp" "maybe param" "maybe type" "temp"
      (612472 'move' call_tmp[612469](58818 call - call_tmp[612459] call_tmp[612464]))
      unknown call_tmp[612474] "expr temp" "maybe param" "maybe type" "temp"
      (612477 'move' call_tmp[612474](58820 call _build_tuple call_tmp[612469]))
      (508430 'move' ret[508425](508429 'deref' call_tmp[612474]))
      gotoReturn _end_-[508423] _end_-[508423]
    }
    {
      unknown call_tmp[612479] "expr temp" "maybe param" "maybe type" "temp"
      (612482 'move' call_tmp[612479](58827 call a[58773] 0))
      unknown call_tmp[612484] "expr temp" "maybe param" "maybe type" "temp"
      (612487 'move' call_tmp[612484](58831 call b[58779] 0))
      unknown call_tmp[612489] "expr temp" "maybe param" "maybe type" "temp"
      (612492 'move' call_tmp[612489](58832 call - call_tmp[612479] call_tmp[612484]))
      unknown call_tmp[612494] "expr temp" "maybe param" "maybe type" "temp"
      (612497 'move' call_tmp[612494](58837 call chpl__tupleRest a[58773]))
      unknown call_tmp[612499] "expr temp" "maybe param" "maybe type" "temp"
      (612502 'move' call_tmp[612499](58841 call chpl__tupleRest b[58779]))
      unknown call_tmp[612504] "expr temp" "maybe param" "maybe type" "temp"
      (612507 'move' call_tmp[612504](58842 call - call_tmp[612494] call_tmp[612499]))
      unknown call_tmp[612509] "expr temp" "maybe param" "maybe type" "temp"
      (612512 'move' call_tmp[612509](58846 call _build_tuple call_tmp[612489](58844 'expand_tuple' call_tmp[612504])))
      (508435 'move' ret[508425](508434 'deref' call_tmp[612509]))
      gotoReturn _end_-[508423] _end_-[508423]
    }
    label _end_-[508423]
    (508427 return ret[508425])
  }
  function *[58864](arg a[58861]:_tuple[56199](?), arg b[58867]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508441] "RVV" "temp"
    unknown call_tmp[612516] "expr temp" "maybe param" "maybe type" "temp"
    (612519 'move' call_tmp[612516](58876 call size _mt[243] a[58861]))
    unknown call_tmp[612523] "expr temp" "maybe param" "maybe type" "temp"
    (612526 'move' call_tmp[612523](58880 call size _mt[243] b[58867]))
    unknown call_tmp[612528] "expr temp" "maybe param" "maybe type" "temp"
    (612531 'move' call_tmp[612528](58883 call != call_tmp[612516] call_tmp[612523]))
    unknown call_tmp[612533] "expr temp" "maybe param" "maybe type" "temp"
    (612536 'move' call_tmp[612533](58906 call _cond_test call_tmp[612528]))
    if call_tmp[612533]
    {
      (58904 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491655] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612538] "expr temp" "maybe param" "maybe type" "temp"
      (612541 'move' call_tmp[612538](58919 call a[58861] 0))
      unknown call_tmp[612543] "expr temp" "maybe param" "maybe type" "temp"
      (612546 'move' call_tmp[612543](58923 call b[58867] 0))
      unknown call_tmp[612548] "expr temp" "maybe param" "maybe type" "temp"
      (612551 'move' call_tmp[612548](58924 call * call_tmp[612538] call_tmp[612543]))
      (491659 'move' call_type_tmp[491655](58926 'typeof' call_tmp[612548]))
    }
    unknown result[58929] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612555] "expr temp" "maybe param" "maybe type" "temp"
    (612558 'move' call_tmp[612555](58913 call size _mt[243] a[58861]))
    unknown call_tmp[612560] "expr temp" "maybe param" "maybe type" "temp"
    (612563 'move' call_tmp[612560](58927 call * call_tmp[612555] call_type_tmp[491655]))
    (540913 'default init var' result[58929] call_tmp[612560])
    (58932 'end of statement')
    {
      unknown d[58960] "dead at end of block" "insert auto destroy"
      (540915 'init var' d[58960] 0)
      (474993 'end of statement')
      unknown tmp[58961] "maybe param" "temp"
      unknown call_tmp[612567] "expr temp" "maybe param" "maybe type" "temp"
      (612570 'move' call_tmp[612567](58935 call size _mt[243] a[58861]))
      unknown call_tmp[612572] "expr temp" "maybe param" "maybe type" "temp"
      (612575 'move' call_tmp[612572](58939 call - call_tmp[612567] 1))
      (58973 'move' tmp[58961](58971 call chpl_compute_low_param_loop_bound 0 call_tmp[612572]))
      unknown tmp[58962] "maybe param" "temp"
      unknown call_tmp[612579] "expr temp" "maybe param" "maybe type" "temp"
      (612582 'move' call_tmp[612579](58980 call size _mt[243] a[58861]))
      unknown call_tmp[612584] "expr temp" "maybe param" "maybe type" "temp"
      (612587 'move' call_tmp[612584](58978 call - call_tmp[612579] 1))
      (58986 'move' tmp[58962](58984 call chpl_compute_high_param_loop_bound 0 call_tmp[612584]))
      unknown tmp[58963] "maybe param" "temp"
      (58989 'move' tmp[58963] 1)
      ParamForLoop[58991]
      { d[58960] tmp[58961] tmp[58962] tmp[58963]
        unknown call_tmp[612589] "expr temp" "maybe param" "maybe type" "temp"
        (612592 'move' call_tmp[612589](58946 call result[58929] d[58960]))
        unknown call_tmp[612594] "expr temp" "maybe param" "maybe type" "temp"
        (612597 'move' call_tmp[612594](58950 call a[58861] d[58960]))
        unknown call_tmp[612599] "expr temp" "maybe param" "maybe type" "temp"
        (612602 'move' call_tmp[612599](58954 call b[58867] d[58960]))
        unknown call_tmp[612604] "expr temp" "maybe param" "maybe type" "temp"
        (612607 'move' call_tmp[612604](58955 call * call_tmp[612594] call_tmp[612599]))
        (58957 call = call_tmp[612589] call_tmp[612604])
        (474994 'end of statement' result[58929] d[58960] d[58960] d[58960])
      }
      label _unused_continueLabel[58965]
      label _breakLabel[58964]
    }
    (508446 'move' ret[508441](508445 'deref' result[58929]))
    gotoReturn _end_*[508439] _end_*[508439]
    (474999 'end of statement' result[58929])
    label _end_*[508439]
    (508443 return ret[508441])
  }
  where {
    (58874 call chpl_TwoHomogTuples a[58861] b[58867])
  }
  function *[59012](arg a[59009]:_tuple[56199](?), arg b[59015]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508452] "RVV" "temp"
    unknown call_tmp[612611] "expr temp" "maybe param" "maybe type" "temp"
    (612614 'move' call_tmp[612611](59019 call size _mt[243] a[59009]))
    unknown call_tmp[612618] "expr temp" "maybe param" "maybe type" "temp"
    (612621 'move' call_tmp[612618](59023 call size _mt[243] b[59015]))
    unknown call_tmp[612623] "expr temp" "maybe param" "maybe type" "temp"
    (612626 'move' call_tmp[612623](59026 call != call_tmp[612611] call_tmp[612618]))
    unknown call_tmp[612628] "expr temp" "maybe param" "maybe type" "temp"
    (612631 'move' call_tmp[612628](59033 call _cond_test call_tmp[612623]))
    if call_tmp[612628]
    {
      (59031 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612635] "expr temp" "maybe param" "maybe type" "temp"
    (612638 'move' call_tmp[612635](59040 call size _mt[243] a[59009]))
    unknown call_tmp[612640] "expr temp" "maybe param" "maybe type" "temp"
    (612643 'move' call_tmp[612640](59044 call == call_tmp[612635] 1))
    unknown call_tmp[612645] "expr temp" "maybe param" "maybe type" "temp"
    (612648 'move' call_tmp[612645](59086 call _cond_test call_tmp[612640]))
    if call_tmp[612645]
    {
      unknown call_tmp[612650] "expr temp" "maybe param" "maybe type" "temp"
      (612653 'move' call_tmp[612650](59049 call a[59009] 0))
      unknown call_tmp[612655] "expr temp" "maybe param" "maybe type" "temp"
      (612658 'move' call_tmp[612655](59053 call b[59015] 0))
      unknown call_tmp[612660] "expr temp" "maybe param" "maybe type" "temp"
      (612663 'move' call_tmp[612660](59054 call * call_tmp[612650] call_tmp[612655]))
      unknown call_tmp[612665] "expr temp" "maybe param" "maybe type" "temp"
      (612668 'move' call_tmp[612665](59056 call _build_tuple call_tmp[612660]))
      (508457 'move' ret[508452](508456 'deref' call_tmp[612665]))
      gotoReturn _end_*[508450] _end_*[508450]
    }
    {
      unknown call_tmp[612670] "expr temp" "maybe param" "maybe type" "temp"
      (612673 'move' call_tmp[612670](59063 call a[59009] 0))
      unknown call_tmp[612675] "expr temp" "maybe param" "maybe type" "temp"
      (612678 'move' call_tmp[612675](59067 call b[59015] 0))
      unknown call_tmp[612680] "expr temp" "maybe param" "maybe type" "temp"
      (612683 'move' call_tmp[612680](59068 call * call_tmp[612670] call_tmp[612675]))
      unknown call_tmp[612685] "expr temp" "maybe param" "maybe type" "temp"
      (612688 'move' call_tmp[612685](59073 call chpl__tupleRest a[59009]))
      unknown call_tmp[612690] "expr temp" "maybe param" "maybe type" "temp"
      (612693 'move' call_tmp[612690](59077 call chpl__tupleRest b[59015]))
      unknown call_tmp[612695] "expr temp" "maybe param" "maybe type" "temp"
      (612698 'move' call_tmp[612695](59078 call * call_tmp[612685] call_tmp[612690]))
      unknown call_tmp[612700] "expr temp" "maybe param" "maybe type" "temp"
      (612703 'move' call_tmp[612700](59082 call _build_tuple call_tmp[612680](59080 'expand_tuple' call_tmp[612695])))
      (508462 'move' ret[508452](508461 'deref' call_tmp[612700]))
      gotoReturn _end_*[508450] _end_*[508450]
    }
    label _end_*[508450]
    (508454 return ret[508452])
  }
  function /[59100](arg a[59097]:_tuple[56199](?), arg b[59103]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508468] "RVV" "temp"
    unknown call_tmp[612707] "expr temp" "maybe param" "maybe type" "temp"
    (612710 'move' call_tmp[612707](59112 call size _mt[243] a[59097]))
    unknown call_tmp[612714] "expr temp" "maybe param" "maybe type" "temp"
    (612717 'move' call_tmp[612714](59116 call size _mt[243] b[59103]))
    unknown call_tmp[612719] "expr temp" "maybe param" "maybe type" "temp"
    (612722 'move' call_tmp[612719](59119 call != call_tmp[612707] call_tmp[612714]))
    unknown call_tmp[612724] "expr temp" "maybe param" "maybe type" "temp"
    (612727 'move' call_tmp[612724](59142 call _cond_test call_tmp[612719]))
    if call_tmp[612724]
    {
      (59140 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491661] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612729] "expr temp" "maybe param" "maybe type" "temp"
      (612732 'move' call_tmp[612729](59155 call a[59097] 0))
      unknown call_tmp[612734] "expr temp" "maybe param" "maybe type" "temp"
      (612737 'move' call_tmp[612734](59159 call b[59103] 0))
      unknown call_tmp[612739] "expr temp" "maybe param" "maybe type" "temp"
      (612742 'move' call_tmp[612739](59160 call / call_tmp[612729] call_tmp[612734]))
      (491665 'move' call_type_tmp[491661](59162 'typeof' call_tmp[612739]))
    }
    unknown result[59165] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612746] "expr temp" "maybe param" "maybe type" "temp"
    (612749 'move' call_tmp[612746](59149 call size _mt[243] a[59097]))
    unknown call_tmp[612751] "expr temp" "maybe param" "maybe type" "temp"
    (612754 'move' call_tmp[612751](59163 call * call_tmp[612746] call_type_tmp[491661]))
    (540917 'default init var' result[59165] call_tmp[612751])
    (59168 'end of statement')
    {
      unknown d[59196] "dead at end of block" "insert auto destroy"
      (540919 'init var' d[59196] 0)
      (475005 'end of statement')
      unknown tmp[59197] "maybe param" "temp"
      unknown call_tmp[612758] "expr temp" "maybe param" "maybe type" "temp"
      (612761 'move' call_tmp[612758](59171 call size _mt[243] a[59097]))
      unknown call_tmp[612763] "expr temp" "maybe param" "maybe type" "temp"
      (612766 'move' call_tmp[612763](59175 call - call_tmp[612758] 1))
      (59209 'move' tmp[59197](59207 call chpl_compute_low_param_loop_bound 0 call_tmp[612763]))
      unknown tmp[59198] "maybe param" "temp"
      unknown call_tmp[612770] "expr temp" "maybe param" "maybe type" "temp"
      (612773 'move' call_tmp[612770](59216 call size _mt[243] a[59097]))
      unknown call_tmp[612775] "expr temp" "maybe param" "maybe type" "temp"
      (612778 'move' call_tmp[612775](59214 call - call_tmp[612770] 1))
      (59222 'move' tmp[59198](59220 call chpl_compute_high_param_loop_bound 0 call_tmp[612775]))
      unknown tmp[59199] "maybe param" "temp"
      (59225 'move' tmp[59199] 1)
      ParamForLoop[59227]
      { d[59196] tmp[59197] tmp[59198] tmp[59199]
        unknown call_tmp[612780] "expr temp" "maybe param" "maybe type" "temp"
        (612783 'move' call_tmp[612780](59182 call result[59165] d[59196]))
        unknown call_tmp[612785] "expr temp" "maybe param" "maybe type" "temp"
        (612788 'move' call_tmp[612785](59186 call a[59097] d[59196]))
        unknown call_tmp[612790] "expr temp" "maybe param" "maybe type" "temp"
        (612793 'move' call_tmp[612790](59190 call b[59103] d[59196]))
        unknown call_tmp[612795] "expr temp" "maybe param" "maybe type" "temp"
        (612798 'move' call_tmp[612795](59191 call / call_tmp[612785] call_tmp[612790]))
        (59193 call = call_tmp[612780] call_tmp[612795])
        (475006 'end of statement' result[59165] d[59196] d[59196] d[59196])
      }
      label _unused_continueLabel[59201]
      label _breakLabel[59200]
    }
    (508473 'move' ret[508468](508472 'deref' result[59165]))
    gotoReturn _end_/[508466] _end_/[508466]
    (475011 'end of statement' result[59165])
    label _end_/[508466]
    (508470 return ret[508468])
  }
  where {
    (59110 call chpl_TwoHomogTuples a[59097] b[59103])
  }
  function /[59248](arg a[59245]:_tuple[56199](?), arg b[59251]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508479] "RVV" "temp"
    unknown call_tmp[612802] "expr temp" "maybe param" "maybe type" "temp"
    (612805 'move' call_tmp[612802](59255 call size _mt[243] a[59245]))
    unknown call_tmp[612809] "expr temp" "maybe param" "maybe type" "temp"
    (612812 'move' call_tmp[612809](59259 call size _mt[243] b[59251]))
    unknown call_tmp[612814] "expr temp" "maybe param" "maybe type" "temp"
    (612817 'move' call_tmp[612814](59262 call != call_tmp[612802] call_tmp[612809]))
    unknown call_tmp[612819] "expr temp" "maybe param" "maybe type" "temp"
    (612822 'move' call_tmp[612819](59269 call _cond_test call_tmp[612814]))
    if call_tmp[612819]
    {
      (59267 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612826] "expr temp" "maybe param" "maybe type" "temp"
    (612829 'move' call_tmp[612826](59276 call size _mt[243] a[59245]))
    unknown call_tmp[612831] "expr temp" "maybe param" "maybe type" "temp"
    (612834 'move' call_tmp[612831](59280 call == call_tmp[612826] 1))
    unknown call_tmp[612836] "expr temp" "maybe param" "maybe type" "temp"
    (612839 'move' call_tmp[612836](59322 call _cond_test call_tmp[612831]))
    if call_tmp[612836]
    {
      unknown call_tmp[612841] "expr temp" "maybe param" "maybe type" "temp"
      (612844 'move' call_tmp[612841](59285 call a[59245] 0))
      unknown call_tmp[612846] "expr temp" "maybe param" "maybe type" "temp"
      (612849 'move' call_tmp[612846](59289 call b[59251] 0))
      unknown call_tmp[612851] "expr temp" "maybe param" "maybe type" "temp"
      (612854 'move' call_tmp[612851](59290 call / call_tmp[612841] call_tmp[612846]))
      unknown call_tmp[612856] "expr temp" "maybe param" "maybe type" "temp"
      (612859 'move' call_tmp[612856](59292 call _build_tuple call_tmp[612851]))
      (508484 'move' ret[508479](508483 'deref' call_tmp[612856]))
      gotoReturn _end_/[508477] _end_/[508477]
    }
    {
      unknown call_tmp[612861] "expr temp" "maybe param" "maybe type" "temp"
      (612864 'move' call_tmp[612861](59299 call a[59245] 0))
      unknown call_tmp[612866] "expr temp" "maybe param" "maybe type" "temp"
      (612869 'move' call_tmp[612866](59303 call b[59251] 0))
      unknown call_tmp[612871] "expr temp" "maybe param" "maybe type" "temp"
      (612874 'move' call_tmp[612871](59304 call / call_tmp[612861] call_tmp[612866]))
      unknown call_tmp[612876] "expr temp" "maybe param" "maybe type" "temp"
      (612879 'move' call_tmp[612876](59309 call chpl__tupleRest a[59245]))
      unknown call_tmp[612881] "expr temp" "maybe param" "maybe type" "temp"
      (612884 'move' call_tmp[612881](59313 call chpl__tupleRest b[59251]))
      unknown call_tmp[612886] "expr temp" "maybe param" "maybe type" "temp"
      (612889 'move' call_tmp[612886](59314 call / call_tmp[612876] call_tmp[612881]))
      unknown call_tmp[612891] "expr temp" "maybe param" "maybe type" "temp"
      (612894 'move' call_tmp[612891](59318 call _build_tuple call_tmp[612871](59316 'expand_tuple' call_tmp[612886])))
      (508489 'move' ret[508479](508488 'deref' call_tmp[612891]))
      gotoReturn _end_/[508477] _end_/[508477]
    }
    label _end_/[508477]
    (508481 return ret[508479])
  }
  function %[59336](arg a[59333]:_tuple[56199](?), arg b[59339]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508495] "RVV" "temp"
    unknown call_tmp[612898] "expr temp" "maybe param" "maybe type" "temp"
    (612901 'move' call_tmp[612898](59348 call size _mt[243] a[59333]))
    unknown call_tmp[612905] "expr temp" "maybe param" "maybe type" "temp"
    (612908 'move' call_tmp[612905](59352 call size _mt[243] b[59339]))
    unknown call_tmp[612910] "expr temp" "maybe param" "maybe type" "temp"
    (612913 'move' call_tmp[612910](59355 call != call_tmp[612898] call_tmp[612905]))
    unknown call_tmp[612915] "expr temp" "maybe param" "maybe type" "temp"
    (612918 'move' call_tmp[612915](59378 call _cond_test call_tmp[612910]))
    if call_tmp[612915]
    {
      (59376 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491667] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612920] "expr temp" "maybe param" "maybe type" "temp"
      (612923 'move' call_tmp[612920](59391 call a[59333] 0))
      unknown call_tmp[612925] "expr temp" "maybe param" "maybe type" "temp"
      (612928 'move' call_tmp[612925](59395 call b[59339] 0))
      unknown call_tmp[612930] "expr temp" "maybe param" "maybe type" "temp"
      (612933 'move' call_tmp[612930](59396 call % call_tmp[612920] call_tmp[612925]))
      (491671 'move' call_type_tmp[491667](59398 'typeof' call_tmp[612930]))
    }
    unknown result[59401] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612937] "expr temp" "maybe param" "maybe type" "temp"
    (612940 'move' call_tmp[612937](59385 call size _mt[243] a[59333]))
    unknown call_tmp[612942] "expr temp" "maybe param" "maybe type" "temp"
    (612945 'move' call_tmp[612942](59399 call * call_tmp[612937] call_type_tmp[491667]))
    (540921 'default init var' result[59401] call_tmp[612942])
    (59404 'end of statement')
    {
      unknown d[59432] "dead at end of block" "insert auto destroy"
      (540923 'init var' d[59432] 0)
      (475017 'end of statement')
      unknown tmp[59433] "maybe param" "temp"
      unknown call_tmp[612949] "expr temp" "maybe param" "maybe type" "temp"
      (612952 'move' call_tmp[612949](59407 call size _mt[243] a[59333]))
      unknown call_tmp[612954] "expr temp" "maybe param" "maybe type" "temp"
      (612957 'move' call_tmp[612954](59411 call - call_tmp[612949] 1))
      (59445 'move' tmp[59433](59443 call chpl_compute_low_param_loop_bound 0 call_tmp[612954]))
      unknown tmp[59434] "maybe param" "temp"
      unknown call_tmp[612961] "expr temp" "maybe param" "maybe type" "temp"
      (612964 'move' call_tmp[612961](59452 call size _mt[243] a[59333]))
      unknown call_tmp[612966] "expr temp" "maybe param" "maybe type" "temp"
      (612969 'move' call_tmp[612966](59450 call - call_tmp[612961] 1))
      (59458 'move' tmp[59434](59456 call chpl_compute_high_param_loop_bound 0 call_tmp[612966]))
      unknown tmp[59435] "maybe param" "temp"
      (59461 'move' tmp[59435] 1)
      ParamForLoop[59463]
      { d[59432] tmp[59433] tmp[59434] tmp[59435]
        unknown call_tmp[612971] "expr temp" "maybe param" "maybe type" "temp"
        (612974 'move' call_tmp[612971](59418 call result[59401] d[59432]))
        unknown call_tmp[612976] "expr temp" "maybe param" "maybe type" "temp"
        (612979 'move' call_tmp[612976](59422 call a[59333] d[59432]))
        unknown call_tmp[612981] "expr temp" "maybe param" "maybe type" "temp"
        (612984 'move' call_tmp[612981](59426 call b[59339] d[59432]))
        unknown call_tmp[612986] "expr temp" "maybe param" "maybe type" "temp"
        (612989 'move' call_tmp[612986](59427 call % call_tmp[612976] call_tmp[612981]))
        (59429 call = call_tmp[612971] call_tmp[612986])
        (475018 'end of statement' result[59401] d[59432] d[59432] d[59432])
      }
      label _unused_continueLabel[59437]
      label _breakLabel[59436]
    }
    (508500 'move' ret[508495](508499 'deref' result[59401]))
    gotoReturn _end_%[508493] _end_%[508493]
    (475023 'end of statement' result[59401])
    label _end_%[508493]
    (508497 return ret[508495])
  }
  where {
    (59346 call chpl_TwoHomogTuples a[59333] b[59339])
  }
  function %[59484](arg a[59481]:_tuple[56199](?), arg b[59487]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508506] "RVV" "temp"
    unknown call_tmp[612993] "expr temp" "maybe param" "maybe type" "temp"
    (612996 'move' call_tmp[612993](59491 call size _mt[243] a[59481]))
    unknown call_tmp[613000] "expr temp" "maybe param" "maybe type" "temp"
    (613003 'move' call_tmp[613000](59495 call size _mt[243] b[59487]))
    unknown call_tmp[613005] "expr temp" "maybe param" "maybe type" "temp"
    (613008 'move' call_tmp[613005](59498 call != call_tmp[612993] call_tmp[613000]))
    unknown call_tmp[613010] "expr temp" "maybe param" "maybe type" "temp"
    (613013 'move' call_tmp[613010](59505 call _cond_test call_tmp[613005]))
    if call_tmp[613010]
    {
      (59503 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[613017] "expr temp" "maybe param" "maybe type" "temp"
    (613020 'move' call_tmp[613017](59512 call size _mt[243] a[59481]))
    unknown call_tmp[613022] "expr temp" "maybe param" "maybe type" "temp"
    (613025 'move' call_tmp[613022](59516 call == call_tmp[613017] 1))
    unknown call_tmp[613027] "expr temp" "maybe param" "maybe type" "temp"
    (613030 'move' call_tmp[613027](59558 call _cond_test call_tmp[613022]))
    if call_tmp[613027]
    {
      unknown call_tmp[613032] "expr temp" "maybe param" "maybe type" "temp"
      (613035 'move' call_tmp[613032](59521 call a[59481] 0))
      unknown call_tmp[613037] "expr temp" "maybe param" "maybe type" "temp"
      (613040 'move' call_tmp[613037](59525 call b[59487] 0))
      unknown call_tmp[613042] "expr temp" "maybe param" "maybe type" "temp"
      (613045 'move' call_tmp[613042](59526 call % call_tmp[613032] call_tmp[613037]))
      unknown call_tmp[613047] "expr temp" "maybe param" "maybe type" "temp"
      (613050 'move' call_tmp[613047](59528 call _build_tuple call_tmp[613042]))
      (508511 'move' ret[508506](508510 'deref' call_tmp[613047]))
      gotoReturn _end_%[508504] _end_%[508504]
    }
    {
      unknown call_tmp[613052] "expr temp" "maybe param" "maybe type" "temp"
      (613055 'move' call_tmp[613052](59535 call a[59481] 0))
      unknown call_tmp[613057] "expr temp" "maybe param" "maybe type" "temp"
      (613060 'move' call_tmp[613057](59539 call b[59487] 0))
      unknown call_tmp[613062] "expr temp" "maybe param" "maybe type" "temp"
      (613065 'move' call_tmp[613062](59540 call % call_tmp[613052] call_tmp[613057]))
      unknown call_tmp[613067] "expr temp" "maybe param" "maybe type" "temp"
      (613070 'move' call_tmp[613067](59545 call chpl__tupleRest a[59481]))
      unknown call_tmp[613072] "expr temp" "maybe param" "maybe type" "temp"
      (613075 'move' call_tmp[613072](59549 call chpl__tupleRest b[59487]))
      unknown call_tmp[613077] "expr temp" "maybe param" "maybe type" "temp"
      (613080 'move' call_tmp[613077](59550 call % call_tmp[613067] call_tmp[613072]))
      unknown call_tmp[613082] "expr temp" "maybe param" "maybe type" "temp"
      (613085 'move' call_tmp[613082](59554 call _build_tuple call_tmp[613062](59552 'expand_tuple' call_tmp[613077])))
      (508516 'move' ret[508506](508515 'deref' call_tmp[613082]))
      gotoReturn _end_%[508504] _end_%[508504]
    }
    label _end_%[508504]
    (508508 return ret[508506])
  }
  function **[59572](arg a[59569]:_tuple[56199](?), arg b[59575]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508522] "RVV" "temp"
    unknown call_tmp[613089] "expr temp" "maybe param" "maybe type" "temp"
    (613092 'move' call_tmp[613089](59584 call size _mt[243] a[59569]))
    unknown call_tmp[613096] "expr temp" "maybe param" "maybe type" "temp"
    (613099 'move' call_tmp[613096](59588 call size _mt[243] b[59575]))
    unknown call_tmp[613101] "expr temp" "maybe param" "maybe type" "temp"
    (613104 'move' call_tmp[613101](59591 call != call_tmp[613089] call_tmp[613096]))
    unknown call_tmp[613106] "expr temp" "maybe param" "maybe type" "temp"
    (613109 'move' call_tmp[613106](59614 call _cond_test call_tmp[613101]))
    if call_tmp[613106]
    {
      (59612 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491673] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613111] "expr temp" "maybe param" "maybe type" "temp"
      (613114 'move' call_tmp[613111](59627 call a[59569] 0))
      unknown call_tmp[613116] "expr temp" "maybe param" "maybe type" "temp"
      (613119 'move' call_tmp[613116](59631 call b[59575] 0))
      unknown call_tmp[613121] "expr temp" "maybe param" "maybe type" "temp"
      (613124 'move' call_tmp[613121](59632 call ** call_tmp[613111] call_tmp[613116]))
      (491677 'move' call_type_tmp[491673](59634 'typeof' call_tmp[613121]))
    }
    unknown result[59637] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613128] "expr temp" "maybe param" "maybe type" "temp"
    (613131 'move' call_tmp[613128](59621 call size _mt[243] a[59569]))
    unknown call_tmp[613133] "expr temp" "maybe param" "maybe type" "temp"
    (613136 'move' call_tmp[613133](59635 call * call_tmp[613128] call_type_tmp[491673]))
    (540925 'default init var' result[59637] call_tmp[613133])
    (59640 'end of statement')
    {
      unknown d[59668] "dead at end of block" "insert auto destroy"
      (540927 'init var' d[59668] 0)
      (475029 'end of statement')
      unknown tmp[59669] "maybe param" "temp"
      unknown call_tmp[613140] "expr temp" "maybe param" "maybe type" "temp"
      (613143 'move' call_tmp[613140](59643 call size _mt[243] a[59569]))
      unknown call_tmp[613145] "expr temp" "maybe param" "maybe type" "temp"
      (613148 'move' call_tmp[613145](59647 call - call_tmp[613140] 1))
      (59681 'move' tmp[59669](59679 call chpl_compute_low_param_loop_bound 0 call_tmp[613145]))
      unknown tmp[59670] "maybe param" "temp"
      unknown call_tmp[613152] "expr temp" "maybe param" "maybe type" "temp"
      (613155 'move' call_tmp[613152](59688 call size _mt[243] a[59569]))
      unknown call_tmp[613157] "expr temp" "maybe param" "maybe type" "temp"
      (613160 'move' call_tmp[613157](59686 call - call_tmp[613152] 1))
      (59694 'move' tmp[59670](59692 call chpl_compute_high_param_loop_bound 0 call_tmp[613157]))
      unknown tmp[59671] "maybe param" "temp"
      (59697 'move' tmp[59671] 1)
      ParamForLoop[59699]
      { d[59668] tmp[59669] tmp[59670] tmp[59671]
        unknown call_tmp[613162] "expr temp" "maybe param" "maybe type" "temp"
        (613165 'move' call_tmp[613162](59654 call result[59637] d[59668]))
        unknown call_tmp[613167] "expr temp" "maybe param" "maybe type" "temp"
        (613170 'move' call_tmp[613167](59658 call a[59569] d[59668]))
        unknown call_tmp[613172] "expr temp" "maybe param" "maybe type" "temp"
        (613175 'move' call_tmp[613172](59662 call b[59575] d[59668]))
        unknown call_tmp[613177] "expr temp" "maybe param" "maybe type" "temp"
        (613180 'move' call_tmp[613177](59663 call ** call_tmp[613167] call_tmp[613172]))
        (59665 call = call_tmp[613162] call_tmp[613177])
        (475030 'end of statement' result[59637] d[59668] d[59668] d[59668])
      }
      label _unused_continueLabel[59673]
      label _breakLabel[59672]
    }
    (508527 'move' ret[508522](508526 'deref' result[59637]))
    gotoReturn _end_**[508520] _end_**[508520]
    (475035 'end of statement' result[59637])
    label _end_**[508520]
    (508524 return ret[508522])
  }
  where {
    (59582 call chpl_TwoHomogTuples a[59569] b[59575])
  }
  function **[59720](arg a[59717]:_tuple[56199](?), arg b[59723]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508533] "RVV" "temp"
    unknown call_tmp[613184] "expr temp" "maybe param" "maybe type" "temp"
    (613187 'move' call_tmp[613184](59727 call size _mt[243] a[59717]))
    unknown call_tmp[613191] "expr temp" "maybe param" "maybe type" "temp"
    (613194 'move' call_tmp[613191](59731 call size _mt[243] b[59723]))
    unknown call_tmp[613196] "expr temp" "maybe param" "maybe type" "temp"
    (613199 'move' call_tmp[613196](59734 call != call_tmp[613184] call_tmp[613191]))
    unknown call_tmp[613201] "expr temp" "maybe param" "maybe type" "temp"
    (613204 'move' call_tmp[613201](59741 call _cond_test call_tmp[613196]))
    if call_tmp[613201]
    {
      (59739 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613208] "expr temp" "maybe param" "maybe type" "temp"
    (613211 'move' call_tmp[613208](59748 call size _mt[243] a[59717]))
    unknown call_tmp[613213] "expr temp" "maybe param" "maybe type" "temp"
    (613216 'move' call_tmp[613213](59752 call == call_tmp[613208] 1))
    unknown call_tmp[613218] "expr temp" "maybe param" "maybe type" "temp"
    (613221 'move' call_tmp[613218](59794 call _cond_test call_tmp[613213]))
    if call_tmp[613218]
    {
      unknown call_tmp[613223] "expr temp" "maybe param" "maybe type" "temp"
      (613226 'move' call_tmp[613223](59757 call a[59717] 0))
      unknown call_tmp[613228] "expr temp" "maybe param" "maybe type" "temp"
      (613231 'move' call_tmp[613228](59761 call b[59723] 0))
      unknown call_tmp[613233] "expr temp" "maybe param" "maybe type" "temp"
      (613236 'move' call_tmp[613233](59762 call ** call_tmp[613223] call_tmp[613228]))
      unknown call_tmp[613238] "expr temp" "maybe param" "maybe type" "temp"
      (613241 'move' call_tmp[613238](59764 call _build_tuple call_tmp[613233]))
      (508538 'move' ret[508533](508537 'deref' call_tmp[613238]))
      gotoReturn _end_**[508531] _end_**[508531]
    }
    {
      unknown call_tmp[613243] "expr temp" "maybe param" "maybe type" "temp"
      (613246 'move' call_tmp[613243](59771 call a[59717] 0))
      unknown call_tmp[613248] "expr temp" "maybe param" "maybe type" "temp"
      (613251 'move' call_tmp[613248](59775 call b[59723] 0))
      unknown call_tmp[613253] "expr temp" "maybe param" "maybe type" "temp"
      (613256 'move' call_tmp[613253](59776 call ** call_tmp[613243] call_tmp[613248]))
      unknown call_tmp[613258] "expr temp" "maybe param" "maybe type" "temp"
      (613261 'move' call_tmp[613258](59781 call chpl__tupleRest a[59717]))
      unknown call_tmp[613263] "expr temp" "maybe param" "maybe type" "temp"
      (613266 'move' call_tmp[613263](59785 call chpl__tupleRest b[59723]))
      unknown call_tmp[613268] "expr temp" "maybe param" "maybe type" "temp"
      (613271 'move' call_tmp[613268](59786 call ** call_tmp[613258] call_tmp[613263]))
      unknown call_tmp[613273] "expr temp" "maybe param" "maybe type" "temp"
      (613276 'move' call_tmp[613273](59790 call _build_tuple call_tmp[613253](59788 'expand_tuple' call_tmp[613268])))
      (508543 'move' ret[508533](508542 'deref' call_tmp[613273]))
      gotoReturn _end_**[508531] _end_**[508531]
    }
    label _end_**[508531]
    (508535 return ret[508533])
  }
  function &[59808](arg a[59805]:_tuple[56199](?), arg b[59811]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508549] "RVV" "temp"
    unknown call_tmp[613280] "expr temp" "maybe param" "maybe type" "temp"
    (613283 'move' call_tmp[613280](59820 call size _mt[243] a[59805]))
    unknown call_tmp[613287] "expr temp" "maybe param" "maybe type" "temp"
    (613290 'move' call_tmp[613287](59824 call size _mt[243] b[59811]))
    unknown call_tmp[613292] "expr temp" "maybe param" "maybe type" "temp"
    (613295 'move' call_tmp[613292](59827 call != call_tmp[613280] call_tmp[613287]))
    unknown call_tmp[613297] "expr temp" "maybe param" "maybe type" "temp"
    (613300 'move' call_tmp[613297](59850 call _cond_test call_tmp[613292]))
    if call_tmp[613297]
    {
      (59848 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491679] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613302] "expr temp" "maybe param" "maybe type" "temp"
      (613305 'move' call_tmp[613302](59863 call a[59805] 0))
      unknown call_tmp[613307] "expr temp" "maybe param" "maybe type" "temp"
      (613310 'move' call_tmp[613307](59867 call b[59811] 0))
      unknown call_tmp[613312] "expr temp" "maybe param" "maybe type" "temp"
      (613315 'move' call_tmp[613312](59868 call & call_tmp[613302] call_tmp[613307]))
      (491683 'move' call_type_tmp[491679](59870 'typeof' call_tmp[613312]))
    }
    unknown result[59873] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613319] "expr temp" "maybe param" "maybe type" "temp"
    (613322 'move' call_tmp[613319](59857 call size _mt[243] a[59805]))
    unknown call_tmp[613324] "expr temp" "maybe param" "maybe type" "temp"
    (613327 'move' call_tmp[613324](59871 call * call_tmp[613319] call_type_tmp[491679]))
    (540929 'default init var' result[59873] call_tmp[613324])
    (59876 'end of statement')
    {
      unknown d[59904] "dead at end of block" "insert auto destroy"
      (540931 'init var' d[59904] 0)
      (475041 'end of statement')
      unknown tmp[59905] "maybe param" "temp"
      unknown call_tmp[613331] "expr temp" "maybe param" "maybe type" "temp"
      (613334 'move' call_tmp[613331](59879 call size _mt[243] a[59805]))
      unknown call_tmp[613336] "expr temp" "maybe param" "maybe type" "temp"
      (613339 'move' call_tmp[613336](59883 call - call_tmp[613331] 1))
      (59917 'move' tmp[59905](59915 call chpl_compute_low_param_loop_bound 0 call_tmp[613336]))
      unknown tmp[59906] "maybe param" "temp"
      unknown call_tmp[613343] "expr temp" "maybe param" "maybe type" "temp"
      (613346 'move' call_tmp[613343](59924 call size _mt[243] a[59805]))
      unknown call_tmp[613348] "expr temp" "maybe param" "maybe type" "temp"
      (613351 'move' call_tmp[613348](59922 call - call_tmp[613343] 1))
      (59930 'move' tmp[59906](59928 call chpl_compute_high_param_loop_bound 0 call_tmp[613348]))
      unknown tmp[59907] "maybe param" "temp"
      (59933 'move' tmp[59907] 1)
      ParamForLoop[59935]
      { d[59904] tmp[59905] tmp[59906] tmp[59907]
        unknown call_tmp[613353] "expr temp" "maybe param" "maybe type" "temp"
        (613356 'move' call_tmp[613353](59890 call result[59873] d[59904]))
        unknown call_tmp[613358] "expr temp" "maybe param" "maybe type" "temp"
        (613361 'move' call_tmp[613358](59894 call a[59805] d[59904]))
        unknown call_tmp[613363] "expr temp" "maybe param" "maybe type" "temp"
        (613366 'move' call_tmp[613363](59898 call b[59811] d[59904]))
        unknown call_tmp[613368] "expr temp" "maybe param" "maybe type" "temp"
        (613371 'move' call_tmp[613368](59899 call & call_tmp[613358] call_tmp[613363]))
        (59901 call = call_tmp[613353] call_tmp[613368])
        (475042 'end of statement' result[59873] d[59904] d[59904] d[59904])
      }
      label _unused_continueLabel[59909]
      label _breakLabel[59908]
    }
    (508554 'move' ret[508549](508553 'deref' result[59873]))
    gotoReturn _end_&[508547] _end_&[508547]
    (475047 'end of statement' result[59873])
    label _end_&[508547]
    (508551 return ret[508549])
  }
  where {
    (59818 call chpl_TwoHomogTuples a[59805] b[59811])
  }
  function &[59956](arg a[59953]:_tuple[56199](?), arg b[59959]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508560] "RVV" "temp"
    unknown call_tmp[613375] "expr temp" "maybe param" "maybe type" "temp"
    (613378 'move' call_tmp[613375](59963 call size _mt[243] a[59953]))
    unknown call_tmp[613382] "expr temp" "maybe param" "maybe type" "temp"
    (613385 'move' call_tmp[613382](59967 call size _mt[243] b[59959]))
    unknown call_tmp[613387] "expr temp" "maybe param" "maybe type" "temp"
    (613390 'move' call_tmp[613387](59970 call != call_tmp[613375] call_tmp[613382]))
    unknown call_tmp[613392] "expr temp" "maybe param" "maybe type" "temp"
    (613395 'move' call_tmp[613392](59977 call _cond_test call_tmp[613387]))
    if call_tmp[613392]
    {
      (59975 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613399] "expr temp" "maybe param" "maybe type" "temp"
    (613402 'move' call_tmp[613399](59984 call size _mt[243] a[59953]))
    unknown call_tmp[613404] "expr temp" "maybe param" "maybe type" "temp"
    (613407 'move' call_tmp[613404](59988 call == call_tmp[613399] 1))
    unknown call_tmp[613409] "expr temp" "maybe param" "maybe type" "temp"
    (613412 'move' call_tmp[613409](60030 call _cond_test call_tmp[613404]))
    if call_tmp[613409]
    {
      unknown call_tmp[613414] "expr temp" "maybe param" "maybe type" "temp"
      (613417 'move' call_tmp[613414](59993 call a[59953] 0))
      unknown call_tmp[613419] "expr temp" "maybe param" "maybe type" "temp"
      (613422 'move' call_tmp[613419](59997 call b[59959] 0))
      unknown call_tmp[613424] "expr temp" "maybe param" "maybe type" "temp"
      (613427 'move' call_tmp[613424](59998 call & call_tmp[613414] call_tmp[613419]))
      unknown call_tmp[613429] "expr temp" "maybe param" "maybe type" "temp"
      (613432 'move' call_tmp[613429](60000 call _build_tuple call_tmp[613424]))
      (508565 'move' ret[508560](508564 'deref' call_tmp[613429]))
      gotoReturn _end_&[508558] _end_&[508558]
    }
    {
      unknown call_tmp[613434] "expr temp" "maybe param" "maybe type" "temp"
      (613437 'move' call_tmp[613434](60007 call a[59953] 0))
      unknown call_tmp[613439] "expr temp" "maybe param" "maybe type" "temp"
      (613442 'move' call_tmp[613439](60011 call b[59959] 0))
      unknown call_tmp[613444] "expr temp" "maybe param" "maybe type" "temp"
      (613447 'move' call_tmp[613444](60012 call & call_tmp[613434] call_tmp[613439]))
      unknown call_tmp[613449] "expr temp" "maybe param" "maybe type" "temp"
      (613452 'move' call_tmp[613449](60017 call chpl__tupleRest a[59953]))
      unknown call_tmp[613454] "expr temp" "maybe param" "maybe type" "temp"
      (613457 'move' call_tmp[613454](60021 call chpl__tupleRest b[59959]))
      unknown call_tmp[613459] "expr temp" "maybe param" "maybe type" "temp"
      (613462 'move' call_tmp[613459](60022 call & call_tmp[613449] call_tmp[613454]))
      unknown call_tmp[613464] "expr temp" "maybe param" "maybe type" "temp"
      (613467 'move' call_tmp[613464](60026 call _build_tuple call_tmp[613444](60024 'expand_tuple' call_tmp[613459])))
      (508570 'move' ret[508560](508569 'deref' call_tmp[613464]))
      gotoReturn _end_&[508558] _end_&[508558]
    }
    label _end_&[508558]
    (508562 return ret[508560])
  }
  function |[60044](arg a[60041]:_tuple[56199](?), arg b[60047]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508576] "RVV" "temp"
    unknown call_tmp[613471] "expr temp" "maybe param" "maybe type" "temp"
    (613474 'move' call_tmp[613471](60056 call size _mt[243] a[60041]))
    unknown call_tmp[613478] "expr temp" "maybe param" "maybe type" "temp"
    (613481 'move' call_tmp[613478](60060 call size _mt[243] b[60047]))
    unknown call_tmp[613483] "expr temp" "maybe param" "maybe type" "temp"
    (613486 'move' call_tmp[613483](60063 call != call_tmp[613471] call_tmp[613478]))
    unknown call_tmp[613488] "expr temp" "maybe param" "maybe type" "temp"
    (613491 'move' call_tmp[613488](60086 call _cond_test call_tmp[613483]))
    if call_tmp[613488]
    {
      (60084 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491685] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613493] "expr temp" "maybe param" "maybe type" "temp"
      (613496 'move' call_tmp[613493](60099 call a[60041] 0))
      unknown call_tmp[613498] "expr temp" "maybe param" "maybe type" "temp"
      (613501 'move' call_tmp[613498](60103 call b[60047] 0))
      unknown call_tmp[613503] "expr temp" "maybe param" "maybe type" "temp"
      (613506 'move' call_tmp[613503](60104 call | call_tmp[613493] call_tmp[613498]))
      (491689 'move' call_type_tmp[491685](60106 'typeof' call_tmp[613503]))
    }
    unknown result[60109] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613510] "expr temp" "maybe param" "maybe type" "temp"
    (613513 'move' call_tmp[613510](60093 call size _mt[243] a[60041]))
    unknown call_tmp[613515] "expr temp" "maybe param" "maybe type" "temp"
    (613518 'move' call_tmp[613515](60107 call * call_tmp[613510] call_type_tmp[491685]))
    (540933 'default init var' result[60109] call_tmp[613515])
    (60112 'end of statement')
    {
      unknown d[60140] "dead at end of block" "insert auto destroy"
      (540935 'init var' d[60140] 0)
      (475053 'end of statement')
      unknown tmp[60141] "maybe param" "temp"
      unknown call_tmp[613522] "expr temp" "maybe param" "maybe type" "temp"
      (613525 'move' call_tmp[613522](60115 call size _mt[243] a[60041]))
      unknown call_tmp[613527] "expr temp" "maybe param" "maybe type" "temp"
      (613530 'move' call_tmp[613527](60119 call - call_tmp[613522] 1))
      (60153 'move' tmp[60141](60151 call chpl_compute_low_param_loop_bound 0 call_tmp[613527]))
      unknown tmp[60142] "maybe param" "temp"
      unknown call_tmp[613534] "expr temp" "maybe param" "maybe type" "temp"
      (613537 'move' call_tmp[613534](60160 call size _mt[243] a[60041]))
      unknown call_tmp[613539] "expr temp" "maybe param" "maybe type" "temp"
      (613542 'move' call_tmp[613539](60158 call - call_tmp[613534] 1))
      (60166 'move' tmp[60142](60164 call chpl_compute_high_param_loop_bound 0 call_tmp[613539]))
      unknown tmp[60143] "maybe param" "temp"
      (60169 'move' tmp[60143] 1)
      ParamForLoop[60171]
      { d[60140] tmp[60141] tmp[60142] tmp[60143]
        unknown call_tmp[613544] "expr temp" "maybe param" "maybe type" "temp"
        (613547 'move' call_tmp[613544](60126 call result[60109] d[60140]))
        unknown call_tmp[613549] "expr temp" "maybe param" "maybe type" "temp"
        (613552 'move' call_tmp[613549](60130 call a[60041] d[60140]))
        unknown call_tmp[613554] "expr temp" "maybe param" "maybe type" "temp"
        (613557 'move' call_tmp[613554](60134 call b[60047] d[60140]))
        unknown call_tmp[613559] "expr temp" "maybe param" "maybe type" "temp"
        (613562 'move' call_tmp[613559](60135 call | call_tmp[613549] call_tmp[613554]))
        (60137 call = call_tmp[613544] call_tmp[613559])
        (475054 'end of statement' result[60109] d[60140] d[60140] d[60140])
      }
      label _unused_continueLabel[60145]
      label _breakLabel[60144]
    }
    (508581 'move' ret[508576](508580 'deref' result[60109]))
    gotoReturn _end_|[508574] _end_|[508574]
    (475059 'end of statement' result[60109])
    label _end_|[508574]
    (508578 return ret[508576])
  }
  where {
    (60054 call chpl_TwoHomogTuples a[60041] b[60047])
  }
  function |[60192](arg a[60189]:_tuple[56199](?), arg b[60195]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508587] "RVV" "temp"
    unknown call_tmp[613566] "expr temp" "maybe param" "maybe type" "temp"
    (613569 'move' call_tmp[613566](60199 call size _mt[243] a[60189]))
    unknown call_tmp[613573] "expr temp" "maybe param" "maybe type" "temp"
    (613576 'move' call_tmp[613573](60203 call size _mt[243] b[60195]))
    unknown call_tmp[613578] "expr temp" "maybe param" "maybe type" "temp"
    (613581 'move' call_tmp[613578](60206 call != call_tmp[613566] call_tmp[613573]))
    unknown call_tmp[613583] "expr temp" "maybe param" "maybe type" "temp"
    (613586 'move' call_tmp[613583](60213 call _cond_test call_tmp[613578]))
    if call_tmp[613583]
    {
      (60211 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613590] "expr temp" "maybe param" "maybe type" "temp"
    (613593 'move' call_tmp[613590](60220 call size _mt[243] a[60189]))
    unknown call_tmp[613595] "expr temp" "maybe param" "maybe type" "temp"
    (613598 'move' call_tmp[613595](60224 call == call_tmp[613590] 1))
    unknown call_tmp[613600] "expr temp" "maybe param" "maybe type" "temp"
    (613603 'move' call_tmp[613600](60266 call _cond_test call_tmp[613595]))
    if call_tmp[613600]
    {
      unknown call_tmp[613605] "expr temp" "maybe param" "maybe type" "temp"
      (613608 'move' call_tmp[613605](60229 call a[60189] 0))
      unknown call_tmp[613610] "expr temp" "maybe param" "maybe type" "temp"
      (613613 'move' call_tmp[613610](60233 call b[60195] 0))
      unknown call_tmp[613615] "expr temp" "maybe param" "maybe type" "temp"
      (613618 'move' call_tmp[613615](60234 call | call_tmp[613605] call_tmp[613610]))
      unknown call_tmp[613620] "expr temp" "maybe param" "maybe type" "temp"
      (613623 'move' call_tmp[613620](60236 call _build_tuple call_tmp[613615]))
      (508592 'move' ret[508587](508591 'deref' call_tmp[613620]))
      gotoReturn _end_|[508585] _end_|[508585]
    }
    {
      unknown call_tmp[613625] "expr temp" "maybe param" "maybe type" "temp"
      (613628 'move' call_tmp[613625](60243 call a[60189] 0))
      unknown call_tmp[613630] "expr temp" "maybe param" "maybe type" "temp"
      (613633 'move' call_tmp[613630](60247 call b[60195] 0))
      unknown call_tmp[613635] "expr temp" "maybe param" "maybe type" "temp"
      (613638 'move' call_tmp[613635](60248 call | call_tmp[613625] call_tmp[613630]))
      unknown call_tmp[613640] "expr temp" "maybe param" "maybe type" "temp"
      (613643 'move' call_tmp[613640](60253 call chpl__tupleRest a[60189]))
      unknown call_tmp[613645] "expr temp" "maybe param" "maybe type" "temp"
      (613648 'move' call_tmp[613645](60257 call chpl__tupleRest b[60195]))
      unknown call_tmp[613650] "expr temp" "maybe param" "maybe type" "temp"
      (613653 'move' call_tmp[613650](60258 call | call_tmp[613640] call_tmp[613645]))
      unknown call_tmp[613655] "expr temp" "maybe param" "maybe type" "temp"
      (613658 'move' call_tmp[613655](60262 call _build_tuple call_tmp[613635](60260 'expand_tuple' call_tmp[613650])))
      (508597 'move' ret[508587](508596 'deref' call_tmp[613655]))
      gotoReturn _end_|[508585] _end_|[508585]
    }
    label _end_|[508585]
    (508589 return ret[508587])
  }
  function ^[60280](arg a[60277]:_tuple[56199](?), arg b[60283]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508603] "RVV" "temp"
    unknown call_tmp[613662] "expr temp" "maybe param" "maybe type" "temp"
    (613665 'move' call_tmp[613662](60292 call size _mt[243] a[60277]))
    unknown call_tmp[613669] "expr temp" "maybe param" "maybe type" "temp"
    (613672 'move' call_tmp[613669](60296 call size _mt[243] b[60283]))
    unknown call_tmp[613674] "expr temp" "maybe param" "maybe type" "temp"
    (613677 'move' call_tmp[613674](60299 call != call_tmp[613662] call_tmp[613669]))
    unknown call_tmp[613679] "expr temp" "maybe param" "maybe type" "temp"
    (613682 'move' call_tmp[613679](60322 call _cond_test call_tmp[613674]))
    if call_tmp[613679]
    {
      (60320 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491691] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613684] "expr temp" "maybe param" "maybe type" "temp"
      (613687 'move' call_tmp[613684](60335 call a[60277] 0))
      unknown call_tmp[613689] "expr temp" "maybe param" "maybe type" "temp"
      (613692 'move' call_tmp[613689](60339 call b[60283] 0))
      unknown call_tmp[613694] "expr temp" "maybe param" "maybe type" "temp"
      (613697 'move' call_tmp[613694](60340 call ^ call_tmp[613684] call_tmp[613689]))
      (491695 'move' call_type_tmp[491691](60342 'typeof' call_tmp[613694]))
    }
    unknown result[60345] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613701] "expr temp" "maybe param" "maybe type" "temp"
    (613704 'move' call_tmp[613701](60329 call size _mt[243] a[60277]))
    unknown call_tmp[613706] "expr temp" "maybe param" "maybe type" "temp"
    (613709 'move' call_tmp[613706](60343 call * call_tmp[613701] call_type_tmp[491691]))
    (540937 'default init var' result[60345] call_tmp[613706])
    (60348 'end of statement')
    {
      unknown d[60376] "dead at end of block" "insert auto destroy"
      (540939 'init var' d[60376] 0)
      (475065 'end of statement')
      unknown tmp[60377] "maybe param" "temp"
      unknown call_tmp[613713] "expr temp" "maybe param" "maybe type" "temp"
      (613716 'move' call_tmp[613713](60351 call size _mt[243] a[60277]))
      unknown call_tmp[613718] "expr temp" "maybe param" "maybe type" "temp"
      (613721 'move' call_tmp[613718](60355 call - call_tmp[613713] 1))
      (60389 'move' tmp[60377](60387 call chpl_compute_low_param_loop_bound 0 call_tmp[613718]))
      unknown tmp[60378] "maybe param" "temp"
      unknown call_tmp[613725] "expr temp" "maybe param" "maybe type" "temp"
      (613728 'move' call_tmp[613725](60396 call size _mt[243] a[60277]))
      unknown call_tmp[613730] "expr temp" "maybe param" "maybe type" "temp"
      (613733 'move' call_tmp[613730](60394 call - call_tmp[613725] 1))
      (60402 'move' tmp[60378](60400 call chpl_compute_high_param_loop_bound 0 call_tmp[613730]))
      unknown tmp[60379] "maybe param" "temp"
      (60405 'move' tmp[60379] 1)
      ParamForLoop[60407]
      { d[60376] tmp[60377] tmp[60378] tmp[60379]
        unknown call_tmp[613735] "expr temp" "maybe param" "maybe type" "temp"
        (613738 'move' call_tmp[613735](60362 call result[60345] d[60376]))
        unknown call_tmp[613740] "expr temp" "maybe param" "maybe type" "temp"
        (613743 'move' call_tmp[613740](60366 call a[60277] d[60376]))
        unknown call_tmp[613745] "expr temp" "maybe param" "maybe type" "temp"
        (613748 'move' call_tmp[613745](60370 call b[60283] d[60376]))
        unknown call_tmp[613750] "expr temp" "maybe param" "maybe type" "temp"
        (613753 'move' call_tmp[613750](60371 call ^ call_tmp[613740] call_tmp[613745]))
        (60373 call = call_tmp[613735] call_tmp[613750])
        (475066 'end of statement' result[60345] d[60376] d[60376] d[60376])
      }
      label _unused_continueLabel[60381]
      label _breakLabel[60380]
    }
    (508608 'move' ret[508603](508607 'deref' result[60345]))
    gotoReturn _end_^[508601] _end_^[508601]
    (475071 'end of statement' result[60345])
    label _end_^[508601]
    (508605 return ret[508603])
  }
  where {
    (60290 call chpl_TwoHomogTuples a[60277] b[60283])
  }
  function ^[60428](arg a[60425]:_tuple[56199](?), arg b[60431]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508614] "RVV" "temp"
    unknown call_tmp[613757] "expr temp" "maybe param" "maybe type" "temp"
    (613760 'move' call_tmp[613757](60435 call size _mt[243] a[60425]))
    unknown call_tmp[613764] "expr temp" "maybe param" "maybe type" "temp"
    (613767 'move' call_tmp[613764](60439 call size _mt[243] b[60431]))
    unknown call_tmp[613769] "expr temp" "maybe param" "maybe type" "temp"
    (613772 'move' call_tmp[613769](60442 call != call_tmp[613757] call_tmp[613764]))
    unknown call_tmp[613774] "expr temp" "maybe param" "maybe type" "temp"
    (613777 'move' call_tmp[613774](60449 call _cond_test call_tmp[613769]))
    if call_tmp[613774]
    {
      (60447 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613781] "expr temp" "maybe param" "maybe type" "temp"
    (613784 'move' call_tmp[613781](60456 call size _mt[243] a[60425]))
    unknown call_tmp[613786] "expr temp" "maybe param" "maybe type" "temp"
    (613789 'move' call_tmp[613786](60460 call == call_tmp[613781] 1))
    unknown call_tmp[613791] "expr temp" "maybe param" "maybe type" "temp"
    (613794 'move' call_tmp[613791](60502 call _cond_test call_tmp[613786]))
    if call_tmp[613791]
    {
      unknown call_tmp[613796] "expr temp" "maybe param" "maybe type" "temp"
      (613799 'move' call_tmp[613796](60465 call a[60425] 0))
      unknown call_tmp[613801] "expr temp" "maybe param" "maybe type" "temp"
      (613804 'move' call_tmp[613801](60469 call b[60431] 0))
      unknown call_tmp[613806] "expr temp" "maybe param" "maybe type" "temp"
      (613809 'move' call_tmp[613806](60470 call ^ call_tmp[613796] call_tmp[613801]))
      unknown call_tmp[613811] "expr temp" "maybe param" "maybe type" "temp"
      (613814 'move' call_tmp[613811](60472 call _build_tuple call_tmp[613806]))
      (508619 'move' ret[508614](508618 'deref' call_tmp[613811]))
      gotoReturn _end_^[508612] _end_^[508612]
    }
    {
      unknown call_tmp[613816] "expr temp" "maybe param" "maybe type" "temp"
      (613819 'move' call_tmp[613816](60479 call a[60425] 0))
      unknown call_tmp[613821] "expr temp" "maybe param" "maybe type" "temp"
      (613824 'move' call_tmp[613821](60483 call b[60431] 0))
      unknown call_tmp[613826] "expr temp" "maybe param" "maybe type" "temp"
      (613829 'move' call_tmp[613826](60484 call ^ call_tmp[613816] call_tmp[613821]))
      unknown call_tmp[613831] "expr temp" "maybe param" "maybe type" "temp"
      (613834 'move' call_tmp[613831](60489 call chpl__tupleRest a[60425]))
      unknown call_tmp[613836] "expr temp" "maybe param" "maybe type" "temp"
      (613839 'move' call_tmp[613836](60493 call chpl__tupleRest b[60431]))
      unknown call_tmp[613841] "expr temp" "maybe param" "maybe type" "temp"
      (613844 'move' call_tmp[613841](60494 call ^ call_tmp[613831] call_tmp[613836]))
      unknown call_tmp[613846] "expr temp" "maybe param" "maybe type" "temp"
      (613849 'move' call_tmp[613846](60498 call _build_tuple call_tmp[613826](60496 'expand_tuple' call_tmp[613841])))
      (508624 'move' ret[508614](508623 'deref' call_tmp[613846]))
      gotoReturn _end_^[508612] _end_^[508612]
    }
    label _end_^[508612]
    (508616 return ret[508614])
  }
  function <<[60516](arg a[60513]:_tuple[56199](?), arg b[60519]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508630] "RVV" "temp"
    unknown call_tmp[613853] "expr temp" "maybe param" "maybe type" "temp"
    (613856 'move' call_tmp[613853](60528 call size _mt[243] a[60513]))
    unknown call_tmp[613860] "expr temp" "maybe param" "maybe type" "temp"
    (613863 'move' call_tmp[613860](60532 call size _mt[243] b[60519]))
    unknown call_tmp[613865] "expr temp" "maybe param" "maybe type" "temp"
    (613868 'move' call_tmp[613865](60535 call != call_tmp[613853] call_tmp[613860]))
    unknown call_tmp[613870] "expr temp" "maybe param" "maybe type" "temp"
    (613873 'move' call_tmp[613870](60558 call _cond_test call_tmp[613865]))
    if call_tmp[613870]
    {
      (60556 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491697] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613875] "expr temp" "maybe param" "maybe type" "temp"
      (613878 'move' call_tmp[613875](60571 call a[60513] 0))
      unknown call_tmp[613880] "expr temp" "maybe param" "maybe type" "temp"
      (613883 'move' call_tmp[613880](60575 call b[60519] 0))
      unknown call_tmp[613885] "expr temp" "maybe param" "maybe type" "temp"
      (613888 'move' call_tmp[613885](60576 call << call_tmp[613875] call_tmp[613880]))
      (491701 'move' call_type_tmp[491697](60578 'typeof' call_tmp[613885]))
    }
    unknown result[60581] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613892] "expr temp" "maybe param" "maybe type" "temp"
    (613895 'move' call_tmp[613892](60565 call size _mt[243] a[60513]))
    unknown call_tmp[613897] "expr temp" "maybe param" "maybe type" "temp"
    (613900 'move' call_tmp[613897](60579 call * call_tmp[613892] call_type_tmp[491697]))
    (540941 'default init var' result[60581] call_tmp[613897])
    (60584 'end of statement')
    {
      unknown d[60612] "dead at end of block" "insert auto destroy"
      (540943 'init var' d[60612] 0)
      (475077 'end of statement')
      unknown tmp[60613] "maybe param" "temp"
      unknown call_tmp[613904] "expr temp" "maybe param" "maybe type" "temp"
      (613907 'move' call_tmp[613904](60587 call size _mt[243] a[60513]))
      unknown call_tmp[613909] "expr temp" "maybe param" "maybe type" "temp"
      (613912 'move' call_tmp[613909](60591 call - call_tmp[613904] 1))
      (60625 'move' tmp[60613](60623 call chpl_compute_low_param_loop_bound 0 call_tmp[613909]))
      unknown tmp[60614] "maybe param" "temp"
      unknown call_tmp[613916] "expr temp" "maybe param" "maybe type" "temp"
      (613919 'move' call_tmp[613916](60632 call size _mt[243] a[60513]))
      unknown call_tmp[613921] "expr temp" "maybe param" "maybe type" "temp"
      (613924 'move' call_tmp[613921](60630 call - call_tmp[613916] 1))
      (60638 'move' tmp[60614](60636 call chpl_compute_high_param_loop_bound 0 call_tmp[613921]))
      unknown tmp[60615] "maybe param" "temp"
      (60641 'move' tmp[60615] 1)
      ParamForLoop[60643]
      { d[60612] tmp[60613] tmp[60614] tmp[60615]
        unknown call_tmp[613926] "expr temp" "maybe param" "maybe type" "temp"
        (613929 'move' call_tmp[613926](60598 call result[60581] d[60612]))
        unknown call_tmp[613931] "expr temp" "maybe param" "maybe type" "temp"
        (613934 'move' call_tmp[613931](60602 call a[60513] d[60612]))
        unknown call_tmp[613936] "expr temp" "maybe param" "maybe type" "temp"
        (613939 'move' call_tmp[613936](60606 call b[60519] d[60612]))
        unknown call_tmp[613941] "expr temp" "maybe param" "maybe type" "temp"
        (613944 'move' call_tmp[613941](60607 call << call_tmp[613931] call_tmp[613936]))
        (60609 call = call_tmp[613926] call_tmp[613941])
        (475078 'end of statement' result[60581] d[60612] d[60612] d[60612])
      }
      label _unused_continueLabel[60617]
      label _breakLabel[60616]
    }
    (508635 'move' ret[508630](508634 'deref' result[60581]))
    gotoReturn _end_<<[508628] _end_<<[508628]
    (475083 'end of statement' result[60581])
    label _end_<<[508628]
    (508632 return ret[508630])
  }
  where {
    (60526 call chpl_TwoHomogTuples a[60513] b[60519])
  }
  function <<[60664](arg a[60661]:_tuple[56199](?), arg b[60667]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508641] "RVV" "temp"
    unknown call_tmp[613948] "expr temp" "maybe param" "maybe type" "temp"
    (613951 'move' call_tmp[613948](60671 call size _mt[243] a[60661]))
    unknown call_tmp[613955] "expr temp" "maybe param" "maybe type" "temp"
    (613958 'move' call_tmp[613955](60675 call size _mt[243] b[60667]))
    unknown call_tmp[613960] "expr temp" "maybe param" "maybe type" "temp"
    (613963 'move' call_tmp[613960](60678 call != call_tmp[613948] call_tmp[613955]))
    unknown call_tmp[613965] "expr temp" "maybe param" "maybe type" "temp"
    (613968 'move' call_tmp[613965](60685 call _cond_test call_tmp[613960]))
    if call_tmp[613965]
    {
      (60683 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[613972] "expr temp" "maybe param" "maybe type" "temp"
    (613975 'move' call_tmp[613972](60692 call size _mt[243] a[60661]))
    unknown call_tmp[613977] "expr temp" "maybe param" "maybe type" "temp"
    (613980 'move' call_tmp[613977](60696 call == call_tmp[613972] 1))
    unknown call_tmp[613982] "expr temp" "maybe param" "maybe type" "temp"
    (613985 'move' call_tmp[613982](60738 call _cond_test call_tmp[613977]))
    if call_tmp[613982]
    {
      unknown call_tmp[613987] "expr temp" "maybe param" "maybe type" "temp"
      (613990 'move' call_tmp[613987](60701 call a[60661] 0))
      unknown call_tmp[613992] "expr temp" "maybe param" "maybe type" "temp"
      (613995 'move' call_tmp[613992](60705 call b[60667] 0))
      unknown call_tmp[613997] "expr temp" "maybe param" "maybe type" "temp"
      (614000 'move' call_tmp[613997](60706 call << call_tmp[613987] call_tmp[613992]))
      unknown call_tmp[614002] "expr temp" "maybe param" "maybe type" "temp"
      (614005 'move' call_tmp[614002](60708 call _build_tuple call_tmp[613997]))
      (508646 'move' ret[508641](508645 'deref' call_tmp[614002]))
      gotoReturn _end_<<[508639] _end_<<[508639]
    }
    {
      unknown call_tmp[614007] "expr temp" "maybe param" "maybe type" "temp"
      (614010 'move' call_tmp[614007](60715 call a[60661] 0))
      unknown call_tmp[614012] "expr temp" "maybe param" "maybe type" "temp"
      (614015 'move' call_tmp[614012](60719 call b[60667] 0))
      unknown call_tmp[614017] "expr temp" "maybe param" "maybe type" "temp"
      (614020 'move' call_tmp[614017](60720 call << call_tmp[614007] call_tmp[614012]))
      unknown call_tmp[614022] "expr temp" "maybe param" "maybe type" "temp"
      (614025 'move' call_tmp[614022](60725 call chpl__tupleRest a[60661]))
      unknown call_tmp[614027] "expr temp" "maybe param" "maybe type" "temp"
      (614030 'move' call_tmp[614027](60729 call chpl__tupleRest b[60667]))
      unknown call_tmp[614032] "expr temp" "maybe param" "maybe type" "temp"
      (614035 'move' call_tmp[614032](60730 call << call_tmp[614022] call_tmp[614027]))
      unknown call_tmp[614037] "expr temp" "maybe param" "maybe type" "temp"
      (614040 'move' call_tmp[614037](60734 call _build_tuple call_tmp[614017](60732 'expand_tuple' call_tmp[614032])))
      (508651 'move' ret[508641](508650 'deref' call_tmp[614037]))
      gotoReturn _end_<<[508639] _end_<<[508639]
    }
    label _end_<<[508639]
    (508643 return ret[508641])
  }
  function >>[60752](arg a[60749]:_tuple[56199](?), arg b[60755]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508657] "RVV" "temp"
    unknown call_tmp[614044] "expr temp" "maybe param" "maybe type" "temp"
    (614047 'move' call_tmp[614044](60764 call size _mt[243] a[60749]))
    unknown call_tmp[614051] "expr temp" "maybe param" "maybe type" "temp"
    (614054 'move' call_tmp[614051](60768 call size _mt[243] b[60755]))
    unknown call_tmp[614056] "expr temp" "maybe param" "maybe type" "temp"
    (614059 'move' call_tmp[614056](60771 call != call_tmp[614044] call_tmp[614051]))
    unknown call_tmp[614061] "expr temp" "maybe param" "maybe type" "temp"
    (614064 'move' call_tmp[614061](60794 call _cond_test call_tmp[614056]))
    if call_tmp[614061]
    {
      (60792 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491703] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614066] "expr temp" "maybe param" "maybe type" "temp"
      (614069 'move' call_tmp[614066](60807 call a[60749] 0))
      unknown call_tmp[614071] "expr temp" "maybe param" "maybe type" "temp"
      (614074 'move' call_tmp[614071](60811 call b[60755] 0))
      unknown call_tmp[614076] "expr temp" "maybe param" "maybe type" "temp"
      (614079 'move' call_tmp[614076](60812 call >> call_tmp[614066] call_tmp[614071]))
      (491707 'move' call_type_tmp[491703](60814 'typeof' call_tmp[614076]))
    }
    unknown result[60817] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614083] "expr temp" "maybe param" "maybe type" "temp"
    (614086 'move' call_tmp[614083](60801 call size _mt[243] a[60749]))
    unknown call_tmp[614088] "expr temp" "maybe param" "maybe type" "temp"
    (614091 'move' call_tmp[614088](60815 call * call_tmp[614083] call_type_tmp[491703]))
    (540945 'default init var' result[60817] call_tmp[614088])
    (60820 'end of statement')
    {
      unknown d[60848] "dead at end of block" "insert auto destroy"
      (540947 'init var' d[60848] 0)
      (475089 'end of statement')
      unknown tmp[60849] "maybe param" "temp"
      unknown call_tmp[614095] "expr temp" "maybe param" "maybe type" "temp"
      (614098 'move' call_tmp[614095](60823 call size _mt[243] a[60749]))
      unknown call_tmp[614100] "expr temp" "maybe param" "maybe type" "temp"
      (614103 'move' call_tmp[614100](60827 call - call_tmp[614095] 1))
      (60861 'move' tmp[60849](60859 call chpl_compute_low_param_loop_bound 0 call_tmp[614100]))
      unknown tmp[60850] "maybe param" "temp"
      unknown call_tmp[614107] "expr temp" "maybe param" "maybe type" "temp"
      (614110 'move' call_tmp[614107](60868 call size _mt[243] a[60749]))
      unknown call_tmp[614112] "expr temp" "maybe param" "maybe type" "temp"
      (614115 'move' call_tmp[614112](60866 call - call_tmp[614107] 1))
      (60874 'move' tmp[60850](60872 call chpl_compute_high_param_loop_bound 0 call_tmp[614112]))
      unknown tmp[60851] "maybe param" "temp"
      (60877 'move' tmp[60851] 1)
      ParamForLoop[60879]
      { d[60848] tmp[60849] tmp[60850] tmp[60851]
        unknown call_tmp[614117] "expr temp" "maybe param" "maybe type" "temp"
        (614120 'move' call_tmp[614117](60834 call result[60817] d[60848]))
        unknown call_tmp[614122] "expr temp" "maybe param" "maybe type" "temp"
        (614125 'move' call_tmp[614122](60838 call a[60749] d[60848]))
        unknown call_tmp[614127] "expr temp" "maybe param" "maybe type" "temp"
        (614130 'move' call_tmp[614127](60842 call b[60755] d[60848]))
        unknown call_tmp[614132] "expr temp" "maybe param" "maybe type" "temp"
        (614135 'move' call_tmp[614132](60843 call >> call_tmp[614122] call_tmp[614127]))
        (60845 call = call_tmp[614117] call_tmp[614132])
        (475090 'end of statement' result[60817] d[60848] d[60848] d[60848])
      }
      label _unused_continueLabel[60853]
      label _breakLabel[60852]
    }
    (508662 'move' ret[508657](508661 'deref' result[60817]))
    gotoReturn _end_>>[508655] _end_>>[508655]
    (475095 'end of statement' result[60817])
    label _end_>>[508655]
    (508659 return ret[508657])
  }
  where {
    (60762 call chpl_TwoHomogTuples a[60749] b[60755])
  }
  function >>[60900](arg a[60897]:_tuple[56199](?), arg b[60903]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508668] "RVV" "temp"
    unknown call_tmp[614139] "expr temp" "maybe param" "maybe type" "temp"
    (614142 'move' call_tmp[614139](60907 call size _mt[243] a[60897]))
    unknown call_tmp[614146] "expr temp" "maybe param" "maybe type" "temp"
    (614149 'move' call_tmp[614146](60911 call size _mt[243] b[60903]))
    unknown call_tmp[614151] "expr temp" "maybe param" "maybe type" "temp"
    (614154 'move' call_tmp[614151](60914 call != call_tmp[614139] call_tmp[614146]))
    unknown call_tmp[614156] "expr temp" "maybe param" "maybe type" "temp"
    (614159 'move' call_tmp[614156](60921 call _cond_test call_tmp[614151]))
    if call_tmp[614156]
    {
      (60919 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614163] "expr temp" "maybe param" "maybe type" "temp"
    (614166 'move' call_tmp[614163](60928 call size _mt[243] a[60897]))
    unknown call_tmp[614168] "expr temp" "maybe param" "maybe type" "temp"
    (614171 'move' call_tmp[614168](60932 call == call_tmp[614163] 1))
    unknown call_tmp[614173] "expr temp" "maybe param" "maybe type" "temp"
    (614176 'move' call_tmp[614173](60974 call _cond_test call_tmp[614168]))
    if call_tmp[614173]
    {
      unknown call_tmp[614178] "expr temp" "maybe param" "maybe type" "temp"
      (614181 'move' call_tmp[614178](60937 call a[60897] 0))
      unknown call_tmp[614183] "expr temp" "maybe param" "maybe type" "temp"
      (614186 'move' call_tmp[614183](60941 call b[60903] 0))
      unknown call_tmp[614188] "expr temp" "maybe param" "maybe type" "temp"
      (614191 'move' call_tmp[614188](60942 call >> call_tmp[614178] call_tmp[614183]))
      unknown call_tmp[614193] "expr temp" "maybe param" "maybe type" "temp"
      (614196 'move' call_tmp[614193](60944 call _build_tuple call_tmp[614188]))
      (508673 'move' ret[508668](508672 'deref' call_tmp[614193]))
      gotoReturn _end_>>[508666] _end_>>[508666]
    }
    {
      unknown call_tmp[614198] "expr temp" "maybe param" "maybe type" "temp"
      (614201 'move' call_tmp[614198](60951 call a[60897] 0))
      unknown call_tmp[614203] "expr temp" "maybe param" "maybe type" "temp"
      (614206 'move' call_tmp[614203](60955 call b[60903] 0))
      unknown call_tmp[614208] "expr temp" "maybe param" "maybe type" "temp"
      (614211 'move' call_tmp[614208](60956 call >> call_tmp[614198] call_tmp[614203]))
      unknown call_tmp[614213] "expr temp" "maybe param" "maybe type" "temp"
      (614216 'move' call_tmp[614213](60961 call chpl__tupleRest a[60897]))
      unknown call_tmp[614218] "expr temp" "maybe param" "maybe type" "temp"
      (614221 'move' call_tmp[614218](60965 call chpl__tupleRest b[60903]))
      unknown call_tmp[614223] "expr temp" "maybe param" "maybe type" "temp"
      (614226 'move' call_tmp[614223](60966 call >> call_tmp[614213] call_tmp[614218]))
      unknown call_tmp[614228] "expr temp" "maybe param" "maybe type" "temp"
      (614231 'move' call_tmp[614228](60970 call _build_tuple call_tmp[614208](60968 'expand_tuple' call_tmp[614223])))
      (508678 'move' ret[508668](508677 'deref' call_tmp[614228]))
      gotoReturn _end_>>[508666] _end_>>[508666]
    }
    label _end_>>[508666]
    (508670 return ret[508668])
  }
  function >[60988](arg a[60985]:_tuple[56199](?), arg b[60991]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508684] "RVV" "temp"
    unknown call_tmp[614235] "expr temp" "maybe param" "maybe type" "temp"
    (614238 'move' call_tmp[614235](60995 call size _mt[243] a[60985]))
    unknown call_tmp[614242] "expr temp" "maybe param" "maybe type" "temp"
    (614245 'move' call_tmp[614242](60999 call size _mt[243] b[60991]))
    unknown call_tmp[614247] "expr temp" "maybe param" "maybe type" "temp"
    (614250 'move' call_tmp[614247](61002 call != call_tmp[614235] call_tmp[614242]))
    unknown call_tmp[614252] "expr temp" "maybe param" "maybe type" "temp"
    (614255 'move' call_tmp[614252](61025 call _cond_test call_tmp[614247]))
    if call_tmp[614252]
    {
      (61023 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61078] "dead at end of block" "insert auto destroy"
      (540949 'init var' i[61078] 0)
      (475101 'end of statement')
      unknown tmp[61079] "maybe param" "temp"
      unknown call_tmp[614259] "expr temp" "maybe param" "maybe type" "temp"
      (614262 'move' call_tmp[614259](61033 call size _mt[243] a[60985]))
      unknown call_tmp[614264] "expr temp" "maybe param" "maybe type" "temp"
      (614267 'move' call_tmp[614264](61037 call - call_tmp[614259] 1))
      (61091 'move' tmp[61079](61089 call chpl_compute_low_param_loop_bound 0 call_tmp[614264]))
      unknown tmp[61080] "maybe param" "temp"
      unknown call_tmp[614271] "expr temp" "maybe param" "maybe type" "temp"
      (614274 'move' call_tmp[614271](61098 call size _mt[243] a[60985]))
      unknown call_tmp[614276] "expr temp" "maybe param" "maybe type" "temp"
      (614279 'move' call_tmp[614276](61096 call - call_tmp[614271] 1))
      (61104 'move' tmp[61080](61102 call chpl_compute_high_param_loop_bound 0 call_tmp[614276]))
      unknown tmp[61081] "maybe param" "temp"
      (61107 'move' tmp[61081] 1)
      ParamForLoop[61109]
      { i[61078] tmp[61079] tmp[61080] tmp[61081]
        unknown call_tmp[614281] "expr temp" "maybe param" "maybe type" "temp"
        (614284 'move' call_tmp[614281](61044 call a[60985] i[61078]))
        unknown call_tmp[614286] "expr temp" "maybe param" "maybe type" "temp"
        (614289 'move' call_tmp[614286](61048 call b[60991] i[61078]))
        unknown call_tmp[614291] "expr temp" "maybe param" "maybe type" "temp"
        (614294 'move' call_tmp[614291](61049 call > call_tmp[614281] call_tmp[614286]))
        unknown call_tmp[614296] "expr temp" "maybe param" "maybe type" "temp"
        (614299 'move' call_tmp[614296](61072 call _cond_test call_tmp[614291]))
        if call_tmp[614296]
        {
          (508689 'move' ret[508684](508688 'deref' 1))
          gotoReturn _end_>[508682] _end_>[508682]
        }
        {
          unknown call_tmp[614301] "expr temp" "maybe param" "maybe type" "temp"
          (614304 'move' call_tmp[614301](61057 call a[60985] i[61078]))
          unknown call_tmp[614306] "expr temp" "maybe param" "maybe type" "temp"
          (614309 'move' call_tmp[614306](61061 call b[60991] i[61078]))
          unknown call_tmp[614311] "expr temp" "maybe param" "maybe type" "temp"
          (614314 'move' call_tmp[614311](61062 call < call_tmp[614301] call_tmp[614306]))
          unknown call_tmp[614316] "expr temp" "maybe param" "maybe type" "temp"
          (614319 'move' call_tmp[614316](61067 call _cond_test call_tmp[614311]))
          if call_tmp[614316]
          {
            (508694 'move' ret[508684](508693 'deref' 0))
            gotoReturn _end_>[508682] _end_>[508682]
          }
        }
      }
      label _unused_continueLabel[61083]
      label _breakLabel[61082]
    }
    (508699 'move' ret[508684](508698 'deref' 0))
    label _end_>[508682]
    (508686 return ret[508684])
  }
  function >=[61129](arg a[61126]:_tuple[56199](?), arg b[61132]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508703] "RVV" "temp"
    unknown call_tmp[614323] "expr temp" "maybe param" "maybe type" "temp"
    (614326 'move' call_tmp[614323](61136 call size _mt[243] a[61126]))
    unknown call_tmp[614330] "expr temp" "maybe param" "maybe type" "temp"
    (614333 'move' call_tmp[614330](61140 call size _mt[243] b[61132]))
    unknown call_tmp[614335] "expr temp" "maybe param" "maybe type" "temp"
    (614338 'move' call_tmp[614335](61143 call != call_tmp[614323] call_tmp[614330]))
    unknown call_tmp[614340] "expr temp" "maybe param" "maybe type" "temp"
    (614343 'move' call_tmp[614340](61166 call _cond_test call_tmp[614335]))
    if call_tmp[614340]
    {
      (61164 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61219] "dead at end of block" "insert auto destroy"
      (540951 'init var' i[61219] 0)
      (475106 'end of statement')
      unknown tmp[61220] "maybe param" "temp"
      unknown call_tmp[614347] "expr temp" "maybe param" "maybe type" "temp"
      (614350 'move' call_tmp[614347](61174 call size _mt[243] a[61126]))
      unknown call_tmp[614352] "expr temp" "maybe param" "maybe type" "temp"
      (614355 'move' call_tmp[614352](61178 call - call_tmp[614347] 1))
      (61232 'move' tmp[61220](61230 call chpl_compute_low_param_loop_bound 0 call_tmp[614352]))
      unknown tmp[61221] "maybe param" "temp"
      unknown call_tmp[614359] "expr temp" "maybe param" "maybe type" "temp"
      (614362 'move' call_tmp[614359](61239 call size _mt[243] a[61126]))
      unknown call_tmp[614364] "expr temp" "maybe param" "maybe type" "temp"
      (614367 'move' call_tmp[614364](61237 call - call_tmp[614359] 1))
      (61245 'move' tmp[61221](61243 call chpl_compute_high_param_loop_bound 0 call_tmp[614364]))
      unknown tmp[61222] "maybe param" "temp"
      (61248 'move' tmp[61222] 1)
      ParamForLoop[61250]
      { i[61219] tmp[61220] tmp[61221] tmp[61222]
        unknown call_tmp[614369] "expr temp" "maybe param" "maybe type" "temp"
        (614372 'move' call_tmp[614369](61185 call a[61126] i[61219]))
        unknown call_tmp[614374] "expr temp" "maybe param" "maybe type" "temp"
        (614377 'move' call_tmp[614374](61189 call b[61132] i[61219]))
        unknown call_tmp[614379] "expr temp" "maybe param" "maybe type" "temp"
        (614382 'move' call_tmp[614379](61190 call > call_tmp[614369] call_tmp[614374]))
        unknown call_tmp[614384] "expr temp" "maybe param" "maybe type" "temp"
        (614387 'move' call_tmp[614384](61213 call _cond_test call_tmp[614379]))
        if call_tmp[614384]
        {
          (508708 'move' ret[508703](508707 'deref' 1))
          gotoReturn _end_>=[508701] _end_>=[508701]
        }
        {
          unknown call_tmp[614389] "expr temp" "maybe param" "maybe type" "temp"
          (614392 'move' call_tmp[614389](61198 call a[61126] i[61219]))
          unknown call_tmp[614394] "expr temp" "maybe param" "maybe type" "temp"
          (614397 'move' call_tmp[614394](61202 call b[61132] i[61219]))
          unknown call_tmp[614399] "expr temp" "maybe param" "maybe type" "temp"
          (614402 'move' call_tmp[614399](61203 call < call_tmp[614389] call_tmp[614394]))
          unknown call_tmp[614404] "expr temp" "maybe param" "maybe type" "temp"
          (614407 'move' call_tmp[614404](61208 call _cond_test call_tmp[614399]))
          if call_tmp[614404]
          {
            (508713 'move' ret[508703](508712 'deref' 0))
            gotoReturn _end_>=[508701] _end_>=[508701]
          }
        }
      }
      label _unused_continueLabel[61224]
      label _breakLabel[61223]
    }
    (508718 'move' ret[508703](508717 'deref' 1))
    label _end_>=[508701]
    (508705 return ret[508703])
  }
  function <[61270](arg a[61267]:_tuple[56199](?), arg b[61273]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508722] "RVV" "temp"
    unknown call_tmp[614411] "expr temp" "maybe param" "maybe type" "temp"
    (614414 'move' call_tmp[614411](61277 call size _mt[243] a[61267]))
    unknown call_tmp[614418] "expr temp" "maybe param" "maybe type" "temp"
    (614421 'move' call_tmp[614418](61281 call size _mt[243] b[61273]))
    unknown call_tmp[614423] "expr temp" "maybe param" "maybe type" "temp"
    (614426 'move' call_tmp[614423](61284 call != call_tmp[614411] call_tmp[614418]))
    unknown call_tmp[614428] "expr temp" "maybe param" "maybe type" "temp"
    (614431 'move' call_tmp[614428](61307 call _cond_test call_tmp[614423]))
    if call_tmp[614428]
    {
      (61305 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61360] "dead at end of block" "insert auto destroy"
      (540953 'init var' i[61360] 0)
      (475111 'end of statement')
      unknown tmp[61361] "maybe param" "temp"
      unknown call_tmp[614435] "expr temp" "maybe param" "maybe type" "temp"
      (614438 'move' call_tmp[614435](61315 call size _mt[243] a[61267]))
      unknown call_tmp[614440] "expr temp" "maybe param" "maybe type" "temp"
      (614443 'move' call_tmp[614440](61319 call - call_tmp[614435] 1))
      (61373 'move' tmp[61361](61371 call chpl_compute_low_param_loop_bound 0 call_tmp[614440]))
      unknown tmp[61362] "maybe param" "temp"
      unknown call_tmp[614447] "expr temp" "maybe param" "maybe type" "temp"
      (614450 'move' call_tmp[614447](61380 call size _mt[243] a[61267]))
      unknown call_tmp[614452] "expr temp" "maybe param" "maybe type" "temp"
      (614455 'move' call_tmp[614452](61378 call - call_tmp[614447] 1))
      (61386 'move' tmp[61362](61384 call chpl_compute_high_param_loop_bound 0 call_tmp[614452]))
      unknown tmp[61363] "maybe param" "temp"
      (61389 'move' tmp[61363] 1)
      ParamForLoop[61391]
      { i[61360] tmp[61361] tmp[61362] tmp[61363]
        unknown call_tmp[614457] "expr temp" "maybe param" "maybe type" "temp"
        (614460 'move' call_tmp[614457](61326 call a[61267] i[61360]))
        unknown call_tmp[614462] "expr temp" "maybe param" "maybe type" "temp"
        (614465 'move' call_tmp[614462](61330 call b[61273] i[61360]))
        unknown call_tmp[614467] "expr temp" "maybe param" "maybe type" "temp"
        (614470 'move' call_tmp[614467](61331 call < call_tmp[614457] call_tmp[614462]))
        unknown call_tmp[614472] "expr temp" "maybe param" "maybe type" "temp"
        (614475 'move' call_tmp[614472](61354 call _cond_test call_tmp[614467]))
        if call_tmp[614472]
        {
          (508727 'move' ret[508722](508726 'deref' 1))
          gotoReturn _end_<[508720] _end_<[508720]
        }
        {
          unknown call_tmp[614477] "expr temp" "maybe param" "maybe type" "temp"
          (614480 'move' call_tmp[614477](61339 call a[61267] i[61360]))
          unknown call_tmp[614482] "expr temp" "maybe param" "maybe type" "temp"
          (614485 'move' call_tmp[614482](61343 call b[61273] i[61360]))
          unknown call_tmp[614487] "expr temp" "maybe param" "maybe type" "temp"
          (614490 'move' call_tmp[614487](61344 call > call_tmp[614477] call_tmp[614482]))
          unknown call_tmp[614492] "expr temp" "maybe param" "maybe type" "temp"
          (614495 'move' call_tmp[614492](61349 call _cond_test call_tmp[614487]))
          if call_tmp[614492]
          {
            (508732 'move' ret[508722](508731 'deref' 0))
            gotoReturn _end_<[508720] _end_<[508720]
          }
        }
      }
      label _unused_continueLabel[61365]
      label _breakLabel[61364]
    }
    (508737 'move' ret[508722](508736 'deref' 0))
    label _end_<[508720]
    (508724 return ret[508722])
  }
  function <=[61411](arg a[61408]:_tuple[56199](?), arg b[61414]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508741] "RVV" "temp"
    unknown call_tmp[614499] "expr temp" "maybe param" "maybe type" "temp"
    (614502 'move' call_tmp[614499](61418 call size _mt[243] a[61408]))
    unknown call_tmp[614506] "expr temp" "maybe param" "maybe type" "temp"
    (614509 'move' call_tmp[614506](61422 call size _mt[243] b[61414]))
    unknown call_tmp[614511] "expr temp" "maybe param" "maybe type" "temp"
    (614514 'move' call_tmp[614511](61425 call != call_tmp[614499] call_tmp[614506]))
    unknown call_tmp[614516] "expr temp" "maybe param" "maybe type" "temp"
    (614519 'move' call_tmp[614516](61448 call _cond_test call_tmp[614511]))
    if call_tmp[614516]
    {
      (61446 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61501] "dead at end of block" "insert auto destroy"
      (540955 'init var' i[61501] 0)
      (475116 'end of statement')
      unknown tmp[61502] "maybe param" "temp"
      unknown call_tmp[614523] "expr temp" "maybe param" "maybe type" "temp"
      (614526 'move' call_tmp[614523](61456 call size _mt[243] a[61408]))
      unknown call_tmp[614528] "expr temp" "maybe param" "maybe type" "temp"
      (614531 'move' call_tmp[614528](61460 call - call_tmp[614523] 1))
      (61514 'move' tmp[61502](61512 call chpl_compute_low_param_loop_bound 0 call_tmp[614528]))
      unknown tmp[61503] "maybe param" "temp"
      unknown call_tmp[614535] "expr temp" "maybe param" "maybe type" "temp"
      (614538 'move' call_tmp[614535](61521 call size _mt[243] a[61408]))
      unknown call_tmp[614540] "expr temp" "maybe param" "maybe type" "temp"
      (614543 'move' call_tmp[614540](61519 call - call_tmp[614535] 1))
      (61527 'move' tmp[61503](61525 call chpl_compute_high_param_loop_bound 0 call_tmp[614540]))
      unknown tmp[61504] "maybe param" "temp"
      (61530 'move' tmp[61504] 1)
      ParamForLoop[61532]
      { i[61501] tmp[61502] tmp[61503] tmp[61504]
        unknown call_tmp[614545] "expr temp" "maybe param" "maybe type" "temp"
        (614548 'move' call_tmp[614545](61467 call a[61408] i[61501]))
        unknown call_tmp[614550] "expr temp" "maybe param" "maybe type" "temp"
        (614553 'move' call_tmp[614550](61471 call b[61414] i[61501]))
        unknown call_tmp[614555] "expr temp" "maybe param" "maybe type" "temp"
        (614558 'move' call_tmp[614555](61472 call < call_tmp[614545] call_tmp[614550]))
        unknown call_tmp[614560] "expr temp" "maybe param" "maybe type" "temp"
        (614563 'move' call_tmp[614560](61495 call _cond_test call_tmp[614555]))
        if call_tmp[614560]
        {
          (508746 'move' ret[508741](508745 'deref' 1))
          gotoReturn _end_<=[508739] _end_<=[508739]
        }
        {
          unknown call_tmp[614565] "expr temp" "maybe param" "maybe type" "temp"
          (614568 'move' call_tmp[614565](61480 call a[61408] i[61501]))
          unknown call_tmp[614570] "expr temp" "maybe param" "maybe type" "temp"
          (614573 'move' call_tmp[614570](61484 call b[61414] i[61501]))
          unknown call_tmp[614575] "expr temp" "maybe param" "maybe type" "temp"
          (614578 'move' call_tmp[614575](61485 call > call_tmp[614565] call_tmp[614570]))
          unknown call_tmp[614580] "expr temp" "maybe param" "maybe type" "temp"
          (614583 'move' call_tmp[614580](61490 call _cond_test call_tmp[614575]))
          if call_tmp[614580]
          {
            (508751 'move' ret[508741](508750 'deref' 0))
            gotoReturn _end_<=[508739] _end_<=[508739]
          }
        }
      }
      label _unused_continueLabel[61506]
      label _breakLabel[61505]
    }
    (508756 'move' ret[508741](508755 'deref' 1))
    label _end_<=[508739]
    (508743 return ret[508741])
  }
  function ==[61552](arg a[61549]:_tuple[56199](?), arg b[61555]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508760] "RVV" "temp"
    unknown call_tmp[614587] "expr temp" "maybe param" "maybe type" "temp"
    (614590 'move' call_tmp[614587](61559 call size _mt[243] a[61549]))
    unknown call_tmp[614594] "expr temp" "maybe param" "maybe type" "temp"
    (614597 'move' call_tmp[614594](61563 call size _mt[243] b[61555]))
    unknown call_tmp[614599] "expr temp" "maybe param" "maybe type" "temp"
    (614602 'move' call_tmp[614599](61566 call != call_tmp[614587] call_tmp[614594]))
    unknown call_tmp[614604] "expr temp" "maybe param" "maybe type" "temp"
    (614607 'move' call_tmp[614604](61641 call _cond_test call_tmp[614599]))
    if call_tmp[614604]
    {
      (508765 'move' ret[508760](508764 'deref' 0))
      gotoReturn _end_==[508758] _end_==[508758]
    }
    {
      {
        unknown i[61600] "dead at end of block" "insert auto destroy"
        (540957 'init var' i[61600] 0)
        (475121 'end of statement')
        unknown tmp[61601] "maybe param" "temp"
        unknown call_tmp[614611] "expr temp" "maybe param" "maybe type" "temp"
        (614614 'move' call_tmp[614611](61574 call size _mt[243] a[61549]))
        unknown call_tmp[614616] "expr temp" "maybe param" "maybe type" "temp"
        (614619 'move' call_tmp[614616](61578 call - call_tmp[614611] 1))
        (61613 'move' tmp[61601](61611 call chpl_compute_low_param_loop_bound 0 call_tmp[614616]))
        unknown tmp[61602] "maybe param" "temp"
        unknown call_tmp[614623] "expr temp" "maybe param" "maybe type" "temp"
        (614626 'move' call_tmp[614623](61620 call size _mt[243] a[61549]))
        unknown call_tmp[614628] "expr temp" "maybe param" "maybe type" "temp"
        (614631 'move' call_tmp[614628](61618 call - call_tmp[614623] 1))
        (61626 'move' tmp[61602](61624 call chpl_compute_high_param_loop_bound 0 call_tmp[614628]))
        unknown tmp[61603] "maybe param" "temp"
        (61629 'move' tmp[61603] 1)
        ParamForLoop[61631]
        { i[61600] tmp[61601] tmp[61602] tmp[61603]
          unknown call_tmp[614633] "expr temp" "maybe param" "maybe type" "temp"
          (614636 'move' call_tmp[614633](61585 call a[61549] i[61600]))
          unknown call_tmp[614638] "expr temp" "maybe param" "maybe type" "temp"
          (614641 'move' call_tmp[614638](61589 call b[61555] i[61600]))
          unknown call_tmp[614643] "expr temp" "maybe param" "maybe type" "temp"
          (614646 'move' call_tmp[614643](61590 call != call_tmp[614633] call_tmp[614638]))
          unknown call_tmp[614648] "expr temp" "maybe param" "maybe type" "temp"
          (614651 'move' call_tmp[614648](61595 call _cond_test call_tmp[614643]))
          if call_tmp[614648]
          {
            (508770 'move' ret[508760](508769 'deref' 0))
            gotoReturn _end_==[508758] _end_==[508758]
          }
        }
        label _unused_continueLabel[61605]
        label _breakLabel[61604]
      }
    }
    (508775 'move' ret[508760](508774 'deref' 1))
    label _end_==[508758]
    (508762 return ret[508760])
  }
  function !=[61657](arg a[61654]:_tuple[56199](?), arg b[61660]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508779] "RVV" "temp"
    unknown call_tmp[614655] "expr temp" "maybe param" "maybe type" "temp"
    (614658 'move' call_tmp[614655](61664 call size _mt[243] a[61654]))
    unknown call_tmp[614662] "expr temp" "maybe param" "maybe type" "temp"
    (614665 'move' call_tmp[614662](61668 call size _mt[243] b[61660]))
    unknown call_tmp[614667] "expr temp" "maybe param" "maybe type" "temp"
    (614670 'move' call_tmp[614667](61671 call != call_tmp[614655] call_tmp[614662]))
    unknown call_tmp[614672] "expr temp" "maybe param" "maybe type" "temp"
    (614675 'move' call_tmp[614672](61746 call _cond_test call_tmp[614667]))
    if call_tmp[614672]
    {
      (508784 'move' ret[508779](508783 'deref' 1))
      gotoReturn _end_!=[508777] _end_!=[508777]
    }
    {
      {
        unknown i[61705] "dead at end of block" "insert auto destroy"
        (540959 'init var' i[61705] 0)
        (475125 'end of statement')
        unknown tmp[61706] "maybe param" "temp"
        unknown call_tmp[614679] "expr temp" "maybe param" "maybe type" "temp"
        (614682 'move' call_tmp[614679](61679 call size _mt[243] a[61654]))
        unknown call_tmp[614684] "expr temp" "maybe param" "maybe type" "temp"
        (614687 'move' call_tmp[614684](61683 call - call_tmp[614679] 1))
        (61718 'move' tmp[61706](61716 call chpl_compute_low_param_loop_bound 0 call_tmp[614684]))
        unknown tmp[61707] "maybe param" "temp"
        unknown call_tmp[614691] "expr temp" "maybe param" "maybe type" "temp"
        (614694 'move' call_tmp[614691](61725 call size _mt[243] a[61654]))
        unknown call_tmp[614696] "expr temp" "maybe param" "maybe type" "temp"
        (614699 'move' call_tmp[614696](61723 call - call_tmp[614691] 1))
        (61731 'move' tmp[61707](61729 call chpl_compute_high_param_loop_bound 0 call_tmp[614696]))
        unknown tmp[61708] "maybe param" "temp"
        (61734 'move' tmp[61708] 1)
        ParamForLoop[61736]
        { i[61705] tmp[61706] tmp[61707] tmp[61708]
          unknown call_tmp[614701] "expr temp" "maybe param" "maybe type" "temp"
          (614704 'move' call_tmp[614701](61690 call a[61654] i[61705]))
          unknown call_tmp[614706] "expr temp" "maybe param" "maybe type" "temp"
          (614709 'move' call_tmp[614706](61694 call b[61660] i[61705]))
          unknown call_tmp[614711] "expr temp" "maybe param" "maybe type" "temp"
          (614714 'move' call_tmp[614711](61695 call != call_tmp[614701] call_tmp[614706]))
          unknown call_tmp[614716] "expr temp" "maybe param" "maybe type" "temp"
          (614719 'move' call_tmp[614716](61700 call _cond_test call_tmp[614711]))
          if call_tmp[614716]
          {
            (508789 'move' ret[508779](508788 'deref' 1))
            gotoReturn _end_!=[508777] _end_!=[508777]
          }
        }
        label _unused_continueLabel[61710]
        label _breakLabel[61709]
      }
    }
    (508794 'move' ret[508779](508793 'deref' 0))
    label _end_!=[508777]
    (508781 return ret[508779])
  }
  function +[61762](arg x[61759]:_tuple[56199](?), arg y[61769] :
  unknown call_tmp[614721] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508798] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491709] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614726] "expr temp" "maybe param" "maybe type" "temp"
      (614729 'move' call_tmp[614726](61783 call x[61759] 0))
      (491713 'move' call_type_tmp[491709](61784 'typeof' call_tmp[614726]))
    }
    unknown result[61787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614733] "expr temp" "maybe param" "maybe type" "temp"
    (614736 'move' call_tmp[614733](61777 call size _mt[243] x[61759]))
    unknown call_tmp[614738] "expr temp" "maybe param" "maybe type" "temp"
    (614741 'move' call_tmp[614738](61785 call * call_tmp[614733] call_type_tmp[491709]))
    (540961 'default init var' result[61787] call_tmp[614738])
    (61790 'end of statement')
    {
      unknown d[61816] "dead at end of block" "insert auto destroy"
      (540963 'init var' d[61816] 0)
      (475128 'end of statement')
      unknown tmp[61817] "maybe param" "temp"
      unknown call_tmp[614745] "expr temp" "maybe param" "maybe type" "temp"
      (614748 'move' call_tmp[614745](61794 call size _mt[243] x[61759]))
      unknown call_tmp[614750] "expr temp" "maybe param" "maybe type" "temp"
      (614753 'move' call_tmp[614750](61798 call - call_tmp[614745] 1))
      (61829 'move' tmp[61817](61827 call chpl_compute_low_param_loop_bound 0 call_tmp[614750]))
      unknown tmp[61818] "maybe param" "temp"
      unknown call_tmp[614757] "expr temp" "maybe param" "maybe type" "temp"
      (614760 'move' call_tmp[614757](61836 call size _mt[243] x[61759]))
      unknown call_tmp[614762] "expr temp" "maybe param" "maybe type" "temp"
      (614765 'move' call_tmp[614762](61834 call - call_tmp[614757] 1))
      (61842 'move' tmp[61818](61840 call chpl_compute_high_param_loop_bound 0 call_tmp[614762]))
      unknown tmp[61819] "maybe param" "temp"
      (61845 'move' tmp[61819] 1)
      ParamForLoop[61847]
      { d[61816] tmp[61817] tmp[61818] tmp[61819]
        unknown call_tmp[614767] "expr temp" "maybe param" "maybe type" "temp"
        (614770 'move' call_tmp[614767](61805 call result[61787] d[61816]))
        unknown call_tmp[614772] "expr temp" "maybe param" "maybe type" "temp"
        (614775 'move' call_tmp[614772](61809 call x[61759] d[61816]))
        unknown call_tmp[614777] "expr temp" "maybe param" "maybe type" "temp"
        (614780 'move' call_tmp[614777](61811 call + call_tmp[614772] y[61769]))
        (61813 call = call_tmp[614767] call_tmp[614777])
        (475129 'end of statement' result[61787] d[61816] d[61816])
      }
      label _unused_continueLabel[61821]
      label _breakLabel[61820]
    }
    (508803 'move' ret[508798](508802 'deref' result[61787]))
    gotoReturn _end_+[508796] _end_+[508796]
    (475133 'end of statement' result[61787])
    label _end_+[508796]
    (508800 return ret[508798])
  }
  where {
    (61775 call isHomogeneousTuple x[61759])
  }
  function +[61869](arg x[61866]:_any[178](?), arg y[61872]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508809] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491715] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614782] "expr temp" "maybe param" "maybe type" "temp"
      (614785 'move' call_tmp[614782](61897 call y[61872] 0))
      (491719 'move' call_type_tmp[491715](61898 'typeof' call_tmp[614782]))
    }
    unknown result[61901] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614789] "expr temp" "maybe param" "maybe type" "temp"
    (614792 'move' call_tmp[614789](61891 call size _mt[243] y[61872]))
    unknown call_tmp[614794] "expr temp" "maybe param" "maybe type" "temp"
    (614797 'move' call_tmp[614794](61899 call * call_tmp[614789] call_type_tmp[491715]))
    (540965 'default init var' result[61901] call_tmp[614794])
    (61904 'end of statement')
    {
      unknown d[61930] "dead at end of block" "insert auto destroy"
      (540967 'init var' d[61930] 0)
      (475135 'end of statement')
      unknown tmp[61931] "maybe param" "temp"
      unknown call_tmp[614801] "expr temp" "maybe param" "maybe type" "temp"
      (614804 'move' call_tmp[614801](61908 call size _mt[243] y[61872]))
      unknown call_tmp[614806] "expr temp" "maybe param" "maybe type" "temp"
      (614809 'move' call_tmp[614806](61912 call - call_tmp[614801] 1))
      (61943 'move' tmp[61931](61941 call chpl_compute_low_param_loop_bound 0 call_tmp[614806]))
      unknown tmp[61932] "maybe param" "temp"
      unknown call_tmp[614813] "expr temp" "maybe param" "maybe type" "temp"
      (614816 'move' call_tmp[614813](61950 call size _mt[243] y[61872]))
      unknown call_tmp[614818] "expr temp" "maybe param" "maybe type" "temp"
      (614821 'move' call_tmp[614818](61948 call - call_tmp[614813] 1))
      (61956 'move' tmp[61932](61954 call chpl_compute_high_param_loop_bound 0 call_tmp[614818]))
      unknown tmp[61933] "maybe param" "temp"
      (61959 'move' tmp[61933] 1)
      ParamForLoop[61961]
      { d[61930] tmp[61931] tmp[61932] tmp[61933]
        unknown call_tmp[614823] "expr temp" "maybe param" "maybe type" "temp"
        (614826 'move' call_tmp[614823](61919 call result[61901] d[61930]))
        unknown call_tmp[614828] "expr temp" "maybe param" "maybe type" "temp"
        (614831 'move' call_tmp[614828](61924 call y[61872] d[61930]))
        unknown call_tmp[614833] "expr temp" "maybe param" "maybe type" "temp"
        (614836 'move' call_tmp[614833](61925 call + x[61866] call_tmp[614828]))
        (61927 call = call_tmp[614823] call_tmp[614833])
        (475136 'end of statement' result[61901] d[61930] d[61930])
      }
      label _unused_continueLabel[61935]
      label _breakLabel[61934]
    }
    (508814 'move' ret[508809](508813 'deref' result[61901]))
    gotoReturn _end_+[508807] _end_+[508807]
    (475140 'end of statement' result[61901])
    label _end_+[508807]
    (508811 return ret[508809])
  }
  where {
    unknown tmp[419020] "maybe param" "temp"
    (419031 'move' tmp[419020](61878 call isHomogeneousTuple y[61872]))
    unknown call_tmp[614838] "expr temp" "maybe param" "maybe type" "temp"
    (614841 'move' call_tmp[614838](419033 call _cond_invalid tmp[419020]))
    if call_tmp[614838]
    {
      (419036 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555133] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555134] "maybe param" "temp"
    unknown call_tmp[614843] "expr temp" "maybe param" "maybe type" "temp"
    (614846 'move' call_tmp[614843](419021 call isTrue tmp[419020]))
    (555139 'move' tmp[555134](555137 call _cond_test call_tmp[614843]))
    if tmp[555134]
    {
      { scopeless type
        unknown call_type_tmp[491721] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614848] "expr temp" "maybe param" "maybe type" "temp"
        (614851 'move' call_tmp[614848](61885 call y[61872] 0))
        (491725 'move' call_type_tmp[491721](61886 'typeof' call_tmp[614848]))
      }
      unknown tmp[555141] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614853] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614856 'move' call_tmp[614853](454834 'typeof' x[61866]))
      unknown call_tmp[614858] "expr temp" "maybe param" "maybe type" "temp"
      (614861 'move' call_tmp[614858](354269 'is_subtype' call_type_tmp[491721] call_tmp[614853]))
      (555143 'move' tmp[555141](419024 call isTrue call_tmp[614858]))
      (555148 'move' tmp[555133](555145 '_paramFoldLogical' tmp[555134] tmp[555141]))
    }
    {
      (555153 'move' tmp[555133](555150 '_paramFoldLogical' tmp[555134] 0))
    }
    (748241 call chpl_statementLevelSymbol tmp[555133])
  }
  function -[61982](arg x[61979]:_tuple[56199](?), arg y[61989] :
  unknown call_tmp[614863] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508820] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491727] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614868] "expr temp" "maybe param" "maybe type" "temp"
      (614871 'move' call_tmp[614868](62003 call x[61979] 0))
      (491731 'move' call_type_tmp[491727](62004 'typeof' call_tmp[614868]))
    }
    unknown result[62007] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614875] "expr temp" "maybe param" "maybe type" "temp"
    (614878 'move' call_tmp[614875](61997 call size _mt[243] x[61979]))
    unknown call_tmp[614880] "expr temp" "maybe param" "maybe type" "temp"
    (614883 'move' call_tmp[614880](62005 call * call_tmp[614875] call_type_tmp[491727]))
    (540969 'default init var' result[62007] call_tmp[614880])
    (62010 'end of statement')
    {
      unknown d[62036] "dead at end of block" "insert auto destroy"
      (540971 'init var' d[62036] 0)
      (475142 'end of statement')
      unknown tmp[62037] "maybe param" "temp"
      unknown call_tmp[614887] "expr temp" "maybe param" "maybe type" "temp"
      (614890 'move' call_tmp[614887](62014 call size _mt[243] x[61979]))
      unknown call_tmp[614892] "expr temp" "maybe param" "maybe type" "temp"
      (614895 'move' call_tmp[614892](62018 call - call_tmp[614887] 1))
      (62049 'move' tmp[62037](62047 call chpl_compute_low_param_loop_bound 0 call_tmp[614892]))
      unknown tmp[62038] "maybe param" "temp"
      unknown call_tmp[614899] "expr temp" "maybe param" "maybe type" "temp"
      (614902 'move' call_tmp[614899](62056 call size _mt[243] x[61979]))
      unknown call_tmp[614904] "expr temp" "maybe param" "maybe type" "temp"
      (614907 'move' call_tmp[614904](62054 call - call_tmp[614899] 1))
      (62062 'move' tmp[62038](62060 call chpl_compute_high_param_loop_bound 0 call_tmp[614904]))
      unknown tmp[62039] "maybe param" "temp"
      (62065 'move' tmp[62039] 1)
      ParamForLoop[62067]
      { d[62036] tmp[62037] tmp[62038] tmp[62039]
        unknown call_tmp[614909] "expr temp" "maybe param" "maybe type" "temp"
        (614912 'move' call_tmp[614909](62025 call result[62007] d[62036]))
        unknown call_tmp[614914] "expr temp" "maybe param" "maybe type" "temp"
        (614917 'move' call_tmp[614914](62029 call x[61979] d[62036]))
        unknown call_tmp[614919] "expr temp" "maybe param" "maybe type" "temp"
        (614922 'move' call_tmp[614919](62031 call - call_tmp[614914] y[61989]))
        (62033 call = call_tmp[614909] call_tmp[614919])
        (475143 'end of statement' result[62007] d[62036] d[62036])
      }
      label _unused_continueLabel[62041]
      label _breakLabel[62040]
    }
    (508825 'move' ret[508820](508824 'deref' result[62007]))
    gotoReturn _end_-[508818] _end_-[508818]
    (475147 'end of statement' result[62007])
    label _end_-[508818]
    (508822 return ret[508820])
  }
  where {
    (61995 call isHomogeneousTuple x[61979])
  }
  function -[62089](arg x[62086]:_any[178](?), arg y[62092]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508831] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491733] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614924] "expr temp" "maybe param" "maybe type" "temp"
      (614927 'move' call_tmp[614924](62117 call y[62092] 0))
      (491737 'move' call_type_tmp[491733](62118 'typeof' call_tmp[614924]))
    }
    unknown result[62121] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614931] "expr temp" "maybe param" "maybe type" "temp"
    (614934 'move' call_tmp[614931](62111 call size _mt[243] y[62092]))
    unknown call_tmp[614936] "expr temp" "maybe param" "maybe type" "temp"
    (614939 'move' call_tmp[614936](62119 call * call_tmp[614931] call_type_tmp[491733]))
    (540973 'default init var' result[62121] call_tmp[614936])
    (62124 'end of statement')
    {
      unknown d[62150] "dead at end of block" "insert auto destroy"
      (540975 'init var' d[62150] 0)
      (475149 'end of statement')
      unknown tmp[62151] "maybe param" "temp"
      unknown call_tmp[614943] "expr temp" "maybe param" "maybe type" "temp"
      (614946 'move' call_tmp[614943](62128 call size _mt[243] y[62092]))
      unknown call_tmp[614948] "expr temp" "maybe param" "maybe type" "temp"
      (614951 'move' call_tmp[614948](62132 call - call_tmp[614943] 1))
      (62163 'move' tmp[62151](62161 call chpl_compute_low_param_loop_bound 0 call_tmp[614948]))
      unknown tmp[62152] "maybe param" "temp"
      unknown call_tmp[614955] "expr temp" "maybe param" "maybe type" "temp"
      (614958 'move' call_tmp[614955](62170 call size _mt[243] y[62092]))
      unknown call_tmp[614960] "expr temp" "maybe param" "maybe type" "temp"
      (614963 'move' call_tmp[614960](62168 call - call_tmp[614955] 1))
      (62176 'move' tmp[62152](62174 call chpl_compute_high_param_loop_bound 0 call_tmp[614960]))
      unknown tmp[62153] "maybe param" "temp"
      (62179 'move' tmp[62153] 1)
      ParamForLoop[62181]
      { d[62150] tmp[62151] tmp[62152] tmp[62153]
        unknown call_tmp[614965] "expr temp" "maybe param" "maybe type" "temp"
        (614968 'move' call_tmp[614965](62139 call result[62121] d[62150]))
        unknown call_tmp[614970] "expr temp" "maybe param" "maybe type" "temp"
        (614973 'move' call_tmp[614970](62144 call y[62092] d[62150]))
        unknown call_tmp[614975] "expr temp" "maybe param" "maybe type" "temp"
        (614978 'move' call_tmp[614975](62145 call - x[62086] call_tmp[614970]))
        (62147 call = call_tmp[614965] call_tmp[614975])
        (475150 'end of statement' result[62121] d[62150] d[62150])
      }
      label _unused_continueLabel[62155]
      label _breakLabel[62154]
    }
    (508836 'move' ret[508831](508835 'deref' result[62121]))
    gotoReturn _end_-[508829] _end_-[508829]
    (475154 'end of statement' result[62121])
    label _end_-[508829]
    (508833 return ret[508831])
  }
  where {
    unknown tmp[419041] "maybe param" "temp"
    (419052 'move' tmp[419041](62098 call isHomogeneousTuple y[62092]))
    unknown call_tmp[614980] "expr temp" "maybe param" "maybe type" "temp"
    (614983 'move' call_tmp[614980](419054 call _cond_invalid tmp[419041]))
    if call_tmp[614980]
    {
      (419057 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555160] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555161] "maybe param" "temp"
    unknown call_tmp[614985] "expr temp" "maybe param" "maybe type" "temp"
    (614988 'move' call_tmp[614985](419042 call isTrue tmp[419041]))
    (555166 'move' tmp[555161](555164 call _cond_test call_tmp[614985]))
    if tmp[555161]
    {
      { scopeless type
        unknown call_type_tmp[491739] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614990] "expr temp" "maybe param" "maybe type" "temp"
        (614993 'move' call_tmp[614990](62105 call y[62092] 0))
        (491743 'move' call_type_tmp[491739](62106 'typeof' call_tmp[614990]))
      }
      unknown tmp[555168] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614995] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614998 'move' call_tmp[614995](454836 'typeof' x[62086]))
      unknown call_tmp[615000] "expr temp" "maybe param" "maybe type" "temp"
      (615003 'move' call_tmp[615000](354270 'is_subtype' call_type_tmp[491739] call_tmp[614995]))
      (555170 'move' tmp[555168](419045 call isTrue call_tmp[615000]))
      (555175 'move' tmp[555160](555172 '_paramFoldLogical' tmp[555161] tmp[555168]))
    }
    {
      (555180 'move' tmp[555160](555177 '_paramFoldLogical' tmp[555161] 0))
    }
    (748243 call chpl_statementLevelSymbol tmp[555160])
  }
  function *[62202](arg x[62199]:_tuple[56199](?), arg y[62209] :
  unknown call_tmp[615005] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508842] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491745] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615010] "expr temp" "maybe param" "maybe type" "temp"
      (615013 'move' call_tmp[615010](62223 call x[62199] 0))
      (491749 'move' call_type_tmp[491745](62224 'typeof' call_tmp[615010]))
    }
    unknown result[62227] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615017] "expr temp" "maybe param" "maybe type" "temp"
    (615020 'move' call_tmp[615017](62217 call size _mt[243] x[62199]))
    unknown call_tmp[615022] "expr temp" "maybe param" "maybe type" "temp"
    (615025 'move' call_tmp[615022](62225 call * call_tmp[615017] call_type_tmp[491745]))
    (540977 'default init var' result[62227] call_tmp[615022])
    (62230 'end of statement')
    {
      unknown d[62256] "dead at end of block" "insert auto destroy"
      (540979 'init var' d[62256] 0)
      (475156 'end of statement')
      unknown tmp[62257] "maybe param" "temp"
      unknown call_tmp[615029] "expr temp" "maybe param" "maybe type" "temp"
      (615032 'move' call_tmp[615029](62234 call size _mt[243] x[62199]))
      unknown call_tmp[615034] "expr temp" "maybe param" "maybe type" "temp"
      (615037 'move' call_tmp[615034](62238 call - call_tmp[615029] 1))
      (62269 'move' tmp[62257](62267 call chpl_compute_low_param_loop_bound 0 call_tmp[615034]))
      unknown tmp[62258] "maybe param" "temp"
      unknown call_tmp[615041] "expr temp" "maybe param" "maybe type" "temp"
      (615044 'move' call_tmp[615041](62276 call size _mt[243] x[62199]))
      unknown call_tmp[615046] "expr temp" "maybe param" "maybe type" "temp"
      (615049 'move' call_tmp[615046](62274 call - call_tmp[615041] 1))
      (62282 'move' tmp[62258](62280 call chpl_compute_high_param_loop_bound 0 call_tmp[615046]))
      unknown tmp[62259] "maybe param" "temp"
      (62285 'move' tmp[62259] 1)
      ParamForLoop[62287]
      { d[62256] tmp[62257] tmp[62258] tmp[62259]
        unknown call_tmp[615051] "expr temp" "maybe param" "maybe type" "temp"
        (615054 'move' call_tmp[615051](62245 call result[62227] d[62256]))
        unknown call_tmp[615056] "expr temp" "maybe param" "maybe type" "temp"
        (615059 'move' call_tmp[615056](62249 call x[62199] d[62256]))
        unknown call_tmp[615061] "expr temp" "maybe param" "maybe type" "temp"
        (615064 'move' call_tmp[615061](62251 call * call_tmp[615056] y[62209]))
        (62253 call = call_tmp[615051] call_tmp[615061])
        (475157 'end of statement' result[62227] d[62256] d[62256])
      }
      label _unused_continueLabel[62261]
      label _breakLabel[62260]
    }
    (508847 'move' ret[508842](508846 'deref' result[62227]))
    gotoReturn _end_*[508840] _end_*[508840]
    (475161 'end of statement' result[62227])
    label _end_*[508840]
    (508844 return ret[508842])
  }
  where {
    (62215 call isHomogeneousTuple x[62199])
  }
  function *[62309](arg x[62306]:_any[178](?), arg y[62312]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508853] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491751] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615066] "expr temp" "maybe param" "maybe type" "temp"
      (615069 'move' call_tmp[615066](62337 call y[62312] 0))
      (491755 'move' call_type_tmp[491751](62338 'typeof' call_tmp[615066]))
    }
    unknown result[62341] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615073] "expr temp" "maybe param" "maybe type" "temp"
    (615076 'move' call_tmp[615073](62331 call size _mt[243] y[62312]))
    unknown call_tmp[615078] "expr temp" "maybe param" "maybe type" "temp"
    (615081 'move' call_tmp[615078](62339 call * call_tmp[615073] call_type_tmp[491751]))
    (540981 'default init var' result[62341] call_tmp[615078])
    (62344 'end of statement')
    {
      unknown d[62370] "dead at end of block" "insert auto destroy"
      (540983 'init var' d[62370] 0)
      (475163 'end of statement')
      unknown tmp[62371] "maybe param" "temp"
      unknown call_tmp[615085] "expr temp" "maybe param" "maybe type" "temp"
      (615088 'move' call_tmp[615085](62348 call size _mt[243] y[62312]))
      unknown call_tmp[615090] "expr temp" "maybe param" "maybe type" "temp"
      (615093 'move' call_tmp[615090](62352 call - call_tmp[615085] 1))
      (62383 'move' tmp[62371](62381 call chpl_compute_low_param_loop_bound 0 call_tmp[615090]))
      unknown tmp[62372] "maybe param" "temp"
      unknown call_tmp[615097] "expr temp" "maybe param" "maybe type" "temp"
      (615100 'move' call_tmp[615097](62390 call size _mt[243] y[62312]))
      unknown call_tmp[615102] "expr temp" "maybe param" "maybe type" "temp"
      (615105 'move' call_tmp[615102](62388 call - call_tmp[615097] 1))
      (62396 'move' tmp[62372](62394 call chpl_compute_high_param_loop_bound 0 call_tmp[615102]))
      unknown tmp[62373] "maybe param" "temp"
      (62399 'move' tmp[62373] 1)
      ParamForLoop[62401]
      { d[62370] tmp[62371] tmp[62372] tmp[62373]
        unknown call_tmp[615107] "expr temp" "maybe param" "maybe type" "temp"
        (615110 'move' call_tmp[615107](62359 call result[62341] d[62370]))
        unknown call_tmp[615112] "expr temp" "maybe param" "maybe type" "temp"
        (615115 'move' call_tmp[615112](62364 call y[62312] d[62370]))
        unknown call_tmp[615117] "expr temp" "maybe param" "maybe type" "temp"
        (615120 'move' call_tmp[615117](62365 call * x[62306] call_tmp[615112]))
        (62367 call = call_tmp[615107] call_tmp[615117])
        (475164 'end of statement' result[62341] d[62370] d[62370])
      }
      label _unused_continueLabel[62375]
      label _breakLabel[62374]
    }
    (508858 'move' ret[508853](508857 'deref' result[62341]))
    gotoReturn _end_*[508851] _end_*[508851]
    (475168 'end of statement' result[62341])
    label _end_*[508851]
    (508855 return ret[508853])
  }
  where {
    unknown tmp[419062] "maybe param" "temp"
    (419073 'move' tmp[419062](62318 call isHomogeneousTuple y[62312]))
    unknown call_tmp[615122] "expr temp" "maybe param" "maybe type" "temp"
    (615125 'move' call_tmp[615122](419075 call _cond_invalid tmp[419062]))
    if call_tmp[615122]
    {
      (419078 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555187] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555188] "maybe param" "temp"
    unknown call_tmp[615127] "expr temp" "maybe param" "maybe type" "temp"
    (615130 'move' call_tmp[615127](419063 call isTrue tmp[419062]))
    (555193 'move' tmp[555188](555191 call _cond_test call_tmp[615127]))
    if tmp[555188]
    {
      { scopeless type
        unknown call_type_tmp[491757] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615132] "expr temp" "maybe param" "maybe type" "temp"
        (615135 'move' call_tmp[615132](62325 call y[62312] 0))
        (491761 'move' call_type_tmp[491757](62326 'typeof' call_tmp[615132]))
      }
      unknown tmp[555195] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615137] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615140 'move' call_tmp[615137](454838 'typeof' x[62306]))
      unknown call_tmp[615142] "expr temp" "maybe param" "maybe type" "temp"
      (615145 'move' call_tmp[615142](354271 'is_subtype' call_type_tmp[491757] call_tmp[615137]))
      (555197 'move' tmp[555195](419066 call isTrue call_tmp[615142]))
      (555202 'move' tmp[555187](555199 '_paramFoldLogical' tmp[555188] tmp[555195]))
    }
    {
      (555207 'move' tmp[555187](555204 '_paramFoldLogical' tmp[555188] 0))
    }
    (748245 call chpl_statementLevelSymbol tmp[555187])
  }
  function /[62422](arg x[62419]:_tuple[56199](?), arg y[62429] :
  unknown call_tmp[615147] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508864] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491763] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615152] "expr temp" "maybe param" "maybe type" "temp"
      (615155 'move' call_tmp[615152](62443 call x[62419] 0))
      (491767 'move' call_type_tmp[491763](62444 'typeof' call_tmp[615152]))
    }
    unknown result[62447] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615159] "expr temp" "maybe param" "maybe type" "temp"
    (615162 'move' call_tmp[615159](62437 call size _mt[243] x[62419]))
    unknown call_tmp[615164] "expr temp" "maybe param" "maybe type" "temp"
    (615167 'move' call_tmp[615164](62445 call * call_tmp[615159] call_type_tmp[491763]))
    (540985 'default init var' result[62447] call_tmp[615164])
    (62450 'end of statement')
    {
      unknown d[62476] "dead at end of block" "insert auto destroy"
      (540987 'init var' d[62476] 0)
      (475170 'end of statement')
      unknown tmp[62477] "maybe param" "temp"
      unknown call_tmp[615171] "expr temp" "maybe param" "maybe type" "temp"
      (615174 'move' call_tmp[615171](62454 call size _mt[243] x[62419]))
      unknown call_tmp[615176] "expr temp" "maybe param" "maybe type" "temp"
      (615179 'move' call_tmp[615176](62458 call - call_tmp[615171] 1))
      (62489 'move' tmp[62477](62487 call chpl_compute_low_param_loop_bound 0 call_tmp[615176]))
      unknown tmp[62478] "maybe param" "temp"
      unknown call_tmp[615183] "expr temp" "maybe param" "maybe type" "temp"
      (615186 'move' call_tmp[615183](62496 call size _mt[243] x[62419]))
      unknown call_tmp[615188] "expr temp" "maybe param" "maybe type" "temp"
      (615191 'move' call_tmp[615188](62494 call - call_tmp[615183] 1))
      (62502 'move' tmp[62478](62500 call chpl_compute_high_param_loop_bound 0 call_tmp[615188]))
      unknown tmp[62479] "maybe param" "temp"
      (62505 'move' tmp[62479] 1)
      ParamForLoop[62507]
      { d[62476] tmp[62477] tmp[62478] tmp[62479]
        unknown call_tmp[615193] "expr temp" "maybe param" "maybe type" "temp"
        (615196 'move' call_tmp[615193](62465 call result[62447] d[62476]))
        unknown call_tmp[615198] "expr temp" "maybe param" "maybe type" "temp"
        (615201 'move' call_tmp[615198](62469 call x[62419] d[62476]))
        unknown call_tmp[615203] "expr temp" "maybe param" "maybe type" "temp"
        (615206 'move' call_tmp[615203](62471 call / call_tmp[615198] y[62429]))
        (62473 call = call_tmp[615193] call_tmp[615203])
        (475171 'end of statement' result[62447] d[62476] d[62476])
      }
      label _unused_continueLabel[62481]
      label _breakLabel[62480]
    }
    (508869 'move' ret[508864](508868 'deref' result[62447]))
    gotoReturn _end_/[508862] _end_/[508862]
    (475175 'end of statement' result[62447])
    label _end_/[508862]
    (508866 return ret[508864])
  }
  where {
    (62435 call isHomogeneousTuple x[62419])
  }
  function /[62529](arg x[62526]:_any[178](?), arg y[62532]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508875] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491769] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615208] "expr temp" "maybe param" "maybe type" "temp"
      (615211 'move' call_tmp[615208](62557 call y[62532] 0))
      (491773 'move' call_type_tmp[491769](62558 'typeof' call_tmp[615208]))
    }
    unknown result[62561] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615215] "expr temp" "maybe param" "maybe type" "temp"
    (615218 'move' call_tmp[615215](62551 call size _mt[243] y[62532]))
    unknown call_tmp[615220] "expr temp" "maybe param" "maybe type" "temp"
    (615223 'move' call_tmp[615220](62559 call * call_tmp[615215] call_type_tmp[491769]))
    (540989 'default init var' result[62561] call_tmp[615220])
    (62564 'end of statement')
    {
      unknown d[62590] "dead at end of block" "insert auto destroy"
      (540991 'init var' d[62590] 0)
      (475177 'end of statement')
      unknown tmp[62591] "maybe param" "temp"
      unknown call_tmp[615227] "expr temp" "maybe param" "maybe type" "temp"
      (615230 'move' call_tmp[615227](62568 call size _mt[243] y[62532]))
      unknown call_tmp[615232] "expr temp" "maybe param" "maybe type" "temp"
      (615235 'move' call_tmp[615232](62572 call - call_tmp[615227] 1))
      (62603 'move' tmp[62591](62601 call chpl_compute_low_param_loop_bound 0 call_tmp[615232]))
      unknown tmp[62592] "maybe param" "temp"
      unknown call_tmp[615239] "expr temp" "maybe param" "maybe type" "temp"
      (615242 'move' call_tmp[615239](62610 call size _mt[243] y[62532]))
      unknown call_tmp[615244] "expr temp" "maybe param" "maybe type" "temp"
      (615247 'move' call_tmp[615244](62608 call - call_tmp[615239] 1))
      (62616 'move' tmp[62592](62614 call chpl_compute_high_param_loop_bound 0 call_tmp[615244]))
      unknown tmp[62593] "maybe param" "temp"
      (62619 'move' tmp[62593] 1)
      ParamForLoop[62621]
      { d[62590] tmp[62591] tmp[62592] tmp[62593]
        unknown call_tmp[615249] "expr temp" "maybe param" "maybe type" "temp"
        (615252 'move' call_tmp[615249](62579 call result[62561] d[62590]))
        unknown call_tmp[615254] "expr temp" "maybe param" "maybe type" "temp"
        (615257 'move' call_tmp[615254](62584 call y[62532] d[62590]))
        unknown call_tmp[615259] "expr temp" "maybe param" "maybe type" "temp"
        (615262 'move' call_tmp[615259](62585 call / x[62526] call_tmp[615254]))
        (62587 call = call_tmp[615249] call_tmp[615259])
        (475178 'end of statement' result[62561] d[62590] d[62590])
      }
      label _unused_continueLabel[62595]
      label _breakLabel[62594]
    }
    (508880 'move' ret[508875](508879 'deref' result[62561]))
    gotoReturn _end_/[508873] _end_/[508873]
    (475182 'end of statement' result[62561])
    label _end_/[508873]
    (508877 return ret[508875])
  }
  where {
    unknown tmp[419083] "maybe param" "temp"
    (419094 'move' tmp[419083](62538 call isHomogeneousTuple y[62532]))
    unknown call_tmp[615264] "expr temp" "maybe param" "maybe type" "temp"
    (615267 'move' call_tmp[615264](419096 call _cond_invalid tmp[419083]))
    if call_tmp[615264]
    {
      (419099 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555214] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555215] "maybe param" "temp"
    unknown call_tmp[615269] "expr temp" "maybe param" "maybe type" "temp"
    (615272 'move' call_tmp[615269](419084 call isTrue tmp[419083]))
    (555220 'move' tmp[555215](555218 call _cond_test call_tmp[615269]))
    if tmp[555215]
    {
      { scopeless type
        unknown call_type_tmp[491775] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615274] "expr temp" "maybe param" "maybe type" "temp"
        (615277 'move' call_tmp[615274](62545 call y[62532] 0))
        (491779 'move' call_type_tmp[491775](62546 'typeof' call_tmp[615274]))
      }
      unknown tmp[555222] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615279] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615282 'move' call_tmp[615279](454840 'typeof' x[62526]))
      unknown call_tmp[615284] "expr temp" "maybe param" "maybe type" "temp"
      (615287 'move' call_tmp[615284](354272 'is_subtype' call_type_tmp[491775] call_tmp[615279]))
      (555224 'move' tmp[555222](419087 call isTrue call_tmp[615284]))
      (555229 'move' tmp[555214](555226 '_paramFoldLogical' tmp[555215] tmp[555222]))
    }
    {
      (555234 'move' tmp[555214](555231 '_paramFoldLogical' tmp[555215] 0))
    }
    (748247 call chpl_statementLevelSymbol tmp[555214])
  }
  function %[62642](arg x[62639]:_tuple[56199](?), arg y[62649] :
  unknown call_tmp[615289] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508886] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491781] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615294] "expr temp" "maybe param" "maybe type" "temp"
      (615297 'move' call_tmp[615294](62663 call x[62639] 0))
      (491785 'move' call_type_tmp[491781](62664 'typeof' call_tmp[615294]))
    }
    unknown result[62667] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615301] "expr temp" "maybe param" "maybe type" "temp"
    (615304 'move' call_tmp[615301](62657 call size _mt[243] x[62639]))
    unknown call_tmp[615306] "expr temp" "maybe param" "maybe type" "temp"
    (615309 'move' call_tmp[615306](62665 call * call_tmp[615301] call_type_tmp[491781]))
    (540993 'default init var' result[62667] call_tmp[615306])
    (62670 'end of statement')
    {
      unknown d[62696] "dead at end of block" "insert auto destroy"
      (540995 'init var' d[62696] 0)
      (475184 'end of statement')
      unknown tmp[62697] "maybe param" "temp"
      unknown call_tmp[615313] "expr temp" "maybe param" "maybe type" "temp"
      (615316 'move' call_tmp[615313](62674 call size _mt[243] x[62639]))
      unknown call_tmp[615318] "expr temp" "maybe param" "maybe type" "temp"
      (615321 'move' call_tmp[615318](62678 call - call_tmp[615313] 1))
      (62709 'move' tmp[62697](62707 call chpl_compute_low_param_loop_bound 0 call_tmp[615318]))
      unknown tmp[62698] "maybe param" "temp"
      unknown call_tmp[615325] "expr temp" "maybe param" "maybe type" "temp"
      (615328 'move' call_tmp[615325](62716 call size _mt[243] x[62639]))
      unknown call_tmp[615330] "expr temp" "maybe param" "maybe type" "temp"
      (615333 'move' call_tmp[615330](62714 call - call_tmp[615325] 1))
      (62722 'move' tmp[62698](62720 call chpl_compute_high_param_loop_bound 0 call_tmp[615330]))
      unknown tmp[62699] "maybe param" "temp"
      (62725 'move' tmp[62699] 1)
      ParamForLoop[62727]
      { d[62696] tmp[62697] tmp[62698] tmp[62699]
        unknown call_tmp[615335] "expr temp" "maybe param" "maybe type" "temp"
        (615338 'move' call_tmp[615335](62685 call result[62667] d[62696]))
        unknown call_tmp[615340] "expr temp" "maybe param" "maybe type" "temp"
        (615343 'move' call_tmp[615340](62689 call x[62639] d[62696]))
        unknown call_tmp[615345] "expr temp" "maybe param" "maybe type" "temp"
        (615348 'move' call_tmp[615345](62691 call % call_tmp[615340] y[62649]))
        (62693 call = call_tmp[615335] call_tmp[615345])
        (475185 'end of statement' result[62667] d[62696] d[62696])
      }
      label _unused_continueLabel[62701]
      label _breakLabel[62700]
    }
    (508891 'move' ret[508886](508890 'deref' result[62667]))
    gotoReturn _end_%[508884] _end_%[508884]
    (475189 'end of statement' result[62667])
    label _end_%[508884]
    (508888 return ret[508886])
  }
  where {
    (62655 call isHomogeneousTuple x[62639])
  }
  function %[62749](arg x[62746]:_any[178](?), arg y[62752]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508897] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491787] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615350] "expr temp" "maybe param" "maybe type" "temp"
      (615353 'move' call_tmp[615350](62777 call y[62752] 0))
      (491791 'move' call_type_tmp[491787](62778 'typeof' call_tmp[615350]))
    }
    unknown result[62781] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615357] "expr temp" "maybe param" "maybe type" "temp"
    (615360 'move' call_tmp[615357](62771 call size _mt[243] y[62752]))
    unknown call_tmp[615362] "expr temp" "maybe param" "maybe type" "temp"
    (615365 'move' call_tmp[615362](62779 call * call_tmp[615357] call_type_tmp[491787]))
    (540997 'default init var' result[62781] call_tmp[615362])
    (62784 'end of statement')
    {
      unknown d[62810] "dead at end of block" "insert auto destroy"
      (540999 'init var' d[62810] 0)
      (475191 'end of statement')
      unknown tmp[62811] "maybe param" "temp"
      unknown call_tmp[615369] "expr temp" "maybe param" "maybe type" "temp"
      (615372 'move' call_tmp[615369](62788 call size _mt[243] y[62752]))
      unknown call_tmp[615374] "expr temp" "maybe param" "maybe type" "temp"
      (615377 'move' call_tmp[615374](62792 call - call_tmp[615369] 1))
      (62823 'move' tmp[62811](62821 call chpl_compute_low_param_loop_bound 0 call_tmp[615374]))
      unknown tmp[62812] "maybe param" "temp"
      unknown call_tmp[615381] "expr temp" "maybe param" "maybe type" "temp"
      (615384 'move' call_tmp[615381](62830 call size _mt[243] y[62752]))
      unknown call_tmp[615386] "expr temp" "maybe param" "maybe type" "temp"
      (615389 'move' call_tmp[615386](62828 call - call_tmp[615381] 1))
      (62836 'move' tmp[62812](62834 call chpl_compute_high_param_loop_bound 0 call_tmp[615386]))
      unknown tmp[62813] "maybe param" "temp"
      (62839 'move' tmp[62813] 1)
      ParamForLoop[62841]
      { d[62810] tmp[62811] tmp[62812] tmp[62813]
        unknown call_tmp[615391] "expr temp" "maybe param" "maybe type" "temp"
        (615394 'move' call_tmp[615391](62799 call result[62781] d[62810]))
        unknown call_tmp[615396] "expr temp" "maybe param" "maybe type" "temp"
        (615399 'move' call_tmp[615396](62804 call y[62752] d[62810]))
        unknown call_tmp[615401] "expr temp" "maybe param" "maybe type" "temp"
        (615404 'move' call_tmp[615401](62805 call % x[62746] call_tmp[615396]))
        (62807 call = call_tmp[615391] call_tmp[615401])
        (475192 'end of statement' result[62781] d[62810] d[62810])
      }
      label _unused_continueLabel[62815]
      label _breakLabel[62814]
    }
    (508902 'move' ret[508897](508901 'deref' result[62781]))
    gotoReturn _end_%[508895] _end_%[508895]
    (475196 'end of statement' result[62781])
    label _end_%[508895]
    (508899 return ret[508897])
  }
  where {
    unknown tmp[419104] "maybe param" "temp"
    (419115 'move' tmp[419104](62758 call isHomogeneousTuple y[62752]))
    unknown call_tmp[615406] "expr temp" "maybe param" "maybe type" "temp"
    (615409 'move' call_tmp[615406](419117 call _cond_invalid tmp[419104]))
    if call_tmp[615406]
    {
      (419120 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555241] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555242] "maybe param" "temp"
    unknown call_tmp[615411] "expr temp" "maybe param" "maybe type" "temp"
    (615414 'move' call_tmp[615411](419105 call isTrue tmp[419104]))
    (555247 'move' tmp[555242](555245 call _cond_test call_tmp[615411]))
    if tmp[555242]
    {
      { scopeless type
        unknown call_type_tmp[491793] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615416] "expr temp" "maybe param" "maybe type" "temp"
        (615419 'move' call_tmp[615416](62765 call y[62752] 0))
        (491797 'move' call_type_tmp[491793](62766 'typeof' call_tmp[615416]))
      }
      unknown tmp[555249] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615421] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615424 'move' call_tmp[615421](454842 'typeof' x[62746]))
      unknown call_tmp[615426] "expr temp" "maybe param" "maybe type" "temp"
      (615429 'move' call_tmp[615426](354273 'is_subtype' call_type_tmp[491793] call_tmp[615421]))
      (555251 'move' tmp[555249](419108 call isTrue call_tmp[615426]))
      (555256 'move' tmp[555241](555253 '_paramFoldLogical' tmp[555242] tmp[555249]))
    }
    {
      (555261 'move' tmp[555241](555258 '_paramFoldLogical' tmp[555242] 0))
    }
    (748249 call chpl_statementLevelSymbol tmp[555241])
  }
  function **[62862](arg x[62859]:_tuple[56199](?), arg y[62869] :
  unknown call_tmp[615431] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508908] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491799] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615436] "expr temp" "maybe param" "maybe type" "temp"
      (615439 'move' call_tmp[615436](62883 call x[62859] 0))
      (491803 'move' call_type_tmp[491799](62884 'typeof' call_tmp[615436]))
    }
    unknown result[62887] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615443] "expr temp" "maybe param" "maybe type" "temp"
    (615446 'move' call_tmp[615443](62877 call size _mt[243] x[62859]))
    unknown call_tmp[615448] "expr temp" "maybe param" "maybe type" "temp"
    (615451 'move' call_tmp[615448](62885 call * call_tmp[615443] call_type_tmp[491799]))
    (541001 'default init var' result[62887] call_tmp[615448])
    (62890 'end of statement')
    {
      unknown d[62916] "dead at end of block" "insert auto destroy"
      (541003 'init var' d[62916] 0)
      (475198 'end of statement')
      unknown tmp[62917] "maybe param" "temp"
      unknown call_tmp[615455] "expr temp" "maybe param" "maybe type" "temp"
      (615458 'move' call_tmp[615455](62894 call size _mt[243] x[62859]))
      unknown call_tmp[615460] "expr temp" "maybe param" "maybe type" "temp"
      (615463 'move' call_tmp[615460](62898 call - call_tmp[615455] 1))
      (62929 'move' tmp[62917](62927 call chpl_compute_low_param_loop_bound 0 call_tmp[615460]))
      unknown tmp[62918] "maybe param" "temp"
      unknown call_tmp[615467] "expr temp" "maybe param" "maybe type" "temp"
      (615470 'move' call_tmp[615467](62936 call size _mt[243] x[62859]))
      unknown call_tmp[615472] "expr temp" "maybe param" "maybe type" "temp"
      (615475 'move' call_tmp[615472](62934 call - call_tmp[615467] 1))
      (62942 'move' tmp[62918](62940 call chpl_compute_high_param_loop_bound 0 call_tmp[615472]))
      unknown tmp[62919] "maybe param" "temp"
      (62945 'move' tmp[62919] 1)
      ParamForLoop[62947]
      { d[62916] tmp[62917] tmp[62918] tmp[62919]
        unknown call_tmp[615477] "expr temp" "maybe param" "maybe type" "temp"
        (615480 'move' call_tmp[615477](62905 call result[62887] d[62916]))
        unknown call_tmp[615482] "expr temp" "maybe param" "maybe type" "temp"
        (615485 'move' call_tmp[615482](62909 call x[62859] d[62916]))
        unknown call_tmp[615487] "expr temp" "maybe param" "maybe type" "temp"
        (615490 'move' call_tmp[615487](62911 call ** call_tmp[615482] y[62869]))
        (62913 call = call_tmp[615477] call_tmp[615487])
        (475199 'end of statement' result[62887] d[62916] d[62916])
      }
      label _unused_continueLabel[62921]
      label _breakLabel[62920]
    }
    (508913 'move' ret[508908](508912 'deref' result[62887]))
    gotoReturn _end_**[508906] _end_**[508906]
    (475203 'end of statement' result[62887])
    label _end_**[508906]
    (508910 return ret[508908])
  }
  where {
    (62875 call isHomogeneousTuple x[62859])
  }
  function **[62969](arg x[62966]:_any[178](?), arg y[62972]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508919] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491805] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615492] "expr temp" "maybe param" "maybe type" "temp"
      (615495 'move' call_tmp[615492](62997 call y[62972] 0))
      (491809 'move' call_type_tmp[491805](62998 'typeof' call_tmp[615492]))
    }
    unknown result[63001] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615499] "expr temp" "maybe param" "maybe type" "temp"
    (615502 'move' call_tmp[615499](62991 call size _mt[243] y[62972]))
    unknown call_tmp[615504] "expr temp" "maybe param" "maybe type" "temp"
    (615507 'move' call_tmp[615504](62999 call * call_tmp[615499] call_type_tmp[491805]))
    (541005 'default init var' result[63001] call_tmp[615504])
    (63004 'end of statement')
    {
      unknown d[63030] "dead at end of block" "insert auto destroy"
      (541007 'init var' d[63030] 0)
      (475205 'end of statement')
      unknown tmp[63031] "maybe param" "temp"
      unknown call_tmp[615511] "expr temp" "maybe param" "maybe type" "temp"
      (615514 'move' call_tmp[615511](63008 call size _mt[243] y[62972]))
      unknown call_tmp[615516] "expr temp" "maybe param" "maybe type" "temp"
      (615519 'move' call_tmp[615516](63012 call - call_tmp[615511] 1))
      (63043 'move' tmp[63031](63041 call chpl_compute_low_param_loop_bound 0 call_tmp[615516]))
      unknown tmp[63032] "maybe param" "temp"
      unknown call_tmp[615523] "expr temp" "maybe param" "maybe type" "temp"
      (615526 'move' call_tmp[615523](63050 call size _mt[243] y[62972]))
      unknown call_tmp[615528] "expr temp" "maybe param" "maybe type" "temp"
      (615531 'move' call_tmp[615528](63048 call - call_tmp[615523] 1))
      (63056 'move' tmp[63032](63054 call chpl_compute_high_param_loop_bound 0 call_tmp[615528]))
      unknown tmp[63033] "maybe param" "temp"
      (63059 'move' tmp[63033] 1)
      ParamForLoop[63061]
      { d[63030] tmp[63031] tmp[63032] tmp[63033]
        unknown call_tmp[615533] "expr temp" "maybe param" "maybe type" "temp"
        (615536 'move' call_tmp[615533](63019 call result[63001] d[63030]))
        unknown call_tmp[615538] "expr temp" "maybe param" "maybe type" "temp"
        (615541 'move' call_tmp[615538](63024 call y[62972] d[63030]))
        unknown call_tmp[615543] "expr temp" "maybe param" "maybe type" "temp"
        (615546 'move' call_tmp[615543](63025 call ** x[62966] call_tmp[615538]))
        (63027 call = call_tmp[615533] call_tmp[615543])
        (475206 'end of statement' result[63001] d[63030] d[63030])
      }
      label _unused_continueLabel[63035]
      label _breakLabel[63034]
    }
    (508924 'move' ret[508919](508923 'deref' result[63001]))
    gotoReturn _end_**[508917] _end_**[508917]
    (475210 'end of statement' result[63001])
    label _end_**[508917]
    (508921 return ret[508919])
  }
  where {
    unknown tmp[419125] "maybe param" "temp"
    (419136 'move' tmp[419125](62978 call isHomogeneousTuple y[62972]))
    unknown call_tmp[615548] "expr temp" "maybe param" "maybe type" "temp"
    (615551 'move' call_tmp[615548](419138 call _cond_invalid tmp[419125]))
    if call_tmp[615548]
    {
      (419141 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555268] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555269] "maybe param" "temp"
    unknown call_tmp[615553] "expr temp" "maybe param" "maybe type" "temp"
    (615556 'move' call_tmp[615553](419126 call isTrue tmp[419125]))
    (555274 'move' tmp[555269](555272 call _cond_test call_tmp[615553]))
    if tmp[555269]
    {
      { scopeless type
        unknown call_type_tmp[491811] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615558] "expr temp" "maybe param" "maybe type" "temp"
        (615561 'move' call_tmp[615558](62985 call y[62972] 0))
        (491815 'move' call_type_tmp[491811](62986 'typeof' call_tmp[615558]))
      }
      unknown tmp[555276] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615563] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615566 'move' call_tmp[615563](454844 'typeof' x[62966]))
      unknown call_tmp[615568] "expr temp" "maybe param" "maybe type" "temp"
      (615571 'move' call_tmp[615568](354274 'is_subtype' call_type_tmp[491811] call_tmp[615563]))
      (555278 'move' tmp[555276](419129 call isTrue call_tmp[615568]))
      (555283 'move' tmp[555268](555280 '_paramFoldLogical' tmp[555269] tmp[555276]))
    }
    {
      (555288 'move' tmp[555268](555285 '_paramFoldLogical' tmp[555269] 0))
    }
    (748251 call chpl_statementLevelSymbol tmp[555268])
  }
  function &[63082](arg x[63079]:_tuple[56199](?), arg y[63089] :
  unknown call_tmp[615573] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508930] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491817] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615578] "expr temp" "maybe param" "maybe type" "temp"
      (615581 'move' call_tmp[615578](63103 call x[63079] 0))
      (491821 'move' call_type_tmp[491817](63104 'typeof' call_tmp[615578]))
    }
    unknown result[63107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615585] "expr temp" "maybe param" "maybe type" "temp"
    (615588 'move' call_tmp[615585](63097 call size _mt[243] x[63079]))
    unknown call_tmp[615590] "expr temp" "maybe param" "maybe type" "temp"
    (615593 'move' call_tmp[615590](63105 call * call_tmp[615585] call_type_tmp[491817]))
    (541009 'default init var' result[63107] call_tmp[615590])
    (63110 'end of statement')
    {
      unknown d[63136] "dead at end of block" "insert auto destroy"
      (541011 'init var' d[63136] 0)
      (475212 'end of statement')
      unknown tmp[63137] "maybe param" "temp"
      unknown call_tmp[615597] "expr temp" "maybe param" "maybe type" "temp"
      (615600 'move' call_tmp[615597](63114 call size _mt[243] x[63079]))
      unknown call_tmp[615602] "expr temp" "maybe param" "maybe type" "temp"
      (615605 'move' call_tmp[615602](63118 call - call_tmp[615597] 1))
      (63149 'move' tmp[63137](63147 call chpl_compute_low_param_loop_bound 0 call_tmp[615602]))
      unknown tmp[63138] "maybe param" "temp"
      unknown call_tmp[615609] "expr temp" "maybe param" "maybe type" "temp"
      (615612 'move' call_tmp[615609](63156 call size _mt[243] x[63079]))
      unknown call_tmp[615614] "expr temp" "maybe param" "maybe type" "temp"
      (615617 'move' call_tmp[615614](63154 call - call_tmp[615609] 1))
      (63162 'move' tmp[63138](63160 call chpl_compute_high_param_loop_bound 0 call_tmp[615614]))
      unknown tmp[63139] "maybe param" "temp"
      (63165 'move' tmp[63139] 1)
      ParamForLoop[63167]
      { d[63136] tmp[63137] tmp[63138] tmp[63139]
        unknown call_tmp[615619] "expr temp" "maybe param" "maybe type" "temp"
        (615622 'move' call_tmp[615619](63125 call result[63107] d[63136]))
        unknown call_tmp[615624] "expr temp" "maybe param" "maybe type" "temp"
        (615627 'move' call_tmp[615624](63129 call x[63079] d[63136]))
        unknown call_tmp[615629] "expr temp" "maybe param" "maybe type" "temp"
        (615632 'move' call_tmp[615629](63131 call & call_tmp[615624] y[63089]))
        (63133 call = call_tmp[615619] call_tmp[615629])
        (475213 'end of statement' result[63107] d[63136] d[63136])
      }
      label _unused_continueLabel[63141]
      label _breakLabel[63140]
    }
    (508935 'move' ret[508930](508934 'deref' result[63107]))
    gotoReturn _end_&[508928] _end_&[508928]
    (475217 'end of statement' result[63107])
    label _end_&[508928]
    (508932 return ret[508930])
  }
  where {
    (63095 call isHomogeneousTuple x[63079])
  }
  function &[63189](arg x[63186]:_any[178](?), arg y[63192]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508941] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491823] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615634] "expr temp" "maybe param" "maybe type" "temp"
      (615637 'move' call_tmp[615634](63217 call y[63192] 0))
      (491827 'move' call_type_tmp[491823](63218 'typeof' call_tmp[615634]))
    }
    unknown result[63221] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615641] "expr temp" "maybe param" "maybe type" "temp"
    (615644 'move' call_tmp[615641](63211 call size _mt[243] y[63192]))
    unknown call_tmp[615646] "expr temp" "maybe param" "maybe type" "temp"
    (615649 'move' call_tmp[615646](63219 call * call_tmp[615641] call_type_tmp[491823]))
    (541013 'default init var' result[63221] call_tmp[615646])
    (63224 'end of statement')
    {
      unknown d[63250] "dead at end of block" "insert auto destroy"
      (541015 'init var' d[63250] 0)
      (475219 'end of statement')
      unknown tmp[63251] "maybe param" "temp"
      unknown call_tmp[615653] "expr temp" "maybe param" "maybe type" "temp"
      (615656 'move' call_tmp[615653](63228 call size _mt[243] y[63192]))
      unknown call_tmp[615658] "expr temp" "maybe param" "maybe type" "temp"
      (615661 'move' call_tmp[615658](63232 call - call_tmp[615653] 1))
      (63263 'move' tmp[63251](63261 call chpl_compute_low_param_loop_bound 0 call_tmp[615658]))
      unknown tmp[63252] "maybe param" "temp"
      unknown call_tmp[615665] "expr temp" "maybe param" "maybe type" "temp"
      (615668 'move' call_tmp[615665](63270 call size _mt[243] y[63192]))
      unknown call_tmp[615670] "expr temp" "maybe param" "maybe type" "temp"
      (615673 'move' call_tmp[615670](63268 call - call_tmp[615665] 1))
      (63276 'move' tmp[63252](63274 call chpl_compute_high_param_loop_bound 0 call_tmp[615670]))
      unknown tmp[63253] "maybe param" "temp"
      (63279 'move' tmp[63253] 1)
      ParamForLoop[63281]
      { d[63250] tmp[63251] tmp[63252] tmp[63253]
        unknown call_tmp[615675] "expr temp" "maybe param" "maybe type" "temp"
        (615678 'move' call_tmp[615675](63239 call result[63221] d[63250]))
        unknown call_tmp[615680] "expr temp" "maybe param" "maybe type" "temp"
        (615683 'move' call_tmp[615680](63244 call y[63192] d[63250]))
        unknown call_tmp[615685] "expr temp" "maybe param" "maybe type" "temp"
        (615688 'move' call_tmp[615685](63245 call & x[63186] call_tmp[615680]))
        (63247 call = call_tmp[615675] call_tmp[615685])
        (475220 'end of statement' result[63221] d[63250] d[63250])
      }
      label _unused_continueLabel[63255]
      label _breakLabel[63254]
    }
    (508946 'move' ret[508941](508945 'deref' result[63221]))
    gotoReturn _end_&[508939] _end_&[508939]
    (475224 'end of statement' result[63221])
    label _end_&[508939]
    (508943 return ret[508941])
  }
  where {
    unknown tmp[419146] "maybe param" "temp"
    (419157 'move' tmp[419146](63198 call isHomogeneousTuple y[63192]))
    unknown call_tmp[615690] "expr temp" "maybe param" "maybe type" "temp"
    (615693 'move' call_tmp[615690](419159 call _cond_invalid tmp[419146]))
    if call_tmp[615690]
    {
      (419162 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555295] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555296] "maybe param" "temp"
    unknown call_tmp[615695] "expr temp" "maybe param" "maybe type" "temp"
    (615698 'move' call_tmp[615695](419147 call isTrue tmp[419146]))
    (555301 'move' tmp[555296](555299 call _cond_test call_tmp[615695]))
    if tmp[555296]
    {
      { scopeless type
        unknown call_type_tmp[491829] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615700] "expr temp" "maybe param" "maybe type" "temp"
        (615703 'move' call_tmp[615700](63205 call y[63192] 0))
        (491833 'move' call_type_tmp[491829](63206 'typeof' call_tmp[615700]))
      }
      unknown tmp[555303] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615705] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615708 'move' call_tmp[615705](454846 'typeof' x[63186]))
      unknown call_tmp[615710] "expr temp" "maybe param" "maybe type" "temp"
      (615713 'move' call_tmp[615710](354275 'is_subtype' call_type_tmp[491829] call_tmp[615705]))
      (555305 'move' tmp[555303](419150 call isTrue call_tmp[615710]))
      (555310 'move' tmp[555295](555307 '_paramFoldLogical' tmp[555296] tmp[555303]))
    }
    {
      (555315 'move' tmp[555295](555312 '_paramFoldLogical' tmp[555296] 0))
    }
    (748253 call chpl_statementLevelSymbol tmp[555295])
  }
  function |[63302](arg x[63299]:_tuple[56199](?), arg y[63309] :
  unknown call_tmp[615715] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508952] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491835] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615720] "expr temp" "maybe param" "maybe type" "temp"
      (615723 'move' call_tmp[615720](63323 call x[63299] 0))
      (491839 'move' call_type_tmp[491835](63324 'typeof' call_tmp[615720]))
    }
    unknown result[63327] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615727] "expr temp" "maybe param" "maybe type" "temp"
    (615730 'move' call_tmp[615727](63317 call size _mt[243] x[63299]))
    unknown call_tmp[615732] "expr temp" "maybe param" "maybe type" "temp"
    (615735 'move' call_tmp[615732](63325 call * call_tmp[615727] call_type_tmp[491835]))
    (541017 'default init var' result[63327] call_tmp[615732])
    (63330 'end of statement')
    {
      unknown d[63356] "dead at end of block" "insert auto destroy"
      (541019 'init var' d[63356] 0)
      (475226 'end of statement')
      unknown tmp[63357] "maybe param" "temp"
      unknown call_tmp[615739] "expr temp" "maybe param" "maybe type" "temp"
      (615742 'move' call_tmp[615739](63334 call size _mt[243] x[63299]))
      unknown call_tmp[615744] "expr temp" "maybe param" "maybe type" "temp"
      (615747 'move' call_tmp[615744](63338 call - call_tmp[615739] 1))
      (63369 'move' tmp[63357](63367 call chpl_compute_low_param_loop_bound 0 call_tmp[615744]))
      unknown tmp[63358] "maybe param" "temp"
      unknown call_tmp[615751] "expr temp" "maybe param" "maybe type" "temp"
      (615754 'move' call_tmp[615751](63376 call size _mt[243] x[63299]))
      unknown call_tmp[615756] "expr temp" "maybe param" "maybe type" "temp"
      (615759 'move' call_tmp[615756](63374 call - call_tmp[615751] 1))
      (63382 'move' tmp[63358](63380 call chpl_compute_high_param_loop_bound 0 call_tmp[615756]))
      unknown tmp[63359] "maybe param" "temp"
      (63385 'move' tmp[63359] 1)
      ParamForLoop[63387]
      { d[63356] tmp[63357] tmp[63358] tmp[63359]
        unknown call_tmp[615761] "expr temp" "maybe param" "maybe type" "temp"
        (615764 'move' call_tmp[615761](63345 call result[63327] d[63356]))
        unknown call_tmp[615766] "expr temp" "maybe param" "maybe type" "temp"
        (615769 'move' call_tmp[615766](63349 call x[63299] d[63356]))
        unknown call_tmp[615771] "expr temp" "maybe param" "maybe type" "temp"
        (615774 'move' call_tmp[615771](63351 call | call_tmp[615766] y[63309]))
        (63353 call = call_tmp[615761] call_tmp[615771])
        (475227 'end of statement' result[63327] d[63356] d[63356])
      }
      label _unused_continueLabel[63361]
      label _breakLabel[63360]
    }
    (508957 'move' ret[508952](508956 'deref' result[63327]))
    gotoReturn _end_|[508950] _end_|[508950]
    (475231 'end of statement' result[63327])
    label _end_|[508950]
    (508954 return ret[508952])
  }
  where {
    (63315 call isHomogeneousTuple x[63299])
  }
  function |[63409](arg x[63406]:_any[178](?), arg y[63412]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508963] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491841] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615776] "expr temp" "maybe param" "maybe type" "temp"
      (615779 'move' call_tmp[615776](63437 call y[63412] 0))
      (491845 'move' call_type_tmp[491841](63438 'typeof' call_tmp[615776]))
    }
    unknown result[63441] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615783] "expr temp" "maybe param" "maybe type" "temp"
    (615786 'move' call_tmp[615783](63431 call size _mt[243] y[63412]))
    unknown call_tmp[615788] "expr temp" "maybe param" "maybe type" "temp"
    (615791 'move' call_tmp[615788](63439 call * call_tmp[615783] call_type_tmp[491841]))
    (541021 'default init var' result[63441] call_tmp[615788])
    (63444 'end of statement')
    {
      unknown d[63470] "dead at end of block" "insert auto destroy"
      (541023 'init var' d[63470] 0)
      (475233 'end of statement')
      unknown tmp[63471] "maybe param" "temp"
      unknown call_tmp[615795] "expr temp" "maybe param" "maybe type" "temp"
      (615798 'move' call_tmp[615795](63448 call size _mt[243] y[63412]))
      unknown call_tmp[615800] "expr temp" "maybe param" "maybe type" "temp"
      (615803 'move' call_tmp[615800](63452 call - call_tmp[615795] 1))
      (63483 'move' tmp[63471](63481 call chpl_compute_low_param_loop_bound 0 call_tmp[615800]))
      unknown tmp[63472] "maybe param" "temp"
      unknown call_tmp[615807] "expr temp" "maybe param" "maybe type" "temp"
      (615810 'move' call_tmp[615807](63490 call size _mt[243] y[63412]))
      unknown call_tmp[615812] "expr temp" "maybe param" "maybe type" "temp"
      (615815 'move' call_tmp[615812](63488 call - call_tmp[615807] 1))
      (63496 'move' tmp[63472](63494 call chpl_compute_high_param_loop_bound 0 call_tmp[615812]))
      unknown tmp[63473] "maybe param" "temp"
      (63499 'move' tmp[63473] 1)
      ParamForLoop[63501]
      { d[63470] tmp[63471] tmp[63472] tmp[63473]
        unknown call_tmp[615817] "expr temp" "maybe param" "maybe type" "temp"
        (615820 'move' call_tmp[615817](63459 call result[63441] d[63470]))
        unknown call_tmp[615822] "expr temp" "maybe param" "maybe type" "temp"
        (615825 'move' call_tmp[615822](63464 call y[63412] d[63470]))
        unknown call_tmp[615827] "expr temp" "maybe param" "maybe type" "temp"
        (615830 'move' call_tmp[615827](63465 call | x[63406] call_tmp[615822]))
        (63467 call = call_tmp[615817] call_tmp[615827])
        (475234 'end of statement' result[63441] d[63470] d[63470])
      }
      label _unused_continueLabel[63475]
      label _breakLabel[63474]
    }
    (508968 'move' ret[508963](508967 'deref' result[63441]))
    gotoReturn _end_|[508961] _end_|[508961]
    (475238 'end of statement' result[63441])
    label _end_|[508961]
    (508965 return ret[508963])
  }
  where {
    unknown tmp[419167] "maybe param" "temp"
    (419178 'move' tmp[419167](63418 call isHomogeneousTuple y[63412]))
    unknown call_tmp[615832] "expr temp" "maybe param" "maybe type" "temp"
    (615835 'move' call_tmp[615832](419180 call _cond_invalid tmp[419167]))
    if call_tmp[615832]
    {
      (419183 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555322] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555323] "maybe param" "temp"
    unknown call_tmp[615837] "expr temp" "maybe param" "maybe type" "temp"
    (615840 'move' call_tmp[615837](419168 call isTrue tmp[419167]))
    (555328 'move' tmp[555323](555326 call _cond_test call_tmp[615837]))
    if tmp[555323]
    {
      { scopeless type
        unknown call_type_tmp[491847] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615842] "expr temp" "maybe param" "maybe type" "temp"
        (615845 'move' call_tmp[615842](63425 call y[63412] 0))
        (491851 'move' call_type_tmp[491847](63426 'typeof' call_tmp[615842]))
      }
      unknown tmp[555330] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615847] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615850 'move' call_tmp[615847](454848 'typeof' x[63406]))
      unknown call_tmp[615852] "expr temp" "maybe param" "maybe type" "temp"
      (615855 'move' call_tmp[615852](354276 'is_subtype' call_type_tmp[491847] call_tmp[615847]))
      (555332 'move' tmp[555330](419171 call isTrue call_tmp[615852]))
      (555337 'move' tmp[555322](555334 '_paramFoldLogical' tmp[555323] tmp[555330]))
    }
    {
      (555342 'move' tmp[555322](555339 '_paramFoldLogical' tmp[555323] 0))
    }
    (748255 call chpl_statementLevelSymbol tmp[555322])
  }
  function ^[63522](arg x[63519]:_tuple[56199](?), arg y[63529] :
  unknown call_tmp[615857] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508974] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491853] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615862] "expr temp" "maybe param" "maybe type" "temp"
      (615865 'move' call_tmp[615862](63543 call x[63519] 0))
      (491857 'move' call_type_tmp[491853](63544 'typeof' call_tmp[615862]))
    }
    unknown result[63547] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615869] "expr temp" "maybe param" "maybe type" "temp"
    (615872 'move' call_tmp[615869](63537 call size _mt[243] x[63519]))
    unknown call_tmp[615874] "expr temp" "maybe param" "maybe type" "temp"
    (615877 'move' call_tmp[615874](63545 call * call_tmp[615869] call_type_tmp[491853]))
    (541025 'default init var' result[63547] call_tmp[615874])
    (63550 'end of statement')
    {
      unknown d[63576] "dead at end of block" "insert auto destroy"
      (541027 'init var' d[63576] 0)
      (475240 'end of statement')
      unknown tmp[63577] "maybe param" "temp"
      unknown call_tmp[615881] "expr temp" "maybe param" "maybe type" "temp"
      (615884 'move' call_tmp[615881](63554 call size _mt[243] x[63519]))
      unknown call_tmp[615886] "expr temp" "maybe param" "maybe type" "temp"
      (615889 'move' call_tmp[615886](63558 call - call_tmp[615881] 1))
      (63589 'move' tmp[63577](63587 call chpl_compute_low_param_loop_bound 0 call_tmp[615886]))
      unknown tmp[63578] "maybe param" "temp"
      unknown call_tmp[615893] "expr temp" "maybe param" "maybe type" "temp"
      (615896 'move' call_tmp[615893](63596 call size _mt[243] x[63519]))
      unknown call_tmp[615898] "expr temp" "maybe param" "maybe type" "temp"
      (615901 'move' call_tmp[615898](63594 call - call_tmp[615893] 1))
      (63602 'move' tmp[63578](63600 call chpl_compute_high_param_loop_bound 0 call_tmp[615898]))
      unknown tmp[63579] "maybe param" "temp"
      (63605 'move' tmp[63579] 1)
      ParamForLoop[63607]
      { d[63576] tmp[63577] tmp[63578] tmp[63579]
        unknown call_tmp[615903] "expr temp" "maybe param" "maybe type" "temp"
        (615906 'move' call_tmp[615903](63565 call result[63547] d[63576]))
        unknown call_tmp[615908] "expr temp" "maybe param" "maybe type" "temp"
        (615911 'move' call_tmp[615908](63569 call x[63519] d[63576]))
        unknown call_tmp[615913] "expr temp" "maybe param" "maybe type" "temp"
        (615916 'move' call_tmp[615913](63571 call ^ call_tmp[615908] y[63529]))
        (63573 call = call_tmp[615903] call_tmp[615913])
        (475241 'end of statement' result[63547] d[63576] d[63576])
      }
      label _unused_continueLabel[63581]
      label _breakLabel[63580]
    }
    (508979 'move' ret[508974](508978 'deref' result[63547]))
    gotoReturn _end_^[508972] _end_^[508972]
    (475245 'end of statement' result[63547])
    label _end_^[508972]
    (508976 return ret[508974])
  }
  where {
    (63535 call isHomogeneousTuple x[63519])
  }
  function ^[63629](arg x[63626]:_any[178](?), arg y[63632]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508985] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491859] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615918] "expr temp" "maybe param" "maybe type" "temp"
      (615921 'move' call_tmp[615918](63657 call y[63632] 0))
      (491863 'move' call_type_tmp[491859](63658 'typeof' call_tmp[615918]))
    }
    unknown result[63661] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615925] "expr temp" "maybe param" "maybe type" "temp"
    (615928 'move' call_tmp[615925](63651 call size _mt[243] y[63632]))
    unknown call_tmp[615930] "expr temp" "maybe param" "maybe type" "temp"
    (615933 'move' call_tmp[615930](63659 call * call_tmp[615925] call_type_tmp[491859]))
    (541029 'default init var' result[63661] call_tmp[615930])
    (63664 'end of statement')
    {
      unknown d[63690] "dead at end of block" "insert auto destroy"
      (541031 'init var' d[63690] 0)
      (475247 'end of statement')
      unknown tmp[63691] "maybe param" "temp"
      unknown call_tmp[615937] "expr temp" "maybe param" "maybe type" "temp"
      (615940 'move' call_tmp[615937](63668 call size _mt[243] y[63632]))
      unknown call_tmp[615942] "expr temp" "maybe param" "maybe type" "temp"
      (615945 'move' call_tmp[615942](63672 call - call_tmp[615937] 1))
      (63703 'move' tmp[63691](63701 call chpl_compute_low_param_loop_bound 0 call_tmp[615942]))
      unknown tmp[63692] "maybe param" "temp"
      unknown call_tmp[615949] "expr temp" "maybe param" "maybe type" "temp"
      (615952 'move' call_tmp[615949](63710 call size _mt[243] y[63632]))
      unknown call_tmp[615954] "expr temp" "maybe param" "maybe type" "temp"
      (615957 'move' call_tmp[615954](63708 call - call_tmp[615949] 1))
      (63716 'move' tmp[63692](63714 call chpl_compute_high_param_loop_bound 0 call_tmp[615954]))
      unknown tmp[63693] "maybe param" "temp"
      (63719 'move' tmp[63693] 1)
      ParamForLoop[63721]
      { d[63690] tmp[63691] tmp[63692] tmp[63693]
        unknown call_tmp[615959] "expr temp" "maybe param" "maybe type" "temp"
        (615962 'move' call_tmp[615959](63679 call result[63661] d[63690]))
        unknown call_tmp[615964] "expr temp" "maybe param" "maybe type" "temp"
        (615967 'move' call_tmp[615964](63684 call y[63632] d[63690]))
        unknown call_tmp[615969] "expr temp" "maybe param" "maybe type" "temp"
        (615972 'move' call_tmp[615969](63685 call ^ x[63626] call_tmp[615964]))
        (63687 call = call_tmp[615959] call_tmp[615969])
        (475248 'end of statement' result[63661] d[63690] d[63690])
      }
      label _unused_continueLabel[63695]
      label _breakLabel[63694]
    }
    (508990 'move' ret[508985](508989 'deref' result[63661]))
    gotoReturn _end_^[508983] _end_^[508983]
    (475252 'end of statement' result[63661])
    label _end_^[508983]
    (508987 return ret[508985])
  }
  where {
    unknown tmp[419188] "maybe param" "temp"
    (419199 'move' tmp[419188](63638 call isHomogeneousTuple y[63632]))
    unknown call_tmp[615974] "expr temp" "maybe param" "maybe type" "temp"
    (615977 'move' call_tmp[615974](419201 call _cond_invalid tmp[419188]))
    if call_tmp[615974]
    {
      (419204 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555349] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555350] "maybe param" "temp"
    unknown call_tmp[615979] "expr temp" "maybe param" "maybe type" "temp"
    (615982 'move' call_tmp[615979](419189 call isTrue tmp[419188]))
    (555355 'move' tmp[555350](555353 call _cond_test call_tmp[615979]))
    if tmp[555350]
    {
      { scopeless type
        unknown call_type_tmp[491865] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615984] "expr temp" "maybe param" "maybe type" "temp"
        (615987 'move' call_tmp[615984](63645 call y[63632] 0))
        (491869 'move' call_type_tmp[491865](63646 'typeof' call_tmp[615984]))
      }
      unknown tmp[555357] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615989] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615992 'move' call_tmp[615989](454850 'typeof' x[63626]))
      unknown call_tmp[615994] "expr temp" "maybe param" "maybe type" "temp"
      (615997 'move' call_tmp[615994](354277 'is_subtype' call_type_tmp[491865] call_tmp[615989]))
      (555359 'move' tmp[555357](419192 call isTrue call_tmp[615994]))
      (555364 'move' tmp[555349](555361 '_paramFoldLogical' tmp[555350] tmp[555357]))
    }
    {
      (555369 'move' tmp[555349](555366 '_paramFoldLogical' tmp[555350] 0))
    }
    (748257 call chpl_statementLevelSymbol tmp[555349])
  }
  function <<[63742](arg x[63739]:_tuple[56199](?), arg y[63749] :
  unknown call_tmp[615999] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508996] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491871] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616004] "expr temp" "maybe param" "maybe type" "temp"
      (616007 'move' call_tmp[616004](63763 call x[63739] 0))
      (491875 'move' call_type_tmp[491871](63764 'typeof' call_tmp[616004]))
    }
    unknown result[63767] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616011] "expr temp" "maybe param" "maybe type" "temp"
    (616014 'move' call_tmp[616011](63757 call size _mt[243] x[63739]))
    unknown call_tmp[616016] "expr temp" "maybe param" "maybe type" "temp"
    (616019 'move' call_tmp[616016](63765 call * call_tmp[616011] call_type_tmp[491871]))
    (541033 'default init var' result[63767] call_tmp[616016])
    (63770 'end of statement')
    {
      unknown d[63796] "dead at end of block" "insert auto destroy"
      (541035 'init var' d[63796] 0)
      (475254 'end of statement')
      unknown tmp[63797] "maybe param" "temp"
      unknown call_tmp[616023] "expr temp" "maybe param" "maybe type" "temp"
      (616026 'move' call_tmp[616023](63774 call size _mt[243] x[63739]))
      unknown call_tmp[616028] "expr temp" "maybe param" "maybe type" "temp"
      (616031 'move' call_tmp[616028](63778 call - call_tmp[616023] 1))
      (63809 'move' tmp[63797](63807 call chpl_compute_low_param_loop_bound 0 call_tmp[616028]))
      unknown tmp[63798] "maybe param" "temp"
      unknown call_tmp[616035] "expr temp" "maybe param" "maybe type" "temp"
      (616038 'move' call_tmp[616035](63816 call size _mt[243] x[63739]))
      unknown call_tmp[616040] "expr temp" "maybe param" "maybe type" "temp"
      (616043 'move' call_tmp[616040](63814 call - call_tmp[616035] 1))
      (63822 'move' tmp[63798](63820 call chpl_compute_high_param_loop_bound 0 call_tmp[616040]))
      unknown tmp[63799] "maybe param" "temp"
      (63825 'move' tmp[63799] 1)
      ParamForLoop[63827]
      { d[63796] tmp[63797] tmp[63798] tmp[63799]
        unknown call_tmp[616045] "expr temp" "maybe param" "maybe type" "temp"
        (616048 'move' call_tmp[616045](63785 call result[63767] d[63796]))
        unknown call_tmp[616050] "expr temp" "maybe param" "maybe type" "temp"
        (616053 'move' call_tmp[616050](63789 call x[63739] d[63796]))
        unknown call_tmp[616055] "expr temp" "maybe param" "maybe type" "temp"
        (616058 'move' call_tmp[616055](63791 call << call_tmp[616050] y[63749]))
        (63793 call = call_tmp[616045] call_tmp[616055])
        (475255 'end of statement' result[63767] d[63796] d[63796])
      }
      label _unused_continueLabel[63801]
      label _breakLabel[63800]
    }
    (509001 'move' ret[508996](509000 'deref' result[63767]))
    gotoReturn _end_<<[508994] _end_<<[508994]
    (475259 'end of statement' result[63767])
    label _end_<<[508994]
    (508998 return ret[508996])
  }
  where {
    (63755 call isHomogeneousTuple x[63739])
  }
  function <<[63849](arg x[63846]:_any[178](?), arg y[63852]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[509007] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491877] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616060] "expr temp" "maybe param" "maybe type" "temp"
      (616063 'move' call_tmp[616060](63877 call y[63852] 0))
      (491881 'move' call_type_tmp[491877](63878 'typeof' call_tmp[616060]))
    }
    unknown result[63881] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616067] "expr temp" "maybe param" "maybe type" "temp"
    (616070 'move' call_tmp[616067](63871 call size _mt[243] y[63852]))
    unknown call_tmp[616072] "expr temp" "maybe param" "maybe type" "temp"
    (616075 'move' call_tmp[616072](63879 call * call_tmp[616067] call_type_tmp[491877]))
    (541037 'default init var' result[63881] call_tmp[616072])
    (63884 'end of statement')
    {
      unknown d[63910] "dead at end of block" "insert auto destroy"
      (541039 'init var' d[63910] 0)
      (475261 'end of statement')
      unknown tmp[63911] "maybe param" "temp"
      unknown call_tmp[616079] "expr temp" "maybe param" "maybe type" "temp"
      (616082 'move' call_tmp[616079](63888 call size _mt[243] y[63852]))
      unknown call_tmp[616084] "expr temp" "maybe param" "maybe type" "temp"
      (616087 'move' call_tmp[616084](63892 call - call_tmp[616079] 1))
      (63923 'move' tmp[63911](63921 call chpl_compute_low_param_loop_bound 0 call_tmp[616084]))
      unknown tmp[63912] "maybe param" "temp"
      unknown call_tmp[616091] "expr temp" "maybe param" "maybe type" "temp"
      (616094 'move' call_tmp[616091](63930 call size _mt[243] y[63852]))
      unknown call_tmp[616096] "expr temp" "maybe param" "maybe type" "temp"
      (616099 'move' call_tmp[616096](63928 call - call_tmp[616091] 1))
      (63936 'move' tmp[63912](63934 call chpl_compute_high_param_loop_bound 0 call_tmp[616096]))
      unknown tmp[63913] "maybe param" "temp"
      (63939 'move' tmp[63913] 1)
      ParamForLoop[63941]
      { d[63910] tmp[63911] tmp[63912] tmp[63913]
        unknown call_tmp[616101] "expr temp" "maybe param" "maybe type" "temp"
        (616104 'move' call_tmp[616101](63899 call result[63881] d[63910]))
        unknown call_tmp[616106] "expr temp" "maybe param" "maybe type" "temp"
        (616109 'move' call_tmp[616106](63904 call y[63852] d[63910]))
        unknown call_tmp[616111] "expr temp" "maybe param" "maybe type" "temp"
        (616114 'move' call_tmp[616111](63905 call << x[63846] call_tmp[616106]))
        (63907 call = call_tmp[616101] call_tmp[616111])
        (475262 'end of statement' result[63881] d[63910] d[63910])
      }
      label _unused_continueLabel[63915]
      label _breakLabel[63914]
    }
    (509012 'move' ret[509007](509011 'deref' result[63881]))
    gotoReturn _end_<<[509005] _end_<<[509005]
    (475266 'end of statement' result[63881])
    label _end_<<[509005]
    (509009 return ret[509007])
  }
  where {
    unknown tmp[419209] "maybe param" "temp"
    (419220 'move' tmp[419209](63858 call isHomogeneousTuple y[63852]))
    unknown call_tmp[616116] "expr temp" "maybe param" "maybe type" "temp"
    (616119 'move' call_tmp[616116](419222 call _cond_invalid tmp[419209]))
    if call_tmp[616116]
    {
      (419225 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555376] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555377] "maybe param" "temp"
    unknown call_tmp[616121] "expr temp" "maybe param" "maybe type" "temp"
    (616124 'move' call_tmp[616121](419210 call isTrue tmp[419209]))
    (555382 'move' tmp[555377](555380 call _cond_test call_tmp[616121]))
    if tmp[555377]
    {
      { scopeless type
        unknown call_type_tmp[491883] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616126] "expr temp" "maybe param" "maybe type" "temp"
        (616129 'move' call_tmp[616126](63865 call y[63852] 0))
        (491887 'move' call_type_tmp[491883](63866 'typeof' call_tmp[616126]))
      }
      unknown tmp[555384] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616131] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616134 'move' call_tmp[616131](454852 'typeof' x[63846]))
      unknown call_tmp[616136] "expr temp" "maybe param" "maybe type" "temp"
      (616139 'move' call_tmp[616136](354278 'is_subtype' call_type_tmp[491883] call_tmp[616131]))
      (555386 'move' tmp[555384](419213 call isTrue call_tmp[616136]))
      (555391 'move' tmp[555376](555388 '_paramFoldLogical' tmp[555377] tmp[555384]))
    }
    {
      (555396 'move' tmp[555376](555393 '_paramFoldLogical' tmp[555377] 0))
    }
    (748259 call chpl_statementLevelSymbol tmp[555376])
  }
  function >>[63962](arg x[63959]:_tuple[56199](?), arg y[63969] :
  unknown call_tmp[616141] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509018] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491889] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616146] "expr temp" "maybe param" "maybe type" "temp"
      (616149 'move' call_tmp[616146](63983 call x[63959] 0))
      (491893 'move' call_type_tmp[491889](63984 'typeof' call_tmp[616146]))
    }
    unknown result[63987] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616153] "expr temp" "maybe param" "maybe type" "temp"
    (616156 'move' call_tmp[616153](63977 call size _mt[243] x[63959]))
    unknown call_tmp[616158] "expr temp" "maybe param" "maybe type" "temp"
    (616161 'move' call_tmp[616158](63985 call * call_tmp[616153] call_type_tmp[491889]))
    (541041 'default init var' result[63987] call_tmp[616158])
    (63990 'end of statement')
    {
      unknown d[64016] "dead at end of block" "insert auto destroy"
      (541043 'init var' d[64016] 0)
      (475268 'end of statement')
      unknown tmp[64017] "maybe param" "temp"
      unknown call_tmp[616165] "expr temp" "maybe param" "maybe type" "temp"
      (616168 'move' call_tmp[616165](63994 call size _mt[243] x[63959]))
      unknown call_tmp[616170] "expr temp" "maybe param" "maybe type" "temp"
      (616173 'move' call_tmp[616170](63998 call - call_tmp[616165] 1))
      (64029 'move' tmp[64017](64027 call chpl_compute_low_param_loop_bound 0 call_tmp[616170]))
      unknown tmp[64018] "maybe param" "temp"
      unknown call_tmp[616177] "expr temp" "maybe param" "maybe type" "temp"
      (616180 'move' call_tmp[616177](64036 call size _mt[243] x[63959]))
      unknown call_tmp[616182] "expr temp" "maybe param" "maybe type" "temp"
      (616185 'move' call_tmp[616182](64034 call - call_tmp[616177] 1))
      (64042 'move' tmp[64018](64040 call chpl_compute_high_param_loop_bound 0 call_tmp[616182]))
      unknown tmp[64019] "maybe param" "temp"
      (64045 'move' tmp[64019] 1)
      ParamForLoop[64047]
      { d[64016] tmp[64017] tmp[64018] tmp[64019]
        unknown call_tmp[616187] "expr temp" "maybe param" "maybe type" "temp"
        (616190 'move' call_tmp[616187](64005 call result[63987] d[64016]))
        unknown call_tmp[616192] "expr temp" "maybe param" "maybe type" "temp"
        (616195 'move' call_tmp[616192](64009 call x[63959] d[64016]))
        unknown call_tmp[616197] "expr temp" "maybe param" "maybe type" "temp"
        (616200 'move' call_tmp[616197](64011 call >> call_tmp[616192] y[63969]))
        (64013 call = call_tmp[616187] call_tmp[616197])
        (475269 'end of statement' result[63987] d[64016] d[64016])
      }
      label _unused_continueLabel[64021]
      label _breakLabel[64020]
    }
    (509023 'move' ret[509018](509022 'deref' result[63987]))
    gotoReturn _end_>>[509016] _end_>>[509016]
    (475273 'end of statement' result[63987])
    label _end_>>[509016]
    (509020 return ret[509018])
  }
  where {
    (63975 call isHomogeneousTuple x[63959])
  }
  function >>[64069](arg x[64066]:_any[178](?), arg y[64072]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[509029] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491895] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616202] "expr temp" "maybe param" "maybe type" "temp"
      (616205 'move' call_tmp[616202](64097 call y[64072] 0))
      (491899 'move' call_type_tmp[491895](64098 'typeof' call_tmp[616202]))
    }
    unknown result[64101] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616209] "expr temp" "maybe param" "maybe type" "temp"
    (616212 'move' call_tmp[616209](64091 call size _mt[243] y[64072]))
    unknown call_tmp[616214] "expr temp" "maybe param" "maybe type" "temp"
    (616217 'move' call_tmp[616214](64099 call * call_tmp[616209] call_type_tmp[491895]))
    (541045 'default init var' result[64101] call_tmp[616214])
    (64104 'end of statement')
    {
      unknown d[64130] "dead at end of block" "insert auto destroy"
      (541047 'init var' d[64130] 0)
      (475275 'end of statement')
      unknown tmp[64131] "maybe param" "temp"
      unknown call_tmp[616221] "expr temp" "maybe param" "maybe type" "temp"
      (616224 'move' call_tmp[616221](64108 call size _mt[243] y[64072]))
      unknown call_tmp[616226] "expr temp" "maybe param" "maybe type" "temp"
      (616229 'move' call_tmp[616226](64112 call - call_tmp[616221] 1))
      (64143 'move' tmp[64131](64141 call chpl_compute_low_param_loop_bound 0 call_tmp[616226]))
      unknown tmp[64132] "maybe param" "temp"
      unknown call_tmp[616233] "expr temp" "maybe param" "maybe type" "temp"
      (616236 'move' call_tmp[616233](64150 call size _mt[243] y[64072]))
      unknown call_tmp[616238] "expr temp" "maybe param" "maybe type" "temp"
      (616241 'move' call_tmp[616238](64148 call - call_tmp[616233] 1))
      (64156 'move' tmp[64132](64154 call chpl_compute_high_param_loop_bound 0 call_tmp[616238]))
      unknown tmp[64133] "maybe param" "temp"
      (64159 'move' tmp[64133] 1)
      ParamForLoop[64161]
      { d[64130] tmp[64131] tmp[64132] tmp[64133]
        unknown call_tmp[616243] "expr temp" "maybe param" "maybe type" "temp"
        (616246 'move' call_tmp[616243](64119 call result[64101] d[64130]))
        unknown call_tmp[616248] "expr temp" "maybe param" "maybe type" "temp"
        (616251 'move' call_tmp[616248](64124 call y[64072] d[64130]))
        unknown call_tmp[616253] "expr temp" "maybe param" "maybe type" "temp"
        (616256 'move' call_tmp[616253](64125 call >> x[64066] call_tmp[616248]))
        (64127 call = call_tmp[616243] call_tmp[616253])
        (475276 'end of statement' result[64101] d[64130] d[64130])
      }
      label _unused_continueLabel[64135]
      label _breakLabel[64134]
    }
    (509034 'move' ret[509029](509033 'deref' result[64101]))
    gotoReturn _end_>>[509027] _end_>>[509027]
    (475280 'end of statement' result[64101])
    label _end_>>[509027]
    (509031 return ret[509029])
  }
  where {
    unknown tmp[419230] "maybe param" "temp"
    (419241 'move' tmp[419230](64078 call isHomogeneousTuple y[64072]))
    unknown call_tmp[616258] "expr temp" "maybe param" "maybe type" "temp"
    (616261 'move' call_tmp[616258](419243 call _cond_invalid tmp[419230]))
    if call_tmp[616258]
    {
      (419246 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555403] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555404] "maybe param" "temp"
    unknown call_tmp[616263] "expr temp" "maybe param" "maybe type" "temp"
    (616266 'move' call_tmp[616263](419231 call isTrue tmp[419230]))
    (555409 'move' tmp[555404](555407 call _cond_test call_tmp[616263]))
    if tmp[555404]
    {
      { scopeless type
        unknown call_type_tmp[491901] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616268] "expr temp" "maybe param" "maybe type" "temp"
        (616271 'move' call_tmp[616268](64085 call y[64072] 0))
        (491905 'move' call_type_tmp[491901](64086 'typeof' call_tmp[616268]))
      }
      unknown tmp[555411] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616273] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616276 'move' call_tmp[616273](454854 'typeof' x[64066]))
      unknown call_tmp[616278] "expr temp" "maybe param" "maybe type" "temp"
      (616281 'move' call_tmp[616278](354279 'is_subtype' call_type_tmp[491901] call_tmp[616273]))
      (555413 'move' tmp[555411](419234 call isTrue call_tmp[616278]))
      (555418 'move' tmp[555403](555415 '_paramFoldLogical' tmp[555404] tmp[555411]))
    }
    {
      (555423 'move' tmp[555403](555420 '_paramFoldLogical' tmp[555404] 0))
    }
    (748261 call chpl_statementLevelSymbol tmp[555403])
  }
  (355103 'used modules list'(56188 'use' ChapelStandard[20264])(56190 'use' DSIUtil[230805]))
}