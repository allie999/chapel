AST dump for DSIUtil after pass returnStarTuplesByRefArgs.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416110]() : void[4] "insert line file info" "module init" "resolved"
  {
    (533602 return _void[55])
  }
  function createTuple[1306205](const in arg val[1306211]:int(64)[13], ref arg _retArg[1837249]:1*int(64)[1256525]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1306213]:1*int(64)[1256525] "dead after last mention" "RVV" "temp"
    (2353798 'set svec member' ret[1306213] 0 val[1306211])
    label _end_createTuple[1306315]
    (1837251 '=' _retArg[1837249] ret[1306213])
    (1837253 return _void[55])
  }
  function _computeChunkStuff[1366948](const in arg maxTasks[1366950]:int(64)[13], const in arg ignoreRunning[1366952]:bool[10], const in arg minSize[1366954]:int(64)[13], const  ref arg ranges[1366956]:1*range(int(64),bounded,false)[1244696], ref arg _retArg[1838091]:2*int(64)[1040056]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1366969]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    val numElems[1367013]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367015 'move' numElems[1367013] 1)
    const-val call_tmp[1367595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1367624]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1367628 'move' coerce_tmp[1367624](2372634 'get svec member value' ranges[1366956] 0))
    (1367597 'move' call_tmp[1367595](1367600 call size[1035789] coerce_tmp[1367624]))
    const-val call_tmp[2116802]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116804 'move' call_tmp[2116802](2116806 'cast' uint(64)[115] call_tmp[1367595]))
    ref i_lhs[2213354]:uint(64)[115] "temp"
    (2213358 'move' i_lhs[2213354](2213356 'set reference' numElems[1367013]))
    (2213361 '*=' i_lhs[2213354] call_tmp[2116802])
    const-val call_tmp[1367105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1367107 'move' call_tmp[1367105](1367110 call _computeNumChunks[1367644] maxTasks[1366950] ignoreRunning[1366952] minSize[1366954] numElems[1367013]))
    val numChunks[1367115]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367117 'move' numChunks[1367115] call_tmp[1367105])
    const-val call_tmp[2118508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118510 'move' call_tmp[2118508](2118512 '==' call_tmp[1367105] 0))
    if call_tmp[2118508]
    {
      const-val ret_tmp[1832881]:2*int(64)[1040056] "temp"
      (2364410 'set svec member' ret_tmp[1832881] 0 0)
      (2364414 'set svec member' ret_tmp[1832881] 1 -1)
      (1368914 'move' ret[1366969] ret_tmp[1832881])
      gotoReturn _end__computeChunkStuff[1367530] _end__computeChunkStuff[1367530]
    }
    const-val call_tmp[2124707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124709 'move' call_tmp[2124707](2124711 '>' call_tmp[1367105] 0))
    (1367178 call assert[210345] call_tmp[2124707])
    val parDim[1367189]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367191 'move' parDim[1367189] -1)
    val maxDim[1367202]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367204 'move' maxDim[1367202] -1)
    val maxElems[1367215]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367217 'move' maxElems[1367215] 0)
    const-val _ic__F1_high[2349139]:int(64)[13] "temp"
    (2185443 'move' _ic__F1_high[2349139] 0)
    val i[1923749]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1923753 'move' i[1923749] 0)
    (1923805 call chpl_checkIfRangeIterWillOverflow[1096076] 0 0 1 0 0 1)
    CForLoop[1923812]
    {
      const-ref call_tmp[1923889]:range(int(64),bounded,false)[1026814] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1923891 'move' call_tmp[1923889](1923894 call this[1368641] ranges[1366956] i[1923749]))
      const-val call_tmp[1923897]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1923899]:range(int(64),bounded,false)[1026814] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1923901 'move' coerce_tmp[1923899] call_tmp[1923889])
      (1923906 'move' call_tmp[1923897](1923909 call size[1035789] coerce_tmp[1923899]))
      const-val call_tmp[2117002]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2117004 'move' call_tmp[2117002](2117006 'cast' uint(64)[115] call_tmp[1923897]))
      const-val call_tmp[2117012]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2117014 'move' call_tmp[2117012](2117016 'cast' uint(64)[115] numChunks[1367115]))
      const-val call_tmp[2212159]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212161 'move' call_tmp[2212159](2212163 '>=' call_tmp[2117002] call_tmp[2117012]))
      if call_tmp[2212159]
      {
        (2122551 '=' parDim[1367189] i[1923749])
        break _breakLabel[1367374] _breakLabel[1367374]
      }
      const-val call_tmp[2212294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212296 'move' call_tmp[2212294](2212298 '>' call_tmp[2117002] maxElems[1367215]))
      if call_tmp[2212294]
      {
        (2212051 '=' maxElems[1367215] call_tmp[2117002])
        (2122563 '=' maxDim[1367202] i[1923749])
      }
      {
        (1923821 '=' i[1923749] 0)
      }
      {
        (1923832 '<=' i[1923749] _ic__F1_high[2349139])
      }
      {
        (1923838 '+=' i[1923749] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1923872]
    label _endchpl_direct_range_iter[1923877]
    label _breakLabel[1367374]
    const-val call_tmp[2118523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118525 'move' call_tmp[2118523](2118527 '==' parDim[1367189] -1))
    if call_tmp[2118523]
    {
      (2121775 '=' parDim[1367189] maxDim[1367202])
      const-val call_tmp[2116852]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116854 'move' call_tmp[2116852](2116856 'cast' uint(64)[115] numChunks[1367115]))
      const-val call_tmp[2212229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212231 'move' call_tmp[2212229](2212233 '<' maxElems[1367215] call_tmp[2116852]))
      if call_tmp[2212229]
      {
        const-val call_tmp[2182146]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2182148 'move' call_tmp[2182146](2182150 'cast' int(64)[13] maxElems[1367215]))
        (2121787 '=' numChunks[1367115] call_tmp[2182146])
      }
    }
    const-val ret_tmp[1832887]:2*int(64)[1040056] "temp"
    (2364424 'set svec member' ret_tmp[1832887] 0 numChunks[1367115])
    (2364428 'set svec member' ret_tmp[1832887] 1 parDim[1367189])
    (1368917 'move' ret[1366969] ret_tmp[1832887])
    label _end__computeChunkStuff[1367530]
    (1838093 '=' _retArg[1838091] ret[1366969])
    (1838099 return _void[55])
  }
  function _computeNumChunks[1225955](const in arg maxTasks[1225957]:int(64)[13], const in arg ignoreRunning[1225959]:bool[10], const in arg minSize[1225961]:int(64)[13], const in arg numElems[1225963]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1225967]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2170913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2170915 'move' call_tmp[2170913](2170917 '<=' numElems[1225963] 0))
    if call_tmp[2170913]
    {
      (1225998 'move' ret[1225967] 0)
      gotoReturn _end__computeNumChunks[1226399] _end__computeNumChunks[1226399]
    }
    const-val call_tmp[2116522]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116524 'move' call_tmp[2116522](2116526 'cast' uint(64)[115] numElems[1225963]))
    const-val unumElems[1226020]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1226022 'move' unumElems[1226020] call_tmp[2116522])
    val numChunks[1226034]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1226036 'move' numChunks[1226034] maxTasks[1225957])
    const-val call_tmp[2114320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114322 'move' call_tmp[2114320](2114324 '!' ignoreRunning[1225959]))
    if call_tmp[2114320]
    {
      const-val call_tmp[1226057]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2167891]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2167893]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2167895 'move' call_tmp[2167893](2167898 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2167901 'move' call_tmp[2167891] call_tmp[2167893])
      const-val call_tmp[2167904]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2167906]:locale[28] "temp"
      (2167909 call chpl_localeID_to_locale[92849] call_tmp[2167891] ret_tmp[2167906])
      (2167912 'move' call_tmp[2167904] ret_tmp[2167906])
      (1830574 'move' call_tmp[1226057] call_tmp[2167904])
      const-val call_tmp[1226063]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226065 'move' call_tmp[1226063](1226071 call runningTasks[93122] call_tmp[1226057]))
      const-val call_tmp[2144440]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144442 'move' call_tmp[2144440](2144444 '-' call_tmp[1226063] 1))
      val tmp[1226086]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2128472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128474 'move' call_tmp[2128472](2128476 '<' call_tmp[2144440] maxTasks[1225957]))
      if call_tmp[2128472]
      {
        const-val call_tmp[2127351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2127353 'move' call_tmp[2127351](2127355 '-' maxTasks[1225957] call_tmp[2144440]))
        (1226121 'move' tmp[1226086] call_tmp[2127351])
      }
      {
        (1226127 'move' tmp[1226086] 1)
      }
      (2121407 '=' numChunks[1226034] tmp[1226086])
      ref i_x[2264435]:locale[28] "temp"
      (2264439 'move' i_x[2264435](2264437 'set reference' call_tmp[1226057]))
      (2264443 call deinit[90185] i_x[2264435])
    }
    const-val call_tmp[2124422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124424 'move' call_tmp[2124422](2124426 '>' minSize[1225961] 0))
    if call_tmp[2124422]
    {
      val tmp[1226159]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2212608]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212610 'move' call_tmp[2212608](2212612 '*' minSize[1225961] numChunks[1226034]))
      const-val call_tmp[2116532]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116534 'move' call_tmp[2116532](2116536 'cast' uint(64)[115] call_tmp[2212608]))
      const-val call_tmp[2212189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212191 'move' call_tmp[2212189](2212193 '<' call_tmp[2116522] call_tmp[2116532]))
      val tmp[1226198]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2212189]
      {
        const-val call_tmp[2124437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2124439 'move' call_tmp[2124437](2124441 '>' numChunks[1226034] 1))
        (1226231 'move' tmp[1226198] call_tmp[2124437])
      }
      {
        (1226237 'move' tmp[1226198] 0)
      }
      (1226243 'move' tmp[1226159] tmp[1226198])
      WhileDo[1226248]
      {
        ref i_lhs[2213275]:int(64)[13] "temp"
        (2213279 'move' i_lhs[2213275](2213277 'set reference' numChunks[1226034]))
        (2213287 '-=' i_lhs[2213275] 1)
        const-val call_tmp[2212618]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212620 'move' call_tmp[2212618](2212622 '*' minSize[1225961] numChunks[1226034]))
        const-val call_tmp[2116542]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2116544 'move' call_tmp[2116542](2116546 'cast' uint(64)[115] call_tmp[2212618]))
        const-val call_tmp[2212199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212201 'move' call_tmp[2212199](2212203 '<' unumElems[1226020] call_tmp[2116542]))
        val tmp[1226296]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2212199]
        {
          const-val call_tmp[2124452]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2124454 'move' call_tmp[2124452](2124456 '>' numChunks[1226034] 1))
          (1226329 'move' tmp[1226296] call_tmp[2124452])
        }
        {
          (1226335 'move' tmp[1226296] 0)
        }
        (1226341 'move' tmp[1226159] tmp[1226296])
        tmp[1226159]
      }
    }
    const-val call_tmp[2116552]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116554 'move' call_tmp[2116552](2116556 'cast' uint(64)[115] numChunks[1226034]))
    const-val call_tmp[2212274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212276 'move' call_tmp[2212274](2212278 '>' call_tmp[2116552] unumElems[1226020]))
    if call_tmp[2212274]
    {
      const-val call_tmp[2182086]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182088 'move' call_tmp[2182086](2182090 'cast' int(64)[13] unumElems[1226020]))
      (2121419 '=' numChunks[1226034] call_tmp[2182086])
    }
    (1227894 'move' ret[1225967] numChunks[1226034])
    label _end__computeNumChunks[1226399]
    (1226401 return ret[1225967])
  }
  function _computeNumChunks[1367644](const in arg maxTasks[1367646]:int(64)[13], const in arg ignoreRunning[1367648]:bool[10], const in arg minSize[1367650]:int(64)[13], const in arg numElems[1367652]:uint(64)[115]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1367656]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2117656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117658 'move' call_tmp[2117656](2117660 '<' 0 0))
    const-val call_tmp[2117663]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117665 'move' call_tmp[2117663](2117667 '!' call_tmp[2117656]))
    val tmp[2117669]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2117663]
    {
      const-val call_tmp[2117673]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2117675 'move' call_tmp[2117673](2117677 'cast' uint(64)[115] 0))
      const-val call_tmp[2117680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2117682 'move' call_tmp[2117680](2117684 '<=' numElems[1367652] call_tmp[2117673]))
      (2117687 'move' tmp[2117669] call_tmp[2117680])
    }
    {
      (2117691 'move' tmp[2117669] 0)
    }
    if tmp[2117669]
    {
      (1367687 'move' ret[1367656] 0)
      gotoReturn _end__computeNumChunks[1368088] _end__computeNumChunks[1368088]
    }
    const-val unumElems[1367709]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1367711 'move' unumElems[1367709] numElems[1367652])
    val numChunks[1367723]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367725 'move' numChunks[1367723] maxTasks[1367646])
    const-val call_tmp[2114527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114529 'move' call_tmp[2114527](2114531 '!' ignoreRunning[1367648]))
    if call_tmp[2114527]
    {
      const-val call_tmp[1367746]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168143]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168145]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2168147 'move' call_tmp[2168145](2168150 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2168153 'move' call_tmp[2168143] call_tmp[2168145])
      const-val call_tmp[2168156]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2168158]:locale[28] "temp"
      (2168161 call chpl_localeID_to_locale[92849] call_tmp[2168143] ret_tmp[2168158])
      (2168164 'move' call_tmp[2168156] ret_tmp[2168158])
      (1830634 'move' call_tmp[1367746] call_tmp[2168156])
      const-val call_tmp[1367752]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1367754 'move' call_tmp[1367752](1367760 call runningTasks[93122] call_tmp[1367746]))
      const-val call_tmp[2144570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144572 'move' call_tmp[2144570](2144574 '-' call_tmp[1367752] 1))
      val tmp[1367775]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2128492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128494 'move' call_tmp[2128492](2128496 '<' call_tmp[2144570] maxTasks[1367646]))
      if call_tmp[2128492]
      {
        const-val call_tmp[2127361]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2127363 'move' call_tmp[2127361](2127365 '-' maxTasks[1367646] call_tmp[2144570]))
        (1367810 'move' tmp[1367775] call_tmp[2127361])
      }
      {
        (1367816 'move' tmp[1367775] 1)
      }
      (2121751 '=' numChunks[1367723] tmp[1367775])
      ref i_x[2264519]:locale[28] "temp"
      (2264523 'move' i_x[2264519](2264521 'set reference' call_tmp[1367746]))
      (2264527 call deinit[90185] i_x[2264519])
    }
    const-val call_tmp[2124662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2124664 'move' call_tmp[2124662](2124666 '>' minSize[1367650] 0))
    if call_tmp[2124662]
    {
      val tmp[1367848]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2212758]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212760 'move' call_tmp[2212758](2212762 '*' minSize[1367650] numChunks[1367723]))
      const-val call_tmp[2116822]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116824 'move' call_tmp[2116822](2116826 'cast' uint(64)[115] call_tmp[2212758]))
      const-val call_tmp[2212209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212211 'move' call_tmp[2212209](2212213 '<' numElems[1367652] call_tmp[2116822]))
      val tmp[1367887]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2212209]
      {
        const-val call_tmp[2124677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2124679 'move' call_tmp[2124677](2124681 '>' numChunks[1367723] 1))
        (1367920 'move' tmp[1367887] call_tmp[2124677])
      }
      {
        (1367926 'move' tmp[1367887] 0)
      }
      (1367932 'move' tmp[1367848] tmp[1367887])
      WhileDo[1367937]
      {
        ref i_lhs[2213303]:int(64)[13] "temp"
        (2213307 'move' i_lhs[2213303](2213305 'set reference' numChunks[1367723]))
        (2213315 '-=' i_lhs[2213303] 1)
        const-val call_tmp[2212768]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212770 'move' call_tmp[2212768](2212772 '*' minSize[1367650] numChunks[1367723]))
        const-val call_tmp[2116832]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2116834 'move' call_tmp[2116832](2116836 'cast' uint(64)[115] call_tmp[2212768]))
        const-val call_tmp[2212219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2212221 'move' call_tmp[2212219](2212223 '<' unumElems[1367709] call_tmp[2116832]))
        val tmp[1367985]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2212219]
        {
          const-val call_tmp[2124692]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2124694 'move' call_tmp[2124692](2124696 '>' numChunks[1367723] 1))
          (1368018 'move' tmp[1367985] call_tmp[2124692])
        }
        {
          (1368024 'move' tmp[1367985] 0)
        }
        (1368030 'move' tmp[1367848] tmp[1367985])
        tmp[1367848]
      }
    }
    const-val call_tmp[2116842]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116844 'move' call_tmp[2116842](2116846 'cast' uint(64)[115] numChunks[1367723]))
    const-val call_tmp[2212284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212286 'move' call_tmp[2212284](2212288 '>' call_tmp[2116842] unumElems[1367709]))
    if call_tmp[2212284]
    {
      const-val call_tmp[2182136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182138 'move' call_tmp[2182136](2182140 'cast' int(64)[13] unumElems[1367709]))
      (2121763 '=' numChunks[1367723] call_tmp[2182136])
    }
    (1368149 'move' ret[1367656] numChunks[1367723])
    label _end__computeNumChunks[1368088]
    (1368090 return ret[1367656])
  }
  function _computeNumChunks[1262322](const in arg numElems[1262324]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2379099]:int(64)[13] "temp"
    (2379100 'move' local_dataParMinGranularity[2379099] dataParMinGranularity[93293])
    const-val local_dataParIgnoreRunningTasks[2379093]:bool[10] "temp"
    (2379094 'move' local_dataParIgnoreRunningTasks[2379093] dataParIgnoreRunningTasks[93287])
    const-val local__str_literal_129[2379086]:string[26] "temp"
    (2379087 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2379080]:int(64)[13] "temp"
    (2379081 'move' local_dataParTasksPerLocale[2379080] dataParTasksPerLocale[93281])
    val tmp[1262338]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2118393]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118395 'move' call_tmp[2118393](2118397 '==' local_dataParTasksPerLocale[2379080] 0))
    if call_tmp[2118393]
    {
      const-val call_tmp[1262359]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168035]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168037]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2168039 'move' call_tmp[2168037](2168042 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2168045 'move' call_tmp[2168035] call_tmp[2168037])
      const-val call_tmp[2168048]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2168050]:locale[28] "temp"
      (2168053 call chpl_localeID_to_locale[92849] call_tmp[2168035] ret_tmp[2168050])
      (2168056 'move' call_tmp[2168048] ret_tmp[2168050])
      (1830598 'move' call_tmp[1262359] call_tmp[2168048])
      val ret[2169007]:int(64)[13] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2169009]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169011 'move' coerce_tmp[2169009](2169013 '.v' call_tmp[1262359] _instance[89975]))
      val coerce_tmp[2169016]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169018 'move' coerce_tmp[2169016](2169020 'cast' object[22] coerce_tmp[2169009]))
      const-val call_tmp[2169023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2169025 'move' call_tmp[2169023](2169027 'ptr_eq' coerce_tmp[2169016] nil[44]))
      if call_tmp[2169023]
      {
        (2169033 call nilCheckHalt[210151] "argument to ! is nil")
      }
      val coerce_tmp[2169036]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169038 'move' coerce_tmp[2169036] coerce_tmp[2169009])
      (2169041 'move' ret[2169007](2169043 '.v' coerce_tmp[2169036] maxTaskPar[90743]))
      (1262371 'move' tmp[1262338] ret[2169007])
      ref i_x[2264483]:locale[28] "temp"
      (2264487 'move' i_x[2264483](2264485 'set reference' call_tmp[1262359]))
      (2264491 call deinit[90185] i_x[2264483])
    }
    {
      (1262377 'move' tmp[1262338] local_dataParTasksPerLocale[2379080])
    }
    const-val ignoreRunning[1262387]:bool[10] "dead at end of block" "insert auto destroy"
    (1262389 'move' ignoreRunning[1262387] local_dataParIgnoreRunningTasks[2379093])
    const-val minIndicesPerTask[1262393]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1262395 'move' minIndicesPerTask[1262393] local_dataParMinGranularity[2379099])
    const-val call_tmp[1262399]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262401 'move' call_tmp[1262399](1262404 call _computeNumChunks[1225955] tmp[1262338] ignoreRunning[1262387] minIndicesPerTask[1262393] numElems[1262324]))
    label _end__computeNumChunks[1262427]
    (1262429 return call_tmp[1262399])
  }
  function intCeilXDivByY[1229809](const in arg x[1229811]:uint(64)[115], const in arg y[1229813]:uint(64)[115]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2379002]:string[26] "temp"
    (2379003 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2181776]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2181778 'move' call_tmp[2181776](2181780 '-' x[1229811] 1))
    const-val call_tmp[2212971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212973 'move' call_tmp[2212971](2212975 '<' 0 0))
    const-val call_tmp[2212978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212980 'move' call_tmp[2212978](2212982 '!' call_tmp[2212971]))
    val tmp[2212984]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2212978]
    {
      const-val call_tmp[2212988]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212990 'move' call_tmp[2212988](2212992 'cast' uint(64)[115] 0))
      const-val call_tmp[2212995]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2212997 'move' call_tmp[2212995](2212999 '==' y[1229813] call_tmp[2212988]))
      (2213002 'move' tmp[2212984] call_tmp[2212995])
    }
    {
      (2213006 'move' tmp[2212984] 0)
    }
    if tmp[2212984]
    {
      (2213013 call halt[154067] "Attempt to divide by zero")
    }
    const-val call_tmp[2213016]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213018 'move' call_tmp[2213016](2213020 '/' call_tmp[2181776] y[1229813]))
    const-val call_tmp[2269337]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269339 'move' call_tmp[2269337](2269341 '+' 1 call_tmp[2213016]))
    (1229853 return call_tmp[2269337])
  }
  function _computeBlock[1229336](const in arg numelems[1229338]:int(64)[13], const in arg numblocks[1229340]:int(64)[13], const in arg blocknum[1229342]:int(64)[13], const in arg wayhi[1229344]:int(64)[13], const in arg waylo[1229368]:int(64)[13], const in arg lo[1229392]:int(64)[13], ref arg _retArg[1835044]:2*int(64)[1040056]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229394]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2118293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118295 'move' call_tmp[2118293](2118297 '==' numelems[1229338] 0))
    if call_tmp[2118293]
    {
      const-val ret_tmp[1832857]:2*int(64)[1040056] "temp"
      (2364382 'set svec member' ret_tmp[1832857] 0 1)
      (2364386 'set svec member' ret_tmp[1832857] 1 0)
      (1229463 'move' ret[1229394] ret_tmp[1832857])
      gotoReturn _end__computeBlock[1229709] _end__computeBlock[1229709]
    }
    val tmp[1229472]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2118308]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118310 'move' call_tmp[2118308](2118312 '==' blocknum[1229342] 0))
    if call_tmp[2118308]
    {
      (1229491 'move' tmp[1229472] waylo[1229368])
    }
    {
      const-val call_tmp[2116562]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116564 'move' call_tmp[2116562](2116566 'cast' uint(64)[115] numelems[1229338]))
      const-val call_tmp[2116572]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116574 'move' call_tmp[2116572](2116576 'cast' uint(64)[115] blocknum[1229342]))
      const-val call_tmp[2191194]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2191196 'move' call_tmp[2191194](2191198 '*' call_tmp[2116562] call_tmp[2116572]))
      const-val call_tmp[2116582]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116584 'move' call_tmp[2116582](2116586 'cast' uint(64)[115] numblocks[1229340]))
      const-val call_tmp[1229537]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229539 'move' call_tmp[1229537](1229542 call intCeilXDivByY[1229809] call_tmp[2191194] call_tmp[2116582]))
      const-val call_tmp[2182096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182098 'move' call_tmp[2182096](2182100 'cast' int(64)[13] call_tmp[1229537]))
      const-val call_tmp[2126020]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2126022 'move' call_tmp[2126020](2126024 '+' lo[1229392] call_tmp[2182096]))
      (1229559 'move' tmp[1229472] call_tmp[2126020])
    }
    val tmp[1229571]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2144460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2144462 'move' call_tmp[2144460](2144464 '-' numblocks[1229340] 1))
    const-val call_tmp[2118318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118320 'move' call_tmp[2118318](2118322 '==' blocknum[1229342] call_tmp[2144460]))
    if call_tmp[2118318]
    {
      (1229598 'move' tmp[1229571] wayhi[1229344])
    }
    {
      const-val call_tmp[2116602]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116604 'move' call_tmp[2116602](2116606 'cast' uint(64)[115] numelems[1229338]))
      const-val call_tmp[2120587]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120589 'move' call_tmp[2120587](2120591 '+' blocknum[1229342] 1))
      const-val call_tmp[2116612]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116614 'move' call_tmp[2116612](2116616 'cast' uint(64)[115] call_tmp[2120587]))
      const-val call_tmp[2191204]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2191206 'move' call_tmp[2191204](2191208 '*' call_tmp[2116602] call_tmp[2116612]))
      const-val call_tmp[2116622]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2116624 'move' call_tmp[2116622](2116626 'cast' uint(64)[115] numblocks[1229340]))
      const-val call_tmp[1229652]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229654 'move' call_tmp[1229652](1229657 call intCeilXDivByY[1229809] call_tmp[2191204] call_tmp[2116622]))
      const-val call_tmp[2182106]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182108 'move' call_tmp[2182106](2182110 'cast' int(64)[13] call_tmp[1229652]))
      const-val call_tmp[2126030]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2126032 'move' call_tmp[2126030](2126034 '+' lo[1229392] call_tmp[2182106]))
      const-val call_tmp[2144470]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144472 'move' call_tmp[2144470](2144474 '-' call_tmp[2126030] 1))
      (1229682 'move' tmp[1229571] call_tmp[2144470])
    }
    const-val ret_tmp[1832863]:2*int(64)[1040056] "temp"
    (2364396 'set svec member' ret_tmp[1832863] 0 tmp[1229472])
    (2364400 'set svec member' ret_tmp[1832863] 1 tmp[1229571])
    (1229700 'move' ret[1229394] ret_tmp[1832863])
    label _end__computeBlock[1229709]
    (1835046 '=' _retArg[1835044] ret[1229394])
    (1835048 return _void[55])
  }
}