AST dump for DSIUtil after pass returnStarTuplesByRefArgs.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416021]() : void[4] "insert line file info" "module init" "resolved"
  {
    (533511 return _void[55])
  }
  function createTuple[1306116](const in arg val[1306122]:int(64)[13], ref arg _retArg[1794009]:1*int(64)[1256436]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1306124]:1*int(64)[1256436] "dead after last mention" "RVV" "temp"
    (2315756 'set svec member' ret[1306124] 0 val[1306122])
    label _end_createTuple[1306226]
    (1794011 '=' _retArg[1794009] ret[1306124])
    (1794013 return _void[55])
  }
  function _computeChunkStuff[1380877](const in arg maxTasks[1380879]:int(64)[13], const in arg ignoreRunning[1380881]:bool[10], const in arg minSize[1380883]:int(64)[13], const  ref arg ranges[1380885]:1*range(int(64),bounded,false)[1244607], ref arg _retArg[1794951]:2*int(64)[1039967]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1380898]:2*int(64)[1039967] "dead after last mention" "RVV" "temp"
    val numElems[1380942]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1380944 'move' numElems[1380942] 1)
    const-val call_tmp[1381524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1381553]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381557 'move' coerce_tmp[1381553](2329422 'get svec member value' ranges[1380885] 0))
    (1381526 'move' call_tmp[1381524](1381529 call size[1035700] coerce_tmp[1381553]))
    const-val call_tmp[2063025]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063027 'move' call_tmp[2063025](2063029 'cast' uint(64)[115] call_tmp[1381524]))
    ref i_lhs[2159031]:uint(64)[115] "temp"
    (2159035 'move' i_lhs[2159031](2159033 'set reference' numElems[1380942]))
    (2159038 '*=' i_lhs[2159031] call_tmp[2063025])
    const-val call_tmp[1381034]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1381036 'move' call_tmp[1381034](1381039 call _computeNumChunks[1381573] maxTasks[1380879] ignoreRunning[1380881] minSize[1380883] numElems[1380942]))
    val numChunks[1381044]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381046 'move' numChunks[1381044] call_tmp[1381034])
    const-val call_tmp[2064842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064844 'move' call_tmp[2064842](2064846 '==' call_tmp[1381034] 0))
    if call_tmp[2064842]
    {
      const-val ret_tmp[1789713]:2*int(64)[1039967] "temp"
      (2320384 'set svec member' ret_tmp[1789713] 0 0)
      (2320388 'set svec member' ret_tmp[1789713] 1 -1)
      (1382843 'move' ret[1380898] ret_tmp[1789713])
      gotoReturn _end__computeChunkStuff[1381459] _end__computeChunkStuff[1381459]
    }
    const-val call_tmp[2071124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2071126 'move' call_tmp[2071124](2071128 '>' call_tmp[1381034] 0))
    (1381107 call assert[210257] call_tmp[2071124])
    val parDim[1381118]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381120 'move' parDim[1381118] -1)
    val maxDim[1381131]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381133 'move' maxDim[1381131] -1)
    val maxElems[1381144]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1381146 'move' maxElems[1381144] 0)
    const-val _ic__F1_high[2305659]:int(64)[13] "temp"
    (2132074 'move' _ic__F1_high[2305659] 0)
    val i[1876397]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1876401 'move' i[1876397] 0)
    (1876453 call chpl_checkIfRangeIterWillOverflow[1095987] 0 0 1 0 0 1)
    CForLoop[1876460]
    {
      const-ref call_tmp[1876537]:range(int(64),bounded,false)[1026725] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1876539 'move' call_tmp[1876537](1876542 call this[1382570] ranges[1380885] i[1876397]))
      const-val call_tmp[1876545]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1876547]:range(int(64),bounded,false)[1026725] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1876549 'move' coerce_tmp[1876547] call_tmp[1876537])
      (1876554 'move' call_tmp[1876545](1876557 call size[1035700] coerce_tmp[1876547]))
      const-val call_tmp[2063195]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063197 'move' call_tmp[2063195](2063199 'cast' uint(64)[115] call_tmp[1876545]))
      const-val call_tmp[2063205]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063207 'move' call_tmp[2063205](2063209 'cast' uint(64)[115] numChunks[1381044]))
      const-val call_tmp[2157814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157816 'move' call_tmp[2157814](2157818 '>=' call_tmp[2063195] call_tmp[2063205]))
      if call_tmp[2157814]
      {
        (2068932 '=' parDim[1381118] i[1876397])
        break _breakLabel[1381303] _breakLabel[1381303]
      }
      const-val call_tmp[2157949]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157951 'move' call_tmp[2157949](2157953 '>' call_tmp[2063195] maxElems[1381144]))
      if call_tmp[2157949]
      {
        (2157694 '=' maxElems[1381144] call_tmp[2063195])
        (2068944 '=' maxDim[1381131] i[1876397])
      }
      {
        (1876469 '=' i[1876397] 0)
      }
      {
        (1876480 '<=' i[1876397] _ic__F1_high[2305659])
      }
      {
        (1876486 '+=' i[1876397] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1876520]
    label _endchpl_direct_range_iter[1876525]
    label _breakLabel[1381303]
    const-val call_tmp[2064857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064859 'move' call_tmp[2064857](2064861 '==' parDim[1381118] -1))
    if call_tmp[2064857]
    {
      (2068201 '=' parDim[1381118] maxDim[1381131])
      const-val call_tmp[2063075]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063077 'move' call_tmp[2063075](2063079 'cast' uint(64)[115] numChunks[1381044]))
      const-val call_tmp[2157884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157886 'move' call_tmp[2157884](2157888 '<' maxElems[1381144] call_tmp[2063075]))
      if call_tmp[2157884]
      {
        const-val call_tmp[2128756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2128758 'move' call_tmp[2128756](2128760 'cast' int(64)[13] maxElems[1381144]))
        (2068213 '=' numChunks[1381044] call_tmp[2128756])
      }
    }
    const-val ret_tmp[1789719]:2*int(64)[1039967] "temp"
    (2320398 'set svec member' ret_tmp[1789719] 0 numChunks[1381044])
    (2320402 'set svec member' ret_tmp[1789719] 1 parDim[1381118])
    (1382846 'move' ret[1380898] ret_tmp[1789719])
    label _end__computeChunkStuff[1381459]
    (1794953 '=' _retArg[1794951] ret[1380898])
    (1794959 return _void[55])
  }
  function _computeNumChunks[1225866](const in arg maxTasks[1225868]:int(64)[13], const in arg ignoreRunning[1225870]:bool[10], const in arg minSize[1225872]:int(64)[13], const in arg numElems[1225874]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1225878]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2117330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117332 'move' call_tmp[2117330](2117334 '<=' numElems[1225874] 0))
    if call_tmp[2117330]
    {
      (1225909 'move' ret[1225878] 0)
      gotoReturn _end__computeNumChunks[1226310] _end__computeNumChunks[1226310]
    }
    const-val call_tmp[2062715]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062717 'move' call_tmp[2062715](2062719 'cast' uint(64)[115] numElems[1225874]))
    const-val unumElems[1225931]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1225933 'move' unumElems[1225931] call_tmp[2062715])
    val numChunks[1225945]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1225947 'move' numChunks[1225945] maxTasks[1225868])
    const-val call_tmp[2060451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060453 'move' call_tmp[2060451](2060455 '!' ignoreRunning[1225870]))
    if call_tmp[2060451]
    {
      const-val call_tmp[1225968]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114033]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114035]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2114037 'move' call_tmp[2114035](2114040 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2114043 'move' call_tmp[2114033] call_tmp[2114035])
      const-val call_tmp[2114046]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2114048]:locale[28] "temp"
      (2114051 call chpl_localeID_to_locale[92849] call_tmp[2114033] ret_tmp[2114048])
      (2114054 'move' call_tmp[2114046] ret_tmp[2114048])
      (1787444 'move' call_tmp[1225968] call_tmp[2114046])
      const-val call_tmp[1225974]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1225976 'move' call_tmp[1225974](1225982 call runningTasks[93122] call_tmp[1225968]))
      const-val call_tmp[2090474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090476 'move' call_tmp[2090474](2090478 '-' call_tmp[1225974] 1))
      val tmp[1225997]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2074779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2074781 'move' call_tmp[2074779](2074783 '<' call_tmp[2090474] maxTasks[1225868]))
      if call_tmp[2074779]
      {
        const-val call_tmp[2073688]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2073690 'move' call_tmp[2073688](2073692 '-' maxTasks[1225868] call_tmp[2090474]))
        (1226032 'move' tmp[1225997] call_tmp[2073688])
      }
      {
        (1226038 'move' tmp[1225997] 1)
      }
      (2067782 '=' numChunks[1225945] tmp[1225997])
      ref i_x[2209256]:locale[28] "temp"
      (2209260 'move' i_x[2209256](2209258 'set reference' call_tmp[1225968]))
      (2209264 call deinit[90185] i_x[2209256])
    }
    const-val call_tmp[2070809]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070811 'move' call_tmp[2070809](2070813 '>' minSize[1225872] 0))
    if call_tmp[2070809]
    {
      val tmp[1226070]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2158273]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2158275 'move' call_tmp[2158273](2158277 '*' minSize[1225872] numChunks[1225945]))
      const-val call_tmp[2062725]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062727 'move' call_tmp[2062725](2062729 'cast' uint(64)[115] call_tmp[2158273]))
      const-val call_tmp[2157844]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157846 'move' call_tmp[2157844](2157848 '<' call_tmp[2062715] call_tmp[2062725]))
      val tmp[1226109]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2157844]
      {
        const-val call_tmp[2070824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2070826 'move' call_tmp[2070824](2070828 '>' numChunks[1225945] 1))
        (1226142 'move' tmp[1226109] call_tmp[2070824])
      }
      {
        (1226148 'move' tmp[1226109] 0)
      }
      (1226154 'move' tmp[1226070] tmp[1226109])
      WhileDo[1226159]
      {
        ref i_lhs[2158940]:int(64)[13] "temp"
        (2158944 'move' i_lhs[2158940](2158942 'set reference' numChunks[1225945]))
        (2158952 '-=' i_lhs[2158940] 1)
        const-val call_tmp[2158283]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2158285 'move' call_tmp[2158283](2158287 '*' minSize[1225872] numChunks[1225945]))
        const-val call_tmp[2062735]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2062737 'move' call_tmp[2062735](2062739 'cast' uint(64)[115] call_tmp[2158283]))
        const-val call_tmp[2157854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2157856 'move' call_tmp[2157854](2157858 '<' unumElems[1225931] call_tmp[2062735]))
        val tmp[1226207]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2157854]
        {
          const-val call_tmp[2070839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2070841 'move' call_tmp[2070839](2070843 '>' numChunks[1225945] 1))
          (1226240 'move' tmp[1226207] call_tmp[2070839])
        }
        {
          (1226246 'move' tmp[1226207] 0)
        }
        (1226252 'move' tmp[1226070] tmp[1226207])
        tmp[1226070]
      }
    }
    const-val call_tmp[2062745]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062747 'move' call_tmp[2062745](2062749 'cast' uint(64)[115] numChunks[1225945]))
    const-val call_tmp[2157929]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157931 'move' call_tmp[2157929](2157933 '>' call_tmp[2062745] unumElems[1225931]))
    if call_tmp[2157929]
    {
      const-val call_tmp[2128696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128698 'move' call_tmp[2128696](2128700 'cast' int(64)[13] unumElems[1225931]))
      (2067794 '=' numChunks[1225945] call_tmp[2128696])
    }
    (1227805 'move' ret[1225878] numChunks[1225945])
    label _end__computeNumChunks[1226310]
    (1226312 return ret[1225878])
  }
  function _computeNumChunks[1381573](const in arg maxTasks[1381575]:int(64)[13], const in arg ignoreRunning[1381577]:bool[10], const in arg minSize[1381579]:int(64)[13], const in arg numElems[1381581]:uint(64)[115]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1381585]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2063975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063977 'move' call_tmp[2063975](2063979 '<' 0 0))
    const-val call_tmp[2063982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063984 'move' call_tmp[2063982](2063986 '!' call_tmp[2063975]))
    val tmp[2063988]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2063982]
    {
      const-val call_tmp[2063992]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063994 'move' call_tmp[2063992](2063996 'cast' uint(64)[115] 0))
      const-val call_tmp[2063999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2064001 'move' call_tmp[2063999](2064003 '<=' numElems[1381581] call_tmp[2063992]))
      (2064006 'move' tmp[2063988] call_tmp[2063999])
    }
    {
      (2064010 'move' tmp[2063988] 0)
    }
    if tmp[2063988]
    {
      (1381616 'move' ret[1381585] 0)
      gotoReturn _end__computeNumChunks[1382017] _end__computeNumChunks[1382017]
    }
    const-val unumElems[1381638]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1381640 'move' unumElems[1381638] numElems[1381581])
    val numChunks[1381652]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1381654 'move' numChunks[1381652] maxTasks[1381575])
    const-val call_tmp[2060676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060678 'move' call_tmp[2060676](2060680 '!' ignoreRunning[1381577]))
    if call_tmp[2060676]
    {
      const-val call_tmp[1381675]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114285]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114287]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2114289 'move' call_tmp[2114287](2114292 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2114295 'move' call_tmp[2114285] call_tmp[2114287])
      const-val call_tmp[2114298]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2114300]:locale[28] "temp"
      (2114303 call chpl_localeID_to_locale[92849] call_tmp[2114285] ret_tmp[2114300])
      (2114306 'move' call_tmp[2114298] ret_tmp[2114300])
      (1787504 'move' call_tmp[1381675] call_tmp[2114298])
      const-val call_tmp[1381681]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1381683 'move' call_tmp[1381681](1381689 call runningTasks[93122] call_tmp[1381675]))
      const-val call_tmp[2090624]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090626 'move' call_tmp[2090624](2090628 '-' call_tmp[1381681] 1))
      val tmp[1381704]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2074799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2074801 'move' call_tmp[2074799](2074803 '<' call_tmp[2090624] maxTasks[1381575]))
      if call_tmp[2074799]
      {
        const-val call_tmp[2073698]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2073700 'move' call_tmp[2073698](2073702 '-' maxTasks[1381575] call_tmp[2090624]))
        (1381739 'move' tmp[1381704] call_tmp[2073698])
      }
      {
        (1381745 'move' tmp[1381704] 1)
      }
      (2068177 '=' numChunks[1381652] tmp[1381704])
      ref i_x[2209340]:locale[28] "temp"
      (2209344 'move' i_x[2209340](2209342 'set reference' call_tmp[1381675]))
      (2209348 call deinit[90185] i_x[2209340])
    }
    const-val call_tmp[2071079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2071081 'move' call_tmp[2071079](2071083 '>' minSize[1381579] 0))
    if call_tmp[2071079]
    {
      val tmp[1381777]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[2158463]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2158465 'move' call_tmp[2158463](2158467 '*' minSize[1381579] numChunks[1381652]))
      const-val call_tmp[2063045]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063047 'move' call_tmp[2063045](2063049 'cast' uint(64)[115] call_tmp[2158463]))
      const-val call_tmp[2157864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157866 'move' call_tmp[2157864](2157868 '<' numElems[1381581] call_tmp[2063045]))
      val tmp[1381816]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2157864]
      {
        const-val call_tmp[2071094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2071096 'move' call_tmp[2071094](2071098 '>' numChunks[1381652] 1))
        (1381849 'move' tmp[1381816] call_tmp[2071094])
      }
      {
        (1381855 'move' tmp[1381816] 0)
      }
      (1381861 'move' tmp[1381777] tmp[1381816])
      WhileDo[1381866]
      {
        ref i_lhs[2158968]:int(64)[13] "temp"
        (2158972 'move' i_lhs[2158968](2158970 'set reference' numChunks[1381652]))
        (2158980 '-=' i_lhs[2158968] 1)
        const-val call_tmp[2158473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2158475 'move' call_tmp[2158473](2158477 '*' minSize[1381579] numChunks[1381652]))
        const-val call_tmp[2063055]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063057 'move' call_tmp[2063055](2063059 'cast' uint(64)[115] call_tmp[2158473]))
        const-val call_tmp[2157874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2157876 'move' call_tmp[2157874](2157878 '<' unumElems[1381638] call_tmp[2063055]))
        val tmp[1381914]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2157874]
        {
          const-val call_tmp[2071109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2071111 'move' call_tmp[2071109](2071113 '>' numChunks[1381652] 1))
          (1381947 'move' tmp[1381914] call_tmp[2071109])
        }
        {
          (1381953 'move' tmp[1381914] 0)
        }
        (1381959 'move' tmp[1381777] tmp[1381914])
        tmp[1381777]
      }
    }
    const-val call_tmp[2063065]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063067 'move' call_tmp[2063065](2063069 'cast' uint(64)[115] numChunks[1381652]))
    const-val call_tmp[2157939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157941 'move' call_tmp[2157939](2157943 '>' call_tmp[2063065] unumElems[1381638]))
    if call_tmp[2157939]
    {
      const-val call_tmp[2128746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128748 'move' call_tmp[2128746](2128750 'cast' int(64)[13] unumElems[1381638]))
      (2068189 '=' numChunks[1381652] call_tmp[2128746])
    }
    (1382078 'move' ret[1381585] numChunks[1381652])
    label _end__computeNumChunks[1382017]
    (1382019 return ret[1381585])
  }
  function _computeNumChunks[1262233](const in arg numElems[1262235]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2335998]:int(64)[13] "temp"
    (2335999 'move' local_dataParMinGranularity[2335998] dataParMinGranularity[93293])
    const-val local_dataParIgnoreRunningTasks[2335992]:bool[10] "temp"
    (2335993 'move' local_dataParIgnoreRunningTasks[2335992] dataParIgnoreRunningTasks[93287])
    const-val local__str_literal_129[2335985]:string[26] "temp"
    (2335986 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2335979]:int(64)[13] "temp"
    (2335980 'move' local_dataParTasksPerLocale[2335979] dataParTasksPerLocale[93281])
    val tmp[1262249]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2064712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064714 'move' call_tmp[2064712](2064716 '==' local_dataParTasksPerLocale[2335979] 0))
    if call_tmp[2064712]
    {
      const-val call_tmp[1262270]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114177]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2114179]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2114181 'move' call_tmp[2114179](2114184 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2114187 'move' call_tmp[2114177] call_tmp[2114179])
      const-val call_tmp[2114190]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2114192]:locale[28] "temp"
      (2114195 call chpl_localeID_to_locale[92849] call_tmp[2114177] ret_tmp[2114192])
      (2114198 'move' call_tmp[2114190] ret_tmp[2114192])
      (1787468 'move' call_tmp[1262270] call_tmp[2114190])
      val ret[2115472]:int(64)[13] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2115474]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2115476 'move' coerce_tmp[2115474](2115478 '.v' call_tmp[1262270] _instance[89975]))
      val coerce_tmp[2115481]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2115483 'move' coerce_tmp[2115481](2115485 'cast' object[22] coerce_tmp[2115474]))
      const-val call_tmp[2115488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2115490 'move' call_tmp[2115488](2115492 'ptr_eq' coerce_tmp[2115481] nil[44]))
      if call_tmp[2115488]
      {
        (2115498 call nilCheckHalt[210063] "argument to ! is nil")
      }
      val coerce_tmp[2115501]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2115503 'move' coerce_tmp[2115501] coerce_tmp[2115474])
      (2115506 'move' ret[2115472](2115508 '.v' coerce_tmp[2115501] maxTaskPar[90743]))
      (1262282 'move' tmp[1262249] ret[2115472])
      ref i_x[2209304]:locale[28] "temp"
      (2209308 'move' i_x[2209304](2209306 'set reference' call_tmp[1262270]))
      (2209312 call deinit[90185] i_x[2209304])
    }
    {
      (1262288 'move' tmp[1262249] local_dataParTasksPerLocale[2335979])
    }
    const-val ignoreRunning[1262298]:bool[10] "dead at end of block" "insert auto destroy"
    (1262300 'move' ignoreRunning[1262298] local_dataParIgnoreRunningTasks[2335992])
    const-val minIndicesPerTask[1262304]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1262306 'move' minIndicesPerTask[1262304] local_dataParMinGranularity[2335998])
    const-val call_tmp[1262310]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262312 'move' call_tmp[1262310](1262315 call _computeNumChunks[1225866] tmp[1262249] ignoreRunning[1262298] minIndicesPerTask[1262304] numElems[1262235]))
    label _end__computeNumChunks[1262338]
    (1262340 return call_tmp[1262310])
  }
  function intCeilXDivByY[1229720](const in arg x[1229722]:uint(64)[115], const in arg y[1229724]:uint(64)[115]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2335901]:string[26] "temp"
    (2335902 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2128376]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128378 'move' call_tmp[2128376](2128380 '-' x[1229722] 1))
    const-val call_tmp[2158636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158638 'move' call_tmp[2158636](2158640 '<' 0 0))
    const-val call_tmp[2158643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158645 'move' call_tmp[2158643](2158647 '!' call_tmp[2158636]))
    val tmp[2158649]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2158643]
    {
      const-val call_tmp[2158653]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2158655 'move' call_tmp[2158653](2158657 'cast' uint(64)[115] 0))
      const-val call_tmp[2158660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2158662 'move' call_tmp[2158660](2158664 '==' y[1229724] call_tmp[2158653]))
      (2158667 'move' tmp[2158649] call_tmp[2158660])
    }
    {
      (2158671 'move' tmp[2158649] 0)
    }
    if tmp[2158649]
    {
      (2158678 call halt[154067] "Attempt to divide by zero")
    }
    const-val call_tmp[2158681]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158683 'move' call_tmp[2158681](2158685 '/' call_tmp[2128376] y[1229724]))
    const-val call_tmp[2212918]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212920 'move' call_tmp[2212918](2212922 '+' 1 call_tmp[2158681]))
    (1229764 return call_tmp[2212918])
  }
  function _computeBlock[1229247](const in arg numelems[1229249]:int(64)[13], const in arg numblocks[1229251]:int(64)[13], const in arg blocknum[1229253]:int(64)[13], const in arg wayhi[1229255]:int(64)[13], const in arg waylo[1229279]:int(64)[13], const in arg lo[1229303]:int(64)[13], ref arg _retArg[1791864]:2*int(64)[1039967]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229305]:2*int(64)[1039967] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2064612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064614 'move' call_tmp[2064612](2064616 '==' numelems[1229249] 0))
    if call_tmp[2064612]
    {
      const-val ret_tmp[1789689]:2*int(64)[1039967] "temp"
      (2320356 'set svec member' ret_tmp[1789689] 0 1)
      (2320360 'set svec member' ret_tmp[1789689] 1 0)
      (1229374 'move' ret[1229305] ret_tmp[1789689])
      gotoReturn _end__computeBlock[1229620] _end__computeBlock[1229620]
    }
    val tmp[1229383]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2064627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064629 'move' call_tmp[2064627](2064631 '==' blocknum[1229253] 0))
    if call_tmp[2064627]
    {
      (1229402 'move' tmp[1229383] waylo[1229279])
    }
    {
      const-val call_tmp[2062755]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062757 'move' call_tmp[2062755](2062759 'cast' uint(64)[115] numelems[1229249]))
      const-val call_tmp[2062765]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062767 'move' call_tmp[2062765](2062769 'cast' uint(64)[115] blocknum[1229253]))
      const-val call_tmp[2137746]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2137748 'move' call_tmp[2137746](2137750 '*' call_tmp[2062755] call_tmp[2062765]))
      const-val call_tmp[2062775]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062777 'move' call_tmp[2062775](2062779 'cast' uint(64)[115] numblocks[1229251]))
      const-val call_tmp[1229448]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229450 'move' call_tmp[1229448](1229453 call intCeilXDivByY[1229720] call_tmp[2137746] call_tmp[2062775]))
      const-val call_tmp[2128706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128708 'move' call_tmp[2128706](2128710 'cast' int(64)[13] call_tmp[1229448]))
      const-val call_tmp[2072357]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2072359 'move' call_tmp[2072357](2072361 '+' lo[1229303] call_tmp[2128706]))
      (1229470 'move' tmp[1229383] call_tmp[2072357])
    }
    val tmp[1229482]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2090494]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2090496 'move' call_tmp[2090494](2090498 '-' numblocks[1229251] 1))
    const-val call_tmp[2064637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064639 'move' call_tmp[2064637](2064641 '==' blocknum[1229253] call_tmp[2090494]))
    if call_tmp[2064637]
    {
      (1229509 'move' tmp[1229482] wayhi[1229255])
    }
    {
      const-val call_tmp[2062795]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062797 'move' call_tmp[2062795](2062799 'cast' uint(64)[115] numelems[1229249]))
      const-val call_tmp[2066932]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066934 'move' call_tmp[2066932](2066936 '+' blocknum[1229253] 1))
      const-val call_tmp[2062805]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062807 'move' call_tmp[2062805](2062809 'cast' uint(64)[115] call_tmp[2066932]))
      const-val call_tmp[2137756]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2137758 'move' call_tmp[2137756](2137760 '*' call_tmp[2062795] call_tmp[2062805]))
      const-val call_tmp[2062815]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062817 'move' call_tmp[2062815](2062819 'cast' uint(64)[115] numblocks[1229251]))
      const-val call_tmp[1229563]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229565 'move' call_tmp[1229563](1229568 call intCeilXDivByY[1229720] call_tmp[2137756] call_tmp[2062815]))
      const-val call_tmp[2128716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2128718 'move' call_tmp[2128716](2128720 'cast' int(64)[13] call_tmp[1229563]))
      const-val call_tmp[2072367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2072369 'move' call_tmp[2072367](2072371 '+' lo[1229303] call_tmp[2128716]))
      const-val call_tmp[2090504]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090506 'move' call_tmp[2090504](2090508 '-' call_tmp[2072367] 1))
      (1229593 'move' tmp[1229482] call_tmp[2090504])
    }
    const-val ret_tmp[1789695]:2*int(64)[1039967] "temp"
    (2320370 'set svec member' ret_tmp[1789695] 0 tmp[1229383])
    (2320374 'set svec member' ret_tmp[1789695] 1 tmp[1229482])
    (1229611 'move' ret[1229305] ret_tmp[1789695])
    label _end__computeBlock[1229620]
    (1791866 '=' _retArg[1791864] ret[1229305])
    (1791868 return _void[55])
  }
  function bulkCommComputeActiveDims[1413977](const  ref arg LeftDims[1413979]:1*range(int(64),bounded,false)[1244607], const  ref arg RightDims[1413981]:1*range(int(64),bounded,false)[1244607], ref arg _retArg[1795198]:(1*int(64),1*int(64),int(64))[1415447]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val inferredRank[1414035]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1414037 'move' inferredRank[1414035] 0)
    val LeftActives[1414041]:1*int(64)[1256436] "dead at end of block" "insert auto destroy"
    const-val ret_tmp[1793188]:1*int(64)[1256436] "temp"
    (2316015 'set svec member' ret_tmp[1793188] 0 0)
    (1793191 'move' LeftActives[1414041] ret_tmp[1793188])
    val RightActives[1414054]:1*int(64)[1256436] "dead at end of block" "insert auto destroy"
    const-val ret_tmp[1793194]:1*int(64)[1256436] "temp"
    (2316022 'set svec member' ret_tmp[1793194] 0 0)
    (1793197 'move' RightActives[1414054] ret_tmp[1793194])
    val li[1414066]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1414068 'move' li[1414066] 0)
    val ri[1414071]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1414073 'move' ri[1414071] 0)
    DoWhile[1414620]
    {
      (1414624 call advance[1414078] LeftDims[1413979] li[1414066] RightDims[1413981] ri[1414071])
      ref call_tmp[1414626]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (1414628 'move' call_tmp[1414626](1414631 call this[1414951] LeftActives[1414041] inferredRank[1414035]))
      (2068259 '=' call_tmp[1414626] li[1414066])
      ref call_tmp[1414641]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (1414643 'move' call_tmp[1414641](1414646 call this[1414951] RightActives[1414054] inferredRank[1414035]))
      (2068265 '=' call_tmp[1414641] ri[1414071])
      ref i_lhs[2122116]:int(64)[13] "temp"
      (2122120 'move' i_lhs[2122116](2122118 'set reference' inferredRank[1414035]))
      (2122128 '+=' i_lhs[2122116] 1)
      ref i_lhs[2122133]:int(64)[13] "temp"
      (2122137 'move' i_lhs[2122133](2122135 'set reference' li[1414066]))
      (2122145 '+=' i_lhs[2122133] 1)
      ref i_lhs[2122150]:int(64)[13] "temp"
      (2122154 'move' i_lhs[2122150](2122152 'set reference' ri[1414071]))
      (2122162 '+=' i_lhs[2122150] 1)
      const-val call_tmp[2262338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2262340 'move' call_tmp[2262338](2262342 '<' li[1414066] 1))
      val tmp[1414697]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2262338]
      {
        const-val call_tmp[2262348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2262350 'move' call_tmp[2262348](2262352 '<' ri[1414071] 1))
        (1414730 'move' tmp[1414697] call_tmp[2262348])
      }
      {
        (1414736 'move' tmp[1414697] 0)
      }
      tmp[1414697]
    }
    const-val call_tmp[1414749]:(1*int(64),1*int(64),int(64))[1415269] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1795204]:(1*int(64),1*int(64),int(64))[1415269] "temp"
    const-ref this_x0[2309069]:1*int(64)[1256436]
    const-ref this_x1[2309071]:1*int(64)[1256436]
    val this_x2[2309073]:int(64)[13]
    (2262415 'move' this_x0[2309069](2315661 'set reference' LeftActives[1414041]))
    (2262419 'move' this_x1[2309071](2315663 'set reference' RightActives[1414054]))
    (2262423 'move' this_x2[2309073] inferredRank[1414035])
    (2309080 '.=' ret_tmp[1795204] x0[1415263] this_x0[2309069])
    (2309084 '.=' ret_tmp[1795204] x1[1415265] this_x1[2309071])
    (2309088 '.=' ret_tmp[1795204] x2[1415267] this_x2[2309073])
    (1795207 'move' call_tmp[1414749] ret_tmp[1795204])
    const-ref array_unref_ret_tmp_x0[2309044]:1*int(64)[1256436] "temp"
    const-ref array_unref_ret_tmp_x1[2309046]:1*int(64)[1256436] "temp"
    val array_unref_ret_tmp_x2[2309048]:int(64)[13] "temp"
    (2309054 'move' array_unref_ret_tmp_x0[2309044](2309052 '.v' call_tmp[1414749] x0[1415263]))
    (2309059 'move' array_unref_ret_tmp_x1[2309046](2309057 '.v' call_tmp[1414749] x1[1415265]))
    (2309064 'move' array_unref_ret_tmp_x2[2309048](2309062 '.v' call_tmp[1414749] x2[1415267]))
    const-val ret[2262448]:(1*int(64),1*int(64),int(64))[1415447] "dead after last mention" "RVV" "temp"
    val elt_x0[2262459]:1*int(64)[1256436]
    (2262461 'move' elt_x0[2262459] array_unref_ret_tmp_x0[2309044])
    val elt_x1[2262475]:1*int(64)[1256436]
    (2262477 'move' elt_x1[2262475] array_unref_ret_tmp_x1[2309046])
    (2303885 '.=' ret[2262448] x0[1415441] elt_x0[2262459])
    (2303889 '.=' ret[2262448] x1[1415443] elt_x1[2262475])
    (2303893 '.=' ret[2262448] x2[1415445] array_unref_ret_tmp_x2[2309048])
    label _end_bulkCommComputeActiveDims[1414768]
    (1795200 '=' _retArg[1795198] ret[2262448])
    (1795202 return _void[55])
  }
  function advance[1414078](const  ref arg LeftDims[1765858]:1*range(int(64),bounded,false)[1244607], ref arg li[1765860]:int(64)[13], const  ref arg RightDims[1765862]:1*range(int(64),bounded,false)[1244607], ref arg ri[1765864]:int(64)[13]) : void[4] "resolved" "fn synchronization free" "no return value for void"
  {
    val tmp[1414082]:bool[10] "dead after last mention" "temp"
    const-ref call_tmp[1414086]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
    const-val tmp[1766190]:int(64)[13] "temp"
    (1766193 'move' tmp[1766190](1766191 'deref' li[1765860]))
    (1414088 'move' call_tmp[1414086](1414091 call this[1382570] LeftDims[1765858] tmp[1766190]))
    const-val call_tmp[1414093]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1414788]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1414792 'move' coerce_tmp[1414788](1414790 'deref' call_tmp[1414086]))
    (1414095 'move' call_tmp[1414093](1414098 call size[1035700] coerce_tmp[1414788]))
    const-val call_tmp[2065272]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2065274 'move' call_tmp[2065272](2065276 '==' call_tmp[1414093] 1))
    val tmp[1414120]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2065272]
    {
      const-ref call_tmp[1414140]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766196]:int(64)[13] "temp"
      (1766199 'move' tmp[1766196](1766197 'deref' li[1765860]))
      (1414142 'move' call_tmp[1414140](1414145 call this[1382570] LeftDims[1765858] tmp[1766196]))
      const-val call_tmp[1414147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414802]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414806 'move' coerce_tmp[1414802](1414804 'deref' call_tmp[1414140]))
      (1414149 'move' call_tmp[1414147](1414152 call size[1035700] coerce_tmp[1414802]))
      const-ref call_tmp[1414155]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766232]:int(64)[13] "temp"
      (1766235 'move' tmp[1766232](1766233 'deref' ri[1765864]))
      (1414157 'move' call_tmp[1414155](1414160 call this[1382570] RightDims[1765862] tmp[1766232]))
      const-val call_tmp[1414162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414812]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414816 'move' coerce_tmp[1414812](1414814 'deref' call_tmp[1414155]))
      (1414164 'move' call_tmp[1414162](1414167 call size[1035700] coerce_tmp[1414812]))
      const-val call_tmp[2061728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2061730 'move' call_tmp[2061728](2061732 '!=' call_tmp[1414147] call_tmp[1414162]))
      (1414183 'move' tmp[1414120] call_tmp[2061728])
    }
    {
      (1414189 'move' tmp[1414120] 0)
    }
    (1414195 'move' tmp[1414082] tmp[1414120])
    WhileDo[1414200]
    {
      (2122271 '+=' li[1765860] 1)
      const-ref call_tmp[1414211]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766202]:int(64)[13] "temp"
      (1766205 'move' tmp[1766202](1766203 'deref' li[1765860]))
      (1414213 'move' call_tmp[1414211](1414216 call this[1382570] LeftDims[1765858] tmp[1766202]))
      const-val call_tmp[1414218]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414824]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414828 'move' coerce_tmp[1414824](1414826 'deref' call_tmp[1414211]))
      (1414220 'move' call_tmp[1414218](1414223 call size[1035700] coerce_tmp[1414824]))
      const-val call_tmp[2065287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065289 'move' call_tmp[2065287](2065291 '==' call_tmp[1414218] 1))
      val tmp[1414245]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2065287]
      {
        const-ref call_tmp[1414265]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
        const-val tmp[1766208]:int(64)[13] "temp"
        (1766211 'move' tmp[1766208](1766209 'deref' li[1765860]))
        (1414267 'move' call_tmp[1414265](1414270 call this[1382570] LeftDims[1765858] tmp[1766208]))
        const-val call_tmp[1414272]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1414838]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1414842 'move' coerce_tmp[1414838](1414840 'deref' call_tmp[1414265]))
        (1414274 'move' call_tmp[1414272](1414277 call size[1035700] coerce_tmp[1414838]))
        const-ref call_tmp[1414280]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
        const-val tmp[1766238]:int(64)[13] "temp"
        (1766241 'move' tmp[1766238](1766239 'deref' ri[1765864]))
        (1414282 'move' call_tmp[1414280](1414285 call this[1382570] RightDims[1765862] tmp[1766238]))
        const-val call_tmp[1414287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1414848]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1414852 'move' coerce_tmp[1414848](1414850 'deref' call_tmp[1414280]))
        (1414289 'move' call_tmp[1414287](1414292 call size[1035700] coerce_tmp[1414848]))
        const-val call_tmp[2061738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2061740 'move' call_tmp[2061738](2061742 '!=' call_tmp[1414272] call_tmp[1414287]))
        (1414308 'move' tmp[1414245] call_tmp[2061738])
      }
      {
        (1414314 'move' tmp[1414245] 0)
      }
      (1414320 'move' tmp[1414082] tmp[1414245])
      tmp[1414082]
    }
    val tmp[1414328]:bool[10] "dead after last mention" "temp"
    const-ref call_tmp[1414332]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
    const-val tmp[1766244]:int(64)[13] "temp"
    (1766247 'move' tmp[1766244](1766245 'deref' ri[1765864]))
    (1414334 'move' call_tmp[1414332](1414337 call this[1382570] RightDims[1765862] tmp[1766244]))
    const-val call_tmp[1414339]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1414859]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1414863 'move' coerce_tmp[1414859](1414861 'deref' call_tmp[1414332]))
    (1414341 'move' call_tmp[1414339](1414344 call size[1035700] coerce_tmp[1414859]))
    const-val call_tmp[2065302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2065304 'move' call_tmp[2065302](2065306 '==' call_tmp[1414339] 1))
    val tmp[1414366]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2065302]
    {
      const-ref call_tmp[1414386]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766250]:int(64)[13] "temp"
      (1766253 'move' tmp[1766250](1766251 'deref' ri[1765864]))
      (1414388 'move' call_tmp[1414386](1414391 call this[1382570] RightDims[1765862] tmp[1766250]))
      const-val call_tmp[1414393]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414873]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414877 'move' coerce_tmp[1414873](1414875 'deref' call_tmp[1414386]))
      (1414395 'move' call_tmp[1414393](1414398 call size[1035700] coerce_tmp[1414873]))
      const-ref call_tmp[1414401]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766214]:int(64)[13] "temp"
      (1766217 'move' tmp[1766214](1766215 'deref' li[1765860]))
      (1414403 'move' call_tmp[1414401](1414406 call this[1382570] LeftDims[1765858] tmp[1766214]))
      const-val call_tmp[1414408]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414883]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414887 'move' coerce_tmp[1414883](1414885 'deref' call_tmp[1414401]))
      (1414410 'move' call_tmp[1414408](1414413 call size[1035700] coerce_tmp[1414883]))
      const-val call_tmp[2061748]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2061750 'move' call_tmp[2061748](2061752 '!=' call_tmp[1414393] call_tmp[1414408]))
      (1414429 'move' tmp[1414366] call_tmp[2061748])
    }
    {
      (1414435 'move' tmp[1414366] 0)
    }
    (1414441 'move' tmp[1414328] tmp[1414366])
    WhileDo[1414446]
    {
      (2122282 '+=' ri[1765864] 1)
      const-ref call_tmp[1414457]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
      const-val tmp[1766256]:int(64)[13] "temp"
      (1766259 'move' tmp[1766256](1766257 'deref' ri[1765864]))
      (1414459 'move' call_tmp[1414457](1414462 call this[1382570] RightDims[1765862] tmp[1766256]))
      const-val call_tmp[1414464]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1414895]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1414899 'move' coerce_tmp[1414895](1414897 'deref' call_tmp[1414457]))
      (1414466 'move' call_tmp[1414464](1414469 call size[1035700] coerce_tmp[1414895]))
      const-val call_tmp[2065317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065319 'move' call_tmp[2065317](2065321 '==' call_tmp[1414464] 1))
      val tmp[1414491]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2065317]
      {
        const-ref call_tmp[1414511]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
        const-val tmp[1766262]:int(64)[13] "temp"
        (1766265 'move' tmp[1766262](1766263 'deref' ri[1765864]))
        (1414513 'move' call_tmp[1414511](1414516 call this[1382570] RightDims[1765862] tmp[1766262]))
        const-val call_tmp[1414518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1414909]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1414913 'move' coerce_tmp[1414909](1414911 'deref' call_tmp[1414511]))
        (1414520 'move' call_tmp[1414518](1414523 call size[1035700] coerce_tmp[1414909]))
        const-ref call_tmp[1414526]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
        const-val tmp[1766220]:int(64)[13] "temp"
        (1766223 'move' tmp[1766220](1766221 'deref' li[1765860]))
        (1414528 'move' call_tmp[1414526](1414531 call this[1382570] LeftDims[1765858] tmp[1766220]))
        const-val call_tmp[1414533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1414919]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1414923 'move' coerce_tmp[1414919](1414921 'deref' call_tmp[1414526]))
        (1414535 'move' call_tmp[1414533](1414538 call size[1035700] coerce_tmp[1414919]))
        const-val call_tmp[2061758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2061760 'move' call_tmp[2061758](2061762 '!=' call_tmp[1414518] call_tmp[1414533]))
        (1414554 'move' tmp[1414491] call_tmp[2061758])
      }
      {
        (1414560 'move' tmp[1414491] 0)
      }
      (1414566 'move' tmp[1414328] tmp[1414491])
      tmp[1414328]
    }
    const-ref call_tmp[1414573]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
    const-val tmp[1766226]:int(64)[13] "temp"
    (1766229 'move' tmp[1766226](1766227 'deref' li[1765860]))
    (1414575 'move' call_tmp[1414573](1414578 call this[1382570] LeftDims[1765858] tmp[1766226]))
    const-val call_tmp[1414580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1414930]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1414934 'move' coerce_tmp[1414930](1414932 'deref' call_tmp[1414573]))
    (1414582 'move' call_tmp[1414580](1414585 call size[1035700] coerce_tmp[1414930]))
    const-ref call_tmp[1414588]:range(int(64),bounded,false)[1026725] "dead after last mention" "maybe param" "reference to a const" "temp"
    const-val tmp[1766268]:int(64)[13] "temp"
    (1766271 'move' tmp[1766268](1766269 'deref' ri[1765864]))
    (1414590 'move' call_tmp[1414588](1414593 call this[1382570] RightDims[1765862] tmp[1766268]))
    const-val call_tmp[1414595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1414940]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1414944 'move' coerce_tmp[1414940](1414942 'deref' call_tmp[1414588]))
    (1414597 'move' call_tmp[1414595](1414600 call size[1035700] coerce_tmp[1414940]))
    const-val call_tmp[2065327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2065329 'move' call_tmp[2065327](2065331 '==' call_tmp[1414580] call_tmp[1414595]))
    (1414612 call assert[210257] call_tmp[2065327])
    (1414614 return _void[55])
  }
}