AST dump for BinaryInsertionSort after pass expandExternArrayCalls.
Module use list: 

{
  (352938 'use' ChapelStandard)
  (270609 'use' Sort)
  function binaryInsertionSort[270624](arg Data[270621] :
  (270619 call chpl__buildArrayRuntimeType unknown Dom[270614] unknown eltType[270617]), arg comparator[270629] :
  unknown rec[270626] =
  defaultComparator) : _unknown[51]
  {
    (270637 call chpl_check_comparator comparator eltType)
    if(270669 call _cond_test(270645 call !=(270641 call . Dom c"rank") 1))
    {
      (270666 call compilerError "binaryInsertionSort() requires 1-D array")
    }
    { scopeless
      const low[270677] "const"(270674 call . Dom c"alignedLow")
      const high[270684] "const"(270681 call . Dom c"alignedHigh")
      const stride[270694] "const"(270693 call abs(270689 call . Dom c"stride"))
      (270697 'end of statement')
    }
    {
      unknown _indexOfInterest[270851] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270852] "expr temp" "temp"
      (270861 'move' _iterator[270852](270859 call _getIterator(270870 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (270886 call _freeIterator _iterator[270852])
        }
      }
      { scopeless type
        (270875 'move' _indexOfInterest[270851](270872 call iteratorIndex _iterator[270852]))
      }
      ForLoop[270853]
      {
        unknown i[270879] "index var" "insert auto destroy"
        (270881 'move' i[270879] _indexOfInterest[270851])
        {
          { scopeless
            unknown valToInsert[270710](270709 call Data i)
            unknown lo[270714] low
            unknown hi[270721](270719 call - i stride)
            (270724 'end of statement')
          }
          { scopeless
            unknown tmp[270739] "temp"(270738 call _binarySearchForLastOccurrence Data valToInsert comparator lo hi)
            (270746 call _check_tuple_var_decl tmp[270739] 2)
            unknown found[270726](270740 call tmp[270739] 0)
            unknown loc[270728](270743 call tmp[270739] 1)
            (270751 'end of statement')
          }
          (270762 call = loc(270759 IfExpr  found then
          { scopeless
            (270756 call + loc stride)
          } else
          { scopeless
            loc
          } ))
          {
            unknown _indexOfInterest[270793] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270794] "expr temp" "temp"
            (270803 'move' _iterator[270794](270801 call _getIterator(270820 call chpl_direct_range_iter loc(270817 call - i stride)(270813 call - stride))))
            Defer
            {
              {
                (270836 call _freeIterator _iterator[270794])
              }
            }
            { scopeless type
              (270825 'move' _indexOfInterest[270793](270822 call iteratorIndex _iterator[270794]))
            }
            ForLoop[270795]
            {
              unknown j[270829] "index var" "insert auto destroy"
              (270831 'move' j[270829] _indexOfInterest[270793])
              {
                (270789 call =(270784 call Data(270781 call + j stride))(270788 call Data j))
              }
              label _continueLabel[270798]
              _indexOfInterest[270793]
              _iterator[270794]
            }
            label _breakLabel[270799]
          }
          (270848 call =(270846 call Data loc) valToInsert)
        }
        label _continueLabel[270856]
        _indexOfInterest[270851]
        _iterator[270852]
      }
      label _breakLabel[270857]
    }
  }
  function _binarySearchForLastOccurrence[270905](arg Data[270902] :
  (270900 call chpl__buildArrayRuntimeType unknown Dom[270897]), arg val[270907]:_any[178](?), arg comparator[270912] :
  unknown rec[270909] =
  defaultComparator, in arg lo[270920] =
  (270917 call . Dom c"alignedLow"), in arg hi[270927] =
  (270924 call . Dom c"alignedHigh")) : _unknown[51] "private"
  {
    { scopeless
      const stride[270945] "const"(270942 IfExpr (270931 call . Dom c"stridable") then
      { scopeless
        (270940 call abs(270936 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (270948 'end of statement')
    }
    { scopeless
      unknown loc[270953](270951 call - 1)
      (270956 'end of statement')
    }
    {
      unknown tmp[271051] "temp"
      (271075 'move' tmp[271051](271070 call _cond_test(271072 call <= lo hi)))
      WhileDo[271056]
      {
        {
          { scopeless
            const size[270968] "const"(270966 call /(270963 call - hi lo) stride)
            const mid[270981] "const"(270979 call + lo(270977 call *(270974 call / size 2) stride))
            (270984 'end of statement')
          }
          if(271046 call _cond_test(270996 call ==(270994 call chpl_compare val(270992 call Data mid) comparator) 0))
          {
            (271000 call = loc mid)
            (271009 call = lo(271007 call + loc stride))
          }
          {
            { scopeless
              if(271040 call _cond_test(271022 call >(271020 call chpl_compare val(271018 call Data mid) comparator) 0))
              {
                { scopeless
                  (271029 call = lo(271027 call + mid stride))
                }
              }
              {
                { scopeless
                  (271037 call = hi(271035 call - mid stride))
                }
              }
            }
          }
        }
        label _continueLabel[271054]
        (271065 'move' tmp[271051](271060 call _cond_test(271062 call <= lo hi)))
        tmp[271051]
      }
      label _breakLabel[271055]
    }
    if(271091 call _cond_test(271082 call == loc(271080 call - 1)))
    {
      { scopeless
        (271089 return(271087 call _build_tuple 0 lo))
      }
    }
    (271101 return(271099 call _build_tuple 1 loc))
  }
}