AST dump for Builtins after pass denormalize.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416208](const in arg _ln[2684674]:int(64)[13], in arg _fn[2684676]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_Builtins_p[2656980]
    {
      goto _exit_chpl__init_Builtins[2657017] _exit_chpl__init_Builtins[2657017]
    }
    ref refIndentLevel[2657003]:int(32)[95] "temp"
    (2657001 call printModuleInit[20429] c"%*s\n" c"Builtins" 8 _ln[2684674] _fn[2684676])
    (2657007 'move' refIndentLevel[2657003](2657006 'addr of' moduleInitLevel[20419]))
    (2657010 '+=' refIndentLevel[2657003] 1)
    (2656986 'move' chpl__init_Builtins_p[2656980] 1)
    {
      (2654706 call chpl__init_IO[416229] _ln[2684674] _fn[2684676])
    }
    (2657013 '-=' refIndentLevel[2657003] 1)
    label _exit_chpl__init_Builtins[2657017]
    (527982 return _void[55])
  }
  function _local_assert[2611149](const in arg test[2611151]:bool[10], const in arg _ln[2674210]:int(64)[13], in arg _fn[2674212]:int(32)[95]) : void[4] "always propagate line file info" "insert line file info" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    if(2611158 '!' test[2611151])
    {
      (2611162 'chpl_error' c"assert failed" _ln[2674210] _fn[2674212])
    }
    (2611165 return _void[55])
  }
  function assert[210432](const in arg test[210429]:bool[10], const in arg _ln[2666180]:int(64)[13], in arg _fn[2666182]:int(32)[95]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    if(2228251 '!' test[210429])
    {
      (210442 'chpl_error' c"assert failed" _ln[2666180] _fn[2666182])
    }
    (527960 return _void[55])
  }
  function assert[1442412](const in arg test[1442414]:bool[10], const  ref arg _e0_args[1442416]:string[26], const in arg _ln[2667616]:int(64)[13], in arg _fn[2667618]:int(32)[95]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4797[2579300]:string[26] "temp"
    (2579301 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2729[2579294]:string[26] "temp"
    (2579295 'move' "assert failed - " "assert failed - ")
    if(2228746 '!' test[1442414])
    {
      const-val call_tmp[1442441]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1915121]:string[26] "temp"
      (1442446 call stringify[1442480] _e0_args[1442416] ret_tmp[1915121] _ln[2667616] _fn[2667618])
      (1915124 'move' call_tmp[1442441] ret_tmp[1915121])
      const-val call_tmp[1442448]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906076]:string[26] "temp"
      wide-ref tmp[2617897]:string[26] "temp"
      (2617901 'move' tmp[2617897](2617899 'set reference' call_tmp[1442441]))
      (1442453 call +[38345] "assert failed - " tmp[2617897] ret_tmp[1906076] _ln[2667616] _fn[2667618])
      (1906079 'move' call_tmp[1442448] ret_tmp[1906076])
      const-val tmpstring[1442456]:string[26] "dead at end of block" "insert auto destroy"
      (1442458 'move' tmpstring[1442456] call_tmp[1442448])
      if(2268978 '!='(2268971 '.v' tmpstring[1442456] locale_id[30757]) chpl_nodeID[208207])
      {
        (2268984 call halt[154111] "Cannot call .c_str() on a remote string" _ln[2667616] _fn[2667618])
      }
      (1442471 'chpl_error'(2268998 'cast' c_string[19](2268991 '.v' tmpstring[1442456] buff[30740]) _ln[2667616] _fn[2667618]) _ln[2667616] _fn[2667618])
      ref i_x[2249237]:string[26] "temp"
      (2249241 'move' i_x[2249237](2249239 'set reference' tmpstring[1442456]))
      wide-ref tmp[2628139]:string[26] "temp"
      (2628142 'move' tmp[2628139] i_x[2249237])
      (2249245 call deinit[30834] tmp[2628139] _ln[2667616] _fn[2667618])
      ref i_x[2249249]:string[26] "temp"
      (2249253 'move' i_x[2249249](2249251 'set reference' call_tmp[1442441]))
      wide-ref tmp[2628145]:string[26] "temp"
      (2628148 'move' tmp[2628145] i_x[2249249])
      (2249257 call deinit[30834] tmp[2628145] _ln[2667616] _fn[2667618])
    }
    (1442476 return _void[55])
  }
  function assert[1465943](const in arg test[1465945]:bool[10], const  ref arg _e0_args[1465947]:string[26], const in arg _e1_args[1465949]:uint(64)[115], const  ref arg _e2_args[1465951]:string[26], const in arg _e3_args[1465953]:int(64)[13], const in arg _ln[2667668]:int(64)[13], in arg _fn[2667670]:int(32)[95]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4797[2579342]:string[26] "temp"
    (2579343 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2729[2579336]:string[26] "temp"
    (2579337 'move' "assert failed - " "assert failed - ")
    if(2228782 '!' test[1465945])
    {
      const-val call_tmp[1465984]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1915340]:string[26] "temp"
      (1465989 call stringify[1466032] _e0_args[1465947] _e1_args[1465949] _e2_args[1465951] _e3_args[1465953] ret_tmp[1915340] _ln[2667668] _fn[2667670])
      (1915343 'move' call_tmp[1465984] ret_tmp[1915340])
      const-val call_tmp[1465994]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906082]:string[26] "temp"
      wide-ref tmp[2617979]:string[26] "temp"
      (2617983 'move' tmp[2617979](2617981 'set reference' call_tmp[1465984]))
      (1465999 call +[38345] "assert failed - " tmp[2617979] ret_tmp[1906082] _ln[2667668] _fn[2667670])
      (1906085 'move' call_tmp[1465994] ret_tmp[1906082])
      const-val tmpstring[1466002]:string[26] "dead at end of block" "insert auto destroy"
      (1466004 'move' tmpstring[1466002] call_tmp[1465994])
      if(2269021 '!='(2269014 '.v' tmpstring[1466002] locale_id[30757]) chpl_nodeID[208207])
      {
        (2269027 call halt[154111] "Cannot call .c_str() on a remote string" _ln[2667668] _fn[2667670])
      }
      (1466017 'chpl_error'(2269041 'cast' c_string[19](2269034 '.v' tmpstring[1466002] buff[30740]) _ln[2667668] _fn[2667670]) _ln[2667668] _fn[2667670])
      ref i_x[2249261]:string[26] "temp"
      (2249265 'move' i_x[2249261](2249263 'set reference' tmpstring[1466002]))
      wide-ref tmp[2628151]:string[26] "temp"
      (2628154 'move' tmp[2628151] i_x[2249261])
      (2249269 call deinit[30834] tmp[2628151] _ln[2667668] _fn[2667670])
      ref i_x[2249273]:string[26] "temp"
      (2249277 'move' i_x[2249273](2249275 'set reference' call_tmp[1465984]))
      wide-ref tmp[2628157]:string[26] "temp"
      (2628160 'move' tmp[2628157] i_x[2249273])
      (2249281 call deinit[30834] tmp[2628157] _ln[2667668] _fn[2667670])
    }
    (1466022 return _void[55])
  }
  function assert[1559946](const in arg test[1559948]:bool[10], const  ref arg _e0_args[1559950]:string[26], const  ref arg _e1_args[1559952]:string[26], const  ref arg _e2_args[1559954]:string[26], const in arg _ln[2667952]:int(64)[13], in arg _fn[2667954]:int(32)[95]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4797[2579778]:string[26] "temp"
    (2579779 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2729[2579772]:string[26] "temp"
    (2579773 'move' "assert failed - " "assert failed - ")
    if(2228872 '!' test[1559948])
    {
      const-val call_tmp[1559983]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1916861]:string[26] "temp"
      (1559988 call stringify[1560024] _e0_args[1559950] _e1_args[1559952] _e2_args[1559954] ret_tmp[1916861] _ln[2667952] _fn[2667954])
      (1916864 'move' call_tmp[1559983] ret_tmp[1916861])
      const-val call_tmp[1559992]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906094]:string[26] "temp"
      wide-ref tmp[2618566]:string[26] "temp"
      (2618570 'move' tmp[2618566](2618568 'set reference' call_tmp[1559983]))
      (1559997 call +[38345] "assert failed - " tmp[2618566] ret_tmp[1906094] _ln[2667952] _fn[2667954])
      (1906097 'move' call_tmp[1559992] ret_tmp[1906094])
      const-val tmpstring[1560000]:string[26] "dead at end of block" "insert auto destroy"
      (1560002 'move' tmpstring[1560000] call_tmp[1559992])
      if(2269064 '!='(2269057 '.v' tmpstring[1560000] locale_id[30757]) chpl_nodeID[208207])
      {
        (2269070 call halt[154111] "Cannot call .c_str() on a remote string" _ln[2667952] _fn[2667954])
      }
      (1560015 'chpl_error'(2269084 'cast' c_string[19](2269077 '.v' tmpstring[1560000] buff[30740]) _ln[2667952] _fn[2667954]) _ln[2667952] _fn[2667954])
      ref i_x[2249405]:string[26] "temp"
      (2249409 'move' i_x[2249405](2249407 'set reference' tmpstring[1560000]))
      wide-ref tmp[2628223]:string[26] "temp"
      (2628226 'move' tmp[2628223] i_x[2249405])
      (2249413 call deinit[30834] tmp[2628223] _ln[2667952] _fn[2667954])
      ref i_x[2249417]:string[26] "temp"
      (2249421 'move' i_x[2249417](2249419 'set reference' call_tmp[1559983]))
      wide-ref tmp[2628229]:string[26] "temp"
      (2628232 'move' tmp[2628229] i_x[2249417])
      (2249425 call deinit[30834] tmp[2628229] _ln[2667952] _fn[2667954])
    }
    (1560020 return _void[55])
  }
  function compilerAssert[974079]() : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (974107 return _void[55])
  }
}