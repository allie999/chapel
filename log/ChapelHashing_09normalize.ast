AST dump for ChapelHashing after pass normalize.
Module use list: ChapelBase Reflection 

{
  function chpl__init_ChapelHashing[415907]() : void[4] "insert line file info" "module init"
  {
    (520774 return _void[55])
  }
  function chpl__defaultHashWrapper[155374](arg x[155372]:_any[178](?)) : _unknown[51]
  {
    unknown ret[520575] "RVV" "temp"
    unknown call_tmp[672178] "maybe param" "maybe type" "temp"
    (672181 'move' call_tmp[672178](155380 call chpl__defaultHash x[155372]))
    const hash[155381] "dead at end of block" "const" "insert auto destroy"
    (543844 'init var' hash[155381] call_tmp[672178])
    (155384 'end of statement')
    unknown call_tmp[672183] "expr temp" "maybe param" "maybe type" "temp"
    (672186 'move' call_tmp[672183](155390 call max int(64)[13]))
    unknown call_tmp[672188] "expr temp" "maybe param" "maybe type" "temp"
    (672191 'move' call_tmp[672188](155391 call & hash[155381] call_tmp[672183]))
    unknown call_tmp[672193] "expr temp" "maybe param" "maybe type" "temp"
    (672196 'move' call_tmp[672193](155394 call _cast int(64)[13] call_tmp[672188]))
    (520581 'move' ret[520575](520580 'coerce' call_tmp[672193] int(64)[13]))
    gotoReturn _end_chpl__defaultHashWrapper[520573] _end_chpl__defaultHashWrapper[520573]
    (481904 'end of statement' hash[155381])
    label _end_chpl__defaultHashWrapper[520573]
    (520577 return ret[520575])
  }
  { scopeless type
    int(64)[13]
  }
  function _gen_key[155407](arg i[155404]:uint(64)[115]) : _unknown[51]
  {
    unknown ret[520587] "RVV" "temp"
    unknown key[155411] "dead at end of block" "insert auto destroy"
    (543846 'init var' key[155411] i[155404])
    (155414 'end of statement')
    unknown call_tmp[672198] "expr temp" "maybe param" "maybe type" "temp"
    (672201 'move' call_tmp[672198](155418 call ~ key[155411]))
    unknown call_tmp[672203] "expr temp" "maybe param" "maybe type" "temp"
    (672206 'move' call_tmp[672203](155422 call << key[155411] 21))
    unknown call_tmp[672208] "expr temp" "maybe param" "maybe type" "temp"
    (672211 'move' call_tmp[672208](155424 call + call_tmp[672198] call_tmp[672203]))
    (155426 call = key[155411] call_tmp[672208])
    (481906 'end of statement' key[155411] key[155411] key[155411])
    unknown call_tmp[672213] "expr temp" "maybe param" "maybe type" "temp"
    (672216 'move' call_tmp[672213](155433 call >> key[155411] 24))
    unknown call_tmp[672218] "expr temp" "maybe param" "maybe type" "temp"
    (672221 'move' call_tmp[672218](155435 call ^ key[155411] call_tmp[672213]))
    (155437 call = key[155411] call_tmp[672218])
    (481910 'end of statement' key[155411] key[155411] key[155411])
    unknown call_tmp[672223] "expr temp" "maybe param" "maybe type" "temp"
    (672226 'move' call_tmp[672223](155444 call << key[155411] 3))
    unknown call_tmp[672228] "expr temp" "maybe param" "maybe type" "temp"
    (672231 'move' call_tmp[672228](155446 call + key[155411] call_tmp[672223]))
    unknown call_tmp[672233] "expr temp" "maybe param" "maybe type" "temp"
    (672236 'move' call_tmp[672233](155450 call << key[155411] 8))
    unknown call_tmp[672238] "expr temp" "maybe param" "maybe type" "temp"
    (672241 'move' call_tmp[672238](155452 call + call_tmp[672228] call_tmp[672233]))
    (155454 call = key[155411] call_tmp[672238])
    (481914 'end of statement' key[155411] key[155411] key[155411] key[155411])
    unknown call_tmp[672243] "expr temp" "maybe param" "maybe type" "temp"
    (672246 'move' call_tmp[672243](155461 call >> key[155411] 14))
    unknown call_tmp[672248] "expr temp" "maybe param" "maybe type" "temp"
    (672251 'move' call_tmp[672248](155463 call ^ key[155411] call_tmp[672243]))
    (155465 call = key[155411] call_tmp[672248])
    (481919 'end of statement' key[155411] key[155411] key[155411])
    unknown call_tmp[672253] "expr temp" "maybe param" "maybe type" "temp"
    (672256 'move' call_tmp[672253](155472 call << key[155411] 2))
    unknown call_tmp[672258] "expr temp" "maybe param" "maybe type" "temp"
    (672261 'move' call_tmp[672258](155474 call + key[155411] call_tmp[672253]))
    unknown call_tmp[672263] "expr temp" "maybe param" "maybe type" "temp"
    (672266 'move' call_tmp[672263](155478 call << key[155411] 4))
    unknown call_tmp[672268] "expr temp" "maybe param" "maybe type" "temp"
    (672271 'move' call_tmp[672268](155480 call + call_tmp[672258] call_tmp[672263]))
    (155482 call = key[155411] call_tmp[672268])
    (481923 'end of statement' key[155411] key[155411] key[155411] key[155411])
    unknown call_tmp[672273] "expr temp" "maybe param" "maybe type" "temp"
    (672276 'move' call_tmp[672273](155489 call >> key[155411] 28))
    unknown call_tmp[672278] "expr temp" "maybe param" "maybe type" "temp"
    (672281 'move' call_tmp[672278](155491 call ^ key[155411] call_tmp[672273]))
    (155493 call = key[155411] call_tmp[672278])
    (481928 'end of statement' key[155411] key[155411] key[155411])
    unknown call_tmp[672283] "expr temp" "maybe param" "maybe type" "temp"
    (672286 'move' call_tmp[672283](155500 call << key[155411] 31))
    unknown call_tmp[672288] "expr temp" "maybe param" "maybe type" "temp"
    (672291 'move' call_tmp[672288](155502 call + key[155411] call_tmp[672283]))
    (155504 call = key[155411] call_tmp[672288])
    (481932 'end of statement' key[155411] key[155411] key[155411])
    (520593 'move' ret[520587](520592 'coerce' key[155411] uint(64)[115]))
    gotoReturn _end__gen_key[520585] _end__gen_key[520585]
    (481936 'end of statement' key[155411])
    label _end__gen_key[520585]
    (520589 return ret[520587])
  }
  { scopeless type
    uint(64)[115]
  }
  function _gen_key[155519](arg i[155516]:int(64)[13]) : _unknown[51]
  {
    unknown ret[520599] "RVV" "temp"
    unknown call_tmp[672293] "expr temp" "maybe param" "maybe type" "temp"
    (672296 'move' call_tmp[672293](155525 call _cast uint(64)[115] i[155516]))
    unknown call_tmp[672298] "expr temp" "maybe param" "maybe type" "temp"
    (672301 'move' call_tmp[672298](155528 call _gen_key call_tmp[672293]))
    (520605 'move' ret[520599](520604 'coerce' call_tmp[672298] uint(64)[115]))
    (520601 return ret[520599])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHashCombine[155541](arg a[155538]:uint(64)[115], arg b[155544]:uint(64)[115], arg fieldnum[155548]:int(64)[13]) : _unknown[51] "inline"
  {
    unknown ret[520615] "RVV" "temp"
    function chpl_bitops_rotl_64[155561](arg x[155558] :
    (155557 call uint(64)[115] 64), arg n[155567] :
    (155566 call uint(64)[115] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[520609] "RVV" "temp"
      (520611 return ret[520609])
    }
    { scopeless type
      (155573 call uint(64)[115] 64)
    }
    unknown call_tmp[672303] "expr temp" "maybe param" "maybe type" "temp"
    (672306 'move' call_tmp[672303](155581 call + 17 fieldnum[155548]))
    unknown call_tmp[672308] "maybe param" "maybe type" "temp"
    (672311 'move' call_tmp[672308](155584 call _cast uint(64)[115] call_tmp[672303]))
    unknown n[155586] "dead at end of block" "insert auto destroy"
    (543848 'init var' n[155586] call_tmp[672308] uint(64)[115])
    (155589 'end of statement')
    unknown call_tmp[672313] "expr temp" "maybe param" "maybe type" "temp"
    (672316 'move' call_tmp[672313](155596 call chpl_bitops_rotl_64 b[155544] n[155586]))
    unknown call_tmp[672318] "expr temp" "maybe param" "maybe type" "temp"
    (672321 'move' call_tmp[672318](155597 call ^ a[155538] call_tmp[672313]))
    unknown call_tmp[672323] "expr temp" "maybe param" "maybe type" "temp"
    (672326 'move' call_tmp[672323](155600 call _gen_key call_tmp[672318]))
    (520621 'move' ret[520615](520620 'coerce' call_tmp[672323] uint(64)[115]))
    gotoReturn _end_chpl__defaultHashCombine[520613] _end_chpl__defaultHashCombine[520613]
    (481939 'end of statement' n[155586])
    label _end_chpl__defaultHashCombine[520613]
    (520617 return ret[520615])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155612](arg b[155609]:bool[10]) : _unknown[51] "inline"
  {
    unknown ret[520627] "RVV" "temp"
    unknown call_tmp[672328] "expr temp" "maybe param" "maybe type" "temp"
    (672331 'move' call_tmp[672328](155622 call _cond_test b[155609]))
    if call_tmp[672328]
    {
      (520633 'move' ret[520627](520632 'coerce' 0 uint(64)[115]))
      gotoReturn _end_chpl__defaultHash[520625] _end_chpl__defaultHash[520625]
    }
    {
      (520639 'move' ret[520627](520638 'coerce' 1 uint(64)[115]))
      gotoReturn _end_chpl__defaultHash[520625] _end_chpl__defaultHash[520625]
    }
    label _end_chpl__defaultHash[520625]
    (520629 return ret[520627])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155641](arg i[155638] :
  (155637 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    unknown ret[520645] "RVV" "temp"
    unknown call_tmp[672333] "expr temp" "maybe param" "maybe type" "temp"
    (672336 'move' call_tmp[672333](155647 call _gen_key i[155638]))
    (520651 'move' ret[520645](520650 'coerce' call_tmp[672333] uint(64)[115]))
    (520647 return ret[520645])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155663](arg u[155660] :
  (155659 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    unknown ret[520655] "RVV" "temp"
    unknown call_tmp[672338] "expr temp" "maybe param" "maybe type" "temp"
    (672341 'move' call_tmp[672338](155669 call _gen_key u[155660]))
    (520661 'move' ret[520655](520660 'coerce' call_tmp[672338] uint(64)[115]))
    (520657 return ret[520655])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155680](arg e[155678]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[520665] "RVV" "temp"
    unknown call_tmp[672343] "expr temp" "maybe param" "maybe type" "temp"
    (672346 'move' call_tmp[672343](155690 call chpl__enumToOrder e[155678]))
    unknown call_tmp[672348] "expr temp" "maybe param" "maybe type" "temp"
    (672351 'move' call_tmp[672348](155692 call _gen_key call_tmp[672343]))
    (520670 'move' ret[520665](520669 'deref' call_tmp[672348]))
    (520667 return ret[520665])
  }
  where {
    (155685 call isEnum e[155678])
  }
  function chpl__defaultHash[155705](arg f[155702]:real(64)[16]) : _unknown[51] "inline"
  {
    unknown ret[520674] "RVV" "temp"
    unknown call_tmp[672353] "expr temp" "maybe param" "maybe type" "temp"
    (672356 'move' call_tmp[672353](155728 'real2int' f[155702]))
    unknown call_tmp[672358] "expr temp" "maybe param" "maybe type" "temp"
    (672361 'move' call_tmp[672358](155730 call _gen_key call_tmp[672353]))
    (520680 'move' ret[520674](520679 'coerce' call_tmp[672358] uint(64)[115]))
    (520676 return ret[520674])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155743](arg c[155740]:complex(128)[140]) : _unknown[51] "inline"
  {
    unknown ret[520684] "RVV" "temp"
    unknown call_tmp[672365] "expr temp" "maybe param" "maybe type" "temp"
    (672368 'move' call_tmp[672365](155750 call re _mt[243] c[155740]))
    unknown call_tmp[672370] "expr temp" "maybe param" "maybe type" "temp"
    (672373 'move' call_tmp[672370](155753 'real2int' call_tmp[672365]))
    unknown call_tmp[672377] "expr temp" "maybe param" "maybe type" "temp"
    (672380 'move' call_tmp[672377](155757 call im _mt[243] c[155740]))
    unknown call_tmp[672382] "expr temp" "maybe param" "maybe type" "temp"
    (672385 'move' call_tmp[672382](155760 'real2int' call_tmp[672377]))
    unknown call_tmp[672387] "expr temp" "maybe param" "maybe type" "temp"
    (672390 'move' call_tmp[672387](155761 call ^ call_tmp[672370] call_tmp[672382]))
    unknown call_tmp[672392] "expr temp" "maybe param" "maybe type" "temp"
    (672395 'move' call_tmp[672392](155764 call _gen_key call_tmp[672387]))
    (520690 'move' ret[520684](520689 'coerce' call_tmp[672392] uint(64)[115]))
    (520686 return ret[520684])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155777](arg a[155774]:imag(64)[130]) : _unknown[51] "inline"
  {
    unknown ret[520694] "RVV" "temp"
    unknown call_tmp[672397] "expr temp" "maybe param" "maybe type" "temp"
    (672400 'move' call_tmp[672397](155786 call _i2r a[155774]))
    unknown call_tmp[672402] "expr temp" "maybe param" "maybe type" "temp"
    (672405 'move' call_tmp[672402](155787 'real2int' call_tmp[672397]))
    unknown call_tmp[672407] "expr temp" "maybe param" "maybe type" "temp"
    (672410 'move' call_tmp[672407](155789 call _gen_key call_tmp[672402]))
    (520700 'move' ret[520694](520699 'coerce' call_tmp[672407] uint(64)[115]))
    (520696 return ret[520694])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155802](arg u[155799]:chpl_taskID_t[163]) : _unknown[51] "inline"
  {
    unknown ret[520704] "RVV" "temp"
    unknown call_tmp[672412] "expr temp" "maybe param" "maybe type" "temp"
    (672415 'move' call_tmp[672412](155810 call int(64)[13] 64))
    unknown call_tmp[672417] "expr temp" "maybe param" "maybe type" "temp"
    (672420 'move' call_tmp[672417](155811 call _cast call_tmp[672412] u[155799]))
    unknown call_tmp[672422] "expr temp" "maybe param" "maybe type" "temp"
    (672425 'move' call_tmp[672422](155814 call _gen_key call_tmp[672417]))
    (520710 'move' ret[520704](520709 'coerce' call_tmp[672422] uint(64)[115]))
    (520706 return ret[520704])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155829](arg l[155826]:_array[133588](?)) : _unknown[51] "inline"
  {
    unknown ret[520714] "RVV" "temp"
    unknown hash[155834] "dead at end of block" "insert auto destroy"
    (543850 'init var' hash[155834] 0 uint(64)[115])
    (155837 'end of statement')
    unknown i[155840] "dead at end of block" "insert auto destroy"
    (543852 'init var' i[155840] 1)
    (155843 'end of statement')
    {
      unknown _indexOfInterest[155865] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[155866] "expr temp" "temp"
      (155875 'move' _iterator[155866](155873 call _getIterator l[155826]))
      Defer
      {
        {
          (155891 call _freeIterator _iterator[155866])
        }
      }
      { scopeless type
        (155880 'move' _indexOfInterest[155865](155877 call iteratorIndex _iterator[155866]))
      }
      ForLoop[155867]
      {
        unknown obj[155884] "index var" "insert auto destroy"
        (481951 'end of statement')
        (155886 'move' obj[155884] _indexOfInterest[155865])
        (481952 'end of statement' obj[155884])
        {
          unknown call_tmp[672427] "expr temp" "maybe param" "maybe type" "temp"
          (672430 'move' call_tmp[672427](155851 call chpl__defaultHash obj[155884]))
          unknown call_tmp[672432] "expr temp" "maybe param" "maybe type" "temp"
          (672435 'move' call_tmp[672432](155855 call chpl__defaultHashCombine call_tmp[672427] hash[155834] i[155840]))
          (155856 call = hash[155834] call_tmp[672432])
          (481954 'end of statement' hash[155834] obj[155884] hash[155834] i[155840])
          (155862 call += i[155840] 1)
          (481959 'end of statement' i[155840])
        }
        label _continueLabel[155870]
        _indexOfInterest[155865]
        _iterator[155866]
      }
      label _breakLabel[155871]
    }
    (520720 'move' ret[520714](520719 'coerce' hash[155834] uint(64)[115]))
    gotoReturn _end_chpl__defaultHash[520712] _end_chpl__defaultHash[520712]
    (481961 'end of statement' hash[155834])
    label _end_chpl__defaultHash[520712]
    (520716 return ret[520714])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155912](arg o[155909]:borrowed object?[415248]) : _unknown[51] "inline"
  {
    unknown ret[520726] "RVV" "temp"
    unknown call_tmp[672437] "expr temp" "maybe param" "maybe type" "temp"
    (672440 'move' call_tmp[672437](155935 'object2int' o[155909]))
    unknown call_tmp[672442] "expr temp" "maybe param" "maybe type" "temp"
    (672445 'move' call_tmp[672442](155937 call _gen_key call_tmp[672437]))
    (520732 'move' ret[520726](520731 'coerce' call_tmp[672442] uint(64)[115]))
    (520728 return ret[520726])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155950](arg l[155947]:locale[28]) : _unknown[51] "inline"
  {
    unknown ret[520736] "RVV" "temp"
    unknown call_tmp[672449] "expr temp" "maybe param" "maybe type" "temp"
    (672452 'move' call_tmp[672449](155957 call _value _mt[243] l[155947]))
    unknown call_tmp[672454] "expr temp" "maybe param" "maybe type" "temp"
    (672457 'move' call_tmp[672454](155960 'object2int' call_tmp[672449]))
    unknown call_tmp[672459] "expr temp" "maybe param" "maybe type" "temp"
    (672462 'move' call_tmp[672459](155962 call _gen_key call_tmp[672454]))
    (520742 'move' ret[520736](520741 'coerce' call_tmp[672459] uint(64)[115]))
    (520738 return ret[520736])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155975](arg r[155972]:range[64316](?)) : _unknown[51] "inline"
  {
    unknown ret[520746] "RVV" "temp"
    unknown ret[155983] "dead at end of block" "insert auto destroy"
    (543854 'default init var' ret[155983] uint(64)[115])
    (155986 'end of statement')
    {
      unknown i[156081] "dead at end of block" "insert auto destroy"
      (543856 'init var' i[156081] 0)
      (481965 'end of statement')
      unknown tmp[156082] "maybe param" "temp"
      unknown call_tmp[672464] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (672467 'move' call_tmp[672464](155990 'typeof' r[155972]))
      unknown call_tmp[672469] "expr temp" "maybe param" "maybe type" "temp"
      (672472 'move' call_tmp[672469](155992 call numImplementationFields call_tmp[672464]))
      (156094 'move' tmp[156082](156092 call chpl_compute_low_param_loop_bound 1 call_tmp[672469]))
      unknown tmp[156083] "maybe param" "temp"
      unknown call_tmp[672474] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (672477 'move' call_tmp[672474](156100 'typeof' r[155972]))
      unknown call_tmp[672479] "expr temp" "maybe param" "maybe type" "temp"
      (672482 'move' call_tmp[672479](156099 call numImplementationFields call_tmp[672474]))
      (156104 'move' tmp[156083](156102 call chpl_compute_high_param_loop_bound 1 call_tmp[672479]))
      unknown tmp[156084] "maybe param" "temp"
      (156107 'move' tmp[156084] 1)
      ParamForLoop[156109]
      { i[156081] tmp[156082] tmp[156083] tmp[156084]
        {
          unknown tmp[427504] "maybe param" "temp"
          unknown tmp[427525] "maybe param" "temp"
          unknown call_tmp[672484] "expr temp" "maybe param" "maybe type" "temp"
          (672487 'move' call_tmp[672484](156000 call getImplementationField r[155972] i[156081]))
          unknown call_tmp[672489] "expr temp" "maybe param" "maybe type" "temp"
          (672492 'move' call_tmp[672489](156002 call isParam call_tmp[672484]))
          (427536 'move' tmp[427525](156004 call == call_tmp[672489] 0))
          unknown call_tmp[672494] "expr temp" "maybe param" "maybe type" "temp"
          (672497 'move' call_tmp[672494](427538 call _cond_invalid tmp[427525]))
          if call_tmp[672494]
          {
            (427541 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[569330] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[569331] "maybe param" "temp"
          unknown call_tmp[672499] "expr temp" "maybe param" "maybe type" "temp"
          (672502 'move' call_tmp[672499](427526 call isTrue tmp[427525]))
          (569336 'move' tmp[569331](569334 call _cond_test call_tmp[672499]))
          if tmp[569331]
          {
            unknown tmp[569338] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[672504] "expr temp" "maybe param" "maybe type" "temp"
            (672507 'move' call_tmp[672504](156011 call getImplementationField r[155972] i[156081]))
            unknown call_tmp[672509] "expr temp" "maybe param" "maybe type" "temp"
            (672512 'move' call_tmp[672509](156013 call isType call_tmp[672504]))
            unknown call_tmp[672514] "expr temp" "maybe param" "maybe type" "temp"
            (672517 'move' call_tmp[672514](156015 call == call_tmp[672509] 0))
            (569340 'move' tmp[569338](427529 call isTrue call_tmp[672514]))
            (569345 'move' tmp[569330](569342 '_paramFoldLogical' tmp[569331] tmp[569338]))
          }
          {
            (569350 'move' tmp[569330](569347 '_paramFoldLogical' tmp[569331] 0))
          }
          (427515 'move' tmp[427504] tmp[569330])
          unknown call_tmp[672519] "expr temp" "maybe param" "maybe type" "temp"
          (672522 'move' call_tmp[672519](427517 call _cond_invalid tmp[427504]))
          if call_tmp[672519]
          {
            (427520 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[569357] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[569358] "maybe param" "temp"
          unknown call_tmp[672524] "expr temp" "maybe param" "maybe type" "temp"
          (672527 'move' call_tmp[672524](427505 call isTrue tmp[427504]))
          (569363 'move' tmp[569358](569361 call _cond_test call_tmp[672524]))
          if tmp[569358]
          {
            { scopeless type
              unknown call_type_tmp[492254] "expr temp" "maybe type" "temp" "type variable"
              unknown call_tmp[672529] "expr temp" "maybe param" "maybe type" "temp"
              (672532 'move' call_tmp[672529](156024 call getImplementationField r[155972] i[156081]))
              (492258 'move' call_type_tmp[492254](156025 'typeof' call_tmp[672529]))
            }
            unknown tmp[569365] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[672534] "expr temp" "maybe param" "maybe type" "temp"
            (672537 'move' call_tmp[672534](156027 call isNothingType call_type_tmp[492254]))
            unknown call_tmp[672539] "expr temp" "maybe param" "maybe type" "temp"
            (672542 'move' call_tmp[672539](156029 call == call_tmp[672534] 0))
            (569367 'move' tmp[569365](427508 call isTrue call_tmp[672539]))
            (569372 'move' tmp[569357](569369 '_paramFoldLogical' tmp[569358] tmp[569365]))
          }
          {
            (569377 'move' tmp[569357](569374 '_paramFoldLogical' tmp[569358] 0))
          }
          unknown call_tmp[672544] "expr temp" "maybe param" "maybe type" "temp"
          (672547 'move' call_tmp[672544](156076 call _cond_test tmp[569357]))
          if call_tmp[672544]
          {
            const field[156038] "dead at end of block" "const" "ref var"
            unknown call_tmp[672549] "expr temp" "maybe param" "maybe type" "temp"
            (672552 'move' call_tmp[672549](156037 call getImplementationField r[155972] i[156081]))
            (543859 'move' field[156038](543858 'addr of' call_tmp[672549]))
            (156041 'end of statement')
            unknown call_tmp[672554] "maybe param" "maybe type" "temp"
            (672557 'move' call_tmp[672554](156046 call chpl__defaultHash field[156038]))
            const fieldHash[156047] "dead at end of block" "const" "insert auto destroy"
            (543861 'init var' fieldHash[156047] call_tmp[672554])
            (156050 'end of statement' i[156081] field[156038])
            unknown call_tmp[672559] "expr temp" "maybe param" "maybe type" "temp"
            (672562 'move' call_tmp[672559](156053 call == i[156081] 1))
            unknown call_tmp[672564] "expr temp" "maybe param" "maybe type" "temp"
            (672567 'move' call_tmp[672564](156070 call _cond_test call_tmp[672559]))
            if call_tmp[672564]
            {
              (156057 call = ret[155983] fieldHash[156047])
              (481970 'end of statement' ret[155983] fieldHash[156047])
            }
            {
              unknown call_tmp[672569] "expr temp" "maybe param" "maybe type" "temp"
              (672572 'move' call_tmp[672569](156066 call chpl__defaultHashCombine fieldHash[156047] ret[155983] i[156081]))
              (156067 call = ret[155983] call_tmp[672569])
              (481973 'end of statement' ret[155983] fieldHash[156047] ret[155983] i[156081])
            }
          }
        }
      }
      label _unused_continueLabel[156086]
      label _breakLabel[156085]
    }
    (520752 'move' ret[520746](520751 'coerce' ret[155983] uint(64)[115]))
    gotoReturn _end_chpl__defaultHash[520744] _end_chpl__defaultHash[520744]
    (481978 'end of statement' ret[155983])
    label _end_chpl__defaultHash[520744]
    (520748 return ret[520746])
    (355055 'used modules list'(155979 'use' Reflection[224794]))
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__validDefaultAssocDomIdxType[156128](arg idxType[156126]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[520758] "RVV" "param" "temp"
    (520763 'move' ret[520758](520762 'deref' 0))
    (520760 return ret[520758])
  }
  function chpl__validDefaultAssocDomIdxType[156140](arg idxType[156138]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[520767] "RVV" "param" "temp"
    (520772 'move' ret[520767](520771 'deref' 1))
    (520769 return ret[520767])
  }
  where {
    unknown tmp[427546] "maybe param" "temp"
    unknown tmp[427567] "maybe param" "temp"
    unknown tmp[427588] "maybe param" "temp"
    unknown tmp[427609] "maybe param" "temp"
    unknown tmp[427630] "maybe param" "temp"
    unknown tmp[427651] "maybe param" "temp"
    unknown tmp[427672] "maybe param" "temp"
    unknown tmp[427693] "maybe param" "temp"
    unknown tmp[427714] "maybe param" "temp"
    unknown tmp[427735] "maybe param" "temp"
    unknown tmp[427756] "maybe param" "temp"
    unknown tmp[427777] "maybe param" "temp"
    unknown tmp[427798] "maybe param" "temp"
    (427809 'move' tmp[427798](156145 call isBoolType idxType[156138]))
    unknown call_tmp[672574] "expr temp" "maybe param" "maybe type" "temp"
    (672577 'move' call_tmp[672574](427811 call _cond_invalid tmp[427798]))
    if call_tmp[672574]
    {
      (427814 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569385] "maybe param" "temp"
    unknown call_tmp[672579] "expr temp" "maybe param" "maybe type" "temp"
    (672582 'move' call_tmp[672579](427799 call isTrue tmp[427798]))
    (569390 'move' tmp[569385](569388 call _cond_test call_tmp[672579]))
    if tmp[569385]
    {
      (569395 'move' tmp[569384](569392 '_paramFoldLogical' tmp[569385] 1))
    }
    {
      unknown tmp[569397] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672584] "expr temp" "maybe param" "maybe type" "temp"
      (672587 'move' call_tmp[672584](156149 call isIntType idxType[156138]))
      (569399 'move' tmp[569397](427803 call isTrue call_tmp[672584]))
      (569404 'move' tmp[569384](569401 '_paramFoldLogical' tmp[569385] tmp[569397]))
    }
    (427788 'move' tmp[427777] tmp[569384])
    unknown call_tmp[672589] "expr temp" "maybe param" "maybe type" "temp"
    (672592 'move' call_tmp[672589](427790 call _cond_invalid tmp[427777]))
    if call_tmp[672589]
    {
      (427793 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569412] "maybe param" "temp"
    unknown call_tmp[672594] "expr temp" "maybe param" "maybe type" "temp"
    (672597 'move' call_tmp[672594](427778 call isTrue tmp[427777]))
    (569417 'move' tmp[569412](569415 call _cond_test call_tmp[672594]))
    if tmp[569412]
    {
      (569422 'move' tmp[569411](569419 '_paramFoldLogical' tmp[569412] 1))
    }
    {
      unknown tmp[569424] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672599] "expr temp" "maybe param" "maybe type" "temp"
      (672602 'move' call_tmp[672599](156155 call isUintType idxType[156138]))
      (569426 'move' tmp[569424](427782 call isTrue call_tmp[672599]))
      (569431 'move' tmp[569411](569428 '_paramFoldLogical' tmp[569412] tmp[569424]))
    }
    (427767 'move' tmp[427756] tmp[569411])
    unknown call_tmp[672604] "expr temp" "maybe param" "maybe type" "temp"
    (672607 'move' call_tmp[672604](427769 call _cond_invalid tmp[427756]))
    if call_tmp[672604]
    {
      (427772 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569438] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569439] "maybe param" "temp"
    unknown call_tmp[672609] "expr temp" "maybe param" "maybe type" "temp"
    (672612 'move' call_tmp[672609](427757 call isTrue tmp[427756]))
    (569444 'move' tmp[569439](569442 call _cond_test call_tmp[672609]))
    if tmp[569439]
    {
      (569449 'move' tmp[569438](569446 '_paramFoldLogical' tmp[569439] 1))
    }
    {
      unknown tmp[569451] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672614] "expr temp" "maybe param" "maybe type" "temp"
      (672617 'move' call_tmp[672614](156161 call isRealType idxType[156138]))
      (569453 'move' tmp[569451](427761 call isTrue call_tmp[672614]))
      (569458 'move' tmp[569438](569455 '_paramFoldLogical' tmp[569439] tmp[569451]))
    }
    (427746 'move' tmp[427735] tmp[569438])
    unknown call_tmp[672619] "expr temp" "maybe param" "maybe type" "temp"
    (672622 'move' call_tmp[672619](427748 call _cond_invalid tmp[427735]))
    if call_tmp[672619]
    {
      (427751 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569465] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569466] "maybe param" "temp"
    unknown call_tmp[672624] "expr temp" "maybe param" "maybe type" "temp"
    (672627 'move' call_tmp[672624](427736 call isTrue tmp[427735]))
    (569471 'move' tmp[569466](569469 call _cond_test call_tmp[672624]))
    if tmp[569466]
    {
      (569476 'move' tmp[569465](569473 '_paramFoldLogical' tmp[569466] 1))
    }
    {
      unknown tmp[569478] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672629] "expr temp" "maybe param" "maybe type" "temp"
      (672632 'move' call_tmp[672629](156167 call isImagType idxType[156138]))
      (569480 'move' tmp[569478](427740 call isTrue call_tmp[672629]))
      (569485 'move' tmp[569465](569482 '_paramFoldLogical' tmp[569466] tmp[569478]))
    }
    (427725 'move' tmp[427714] tmp[569465])
    unknown call_tmp[672634] "expr temp" "maybe param" "maybe type" "temp"
    (672637 'move' call_tmp[672634](427727 call _cond_invalid tmp[427714]))
    if call_tmp[672634]
    {
      (427730 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569492] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569493] "maybe param" "temp"
    unknown call_tmp[672639] "expr temp" "maybe param" "maybe type" "temp"
    (672642 'move' call_tmp[672639](427715 call isTrue tmp[427714]))
    (569498 'move' tmp[569493](569496 call _cond_test call_tmp[672639]))
    if tmp[569493]
    {
      (569503 'move' tmp[569492](569500 '_paramFoldLogical' tmp[569493] 1))
    }
    {
      unknown tmp[569505] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672644] "expr temp" "maybe param" "maybe type" "temp"
      (672647 'move' call_tmp[672644](156173 call isComplexType idxType[156138]))
      (569507 'move' tmp[569505](427719 call isTrue call_tmp[672644]))
      (569512 'move' tmp[569492](569509 '_paramFoldLogical' tmp[569493] tmp[569505]))
    }
    (427704 'move' tmp[427693] tmp[569492])
    unknown call_tmp[672649] "expr temp" "maybe param" "maybe type" "temp"
    (672652 'move' call_tmp[672649](427706 call _cond_invalid tmp[427693]))
    if call_tmp[672649]
    {
      (427709 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569519] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569520] "maybe param" "temp"
    unknown call_tmp[672654] "expr temp" "maybe param" "maybe type" "temp"
    (672657 'move' call_tmp[672654](427694 call isTrue tmp[427693]))
    (569525 'move' tmp[569520](569523 call _cond_test call_tmp[672654]))
    if tmp[569520]
    {
      (569530 'move' tmp[569519](569527 '_paramFoldLogical' tmp[569520] 1))
    }
    {
      unknown tmp[569532] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672659] "expr temp" "maybe param" "maybe type" "temp"
      (672662 'move' call_tmp[672659](156178 call == idxType[156138] chpl_taskID_t[163]))
      (569534 'move' tmp[569532](427698 call isTrue call_tmp[672659]))
      (569539 'move' tmp[569519](569536 '_paramFoldLogical' tmp[569520] tmp[569532]))
    }
    (427683 'move' tmp[427672] tmp[569519])
    unknown call_tmp[672664] "expr temp" "maybe param" "maybe type" "temp"
    (672667 'move' call_tmp[672664](427685 call _cond_invalid tmp[427672]))
    if call_tmp[672664]
    {
      (427688 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569546] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569547] "maybe param" "temp"
    unknown call_tmp[672669] "expr temp" "maybe param" "maybe type" "temp"
    (672672 'move' call_tmp[672669](427673 call isTrue tmp[427672]))
    (569552 'move' tmp[569547](569550 call _cond_test call_tmp[672669]))
    if tmp[569547]
    {
      (569557 'move' tmp[569546](569554 '_paramFoldLogical' tmp[569547] 1))
    }
    {
      unknown tmp[569559] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672674] "expr temp" "maybe param" "maybe type" "temp"
      (672677 'move' call_tmp[672674](156184 call == idxType[156138] string[26]))
      (569561 'move' tmp[569559](427677 call isTrue call_tmp[672674]))
      (569566 'move' tmp[569546](569563 '_paramFoldLogical' tmp[569547] tmp[569559]))
    }
    (427662 'move' tmp[427651] tmp[569546])
    unknown call_tmp[672679] "expr temp" "maybe param" "maybe type" "temp"
    (672682 'move' call_tmp[672679](427664 call _cond_invalid tmp[427651]))
    if call_tmp[672679]
    {
      (427667 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569573] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569574] "maybe param" "temp"
    unknown call_tmp[672684] "expr temp" "maybe param" "maybe type" "temp"
    (672687 'move' call_tmp[672684](427652 call isTrue tmp[427651]))
    (569579 'move' tmp[569574](569577 call _cond_test call_tmp[672684]))
    if tmp[569574]
    {
      (569584 'move' tmp[569573](569581 '_paramFoldLogical' tmp[569574] 1))
    }
    {
      unknown tmp[569586] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672689] "expr temp" "maybe param" "maybe type" "temp"
      (672692 'move' call_tmp[672689](156190 call == idxType[156138] bytes[24]))
      (569588 'move' tmp[569586](427656 call isTrue call_tmp[672689]))
      (569593 'move' tmp[569573](569590 '_paramFoldLogical' tmp[569574] tmp[569586]))
    }
    (427641 'move' tmp[427630] tmp[569573])
    unknown call_tmp[672694] "expr temp" "maybe param" "maybe type" "temp"
    (672697 'move' call_tmp[672694](427643 call _cond_invalid tmp[427630]))
    if call_tmp[672694]
    {
      (427646 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569600] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569601] "maybe param" "temp"
    unknown call_tmp[672699] "expr temp" "maybe param" "maybe type" "temp"
    (672702 'move' call_tmp[672699](427631 call isTrue tmp[427630]))
    (569606 'move' tmp[569601](569604 call _cond_test call_tmp[672699]))
    if tmp[569601]
    {
      (569611 'move' tmp[569600](569608 '_paramFoldLogical' tmp[569601] 1))
    }
    {
      unknown tmp[569613] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672704] "expr temp" "maybe param" "maybe type" "temp"
      (672707 'move' call_tmp[672704](156196 call == idxType[156138] c_string[19]))
      (569615 'move' tmp[569613](427635 call isTrue call_tmp[672704]))
      (569620 'move' tmp[569600](569617 '_paramFoldLogical' tmp[569601] tmp[569613]))
    }
    (427620 'move' tmp[427609] tmp[569600])
    unknown call_tmp[672709] "expr temp" "maybe param" "maybe type" "temp"
    (672712 'move' call_tmp[672709](427622 call _cond_invalid tmp[427609]))
    if call_tmp[672709]
    {
      (427625 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569627] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569628] "maybe param" "temp"
    unknown call_tmp[672714] "expr temp" "maybe param" "maybe type" "temp"
    (672717 'move' call_tmp[672714](427610 call isTrue tmp[427609]))
    (569633 'move' tmp[569628](569631 call _cond_test call_tmp[672714]))
    if tmp[569628]
    {
      (569638 'move' tmp[569627](569635 '_paramFoldLogical' tmp[569628] 1))
    }
    {
      unknown tmp[569640] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672719] "expr temp" "maybe param" "maybe type" "temp"
      (672722 'move' call_tmp[672719](156203 call isClassType idxType[156138]))
      (569642 'move' tmp[569640](427614 call isTrue call_tmp[672719]))
      (569647 'move' tmp[569627](569644 '_paramFoldLogical' tmp[569628] tmp[569640]))
    }
    (427599 'move' tmp[427588] tmp[569627])
    unknown call_tmp[672724] "expr temp" "maybe param" "maybe type" "temp"
    (672727 'move' call_tmp[672724](427601 call _cond_invalid tmp[427588]))
    if call_tmp[672724]
    {
      (427604 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569654] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569655] "maybe param" "temp"
    unknown call_tmp[672729] "expr temp" "maybe param" "maybe type" "temp"
    (672732 'move' call_tmp[672729](427589 call isTrue tmp[427588]))
    (569660 'move' tmp[569655](569658 call _cond_test call_tmp[672729]))
    if tmp[569655]
    {
      (569665 'move' tmp[569654](569662 '_paramFoldLogical' tmp[569655] 1))
    }
    {
      unknown tmp[569667] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672734] "expr temp" "maybe param" "maybe type" "temp"
      (672737 'move' call_tmp[672734](156209 call isEnumType idxType[156138]))
      (569669 'move' tmp[569667](427593 call isTrue call_tmp[672734]))
      (569674 'move' tmp[569654](569671 '_paramFoldLogical' tmp[569655] tmp[569667]))
    }
    (427578 'move' tmp[427567] tmp[569654])
    unknown call_tmp[672739] "expr temp" "maybe param" "maybe type" "temp"
    (672742 'move' call_tmp[672739](427580 call _cond_invalid tmp[427567]))
    if call_tmp[672739]
    {
      (427583 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569681] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569682] "maybe param" "temp"
    unknown call_tmp[672744] "expr temp" "maybe param" "maybe type" "temp"
    (672747 'move' call_tmp[672744](427568 call isTrue tmp[427567]))
    (569687 'move' tmp[569682](569685 call _cond_test call_tmp[672744]))
    if tmp[569682]
    {
      (569692 'move' tmp[569681](569689 '_paramFoldLogical' tmp[569682] 1))
    }
    {
      unknown tmp[569694] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672749] "expr temp" "maybe param" "maybe type" "temp"
      (672752 'move' call_tmp[672749](156215 call isTupleType idxType[156138]))
      (569696 'move' tmp[569694](427572 call isTrue call_tmp[672749]))
      (569701 'move' tmp[569681](569698 '_paramFoldLogical' tmp[569682] tmp[569694]))
    }
    (427557 'move' tmp[427546] tmp[569681])
    unknown call_tmp[672754] "expr temp" "maybe param" "maybe type" "temp"
    (672757 'move' call_tmp[672754](427559 call _cond_invalid tmp[427546]))
    if call_tmp[672754]
    {
      (427562 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569708] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569709] "maybe param" "temp"
    unknown call_tmp[672759] "expr temp" "maybe param" "maybe type" "temp"
    (672762 'move' call_tmp[672759](427547 call isTrue tmp[427546]))
    (569714 'move' tmp[569709](569712 call _cond_test call_tmp[672759]))
    if tmp[569709]
    {
      (569719 'move' tmp[569708](569716 '_paramFoldLogical' tmp[569709] 1))
    }
    {
      unknown tmp[569721] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672764] "expr temp" "maybe param" "maybe type" "temp"
      (672767 'move' call_tmp[672764](156221 call isRecordType idxType[156138]))
      (569723 'move' tmp[569721](427551 call isTrue call_tmp[672764]))
      (569728 'move' tmp[569708](569725 '_paramFoldLogical' tmp[569709] tmp[569721]))
    }
    (748251 call chpl_statementLevelSymbol tmp[569708])
  }
  (355053 'used modules list'(155367 'use' ChapelBase[307]))
}