AST dump for Atomics after pass flattenClasses.
Module use list: ChapelBase MemConsistency 

{
  function chpl_atomic_thread_fence[43978](arg order[43975] :
  memory_order[186653]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
  }
  function atomic_fence[43990](arg order[43986] :
  memory_order[186653] =
  memory_order_seq_cst[186997]) : _unknown[51] "no doc" "no return value for void"
  {
    (43995 call chpl_atomic_thread_fence order[43986])
    if(44004 call _cond_test CHPL_CACHE_REMOTE[367])
    {
      (44002 call chpl_rmem_consist_fence order[43986])
    }
  }
  function atomicFence[44024](param arg order[44020] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "inline" "no return value for void"
  {
    (44032 call atomic_fence(44030 call c_memory_order order[44020]))
  }
  function isSupported[44041](arg T[44039]:_any[178](?)) param : _unknown[51] "private"
  {
    (44065 return(44063 call ||(44057 call ||(44051 call ||(44045 call == T[44039] bool[10])(44050 call isInt T[44039]))(44056 call isUint T[44039]))(44062 call isReal T[44039])))
  }
  function externT[44074](arg T[44072]:_any[178](?)) type : _unknown[51] "private"
  {
    type atomic_bool[44080]
    type atomic_int_least8_t[44087]
    type atomic_int_least16_t[44093]
    type atomic_int_least32_t[44099]
    type atomic_int_least64_t[44105]
    type atomic_uint_least8_t[44111]
    type atomic_uint_least16_t[44117]
    type atomic_uint_least32_t[44123]
    type atomic_uint_least64_t[44129]
    type atomic__real64[44135]
    type atomic__real32[44141]
    {
      unknown tmp[44264] "expr temp" "maybe param" "maybe type" "temp"
      (44266 'move' tmp[44264] T[44072])
      if(44271 call _cond_test(44268 call == tmp[44264] bool[10]))
      {
        (44148 return atomic_bool[44080])
      }
      {
        if(44277 call _cond_test(44274 call == tmp[44264](44156 call int(64)[13] 8)))
        {
          (44159 return atomic_int_least8_t[44087])
        }
        {
          if(44284 call _cond_test(44281 call == tmp[44264](44167 call int(64)[13] 16)))
          {
            (44170 return atomic_int_least16_t[44093])
          }
          {
            if(44291 call _cond_test(44288 call == tmp[44264](44178 call int(64)[13] 32)))
            {
              (44181 return atomic_int_least32_t[44099])
            }
            {
              if(44298 call _cond_test(44295 call == tmp[44264](44189 call int(64)[13] 64)))
              {
                (44192 return atomic_int_least64_t[44105])
              }
              {
                if(44305 call _cond_test(44302 call == tmp[44264](44200 call uint(64)[115] 8)))
                {
                  (44203 return atomic_uint_least8_t[44111])
                }
                {
                  if(44312 call _cond_test(44309 call == tmp[44264](44211 call uint(64)[115] 16)))
                  {
                    (44214 return atomic_uint_least16_t[44117])
                  }
                  {
                    if(44319 call _cond_test(44316 call == tmp[44264](44222 call uint(64)[115] 32)))
                    {
                      (44225 return atomic_uint_least32_t[44123])
                    }
                    {
                      if(44326 call _cond_test(44323 call == tmp[44264](44233 call uint(64)[115] 64)))
                      {
                        (44236 return atomic_uint_least64_t[44129])
                      }
                      {
                        if(44333 call _cond_test(44330 call == tmp[44264](44244 call real(64)[16] 32)))
                        {
                          (44247 return atomic__real32[44141])
                        }
                        {
                          if(44340 call _cond_test(44337 call == tmp[44264](44255 call real(64)[16] 64)))
                          {
                            (44258 return atomic__real64[44135])
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function externTString[44351](arg T[44349]:_any[178](?)) param : _unknown[51] "private"
  {
    if(44376 call _cond_test(44355 call == T[44349] bool[10]))
    {
      (44374 return "bool")
    }
    if(44433 call _cond_test(44385 call isInt T[44349]))
    {
      (44431 return(44429 call +(44410 call + "int_least"(44408 call _cast string[26](44406 call numBits T[44349]))) "_t"))
    }
    if(44473 call _cond_test(44441 call isUint T[44349]))
    {
      (44471 return(44469 call +(44466 call + "uint_least"(44464 call _cast string[26](44462 call numBits T[44349]))) "_t"))
    }
    if(44510 call _cond_test(44481 call isReal T[44349]))
    {
      (44508 return(44506 call + "_real"(44504 call _cast string[26](44502 call numBits T[44349]))))
    }
  }
  function externFunc[44523](param arg s[44520] :
  string[26], arg T[44525]:_any[178](?), param arg explicit[44528] =
  1) param : _unknown[51] "private"
  {
    if(44610 call _cond_test explicit[44528])
    {
      (44577 return(44575 call +(44569 call +(44550 call + "atomic_" s[44520]) "_explicit_")(44574 call externTString T[44525])))
    }
    {
      (44608 return(44606 call +(44600 call +(44581 call + "atomic_" s[44520]) "_")(44605 call externTString T[44525])))
    }
  }
  function chpl__processorAtomicType[44623](arg T[44621]:_any[178](?)) type : _unknown[51] "no doc"
  {
    if(44675 call _cond_test(44627 call == T[44621] bool[10]))
    {
      (44630 return AtomicBool[45877])
    }
    {
      if(44669 call _cond_test(44635 call isSupported T[44621]))
      {
        (44640 return(44639 call AtomicT[48080](?) T[44621]))
      }
      {
        (44667 call compilerError(44664 call + "Unsupported atomic type: "(44662 call _cast string[26] T[44621])))
      }
    }
  }
  function chpl__atomicType[44688](arg T[44686]:_any[178](?)) type : _unknown[51] "no doc"
  {
    if(44708 call _cond_test(44692 call == CHPL_NETWORK_ATOMICS[21520] "none"))
    {
      (44698 return(44697 call chpl__processorAtomicType T[44686]))
    }
    {
      (44705 return(44704 call chpl__networkAtomicType T[44686]))
    }
  }
  function AtomicBool[45877].init_helper[44730](arg _mt[45881]:_MT[238], arg this[45879]:AtomicBool[45877], arg value[44727] :
  bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44762](ref arg obj[44759] :
    (44758 call externT bool[10]), arg value[44765] :
    bool[10], arg _chpl_cname[44773] :
    string[26] =
    (44752 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    (44782 call atomic_init(370984 call . this[45879] c"_v") value[44727])
  }
  function AtomicBool[45877].init[44788](arg _mt[45885]:_MT[238], arg this[45883]:AtomicBool[45877]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (44795 call(44791 call . this[45883] c"complete"))
    const default[44799] "const" bool[10]
    (44802 'end of statement')
    (44806 call(370991 call . this[45883] c"init_helper") default[44799])
  }
  function AtomicBool[45877].init=[44816](arg _mt[45889]:_MT[238], arg this[45887]:AtomicBool[45877], arg other[44813] :
  AtomicBool[45877]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (44823 call(44819 call . this[45887] c"complete"))
    (44834 call(370997 call . this[45887] c"init_helper")(44832 call(44828 call . other[44813] c"read")))
  }
  function AtomicBool[45877].init=[44844](arg _mt[45893]:_MT[238], arg this[45891]:AtomicBool[45877], arg other[44841] :
  bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (44851 call(44847 call . this[45891] c"complete"))
    (44857 call(371001 call . this[45891] c"init_helper") other[44841])
  }
  function AtomicBool[45877].deinit[44863](arg _mt[45897]:_MT[238], arg this[45895]:AtomicBool[45877]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44897](ref arg obj[44894] :
    (44893 call externT bool[10]), arg _chpl_cname[44904] :
    string[26] =
    (44887 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    const tmp[44918] "const" "temp"
    (44920 'move' tmp[44918](44916 'deref'(44915 '_wide_get_locale' this[45895])))
    {
      (44913 call atomic_destroy(371008 call . this[45895] c"_v"))
      (44923 'on block' 0 tmp[44918])
    }
  }
  function AtomicBool[45877].read[44939](arg _mt[45901]:_MT[238], const arg this[45899]:AtomicBool[45877], param arg order[44935] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_load[44972](const  ref arg obj[44969] :
    (44968 call externT bool[10]), arg order[44975] :
    memory_order[186653], arg _chpl_cname[44983] :
    string[26] =
    (44962 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44989] bool[10]
    (44992 'end of statement')
    const tmp[45009] "const" "temp"
    (45011 'move' tmp[45009](45007 'deref'(45006 '_wide_get_locale' this[45899])))
    {
      (45003 call = ret[44989](45002 call atomic_load(371017 call . this[45899] c"_v")(45001 call c_memory_order order[44935])))
      (45014 'on block' 0 tmp[45009])
    }
    (45018 return ret[44989])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].write[45029](arg _mt[45905]:_MT[238], arg this[45903]:AtomicBool[45877], arg value[45026] :
  bool[10], param arg order[45036] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    function atomic_store[45071](ref arg obj[45068] :
    (45067 call externT bool[10]), arg value[45074] :
    bool[10], arg order[45078] :
    memory_order[186653], arg _chpl_cname[45086] :
    string[26] =
    (45061 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    const tmp[45105] "const" "temp"
    (45107 'move' tmp[45105](45103 'deref'(45102 '_wide_get_locale' this[45903])))
    {
      (45100 call atomic_store(371027 call . this[45903] c"_v") value[45026](45099 call c_memory_order order[45036]))
      (45110 'on block' 0 tmp[45105])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].exchange[45122](arg _mt[45909]:_MT[238], arg this[45907]:AtomicBool[45877], arg value[45119] :
  bool[10], param arg order[45129] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_exchange[45164](ref arg obj[45161] :
    (45160 call externT bool[10]), arg value[45167] :
    bool[10], arg order[45171] :
    memory_order[186653], arg _chpl_cname[45179] :
    string[26] =
    (45154 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45185] bool[10]
    (45188 'end of statement')
    const tmp[45206] "const" "temp"
    (45208 'move' tmp[45206](45204 'deref'(45203 '_wide_get_locale' this[45907])))
    {
      (45200 call = ret[45185](45199 call atomic_exchange(371038 call . this[45907] c"_v") value[45119](45198 call c_memory_order order[45129])))
      (45211 'on block' 0 tmp[45206])
    }
    (45215 return ret[45185])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45226](arg _mt[45913]:_MT[238], arg this[45911]:AtomicBool[45877], ref arg expected[45223] :
  bool[10], arg desired[45229] :
  bool[10], param arg order[45237] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    (45257 return(45256 call(45245 call . this[45911] c"compareExchange") expected[45223] desired[45229] order[45237](45255 call readableOrder order[45237])))
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchange[45269](arg _mt[45917]:_MT[238], arg this[45915]:AtomicBool[45877], ref arg expected[45266] :
  bool[10], arg desired[45272] :
  bool[10], param arg success[45276] :
  memoryOrder[187012], param arg failure[45280] :
  memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[45314](ref arg obj[45311] :
    (45310 call externT bool[10]), ref arg expected[45317] :
    bool[10], arg desired[45321] :
    bool[10], arg succ[45325] :
    memory_order[186653], arg fail[45329] :
    memory_order[186653], arg _chpl_cname[45337] :
    string[26] =
    (45304 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45343] bool[10]
    (45346 'end of statement')
    const tmp[45388] "const" "temp"
    (45390 'move' tmp[45388](45386 'deref'(45385 '_wide_get_locale' this[45915])))
    {
      {
        unknown localizedExpected[45349] expected[45266]
        (45352 'end of statement')
        (45369 call = ret[45343](45368 call atomic_compare_exchange_strong(371058 call . this[45915] c"_v") localizedExpected[45349] desired[45272](45363 call c_memory_order success[45276])(45367 call c_memory_order failure[45280])))
        if(45380 call _cond_test(45373 call ! ret[45343]))
        {
          (45377 call = expected[45266] localizedExpected[45349])
        }
      }
      (45393 'on block' 0 tmp[45388])
    }
    (45397 return ret[45343])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45408](arg _mt[45921]:_MT[238], arg this[45919]:AtomicBool[45877], ref arg expected[45405] :
  bool[10], arg desired[45411] :
  bool[10], param arg order[45419] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    (45439 return(45438 call(45427 call . this[45919] c"compareExchangeWeak") expected[45405] desired[45411] order[45419](45437 call readableOrder order[45419])))
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].compareExchangeWeak[45451](arg _mt[45925]:_MT[238], arg this[45923]:AtomicBool[45877], ref arg expected[45448] :
  bool[10], arg desired[45454] :
  bool[10], param arg success[45458] :
  memoryOrder[187012], param arg failure[45462] :
  memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_weak[45495](ref arg obj[45492] :
    (45491 call externT bool[10]), ref arg expected[45498] :
    bool[10], arg desired[45502] :
    bool[10], arg succ[45506] :
    memory_order[186653], arg fail[45510] :
    memory_order[186653], arg _chpl_cname[45518] :
    string[26] =
    (45485 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45524] bool[10]
    (45527 'end of statement')
    const tmp[45569] "const" "temp"
    (45571 'move' tmp[45569](45567 'deref'(45566 '_wide_get_locale' this[45923])))
    {
      {
        unknown localizedExpected[45530] expected[45448]
        (45533 'end of statement')
        (45550 call = ret[45524](45549 call atomic_compare_exchange_weak(371083 call . this[45923] c"_v") localizedExpected[45530] desired[45454](45544 call c_memory_order success[45458])(45548 call c_memory_order failure[45462])))
        if(45561 call _cond_test(45554 call ! ret[45524]))
        {
          (45558 call = expected[45448] localizedExpected[45530])
        }
      }
      (45574 'on block' 0 tmp[45569])
    }
    (45578 return ret[45524])
  }
  function AtomicBool[45877].compareAndSwap[45588](arg _mt[45929]:_MT[238], arg this[45927]:AtomicBool[45877], arg expected[45585] :
  bool[10], arg desired[45591] :
  bool[10], param arg order[45599] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[45618](ref arg obj[45615] :
    (45614 call externT bool[10]), ref arg expected[45621] :
    bool[10], arg desired[45625] :
    bool[10], arg succ[45629] :
    memory_order[186653], arg fail[45633] :
    memory_order[186653], arg _chpl_cname[45641] :
    string[26] =
    (45608 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45647] bool[10]
    (45650 'end of statement')
    const tmp[45682] "const" "temp"
    (45684 'move' tmp[45682](45680 'deref'(45679 '_wide_get_locale' this[45927])))
    {
      {
        unknown mutableExpected[45653] expected[45585]
        (45656 'end of statement')
        (45676 call = ret[45647](45675 call atomic_compare_exchange_strong(371102 call . this[45927] c"_v") mutableExpected[45653] desired[45591](45667 call c_memory_order order[45599])(45674 call c_memory_order(45672 call readableOrder order[45599]))))
      }
      (45687 'on block' 0 tmp[45682])
    }
    (45691 return ret[45647])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].testAndSet[45707](arg _mt[45933]:_MT[238], arg this[45931]:AtomicBool[45877], param arg order[45703] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    (45718 return(45717 call(45711 call . this[45931] c"exchange") 1 order[45703]))
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45877].clear[45735](arg _mt[45937]:_MT[238], arg this[45935]:AtomicBool[45877], param arg order[45731] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    (45745 call(45739 call . this[45935] c"write") 0 order[45731])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].waitFor[45757](arg _mt[45941]:_MT[238], const arg this[45939]:AtomicBool[45877], arg value[45754] :
  bool[10], param arg order[45764] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    const tmp[45848] "const" "temp"
    (45850 'move' tmp[45848](45846 'deref'(45845 '_wide_get_locale' this[45939])))
    {
      {
        {
          unknown tmp[45791] "temp"
          (45833 'move' tmp[45791](45819 call _cond_test(45821 call !=(45826 call(45823 call . this[45939] c"read")(order = relaxed[187010])) value[45754])))
          WhileDo[45796]
          {
            {
              (45788 call chpl_task_yield)
            }
            label _continueLabel[45794]
            (45814 'move' tmp[45791](45800 call _cond_test(45802 call !=(45807 call(45804 call . this[45939] c"read")(order = relaxed[187010])) value[45754])))
            tmp[45791]
          }
          label _breakLabel[45795]
        }
        (45843 call chpl_atomic_thread_fence(45841 call c_memory_order order[45764]))
      }
      (45853 'on block' 0 tmp[45848])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45877].writeThis[45864](arg _mt[45945]:_MT[238], const arg this[45943]:AtomicBool[45877], arg x[45862]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (45870 call <~> x[45862](45869 call(371121 call . this[45943] c"read")))
  }
  type AtomicBool[45877] unknown _v[44720] "no doc"(44719 call externT bool[10])
  function AtomicT[48080](?).init_helper[45966](arg _mt[48084]:_MT[238], arg this[48082]:AtomicT[48080](?), arg value[45963] :
  (371127 call . this[48082] c"T")) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45984](ref arg obj[45981] :
    (45980 call externT(371137 call . this[48082] c"T")), arg value[45987] :
    (371142 call . this[48082] c"T"), arg _chpl_cname[45995] :
    string[26] =
    (45974 call externFunc "init"(371132 call . this[48082] c"T")(explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    (46004 call atomic_init(371147 call . this[48082] c"_v") value[45963])
  }
  function AtomicT[48080](?).init[46012](arg _mt[48088]:_MT[238], arg this[48086]:AtomicT[48080](?), arg T[46010]:_any[178](?)) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (46021 call =(46017 call . this[48086] c"T") T[46010])
    (46030 call(46026 call . this[48086] c"complete"))
    const default[46033] "const" T[46010]
    (46036 'end of statement')
    (46040 call(371154 call . this[48086] c"init_helper") default[46033])
  }
  function AtomicT[48080](?).init=[46051](arg _mt[48092]:_MT[238], arg this[48090]:AtomicT[48080](?), const  ref arg other[46048] :
  (46047 'typeof' this[48090])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (46061 call =(46054 call . this[48090] c"T")(46058 call . other[46048] c"T"))
    (46070 call(46066 call . this[48090] c"complete"))
    (46080 call(371160 call . this[48090] c"init_helper")(46078 call(46074 call . other[46048] c"read")))
  }
  function AtomicT[48080](?).init=[46094](arg _mt[48096]:_MT[238], arg this[48094]:AtomicT[48080](?), arg other[46091] :
  (46088 call .(46087 'typeof' this[48094]) c"T")) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (46102 call =(46097 call . this[48094] c"T")(46101 'typeof' other[46091]))
    (46111 call(46107 call . this[48094] c"complete"))
    (46116 call(371166 call . this[48094] c"init_helper") other[46091])
  }
  function AtomicT[48080](?).deinit[46122](arg _mt[48100]:_MT[238], arg this[48098]:AtomicT[48080](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46140](ref arg obj[46137] :
    (46136 call externT(371177 call . this[48098] c"T")), arg _chpl_cname[46147] :
    string[26] =
    (46130 call externFunc "destroy"(371172 call . this[48098] c"T")(explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    const tmp[46161] "const" "temp"
    (46163 'move' tmp[46161](46159 'deref'(46158 '_wide_get_locale' this[48098])))
    {
      (46156 call atomic_destroy(371183 call . this[48098] c"_v"))
      (46166 'on block' 0 tmp[46161])
    }
  }
  function AtomicT[48080](?).read[46182](arg _mt[48104]:_MT[238], const arg this[48102]:AtomicT[48080](?), param arg order[46178] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_load[46199](const  ref arg obj[46196] :
    (46195 call externT(371199 call . this[48102] c"T")), arg order[46202] :
    memory_order[186653], arg _chpl_cname[46210] :
    string[26] =
    (46189 call externFunc "load"(371194 call . this[48102] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371205 call . this[48102] c"T")
    }
    unknown ret[46216](371210 call . this[48102] c"T")
    (46219 'end of statement')
    const tmp[46236] "const" "temp"
    (46238 'move' tmp[46236](46234 'deref'(46233 '_wide_get_locale' this[48102])))
    {
      (46230 call = ret[46216](46229 call atomic_load(371217 call . this[48102] c"_v")(46228 call c_memory_order order[46178])))
      (46241 'on block' 0 tmp[46236])
    }
    (46245 return ret[46216])
  }
  { scopeless type
    (371189 call . this[48102] c"T")
  }
  function AtomicT[48080](?).write[46256](arg _mt[48108]:_MT[238], arg this[48106]:AtomicT[48080](?), arg value[46253] :
  (371224 call . this[48106] c"T"), param arg order[46263] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    function atomic_store[46282](ref arg obj[46279] :
    (46278 call externT(371235 call . this[48106] c"T")), arg value[46285] :
    (371240 call . this[48106] c"T"), arg order[46289] :
    memory_order[186653], arg _chpl_cname[46297] :
    string[26] =
    (46272 call externFunc "store"(371230 call . this[48106] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      void[4]
    }
    const tmp[46316] "const" "temp"
    (46318 'move' tmp[46316](46314 'deref'(46313 '_wide_get_locale' this[48106])))
    {
      (46311 call atomic_store(371247 call . this[48106] c"_v") value[46253](46310 call c_memory_order order[46263]))
      (46321 'on block' 0 tmp[46316])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).exchange[46333](arg _mt[48112]:_MT[238], arg this[48110]:AtomicT[48080](?), arg value[46330] :
  (371254 call . this[48110] c"T"), param arg order[46340] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_exchange[46359](ref arg obj[46356] :
    (46355 call externT(371270 call . this[48110] c"T")), arg value[46362] :
    (371275 call . this[48110] c"T"), arg order[46366] :
    memory_order[186653], arg _chpl_cname[46374] :
    string[26] =
    (46349 call externFunc "exchange"(371265 call . this[48110] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371281 call . this[48110] c"T")
    }
    unknown ret[46380](371286 call . this[48110] c"T")
    (46383 'end of statement')
    const tmp[46401] "const" "temp"
    (46403 'move' tmp[46401](46399 'deref'(46398 '_wide_get_locale' this[48110])))
    {
      (46395 call = ret[46380](46394 call atomic_exchange(371293 call . this[48110] c"_v") value[46330](46393 call c_memory_order order[46340])))
      (46406 'on block' 0 tmp[46401])
    }
    (46410 return ret[46380])
  }
  { scopeless type
    (371260 call . this[48110] c"T")
  }
  function AtomicT[48080](?).compareExchange[46421](arg _mt[48116]:_MT[238], arg this[48114]:AtomicT[48080](?), ref arg expected[46418] :
  (371301 call . this[48114] c"T"), arg desired[46424] :
  (371306 call . this[48114] c"T"), param arg order[46432] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    (46450 return(46449 call(46438 call . this[48114] c"compareExchange") expected[46418] desired[46424] order[46432](46448 call readableOrder order[46432])))
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchange[46462](arg _mt[48120]:_MT[238], arg this[48118]:AtomicT[48080](?), ref arg expected[46459] :
  (371316 call . this[48118] c"T"), arg desired[46465] :
  (371321 call . this[48118] c"T"), param arg success[46469] :
  memoryOrder[187012], param arg failure[46473] :
  memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[46491](ref arg obj[46488] :
    (46487 call externT(371333 call . this[48118] c"T")), ref arg expected[46494] :
    (371338 call . this[48118] c"T"), arg desired[46498] :
    (371343 call . this[48118] c"T"), arg succ[46502] :
    memory_order[186653], arg fail[46506] :
    memory_order[186653], arg _chpl_cname[46514] :
    string[26] =
    (46481 call externFunc "compare_exchange_strong"(371328 call . this[48118] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46520] bool[10]
    (46523 'end of statement')
    const tmp[46565] "const" "temp"
    (46567 'move' tmp[46565](46563 'deref'(46562 '_wide_get_locale' this[48118])))
    {
      {
        unknown localizedExpected[46526] expected[46459]
        (46529 'end of statement')
        (46546 call = ret[46520](46545 call atomic_compare_exchange_strong(371353 call . this[48118] c"_v") localizedExpected[46526] desired[46465](46540 call c_memory_order success[46469])(46544 call c_memory_order failure[46473])))
        if(46557 call _cond_test(46550 call ! ret[46520]))
        {
          (46554 call = expected[46459] localizedExpected[46526])
        }
      }
      (46570 'on block' 0 tmp[46565])
    }
    (46574 return ret[46520])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46585](arg _mt[48124]:_MT[238], arg this[48122]:AtomicT[48080](?), ref arg expected[46582] :
  (371366 call . this[48122] c"T"), arg desired[46588] :
  (371371 call . this[48122] c"T"), param arg order[46596] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    (46614 return(46613 call(46602 call . this[48122] c"compareExchangeWeak") expected[46582] desired[46588] order[46596](46612 call readableOrder order[46596])))
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareExchangeWeak[46626](arg _mt[48128]:_MT[238], arg this[48126]:AtomicT[48080](?), ref arg expected[46623] :
  (371381 call . this[48126] c"T"), arg desired[46629] :
  (371386 call . this[48126] c"T"), param arg success[46633] :
  memoryOrder[187012], param arg failure[46637] :
  memoryOrder[187012]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_weak[46655](ref arg obj[46652] :
    (46651 call externT(371398 call . this[48126] c"T")), ref arg expected[46658] :
    (371403 call . this[48126] c"T"), arg desired[46662] :
    (371408 call . this[48126] c"T"), arg succ[46666] :
    memory_order[186653], arg fail[46670] :
    memory_order[186653], arg _chpl_cname[46678] :
    string[26] =
    (46645 call externFunc "compare_exchange_weak"(371393 call . this[48126] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46684] bool[10]
    (46687 'end of statement')
    const tmp[46729] "const" "temp"
    (46731 'move' tmp[46729](46727 'deref'(46726 '_wide_get_locale' this[48126])))
    {
      {
        unknown localizedExpected[46690] expected[46623]
        (46693 'end of statement')
        (46710 call = ret[46684](46709 call atomic_compare_exchange_weak(371418 call . this[48126] c"_v") localizedExpected[46690] desired[46629](46704 call c_memory_order success[46633])(46708 call c_memory_order failure[46637])))
        if(46721 call _cond_test(46714 call ! ret[46684]))
        {
          (46718 call = expected[46623] localizedExpected[46690])
        }
      }
      (46734 'on block' 0 tmp[46729])
    }
    (46738 return ret[46684])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).compareAndSwap[46749](arg _mt[48132]:_MT[238], arg this[48130]:AtomicT[48080](?), arg expected[46746] :
  (371431 call . this[48130] c"T"), arg desired[46752] :
  (371436 call . this[48130] c"T"), param arg order[46760] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_compare_exchange_strong[46779](ref arg obj[46776] :
    (46775 call externT(371447 call . this[48130] c"T")), ref arg expected[46782] :
    (371452 call . this[48130] c"T"), arg desired[46786] :
    (371457 call . this[48130] c"T"), arg succ[46790] :
    memory_order[186653], arg fail[46794] :
    memory_order[186653], arg _chpl_cname[46802] :
    string[26] =
    (46769 call externFunc "compare_exchange_strong"(371442 call . this[48130] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46808] bool[10]
    (46811 'end of statement')
    const tmp[46843] "const" "temp"
    (46845 'move' tmp[46843](46841 'deref'(46840 '_wide_get_locale' this[48130])))
    {
      {
        unknown mutableExpected[46814] expected[46746]
        (46817 'end of statement')
        (46837 call = ret[46808](46836 call atomic_compare_exchange_strong(371467 call . this[48130] c"_v") mutableExpected[46814] desired[46752](46828 call c_memory_order order[46760])(46835 call c_memory_order(46833 call readableOrder order[46760]))))
      }
      (46848 'on block' 0 tmp[46843])
    }
    (46852 return ret[46808])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48080](?).fetchAdd[46863](arg _mt[48136]:_MT[238], arg this[48134]:AtomicT[48080](?), arg value[46860] :
  (371477 call . this[48134] c"T"), param arg order[46870] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_fetch_add[46905](ref arg obj[46902] :
    (46901 call externT(371493 call . this[48134] c"T")), arg operand[46908] :
    (371498 call . this[48134] c"T"), arg order[46912] :
    memory_order[186653], arg _chpl_cname[46920] :
    string[26] =
    (46895 call externFunc "fetch_add"(371488 call . this[48134] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371504 call . this[48134] c"T")
    }
    unknown ret[46926](371509 call . this[48134] c"T")
    (46929 'end of statement')
    const tmp[46947] "const" "temp"
    (46949 'move' tmp[46947](46945 'deref'(46944 '_wide_get_locale' this[48134])))
    {
      (46941 call = ret[46926](46940 call atomic_fetch_add(371516 call . this[48134] c"_v") value[46860](46939 call c_memory_order order[46870])))
      (46952 'on block' 0 tmp[46947])
    }
    (46956 return ret[46926])
  }
  { scopeless type
    (371483 call . this[48134] c"T")
  }
  function AtomicT[48080](?).add[46967](arg _mt[48140]:_MT[238], arg this[48138]:AtomicT[48080](?), arg value[46964] :
  (371524 call . this[48138] c"T"), param arg order[46974] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    function atomic_fetch_add[46993](ref arg obj[46990] :
    (46989 call externT(371535 call . this[48138] c"T")), arg operand[46996] :
    (371540 call . this[48138] c"T"), arg order[47000] :
    memory_order[186653], arg _chpl_cname[47008] :
    string[26] =
    (46983 call externFunc "fetch_add"(371530 call . this[48138] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371546 call . this[48138] c"T")
    }
    const tmp[47027] "const" "temp"
    (47029 'move' tmp[47027](47025 'deref'(47024 '_wide_get_locale' this[48138])))
    {
      (47022 call atomic_fetch_add(371552 call . this[48138] c"_v") value[46964](47021 call c_memory_order order[46974]))
      (47032 'on block' 0 tmp[47027])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchSub[47044](arg _mt[48144]:_MT[238], arg this[48142]:AtomicT[48080](?), arg value[47041] :
  (371559 call . this[48142] c"T"), param arg order[47051] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    function atomic_fetch_sub[47086](ref arg obj[47083] :
    (47082 call externT(371575 call . this[48142] c"T")), arg operand[47089] :
    (371580 call . this[48142] c"T"), arg order[47093] :
    memory_order[186653], arg _chpl_cname[47101] :
    string[26] =
    (47076 call externFunc "fetch_sub"(371570 call . this[48142] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371586 call . this[48142] c"T")
    }
    unknown ret[47107](371591 call . this[48142] c"T")
    (47110 'end of statement')
    const tmp[47128] "const" "temp"
    (47130 'move' tmp[47128](47126 'deref'(47125 '_wide_get_locale' this[48142])))
    {
      (47122 call = ret[47107](47121 call atomic_fetch_sub(371598 call . this[48142] c"_v") value[47041](47120 call c_memory_order order[47051])))
      (47133 'on block' 0 tmp[47128])
    }
    (47137 return ret[47107])
  }
  { scopeless type
    (371565 call . this[48142] c"T")
  }
  function AtomicT[48080](?).sub[47148](arg _mt[48148]:_MT[238], arg this[48146]:AtomicT[48080](?), arg value[47145] :
  (371606 call . this[48146] c"T"), param arg order[47155] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    function atomic_fetch_sub[47174](ref arg obj[47171] :
    (47170 call externT(371617 call . this[48146] c"T")), arg operand[47177] :
    (371622 call . this[48146] c"T"), arg order[47181] :
    memory_order[186653], arg _chpl_cname[47189] :
    string[26] =
    (47164 call externFunc "fetch_sub"(371612 call . this[48146] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371628 call . this[48146] c"T")
    }
    const tmp[47208] "const" "temp"
    (47210 'move' tmp[47208](47206 'deref'(47205 '_wide_get_locale' this[48146])))
    {
      (47203 call atomic_fetch_sub(371634 call . this[48146] c"_v") value[47145](47202 call c_memory_order order[47155]))
      (47213 'on block' 0 tmp[47208])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchOr[47225](arg _mt[48152]:_MT[238], arg this[48150]:AtomicT[48080](?), arg value[47222] :
  (371641 call . this[48150] c"T"), param arg order[47232] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    if(47264 call _cond_test(47241 call !(47240 call isIntegral(371652 call . this[48150] c"T"))))
    {
      (47262 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47300](ref arg obj[47297] :
    (47296 call externT(371662 call . this[48150] c"T")), arg operand[47303] :
    (371667 call . this[48150] c"T"), arg order[47307] :
    memory_order[186653], arg _chpl_cname[47315] :
    string[26] =
    (47290 call externFunc "fetch_or"(371657 call . this[48150] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371673 call . this[48150] c"T")
    }
    unknown ret[47320](371678 call . this[48150] c"T")
    (47323 'end of statement')
    const tmp[47341] "const" "temp"
    (47343 'move' tmp[47341](47339 'deref'(47338 '_wide_get_locale' this[48150])))
    {
      (47335 call = ret[47320](47334 call atomic_fetch_or(371685 call . this[48150] c"_v") value[47222](47333 call c_memory_order order[47232])))
      (47346 'on block' 0 tmp[47341])
    }
    (47350 return ret[47320])
  }
  { scopeless type
    (371647 call . this[48150] c"T")
  }
  function AtomicT[48080](?).or[47361](arg _mt[48156]:_MT[238], arg this[48154]:AtomicT[48080](?), arg value[47358] :
  (371693 call . this[48154] c"T"), param arg order[47368] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    if(47402 call _cond_test(47377 call !(47376 call isIntegral(371699 call . this[48154] c"T"))))
    {
      (47400 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47422](ref arg obj[47419] :
    (47418 call externT(371709 call . this[48154] c"T")), arg operand[47425] :
    (371714 call . this[48154] c"T"), arg order[47429] :
    memory_order[186653], arg _chpl_cname[47437] :
    string[26] =
    (47412 call externFunc "fetch_or"(371704 call . this[48154] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371720 call . this[48154] c"T")
    }
    const tmp[47455] "const" "temp"
    (47457 'move' tmp[47455](47453 'deref'(47452 '_wide_get_locale' this[48154])))
    {
      (47450 call atomic_fetch_or(371726 call . this[48154] c"_v") value[47358](47449 call c_memory_order order[47368]))
      (47460 'on block' 0 tmp[47455])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchAnd[47472](arg _mt[48160]:_MT[238], arg this[48158]:AtomicT[48080](?), arg value[47469] :
  (371733 call . this[48158] c"T"), param arg order[47479] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    if(47511 call _cond_test(47488 call !(47487 call isIntegral(371744 call . this[48158] c"T"))))
    {
      (47509 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47547](ref arg obj[47544] :
    (47543 call externT(371754 call . this[48158] c"T")), arg operand[47550] :
    (371759 call . this[48158] c"T"), arg order[47554] :
    memory_order[186653], arg _chpl_cname[47562] :
    string[26] =
    (47537 call externFunc "fetch_and"(371749 call . this[48158] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371765 call . this[48158] c"T")
    }
    unknown ret[47567](371770 call . this[48158] c"T")
    (47570 'end of statement')
    const tmp[47588] "const" "temp"
    (47590 'move' tmp[47588](47586 'deref'(47585 '_wide_get_locale' this[48158])))
    {
      (47582 call = ret[47567](47581 call atomic_fetch_and(371777 call . this[48158] c"_v") value[47469](47580 call c_memory_order order[47479])))
      (47593 'on block' 0 tmp[47588])
    }
    (47597 return ret[47567])
  }
  { scopeless type
    (371739 call . this[48158] c"T")
  }
  function AtomicT[48080](?).and[47608](arg _mt[48164]:_MT[238], arg this[48162]:AtomicT[48080](?), arg value[47605] :
  (371785 call . this[48162] c"T"), param arg order[47615] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    if(47647 call _cond_test(47624 call !(47623 call isIntegral(371791 call . this[48162] c"T"))))
    {
      (47645 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47667](ref arg obj[47664] :
    (47663 call externT(371801 call . this[48162] c"T")), arg operand[47670] :
    (371806 call . this[48162] c"T"), arg order[47674] :
    memory_order[186653], arg _chpl_cname[47682] :
    string[26] =
    (47657 call externFunc "fetch_and"(371796 call . this[48162] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371812 call . this[48162] c"T")
    }
    const tmp[47700] "const" "temp"
    (47702 'move' tmp[47700](47698 'deref'(47697 '_wide_get_locale' this[48162])))
    {
      (47695 call atomic_fetch_and(371818 call . this[48162] c"_v") value[47605](47694 call c_memory_order order[47615]))
      (47705 'on block' 0 tmp[47700])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).fetchXor[47717](arg _mt[48168]:_MT[238], arg this[48166]:AtomicT[48080](?), arg value[47714] :
  (371825 call . this[48166] c"T"), param arg order[47724] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    if(47756 call _cond_test(47733 call !(47732 call isIntegral(371836 call . this[48166] c"T"))))
    {
      (47754 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47792](ref arg obj[47789] :
    (47788 call externT(371846 call . this[48166] c"T")), arg operand[47795] :
    (371851 call . this[48166] c"T"), arg order[47799] :
    memory_order[186653], arg _chpl_cname[47807] :
    string[26] =
    (47782 call externFunc "fetch_xor"(371841 call . this[48166] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371857 call . this[48166] c"T")
    }
    unknown ret[47812](371862 call . this[48166] c"T")
    (47815 'end of statement')
    const tmp[47833] "const" "temp"
    (47835 'move' tmp[47833](47831 'deref'(47830 '_wide_get_locale' this[48166])))
    {
      (47827 call = ret[47812](47826 call atomic_fetch_xor(371869 call . this[48166] c"_v") value[47714](47825 call c_memory_order order[47724])))
      (47838 'on block' 0 tmp[47833])
    }
    (47842 return ret[47812])
  }
  { scopeless type
    (371831 call . this[48166] c"T")
  }
  function AtomicT[48080](?).xor[47853](arg _mt[48172]:_MT[238], arg this[48170]:AtomicT[48080](?), arg value[47850] :
  (371877 call . this[48170] c"T"), param arg order[47860] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    if(47892 call _cond_test(47869 call !(47868 call isIntegral(371883 call . this[48170] c"T"))))
    {
      (47890 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47912](ref arg obj[47909] :
    (47908 call externT(371893 call . this[48170] c"T")), arg operand[47915] :
    (371898 call . this[48170] c"T"), arg order[47919] :
    memory_order[186653], arg _chpl_cname[47927] :
    string[26] =
    (47902 call externFunc "fetch_xor"(371888 call . this[48170] c"T"))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (371904 call . this[48170] c"T")
    }
    const tmp[47945] "const" "temp"
    (47947 'move' tmp[47945](47943 'deref'(47942 '_wide_get_locale' this[48170])))
    {
      (47940 call atomic_fetch_xor(371910 call . this[48170] c"_v") value[47850](47939 call c_memory_order order[47860]))
      (47950 'on block' 0 tmp[47945])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).waitFor[47962](arg _mt[48176]:_MT[238], const arg this[48174]:AtomicT[48080](?), arg value[47959] :
  (371917 call . this[48174] c"T"), param arg order[47969] :
  memoryOrder[187012] =
  seqCst[187002]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    const tmp[48051] "const" "temp"
    (48053 'move' tmp[48051](48049 'deref'(48048 '_wide_get_locale' this[48174])))
    {
      {
        {
          unknown tmp[47994] "temp"
          (48036 'move' tmp[47994](48022 call _cond_test(48024 call !=(48029 call(48026 call . this[48174] c"read")(order = relaxed[187010])) value[47959])))
          WhileDo[47999]
          {
            {
              (47991 call chpl_task_yield)
            }
            label _continueLabel[47997]
            (48017 'move' tmp[47994](48003 call _cond_test(48005 call !=(48010 call(48007 call . this[48174] c"read")(order = relaxed[187010])) value[47959])))
            tmp[47994]
          }
          label _breakLabel[47998]
        }
        (48046 call chpl_atomic_thread_fence(48044 call c_memory_order order[47969]))
      }
      (48056 'on block' 0 tmp[48051])
    }
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48080](?).writeThis[48067](arg _mt[48180]:_MT[238], const arg this[48178]:AtomicT[48080](?), arg x[48065]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    (48073 call <~> x[48065](48072 call(371927 call . this[48178] c"read")))
  }
  type AtomicT[48080](?) unknown T[45949] "no doc" "type variable" unknown _v[45956] "no doc"(45955 call externT T[45949])
  function =[48189](ref arg a[48186] :
  AtomicBool[45877], const  ref arg b[48192] :
  AtomicBool[45877]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48206 call(48196 call . a[48186] c"write")(48204 call(48200 call . b[48192] c"read")))
  }
  function =[48217](ref arg a[48214] :
  AtomicBool[45877], arg b[48219]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48242 call compilerError "Cannot directly assign atomic variables")
  }
  function =[48253](ref arg a[48250] :
  AtomicT[48080](?), const  ref arg b[48256] :
  AtomicT[48080](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48270 call(48260 call . a[48250] c"write")(48268 call(48264 call . b[48256] c"read")))
  }
  function =[48281](ref arg a[48278] :
  AtomicT[48080](?), arg b[48283]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48288 call compilerError "Cannot directly assign atomic variables")
  }
  function +[48299](arg a[48296] :
  AtomicT[48080](?), arg b[48301]:_any[178](?)) : _unknown[51] "inline"
  {
    (48322 call compilerError "Cannot directly add atomic variables")
    (48326 return a[48296])
  }
  function -[48336](arg a[48333] :
  AtomicT[48080](?), arg b[48338]:_any[178](?)) : _unknown[51] "inline"
  {
    (48359 call compilerError "Cannot directly subtract atomic variables")
    (48363 return a[48333])
  }
  function *[48373](arg a[48370] :
  AtomicT[48080](?), arg b[48375]:_any[178](?)) : _unknown[51] "inline"
  {
    (48396 call compilerError "Cannot directly multiply atomic variables")
    (48400 return a[48370])
  }
  function /[48410](arg a[48407] :
  AtomicT[48080](?), arg b[48412]:_any[178](?)) : _unknown[51] "inline"
  {
    (48433 call compilerError "Cannot directly divide atomic variables")
    (48437 return a[48407])
  }
  function %[48447](arg a[48444] :
  AtomicT[48080](?), arg b[48449]:_any[178](?)) : _unknown[51] "inline"
  {
    (48454 call compilerError "Cannot directly divide atomic variables")
    (48458 return a[48444])
  }
  (355146 'used modules list'(43966 'use' ChapelBase[307])(43970 'use' MemConsistency[186648]))
}