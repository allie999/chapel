AST dump for ChapelLocale after pass scopeResolve.
Module use list: LocaleModel HaltWrappers SysCTypes 

{
  unknown chpl_nodeID_t[89859] "no doc" "type variable"(89858 call int(64)[13] 32)
  unknown chpl_sublocID_t[89866] "no doc" "type variable"(89865 call int(64)[13] 32)
  const c_sublocid_none[89870] "const" "extern" "no doc" chpl_sublocID_t[89866]
  (89873 'end of statement')
  const c_sublocid_any[89875] "const" "extern" "no doc" chpl_sublocID_t[89866]
  (89878 'end of statement')
  const c_sublocid_all[89880] "const" "extern" "no doc" chpl_sublocID_t[89866]
  (89883 'end of statement')
  function chpl_isActualSublocID[89890](arg subloc[89887] :
  chpl_sublocID_t[89866]) : _unknown[51] "inline" "no doc"
  {
    (89908 return(89906 call &&(89900 call &&(89894 call != subloc[89887] c_sublocid_none[89870])(89898 call != subloc[89887] c_sublocid_any[89875]))(89904 call != subloc[89887] c_sublocid_all[89880])))
  }
  type localeKind[89924] def regular[89914]:localeKind[89924] def any[89916]:localeKind[89924] def nilLocale[89918]:localeKind[89924] def dummy[89920]:localeKind[89924] def default[89922]:localeKind[89924]
  {
  }
  const nilLocale[89939] "const" "locale private" "no doc"(89929 'new'(89938 call locale[28] nilLocale[89918]))
  (89942 'end of statement')
  unknown defaultLocale[89953] "locale private" "no doc"(89943 'new'(89952 call locale[28] default[89922]))
  (89956 'end of statement')
  unknown dummyLocale[89967] "no doc"(89957 'new'(89966 call locale[28] dummy[89920]))
  (89970 'end of statement')
  function locale[28]._value[89981](arg _mt[90370]:_MT[238], arg this[90368]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (89986 return(89984 call postfix!(377704 call . this[90368] c"_instance")))
  }
  function locale[28].chpl_forwarding_expr3__value[89992](arg _mt[90374]:_MT[238], arg this[90372]:locale[28]) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (89994 return(377708 call . this[90372] c"_value"))
  }
  function locale[28].init[90000](arg _mt[90378]:_MT[238], arg this[90376]:locale[28]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(90024 call _cond_test rootLocaleInitialized[310])
    {
      (90011 call =(90004 call . this[90376] c"_instance")(90008 call . defaultLocale[89953] c"_instance"))
    }
    {
      (90020 call =(90016 call . this[90376] c"_instance") nil[44])
    }
  }
  function locale[28].init[90037](arg _mt[90382]:_MT[238], arg this[90380]:locale[28], arg _instance[90034] :
  BaseLocale[377699](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (90047 call =(90040 call . this[90380] c"_instance")(90046 call _to_unmanaged _instance[90034]))
  }
  function locale[28].init[90057](arg _mt[90386]:_MT[238], arg this[90384]:locale[28], param arg kind[90055]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(90152 call _cond_test(90066 call == kind[90055] regular[89914]))
    {
      (90104 call compilerError "locale.init(kind) can not be used to create " "a regular locale instance")
    }
    {
      if(90146 call _cond_test(90111 call == kind[90055] dummy[89920]))
      {
        (90123 call =(90114 call . this[90384] c"_instance")(90119 'new'(_chpl_manager = unmanaged[220](?))(90122 call DummyLocale[377717](?))))
      }
      {
        if(90141 call _cond_test(90131 call == kind[90055] default[89922]))
        {
          (90138 call =(90134 call . this[90384] c"_instance") nil[44])
        }
      }
    }
  }
  function locale[28].init=[90167](arg _mt[90390]:_MT[238], arg this[90388]:locale[28], arg other[90164] :
  locale[28]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (90177 call =(90170 call . this[90388] c"_instance")(90174 call . other[90164] c"_instance"))
  }
  function locale[28].deinit[90185](arg _mt[90394]:_MT[238], arg this[90392]:locale[28]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
  }
  function locale[28].localeid[90192](arg _mt[90398]:_MT[238], arg this[90396]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (90203 return(90200 call .(90195 call . this[90396] c"_value") c"localeid"))
  }
  function locale[28].chpl_id[90210](arg _mt[90402]:_MT[238], arg this[90400]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90223 return(90222 call(90218 call .(90213 call . this[90400] c"_value") c"chpl_id")))
  }
  function locale[28].chpl_localeid[90230](arg _mt[90406]:_MT[238], arg this[90404]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90243 return(90242 call(90238 call .(90233 call . this[90404] c"_value") c"chpl_localeid")))
  }
  function locale[28].chpl_name[90250](arg _mt[90410]:_MT[238], arg this[90408]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90263 return(90262 call(90258 call .(90253 call . this[90408] c"_value") c"chpl_name")))
  }
  function locale[28].defaultMemory[90270](arg _mt[90414]:_MT[238], arg this[90412]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90283 return(90282 call(90278 call .(90273 call . this[90412] c"_value") c"defaultMemory")))
  }
  function locale[28].largeMemory[90290](arg _mt[90418]:_MT[238], arg this[90416]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90303 return(90302 call(90298 call .(90293 call . this[90416] c"_value") c"largeMemory")))
  }
  function locale[28].lowLatencyMemory[90310](arg _mt[90422]:_MT[238], arg this[90420]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90323 return(90322 call(90318 call .(90313 call . this[90420] c"_value") c"lowLatencyMemory")))
  }
  function locale[28].highBandwidthMemory[90330](arg _mt[90426]:_MT[238], arg this[90424]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90343 return(90342 call(90338 call .(90333 call . this[90424] c"_value") c"highBandwidthMemory")))
  }
  function locale[28].getChildCount[90350](arg _mt[90430]:_MT[238], arg this[90428]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    (90361 return(90360 call(90356 call .(90353 call . this[90428] c"_value") c"getChildCount")))
  }
  type locale[28] unknown _instance[89975] unmanaged BaseLocale?[415334] forwarding ( )
  function here[90435]() : _unknown[51] "inline" "no parens"
  {
    (90441 return(90440 call chpl_localeID_to_locale(377721 call here_id[92815])))
  }
  function locale[28].hostname[90449](arg _mt[90454]:_MT[238], arg this[90451]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    (90475 call writeln "in locale.hostname line 212")
    (90487 return(90484 call .(90479 call . this[90451] c"_value") c"hostname"))
  }
  function locale[28].name[90494](arg _mt[90499]:_MT[238], arg this[90496]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    (90510 return(90507 call .(90502 call . this[90496] c"_value") c"name"))
  }
  function locale[28].id[90518](arg _mt[90523]:_MT[238], arg this[90520]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    (90534 return(90531 call .(90526 call . this[90520] c"_value") c"id"))
  }
  function locale[28].maxTaskPar[90542](arg _mt[90547]:_MT[238], arg this[90544]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    (90556 return(90553 call .(90550 call . this[90544] c"_value") c"maxTaskPar"))
  }
  function locale[28].numPUs[90570](arg _mt[90581]:_MT[238], arg this[90578]:locale[28] :
  locale[28], arg logical[90566] :
  bool[10] =
  0, arg accessible[90574] :
  bool[10] =
  1) : _unknown[51] "inline" "method"
  {
    (90596 return(90595 call(90589 call .(90584 call . this[90578] c"_value") c"numPUs") logical[90566] accessible[90574]))
  }
  function locale[28].callStackSize[90604](arg _mt[90609]:_MT[238], arg this[90606]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    (90620 return(90617 call .(90612 call . this[90606] c"_value") c"callStackSize"))
  }
  function =[90631](ref arg l1[90628] :
  locale[28], const  ref arg l2[90634] :
  locale[28]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (90645 call =(90638 call . l1[90628] c"_instance")(90642 call . l2[90634] c"_instance"))
  }
  function BaseLocale[91201].init[90654](arg _mt[91205]:_MT[238], arg this[91203]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
  }
  function BaseLocale[91201].init[90665](arg _mt[91209]:_MT[238], arg this[91207]:BaseLocale[91201], arg parent[90662] :
  locale[28]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (90674 call =(90670 call . this[91207] c"parent") parent[90662])
  }
  function BaseLocale[91201].numPUs[90713](arg _mt[91213]:_MT[238], arg this[91211]:BaseLocale[91201], arg logical[90709] :
  bool[10] =
  0, arg accessible[90717] :
  bool[10] =
  1) : _unknown[51] "inline" "method" "primary method"
  {
    (90737 return(90734 IfExpr  logical[90709] then
    { scopeless(90725 IfExpr  accessible[90717] then
      { scopeless
        (377731 call . this[91211] c"nPUsLogAcc")
      } else
      { scopeless
        (377736 call . this[91211] c"nPUsLogAll")
      } )
    } else
    { scopeless(90731 IfExpr  accessible[90717] then
      { scopeless
        (377742 call . this[91211] c"nPUsPhysAcc")
      } else
      { scopeless
        (377747 call . this[91211] c"nPUsPhysAll")
      } )
    } ))
  }
  function BaseLocale[91201].id[90754](arg _mt[91217]:_MT[238], arg this[91215]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    (90780 return(90779 call chpl_nodeFromLocaleID(90777 '_wide_get_locale' this[91215])))
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].localeid[90788](arg _mt[91221]:_MT[238], arg this[91219]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no parens"
  {
    (90795 return(90794 '_wide_get_locale' this[91219]))
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function BaseLocale[91201].hostname[90803](arg _mt[91225]:_MT[238], arg this[91223]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    function chpl_nodeName[90808]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      c_string[19]
    }
    unknown hname[90816] string[26]
    (90819 'end of statement')
    const tmp[90839] "const" "temp"
    (90841 'move' tmp[90839](90837 'deref'(90836 '_wide_get_locale' this[91223])))
    {
      {
        Try!
        {
          {
            (90828 call = hname[90816](90827 call createStringWithNewBuffer(90825 call chpl_nodeName)))
          }
        }
      }
      (90844 'on block' 0 tmp[90839])
    }
    (90848 return hname[90816])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91201].writeThis[90857](arg _mt[91229]:_MT[238], arg this[91227]:BaseLocale[91201], arg f[90855]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides" "no return value for void"
  {
    (90866 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358248 'referenced modules list' HaltWrappers[209910])
  }
  function BaseLocale[91201].name[90873](arg _mt[91233]:_MT[238], arg this[91231]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    (90881 return(90879 call _cast string[26](90877 call(377759 call . this[91231] c"chpl_name"))))
  }
  function BaseLocale[91201].runningTaskCntSet[90900](arg _mt[91237]:_MT[238], arg this[91235]:BaseLocale[91201], arg val[90897] :
  int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (90912 call(90903 call .(358257 call . this[91235] c"runningTaskCounter") c"write") val[90897] relaxed[186964])
  }
  function BaseLocale[91201].runningTaskCntAdd[90923](arg _mt[91241]:_MT[238], arg this[91239]:BaseLocale[91201], arg val[90920] :
  int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (90935 call(90926 call .(358263 call . this[91239] c"runningTaskCounter") c"add") val[90920] relaxed[186964])
  }
  function BaseLocale[91201].runningTaskCntSub[90946](arg _mt[91245]:_MT[238], arg this[91243]:BaseLocale[91201], arg val[90943] :
  int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (90958 call(90949 call .(358269 call . this[91243] c"runningTaskCounter") c"sub") val[90943] relaxed[186964])
  }
  function BaseLocale[91201].runningTaskCnt[90965](arg _mt[91249]:_MT[238], arg this[91247]:BaseLocale[91201]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown rtc[90977](90976 call(90968 call .(358275 call . this[91247] c"runningTaskCounter") c"read") relaxed[186964])
    (90980 'end of statement')
    (90991 return(90988 IfExpr (90984 call <= rtc[90977] 0) then
    { scopeless
      1
    } else
    { scopeless
      rtc[90977]
    } ))
  }
  function BaseLocale[91201].chpl_id[90997](arg _mt[91253]:_MT[238], arg this[91251]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    (91005 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91011 return(91009 call - 1))
    (358280 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].chpl_localeid[91018](arg _mt[91257]:_MT[238], arg this[91255]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    (91026 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91039 return(91038 call chpl_buildLocaleID(91034 call -(91032 call _cast chpl_nodeID_t[89859] 1)) c_sublocid_none[89870]))
    (358286 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function BaseLocale[91201].chpl_name[91046](arg _mt[91261]:_MT[238], arg this[91259]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    (91054 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91074 return "")
    (358292 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91201].defaultMemory[91081](arg _mt[91265]:_MT[238], arg this[91263]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91089 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358298 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].largeMemory[91097](arg _mt[91269]:_MT[238], arg this[91267]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91105 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358304 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].lowLatencyMemory[91113](arg _mt[91273]:_MT[238], arg this[91271]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91121 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358310 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].highBandwidthMemory[91129](arg _mt[91277]:_MT[238], arg this[91275]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91137 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358316 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].getChildCount[91145](arg _mt[91281]:_MT[238], arg this[91279]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    (91153 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91157 return 0)
    (358322 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].addChild[91168](arg _mt[91285]:_MT[238], arg this[91283]:BaseLocale[91201], arg loc[91165] :
  locale[28]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91175 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358328 'referenced modules list' HaltWrappers[209910])
  }
  function BaseLocale[91201].getChild[91186](arg _mt[91289]:_MT[238], arg this[91287]:BaseLocale[91201], arg idx[91183] :
  int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91194 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358334 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  type BaseLocale[91201] val super[355550]:object[22] "super class" const parent[90681] "const" "no doc" nilLocale[89939] unknown nPUsLogAcc[90686] "no doc" int(64)[13] unknown nPUsLogAll[90691] "no doc" int(64)[13] unknown nPUsPhysAcc[90696] "no doc" int(64)[13] unknown nPUsPhysAll[90701] "no doc" int(64)[13] unknown maxTaskPar[90743] int(64)[13] unknown callStackSize[90748] size_t[20654] unknown runningTaskCounter[90890] "no doc"(90889 call chpl__processorAtomicType int(64)[13])
  type unmanaged BaseLocale?[415334]
  type BaseLocale?[415331](?)
  type BaseLocale[377699](?)
  function DummyLocale[91438].init[91297](arg _mt[91442]:_MT[238], arg this[91440]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (91305 call(91300 call .(358341 call . this[91440] c"super") c"init") nilLocale[89939])
  }
  function DummyLocale[91438].chpl_id[91312](arg _mt[91446]:_MT[238], arg this[91444]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    (91318 return(91316 call - 1))
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91438].chpl_localeid[91326](arg _mt[91450]:_MT[238], arg this[91448]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    (91339 return(91338 call chpl_buildLocaleID(91334 call -(91332 call _cast chpl_nodeID_t[89859] 1)) c_sublocid_none[89870]))
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function DummyLocale[91438].chpl_name[91347](arg _mt[91454]:_MT[238], arg this[91452]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    (91367 return "dummy-locale")
  }
  { scopeless type
    string[26]
  }
  function DummyLocale[91438].getChildCount[91375](arg _mt[91458]:_MT[238], arg this[91456]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    (91379 return 0)
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91438].getChild[91391](arg _mt[91462]:_MT[238], arg this[91460]:DummyLocale[91438], arg idx[91388] :
  int(64)[13]) : _unknown[51] "method" "primary method" "method overrides"
  {
    (91399 return(91394 'new'(91398 call locale[28] this[91460])))
  }
  { scopeless type
    locale[28]
  }
  function DummyLocale[91438].addChild[91411](arg _mt[91466]:_MT[238], arg this[91464]:DummyLocale[91438], arg loc[91408] :
  locale[28]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (91432 call halt "addChild on DummyLocale")
  }
  type DummyLocale[91438] val super[355560]:BaseLocale[91201] "super class"
  type DummyLocale[377717](?)
  function AbstractLocaleModel[91499].init[91478](arg _mt[91503]:_MT[238], arg this[91501]:AbstractLocaleModel[91499], arg parent_loc[91475] :
  locale[28]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (91486 call(91481 call .(358346 call . this[91501] c"super") c"init") parent_loc[91475])
  }
  function AbstractLocaleModel[91499].init[91493](arg _mt[91507]:_MT[238], arg this[91505]:AbstractLocaleModel[91499]) : _unknown[51] "method" "primary method" "no return value for void"
  {
  }
  type AbstractLocaleModel[91499] val super[355552]:BaseLocale[91201] "super class"
  unknown rootLocale[91511] "locale private" "no doc" nilLocale[89939]
  (91514 'end of statement')
  unknown replicateRootLocale[91516] "config" "no doc" "param" 1
  (91519 'end of statement')
  unknown origRootLocale[91521] "no doc" nilLocale[89939]
  (91524 'end of statement')
  function AbstractRootLocale[92009].init[91530](arg _mt[92013]:_MT[238], arg this[92011]:AbstractRootLocale[92009]) : _unknown[51] "method" "primary method" "no return value for void"
  {
  }
  function AbstractRootLocale[92009].init[91541](arg _mt[92017]:_MT[238], arg this[92015]:AbstractRootLocale[92009], arg parent_loc[91538] :
  locale[28]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (91549 call(91544 call .(358351 call . this[92015] c"super") c"init") parent_loc[91538])
  }
  function AbstractRootLocale[92009].getDefaultLocaleSpace[91556](arg _mt[92021]:_MT[238], arg this[92019]:AbstractRootLocale[92009]) const ref : _unknown[51] "method" "primary method"
  {
    (91563 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91567 return chpl_emptyLocaleSpace[88781])
    (358355 'referenced modules list' HaltWrappers[209910])
  }
  function AbstractRootLocale[92009].getDefaultLocaleArray[91573](arg _mt[92025]:_MT[238], arg this[92023]:AbstractRootLocale[92009]) const ref : _unknown[51] "method" "primary method"
  {
    (91580 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (91584 return chpl_emptyLocales[88792])
    (358361 'referenced modules list' HaltWrappers[209910])
  }
  function AbstractRootLocale[92009].localeIDtoLocale[91594](arg _mt[92029]:_MT[238], arg this[92027]:AbstractRootLocale[92009], arg id[91591] :
  chpl_localeID_t[209294]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (91602 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (358367 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function AbstractRootLocale[92009].chpl_initOnLocales[91610](arg _mt[92033]:_MT[238], arg this[92031]:AbstractRootLocale[92009]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(91637 call _cond_test(91614 call > numLocales[209834] 1))
    {
      (91635 call halt "The locales must be initialized in parallel")
    }
    {
      unknown _indexOfInterest[91676] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[91677] "expr temp" "temp"
      (91686 'move' _iterator[91677](91684 call _getIterator(91661 call(91657 call .(91653 call postfix!(91651 call _cast borrowed RootLocale?[415340](91645 call . origRootLocale[91521] c"_instance"))) c"getDefaultLocaleSpace"))))
      Defer
      {
        {
          (91703 call _freeIterator _iterator[91677])
        }
      }
      { scopeless type
        (91692 'move' _indexOfInterest[91676](91689 call iteratorIndex _iterator[91677]))
      }
      ForLoop[91678]
      {
        unknown locIdx[91696] "index var" "insert auto destroy"
        (91698 'move' locIdx[91696] _indexOfInterest[91676])
        {
          (91663 yield locIdx[91696])
          (91668 call = rootLocale[91511] origRootLocale[91521])
          (91673 call = rootLocaleInitialized[310] 1)
        }
        label _continueLabel[91681]
        _indexOfInterest[91676]
        _iterator[91677]
      }
      label _breakLabel[91682]
    }
  }
  function AbstractRootLocale[92009].chpl_initOnLocales[91718](arg _mt[92037]:_MT[238], arg this[92035]:AbstractRootLocale[92009], param arg tag[91715] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown b[91728] localesBarrier[92483]
    (91731 'end of statement')
    unknown flags[91750](91748 call chpl__buildArrayRuntimeType(91746 call chpl__ensureDomainExpr(91740 call #(91734 call chpl_build_low_bounded_range 1)(91738 call - numLocales[209834] 1))) unmanaged localesSignal?[415346])
    (91753 'end of statement')
    {
      unknown tmpIter[91815] "expr temp" "maybe ref" "no copy" "temp"
      (91818 'move' tmpIter[91815](91759 call #(91756 call chpl_build_low_bounded_range 0) numLocales[209834]))
      unknown isRngDomArr[91986] "maybe param" "temp"
      (92001 'move' isRngDomArr[91986](91999 call ||(91988 call isBoundedRange tmpIter[91815])(91997 call ||(91991 call isDomain tmpIter[91815])(91994 call isArray tmpIter[91815]))))
      if isRngDomArr[91986]
      {
        const _coforallCount[91858] "const" "end count" "temp"
        (91923 'move' _coforallCount[91858](91920 call _endCountAlloc 0))
        unknown numTasks[91859] "temp"
        (91907 'move' numTasks[91859](91903 call . tmpIter[91815] c"size"))
        (91898 call _upEndCount _coforallCount[91858] 0 numTasks[91859])
        unknown _indexOfInterest[91865] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91866] "expr temp" "temp"
        (91875 'move' _iterator[91866](91873 call _getIterator tmpIter[91815]))
        Defer
        {
          {
            (91891 call _freeIterator _iterator[91866])
          }
        }
        { scopeless type
          (91880 'move' _indexOfInterest[91865](91877 call iteratorIndex _iterator[91866]))
        }
        ForLoop[91867]
        {
          unknown locIdx[91884] "coforall index var" "index var" "insert auto destroy"
          (91886 'move' locIdx[91884] _indexOfInterest[91865])
          const tmp[91821] "const" "temp"
          (91823 'move' tmp[91821](91825 'deref'(91826 'chpl_on_locale_num'(91828 call chpl_buildLocaleID(91830 call _cast chpl_nodeID_t[89859] locIdx[91884]) c_sublocid_any[89875]))))
          {
            {
              (91840 call chpl_defaultDistInitPrivate)
              (91841 yield locIdx[91884])
              (91847 call(91844 call . b[91728] c"wait") locIdx[91884] flags[91750])
              (91851 call chpl_rootLocaleInitPrivate locIdx[91884])
              (91854 call chpl_defaultLocaleInitPrivate)
              (91856 call warmupRuntime)
            }
            (91860 call _downEndCount _coforallCount[91858] nil[44])
            (91835 'coforall on block' 0 tmp[91821])
          }
          label _continueLabel[91870]
          _indexOfInterest[91865]
          _iterator[91866]
        }
        label _breakLabel[91871]
        Defer
        {
          {
            (91910 call _endCountFree _coforallCount[91858])
          }
        }
        (91915 call _waitEndCount _coforallCount[91858] 0 numTasks[91859])
      }
      {
        const _coforallCount[91927] "const" "end count" "temp"
        (91983 'move' _coforallCount[91927](91980 call _endCountAlloc 0))
        unknown _indexOfInterest[91934] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91935] "expr temp" "temp"
        (91944 'move' _iterator[91935](91942 call _getIterator tmpIter[91815]))
        Defer
        {
          {
            (91960 call _freeIterator _iterator[91935])
          }
        }
        { scopeless type
          (91949 'move' _indexOfInterest[91934](91946 call iteratorIndex _iterator[91935]))
        }
        ForLoop[91936]
        {
          unknown locIdx[91953] "coforall index var" "index var" "insert auto destroy"
          (91955 'move' locIdx[91953] _indexOfInterest[91934])
          (91967 call _upEndCount _coforallCount[91927] 0)
          const tmp[91806] "const" "temp"
          (91808 'move' tmp[91806](91804 'deref'(91771 'chpl_on_locale_num'(91770 call chpl_buildLocaleID(91766 call _cast chpl_nodeID_t[89859] locIdx[91953]) c_sublocid_any[89875]))))
          {
            {
              (91774 call chpl_defaultDistInitPrivate)
              (91778 yield locIdx[91953])
              (91789 call(91783 call . b[91728] c"wait") locIdx[91953] flags[91750])
              (91794 call chpl_rootLocaleInitPrivate locIdx[91953])
              (91798 call chpl_defaultLocaleInitPrivate)
              (91802 call warmupRuntime)
            }
            (91929 call _downEndCount _coforallCount[91927] nil[44])
            (91811 'coforall on block' 0 tmp[91806])
          }
          label _continueLabel[91939]
          _indexOfInterest[91934]
          _iterator[91935]
        }
        label _breakLabel[91940]
        Defer
        {
          {
            (91971 call _endCountFree _coforallCount[91927])
          }
        }
        (91976 call _waitEndCount _coforallCount[91927] 0)
      }
    }
  }
  where {
    (91725 call == tag[91715] standalone[451])
  }
  type AbstractRootLocale[92009] val super[355556]:BaseLocale[91201] "super class"
  type borrowed AbstractRootLocale?[415352]
  type AbstractRootLocale?[415349](?)
  type AbstractRootLocale[377866](?)
  function warmupRuntime[92042]() : _unknown[51] "private" "no return value for void"
  {
    function chpl_task_getFixedNumThreads[92046]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (92051 call uint(64)[115] 32)
    }
    {
      unknown tmpIter[92088] "expr temp" "maybe ref" "no copy" "temp"
      (92091 'move' tmpIter[92088](92063 call #(92058 call chpl_build_low_bounded_range 0)(92062 call chpl_task_getFixedNumThreads)))
      unknown isRngDomArr[92245] "maybe param" "temp"
      (92260 'move' isRngDomArr[92245](92258 call ||(92247 call isBoundedRange tmpIter[92088])(92256 call ||(92250 call isDomain tmpIter[92088])(92253 call isArray tmpIter[92088]))))
      if isRngDomArr[92245]
      {
        const _coforallCount[92112] "const" "end count" "temp"
        (92181 'move' _coforallCount[92112](92178 call _endCountAlloc 1))
        unknown numTasks[92113] "temp"
        (92165 'move' numTasks[92113](92161 call . tmpIter[92088] c"size"))
        (92156 call _upEndCount _coforallCount[92112] 1 numTasks[92113])
        (92153 call chpl_resetTaskSpawn numTasks[92113])
        unknown _indexOfInterest[92120] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92121] "expr temp" "temp"
        (92130 'move' _iterator[92121](92128 call _getIterator tmpIter[92088]))
        Defer
        {
          {
            (92146 call _freeIterator _iterator[92121])
          }
        }
        { scopeless type
          (92135 'move' _indexOfInterest[92120](92132 call iteratorIndex _iterator[92121]))
        }
        ForLoop[92122]
        {
          unknown i[92139] "coforall index var" "index var" "insert auto destroy"
          (92141 'move' i[92139] _indexOfInterest[92120])
          {
            {
              unknown p[92095](92097 call c_malloc int(64)[13] 1)
              (92101 'end of statement')
              (92103 call =(92105 call p[92095] 0) i[92139])
              (92109 call c_free p[92095])
            }
            (92115 call _downEndCount _coforallCount[92112] nil[44])
            (92114 'coforall loop')
          }
          label _continueLabel[92125]
          _indexOfInterest[92120]
          _iterator[92121]
        }
        label _breakLabel[92126]
        Defer
        {
          {
            (92168 call _endCountFree _coforallCount[92112])
          }
        }
        (92173 call _waitEndCount _coforallCount[92112] 1 numTasks[92113])
      }
      {
        const _coforallCount[92185] "const" "end count" "temp"
        (92242 'move' _coforallCount[92185](92239 call _endCountAlloc 1))
        unknown _indexOfInterest[92193] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92194] "expr temp" "temp"
        (92203 'move' _iterator[92194](92201 call _getIterator tmpIter[92088]))
        Defer
        {
          {
            (92219 call _freeIterator _iterator[92194])
          }
        }
        { scopeless type
          (92208 'move' _indexOfInterest[92193](92205 call iteratorIndex _iterator[92194]))
        }
        ForLoop[92195]
        {
          unknown i[92212] "coforall index var" "index var" "insert auto destroy"
          (92214 'move' i[92212] _indexOfInterest[92193])
          (92226 call _upEndCount _coforallCount[92185] 1)
          {
            {
              unknown p[92070](92069 call c_malloc int(64)[13] 1)
              (92073 'end of statement')
              (92080 call =(92078 call p[92070] 0) i[92212])
              (92086 call c_free p[92070])
            }
            (92188 call _downEndCount _coforallCount[92185] nil[44])
            (92187 'coforall loop')
          }
          label _continueLabel[92198]
          _indexOfInterest[92193]
          _iterator[92194]
        }
        label _breakLabel[92199]
        Defer
        {
          {
            (92230 call _endCountFree _coforallCount[92185])
          }
        }
        (92235 call _waitEndCount _coforallCount[92185] 1)
      }
    }
  }
  type localesSignal[92275] val super[355562]:object[22] "super class" unknown s[92270](92268 call chpl__atomicType bool[10])
  type unmanaged localesSignal?[415346]
  type localesSignal?[415343](?)
  type localesSignal[377796](?)
  function localesBarrier[92483].wait[92283](arg _mt[92487]:_MT[238], arg this[92485]:localesBarrier[92483], arg locIdx[92281]:_any[178](?), arg flags[92285]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    if(92475 call _cond_test(92289 call == locIdx[92281] 0))
    {
      {
        unknown tmp[92367] "temp"
        (92385 'move' tmp[92367](92383 call _cond_test 1))
        WhileDo[92372]
        {
          {
            (92294 call atomicFence)
            unknown count[92298] 0
            (92301 'end of statement')
            {
              unknown _indexOfInterest[92315] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[92316] "expr temp" "temp"
              (92325 'move' _iterator[92316](92323 call _getIterator flags[92285]))
              Defer
              {
                {
                  (92341 call _freeIterator _iterator[92316])
                }
              }
              { scopeless type
                (92330 'move' _indexOfInterest[92315](92327 call iteratorIndex _iterator[92316]))
              }
              ForLoop[92317]
              {
                unknown f[92334] "index var" "insert auto destroy"
                (92336 'move' f[92334] _indexOfInterest[92315])
                if(92310 call _cond_test f[92334])
                {
                  (92307 call += count[92298] 1)
                }
                label _continueLabel[92320]
                _indexOfInterest[92315]
                _iterator[92316]
              }
              label _breakLabel[92321]
            }
            if(92358 call _cond_test(92353 call == count[92298](92351 call - numLocales[209834] 1)))
            {
              break _breakLabel[92371] _breakLabel[92371]
            }
            (92365 call chpl_task_yield)
          }
          label _continueLabel[92370]
          (92378 'move' tmp[92367](92376 call _cond_test 1))
          tmp[92367]
        }
        label _breakLabel[92371]
      }
      {
        unknown _indexOfInterest[92407] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92408] "expr temp" "temp"
        (92417 'move' _iterator[92408](92415 call _getIterator flags[92285]))
        Defer
        {
          {
            (92433 call _freeIterator _iterator[92408])
          }
        }
        { scopeless type
          (92422 'move' _indexOfInterest[92407](92419 call iteratorIndex _iterator[92408]))
        }
        ForLoop[92409]
        {
          unknown f[92426] "index var" "insert auto destroy"
          (92428 'move' f[92426] _indexOfInterest[92407])
          (92405 call(92401 call .(92396 call .(92392 call postfix! f[92426]) c"s") c"testAndSet"))
          label _continueLabel[92412]
          _indexOfInterest[92407]
          _iterator[92408]
        }
        label _breakLabel[92413]
      }
    }
    {
      unknown f[92446](92442 'new'(_chpl_manager = unmanaged[220](?))(92445 call localesSignal[377796](?)))
      (92449 'end of statement')
      (92456 call =(92454 call flags[92285] locIdx[92281]) f[92446])
      (92468 call(92463 call .(92460 call . f[92446] c"s") c"waitFor") 1)
      (92472 call chpl__delete f[92446])
    }
  }
  type localesBarrier[92483]
  function chpl_init_rootLocale[92492]() : _unknown[51] "no doc" "no return value for void"
  {
    if(92522 call _cond_test(92499 call &&(92496 call > numLocales[209834] 1) 0))
    {
      (92520 call halt "Cannot run a program compiled with --local in more than 1 locale")
    }
    (92538 call =(92529 call . origRootLocale[91521] c"_instance")(92534 'new'(_chpl_manager = unmanaged[220](?))(92537 call RootLocale[377784](?))))
    (92558 call(92554 call .(92550 call postfix!(92548 call _cast borrowed RootLocale?[415340](92542 call . origRootLocale[91521] c"_instance"))) c"setup"))
  }
  function chpl_defaultLocaleInitPrivate[92564]() : _unknown[51] "inline" "no doc" "no return value for void"
  {
    const rl[92584] "const" "no auto destroy" "no copy" "ref var"(92583 call(92579 call .(92575 call postfix!(92573 call _cast borrowed RootLocale?[415340](92567 call . rootLocale[91511] c"_instance"))) c"getDefaultLocaleArray"))
    (92587 'end of statement')
    (92600 call =(92590 call . defaultLocale[89953] c"_instance")(92597 call .(92596 call rl[92584] 0) c"_instance"))
  }
  function chpl_rootLocaleInitPrivate[92609](arg locIdx[92607]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    (92613 call = rootLocale[91511] origRootLocale[91521])
    if(92727 call _cond_test(92622 call && replicateRootLocale[91516](92620 call != locIdx[92607] 0)))
    {
      unknown newRootLocale[92630](92626 'new'(_chpl_manager = unmanaged[220](?))(92629 call RootLocale[377784](?)))
      (92633 'end of statement')
      const origLocales[92651] "const" "no auto destroy" "no copy" "ref var"(92650 call(92646 call .(92644 call postfix!(92642 call _cast borrowed RootLocale?[415340](92636 call . origRootLocale[91521] c"_instance"))) c"getDefaultLocaleArray"))
      (92654 'end of statement')
      unknown origRL[92664](92661 call .(92656 call . origLocales[92651] c"_value") c"theData")
      (92667 'end of statement')
      unknown newRL[92680](92677 call .(92674 call .(92673 call(92669 call . newRootLocale[92630] c"getDefaultLocaleArray")) c"_value") c"theData")
      (92683 'end of statement')
      (92717 'chpl_comm_array_get'(92706 'array_get' newRL[92680] 0) 0(92712 'array_get' origRL[92664] 0)(92715 call _cast size_t[20654] numLocales[209834]))
      (92724 call =(92720 call . rootLocale[91511] c"_instance") newRootLocale[92630])
    }
    if(92778 call _cond_test(92733 call != locIdx[92607] 0))
    {
      const tmp[92751] "const" "no auto destroy" "ref var"(92750 call(92746 call .(92744 call postfix!(92742 call _cast borrowed RootLocale?[415340](92736 call . rootLocale[91511] c"_instance"))) c"getDefaultLocaleArray"))
      (92754 'end of statement')
      (92776 'move' Locales[113656] tmp[92751])
    }
    (92784 call = rootLocaleInitialized[310] 1)
  }
  function chpl_task_getRequestedSubloc[92791]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free" "no return value for void"
  {
  }
  { scopeless type
    chpl_sublocID_t[89866]
  }
  function chpl_getLocaleID[92803](ref arg localeID[92800] :
  chpl_localeID_t[209294]) : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    (92807 call = localeID[92800](377858 call here_id[92815]))
  }
  function here_id[92815]() : _unknown[51] "inline" "no doc" "no parens"
  {
    if(92834 call _cond_test localeModelHasSublocales[187403])
    {
      (92825 return(92824 call chpl_rt_buildLocaleID chpl_nodeID[208152](92823 call chpl_task_getRequestedSubloc)))
    }
    {
      (92832 return(92831 call chpl_rt_buildLocaleID chpl_nodeID[208152] c_sublocid_any[89875]))
    }
  }
  function chpl_localeID_to_locale[92849](arg id[92846] :
  chpl_localeID_t[209294]) : _unknown[51] "no doc" "fn returns infinite lifetime"
  {
    if(92909 call _cond_test(92857 call !=(92853 call . rootLocale[91511] c"_instance") nil[44]))
    {
      (92878 return(92877 call(92872 call .(92868 call postfix!(92866 call _cast borrowed AbstractRootLocale?[415352](92860 call . rootLocale[91511] c"_instance"))) c"localeIDtoLocale") id[92846]))
    }
    {
      if(92901 call _cond_test(92885 call ==(92881 call . dummyLocale[89967] c"_instance") nil[44]))
      {
        (92897 call =(92888 call . dummyLocale[89967] c"_instance")(92893 'new'(_chpl_manager = unmanaged[220](?))(92896 call DummyLocale[377717](?))))
      }
      (92907 return dummyLocale[89967])
    }
  }
  { scopeless type
    locale[28]
  }
  type chpl_privateObject_t[92925] unknown obj[92920] c_void_ptr[149]
  unknown chpl_privateObjects[92932] "extern" "no doc"(92931 call c_ptr[205045](?) chpl_privateObject_t[92925])
  (92935 'end of statement')
  function chpl_getPrivatizedCopy[92940](arg objectType[92938]:_any[178](?), arg objectPid[92943] :
  int(64)[13]) : _unknown[51] "inline" "no doc" "fn returns infinite lifetime"
  {
    (92960 return(92959 'cast' objectType[92938](92956 call .(92953 call chpl_privateObjects[92932] objectPid[92943]) c"obj")))
  }
  { scopeless type
    objectType[92938]
  }
  function locale[28].totalThreads[92969](arg _mt[92974]:_MT[238], arg this[92971]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown totalThreads[92977] int(64)[13]
    (92980 'end of statement')
    function chpl_task_getNumThreads[92984]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (92989 call uint(64)[115] 32)
    }
    const tmp[93004] "const" "temp"
    (93006 'move' tmp[93004](93002 'deref'(93001 '_wide_get_locale' this[92971])))
    {
      (92998 call = totalThreads[92977](92997 call chpl_task_getNumThreads))
      (93009 'on block' 0 tmp[93004])
    }
    (93013 return totalThreads[92977])
  }
  function locale[28].idleThreads[93020](arg _mt[93025]:_MT[238], arg this[93022]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown idleThreads[93028] int(64)[13]
    (93031 'end of statement')
    function chpl_task_getNumIdleThreads[93035]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (93040 call uint(64)[115] 32)
    }
    const tmp[93055] "const" "temp"
    (93057 'move' tmp[93055](93053 'deref'(93052 '_wide_get_locale' this[93022])))
    {
      (93049 call = idleThreads[93028](93048 call chpl_task_getNumIdleThreads))
      (93060 'on block' 0 tmp[93055])
    }
    (93064 return idleThreads[93028])
  }
  function locale[28].queuedTasks[93071](arg _mt[93076]:_MT[238], arg this[93073]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown queuedTasks[93079] int(64)[13]
    (93082 'end of statement')
    function chpl_task_getNumQueuedTasks[93086]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (93091 call uint(64)[115] 32)
    }
    const tmp[93106] "const" "temp"
    (93108 'move' tmp[93106](93104 'deref'(93103 '_wide_get_locale' this[93073])))
    {
      (93100 call = queuedTasks[93079](93099 call chpl_task_getNumQueuedTasks))
      (93111 'on block' 0 tmp[93106])
    }
    (93115 return queuedTasks[93079])
  }
  function locale[28].runningTasks[93122](arg _mt[93127]:_MT[238], arg this[93124]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc" "fn synchronization free"
  {
    (93137 return(93136 call(93132 call . this[93124] c"runningTaskCnt")))
  }
  function locale[28].blockedTasks[93145](arg _mt[93150]:_MT[238], arg this[93147]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown blockedTasks[93153] int(64)[13]
    (93156 'end of statement')
    function chpl_task_getNumBlockedTasks[93160]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type
      (93165 call int(64)[13] 32)
    }
    const tmp[93180] "const" "temp"
    (93182 'move' tmp[93180](93178 'deref'(93177 '_wide_get_locale' this[93147])))
    {
      (93174 call = blockedTasks[93153](93173 call chpl_task_getNumBlockedTasks))
      (93185 'on block' 0 tmp[93180])
    }
    (93189 return blockedTasks[93153])
  }
  function chpl_taskRunningCntInc[93195]() : _unknown[51] "export" "insert line file info" "inc running task" "local args" "no doc" "no return value for void"
  {
    if(93207 call _cond_test rootLocaleInitialized[310])
    {
      (93204 call(93199 call .(358391 call here[90435]) c"runningTaskCntAdd") 1)
    }
  }
  function chpl_taskRunningCntDec[93216]() : _unknown[51] "export" "insert line file info" "dec running task" "local args" "no doc" "no return value for void"
  {
    if(93228 call _cond_test rootLocaleInitialized[310])
    {
      (93225 call(93220 call .(358393 call here[90435]) c"runningTaskCntSub") 1)
    }
  }
  function chpl_taskRunningCntReset[93237]() : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    (93247 call(93242 call .(358395 call here[90435]) c"runningTaskCntSet") 0)
  }
  function deinit[93254]() : _unknown[51] "destructor" "no doc" "no return value for void"
  {
    (93261 call chpl__delete(93257 call . origRootLocale[91521] c"_instance"))
    (93270 call chpl__delete(93266 call . dummyLocale[89967] c"_instance"))
  }
  (354989 'used modules list'(89846 'use' LocaleModel[88726])(89850 'import' HaltWrappers[209910])(89853 'use' SysCTypes[20940]))
}