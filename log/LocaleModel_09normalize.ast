AST dump for LocaleModel after pass normalize.
Module use list: LocaleModelHelpFlat LocaleModelHelpMem IO 

{
  function chpl__init_LocaleModel[415969]() : void[4] "insert line file info" "module init"
  {
    unknown call_tmp[631978] "expr temp" "maybe param" "maybe type" "temp"
    (631981 'move' call_tmp[631978](88776 call chpl_build_bounded_range 1 0))
    unknown call_tmp[631983] "maybe param" "maybe type" "temp"
    (631986 'move' call_tmp[631983](88779 call chpl__buildDomainExpr call_tmp[631978]))
    unknown call_tmp[631988] "maybe param" "maybe type" "temp"
    (631991 'move' call_tmp[631988](88772 call chpl__buildDomainRuntimeType defaultDist[94050] 1))
    (541639 'init var' chpl_emptyLocaleSpace[88781] call_tmp[631983] call_tmp[631988])
    (88784 'end of statement')
    unknown call_tmp[631993] "expr temp" "maybe param" "maybe type" "temp"
    (631996 'move' call_tmp[631993](88788 call chpl__ensureDomainExpr chpl_emptyLocaleSpace[88781]))
    unknown call_tmp[631998] "expr temp" "maybe param" "maybe type" "temp"
    (632001 'move' call_tmp[631998](88790 call chpl__buildArrayRuntimeType call_tmp[631993] locale[28]))
    (541641 'default init var' chpl_emptyLocales[88792] call_tmp[631998])
    (88795 'end of statement' chpl_emptyLocaleSpace[88781])
    (513622 return _void[55])
  }
  function chpl__deinit_LocaleModel[89791]() : _unknown[51] "no return value for void"
  {
    {
      unknown _indexOfInterest[89804] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89805] "expr temp" "temp"
      (89814 'move' _iterator[89805](89812 call _getIterator chpl_emptyLocales[88792]))
      Defer
      {
        {
          (89830 call _freeIterator _iterator[89805])
        }
      }
      { scopeless type
        (89819 'move' _indexOfInterest[89804](89816 call iteratorIndex _iterator[89805]))
      }
      ForLoop[89806]
      {
        unknown l[89823] "index var" "insert auto destroy"
        (477187 'end of statement')
        (89825 'move' l[89823] _indexOfInterest[89804])
        (477188 'end of statement' l[89823])
        {
          unknown call_tmp[632292] "expr temp" "maybe param" "maybe type" "temp"
          (632295 'move' call_tmp[632292](89796 call _instance _mt[243] l[89823]))
          (89800 call chpl__delete call_tmp[632292])
          (477190 'end of statement' l[89823])
        }
        label _continueLabel[89809]
        _indexOfInterest[89804]
        _iterator[89805]
      }
      label _breakLabel[89810]
    }
    (513624 return _void[55])
  }
  function chpl_localeModel_sublocToExecutionSubloc[88743](arg full_subloc[88740] :
  chpl_sublocID_t[89866]) : _unknown[51] "export" "local args"
  {
    unknown ret[513331] "RVV" "temp"
    (513336 'move' ret[513331](513335 'deref' full_subloc[88740]))
    (513333 return ret[513331])
  }
  function chpl_localeModel_sublocMerge[88757](arg full_subloc[88754] :
  chpl_sublocID_t[89866], arg execution_subloc[88760] :
  chpl_sublocID_t[89866]) : _unknown[51] "export" "local args"
  {
    unknown ret[513340] "RVV" "temp"
    (513345 'move' ret[513340](513344 'deref' execution_subloc[88760]))
    (513342 return ret[513340])
  }
  const chpl_emptyLocaleSpace[88781] "dead at end of block" "const" "insert auto destroy"
  const chpl_emptyLocales[88792] "dead at end of block" "const" "insert auto destroy" "unsafe"
  function LocaleModel[89192].init[88811](arg _mt[89196]:_MT[238], arg this[89194]:LocaleModel[89192]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460258] "temporary of super field" "temp"
    (460266 'move' super_tmp[460258](460259 '.v' this[89194] c"super"))
    (460262 call init _mt[243] super_tmp[460258])
    (477103 'end of statement')
    unknown tmp[460222] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491951] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632003] "expr temp" "maybe param" "maybe type" "temp"
      (632006 'move' call_tmp[632003](460224 '.v' this[89194] c"super"))
      (491955 'move' call_type_tmp[491951](460227 'typeof' call_tmp[632003]))
    }
    (460228 'move' tmp[460222] call_type_tmp[491951])
    unknown call_tmp[632008] "maybe param" "maybe type" "temp"
    (632011 'move' call_tmp[632008](460233 'cast' tmp[460222] this[89194]))
    unknown chpl__thisAsParent[460230] "dead at end of block" "insert auto destroy" "temp"
    (541643 'init var' chpl__thisAsParent[460230] call_tmp[632008] tmp[460222])
    (460236 'setcid' chpl__thisAsParent[460230])
    (477104 'end of statement')
    unknown call_tmp[632013] "expr temp" "maybe param" "maybe type" "temp"
    (632016 'move' call_tmp[632013](88836 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[632013]
    {
      (88833 call halt "Cannot create additional LocaleModel instances")
    }
    unknown call_tmp[632018] "maybe param" "maybe type" "temp"
    (632021 'move' call_tmp[632018](88844 call _cast int(64)[13] chpl_nodeID[208152]))
    unknown tmp[460238] "temp"
    (460241 'init var' tmp[460238] call_tmp[632018] int(64)[13])
    (460243 'init field' this[89194] c"_node_id" tmp[460238])
    (477106 'end of statement')
    val tmp[460247]:string[26] "temp"
    (460250 'default init var' tmp[460247] string[26])
    (460252 '.=' this[89194] c"local_name" tmp[460247])
    (477107 'end of statement')
    (460257 'setcid' this[89194])
    (477108 'end of statement')
    (88858 call(377658 call (partial) setup _mt[243] this[89194]))
    (513347 return _void[55])
  }
  function LocaleModel[89192].init[88868](arg _mt[89200]:_MT[238], arg this[89198]:LocaleModel[89192], arg parent_loc[88865]:locale[28]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632025] "expr temp" "maybe param" "maybe type" "temp"
    (632028 'move' call_tmp[632025](88877 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[632025]
    {
      (88874 call halt "Cannot create additional LocaleModel instances")
    }
    unknown super_tmp[460270] "temporary of super field" "temp"
    (460272 'move' super_tmp[460270](460269 '.v' this[89198] c"super"))
    (88888 call(88883 call (partial) init _mt[243] super_tmp[460270]) parent_loc[88865])
    (477111 'end of statement')
    unknown tmp[460275] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491957] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632032] "expr temp" "maybe param" "maybe type" "temp"
      (632035 'move' call_tmp[632032](460277 '.v' this[89198] c"super"))
      (491961 'move' call_type_tmp[491957](460280 'typeof' call_tmp[632032]))
    }
    (460281 'move' tmp[460275] call_type_tmp[491957])
    unknown call_tmp[632037] "maybe param" "maybe type" "temp"
    (632040 'move' call_tmp[632037](460286 'cast' tmp[460275] this[89198]))
    unknown chpl__thisAsParent[460283] "dead at end of block" "insert auto destroy" "temp"
    (541645 'init var' chpl__thisAsParent[460283] call_tmp[632037] tmp[460275])
    (460289 'setcid' chpl__thisAsParent[460283])
    (477112 'end of statement')
    unknown call_tmp[632042] "maybe param" "maybe type" "temp"
    (632045 'move' call_tmp[632042](88893 call _cast int(64)[13] chpl_nodeID[208152]))
    unknown tmp[460291] "temp"
    (460294 'init var' tmp[460291] call_tmp[632042] int(64)[13])
    (460296 'init field' this[89198] c"_node_id" tmp[460291])
    (477113 'end of statement')
    val tmp[460300]:string[26] "temp"
    (460303 'default init var' tmp[460300] string[26])
    (460305 '.=' this[89198] c"local_name" tmp[460300])
    (477114 'end of statement')
    (460310 'setcid' this[89198])
    (477115 'end of statement')
    (88907 call(377670 call (partial) setup _mt[243] this[89198]))
    (513349 return _void[55])
  }
  function LocaleModel[89192].chpl_id[88913](arg _mt[89204]:_MT[238], arg this[89202]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513353] "RVV" "temp"
    unknown call_tmp[632051] "expr temp" "maybe param" "maybe type" "temp"
    (632054 'move' call_tmp[632051](377675 call _node_id _mt[243] this[89202]))
    (513358 'move' ret[513353](513357 'deref' call_tmp[632051]))
    (513355 return ret[513353])
  }
  function LocaleModel[89192].chpl_localeid[88923](arg _mt[89208]:_MT[238], arg this[89206]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513362] "RVV" "temp"
    unknown call_tmp[632058] "expr temp" "maybe param" "maybe type" "temp"
    (632061 'move' call_tmp[632058](377680 call _node_id _mt[243] this[89206]))
    unknown call_tmp[632063] "expr temp" "maybe param" "maybe type" "temp"
    (632066 'move' call_tmp[632063](88928 call _cast chpl_nodeID_t[89859] call_tmp[632058]))
    unknown call_tmp[632068] "expr temp" "maybe param" "maybe type" "temp"
    (632071 'move' call_tmp[632068](88932 call chpl_buildLocaleID call_tmp[632063] c_sublocid_any[89875]))
    (513367 'move' ret[513362](513366 'deref' call_tmp[632068]))
    (513364 return ret[513362])
  }
  function LocaleModel[89192].chpl_name[88940](arg _mt[89212]:_MT[238], arg this[89210]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513371] "RVV" "temp"
    unknown call_tmp[632075] "expr temp" "maybe param" "maybe type" "temp"
    (632078 'move' call_tmp[632075](377689 call local_name _mt[243] this[89210]))
    (513376 'move' ret[513371](513375 'deref' call_tmp[632075]))
    (513373 return ret[513371])
  }
  function LocaleModel[89192].defaultMemory[88950](arg _mt[89216]:_MT[238], arg this[89214]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513380] "RVV" "temp"
    unknown call_tmp[632080] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632083 'move' call_tmp[632080](747810 'new' locale[28] this[89214]))
    (513386 'move' ret[513380](513385 'coerce' call_tmp[632080] locale[28]))
    (513382 return ret[513380])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].largeMemory[88966](arg _mt[89220]:_MT[238], arg this[89218]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513390] "RVV" "temp"
    unknown call_tmp[632085] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632088 'move' call_tmp[632085](747811 'new' locale[28] this[89218]))
    (513396 'move' ret[513390](513395 'coerce' call_tmp[632085] locale[28]))
    (513392 return ret[513390])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].lowLatencyMemory[88982](arg _mt[89224]:_MT[238], arg this[89222]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513400] "RVV" "temp"
    unknown call_tmp[632090] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632093 'move' call_tmp[632090](747812 'new' locale[28] this[89222]))
    (513406 'move' ret[513400](513405 'coerce' call_tmp[632090] locale[28]))
    (513402 return ret[513400])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].highBandwidthMemory[88998](arg _mt[89228]:_MT[238], arg this[89226]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513410] "RVV" "temp"
    unknown call_tmp[632095] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632098 'move' call_tmp[632095](747813 'new' locale[28] this[89226]))
    (513416 'move' ret[513410](513415 'coerce' call_tmp[632095] locale[28]))
    (513412 return ret[513410])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].getChildSpace[89014](arg _mt[89232]:_MT[238], arg this[89230]:LocaleModel[89192]) : _unknown[51] "method" "primary method"
  {
    unknown ret[513420] "RVV" "temp"
    (513425 'move' ret[513420](513424 'deref' chpl_emptyLocaleSpace[88781]))
    (513422 return ret[513420])
  }
  function LocaleModel[89192].getChildCount[89024](arg _mt[89236]:_MT[238], arg this[89234]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513429] "RVV" "temp"
    (513434 'move' ret[513429](513433 'deref' 0))
    (513431 return ret[513429])
  }
  function LocaleModel[89192].getChildIndices[89034](arg _mt[89240]:_MT[238], arg this[89238]:LocaleModel[89192]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513438] "RVV" "temp"
    {
      unknown _indexOfInterest[89042] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89043] "expr temp" "temp"
      (89052 'move' _iterator[89043](89050 call _getIterator chpl_emptyLocaleSpace[88781]))
      Defer
      {
        {
          (89068 call _freeIterator _iterator[89043])
        }
      }
      { scopeless type
        (89057 'move' _indexOfInterest[89042](89054 call iteratorIndex _iterator[89043]))
      }
      ForLoop[89044]
      {
        unknown idx[89061] "index var" "insert auto destroy"
        (477127 'end of statement')
        (89063 'move' idx[89061] _indexOfInterest[89042])
        (477128 'end of statement' idx[89061])
        unknown yret[513442] "YVV" "temp"
        (513446 'move' yret[513442](513445 'coerce' idx[89061] int(64)[13]))
        (513448 yield yret[513442])
        (477130 'end of statement' idx[89061])
        label _continueLabel[89047]
        _indexOfInterest[89042]
        _iterator[89043]
      }
      label _breakLabel[89048]
    }
    (513440 return ret[513438])
  }
  { scopeless type
    int(64)[13]
  }
  function LocaleModel[89192].getChild[89085](arg _mt[89244]:_MT[238], arg this[89242]:LocaleModel[89192], arg idx[89082]:int(64)[13]) : _unknown[51] "method" "primary method" "method overrides" "unsafe"
  {
    unknown ret[513452] "RVV" "temp"
    (89107 call halt "requesting a child from a flat LocaleModel locale")
    (477132 'end of statement')
    unknown tmp[89111] "dead at end of block" "insert auto destroy"
    (541647 'default init var' tmp[89111] locale[28])
    (89114 'end of statement')
    (513458 'move' ret[513452](513457 'coerce' tmp[89111] locale[28]))
    gotoReturn _end_getChild[513450] _end_getChild[513450]
    (477133 'end of statement' tmp[89111])
    label _end_getChild[513450]
    (513454 return ret[513452])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].getChildren[89123](arg _mt[89248]:_MT[238], arg this[89246]:LocaleModel[89192]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513464] "RVV" "temp"
    {
      unknown _indexOfInterest[89131] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89132] "expr temp" "temp"
      (89141 'move' _iterator[89132](89139 call _getIterator chpl_emptyLocales[88792]))
      Defer
      {
        {
          (89157 call _freeIterator _iterator[89132])
        }
      }
      { scopeless type
        (89146 'move' _indexOfInterest[89131](89143 call iteratorIndex _iterator[89132]))
      }
      ForLoop[89133]
      {
        unknown loc[89150] "index var" "insert auto destroy"
        (477136 'end of statement')
        (89152 'move' loc[89150] _indexOfInterest[89131])
        (477137 'end of statement' loc[89150])
        unknown yret[513468] "YVV" "temp"
        (513472 'move' yret[513468](513471 'coerce' loc[89150] locale[28]))
        (513474 yield yret[513468])
        (477139 'end of statement' loc[89150])
        label _continueLabel[89136]
        _indexOfInterest[89131]
        _iterator[89132]
      }
      label _breakLabel[89137]
    }
    (513466 return ret[513464])
  }
  { scopeless type
    locale[28]
  }
  function LocaleModel[89192].getChildArray[89170](arg _mt[89252]:_MT[238], arg this[89250]:LocaleModel[89192]) : _unknown[51] "method" "primary method"
  {
    unknown ret[513478] "RVV" "temp"
    (513483 'move' ret[513478](513482 'deref' chpl_emptyLocales[88792]))
    (513480 return ret[513478])
  }
  function LocaleModel[89192].setup[89180](arg _mt[89256]:_MT[238], arg this[89254]:LocaleModel[89192]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632102] "expr temp" "maybe param" "maybe type" "temp"
    (632105 'move' call_tmp[632102](377706 call local_name _mt[243] this[89254]))
    (89186 call helpSetupLocaleFlat this[89254] call_tmp[632102])
    (513485 return _void[55])
  }
  type LocaleModel[89192] val super[355642]:AbstractLocaleModel[91499] "super class" const-val _node_id[88800]:int(64)[13] "const" int(64)[13] val local_name[88805]:string[26] string[26]
  type LocaleModel[394020](?)
  function RootLocale[89691].init[89294](arg _mt[89695]:_MT[238], arg this[89693]:RootLocale[89691]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460312] "temporary of super field" "temp"
    (460314 'move' super_tmp[460312](460311 '.v' this[89693] c"super"))
    (89302 call(89297 call (partial) init _mt[243] super_tmp[460312]) nilLocale[89939])
    (477143 'end of statement')
    unknown tmp[460317] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491963] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632109] "expr temp" "maybe param" "maybe type" "temp"
      (632112 'move' call_tmp[632109](460319 '.v' this[89693] c"super"))
      (491967 'move' call_type_tmp[491963](460322 'typeof' call_tmp[632109]))
    }
    (460323 'move' tmp[460317] call_type_tmp[491963])
    unknown call_tmp[632114] "maybe param" "maybe type" "temp"
    (632117 'move' call_tmp[632114](460328 'cast' tmp[460317] this[89693]))
    unknown chpl__thisAsParent[460325] "dead at end of block" "insert auto destroy" "temp"
    (541649 'init var' chpl__thisAsParent[460325] call_tmp[632114] tmp[460317])
    (460331 'setcid' chpl__thisAsParent[460325])
    (477144 'end of statement')
    unknown call_tmp[632119] "expr temp" "maybe param" "maybe type" "temp"
    (632122 'move' call_tmp[632119](377715 '.' this[89693] c"nPUsPhysAcc"))
    (89307 call = call_tmp[632119] 0)
    (477145 'end of statement')
    unknown call_tmp[632124] "expr temp" "maybe param" "maybe type" "temp"
    (632127 'move' call_tmp[632124](377720 '.' this[89693] c"nPUsPhysAll"))
    (89312 call = call_tmp[632124] 0)
    (477146 'end of statement')
    unknown call_tmp[632129] "expr temp" "maybe param" "maybe type" "temp"
    (632132 'move' call_tmp[632129](377725 '.' this[89693] c"nPUsLogAcc"))
    (89317 call = call_tmp[632129] 0)
    (477147 'end of statement')
    unknown call_tmp[632134] "expr temp" "maybe param" "maybe type" "temp"
    (632137 'move' call_tmp[632134](377730 '.' this[89693] c"nPUsLogAll"))
    (89322 call = call_tmp[632134] 0)
    (477148 'end of statement')
    unknown call_tmp[632139] "expr temp" "maybe param" "maybe type" "temp"
    (632142 'move' call_tmp[632139](377735 '.' this[89693] c"maxTaskPar"))
    (89327 call = call_tmp[632139] 0)
    (477149 'end of statement')
    unknown call_tmp[632144] "expr temp" "maybe param" "maybe type" "temp"
    (632147 'move' call_tmp[632144](460340 call - numLocales[209834] 1))
    unknown call_tmp[632149] "expr temp" "maybe param" "maybe type" "temp"
    (632152 'move' call_tmp[632149](460337 call chpl_build_bounded_range 0 call_tmp[632144]))
    unknown call_tmp[632154] "maybe param" "maybe type" "temp"
    (632157 'move' call_tmp[632154](460335 call chpl__buildDomainExpr call_tmp[632149]))
    unknown call_tmp[632159] "maybe param" "maybe type" "temp"
    (632162 'move' call_tmp[632159](460346 call chpl__buildDomainRuntimeType defaultDist[94050] 1))
    unknown tmp[460343] "temp"
    (460349 'init var' tmp[460343] call_tmp[632154] call_tmp[632159])
    (460351 'init field' this[89693] c"myLocaleSpace" tmp[460343])
    (477150 'end of statement')
    unknown tmp[460355] "temp"
    unknown call_tmp[632164] "expr temp" "maybe param" "maybe type" "temp"
    (632167 'move' call_tmp[632164](460369 '.' this[89693] c"myLocaleSpace"))
    unknown call_tmp[632169] "expr temp" "maybe param" "maybe type" "temp"
    (632172 'move' call_tmp[632169](460360 call chpl__ensureDomainExpr call_tmp[632164]))
    unknown call_tmp[632174] "expr temp" "maybe param" "maybe type" "temp"
    (632177 'move' call_tmp[632174](460358 call chpl__buildArrayRuntimeType call_tmp[632169] locale[28]))
    (460363 'default init var' tmp[460355] call_tmp[632174])
    (460365 '.=' this[89693] c"myLocales" tmp[460355])
    (477151 'end of statement')
    (460372 'setcid' this[89693])
    (513487 return _void[55])
  }
  function RootLocale[89691].setup[89334](arg _mt[89699]:_MT[238], arg this[89697]:RootLocale[89691]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (89339 call helpSetupRootLocaleFlat this[89697])
    (513489 return _void[55])
  }
  function RootLocale[89691].chpl_id[89346](arg _mt[89703]:_MT[238], arg this[89701]:RootLocale[89691]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513493] "RVV" "temp"
    (513498 'move' ret[513493](513497 'deref' numLocales[209834]))
    (513495 return ret[513493])
  }
  function RootLocale[89691].chpl_localeid[89356](arg _mt[89707]:_MT[238], arg this[89705]:RootLocale[89691]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513502] "RVV" "temp"
    unknown call_tmp[632179] "expr temp" "maybe param" "maybe type" "temp"
    (632182 'move' call_tmp[632179](89361 call _cast chpl_nodeID_t[89859] numLocales[209834]))
    unknown call_tmp[632184] "expr temp" "maybe param" "maybe type" "temp"
    (632187 'move' call_tmp[632184](89365 call chpl_buildLocaleID call_tmp[632179] c_sublocid_none[89870]))
    (513507 'move' ret[513502](513506 'deref' call_tmp[632184]))
    (513504 return ret[513502])
  }
  function RootLocale[89691].chpl_name[89373](arg _mt[89711]:_MT[238], arg this[89709]:RootLocale[89691]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513511] "RVV" "temp"
    unknown call_tmp[632191] "expr temp" "maybe param" "maybe type" "temp"
    (632194 'move' call_tmp[632191](89377 call(377744 call (partial) local_name _mt[243] this[89709])))
    (513516 'move' ret[513511](513515 'deref' call_tmp[632191]))
    (513513 return ret[513511])
  }
  function RootLocale[89691].local_name[89385](arg _mt[89715]:_MT[238], arg this[89713]:RootLocale[89691]) : _unknown[51] "method" "primary method"
  {
    unknown ret[513520] "RVV" "temp"
    (513525 'move' ret[513520](513524 'deref' "rootLocale"))
    (513522 return ret[513520])
  }
  function RootLocale[89691].writeThis[89413](arg _mt[89719]:_MT[238], arg this[89717]:RootLocale[89691], arg f[89411]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[632198] "expr temp" "maybe param" "maybe type" "temp"
    (632201 'move' call_tmp[632198](377749 call name _mt[243] this[89717]))
    (89417 call <~> f[89411] call_tmp[632198])
    (513527 return _void[55])
  }
  function RootLocale[89691].getChildCount[89425](arg _mt[89723]:_MT[238], arg this[89721]:RootLocale[89691]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513531] "RVV" "temp"
    unknown call_tmp[632205] "expr temp" "maybe param" "maybe type" "temp"
    (632208 'move' call_tmp[632205](89430 call myLocaleSpace _mt[243] this[89721]))
    unknown call_tmp[632212] "expr temp" "maybe param" "maybe type" "temp"
    (632215 'move' call_tmp[632212](89433 call size _mt[243] call_tmp[632205]))
    (513536 'move' ret[513531](513535 'deref' call_tmp[632212]))
    (513533 return ret[513531])
  }
  function RootLocale[89691].getChildSpace[89443](arg _mt[89727]:_MT[238], arg this[89725]:RootLocale[89691]) : _unknown[51] "method" "primary method"
  {
    unknown ret[513540] "RVV" "temp"
    unknown call_tmp[632219] "expr temp" "maybe param" "maybe type" "temp"
    (632222 'move' call_tmp[632219](89446 call myLocaleSpace _mt[243] this[89725]))
    (513545 'move' ret[513540](513544 'deref' call_tmp[632219]))
    (513542 return ret[513540])
  }
  function RootLocale[89691].getChildIndices[89456](arg _mt[89731]:_MT[238], arg this[89729]:RootLocale[89691]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513549] "RVV" "temp"
    {
      unknown _indexOfInterest[89467] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89468] "expr temp" "temp"
      unknown call_tmp[632226] "expr temp" "maybe param" "maybe type" "temp"
      (632229 'move' call_tmp[632226](89461 call myLocaleSpace _mt[243] this[89729]))
      (89477 'move' _iterator[89468](89475 call _getIterator call_tmp[632226]))
      Defer
      {
        {
          (89494 call _freeIterator _iterator[89468])
        }
      }
      { scopeless type
        (89483 'move' _indexOfInterest[89467](89480 call iteratorIndex _iterator[89468]))
      }
      ForLoop[89469]
      {
        unknown idx[89487] "index var" "insert auto destroy"
        (477162 'end of statement')
        (89489 'move' idx[89487] _indexOfInterest[89467])
        (477163 'end of statement' idx[89487])
        unknown yret[513553] "YVV" "temp"
        (513557 'move' yret[513553](513556 'coerce' idx[89487] int(64)[13]))
        (513559 yield yret[513553])
        (477165 'end of statement' idx[89487])
        label _continueLabel[89472]
        _indexOfInterest[89467]
        _iterator[89468]
      }
      label _breakLabel[89473]
    }
    (513551 return ret[513549])
  }
  { scopeless type
    int(64)[13]
  }
  function RootLocale[89691].getChild[89511](arg _mt[89735]:_MT[238], arg this[89733]:RootLocale[89691], arg idx[89508]:int(64)[13]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513563] "RVV" "temp"
    unknown call_tmp[632233] "expr temp" "maybe param" "maybe type" "temp"
    (632236 'move' call_tmp[632233](89521 call(89516 call (partial) myLocales _mt[243] this[89733]) idx[89508]))
    (513568 'move' ret[513563](513567 'deref' call_tmp[632233]))
    (513565 return ret[513563])
  }
  function RootLocale[89691].getChildren[89529](arg _mt[89739]:_MT[238], arg this[89737]:RootLocale[89691]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513572] "RVV" "temp"
    {
      unknown _indexOfInterest[89540] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89541] "expr temp" "temp"
      unknown call_tmp[632240] "expr temp" "maybe param" "maybe type" "temp"
      (632243 'move' call_tmp[632240](89534 call myLocales _mt[243] this[89737]))
      (89550 'move' _iterator[89541](89548 call _getIterator call_tmp[632240]))
      Defer
      {
        {
          (89567 call _freeIterator _iterator[89541])
        }
      }
      { scopeless type
        (89556 'move' _indexOfInterest[89540](89553 call iteratorIndex _iterator[89541]))
      }
      ForLoop[89542]
      {
        unknown loc[89560] "index var" "insert auto destroy"
        (477169 'end of statement')
        (89562 'move' loc[89560] _indexOfInterest[89540])
        (477170 'end of statement' loc[89560])
        unknown yret[513576] "YVV" "temp"
        (513580 'move' yret[513576](513579 'coerce' loc[89560] locale[28]))
        (513582 yield yret[513576])
        (477172 'end of statement' loc[89560])
        label _continueLabel[89545]
        _indexOfInterest[89540]
        _iterator[89541]
      }
      label _breakLabel[89546]
    }
    (513574 return ret[513572])
  }
  { scopeless type
    locale[28]
  }
  function RootLocale[89691].getDefaultLocaleSpace[89580](arg _mt[89743]:_MT[238], arg this[89741]:RootLocale[89691]) const ref : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513586] "RVV" "temp"
    unknown call_tmp[632247] "expr temp" "maybe param" "maybe type" "temp"
    (632250 'move' call_tmp[632247](89583 call myLocaleSpace _mt[243] this[89741]))
    (513591 'move' ret[513586](513590 'addr of' call_tmp[632247]))
    (513588 return ret[513586])
  }
  function RootLocale[89691].getDefaultLocaleArray[89593](arg _mt[89747]:_MT[238], arg this[89745]:RootLocale[89691]) const ref : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513595] "RVV" "temp"
    unknown call_tmp[632254] "expr temp" "maybe param" "maybe type" "temp"
    (632257 'move' call_tmp[632254](377757 call myLocales _mt[243] this[89745]))
    (513600 'move' ret[513595](513599 'addr of' call_tmp[632254]))
    (513597 return ret[513595])
  }
  function RootLocale[89691].localeIDtoLocale[89607](arg _mt[89751]:_MT[238], arg this[89749]:RootLocale[89691], arg id[89604]:chpl_localeID_t[209294]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513604] "RVV" "temp"
    unknown call_tmp[632261] "expr temp" "maybe param" "maybe type" "temp"
    (632264 'move' call_tmp[632261](89613 call chpl_rt_nodeFromLocaleID id[89604]))
    unknown call_tmp[632266] "expr temp" "maybe param" "maybe type" "temp"
    (632269 'move' call_tmp[632266](89615 call(377763 call (partial) myLocales _mt[243] this[89749]) call_tmp[632261]))
    (513609 'move' ret[513604](513608 'deref' call_tmp[632266]))
    (513606 return ret[513604])
  }
  function RootLocale[89691].deinit[89623](arg _mt[89755]:_MT[238], arg this[89753]:RootLocale[89691]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[89654] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[89655] "expr temp" "temp"
      unknown call_tmp[632273] "expr temp" "maybe param" "maybe type" "temp"
      (632276 'move' call_tmp[632273](377769 call myLocales _mt[243] this[89753]))
      (89664 'move' _iterator[89655](89662 call _getIterator call_tmp[632273]))
      Defer
      {
        {
          (89680 call _freeIterator _iterator[89655])
        }
      }
      { scopeless type
        (89669 'move' _indexOfInterest[89654](89666 call iteratorIndex _iterator[89655]))
      }
      ForLoop[89656]
      {
        unknown loc[89673] "index var" "insert auto destroy"
        (477178 'end of statement')
        (89675 'move' loc[89673] _indexOfInterest[89654])
        (477179 'end of statement' loc[89673])
        {
          const tmp[89645] "const" "temp"
          unknown call_tmp[632278] "expr temp" "maybe param" "maybe type" "temp"
          (632281 'move' call_tmp[632278](89642 '_wide_get_locale' loc[89673]))
          (89647 'move' tmp[89645](89643 'deref' call_tmp[632278]))
          {
            {
              (89630 call = rootLocaleInitialized[310] 0)
              (477181 'end of statement')
              unknown call_tmp[632285] "expr temp" "maybe param" "maybe type" "temp"
              (632288 'move' call_tmp[632285](89635 call _instance _mt[243] loc[89673]))
              (89639 call chpl__delete call_tmp[632285])
              (477182 'end of statement' loc[89673])
            }
            (89650 'on block' 0 tmp[89645])
          }
        }
        label _continueLabel[89659]
        _indexOfInterest[89654]
        _iterator[89655]
      }
      label _breakLabel[89660]
    }
    (513611 return _void[55])
  }
  type RootLocale[89691] val super[355646]:AbstractRootLocale[92009] "super class" const myLocaleSpace[89277] "const"(89275 call chpl__buildDomainExpr(89272 call chpl_build_bounded_range 0(89270 call - numLocales[209834] 1)))(89265 call chpl__buildDomainRuntimeType defaultDist[94050] 1) unknown myLocales[89288] "unsafe"(89286 call chpl__buildArrayRuntimeType(89284 call chpl__ensureDomainExpr myLocaleSpace[89277]) locale[28])
  type borrowed RootLocale?[415429]
  type RootLocale?[415426](?)
  type RootLocale[377872](?)
  function chpl_getSubloc[89760]() : _unknown[51] "inline"
  {
    unknown ret[513615] "RVV" "temp"
    (89781 call halt "called chpl_getSubloc() in a locale model that lacks sublocales")
    (477184 'end of statement')
    (513620 'move' ret[513615](513619 'deref' c_sublocid_none[89870]))
    (513617 return ret[513615])
  }
  (355073 'used modules list'(88728 'use' LocaleModelHelpFlat[187401])(88732 'use' LocaleModelHelpMem[187718])(88735 'use' IO[230891]))
}