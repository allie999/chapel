AST dump for MemConsistency after pass buildDefaultFunctions.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[416087]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (545480 'default init var' memory_order_relaxed[186972] memory_order[186653])
    }
    (186975 'end of statement')
    { scopeless type extern
      (545483 'default init var' memory_order_consume[186977] memory_order[186653])
    }
    (186980 'end of statement')
    { scopeless type extern
      (545486 'default init var' memory_order_acquire[186982] memory_order[186653])
    }
    (186985 'end of statement')
    { scopeless type extern
      (545489 'default init var' memory_order_release[186987] memory_order[186653])
    }
    (186990 'end of statement')
    { scopeless type extern
      (545492 'default init var' memory_order_acq_rel[186992] memory_order[186653])
    }
    (186995 'end of statement')
    { scopeless type extern
      (545495 'default init var' memory_order_seq_cst[186997] memory_order[186653])
    }
    (187000 'end of statement')
    (524052 return _void[55])
  }
  type memory_order[186653]
  function _defaultOf[186662](arg t[186659]:memory_order[186653]) : _unknown[51] "inline" "last resort" "no doc"
  {
    unknown ret[523958] "RVV" "temp"
    function _defaultOfMemoryOrder[186666]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
      unknown ret[523952] "RVV" "temp"
      (523954 return ret[523952])
    }
    { scopeless type
      memory_order[186653]
    }
    unknown call_tmp[690376] "expr temp" "maybe param" "maybe type" "temp"
    (690379 'move' call_tmp[690376](186675 call _defaultOfMemoryOrder))
    (523963 'move' ret[523958](523962 'deref' call_tmp[690376]))
    (523960 return ret[523958])
  }
  function ==[186686](arg a[186683]:memory_order[186653], arg b[186689]:memory_order[186653]) : _unknown[51]
  {
    unknown ret[523967] "RVV" "temp"
    unknown call_tmp[690381] "expr temp" "maybe param" "maybe type" "temp"
    (690384 'move' call_tmp[690381](186697 '==' a[186683] b[186689]))
    (523973 'move' ret[523967](523972 'coerce' call_tmp[690381] bool[10]))
    (523969 return ret[523967])
  }
  { scopeless type
    bool[10]
  }
  function !=[186710](arg a[186707]:memory_order[186653], arg b[186713]:memory_order[186653]) : _unknown[51]
  {
    unknown ret[523977] "RVV" "temp"
    unknown call_tmp[690386] "expr temp" "maybe param" "maybe type" "temp"
    (690389 'move' call_tmp[690386](186721 '!=' a[186707] b[186713]))
    (523983 'move' ret[523977](523982 'coerce' call_tmp[690386] bool[10]))
    (523979 return ret[523977])
  }
  { scopeless type
    bool[10]
  }
  function =[186734](ref arg lhs[186731]:memory_order[186653], arg rhs[186737]:memory_order[186653]) : _unknown[51] "assignop" "no return value for void"
  {
    (186744 '=' lhs[186731] rhs[186737])
    (523985 return _void[55])
  }
  function memory_order[186653].writeThis[186754](arg _mt[186759]:_MT[238], arg this[186756]:memory_order[186653] :
  memory_order[186653], arg ch[186752]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[690391] "expr temp" "maybe param" "maybe type" "temp"
    (690394 'move' call_tmp[690391](186763 call == this[186756] memory_order_relaxed[186972]))
    unknown call_tmp[690396] "expr temp" "maybe param" "maybe type" "temp"
    (690399 'move' call_tmp[690396](186962 call _cond_test call_tmp[690391]))
    if call_tmp[690396]
    {
      (186783 call <~> ch[186752] "memory_order_relaxed")
    }
    {
      unknown call_tmp[690401] "expr temp" "maybe param" "maybe type" "temp"
      (690404 'move' call_tmp[690401](186788 call == this[186756] memory_order_consume[186977]))
      unknown call_tmp[690406] "expr temp" "maybe param" "maybe type" "temp"
      (690409 'move' call_tmp[690406](186956 call _cond_test call_tmp[690401]))
      if call_tmp[690406]
      {
        (186808 call <~> ch[186752] "memory_order_consume")
      }
      {
        unknown call_tmp[690411] "expr temp" "maybe param" "maybe type" "temp"
        (690414 'move' call_tmp[690411](186813 call == this[186756] memory_order_acquire[186982]))
        unknown call_tmp[690416] "expr temp" "maybe param" "maybe type" "temp"
        (690419 'move' call_tmp[690416](186950 call _cond_test call_tmp[690411]))
        if call_tmp[690416]
        {
          (186833 call <~> ch[186752] "memory_order_acquire")
        }
        {
          unknown call_tmp[690421] "expr temp" "maybe param" "maybe type" "temp"
          (690424 'move' call_tmp[690421](186838 call == this[186756] memory_order_release[186987]))
          unknown call_tmp[690426] "expr temp" "maybe param" "maybe type" "temp"
          (690429 'move' call_tmp[690426](186944 call _cond_test call_tmp[690421]))
          if call_tmp[690426]
          {
            (186858 call <~> ch[186752] "memory_order_release")
          }
          {
            unknown call_tmp[690431] "expr temp" "maybe param" "maybe type" "temp"
            (690434 'move' call_tmp[690431](186863 call == this[186756] memory_order_acq_rel[186992]))
            unknown call_tmp[690436] "expr temp" "maybe param" "maybe type" "temp"
            (690439 'move' call_tmp[690436](186938 call _cond_test call_tmp[690431]))
            if call_tmp[690436]
            {
              (186883 call <~> ch[186752] "memory_order_acq_rel")
            }
            {
              unknown call_tmp[690441] "expr temp" "maybe param" "maybe type" "temp"
              (690444 'move' call_tmp[690441](186888 call == this[186756] memory_order_seq_cst[186997]))
              unknown call_tmp[690446] "expr temp" "maybe param" "maybe type" "temp"
              (690449 'move' call_tmp[690446](186932 call _cond_test call_tmp[690441]))
              if call_tmp[690446]
              {
                (186908 call <~> ch[186752] "memory_order_seq_cst")
              }
              {
                (186929 call <~> ch[186752] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
    (523987 return _void[55])
  }
  const memory_order_relaxed[186972] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186977] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acquire[186982] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_release[186987] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186992] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_seq_cst[186997] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[187012] def seqCst[187002]:memoryOrder[187012] def acqRel[187004]:memoryOrder[187012] def release[187006]:memoryOrder[187012] def acquire[187008]:memoryOrder[187012] def relaxed[187010]:memoryOrder[187012]
  function readableOrder[187021](param arg order[187018]:memoryOrder[187012]) param : _unknown[51]
  {
    unknown ret[523991] "RVV" "param" "temp"
    unknown tmp[429526] "maybe param" "temp"
    (429537 'move' tmp[429526](187028 call == order[187018] release[187006]))
    unknown call_tmp[690451] "expr temp" "maybe param" "maybe type" "temp"
    (690454 'move' call_tmp[690451](429539 call _cond_invalid tmp[429526]))
    if call_tmp[690451]
    {
      (429542 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[572105] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572106] "maybe param" "temp"
    unknown call_tmp[690456] "expr temp" "maybe param" "maybe type" "temp"
    (690459 'move' call_tmp[690456](429527 call isTrue tmp[429526]))
    (572111 'move' tmp[572106](572109 call _cond_test call_tmp[690456]))
    if tmp[572106]
    {
      (572116 'move' tmp[572105](572113 '_paramFoldLogical' tmp[572106] 1))
    }
    {
      unknown tmp[572118] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690461] "expr temp" "maybe param" "maybe type" "temp"
      (690464 'move' call_tmp[690461](187037 call == order[187018] acqRel[187004]))
      (572120 'move' tmp[572118](429531 call isTrue call_tmp[690461]))
      (572125 'move' tmp[572105](572122 '_paramFoldLogical' tmp[572106] tmp[572118]))
    }
    unknown call_tmp[690466] "expr temp" "maybe param" "maybe type" "temp"
    (690469 'move' call_tmp[690466](187052 call _cond_test tmp[572105]))
    if call_tmp[690466]
    {
      (523996 'move' ret[523991](523995 'deref' acquire[187008]))
      gotoReturn _end_readableOrder[523989] _end_readableOrder[523989]
    }
    {
      (524001 'move' ret[523991](524000 'deref' order[187018]))
      gotoReturn _end_readableOrder[523989] _end_readableOrder[523989]
    }
    label _end_readableOrder[523989]
    (523993 return ret[523991])
  }
  function c_memory_order[187065](param arg order[187062]:memoryOrder[187012]) : _unknown[51] "inline"
  {
    unknown ret[524007] "RVV" "temp"
    {
      unknown tmp[187158] "expr temp" "maybe param" "maybe type" "temp"
      (187160 'move' tmp[187158] order[187062])
      unknown call_tmp[690471] "expr temp" "maybe param" "maybe type" "temp"
      (690474 'move' call_tmp[690471](187162 call == tmp[187158] relaxed[187010]))
      unknown call_tmp[690476] "expr temp" "maybe param" "maybe type" "temp"
      (690479 'move' call_tmp[690476](187165 call _cond_test call_tmp[690471]))
      if call_tmp[690476]
      {
        (524012 'move' ret[524007](524011 'deref' memory_order_relaxed[186972]))
        gotoReturn _end_c_memory_order[524005] _end_c_memory_order[524005]
      }
      {
        unknown call_tmp[690481] "expr temp" "maybe param" "maybe type" "temp"
        (690484 'move' call_tmp[690481](187168 call == tmp[187158] acquire[187008]))
        unknown call_tmp[690486] "expr temp" "maybe param" "maybe type" "temp"
        (690489 'move' call_tmp[690486](187171 call _cond_test call_tmp[690481]))
        if call_tmp[690486]
        {
          (524017 'move' ret[524007](524016 'deref' memory_order_acquire[186982]))
          gotoReturn _end_c_memory_order[524005] _end_c_memory_order[524005]
        }
        {
          unknown call_tmp[690491] "expr temp" "maybe param" "maybe type" "temp"
          (690494 'move' call_tmp[690491](187175 call == tmp[187158] release[187006]))
          unknown call_tmp[690496] "expr temp" "maybe param" "maybe type" "temp"
          (690499 'move' call_tmp[690496](187178 call _cond_test call_tmp[690491]))
          if call_tmp[690496]
          {
            (524022 'move' ret[524007](524021 'deref' memory_order_release[186987]))
            gotoReturn _end_c_memory_order[524005] _end_c_memory_order[524005]
          }
          {
            unknown call_tmp[690501] "expr temp" "maybe param" "maybe type" "temp"
            (690504 'move' call_tmp[690501](187182 call == tmp[187158] acqRel[187004]))
            unknown call_tmp[690506] "expr temp" "maybe param" "maybe type" "temp"
            (690509 'move' call_tmp[690506](187185 call _cond_test call_tmp[690501]))
            if call_tmp[690506]
            {
              (524027 'move' ret[524007](524026 'deref' memory_order_acq_rel[186992]))
              gotoReturn _end_c_memory_order[524005] _end_c_memory_order[524005]
            }
            {
              unknown call_tmp[690511] "expr temp" "maybe param" "maybe type" "temp"
              (690514 'move' call_tmp[690511](187189 call == tmp[187158] seqCst[187002]))
              unknown call_tmp[690516] "expr temp" "maybe param" "maybe type" "temp"
              (690519 'move' call_tmp[690516](187192 call _cond_test call_tmp[690511]))
              if call_tmp[690516]
              {
                (524032 'move' ret[524007](524031 'deref' memory_order_seq_cst[186997]))
                gotoReturn _end_c_memory_order[524005] _end_c_memory_order[524005]
              }
              {
                (187152 call exhaustiveSelectHalt module=[255] HaltWrappers[210018] "Invalid memoryOrder")
                (361905 'referenced modules list' HaltWrappers[210018])
              }
            }
          }
        }
      }
    }
    label _end_c_memory_order[524005]
    (524009 return ret[524007])
    (355263 'used modules list'(187068 'import' HaltWrappers[210018]))
  }
  function chpl_rmem_consist_release[187201]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524036 return _void[55])
  }
  function chpl_rmem_consist_acquire[187207]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524038 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187217](arg order[187214]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524040 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187227](param arg order[187224]:memoryOrder[187012]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690521] "expr temp" "maybe param" "maybe type" "temp"
    (690524 'move' call_tmp[690521](187233 call c_memory_order order[187224]))
    (187235 call chpl_rmem_consist_maybe_release call_tmp[690521])
    (524042 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187246](arg order[187243]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524044 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187256](param arg order[187253]:memoryOrder[187012]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690526] "expr temp" "maybe param" "maybe type" "temp"
    (690529 'move' call_tmp[690526](187262 call c_memory_order order[187253]))
    (187264 call chpl_rmem_consist_maybe_acquire call_tmp[690526])
    (524046 return _void[55])
  }
  function chpl_rmem_consist_fence[187275](arg order[187272]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
    (524048 return _void[55])
  }
  function chpl_rmem_consist_fence[187285](param arg order[187282]:memoryOrder[187012]) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[690531] "expr temp" "maybe param" "maybe type" "temp"
    (690534 'move' call_tmp[690531](187291 call c_memory_order order[187282]))
    (187293 call chpl_rmem_consist_fence call_tmp[690531])
    (524050 return _void[55])
  }
}