AST dump for ChapelBase after pass refPropagation.
Module use list: ChapelStandard ChapelEnv SysCTypes HaltWrappers 

{
  type _class_localscoforall_fn[2025794] val _runtime_hdr[2025795]:chpl_task_bundle_t[209320] val _0_len[2025797]:int(64)[13] val _1_numChunks[2025799]:int(64)[13] val _2_call_tmp[2025801]:range(int(64),bounded,false)[1023946] val _3_chunk[2025803]:int(64)[13] val _4__coforallCount[2025805]:_EndCount(AtomicT(int(64)),int(64))[943272] val _5_x[2025807]:_ddata(uint(64))[1539178]
  type _class_localscoforall_fn[2025639] val _runtime_hdr[2025640]:chpl_task_bundle_t[209320] val _0_len[2025642]:int(64)[13] val _1_numChunks[2025644]:int(64)[13] val _2_call_tmp[2025646]:range(int(64),bounded,false)[1023946] val _3_chunk[2025648]:int(64)[13] val _4__coforallCount[2025650]:_EndCount(AtomicT(int(64)),int(64))[943272] val _5_x[2025652]:_ddata(int(64))[1520710]
  type _class_localscoforall_fn[2025484] val _runtime_hdr[2025485]:chpl_task_bundle_t[209320] val _0_len[2025487]:int(64)[13] val _1_numChunks[2025489]:int(64)[13] val _2_call_tmp[2025491]:range(int(64),bounded,false)[1023946] val _3_chunk[2025493]:int(64)[13] val _4__coforallCount[2025495]:_EndCount(AtomicT(int(64)),int(64))[943272] val _5_x[2025497]:_ddata(real(64))[1353617]
  type _class_localscoforall_fn[2025329] val _runtime_hdr[2025330]:chpl_task_bundle_t[209320] val _0_len[2025332]:int(64)[13] val _1_numChunks[2025334]:int(64)[13] val _2_call_tmp[2025336]:range(int(64),bounded,false)[1023946] val _3_chunk[2025338]:int(64)[13] val _4__coforallCount[2025340]:_EndCount(AtomicT(int(64)),int(64))[943272] val _5_x[2025342]:_ddata(unmanaged localesSignal?)[1313711]
  type _class_localscoforall_fn[2025174] val _runtime_hdr[2025175]:chpl_task_bundle_t[209320] val _0_len[2025177]:int(64)[13] val _1_numChunks[2025179]:int(64)[13] val _2_call_tmp[2025181]:range(int(64),bounded,false)[1023946] val _3_chunk[2025183]:int(64)[13] val _4__coforallCount[2025185]:_EndCount(AtomicT(int(64)),int(64))[943272] val _5_x[2025187]:_ddata(locale)[1251892]
  function chpl__init_ChapelBase[415952]() : void[4] "insert line file info" "module init" "resolved"
  {
    (539673 'move' rootLocaleInitialized[310] 0)
    (539731 'move' chpl_arrayInitMethod[11173] heuristicInit[11144])
    (594610 'move' call_tmp[594607](19835 'cast' chpl_ModuleDeinit[19824] nil[44]))
    (539929 'move' chpl_moduleDeinitFuns[19837] call_tmp[594607])
    (501571 return _void[55])
  }
  val rootLocaleInitialized[310]:bool[10] "dead at end of block" "insert auto destroy" "locale private" "no doc"
  function chpl_config_has_value[334](const in arg name[331]:c_string[19], const in arg module_name[337]:c_string[19]) : bool[10] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[493351]:bool[10] "RVV" "temp"
    (493353 return ret[493351])
  }
  function chpl_config_get_value[350](const in arg name[347]:c_string[19], const in arg module_name[353]:c_string[19]) : c_string[19] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    val ret[493357]:c_string[19] "RVV" "temp"
    (493359 return ret[493357])
  }
  function object[22].deinit[749418](const in arg this[749422]:object[22]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    (749430 return _void[55])
  }
  type object[22]
  type iterKind[453] def leader[447]:iterKind[453] def follower[449]:iterKind[453] def standalone[451]:iterKind[453]
  type ArrayInit[11152] def heuristicInit[11144]:ArrayInit[11152] def noInit[11146]:ArrayInit[11152] def serialInit[11148]:ArrayInit[11152] def parallelInit[11150]:ArrayInit[11152]
  const-val chpl_arrayInitMethod[11173]:ArrayInit[11152] "dead at end of block" "insert auto destroy" "private"
  function init_elts_method[1216299](const in arg s[1216301]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1216305]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1216315]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2035969]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2035971 'move' ret[2035969] heuristicInit[11144])
    (1216317 'move' call_tmp[1216315] ret[2035969])
    val initMethod[1216321]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1216323 'move' initMethod[1216321] call_tmp[1216315])
    const-val call_tmp[1216327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047490]:int(64)[13] "temp"
    (2047493 'move' inlineImm[2047490] 0)
    const-val call_tmp[2047496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047498 'move' call_tmp[2047496](2047500 '==' s[1216301] inlineImm[2047490]))
    (1216329 'move' call_tmp[1216327] call_tmp[2047496])
    const-val call_tmp[1216335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1216337 'move' call_tmp[1216335] call_tmp[1216327])
    if call_tmp[1216335]
    {
      (2191857 '=' initMethod[1216321] noInit[11146])
    }
    {
      const-val call_tmp[1216351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2034805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2034807 'move' call_tmp[2034805](2034809 '!' rootLocaleInitialized[310]))
      (1216353 'move' call_tmp[1216351] call_tmp[2034805])
      const-val call_tmp[1216358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1216360 'move' call_tmp[1216358] call_tmp[1216351])
      if call_tmp[1216358]
      {
        (2191869 '=' initMethod[1216321] serialInit[11148])
      }
      {
        const-val call_tmp[1216374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192189 'move' call_tmp[2192187](2192191 '==' initMethod[1216321] heuristicInit[11144]))
        (1216376 'move' call_tmp[1216374] call_tmp[2192187])
        const-val call_tmp[1216382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1216384 'move' call_tmp[1216382] call_tmp[1216374])
        if call_tmp[1216382]
        {
          const-val elemsizeInBytes[1216391]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1216393]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[1216424]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1216426]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2192467]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2192469 'move' call_tmp[2192467](2192472 call sizeof[1217881] chpl_TableEntry(unmanaged BaseDom,nothing)[1205637]))
          (1216428 'move' call_tmp[1216426] call_tmp[2192467])
          const-val call_tmp[2131172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131174 'move' call_tmp[2131172](2131176 '>' call_tmp[1216426] 9223372036854775807))
          if call_tmp[2131172]
          {
            (2131182 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
          }
          const-val call_tmp[2131185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131187 'move' call_tmp[2131185](2131189 'cast' int(64)[13] call_tmp[1216426]))
          (1216433 'move' tmp[1216424] call_tmp[2131185])
          (1216441 'move' tmp[1216393] tmp[1216424])
          (1216447 'move' elemsizeInBytes[1216391] tmp[1216393])
          const-val call_tmp[1216451]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1216453 'move' call_tmp[1216451] s[1216301])
          const-val call_tmp[1216461]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126059]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126061 'move' call_tmp[2126059](2126063 '*' call_tmp[1216451] elemsizeInBytes[1216391]))
          (1216463 'move' call_tmp[1216461] call_tmp[2126059])
          const-val arrsizeInBytes[1216469]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1216471 'move' arrsizeInBytes[1216469] call_tmp[1216461])
          const-val call_tmp[1216497]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042381]:int(64)[13] "temp"
          (2042384 'move' inlineImm[2042381] 2097152)
          const-val call_tmp[2042387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042389 'move' call_tmp[2042387](2042391 '>' arrsizeInBytes[1216469] inlineImm[2042381]))
          (1216499 'move' call_tmp[1216497] call_tmp[2042387])
          const-val heuristicWantsPar[1216505]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1216507 'move' heuristicWantsPar[1216505] call_tmp[1216497])
          const-val call_tmp[1216513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1216515 'move' call_tmp[1216513] heuristicWantsPar[1216505])
          if call_tmp[1216513]
          {
            (2191881 '=' initMethod[1216321] parallelInit[11150])
          }
          {
            (2191893 '=' initMethod[1216321] serialInit[11148])
          }
        }
      }
    }
    (1216539 'move' ret[1216305] initMethod[1216321])
    label _end_init_elts_method[1216547]
    (1216549 return ret[1216305])
  }
  function init_elts_method[1245470](const in arg s[1245472]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1245476]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1245486]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2035979]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2035981 'move' ret[2035979] heuristicInit[11144])
    (1245488 'move' call_tmp[1245486] ret[2035979])
    val initMethod[1245492]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1245494 'move' initMethod[1245492] call_tmp[1245486])
    const-val call_tmp[1245498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047605]:int(64)[13] "temp"
    (2047608 'move' inlineImm[2047605] 0)
    const-val call_tmp[2047611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047613 'move' call_tmp[2047611](2047615 '==' s[1245472] inlineImm[2047605]))
    (1245500 'move' call_tmp[1245498] call_tmp[2047611])
    const-val call_tmp[1245506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1245508 'move' call_tmp[1245506] call_tmp[1245498])
    if call_tmp[1245506]
    {
      (2191905 '=' initMethod[1245492] noInit[11146])
    }
    {
      const-val call_tmp[1245522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2034850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2034852 'move' call_tmp[2034850](2034854 '!' rootLocaleInitialized[310]))
      (1245524 'move' call_tmp[1245522] call_tmp[2034850])
      const-val call_tmp[1245529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1245531 'move' call_tmp[1245529] call_tmp[1245522])
      if call_tmp[1245529]
      {
        (2191917 '=' initMethod[1245492] serialInit[11148])
      }
      {
        const-val call_tmp[1245545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192229 'move' call_tmp[2192227](2192231 '==' initMethod[1245492] heuristicInit[11144]))
        (1245547 'move' call_tmp[1245545] call_tmp[2192227])
        const-val call_tmp[1245553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1245555 'move' call_tmp[1245553] call_tmp[1245545])
        if call_tmp[1245553]
        {
          const-val elemsizeInBytes[1245562]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1245564]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[1245595]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1245597]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2198164]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2198166 'move' call_tmp[2198164](2198169 call sizeof[1246966] chpl_TableEntry(unmanaged BaseArr,nothing)[1205337]))
          (1245599 'move' call_tmp[1245597] call_tmp[2198164])
          const-val call_tmp[2131195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131197 'move' call_tmp[2131195](2131199 '>' call_tmp[1245597] 9223372036854775807))
          if call_tmp[2131195]
          {
            (2131205 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
          }
          const-val call_tmp[2131208]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131210 'move' call_tmp[2131208](2131212 'cast' int(64)[13] call_tmp[1245597]))
          (1245604 'move' tmp[1245595] call_tmp[2131208])
          (1245612 'move' tmp[1245564] tmp[1245595])
          (1245618 'move' elemsizeInBytes[1245562] tmp[1245564])
          const-val call_tmp[1245622]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1245624 'move' call_tmp[1245622] s[1245472])
          const-val call_tmp[1245632]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126091 'move' call_tmp[2126089](2126093 '*' call_tmp[1245622] elemsizeInBytes[1245562]))
          (1245634 'move' call_tmp[1245632] call_tmp[2126089])
          const-val arrsizeInBytes[1245640]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1245642 'move' arrsizeInBytes[1245640] call_tmp[1245632])
          const-val call_tmp[1245668]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042441]:int(64)[13] "temp"
          (2042444 'move' inlineImm[2042441] 2097152)
          const-val call_tmp[2042447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042449 'move' call_tmp[2042447](2042451 '>' arrsizeInBytes[1245640] inlineImm[2042441]))
          (1245670 'move' call_tmp[1245668] call_tmp[2042447])
          const-val heuristicWantsPar[1245676]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1245678 'move' heuristicWantsPar[1245676] call_tmp[1245668])
          const-val call_tmp[1245684]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1245686 'move' call_tmp[1245684] heuristicWantsPar[1245676])
          if call_tmp[1245684]
          {
            (2191929 '=' initMethod[1245492] parallelInit[11150])
          }
          {
            (2191941 '=' initMethod[1245492] serialInit[11148])
          }
        }
      }
    }
    (1245710 'move' ret[1245476] initMethod[1245492])
    label _end_init_elts_method[1245718]
    (1245720 return ret[1245476])
  }
  function init_elts_method[1257258](const in arg s[1257260]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1257264]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1257274]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2035989]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2035991 'move' ret[2035989] heuristicInit[11144])
    (1257276 'move' call_tmp[1257274] ret[2035989])
    val initMethod[1257280]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1257282 'move' initMethod[1257280] call_tmp[1257274])
    const-val call_tmp[1257286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047620]:int(64)[13] "temp"
    (2047623 'move' inlineImm[2047620] 0)
    const-val call_tmp[2047626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047628 'move' call_tmp[2047626](2047630 '==' s[1257260] inlineImm[2047620]))
    (1257288 'move' call_tmp[1257286] call_tmp[2047626])
    const-val call_tmp[1257294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1257296 'move' call_tmp[1257294] call_tmp[1257286])
    if call_tmp[1257294]
    {
      (2191953 '=' initMethod[1257280] noInit[11146])
    }
    {
      const-val call_tmp[1257310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2034859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2034861 'move' call_tmp[2034859](2034863 '!' rootLocaleInitialized[310]))
      (1257312 'move' call_tmp[1257310] call_tmp[2034859])
      const-val call_tmp[1257317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1257319 'move' call_tmp[1257317] call_tmp[1257310])
      if call_tmp[1257317]
      {
        (2191965 '=' initMethod[1257280] serialInit[11148])
      }
      {
        const-val call_tmp[1257333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192269 'move' call_tmp[2192267](2192271 '==' initMethod[1257280] heuristicInit[11144]))
        (1257335 'move' call_tmp[1257333] call_tmp[2192267])
        const-val call_tmp[1257341]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1257343 'move' call_tmp[1257341] call_tmp[1257333])
        if call_tmp[1257341]
        {
          const-val elemsizeInBytes[1257350]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1257352]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[1257383]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1257385]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2200739]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2200741 'move' call_tmp[2200739](2200744 call sizeof[1258754] locale[28]))
          (1257387 'move' call_tmp[1257385] call_tmp[2200739])
          const-val call_tmp[2131218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131220 'move' call_tmp[2131218](2131222 '>' call_tmp[1257385] 9223372036854775807))
          if call_tmp[2131218]
          {
            (2131228 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
          }
          const-val call_tmp[2131231]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131233 'move' call_tmp[2131231](2131235 'cast' int(64)[13] call_tmp[1257385]))
          (1257392 'move' tmp[1257383] call_tmp[2131231])
          (1257400 'move' tmp[1257352] tmp[1257383])
          (1257406 'move' elemsizeInBytes[1257350] tmp[1257352])
          const-val call_tmp[1257410]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1257412 'move' call_tmp[1257410] s[1257260])
          const-val call_tmp[1257420]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126121 'move' call_tmp[2126119](2126123 '*' call_tmp[1257410] elemsizeInBytes[1257350]))
          (1257422 'move' call_tmp[1257420] call_tmp[2126119])
          const-val arrsizeInBytes[1257428]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1257430 'move' arrsizeInBytes[1257428] call_tmp[1257420])
          const-val call_tmp[1257456]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042456]:int(64)[13] "temp"
          (2042459 'move' inlineImm[2042456] 2097152)
          const-val call_tmp[2042462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042464 'move' call_tmp[2042462](2042466 '>' arrsizeInBytes[1257428] inlineImm[2042456]))
          (1257458 'move' call_tmp[1257456] call_tmp[2042462])
          const-val heuristicWantsPar[1257464]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1257466 'move' heuristicWantsPar[1257464] call_tmp[1257456])
          const-val call_tmp[1257472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1257474 'move' call_tmp[1257472] heuristicWantsPar[1257464])
          if call_tmp[1257472]
          {
            (2191977 '=' initMethod[1257280] parallelInit[11150])
          }
          {
            (2191989 '=' initMethod[1257280] serialInit[11148])
          }
        }
      }
    }
    (1257498 'move' ret[1257264] initMethod[1257280])
    label _end_init_elts_method[1257506]
    (1257508 return ret[1257264])
  }
  function init_elts_method[1317632](const in arg s[1317634]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1317638]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1317648]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2035999]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2036001 'move' ret[2035999] heuristicInit[11144])
    (1317650 'move' call_tmp[1317648] ret[2035999])
    val initMethod[1317654]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1317656 'move' initMethod[1317654] call_tmp[1317648])
    const-val call_tmp[1317660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047680]:int(64)[13] "temp"
    (2047683 'move' inlineImm[2047680] 0)
    const-val call_tmp[2047686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047688 'move' call_tmp[2047686](2047690 '==' s[1317634] inlineImm[2047680]))
    (1317662 'move' call_tmp[1317660] call_tmp[2047686])
    const-val call_tmp[1317668]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317670 'move' call_tmp[1317668] call_tmp[1317660])
    if call_tmp[1317668]
    {
      (2192001 '=' initMethod[1317654] noInit[11146])
    }
    {
      const-val call_tmp[1317684]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2034877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2034879 'move' call_tmp[2034877](2034881 '!' rootLocaleInitialized[310]))
      (1317686 'move' call_tmp[1317684] call_tmp[2034877])
      const-val call_tmp[1317691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1317693 'move' call_tmp[1317691] call_tmp[1317684])
      if call_tmp[1317691]
      {
        (2192013 '=' initMethod[1317654] serialInit[11148])
      }
      {
        const-val call_tmp[1317707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192309 'move' call_tmp[2192307](2192311 '==' initMethod[1317654] heuristicInit[11144]))
        (1317709 'move' call_tmp[1317707] call_tmp[2192307])
        const-val call_tmp[1317715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1317717 'move' call_tmp[1317715] call_tmp[1317707])
        if call_tmp[1317715]
        {
          const-val elemsizeInBytes[1317724]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val tmp[1317726]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val tmp[1317757]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1317759]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2212229]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2212231 'move' call_tmp[2212229](2212234 call sizeof[1319128] localesSignal[92283]))
          (1317761 'move' call_tmp[1317759] call_tmp[2212229])
          const-val call_tmp[2131264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131266 'move' call_tmp[2131264](2131268 '>' call_tmp[1317759] 9223372036854775807))
          if call_tmp[2131264]
          {
            (2131274 call safeCastCheckHalt[210132] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
          }
          const-val call_tmp[2131277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2131279 'move' call_tmp[2131277](2131281 'cast' int(64)[13] call_tmp[1317759]))
          (1317766 'move' tmp[1317757] call_tmp[2131277])
          (1317774 'move' tmp[1317726] tmp[1317757])
          (1317780 'move' elemsizeInBytes[1317724] tmp[1317726])
          const-val call_tmp[1317784]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1317786 'move' call_tmp[1317784] s[1317634])
          const-val call_tmp[1317794]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126161 'move' call_tmp[2126159](2126163 '*' call_tmp[1317784] elemsizeInBytes[1317724]))
          (1317796 'move' call_tmp[1317794] call_tmp[2126159])
          const-val arrsizeInBytes[1317802]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1317804 'move' arrsizeInBytes[1317802] call_tmp[1317794])
          const-val call_tmp[1317830]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042551]:int(64)[13] "temp"
          (2042554 'move' inlineImm[2042551] 2097152)
          const-val call_tmp[2042557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042559 'move' call_tmp[2042557](2042561 '>' arrsizeInBytes[1317802] inlineImm[2042551]))
          (1317832 'move' call_tmp[1317830] call_tmp[2042557])
          const-val heuristicWantsPar[1317838]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1317840 'move' heuristicWantsPar[1317838] call_tmp[1317830])
          const-val call_tmp[1317846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1317848 'move' call_tmp[1317846] heuristicWantsPar[1317838])
          if call_tmp[1317846]
          {
            (2192025 '=' initMethod[1317654] parallelInit[11150])
          }
          {
            (2192037 '=' initMethod[1317654] serialInit[11148])
          }
        }
      }
    }
    (1317872 'move' ret[1317638] initMethod[1317654])
    label _end_init_elts_method[1317880]
    (1317882 return ret[1317638])
  }
  function init_elts_method[1357538](const in arg s[1357540]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1357544]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1357554]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2036009]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2036011 'move' ret[2036009] heuristicInit[11144])
    (1357556 'move' call_tmp[1357554] ret[2036009])
    val initMethod[1357560]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1357562 'move' initMethod[1357560] call_tmp[1357554])
    const-val call_tmp[1357566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047720]:int(64)[13] "temp"
    (2047723 'move' inlineImm[2047720] 0)
    const-val call_tmp[2047726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047728 'move' call_tmp[2047726](2047730 '==' s[1357540] inlineImm[2047720]))
    (1357568 'move' call_tmp[1357566] call_tmp[2047726])
    const-val call_tmp[1357574]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1357576 'move' call_tmp[1357574] call_tmp[1357566])
    if call_tmp[1357574]
    {
      (2192049 '=' initMethod[1357560] noInit[11146])
    }
    {
      const-val call_tmp[1357590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2034994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2034996 'move' call_tmp[2034994](2034998 '!' rootLocaleInitialized[310]))
      (1357592 'move' call_tmp[1357590] call_tmp[2034994])
      const-val call_tmp[1357597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1357599 'move' call_tmp[1357597] call_tmp[1357590])
      if call_tmp[1357597]
      {
        (2192061 '=' initMethod[1357560] serialInit[11148])
      }
      {
        const-val call_tmp[1357613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192347]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192349 'move' call_tmp[2192347](2192351 '==' initMethod[1357560] heuristicInit[11144]))
        (1357615 'move' call_tmp[1357613] call_tmp[2192347])
        const-val call_tmp[1357621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1357623 'move' call_tmp[1357621] call_tmp[1357613])
        if call_tmp[1357621]
        {
          const-val elemsizeInBytes[1357630]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1357686 'move' elemsizeInBytes[1357630] 8)
          const-val call_tmp[1357690]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1357692 'move' call_tmp[1357690] s[1357540])
          const-val call_tmp[1357700]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126199]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126201 'move' call_tmp[2126199](2126203 '*' call_tmp[1357690] elemsizeInBytes[1357630]))
          (1357702 'move' call_tmp[1357700] call_tmp[2126199])
          const-val arrsizeInBytes[1357708]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1357710 'move' arrsizeInBytes[1357708] call_tmp[1357700])
          const-val call_tmp[1357736]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042606]:int(64)[13] "temp"
          (2042609 'move' inlineImm[2042606] 2097152)
          const-val call_tmp[2042612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042614 'move' call_tmp[2042612](2042616 '>' arrsizeInBytes[1357708] inlineImm[2042606]))
          (1357738 'move' call_tmp[1357736] call_tmp[2042612])
          const-val heuristicWantsPar[1357744]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1357746 'move' heuristicWantsPar[1357744] call_tmp[1357736])
          const-val call_tmp[1357752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1357754 'move' call_tmp[1357752] heuristicWantsPar[1357744])
          if call_tmp[1357752]
          {
            (2192073 '=' initMethod[1357560] parallelInit[11150])
          }
          {
            (2192085 '=' initMethod[1357560] serialInit[11148])
          }
        }
      }
    }
    (1357778 'move' ret[1357544] initMethod[1357560])
    label _end_init_elts_method[1357786]
    (1357788 return ret[1357544])
  }
  function init_elts_method[1524631](const in arg s[1524633]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1524637]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1524647]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2036019]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2036021 'move' ret[2036019] heuristicInit[11144])
    (1524649 'move' call_tmp[1524647] ret[2036019])
    val initMethod[1524653]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1524655 'move' initMethod[1524653] call_tmp[1524647])
    const-val call_tmp[1524659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047840]:int(64)[13] "temp"
    (2047843 'move' inlineImm[2047840] 0)
    const-val call_tmp[2047846]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047848 'move' call_tmp[2047846](2047850 '==' s[1524633] inlineImm[2047840]))
    (1524661 'move' call_tmp[1524659] call_tmp[2047846])
    const-val call_tmp[1524667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1524669 'move' call_tmp[1524667] call_tmp[1524659])
    if call_tmp[1524667]
    {
      (2192097 '=' initMethod[1524653] noInit[11146])
    }
    {
      const-val call_tmp[1524683]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2035084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2035086 'move' call_tmp[2035084](2035088 '!' rootLocaleInitialized[310]))
      (1524685 'move' call_tmp[1524683] call_tmp[2035084])
      const-val call_tmp[1524690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1524692 'move' call_tmp[1524690] call_tmp[1524683])
      if call_tmp[1524690]
      {
        (2192109 '=' initMethod[1524653] serialInit[11148])
      }
      {
        const-val call_tmp[1524706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192389 'move' call_tmp[2192387](2192391 '==' initMethod[1524653] heuristicInit[11144]))
        (1524708 'move' call_tmp[1524706] call_tmp[2192387])
        const-val call_tmp[1524714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1524716 'move' call_tmp[1524714] call_tmp[1524706])
        if call_tmp[1524714]
        {
          const-val elemsizeInBytes[1524723]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1524779 'move' elemsizeInBytes[1524723] 8)
          const-val call_tmp[1524783]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1524785 'move' call_tmp[1524783] s[1524633])
          const-val call_tmp[1524793]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126261 'move' call_tmp[2126259](2126263 '*' call_tmp[1524783] elemsizeInBytes[1524723]))
          (1524795 'move' call_tmp[1524793] call_tmp[2126259])
          const-val arrsizeInBytes[1524801]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1524803 'move' arrsizeInBytes[1524801] call_tmp[1524793])
          const-val call_tmp[1524829]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042781]:int(64)[13] "temp"
          (2042784 'move' inlineImm[2042781] 2097152)
          const-val call_tmp[2042787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042789 'move' call_tmp[2042787](2042791 '>' arrsizeInBytes[1524801] inlineImm[2042781]))
          (1524831 'move' call_tmp[1524829] call_tmp[2042787])
          const-val heuristicWantsPar[1524837]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1524839 'move' heuristicWantsPar[1524837] call_tmp[1524829])
          const-val call_tmp[1524845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1524847 'move' call_tmp[1524845] heuristicWantsPar[1524837])
          if call_tmp[1524845]
          {
            (2192121 '=' initMethod[1524653] parallelInit[11150])
          }
          {
            (2192133 '=' initMethod[1524653] serialInit[11148])
          }
        }
      }
    }
    (1524871 'move' ret[1524637] initMethod[1524653])
    label _end_init_elts_method[1524879]
    (1524881 return ret[1524637])
  }
  function init_elts_method[1543099](const in arg s[1543101]:int(64)[13]) : ArrayInit[11152] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1543105]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1543115]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    val ret[2036029]:ArrayInit[11152] "dead after last mention" "RVV" "temp"
    (2036031 'move' ret[2036029] heuristicInit[11144])
    (1543117 'move' call_tmp[1543115] ret[2036029])
    val initMethod[1543121]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1543123 'move' initMethod[1543121] call_tmp[1543115])
    const-val call_tmp[1543127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047855]:int(64)[13] "temp"
    (2047858 'move' inlineImm[2047855] 0)
    const-val call_tmp[2047861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047863 'move' call_tmp[2047861](2047865 '==' s[1543101] inlineImm[2047855]))
    (1543129 'move' call_tmp[1543127] call_tmp[2047861])
    const-val call_tmp[1543135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1543137 'move' call_tmp[1543135] call_tmp[1543127])
    if call_tmp[1543135]
    {
      (2192145 '=' initMethod[1543121] noInit[11146])
    }
    {
      const-val call_tmp[1543151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2035093]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2035095 'move' call_tmp[2035093](2035097 '!' rootLocaleInitialized[310]))
      (1543153 'move' call_tmp[1543151] call_tmp[2035093])
      const-val call_tmp[1543158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1543160 'move' call_tmp[1543158] call_tmp[1543151])
      if call_tmp[1543158]
      {
        (2192157 '=' initMethod[1543121] serialInit[11148])
      }
      {
        const-val call_tmp[1543174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192429 'move' call_tmp[2192427](2192431 '==' initMethod[1543121] heuristicInit[11144]))
        (1543176 'move' call_tmp[1543174] call_tmp[2192427])
        const-val call_tmp[1543182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1543184 'move' call_tmp[1543182] call_tmp[1543174])
        if call_tmp[1543182]
        {
          const-val elemsizeInBytes[1543191]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1543247 'move' elemsizeInBytes[1543191] 8)
          const-val call_tmp[1543251]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1543253 'move' call_tmp[1543251] s[1543101])
          const-val call_tmp[1543261]:int(64)[13] "dead at end of block" "maybe param" "temp"
          const-val call_tmp[2126299]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126301 'move' call_tmp[2126299](2126303 '*' call_tmp[1543251] elemsizeInBytes[1543191]))
          (1543263 'move' call_tmp[1543261] call_tmp[2126299])
          const-val arrsizeInBytes[1543269]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1543271 'move' arrsizeInBytes[1543269] call_tmp[1543261])
          const-val call_tmp[1543297]:bool[10] "dead at end of block" "maybe param" "temp"
          val inlineImm[2042811]:int(64)[13] "temp"
          (2042814 'move' inlineImm[2042811] 2097152)
          const-val call_tmp[2042817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2042819 'move' call_tmp[2042817](2042821 '>' arrsizeInBytes[1543269] inlineImm[2042811]))
          (1543299 'move' call_tmp[1543297] call_tmp[2042817])
          const-val heuristicWantsPar[1543305]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (1543307 'move' heuristicWantsPar[1543305] call_tmp[1543297])
          const-val call_tmp[1543313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1543315 'move' call_tmp[1543313] heuristicWantsPar[1543305])
          if call_tmp[1543313]
          {
            (2192169 '=' initMethod[1543121] parallelInit[11150])
          }
          {
            (2192181 '=' initMethod[1543121] serialInit[11148])
          }
        }
      }
    }
    (1543339 'move' ret[1543105] initMethod[1543121])
    label _end_init_elts_method[1543347]
    (1543349 return ret[1543105])
  }
  function init_elts[1256977](const in arg x[1256979]:_ddata(locale)[1251892], const in arg s[1256981]:int(64)[13], const in arg lo[1257007]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1257020]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1257022 'move' call_tmp[1257020](1257025 call init_elts_method[1257258] s[1256981]))
    const-val initMethod[1257028]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1257030 'move' initMethod[1257028] call_tmp[1257020])
    const-val tmp[1257035]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1257037 'move' tmp[1257035] initMethod[1257028])
    const-val call_tmp[1257040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2192277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192279 'move' call_tmp[2192277](2192281 '==' tmp[1257035] noInit[11146]))
    (1257042 'move' call_tmp[1257040] call_tmp[2192277])
    const-val call_tmp[1257048]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1257050 'move' call_tmp[1257048] call_tmp[1257040])
    if call_tmp[1257048]
    {
      gotoReturn _end_init_elts[1257203] _end_init_elts[1257203]
    }
    {
      const-val call_tmp[1257060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2192287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2192289 'move' call_tmp[2192287](2192291 '==' tmp[1257035] serialInit[11148]))
      (1257062 'move' call_tmp[1257060] call_tmp[2192287])
      const-val call_tmp[1257068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1257070 'move' call_tmp[1257068] call_tmp[1257060])
      if call_tmp[1257068]
      {
        const-val call_tmp[1257082]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2063506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063508 'move' call_tmp[2063506](2063510 '-' s[1256981] 1))
        (1257084 'move' call_tmp[1257082] call_tmp[2063506])
        const-val call_tmp_F0_low[2255333]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2255335]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2255429]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2255431]:int(64)[13] "temp"
        const-val _ir_F0_low[2255813]:int(64)[13] "temp"
        const-val _ir_F1_high[2255815]:int(64)[13] "temp"
        (2193430 'move' _ir_F0_low[2255813] lo[1257007])
        (2193434 'move' _ir_F1_high[2255815] call_tmp[1257082])
        (2255437 'move' ret_tmp_F0_low[2255429] _ir_F0_low[2255813])
        (2255442 'move' ret_tmp_F1_high[2255431] _ir_F1_high[2255815])
        (2255341 'move' call_tmp_F0_low[2255333] ret_tmp_F0_low[2255429])
        (2255346 'move' call_tmp_F1_high[2255335] ret_tmp_F1_high[2255431])
        const-val _ic__F0_low[2247999]:int(64)[13] "temp"
        const-val _ic__F1_high[2248001]:int(64)[13] "temp"
        const-val tmp[2193832]:int(64)[13] "temp"
        (2193834 'move' tmp[2193832] call_tmp_F0_low[2255333])
        (2193839 'move' _ic__F0_low[2247999] tmp[2193832])
        const-val tmp[2193843]:int(64)[13] "temp"
        (2193845 'move' tmp[2193843] call_tmp_F1_high[2255335])
        (2193850 'move' _ic__F1_high[2248001] tmp[2193843])
        const-val call_tmp_F0_low[2263743]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2263745]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2263759]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2263761]:int(64)[13] "temp"
        const-val low[1861768]:int(64)[13] "temp"
        (1861773 'move' low[1861768] _ic__F0_low[2247999])
        const-val high[1861775]:int(64)[13] "temp"
        (1861780 'move' high[1861775] _ic__F1_high[2248001])
        const-val _ir_F0_low[2264959]:int(64)[13] "temp"
        const-val _ir_F1_high[2264961]:int(64)[13] "temp"
        (2101061 'move' _ir_F0_low[2264959] low[1861768])
        (2101065 'move' _ir_F1_high[2264961] high[1861775])
        (2263767 'move' ret_tmp_F0_low[2263759] _ir_F0_low[2264959])
        (2263772 'move' ret_tmp_F1_high[2263761] _ir_F1_high[2264961])
        (2263751 'move' call_tmp_F0_low[2263743] ret_tmp_F0_low[2263759])
        (2263756 'move' call_tmp_F1_high[2263745] ret_tmp_F1_high[2263761])
        const-val _ic__F0_low[2251145]:int(64)[13] "temp"
        const-val _ic__F1_high[2251147]:int(64)[13] "temp"
        const-val tmp[2102059]:int(64)[13] "temp"
        (2102061 'move' tmp[2102059] call_tmp_F0_low[2263743])
        (2102066 'move' _ic__F0_low[2251145] tmp[2102059])
        const-val tmp[2102070]:int(64)[13] "temp"
        (2102072 'move' tmp[2102070] call_tmp_F1_high[2263745])
        (2102077 'move' _ic__F1_high[2251147] tmp[2102070])
        val i[1861614]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1861618 'move' i[1861614] 0)
        const-val default_arg_first[1861623]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[1861625]:int(64)[13] "temp"
        (1861627 'move' low[1861625] _ic__F0_low[2251145])
        (1861632 'move' default_arg_first[1861623] low[1861625])
        const-val default_arg_last[1861637]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[1861639]:int(64)[13] "temp"
        (1861641 'move' high[1861639] _ic__F1_high[2251147])
        (1861646 'move' default_arg_last[1861637] high[1861639])
        const-val low[1861653]:int(64)[13] "temp"
        (1861655 'move' low[1861653] _ic__F0_low[2251145])
        const-val high[1861660]:int(64)[13] "temp"
        (1861662 'move' high[1861660] _ic__F1_high[2251147])
        (1861670 call chpl_checkIfRangeIterWillOverflow[1093055] low[1861653] high[1861660] 1 default_arg_first[1861623] default_arg_last[1861637] 1)
        CForLoop[1861677]
        {
          const-val _yieldedIndex[1861711]:int(64)[13] "temp"
          (1861713 'move' _yieldedIndex[1861711] i[1861614])
          const-val _yieldedIndex[1861746]:int(64)[13] "temp"
          (1861766 'move' _yieldedIndex[1861746] _yieldedIndex[1861711])
          const i[1861748]:int(64)[13] "const" "index var" "insert auto destroy"
          (1861750 'move' i[1861748] _yieldedIndex[1861746])
          val y[1861754]:locale[28] "dead at end of block" "no auto destroy" "unsafe"
          (1861757 call init[90004] y[1861754])
          (1861759 'array_set_first' x[1256979] i[1861748] y[1861754])
          {
            const-val low[1861679]:int(64)[13] "temp"
            (1861681 'move' low[1861679] _ic__F0_low[2251145])
            (1861686 '=' i[1861614] low[1861679])
          }
          {
            const-val high[1861690]:int(64)[13] "temp"
            (1861692 'move' high[1861690] _ic__F1_high[2251147])
            (1861697 '<=' i[1861614] high[1861690])
          }
          {
            (1861703 '+=' i[1861614] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[1861737]
        label _endchpl_direct_range_iter[1861742]
      }
      {
        const-val call_tmp[1257145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192299 'move' call_tmp[2192297](2192301 '==' tmp[1257035] parallelInit[11150]))
        (1257147 'move' call_tmp[1257145] call_tmp[2192297])
        const-val call_tmp[1257153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1257155 'move' call_tmp[1257153] call_tmp[1257145])
        if call_tmp[1257153]
        {
          const-val call_tmp[1257162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2063516]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2063518 'move' call_tmp[2063516](2063520 '-' s[1256981] 1))
          (1257164 'move' call_tmp[1257162] call_tmp[2063516])
          const-val call_tmp[1257170]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1784116]:range(int(64),bounded,false)[1023946] "temp"
          (1257175 call chpl_build_bounded_range[455195] lo[1257007] call_tmp[1257162] ret_tmp[1784116])
          (1784119 'move' call_tmp[1257170] ret_tmp[1784116])
          const-val x[1805783]:_ddata(locale)[1251892] "concurrently accessed" "const"
          (1805786 'move' x[1805783] x[1256979])
          const-val call_tmp[1805572]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1805574 'move' call_tmp[1805572](1805577 call size[1032912] call_tmp[1257170]))
          const-val len[1805579]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1805581 'move' len[1805579] call_tmp[1805572])
          const-val numChunks[1805584]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[1805586]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1805588]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1805590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1805592 'move' call_tmp[1805590](1805594 'task_get_serial'))
          (1805595 'move' tmp[1805588] call_tmp[1805590])
          if tmp[1805588]
          {
            (1805600 'move' tmp[1805586] 1)
          }
          {
            const-val tmp[1805604]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            (1805606 'move' tmp[1805604](1805609 call _computeNumChunks[1258820] len[1805579]))
            (1805611 'move' tmp[1805586] tmp[1805604])
          }
          (1805615 'move' numChunks[1805584] tmp[1805586])
          const-val call_tmp[1805618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2086183]:int(64)[13] "temp"
          (2086186 'move' inlineImm[2086183] 1)
          const-val call_tmp[2086189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2086191 'move' call_tmp[2086189](2086193 '<=' numChunks[1805584] inlineImm[2086183]))
          (1805620 'move' call_tmp[1805618] call_tmp[2086189])
          const-val call_tmp[1805626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1805628 'move' call_tmp[1805626] call_tmp[1805618])
          if call_tmp[1805626]
          {
            const-val call_tmp_F0_this[2252154]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141557]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141559 'move' coerce_tmp[2141557] call_tmp[1257170])
            const-val _ir_F0_this[2252162]:range(int(64),bounded,false)[1023946] "temp"
            (2141565 'move' _ir_F0_this[2252162] coerce_tmp[2141557])
            (2252160 'move' call_tmp_F0_this[2252154] _ir_F0_this[2252162])
            const-val _ic__F0_this[2252892]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141604]:range(int(64),bounded,false)[1023946] "temp"
            (2141606 'move' tmp[2141604] call_tmp_F0_this[2252154])
            (2141611 'move' _ic__F0_this[2252892] tmp[2141604])
            const-val this[1886660]:range(int(64),bounded,false)[1023946] "temp"
            (1886665 'move' this[1886660] _ic__F0_this[2252892])
            (1886540 call checkIfIterWillOverflow[1092793] this[1886660] 1)
            val i[1886543]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1886547 'move' i[1886543] 0)
            const-val this[1886667]:range(int(64),bounded,false)[1023946] "temp"
            (1886672 'move' this[1886667] _ic__F0_this[2252892])
            const-val coerce_tmp[1886559]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1886561 'move' coerce_tmp[1886559](2272545 '.v' this[1886667] _low[1023908]))
            (1886568 'noop')
            const-val this[1886674]:range(int(64),bounded,false)[1023946] "temp"
            (1886679 'move' this[1886674] _ic__F0_this[2252892])
            const end[1886576]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1886578]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1886580 'move' coerce_tmp[1886578](2272552 '.v' this[1886674] _high[1023913]))
            (1886584 '=' end[1886576] coerce_tmp[1886578])
            (1886587 'noop')
            CForLoop[1886588] order-independent
            {
              const-val call_tmp[1886605]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1886607 'move' call_tmp[1886605] i[1886543])
              const-val _yieldedIndex[1886627]:int(64)[13] "temp"
              (1886658 'move' _yieldedIndex[1886627] call_tmp[1886605])
              const-val i[1886629]:int(64)[13] "const" "index var" "insert auto destroy"
              (1886631 'move' i[1886629] _yieldedIndex[1886627])
              const-val yret[1886635]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1886637 'move' yret[1886635] i[1886629])
              const i[1886640]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (1886642 'move' i[1886640] yret[1886635])
              val y[1886646]:locale[28] "dead at end of block" "no auto destroy" "unsafe"
              (1886649 call init[90004] y[1886646])
              (1886651 'array_set_first' x[1805783] i[1886640] y[1886646])
              {
                (1886590 '=' i[1886543] coerce_tmp[1886559])
              }
              {
                (1886594 '<=' i[1886543] end[1886576])
              }
              {
                (1886600 '+=' i[1886543] 1)
              }
            }
            label _endthese[1886623]
          }
          {
            const-val tmpIter[1805676]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1805678]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1805680]:range(int(64),boundedLow,false)[1084544] "temp"
            (1805683 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1805680])
            (1805686 'move' call_tmp[1805678] ret_tmp[1805680])
            const-val ret_tmp[1805689]:range(int(64),bounded,false)[1023946] "temp"
            (1805692 call #[1084904] call_tmp[1805678] numChunks[1805584] ret_tmp[1805689])
            (1805696 'move' tmpIter[1805676] ret_tmp[1805689])
            const _coforallCount[1805700]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2193176]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
            val new_temp[2193178]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
            (2193180 'move' new_temp[2193178](2193183 call _new[944985]))
            (2193184 'move' ret[2193176] new_temp[2193178])
            (1805702 'move' _coforallCount[1805700] ret[2193176])
            const-val numTasks[1805706]:int(64)[13] "dead at end of block" "temp"
            (1805708 'move' numTasks[1805706](1805711 call size[1032912] tmpIter[1805676]))
            (1805714 call _upEndCount[1225010] _coforallCount[1805700] numTasks[1805706])
            (1805718 call chpl_resetTaskSpawn[1226074] numTasks[1805706])
            const-val call_tmp_F0_this[2252166]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141626]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141628 'move' coerce_tmp[2141626] tmpIter[1805676])
            const-val _ir_F0_this[2252174]:range(int(64),bounded,false)[1023946] "temp"
            (2141634 'move' _ir_F0_this[2252174] coerce_tmp[2141626])
            (2252172 'move' call_tmp_F0_this[2252166] _ir_F0_this[2252174])
            const-val _ic__F0_this[2252912]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141673]:range(int(64),bounded,false)[1023946] "temp"
            (2141675 'move' tmp[2141673] call_tmp_F0_this[2252166])
            (2141680 'move' _ic__F0_this[2252912] tmp[2141673])
            const-val this[1886804]:range(int(64),bounded,false)[1023946] "temp"
            (1886809 'move' this[1886804] _ic__F0_this[2252912])
            (1886696 call checkIfIterWillOverflow[1092793] this[1886804] 1)
            val i[1886699]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1886703 'move' i[1886699] 0)
            const-val this[1886811]:range(int(64),bounded,false)[1023946] "temp"
            (1886816 'move' this[1886811] _ic__F0_this[2252912])
            const-val coerce_tmp[1886715]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1886717 'move' coerce_tmp[1886715](2272560 '.v' this[1886811] _low[1023908]))
            (1886724 'noop')
            const-val this[1886818]:range(int(64),bounded,false)[1023946] "temp"
            (1886823 'move' this[1886818] _ic__F0_this[2252912])
            const end[1886732]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1886734]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1886736 'move' coerce_tmp[1886734](2272567 '.v' this[1886818] _high[1023913]))
            (1886740 '=' end[1886732] coerce_tmp[1886734])
            (1886743 'noop')
            CForLoop[1886744]
            {
              const-val call_tmp[1886761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1886763 'move' call_tmp[1886761] i[1886699])
              const-val _yieldedIndex[1886783]:int(64)[13] "coforall index var" "temp"
              (1886802 'move' _yieldedIndex[1886783] call_tmp[1886761])
              const-val chunk[1886785]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (1886787 'move' chunk[1886785] _yieldedIndex[1886783])
              val _args_forcoforall_fn[2025190]:_class_localscoforall_fn[2025174] "temp"
              (2025194 'move' _args_forcoforall_fn[2025190](2025192 'stack allocate class' _class_localscoforall_fn[2025174]))
              (2025196 '.=' _args_forcoforall_fn[2025190] _0_len[2025177] len[1805579])
              (2025200 '.=' _args_forcoforall_fn[2025190] _1_numChunks[2025179] numChunks[1805584])
              (2025204 '.=' _args_forcoforall_fn[2025190] _2_call_tmp[2025181] call_tmp[1257170])
              (2025208 '.=' _args_forcoforall_fn[2025190] _3_chunk[2025183] chunk[1886785])
              (2025212 '.=' _args_forcoforall_fn[2025190] _4__coforallCount[2025185] _coforallCount[1805700])
              (2025216 '.=' _args_forcoforall_fn[2025190] _5_x[2025187] x[1805783])
              val _args_vforcoforall_fn[2025220]:c_void_ptr[149] "temp"
              (2025224 'move' _args_vforcoforall_fn[2025220](2025222 'cast_to_void_star' _args_forcoforall_fn[2025190]))
              val _args_sizecoforall_fn[2025226]:int(64)[13] "temp"
              (2025230 'move' _args_sizecoforall_fn[2025226](2025228 'sizeof_bundle' _class_localscoforall_fn[2025174]))
              ref _taskListcoforall_fn[2025232]:c_void_ptr[149] "temp"
              (2025237 'move' _taskListcoforall_fn[2025232](2025234 '.' _coforallCount[1805700] taskList[12710]))
              val _taskListNodecoforall_fn[2025239]:int(64)[13] "temp"
              (2025243 'move' _taskListNodecoforall_fn[2025239](2025241 '_wide_get_node' _coforallCount[1805700]))
              (2025323 call wrapcoforall_fn[2025245] _taskListcoforall_fn[2025232] _taskListNodecoforall_fn[2025239] _args_vforcoforall_fn[2025220] _args_sizecoforall_fn[2025226] _args_forcoforall_fn[2025190])
              {
                (1886746 '=' i[1886699] coerce_tmp[1886715])
              }
              {
                (1886750 '<=' i[1886699] end[1886732])
              }
              {
                (1886756 '+=' i[1886699] 1)
              }
            }
            label _endthese[1886779]
            val error[1805749]:Error[167942] "error variable" "temp"
            (1805751 'move' error[1805749] nil[44])
            (1805755 call _waitEndCount[1231805] _coforallCount[1805700] numTasks[1805706] error[1805749])
            val errorExists[2032671]:bool[10] "temp"
            (2032676 'move' errorExists[2032671](2032673 '!=' error[1805749] nil[44]))
            if errorExists[2032671]
            {
              (1805763 call chpl_propagate_error[170476] error[1805749])
            }
            val call_tmp[2195572]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195574 'move' call_tmp[2195572] _coforallCount[1805700])
            val coerce_tmp[2195577]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2195579 'move' coerce_tmp[2195577](2195581 'cast' object[22] _coforallCount[1805700]))
            const-val call_tmp[2195584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195586 'move' call_tmp[2195584](2195588 'ptr_neq' coerce_tmp[2195577] nil[44]))
            if call_tmp[2195584]
            {
              val coerce_tmp[2195593]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2195595 'move' coerce_tmp[2195593] call_tmp[2195572])
              ref _field_destructor_tmp_[2195598]:AtomicT(int(64))[938064] "temp"
              (2195600 'move' _field_destructor_tmp_[2195598](2195602 '.' coerce_tmp[2195593] i[943266]))
              (2195606 call deinit[1402160] _field_destructor_tmp_[2195598])
              val _parent_destructor_tmp_[2195608]:_EndCountBase[12715] "temp"
              (2195610 'move' _parent_destructor_tmp_[2195608](2195612 'cast' _EndCountBase[12715] coerce_tmp[2195593]))
              const-ref _field_destructor_tmp_[2195615]:chpl_TaskErrors[168306] "temp"
              (2195617 'move' _field_destructor_tmp_[2195615](2195619 '.' _parent_destructor_tmp_[2195608] errors[12705]))
              const-ref _field_destructor_tmp_[2195622]:chpl_LocalSpinlock[187398] "temp"
              (2195624 'move' _field_destructor_tmp_[2195622](2195626 '.' _field_destructor_tmp_[2195615] _errorsLock[168229]))
              ref _field_destructor_tmp_[2195629]:AtomicBool[45874] "temp"
              (2195631 'move' _field_destructor_tmp_[2195629](2195633 '.' _field_destructor_tmp_[2195622] l[187283]))
              (2195637 call deinit[44860] _field_destructor_tmp_[2195629])
              const-val call_tmp[2195639]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
              (2195641 'move' call_tmp[2195639](2195643 '_wide_get_addr' call_tmp[2195572]))
              (2195646 call chpl_here_free[188093] call_tmp[2195639])
            }
          }
          label _endthese[1805779]
          (1803965 call chpl_after_forall_fence[13069])
        }
        {
          (1257198 call halt[154071] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    label _end_init_elts[1257203]
    (1257205 return _void[55])
  }
  function init_elts[1317351](const in arg x[1317353]:_ddata(unmanaged localesSignal?)[1313711], const in arg s[1317355]:int(64)[13], const in arg lo[1317381]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1317394]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1317396 'move' call_tmp[1317394](1317399 call init_elts_method[1317632] s[1317355]))
    const-val initMethod[1317402]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1317404 'move' initMethod[1317402] call_tmp[1317394])
    const-val tmp[1317409]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317411 'move' tmp[1317409] initMethod[1317402])
    const-val call_tmp[1317414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2192317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192319 'move' call_tmp[2192317](2192321 '==' tmp[1317409] noInit[11146]))
    (1317416 'move' call_tmp[1317414] call_tmp[2192317])
    const-val call_tmp[1317422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317424 'move' call_tmp[1317422] call_tmp[1317414])
    if call_tmp[1317422]
    {
      gotoReturn _end_init_elts[1317577] _end_init_elts[1317577]
    }
    {
      const-val call_tmp[1317434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2192327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2192329 'move' call_tmp[2192327](2192331 '==' tmp[1317409] serialInit[11148]))
      (1317436 'move' call_tmp[1317434] call_tmp[2192327])
      const-val call_tmp[1317442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1317444 'move' call_tmp[1317442] call_tmp[1317434])
      if call_tmp[1317442]
      {
        const-val call_tmp[1317456]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2063536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063538 'move' call_tmp[2063536](2063540 '-' s[1317355] 1))
        (1317458 'move' call_tmp[1317456] call_tmp[2063536])
        const-val call_tmp_F0_low[2255349]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2255351]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2255445]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2255447]:int(64)[13] "temp"
        const-val _ir_F0_low[2255821]:int(64)[13] "temp"
        const-val _ir_F1_high[2255823]:int(64)[13] "temp"
        (2193452 'move' _ir_F0_low[2255821] lo[1317381])
        (2193456 'move' _ir_F1_high[2255823] call_tmp[1317456])
        (2255453 'move' ret_tmp_F0_low[2255445] _ir_F0_low[2255821])
        (2255458 'move' ret_tmp_F1_high[2255447] _ir_F1_high[2255823])
        (2255357 'move' call_tmp_F0_low[2255349] ret_tmp_F0_low[2255445])
        (2255362 'move' call_tmp_F1_high[2255351] ret_tmp_F1_high[2255447])
        const-val _ic__F0_low[2248020]:int(64)[13] "temp"
        const-val _ic__F1_high[2248022]:int(64)[13] "temp"
        const-val tmp[2193895]:int(64)[13] "temp"
        (2193897 'move' tmp[2193895] call_tmp_F0_low[2255349])
        (2193902 'move' _ic__F0_low[2248020] tmp[2193895])
        const-val tmp[2193906]:int(64)[13] "temp"
        (2193908 'move' tmp[2193906] call_tmp_F1_high[2255351])
        (2193913 'move' _ic__F1_high[2248022] tmp[2193906])
        const-val call_tmp_F0_low[2263775]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2263777]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2263791]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2263793]:int(64)[13] "temp"
        const-val low[1864799]:int(64)[13] "temp"
        (1864804 'move' low[1864799] _ic__F0_low[2248020])
        const-val high[1864806]:int(64)[13] "temp"
        (1864811 'move' high[1864806] _ic__F1_high[2248022])
        const-val _ir_F0_low[2264967]:int(64)[13] "temp"
        const-val _ir_F1_high[2264969]:int(64)[13] "temp"
        (2101083 'move' _ir_F0_low[2264967] low[1864799])
        (2101087 'move' _ir_F1_high[2264969] high[1864806])
        (2263799 'move' ret_tmp_F0_low[2263791] _ir_F0_low[2264967])
        (2263804 'move' ret_tmp_F1_high[2263793] _ir_F1_high[2264969])
        (2263783 'move' call_tmp_F0_low[2263775] ret_tmp_F0_low[2263791])
        (2263788 'move' call_tmp_F1_high[2263777] ret_tmp_F1_high[2263793])
        const-val _ic__F0_low[2251164]:int(64)[13] "temp"
        const-val _ic__F1_high[2251166]:int(64)[13] "temp"
        const-val tmp[2102122]:int(64)[13] "temp"
        (2102124 'move' tmp[2102122] call_tmp_F0_low[2263775])
        (2102129 'move' _ic__F0_low[2251164] tmp[2102122])
        const-val tmp[2102133]:int(64)[13] "temp"
        (2102135 'move' tmp[2102133] call_tmp_F1_high[2263777])
        (2102140 'move' _ic__F1_high[2251166] tmp[2102133])
        val i[1864643]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1864647 'move' i[1864643] 0)
        const-val default_arg_first[1864652]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[1864654]:int(64)[13] "temp"
        (1864656 'move' low[1864654] _ic__F0_low[2251164])
        (1864661 'move' default_arg_first[1864652] low[1864654])
        const-val default_arg_last[1864666]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[1864668]:int(64)[13] "temp"
        (1864670 'move' high[1864668] _ic__F1_high[2251166])
        (1864675 'move' default_arg_last[1864666] high[1864668])
        const-val low[1864682]:int(64)[13] "temp"
        (1864684 'move' low[1864682] _ic__F0_low[2251164])
        const-val high[1864689]:int(64)[13] "temp"
        (1864691 'move' high[1864689] _ic__F1_high[2251166])
        (1864699 call chpl_checkIfRangeIterWillOverflow[1093055] low[1864682] high[1864689] 1 default_arg_first[1864652] default_arg_last[1864666] 1)
        CForLoop[1864706]
        {
          const-val _yieldedIndex[1864740]:int(64)[13] "temp"
          (1864742 'move' _yieldedIndex[1864740] i[1864643])
          const-val _yieldedIndex[1864775]:int(64)[13] "temp"
          (1864797 'move' _yieldedIndex[1864775] _yieldedIndex[1864740])
          const i[1864777]:int(64)[13] "const" "index var" "insert auto destroy"
          (1864779 'move' i[1864777] _yieldedIndex[1864775])
          val y[1864783]:localesSignal[92283] "dead at end of block" "no auto destroy" "unsafe"
          (1864785 'move' y[1864783](1864787 'cast' localesSignal[92283] nil[44]))
          (1864790 'array_set_first' x[1317353] i[1864777] y[1864783])
          {
            const-val low[1864708]:int(64)[13] "temp"
            (1864710 'move' low[1864708] _ic__F0_low[2251164])
            (1864715 '=' i[1864643] low[1864708])
          }
          {
            const-val high[1864719]:int(64)[13] "temp"
            (1864721 'move' high[1864719] _ic__F1_high[2251166])
            (1864726 '<=' i[1864643] high[1864719])
          }
          {
            (1864732 '+=' i[1864643] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[1864766]
        label _endchpl_direct_range_iter[1864771]
      }
      {
        const-val call_tmp[1317519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192339 'move' call_tmp[2192337](2192341 '==' tmp[1317409] parallelInit[11150]))
        (1317521 'move' call_tmp[1317519] call_tmp[2192337])
        const-val call_tmp[1317527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1317529 'move' call_tmp[1317527] call_tmp[1317519])
        if call_tmp[1317527]
        {
          const-val call_tmp[1317536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2063546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2063548 'move' call_tmp[2063546](2063550 '-' s[1317355] 1))
          (1317538 'move' call_tmp[1317536] call_tmp[2063546])
          const-val call_tmp[1317544]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1784134]:range(int(64),bounded,false)[1023946] "temp"
          (1317549 call chpl_build_bounded_range[455195] lo[1317381] call_tmp[1317536] ret_tmp[1784134])
          (1784137 'move' call_tmp[1317544] ret_tmp[1784134])
          const-val x[1806242]:_ddata(unmanaged localesSignal?)[1313711] "concurrently accessed" "const"
          (1806245 'move' x[1806242] x[1317353])
          const-val call_tmp[1806031]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1806033 'move' call_tmp[1806031](1806036 call size[1032912] call_tmp[1317544]))
          const-val len[1806038]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1806040 'move' len[1806038] call_tmp[1806031])
          const-val numChunks[1806043]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[1806045]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1806047]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1806049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1806051 'move' call_tmp[1806049](1806053 'task_get_serial'))
          (1806054 'move' tmp[1806047] call_tmp[1806049])
          if tmp[1806047]
          {
            (1806059 'move' tmp[1806045] 1)
          }
          {
            const-val tmp[1806063]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            (1806065 'move' tmp[1806063](1806068 call _computeNumChunks[1258820] len[1806038]))
            (1806070 'move' tmp[1806045] tmp[1806063])
          }
          (1806074 'move' numChunks[1806043] tmp[1806045])
          const-val call_tmp[1806077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2086198]:int(64)[13] "temp"
          (2086201 'move' inlineImm[2086198] 1)
          const-val call_tmp[2086204]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2086206 'move' call_tmp[2086204](2086208 '<=' numChunks[1806043] inlineImm[2086198]))
          (1806079 'move' call_tmp[1806077] call_tmp[2086204])
          const-val call_tmp[1806085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1806087 'move' call_tmp[1806085] call_tmp[1806077])
          if call_tmp[1806085]
          {
            const-val call_tmp_F0_this[2252178]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141695]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141697 'move' coerce_tmp[2141695] call_tmp[1317544])
            const-val _ir_F0_this[2252186]:range(int(64),bounded,false)[1023946] "temp"
            (2141703 'move' _ir_F0_this[2252186] coerce_tmp[2141695])
            (2252184 'move' call_tmp_F0_this[2252178] _ir_F0_this[2252186])
            const-val _ic__F0_this[2252932]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141742]:range(int(64),bounded,false)[1023946] "temp"
            (2141744 'move' tmp[2141742] call_tmp_F0_this[2252178])
            (2141749 'move' _ic__F0_this[2252932] tmp[2141742])
            const-val this[1887180]:range(int(64),bounded,false)[1023946] "temp"
            (1887185 'move' this[1887180] _ic__F0_this[2252932])
            (1887058 call checkIfIterWillOverflow[1092793] this[1887180] 1)
            val i[1887061]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1887065 'move' i[1887061] 0)
            const-val this[1887187]:range(int(64),bounded,false)[1023946] "temp"
            (1887192 'move' this[1887187] _ic__F0_this[2252932])
            const-val coerce_tmp[1887077]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887079 'move' coerce_tmp[1887077](2273268 '.v' this[1887187] _low[1023908]))
            (1887086 'noop')
            const-val this[1887194]:range(int(64),bounded,false)[1023946] "temp"
            (1887199 'move' this[1887194] _ic__F0_this[2252932])
            const end[1887094]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1887096]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887098 'move' coerce_tmp[1887096](2273275 '.v' this[1887194] _high[1023913]))
            (1887102 '=' end[1887094] coerce_tmp[1887096])
            (1887105 'noop')
            CForLoop[1887106] order-independent
            {
              const-val call_tmp[1887123]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1887125 'move' call_tmp[1887123] i[1887061])
              const-val _yieldedIndex[1887145]:int(64)[13] "temp"
              (1887178 'move' _yieldedIndex[1887145] call_tmp[1887123])
              const-val i[1887147]:int(64)[13] "const" "index var" "insert auto destroy"
              (1887149 'move' i[1887147] _yieldedIndex[1887145])
              const-val yret[1887153]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1887155 'move' yret[1887153] i[1887147])
              const i[1887158]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (1887160 'move' i[1887158] yret[1887153])
              val y[1887164]:localesSignal[92283] "dead at end of block" "no auto destroy" "unsafe"
              (1887166 'move' y[1887164](1887168 'cast' localesSignal[92283] nil[44]))
              (1887171 'array_set_first' x[1806242] i[1887158] y[1887164])
              {
                (1887108 '=' i[1887061] coerce_tmp[1887077])
              }
              {
                (1887112 '<=' i[1887061] end[1887094])
              }
              {
                (1887118 '+=' i[1887061] 1)
              }
            }
            label _endthese[1887141]
          }
          {
            const-val tmpIter[1806135]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1806137]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1806139]:range(int(64),boundedLow,false)[1084544] "temp"
            (1806142 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1806139])
            (1806145 'move' call_tmp[1806137] ret_tmp[1806139])
            const-val ret_tmp[1806148]:range(int(64),bounded,false)[1023946] "temp"
            (1806151 call #[1084904] call_tmp[1806137] numChunks[1806043] ret_tmp[1806148])
            (1806155 'move' tmpIter[1806135] ret_tmp[1806148])
            const _coforallCount[1806159]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2193192]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
            val new_temp[2193194]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
            (2193196 'move' new_temp[2193194](2193199 call _new[944985]))
            (2193200 'move' ret[2193192] new_temp[2193194])
            (1806161 'move' _coforallCount[1806159] ret[2193192])
            const-val numTasks[1806165]:int(64)[13] "dead at end of block" "temp"
            (1806167 'move' numTasks[1806165](1806170 call size[1032912] tmpIter[1806135]))
            (1806173 call _upEndCount[1225010] _coforallCount[1806159] numTasks[1806165])
            (1806177 call chpl_resetTaskSpawn[1226074] numTasks[1806165])
            const-val call_tmp_F0_this[2252190]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141764]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141766 'move' coerce_tmp[2141764] tmpIter[1806135])
            const-val _ir_F0_this[2252198]:range(int(64),bounded,false)[1023946] "temp"
            (2141772 'move' _ir_F0_this[2252198] coerce_tmp[2141764])
            (2252196 'move' call_tmp_F0_this[2252190] _ir_F0_this[2252198])
            const-val _ic__F0_this[2252952]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141811]:range(int(64),bounded,false)[1023946] "temp"
            (2141813 'move' tmp[2141811] call_tmp_F0_this[2252190])
            (2141818 'move' _ic__F0_this[2252952] tmp[2141811])
            const-val this[1887324]:range(int(64),bounded,false)[1023946] "temp"
            (1887329 'move' this[1887324] _ic__F0_this[2252952])
            (1887216 call checkIfIterWillOverflow[1092793] this[1887324] 1)
            val i[1887219]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1887223 'move' i[1887219] 0)
            const-val this[1887331]:range(int(64),bounded,false)[1023946] "temp"
            (1887336 'move' this[1887331] _ic__F0_this[2252952])
            const-val coerce_tmp[1887235]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887237 'move' coerce_tmp[1887235](2273283 '.v' this[1887331] _low[1023908]))
            (1887244 'noop')
            const-val this[1887338]:range(int(64),bounded,false)[1023946] "temp"
            (1887343 'move' this[1887338] _ic__F0_this[2252952])
            const end[1887252]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1887254]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887256 'move' coerce_tmp[1887254](2273290 '.v' this[1887338] _high[1023913]))
            (1887260 '=' end[1887252] coerce_tmp[1887254])
            (1887263 'noop')
            CForLoop[1887264]
            {
              const-val call_tmp[1887281]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1887283 'move' call_tmp[1887281] i[1887219])
              const-val _yieldedIndex[1887303]:int(64)[13] "coforall index var" "temp"
              (1887322 'move' _yieldedIndex[1887303] call_tmp[1887281])
              const-val chunk[1887305]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (1887307 'move' chunk[1887305] _yieldedIndex[1887303])
              val _args_forcoforall_fn[2025345]:_class_localscoforall_fn[2025329] "temp"
              (2025349 'move' _args_forcoforall_fn[2025345](2025347 'stack allocate class' _class_localscoforall_fn[2025329]))
              (2025351 '.=' _args_forcoforall_fn[2025345] _0_len[2025332] len[1806038])
              (2025355 '.=' _args_forcoforall_fn[2025345] _1_numChunks[2025334] numChunks[1806043])
              (2025359 '.=' _args_forcoforall_fn[2025345] _2_call_tmp[2025336] call_tmp[1317544])
              (2025363 '.=' _args_forcoforall_fn[2025345] _3_chunk[2025338] chunk[1887305])
              (2025367 '.=' _args_forcoforall_fn[2025345] _4__coforallCount[2025340] _coforallCount[1806159])
              (2025371 '.=' _args_forcoforall_fn[2025345] _5_x[2025342] x[1806242])
              val _args_vforcoforall_fn[2025375]:c_void_ptr[149] "temp"
              (2025379 'move' _args_vforcoforall_fn[2025375](2025377 'cast_to_void_star' _args_forcoforall_fn[2025345]))
              val _args_sizecoforall_fn[2025381]:int(64)[13] "temp"
              (2025385 'move' _args_sizecoforall_fn[2025381](2025383 'sizeof_bundle' _class_localscoforall_fn[2025329]))
              ref _taskListcoforall_fn[2025387]:c_void_ptr[149] "temp"
              (2025392 'move' _taskListcoforall_fn[2025387](2025389 '.' _coforallCount[1806159] taskList[12710]))
              val _taskListNodecoforall_fn[2025394]:int(64)[13] "temp"
              (2025398 'move' _taskListNodecoforall_fn[2025394](2025396 '_wide_get_node' _coforallCount[1806159]))
              (2025478 call wrapcoforall_fn[2025400] _taskListcoforall_fn[2025387] _taskListNodecoforall_fn[2025394] _args_vforcoforall_fn[2025375] _args_sizecoforall_fn[2025381] _args_forcoforall_fn[2025345])
              {
                (1887266 '=' i[1887219] coerce_tmp[1887235])
              }
              {
                (1887270 '<=' i[1887219] end[1887252])
              }
              {
                (1887276 '+=' i[1887219] 1)
              }
            }
            label _endthese[1887299]
            val error[1806208]:Error[167942] "error variable" "temp"
            (1806210 'move' error[1806208] nil[44])
            (1806214 call _waitEndCount[1231805] _coforallCount[1806159] numTasks[1806165] error[1806208])
            val errorExists[2032679]:bool[10] "temp"
            (2032684 'move' errorExists[2032679](2032681 '!=' error[1806208] nil[44]))
            if errorExists[2032679]
            {
              (1806222 call chpl_propagate_error[170476] error[1806208])
            }
            val call_tmp[2195652]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195654 'move' call_tmp[2195652] _coforallCount[1806159])
            val coerce_tmp[2195657]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2195659 'move' coerce_tmp[2195657](2195661 'cast' object[22] _coforallCount[1806159]))
            const-val call_tmp[2195664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195666 'move' call_tmp[2195664](2195668 'ptr_neq' coerce_tmp[2195657] nil[44]))
            if call_tmp[2195664]
            {
              val coerce_tmp[2195673]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2195675 'move' coerce_tmp[2195673] call_tmp[2195652])
              ref _field_destructor_tmp_[2195678]:AtomicT(int(64))[938064] "temp"
              (2195680 'move' _field_destructor_tmp_[2195678](2195682 '.' coerce_tmp[2195673] i[943266]))
              (2195686 call deinit[1402160] _field_destructor_tmp_[2195678])
              val _parent_destructor_tmp_[2195688]:_EndCountBase[12715] "temp"
              (2195690 'move' _parent_destructor_tmp_[2195688](2195692 'cast' _EndCountBase[12715] coerce_tmp[2195673]))
              const-ref _field_destructor_tmp_[2195695]:chpl_TaskErrors[168306] "temp"
              (2195697 'move' _field_destructor_tmp_[2195695](2195699 '.' _parent_destructor_tmp_[2195688] errors[12705]))
              const-ref _field_destructor_tmp_[2195702]:chpl_LocalSpinlock[187398] "temp"
              (2195704 'move' _field_destructor_tmp_[2195702](2195706 '.' _field_destructor_tmp_[2195695] _errorsLock[168229]))
              ref _field_destructor_tmp_[2195709]:AtomicBool[45874] "temp"
              (2195711 'move' _field_destructor_tmp_[2195709](2195713 '.' _field_destructor_tmp_[2195702] l[187283]))
              (2195717 call deinit[44860] _field_destructor_tmp_[2195709])
              const-val call_tmp[2195719]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
              (2195721 'move' call_tmp[2195719](2195723 '_wide_get_addr' call_tmp[2195652]))
              (2195726 call chpl_here_free[188093] call_tmp[2195719])
            }
          }
          label _endthese[1806238]
          (1803977 call chpl_after_forall_fence[13069])
        }
        {
          (1317572 call halt[154071] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    label _end_init_elts[1317577]
    (1317579 return _void[55])
  }
  function init_elts[1357257](const in arg x[1357259]:_ddata(real(64))[1353617], const in arg s[1357261]:int(64)[13], const in arg lo[1357287]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1357300]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1357302 'move' call_tmp[1357300](1357305 call init_elts_method[1357538] s[1357261]))
    const-val initMethod[1357308]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1357310 'move' initMethod[1357308] call_tmp[1357300])
    const-val tmp[1357315]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1357317 'move' tmp[1357315] initMethod[1357308])
    const-val call_tmp[1357320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2192357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192359 'move' call_tmp[2192357](2192361 '==' tmp[1357315] noInit[11146]))
    (1357322 'move' call_tmp[1357320] call_tmp[2192357])
    const-val call_tmp[1357328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1357330 'move' call_tmp[1357328] call_tmp[1357320])
    if call_tmp[1357328]
    {
      gotoReturn _end_init_elts[1357483] _end_init_elts[1357483]
    }
    {
      const-val call_tmp[1357340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2192367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2192369 'move' call_tmp[2192367](2192371 '==' tmp[1357315] serialInit[11148]))
      (1357342 'move' call_tmp[1357340] call_tmp[2192367])
      const-val call_tmp[1357348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1357350 'move' call_tmp[1357348] call_tmp[1357340])
      if call_tmp[1357348]
      {
        const-val call_tmp[1357362]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2063566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063568 'move' call_tmp[2063566](2063570 '-' s[1357261] 1))
        (1357364 'move' call_tmp[1357362] call_tmp[2063566])
        const-val call_tmp_F0_low[2255365]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2255367]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2255461]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2255463]:int(64)[13] "temp"
        const-val _ir_F0_low[2255829]:int(64)[13] "temp"
        const-val _ir_F1_high[2255831]:int(64)[13] "temp"
        (2193474 'move' _ir_F0_low[2255829] lo[1357287])
        (2193478 'move' _ir_F1_high[2255831] call_tmp[1357362])
        (2255469 'move' ret_tmp_F0_low[2255461] _ir_F0_low[2255829])
        (2255474 'move' ret_tmp_F1_high[2255463] _ir_F1_high[2255831])
        (2255373 'move' call_tmp_F0_low[2255365] ret_tmp_F0_low[2255461])
        (2255378 'move' call_tmp_F1_high[2255367] ret_tmp_F1_high[2255463])
        const-val _ic__F0_low[2248041]:int(64)[13] "temp"
        const-val _ic__F1_high[2248043]:int(64)[13] "temp"
        const-val tmp[2193958]:int(64)[13] "temp"
        (2193960 'move' tmp[2193958] call_tmp_F0_low[2255365])
        (2193965 'move' _ic__F0_low[2248041] tmp[2193958])
        const-val tmp[2193969]:int(64)[13] "temp"
        (2193971 'move' tmp[2193969] call_tmp_F1_high[2255367])
        (2193976 'move' _ic__F1_high[2248043] tmp[2193969])
        const-val call_tmp_F0_low[2263807]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2263809]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2263823]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2263825]:int(64)[13] "temp"
        const-val low[1869136]:int(64)[13] "temp"
        (1869141 'move' low[1869136] _ic__F0_low[2248041])
        const-val high[1869143]:int(64)[13] "temp"
        (1869148 'move' high[1869143] _ic__F1_high[2248043])
        const-val _ir_F0_low[2264975]:int(64)[13] "temp"
        const-val _ir_F1_high[2264977]:int(64)[13] "temp"
        (2101105 'move' _ir_F0_low[2264975] low[1869136])
        (2101109 'move' _ir_F1_high[2264977] high[1869143])
        (2263831 'move' ret_tmp_F0_low[2263823] _ir_F0_low[2264975])
        (2263836 'move' ret_tmp_F1_high[2263825] _ir_F1_high[2264977])
        (2263815 'move' call_tmp_F0_low[2263807] ret_tmp_F0_low[2263823])
        (2263820 'move' call_tmp_F1_high[2263809] ret_tmp_F1_high[2263825])
        const-val _ic__F0_low[2251183]:int(64)[13] "temp"
        const-val _ic__F1_high[2251185]:int(64)[13] "temp"
        const-val tmp[2102185]:int(64)[13] "temp"
        (2102187 'move' tmp[2102185] call_tmp_F0_low[2263807])
        (2102192 'move' _ic__F0_low[2251183] tmp[2102185])
        const-val tmp[2102196]:int(64)[13] "temp"
        (2102198 'move' tmp[2102196] call_tmp_F1_high[2263809])
        (2102203 'move' _ic__F1_high[2251185] tmp[2102196])
        val i[1868982]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1868986 'move' i[1868982] 0)
        const-val default_arg_first[1868991]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[1868993]:int(64)[13] "temp"
        (1868995 'move' low[1868993] _ic__F0_low[2251183])
        (1869000 'move' default_arg_first[1868991] low[1868993])
        const-val default_arg_last[1869005]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[1869007]:int(64)[13] "temp"
        (1869009 'move' high[1869007] _ic__F1_high[2251185])
        (1869014 'move' default_arg_last[1869005] high[1869007])
        const-val low[1869021]:int(64)[13] "temp"
        (1869023 'move' low[1869021] _ic__F0_low[2251183])
        const-val high[1869028]:int(64)[13] "temp"
        (1869030 'move' high[1869028] _ic__F1_high[2251185])
        (1869038 call chpl_checkIfRangeIterWillOverflow[1093055] low[1869021] high[1869028] 1 default_arg_first[1868991] default_arg_last[1869005] 1)
        CForLoop[1869045]
        {
          const-val _yieldedIndex[1869079]:int(64)[13] "temp"
          (1869081 'move' _yieldedIndex[1869079] i[1868982])
          const-val _yieldedIndex[1869114]:int(64)[13] "temp"
          (1869134 'move' _yieldedIndex[1869114] _yieldedIndex[1869079])
          const i[1869116]:int(64)[13] "const" "index var" "insert auto destroy"
          (1869118 'move' i[1869116] _yieldedIndex[1869114])
          val y[1869122]:real(64)[16] "dead at end of block" "no auto destroy" "unsafe"
          (1869124 'move' y[1869122] 0.0)
          (1869127 'array_set_first' x[1357259] i[1869116] y[1869122])
          {
            const-val low[1869047]:int(64)[13] "temp"
            (1869049 'move' low[1869047] _ic__F0_low[2251183])
            (1869054 '=' i[1868982] low[1869047])
          }
          {
            const-val high[1869058]:int(64)[13] "temp"
            (1869060 'move' high[1869058] _ic__F1_high[2251185])
            (1869065 '<=' i[1868982] high[1869058])
          }
          {
            (1869071 '+=' i[1868982] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[1869105]
        label _endchpl_direct_range_iter[1869110]
      }
      {
        const-val call_tmp[1357425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192379 'move' call_tmp[2192377](2192381 '==' tmp[1357315] parallelInit[11150]))
        (1357427 'move' call_tmp[1357425] call_tmp[2192377])
        const-val call_tmp[1357433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1357435 'move' call_tmp[1357433] call_tmp[1357425])
        if call_tmp[1357433]
        {
          const-val call_tmp[1357442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2063576]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2063578 'move' call_tmp[2063576](2063580 '-' s[1357261] 1))
          (1357444 'move' call_tmp[1357442] call_tmp[2063576])
          const-val call_tmp[1357450]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1784140]:range(int(64),bounded,false)[1023946] "temp"
          (1357455 call chpl_build_bounded_range[455195] lo[1357287] call_tmp[1357442] ret_tmp[1784140])
          (1784143 'move' call_tmp[1357450] ret_tmp[1784140])
          const-val x[1806705]:_ddata(real(64))[1353617] "concurrently accessed" "const"
          (1806708 'move' x[1806705] x[1357259])
          const-val call_tmp[1806494]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1806496 'move' call_tmp[1806494](1806499 call size[1032912] call_tmp[1357450]))
          const-val len[1806501]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1806503 'move' len[1806501] call_tmp[1806494])
          const-val numChunks[1806506]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[1806508]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1806510]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1806512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1806514 'move' call_tmp[1806512](1806516 'task_get_serial'))
          (1806517 'move' tmp[1806510] call_tmp[1806512])
          if tmp[1806510]
          {
            (1806522 'move' tmp[1806508] 1)
          }
          {
            const-val tmp[1806526]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            (1806528 'move' tmp[1806526](1806531 call _computeNumChunks[1258820] len[1806501]))
            (1806533 'move' tmp[1806508] tmp[1806526])
          }
          (1806537 'move' numChunks[1806506] tmp[1806508])
          const-val call_tmp[1806540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2086213]:int(64)[13] "temp"
          (2086216 'move' inlineImm[2086213] 1)
          const-val call_tmp[2086219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2086221 'move' call_tmp[2086219](2086223 '<=' numChunks[1806506] inlineImm[2086213]))
          (1806542 'move' call_tmp[1806540] call_tmp[2086219])
          const-val call_tmp[1806548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1806550 'move' call_tmp[1806548] call_tmp[1806540])
          if call_tmp[1806548]
          {
            const-val call_tmp_F0_this[2252202]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141833]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141835 'move' coerce_tmp[2141833] call_tmp[1357450])
            const-val _ir_F0_this[2252210]:range(int(64),bounded,false)[1023946] "temp"
            (2141841 'move' _ir_F0_this[2252210] coerce_tmp[2141833])
            (2252208 'move' call_tmp_F0_this[2252202] _ir_F0_this[2252210])
            const-val _ic__F0_this[2252972]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141880]:range(int(64),bounded,false)[1023946] "temp"
            (2141882 'move' tmp[2141880] call_tmp_F0_this[2252202])
            (2141887 'move' _ic__F0_this[2252972] tmp[2141880])
            const-val this[1887700]:range(int(64),bounded,false)[1023946] "temp"
            (1887705 'move' this[1887700] _ic__F0_this[2252972])
            (1887580 call checkIfIterWillOverflow[1092793] this[1887700] 1)
            val i[1887583]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1887587 'move' i[1887583] 0)
            const-val this[1887707]:range(int(64),bounded,false)[1023946] "temp"
            (1887712 'move' this[1887707] _ic__F0_this[2252972])
            const-val coerce_tmp[1887599]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887601 'move' coerce_tmp[1887599](2273769 '.v' this[1887707] _low[1023908]))
            (1887608 'noop')
            const-val this[1887714]:range(int(64),bounded,false)[1023946] "temp"
            (1887719 'move' this[1887714] _ic__F0_this[2252972])
            const end[1887616]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1887618]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887620 'move' coerce_tmp[1887618](2273776 '.v' this[1887714] _high[1023913]))
            (1887624 '=' end[1887616] coerce_tmp[1887618])
            (1887627 'noop')
            CForLoop[1887628] order-independent
            {
              const-val call_tmp[1887645]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1887647 'move' call_tmp[1887645] i[1887583])
              const-val _yieldedIndex[1887667]:int(64)[13] "temp"
              (1887698 'move' _yieldedIndex[1887667] call_tmp[1887645])
              const-val i[1887669]:int(64)[13] "const" "index var" "insert auto destroy"
              (1887671 'move' i[1887669] _yieldedIndex[1887667])
              const-val yret[1887675]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1887677 'move' yret[1887675] i[1887669])
              const i[1887680]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (1887682 'move' i[1887680] yret[1887675])
              val y[1887686]:real(64)[16] "dead at end of block" "no auto destroy" "unsafe"
              (1887688 'move' y[1887686] 0.0)
              (1887691 'array_set_first' x[1806705] i[1887680] y[1887686])
              {
                (1887630 '=' i[1887583] coerce_tmp[1887599])
              }
              {
                (1887634 '<=' i[1887583] end[1887616])
              }
              {
                (1887640 '+=' i[1887583] 1)
              }
            }
            label _endthese[1887663]
          }
          {
            const-val tmpIter[1806598]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1806600]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1806602]:range(int(64),boundedLow,false)[1084544] "temp"
            (1806605 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1806602])
            (1806608 'move' call_tmp[1806600] ret_tmp[1806602])
            const-val ret_tmp[1806611]:range(int(64),bounded,false)[1023946] "temp"
            (1806614 call #[1084904] call_tmp[1806600] numChunks[1806506] ret_tmp[1806611])
            (1806618 'move' tmpIter[1806598] ret_tmp[1806611])
            const _coforallCount[1806622]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2193208]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
            val new_temp[2193210]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
            (2193212 'move' new_temp[2193210](2193215 call _new[944985]))
            (2193216 'move' ret[2193208] new_temp[2193210])
            (1806624 'move' _coforallCount[1806622] ret[2193208])
            const-val numTasks[1806628]:int(64)[13] "dead at end of block" "temp"
            (1806630 'move' numTasks[1806628](1806633 call size[1032912] tmpIter[1806598]))
            (1806636 call _upEndCount[1225010] _coforallCount[1806622] numTasks[1806628])
            (1806640 call chpl_resetTaskSpawn[1226074] numTasks[1806628])
            const-val call_tmp_F0_this[2252214]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141902]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141904 'move' coerce_tmp[2141902] tmpIter[1806598])
            const-val _ir_F0_this[2252222]:range(int(64),bounded,false)[1023946] "temp"
            (2141910 'move' _ir_F0_this[2252222] coerce_tmp[2141902])
            (2252220 'move' call_tmp_F0_this[2252214] _ir_F0_this[2252222])
            const-val _ic__F0_this[2252992]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2141949]:range(int(64),bounded,false)[1023946] "temp"
            (2141951 'move' tmp[2141949] call_tmp_F0_this[2252214])
            (2141956 'move' _ic__F0_this[2252992] tmp[2141949])
            const-val this[1887844]:range(int(64),bounded,false)[1023946] "temp"
            (1887849 'move' this[1887844] _ic__F0_this[2252992])
            (1887736 call checkIfIterWillOverflow[1092793] this[1887844] 1)
            val i[1887739]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1887743 'move' i[1887739] 0)
            const-val this[1887851]:range(int(64),bounded,false)[1023946] "temp"
            (1887856 'move' this[1887851] _ic__F0_this[2252992])
            const-val coerce_tmp[1887755]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887757 'move' coerce_tmp[1887755](2273784 '.v' this[1887851] _low[1023908]))
            (1887764 'noop')
            const-val this[1887858]:range(int(64),bounded,false)[1023946] "temp"
            (1887863 'move' this[1887858] _ic__F0_this[2252992])
            const end[1887772]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1887774]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1887776 'move' coerce_tmp[1887774](2273791 '.v' this[1887858] _high[1023913]))
            (1887780 '=' end[1887772] coerce_tmp[1887774])
            (1887783 'noop')
            CForLoop[1887784]
            {
              const-val call_tmp[1887801]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1887803 'move' call_tmp[1887801] i[1887739])
              const-val _yieldedIndex[1887823]:int(64)[13] "coforall index var" "temp"
              (1887842 'move' _yieldedIndex[1887823] call_tmp[1887801])
              const-val chunk[1887825]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (1887827 'move' chunk[1887825] _yieldedIndex[1887823])
              val _args_forcoforall_fn[2025500]:_class_localscoforall_fn[2025484] "temp"
              (2025504 'move' _args_forcoforall_fn[2025500](2025502 'stack allocate class' _class_localscoforall_fn[2025484]))
              (2025506 '.=' _args_forcoforall_fn[2025500] _0_len[2025487] len[1806501])
              (2025510 '.=' _args_forcoforall_fn[2025500] _1_numChunks[2025489] numChunks[1806506])
              (2025514 '.=' _args_forcoforall_fn[2025500] _2_call_tmp[2025491] call_tmp[1357450])
              (2025518 '.=' _args_forcoforall_fn[2025500] _3_chunk[2025493] chunk[1887825])
              (2025522 '.=' _args_forcoforall_fn[2025500] _4__coforallCount[2025495] _coforallCount[1806622])
              (2025526 '.=' _args_forcoforall_fn[2025500] _5_x[2025497] x[1806705])
              val _args_vforcoforall_fn[2025530]:c_void_ptr[149] "temp"
              (2025534 'move' _args_vforcoforall_fn[2025530](2025532 'cast_to_void_star' _args_forcoforall_fn[2025500]))
              val _args_sizecoforall_fn[2025536]:int(64)[13] "temp"
              (2025540 'move' _args_sizecoforall_fn[2025536](2025538 'sizeof_bundle' _class_localscoforall_fn[2025484]))
              ref _taskListcoforall_fn[2025542]:c_void_ptr[149] "temp"
              (2025547 'move' _taskListcoforall_fn[2025542](2025544 '.' _coforallCount[1806622] taskList[12710]))
              val _taskListNodecoforall_fn[2025549]:int(64)[13] "temp"
              (2025553 'move' _taskListNodecoforall_fn[2025549](2025551 '_wide_get_node' _coforallCount[1806622]))
              (2025633 call wrapcoforall_fn[2025555] _taskListcoforall_fn[2025542] _taskListNodecoforall_fn[2025549] _args_vforcoforall_fn[2025530] _args_sizecoforall_fn[2025536] _args_forcoforall_fn[2025500])
              {
                (1887786 '=' i[1887739] coerce_tmp[1887755])
              }
              {
                (1887790 '<=' i[1887739] end[1887772])
              }
              {
                (1887796 '+=' i[1887739] 1)
              }
            }
            label _endthese[1887819]
            val error[1806671]:Error[167942] "error variable" "temp"
            (1806673 'move' error[1806671] nil[44])
            (1806677 call _waitEndCount[1231805] _coforallCount[1806622] numTasks[1806628] error[1806671])
            val errorExists[2032687]:bool[10] "temp"
            (2032692 'move' errorExists[2032687](2032689 '!=' error[1806671] nil[44]))
            if errorExists[2032687]
            {
              (1806685 call chpl_propagate_error[170476] error[1806671])
            }
            val call_tmp[2195732]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195734 'move' call_tmp[2195732] _coforallCount[1806622])
            val coerce_tmp[2195737]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2195739 'move' coerce_tmp[2195737](2195741 'cast' object[22] _coforallCount[1806622]))
            const-val call_tmp[2195744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195746 'move' call_tmp[2195744](2195748 'ptr_neq' coerce_tmp[2195737] nil[44]))
            if call_tmp[2195744]
            {
              val coerce_tmp[2195753]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2195755 'move' coerce_tmp[2195753] call_tmp[2195732])
              ref _field_destructor_tmp_[2195758]:AtomicT(int(64))[938064] "temp"
              (2195760 'move' _field_destructor_tmp_[2195758](2195762 '.' coerce_tmp[2195753] i[943266]))
              (2195766 call deinit[1402160] _field_destructor_tmp_[2195758])
              val _parent_destructor_tmp_[2195768]:_EndCountBase[12715] "temp"
              (2195770 'move' _parent_destructor_tmp_[2195768](2195772 'cast' _EndCountBase[12715] coerce_tmp[2195753]))
              const-ref _field_destructor_tmp_[2195775]:chpl_TaskErrors[168306] "temp"
              (2195777 'move' _field_destructor_tmp_[2195775](2195779 '.' _parent_destructor_tmp_[2195768] errors[12705]))
              const-ref _field_destructor_tmp_[2195782]:chpl_LocalSpinlock[187398] "temp"
              (2195784 'move' _field_destructor_tmp_[2195782](2195786 '.' _field_destructor_tmp_[2195775] _errorsLock[168229]))
              ref _field_destructor_tmp_[2195789]:AtomicBool[45874] "temp"
              (2195791 'move' _field_destructor_tmp_[2195789](2195793 '.' _field_destructor_tmp_[2195782] l[187283]))
              (2195797 call deinit[44860] _field_destructor_tmp_[2195789])
              const-val call_tmp[2195799]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
              (2195801 'move' call_tmp[2195799](2195803 '_wide_get_addr' call_tmp[2195732]))
              (2195806 call chpl_here_free[188093] call_tmp[2195799])
            }
          }
          label _endthese[1806701]
          (1803986 call chpl_after_forall_fence[13069])
        }
        {
          (1357478 call halt[154071] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    label _end_init_elts[1357483]
    (1357485 return _void[55])
  }
  function init_elts[1524350](const in arg x[1524352]:_ddata(int(64))[1520710], const in arg s[1524354]:int(64)[13], const in arg lo[1524380]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1524393]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1524395 'move' call_tmp[1524393](1524398 call init_elts_method[1524631] s[1524354]))
    const-val initMethod[1524401]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1524403 'move' initMethod[1524401] call_tmp[1524393])
    const-val tmp[1524408]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1524410 'move' tmp[1524408] initMethod[1524401])
    const-val call_tmp[1524413]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2192397]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192399 'move' call_tmp[2192397](2192401 '==' tmp[1524408] noInit[11146]))
    (1524415 'move' call_tmp[1524413] call_tmp[2192397])
    const-val call_tmp[1524421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1524423 'move' call_tmp[1524421] call_tmp[1524413])
    if call_tmp[1524421]
    {
      gotoReturn _end_init_elts[1524576] _end_init_elts[1524576]
    }
    {
      const-val call_tmp[1524433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2192407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2192409 'move' call_tmp[2192407](2192411 '==' tmp[1524408] serialInit[11148]))
      (1524435 'move' call_tmp[1524433] call_tmp[2192407])
      const-val call_tmp[1524441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1524443 'move' call_tmp[1524441] call_tmp[1524433])
      if call_tmp[1524441]
      {
        const-val call_tmp[1524455]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2063606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063608 'move' call_tmp[2063606](2063610 '-' s[1524354] 1))
        (1524457 'move' call_tmp[1524455] call_tmp[2063606])
        const-val call_tmp_F0_low[2255397]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2255399]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2255493]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2255495]:int(64)[13] "temp"
        const-val _ir_F0_low[2255845]:int(64)[13] "temp"
        const-val _ir_F1_high[2255847]:int(64)[13] "temp"
        (2193528 'move' _ir_F0_low[2255845] lo[1524380])
        (2193532 'move' _ir_F1_high[2255847] call_tmp[1524455])
        (2255501 'move' ret_tmp_F0_low[2255493] _ir_F0_low[2255845])
        (2255506 'move' ret_tmp_F1_high[2255495] _ir_F1_high[2255847])
        (2255405 'move' call_tmp_F0_low[2255397] ret_tmp_F0_low[2255493])
        (2255410 'move' call_tmp_F1_high[2255399] ret_tmp_F1_high[2255495])
        const-val _ic__F0_low[2248083]:int(64)[13] "temp"
        const-val _ic__F1_high[2248085]:int(64)[13] "temp"
        const-val tmp[2194084]:int(64)[13] "temp"
        (2194086 'move' tmp[2194084] call_tmp_F0_low[2255397])
        (2194091 'move' _ic__F0_low[2248083] tmp[2194084])
        const-val tmp[2194095]:int(64)[13] "temp"
        (2194097 'move' tmp[2194095] call_tmp_F1_high[2255399])
        (2194102 'move' _ic__F1_high[2248085] tmp[2194095])
        const-val call_tmp_F0_low[2263871]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2263873]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2263887]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2263889]:int(64)[13] "temp"
        const-val low[1871993]:int(64)[13] "temp"
        (1871998 'move' low[1871993] _ic__F0_low[2248083])
        const-val high[1872000]:int(64)[13] "temp"
        (1872005 'move' high[1872000] _ic__F1_high[2248085])
        const-val _ir_F0_low[2264991]:int(64)[13] "temp"
        const-val _ir_F1_high[2264993]:int(64)[13] "temp"
        (2101149 'move' _ir_F0_low[2264991] low[1871993])
        (2101153 'move' _ir_F1_high[2264993] high[1872000])
        (2263895 'move' ret_tmp_F0_low[2263887] _ir_F0_low[2264991])
        (2263900 'move' ret_tmp_F1_high[2263889] _ir_F1_high[2264993])
        (2263879 'move' call_tmp_F0_low[2263871] ret_tmp_F0_low[2263887])
        (2263884 'move' call_tmp_F1_high[2263873] ret_tmp_F1_high[2263889])
        const-val _ic__F0_low[2251221]:int(64)[13] "temp"
        const-val _ic__F1_high[2251223]:int(64)[13] "temp"
        const-val tmp[2102311]:int(64)[13] "temp"
        (2102313 'move' tmp[2102311] call_tmp_F0_low[2263871])
        (2102318 'move' _ic__F0_low[2251221] tmp[2102311])
        const-val tmp[2102322]:int(64)[13] "temp"
        (2102324 'move' tmp[2102322] call_tmp_F1_high[2263873])
        (2102329 'move' _ic__F1_high[2251223] tmp[2102322])
        val i[1871839]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1871843 'move' i[1871839] 0)
        const-val default_arg_first[1871848]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[1871850]:int(64)[13] "temp"
        (1871852 'move' low[1871850] _ic__F0_low[2251221])
        (1871857 'move' default_arg_first[1871848] low[1871850])
        const-val default_arg_last[1871862]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[1871864]:int(64)[13] "temp"
        (1871866 'move' high[1871864] _ic__F1_high[2251223])
        (1871871 'move' default_arg_last[1871862] high[1871864])
        const-val low[1871878]:int(64)[13] "temp"
        (1871880 'move' low[1871878] _ic__F0_low[2251221])
        const-val high[1871885]:int(64)[13] "temp"
        (1871887 'move' high[1871885] _ic__F1_high[2251223])
        (1871895 call chpl_checkIfRangeIterWillOverflow[1093055] low[1871878] high[1871885] 1 default_arg_first[1871848] default_arg_last[1871862] 1)
        CForLoop[1871902]
        {
          const-val _yieldedIndex[1871936]:int(64)[13] "temp"
          (1871938 'move' _yieldedIndex[1871936] i[1871839])
          const-val _yieldedIndex[1871971]:int(64)[13] "temp"
          (1871991 'move' _yieldedIndex[1871971] _yieldedIndex[1871936])
          const i[1871973]:int(64)[13] "const" "index var" "insert auto destroy"
          (1871975 'move' i[1871973] _yieldedIndex[1871971])
          val y[1871979]:int(64)[13] "dead at end of block" "no auto destroy" "unsafe"
          (1871981 'move' y[1871979] 0)
          (1871984 'array_set_first' x[1524352] i[1871973] y[1871979])
          {
            const-val low[1871904]:int(64)[13] "temp"
            (1871906 'move' low[1871904] _ic__F0_low[2251221])
            (1871911 '=' i[1871839] low[1871904])
          }
          {
            const-val high[1871915]:int(64)[13] "temp"
            (1871917 'move' high[1871915] _ic__F1_high[2251223])
            (1871922 '<=' i[1871839] high[1871915])
          }
          {
            (1871928 '+=' i[1871839] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[1871962]
        label _endchpl_direct_range_iter[1871967]
      }
      {
        const-val call_tmp[1524518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192419 'move' call_tmp[2192417](2192421 '==' tmp[1524408] parallelInit[11150]))
        (1524520 'move' call_tmp[1524518] call_tmp[2192417])
        const-val call_tmp[1524526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1524528 'move' call_tmp[1524526] call_tmp[1524518])
        if call_tmp[1524526]
        {
          const-val call_tmp[1524535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2063616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2063618 'move' call_tmp[2063616](2063620 '-' s[1524354] 1))
          (1524537 'move' call_tmp[1524535] call_tmp[2063616])
          const-val call_tmp[1524543]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1784176]:range(int(64),bounded,false)[1023946] "temp"
          (1524548 call chpl_build_bounded_range[455195] lo[1524380] call_tmp[1524535] ret_tmp[1784176])
          (1784179 'move' call_tmp[1524543] ret_tmp[1784176])
          const-val x[1808157]:_ddata(int(64))[1520710] "concurrently accessed" "const"
          (1808160 'move' x[1808157] x[1524352])
          const-val call_tmp[1807946]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1807948 'move' call_tmp[1807946](1807951 call size[1032912] call_tmp[1524543]))
          const-val len[1807953]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1807955 'move' len[1807953] call_tmp[1807946])
          const-val numChunks[1807958]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[1807960]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1807962]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1807964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1807966 'move' call_tmp[1807964](1807968 'task_get_serial'))
          (1807969 'move' tmp[1807962] call_tmp[1807964])
          if tmp[1807962]
          {
            (1807974 'move' tmp[1807960] 1)
          }
          {
            const-val tmp[1807978]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            (1807980 'move' tmp[1807978](1807983 call _computeNumChunks[1258820] len[1807953]))
            (1807985 'move' tmp[1807960] tmp[1807978])
          }
          (1807989 'move' numChunks[1807958] tmp[1807960])
          const-val call_tmp[1807992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2086228]:int(64)[13] "temp"
          (2086231 'move' inlineImm[2086228] 1)
          const-val call_tmp[2086234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2086236 'move' call_tmp[2086234](2086238 '<=' numChunks[1807958] inlineImm[2086228]))
          (1807994 'move' call_tmp[1807992] call_tmp[2086234])
          const-val call_tmp[1808000]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1808002 'move' call_tmp[1808000] call_tmp[1807992])
          if call_tmp[1808000]
          {
            const-val call_tmp_F0_this[2252226]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2141971]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2141973 'move' coerce_tmp[2141971] call_tmp[1524543])
            const-val _ir_F0_this[2252234]:range(int(64),bounded,false)[1023946] "temp"
            (2141979 'move' _ir_F0_this[2252234] coerce_tmp[2141971])
            (2252232 'move' call_tmp_F0_this[2252226] _ir_F0_this[2252234])
            const-val _ic__F0_this[2253012]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2142018]:range(int(64),bounded,false)[1023946] "temp"
            (2142020 'move' tmp[2142018] call_tmp_F0_this[2252226])
            (2142025 'move' _ic__F0_this[2253012] tmp[2142018])
            const-val this[1888218]:range(int(64),bounded,false)[1023946] "temp"
            (1888223 'move' this[1888218] _ic__F0_this[2253012])
            (1888098 call checkIfIterWillOverflow[1092793] this[1888218] 1)
            val i[1888101]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1888105 'move' i[1888101] 0)
            const-val this[1888225]:range(int(64),bounded,false)[1023946] "temp"
            (1888230 'move' this[1888225] _ic__F0_this[2253012])
            const-val coerce_tmp[1888117]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888119 'move' coerce_tmp[1888117](2274916 '.v' this[1888225] _low[1023908]))
            (1888126 'noop')
            const-val this[1888232]:range(int(64),bounded,false)[1023946] "temp"
            (1888237 'move' this[1888232] _ic__F0_this[2253012])
            const end[1888134]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1888136]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888138 'move' coerce_tmp[1888136](2274923 '.v' this[1888232] _high[1023913]))
            (1888142 '=' end[1888134] coerce_tmp[1888136])
            (1888145 'noop')
            CForLoop[1888146] order-independent
            {
              const-val call_tmp[1888163]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1888165 'move' call_tmp[1888163] i[1888101])
              const-val _yieldedIndex[1888185]:int(64)[13] "temp"
              (1888216 'move' _yieldedIndex[1888185] call_tmp[1888163])
              const-val i[1888187]:int(64)[13] "const" "index var" "insert auto destroy"
              (1888189 'move' i[1888187] _yieldedIndex[1888185])
              const-val yret[1888193]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1888195 'move' yret[1888193] i[1888187])
              const i[1888198]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (1888200 'move' i[1888198] yret[1888193])
              val y[1888204]:int(64)[13] "dead at end of block" "no auto destroy" "unsafe"
              (1888206 'move' y[1888204] 0)
              (1888209 'array_set_first' x[1808157] i[1888198] y[1888204])
              {
                (1888148 '=' i[1888101] coerce_tmp[1888117])
              }
              {
                (1888152 '<=' i[1888101] end[1888134])
              }
              {
                (1888158 '+=' i[1888101] 1)
              }
            }
            label _endthese[1888181]
          }
          {
            const-val tmpIter[1808050]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1808052]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1808054]:range(int(64),boundedLow,false)[1084544] "temp"
            (1808057 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1808054])
            (1808060 'move' call_tmp[1808052] ret_tmp[1808054])
            const-val ret_tmp[1808063]:range(int(64),bounded,false)[1023946] "temp"
            (1808066 call #[1084904] call_tmp[1808052] numChunks[1807958] ret_tmp[1808063])
            (1808070 'move' tmpIter[1808050] ret_tmp[1808063])
            const _coforallCount[1808074]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2193224]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
            val new_temp[2193226]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
            (2193228 'move' new_temp[2193226](2193231 call _new[944985]))
            (2193232 'move' ret[2193224] new_temp[2193226])
            (1808076 'move' _coforallCount[1808074] ret[2193224])
            const-val numTasks[1808080]:int(64)[13] "dead at end of block" "temp"
            (1808082 'move' numTasks[1808080](1808085 call size[1032912] tmpIter[1808050]))
            (1808088 call _upEndCount[1225010] _coforallCount[1808074] numTasks[1808080])
            (1808092 call chpl_resetTaskSpawn[1226074] numTasks[1808080])
            const-val call_tmp_F0_this[2252238]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2142040]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2142042 'move' coerce_tmp[2142040] tmpIter[1808050])
            const-val _ir_F0_this[2252246]:range(int(64),bounded,false)[1023946] "temp"
            (2142048 'move' _ir_F0_this[2252246] coerce_tmp[2142040])
            (2252244 'move' call_tmp_F0_this[2252238] _ir_F0_this[2252246])
            const-val _ic__F0_this[2253032]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2142087]:range(int(64),bounded,false)[1023946] "temp"
            (2142089 'move' tmp[2142087] call_tmp_F0_this[2252238])
            (2142094 'move' _ic__F0_this[2253032] tmp[2142087])
            const-val this[1888362]:range(int(64),bounded,false)[1023946] "temp"
            (1888367 'move' this[1888362] _ic__F0_this[2253032])
            (1888254 call checkIfIterWillOverflow[1092793] this[1888362] 1)
            val i[1888257]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1888261 'move' i[1888257] 0)
            const-val this[1888369]:range(int(64),bounded,false)[1023946] "temp"
            (1888374 'move' this[1888369] _ic__F0_this[2253032])
            const-val coerce_tmp[1888273]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888275 'move' coerce_tmp[1888273](2274931 '.v' this[1888369] _low[1023908]))
            (1888282 'noop')
            const-val this[1888376]:range(int(64),bounded,false)[1023946] "temp"
            (1888381 'move' this[1888376] _ic__F0_this[2253032])
            const end[1888290]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1888292]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888294 'move' coerce_tmp[1888292](2274938 '.v' this[1888376] _high[1023913]))
            (1888298 '=' end[1888290] coerce_tmp[1888292])
            (1888301 'noop')
            CForLoop[1888302]
            {
              const-val call_tmp[1888319]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1888321 'move' call_tmp[1888319] i[1888257])
              const-val _yieldedIndex[1888341]:int(64)[13] "coforall index var" "temp"
              (1888360 'move' _yieldedIndex[1888341] call_tmp[1888319])
              const-val chunk[1888343]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (1888345 'move' chunk[1888343] _yieldedIndex[1888341])
              val _args_forcoforall_fn[2025655]:_class_localscoforall_fn[2025639] "temp"
              (2025659 'move' _args_forcoforall_fn[2025655](2025657 'stack allocate class' _class_localscoforall_fn[2025639]))
              (2025661 '.=' _args_forcoforall_fn[2025655] _0_len[2025642] len[1807953])
              (2025665 '.=' _args_forcoforall_fn[2025655] _1_numChunks[2025644] numChunks[1807958])
              (2025669 '.=' _args_forcoforall_fn[2025655] _2_call_tmp[2025646] call_tmp[1524543])
              (2025673 '.=' _args_forcoforall_fn[2025655] _3_chunk[2025648] chunk[1888343])
              (2025677 '.=' _args_forcoforall_fn[2025655] _4__coforallCount[2025650] _coforallCount[1808074])
              (2025681 '.=' _args_forcoforall_fn[2025655] _5_x[2025652] x[1808157])
              val _args_vforcoforall_fn[2025685]:c_void_ptr[149] "temp"
              (2025689 'move' _args_vforcoforall_fn[2025685](2025687 'cast_to_void_star' _args_forcoforall_fn[2025655]))
              val _args_sizecoforall_fn[2025691]:int(64)[13] "temp"
              (2025695 'move' _args_sizecoforall_fn[2025691](2025693 'sizeof_bundle' _class_localscoforall_fn[2025639]))
              ref _taskListcoforall_fn[2025697]:c_void_ptr[149] "temp"
              (2025702 'move' _taskListcoforall_fn[2025697](2025699 '.' _coforallCount[1808074] taskList[12710]))
              val _taskListNodecoforall_fn[2025704]:int(64)[13] "temp"
              (2025708 'move' _taskListNodecoforall_fn[2025704](2025706 '_wide_get_node' _coforallCount[1808074]))
              (2025788 call wrapcoforall_fn[2025710] _taskListcoforall_fn[2025697] _taskListNodecoforall_fn[2025704] _args_vforcoforall_fn[2025685] _args_sizecoforall_fn[2025691] _args_forcoforall_fn[2025655])
              {
                (1888304 '=' i[1888257] coerce_tmp[1888273])
              }
              {
                (1888308 '<=' i[1888257] end[1888290])
              }
              {
                (1888314 '+=' i[1888257] 1)
              }
            }
            label _endthese[1888337]
            val error[1808123]:Error[167942] "error variable" "temp"
            (1808125 'move' error[1808123] nil[44])
            (1808129 call _waitEndCount[1231805] _coforallCount[1808074] numTasks[1808080] error[1808123])
            val errorExists[2032695]:bool[10] "temp"
            (2032700 'move' errorExists[2032695](2032697 '!=' error[1808123] nil[44]))
            if errorExists[2032695]
            {
              (1808137 call chpl_propagate_error[170476] error[1808123])
            }
            val call_tmp[2195812]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195814 'move' call_tmp[2195812] _coforallCount[1808074])
            val coerce_tmp[2195817]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2195819 'move' coerce_tmp[2195817](2195821 'cast' object[22] _coforallCount[1808074]))
            const-val call_tmp[2195824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195826 'move' call_tmp[2195824](2195828 'ptr_neq' coerce_tmp[2195817] nil[44]))
            if call_tmp[2195824]
            {
              val coerce_tmp[2195833]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2195835 'move' coerce_tmp[2195833] call_tmp[2195812])
              ref _field_destructor_tmp_[2195838]:AtomicT(int(64))[938064] "temp"
              (2195840 'move' _field_destructor_tmp_[2195838](2195842 '.' coerce_tmp[2195833] i[943266]))
              (2195846 call deinit[1402160] _field_destructor_tmp_[2195838])
              val _parent_destructor_tmp_[2195848]:_EndCountBase[12715] "temp"
              (2195850 'move' _parent_destructor_tmp_[2195848](2195852 'cast' _EndCountBase[12715] coerce_tmp[2195833]))
              const-ref _field_destructor_tmp_[2195855]:chpl_TaskErrors[168306] "temp"
              (2195857 'move' _field_destructor_tmp_[2195855](2195859 '.' _parent_destructor_tmp_[2195848] errors[12705]))
              const-ref _field_destructor_tmp_[2195862]:chpl_LocalSpinlock[187398] "temp"
              (2195864 'move' _field_destructor_tmp_[2195862](2195866 '.' _field_destructor_tmp_[2195855] _errorsLock[168229]))
              ref _field_destructor_tmp_[2195869]:AtomicBool[45874] "temp"
              (2195871 'move' _field_destructor_tmp_[2195869](2195873 '.' _field_destructor_tmp_[2195862] l[187283]))
              (2195877 call deinit[44860] _field_destructor_tmp_[2195869])
              const-val call_tmp[2195879]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
              (2195881 'move' call_tmp[2195879](2195883 '_wide_get_addr' call_tmp[2195812]))
              (2195886 call chpl_here_free[188093] call_tmp[2195879])
            }
          }
          label _endthese[1808153]
          (1804100 call chpl_after_forall_fence[13069])
        }
        {
          (1524571 call halt[154071] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    label _end_init_elts[1524576]
    (1524578 return _void[55])
  }
  function init_elts[1542818](const in arg x[1542820]:_ddata(uint(64))[1539178], const in arg s[1542822]:int(64)[13], const in arg lo[1542848]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1542861]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1542863 'move' call_tmp[1542861](1542866 call init_elts_method[1543099] s[1542822]))
    const-val initMethod[1542869]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1542871 'move' initMethod[1542869] call_tmp[1542861])
    const-val tmp[1542876]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1542878 'move' tmp[1542876] initMethod[1542869])
    const-val call_tmp[1542881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2192437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192439 'move' call_tmp[2192437](2192441 '==' tmp[1542876] noInit[11146]))
    (1542883 'move' call_tmp[1542881] call_tmp[2192437])
    const-val call_tmp[1542889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1542891 'move' call_tmp[1542889] call_tmp[1542881])
    if call_tmp[1542889]
    {
      gotoReturn _end_init_elts[1543044] _end_init_elts[1543044]
    }
    {
      const-val call_tmp[1542901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2192447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2192449 'move' call_tmp[2192447](2192451 '==' tmp[1542876] serialInit[11148]))
      (1542903 'move' call_tmp[1542901] call_tmp[2192447])
      const-val call_tmp[1542909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1542911 'move' call_tmp[1542909] call_tmp[1542901])
      if call_tmp[1542909]
      {
        const-val call_tmp[1542923]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2063626]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2063628 'move' call_tmp[2063626](2063630 '-' s[1542822] 1))
        (1542925 'move' call_tmp[1542923] call_tmp[2063626])
        const-val call_tmp_F0_low[2255413]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2255415]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2255509]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2255511]:int(64)[13] "temp"
        const-val _ir_F0_low[2255853]:int(64)[13] "temp"
        const-val _ir_F1_high[2255855]:int(64)[13] "temp"
        (2193550 'move' _ir_F0_low[2255853] lo[1542848])
        (2193554 'move' _ir_F1_high[2255855] call_tmp[1542923])
        (2255517 'move' ret_tmp_F0_low[2255509] _ir_F0_low[2255853])
        (2255522 'move' ret_tmp_F1_high[2255511] _ir_F1_high[2255855])
        (2255421 'move' call_tmp_F0_low[2255413] ret_tmp_F0_low[2255509])
        (2255426 'move' call_tmp_F1_high[2255415] ret_tmp_F1_high[2255511])
        const-val _ic__F0_low[2248104]:int(64)[13] "temp"
        const-val _ic__F1_high[2248106]:int(64)[13] "temp"
        const-val tmp[2194147]:int(64)[13] "temp"
        (2194149 'move' tmp[2194147] call_tmp_F0_low[2255413])
        (2194154 'move' _ic__F0_low[2248104] tmp[2194147])
        const-val tmp[2194158]:int(64)[13] "temp"
        (2194160 'move' tmp[2194158] call_tmp_F1_high[2255415])
        (2194165 'move' _ic__F1_high[2248106] tmp[2194158])
        const-val call_tmp_F0_low[2263903]:int(64)[13] "temp"
        const-val call_tmp_F1_high[2263905]:int(64)[13] "temp"
        const-val ret_tmp_F0_low[2263919]:int(64)[13] "temp"
        const-val ret_tmp_F1_high[2263921]:int(64)[13] "temp"
        const-val low[1872319]:int(64)[13] "temp"
        (1872324 'move' low[1872319] _ic__F0_low[2248104])
        const-val high[1872326]:int(64)[13] "temp"
        (1872331 'move' high[1872326] _ic__F1_high[2248106])
        const-val _ir_F0_low[2264999]:int(64)[13] "temp"
        const-val _ir_F1_high[2265001]:int(64)[13] "temp"
        (2101171 'move' _ir_F0_low[2264999] low[1872319])
        (2101175 'move' _ir_F1_high[2265001] high[1872326])
        (2263927 'move' ret_tmp_F0_low[2263919] _ir_F0_low[2264999])
        (2263932 'move' ret_tmp_F1_high[2263921] _ir_F1_high[2265001])
        (2263911 'move' call_tmp_F0_low[2263903] ret_tmp_F0_low[2263919])
        (2263916 'move' call_tmp_F1_high[2263905] ret_tmp_F1_high[2263921])
        const-val _ic__F0_low[2251240]:int(64)[13] "temp"
        const-val _ic__F1_high[2251242]:int(64)[13] "temp"
        const-val tmp[2102374]:int(64)[13] "temp"
        (2102376 'move' tmp[2102374] call_tmp_F0_low[2263903])
        (2102381 'move' _ic__F0_low[2251240] tmp[2102374])
        const-val tmp[2102385]:int(64)[13] "temp"
        (2102387 'move' tmp[2102385] call_tmp_F1_high[2263905])
        (2102392 'move' _ic__F1_high[2251242] tmp[2102385])
        val i[1872165]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1872169 'move' i[1872165] 0)
        const-val default_arg_first[1872174]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[1872176]:int(64)[13] "temp"
        (1872178 'move' low[1872176] _ic__F0_low[2251240])
        (1872183 'move' default_arg_first[1872174] low[1872176])
        const-val default_arg_last[1872188]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[1872190]:int(64)[13] "temp"
        (1872192 'move' high[1872190] _ic__F1_high[2251242])
        (1872197 'move' default_arg_last[1872188] high[1872190])
        const-val low[1872204]:int(64)[13] "temp"
        (1872206 'move' low[1872204] _ic__F0_low[2251240])
        const-val high[1872211]:int(64)[13] "temp"
        (1872213 'move' high[1872211] _ic__F1_high[2251242])
        (1872221 call chpl_checkIfRangeIterWillOverflow[1093055] low[1872204] high[1872211] 1 default_arg_first[1872174] default_arg_last[1872188] 1)
        CForLoop[1872228]
        {
          const-val _yieldedIndex[1872262]:int(64)[13] "temp"
          (1872264 'move' _yieldedIndex[1872262] i[1872165])
          const-val _yieldedIndex[1872297]:int(64)[13] "temp"
          (1872317 'move' _yieldedIndex[1872297] _yieldedIndex[1872262])
          const i[1872299]:int(64)[13] "const" "index var" "insert auto destroy"
          (1872301 'move' i[1872299] _yieldedIndex[1872297])
          val y[1872305]:uint(64)[115] "dead at end of block" "no auto destroy" "unsafe"
          (1872307 'move' y[1872305] 0)
          (1872310 'array_set_first' x[1542820] i[1872299] y[1872305])
          {
            const-val low[1872230]:int(64)[13] "temp"
            (1872232 'move' low[1872230] _ic__F0_low[2251240])
            (1872237 '=' i[1872165] low[1872230])
          }
          {
            const-val high[1872241]:int(64)[13] "temp"
            (1872243 'move' high[1872241] _ic__F1_high[2251242])
            (1872248 '<=' i[1872165] high[1872241])
          }
          {
            (1872254 '+=' i[1872165] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[1872288]
        label _endchpl_direct_range_iter[1872293]
      }
      {
        const-val call_tmp[1542986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2192457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2192459 'move' call_tmp[2192457](2192461 '==' tmp[1542876] parallelInit[11150]))
        (1542988 'move' call_tmp[1542986] call_tmp[2192457])
        const-val call_tmp[1542994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1542996 'move' call_tmp[1542994] call_tmp[1542986])
        if call_tmp[1542994]
        {
          const-val call_tmp[1543003]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2063636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2063638 'move' call_tmp[2063636](2063640 '-' s[1542822] 1))
          (1543005 'move' call_tmp[1543003] call_tmp[2063636])
          const-val call_tmp[1543011]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1784182]:range(int(64),bounded,false)[1023946] "temp"
          (1543016 call chpl_build_bounded_range[455195] lo[1542848] call_tmp[1543003] ret_tmp[1784182])
          (1784185 'move' call_tmp[1543011] ret_tmp[1784182])
          const-val x[1808616]:_ddata(uint(64))[1539178] "concurrently accessed" "const"
          (1808619 'move' x[1808616] x[1542820])
          const-val call_tmp[1808405]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1808407 'move' call_tmp[1808405](1808410 call size[1032912] call_tmp[1543011]))
          const-val len[1808412]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1808414 'move' len[1808412] call_tmp[1808405])
          const-val numChunks[1808417]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          val tmp[1808419]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1808421]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1808423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1808425 'move' call_tmp[1808423](1808427 'task_get_serial'))
          (1808428 'move' tmp[1808421] call_tmp[1808423])
          if tmp[1808421]
          {
            (1808433 'move' tmp[1808419] 1)
          }
          {
            const-val tmp[1808437]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
            (1808439 'move' tmp[1808437](1808442 call _computeNumChunks[1258820] len[1808412]))
            (1808444 'move' tmp[1808419] tmp[1808437])
          }
          (1808448 'move' numChunks[1808417] tmp[1808419])
          const-val call_tmp[1808451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2086243]:int(64)[13] "temp"
          (2086246 'move' inlineImm[2086243] 1)
          const-val call_tmp[2086249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2086251 'move' call_tmp[2086249](2086253 '<=' numChunks[1808417] inlineImm[2086243]))
          (1808453 'move' call_tmp[1808451] call_tmp[2086249])
          const-val call_tmp[1808459]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1808461 'move' call_tmp[1808459] call_tmp[1808451])
          if call_tmp[1808459]
          {
            const-val call_tmp_F0_this[2252250]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2142109]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2142111 'move' coerce_tmp[2142109] call_tmp[1543011])
            const-val _ir_F0_this[2252258]:range(int(64),bounded,false)[1023946] "temp"
            (2142117 'move' _ir_F0_this[2252258] coerce_tmp[2142109])
            (2252256 'move' call_tmp_F0_this[2252250] _ir_F0_this[2252258])
            const-val _ic__F0_this[2253052]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2142156]:range(int(64),bounded,false)[1023946] "temp"
            (2142158 'move' tmp[2142156] call_tmp_F0_this[2252250])
            (2142163 'move' _ic__F0_this[2253052] tmp[2142156])
            const-val this[1888736]:range(int(64),bounded,false)[1023946] "temp"
            (1888741 'move' this[1888736] _ic__F0_this[2253052])
            (1888616 call checkIfIterWillOverflow[1092793] this[1888736] 1)
            val i[1888619]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1888623 'move' i[1888619] 0)
            const-val this[1888743]:range(int(64),bounded,false)[1023946] "temp"
            (1888748 'move' this[1888743] _ic__F0_this[2253052])
            const-val coerce_tmp[1888635]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888637 'move' coerce_tmp[1888635](2275081 '.v' this[1888743] _low[1023908]))
            (1888644 'noop')
            const-val this[1888750]:range(int(64),bounded,false)[1023946] "temp"
            (1888755 'move' this[1888750] _ic__F0_this[2253052])
            const end[1888652]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1888654]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888656 'move' coerce_tmp[1888654](2275088 '.v' this[1888750] _high[1023913]))
            (1888660 '=' end[1888652] coerce_tmp[1888654])
            (1888663 'noop')
            CForLoop[1888664] order-independent
            {
              const-val call_tmp[1888681]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1888683 'move' call_tmp[1888681] i[1888619])
              const-val _yieldedIndex[1888703]:int(64)[13] "temp"
              (1888734 'move' _yieldedIndex[1888703] call_tmp[1888681])
              const-val i[1888705]:int(64)[13] "const" "index var" "insert auto destroy"
              (1888707 'move' i[1888705] _yieldedIndex[1888703])
              const-val yret[1888711]:int(64)[13] "dead after last mention" "YVV" "temp"
              (1888713 'move' yret[1888711] i[1888705])
              const i[1888716]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (1888718 'move' i[1888716] yret[1888711])
              val y[1888722]:uint(64)[115] "dead at end of block" "no auto destroy" "unsafe"
              (1888724 'move' y[1888722] 0)
              (1888727 'array_set_first' x[1808616] i[1888716] y[1888722])
              {
                (1888666 '=' i[1888619] coerce_tmp[1888635])
              }
              {
                (1888670 '<=' i[1888619] end[1888652])
              }
              {
                (1888676 '+=' i[1888619] 1)
              }
            }
            label _endthese[1888699]
          }
          {
            const-val tmpIter[1808509]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1808511]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1808513]:range(int(64),boundedLow,false)[1084544] "temp"
            (1808516 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[1808513])
            (1808519 'move' call_tmp[1808511] ret_tmp[1808513])
            const-val ret_tmp[1808522]:range(int(64),bounded,false)[1023946] "temp"
            (1808525 call #[1084904] call_tmp[1808511] numChunks[1808417] ret_tmp[1808522])
            (1808529 'move' tmpIter[1808509] ret_tmp[1808522])
            const _coforallCount[1808533]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2193240]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
            val new_temp[2193242]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
            (2193244 'move' new_temp[2193242](2193247 call _new[944985]))
            (2193248 'move' ret[2193240] new_temp[2193242])
            (1808535 'move' _coforallCount[1808533] ret[2193240])
            const-val numTasks[1808539]:int(64)[13] "dead at end of block" "temp"
            (1808541 'move' numTasks[1808539](1808544 call size[1032912] tmpIter[1808509]))
            (1808547 call _upEndCount[1225010] _coforallCount[1808533] numTasks[1808539])
            (1808551 call chpl_resetTaskSpawn[1226074] numTasks[1808539])
            const-val call_tmp_F0_this[2252262]:range(int(64),bounded,false)[1023946] "temp"
            const-val coerce_tmp[2142178]:range(int(64),bounded,false)[1023946] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2142180 'move' coerce_tmp[2142178] tmpIter[1808509])
            const-val _ir_F0_this[2252270]:range(int(64),bounded,false)[1023946] "temp"
            (2142186 'move' _ir_F0_this[2252270] coerce_tmp[2142178])
            (2252268 'move' call_tmp_F0_this[2252262] _ir_F0_this[2252270])
            const-val _ic__F0_this[2253072]:range(int(64),bounded,false)[1023946] "temp"
            const-val tmp[2142225]:range(int(64),bounded,false)[1023946] "temp"
            (2142227 'move' tmp[2142225] call_tmp_F0_this[2252262])
            (2142232 'move' _ic__F0_this[2253072] tmp[2142225])
            const-val this[1888880]:range(int(64),bounded,false)[1023946] "temp"
            (1888885 'move' this[1888880] _ic__F0_this[2253072])
            (1888772 call checkIfIterWillOverflow[1092793] this[1888880] 1)
            val i[1888775]:int(64)[13] "dead at end of block" "insert auto destroy"
            (1888779 'move' i[1888775] 0)
            const-val this[1888887]:range(int(64),bounded,false)[1023946] "temp"
            (1888892 'move' this[1888887] _ic__F0_this[2253072])
            const-val coerce_tmp[1888791]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888793 'move' coerce_tmp[1888791](2275096 '.v' this[1888887] _low[1023908]))
            (1888800 'noop')
            const-val this[1888894]:range(int(64),bounded,false)[1023946] "temp"
            (1888899 'move' this[1888894] _ic__F0_this[2253072])
            const end[1888808]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1888810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1888812 'move' coerce_tmp[1888810](2275103 '.v' this[1888894] _high[1023913]))
            (1888816 '=' end[1888808] coerce_tmp[1888810])
            (1888819 'noop')
            CForLoop[1888820]
            {
              const-val call_tmp[1888837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1888839 'move' call_tmp[1888837] i[1888775])
              const-val _yieldedIndex[1888859]:int(64)[13] "coforall index var" "temp"
              (1888878 'move' _yieldedIndex[1888859] call_tmp[1888837])
              const-val chunk[1888861]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (1888863 'move' chunk[1888861] _yieldedIndex[1888859])
              val _args_forcoforall_fn[2025810]:_class_localscoforall_fn[2025794] "temp"
              (2025814 'move' _args_forcoforall_fn[2025810](2025812 'stack allocate class' _class_localscoforall_fn[2025794]))
              (2025816 '.=' _args_forcoforall_fn[2025810] _0_len[2025797] len[1808412])
              (2025820 '.=' _args_forcoforall_fn[2025810] _1_numChunks[2025799] numChunks[1808417])
              (2025824 '.=' _args_forcoforall_fn[2025810] _2_call_tmp[2025801] call_tmp[1543011])
              (2025828 '.=' _args_forcoforall_fn[2025810] _3_chunk[2025803] chunk[1888861])
              (2025832 '.=' _args_forcoforall_fn[2025810] _4__coforallCount[2025805] _coforallCount[1808533])
              (2025836 '.=' _args_forcoforall_fn[2025810] _5_x[2025807] x[1808616])
              val _args_vforcoforall_fn[2025840]:c_void_ptr[149] "temp"
              (2025844 'move' _args_vforcoforall_fn[2025840](2025842 'cast_to_void_star' _args_forcoforall_fn[2025810]))
              val _args_sizecoforall_fn[2025846]:int(64)[13] "temp"
              (2025850 'move' _args_sizecoforall_fn[2025846](2025848 'sizeof_bundle' _class_localscoforall_fn[2025794]))
              ref _taskListcoforall_fn[2025852]:c_void_ptr[149] "temp"
              (2025857 'move' _taskListcoforall_fn[2025852](2025854 '.' _coforallCount[1808533] taskList[12710]))
              val _taskListNodecoforall_fn[2025859]:int(64)[13] "temp"
              (2025863 'move' _taskListNodecoforall_fn[2025859](2025861 '_wide_get_node' _coforallCount[1808533]))
              (2025943 call wrapcoforall_fn[2025865] _taskListcoforall_fn[2025852] _taskListNodecoforall_fn[2025859] _args_vforcoforall_fn[2025840] _args_sizecoforall_fn[2025846] _args_forcoforall_fn[2025810])
              {
                (1888822 '=' i[1888775] coerce_tmp[1888791])
              }
              {
                (1888826 '<=' i[1888775] end[1888808])
              }
              {
                (1888832 '+=' i[1888775] 1)
              }
            }
            label _endthese[1888855]
            val error[1808582]:Error[167942] "error variable" "temp"
            (1808584 'move' error[1808582] nil[44])
            (1808588 call _waitEndCount[1231805] _coforallCount[1808533] numTasks[1808539] error[1808582])
            val errorExists[2032703]:bool[10] "temp"
            (2032708 'move' errorExists[2032703](2032705 '!=' error[1808582] nil[44]))
            if errorExists[2032703]
            {
              (1808596 call chpl_propagate_error[170476] error[1808582])
            }
            val call_tmp[2195892]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195894 'move' call_tmp[2195892] _coforallCount[1808533])
            val coerce_tmp[2195897]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2195899 'move' coerce_tmp[2195897](2195901 'cast' object[22] _coforallCount[1808533]))
            const-val call_tmp[2195904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2195906 'move' call_tmp[2195904](2195908 'ptr_neq' coerce_tmp[2195897] nil[44]))
            if call_tmp[2195904]
            {
              val coerce_tmp[2195913]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2195915 'move' coerce_tmp[2195913] call_tmp[2195892])
              ref _field_destructor_tmp_[2195918]:AtomicT(int(64))[938064] "temp"
              (2195920 'move' _field_destructor_tmp_[2195918](2195922 '.' coerce_tmp[2195913] i[943266]))
              (2195926 call deinit[1402160] _field_destructor_tmp_[2195918])
              val _parent_destructor_tmp_[2195928]:_EndCountBase[12715] "temp"
              (2195930 'move' _parent_destructor_tmp_[2195928](2195932 'cast' _EndCountBase[12715] coerce_tmp[2195913]))
              const-ref _field_destructor_tmp_[2195935]:chpl_TaskErrors[168306] "temp"
              (2195937 'move' _field_destructor_tmp_[2195935](2195939 '.' _parent_destructor_tmp_[2195928] errors[12705]))
              const-ref _field_destructor_tmp_[2195942]:chpl_LocalSpinlock[187398] "temp"
              (2195944 'move' _field_destructor_tmp_[2195942](2195946 '.' _field_destructor_tmp_[2195935] _errorsLock[168229]))
              ref _field_destructor_tmp_[2195949]:AtomicBool[45874] "temp"
              (2195951 'move' _field_destructor_tmp_[2195949](2195953 '.' _field_destructor_tmp_[2195942] l[187283]))
              (2195957 call deinit[44860] _field_destructor_tmp_[2195949])
              const-val call_tmp[2195959]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
              (2195961 'move' call_tmp[2195959](2195963 '_wide_get_addr' call_tmp[2195892]))
              (2195966 call chpl_here_free[188093] call_tmp[2195959])
            }
          }
          label _endthese[1808612]
          (1804102 call chpl_after_forall_fence[13069])
        }
        {
          (1543039 call halt[154071] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    label _end_init_elts[1543044]
    (1543046 return _void[55])
  }
  val chpl_mem_descInt_t[11653]:int(16)[90] "dead at end of block" "extern" "insert auto destroy" "no doc" "type variable"
  type _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360]
  type _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660]
  type _ddata(locale)[1251892]
  type _ddata(unmanaged localesSignal?)[1313711]
  type _ddata(real(64))[1353617]
  type _ddata(int(64))[1520710]
  type _ddata(uint(64))[1539178]
  function _ddata_allocate_noinit[1215883](const in arg size[1215887]:int(64)[13], ref arg callPostAlloc[1215889]:bool[10], const in arg subloc[1215895]:int(32)[95]) : _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1216040]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1216270 'move' _formal_tmp_callPostAlloc[1216040] 0)
    val ret[1215897]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] "dead after last mention" "RVV" "temp"
    val ret[1215931]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] "dead at end of block" "insert auto destroy"
    (1216275 'move' ret[1215931](1216273 'cast' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] nil[44]))
    const-val call_tmp[1215950]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036616]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036618 'move' call_tmp[2036616](2036620 'cast' uint(64)[115] size[1215887]))
    (1215952 'move' call_tmp[1215950] call_tmp[2036616])
    const-val call_tmp[1215958]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2191747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2191749 'move' call_tmp[2191747](2191751 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660]))
    const-val call_tmp[2191753]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2191755 'move' call_tmp[2191753](2191757 'cast' uint(64)[115] call_tmp[2191747]))
    (1215960 'move' call_tmp[1215958] call_tmp[2191753])
    const-val call_tmp[1215965]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1215967 'move' call_tmp[1215965](1215970 call chpl_mem_array_alloc[1215907] call_tmp[1215950] call_tmp[1215958] subloc[1215895] _formal_tmp_callPostAlloc[1216040]))
    val call_tmp[1215975]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2191811]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] "dead after last mention" "expr temp" "maybe param" "temp"
    (2191813 'move' call_tmp[2191811](2191815 'cast' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660] call_tmp[1215965]))
    (1215977 'move' call_tmp[1215975] call_tmp[2191811])
    (2191827 '=' ret[1215931] call_tmp[1215975])
    (1215991 'move' ret[1215897] ret[1215931])
    (1799460 '=' callPostAlloc[1215889] _formal_tmp_callPostAlloc[1216040])
    label _end__ddata_allocate_noinit[1215999]
    (1216001 return ret[1215897])
  }
  function _ddata_allocate_noinit[1245054](const in arg size[1245058]:int(64)[13], ref arg callPostAlloc[1245060]:bool[10], const in arg subloc[1245066]:int(32)[95]) : _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1245211]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1245441 'move' _formal_tmp_callPostAlloc[1245211] 0)
    val ret[1245068]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] "dead after last mention" "RVV" "temp"
    val ret[1245102]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] "dead at end of block" "insert auto destroy"
    (1245446 'move' ret[1245102](1245444 'cast' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] nil[44]))
    const-val call_tmp[1245121]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036756]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036758 'move' call_tmp[2036756](2036760 'cast' uint(64)[115] size[1245058]))
    (1245123 'move' call_tmp[1245121] call_tmp[2036756])
    const-val call_tmp[1245129]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2198060]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2198062 'move' call_tmp[2198060](2198064 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360]))
    const-val call_tmp[2198066]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2198068 'move' call_tmp[2198066](2198070 'cast' uint(64)[115] call_tmp[2198060]))
    (1245131 'move' call_tmp[1245129] call_tmp[2198066])
    const-val call_tmp[1245136]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1245138 'move' call_tmp[1245136](1245141 call chpl_mem_array_alloc[1245078] call_tmp[1245121] call_tmp[1245129] subloc[1245066] _formal_tmp_callPostAlloc[1245211]))
    val call_tmp[1245146]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2198124]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] "dead after last mention" "expr temp" "maybe param" "temp"
    (2198126 'move' call_tmp[2198124](2198128 'cast' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360] call_tmp[1245136]))
    (1245148 'move' call_tmp[1245146] call_tmp[2198124])
    (2198140 '=' ret[1245102] call_tmp[1245146])
    (1245162 'move' ret[1245068] ret[1245102])
    (1799570 '=' callPostAlloc[1245060] _formal_tmp_callPostAlloc[1245211])
    label _end__ddata_allocate_noinit[1245170]
    (1245172 return ret[1245068])
  }
  function _ddata_allocate_noinit[1256566](const in arg size[1256570]:int(64)[13], ref arg callPostAlloc[1256572]:bool[10], const in arg subloc[1256578]:int(32)[95]) : _ddata(locale)[1251892] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1256723]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1256953 'move' _formal_tmp_callPostAlloc[1256723] 0)
    val ret[1256580]:_ddata(locale)[1251892] "dead after last mention" "RVV" "temp"
    val ret[1256614]:_ddata(locale)[1251892] "dead at end of block" "insert auto destroy"
    (1256958 'move' ret[1256614](1256956 'cast' _ddata(locale)[1251892] nil[44]))
    const-val call_tmp[1256633]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036786]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036788 'move' call_tmp[2036786](2036790 'cast' uint(64)[115] size[1256570]))
    (1256635 'move' call_tmp[1256633] call_tmp[2036786])
    const-val call_tmp[1256641]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2200597]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2200599 'move' call_tmp[2200597](2200601 'sizeof_ddata_element' _ddata(locale)[1251892]))
    const-val call_tmp[2200603]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2200605 'move' call_tmp[2200603](2200607 'cast' uint(64)[115] call_tmp[2200597]))
    (1256643 'move' call_tmp[1256641] call_tmp[2200603])
    const-val call_tmp[1256648]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1256650 'move' call_tmp[1256648](1256653 call chpl_mem_array_alloc[1256590] call_tmp[1256633] call_tmp[1256641] subloc[1256578] _formal_tmp_callPostAlloc[1256723]))
    val call_tmp[1256658]:_ddata(locale)[1251892] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2200677]:_ddata(locale)[1251892] "dead after last mention" "expr temp" "maybe param" "temp"
    (2200679 'move' call_tmp[2200677](2200681 'cast' _ddata(locale)[1251892] call_tmp[1256648]))
    (1256660 'move' call_tmp[1256658] call_tmp[2200677])
    (2200703 '=' ret[1256614] call_tmp[1256658])
    (1256674 'move' ret[1256580] ret[1256614])
    (1799587 '=' callPostAlloc[1256572] _formal_tmp_callPostAlloc[1256723])
    label _end__ddata_allocate_noinit[1256682]
    (1256684 return ret[1256580])
  }
  function _ddata_allocate_noinit[1316940](const in arg size[1316944]:int(64)[13], ref arg callPostAlloc[1316946]:bool[10], const in arg subloc[1316952]:int(32)[95]) : _ddata(unmanaged localesSignal?)[1313711] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1317097]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1317327 'move' _formal_tmp_callPostAlloc[1317097] 0)
    val ret[1316954]:_ddata(unmanaged localesSignal?)[1313711] "dead after last mention" "RVV" "temp"
    val ret[1316988]:_ddata(unmanaged localesSignal?)[1313711] "dead at end of block" "insert auto destroy"
    (1317332 'move' ret[1316988](1317330 'cast' _ddata(unmanaged localesSignal?)[1313711] nil[44]))
    const-val call_tmp[1317007]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036846]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036848 'move' call_tmp[2036846](2036850 'cast' uint(64)[115] size[1316944]))
    (1317009 'move' call_tmp[1317007] call_tmp[2036846])
    const-val call_tmp[1317015]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2212087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212089 'move' call_tmp[2212087](2212091 'sizeof_ddata_element' _ddata(unmanaged localesSignal?)[1313711]))
    const-val call_tmp[2212093]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212095 'move' call_tmp[2212093](2212097 'cast' uint(64)[115] call_tmp[2212087]))
    (1317017 'move' call_tmp[1317015] call_tmp[2212093])
    const-val call_tmp[1317022]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317024 'move' call_tmp[1317022](1317027 call chpl_mem_array_alloc[1316964] call_tmp[1317007] call_tmp[1317015] subloc[1316952] _formal_tmp_callPostAlloc[1317097]))
    val call_tmp[1317032]:_ddata(unmanaged localesSignal?)[1313711] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2212167]:_ddata(unmanaged localesSignal?)[1313711] "dead after last mention" "expr temp" "maybe param" "temp"
    (2212169 'move' call_tmp[2212167](2212171 'cast' _ddata(unmanaged localesSignal?)[1313711] call_tmp[1317022]))
    (1317034 'move' call_tmp[1317032] call_tmp[2212167])
    (2212193 '=' ret[1316988] call_tmp[1317032])
    (1317048 'move' ret[1316954] ret[1316988])
    (1800168 '=' callPostAlloc[1316946] _formal_tmp_callPostAlloc[1317097])
    label _end__ddata_allocate_noinit[1317056]
    (1317058 return ret[1316954])
  }
  function _ddata_allocate_noinit[1356846](const in arg size[1356850]:int(64)[13], ref arg callPostAlloc[1356852]:bool[10], const in arg subloc[1356858]:int(32)[95]) : _ddata(real(64))[1353617] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1357003]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1357233 'move' _formal_tmp_callPostAlloc[1357003] 0)
    val ret[1356860]:_ddata(real(64))[1353617] "dead after last mention" "RVV" "temp"
    val ret[1356894]:_ddata(real(64))[1353617] "dead at end of block" "insert auto destroy"
    (1357238 'move' ret[1356894](1357236 'cast' _ddata(real(64))[1353617] nil[44]))
    const-val call_tmp[1356913]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036886]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036888 'move' call_tmp[2036886](2036890 'cast' uint(64)[115] size[1356850]))
    (1356915 'move' call_tmp[1356913] call_tmp[2036886])
    const-val call_tmp[1356921]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2224383]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224385 'move' call_tmp[2224383](2224387 'sizeof_ddata_element' _ddata(real(64))[1353617]))
    const-val call_tmp[2224389]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224391 'move' call_tmp[2224389](2224393 'cast' uint(64)[115] call_tmp[2224383]))
    (1356923 'move' call_tmp[1356921] call_tmp[2224389])
    const-val call_tmp[1356928]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1356930 'move' call_tmp[1356928](1356933 call chpl_mem_array_alloc[1356870] call_tmp[1356913] call_tmp[1356921] subloc[1356858] _formal_tmp_callPostAlloc[1357003]))
    val call_tmp[1356938]:_ddata(real(64))[1353617] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2224463]:_ddata(real(64))[1353617] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224465 'move' call_tmp[2224463](2224467 'cast' _ddata(real(64))[1353617] call_tmp[1356928]))
    (1356940 'move' call_tmp[1356938] call_tmp[2224463])
    (2224489 '=' ret[1356894] call_tmp[1356938])
    (1356954 'move' ret[1356860] ret[1356894])
    (1800443 '=' callPostAlloc[1356852] _formal_tmp_callPostAlloc[1357003])
    label _end__ddata_allocate_noinit[1356962]
    (1356964 return ret[1356860])
  }
  function _ddata_allocate_noinit[1523939](const in arg size[1523943]:int(64)[13], ref arg callPostAlloc[1523945]:bool[10], const in arg subloc[1523951]:int(32)[95]) : _ddata(int(64))[1520710] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1524096]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1524326 'move' _formal_tmp_callPostAlloc[1524096] 0)
    val ret[1523953]:_ddata(int(64))[1520710] "dead after last mention" "RVV" "temp"
    val ret[1523987]:_ddata(int(64))[1520710] "dead at end of block" "insert auto destroy"
    (1524331 'move' ret[1523987](1524329 'cast' _ddata(int(64))[1520710] nil[44]))
    const-val call_tmp[1524006]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2036986]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036988 'move' call_tmp[2036986](2036990 'cast' uint(64)[115] size[1523943]))
    (1524008 'move' call_tmp[1524006] call_tmp[2036986])
    const-val call_tmp[1524014]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2235524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235526 'move' call_tmp[2235524](2235528 'sizeof_ddata_element' _ddata(int(64))[1520710]))
    const-val call_tmp[2235530]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235532 'move' call_tmp[2235530](2235534 'cast' uint(64)[115] call_tmp[2235524]))
    (1524016 'move' call_tmp[1524014] call_tmp[2235530])
    const-val call_tmp[1524021]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1524023 'move' call_tmp[1524021](1524026 call chpl_mem_array_alloc[1523963] call_tmp[1524006] call_tmp[1524014] subloc[1523951] _formal_tmp_callPostAlloc[1524096]))
    val call_tmp[1524031]:_ddata(int(64))[1520710] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2235604]:_ddata(int(64))[1520710] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235606 'move' call_tmp[2235604](2235608 'cast' _ddata(int(64))[1520710] call_tmp[1524021]))
    (1524033 'move' call_tmp[1524031] call_tmp[2235604])
    (2235630 '=' ret[1523987] call_tmp[1524031])
    (1524047 'move' ret[1523953] ret[1523987])
    (1801584 '=' callPostAlloc[1523945] _formal_tmp_callPostAlloc[1524096])
    label _end__ddata_allocate_noinit[1524055]
    (1524057 return ret[1523953])
  }
  function _ddata_allocate_noinit[1542407](const in arg size[1542411]:int(64)[13], ref arg callPostAlloc[1542413]:bool[10], const in arg subloc[1542419]:int(32)[95]) : _ddata(uint(64))[1539178] "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    val _formal_tmp_callPostAlloc[1542564]:bool[10] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1542794 'move' _formal_tmp_callPostAlloc[1542564] 0)
    val ret[1542421]:_ddata(uint(64))[1539178] "dead after last mention" "RVV" "temp"
    val ret[1542455]:_ddata(uint(64))[1539178] "dead at end of block" "insert auto destroy"
    (1542799 'move' ret[1542455](1542797 'cast' _ddata(uint(64))[1539178] nil[44]))
    const-val call_tmp[1542474]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2037016]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2037018 'move' call_tmp[2037016](2037020 'cast' uint(64)[115] size[1542411]))
    (1542476 'move' call_tmp[1542474] call_tmp[2037016])
    const-val call_tmp[1542482]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2236914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236916 'move' call_tmp[2236914](2236918 'sizeof_ddata_element' _ddata(uint(64))[1539178]))
    const-val call_tmp[2236920]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236922 'move' call_tmp[2236920](2236924 'cast' uint(64)[115] call_tmp[2236914]))
    (1542484 'move' call_tmp[1542482] call_tmp[2236920])
    const-val call_tmp[1542489]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1542491 'move' call_tmp[1542489](1542494 call chpl_mem_array_alloc[1542431] call_tmp[1542474] call_tmp[1542482] subloc[1542419] _formal_tmp_callPostAlloc[1542564]))
    val call_tmp[1542499]:_ddata(uint(64))[1539178] "dead after last mention" "expr temp" "maybe param" "temp"
    val call_tmp[2236994]:_ddata(uint(64))[1539178] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236996 'move' call_tmp[2236994](2236998 'cast' _ddata(uint(64))[1539178] call_tmp[1542489]))
    (1542501 'move' call_tmp[1542499] call_tmp[2236994])
    (2237020 '=' ret[1542455] call_tmp[1542499])
    (1542515 'move' ret[1542421] ret[1542455])
    (1801656 '=' callPostAlloc[1542413] _formal_tmp_callPostAlloc[1542564])
    label _end__ddata_allocate_noinit[1542523]
    (1542525 return ret[1542421])
  }
  type _ref(int(64))[934535] val _val[934533]:int(64)[13]
  type _ref(uint(64))[934564] val _val[934562]:uint(64)[115]
  type _ref(int(32))[934589] val _val[934587]:int(32)[95]
  type _ref(real(64))[934680] val _val[934678]:real(64)[16]
  type _ref(qio_file_ptr_t)[934836] val _val[934834]:qio_file_ptr_t[231356]
  type _ref(qio_channel_ptr_t)[934847] val _val[934845]:qio_channel_ptr_t[231382]
  type _ref(uint(8))[934871] val _val[934869]:uint(8)[100]
  type _ref(bool)[935162] val _val[935160]:bool[10]
  type _ref(c_string)[935190] val _val[935188]:c_string[19]
  type _ref(c_ptr(uint(8)))[935395] val _val[935393]:c_ptr(uint(8))[935386]
  type _ref(string)[935902] val _val[935900]:string[26]
  type _ref(bytes)[935950] val _val[935948]:bytes[24]
  type _ref(nil)[935991] val _val[935989]:nil[42]
  type _ref(c_void_ptr)[936085] val _val[936083]:c_void_ptr[149]
  type _ref(chpl_localeID_t)[936103] val _val[936101]:chpl_localeID_t[209306]
  type _ref(ArrayInit)[936444] val _val[936442]:ArrayInit[11152]
  type _ref(AtomicT(int(64)))[938073] val _val[938071]:AtomicT(int(64))[938064]
  type _ref(atomic_int_least64_t)[938651] val _val[938649]:atomic_int_least64_t[938172]
  type _ref(_EndCountBase)[938806] val _val[938804]:_EndCountBase[12715]
  type _ref(object)[938816] val _val[938814]:object[22]
  type _ref(chpl_TaskErrors)[938870] val _val[938868]:chpl_TaskErrors[168306]
  type _ref(Error)[938950] val _val[938948]:Error[167942]
  type _ref(chpl_LocalSpinlock)[939001] val _val[938999]:chpl_LocalSpinlock[187398]
  type _ref(AtomicBool)[939112] val _val[939110]:AtomicBool[45874]
  type _ref(atomic_bool)[939674] val _val[939672]:atomic_bool[939147]
  type _ref(_EndCount(AtomicT(int(64)),int(64)))[943288] val _val[943286]:_EndCount(AtomicT(int(64)),int(64))[943272]
  type _ref(file)[946657] val _val[946655]:file[235497]
  type _ref(byteIndex)[946682] val _val[946680]:byteIndex[28170]
  type _ref(codepointIndex)[946692] val _val[946690]:codepointIndex[28274]
  type _ref(syserr)[946755] val _val[946753]:syserr[223501]
  type _ref(locale)[946767] val _val[946765]:locale[28]
  type _ref(c_fn_ptr)[946787] val _val[946785]:c_fn_ptr[152]
  type _ref(1*c_string)[954407] val _val[954405]:1*c_string[954344]
  type _ref((c_ptr(uint(8)),int(64)))[959503] val _val[959501]:(c_ptr(uint(8)),int(64))[959411]
  type _ref((syserr,int(32),int(32)))[960497] val _val[960495]:(syserr,int(32),int(32))[960390]
  type _ref(DecodeError)[961346] val _val[961344]:DecodeError[168098]
  type _ref(owned DecodeError)[962160] val _val[962158]:owned DecodeError[962080]
  type _ref(owned Error?)[962221] val _val[962219]:owned Error?[962212]
  type _ref(owned Error)[962266] val _val[962264]:owned Error[962257]
  type _ref(chpl_root_locale_accum)[963309] val _val[963307]:chpl_root_locale_accum[208356]
  type _ref(localesBarrier)[963319] val _val[963317]:localesBarrier[92491]
  type _ref(iostyle)[963349] val _val[963347]:iostyle[231761]
  type _ref(ioNewline)[963379] val _val[963377]:ioNewline[238618]
  type _ref(chpl_opaque_array)[963439] val _val[963437]:chpl_opaque_array[188587]
  type _ref(chpl_task_bundle_t)[963529] val _val[963527]:chpl_task_bundle_t[209320]
  type _ref(chpl_localeTreeRecord)[963559] val _val[963557]:chpl_localeTreeRecord[155188]
  type _ref(NilThrownError)[965312] val _val[965310]:NilThrownError[167987]
  type _ref(2*int(32))[967550] val _val[967548]:2*int(32)[967477]
  type _ref(_ir_chpl_direct_param_stride_range_iter)[973723] val _val[973721]:_ir_chpl_direct_param_stride_range_iter[973612]
  type _ref(_ic_chpl_direct_param_stride_range_iter)[973749] val _val[973747]:_ic_chpl_direct_param_stride_range_iter[973606]
  type _ref(_ir_chpl_direct_counted_range_iter_helper)[973977] val _val[973975]:_ir_chpl_direct_counted_range_iter_helper[973866]
  type _ref(_ic_chpl_direct_counted_range_iter_helper)[974003] val _val[974001]:_ic_chpl_direct_counted_range_iter_helper[973860]
  type _ref(_ir_chpl_direct_counted_range_iter)[974227] val _val[974225]:_ir_chpl_direct_counted_range_iter[974116]
  type _ref(_ic_chpl_direct_counted_range_iter)[974253] val _val[974251]:_ic_chpl_direct_counted_range_iter[974110]
  type _ref(chpl_ModuleDeinit)[979670] val _val[979668]:chpl_ModuleDeinit[19824]
  type _ref(BaseLocale)[980226] val _val[980224]:BaseLocale[91205]
  type _ref(DummyLocale)[980832] val _val[980830]:DummyLocale[91442]
  type _ref(6*string)[982941] val _val[982939]:6*string[982845]
  type _ref(6*string)[983334] val _val[983332]:6*string[983011]
  type _ref(channel(false,dynamic,true))[983430] val _val[983428]:channel(false,dynamic,true)[983421]
  type _ref(AbstractRootLocale)[983648] val _val[983646]:AbstractRootLocale[92017]
  type _ref(SystemError)[984848] val _val[984846]:SystemError[264762]
  type _ref(BlockingIOError)[985894] val _val[985892]:BlockingIOError[264832]
  type _ref(owned BlockingIOError)[986513] val _val[986511]:owned BlockingIOError[986433]
  type _ref(ChildProcessError)[986573] val _val[986571]:ChildProcessError[264890]
  type _ref(owned ChildProcessError)[987155] val _val[987153]:owned ChildProcessError[987075]
  type _ref(ConnectionError)[987219] val _val[987217]:ConnectionError[264943]
  type _ref(BrokenPipeError)[987242] val _val[987240]:BrokenPipeError[265001]
  type _ref(owned BrokenPipeError)[987853] val _val[987851]:owned BrokenPipeError[987773]
  type _ref(ConnectionAbortedError)[987919] val _val[987917]:ConnectionAbortedError[265059]
  type _ref(owned ConnectionAbortedError)[988501] val _val[988499]:owned ConnectionAbortedError[988421]
  type _ref(ConnectionRefusedError)[988567] val _val[988565]:ConnectionRefusedError[265117]
  type _ref(owned ConnectionRefusedError)[989149] val _val[989147]:owned ConnectionRefusedError[989069]
  type _ref(ConnectionResetError)[989215] val _val[989213]:ConnectionResetError[265175]
  type _ref(owned ConnectionResetError)[989797] val _val[989795]:owned ConnectionResetError[989717]
  type _ref(FileExistsError)[989857] val _val[989855]:FileExistsError[265233]
  type _ref(owned FileExistsError)[990439] val _val[990437]:owned FileExistsError[990359]
  type _ref(FileNotFoundError)[990499] val _val[990497]:FileNotFoundError[265291]
  type _ref(owned FileNotFoundError)[991081] val _val[991079]:owned FileNotFoundError[991001]
  type _ref(InterruptedError)[991141] val _val[991139]:InterruptedError[265349]
  type _ref(owned InterruptedError)[991723] val _val[991721]:owned InterruptedError[991643]
  type _ref(IsADirectoryError)[991783] val _val[991781]:IsADirectoryError[265407]
  type _ref(owned IsADirectoryError)[992365] val _val[992363]:owned IsADirectoryError[992285]
  type _ref(NotADirectoryError)[992425] val _val[992423]:NotADirectoryError[265465]
  type _ref(owned NotADirectoryError)[993007] val _val[993005]:owned NotADirectoryError[992927]
  type _ref(PermissionError)[993071] val _val[993069]:PermissionError[265523]
  type _ref(owned PermissionError)[993653] val _val[993651]:owned PermissionError[993573]
  type _ref(ProcessLookupError)[993713] val _val[993711]:ProcessLookupError[265581]
  type _ref(owned ProcessLookupError)[994295] val _val[994293]:owned ProcessLookupError[994215]
  type _ref(TimeoutError)[994355] val _val[994353]:TimeoutError[265639]
  type _ref(owned TimeoutError)[994937] val _val[994935]:owned TimeoutError[994857]
  type _ref(IOError)[995000] val _val[994998]:IOError[265692]
  type _ref(EOFError)[995023] val _val[995021]:EOFError[265750]
  type _ref(owned EOFError)[995640] val _val[995638]:owned EOFError[995560]
  type _ref(UnexpectedEOFError)[995709] val _val[995707]:UnexpectedEOFError[265808]
  type _ref(owned UnexpectedEOFError)[996297] val _val[996295]:owned UnexpectedEOFError[996217]
  type _ref(BadFormatError)[996366] val _val[996364]:BadFormatError[265866]
  type _ref(owned BadFormatError)[996951] val _val[996949]:owned BadFormatError[996871]
  type _ref(owned IOError)[997524] val _val[997522]:owned IOError[997462]
  type _ref(owned SystemError)[998093] val _val[998091]:owned SystemError[998031]
  type _ref(channel(true,dynamic,true))[1019002] val _val[1019000]:channel(true,dynamic,true)[1018993]
  type _ref(DefaultComparator)[1021284] val _val[1021282]:DefaultComparator[290466]
  type _ref(ReverseComparator(DefaultComparator))[1021313] val _val[1021311]:ReverseComparator(DefaultComparator)[1021304]
  type _ref(range(byteIndex,bounded,false))[1022933] val _val[1022931]:range(byteIndex,bounded,false)[1022924]
  type _ref(range(int(64),bounded,false))[1023990] val _val[1023988]:range(int(64),bounded,false)[1023946]
  type _ref(2*int(64))[1037252] val _val[1037250]:2*int(64)[1037179]
  type _ref((string,range(byteIndex,bounded,false),string,int(64)))[1041619] val _val[1041617]:(string,range(byteIndex,bounded,false),string,int(64))[1041540]
  type _ref(1*byteIndex)[1054270] val _val[1054268]:1*byteIndex[1054220]
  type _ref(channel(true,dynamic,false))[1058094] val _val[1058092]:channel(true,dynamic,false)[1058085]
  type _ref(IllegalArgumentError)[1061099] val _val[1061097]:IllegalArgumentError[168204]
  type _ref(owned IllegalArgumentError)[1061705] val _val[1061703]:owned IllegalArgumentError[1061625]
  type _ref(channel(false,dynamic,false))[1077724] val _val[1077722]:channel(false,dynamic,false)[1077715]
  type _ref((range(int(64),bounded,false),int(64)))[1083465] val _val[1083463]:(range(int(64),bounded,false),int(64))[1081903]
  type _ref(range(int(64),boundedLow,false))[1084588] val _val[1084586]:range(int(64),boundedLow,false)[1084544]
  type _ref(_ir_these_range_int64_t_bounded_F)[1093799] val _val[1093797]:_ir_these_range_int64_t_bounded_F[1093688]
  type _ref(_ic_these_range_int64_t_bounded_F)[1093825] val _val[1093823]:_ic_these_range_int64_t_bounded_F[1093682]
  type _ref(_ir_chpl_direct_param_stride_range_iter)[1100360] val _val[1100358]:_ir_chpl_direct_param_stride_range_iter[1100249]
  type _ref(_ic_chpl_direct_param_stride_range_iter)[1100386] val _val[1100384]:_ic_chpl_direct_param_stride_range_iter[1100243]
  type _ref(_ir_chpl_direct_counted_range_iter_helper)[1100614] val _val[1100612]:_ir_chpl_direct_counted_range_iter_helper[1100503]
  type _ref(_ic_chpl_direct_counted_range_iter_helper)[1100640] val _val[1100638]:_ic_chpl_direct_counted_range_iter_helper[1100497]
  type _ref(_ir_chpl_direct_counted_range_iter)[1100864] val _val[1100862]:_ir_chpl_direct_counted_range_iter[1100753]
  type _ref(_ic_chpl_direct_counted_range_iter)[1100890] val _val[1100888]:_ic_chpl_direct_counted_range_iter[1100747]
  type _ref(_ir_chpl_bytes__ref_string)[1105321] val _val[1105319]:_ir_chpl_bytes__ref_string[1105210]
  type _ref(_ic_chpl_bytes__ref_string)[1105347] val _val[1105345]:_ic_chpl_bytes__ref_string[1105204]
  type _ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1105622] val _val[1105620]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1105514]
  type _ref((int(64),uint(8)))[1108052] val _val[1108050]:(int(64),uint(8))[1107988]
  type _ref((string,range(int(64),bounded,false),string,int(64)))[1111246] val _val[1111244]:(string,range(int(64),bounded,false),string,int(64))[1111167]
  type _ref((byteIndex,int(64)))[1118237] val _val[1118235]:(byteIndex,int(64))[1118181]
  type _ref(_ir__indexLen__ref_string)[1118370] val _val[1118368]:_ir__indexLen__ref_string[1118259]
  type _ref(_ic__indexLen__ref_string)[1118396] val _val[1118394]:_ic__indexLen__ref_string[1118253]
  type _ref((int(32),byteIndex,int(64)))[1119149] val _val[1119147]:(int(32),byteIndex,int(64))[1119077]
  type _ref(_ir__cpIndexLen__ref_string)[1119437] val _val[1119435]:_ir__cpIndexLen__ref_string[1119326]
  type _ref(_ic__cpIndexLen__ref_string)[1119463] val _val[1119461]:_ic__cpIndexLen__ref_string[1119320]
  type _ref(_ir_codepoints__ref_string)[1119901] val _val[1119899]:_ir_codepoints__ref_string[1119790]
  type _ref(_ic_codepoints__ref_string)[1119927] val _val[1119925]:_ic_codepoints__ref_string[1119784]
  type _ref(_ir_doSplitWSNoEnc)[1121527] val _val[1121525]:_ir_doSplitWSNoEnc[1121416]
  type _ref(_ic_doSplitWSNoEnc)[1121553] val _val[1121551]:_ic_doSplitWSNoEnc[1121410]
  type _ref((string,range(int(64),boundedLow,false),string,int(64)))[1126056] val _val[1126054]:(string,range(int(64),boundedLow,false),string,int(64))[1125977]
  type _ref(range(byteIndex,boundedLow,false))[1140381] val _val[1140379]:range(byteIndex,boundedLow,false)[1140337]
  type _ref((string,range(byteIndex,boundedLow,false),string,int(64)))[1144227] val _val[1144225]:(string,range(byteIndex,boundedLow,false),string,int(64))[1144148]
  type _ref(_ir_split__ref_string)[1153555] val _val[1153553]:_ir_split__ref_string[1153444]
  type _ref(_ic_split__ref_string)[1153581] val _val[1153579]:_ic_split__ref_string[1153438]
  type _ref((string,codepointIndex,string))[1155546] val _val[1155544]:(string,codepointIndex,string)[1155489]
  type _ref((string,codepointIndex,string,int(64)))[1173501] val _val[1173499]:(string,codepointIndex,string,int(64))[1173429]
  type _ref(range(byteIndex,boundedHigh,false))[1181829] val _val[1181827]:range(byteIndex,boundedHigh,false)[1181785]
  type _ref(range(int(64),boundedHigh,false))[1184304] val _val[1184302]:range(int(64),boundedHigh,false)[1184295]
  type _ref((string,range(byteIndex,boundedHigh,false),string,int(64)))[1188364] val _val[1188362]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1188285]
  type _ref(BaseArr)[1205183] val _val[1205181]:BaseArr[149545]
  type _ref(chpl__simpleSet(unmanaged BaseArr))[1205217] val _val[1205215]:chpl__simpleSet(unmanaged BaseArr)[1205208]
  type _ref(chpl__hashtable(unmanaged BaseArr,nothing))[1205303] val _val[1205301]:chpl__hashtable(unmanaged BaseArr,nothing)[1205294]
  type _ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1205346] val _val[1205344]:chpl_TableEntry(unmanaged BaseArr,nothing)[1205337]
  type _ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1205369] val _val[1205367]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1205360]
  type _ref(chpl__rehashHelpers)[1205409] val _val[1205407]:chpl__rehashHelpers[202354]
  type _ref(owned chpl__rehashHelpers?)[1205442] val _val[1205440]:owned chpl__rehashHelpers?[1205433]
  type _ref(BaseDom)[1205483] val _val[1205481]:BaseDom[146729]
  type _ref(chpl__simpleSet(unmanaged BaseDom))[1205517] val _val[1205515]:chpl__simpleSet(unmanaged BaseDom)[1205508]
  type _ref(chpl__hashtable(unmanaged BaseDom,nothing))[1205603] val _val[1205601]:chpl__hashtable(unmanaged BaseDom,nothing)[1205594]
  type _ref(chpl_TableEntry(unmanaged BaseDom,nothing))[1205646] val _val[1205644]:chpl_TableEntry(unmanaged BaseDom,nothing)[1205637]
  type _ref(_ddata(chpl_TableEntry(unmanaged BaseDom,nothing)))[1205669] val _val[1205667]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1205660]
  type _ref(BaseDist)[1205717] val _val[1205715]:BaseDist[145934]
  type _ref(DefaultDist)[1205740] val _val[1205738]:DefaultDist[93997]
  type _ref(57*int(64))[1208351] val _val[1208349]:57*int(64)[1207351]
  type _ref((string,int(64)))[1210583] val _val[1210581]:(string,int(64))[1210527]
  type _ref(_ir__allSlots)[1218583] val _val[1218581]:_ir__allSlots[1218472]
  type _ref(_ic__allSlots)[1218609] val _val[1218607]:_ic__allSlots[1218466]
  type _ref(c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing)))[1220166] val _val[1220164]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1220157]
  type _ref(_ir_chpl_direct_range_iter)[1227332] val _val[1227330]:_ir_chpl_direct_range_iter[1227221]
  type _ref(_ic_chpl_direct_range_iter)[1227358] val _val[1227356]:_ic_chpl_direct_range_iter[1227215]
  type _ref(c_ptr(owned Error?))[1232374] val _val[1232372]:c_ptr(owned Error?)[1232365]
  type _ref(TaskErrors)[1232392] val _val[1232390]:TaskErrors[169660]
  type _ref(_ir_these_TaskErrors)[1234834] val _val[1234832]:_ir_these_TaskErrors[1234723]
  type _ref(_ic_these_TaskErrors)[1234860] val _val[1234858]:_ic_these_TaskErrors[1234717]
  type _ref(owned TaskErrors)[1238230] val _val[1238228]:owned TaskErrors[1238153]
  type _ref(DefaultDist)[1240528] val _val[1240526]:DefaultDist[1240511]
  type _ref(1*range(int(64),bounded,false))[1241369] val _val[1241367]:1*range(int(64),bounded,false)[1241311]
  type _ref(c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing)))[1247094] val _val[1247092]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1247085]
  type _ref(BaseRectangularDom(1,int(64),false))[1247530] val _val[1247528]:BaseRectangularDom(1,int(64),false)[1247514]
  type _ref(domain(1,int(64),false))[1247564] val _val[1247562]:domain(1,int(64),false)[1247549]
  type _ref(_domain(unmanaged domain(1,int(64),false)))[1249121] val _val[1249119]:domain(1,int(64),false)[1249095]
  type _ref(_RuntimeTypeInfo)[1250188] val _val[1250186]:_RuntimeTypeInfo[1250171]
  type _ref(_ddata(locale))[1251901] val _val[1251899]:_ddata(locale)[1251892]
  type _ref(BaseArrOverRectangularDom(1,int(64),false))[1252733] val _val[1252731]:BaseArrOverRectangularDom(1,int(64),false)[1252717]
  type _ref(BaseRectangularArr(1,int(64),false,locale))[1252786] val _val[1252784]:BaseRectangularArr(1,int(64),false,locale)[1252770]
  type _ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1253000] val _val[1252998]:[domain(1,int(64),false)] locale[1252984]
  type _ref(1*int(64))[1253093] val _val[1253091]:1*int(64)[1253023]
  type _ref((bool,int(64)))[1261684] val _val[1261682]:(bool,int(64))[1261621]
  type _ref(chpl__hash_status)[1263683] val _val[1263681]:chpl__hash_status[200420]
  type _ref(_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing)[1268309] val _val[1268307]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1268198]
  type _ref(_ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing)[1268335] val _val[1268333]:_ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1268192]
  type _ref((string,int(64),string))[1269737] val _val[1269735]:(string,int(64),string)[1269673]
  type _ref((string,int(64),string,int(64),string))[1276273] val _val[1276271]:(string,int(64),string,int(64),string)[1276186]
  type _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1283409] val _val[1283407]:[domain(1,int(64),false)] locale[1283383]
  type _ref(_RuntimeTypeInfo)[1283629] val _val[1283627]:_RuntimeTypeInfo[1283616]
  type _ref(_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing)[1286118] val _val[1286116]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1286007]
  type _ref(_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing)[1286144] val _val[1286142]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1286001]
  type _ref(_ir_these__ref_chpl__simpleSet_BaseArr)[1286692] val _val[1286690]:_ir_these__ref_chpl__simpleSet_BaseArr[1286581]
  type _ref(_ic_these__ref_chpl__simpleSet_BaseArr)[1286718] val _val[1286716]:_ic_these__ref_chpl__simpleSet_BaseArr[1286575]
  type _ref(4*string)[1288266] val _val[1288264]:4*string[1288192]
  type _ref(_ir_chpl_direct_pos_stride_range_iter)[1299469] val _val[1299467]:_ir_chpl_direct_pos_stride_range_iter[1299358]
  type _ref(_ic_chpl_direct_pos_stride_range_iter)[1299495] val _val[1299493]:_ic_chpl_direct_pos_stride_range_iter[1299352]
  type _ref(_ir_chpl__serialViewIter)[1299908] val _val[1299906]:_ir_chpl__serialViewIter[1299797]
  type _ref(_ic_chpl__serialViewIter)[1299934] val _val[1299932]:_ic_chpl__serialViewIter[1299791]
  type _ref(_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1300158] val _val[1300156]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1300047]
  type _ref(_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1300184] val _val[1300182]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1300041]
  type _ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1300763] val _val[1300761]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1300652]
  type _ref(_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1300789] val _val[1300787]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1300646]
  type _ref(RootLocale)[1301478] val _val[1301476]:RootLocale[89695]
  type _ref(_ir_these_DefaultRectangularDom_1_int64_t_F)[1303185] val _val[1303183]:_ir_these_DefaultRectangularDom_1_int64_t_F[1303074]
  type _ref(_ic_these_DefaultRectangularDom_1_int64_t_F)[1303211] val _val[1303209]:_ic_these_DefaultRectangularDom_1_int64_t_F[1303068]
  type _ref(_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F)[1311232] val _val[1311230]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1311121]
  type _ref(_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F)[1311258] val _val[1311256]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1311115]
  type _ref(localesSignal)[1312841] val _val[1312839]:localesSignal[92283]
  type _ref(_ddata(unmanaged localesSignal?))[1313720] val _val[1313718]:_ddata(unmanaged localesSignal?)[1313711]
  type _ref(BaseRectangularArr(1,int(64),false,unmanaged localesSignal?))[1314352] val _val[1314350]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1314336]
  type _ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1314566] val _val[1314564]:[domain(1,int(64),false)] unmanaged localesSignal?[1314550]
  type _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1321355] val _val[1321353]:[domain(1,int(64),false)] unmanaged localesSignal?[1321329]
  type _ref(_RuntimeTypeInfo)[1321575] val _val[1321573]:_RuntimeTypeInfo[1321562]
  type _ref(_ir_chpl__serialViewIter)[1326153] val _val[1326151]:_ir_chpl__serialViewIter[1326042]
  type _ref(_ic_chpl__serialViewIter)[1326179] val _val[1326177]:_ic_chpl__serialViewIter[1326036]
  type _ref(_ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1326403] val _val[1326401]:_ir_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1326292]
  type _ref(_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1326429] val _val[1326427]:_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1326286]
  type _ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1327008] val _val[1327006]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1326897]
  type _ref(_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1327034] val _val[1327032]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1326891]
  type _ref((string,string,int(64),string,range(int(64),bounded,false)))[1334652] val _val[1334650]:(string,string,int(64),string,range(int(64),bounded,false))[1334565]
  type _ref(c_ptr(int(64)))[1345844] val _val[1345842]:c_ptr(int(64))[1345835]
  type _ref(AbstractLocaleModel)[1346954] val _val[1346952]:AbstractLocaleModel[91503]
  type _ref(LocaleModel)[1346977] val _val[1346975]:LocaleModel[89196]
  type _ref(_ddata(real(64)))[1353626] val _val[1353624]:_ddata(real(64))[1353617]
  type _ref(BaseRectangularArr(1,int(64),false,real(64)))[1354258] val _val[1354256]:BaseRectangularArr(1,int(64),false,real(64))[1354242]
  type _ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1354472] val _val[1354470]:[domain(1,int(64),false)] real(64)[1354456]
  type _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1361452] val _val[1361450]:[domain(1,int(64),false)] real(64)[1361426]
  type _ref(_RuntimeTypeInfo)[1361672] val _val[1361670]:_RuntimeTypeInfo[1361659]
  type _ref(_ir_these_help_DefaultRectangularDom_1_int64_t_F)[1365275] val _val[1365273]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1365164]
  type _ref(_ic_these_help_DefaultRectangularDom_1_int64_t_F)[1365301] val _val[1365299]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1365158]
  type _ref(_ir_these_help_DefaultRectangularDom_1_int64_t_F)[1366109] val _val[1366107]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1365998]
  type _ref(_ic_these_help_DefaultRectangularDom_1_int64_t_F)[1366135] val _val[1366133]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1365992]
  type _ref(ReduceScanOp)[1370135] val _val[1370133]:ReduceScanOp[82301]
  type _ref(SumReduceScanOp(real(64)))[1370224] val _val[1370222]:SumReduceScanOp(real(64))[1370208]
  type _ref((int(64),ioNewline))[1372962] val _val[1372960]:(int(64),ioNewline)[1372905]
  type _ref(c_ptr(chpl_task_infoChapel_t))[1381096] val _val[1381094]:c_ptr(chpl_task_infoChapel_t)[1381087]
  type _ref((BaseArr,unmanaged BaseDom?))[1384579] val _val[1384577]:(BaseArr,unmanaged BaseDom?)[1384489]
  type _ref((unmanaged BaseDom?,unmanaged BaseDist?))[1385346] val _val[1385344]:(unmanaged BaseDom?,unmanaged BaseDist?)[1385283]
  type _ref(_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing)[1386781] val _val[1386779]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1386670]
  type _ref(_ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing)[1386807] val _val[1386805]:_ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1386664]
  type _ref(QioPluginFile)[1394196] val _val[1394194]:QioPluginFile[231927]
  type _ref(QioPluginChannel)[1394579] val _val[1394577]:QioPluginChannel[232010]
  type _ref(c_ptr(c_string))[1396440] val _val[1396438]:c_ptr(c_string)[1396431]
  type _ref(chpl_main_argument)[1397654] val _val[1397652]:chpl_main_argument[167374]
  type _ref(_ddata(int(64)))[1520719] val _val[1520717]:_ddata(int(64))[1520710]
  type _ref(BaseRectangularArr(1,int(64),false,int(64)))[1521351] val _val[1521349]:BaseRectangularArr(1,int(64),false,int(64))[1521335]
  type _ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1521565] val _val[1521563]:[domain(1,int(64),false)] int(64)[1521549]
  type _ref(_ddata(uint(64)))[1539187] val _val[1539185]:_ddata(uint(64))[1539178]
  type _ref(BaseRectangularArr(1,int(64),false,uint(64)))[1539819] val _val[1539817]:BaseRectangularArr(1,int(64),false,uint(64))[1539803]
  type _ref(DefaultRectangularArr(1,int(64),false,uint(64),int(64)))[1540033] val _val[1540031]:[domain(1,int(64),false)] uint(64)[1540017]
  type _ref(c_ptr(chpl_localeID_t))[1713837] val _val[1713835]:c_ptr(chpl_localeID_t)[1713828]
  type _ref(c_ptr(c_void_ptr))[1714105] val _val[1714103]:c_ptr(c_void_ptr)[1714096]
  type _ref(c_ptr(_ddata(locale)))[1717674] val _val[1717672]:c_ptr(_ddata(locale))[1717665]
  type _ref(c_ptr(_ddata(unmanaged localesSignal?)))[1718660] val _val[1718658]:c_ptr(_ddata(unmanaged localesSignal?))[1718651]
  type _ref(c_ptr(_ddata(real(64))))[1719591] val _val[1719589]:c_ptr(_ddata(real(64)))[1719582]
  type _ref(c_ptr(_ddata(int(64))))[1720522] val _val[1720520]:c_ptr(_ddata(int(64)))[1720513]
  type _ref(c_ptr(_ddata(uint(64))))[1721453] val _val[1721451]:c_ptr(_ddata(uint(64)))[1721444]
  function chpl_resetTaskSpawn[1226074](const in arg numTasks[1226076]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val dptpl[1226082]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1226084]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1226086]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1226088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2047520]:int(64)[13] "temp"
    (2047523 'move' inlineImm[2047520] 0)
    const-val call_tmp[2047526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047528 'move' call_tmp[2047526](2047530 '==' dataParTasksPerLocale[93289] inlineImm[2047520]))
    (1226090 'move' call_tmp[1226088] call_tmp[2047526])
    (1226096 'move' tmp[1226086] call_tmp[1226088])
    if tmp[1226086]
    {
      const-val tmp[1226103]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1226105]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783118]:locale[28] "temp"
      const-val call_tmp[2084247]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2084249]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2084251 'move' call_tmp[2084249](2084254 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
      (2084257 'move' call_tmp[2084247] call_tmp[2084249])
      const-val call_tmp[2084260]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2084262]:locale[28] "temp"
      (2084265 call chpl_localeID_to_locale[92857] call_tmp[2084247] ret_tmp[2084262])
      (2084268 'move' call_tmp[2084260] ret_tmp[2084262])
      (2084271 '=' ret_tmp[1783118] call_tmp[2084260])
      (1783121 'move' call_tmp[1226105] ret_tmp[1783118])
      val ret[2085027]:int(64)[13] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2085029]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2085031 'move' coerce_tmp[2085029](2085033 '.v' call_tmp[1226105] _instance[89979]))
      val coerce_tmp[2085036]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2085038 'move' coerce_tmp[2085036](2085040 'cast' object[22] coerce_tmp[2085029]))
      const-val call_tmp[2085043]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2085045 'move' call_tmp[2085043](2085047 'ptr_eq' coerce_tmp[2085036] nil[44]))
      if call_tmp[2085043]
      {
        (2085053 call nilCheckHalt[210068] "argument to ! is nil")
      }
      val coerce_tmp[2085056]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2085058 'move' coerce_tmp[2085056] coerce_tmp[2085029])
      (2085061 'move' ret[2085027](2085063 '.v' coerce_tmp[2085056] maxTaskPar[90747]))
      (1226111 'move' tmp[1226103] ret[2085027])
      (1226117 'move' tmp[1226084] tmp[1226103])
      ref i_x[2178316]:locale[28] "temp"
      (2178320 'move' i_x[2178316](2178318 'set reference' call_tmp[1226105]))
      (2178324 call deinit[90189] i_x[2178316])
    }
    {
      (1226123 'move' tmp[1226084] dataParTasksPerLocale[93289])
    }
    (1226129 'move' dptpl[1226082] tmp[1226084])
    const-val call_tmp[1226133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2046799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046801 'move' call_tmp[2046799](2046803 '>=' numTasks[1226076] dptpl[1226082]))
    (1226135 'move' call_tmp[1226133] call_tmp[2046799])
    const-val call_tmp[1226141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1226143 'move' call_tmp[1226141] call_tmp[1226133])
    if call_tmp[1226141]
    {
      (2036040 call chpl_task_reset_spawn_order[12628])
    }
    (1226153 return _void[55])
  }
  function _EndCountBase[12715].deinit[752206](const in arg this[752210]:_EndCountBase[12715]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1767250]
    const-ref _field_destructor_tmp_[1767248]:chpl_TaskErrors[168306] "temp"
    (1767255 'move' _field_destructor_tmp_[1767248](1767252 '.' this[752210] errors[12705]))
    const-ref _field_destructor_tmp_[2127094]:chpl_LocalSpinlock[187398] "temp"
    (2127096 'move' _field_destructor_tmp_[2127094](2127098 '.' _field_destructor_tmp_[1767248] _errorsLock[168229]))
    ref _field_destructor_tmp_[2127101]:AtomicBool[45874] "temp"
    (2127103 'move' _field_destructor_tmp_[2127101](2127105 '.' _field_destructor_tmp_[2127094] l[187283]))
    (2127109 call deinit[44860] _field_destructor_tmp_[2127101])
    (752218 return _void[55])
  }
  type _EndCountBase[12715] val super[355655]:object[22] "super class" val errors[12705]:chpl_TaskErrors[168306] val taskList[12710]:c_void_ptr[149]
  function _EndCount(AtomicT(int(64)),int(64))[943272].init[938677](const in arg this[938681]:_EndCount(AtomicT(int(64)),int(64))[943272]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[938693]:_EndCountBase[12715] "dead after last mention" "temporary of super field" "temp"
    (938695 'move' super_tmp[938693](938697 '.v' this[938681] super[943260]))
    const-val default_arg_errors[943113]:chpl_TaskErrors[168306] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1784400]:chpl_TaskErrors[168306] "temp"
    const-val ret[2130997]:chpl_TaskErrors[168306] "dead after last mention" "RVV" "maybe param" "temp"
    const-val errors[2130999]:chpl_TaskErrors[168306] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[2131001]:Error[167942] "dead after last mention" "temp"
    (2131003 'move' tmp[2131001](2131005 'cast' Error[167942] nil[44]))
    const-val default_arg__errorsLock[2131008]:chpl_LocalSpinlock[187398] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret[2131010]:chpl_LocalSpinlock[187398] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[2131012]:chpl_LocalSpinlock[187398] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[2131014]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret[2131016]:AtomicBool[45874] "dead after last mention" "RVV" "maybe param" "temp"
    const-val l[2131018]:AtomicBool[45874] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (2131021 call init[44785] l[2131018])
    (2131023 'move' ret[2131016] l[2131018])
    (2131026 'move' default_arg_l[2131014] ret[2131016])
    (2131030 call init[820360] _errorsLock[2131012] default_arg_l[2131014])
    (2131033 'move' ret[2131010] _errorsLock[2131012])
    (2131036 'move' default_arg__errorsLock[2131008] ret[2131010])
    (2131040 call init[812307] errors[2130999] tmp[2131001] default_arg__errorsLock[2131008])
    (2131044 'move' ret[2130997] errors[2130999])
    (2131047 '=' ret_tmp[1784400] ret[2130997])
    (1784403 'move' default_arg_errors[943113] ret_tmp[1784400])
    const-val default_arg_taskList[943144]:c_void_ptr[149] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val taskList[2131093]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (2131095 'move' taskList[2131093](2131097 'cast' c_void_ptr[149] nil[44]))
    (943148 'move' default_arg_taskList[943144] taskList[2131093])
    val _formal_tmp_errors[2126996]:chpl_TaskErrors[168306] "dead at end of block" "no auto destroy" "no copy" "temp"
    (2126998 'move' _formal_tmp_errors[2126996] default_arg_errors[943113])
    val super_tmp[2127001]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2127003 'move' super_tmp[2127001](2127005 '.v' super_tmp[938693] super[355655]))
    (2127008 'setcid' super_tmp[2127001])
    val call_tmp[2127010]:object[22] "dead at end of block" "maybe param" "temp"
    (2127012 'move' call_tmp[2127010](2127014 'cast' object[22] super_tmp[938693]))
    (2127017 'setcid' call_tmp[2127010])
    (2127019 '.=' super_tmp[938693] errors[12705] _formal_tmp_errors[2126996])
    (2127023 '.=' super_tmp[938693] taskList[12710] default_arg_taskList[943144])
    (2127027 'setcid' super_tmp[938693])
    val call_tmp[938724]:_EndCountBase[12715] "dead at end of block" "maybe param" "temp"
    (938726 'move' call_tmp[938724](938728 'cast' _EndCountBase[12715] this[938681]))
    val chpl__thisAsParent[938731]:_EndCountBase[12715] "dead at end of block" "insert auto destroy" "temp"
    (938733 'move' chpl__thisAsParent[938731] call_tmp[938724])
    (938737 'setcid' chpl__thisAsParent[938731])
    val tmp[938760]:AtomicT(int(64))[938064] "dead after last mention" "temp"
    (943299 call init[943304] tmp[938760])
    (938772 '.=' this[938681] i[943266] tmp[938760])
    val tmp[938777]:int(64)[13] "dead after last mention" "temp"
    (944977 'move' tmp[938777] 0)
    (938789 '.=' this[938681] taskCnt[943269] tmp[938777])
    (938794 'setcid' this[938681])
    (938796 return _void[55])
  }
  function _EndCount(AtomicT(int(64)),int(64))[943272].deinit[1231784](const in arg this[1231788]:_EndCount(AtomicT(int(64)),int(64))[943272]) : void[4] "compiler generated" "destructor" "inline" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1768302]
    ref _field_destructor_tmp_[1768300]:AtomicT(int(64))[938064] "temp"
    (1768307 'move' _field_destructor_tmp_[1768300](1768304 '.' this[1231788] i[943266]))
    (1768309 call deinit[1402160] _field_destructor_tmp_[1768300])
    val _parent_destructor_tmp_[1768312]:_EndCountBase[12715] "temp"
    (1768317 'move' _parent_destructor_tmp_[1768312](1768313 'cast' _EndCountBase[12715] this[1231788]))
    const-ref _field_destructor_tmp_[2127116]:chpl_TaskErrors[168306] "temp"
    (2127118 'move' _field_destructor_tmp_[2127116](2127120 '.' _parent_destructor_tmp_[1768312] errors[12705]))
    const-ref _field_destructor_tmp_[2127123]:chpl_LocalSpinlock[187398] "temp"
    (2127125 'move' _field_destructor_tmp_[2127123](2127127 '.' _field_destructor_tmp_[2127116] _errorsLock[168229]))
    ref _field_destructor_tmp_[2127130]:AtomicBool[45874] "temp"
    (2127132 'move' _field_destructor_tmp_[2127130](2127134 '.' _field_destructor_tmp_[2127123] l[187283]))
    (2127138 call deinit[44860] _field_destructor_tmp_[2127130])
    (1231794 return _void[55])
  }
  function _new[944985]() : _EndCount(AtomicT(int(64)),int(64))[943272] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val ret[945032]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "RVV" "temp"
    val initTemp[944987]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
    const-val call_tmp[945039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (945042 'move' call_tmp[945039](945051 'sizeof_bundle' _EndCount(AtomicT(int(64)),int(64))[943272]))
    const-val cast_tmp[979611]:c_void_ptr[149] "dead after last mention" "temp"
    (979613 'move' cast_tmp[979611](945007 call chpl_here_alloc[187754] call_tmp[945039] 0))
    (945010 'move' initTemp[944987](979615 'cast' _EndCount(AtomicT(int(64)),int(64))[943272] cast_tmp[979611]))
    (945012 'setcid' initTemp[944987])
    (944988 call init[938677] initTemp[944987])
    val tmp[945014]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "temp"
    (945021 'move' tmp[945014] initTemp[944987])
    (945037 'move' ret[945032] tmp[945014])
    (945034 return ret[945032])
  }
  type _EndCount(AtomicT(int(64)),int(64))[943272] val super[943260]:_EndCountBase[12715] "super class" val i[943266]:AtomicT(int(64))[938064] val taskCnt[943269]:int(64)[13]
  val _remoteEndCountType[12845]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead at end of block" "insert auto destroy" "type variable"
  function _upEndCount[1225010](const in arg e[1225012]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg numTasks[1225020]:int(64)[13]) : void[4] "dont disable remote value forwarding" "instantiated generic" "invisible fn" "no remote memory fence" "resolved" "task spawn impl fn" "no return value for void"
  {
    val coerce_tmp[1225133]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1225138 'move' coerce_tmp[1225133] e[1225012])
    ref call_tmp[2193356]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2193358 'move' call_tmp[2193356](2193360 '.' coerce_tmp[1225133] i[943266]))
    const-val call_tmp[1225036]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1225038 'move' call_tmp[1225036] numTasks[1225020])
    ref call_tmp[2193402]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2193404 'move' call_tmp[2193402](2193406 '.' call_tmp[2193356] _v[938059]))
    val ret[2193409]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2193411 'move' ret[2193409] memory_order_release[186953])
    (2193415 call atomic_fetch_add[1225171] call_tmp[2193402] call_tmp[1225036] ret[2193409])
    const-val call_tmp[1225061]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1783112]:locale[28] "temp"
    const-val call_tmp[2084211]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2084213]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2084215 'move' call_tmp[2084213](2084218 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2084221 'move' call_tmp[2084211] call_tmp[2084213])
    const-val call_tmp[2084224]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2084226]:locale[28] "temp"
    (2084229 call chpl_localeID_to_locale[92857] call_tmp[2084211] ret_tmp[2084226])
    (2084232 'move' call_tmp[2084224] ret_tmp[2084226])
    (2084235 '=' ret_tmp[1783112] call_tmp[2084224])
    (1783115 'move' call_tmp[1225061] ret_tmp[1783112])
    const-val call_tmp[1225067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1225069 'move' call_tmp[1225067] numTasks[1225020])
    const-val call_tmp[1225075]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2063466]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063468 'move' call_tmp[2063466](2063470 '-' call_tmp[1225067] 1))
    (1225077 'move' call_tmp[1225075] call_tmp[2063466])
    val _chpl_forward_tgt[1225910]:BaseLocale[91205] "dead after last mention" "maybe ref" "maybe type" "temp"
    val coerce_tmp[2083011]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083013 'move' coerce_tmp[2083011](2083015 '.v' call_tmp[1225061] _instance[89979]))
    val coerce_tmp[2083018]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083020 'move' coerce_tmp[2083018](2083022 'cast' object[22] coerce_tmp[2083011]))
    const-val call_tmp[2083025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083027 'move' call_tmp[2083025](2083029 'ptr_eq' coerce_tmp[2083018] nil[44]))
    if call_tmp[2083025]
    {
      (2083035 call nilCheckHalt[210068] "argument to ! is nil")
    }
    (1225916 'move' _chpl_forward_tgt[1225910] coerce_tmp[2083011])
    val coerce_tmp[1225919]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1225924 'move' coerce_tmp[1225919] _chpl_forward_tgt[1225910])
    ref call_tmp[2085737]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2085739 'move' call_tmp[2085737](2085741 '.' coerce_tmp[1225919] runningTaskCounter[90894]))
    ref call_tmp[2085744]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2085746 'move' call_tmp[2085744](2085748 '.' call_tmp[2085737] _v[938059]))
    val ret[2085751]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2085753 'move' ret[2085751] memory_order_relaxed[186938])
    (2085757 call atomic_fetch_add[1225957] call_tmp[2085744] call_tmp[1225075] ret[2085751])
    ref i_x[2178304]:locale[28] "temp"
    (2178308 'move' i_x[2178304](2178306 'set reference' call_tmp[1225061]))
    (2178312 call deinit[90189] i_x[2178304])
    (1225103 return _void[55])
  }
  function chpl_comm_task_end[13061]() : void[4] "extern" "local args" "no fn body" "resolved" "task complete impl fn" "no return value for void"
  {
    val ret[500035]:void[4] "RVV" "temp"
    (500037 return ret[500035])
  }
  function chpl_after_forall_fence[13069]() : void[4] "resolved" "task complete impl fn" "no return value for void"
  {
    (13073 call chpl_comm_task_end[13061])
    (500039 return _void[55])
  }
  function _downEndCount[1227468](const in arg e[1227470]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg err[1227472]:Error[167942]) : void[4] "dont disable remote value forwarding" "down end count fn" "instantiated generic" "invisible fn" "resolved" "task complete impl fn" "no return value for void"
  {
    val coerce_tmp[1227558]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1227564 'move' coerce_tmp[1227558](1227560 'cast' _EndCountBase[12715] e[1227470]))
    (1227479 call chpl_save_task_error[1227507] coerce_tmp[1227558] err[1227472])
    (1227484 call chpl_comm_task_end[13061])
    val coerce_tmp[1230202]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1230207 'move' coerce_tmp[1230202] e[1227470])
    ref call_tmp[2193366]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2193368 'move' call_tmp[2193366](2193370 '.' coerce_tmp[1230202] i[943266]))
    val inlineImm[2195093]:int(64)[13] "temp"
    (2195096 'move' inlineImm[2195093] 1)
    ref call_tmp[2195101]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2195103 'move' call_tmp[2195101](2195105 '.' call_tmp[2193366] _v[938059]))
    val ret[2195108]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2195110 'move' ret[2195108] memory_order_release[186953])
    (2195114 call atomic_fetch_sub[1230239] call_tmp[2195101] inlineImm[2195093] ret[2195108])
    (1227501 return _void[55])
  }
  function _waitEndCount[1378178](const in arg e[1378180]:_EndCount(AtomicT(int(64)),int(64))[943272], ref arg error_out[1766490]:Error[167942]) : void[4] throws "dont disable remote value forwarding" "instantiated generic" "invisible fn" "resolved" "task join impl fn" "unchecked throws" "no return value for void"
  {
    const-val call_tmp[1378192]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1783166]:locale[28] "temp"
    const-val call_tmp[2084427]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2084429]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2084431 'move' call_tmp[2084429](2084434 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2084437 'move' call_tmp[2084427] call_tmp[2084429])
    const-val call_tmp[2084440]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2084442]:locale[28] "temp"
    (2084445 call chpl_localeID_to_locale[92857] call_tmp[2084427] ret_tmp[2084442])
    (2084448 'move' call_tmp[2084440] ret_tmp[2084442])
    (2084451 '=' ret_tmp[1783166] call_tmp[2084440])
    (1783169 'move' call_tmp[1378192] ret_tmp[1783166])
    val _chpl_forward_tgt[1378460]:BaseLocale[91205] "dead after last mention" "maybe ref" "maybe type" "temp"
    val coerce_tmp[2083203]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083205 'move' coerce_tmp[2083203](2083207 '.v' call_tmp[1378192] _instance[89979]))
    val coerce_tmp[2083210]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083212 'move' coerce_tmp[2083210](2083214 'cast' object[22] coerce_tmp[2083203]))
    const-val call_tmp[2083217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083219 'move' call_tmp[2083217](2083221 'ptr_eq' coerce_tmp[2083210] nil[44]))
    if call_tmp[2083217]
    {
      (2083227 call nilCheckHalt[210068] "argument to ! is nil")
    }
    (1378466 'move' _chpl_forward_tgt[1378460] coerce_tmp[2083203])
    val coerce_tmp[1378469]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1378474 'move' coerce_tmp[1378469] _chpl_forward_tgt[1378460])
    val inlineImm[2085852]:int(64)[13] "temp"
    (2085855 'move' inlineImm[2085852] 1)
    ref call_tmp[2085858]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2085860 'move' call_tmp[2085858](2085862 '.' coerce_tmp[1378469] runningTaskCounter[90894]))
    ref call_tmp[2085865]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2085867 'move' call_tmp[2085865](2085869 '.' call_tmp[2085858] _v[938059]))
    val ret[2085872]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2085874 'move' ret[2085872] memory_order_relaxed[186938])
    (2085878 call atomic_fetch_sub[1232181] call_tmp[2085865] inlineImm[2085852] ret[2085872])
    ref i_x[2178424]:locale[28] "temp"
    (2178428 'move' i_x[2178424](2178426 'set reference' call_tmp[1378192]))
    (2178432 call deinit[90189] i_x[2178424])
    val coerce_tmp[1378477]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1378482 'move' coerce_tmp[1378477](1378479 'cast' _EndCountBase[12715] e[1378180]))
    ref call_tmp[2126980]:c_void_ptr[149] "dead after last mention" "maybe param" "temp"
    (2126982 'move' call_tmp[2126980](2126984 '.' coerce_tmp[1378477] taskList[12710]))
    (1378214 call chpl_taskListExecute[209816] call_tmp[2126980])
    val coerce_tmp[1378486]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1378491 'move' coerce_tmp[1378486] e[1378180])
    ref call_tmp[2193386]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2193388 'move' call_tmp[2193386](2193390 '.' coerce_tmp[1378486] i[943266]))
    val inlineImm[2196535]:int(64)[13] "temp"
    (2196538 'move' inlineImm[2196535] 0)
    val tmp[2196543]:bool[10] "dead after last mention" "temp"
    ref call_tmp[2196545]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2196547 'move' call_tmp[2196545](2196549 '.' call_tmp[2193386] _v[938059]))
    val ret[2196552]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2196554 'move' ret[2196552] memory_order_relaxed[186938])
    const-val call_tmp[2196557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2196559 'move' call_tmp[2196557](2196562 call atomic_load[1223989] call_tmp[2196545] ret[2196552]))
    const-val call_tmp[2196565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2196567 'move' call_tmp[2196565](2196569 '!=' call_tmp[2196557] inlineImm[2196535]))
    (2196572 'move' tmp[2196543] call_tmp[2196565])
    WhileDo[2196575]
    {
      (2196578 call chpl_task_yield[209654])
      ref call_tmp[2196579]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
      (2196581 'move' call_tmp[2196579](2196583 '.' call_tmp[2193386] _v[938059]))
      val ret[2196586]:memory_order[186619] "dead after last mention" "RVV" "temp"
      (2196588 'move' ret[2196586] memory_order_relaxed[186938])
      const-val call_tmp[2196591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2196593 'move' call_tmp[2196591](2196596 call atomic_load[1223989] call_tmp[2196579] ret[2196586]))
      const-val call_tmp[2196599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2196601 'move' call_tmp[2196599](2196603 '!=' call_tmp[2196591] inlineImm[2196535]))
      (2196606 'move' tmp[2196543] call_tmp[2196599])
      tmp[2196543]
    }
    val ret[2196609]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2196611 'move' ret[2196609] memory_order_acquire[186948])
    (2196615 call chpl_atomic_thread_fence[43975] ret[2196609])
    const-val taskDec[1378242]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val coerce_tmp[1378535]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1378540 'move' coerce_tmp[1378535] e[1378180])
    const-val coerce_tmp[1378545]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1378549 'move' coerce_tmp[1378545](2273933 '.v' coerce_tmp[1378535] taskCnt[943269]))
    (1800600 '=' taskDec[1378242] coerce_tmp[1378545])
    (1378307 'noop')
    const-val call_tmp[1378311]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1783172]:locale[28] "temp"
    const-val call_tmp[2084463]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2084465]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2084467 'move' call_tmp[2084465](2084470 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2084473 'move' call_tmp[2084463] call_tmp[2084465])
    const-val call_tmp[2084476]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2084478]:locale[28] "temp"
    (2084481 call chpl_localeID_to_locale[92857] call_tmp[2084463] ret_tmp[2084478])
    (2084484 'move' call_tmp[2084476] ret_tmp[2084478])
    (2084487 '=' ret_tmp[1783172] call_tmp[2084476])
    (1783175 'move' call_tmp[1378311] ret_tmp[1783172])
    const-val call_tmp[1378317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2063596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063598 'move' call_tmp[2063596](2063600 '-' taskDec[1378242] 1))
    (1378319 'move' call_tmp[1378317] call_tmp[2063596])
    val _chpl_forward_tgt[1378574]:BaseLocale[91205] "dead after last mention" "maybe ref" "maybe type" "temp"
    val coerce_tmp[2083239]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083241 'move' coerce_tmp[2083239](2083243 '.v' call_tmp[1378311] _instance[89979]))
    val coerce_tmp[2083246]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083248 'move' coerce_tmp[2083246](2083250 'cast' object[22] coerce_tmp[2083239]))
    const-val call_tmp[2083253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083255 'move' call_tmp[2083253](2083257 'ptr_eq' coerce_tmp[2083246] nil[44]))
    if call_tmp[2083253]
    {
      (2083263 call nilCheckHalt[210068] "argument to ! is nil")
    }
    (1378580 'move' _chpl_forward_tgt[1378574] coerce_tmp[2083239])
    val coerce_tmp[1378583]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1378588 'move' coerce_tmp[1378583] _chpl_forward_tgt[1378574])
    ref call_tmp[2085885]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2085887 'move' call_tmp[2085885](2085889 '.' coerce_tmp[1378583] runningTaskCounter[90894]))
    ref call_tmp[2085892]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2085894 'move' call_tmp[2085892](2085896 '.' call_tmp[2085885] _v[938059]))
    val ret[2085899]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2085901 'move' ret[2085899] memory_order_relaxed[186938])
    (2085905 call atomic_fetch_sub[1232181] call_tmp[2085892] call_tmp[1378317] ret[2085899])
    ref i_x[2178436]:locale[28] "temp"
    (2178440 'move' i_x[2178436](2178438 'set reference' call_tmp[1378311]))
    (2178444 call deinit[90189] i_x[2178436])
    val coerce_tmp[1378591]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1378596 'move' coerce_tmp[1378591](1378593 'cast' _EndCountBase[12715] e[1378180]))
    ref call_tmp[2126946]:chpl_TaskErrors[168306] "dead after last mention" "maybe param" "temp"
    (2126948 'move' call_tmp[2126946](2126950 '.' coerce_tmp[1378591] errors[12705]))
    const-val call_tmp[1378355]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378357 'move' call_tmp[1378355](1378363 call empty[168294] call_tmp[2126946]))
    const-val call_tmp[1378364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2035030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2035032 'move' call_tmp[2035030](2035034 '!' call_tmp[1378355]))
    (1378366 'move' call_tmp[1378364] call_tmp[2035030])
    const-val call_tmp[1378371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378373 'move' call_tmp[1378371] call_tmp[1378364])
    if call_tmp[1378371]
    {
      val coerce_tmp[1378601]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1378606 'move' coerce_tmp[1378601](1378603 'cast' _EndCountBase[12715] e[1378180]))
      ref call_tmp[2126956]:chpl_TaskErrors[168306] "dead after last mention" "maybe param" "temp"
      (2126958 'move' call_tmp[2126956](2126960 '.' coerce_tmp[1378601] errors[12705]))
      const-val call_tmp[1378388]:owned TaskErrors[1238153] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1378626]:TaskErrors[169660] "dead after last mention" "temp"
      (1378628 'move' new_temp[1378626](1378613 call _new[1237712] call_tmp[2126956]))
      const-val initTemp[1378635]:owned TaskErrors[1238153] "dead after last mention" "delay instantiation" "temp"
      (1378638 call init[1237804] initTemp[1378635] new_temp[1378626])
      (1378390 'move' call_tmp[1378388] initTemp[1378635])
      val call_tmp[1378397]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1378652]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1787623]:owned Error[962257] "temp"
      ref i_x[2197254]:owned TaskErrors[1238153] "temp"
      (2197258 'move' i_x[2197254](2197256 'set reference' call_tmp[1378388]))
      ref i__retArg[2197260]:owned Error[962257] "temp"
      (2197264 'move' i__retArg[2197260](2197262 'set reference' ret_tmp[1787623]))
      val _formal_tmp_x[2197267]:owned TaskErrors[1238153] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2197269 'move' _formal_tmp_x[2197267] i_x[2197254])
      const-val ret[2197272]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2197274]:owned TaskErrors[1238153] "temp"
      (2197276 'move' i_this[2197274](2197278 'set reference' _formal_tmp_x[2197267]))
      val coerce_tmp[2197280]:TaskErrors[169660] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2197282 'move' coerce_tmp[2197280](2197284 '.v' i_this[2197274] chpl_p[1238148]))
      val call_tmp[2197287]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197289 'move' call_tmp[2197287](2197291 'cast' Error[167942] coerce_tmp[2197280]))
      val castPtr[2197294]:Error[167942] "dead at end of block" "insert auto destroy"
      (2197296 'move' castPtr[2197294] call_tmp[2197287])
      ref i_this[2197299]:owned TaskErrors[1238153] "temp"
      (2197301 'move' i_this[2197299](2197303 'set reference' _formal_tmp_x[2197267]))
      val tmp[2197305]:TaskErrors[169660] "temp"
      (2197307 'move' tmp[2197305](2197309 'cast' TaskErrors[169660] nil[44]))
      (2197312 '.=' i_this[2197299] chpl_p[1238148] tmp[2197305])
      val coerce_tmp[2197316]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2197318 'move' coerce_tmp[2197316](2197320 'cast' object[22] call_tmp[2197287]))
      const-val call_tmp[2197323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197325 'move' call_tmp[2197323](2197327 'ptr_eq' coerce_tmp[2197316] nil[44]))
      if call_tmp[2197323]
      {
        (2197333 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2197336]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2197338]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2197341 call init[963893] initTemp[2197338] castPtr[2197294])
      (2197344 'move' call_tmp[2197336] initTemp[2197338])
      (2197347 'move' ret[2197272] call_tmp[2197336])
      (2197351 call chpl__autoDestroy[1491471] _formal_tmp_x[2197267])
      (2197355 '=' i__retArg[2197260] ret[2197272])
      (1787626 'move' coerce_tmp[1378652] ret_tmp[1787623])
      const-val _formal_tmp_in_err[1378831]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1378835 'move' _formal_tmp_in_err[1378831] coerce_tmp[1378652])
      (1378399 'move' call_tmp[1378397](1378402 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1378831]))
      val castedError[1766495]:Error[167942] "temp"
      (1766501 'move' castedError[1766495] call_tmp[1378397])
      (1766503 '=' error_out[1766490] castedError[1766495])
      gotoErrorHandlingReturn _end_waitEndCount[1766492] _end_waitEndCount[1766492]
    }
    label _end_waitEndCount[1766492]
    (1378407 return _void[55])
  }
  function _waitEndCount[1231805](const in arg e[1231807]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg numTasks[1231815]:int(64)[13], ref arg error_out[1765654]:Error[167942]) : void[4] throws "dont disable remote value forwarding" "instantiated generic" "invisible fn" "resolved" "task join impl fn" "unchecked throws" "no return value for void"
  {
    val coerce_tmp[1231965]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1231970 'move' coerce_tmp[1231965](1231967 'cast' _EndCountBase[12715] e[1231807]))
    ref call_tmp[2126970]:c_void_ptr[149] "dead after last mention" "maybe param" "temp"
    (2126972 'move' call_tmp[2126970](2126974 '.' coerce_tmp[1231965] taskList[12710]))
    (1231832 call chpl_taskListExecute[209816] call_tmp[2126970])
    val coerce_tmp[1231975]:_EndCount(AtomicT(int(64)),int(64))[943272] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1231980 'move' coerce_tmp[1231975] e[1231807])
    ref call_tmp[2193376]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2193378 'move' call_tmp[2193376](2193380 '.' coerce_tmp[1231975] i[943266]))
    val inlineImm[2196451]:int(64)[13] "temp"
    (2196454 'move' inlineImm[2196451] 0)
    val tmp[2196459]:bool[10] "dead after last mention" "temp"
    ref call_tmp[2196461]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2196463 'move' call_tmp[2196461](2196465 '.' call_tmp[2193376] _v[938059]))
    val ret[2196468]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2196470 'move' ret[2196468] memory_order_relaxed[186938])
    const-val call_tmp[2196473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2196475 'move' call_tmp[2196473](2196478 call atomic_load[1223989] call_tmp[2196461] ret[2196468]))
    const-val call_tmp[2196481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2196483 'move' call_tmp[2196481](2196485 '!=' call_tmp[2196473] inlineImm[2196451]))
    (2196488 'move' tmp[2196459] call_tmp[2196481])
    WhileDo[2196491]
    {
      (2196494 call chpl_task_yield[209654])
      ref call_tmp[2196495]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
      (2196497 'move' call_tmp[2196495](2196499 '.' call_tmp[2193376] _v[938059]))
      val ret[2196502]:memory_order[186619] "dead after last mention" "RVV" "temp"
      (2196504 'move' ret[2196502] memory_order_relaxed[186938])
      const-val call_tmp[2196507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2196509 'move' call_tmp[2196507](2196512 call atomic_load[1223989] call_tmp[2196495] ret[2196502]))
      const-val call_tmp[2196515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2196517 'move' call_tmp[2196515](2196519 '!=' call_tmp[2196507] inlineImm[2196451]))
      (2196522 'move' tmp[2196459] call_tmp[2196515])
      tmp[2196459]
    }
    val ret[2196525]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2196527 'move' ret[2196525] memory_order_acquire[186948])
    (2196531 call chpl_atomic_thread_fence[43975] ret[2196525])
    const-val call_tmp[1231860]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1783124]:locale[28] "temp"
    const-val call_tmp[2084283]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2084285]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2084287 'move' call_tmp[2084285](2084290 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2084293 'move' call_tmp[2084283] call_tmp[2084285])
    const-val call_tmp[2084296]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2084298]:locale[28] "temp"
    (2084301 call chpl_localeID_to_locale[92857] call_tmp[2084283] ret_tmp[2084298])
    (2084304 'move' call_tmp[2084296] ret_tmp[2084298])
    (2084307 '=' ret_tmp[1783124] call_tmp[2084296])
    (1783127 'move' call_tmp[1231860] ret_tmp[1783124])
    const-val call_tmp[1231866]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1231868 'move' call_tmp[1231866] numTasks[1231815])
    const-val call_tmp[1231874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2063496]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2063498 'move' call_tmp[2063496](2063500 '-' call_tmp[1231866] 1))
    (1231876 'move' call_tmp[1231874] call_tmp[2063496])
    val _chpl_forward_tgt[1232134]:BaseLocale[91205] "dead after last mention" "maybe ref" "maybe type" "temp"
    val coerce_tmp[2083047]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083049 'move' coerce_tmp[2083047](2083051 '.v' call_tmp[1231860] _instance[89979]))
    val coerce_tmp[2083054]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083056 'move' coerce_tmp[2083054](2083058 'cast' object[22] coerce_tmp[2083047]))
    const-val call_tmp[2083061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083063 'move' call_tmp[2083061](2083065 'ptr_eq' coerce_tmp[2083054] nil[44]))
    if call_tmp[2083061]
    {
      (2083071 call nilCheckHalt[210068] "argument to ! is nil")
    }
    (1232140 'move' _chpl_forward_tgt[1232134] coerce_tmp[2083047])
    val coerce_tmp[1232143]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232148 'move' coerce_tmp[1232143] _chpl_forward_tgt[1232134])
    ref call_tmp[2085826]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp"
    (2085828 'move' call_tmp[2085826](2085830 '.' coerce_tmp[1232143] runningTaskCounter[90894]))
    ref call_tmp[2085833]:atomic_int_least64_t[938172] "dead after last mention" "maybe param" "temp"
    (2085835 'move' call_tmp[2085833](2085837 '.' call_tmp[2085826] _v[938059]))
    val ret[2085840]:memory_order[186619] "dead after last mention" "RVV" "temp"
    (2085842 'move' ret[2085840] memory_order_relaxed[186938])
    (2085846 call atomic_fetch_sub[1232181] call_tmp[2085833] call_tmp[1231874] ret[2085840])
    ref i_x[2178328]:locale[28] "temp"
    (2178332 'move' i_x[2178328](2178330 'set reference' call_tmp[1231860]))
    (2178336 call deinit[90189] i_x[2178328])
    val coerce_tmp[1232298]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232303 'move' coerce_tmp[1232298](1232300 'cast' _EndCountBase[12715] e[1231807]))
    ref call_tmp[2126926]:chpl_TaskErrors[168306] "dead after last mention" "maybe param" "temp"
    (2126928 'move' call_tmp[2126926](2126930 '.' coerce_tmp[1232298] errors[12705]))
    const-val call_tmp[1231910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1231912 'move' call_tmp[1231910](1231918 call empty[168294] call_tmp[2126926]))
    const-val call_tmp[1231919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2034832]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034834 'move' call_tmp[2034832](2034836 '!' call_tmp[1231910]))
    (1231921 'move' call_tmp[1231919] call_tmp[2034832])
    const-val call_tmp[1231926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1231928 'move' call_tmp[1231926] call_tmp[1231919])
    if call_tmp[1231926]
    {
      val coerce_tmp[1232323]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232328 'move' coerce_tmp[1232323](1232325 'cast' _EndCountBase[12715] e[1231807]))
      ref call_tmp[2126936]:chpl_TaskErrors[168306] "dead after last mention" "maybe param" "temp"
      (2126938 'move' call_tmp[2126936](2126940 '.' coerce_tmp[1232323] errors[12705]))
      const-val call_tmp[1231943]:owned TaskErrors[1238153] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1237764]:TaskErrors[169660] "dead after last mention" "temp"
      (1237766 'move' new_temp[1237764](1233928 call _new[1237712] call_tmp[2126936]))
      const-val initTemp[1237785]:owned TaskErrors[1238153] "dead after last mention" "delay instantiation" "temp"
      (1237788 call init[1237804] initTemp[1237785] new_temp[1237764])
      (1231945 'move' call_tmp[1231943] initTemp[1237785])
      val call_tmp[1231952]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1238254]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1787617]:owned Error[962257] "temp"
      ref i_x[2197148]:owned TaskErrors[1238153] "temp"
      (2197152 'move' i_x[2197148](2197150 'set reference' call_tmp[1231943]))
      ref i__retArg[2197154]:owned Error[962257] "temp"
      (2197158 'move' i__retArg[2197154](2197156 'set reference' ret_tmp[1787617]))
      val _formal_tmp_x[2197161]:owned TaskErrors[1238153] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2197163 'move' _formal_tmp_x[2197161] i_x[2197148])
      const-val ret[2197166]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2197168]:owned TaskErrors[1238153] "temp"
      (2197170 'move' i_this[2197168](2197172 'set reference' _formal_tmp_x[2197161]))
      val coerce_tmp[2197174]:TaskErrors[169660] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2197176 'move' coerce_tmp[2197174](2197178 '.v' i_this[2197168] chpl_p[1238148]))
      val call_tmp[2197181]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197183 'move' call_tmp[2197181](2197185 'cast' Error[167942] coerce_tmp[2197174]))
      val castPtr[2197188]:Error[167942] "dead at end of block" "insert auto destroy"
      (2197190 'move' castPtr[2197188] call_tmp[2197181])
      ref i_this[2197193]:owned TaskErrors[1238153] "temp"
      (2197195 'move' i_this[2197193](2197197 'set reference' _formal_tmp_x[2197161]))
      val tmp[2197199]:TaskErrors[169660] "temp"
      (2197201 'move' tmp[2197199](2197203 'cast' TaskErrors[169660] nil[44]))
      (2197206 '.=' i_this[2197193] chpl_p[1238148] tmp[2197199])
      val coerce_tmp[2197210]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2197212 'move' coerce_tmp[2197210](2197214 'cast' object[22] call_tmp[2197181]))
      const-val call_tmp[2197217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2197219 'move' call_tmp[2197217](2197221 'ptr_eq' coerce_tmp[2197210] nil[44]))
      if call_tmp[2197217]
      {
        (2197227 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2197230]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2197232]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2197235 call init[963893] initTemp[2197232] castPtr[2197188])
      (2197238 'move' call_tmp[2197230] initTemp[2197232])
      (2197241 'move' ret[2197166] call_tmp[2197230])
      (2197245 call chpl__autoDestroy[1491471] _formal_tmp_x[2197161])
      (2197249 '=' i__retArg[2197154] ret[2197166])
      (1787620 'move' coerce_tmp[1238254] ret_tmp[1787617])
      const-val _formal_tmp_in_err[1239074]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1239078 'move' _formal_tmp_in_err[1239074] coerce_tmp[1238254])
      (1231954 'move' call_tmp[1231952](1231957 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1239074]))
      val castedError[1765659]:Error[167942] "temp"
      (1765665 'move' castedError[1765659] call_tmp[1231952])
      (1765667 '=' error_out[1765654] castedError[1765659])
      gotoErrorHandlingReturn _end_waitEndCount[1765656] _end_waitEndCount[1765656]
    }
    label _end_waitEndCount[1765656]
    (1231962 return _void[55])
  }
  function _do_command_line_cast[1021446](const in arg x[1021450]:c_string[19], ref arg error_out[1763416]:Error[167942]) : int(64)[13] throws "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1021452]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val str[1021520]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1763418]:Error[167942] "error variable" "temp"
    (1763434 'move' error[1763418] nil[44])
    const-val call_tmp[1021533]:string[26] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1021658]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret[2117971]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[2117973]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117975 'move' call_tmp[2117973](2117977 'string_length_bytes' x[1021450]))
    (2117979 'move' ret[2117971] call_tmp[2117973])
    (1021663 'move' default_arg_length[1021658] ret[2117971])
    val errorExists[2029823]:bool[10] "temp"
    (2029828 'move' errorExists[2029823](2029825 '!=' error[1763418] nil[44]))
    if errorExists[2029823]
    {
      gotoErrorHandling handler[1763419] handler[1763419]
    }
    const-val ret_tmp[1781640]:string[26] "temp"
    const-val ret[2060743]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2060745]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060747 'move' call_tmp[2060745](2060749 'cast' c_ptr(uint(8))[935386] x[1021450]))
    const-val call_tmp[2060752]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2060754]:Error[167942] "error variable" "temp"
    (2060756 'move' error[2060754] nil[44])
    const-val ret[2060759]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2060761]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2060763]:Error[167942] "error variable" "temp"
    (2060765 'move' error[2060763] nil[44])
    const-val ret_tmp[2060768]:string[26] "temp"
    (2060771 call decodeByteBuffer[173904] call_tmp[2060745] default_arg_length[1021658] strict[173658] error[2060763] ret_tmp[2060768])
    (2060777 'move' call_tmp[2060761] ret_tmp[2060768])
    val errorExists[2060780]:bool[10] "temp"
    (2060782 'move' errorExists[2060780](2060784 '!=' error[2060763] nil[44]))
    if errorExists[2060780]
    {
      (2060789 '=' error[2060754] error[2060763])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2060798] _endcreateStringWithNewBuffer[2060798]
    }
    (2060795 'move' ret[2060759] call_tmp[2060761])
    label _endcreateStringWithNewBuffer[2060798]
    (2060800 'move' call_tmp[2060752] ret[2060759])
    val errorExists[2060803]:bool[10] "temp"
    (2060805 'move' errorExists[2060803](2060807 '!=' error[2060754] nil[44]))
    if errorExists[2060803]
    {
      (2060812 '=' error[1763418] error[2060754])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2060821] _endcreateStringWithNewBuffer[2060821]
    }
    (2060818 'move' ret[2060743] call_tmp[2060752])
    label _endcreateStringWithNewBuffer[2060821]
    (2060823 '=' ret_tmp[1781640] ret[2060743])
    (1781643 'move' call_tmp[1021533] ret_tmp[1781640])
    val errorExists[2029831]:bool[10] "temp"
    (2029836 'move' errorExists[2029831](2029833 '!=' error[1763418] nil[44]))
    if errorExists[2029831]
    {
      gotoErrorHandling handler[1763419] handler[1763419]
    }
    (1021540 'move' str[1021520] call_tmp[1021533])
    label handler[1763419]
    const-val shouldHandleError[1763443]:bool[10] "temp"
    val errorExists[2029839]:bool[10] "temp"
    (2029844 'move' errorExists[2029839](2029841 '!=' error[1763418] nil[44]))
    (1763447 'move' shouldHandleError[1763443] errorExists[2029839])
    if shouldHandleError[1763443]
    {
      (1763440 call chpl_uncaught_error[170247] error[1763418])
    }
    const-val call_tmp[1021573]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1763452]:Error[167942] "error variable" "temp"
    (1763454 'move' error[1763452] nil[44])
    ref i_x[2167242]:string[26] "temp"
    (2167246 'move' i_x[2167242](2167244 'set reference' str[1021520]))
    val ret[2167255]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val retVal[2167257]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[2167259]:bool[10] "dead at end of block" "insert auto destroy"
    (2167261 'move' isErr[2167259] 0)
    const-val ret[2167264]:string[26] "dead after last mention" "RVV" "temp"
    val ret[2167266]:string[26] "dead at end of block" "insert auto destroy"
    (2167269 call init[30760] ret[2167266])
    const-val coerce_tmp[2167271]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2167273 'move' coerce_tmp[2167271](2167275 '.v' str[1021520] cachedNumCodepoints[30731]))
    (2167278 '.=' ret[2167266] cachedNumCodepoints[30731] coerce_tmp[2167271])
    (2167283 call initWithBorrowedBuffer[946797] ret[2167266] i_x[2167242])
    (2167286 'move' ret[2167264] ret[2167266])
    val localX[2167289]:string[26] "dead at end of block" "insert auto destroy"
    (2167291 'move' localX[2167289] ret[2167264])
    const-val call_tmp[2167294]:byteIndex[28170] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[2167296]:range(byteIndex,bounded,false)[1022924] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val region[2167298]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val ret[2167300]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2167302 'move' ret[2167300](2167304 '.v' localX[2167289] buffLen[30719]))
    const-val call_tmp[2167307]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2167309 'move' call_tmp[2167307](2167311 '-' ret[2167300] 1))
    const-val call_tmp[2167314]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167316]:range(int(64),bounded,false)[1023946] "temp"
    (2167319 call chpl_build_bounded_range[455195] 0 call_tmp[2167307] ret_tmp[2167316])
    (2167323 'move' call_tmp[2167314] ret_tmp[2167316])
    const-val ret_tmp[2167326]:range(byteIndex,bounded,false)[1022924] "temp"
    (2167329 call _cast[1024694] call_tmp[2167314] ret_tmp[2167326])
    (2167332 'move' region[2167298] ret_tmp[2167326])
    (2167335 'move' default_arg_region[2167296] region[2167298])
    ref i_this[2167338]:string[26] "temp"
    (2167340 'move' i_this[2167338](2167342 'set reference' localX[2167289]))
    val inlineImm[2167344]:string[26] "temp"
    (2167346 'move' inlineImm[2167344] "_")
    ref i_needle[2167349]:string[26] "temp"
    (2167351 'move' i_needle[2167349](2167353 'set reference' inlineImm[2167344]))
    val ret[2167355]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val n[2167357]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2167359]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2167361 'move' coerce_tmp[2167359](2167363 '.v' localX[2167289] cachedNumCodepoints[30731]))
    (2167366 '=' n[2167357] coerce_tmp[2167359])
    (2167369 'noop')
    const-val call_tmp[2167370]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2167372 'move' call_tmp[2167370](2167375 call countNumCodepoints[181346] i_this[2167338]))
    const-val call_tmp[2167377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2167379 'move' call_tmp[2167377](2167381 '!=' coerce_tmp[2167359] call_tmp[2167370]))
    if call_tmp[2167377]
    {
      (2167387 call halt[154071] "Encountered corrupt string metadata")
    }
    val ret[2167390]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2167392 'move' ret[2167390](2167394 '.v' localX[2167289] buffLen[30719]))
    const-val call_tmp[2167397]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2167399 'move' call_tmp[2167397](2167401 '==' n[2167357] ret[2167390]))
    if call_tmp[2167397]
    {
      const-val call_tmp[2167406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167408 'move' call_tmp[2167406](2167411 call doSearchNoEnc[1027185] i_this[2167338] i_needle[2167349] default_arg_region[2167296]))
      const-val ret[2167415]:byteIndex[28170] "dead after last mention" "RVV" "temp"
      val cpi[2167417]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (2167420 call init[28097] cpi[2167417])
      (2167422 '.=' cpi[2167417] _bindex[28091] call_tmp[2167406])
      (2167426 'move' ret[2167415] cpi[2167417])
      (2167429 'move' ret[2167355] ret[2167415])
      gotoReturn _end_find[2168403] _end_find[2168403]
    }
    {
      const-val coerce_tmp[2167435]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2167437 'move' coerce_tmp[2167435](2167439 '.v' localX[2167289] locale_id[30754]))
      (2167443 call chpl_buildLocaleID[209424] coerce_tmp[2167435] c_sublocid_any[89879])
      val localRet[2167446]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2167448 'move' localRet[2167446] -2)
      const-val nLen[2167451]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2167453]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2167455 'move' coerce_tmp[2167453](2167457 '.v' inlineImm[2167344] buffLen[30719]))
      (2167460 '=' nLen[2167451] coerce_tmp[2167453])
      (2167463 'noop')
      const-val call_tmp[2167464]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[2167466]:(range(int(64),bounded,false),int(64))[1081903] "temp"
      (2167469 call getView[1028277] i_this[2167338] default_arg_region[2167296] ret_tmp[2167466])
      (2167473 'move' call_tmp[2167464] ret_tmp[2167466])
      val tmp_x0[2253709]:range(int(64),bounded,false)[1023946] "temp"
      (2253717 'move' tmp_x0[2253709](2253715 '.v' call_tmp[2167464] x0[1081899]))
      const-val view[2167481]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
      (2167483 'move' view[2167481] tmp_x0[2253709])
      const-val call_tmp[2167488]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (2167490 'move' call_tmp[2167488](2167493 call size[1032912] view[2167481]))
      const-val thisLen[2167495]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2167497 'move' thisLen[2167495] call_tmp[2167488])
      const-val call_tmp[2167500]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167502 'move' call_tmp[2167500](2167504 '==' coerce_tmp[2167453] 0))
      if call_tmp[2167500]
      {
        (2167509 '=' localRet[2167446] -1)
      }
      const-val call_tmp[2167513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167515 'move' call_tmp[2167513](2167517 '>' nLen[2167451] thisLen[2167495]))
      if call_tmp[2167513]
      {
        (2167522 '=' localRet[2167446] -1)
      }
      const-val call_tmp[2167526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167528 'move' call_tmp[2167526](2167530 '==' localRet[2167446] -2))
      if call_tmp[2167526]
      {
        (2167535 '=' localRet[2167446] -1)
        const-val ret[2167538]:string[26] "dead after last mention" "RVV" "temp"
        val ret[2167540]:string[26] "dead at end of block" "insert auto destroy"
        (2167543 call init[30760] ret[2167540])
        const-val coerce_tmp[2167545]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2167547 'move' coerce_tmp[2167545](2167549 '.v' inlineImm[2167344] cachedNumCodepoints[30731]))
        (2167552 '.=' ret[2167540] cachedNumCodepoints[30731] coerce_tmp[2167545])
        (2167557 call initWithBorrowedBuffer[946797] ret[2167540] i_needle[2167349])
        (2167560 'move' ret[2167538] ret[2167540])
        const localNeedle[2167563]:string[26] "dead at end of block" "const" "insert auto destroy"
        (2167565 'move' localNeedle[2167563] ret[2167538])
        const-val call_tmp[2167568]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2167570 'move' call_tmp[2167568](2167572 '-' thisLen[2167495] nLen[2167451]))
        const-val call_tmp[2167575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2167577 'move' call_tmp[2167575](2167579 '+' call_tmp[2167568] 1))
        const-val tmp[2167582]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2167584]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2167586]:range(int(64),boundedLow,false)[1084544] "temp"
        (2167589 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[2167586])
        (2167592 'move' call_tmp[2167584] ret_tmp[2167586])
        const-val ret_tmp[2167595]:range(int(64),bounded,false)[1023946] "temp"
        (2167598 call #[1084904] call_tmp[2167584] call_tmp[2167575] ret_tmp[2167595])
        (2167602 'move' tmp[2167582] ret_tmp[2167595])
        const-val call_tmp_F0_this[2252550]:range(int(64),bounded,false)[1023946] "temp"
        const-val _ir_F0_this[2252558]:range(int(64),bounded,false)[1023946] "temp"
        (2167611 'move' _ir_F0_this[2252558] tmp[2167582])
        (2252556 'move' call_tmp_F0_this[2252550] _ir_F0_this[2252558])
        const-val _ic__F0_this[2253526]:range(int(64),bounded,false)[1023946] "temp"
        const-val tmp[2167650]:range(int(64),bounded,false)[1023946] "temp"
        (2167652 'move' tmp[2167650] call_tmp_F0_this[2252550])
        (2167657 'move' _ic__F0_this[2253526] tmp[2167650])
        const-val this[2167664]:range(int(64),bounded,false)[1023946] "temp"
        (2167666 'move' this[2167664] _ic__F0_this[2253526])
        (2167672 call checkIfIterWillOverflow[1092793] this[2167664] 1)
        val i[2167675]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2167677 'move' i[2167675] 0)
        const-val this[2167680]:range(int(64),bounded,false)[1023946] "temp"
        (2167682 'move' this[2167680] _ic__F0_this[2253526])
        const-val coerce_tmp[2167687]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2167689 'move' coerce_tmp[2167687](2167691 '.v' this[2167680] _low[1023908]))
        (2167694 'noop')
        const-val this[2167695]:range(int(64),bounded,false)[1023946] "temp"
        (2167697 'move' this[2167695] _ic__F0_this[2253526])
        const end[2167702]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2167704]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2167706 'move' coerce_tmp[2167704](2167708 '.v' this[2167695] _high[1023913]))
        (2167711 '=' end[2167702] coerce_tmp[2167704])
        (2167714 'noop')
        CForLoop[2167715]
        {
          const-val i[2167728]:int(64)[13] "const" "index var" "insert auto destroy"
          (2167730 'move' i[2167728] i[2167675])
          const-val call_tmp_F0_low[2261961]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2261963]:int(64)[13] "temp"
          const-val _ir_F0_low[2261977]:int(64)[13] "temp"
          const-val _ir_F1_count[2261979]:int(64)[13] "temp"
          (2167739 'move' _ir_F0_low[2261977] 0)
          (2167743 'move' _ir_F1_count[2261979] nLen[2167451])
          (2261969 'move' call_tmp_F0_low[2261961] _ir_F0_low[2261977])
          (2261974 'move' call_tmp_F1_count[2261963] _ir_F1_count[2261979])
          const-val _ic__F0_low[2247445]:int(64)[13] "temp"
          const-val _ic__F1_count[2247447]:int(64)[13] "temp"
          const-val tmp[2167782]:int(64)[13] "temp"
          (2167784 'move' tmp[2167782] call_tmp_F0_low[2261961])
          (2167789 'move' _ic__F0_low[2247445] tmp[2167782])
          const-val tmp[2167793]:int(64)[13] "temp"
          (2167795 'move' tmp[2167793] call_tmp_F1_count[2261963])
          (2167800 'move' _ic__F1_count[2247447] tmp[2167793])
          const-val call_tmp_F0_low[2263418]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2263420]:int(64)[13] "temp"
          const-val low[2167811]:int(64)[13] "temp"
          (2167813 'move' low[2167811] _ic__F0_low[2247445])
          const-val count[2167818]:int(64)[13] "temp"
          (2167820 'move' count[2167818] _ic__F1_count[2247447])
          const-val _ir_F0_low[2263434]:int(64)[13] "temp"
          const-val _ir_F1_count[2263436]:int(64)[13] "temp"
          (2167827 'move' _ir_F0_low[2263434] low[2167811])
          (2167831 'move' _ir_F1_count[2263436] count[2167818])
          (2263426 'move' call_tmp_F0_low[2263418] _ir_F0_low[2263434])
          (2263431 'move' call_tmp_F1_count[2263420] _ir_F1_count[2263436])
          const-val _ic__F0_low[2249906]:int(64)[13] "temp"
          const-val _ic__F1_count[2249908]:int(64)[13] "temp"
          const-val tmp[2167870]:int(64)[13] "temp"
          (2167872 'move' tmp[2167870] call_tmp_F0_low[2263418])
          (2167877 'move' _ic__F0_low[2249906] tmp[2167870])
          const-val tmp[2167881]:int(64)[13] "temp"
          (2167883 'move' tmp[2167881] call_tmp_F1_count[2263420])
          (2167888 'move' _ic__F1_count[2249908] tmp[2167881])
          const-val count[2167895]:int(64)[13] "temp"
          (2167897 'move' count[2167895] _ic__F1_count[2249908])
          const-val call_tmp[2167902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2167904 'move' call_tmp[2167902](2167906 '<' count[2167895] 0))
          if call_tmp[2167902]
          {
            (2167912 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
          }
          val tmp_x0[2260018]:int(64)[13] "temp"
          val tmp_x1[2260020]:int(64)[13] "temp"
          val tmp_x0[2260034]:int(64)[13] "temp"
          val tmp_x1[2260036]:int(64)[13] "temp"
          const-val count[2167919]:int(64)[13] "temp"
          (2167921 'move' count[2167919] _ic__F1_count[2249908])
          const-val call_tmp[2167926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2167928 'move' call_tmp[2167926](2167930 '==' count[2167919] 0))
          if call_tmp[2167926]
          {
            const-val low[2167935]:int(64)[13] "temp"
            (2167937 'move' low[2167935] _ic__F0_low[2249906])
            const-val call_tmp[2167942]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2167944 'move' call_tmp[2167942](2167946 'cast' uint(64)[115] low[2167935]))
            const-val call_tmp[2167949]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2167951 'move' call_tmp[2167949](2167953 '-' call_tmp[2167942] 1))
            const-val call_tmp[2167956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2167958 'move' call_tmp[2167956](2167960 'cast' int(64)[13] call_tmp[2167949]))
            const-val low[2167963]:int(64)[13] "temp"
            (2167965 'move' low[2167963] _ic__F0_low[2249906])
            val this_x0[2260060]:int(64)[13]
            val this_x1[2260062]:int(64)[13]
            (2167972 'move' this_x0[2260060] low[2167963])
            (2167976 'move' this_x1[2260062] call_tmp[2167956])
            (2260042 'move' tmp_x0[2260034] this_x0[2260060])
            (2260047 'move' tmp_x1[2260036] this_x1[2260062])
          }
          {
            const-val count[2167984]:int(64)[13] "temp"
            (2167986 'move' count[2167984] _ic__F1_count[2249908])
            const-val call_tmp[2167991]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2167993 'move' call_tmp[2167991](2167995 '-' count[2167984] 1))
            const-val low[2167998]:int(64)[13] "temp"
            (2168000 'move' low[2167998] _ic__F0_low[2249906])
            const-val call_tmp[2168005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2168007 'move' call_tmp[2168005](2168009 '+' low[2167998] call_tmp[2167991]))
            const-val low[2168012]:int(64)[13] "temp"
            (2168014 'move' low[2168012] _ic__F0_low[2249906])
            val this_x0[2260068]:int(64)[13]
            val this_x1[2260070]:int(64)[13]
            (2168021 'move' this_x0[2260068] low[2168012])
            (2168025 'move' this_x1[2260070] call_tmp[2168005])
            (2260052 'move' tmp_x0[2260034] this_x0[2260068])
            (2260057 'move' tmp_x1[2260036] this_x1[2260070])
          }
          (2260026 'move' tmp_x0[2260018] tmp_x0[2260034])
          (2260031 'move' tmp_x1[2260020] tmp_x1[2260036])
          (2168036 'noop')
          const-val coerce_tmp[2168037]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2168039 'move' coerce_tmp[2168037] tmp_x0[2260018])
          (2168044 'noop')
          const-val coerce_tmp[2168045]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2168047 'move' coerce_tmp[2168045] tmp_x1[2260020])
          (2168052 'noop')
          const-val call_tmp_F0_low[2265431]:int(64)[13] "temp"
          const-val call_tmp_F1_high[2265433]:int(64)[13] "temp"
          const-val _ir_F0_low[2265447]:int(64)[13] "temp"
          const-val _ir_F1_high[2265449]:int(64)[13] "temp"
          (2168059 'move' _ir_F0_low[2265447] coerce_tmp[2168037])
          (2168063 'move' _ir_F1_high[2265449] coerce_tmp[2168045])
          (2265439 'move' call_tmp_F0_low[2265431] _ir_F0_low[2265447])
          (2265444 'move' call_tmp_F1_high[2265433] _ir_F1_high[2265449])
          const-val _ic__F0_low[2251926]:int(64)[13] "temp"
          const-val _ic__F1_high[2251928]:int(64)[13] "temp"
          const-val tmp[2168102]:int(64)[13] "temp"
          (2168104 'move' tmp[2168102] call_tmp_F0_low[2265431])
          (2168109 'move' _ic__F0_low[2251926] tmp[2168102])
          const-val tmp[2168113]:int(64)[13] "temp"
          (2168115 'move' tmp[2168113] call_tmp_F1_high[2265433])
          (2168120 'move' _ic__F1_high[2251928] tmp[2168113])
          val i[2168127]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2168129 'move' i[2168127] 0)
          const-val low[2168132]:int(64)[13] "temp"
          (2168134 'move' low[2168132] _ic__F0_low[2251926])
          const-val high[2168139]:int(64)[13] "temp"
          (2168141 'move' high[2168139] _ic__F1_high[2251928])
          const-val low[2168146]:int(64)[13] "temp"
          (2168148 'move' low[2168146] _ic__F0_low[2251926])
          const-val high[2168153]:int(64)[13] "temp"
          (2168155 'move' high[2168153] _ic__F1_high[2251928])
          (2168161 call chpl_checkIfRangeIterWillOverflow[1093055] low[2168146] high[2168153] 1 low[2168132] high[2168139] 1)
          CForLoop[2168168]
          {
            const-val j[2168195]:int(64)[13] "const" "index var" "insert auto destroy"
            (2168197 'move' j[2168195] i[2168127])
            const-val call_tmp[2168200]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2168202 'move' call_tmp[2168200](2168204 '+' i[2167728] i[2168127]))
            const-val call_tmp[2168207]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2168209 'move' call_tmp[2168207](2168212 call orderToIndex[1100997] view[2167481] call_tmp[2168200]))
            val coerce_tmp[2168215]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2168217 'move' coerce_tmp[2168215](2168219 '.v' localX[2167289] buff[30737]))
            ref call_tmp[2168222]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2168224 'move' call_tmp[2168222](2168226 'array_get' coerce_tmp[2168215] call_tmp[2168207]))
            val coerce_tmp[2168229]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2168231 'move' coerce_tmp[2168229](2168233 '.v' localNeedle[2167563] buff[30737]))
            ref call_tmp[2168236]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2168238 'move' call_tmp[2168236](2168240 'array_get' coerce_tmp[2168229] i[2168127]))
            const-val coerce_tmp[2168243]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2168245 'move' coerce_tmp[2168243](2168247 'deref' call_tmp[2168222]))
            const-val coerce_tmp[2168249]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2168251 'move' coerce_tmp[2168249](2168253 'deref' call_tmp[2168236]))
            const-val call_tmp[2168255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2168257 'move' call_tmp[2168255](2168259 '!=' coerce_tmp[2168243] coerce_tmp[2168249]))
            if call_tmp[2168255]
            {
              break _breakLabel[2168337] _breakLabel[2168337]
            }
            const-val call_tmp[2168285]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2168287 'move' call_tmp[2168285](2168289 '-' nLen[2167451] 1))
            const-val call_tmp[2168292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2168294 'move' call_tmp[2168292](2168296 '==' j[2168195] call_tmp[2168285]))
            if call_tmp[2168292]
            {
              const-val call_tmp[2168301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2168303 'move' call_tmp[2168301](2168306 call orderToIndex[1100997] view[2167481] i[2167728]))
              (2168309 '=' localRet[2167446] call_tmp[2168301])
            }
            {
              const-val low[2168170]:int(64)[13] "temp"
              (2168172 'move' low[2168170] _ic__F0_low[2251926])
              (2168177 '=' i[2168127] low[2168170])
            }
            {
              const-val high[2168181]:int(64)[13] "temp"
              (2168183 'move' high[2168181] _ic__F1_high[2251928])
              (2168188 '<=' i[2168127] high[2168181])
            }
            {
              (2168192 '+=' i[2168127] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2168313]
          label _endchpl_direct_counted_range_iter_helper[2168324]
          label _endchpl_direct_counted_range_iter[2168335]
          label _breakLabel[2168337]
          const-val call_tmp[2168348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168350 'move' call_tmp[2168348](2168352 '!=' localRet[2167446] -1))
          if call_tmp[2168348]
          {
            break _breakLabel[2168362] _breakLabel[2168362]
          }
          {
            (2167717 '=' i[2167675] coerce_tmp[2167687])
          }
          {
            (2167721 '<=' i[2167675] end[2167702])
          }
          {
            (2167725 '+=' i[2167675] 1)
          }
        }
        label _endthese[2168360]
        label _breakLabel[2168362]
        ref i_x[2168373]:string[26] "temp"
        (2168375 'move' i_x[2168373](2168377 'set reference' localNeedle[2167563]))
        (2168380 call deinit[30831] i_x[2168373])
      }
      const-val ret[2168383]:byteIndex[28170] "dead after last mention" "RVV" "temp"
      val cpi[2168385]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (2168388 call init[28097] cpi[2168385])
      (2168390 '.=' cpi[2168385] _bindex[28091] localRet[2167446])
      (2168394 'move' ret[2168383] cpi[2168385])
      (2168397 'move' ret[2167355] ret[2168383])
      gotoReturn _end_find[2168403] _end_find[2168403]
    }
    label _end_find[2168403]
    (2168405 'move' call_tmp[2167294] ret[2167355])
    val ret[2168408]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2168410 'move' ret[2168408](2168412 '.v' call_tmp[2167294] _bindex[28091]))
    const-val call_tmp[2168415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168417 'move' call_tmp[2168415](2168419 '!=' ret[2168408] -1))
    if call_tmp[2168415]
    {
      const-val call_tmp[2168424]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2168426]:string[26] "temp"
      (2168429 call strip[36092] localX[2167289] " \t\r\n" 1 1 ret_tmp[2168426])
      (2168435 'move' call_tmp[2168424] ret_tmp[2168426])
      (2168439 call =[38269] localX[2167289] call_tmp[2168424])
      ref i_x[2168442]:string[26] "temp"
      (2168444 'move' i_x[2168442](2168446 'set reference' call_tmp[2168424]))
      (2168449 call deinit[30831] i_x[2168442])
      val numElements[2168451]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2168453 'move' numElements[2168451] 0)
      const-val call_tmp_F1_maxsplit[2247597]:int(64)[13] "temp"
      ref i_this[2168460]:string[26] "temp"
      (2168462 'move' i_this[2168460](2168464 'set reference' localX[2167289]))
      const-val _ir_F1_maxsplit[2247613]:int(64)[13] "temp"
      (2168472 'move' _ir_F1_maxsplit[2247613] -1)
      (2247608 'move' call_tmp_F1_maxsplit[2247597] _ir_F1_maxsplit[2247613])
      const-val _ic__F1_maxsplit[2244248]:int(64)[13] "temp"
      const-val tmp[2168522]:int(64)[13] "temp"
      (2168524 'move' tmp[2168522] call_tmp_F1_maxsplit[2247597])
      (2168529 'move' _ic__F1_maxsplit[2244248] tmp[2168522])
      const-val n[2168543]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2168545]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2168547 'move' coerce_tmp[2168545](2168549 '.v' localX[2167289] cachedNumCodepoints[30731]))
      (2168552 '=' n[2168543] coerce_tmp[2168545])
      (2168555 'noop')
      const-val call_tmp[2168556]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168558 'move' call_tmp[2168556](2168561 call countNumCodepoints[181346] i_this[2168460]))
      const-val call_tmp[2168563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168565 'move' call_tmp[2168563](2168567 '!=' coerce_tmp[2168545] call_tmp[2168556]))
      if call_tmp[2168563]
      {
        (2168573 call halt[154071] "Encountered corrupt string metadata")
      }
      val ret[2168576]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2168578 'move' ret[2168576](2168580 '.v' localX[2167289] buffLen[30719]))
      const-val call_tmp[2168583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168585 'move' call_tmp[2168583](2168587 '==' n[2168543] ret[2168576]))
      if call_tmp[2168583]
      {
        const-val call_tmp_F1_maxsplit[2250673]:int(64)[13] "temp"
        const-val maxsplit[2168603]:int(64)[13] "temp"
        (2168605 'move' maxsplit[2168603] _ic__F1_maxsplit[2244248])
        const-val _ir_F1_maxsplit[2250689]:int(64)[13] "temp"
        (2168616 'move' _ir_F1_maxsplit[2250689] maxsplit[2168603])
        (2250684 'move' call_tmp_F1_maxsplit[2250673] _ir_F1_maxsplit[2250689])
        const-val _ic__F1_maxsplit[2244620]:int(64)[13] "temp"
        const-val tmp[2168666]:int(64)[13] "temp"
        (2168668 'move' tmp[2168666] call_tmp_F1_maxsplit[2250673])
        (2168673 'move' _ic__F1_maxsplit[2244620] tmp[2168666])
        const-val coerce_tmp[2168687]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2168689 'move' coerce_tmp[2168687](2168691 '.v' localX[2167289] buffLen[30719]))
        const-val call_tmp[2168694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2168696 'move' call_tmp[2168694](2168698 '==' coerce_tmp[2168687] 0))
        const-val call_tmp[2168701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2168703 'move' call_tmp[2168701](2168705 '!' call_tmp[2168694]))
        if call_tmp[2168701]
        {
          const-val ret[2168716]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2168718]:string[26] "dead at end of block" "insert auto destroy"
          (2168721 call init[30760] ret[2168718])
          const-val coerce_tmp[2168723]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2168725 'move' coerce_tmp[2168723](2168727 '.v' localX[2167289] cachedNumCodepoints[30731]))
          (2168730 '.=' ret[2168718] cachedNumCodepoints[30731] coerce_tmp[2168723])
          (2168735 call initWithBorrowedBuffer[946797] ret[2168718] i_this[2168460])
          (2168738 'move' ret[2168716] ret[2168718])
          const localx[2168741]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2168743 'move' localx[2168741] ret[2168716])
          val done[2168746]:bool[10] "dead at end of block" "insert auto destroy"
          (2168748 'move' done[2168746] 0)
          val yieldChunk[2168751]:bool[10] "dead at end of block" "insert auto destroy"
          (2168753 'move' yieldChunk[2168751] 0)
          val chunk[2168756]:string[26] "dead at end of block" "insert auto destroy"
          (2168759 call init[30760] chunk[2168756])
          const-val maxsplit[2168761]:int(64)[13] "temp"
          (2168763 'move' maxsplit[2168761] _ic__F1_maxsplit[2244620])
          const-val call_tmp[2168768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168770 'move' call_tmp[2168768](2168772 '==' maxsplit[2168761] 0))
          const-val noSplits[2168775]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2168777 'move' noSplits[2168775] call_tmp[2168768])
          const-val maxsplit[2168780]:int(64)[13] "temp"
          (2168782 'move' maxsplit[2168780] _ic__F1_maxsplit[2244620])
          const-val call_tmp[2168787]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168789 'move' call_tmp[2168787](2168791 '>' maxsplit[2168780] 0))
          const-val limitSplits[2168794]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2168796 'move' limitSplits[2168794] call_tmp[2168787])
          val splitCount[2168799]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2168801 'move' splitCount[2168799] 0)
          const-val coerce_tmp[2168804]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2168806 'move' coerce_tmp[2168804](2168808 '.v' localx[2168741] buffLen[30719]))
          const-val call_tmp[2168811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168813 'move' call_tmp[2168811](2168815 '-' coerce_tmp[2168804] 2))
          const-val iEnd[2168818]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (2168820 'move' iEnd[2168818] call_tmp[2168811])
          val inChunk[2168823]:bool[10] "dead at end of block" "insert auto destroy"
          (2168825 'move' inChunk[2168823] 0)
          val chunkStart[2168828]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2168830 'move' chunkStart[2168828] 0)
          const-val n[2168842]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[2168844]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2168846 'move' coerce_tmp[2168844](2168848 '.v' localX[2167289] cachedNumCodepoints[30731]))
          (2168851 '=' n[2168842] coerce_tmp[2168844])
          (2168854 'noop')
          const-val call_tmp[2168855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168857 'move' call_tmp[2168855](2168860 call countNumCodepoints[181346] i_this[2168460]))
          const-val call_tmp[2168862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168864 'move' call_tmp[2168862](2168866 '!=' coerce_tmp[2168844] call_tmp[2168855]))
          if call_tmp[2168862]
          {
            (2168872 call halt[154071] "Encountered corrupt string metadata")
          }
          const-val call_tmp[2168875]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168877 'move' call_tmp[2168875](2168879 '-' n[2168842] 1))
          const-val call_tmp[2168882]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[2168884]:range(int(64),bounded,false)[1023946] "temp"
          (2168887 call chpl_build_bounded_range[455195] 0 call_tmp[2168875] ret_tmp[2168884])
          (2168891 'move' call_tmp[2168882] ret_tmp[2168884])
          const-val call_tmp_F0_this[2252562]:range(int(64),bounded,false)[1023946] "temp"
          const-val _ir_F0_this[2252570]:range(int(64),bounded,false)[1023946] "temp"
          (2168898 'move' _ir_F0_this[2252570] call_tmp[2168882])
          (2252568 'move' call_tmp_F0_this[2252562] _ir_F0_this[2252570])
          val _ic_[2168907]:_ic_these_range_int64_t_bounded_F[1093682] "dead after last mention" "temp"
          const-val call_tmp[2168909]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168911 'move' call_tmp[2168909](2168913 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1093682]))
          const-val cast_tmp[2168915]:c_void_ptr[149] "dead after last mention" "temp"
          (2168917 'move' cast_tmp[2168915](2168920 call chpl_here_alloc[187754] call_tmp[2168909] 27))
          (2168923 'move' _ic_[2168907](2168925 'cast' _ic_these_range_int64_t_bounded_F[1093682] cast_tmp[2168915]))
          (2168928 'setcid' _ic_[2168907])
          (2168933 '.=' _ic_[2168907] more[1093685] 1)
          const-val tmp[2168937]:range(int(64),bounded,false)[1023946] "temp"
          (2168939 'move' tmp[2168937] call_tmp_F0_this[2252562])
          (2168944 '.=' _ic_[2168907] F0_this[1955920] tmp[2168937])
          ref i_this[2168950]:string[26] "temp"
          (2168952 'move' i_this[2168950](2168954 'set reference' localx[2168741]))
          val _ic_[2168967]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "temp"
          const-val call_tmp[2168969]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2168971 'move' call_tmp[2168969](2168973 'sizeof_bundle' _ic_chpl_bytes__ref_string[1105204]))
          const-val cast_tmp[2168975]:c_void_ptr[149] "dead after last mention" "temp"
          (2168977 'move' cast_tmp[2168975](2168980 call chpl_here_alloc[187754] call_tmp[2168969] 31))
          (2168983 'move' _ic_[2168967](2168985 'cast' _ic_chpl_bytes__ref_string[1105204] cast_tmp[2168975]))
          (2168988 'setcid' _ic_[2168967])
          (2168993 '.=' _ic_[2168967] more[1105207] 1)
          (2169004 '.=' _ic_[2168967] F0_this[1940093] i_this[2168950])
          const-val coerce_tmp[2169035]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val tmp[2169037]:range(int(64),bounded,false)[1023946] "temp"
          ref tmp[2169039]:range(int(64),bounded,false)[1023946] "temp"
          val tmp[2169041]:int(64)[13] "temp"
          ref tmp[2169043]:range(int(64),bounded,false)[1023946] "temp"
          (2169045 'move' tmp[2169037](2169047 '.v' _ic_[2168907] F0_this[1955920]))
          (2169051 call checkIfIterWillOverflow[1092793] tmp[2169037] 1)
          (2169054 '.=' _ic_[2168907] F1_i[1955924] 0)
          (2169058 'move' tmp[2169039](2169060 '.' _ic_[2168907] F0_this[1955920]))
          (2169063 'move' tmp[2169041](2169065 '.v' tmp[2169039] _low[1023908]))
          (2169068 '.=' _ic_[2168907] F3_coerce_tmp[1955928] tmp[2169041])
          (2169072 'noop')
          (2169073 'move' tmp[2169043](2169075 '.' _ic_[2168907] F0_this[1955920]))
          (2169078 'move' coerce_tmp[2169035](2169080 '.v' tmp[2169043] _high[1023913]))
          (2169083 '.=' _ic_[2168907] F2_end[1955926] coerce_tmp[2169035])
          (2169087 'noop')
          const-val call_tmp_F0_low[2261985]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2261987]:int(64)[13] "temp"
          const-val coerce_tmp[2169090]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          const-val call_tmp_F0_low[2263442]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2263444]:int(64)[13] "temp"
          const-val low[2169094]:int(64)[13] "temp"
          const-val count[2169096]:int(64)[13] "temp"
          const-val count[2169098]:int(64)[13] "temp"
          val tmp[2169100]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
          const-val count[2169102]:int(64)[13] "temp"
          const-val coerce_tmp[2169104]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val coerce_tmp[2169106]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val call_tmp_F0_low[2265455]:int(64)[13] "temp"
          const-val call_tmp_F1_high[2265457]:int(64)[13] "temp"
          const-val low[2169110]:int(64)[13] "temp"
          const-val high[2169112]:int(64)[13] "temp"
          const-val low[2169114]:int(64)[13] "temp"
          const-val high[2169116]:int(64)[13] "temp"
          const-ref tmp[2169118]:string[26] "temp"
          ref tmp[2169120]:string[26] "temp"
          const-ref tmp[2169122]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2169124]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2169126]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          const-ref tmp[2169128]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          const-ref tmp[2169130]:2*int(64)[1037179] "temp"
          const-ref tmp[2169132]:2*int(64)[1037179] "temp"
          const-ref tmp[2169134]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2169136]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2169138]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2169140]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          (2169142 'move' tmp[2169118](2169144 '.v' _ic_[2168967] F0_this[1940093]))
          const-val ret[2169147]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2169149]:string[26] "dead at end of block" "insert auto destroy"
          (2169152 call init[30760] ret[2169149])
          const-val coerce_tmp[2169154]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2169156 'move' coerce_tmp[2169154](2169158 '.v' tmp[2169118] cachedNumCodepoints[30731]))
          (2169161 '.=' ret[2169149] cachedNumCodepoints[30731] coerce_tmp[2169154])
          (2169166 call initWithBorrowedBuffer[946797] ret[2169149] tmp[2169118])
          (2169169 'move' ret[2169147] ret[2169149])
          (2169172 '.=' _ic_[2168967] F1_localThis[1940097] ret[2169147])
          (2169176 'move' tmp[2169120](2169178 '.' _ic_[2168967] F1_localThis[1940097]))
          (2169181 'move' coerce_tmp[2169090](2169183 '.v' tmp[2169120] buffLen[30719]))
          const-val _ir_F0_low[2262001]:int(64)[13] "temp"
          const-val _ir_F1_count[2262003]:int(64)[13] "temp"
          (2169188 'move' _ir_F0_low[2262001] 0)
          (2169192 'move' _ir_F1_count[2262003] coerce_tmp[2169090])
          (2261993 'move' call_tmp_F0_low[2261985] _ir_F0_low[2262001])
          (2261998 'move' call_tmp_F1_count[2261987] _ir_F1_count[2262003])
          val _ic_[2169201]:_ic_chpl_direct_counted_range_iter[1100747] "dead after last mention" "temp"
          const-val call_tmp[2169203]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2169205 'move' call_tmp[2169203](2169207 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1100747]))
          const-val cast_tmp[2169209]:c_void_ptr[149] "dead after last mention" "temp"
          (2169211 'move' cast_tmp[2169209](2169214 call chpl_here_alloc[187754] call_tmp[2169203] 30))
          (2169217 'move' _ic_[2169201](2169219 'cast' _ic_chpl_direct_counted_range_iter[1100747] cast_tmp[2169209]))
          (2169222 'setcid' _ic_[2169201])
          (2169227 '.=' _ic_[2169201] more[1100750] 1)
          const-val tmp[2169231]:int(64)[13] "temp"
          (2169233 'move' tmp[2169231] call_tmp_F0_low[2261985])
          (2169238 '.=' _ic_[2169201] F0_low[1952071] tmp[2169231])
          const-val tmp[2169242]:int(64)[13] "temp"
          (2169244 'move' tmp[2169242] call_tmp_F1_count[2261987])
          (2169249 '.=' _ic_[2169201] F1_count[1952075] tmp[2169242])
          (2169253 '.=' _ic_[2168967] F2__iterator[1940099] _ic_[2169201])
          (2169257 'move' tmp[2169122](2169259 '.' _ic_[2168967] F2__iterator[1940099]))
          (2169262 'move' low[2169094](2169264 '.v' tmp[2169122] F0_low[1952071]))
          (2169267 'move' tmp[2169124](2169269 '.' _ic_[2168967] F2__iterator[1940099]))
          (2169272 'move' count[2169096](2169274 '.v' tmp[2169124] F1_count[1952075]))
          const-val _ir_F0_low[2263458]:int(64)[13] "temp"
          const-val _ir_F1_count[2263460]:int(64)[13] "temp"
          (2169279 'move' _ir_F0_low[2263458] low[2169094])
          (2169283 'move' _ir_F1_count[2263460] count[2169096])
          (2263450 'move' call_tmp_F0_low[2263442] _ir_F0_low[2263458])
          (2263455 'move' call_tmp_F1_count[2263444] _ir_F1_count[2263460])
          val _ic_[2169292]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead after last mention" "temp"
          const-val call_tmp[2169294]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2169296 'move' call_tmp[2169294](2169298 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1100497]))
          const-val cast_tmp[2169300]:c_void_ptr[149] "dead after last mention" "temp"
          (2169302 'move' cast_tmp[2169300](2169305 call chpl_here_alloc[187754] call_tmp[2169294] 29))
          (2169308 'move' _ic_[2169292](2169310 'cast' _ic_chpl_direct_counted_range_iter_helper[1100497] cast_tmp[2169300]))
          (2169313 'setcid' _ic_[2169292])
          (2169318 '.=' _ic_[2169292] more[1100500] 1)
          const-val tmp[2169322]:int(64)[13] "temp"
          (2169324 'move' tmp[2169322] call_tmp_F0_low[2263442])
          (2169329 '.=' _ic_[2169292] F0_low[1956543] tmp[2169322])
          const-val tmp[2169333]:int(64)[13] "temp"
          (2169335 'move' tmp[2169333] call_tmp_F1_count[2263444])
          (2169340 '.=' _ic_[2169292] F1_count[1956547] tmp[2169333])
          (2169344 '.=' _ic_[2168967] F3__iterator[1940101] _ic_[2169292])
          (2169348 'move' tmp[2169126](2169350 '.' _ic_[2168967] F3__iterator[1940101]))
          (2169353 'move' count[2169098](2169355 '.v' tmp[2169126] F1_count[1956547]))
          const-val call_tmp[2169358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2169360 'move' call_tmp[2169358](2169362 '<' count[2169098] 0))
          if call_tmp[2169358]
          {
            (2169368 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
          }
          (2169371 'move' tmp[2169128](2169373 '.' _ic_[2168967] F3__iterator[1940101]))
          (2169376 'move' count[2169102](2169378 '.v' tmp[2169128] F1_count[1956547]))
          const-val call_tmp[2169381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2169383 'move' call_tmp[2169381](2169385 '==' count[2169102] 0))
          if call_tmp[2169381]
          {
            const-val low[2169390]:int(64)[13] "temp"
            const-ref tmp[2169392]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2169394 'move' tmp[2169392](2169396 '.' _ic_[2168967] F3__iterator[1940101]))
            (2169399 'move' low[2169390](2169401 '.v' tmp[2169392] F0_low[1956543]))
            const-val call_tmp[2169404]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2169406 'move' call_tmp[2169404](2169408 'cast' uint(64)[115] low[2169390]))
            const-val call_tmp[2169411]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2169413 'move' call_tmp[2169411](2169415 '-' call_tmp[2169404] 1))
            const-val call_tmp[2169418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2169420 'move' call_tmp[2169418](2169422 'cast' int(64)[13] call_tmp[2169411]))
            const-val low[2169425]:int(64)[13] "temp"
            const-ref tmp[2169427]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2169429 'move' tmp[2169427](2169431 '.' _ic_[2168967] F3__iterator[1940101]))
            (2169434 'move' low[2169425](2169436 '.v' tmp[2169427] F0_low[1956543]))
            val this_x0[2260076]:int(64)[13]
            val this_x1[2260078]:int(64)[13]
            (2169441 'move' this_x0[2260076] low[2169425])
            (2169445 'move' this_x1[2260078] call_tmp[2169418])
            (2260084 '.=' tmp[2169100] x0[1037175] this_x0[2260076])
            (2260088 '.=' tmp[2169100] x1[1037177] this_x1[2260078])
          }
          {
            const-val count[2169453]:int(64)[13] "temp"
            const-ref tmp[2169455]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2169457 'move' tmp[2169455](2169459 '.' _ic_[2168967] F3__iterator[1940101]))
            (2169462 'move' count[2169453](2169464 '.v' tmp[2169455] F1_count[1956547]))
            const-val call_tmp[2169467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2169469 'move' call_tmp[2169467](2169471 '-' count[2169453] 1))
            const-val low[2169474]:int(64)[13] "temp"
            const-ref tmp[2169476]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2169478 'move' tmp[2169476](2169480 '.' _ic_[2168967] F3__iterator[1940101]))
            (2169483 'move' low[2169474](2169485 '.v' tmp[2169476] F0_low[1956543]))
            const-val call_tmp[2169488]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2169490 'move' call_tmp[2169488](2169492 '+' low[2169474] call_tmp[2169467]))
            const-val low[2169495]:int(64)[13] "temp"
            const-ref tmp[2169497]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2169499 'move' tmp[2169497](2169501 '.' _ic_[2168967] F3__iterator[1940101]))
            (2169504 'move' low[2169495](2169506 '.v' tmp[2169497] F0_low[1956543]))
            val this_x0[2260090]:int(64)[13]
            val this_x1[2260092]:int(64)[13]
            (2169511 'move' this_x0[2260090] low[2169495])
            (2169515 'move' this_x1[2260092] call_tmp[2169488])
            (2260098 '.=' tmp[2169100] x0[1037175] this_x0[2260090])
            (2260102 '.=' tmp[2169100] x1[1037177] this_x1[2260092])
          }
          (2169523 '.=' _ic_[2168967] F4_tmp[1940103] tmp[2169100])
          (2169527 'noop')
          (2169528 'move' tmp[2169130](2169530 '.' _ic_[2168967] F4_tmp[1940103]))
          (2169533 'move' coerce_tmp[2169104](2169535 '.v' tmp[2169130] x0[1037175]))
          (2169538 'noop')
          (2169539 'move' tmp[2169132](2169541 '.' _ic_[2168967] F4_tmp[1940103]))
          (2169544 'move' coerce_tmp[2169106](2169546 '.v' tmp[2169132] x1[1037177]))
          (2169549 'noop')
          const-val _ir_F0_low[2265471]:int(64)[13] "temp"
          const-val _ir_F1_high[2265473]:int(64)[13] "temp"
          (2169552 'move' _ir_F0_low[2265471] coerce_tmp[2169104])
          (2169556 'move' _ir_F1_high[2265473] coerce_tmp[2169106])
          (2265463 'move' call_tmp_F0_low[2265455] _ir_F0_low[2265471])
          (2265468 'move' call_tmp_F1_high[2265457] _ir_F1_high[2265473])
          val _ic_[2169565]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead after last mention" "temp"
          const-val call_tmp[2169567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2169569 'move' call_tmp[2169567](2169571 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1100243]))
          const-val cast_tmp[2169573]:c_void_ptr[149] "dead after last mention" "temp"
          (2169575 'move' cast_tmp[2169573](2169578 call chpl_here_alloc[187754] call_tmp[2169567] 28))
          (2169581 'move' _ic_[2169565](2169583 'cast' _ic_chpl_direct_param_stride_range_iter[1100243] cast_tmp[2169573]))
          (2169586 'setcid' _ic_[2169565])
          (2169591 '.=' _ic_[2169565] more[1100246] 1)
          const-val tmp[2169595]:int(64)[13] "temp"
          (2169597 'move' tmp[2169595] call_tmp_F0_low[2265455])
          (2169602 '.=' _ic_[2169565] F0_low[1958041] tmp[2169595])
          const-val tmp[2169606]:int(64)[13] "temp"
          (2169608 'move' tmp[2169606] call_tmp_F1_high[2265457])
          (2169613 '.=' _ic_[2169565] F1_high[1958045] tmp[2169606])
          (2169617 '.=' _ic_[2168967] F5__iterator[1940105] _ic_[2169565])
          (2169621 '.=' _ic_[2168967] F6_i[1940107] 0)
          (2169625 'move' tmp[2169134](2169627 '.' _ic_[2168967] F5__iterator[1940105]))
          (2169630 'move' low[2169110](2169632 '.v' tmp[2169134] F0_low[1958041]))
          (2169635 'move' tmp[2169136](2169637 '.' _ic_[2168967] F5__iterator[1940105]))
          (2169640 'move' high[2169112](2169642 '.v' tmp[2169136] F1_high[1958045]))
          (2169645 'move' tmp[2169138](2169647 '.' _ic_[2168967] F5__iterator[1940105]))
          (2169650 'move' low[2169114](2169652 '.v' tmp[2169138] F0_low[1958041]))
          (2169655 'move' tmp[2169140](2169657 '.' _ic_[2168967] F5__iterator[1940105]))
          (2169660 'move' high[2169116](2169662 '.v' tmp[2169140] F1_high[1958045]))
          (2169666 call chpl_checkIfRangeIterWillOverflow[1093055] low[2169114] high[2169116] 1 low[2169110] high[2169112] 1)
          const-val isFinished[2169673]:bool[10] "temp"
          val hasMore[2169675]:bool[10] "temp"
          CForLoop[2169677]
          {
            val _indexOfInterest_x0[2267248]:int(64)[13] "temp"
            val _indexOfInterest_x1[2267250]:uint(8)[100] "temp"
            val coerce_tmp[2169773]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            const-val tmp[2169775]:int(64)[13] "temp"
            ref tmp[2169777]:string[26] "temp"
            val tmp[2169779]:uint(8)[100] "temp"
            (2169781 'move' tmp[2169775](2169783 '.v' _ic_[2168967] F6_i[1940107]))
            (2169786 'move' tmp[2169777](2169788 '.' _ic_[2168967] F1_localThis[1940097]))
            (2169791 'move' coerce_tmp[2169773](2169793 '.v' tmp[2169777] buff[30737]))
            ref call_tmp[2169796]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2169798 'move' call_tmp[2169796](2169800 'array_get' coerce_tmp[2169773] tmp[2169775]))
            (2169803 'move' tmp[2169779](2169805 'deref' call_tmp[2169796]))
            (2169807 '.=' _ic_[2168967] value[1940111] tmp[2169779])
            (2169811 'noop')
            (2169812 '.=' _ic_[2168967] more[1105207] 2)
            val tmp[2169816]:int(64)[13] "temp"
            const-val high[2169818]:int(64)[13] "temp"
            const-ref tmp[2169820]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2169822 'move' tmp[2169820](2169824 '.' _ic_[2168967] F5__iterator[1940105]))
            (2169827 'move' high[2169818](2169829 '.v' tmp[2169820] F1_high[1958045]))
            const-val tmp[2169832]:int(64)[13] "temp"
            (2169834 'move' tmp[2169832](2169836 '.v' _ic_[2168967] F6_i[1940107]))
            (2169839 'move' tmp[2169816](2169841 '<=' tmp[2169832] high[2169818]))
            (2169844 'move' hasMore[2169675](2169846 'cast' bool[10] tmp[2169816]))
            (2169849 'move' isFinished[2169673](2169851 '!' hasMore[2169675]))
            if isFinished[2169673]
            {
              (2169855 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2169858]:uint(8)[100] "temp"
            (2169860 'move' tmp[2169858](2169862 '.v' _ic_[2168967] value[1940111]))
            const-val tmp[2169865]:int(64)[13] "temp"
            (2169867 'move' tmp[2169865](2169869 '.v' _ic_[2168907] F1_i[1955924]))
            (2169872 '.=' _ic_[2168907] value[1955930] tmp[2169865])
            (2169876 '.=' _ic_[2168907] more[1093685] 2)
            val tmp[2169880]:int(64)[13] "temp"
            (2169882 'move' tmp[2169880](2169884 '.v' _ic_[2168907] value[1955930]))
            (2169887 'move' _indexOfInterest_x1[2267250] tmp[2169858])
            (2169891 'move' _indexOfInterest_x0[2267248] tmp[2169880])
            const-val i[2169895]:int(64)[13] "const" "index var" "insert auto destroy"
            (2169897 'move' i[2169895] _indexOfInterest_x0[2267248])
            const-val c[2169902]:uint(8)[100] "const" "index var" "insert auto destroy"
            (2169904 'move' c[2169902] _indexOfInterest_x1[2267250])
            if noSplits[2168775]
            {
              (2169911 '=' done[2168746] 1)
              const-val call_tmp[2169914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169916 'move' call_tmp[2169914](2169919 call isSpace[36840] localx[2168741]))
              const-val call_tmp[2169921]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169923 'move' call_tmp[2169921](2169925 '!' call_tmp[2169914]))
              if call_tmp[2169921]
              {
                (2169930 call =[38269] chunk[2168756] localx[2168741])
                (2169933 '=' yieldChunk[2168751] 1)
              }
            }
            {
              const-val call_tmp[2169938]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169940 'move' call_tmp[2169938](2169942 'cast' int(32)[95] c[2169902]))
              const-val call_tmp[2169945]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169947 'move' call_tmp[2169945](2169950 call isspace[181630] call_tmp[2169938]))
              const-val coerce_tmp[2169952]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2169954 'move' coerce_tmp[2169952](2169956 'cast' int(32)[95] 0))
              const-val call_tmp[2169959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169961 'move' call_tmp[2169959](2169963 '!=' call_tmp[2169945] coerce_tmp[2169952]))
              const-val cSpace[2169966]:bool[10] "dead at end of block" "insert auto destroy"
              (2169968 'move' cSpace[2169966] call_tmp[2169959])
              val tmp[2169971]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if inChunk[2168823]
              {
                (2169975 'move' tmp[2169971] 1)
              }
              {
                (2169979 'move' tmp[2169971] cSpace[2169966])
              }
              const-val call_tmp[2169983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2169985 'move' call_tmp[2169983](2169987 '!' tmp[2169971]))
              if call_tmp[2169983]
              {
                (2169991 '=' chunkStart[2168828] i[2169895])
                (2169994 '=' inChunk[2168823] 1)
                const-val call_tmp[2169997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2169999 'move' call_tmp[2169997](2170001 '>' i[2169895] iEnd[2168818]))
                if call_tmp[2169997]
                {
                  const-val call_tmp[2170006]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[2170008]:range(int(64),boundedLow,false)[1084544] "temp"
                  (2170011 call chpl_build_low_bounded_range[1083937] chunkStart[2168828] ret_tmp[2170008])
                  (2170014 'move' call_tmp[2170006] ret_tmp[2170008])
                  const-val call_tmp[2170017]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref i_this[2170019]:string[26] "temp"
                  (2170021 'move' i_this[2170019](2170023 'set reference' localx[2168741]))
                  const-val call_tmp[2170025]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[2170027]:string[26] "temp"
                  (2170030 call getSlice[1122532] i_this[2170019] call_tmp[2170006] ret_tmp[2170027])
                  (2170034 'move' call_tmp[2170025] ret_tmp[2170027])
                  (2170037 'move' call_tmp[2170017] call_tmp[2170025])
                  (2170041 call =[38269] chunk[2168756] call_tmp[2170017])
                  ref i_x[2170044]:string[26] "temp"
                  (2170046 'move' i_x[2170044](2170048 'set reference' call_tmp[2170017]))
                  (2170051 call deinit[30831] i_x[2170044])
                  (2170053 '=' yieldChunk[2168751] 1)
                  (2170056 '=' done[2168746] 1)
                }
              }
              {
                if inChunk[2168823]
                {
                  if cSpace[2169966]
                  {
                    ref i_lhs[2170065]:int(64)[13] "temp"
                    (2170067 'move' i_lhs[2170065](2170069 'set reference' splitCount[2168799]))
                    (2170071 '+=' i_lhs[2170065] 1)
                    val tmp[2170074]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    if limitSplits[2168794]
                    {
                      const-val maxsplit[2170078]:int(64)[13] "temp"
                      (2170080 'move' maxsplit[2170078] _ic__F1_maxsplit[2244620])
                      const-val call_tmp[2170085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2170087 'move' call_tmp[2170085](2170089 '>' splitCount[2168799] maxsplit[2170078]))
                      (2170092 'move' tmp[2170074] call_tmp[2170085])
                    }
                    {
                      (2170096 'move' tmp[2170074] 0)
                    }
                    if tmp[2170074]
                    {
                      const-val call_tmp[2170102]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170104]:range(int(64),boundedLow,false)[1084544] "temp"
                      (2170107 call chpl_build_low_bounded_range[1083937] chunkStart[2168828] ret_tmp[2170104])
                      (2170110 'move' call_tmp[2170102] ret_tmp[2170104])
                      const-val call_tmp[2170113]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2170115]:string[26] "temp"
                      (2170117 'move' i_this[2170115](2170119 'set reference' localx[2168741]))
                      const-val call_tmp[2170121]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170123]:string[26] "temp"
                      (2170126 call getSlice[1122532] i_this[2170115] call_tmp[2170102] ret_tmp[2170123])
                      (2170130 'move' call_tmp[2170121] ret_tmp[2170123])
                      (2170133 'move' call_tmp[2170113] call_tmp[2170121])
                      (2170137 call =[38269] chunk[2168756] call_tmp[2170113])
                      ref i_x[2170140]:string[26] "temp"
                      (2170142 'move' i_x[2170140](2170144 'set reference' call_tmp[2170113]))
                      (2170147 call deinit[30831] i_x[2170140])
                      (2170149 '=' yieldChunk[2168751] 1)
                      (2170152 '=' done[2168746] 1)
                    }
                    {
                      const-val call_tmp[2170156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2170158 'move' call_tmp[2170156](2170160 '-' i[2169895] 1))
                      const-val call_tmp[2170163]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170165]:range(int(64),bounded,false)[1023946] "temp"
                      (2170168 call chpl_build_bounded_range[455195] chunkStart[2168828] call_tmp[2170156] ret_tmp[2170165])
                      (2170172 'move' call_tmp[2170163] ret_tmp[2170165])
                      const-val call_tmp[2170175]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2170177]:string[26] "temp"
                      (2170179 'move' i_this[2170177](2170181 'set reference' localx[2168741]))
                      const-val call_tmp[2170183]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170185]:string[26] "temp"
                      (2170188 call getSlice[1108350] i_this[2170177] call_tmp[2170163] ret_tmp[2170185])
                      (2170192 'move' call_tmp[2170183] ret_tmp[2170185])
                      (2170195 'move' call_tmp[2170175] call_tmp[2170183])
                      (2170199 call =[38269] chunk[2168756] call_tmp[2170175])
                      ref i_x[2170202]:string[26] "temp"
                      (2170204 'move' i_x[2170202](2170206 'set reference' call_tmp[2170175]))
                      (2170209 call deinit[30831] i_x[2170202])
                      (2170211 '=' yieldChunk[2168751] 1)
                      (2170214 '=' inChunk[2168823] 0)
                    }
                  }
                  {
                    const-val call_tmp[2170219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2170221 'move' call_tmp[2170219](2170223 '>' i[2169895] iEnd[2168818]))
                    if call_tmp[2170219]
                    {
                      const-val call_tmp[2170228]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170230]:range(int(64),boundedLow,false)[1084544] "temp"
                      (2170233 call chpl_build_low_bounded_range[1083937] chunkStart[2168828] ret_tmp[2170230])
                      (2170236 'move' call_tmp[2170228] ret_tmp[2170230])
                      const-val call_tmp[2170239]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2170241]:string[26] "temp"
                      (2170243 'move' i_this[2170241](2170245 'set reference' localx[2168741]))
                      const-val call_tmp[2170247]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2170249]:string[26] "temp"
                      (2170252 call getSlice[1122532] i_this[2170241] call_tmp[2170228] ret_tmp[2170249])
                      (2170256 'move' call_tmp[2170247] ret_tmp[2170249])
                      (2170259 'move' call_tmp[2170239] call_tmp[2170247])
                      (2170263 call =[38269] chunk[2168756] call_tmp[2170239])
                      ref i_x[2170266]:string[26] "temp"
                      (2170268 'move' i_x[2170266](2170270 'set reference' call_tmp[2170239]))
                      (2170273 call deinit[30831] i_x[2170266])
                      (2170275 '=' yieldChunk[2168751] 1)
                      (2170278 '=' done[2168746] 1)
                    }
                  }
                }
              }
            }
            if yieldChunk[2168751]
            {
              ref i_x[2170288]:string[26] "temp"
              (2170290 'move' i_x[2170288](2170292 'set reference' chunk[2168756]))
              val ret[2170294]:string[26] "dead after last mention" "RVV" "temp"
              const-val tmp[2170296]:string[26] "dead after last mention" "temp"
              (2170299 call init=[30771] tmp[2170296] i_x[2170288])
              (2170302 'move' ret[2170294] tmp[2170296])
              const-val s[2170305]:string[26] "const" "index var" "insert auto destroy"
              (2170307 'move' s[2170305] ret[2170294])
              ref i_x[2170310]:string[26] "temp"
              (2170312 'move' i_x[2170310](2170314 'set reference' s[2170305]))
              val ret[2170316]:string[26] "dead after last mention" "RVV" "temp"
              const-val tmp[2170318]:string[26] "dead after last mention" "temp"
              (2170321 call init=[30771] tmp[2170318] i_x[2170310])
              (2170324 'move' ret[2170316] tmp[2170318])
              const-val chpl__elidedIdx[2170327]:string[26] "const" "index var" "insert auto destroy"
              (2170329 'move' chpl__elidedIdx[2170327] ret[2170316])
              ref i_lhs[2170332]:int(64)[13] "temp"
              (2170334 'move' i_lhs[2170332](2170336 'set reference' numElements[2168451]))
              (2170338 '+=' i_lhs[2170332] 1)
              const-val call_tmp[2170341]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2170343 'move' call_tmp[2170341](2170345 '>' numElements[2168451] 1))
              if call_tmp[2170341]
              {
                ref i_x[2170350]:string[26] "temp"
                (2170352 'move' i_x[2170350](2170354 'set reference' chpl__elidedIdx[2170327]))
                (2170357 call deinit[30831] i_x[2170350])
                const-val moreVal1[2170359]:int(64)[13] "const" "temp"
                (2170361 '=' moreVal1[2170359](2170363 '.v' _ic_[2168907] more[1093685]))
                const-val moreValNeg1[2170366]:int(64)[13] "const" "temp"
                (2170368 'move' moreValNeg1[2170366](2170370 'u-' moreVal1[2170359]))
                (2170372 '.=' _ic_[2168907] more[1093685] moreValNeg1[2170366])
                (2170377 call advance[1093708] _ic_[2168907])
                const-val moreVal2[2170379]:int(64)[13] "const" "temp"
                (2170381 '=' moreVal2[2170379](2170383 '.v' _ic_[2168967] more[1105207]))
                const-val moreValNeg2[2170386]:int(64)[13] "const" "temp"
                (2170388 'move' moreValNeg2[2170386](2170390 'u-' moreVal2[2170379]))
                (2170392 '.=' _ic_[2168967] more[1105207] moreValNeg2[2170386])
                (2170397 call advance[1105230] _ic_[2168967])
                const-val call_tmp[2170406]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2170408 'move' call_tmp[2170406](2170410 'cast_to_void_star' _ic_[2168907]))
                (2170413 call chpl_here_free[188093] call_tmp[2170406])
                const-val call_tmp[2170422]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2170424 'move' call_tmp[2170422](2170426 'cast_to_void_star' _ic_[2168967]))
                (2170429 call chpl_here_free[188093] call_tmp[2170422])
                ref i_x[2170431]:string[26] "temp"
                (2170433 'move' i_x[2170431](2170435 'set reference' chunk[2168756]))
                (2170438 call deinit[30831] i_x[2170431])
                ref i_x[2170440]:string[26] "temp"
                (2170442 'move' i_x[2170440](2170444 'set reference' localx[2168741]))
                (2170447 call deinit[30831] i_x[2170440])
                ref i_x[2170449]:string[26] "temp"
                (2170451 'move' i_x[2170449](2170453 'set reference' s[2170305]))
                (2170456 call deinit[30831] i_x[2170449])
                break _breakLabel[2174224] _breakLabel[2174224]
              }
              ref i_x[2170470]:string[26] "temp"
              (2170472 'move' i_x[2170470](2170474 'set reference' chpl__elidedIdx[2170327]))
              (2170477 call deinit[30831] i_x[2170470])
              ref i_x[2170479]:string[26] "temp"
              (2170481 'move' i_x[2170479](2170483 'set reference' s[2170305]))
              (2170486 call deinit[30831] i_x[2170479])
              (2170488 '=' yieldChunk[2168751] 0)
            }
            if done[2168746]
            {
              const-val moreVal1[2170494]:int(64)[13] "const" "temp"
              (2170496 '=' moreVal1[2170494](2170498 '.v' _ic_[2168907] more[1093685]))
              const-val moreValNeg1[2170501]:int(64)[13] "const" "temp"
              (2170503 'move' moreValNeg1[2170501](2170505 'u-' moreVal1[2170494]))
              (2170507 '.=' _ic_[2168907] more[1093685] moreValNeg1[2170501])
              (2170512 call advance[1093708] _ic_[2168907])
              const-val moreVal2[2170514]:int(64)[13] "const" "temp"
              (2170516 '=' moreVal2[2170514](2170518 '.v' _ic_[2168967] more[1105207]))
              const-val moreValNeg2[2170521]:int(64)[13] "const" "temp"
              (2170523 'move' moreValNeg2[2170521](2170525 'u-' moreVal2[2170514]))
              (2170527 '.=' _ic_[2168967] more[1105207] moreValNeg2[2170521])
              (2170532 call advance[1105230] _ic_[2168967])
              break _breakLabel[2170633] _breakLabel[2170633]
            }
            {
              const-val tmp[2169679]:int(64)[13] "temp"
              (2169681 'move' tmp[2169679](2169683 '.v' _ic_[2168907] F3_coerce_tmp[1955928]))
              (2169686 '.=' _ic_[2168907] F1_i[1955924] tmp[2169679])
              const-val tmp[2169690]:int(64)[13] "temp"
              const-ref tmp[2169692]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
              (2169694 'move' tmp[2169692](2169696 '.' _ic_[2168967] F5__iterator[1940105]))
              (2169699 'move' tmp[2169690](2169701 '.v' tmp[2169692] F0_low[1958041]))
              (2169704 '.=' _ic_[2168967] F7_low[1940109] tmp[2169690])
              const-val tmp[2169708]:int(64)[13] "temp"
              (2169710 'move' tmp[2169708](2169712 '.v' _ic_[2168967] F7_low[1940109]))
              (2169715 '.=' _ic_[2168967] F6_i[1940107] tmp[2169708])
            }
            {
              val tmp[2169720]:int(64)[13] "temp"
              const-val tmp[2169722]:int(64)[13] "temp"
              (2169724 'move' tmp[2169722](2169726 '.v' _ic_[2168907] F1_i[1955924]))
              const-val tmp[2169729]:int(64)[13] "temp"
              (2169731 'move' tmp[2169729](2169733 '.v' _ic_[2168907] F2_end[1955926]))
              (2169736 'move' tmp[2169720](2169738 '<=' tmp[2169722] tmp[2169729]))
              tmp[2169720]
            }
            {
              val tmp[2169743]:int(64)[13] "temp"
              (2169745 'move' tmp[2169743](2169747 '.v' _ic_[2168907] F1_i[1955924]))
              (2169750 '+=' tmp[2169743] 1)
              (2169753 '.=' _ic_[2168907] F1_i[1955924] tmp[2169743])
              val tmp[2169757]:int(64)[13] "temp"
              (2169759 'move' tmp[2169757](2169761 '.v' _ic_[2168967] F6_i[1940107]))
              (2169764 '+=' tmp[2169757] 1)
              (2169767 '.=' _ic_[2168967] F6_i[1940107] tmp[2169757])
            }
          }
          val tmp[2170537]:int(64)[13] "temp"
          const-val high[2170539]:int(64)[13] "temp"
          const-ref tmp[2170541]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          (2170543 'move' tmp[2170541](2170545 '.' _ic_[2168967] F5__iterator[1940105]))
          (2170548 'move' high[2170539](2170550 '.v' tmp[2170541] F1_high[1958045]))
          const-val tmp[2170553]:int(64)[13] "temp"
          (2170555 'move' tmp[2170553](2170557 '.v' _ic_[2168967] F6_i[1940107]))
          (2170560 'move' tmp[2170537](2170562 '<=' tmp[2170553] high[2170539]))
          (2170565 'move' hasMore[2169675](2170567 'cast' bool[10] tmp[2170537]))
          if hasMore[2169675]
          {
            (2170572 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2170575]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          val tmp[2170577]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          val tmp[2170579]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2170581]:string[26] "temp"
          (2170583 'move' tmp[2170575](2170585 '.v' _ic_[2168967] F5__iterator[1940105]))
          const-val call_tmp[2170588]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170590 'move' call_tmp[2170588](2170592 'cast_to_void_star' tmp[2170575]))
          (2170595 call chpl_here_free[188093] call_tmp[2170588])
          (2170597 'move' tmp[2170577](2170599 '.v' _ic_[2168967] F3__iterator[1940101]))
          const-val call_tmp[2170602]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170604 'move' call_tmp[2170602](2170606 'cast_to_void_star' tmp[2170577]))
          (2170609 call chpl_here_free[188093] call_tmp[2170602])
          (2170611 'move' tmp[2170579](2170613 '.v' _ic_[2168967] F2__iterator[1940099]))
          const-val call_tmp[2170616]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170618 'move' call_tmp[2170616](2170620 'cast_to_void_star' tmp[2170579]))
          (2170623 call chpl_here_free[188093] call_tmp[2170616])
          (2170625 'move' tmp[2170581](2170627 '.' _ic_[2168967] F1_localThis[1940097]))
          (2170631 call deinit[30831] tmp[2170581])
          label _breakLabel[2170633]
          const-val call_tmp[2170642]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170644 'move' call_tmp[2170642](2170646 'cast_to_void_star' _ic_[2168907]))
          (2170649 call chpl_here_free[188093] call_tmp[2170642])
          const-val call_tmp[2170658]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170660 'move' call_tmp[2170658](2170662 'cast_to_void_star' _ic_[2168967]))
          (2170665 call chpl_here_free[188093] call_tmp[2170658])
          ref i_x[2170667]:string[26] "temp"
          (2170669 'move' i_x[2170667](2170671 'set reference' chunk[2168756]))
          (2170674 call deinit[30831] i_x[2170667])
          ref i_x[2170676]:string[26] "temp"
          (2170678 'move' i_x[2170676](2170680 'set reference' localx[2168741]))
          (2170683 call deinit[30831] i_x[2170676])
        }
        label _enddoSplitWSNoEnc[2170686]
      }
      {
        const-val coerce_tmp[2170705]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2170707 'move' coerce_tmp[2170705](2170709 '.v' localX[2167289] buffLen[30719]))
        const-val call_tmp[2170712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2170714 'move' call_tmp[2170712](2170716 '==' coerce_tmp[2170705] 0))
        const-val call_tmp[2170719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2170721 'move' call_tmp[2170719](2170723 '!' call_tmp[2170712]))
        if call_tmp[2170719]
        {
          const-val ret[2170734]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2170736]:string[26] "dead at end of block" "insert auto destroy"
          (2170739 call init[30760] ret[2170736])
          const-val coerce_tmp[2170741]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2170743 'move' coerce_tmp[2170741](2170745 '.v' localX[2167289] cachedNumCodepoints[30731]))
          (2170748 '.=' ret[2170736] cachedNumCodepoints[30731] coerce_tmp[2170741])
          (2170753 call initWithBorrowedBuffer[946797] ret[2170736] i_this[2168460])
          (2170756 'move' ret[2170734] ret[2170736])
          const localThis[2170759]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2170761 'move' localThis[2170759] ret[2170734])
          val done[2170764]:bool[10] "dead at end of block" "insert auto destroy"
          (2170766 'move' done[2170764] 0)
          val yieldChunk[2170769]:bool[10] "dead at end of block" "insert auto destroy"
          (2170771 'move' yieldChunk[2170769] 0)
          val chunk[2170774]:string[26] "dead at end of block" "insert auto destroy"
          (2170777 call init[30760] chunk[2170774])
          const-val maxsplit[2170779]:int(64)[13] "temp"
          (2170781 'move' maxsplit[2170779] _ic__F1_maxsplit[2244248])
          const-val call_tmp[2170786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170788 'move' call_tmp[2170786](2170790 '==' maxsplit[2170779] 0))
          const-val noSplits[2170793]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2170795 'move' noSplits[2170793] call_tmp[2170786])
          const-val maxsplit[2170798]:int(64)[13] "temp"
          (2170800 'move' maxsplit[2170798] _ic__F1_maxsplit[2244248])
          const-val call_tmp[2170805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170807 'move' call_tmp[2170805](2170809 '>' maxsplit[2170798] 0))
          const-val limitSplits[2170812]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2170814 'move' limitSplits[2170812] call_tmp[2170805])
          val splitCount[2170817]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2170819 'move' splitCount[2170817] 0)
          const-val coerce_tmp[2170822]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2170824 'move' coerce_tmp[2170822](2170826 '.v' localThis[2170759] buffLen[30719]))
          const-val call_tmp[2170829]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2170831 'move' call_tmp[2170829](2170833 '-' coerce_tmp[2170822] 2))
          const-val iEnd[2170836]:byteIndex[28170] "dead at end of block" "const" "insert auto destroy"
          (2170839 call init=[28145] iEnd[2170836] call_tmp[2170829])
          val inChunk[2170842]:bool[10] "dead at end of block" "insert auto destroy"
          (2170844 'move' inChunk[2170842] 0)
          val chunkStart[2170847]:byteIndex[28170] "dead at end of block" "insert auto destroy"
          (2170850 call init[28097] chunkStart[2170847])
          const-val default_arg_start[2170856]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret[2170858]:byteIndex[28170] "dead after last mention" "RVV" "temp"
          val cpi[2170860]:byteIndex[28170] "dead at end of block" "insert auto destroy"
          (2170863 call init[28097] cpi[2170860])
          (2170865 '.=' cpi[2170860] _bindex[28091] 0)
          (2170869 'move' ret[2170858] cpi[2170860])
          (2170872 'move' default_arg_start[2170856] ret[2170858])
          ref i_this[2170875]:string[26] "temp"
          (2170877 'move' i_this[2170875](2170879 'set reference' localThis[2170759]))
          const-val ret[2170964]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2170966]:string[26] "dead at end of block" "insert auto destroy"
          (2170969 call init[30760] ret[2170966])
          const-val coerce_tmp[2170971]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2170973 'move' coerce_tmp[2170971](2170975 '.v' localThis[2170759] cachedNumCodepoints[30731]))
          (2170978 '.=' ret[2170966] cachedNumCodepoints[30731] coerce_tmp[2170971])
          (2170983 call initWithBorrowedBuffer[946797] ret[2170966] i_this[2170875])
          (2170986 'move' ret[2170964] ret[2170966])
          val localThis[2170989]:string[26] "dead at end of block" "insert auto destroy"
          (2170991 'move' localThis[2170989] ret[2170964])
          ref i_this[2170994]:string[26] "temp"
          (2170996 'move' i_this[2170994](2170998 'set reference' localThis[2170989]))
          const-val n[2171000]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[2171002]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2171004 'move' coerce_tmp[2171002](2171006 '.v' localThis[2170989] cachedNumCodepoints[30731]))
          (2171009 '=' n[2171000] coerce_tmp[2171002])
          (2171012 'noop')
          const-val call_tmp[2171013]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2171015 'move' call_tmp[2171013](2171018 call countNumCodepoints[181346] i_this[2170994]))
          const-val call_tmp[2171020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2171022 'move' call_tmp[2171020](2171024 '!=' coerce_tmp[2171002] call_tmp[2171013]))
          if call_tmp[2171020]
          {
            (2171030 call halt[154071] "Encountered corrupt string metadata")
          }
          val ret[2171033]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2171035 'move' ret[2171033](2171037 '.v' localThis[2170989] buffLen[30719]))
          const-val call_tmp[2171040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2171042 'move' call_tmp[2171040](2171044 '==' n[2171000] ret[2171033]))
          if call_tmp[2171040]
          {
            val ret[2171058]:int(64)[13] "dead after last mention" "RVV" "temp"
            (2171060 'move' ret[2171058](2171062 '.v' localThis[2170759] buffLen[30719]))
            const-val call_tmp[2171065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171067 'move' call_tmp[2171065](2171069 '-' ret[2171058] 1))
            const-val call_tmp[2171072]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[2171074]:range(int(64),bounded,false)[1023946] "temp"
            (2171077 call chpl_build_bounded_range[455195] 0 call_tmp[2171065] ret_tmp[2171074])
            (2171081 'move' call_tmp[2171072] ret_tmp[2171074])
            const-val call_tmp_F0_this[2252574]:range(int(64),bounded,false)[1023946] "temp"
            const-val _ir_F0_this[2252582]:range(int(64),bounded,false)[1023946] "temp"
            (2171088 'move' _ir_F0_this[2252582] call_tmp[2171072])
            (2252580 'move' call_tmp_F0_this[2252574] _ir_F0_this[2252582])
            val _ic_[2171097]:_ic_these_range_int64_t_bounded_F[1093682] "dead after last mention" "temp"
            const-val call_tmp[2171099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171101 'move' call_tmp[2171099](2171103 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1093682]))
            const-val cast_tmp[2171105]:c_void_ptr[149] "dead after last mention" "temp"
            (2171107 'move' cast_tmp[2171105](2171110 call chpl_here_alloc[187754] call_tmp[2171099] 27))
            (2171113 'move' _ic_[2171097](2171115 'cast' _ic_these_range_int64_t_bounded_F[1093682] cast_tmp[2171105]))
            (2171118 'setcid' _ic_[2171097])
            (2171123 '.=' _ic_[2171097] more[1093685] 1)
            const-val tmp[2171127]:range(int(64),bounded,false)[1023946] "temp"
            (2171129 'move' tmp[2171127] call_tmp_F0_this[2252574])
            (2171134 '.=' _ic_[2171097] F0_this[1955920] tmp[2171127])
            val _ic_[2171158]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "temp"
            const-val call_tmp[2171160]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171162 'move' call_tmp[2171160](2171164 'sizeof_bundle' _ic_chpl_bytes__ref_string[1105204]))
            const-val cast_tmp[2171166]:c_void_ptr[149] "dead after last mention" "temp"
            (2171168 'move' cast_tmp[2171166](2171171 call chpl_here_alloc[187754] call_tmp[2171160] 31))
            (2171174 'move' _ic_[2171158](2171176 'cast' _ic_chpl_bytes__ref_string[1105204] cast_tmp[2171166]))
            (2171179 'setcid' _ic_[2171158])
            (2171184 '.=' _ic_[2171158] more[1105207] 1)
            (2171195 '.=' _ic_[2171158] F0_this[1940093] i_this[2170875])
            const-val coerce_tmp[2171226]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2171228]:range(int(64),bounded,false)[1023946] "temp"
            ref tmp[2171230]:range(int(64),bounded,false)[1023946] "temp"
            val tmp[2171232]:int(64)[13] "temp"
            ref tmp[2171234]:range(int(64),bounded,false)[1023946] "temp"
            (2171236 'move' tmp[2171228](2171238 '.v' _ic_[2171097] F0_this[1955920]))
            (2171242 call checkIfIterWillOverflow[1092793] tmp[2171228] 1)
            (2171245 '.=' _ic_[2171097] F1_i[1955924] 0)
            (2171249 'move' tmp[2171230](2171251 '.' _ic_[2171097] F0_this[1955920]))
            (2171254 'move' tmp[2171232](2171256 '.v' tmp[2171230] _low[1023908]))
            (2171259 '.=' _ic_[2171097] F3_coerce_tmp[1955928] tmp[2171232])
            (2171263 'noop')
            (2171264 'move' tmp[2171234](2171266 '.' _ic_[2171097] F0_this[1955920]))
            (2171269 'move' coerce_tmp[2171226](2171271 '.v' tmp[2171234] _high[1023913]))
            (2171274 '.=' _ic_[2171097] F2_end[1955926] coerce_tmp[2171226])
            (2171278 'noop')
            const-val call_tmp_F0_low[2262009]:int(64)[13] "temp"
            const-val call_tmp_F1_count[2262011]:int(64)[13] "temp"
            const-val coerce_tmp[2171281]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val call_tmp_F0_low[2263466]:int(64)[13] "temp"
            const-val call_tmp_F1_count[2263468]:int(64)[13] "temp"
            const-val low[2171285]:int(64)[13] "temp"
            const-val count[2171287]:int(64)[13] "temp"
            const-val count[2171289]:int(64)[13] "temp"
            val tmp[2171291]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val count[2171293]:int(64)[13] "temp"
            const-val coerce_tmp[2171295]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val coerce_tmp[2171297]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val call_tmp_F0_low[2265479]:int(64)[13] "temp"
            const-val call_tmp_F1_high[2265481]:int(64)[13] "temp"
            const-val low[2171301]:int(64)[13] "temp"
            const-val high[2171303]:int(64)[13] "temp"
            const-val low[2171305]:int(64)[13] "temp"
            const-val high[2171307]:int(64)[13] "temp"
            const-ref tmp[2171309]:string[26] "temp"
            ref tmp[2171311]:string[26] "temp"
            const-ref tmp[2171313]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2171315]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2171317]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            const-ref tmp[2171319]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            const-ref tmp[2171321]:2*int(64)[1037179] "temp"
            const-ref tmp[2171323]:2*int(64)[1037179] "temp"
            const-ref tmp[2171325]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2171327]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2171329]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2171331]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2171333 'move' tmp[2171309](2171335 '.v' _ic_[2171158] F0_this[1940093]))
            const-val ret[2171338]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2171340]:string[26] "dead at end of block" "insert auto destroy"
            (2171343 call init[30760] ret[2171340])
            const-val coerce_tmp[2171345]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2171347 'move' coerce_tmp[2171345](2171349 '.v' tmp[2171309] cachedNumCodepoints[30731]))
            (2171352 '.=' ret[2171340] cachedNumCodepoints[30731] coerce_tmp[2171345])
            (2171357 call initWithBorrowedBuffer[946797] ret[2171340] tmp[2171309])
            (2171360 'move' ret[2171338] ret[2171340])
            (2171363 '.=' _ic_[2171158] F1_localThis[1940097] ret[2171338])
            (2171367 'move' tmp[2171311](2171369 '.' _ic_[2171158] F1_localThis[1940097]))
            (2171372 'move' coerce_tmp[2171281](2171374 '.v' tmp[2171311] buffLen[30719]))
            const-val _ir_F0_low[2262025]:int(64)[13] "temp"
            const-val _ir_F1_count[2262027]:int(64)[13] "temp"
            (2171379 'move' _ir_F0_low[2262025] 0)
            (2171383 'move' _ir_F1_count[2262027] coerce_tmp[2171281])
            (2262017 'move' call_tmp_F0_low[2262009] _ir_F0_low[2262025])
            (2262022 'move' call_tmp_F1_count[2262011] _ir_F1_count[2262027])
            val _ic_[2171392]:_ic_chpl_direct_counted_range_iter[1100747] "dead after last mention" "temp"
            const-val call_tmp[2171394]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171396 'move' call_tmp[2171394](2171398 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1100747]))
            const-val cast_tmp[2171400]:c_void_ptr[149] "dead after last mention" "temp"
            (2171402 'move' cast_tmp[2171400](2171405 call chpl_here_alloc[187754] call_tmp[2171394] 30))
            (2171408 'move' _ic_[2171392](2171410 'cast' _ic_chpl_direct_counted_range_iter[1100747] cast_tmp[2171400]))
            (2171413 'setcid' _ic_[2171392])
            (2171418 '.=' _ic_[2171392] more[1100750] 1)
            const-val tmp[2171422]:int(64)[13] "temp"
            (2171424 'move' tmp[2171422] call_tmp_F0_low[2262009])
            (2171429 '.=' _ic_[2171392] F0_low[1952071] tmp[2171422])
            const-val tmp[2171433]:int(64)[13] "temp"
            (2171435 'move' tmp[2171433] call_tmp_F1_count[2262011])
            (2171440 '.=' _ic_[2171392] F1_count[1952075] tmp[2171433])
            (2171444 '.=' _ic_[2171158] F2__iterator[1940099] _ic_[2171392])
            (2171448 'move' tmp[2171313](2171450 '.' _ic_[2171158] F2__iterator[1940099]))
            (2171453 'move' low[2171285](2171455 '.v' tmp[2171313] F0_low[1952071]))
            (2171458 'move' tmp[2171315](2171460 '.' _ic_[2171158] F2__iterator[1940099]))
            (2171463 'move' count[2171287](2171465 '.v' tmp[2171315] F1_count[1952075]))
            const-val _ir_F0_low[2263482]:int(64)[13] "temp"
            const-val _ir_F1_count[2263484]:int(64)[13] "temp"
            (2171470 'move' _ir_F0_low[2263482] low[2171285])
            (2171474 'move' _ir_F1_count[2263484] count[2171287])
            (2263474 'move' call_tmp_F0_low[2263466] _ir_F0_low[2263482])
            (2263479 'move' call_tmp_F1_count[2263468] _ir_F1_count[2263484])
            val _ic_[2171483]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead after last mention" "temp"
            const-val call_tmp[2171485]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171487 'move' call_tmp[2171485](2171489 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1100497]))
            const-val cast_tmp[2171491]:c_void_ptr[149] "dead after last mention" "temp"
            (2171493 'move' cast_tmp[2171491](2171496 call chpl_here_alloc[187754] call_tmp[2171485] 29))
            (2171499 'move' _ic_[2171483](2171501 'cast' _ic_chpl_direct_counted_range_iter_helper[1100497] cast_tmp[2171491]))
            (2171504 'setcid' _ic_[2171483])
            (2171509 '.=' _ic_[2171483] more[1100500] 1)
            const-val tmp[2171513]:int(64)[13] "temp"
            (2171515 'move' tmp[2171513] call_tmp_F0_low[2263466])
            (2171520 '.=' _ic_[2171483] F0_low[1956543] tmp[2171513])
            const-val tmp[2171524]:int(64)[13] "temp"
            (2171526 'move' tmp[2171524] call_tmp_F1_count[2263468])
            (2171531 '.=' _ic_[2171483] F1_count[1956547] tmp[2171524])
            (2171535 '.=' _ic_[2171158] F3__iterator[1940101] _ic_[2171483])
            (2171539 'move' tmp[2171317](2171541 '.' _ic_[2171158] F3__iterator[1940101]))
            (2171544 'move' count[2171289](2171546 '.v' tmp[2171317] F1_count[1956547]))
            const-val call_tmp[2171549]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171551 'move' call_tmp[2171549](2171553 '<' count[2171289] 0))
            if call_tmp[2171549]
            {
              (2171559 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
            }
            (2171562 'move' tmp[2171319](2171564 '.' _ic_[2171158] F3__iterator[1940101]))
            (2171567 'move' count[2171293](2171569 '.v' tmp[2171319] F1_count[1956547]))
            const-val call_tmp[2171572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171574 'move' call_tmp[2171572](2171576 '==' count[2171293] 0))
            if call_tmp[2171572]
            {
              const-val low[2171581]:int(64)[13] "temp"
              const-ref tmp[2171583]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2171585 'move' tmp[2171583](2171587 '.' _ic_[2171158] F3__iterator[1940101]))
              (2171590 'move' low[2171581](2171592 '.v' tmp[2171583] F0_low[1956543]))
              const-val call_tmp[2171595]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2171597 'move' call_tmp[2171595](2171599 'cast' uint(64)[115] low[2171581]))
              const-val call_tmp[2171602]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2171604 'move' call_tmp[2171602](2171606 '-' call_tmp[2171595] 1))
              const-val call_tmp[2171609]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2171611 'move' call_tmp[2171609](2171613 'cast' int(64)[13] call_tmp[2171602]))
              const-val low[2171616]:int(64)[13] "temp"
              const-ref tmp[2171618]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2171620 'move' tmp[2171618](2171622 '.' _ic_[2171158] F3__iterator[1940101]))
              (2171625 'move' low[2171616](2171627 '.v' tmp[2171618] F0_low[1956543]))
              val this_x0[2260104]:int(64)[13]
              val this_x1[2260106]:int(64)[13]
              (2171632 'move' this_x0[2260104] low[2171616])
              (2171636 'move' this_x1[2260106] call_tmp[2171609])
              (2260112 '.=' tmp[2171291] x0[1037175] this_x0[2260104])
              (2260116 '.=' tmp[2171291] x1[1037177] this_x1[2260106])
            }
            {
              const-val count[2171644]:int(64)[13] "temp"
              const-ref tmp[2171646]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2171648 'move' tmp[2171646](2171650 '.' _ic_[2171158] F3__iterator[1940101]))
              (2171653 'move' count[2171644](2171655 '.v' tmp[2171646] F1_count[1956547]))
              const-val call_tmp[2171658]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2171660 'move' call_tmp[2171658](2171662 '-' count[2171644] 1))
              const-val low[2171665]:int(64)[13] "temp"
              const-ref tmp[2171667]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2171669 'move' tmp[2171667](2171671 '.' _ic_[2171158] F3__iterator[1940101]))
              (2171674 'move' low[2171665](2171676 '.v' tmp[2171667] F0_low[1956543]))
              const-val call_tmp[2171679]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2171681 'move' call_tmp[2171679](2171683 '+' low[2171665] call_tmp[2171658]))
              const-val low[2171686]:int(64)[13] "temp"
              const-ref tmp[2171688]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2171690 'move' tmp[2171688](2171692 '.' _ic_[2171158] F3__iterator[1940101]))
              (2171695 'move' low[2171686](2171697 '.v' tmp[2171688] F0_low[1956543]))
              val this_x0[2260118]:int(64)[13]
              val this_x1[2260120]:int(64)[13]
              (2171702 'move' this_x0[2260118] low[2171686])
              (2171706 'move' this_x1[2260120] call_tmp[2171679])
              (2260126 '.=' tmp[2171291] x0[1037175] this_x0[2260118])
              (2260130 '.=' tmp[2171291] x1[1037177] this_x1[2260120])
            }
            (2171714 '.=' _ic_[2171158] F4_tmp[1940103] tmp[2171291])
            (2171718 'noop')
            (2171719 'move' tmp[2171321](2171721 '.' _ic_[2171158] F4_tmp[1940103]))
            (2171724 'move' coerce_tmp[2171295](2171726 '.v' tmp[2171321] x0[1037175]))
            (2171729 'noop')
            (2171730 'move' tmp[2171323](2171732 '.' _ic_[2171158] F4_tmp[1940103]))
            (2171735 'move' coerce_tmp[2171297](2171737 '.v' tmp[2171323] x1[1037177]))
            (2171740 'noop')
            const-val _ir_F0_low[2265495]:int(64)[13] "temp"
            const-val _ir_F1_high[2265497]:int(64)[13] "temp"
            (2171743 'move' _ir_F0_low[2265495] coerce_tmp[2171295])
            (2171747 'move' _ir_F1_high[2265497] coerce_tmp[2171297])
            (2265487 'move' call_tmp_F0_low[2265479] _ir_F0_low[2265495])
            (2265492 'move' call_tmp_F1_high[2265481] _ir_F1_high[2265497])
            val _ic_[2171756]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead after last mention" "temp"
            const-val call_tmp[2171758]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2171760 'move' call_tmp[2171758](2171762 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1100243]))
            const-val cast_tmp[2171764]:c_void_ptr[149] "dead after last mention" "temp"
            (2171766 'move' cast_tmp[2171764](2171769 call chpl_here_alloc[187754] call_tmp[2171758] 28))
            (2171772 'move' _ic_[2171756](2171774 'cast' _ic_chpl_direct_param_stride_range_iter[1100243] cast_tmp[2171764]))
            (2171777 'setcid' _ic_[2171756])
            (2171782 '.=' _ic_[2171756] more[1100246] 1)
            const-val tmp[2171786]:int(64)[13] "temp"
            (2171788 'move' tmp[2171786] call_tmp_F0_low[2265479])
            (2171793 '.=' _ic_[2171756] F0_low[1958041] tmp[2171786])
            const-val tmp[2171797]:int(64)[13] "temp"
            (2171799 'move' tmp[2171797] call_tmp_F1_high[2265481])
            (2171804 '.=' _ic_[2171756] F1_high[1958045] tmp[2171797])
            (2171808 '.=' _ic_[2171158] F5__iterator[1940105] _ic_[2171756])
            (2171812 '.=' _ic_[2171158] F6_i[1940107] 0)
            (2171816 'move' tmp[2171325](2171818 '.' _ic_[2171158] F5__iterator[1940105]))
            (2171821 'move' low[2171301](2171823 '.v' tmp[2171325] F0_low[1958041]))
            (2171826 'move' tmp[2171327](2171828 '.' _ic_[2171158] F5__iterator[1940105]))
            (2171831 'move' high[2171303](2171833 '.v' tmp[2171327] F1_high[1958045]))
            (2171836 'move' tmp[2171329](2171838 '.' _ic_[2171158] F5__iterator[1940105]))
            (2171841 'move' low[2171305](2171843 '.v' tmp[2171329] F0_low[1958041]))
            (2171846 'move' tmp[2171331](2171848 '.' _ic_[2171158] F5__iterator[1940105]))
            (2171851 'move' high[2171307](2171853 '.v' tmp[2171331] F1_high[1958045]))
            (2171857 call chpl_checkIfRangeIterWillOverflow[1093055] low[2171305] high[2171307] 1 low[2171301] high[2171303] 1)
            const-val isFinished[2171864]:bool[10] "temp"
            val hasMore[2171866]:bool[10] "temp"
            CForLoop[2171868]
            {
              val _indexOfInterest_x0[2267256]:int(64)[13] "temp"
              val _indexOfInterest_x1[2267258]:uint(8)[100] "temp"
              val coerce_tmp[2171964]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              const-val tmp[2171966]:int(64)[13] "temp"
              ref tmp[2171968]:string[26] "temp"
              val tmp[2171970]:uint(8)[100] "temp"
              (2171972 'move' tmp[2171966](2171974 '.v' _ic_[2171158] F6_i[1940107]))
              (2171977 'move' tmp[2171968](2171979 '.' _ic_[2171158] F1_localThis[1940097]))
              (2171982 'move' coerce_tmp[2171964](2171984 '.v' tmp[2171968] buff[30737]))
              ref call_tmp[2171987]:uint(8)[100] "dead after last mention" "maybe param" "temp"
              (2171989 'move' call_tmp[2171987](2171991 'array_get' coerce_tmp[2171964] tmp[2171966]))
              (2171994 'move' tmp[2171970](2171996 'deref' call_tmp[2171987]))
              (2171998 '.=' _ic_[2171158] value[1940111] tmp[2171970])
              (2172002 'noop')
              (2172003 '.=' _ic_[2171158] more[1105207] 2)
              val tmp[2172007]:int(64)[13] "temp"
              const-val high[2172009]:int(64)[13] "temp"
              const-ref tmp[2172011]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
              (2172013 'move' tmp[2172011](2172015 '.' _ic_[2171158] F5__iterator[1940105]))
              (2172018 'move' high[2172009](2172020 '.v' tmp[2172011] F1_high[1958045]))
              const-val tmp[2172023]:int(64)[13] "temp"
              (2172025 'move' tmp[2172023](2172027 '.v' _ic_[2171158] F6_i[1940107]))
              (2172030 'move' tmp[2172007](2172032 '<=' tmp[2172023] high[2172009]))
              (2172035 'move' hasMore[2171866](2172037 'cast' bool[10] tmp[2172007]))
              (2172040 'move' isFinished[2171864](2172042 '!' hasMore[2171866]))
              if isFinished[2171864]
              {
                (2172046 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              val tmp[2172049]:uint(8)[100] "temp"
              (2172051 'move' tmp[2172049](2172053 '.v' _ic_[2171158] value[1940111]))
              const-val tmp[2172056]:int(64)[13] "temp"
              (2172058 'move' tmp[2172056](2172060 '.v' _ic_[2171097] F1_i[1955924]))
              (2172063 '.=' _ic_[2171097] value[1955930] tmp[2172056])
              (2172067 '.=' _ic_[2171097] more[1093685] 2)
              val tmp[2172071]:int(64)[13] "temp"
              (2172073 'move' tmp[2172071](2172075 '.v' _ic_[2171097] value[1955930]))
              (2172078 'move' _indexOfInterest_x1[2267258] tmp[2172049])
              (2172082 'move' _indexOfInterest_x0[2267256] tmp[2172071])
              const-val i[2172086]:int(64)[13] "const" "index var" "insert auto destroy"
              (2172088 'move' i[2172086] _indexOfInterest_x0[2267256])
              const-val b[2172093]:uint(8)[100] "const" "index var" "insert auto destroy"
              (2172095 'move' b[2172093] _indexOfInterest_x1[2267258])
              const-val call_tmp[2172100]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2172102 'move' call_tmp[2172100](2172104 'cast' int(32)[95] b[2172093]))
              const-val call_tmp[2172107]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret[2172109]:byteIndex[28170] "dead after last mention" "RVV" "temp"
              val cpi[2172111]:byteIndex[28170] "dead at end of block" "insert auto destroy"
              (2172114 call init[28097] cpi[2172111])
              (2172116 '.=' cpi[2172111] _bindex[28091] i[2172086])
              (2172120 'move' ret[2172109] cpi[2172111])
              (2172123 'move' call_tmp[2172107] ret[2172109])
              ref i__e1_x[2172126]:byteIndex[28170] "temp"
              (2172128 'move' i__e1_x[2172126](2172130 'set reference' call_tmp[2172107]))
              val this_x0[2250995]:int(32)[95]
              val this_x2[2250999]:int(64)[13]
              (2172134 'move' this_x0[2250995] call_tmp[2172100])
              (2172142 'move' this_x2[2250999] 1)
              val _yieldedIndex_x0[2251016]:int(32)[95] "temp"
              val _yieldedIndex_x2[2251020]:int(64)[13] "temp"
              (2251006 'move' _yieldedIndex_x0[2251016] this_x0[2250995])
              (2251014 'move' _yieldedIndex_x2[2251020] this_x2[2250999])
              const-val c[2172151]:int(32)[95] "const" "index var" "insert auto destroy"
              (2172153 'move' c[2172151] _yieldedIndex_x0[2251016])
              const-val nBytes[2172165]:int(64)[13] "const" "index var" "insert auto destroy"
              (2172167 'move' nBytes[2172165] _yieldedIndex_x2[2251020])
              if noSplits[2170793]
              {
                (2172174 '=' done[2170764] 1)
                const-val call_tmp[2172177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172179 'move' call_tmp[2172177](2172182 call isSpace[36840] localThis[2170759]))
                const-val call_tmp[2172184]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172186 'move' call_tmp[2172184](2172188 '!' call_tmp[2172177]))
                if call_tmp[2172184]
                {
                  (2172193 call =[38269] chunk[2170774] localThis[2170759])
                  (2172196 '=' yieldChunk[2170769] 1)
                }
              }
              {
                const-val call_tmp[2172201]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172203 'move' call_tmp[2172201](2172206 call iswspace[39162] c[2172151]))
                const-val coerce_tmp[2172208]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2172210 'move' coerce_tmp[2172208](2172212 'cast' int(32)[95] 0))
                const-val call_tmp[2172215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172217 'move' call_tmp[2172215](2172219 '!=' call_tmp[2172201] coerce_tmp[2172208]))
                const-val cSpace[2172222]:bool[10] "dead at end of block" "insert auto destroy"
                (2172224 'move' cSpace[2172222] call_tmp[2172215])
                val tmp[2172227]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if inChunk[2170842]
                {
                  (2172231 'move' tmp[2172227] 1)
                }
                {
                  (2172235 'move' tmp[2172227] cSpace[2172222])
                }
                const-val call_tmp[2172239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172241 'move' call_tmp[2172239](2172243 '!' tmp[2172227]))
                if call_tmp[2172239]
                {
                  (2172248 call =[38191] chunkStart[2170847] i__e1_x[2172126])
                  (2172251 '=' inChunk[2170842] 1)
                  const-val call_tmp[2172254]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2172256]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2172258 'move' ret[2172256](2172260 '.v' call_tmp[2172107] _bindex[28091]))
                  const-val call_tmp[2172263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2172265 'move' call_tmp[2172263](2172267 '-' ret[2172256] 1))
                  const-val ret[2172270]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2172272]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2172275 call init[28097] cpi[2172272])
                  (2172277 '.=' cpi[2172272] _bindex[28091] call_tmp[2172263])
                  (2172281 'move' ret[2172270] cpi[2172272])
                  (2172284 'move' call_tmp[2172254] ret[2172270])
                  const-val call_tmp[2172287]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2172289]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2172291 'move' ret[2172289](2172293 '.v' call_tmp[2172254] _bindex[28091]))
                  const-val call_tmp[2172296]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2172298 'move' call_tmp[2172296](2172300 '+' ret[2172289] nBytes[2172165]))
                  const-val ret[2172303]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2172305]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2172308 call init[28097] cpi[2172305])
                  (2172310 '.=' cpi[2172305] _bindex[28091] call_tmp[2172296])
                  (2172314 'move' ret[2172303] cpi[2172305])
                  (2172317 'move' call_tmp[2172287] ret[2172303])
                  val ret[2172320]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2172322 'move' ret[2172320](2172324 '.v' call_tmp[2172287] _bindex[28091]))
                  val ret[2172327]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2172329 'move' ret[2172327](2172331 '.v' iEnd[2170836] _bindex[28091]))
                  const-val call_tmp[2172334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2172336 'move' call_tmp[2172334](2172338 '>' ret[2172320] ret[2172327]))
                  if call_tmp[2172334]
                  {
                    const-val call_tmp[2172343]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2172345]:range(byteIndex,boundedLow,false)[1140337] "temp"
                    (2172348 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2172345])
                    (2172351 'move' call_tmp[2172343] ret_tmp[2172345])
                    const-val call_tmp[2172354]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref i_this[2172356]:string[26] "temp"
                    (2172358 'move' i_this[2172356](2172360 'set reference' localThis[2170759]))
                    const-val call_tmp[2172362]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2172364]:string[26] "temp"
                    (2172367 call getSlice[1140693] i_this[2172356] call_tmp[2172343] ret_tmp[2172364])
                    (2172371 'move' call_tmp[2172362] ret_tmp[2172364])
                    (2172374 'move' call_tmp[2172354] call_tmp[2172362])
                    (2172378 call =[38269] chunk[2170774] call_tmp[2172354])
                    ref i_x[2172381]:string[26] "temp"
                    (2172383 'move' i_x[2172381](2172385 'set reference' call_tmp[2172354]))
                    (2172388 call deinit[30831] i_x[2172381])
                    (2172390 '=' yieldChunk[2170769] 1)
                    (2172393 '=' done[2170764] 1)
                  }
                }
                {
                  if inChunk[2170842]
                  {
                    if cSpace[2172222]
                    {
                      ref i_lhs[2172402]:int(64)[13] "temp"
                      (2172404 'move' i_lhs[2172402](2172406 'set reference' splitCount[2170817]))
                      (2172408 '+=' i_lhs[2172402] 1)
                      val tmp[2172411]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      if limitSplits[2170812]
                      {
                        const-val maxsplit[2172415]:int(64)[13] "temp"
                        (2172417 'move' maxsplit[2172415] _ic__F1_maxsplit[2244248])
                        const-val call_tmp[2172422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2172424 'move' call_tmp[2172422](2172426 '>' splitCount[2170817] maxsplit[2172415]))
                        (2172429 'move' tmp[2172411] call_tmp[2172422])
                      }
                      {
                        (2172433 'move' tmp[2172411] 0)
                      }
                      if tmp[2172411]
                      {
                        const-val call_tmp[2172439]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172441]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2172444 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2172441])
                        (2172447 'move' call_tmp[2172439] ret_tmp[2172441])
                        const-val call_tmp[2172450]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2172452]:string[26] "temp"
                        (2172454 'move' i_this[2172452](2172456 'set reference' localThis[2170759]))
                        const-val call_tmp[2172458]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172460]:string[26] "temp"
                        (2172463 call getSlice[1140693] i_this[2172452] call_tmp[2172439] ret_tmp[2172460])
                        (2172467 'move' call_tmp[2172458] ret_tmp[2172460])
                        (2172470 'move' call_tmp[2172450] call_tmp[2172458])
                        (2172474 call =[38269] chunk[2170774] call_tmp[2172450])
                        ref i_x[2172477]:string[26] "temp"
                        (2172479 'move' i_x[2172477](2172481 'set reference' call_tmp[2172450]))
                        (2172484 call deinit[30831] i_x[2172477])
                        (2172486 '=' yieldChunk[2170769] 1)
                        (2172489 '=' done[2170764] 1)
                      }
                      {
                        const-val call_tmp[2172493]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val ret[2172495]:int(64)[13] "dead after last mention" "RVV" "temp"
                        (2172497 'move' ret[2172495](2172499 '.v' call_tmp[2172107] _bindex[28091]))
                        const-val call_tmp[2172502]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2172504 'move' call_tmp[2172502](2172506 '-' ret[2172495] 1))
                        const-val ret[2172509]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                        val cpi[2172511]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                        (2172514 call init[28097] cpi[2172511])
                        (2172516 '.=' cpi[2172511] _bindex[28091] call_tmp[2172502])
                        (2172520 'move' ret[2172509] cpi[2172511])
                        (2172523 'move' call_tmp[2172493] ret[2172509])
                        const-val call_tmp[2172526]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172528]:range(byteIndex,bounded,false)[1022924] "temp"
                        (2172531 call chpl_build_bounded_range[1120189] chunkStart[2170847] call_tmp[2172493] ret_tmp[2172528])
                        (2172535 'move' call_tmp[2172526] ret_tmp[2172528])
                        const-val call_tmp[2172538]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2172540]:string[26] "temp"
                        (2172542 'move' i_this[2172540](2172544 'set reference' localThis[2170759]))
                        const-val call_tmp[2172546]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172548]:string[26] "temp"
                        (2172551 call getSlice[1120471] i_this[2172540] call_tmp[2172526] ret_tmp[2172548])
                        (2172555 'move' call_tmp[2172546] ret_tmp[2172548])
                        (2172558 'move' call_tmp[2172538] call_tmp[2172546])
                        (2172562 call =[38269] chunk[2170774] call_tmp[2172538])
                        ref i_x[2172565]:string[26] "temp"
                        (2172567 'move' i_x[2172565](2172569 'set reference' call_tmp[2172538]))
                        (2172572 call deinit[30831] i_x[2172565])
                        (2172574 '=' yieldChunk[2170769] 1)
                        (2172577 '=' inChunk[2170842] 0)
                      }
                    }
                    {
                      const-val call_tmp[2172582]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2172584]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2172586 'move' ret[2172584](2172588 '.v' call_tmp[2172107] _bindex[28091]))
                      const-val call_tmp[2172591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2172593 'move' call_tmp[2172591](2172595 '-' ret[2172584] 1))
                      const-val ret[2172598]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2172600]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2172603 call init[28097] cpi[2172600])
                      (2172605 '.=' cpi[2172600] _bindex[28091] call_tmp[2172591])
                      (2172609 'move' ret[2172598] cpi[2172600])
                      (2172612 'move' call_tmp[2172582] ret[2172598])
                      const-val call_tmp[2172615]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2172617]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2172619 'move' ret[2172617](2172621 '.v' call_tmp[2172582] _bindex[28091]))
                      const-val call_tmp[2172624]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2172626 'move' call_tmp[2172624](2172628 '+' ret[2172617] nBytes[2172165]))
                      const-val ret[2172631]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2172633]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2172636 call init[28097] cpi[2172633])
                      (2172638 '.=' cpi[2172633] _bindex[28091] call_tmp[2172624])
                      (2172642 'move' ret[2172631] cpi[2172633])
                      (2172645 'move' call_tmp[2172615] ret[2172631])
                      val ret[2172648]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2172650 'move' ret[2172648](2172652 '.v' call_tmp[2172615] _bindex[28091]))
                      val ret[2172655]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2172657 'move' ret[2172655](2172659 '.v' iEnd[2170836] _bindex[28091]))
                      const-val call_tmp[2172662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2172664 'move' call_tmp[2172662](2172666 '>' ret[2172648] ret[2172655]))
                      if call_tmp[2172662]
                      {
                        const-val call_tmp[2172671]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172673]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2172676 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2172673])
                        (2172679 'move' call_tmp[2172671] ret_tmp[2172673])
                        const-val call_tmp[2172682]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2172684]:string[26] "temp"
                        (2172686 'move' i_this[2172684](2172688 'set reference' localThis[2170759]))
                        const-val call_tmp[2172690]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2172692]:string[26] "temp"
                        (2172695 call getSlice[1140693] i_this[2172684] call_tmp[2172671] ret_tmp[2172692])
                        (2172699 'move' call_tmp[2172690] ret_tmp[2172692])
                        (2172702 'move' call_tmp[2172682] call_tmp[2172690])
                        (2172706 call =[38269] chunk[2170774] call_tmp[2172682])
                        ref i_x[2172709]:string[26] "temp"
                        (2172711 'move' i_x[2172709](2172713 'set reference' call_tmp[2172682]))
                        (2172716 call deinit[30831] i_x[2172709])
                        (2172718 '=' yieldChunk[2170769] 1)
                        (2172721 '=' done[2170764] 1)
                      }
                    }
                  }
                }
              }
              if yieldChunk[2170769]
              {
                ref i_x[2172731]:string[26] "temp"
                (2172733 'move' i_x[2172731](2172735 'set reference' chunk[2170774]))
                val ret[2172737]:string[26] "dead after last mention" "RVV" "temp"
                const-val tmp[2172739]:string[26] "dead after last mention" "temp"
                (2172742 call init=[30771] tmp[2172739] i_x[2172731])
                (2172745 'move' ret[2172737] tmp[2172739])
                const-val chpl__elidedIdx[2172748]:string[26] "const" "index var" "insert auto destroy"
                (2172750 'move' chpl__elidedIdx[2172748] ret[2172737])
                ref i_lhs[2172753]:int(64)[13] "temp"
                (2172755 'move' i_lhs[2172753](2172757 'set reference' numElements[2168451]))
                (2172759 '+=' i_lhs[2172753] 1)
                const-val call_tmp[2172762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172764 'move' call_tmp[2172762](2172766 '>' numElements[2168451] 1))
                if call_tmp[2172762]
                {
                  ref i_x[2172771]:string[26] "temp"
                  (2172773 'move' i_x[2172771](2172775 'set reference' chpl__elidedIdx[2172748]))
                  (2172778 call deinit[30831] i_x[2172771])
                  const-val moreVal1[2172780]:int(64)[13] "const" "temp"
                  (2172782 '=' moreVal1[2172780](2172784 '.v' _ic_[2171097] more[1093685]))
                  const-val moreValNeg1[2172787]:int(64)[13] "const" "temp"
                  (2172789 'move' moreValNeg1[2172787](2172791 'u-' moreVal1[2172780]))
                  (2172793 '.=' _ic_[2171097] more[1093685] moreValNeg1[2172787])
                  (2172798 call advance[1093708] _ic_[2171097])
                  const-val moreVal2[2172800]:int(64)[13] "const" "temp"
                  (2172802 '=' moreVal2[2172800](2172804 '.v' _ic_[2171158] more[1105207]))
                  const-val moreValNeg2[2172807]:int(64)[13] "const" "temp"
                  (2172809 'move' moreValNeg2[2172807](2172811 'u-' moreVal2[2172800]))
                  (2172813 '.=' _ic_[2171158] more[1105207] moreValNeg2[2172807])
                  (2172818 call advance[1105230] _ic_[2171158])
                  const-val call_tmp[2172827]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2172829 'move' call_tmp[2172827](2172831 'cast_to_void_star' _ic_[2171097]))
                  (2172834 call chpl_here_free[188093] call_tmp[2172827])
                  const-val call_tmp[2172843]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2172845 'move' call_tmp[2172843](2172847 'cast_to_void_star' _ic_[2171158]))
                  (2172850 call chpl_here_free[188093] call_tmp[2172843])
                  ref i_x[2172852]:string[26] "temp"
                  (2172854 'move' i_x[2172852](2172856 'set reference' localThis[2170989]))
                  (2172859 call deinit[30831] i_x[2172852])
                  ref i_x[2172870]:string[26] "temp"
                  (2172872 'move' i_x[2172870](2172874 'set reference' chunk[2170774]))
                  (2172877 call deinit[30831] i_x[2172870])
                  ref i_x[2172879]:string[26] "temp"
                  (2172881 'move' i_x[2172879](2172883 'set reference' localThis[2170759]))
                  (2172886 call deinit[30831] i_x[2172879])
                  break _breakLabel[2174224] _breakLabel[2174224]
                }
                ref i_x[2172891]:string[26] "temp"
                (2172893 'move' i_x[2172891](2172895 'set reference' chpl__elidedIdx[2172748]))
                (2172898 call deinit[30831] i_x[2172891])
                (2172900 '=' yieldChunk[2170769] 0)
              }
              if done[2170764]
              {
                const-val moreVal1[2172906]:int(64)[13] "const" "temp"
                (2172908 '=' moreVal1[2172906](2172910 '.v' _ic_[2171097] more[1093685]))
                const-val moreValNeg1[2172913]:int(64)[13] "const" "temp"
                (2172915 'move' moreValNeg1[2172913](2172917 'u-' moreVal1[2172906]))
                (2172919 '.=' _ic_[2171097] more[1093685] moreValNeg1[2172913])
                (2172924 call advance[1093708] _ic_[2171097])
                const-val moreVal2[2172926]:int(64)[13] "const" "temp"
                (2172928 '=' moreVal2[2172926](2172930 '.v' _ic_[2171158] more[1105207]))
                const-val moreValNeg2[2172933]:int(64)[13] "const" "temp"
                (2172935 'move' moreValNeg2[2172933](2172937 'u-' moreVal2[2172926]))
                (2172939 '.=' _ic_[2171158] more[1105207] moreValNeg2[2172933])
                (2172944 call advance[1105230] _ic_[2171158])
                const-val call_tmp[2172953]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172955 'move' call_tmp[2172953](2172957 'cast_to_void_star' _ic_[2171097]))
                (2172960 call chpl_here_free[188093] call_tmp[2172953])
                const-val call_tmp[2172969]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2172971 'move' call_tmp[2172969](2172973 'cast_to_void_star' _ic_[2171158]))
                (2172976 call chpl_here_free[188093] call_tmp[2172969])
                ref i_x[2172978]:string[26] "temp"
                (2172980 'move' i_x[2172978](2172982 'set reference' localThis[2170989]))
                (2172985 call deinit[30831] i_x[2172978])
                break _breakLabel[2174191] _breakLabel[2174191]
              }
              {
                const-val tmp[2171870]:int(64)[13] "temp"
                (2171872 'move' tmp[2171870](2171874 '.v' _ic_[2171097] F3_coerce_tmp[1955928]))
                (2171877 '.=' _ic_[2171097] F1_i[1955924] tmp[2171870])
                const-val tmp[2171881]:int(64)[13] "temp"
                const-ref tmp[2171883]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
                (2171885 'move' tmp[2171883](2171887 '.' _ic_[2171158] F5__iterator[1940105]))
                (2171890 'move' tmp[2171881](2171892 '.v' tmp[2171883] F0_low[1958041]))
                (2171895 '.=' _ic_[2171158] F7_low[1940109] tmp[2171881])
                const-val tmp[2171899]:int(64)[13] "temp"
                (2171901 'move' tmp[2171899](2171903 '.v' _ic_[2171158] F7_low[1940109]))
                (2171906 '.=' _ic_[2171158] F6_i[1940107] tmp[2171899])
              }
              {
                val tmp[2171911]:int(64)[13] "temp"
                const-val tmp[2171913]:int(64)[13] "temp"
                (2171915 'move' tmp[2171913](2171917 '.v' _ic_[2171097] F1_i[1955924]))
                const-val tmp[2171920]:int(64)[13] "temp"
                (2171922 'move' tmp[2171920](2171924 '.v' _ic_[2171097] F2_end[1955926]))
                (2171927 'move' tmp[2171911](2171929 '<=' tmp[2171913] tmp[2171920]))
                tmp[2171911]
              }
              {
                val tmp[2171934]:int(64)[13] "temp"
                (2171936 'move' tmp[2171934](2171938 '.v' _ic_[2171097] F1_i[1955924]))
                (2171941 '+=' tmp[2171934] 1)
                (2171944 '.=' _ic_[2171097] F1_i[1955924] tmp[2171934])
                val tmp[2171948]:int(64)[13] "temp"
                (2171950 'move' tmp[2171948](2171952 '.v' _ic_[2171158] F6_i[1940107]))
                (2171955 '+=' tmp[2171948] 1)
                (2171958 '.=' _ic_[2171158] F6_i[1940107] tmp[2171948])
              }
            }
            val tmp[2172990]:int(64)[13] "temp"
            const-val high[2172992]:int(64)[13] "temp"
            const-ref tmp[2172994]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2172996 'move' tmp[2172994](2172998 '.' _ic_[2171158] F5__iterator[1940105]))
            (2173001 'move' high[2172992](2173003 '.v' tmp[2172994] F1_high[1958045]))
            const-val tmp[2173006]:int(64)[13] "temp"
            (2173008 'move' tmp[2173006](2173010 '.v' _ic_[2171158] F6_i[1940107]))
            (2173013 'move' tmp[2172990](2173015 '<=' tmp[2173006] high[2172992]))
            (2173018 'move' hasMore[2171866](2173020 'cast' bool[10] tmp[2172990]))
            if hasMore[2171866]
            {
              (2173025 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2173028]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            val tmp[2173030]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            val tmp[2173032]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2173034]:string[26] "temp"
            (2173036 'move' tmp[2173028](2173038 '.v' _ic_[2171158] F5__iterator[1940105]))
            const-val call_tmp[2173041]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173043 'move' call_tmp[2173041](2173045 'cast_to_void_star' tmp[2173028]))
            (2173048 call chpl_here_free[188093] call_tmp[2173041])
            (2173050 'move' tmp[2173030](2173052 '.v' _ic_[2171158] F3__iterator[1940101]))
            const-val call_tmp[2173055]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173057 'move' call_tmp[2173055](2173059 'cast_to_void_star' tmp[2173030]))
            (2173062 call chpl_here_free[188093] call_tmp[2173055])
            (2173064 'move' tmp[2173032](2173066 '.v' _ic_[2171158] F2__iterator[1940099]))
            const-val call_tmp[2173069]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173071 'move' call_tmp[2173069](2173073 'cast_to_void_star' tmp[2173032]))
            (2173076 call chpl_here_free[188093] call_tmp[2173069])
            (2173078 'move' tmp[2173034](2173080 '.' _ic_[2171158] F1_localThis[1940097]))
            (2173084 call deinit[30831] tmp[2173034])
            const-val call_tmp[2173093]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173095 'move' call_tmp[2173093](2173097 'cast_to_void_star' _ic_[2171097]))
            (2173100 call chpl_here_free[188093] call_tmp[2173093])
            const-val call_tmp[2173109]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173111 'move' call_tmp[2173109](2173113 'cast_to_void_star' _ic_[2171158]))
            (2173116 call chpl_here_free[188093] call_tmp[2173109])
          }
          {
            val ret[2173126]:int(64)[13] "dead after last mention" "RVV" "temp"
            (2173128 'move' ret[2173126](2173130 '.v' default_arg_start[2170856] _bindex[28091]))
            val i[2173133]:int(64)[13] "dead at end of block" "insert auto destroy"
            (2173135 'move' i[2173133] ret[2173126])
            const-val call_tmp[2173138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173140 'move' call_tmp[2173138](2173142 '>' ret[2173126] 0))
            if call_tmp[2173138]
            {
              val tmp[2173147]:bool[10] "dead after last mention" "temp"
              const-val coerce_tmp[2173149]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2173151 'move' coerce_tmp[2173149](2173153 '.v' localThis[2170989] buffLen[30719]))
              const-val call_tmp[2173156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2173158 'move' call_tmp[2173156](2173160 '<' i[2173133] coerce_tmp[2173149]))
              val tmp[2173163]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2173156]
              {
                val coerce_tmp[2173167]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173169 'move' coerce_tmp[2173167](2173171 '.v' localThis[2170989] buff[30737]))
                ref call_tmp[2173174]:uint(8)[100] "dead after last mention" "maybe param" "temp"
                (2173176 'move' call_tmp[2173174](2173178 'array_get' coerce_tmp[2173167] i[2173133]))
                const-val coerce_tmp[2173181]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173183 'move' coerce_tmp[2173181](2173185 'deref' call_tmp[2173174]))
                const-val coerce_tmp[2173187]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173189 'move' coerce_tmp[2173187](2173191 'cast' uint(8)[100] 192))
                const-val call_tmp[2173194]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173196 'move' call_tmp[2173194](2173198 '&' coerce_tmp[2173181] coerce_tmp[2173187]))
                const-val coerce_tmp[2173201]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173203 'move' coerce_tmp[2173201](2173205 'cast' uint(8)[100] 128))
                const-val call_tmp[2173208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173210 'move' call_tmp[2173208](2173212 '!=' call_tmp[2173194] coerce_tmp[2173201]))
                const-val call_tmp[2173215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173217 'move' call_tmp[2173215](2173219 '!' call_tmp[2173208]))
                (2173221 'move' tmp[2173163] call_tmp[2173215])
              }
              {
                (2173225 'move' tmp[2173163] 0)
              }
              (2173229 'move' tmp[2173147] tmp[2173163])
              WhileDo[2173232]
              {
                ref i_lhs[2173234]:int(64)[13] "temp"
                (2173236 'move' i_lhs[2173234](2173238 'set reference' i[2173133]))
                (2173240 '+=' i_lhs[2173234] 1)
                const-val coerce_tmp[2173243]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173245 'move' coerce_tmp[2173243](2173247 '.v' localThis[2170989] buffLen[30719]))
                const-val call_tmp[2173250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173252 'move' call_tmp[2173250](2173254 '<' i[2173133] coerce_tmp[2173243]))
                val tmp[2173257]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if call_tmp[2173250]
                {
                  val coerce_tmp[2173261]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2173263 'move' coerce_tmp[2173261](2173265 '.v' localThis[2170989] buff[30737]))
                  ref call_tmp[2173268]:uint(8)[100] "dead after last mention" "maybe param" "temp"
                  (2173270 'move' call_tmp[2173268](2173272 'array_get' coerce_tmp[2173261] i[2173133]))
                  const-val coerce_tmp[2173275]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2173277 'move' coerce_tmp[2173275](2173279 'deref' call_tmp[2173268]))
                  const-val coerce_tmp[2173281]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2173283 'move' coerce_tmp[2173281](2173285 'cast' uint(8)[100] 192))
                  const-val call_tmp[2173288]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173290 'move' call_tmp[2173288](2173292 '&' coerce_tmp[2173275] coerce_tmp[2173281]))
                  const-val coerce_tmp[2173295]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2173297 'move' coerce_tmp[2173295](2173299 'cast' uint(8)[100] 128))
                  const-val call_tmp[2173302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173304 'move' call_tmp[2173302](2173306 '!=' call_tmp[2173288] coerce_tmp[2173295]))
                  const-val call_tmp[2173309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173311 'move' call_tmp[2173309](2173313 '!' call_tmp[2173302]))
                  (2173315 'move' tmp[2173257] call_tmp[2173309])
                }
                {
                  (2173319 'move' tmp[2173257] 0)
                }
                (2173323 'move' tmp[2173147] tmp[2173257])
                tmp[2173147]
              }
            }
            val tmp[2173327]:bool[10] "dead after last mention" "temp"
            const-val coerce_tmp[2173329]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2173331 'move' coerce_tmp[2173329](2173333 '.v' localThis[2170989] buffLen[30719]))
            const-val call_tmp[2173336]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2173338 'move' call_tmp[2173336](2173340 '<' i[2173133] coerce_tmp[2173329]))
            (2173343 'move' tmp[2173327] call_tmp[2173336])
            WhileDo[2173346]
            {
              const-val call_tmp[2173348]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[2173350]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2173352 'move' coerce_tmp[2173350](2173354 '.v' localThis[2170989] buff[30737]))
              const-val coerce_tmp[2173357]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2173359 'move' coerce_tmp[2173357](2173361 '.v' localThis[2170989] buffLen[30719]))
              const-val ret_tmp[2173364]:(syserr,int(32),int(32))[960390] "temp"
              (2173367 call decodeHelp[174418] coerce_tmp[2173350] coerce_tmp[2173357] i[2173133] 1 ret_tmp[2173364])
              (2173373 'move' call_tmp[2173348] ret_tmp[2173364])
              val tmp_x1[2267164]:int(32)[95] "temp"
              val tmp_x2[2267166]:int(32)[95] "temp"
              (2267177 'move' tmp_x1[2267164](2267175 '.v' call_tmp[2173348] x1[960386]))
              (2267182 'move' tmp_x2[2267166](2267180 '.v' call_tmp[2173348] x2[960388]))
              const-val coerce_tmp[2173381]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2173383 'move' coerce_tmp[2173381] tmp_x1[2267164])
              const-val nBytes[2173388]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2173390]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2173392 'move' coerce_tmp[2173390] tmp_x2[2267166])
              (2173397 'move' nBytes[2173388] coerce_tmp[2173390])
              const-val call_tmp[2173400]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret[2173402]:byteIndex[28170] "dead after last mention" "RVV" "temp"
              val cpi[2173404]:byteIndex[28170] "dead at end of block" "insert auto destroy"
              (2173407 call init[28097] cpi[2173404])
              (2173409 '.=' cpi[2173404] _bindex[28091] i[2173133])
              (2173413 'move' ret[2173402] cpi[2173404])
              (2173416 'move' call_tmp[2173400] ret[2173402])
              const-val call_tmp[2173419]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2173421 'move' call_tmp[2173419](2173423 'cast' int(64)[13] coerce_tmp[2173390]))
              ref i__e1_x[2173426]:byteIndex[28170] "temp"
              (2173428 'move' i__e1_x[2173426](2173430 'set reference' call_tmp[2173400]))
              val this_x0[2251028]:int(32)[95]
              val this_x2[2251032]:int(64)[13]
              (2173434 'move' this_x0[2251028] coerce_tmp[2173381])
              (2173442 'move' this_x2[2251032] call_tmp[2173419])
              val _yieldedIndex_x0[2251049]:int(32)[95] "temp"
              val _yieldedIndex_x2[2251053]:int(64)[13] "temp"
              (2251039 'move' _yieldedIndex_x0[2251049] this_x0[2251028])
              (2251047 'move' _yieldedIndex_x2[2251053] this_x2[2251032])
              const-val c[2173451]:int(32)[95] "const" "index var" "insert auto destroy"
              (2173453 'move' c[2173451] _yieldedIndex_x0[2251049])
              const-val nBytes[2173465]:int(64)[13] "const" "index var" "insert auto destroy"
              (2173467 'move' nBytes[2173465] _yieldedIndex_x2[2251053])
              if noSplits[2170793]
              {
                (2173474 '=' done[2170764] 1)
                const-val call_tmp[2173477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173479 'move' call_tmp[2173477](2173482 call isSpace[36840] localThis[2170759]))
                const-val call_tmp[2173484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173486 'move' call_tmp[2173484](2173488 '!' call_tmp[2173477]))
                if call_tmp[2173484]
                {
                  (2173493 call =[38269] chunk[2170774] localThis[2170759])
                  (2173496 '=' yieldChunk[2170769] 1)
                }
              }
              {
                const-val call_tmp[2173501]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173503 'move' call_tmp[2173501](2173506 call iswspace[39162] c[2173451]))
                const-val coerce_tmp[2173508]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2173510 'move' coerce_tmp[2173508](2173512 'cast' int(32)[95] 0))
                const-val call_tmp[2173515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173517 'move' call_tmp[2173515](2173519 '!=' call_tmp[2173501] coerce_tmp[2173508]))
                const-val cSpace[2173522]:bool[10] "dead at end of block" "insert auto destroy"
                (2173524 'move' cSpace[2173522] call_tmp[2173515])
                val tmp[2173527]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if inChunk[2170842]
                {
                  (2173531 'move' tmp[2173527] 1)
                }
                {
                  (2173535 'move' tmp[2173527] cSpace[2173522])
                }
                const-val call_tmp[2173539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2173541 'move' call_tmp[2173539](2173543 '!' tmp[2173527]))
                if call_tmp[2173539]
                {
                  (2173548 call =[38191] chunkStart[2170847] i__e1_x[2173426])
                  (2173551 '=' inChunk[2170842] 1)
                  const-val call_tmp[2173554]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2173556]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2173558 'move' ret[2173556](2173560 '.v' call_tmp[2173400] _bindex[28091]))
                  const-val call_tmp[2173563]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173565 'move' call_tmp[2173563](2173567 '-' ret[2173556] 1))
                  const-val ret[2173570]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2173572]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2173575 call init[28097] cpi[2173572])
                  (2173577 '.=' cpi[2173572] _bindex[28091] call_tmp[2173563])
                  (2173581 'move' ret[2173570] cpi[2173572])
                  (2173584 'move' call_tmp[2173554] ret[2173570])
                  const-val call_tmp[2173587]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2173589]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2173591 'move' ret[2173589](2173593 '.v' call_tmp[2173554] _bindex[28091]))
                  const-val call_tmp[2173596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173598 'move' call_tmp[2173596](2173600 '+' ret[2173589] nBytes[2173465]))
                  const-val ret[2173603]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2173605]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2173608 call init[28097] cpi[2173605])
                  (2173610 '.=' cpi[2173605] _bindex[28091] call_tmp[2173596])
                  (2173614 'move' ret[2173603] cpi[2173605])
                  (2173617 'move' call_tmp[2173587] ret[2173603])
                  val ret[2173620]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2173622 'move' ret[2173620](2173624 '.v' call_tmp[2173587] _bindex[28091]))
                  val ret[2173627]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2173629 'move' ret[2173627](2173631 '.v' iEnd[2170836] _bindex[28091]))
                  const-val call_tmp[2173634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2173636 'move' call_tmp[2173634](2173638 '>' ret[2173620] ret[2173627]))
                  if call_tmp[2173634]
                  {
                    const-val call_tmp[2173643]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2173645]:range(byteIndex,boundedLow,false)[1140337] "temp"
                    (2173648 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2173645])
                    (2173651 'move' call_tmp[2173643] ret_tmp[2173645])
                    const-val call_tmp[2173654]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref i_this[2173656]:string[26] "temp"
                    (2173658 'move' i_this[2173656](2173660 'set reference' localThis[2170759]))
                    const-val call_tmp[2173662]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2173664]:string[26] "temp"
                    (2173667 call getSlice[1140693] i_this[2173656] call_tmp[2173643] ret_tmp[2173664])
                    (2173671 'move' call_tmp[2173662] ret_tmp[2173664])
                    (2173674 'move' call_tmp[2173654] call_tmp[2173662])
                    (2173678 call =[38269] chunk[2170774] call_tmp[2173654])
                    ref i_x[2173681]:string[26] "temp"
                    (2173683 'move' i_x[2173681](2173685 'set reference' call_tmp[2173654]))
                    (2173688 call deinit[30831] i_x[2173681])
                    (2173690 '=' yieldChunk[2170769] 1)
                    (2173693 '=' done[2170764] 1)
                  }
                }
                {
                  if inChunk[2170842]
                  {
                    if cSpace[2173522]
                    {
                      ref i_lhs[2173702]:int(64)[13] "temp"
                      (2173704 'move' i_lhs[2173702](2173706 'set reference' splitCount[2170817]))
                      (2173708 '+=' i_lhs[2173702] 1)
                      val tmp[2173711]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      if limitSplits[2170812]
                      {
                        const-val maxsplit[2173715]:int(64)[13] "temp"
                        (2173717 'move' maxsplit[2173715] _ic__F1_maxsplit[2244248])
                        const-val call_tmp[2173722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2173724 'move' call_tmp[2173722](2173726 '>' splitCount[2170817] maxsplit[2173715]))
                        (2173729 'move' tmp[2173711] call_tmp[2173722])
                      }
                      {
                        (2173733 'move' tmp[2173711] 0)
                      }
                      if tmp[2173711]
                      {
                        const-val call_tmp[2173739]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173741]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2173744 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2173741])
                        (2173747 'move' call_tmp[2173739] ret_tmp[2173741])
                        const-val call_tmp[2173750]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2173752]:string[26] "temp"
                        (2173754 'move' i_this[2173752](2173756 'set reference' localThis[2170759]))
                        const-val call_tmp[2173758]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173760]:string[26] "temp"
                        (2173763 call getSlice[1140693] i_this[2173752] call_tmp[2173739] ret_tmp[2173760])
                        (2173767 'move' call_tmp[2173758] ret_tmp[2173760])
                        (2173770 'move' call_tmp[2173750] call_tmp[2173758])
                        (2173774 call =[38269] chunk[2170774] call_tmp[2173750])
                        ref i_x[2173777]:string[26] "temp"
                        (2173779 'move' i_x[2173777](2173781 'set reference' call_tmp[2173750]))
                        (2173784 call deinit[30831] i_x[2173777])
                        (2173786 '=' yieldChunk[2170769] 1)
                        (2173789 '=' done[2170764] 1)
                      }
                      {
                        const-val call_tmp[2173793]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val ret[2173795]:int(64)[13] "dead after last mention" "RVV" "temp"
                        (2173797 'move' ret[2173795](2173799 '.v' call_tmp[2173400] _bindex[28091]))
                        const-val call_tmp[2173802]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2173804 'move' call_tmp[2173802](2173806 '-' ret[2173795] 1))
                        const-val ret[2173809]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                        val cpi[2173811]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                        (2173814 call init[28097] cpi[2173811])
                        (2173816 '.=' cpi[2173811] _bindex[28091] call_tmp[2173802])
                        (2173820 'move' ret[2173809] cpi[2173811])
                        (2173823 'move' call_tmp[2173793] ret[2173809])
                        const-val call_tmp[2173826]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173828]:range(byteIndex,bounded,false)[1022924] "temp"
                        (2173831 call chpl_build_bounded_range[1120189] chunkStart[2170847] call_tmp[2173793] ret_tmp[2173828])
                        (2173835 'move' call_tmp[2173826] ret_tmp[2173828])
                        const-val call_tmp[2173838]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2173840]:string[26] "temp"
                        (2173842 'move' i_this[2173840](2173844 'set reference' localThis[2170759]))
                        const-val call_tmp[2173846]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173848]:string[26] "temp"
                        (2173851 call getSlice[1120471] i_this[2173840] call_tmp[2173826] ret_tmp[2173848])
                        (2173855 'move' call_tmp[2173846] ret_tmp[2173848])
                        (2173858 'move' call_tmp[2173838] call_tmp[2173846])
                        (2173862 call =[38269] chunk[2170774] call_tmp[2173838])
                        ref i_x[2173865]:string[26] "temp"
                        (2173867 'move' i_x[2173865](2173869 'set reference' call_tmp[2173838]))
                        (2173872 call deinit[30831] i_x[2173865])
                        (2173874 '=' yieldChunk[2170769] 1)
                        (2173877 '=' inChunk[2170842] 0)
                      }
                    }
                    {
                      const-val call_tmp[2173882]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2173884]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2173886 'move' ret[2173884](2173888 '.v' call_tmp[2173400] _bindex[28091]))
                      const-val call_tmp[2173891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2173893 'move' call_tmp[2173891](2173895 '-' ret[2173884] 1))
                      const-val ret[2173898]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2173900]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2173903 call init[28097] cpi[2173900])
                      (2173905 '.=' cpi[2173900] _bindex[28091] call_tmp[2173891])
                      (2173909 'move' ret[2173898] cpi[2173900])
                      (2173912 'move' call_tmp[2173882] ret[2173898])
                      const-val call_tmp[2173915]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2173917]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2173919 'move' ret[2173917](2173921 '.v' call_tmp[2173882] _bindex[28091]))
                      const-val call_tmp[2173924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2173926 'move' call_tmp[2173924](2173928 '+' ret[2173917] nBytes[2173465]))
                      const-val ret[2173931]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2173933]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2173936 call init[28097] cpi[2173933])
                      (2173938 '.=' cpi[2173933] _bindex[28091] call_tmp[2173924])
                      (2173942 'move' ret[2173931] cpi[2173933])
                      (2173945 'move' call_tmp[2173915] ret[2173931])
                      val ret[2173948]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2173950 'move' ret[2173948](2173952 '.v' call_tmp[2173915] _bindex[28091]))
                      val ret[2173955]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2173957 'move' ret[2173955](2173959 '.v' iEnd[2170836] _bindex[28091]))
                      const-val call_tmp[2173962]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2173964 'move' call_tmp[2173962](2173966 '>' ret[2173948] ret[2173955]))
                      if call_tmp[2173962]
                      {
                        const-val call_tmp[2173971]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173973]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2173976 call chpl_build_low_bounded_range[1139644] chunkStart[2170847] ret_tmp[2173973])
                        (2173979 'move' call_tmp[2173971] ret_tmp[2173973])
                        const-val call_tmp[2173982]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2173984]:string[26] "temp"
                        (2173986 'move' i_this[2173984](2173988 'set reference' localThis[2170759]))
                        const-val call_tmp[2173990]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2173992]:string[26] "temp"
                        (2173995 call getSlice[1140693] i_this[2173984] call_tmp[2173971] ret_tmp[2173992])
                        (2173999 'move' call_tmp[2173990] ret_tmp[2173992])
                        (2174002 'move' call_tmp[2173982] call_tmp[2173990])
                        (2174006 call =[38269] chunk[2170774] call_tmp[2173982])
                        ref i_x[2174009]:string[26] "temp"
                        (2174011 'move' i_x[2174009](2174013 'set reference' call_tmp[2173982]))
                        (2174016 call deinit[30831] i_x[2174009])
                        (2174018 '=' yieldChunk[2170769] 1)
                        (2174021 '=' done[2170764] 1)
                      }
                    }
                  }
                }
              }
              if yieldChunk[2170769]
              {
                ref i_x[2174031]:string[26] "temp"
                (2174033 'move' i_x[2174031](2174035 'set reference' chunk[2170774]))
                val ret[2174037]:string[26] "dead after last mention" "RVV" "temp"
                const-val tmp[2174039]:string[26] "dead after last mention" "temp"
                (2174042 call init=[30771] tmp[2174039] i_x[2174031])
                (2174045 'move' ret[2174037] tmp[2174039])
                const-val chpl__elidedIdx[2174048]:string[26] "const" "index var" "insert auto destroy"
                (2174050 'move' chpl__elidedIdx[2174048] ret[2174037])
                ref i_lhs[2174053]:int(64)[13] "temp"
                (2174055 'move' i_lhs[2174053](2174057 'set reference' numElements[2168451]))
                (2174059 '+=' i_lhs[2174053] 1)
                const-val call_tmp[2174062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2174064 'move' call_tmp[2174062](2174066 '>' numElements[2168451] 1))
                if call_tmp[2174062]
                {
                  ref i_x[2174071]:string[26] "temp"
                  (2174073 'move' i_x[2174071](2174075 'set reference' chpl__elidedIdx[2174048]))
                  (2174078 call deinit[30831] i_x[2174071])
                  ref i_x[2174080]:string[26] "temp"
                  (2174082 'move' i_x[2174080](2174084 'set reference' localThis[2170989]))
                  (2174087 call deinit[30831] i_x[2174080])
                  ref i_x[2174098]:string[26] "temp"
                  (2174100 'move' i_x[2174098](2174102 'set reference' chunk[2170774]))
                  (2174105 call deinit[30831] i_x[2174098])
                  ref i_x[2174107]:string[26] "temp"
                  (2174109 'move' i_x[2174107](2174111 'set reference' localThis[2170759]))
                  (2174114 call deinit[30831] i_x[2174107])
                  break _breakLabel[2174224] _breakLabel[2174224]
                }
                ref i_x[2174119]:string[26] "temp"
                (2174121 'move' i_x[2174119](2174123 'set reference' chpl__elidedIdx[2174048]))
                (2174126 call deinit[30831] i_x[2174119])
                (2174128 '=' yieldChunk[2170769] 0)
              }
              if done[2170764]
              {
                ref i_x[2174134]:string[26] "temp"
                (2174136 'move' i_x[2174134](2174138 'set reference' localThis[2170989]))
                (2174141 call deinit[30831] i_x[2174134])
                break _breakLabel[2174191] _breakLabel[2174191]
              }
              const-val coerce_tmp[2174146]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2174148 'move' coerce_tmp[2174146](2174150 'cast' int(64)[13] nBytes[2173388]))
              ref i_lhs[2174153]:int(64)[13] "temp"
              (2174155 'move' i_lhs[2174153](2174157 'set reference' i[2173133]))
              (2174159 '+=' i_lhs[2174153] coerce_tmp[2174146])
              const-val coerce_tmp[2174162]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2174164 'move' coerce_tmp[2174162](2174166 '.v' localThis[2170989] buffLen[30719]))
              const-val call_tmp[2174169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2174171 'move' call_tmp[2174169](2174173 '<' i[2173133] coerce_tmp[2174162]))
              (2174176 'move' tmp[2173327] call_tmp[2174169])
              tmp[2173327]
            }
          }
          ref i_x[2174180]:string[26] "temp"
          (2174182 'move' i_x[2174180](2174184 'set reference' localThis[2170989]))
          (2174187 call deinit[30831] i_x[2174180])
          label _end_cpIndexLen[2174189]
          label _breakLabel[2174191]
          ref i_x[2174202]:string[26] "temp"
          (2174204 'move' i_x[2174202](2174206 'set reference' chunk[2170774]))
          (2174209 call deinit[30831] i_x[2174202])
          ref i_x[2174211]:string[26] "temp"
          (2174213 'move' i_x[2174211](2174215 'set reference' localThis[2170759]))
          (2174218 call deinit[30831] i_x[2174211])
        }
      }
      label _endsplit[2174222]
      label _breakLabel[2174224]
      const-val call_tmp[2174235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174237 'move' call_tmp[2174235](2174239 '>' numElements[2168451] 1))
      if call_tmp[2174235]
      {
        const-val call_tmp[2174244]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174246]:string[26] "temp"
        (2174249 call +[38342] "bad cast from string '" i_x[2167242] ret_tmp[2174246])
        (2174253 'move' call_tmp[2174244] ret_tmp[2174246])
        const-val call_tmp[2174256]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174258]:string[26] "temp"
        (2174261 call +[38342] call_tmp[2174244] "' to " ret_tmp[2174258])
        (2174265 'move' call_tmp[2174256] ret_tmp[2174258])
        const-val call_tmp[2174268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174270]:string[26] "temp"
        (2174273 call +[38342] call_tmp[2174256] "int(64)" ret_tmp[2174270])
        (2174277 'move' call_tmp[2174268] ret_tmp[2174270])
        const-val call_tmp[2174280]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[2174282]:IllegalArgumentError[168204] "dead after last mention" "temp"
        (2174284 'move' new_temp[2174282](2174287 call _new[1061174] call_tmp[2174268]))
        const-val initTemp[2174289]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
        (2174292 call init[1061276] initTemp[2174289] new_temp[2174282])
        (2174295 'move' call_tmp[2174280] initTemp[2174289])
        val call_tmp[2174298]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2174300]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[2174302]:owned Error[962257] "temp"
        ref i_x[2174304]:owned IllegalArgumentError[1061625] "temp"
        (2174306 'move' i_x[2174304](2174308 'set reference' call_tmp[2174280]))
        ref i__retArg[2174310]:owned Error[962257] "temp"
        (2174312 'move' i__retArg[2174310](2174314 'set reference' ret_tmp[2174302]))
        val _formal_tmp_x[2174316]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (2174318 'move' _formal_tmp_x[2174316] i_x[2174304])
        const-val ret[2174321]:owned Error[962257] "dead after last mention" "RVV" "temp"
        ref i_this[2174323]:owned IllegalArgumentError[1061625] "temp"
        (2174325 'move' i_this[2174323](2174327 'set reference' _formal_tmp_x[2174316]))
        val coerce_tmp[2174329]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2174331 'move' coerce_tmp[2174329](2174333 '.v' i_this[2174323] chpl_p[1061620]))
        val call_tmp[2174336]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
        (2174338 'move' call_tmp[2174336](2174340 'cast' Error[167942] coerce_tmp[2174329]))
        val castPtr[2174343]:Error[167942] "dead at end of block" "insert auto destroy"
        (2174345 'move' castPtr[2174343] call_tmp[2174336])
        ref i_this[2174348]:owned IllegalArgumentError[1061625] "temp"
        (2174350 'move' i_this[2174348](2174352 'set reference' _formal_tmp_x[2174316]))
        val tmp[2174354]:IllegalArgumentError[168204] "temp"
        (2174356 'move' tmp[2174354](2174358 'cast' IllegalArgumentError[168204] nil[44]))
        (2174361 '.=' i_this[2174348] chpl_p[1061620] tmp[2174354])
        val coerce_tmp[2174365]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2174367 'move' coerce_tmp[2174365](2174369 'cast' object[22] call_tmp[2174336]))
        const-val call_tmp[2174372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2174374 'move' call_tmp[2174372](2174376 'ptr_eq' coerce_tmp[2174365] nil[44]))
        if call_tmp[2174372]
        {
          (2174382 call nilCheckHalt[210068] "argument to ! is nil")
        }
        const-val call_tmp[2174385]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[2174387]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
        (2174390 call init[963893] initTemp[2174387] castPtr[2174343])
        (2174393 'move' call_tmp[2174385] initTemp[2174387])
        (2174396 'move' ret[2174321] call_tmp[2174385])
        (2174400 call chpl__autoDestroy[1476602] _formal_tmp_x[2174316])
        (2174402 '=' i__retArg[2174310] ret[2174321])
        (2174405 'move' coerce_tmp[2174300] ret_tmp[2174302])
        const-val _formal_tmp_in_err[2174408]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (2174410 'move' _formal_tmp_in_err[2174408] coerce_tmp[2174300])
        (2174413 'move' call_tmp[2174298](2174416 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2174408]))
        (2174418 '=' error[1763452] call_tmp[2174298])
        ref i_x[2174421]:string[26] "temp"
        (2174423 'move' i_x[2174421](2174425 'set reference' call_tmp[2174268]))
        (2174428 call deinit[30831] i_x[2174421])
        ref i_x[2174430]:string[26] "temp"
        (2174432 'move' i_x[2174430](2174434 'set reference' call_tmp[2174256]))
        (2174437 call deinit[30831] i_x[2174430])
        ref i_x[2174439]:string[26] "temp"
        (2174441 'move' i_x[2174439](2174443 'set reference' call_tmp[2174244]))
        (2174446 call deinit[30831] i_x[2174439])
        ref i_x[2174448]:string[26] "temp"
        (2174450 'move' i_x[2174448](2174452 'set reference' localX[2167289]))
        (2174455 call deinit[30831] i_x[2174448])
        gotoErrorHandlingReturn _end__cast[2175168] _end__cast[2175168]
        ref i_x[2174459]:string[26] "temp"
        (2174461 'move' i_x[2174459](2174463 'set reference' call_tmp[2174268]))
        (2174466 call deinit[30831] i_x[2174459])
        ref i_x[2174468]:string[26] "temp"
        (2174470 'move' i_x[2174468](2174472 'set reference' call_tmp[2174256]))
        (2174475 call deinit[30831] i_x[2174468])
        ref i_x[2174477]:string[26] "temp"
        (2174479 'move' i_x[2174477](2174481 'set reference' call_tmp[2174244]))
        (2174484 call deinit[30831] i_x[2174477])
      }
      ref i_this[2174487]:string[26] "temp"
      (2174489 'move' i_this[2174487](2174491 'set reference' localX[2167289]))
      const-val n[2174493]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2174495]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2174497 'move' coerce_tmp[2174495](2174499 '.v' localX[2167289] cachedNumCodepoints[30731]))
      (2174502 '=' n[2174493] coerce_tmp[2174495])
      (2174505 'noop')
      const-val call_tmp[2174506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174508 'move' call_tmp[2174506](2174511 call countNumCodepoints[181346] i_this[2174487]))
      const-val call_tmp[2174513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174515 'move' call_tmp[2174513](2174517 '!=' coerce_tmp[2174495] call_tmp[2174506]))
      if call_tmp[2174513]
      {
        (2174523 call halt[154071] "Encountered corrupt string metadata")
      }
      const-val call_tmp[2174526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174528 'move' call_tmp[2174526](2174530 '>=' n[2174493] 2))
      if call_tmp[2174526]
      {
        const-val call_tmp[2174535]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2174537]:string[26] "temp"
        (2174539 'move' i_this[2174537](2174541 'set reference' localX[2167289]))
        const-val call_tmp[2174543]:codepointIndex[28274] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret[2174545]:codepointIndex[28274] "dead after last mention" "RVV" "temp"
        val cpi[2174547]:codepointIndex[28274] "dead at end of block" "insert auto destroy"
        (2174550 call init[28201] cpi[2174547])
        (2174552 '.=' cpi[2174547] _cpindex[28195] 0)
        (2174556 'move' ret[2174545] cpi[2174547])
        (2174559 'move' call_tmp[2174543] ret[2174545])
        const-val call_tmp[2174562]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174564]:string[26] "temp"
        (2174567 call this[34632] i_this[2174537] call_tmp[2174543] ret_tmp[2174564])
        (2174571 'move' call_tmp[2174562] ret_tmp[2174564])
        (2174574 'move' call_tmp[2174535] call_tmp[2174562])
        const-val call_tmp[2174577]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174579]:range(int(64),boundedLow,false)[1084544] "temp"
        (2174582 call chpl_build_low_bounded_range[1083937] 1 ret_tmp[2174579])
        (2174585 'move' call_tmp[2174577] ret_tmp[2174579])
        const-val call_tmp[2174588]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2174590]:string[26] "temp"
        (2174592 'move' i_this[2174590](2174594 'set reference' localX[2167289]))
        const-val call_tmp[2174596]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174598]:string[26] "temp"
        (2174601 call getSlice[1122532] i_this[2174590] call_tmp[2174577] ret_tmp[2174598])
        (2174605 'move' call_tmp[2174596] ret_tmp[2174598])
        (2174608 'move' call_tmp[2174588] call_tmp[2174596])
        const-val call_tmp[2174611]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2174613]:string[26] "temp"
        (2174615 'move' i_this[2174613](2174617 'set reference' call_tmp[2174588]))
        val inlineImm[2174619]:string[26] "temp"
        (2174621 'move' inlineImm[2174619] "_")
        ref i_needle[2174624]:string[26] "temp"
        (2174626 'move' i_needle[2174624](2174628 'set reference' inlineImm[2174619]))
        val inlineImm[2174630]:string[26] "temp"
        (2174632 'move' inlineImm[2174630] "")
        ref i_replacement[2174635]:string[26] "temp"
        (2174637 'move' i_replacement[2174635](2174639 'set reference' inlineImm[2174630]))
        const-val call_tmp[2174641]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174643]:string[26] "temp"
        (2174646 call doReplace[1177898] i_this[2174613] i_needle[2174624] i_replacement[2174635] -1 ret_tmp[2174643])
        (2174652 'move' call_tmp[2174641] ret_tmp[2174643])
        (2174655 'move' call_tmp[2174611] call_tmp[2174641])
        const-val call_tmp[2174658]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2174660]:string[26] "temp"
        (2174663 call +[38342] call_tmp[2174535] call_tmp[2174611] ret_tmp[2174660])
        (2174667 'move' call_tmp[2174658] ret_tmp[2174660])
        (2174671 call =[38269] localX[2167289] call_tmp[2174658])
        ref i_x[2174674]:string[26] "temp"
        (2174676 'move' i_x[2174674](2174678 'set reference' call_tmp[2174658]))
        (2174681 call deinit[30831] i_x[2174674])
        ref i_x[2174683]:string[26] "temp"
        (2174685 'move' i_x[2174683](2174687 'set reference' call_tmp[2174611]))
        (2174690 call deinit[30831] i_x[2174683])
        ref i_x[2174692]:string[26] "temp"
        (2174694 'move' i_x[2174692](2174696 'set reference' call_tmp[2174588]))
        (2174699 call deinit[30831] i_x[2174692])
        ref i_x[2174701]:string[26] "temp"
        (2174703 'move' i_x[2174701](2174705 'set reference' call_tmp[2174535]))
        (2174708 call deinit[30831] i_x[2174701])
      }
    }
    const-val coerce_tmp[2174712]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2174714 'move' coerce_tmp[2174712](2174716 '.v' localX[2167289] buffLen[30719]))
    const-val call_tmp[2174719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174721 'move' call_tmp[2174719](2174723 '==' coerce_tmp[2174712] 0))
    if call_tmp[2174719]
    {
      const-val call_tmp[2174728]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[2174730]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (2174732 'move' new_temp[2174730](2174735 call _new[1061174] "bad cast from empty string to int(64)"))
      const-val initTemp[2174737]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (2174740 call init[1061276] initTemp[2174737] new_temp[2174730])
      (2174743 'move' call_tmp[2174728] initTemp[2174737])
      val call_tmp[2174746]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2174748]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2174750]:owned Error[962257] "temp"
      ref i_x[2174752]:owned IllegalArgumentError[1061625] "temp"
      (2174754 'move' i_x[2174752](2174756 'set reference' call_tmp[2174728]))
      ref i__retArg[2174758]:owned Error[962257] "temp"
      (2174760 'move' i__retArg[2174758](2174762 'set reference' ret_tmp[2174750]))
      val _formal_tmp_x[2174764]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2174766 'move' _formal_tmp_x[2174764] i_x[2174752])
      const-val ret[2174769]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2174771]:owned IllegalArgumentError[1061625] "temp"
      (2174773 'move' i_this[2174771](2174775 'set reference' _formal_tmp_x[2174764]))
      val coerce_tmp[2174777]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2174779 'move' coerce_tmp[2174777](2174781 '.v' i_this[2174771] chpl_p[1061620]))
      val call_tmp[2174784]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174786 'move' call_tmp[2174784](2174788 'cast' Error[167942] coerce_tmp[2174777]))
      val castPtr[2174791]:Error[167942] "dead at end of block" "insert auto destroy"
      (2174793 'move' castPtr[2174791] call_tmp[2174784])
      ref i_this[2174796]:owned IllegalArgumentError[1061625] "temp"
      (2174798 'move' i_this[2174796](2174800 'set reference' _formal_tmp_x[2174764]))
      val tmp[2174802]:IllegalArgumentError[168204] "temp"
      (2174804 'move' tmp[2174802](2174806 'cast' IllegalArgumentError[168204] nil[44]))
      (2174809 '.=' i_this[2174796] chpl_p[1061620] tmp[2174802])
      val coerce_tmp[2174813]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2174815 'move' coerce_tmp[2174813](2174817 'cast' object[22] call_tmp[2174784]))
      const-val call_tmp[2174820]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174822 'move' call_tmp[2174820](2174824 'ptr_eq' coerce_tmp[2174813] nil[44]))
      if call_tmp[2174820]
      {
        (2174830 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2174833]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2174835]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2174838 call init[963893] initTemp[2174835] castPtr[2174791])
      (2174841 'move' call_tmp[2174833] initTemp[2174835])
      (2174844 'move' ret[2174769] call_tmp[2174833])
      (2174848 call chpl__autoDestroy[1476602] _formal_tmp_x[2174764])
      (2174850 '=' i__retArg[2174758] ret[2174769])
      (2174853 'move' coerce_tmp[2174748] ret_tmp[2174750])
      const-val _formal_tmp_in_err[2174856]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2174858 'move' _formal_tmp_in_err[2174856] coerce_tmp[2174748])
      (2174861 'move' call_tmp[2174746](2174864 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2174856]))
      (2174866 '=' error[1763452] call_tmp[2174746])
      ref i_x[2174869]:string[26] "temp"
      (2174871 'move' i_x[2174869](2174873 'set reference' localX[2167289]))
      (2174876 call deinit[30831] i_x[2174869])
      gotoErrorHandlingReturn _end__cast[2175168] _end__cast[2175168]
    }
    val coerce_tmp[2174881]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2174883 'move' coerce_tmp[2174881](2174885 '.v' localX[2167289] buff[30737]))
    const-val call_tmp[2174888]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174890 'move' call_tmp[2174888](2174892 'cast' c_string[19] coerce_tmp[2174881]))
    const-val call_tmp[2174895]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (2174897 'move' call_tmp[2174895](2174900 call c_string_to_int64_t[1021763] call_tmp[2174888] isErr[2167259]))
    (2174903 'move' retVal[2167257] call_tmp[2174895])
    const-val call_tmp[2174906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174908 'move' call_tmp[2174906] isErr[2167259])
    if call_tmp[2174906]
    {
      const-val call_tmp[2174913]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2174915]:string[26] "temp"
      (2174918 call +[38342] "bad cast from string '" i_x[2167242] ret_tmp[2174915])
      (2174922 'move' call_tmp[2174913] ret_tmp[2174915])
      const-val call_tmp[2174925]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2174927]:string[26] "temp"
      (2174930 call +[38342] call_tmp[2174913] "' to " ret_tmp[2174927])
      (2174934 'move' call_tmp[2174925] ret_tmp[2174927])
      const-val call_tmp[2174937]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2174939]:string[26] "temp"
      (2174942 call +[38342] call_tmp[2174925] "int(64)" ret_tmp[2174939])
      (2174946 'move' call_tmp[2174937] ret_tmp[2174939])
      const-val call_tmp[2174949]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[2174951]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (2174953 'move' new_temp[2174951](2174956 call _new[1061174] call_tmp[2174937]))
      const-val initTemp[2174958]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (2174961 call init[1061276] initTemp[2174958] new_temp[2174951])
      (2174964 'move' call_tmp[2174949] initTemp[2174958])
      val call_tmp[2174967]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2174969]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2174971]:owned Error[962257] "temp"
      ref i_x[2174973]:owned IllegalArgumentError[1061625] "temp"
      (2174975 'move' i_x[2174973](2174977 'set reference' call_tmp[2174949]))
      ref i__retArg[2174979]:owned Error[962257] "temp"
      (2174981 'move' i__retArg[2174979](2174983 'set reference' ret_tmp[2174971]))
      val _formal_tmp_x[2174985]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2174987 'move' _formal_tmp_x[2174985] i_x[2174973])
      const-val ret[2174990]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2174992]:owned IllegalArgumentError[1061625] "temp"
      (2174994 'move' i_this[2174992](2174996 'set reference' _formal_tmp_x[2174985]))
      val coerce_tmp[2174998]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2175000 'move' coerce_tmp[2174998](2175002 '.v' i_this[2174992] chpl_p[1061620]))
      val call_tmp[2175005]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2175007 'move' call_tmp[2175005](2175009 'cast' Error[167942] coerce_tmp[2174998]))
      val castPtr[2175012]:Error[167942] "dead at end of block" "insert auto destroy"
      (2175014 'move' castPtr[2175012] call_tmp[2175005])
      ref i_this[2175017]:owned IllegalArgumentError[1061625] "temp"
      (2175019 'move' i_this[2175017](2175021 'set reference' _formal_tmp_x[2174985]))
      val tmp[2175023]:IllegalArgumentError[168204] "temp"
      (2175025 'move' tmp[2175023](2175027 'cast' IllegalArgumentError[168204] nil[44]))
      (2175030 '.=' i_this[2175017] chpl_p[1061620] tmp[2175023])
      val coerce_tmp[2175034]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2175036 'move' coerce_tmp[2175034](2175038 'cast' object[22] call_tmp[2175005]))
      const-val call_tmp[2175041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2175043 'move' call_tmp[2175041](2175045 'ptr_eq' coerce_tmp[2175034] nil[44]))
      if call_tmp[2175041]
      {
        (2175051 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2175054]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2175056]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2175059 call init[963893] initTemp[2175056] castPtr[2175012])
      (2175062 'move' call_tmp[2175054] initTemp[2175056])
      (2175065 'move' ret[2174990] call_tmp[2175054])
      (2175069 call chpl__autoDestroy[1476602] _formal_tmp_x[2174985])
      (2175071 '=' i__retArg[2174979] ret[2174990])
      (2175074 'move' coerce_tmp[2174969] ret_tmp[2174971])
      const-val _formal_tmp_in_err[2175077]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2175079 'move' _formal_tmp_in_err[2175077] coerce_tmp[2174969])
      (2175082 'move' call_tmp[2174967](2175085 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2175077]))
      (2175087 '=' error[1763452] call_tmp[2174967])
      ref i_x[2175090]:string[26] "temp"
      (2175092 'move' i_x[2175090](2175094 'set reference' call_tmp[2174937]))
      (2175097 call deinit[30831] i_x[2175090])
      ref i_x[2175099]:string[26] "temp"
      (2175101 'move' i_x[2175099](2175103 'set reference' call_tmp[2174925]))
      (2175106 call deinit[30831] i_x[2175099])
      ref i_x[2175108]:string[26] "temp"
      (2175110 'move' i_x[2175108](2175112 'set reference' call_tmp[2174913]))
      (2175115 call deinit[30831] i_x[2175108])
      ref i_x[2175117]:string[26] "temp"
      (2175119 'move' i_x[2175117](2175121 'set reference' localX[2167289]))
      (2175124 call deinit[30831] i_x[2175117])
      gotoErrorHandlingReturn _end__cast[2175168] _end__cast[2175168]
      ref i_x[2175128]:string[26] "temp"
      (2175130 'move' i_x[2175128](2175132 'set reference' call_tmp[2174937]))
      (2175135 call deinit[30831] i_x[2175128])
      ref i_x[2175137]:string[26] "temp"
      (2175139 'move' i_x[2175137](2175141 'set reference' call_tmp[2174925]))
      (2175144 call deinit[30831] i_x[2175137])
      ref i_x[2175146]:string[26] "temp"
      (2175148 'move' i_x[2175146](2175150 'set reference' call_tmp[2174913]))
      (2175153 call deinit[30831] i_x[2175146])
    }
    (2175156 'move' ret[2167255] retVal[2167257])
    ref i_x[2175159]:string[26] "temp"
    (2175161 'move' i_x[2175159](2175163 'set reference' localX[2167289]))
    (2175166 call deinit[30831] i_x[2175159])
    label _end__cast[2175168]
    (1021575 'move' call_tmp[1021573] ret[2167255])
    val errorExists[2029847]:bool[10] "temp"
    (2029852 'move' errorExists[2029847](2029849 '!=' error[1763452] nil[44]))
    if errorExists[2029847]
    {
      (1763458 '=' error_out[1763416] error[1763452])
      ref i_x[2050120]:string[26] "temp"
      (2050124 'move' i_x[2050120](2050122 'set reference' str[1021520]))
      (2050128 call deinit[30831] i_x[2050120])
      gotoErrorHandlingReturn _end__do_command_line_cast[1021590] _end__do_command_line_cast[1021590]
    }
    (1021581 'move' ret[1021452] call_tmp[1021573])
    ref i_x[2050132]:string[26] "temp"
    (2050136 'move' i_x[2050132](2050134 'set reference' str[1021520]))
    (2050140 call deinit[30831] i_x[2050132])
    gotoReturn _end__do_command_line_cast[1021590] _end__do_command_line_cast[1021590]
    ref i_x[2050144]:string[26] "temp"
    (2050148 'move' i_x[2050144](2050146 'set reference' str[1021520]))
    (2050152 call deinit[30831] i_x[2050144])
    label _end__do_command_line_cast[1021590]
    (1021592 return ret[1021452])
  }
  function _do_command_line_cast[1202387](const in arg x[1202391]:c_string[19], ref arg error_out[1765537]:Error[167942]) : bool[10] throws "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1202393]:bool[10] "dead after last mention" "RVV" "temp"
    const-val str[1202461]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1765539]:Error[167942] "error variable" "temp"
    (1765555 'move' error[1765539] nil[44])
    const-val call_tmp[1202474]:string[26] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1202625]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret[2117993]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[2117995]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2117997 'move' call_tmp[2117995](2117999 'string_length_bytes' x[1202391]))
    (2118001 'move' ret[2117993] call_tmp[2117995])
    (1202630 'move' default_arg_length[1202625] ret[2117993])
    val errorExists[2030911]:bool[10] "temp"
    (2030916 'move' errorExists[2030911](2030913 '!=' error[1765539] nil[44]))
    if errorExists[2030911]
    {
      gotoErrorHandling handler[1765540] handler[1765540]
    }
    const-val ret_tmp[1781658]:string[26] "temp"
    const-val ret[2061037]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2061039]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061041 'move' call_tmp[2061039](2061043 'cast' c_ptr(uint(8))[935386] x[1202391]))
    const-val call_tmp[2061046]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061048]:Error[167942] "error variable" "temp"
    (2061050 'move' error[2061048] nil[44])
    const-val ret[2061053]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2061055]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061057]:Error[167942] "error variable" "temp"
    (2061059 'move' error[2061057] nil[44])
    const-val ret_tmp[2061062]:string[26] "temp"
    (2061065 call decodeByteBuffer[173904] call_tmp[2061039] default_arg_length[1202625] strict[173658] error[2061057] ret_tmp[2061062])
    (2061071 'move' call_tmp[2061055] ret_tmp[2061062])
    val errorExists[2061074]:bool[10] "temp"
    (2061076 'move' errorExists[2061074](2061078 '!=' error[2061057] nil[44]))
    if errorExists[2061074]
    {
      (2061083 '=' error[2061048] error[2061057])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061092] _endcreateStringWithNewBuffer[2061092]
    }
    (2061089 'move' ret[2061053] call_tmp[2061055])
    label _endcreateStringWithNewBuffer[2061092]
    (2061094 'move' call_tmp[2061046] ret[2061053])
    val errorExists[2061097]:bool[10] "temp"
    (2061099 'move' errorExists[2061097](2061101 '!=' error[2061048] nil[44]))
    if errorExists[2061097]
    {
      (2061106 '=' error[1765539] error[2061048])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061115] _endcreateStringWithNewBuffer[2061115]
    }
    (2061112 'move' ret[2061037] call_tmp[2061046])
    label _endcreateStringWithNewBuffer[2061115]
    (2061117 '=' ret_tmp[1781658] ret[2061037])
    (1781661 'move' call_tmp[1202474] ret_tmp[1781658])
    val errorExists[2030919]:bool[10] "temp"
    (2030924 'move' errorExists[2030919](2030921 '!=' error[1765539] nil[44]))
    if errorExists[2030919]
    {
      gotoErrorHandling handler[1765540] handler[1765540]
    }
    (1202481 'move' str[1202461] call_tmp[1202474])
    label handler[1765540]
    const-val shouldHandleError[1765564]:bool[10] "temp"
    val errorExists[2030927]:bool[10] "temp"
    (2030932 'move' errorExists[2030927](2030929 '!=' error[1765539] nil[44]))
    (1765568 'move' shouldHandleError[1765564] errorExists[2030927])
    if shouldHandleError[1765564]
    {
      (1765561 call chpl_uncaught_error[170247] error[1765539])
    }
    const-val call_tmp[1202514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1765573]:Error[167942] "error variable" "temp"
    (1765575 'move' error[1765573] nil[44])
    (1202516 'move' call_tmp[1202514](1202519 call _cast[1202650] str[1202461] error[1765573]))
    val errorExists[2030935]:bool[10] "temp"
    (2030940 'move' errorExists[2030935](2030937 '!=' error[1765573] nil[44]))
    if errorExists[2030935]
    {
      (1765579 '=' error_out[1765537] error[1765573])
      ref i_x[2051584]:string[26] "temp"
      (2051588 'move' i_x[2051584](2051586 'set reference' str[1202461]))
      (2051592 call deinit[30831] i_x[2051584])
      gotoErrorHandlingReturn _end__do_command_line_cast[1202531] _end__do_command_line_cast[1202531]
    }
    (1202522 'move' ret[1202393] call_tmp[1202514])
    ref i_x[2051596]:string[26] "temp"
    (2051600 'move' i_x[2051596](2051598 'set reference' str[1202461]))
    (2051604 call deinit[30831] i_x[2051596])
    gotoReturn _end__do_command_line_cast[1202531] _end__do_command_line_cast[1202531]
    ref i_x[2051608]:string[26] "temp"
    (2051612 'move' i_x[2051608](2051610 'set reference' str[1202461]))
    (2051616 call deinit[30831] i_x[2051608])
    label _end__do_command_line_cast[1202531]
    (1202533 return ret[1202393])
  }
  function _do_command_line_cast[1349735](const in arg x[1349739]:c_string[19], ref arg error_out[1765898]:Error[167942]) : uint(64)[115] throws "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349741]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val str[1349809]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1765900]:Error[167942] "error variable" "temp"
    (1765916 'move' error[1765900] nil[44])
    const-val call_tmp[1349822]:string[26] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1349973]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret[2118015]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[2118017]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118019 'move' call_tmp[2118017](2118021 'string_length_bytes' x[1349739]))
    (2118023 'move' ret[2118015] call_tmp[2118017])
    (1349978 'move' default_arg_length[1349973] ret[2118015])
    val errorExists[2031063]:bool[10] "temp"
    (2031068 'move' errorExists[2031063](2031065 '!=' error[1765900] nil[44]))
    if errorExists[2031063]
    {
      gotoErrorHandling handler[1765901] handler[1765901]
    }
    const-val ret_tmp[1781664]:string[26] "temp"
    const-val ret[2061135]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2061137]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061139 'move' call_tmp[2061137](2061141 'cast' c_ptr(uint(8))[935386] x[1349739]))
    const-val call_tmp[2061144]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061146]:Error[167942] "error variable" "temp"
    (2061148 'move' error[2061146] nil[44])
    const-val ret[2061151]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2061153]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061155]:Error[167942] "error variable" "temp"
    (2061157 'move' error[2061155] nil[44])
    const-val ret_tmp[2061160]:string[26] "temp"
    (2061163 call decodeByteBuffer[173904] call_tmp[2061137] default_arg_length[1349973] strict[173658] error[2061155] ret_tmp[2061160])
    (2061169 'move' call_tmp[2061153] ret_tmp[2061160])
    val errorExists[2061172]:bool[10] "temp"
    (2061174 'move' errorExists[2061172](2061176 '!=' error[2061155] nil[44]))
    if errorExists[2061172]
    {
      (2061181 '=' error[2061146] error[2061155])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061190] _endcreateStringWithNewBuffer[2061190]
    }
    (2061187 'move' ret[2061151] call_tmp[2061153])
    label _endcreateStringWithNewBuffer[2061190]
    (2061192 'move' call_tmp[2061144] ret[2061151])
    val errorExists[2061195]:bool[10] "temp"
    (2061197 'move' errorExists[2061195](2061199 '!=' error[2061146] nil[44]))
    if errorExists[2061195]
    {
      (2061204 '=' error[1765900] error[2061146])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061213] _endcreateStringWithNewBuffer[2061213]
    }
    (2061210 'move' ret[2061135] call_tmp[2061144])
    label _endcreateStringWithNewBuffer[2061213]
    (2061215 '=' ret_tmp[1781664] ret[2061135])
    (1781667 'move' call_tmp[1349822] ret_tmp[1781664])
    val errorExists[2031071]:bool[10] "temp"
    (2031076 'move' errorExists[2031071](2031073 '!=' error[1765900] nil[44]))
    if errorExists[2031071]
    {
      gotoErrorHandling handler[1765901] handler[1765901]
    }
    (1349829 'move' str[1349809] call_tmp[1349822])
    label handler[1765901]
    const-val shouldHandleError[1765925]:bool[10] "temp"
    val errorExists[2031079]:bool[10] "temp"
    (2031084 'move' errorExists[2031079](2031081 '!=' error[1765900] nil[44]))
    (1765929 'move' shouldHandleError[1765925] errorExists[2031079])
    if shouldHandleError[1765925]
    {
      (1765922 call chpl_uncaught_error[170247] error[1765900])
    }
    const-val call_tmp[1349862]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1765934]:Error[167942] "error variable" "temp"
    (1765936 'move' error[1765934] nil[44])
    ref i_x[2215804]:string[26] "temp"
    (2215808 'move' i_x[2215804](2215806 'set reference' str[1349809]))
    val ret[2215817]:uint(64)[115] "dead after last mention" "RVV" "temp"
    const-val retVal[2215819]:uint(64)[115] "dead at end of block" "insert auto destroy" "split inited"
    val isErr[2215821]:bool[10] "dead at end of block" "insert auto destroy"
    (2215823 'move' isErr[2215821] 0)
    const-val ret[2215826]:string[26] "dead after last mention" "RVV" "temp"
    val ret[2215828]:string[26] "dead at end of block" "insert auto destroy"
    (2215831 call init[30760] ret[2215828])
    const-val coerce_tmp[2215833]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2215835 'move' coerce_tmp[2215833](2215837 '.v' str[1349809] cachedNumCodepoints[30731]))
    (2215840 '.=' ret[2215828] cachedNumCodepoints[30731] coerce_tmp[2215833])
    (2215845 call initWithBorrowedBuffer[946797] ret[2215828] i_x[2215804])
    (2215848 'move' ret[2215826] ret[2215828])
    val localX[2215851]:string[26] "dead at end of block" "insert auto destroy"
    (2215853 'move' localX[2215851] ret[2215826])
    const-val call_tmp[2215856]:byteIndex[28170] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val default_arg_region[2215858]:range(byteIndex,bounded,false)[1022924] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val region[2215860]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val ret[2215862]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2215864 'move' ret[2215862](2215866 '.v' localX[2215851] buffLen[30719]))
    const-val call_tmp[2215869]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2215871 'move' call_tmp[2215869](2215873 '-' ret[2215862] 1))
    const-val call_tmp[2215876]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2215878]:range(int(64),bounded,false)[1023946] "temp"
    (2215881 call chpl_build_bounded_range[455195] 0 call_tmp[2215869] ret_tmp[2215878])
    (2215885 'move' call_tmp[2215876] ret_tmp[2215878])
    const-val ret_tmp[2215888]:range(byteIndex,bounded,false)[1022924] "temp"
    (2215891 call _cast[1024694] call_tmp[2215876] ret_tmp[2215888])
    (2215894 'move' region[2215860] ret_tmp[2215888])
    (2215897 'move' default_arg_region[2215858] region[2215860])
    ref i_this[2215900]:string[26] "temp"
    (2215902 'move' i_this[2215900](2215904 'set reference' localX[2215851]))
    val inlineImm[2215906]:string[26] "temp"
    (2215908 'move' inlineImm[2215906] "_")
    ref i_needle[2215911]:string[26] "temp"
    (2215913 'move' i_needle[2215911](2215915 'set reference' inlineImm[2215906]))
    val ret[2215917]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    const-val n[2215919]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[2215921]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2215923 'move' coerce_tmp[2215921](2215925 '.v' localX[2215851] cachedNumCodepoints[30731]))
    (2215928 '=' n[2215919] coerce_tmp[2215921])
    (2215931 'noop')
    const-val call_tmp[2215932]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2215934 'move' call_tmp[2215932](2215937 call countNumCodepoints[181346] i_this[2215900]))
    const-val call_tmp[2215939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2215941 'move' call_tmp[2215939](2215943 '!=' coerce_tmp[2215921] call_tmp[2215932]))
    if call_tmp[2215939]
    {
      (2215949 call halt[154071] "Encountered corrupt string metadata")
    }
    val ret[2215952]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2215954 'move' ret[2215952](2215956 '.v' localX[2215851] buffLen[30719]))
    const-val call_tmp[2215959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2215961 'move' call_tmp[2215959](2215963 '==' n[2215919] ret[2215952]))
    if call_tmp[2215959]
    {
      const-val call_tmp[2215968]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2215970 'move' call_tmp[2215968](2215973 call doSearchNoEnc[1027185] i_this[2215900] i_needle[2215911] default_arg_region[2215858]))
      const-val ret[2215977]:byteIndex[28170] "dead after last mention" "RVV" "temp"
      val cpi[2215979]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (2215982 call init[28097] cpi[2215979])
      (2215984 '.=' cpi[2215979] _bindex[28091] call_tmp[2215968])
      (2215988 'move' ret[2215977] cpi[2215979])
      (2215991 'move' ret[2215917] ret[2215977])
      gotoReturn _end_find[2216965] _end_find[2216965]
    }
    {
      const-val coerce_tmp[2215997]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2215999 'move' coerce_tmp[2215997](2216001 '.v' localX[2215851] locale_id[30754]))
      (2216005 call chpl_buildLocaleID[209424] coerce_tmp[2215997] c_sublocid_any[89879])
      val localRet[2216008]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2216010 'move' localRet[2216008] -2)
      const-val nLen[2216013]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2216015]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2216017 'move' coerce_tmp[2216015](2216019 '.v' inlineImm[2215906] buffLen[30719]))
      (2216022 '=' nLen[2216013] coerce_tmp[2216015])
      (2216025 'noop')
      const-val call_tmp[2216026]:(range(int(64),bounded,false),int(64))[1081903] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[2216028]:(range(int(64),bounded,false),int(64))[1081903] "temp"
      (2216031 call getView[1028277] i_this[2215900] default_arg_region[2215858] ret_tmp[2216028])
      (2216035 'move' call_tmp[2216026] ret_tmp[2216028])
      val tmp_x0[2253851]:range(int(64),bounded,false)[1023946] "temp"
      (2253859 'move' tmp_x0[2253851](2253857 '.v' call_tmp[2216026] x0[1081899]))
      const-val view[2216043]:range(int(64),bounded,false)[1023946] "dead at end of block" "const" "insert auto destroy"
      (2216045 'move' view[2216043] tmp_x0[2253851])
      const-val call_tmp[2216050]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (2216052 'move' call_tmp[2216050](2216055 call size[1032912] view[2216043]))
      const-val thisLen[2216057]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (2216059 'move' thisLen[2216057] call_tmp[2216050])
      const-val call_tmp[2216062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2216064 'move' call_tmp[2216062](2216066 '==' coerce_tmp[2216015] 0))
      if call_tmp[2216062]
      {
        (2216071 '=' localRet[2216008] -1)
      }
      const-val call_tmp[2216075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2216077 'move' call_tmp[2216075](2216079 '>' nLen[2216013] thisLen[2216057]))
      if call_tmp[2216075]
      {
        (2216084 '=' localRet[2216008] -1)
      }
      const-val call_tmp[2216088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2216090 'move' call_tmp[2216088](2216092 '==' localRet[2216008] -2))
      if call_tmp[2216088]
      {
        (2216097 '=' localRet[2216008] -1)
        const-val ret[2216100]:string[26] "dead after last mention" "RVV" "temp"
        val ret[2216102]:string[26] "dead at end of block" "insert auto destroy"
        (2216105 call init[30760] ret[2216102])
        const-val coerce_tmp[2216107]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2216109 'move' coerce_tmp[2216107](2216111 '.v' inlineImm[2215906] cachedNumCodepoints[30731]))
        (2216114 '.=' ret[2216102] cachedNumCodepoints[30731] coerce_tmp[2216107])
        (2216119 call initWithBorrowedBuffer[946797] ret[2216102] i_needle[2215911])
        (2216122 'move' ret[2216100] ret[2216102])
        const localNeedle[2216125]:string[26] "dead at end of block" "const" "insert auto destroy"
        (2216127 'move' localNeedle[2216125] ret[2216100])
        const-val call_tmp[2216130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2216132 'move' call_tmp[2216130](2216134 '-' thisLen[2216057] nLen[2216013]))
        const-val call_tmp[2216137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2216139 'move' call_tmp[2216137](2216141 '+' call_tmp[2216130] 1))
        const-val tmp[2216144]:range(int(64),bounded,false)[1023946] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2216146]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2216148]:range(int(64),boundedLow,false)[1084544] "temp"
        (2216151 call chpl_build_low_bounded_range[1083937] 0 ret_tmp[2216148])
        (2216154 'move' call_tmp[2216146] ret_tmp[2216148])
        const-val ret_tmp[2216157]:range(int(64),bounded,false)[1023946] "temp"
        (2216160 call #[1084904] call_tmp[2216146] call_tmp[2216137] ret_tmp[2216157])
        (2216164 'move' tmp[2216144] ret_tmp[2216157])
        const-val call_tmp_F0_this[2252598]:range(int(64),bounded,false)[1023946] "temp"
        const-val _ir_F0_this[2252606]:range(int(64),bounded,false)[1023946] "temp"
        (2216173 'move' _ir_F0_this[2252606] tmp[2216144])
        (2252604 'move' call_tmp_F0_this[2252598] _ir_F0_this[2252606])
        const-val _ic__F0_this[2253564]:range(int(64),bounded,false)[1023946] "temp"
        const-val tmp[2216212]:range(int(64),bounded,false)[1023946] "temp"
        (2216214 'move' tmp[2216212] call_tmp_F0_this[2252598])
        (2216219 'move' _ic__F0_this[2253564] tmp[2216212])
        const-val this[2216226]:range(int(64),bounded,false)[1023946] "temp"
        (2216228 'move' this[2216226] _ic__F0_this[2253564])
        (2216234 call checkIfIterWillOverflow[1092793] this[2216226] 1)
        val i[2216237]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2216239 'move' i[2216237] 0)
        const-val this[2216242]:range(int(64),bounded,false)[1023946] "temp"
        (2216244 'move' this[2216242] _ic__F0_this[2253564])
        const-val coerce_tmp[2216249]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2216251 'move' coerce_tmp[2216249](2216253 '.v' this[2216242] _low[1023908]))
        (2216256 'noop')
        const-val this[2216257]:range(int(64),bounded,false)[1023946] "temp"
        (2216259 'move' this[2216257] _ic__F0_this[2253564])
        const end[2216264]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2216266]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2216268 'move' coerce_tmp[2216266](2216270 '.v' this[2216257] _high[1023913]))
        (2216273 '=' end[2216264] coerce_tmp[2216266])
        (2216276 'noop')
        CForLoop[2216277]
        {
          const-val i[2216290]:int(64)[13] "const" "index var" "insert auto destroy"
          (2216292 'move' i[2216290] i[2216237])
          const-val call_tmp_F0_low[2262057]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2262059]:int(64)[13] "temp"
          const-val _ir_F0_low[2262073]:int(64)[13] "temp"
          const-val _ir_F1_count[2262075]:int(64)[13] "temp"
          (2216301 'move' _ir_F0_low[2262073] 0)
          (2216305 'move' _ir_F1_count[2262075] nLen[2216013])
          (2262065 'move' call_tmp_F0_low[2262057] _ir_F0_low[2262073])
          (2262070 'move' call_tmp_F1_count[2262059] _ir_F1_count[2262075])
          const-val _ic__F0_low[2247495]:int(64)[13] "temp"
          const-val _ic__F1_count[2247497]:int(64)[13] "temp"
          const-val tmp[2216344]:int(64)[13] "temp"
          (2216346 'move' tmp[2216344] call_tmp_F0_low[2262057])
          (2216351 'move' _ic__F0_low[2247495] tmp[2216344])
          const-val tmp[2216355]:int(64)[13] "temp"
          (2216357 'move' tmp[2216355] call_tmp_F1_count[2262059])
          (2216362 'move' _ic__F1_count[2247497] tmp[2216355])
          const-val call_tmp_F0_low[2263514]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2263516]:int(64)[13] "temp"
          const-val low[2216373]:int(64)[13] "temp"
          (2216375 'move' low[2216373] _ic__F0_low[2247495])
          const-val count[2216380]:int(64)[13] "temp"
          (2216382 'move' count[2216380] _ic__F1_count[2247497])
          const-val _ir_F0_low[2263530]:int(64)[13] "temp"
          const-val _ir_F1_count[2263532]:int(64)[13] "temp"
          (2216389 'move' _ir_F0_low[2263530] low[2216373])
          (2216393 'move' _ir_F1_count[2263532] count[2216380])
          (2263522 'move' call_tmp_F0_low[2263514] _ir_F0_low[2263530])
          (2263527 'move' call_tmp_F1_count[2263516] _ir_F1_count[2263532])
          const-val _ic__F0_low[2249962]:int(64)[13] "temp"
          const-val _ic__F1_count[2249964]:int(64)[13] "temp"
          const-val tmp[2216432]:int(64)[13] "temp"
          (2216434 'move' tmp[2216432] call_tmp_F0_low[2263514])
          (2216439 'move' _ic__F0_low[2249962] tmp[2216432])
          const-val tmp[2216443]:int(64)[13] "temp"
          (2216445 'move' tmp[2216443] call_tmp_F1_count[2263516])
          (2216450 'move' _ic__F1_count[2249964] tmp[2216443])
          const-val count[2216457]:int(64)[13] "temp"
          (2216459 'move' count[2216457] _ic__F1_count[2249964])
          const-val call_tmp[2216464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2216466 'move' call_tmp[2216464](2216468 '<' count[2216457] 0))
          if call_tmp[2216464]
          {
            (2216474 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
          }
          val tmp_x0[2260190]:int(64)[13] "temp"
          val tmp_x1[2260192]:int(64)[13] "temp"
          val tmp_x0[2260206]:int(64)[13] "temp"
          val tmp_x1[2260208]:int(64)[13] "temp"
          const-val count[2216481]:int(64)[13] "temp"
          (2216483 'move' count[2216481] _ic__F1_count[2249964])
          const-val call_tmp[2216488]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2216490 'move' call_tmp[2216488](2216492 '==' count[2216481] 0))
          if call_tmp[2216488]
          {
            const-val low[2216497]:int(64)[13] "temp"
            (2216499 'move' low[2216497] _ic__F0_low[2249962])
            const-val call_tmp[2216504]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216506 'move' call_tmp[2216504](2216508 'cast' uint(64)[115] low[2216497]))
            const-val call_tmp[2216511]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216513 'move' call_tmp[2216511](2216515 '-' call_tmp[2216504] 1))
            const-val call_tmp[2216518]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216520 'move' call_tmp[2216518](2216522 'cast' int(64)[13] call_tmp[2216511]))
            const-val low[2216525]:int(64)[13] "temp"
            (2216527 'move' low[2216525] _ic__F0_low[2249962])
            val this_x0[2260232]:int(64)[13]
            val this_x1[2260234]:int(64)[13]
            (2216534 'move' this_x0[2260232] low[2216525])
            (2216538 'move' this_x1[2260234] call_tmp[2216518])
            (2260214 'move' tmp_x0[2260206] this_x0[2260232])
            (2260219 'move' tmp_x1[2260208] this_x1[2260234])
          }
          {
            const-val count[2216546]:int(64)[13] "temp"
            (2216548 'move' count[2216546] _ic__F1_count[2249964])
            const-val call_tmp[2216553]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216555 'move' call_tmp[2216553](2216557 '-' count[2216546] 1))
            const-val low[2216560]:int(64)[13] "temp"
            (2216562 'move' low[2216560] _ic__F0_low[2249962])
            const-val call_tmp[2216567]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216569 'move' call_tmp[2216567](2216571 '+' low[2216560] call_tmp[2216553]))
            const-val low[2216574]:int(64)[13] "temp"
            (2216576 'move' low[2216574] _ic__F0_low[2249962])
            val this_x0[2260240]:int(64)[13]
            val this_x1[2260242]:int(64)[13]
            (2216583 'move' this_x0[2260240] low[2216574])
            (2216587 'move' this_x1[2260242] call_tmp[2216567])
            (2260224 'move' tmp_x0[2260206] this_x0[2260240])
            (2260229 'move' tmp_x1[2260208] this_x1[2260242])
          }
          (2260198 'move' tmp_x0[2260190] tmp_x0[2260206])
          (2260203 'move' tmp_x1[2260192] tmp_x1[2260208])
          (2216598 'noop')
          const-val coerce_tmp[2216599]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2216601 'move' coerce_tmp[2216599] tmp_x0[2260190])
          (2216606 'noop')
          const-val coerce_tmp[2216607]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2216609 'move' coerce_tmp[2216607] tmp_x1[2260192])
          (2216614 'noop')
          const-val call_tmp_F0_low[2265527]:int(64)[13] "temp"
          const-val call_tmp_F1_high[2265529]:int(64)[13] "temp"
          const-val _ir_F0_low[2265543]:int(64)[13] "temp"
          const-val _ir_F1_high[2265545]:int(64)[13] "temp"
          (2216621 'move' _ir_F0_low[2265543] coerce_tmp[2216599])
          (2216625 'move' _ir_F1_high[2265545] coerce_tmp[2216607])
          (2265535 'move' call_tmp_F0_low[2265527] _ir_F0_low[2265543])
          (2265540 'move' call_tmp_F1_high[2265529] _ir_F1_high[2265545])
          const-val _ic__F0_low[2251964]:int(64)[13] "temp"
          const-val _ic__F1_high[2251966]:int(64)[13] "temp"
          const-val tmp[2216664]:int(64)[13] "temp"
          (2216666 'move' tmp[2216664] call_tmp_F0_low[2265527])
          (2216671 'move' _ic__F0_low[2251964] tmp[2216664])
          const-val tmp[2216675]:int(64)[13] "temp"
          (2216677 'move' tmp[2216675] call_tmp_F1_high[2265529])
          (2216682 'move' _ic__F1_high[2251966] tmp[2216675])
          val i[2216689]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2216691 'move' i[2216689] 0)
          const-val low[2216694]:int(64)[13] "temp"
          (2216696 'move' low[2216694] _ic__F0_low[2251964])
          const-val high[2216701]:int(64)[13] "temp"
          (2216703 'move' high[2216701] _ic__F1_high[2251966])
          const-val low[2216708]:int(64)[13] "temp"
          (2216710 'move' low[2216708] _ic__F0_low[2251964])
          const-val high[2216715]:int(64)[13] "temp"
          (2216717 'move' high[2216715] _ic__F1_high[2251966])
          (2216723 call chpl_checkIfRangeIterWillOverflow[1093055] low[2216708] high[2216715] 1 low[2216694] high[2216701] 1)
          CForLoop[2216730]
          {
            const-val j[2216757]:int(64)[13] "const" "index var" "insert auto destroy"
            (2216759 'move' j[2216757] i[2216689])
            const-val call_tmp[2216762]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216764 'move' call_tmp[2216762](2216766 '+' i[2216290] i[2216689]))
            const-val call_tmp[2216769]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (2216771 'move' call_tmp[2216769](2216774 call orderToIndex[1100997] view[2216043] call_tmp[2216762]))
            val coerce_tmp[2216777]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2216779 'move' coerce_tmp[2216777](2216781 '.v' localX[2215851] buff[30737]))
            ref call_tmp[2216784]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2216786 'move' call_tmp[2216784](2216788 'array_get' coerce_tmp[2216777] call_tmp[2216769]))
            val coerce_tmp[2216791]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2216793 'move' coerce_tmp[2216791](2216795 '.v' localNeedle[2216125] buff[30737]))
            ref call_tmp[2216798]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2216800 'move' call_tmp[2216798](2216802 'array_get' coerce_tmp[2216791] i[2216689]))
            const-val coerce_tmp[2216805]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2216807 'move' coerce_tmp[2216805](2216809 'deref' call_tmp[2216784]))
            const-val coerce_tmp[2216811]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2216813 'move' coerce_tmp[2216811](2216815 'deref' call_tmp[2216798]))
            const-val call_tmp[2216817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216819 'move' call_tmp[2216817](2216821 '!=' coerce_tmp[2216805] coerce_tmp[2216811]))
            if call_tmp[2216817]
            {
              break _breakLabel[2216899] _breakLabel[2216899]
            }
            const-val call_tmp[2216847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216849 'move' call_tmp[2216847](2216851 '-' nLen[2216013] 1))
            const-val call_tmp[2216854]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2216856 'move' call_tmp[2216854](2216858 '==' j[2216757] call_tmp[2216847]))
            if call_tmp[2216854]
            {
              const-val call_tmp[2216863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2216865 'move' call_tmp[2216863](2216868 call orderToIndex[1100997] view[2216043] i[2216290]))
              (2216871 '=' localRet[2216008] call_tmp[2216863])
            }
            {
              const-val low[2216732]:int(64)[13] "temp"
              (2216734 'move' low[2216732] _ic__F0_low[2251964])
              (2216739 '=' i[2216689] low[2216732])
            }
            {
              const-val high[2216743]:int(64)[13] "temp"
              (2216745 'move' high[2216743] _ic__F1_high[2251966])
              (2216750 '<=' i[2216689] high[2216743])
            }
            {
              (2216754 '+=' i[2216689] 1)
            }
          }
          label _endchpl_direct_param_stride_range_iter[2216875]
          label _endchpl_direct_counted_range_iter_helper[2216886]
          label _endchpl_direct_counted_range_iter[2216897]
          label _breakLabel[2216899]
          const-val call_tmp[2216910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2216912 'move' call_tmp[2216910](2216914 '!=' localRet[2216008] -1))
          if call_tmp[2216910]
          {
            break _breakLabel[2216924] _breakLabel[2216924]
          }
          {
            (2216279 '=' i[2216237] coerce_tmp[2216249])
          }
          {
            (2216283 '<=' i[2216237] end[2216264])
          }
          {
            (2216287 '+=' i[2216237] 1)
          }
        }
        label _endthese[2216922]
        label _breakLabel[2216924]
        ref i_x[2216935]:string[26] "temp"
        (2216937 'move' i_x[2216935](2216939 'set reference' localNeedle[2216125]))
        (2216942 call deinit[30831] i_x[2216935])
      }
      const-val ret[2216945]:byteIndex[28170] "dead after last mention" "RVV" "temp"
      val cpi[2216947]:byteIndex[28170] "dead at end of block" "insert auto destroy"
      (2216950 call init[28097] cpi[2216947])
      (2216952 '.=' cpi[2216947] _bindex[28091] localRet[2216008])
      (2216956 'move' ret[2216945] cpi[2216947])
      (2216959 'move' ret[2215917] ret[2216945])
      gotoReturn _end_find[2216965] _end_find[2216965]
    }
    label _end_find[2216965]
    (2216967 'move' call_tmp[2215856] ret[2215917])
    val ret[2216970]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2216972 'move' ret[2216970](2216974 '.v' call_tmp[2215856] _bindex[28091]))
    const-val call_tmp[2216977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216979 'move' call_tmp[2216977](2216981 '!=' ret[2216970] -1))
    if call_tmp[2216977]
    {
      const-val call_tmp[2216986]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2216988]:string[26] "temp"
      (2216991 call strip[36092] localX[2215851] " \t\r\n" 1 1 ret_tmp[2216988])
      (2216997 'move' call_tmp[2216986] ret_tmp[2216988])
      (2217001 call =[38269] localX[2215851] call_tmp[2216986])
      ref i_x[2217004]:string[26] "temp"
      (2217006 'move' i_x[2217004](2217008 'set reference' call_tmp[2216986]))
      (2217011 call deinit[30831] i_x[2217004])
      val numElements[2217013]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2217015 'move' numElements[2217013] 0)
      const-val call_tmp_F1_maxsplit[2247621]:int(64)[13] "temp"
      ref i_this[2217022]:string[26] "temp"
      (2217024 'move' i_this[2217022](2217026 'set reference' localX[2215851]))
      const-val _ir_F1_maxsplit[2247637]:int(64)[13] "temp"
      (2217034 'move' _ir_F1_maxsplit[2247637] -1)
      (2247632 'move' call_tmp_F1_maxsplit[2247621] _ir_F1_maxsplit[2247637])
      const-val _ic__F1_maxsplit[2244434]:int(64)[13] "temp"
      const-val tmp[2217084]:int(64)[13] "temp"
      (2217086 'move' tmp[2217084] call_tmp_F1_maxsplit[2247621])
      (2217091 'move' _ic__F1_maxsplit[2244434] tmp[2217084])
      const-val n[2217105]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2217107]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2217109 'move' coerce_tmp[2217107](2217111 '.v' localX[2215851] cachedNumCodepoints[30731]))
      (2217114 '=' n[2217105] coerce_tmp[2217107])
      (2217117 'noop')
      const-val call_tmp[2217118]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2217120 'move' call_tmp[2217118](2217123 call countNumCodepoints[181346] i_this[2217022]))
      const-val call_tmp[2217125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2217127 'move' call_tmp[2217125](2217129 '!=' coerce_tmp[2217107] call_tmp[2217118]))
      if call_tmp[2217125]
      {
        (2217135 call halt[154071] "Encountered corrupt string metadata")
      }
      val ret[2217138]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2217140 'move' ret[2217138](2217142 '.v' localX[2215851] buffLen[30719]))
      const-val call_tmp[2217145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2217147 'move' call_tmp[2217145](2217149 '==' n[2217105] ret[2217138]))
      if call_tmp[2217145]
      {
        const-val call_tmp_F1_maxsplit[2250697]:int(64)[13] "temp"
        const-val maxsplit[2217165]:int(64)[13] "temp"
        (2217167 'move' maxsplit[2217165] _ic__F1_maxsplit[2244434])
        const-val _ir_F1_maxsplit[2250713]:int(64)[13] "temp"
        (2217178 'move' _ir_F1_maxsplit[2250713] maxsplit[2217165])
        (2250708 'move' call_tmp_F1_maxsplit[2250697] _ir_F1_maxsplit[2250713])
        const-val _ic__F1_maxsplit[2244685]:int(64)[13] "temp"
        const-val tmp[2217228]:int(64)[13] "temp"
        (2217230 'move' tmp[2217228] call_tmp_F1_maxsplit[2250697])
        (2217235 'move' _ic__F1_maxsplit[2244685] tmp[2217228])
        const-val coerce_tmp[2217249]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2217251 'move' coerce_tmp[2217249](2217253 '.v' localX[2215851] buffLen[30719]))
        const-val call_tmp[2217256]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217258 'move' call_tmp[2217256](2217260 '==' coerce_tmp[2217249] 0))
        const-val call_tmp[2217263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2217265 'move' call_tmp[2217263](2217267 '!' call_tmp[2217256]))
        if call_tmp[2217263]
        {
          const-val ret[2217278]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2217280]:string[26] "dead at end of block" "insert auto destroy"
          (2217283 call init[30760] ret[2217280])
          const-val coerce_tmp[2217285]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217287 'move' coerce_tmp[2217285](2217289 '.v' localX[2215851] cachedNumCodepoints[30731]))
          (2217292 '.=' ret[2217280] cachedNumCodepoints[30731] coerce_tmp[2217285])
          (2217297 call initWithBorrowedBuffer[946797] ret[2217280] i_this[2217022])
          (2217300 'move' ret[2217278] ret[2217280])
          const localx[2217303]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2217305 'move' localx[2217303] ret[2217278])
          val done[2217308]:bool[10] "dead at end of block" "insert auto destroy"
          (2217310 'move' done[2217308] 0)
          val yieldChunk[2217313]:bool[10] "dead at end of block" "insert auto destroy"
          (2217315 'move' yieldChunk[2217313] 0)
          val chunk[2217318]:string[26] "dead at end of block" "insert auto destroy"
          (2217321 call init[30760] chunk[2217318])
          const-val maxsplit[2217323]:int(64)[13] "temp"
          (2217325 'move' maxsplit[2217323] _ic__F1_maxsplit[2244685])
          const-val call_tmp[2217330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217332 'move' call_tmp[2217330](2217334 '==' maxsplit[2217323] 0))
          const-val noSplits[2217337]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2217339 'move' noSplits[2217337] call_tmp[2217330])
          const-val maxsplit[2217342]:int(64)[13] "temp"
          (2217344 'move' maxsplit[2217342] _ic__F1_maxsplit[2244685])
          const-val call_tmp[2217349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217351 'move' call_tmp[2217349](2217353 '>' maxsplit[2217342] 0))
          const-val limitSplits[2217356]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2217358 'move' limitSplits[2217356] call_tmp[2217349])
          val splitCount[2217361]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2217363 'move' splitCount[2217361] 0)
          const-val coerce_tmp[2217366]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2217368 'move' coerce_tmp[2217366](2217370 '.v' localx[2217303] buffLen[30719]))
          const-val call_tmp[2217373]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217375 'move' call_tmp[2217373](2217377 '-' coerce_tmp[2217366] 2))
          const-val iEnd[2217380]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (2217382 'move' iEnd[2217380] call_tmp[2217373])
          val inChunk[2217385]:bool[10] "dead at end of block" "insert auto destroy"
          (2217387 'move' inChunk[2217385] 0)
          val chunkStart[2217390]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2217392 'move' chunkStart[2217390] 0)
          const-val n[2217404]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[2217406]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2217408 'move' coerce_tmp[2217406](2217410 '.v' localX[2215851] cachedNumCodepoints[30731]))
          (2217413 '=' n[2217404] coerce_tmp[2217406])
          (2217416 'noop')
          const-val call_tmp[2217417]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217419 'move' call_tmp[2217417](2217422 call countNumCodepoints[181346] i_this[2217022]))
          const-val call_tmp[2217424]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217426 'move' call_tmp[2217424](2217428 '!=' coerce_tmp[2217406] call_tmp[2217417]))
          if call_tmp[2217424]
          {
            (2217434 call halt[154071] "Encountered corrupt string metadata")
          }
          const-val call_tmp[2217437]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217439 'move' call_tmp[2217437](2217441 '-' n[2217404] 1))
          const-val call_tmp[2217444]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[2217446]:range(int(64),bounded,false)[1023946] "temp"
          (2217449 call chpl_build_bounded_range[455195] 0 call_tmp[2217437] ret_tmp[2217446])
          (2217453 'move' call_tmp[2217444] ret_tmp[2217446])
          const-val call_tmp_F0_this[2252610]:range(int(64),bounded,false)[1023946] "temp"
          const-val _ir_F0_this[2252618]:range(int(64),bounded,false)[1023946] "temp"
          (2217460 'move' _ir_F0_this[2252618] call_tmp[2217444])
          (2252616 'move' call_tmp_F0_this[2252610] _ir_F0_this[2252618])
          val _ic_[2217469]:_ic_these_range_int64_t_bounded_F[1093682] "dead after last mention" "temp"
          const-val call_tmp[2217471]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217473 'move' call_tmp[2217471](2217475 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1093682]))
          const-val cast_tmp[2217477]:c_void_ptr[149] "dead after last mention" "temp"
          (2217479 'move' cast_tmp[2217477](2217482 call chpl_here_alloc[187754] call_tmp[2217471] 27))
          (2217485 'move' _ic_[2217469](2217487 'cast' _ic_these_range_int64_t_bounded_F[1093682] cast_tmp[2217477]))
          (2217490 'setcid' _ic_[2217469])
          (2217495 '.=' _ic_[2217469] more[1093685] 1)
          const-val tmp[2217499]:range(int(64),bounded,false)[1023946] "temp"
          (2217501 'move' tmp[2217499] call_tmp_F0_this[2252610])
          (2217506 '.=' _ic_[2217469] F0_this[1955920] tmp[2217499])
          ref i_this[2217512]:string[26] "temp"
          (2217514 'move' i_this[2217512](2217516 'set reference' localx[2217303]))
          val _ic_[2217529]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "temp"
          const-val call_tmp[2217531]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217533 'move' call_tmp[2217531](2217535 'sizeof_bundle' _ic_chpl_bytes__ref_string[1105204]))
          const-val cast_tmp[2217537]:c_void_ptr[149] "dead after last mention" "temp"
          (2217539 'move' cast_tmp[2217537](2217542 call chpl_here_alloc[187754] call_tmp[2217531] 31))
          (2217545 'move' _ic_[2217529](2217547 'cast' _ic_chpl_bytes__ref_string[1105204] cast_tmp[2217537]))
          (2217550 'setcid' _ic_[2217529])
          (2217555 '.=' _ic_[2217529] more[1105207] 1)
          (2217566 '.=' _ic_[2217529] F0_this[1940093] i_this[2217512])
          const-val coerce_tmp[2217597]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val tmp[2217599]:range(int(64),bounded,false)[1023946] "temp"
          ref tmp[2217601]:range(int(64),bounded,false)[1023946] "temp"
          val tmp[2217603]:int(64)[13] "temp"
          ref tmp[2217605]:range(int(64),bounded,false)[1023946] "temp"
          (2217607 'move' tmp[2217599](2217609 '.v' _ic_[2217469] F0_this[1955920]))
          (2217613 call checkIfIterWillOverflow[1092793] tmp[2217599] 1)
          (2217616 '.=' _ic_[2217469] F1_i[1955924] 0)
          (2217620 'move' tmp[2217601](2217622 '.' _ic_[2217469] F0_this[1955920]))
          (2217625 'move' tmp[2217603](2217627 '.v' tmp[2217601] _low[1023908]))
          (2217630 '.=' _ic_[2217469] F3_coerce_tmp[1955928] tmp[2217603])
          (2217634 'noop')
          (2217635 'move' tmp[2217605](2217637 '.' _ic_[2217469] F0_this[1955920]))
          (2217640 'move' coerce_tmp[2217597](2217642 '.v' tmp[2217605] _high[1023913]))
          (2217645 '.=' _ic_[2217469] F2_end[1955926] coerce_tmp[2217597])
          (2217649 'noop')
          const-val call_tmp_F0_low[2262081]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2262083]:int(64)[13] "temp"
          const-val coerce_tmp[2217652]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          const-val call_tmp_F0_low[2263538]:int(64)[13] "temp"
          const-val call_tmp_F1_count[2263540]:int(64)[13] "temp"
          const-val low[2217656]:int(64)[13] "temp"
          const-val count[2217658]:int(64)[13] "temp"
          const-val count[2217660]:int(64)[13] "temp"
          val tmp[2217662]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
          const-val count[2217664]:int(64)[13] "temp"
          const-val coerce_tmp[2217666]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val coerce_tmp[2217668]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          const-val call_tmp_F0_low[2265551]:int(64)[13] "temp"
          const-val call_tmp_F1_high[2265553]:int(64)[13] "temp"
          const-val low[2217672]:int(64)[13] "temp"
          const-val high[2217674]:int(64)[13] "temp"
          const-val low[2217676]:int(64)[13] "temp"
          const-val high[2217678]:int(64)[13] "temp"
          const-ref tmp[2217680]:string[26] "temp"
          ref tmp[2217682]:string[26] "temp"
          const-ref tmp[2217684]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2217686]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2217688]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          const-ref tmp[2217690]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          const-ref tmp[2217692]:2*int(64)[1037179] "temp"
          const-ref tmp[2217694]:2*int(64)[1037179] "temp"
          const-ref tmp[2217696]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2217698]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2217700]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          const-ref tmp[2217702]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          (2217704 'move' tmp[2217680](2217706 '.v' _ic_[2217529] F0_this[1940093]))
          const-val ret[2217709]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2217711]:string[26] "dead at end of block" "insert auto destroy"
          (2217714 call init[30760] ret[2217711])
          const-val coerce_tmp[2217716]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2217718 'move' coerce_tmp[2217716](2217720 '.v' tmp[2217680] cachedNumCodepoints[30731]))
          (2217723 '.=' ret[2217711] cachedNumCodepoints[30731] coerce_tmp[2217716])
          (2217728 call initWithBorrowedBuffer[946797] ret[2217711] tmp[2217680])
          (2217731 'move' ret[2217709] ret[2217711])
          (2217734 '.=' _ic_[2217529] F1_localThis[1940097] ret[2217709])
          (2217738 'move' tmp[2217682](2217740 '.' _ic_[2217529] F1_localThis[1940097]))
          (2217743 'move' coerce_tmp[2217652](2217745 '.v' tmp[2217682] buffLen[30719]))
          const-val _ir_F0_low[2262097]:int(64)[13] "temp"
          const-val _ir_F1_count[2262099]:int(64)[13] "temp"
          (2217750 'move' _ir_F0_low[2262097] 0)
          (2217754 'move' _ir_F1_count[2262099] coerce_tmp[2217652])
          (2262089 'move' call_tmp_F0_low[2262081] _ir_F0_low[2262097])
          (2262094 'move' call_tmp_F1_count[2262083] _ir_F1_count[2262099])
          val _ic_[2217763]:_ic_chpl_direct_counted_range_iter[1100747] "dead after last mention" "temp"
          const-val call_tmp[2217765]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217767 'move' call_tmp[2217765](2217769 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1100747]))
          const-val cast_tmp[2217771]:c_void_ptr[149] "dead after last mention" "temp"
          (2217773 'move' cast_tmp[2217771](2217776 call chpl_here_alloc[187754] call_tmp[2217765] 30))
          (2217779 'move' _ic_[2217763](2217781 'cast' _ic_chpl_direct_counted_range_iter[1100747] cast_tmp[2217771]))
          (2217784 'setcid' _ic_[2217763])
          (2217789 '.=' _ic_[2217763] more[1100750] 1)
          const-val tmp[2217793]:int(64)[13] "temp"
          (2217795 'move' tmp[2217793] call_tmp_F0_low[2262081])
          (2217800 '.=' _ic_[2217763] F0_low[1952071] tmp[2217793])
          const-val tmp[2217804]:int(64)[13] "temp"
          (2217806 'move' tmp[2217804] call_tmp_F1_count[2262083])
          (2217811 '.=' _ic_[2217763] F1_count[1952075] tmp[2217804])
          (2217815 '.=' _ic_[2217529] F2__iterator[1940099] _ic_[2217763])
          (2217819 'move' tmp[2217684](2217821 '.' _ic_[2217529] F2__iterator[1940099]))
          (2217824 'move' low[2217656](2217826 '.v' tmp[2217684] F0_low[1952071]))
          (2217829 'move' tmp[2217686](2217831 '.' _ic_[2217529] F2__iterator[1940099]))
          (2217834 'move' count[2217658](2217836 '.v' tmp[2217686] F1_count[1952075]))
          const-val _ir_F0_low[2263554]:int(64)[13] "temp"
          const-val _ir_F1_count[2263556]:int(64)[13] "temp"
          (2217841 'move' _ir_F0_low[2263554] low[2217656])
          (2217845 'move' _ir_F1_count[2263556] count[2217658])
          (2263546 'move' call_tmp_F0_low[2263538] _ir_F0_low[2263554])
          (2263551 'move' call_tmp_F1_count[2263540] _ir_F1_count[2263556])
          val _ic_[2217854]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead after last mention" "temp"
          const-val call_tmp[2217856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217858 'move' call_tmp[2217856](2217860 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1100497]))
          const-val cast_tmp[2217862]:c_void_ptr[149] "dead after last mention" "temp"
          (2217864 'move' cast_tmp[2217862](2217867 call chpl_here_alloc[187754] call_tmp[2217856] 29))
          (2217870 'move' _ic_[2217854](2217872 'cast' _ic_chpl_direct_counted_range_iter_helper[1100497] cast_tmp[2217862]))
          (2217875 'setcid' _ic_[2217854])
          (2217880 '.=' _ic_[2217854] more[1100500] 1)
          const-val tmp[2217884]:int(64)[13] "temp"
          (2217886 'move' tmp[2217884] call_tmp_F0_low[2263538])
          (2217891 '.=' _ic_[2217854] F0_low[1956543] tmp[2217884])
          const-val tmp[2217895]:int(64)[13] "temp"
          (2217897 'move' tmp[2217895] call_tmp_F1_count[2263540])
          (2217902 '.=' _ic_[2217854] F1_count[1956547] tmp[2217895])
          (2217906 '.=' _ic_[2217529] F3__iterator[1940101] _ic_[2217854])
          (2217910 'move' tmp[2217688](2217912 '.' _ic_[2217529] F3__iterator[1940101]))
          (2217915 'move' count[2217660](2217917 '.v' tmp[2217688] F1_count[1956547]))
          const-val call_tmp[2217920]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217922 'move' call_tmp[2217920](2217924 '<' count[2217660] 0))
          if call_tmp[2217920]
          {
            (2217930 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
          }
          (2217933 'move' tmp[2217690](2217935 '.' _ic_[2217529] F3__iterator[1940101]))
          (2217938 'move' count[2217664](2217940 '.v' tmp[2217690] F1_count[1956547]))
          const-val call_tmp[2217943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2217945 'move' call_tmp[2217943](2217947 '==' count[2217664] 0))
          if call_tmp[2217943]
          {
            const-val low[2217952]:int(64)[13] "temp"
            const-ref tmp[2217954]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2217956 'move' tmp[2217954](2217958 '.' _ic_[2217529] F3__iterator[1940101]))
            (2217961 'move' low[2217952](2217963 '.v' tmp[2217954] F0_low[1956543]))
            const-val call_tmp[2217966]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2217968 'move' call_tmp[2217966](2217970 'cast' uint(64)[115] low[2217952]))
            const-val call_tmp[2217973]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2217975 'move' call_tmp[2217973](2217977 '-' call_tmp[2217966] 1))
            const-val call_tmp[2217980]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2217982 'move' call_tmp[2217980](2217984 'cast' int(64)[13] call_tmp[2217973]))
            const-val low[2217987]:int(64)[13] "temp"
            const-ref tmp[2217989]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2217991 'move' tmp[2217989](2217993 '.' _ic_[2217529] F3__iterator[1940101]))
            (2217996 'move' low[2217987](2217998 '.v' tmp[2217989] F0_low[1956543]))
            val this_x0[2260248]:int(64)[13]
            val this_x1[2260250]:int(64)[13]
            (2218003 'move' this_x0[2260248] low[2217987])
            (2218007 'move' this_x1[2260250] call_tmp[2217980])
            (2260256 '.=' tmp[2217662] x0[1037175] this_x0[2260248])
            (2260260 '.=' tmp[2217662] x1[1037177] this_x1[2260250])
          }
          {
            const-val count[2218015]:int(64)[13] "temp"
            const-ref tmp[2218017]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2218019 'move' tmp[2218017](2218021 '.' _ic_[2217529] F3__iterator[1940101]))
            (2218024 'move' count[2218015](2218026 '.v' tmp[2218017] F1_count[1956547]))
            const-val call_tmp[2218029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2218031 'move' call_tmp[2218029](2218033 '-' count[2218015] 1))
            const-val low[2218036]:int(64)[13] "temp"
            const-ref tmp[2218038]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2218040 'move' tmp[2218038](2218042 '.' _ic_[2217529] F3__iterator[1940101]))
            (2218045 'move' low[2218036](2218047 '.v' tmp[2218038] F0_low[1956543]))
            const-val call_tmp[2218050]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2218052 'move' call_tmp[2218050](2218054 '+' low[2218036] call_tmp[2218029]))
            const-val low[2218057]:int(64)[13] "temp"
            const-ref tmp[2218059]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            (2218061 'move' tmp[2218059](2218063 '.' _ic_[2217529] F3__iterator[1940101]))
            (2218066 'move' low[2218057](2218068 '.v' tmp[2218059] F0_low[1956543]))
            val this_x0[2260262]:int(64)[13]
            val this_x1[2260264]:int(64)[13]
            (2218073 'move' this_x0[2260262] low[2218057])
            (2218077 'move' this_x1[2260264] call_tmp[2218050])
            (2260270 '.=' tmp[2217662] x0[1037175] this_x0[2260262])
            (2260274 '.=' tmp[2217662] x1[1037177] this_x1[2260264])
          }
          (2218085 '.=' _ic_[2217529] F4_tmp[1940103] tmp[2217662])
          (2218089 'noop')
          (2218090 'move' tmp[2217692](2218092 '.' _ic_[2217529] F4_tmp[1940103]))
          (2218095 'move' coerce_tmp[2217666](2218097 '.v' tmp[2217692] x0[1037175]))
          (2218100 'noop')
          (2218101 'move' tmp[2217694](2218103 '.' _ic_[2217529] F4_tmp[1940103]))
          (2218106 'move' coerce_tmp[2217668](2218108 '.v' tmp[2217694] x1[1037177]))
          (2218111 'noop')
          const-val _ir_F0_low[2265567]:int(64)[13] "temp"
          const-val _ir_F1_high[2265569]:int(64)[13] "temp"
          (2218114 'move' _ir_F0_low[2265567] coerce_tmp[2217666])
          (2218118 'move' _ir_F1_high[2265569] coerce_tmp[2217668])
          (2265559 'move' call_tmp_F0_low[2265551] _ir_F0_low[2265567])
          (2265564 'move' call_tmp_F1_high[2265553] _ir_F1_high[2265569])
          val _ic_[2218127]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead after last mention" "temp"
          const-val call_tmp[2218129]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2218131 'move' call_tmp[2218129](2218133 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1100243]))
          const-val cast_tmp[2218135]:c_void_ptr[149] "dead after last mention" "temp"
          (2218137 'move' cast_tmp[2218135](2218140 call chpl_here_alloc[187754] call_tmp[2218129] 28))
          (2218143 'move' _ic_[2218127](2218145 'cast' _ic_chpl_direct_param_stride_range_iter[1100243] cast_tmp[2218135]))
          (2218148 'setcid' _ic_[2218127])
          (2218153 '.=' _ic_[2218127] more[1100246] 1)
          const-val tmp[2218157]:int(64)[13] "temp"
          (2218159 'move' tmp[2218157] call_tmp_F0_low[2265551])
          (2218164 '.=' _ic_[2218127] F0_low[1958041] tmp[2218157])
          const-val tmp[2218168]:int(64)[13] "temp"
          (2218170 'move' tmp[2218168] call_tmp_F1_high[2265553])
          (2218175 '.=' _ic_[2218127] F1_high[1958045] tmp[2218168])
          (2218179 '.=' _ic_[2217529] F5__iterator[1940105] _ic_[2218127])
          (2218183 '.=' _ic_[2217529] F6_i[1940107] 0)
          (2218187 'move' tmp[2217696](2218189 '.' _ic_[2217529] F5__iterator[1940105]))
          (2218192 'move' low[2217672](2218194 '.v' tmp[2217696] F0_low[1958041]))
          (2218197 'move' tmp[2217698](2218199 '.' _ic_[2217529] F5__iterator[1940105]))
          (2218202 'move' high[2217674](2218204 '.v' tmp[2217698] F1_high[1958045]))
          (2218207 'move' tmp[2217700](2218209 '.' _ic_[2217529] F5__iterator[1940105]))
          (2218212 'move' low[2217676](2218214 '.v' tmp[2217700] F0_low[1958041]))
          (2218217 'move' tmp[2217702](2218219 '.' _ic_[2217529] F5__iterator[1940105]))
          (2218222 'move' high[2217678](2218224 '.v' tmp[2217702] F1_high[1958045]))
          (2218228 call chpl_checkIfRangeIterWillOverflow[1093055] low[2217676] high[2217678] 1 low[2217672] high[2217674] 1)
          const-val isFinished[2218235]:bool[10] "temp"
          val hasMore[2218237]:bool[10] "temp"
          CForLoop[2218239]
          {
            val _indexOfInterest_x0[2267264]:int(64)[13] "temp"
            val _indexOfInterest_x1[2267266]:uint(8)[100] "temp"
            val coerce_tmp[2218335]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            const-val tmp[2218337]:int(64)[13] "temp"
            ref tmp[2218339]:string[26] "temp"
            val tmp[2218341]:uint(8)[100] "temp"
            (2218343 'move' tmp[2218337](2218345 '.v' _ic_[2217529] F6_i[1940107]))
            (2218348 'move' tmp[2218339](2218350 '.' _ic_[2217529] F1_localThis[1940097]))
            (2218353 'move' coerce_tmp[2218335](2218355 '.v' tmp[2218339] buff[30737]))
            ref call_tmp[2218358]:uint(8)[100] "dead after last mention" "maybe param" "temp"
            (2218360 'move' call_tmp[2218358](2218362 'array_get' coerce_tmp[2218335] tmp[2218337]))
            (2218365 'move' tmp[2218341](2218367 'deref' call_tmp[2218358]))
            (2218369 '.=' _ic_[2217529] value[1940111] tmp[2218341])
            (2218373 'noop')
            (2218374 '.=' _ic_[2217529] more[1105207] 2)
            val tmp[2218378]:int(64)[13] "temp"
            const-val high[2218380]:int(64)[13] "temp"
            const-ref tmp[2218382]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2218384 'move' tmp[2218382](2218386 '.' _ic_[2217529] F5__iterator[1940105]))
            (2218389 'move' high[2218380](2218391 '.v' tmp[2218382] F1_high[1958045]))
            const-val tmp[2218394]:int(64)[13] "temp"
            (2218396 'move' tmp[2218394](2218398 '.v' _ic_[2217529] F6_i[1940107]))
            (2218401 'move' tmp[2218378](2218403 '<=' tmp[2218394] high[2218380]))
            (2218406 'move' hasMore[2218237](2218408 'cast' bool[10] tmp[2218378]))
            (2218411 'move' isFinished[2218235](2218413 '!' hasMore[2218237]))
            if isFinished[2218235]
            {
              (2218417 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2218420]:uint(8)[100] "temp"
            (2218422 'move' tmp[2218420](2218424 '.v' _ic_[2217529] value[1940111]))
            const-val tmp[2218427]:int(64)[13] "temp"
            (2218429 'move' tmp[2218427](2218431 '.v' _ic_[2217469] F1_i[1955924]))
            (2218434 '.=' _ic_[2217469] value[1955930] tmp[2218427])
            (2218438 '.=' _ic_[2217469] more[1093685] 2)
            val tmp[2218442]:int(64)[13] "temp"
            (2218444 'move' tmp[2218442](2218446 '.v' _ic_[2217469] value[1955930]))
            (2218449 'move' _indexOfInterest_x1[2267266] tmp[2218420])
            (2218453 'move' _indexOfInterest_x0[2267264] tmp[2218442])
            const-val i[2218457]:int(64)[13] "const" "index var" "insert auto destroy"
            (2218459 'move' i[2218457] _indexOfInterest_x0[2267264])
            const-val c[2218464]:uint(8)[100] "const" "index var" "insert auto destroy"
            (2218466 'move' c[2218464] _indexOfInterest_x1[2267266])
            if noSplits[2217337]
            {
              (2218473 '=' done[2217308] 1)
              const-val call_tmp[2218476]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218478 'move' call_tmp[2218476](2218481 call isSpace[36840] localx[2217303]))
              const-val call_tmp[2218483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218485 'move' call_tmp[2218483](2218487 '!' call_tmp[2218476]))
              if call_tmp[2218483]
              {
                (2218492 call =[38269] chunk[2217318] localx[2217303])
                (2218495 '=' yieldChunk[2217313] 1)
              }
            }
            {
              const-val call_tmp[2218500]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218502 'move' call_tmp[2218500](2218504 'cast' int(32)[95] c[2218464]))
              const-val call_tmp[2218507]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218509 'move' call_tmp[2218507](2218512 call isspace[181630] call_tmp[2218500]))
              const-val coerce_tmp[2218514]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2218516 'move' coerce_tmp[2218514](2218518 'cast' int(32)[95] 0))
              const-val call_tmp[2218521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218523 'move' call_tmp[2218521](2218525 '!=' call_tmp[2218507] coerce_tmp[2218514]))
              const-val cSpace[2218528]:bool[10] "dead at end of block" "insert auto destroy"
              (2218530 'move' cSpace[2218528] call_tmp[2218521])
              val tmp[2218533]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if inChunk[2217385]
              {
                (2218537 'move' tmp[2218533] 1)
              }
              {
                (2218541 'move' tmp[2218533] cSpace[2218528])
              }
              const-val call_tmp[2218545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218547 'move' call_tmp[2218545](2218549 '!' tmp[2218533]))
              if call_tmp[2218545]
              {
                (2218553 '=' chunkStart[2217390] i[2218457])
                (2218556 '=' inChunk[2217385] 1)
                const-val call_tmp[2218559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2218561 'move' call_tmp[2218559](2218563 '>' i[2218457] iEnd[2217380]))
                if call_tmp[2218559]
                {
                  const-val call_tmp[2218568]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[2218570]:range(int(64),boundedLow,false)[1084544] "temp"
                  (2218573 call chpl_build_low_bounded_range[1083937] chunkStart[2217390] ret_tmp[2218570])
                  (2218576 'move' call_tmp[2218568] ret_tmp[2218570])
                  const-val call_tmp[2218579]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref i_this[2218581]:string[26] "temp"
                  (2218583 'move' i_this[2218581](2218585 'set reference' localx[2217303]))
                  const-val call_tmp[2218587]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val ret_tmp[2218589]:string[26] "temp"
                  (2218592 call getSlice[1122532] i_this[2218581] call_tmp[2218568] ret_tmp[2218589])
                  (2218596 'move' call_tmp[2218587] ret_tmp[2218589])
                  (2218599 'move' call_tmp[2218579] call_tmp[2218587])
                  (2218603 call =[38269] chunk[2217318] call_tmp[2218579])
                  ref i_x[2218606]:string[26] "temp"
                  (2218608 'move' i_x[2218606](2218610 'set reference' call_tmp[2218579]))
                  (2218613 call deinit[30831] i_x[2218606])
                  (2218615 '=' yieldChunk[2217313] 1)
                  (2218618 '=' done[2217308] 1)
                }
              }
              {
                if inChunk[2217385]
                {
                  if cSpace[2218528]
                  {
                    ref i_lhs[2218627]:int(64)[13] "temp"
                    (2218629 'move' i_lhs[2218627](2218631 'set reference' splitCount[2217361]))
                    (2218633 '+=' i_lhs[2218627] 1)
                    val tmp[2218636]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    if limitSplits[2217356]
                    {
                      const-val maxsplit[2218640]:int(64)[13] "temp"
                      (2218642 'move' maxsplit[2218640] _ic__F1_maxsplit[2244685])
                      const-val call_tmp[2218647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2218649 'move' call_tmp[2218647](2218651 '>' splitCount[2217361] maxsplit[2218640]))
                      (2218654 'move' tmp[2218636] call_tmp[2218647])
                    }
                    {
                      (2218658 'move' tmp[2218636] 0)
                    }
                    if tmp[2218636]
                    {
                      const-val call_tmp[2218664]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218666]:range(int(64),boundedLow,false)[1084544] "temp"
                      (2218669 call chpl_build_low_bounded_range[1083937] chunkStart[2217390] ret_tmp[2218666])
                      (2218672 'move' call_tmp[2218664] ret_tmp[2218666])
                      const-val call_tmp[2218675]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2218677]:string[26] "temp"
                      (2218679 'move' i_this[2218677](2218681 'set reference' localx[2217303]))
                      const-val call_tmp[2218683]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218685]:string[26] "temp"
                      (2218688 call getSlice[1122532] i_this[2218677] call_tmp[2218664] ret_tmp[2218685])
                      (2218692 'move' call_tmp[2218683] ret_tmp[2218685])
                      (2218695 'move' call_tmp[2218675] call_tmp[2218683])
                      (2218699 call =[38269] chunk[2217318] call_tmp[2218675])
                      ref i_x[2218702]:string[26] "temp"
                      (2218704 'move' i_x[2218702](2218706 'set reference' call_tmp[2218675]))
                      (2218709 call deinit[30831] i_x[2218702])
                      (2218711 '=' yieldChunk[2217313] 1)
                      (2218714 '=' done[2217308] 1)
                    }
                    {
                      const-val call_tmp[2218718]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2218720 'move' call_tmp[2218718](2218722 '-' i[2218457] 1))
                      const-val call_tmp[2218725]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218727]:range(int(64),bounded,false)[1023946] "temp"
                      (2218730 call chpl_build_bounded_range[455195] chunkStart[2217390] call_tmp[2218718] ret_tmp[2218727])
                      (2218734 'move' call_tmp[2218725] ret_tmp[2218727])
                      const-val call_tmp[2218737]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2218739]:string[26] "temp"
                      (2218741 'move' i_this[2218739](2218743 'set reference' localx[2217303]))
                      const-val call_tmp[2218745]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218747]:string[26] "temp"
                      (2218750 call getSlice[1108350] i_this[2218739] call_tmp[2218725] ret_tmp[2218747])
                      (2218754 'move' call_tmp[2218745] ret_tmp[2218747])
                      (2218757 'move' call_tmp[2218737] call_tmp[2218745])
                      (2218761 call =[38269] chunk[2217318] call_tmp[2218737])
                      ref i_x[2218764]:string[26] "temp"
                      (2218766 'move' i_x[2218764](2218768 'set reference' call_tmp[2218737]))
                      (2218771 call deinit[30831] i_x[2218764])
                      (2218773 '=' yieldChunk[2217313] 1)
                      (2218776 '=' inChunk[2217385] 0)
                    }
                  }
                  {
                    const-val call_tmp[2218781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2218783 'move' call_tmp[2218781](2218785 '>' i[2218457] iEnd[2217380]))
                    if call_tmp[2218781]
                    {
                      const-val call_tmp[2218790]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218792]:range(int(64),boundedLow,false)[1084544] "temp"
                      (2218795 call chpl_build_low_bounded_range[1083937] chunkStart[2217390] ret_tmp[2218792])
                      (2218798 'move' call_tmp[2218790] ret_tmp[2218792])
                      const-val call_tmp[2218801]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      ref i_this[2218803]:string[26] "temp"
                      (2218805 'move' i_this[2218803](2218807 'set reference' localx[2217303]))
                      const-val call_tmp[2218809]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[2218811]:string[26] "temp"
                      (2218814 call getSlice[1122532] i_this[2218803] call_tmp[2218790] ret_tmp[2218811])
                      (2218818 'move' call_tmp[2218809] ret_tmp[2218811])
                      (2218821 'move' call_tmp[2218801] call_tmp[2218809])
                      (2218825 call =[38269] chunk[2217318] call_tmp[2218801])
                      ref i_x[2218828]:string[26] "temp"
                      (2218830 'move' i_x[2218828](2218832 'set reference' call_tmp[2218801]))
                      (2218835 call deinit[30831] i_x[2218828])
                      (2218837 '=' yieldChunk[2217313] 1)
                      (2218840 '=' done[2217308] 1)
                    }
                  }
                }
              }
            }
            if yieldChunk[2217313]
            {
              ref i_x[2218850]:string[26] "temp"
              (2218852 'move' i_x[2218850](2218854 'set reference' chunk[2217318]))
              val ret[2218856]:string[26] "dead after last mention" "RVV" "temp"
              const-val tmp[2218858]:string[26] "dead after last mention" "temp"
              (2218861 call init=[30771] tmp[2218858] i_x[2218850])
              (2218864 'move' ret[2218856] tmp[2218858])
              const-val s[2218867]:string[26] "const" "index var" "insert auto destroy"
              (2218869 'move' s[2218867] ret[2218856])
              ref i_x[2218872]:string[26] "temp"
              (2218874 'move' i_x[2218872](2218876 'set reference' s[2218867]))
              val ret[2218878]:string[26] "dead after last mention" "RVV" "temp"
              const-val tmp[2218880]:string[26] "dead after last mention" "temp"
              (2218883 call init=[30771] tmp[2218880] i_x[2218872])
              (2218886 'move' ret[2218878] tmp[2218880])
              const-val chpl__elidedIdx[2218889]:string[26] "const" "index var" "insert auto destroy"
              (2218891 'move' chpl__elidedIdx[2218889] ret[2218878])
              ref i_lhs[2218894]:int(64)[13] "temp"
              (2218896 'move' i_lhs[2218894](2218898 'set reference' numElements[2217013]))
              (2218900 '+=' i_lhs[2218894] 1)
              const-val call_tmp[2218903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2218905 'move' call_tmp[2218903](2218907 '>' numElements[2217013] 1))
              if call_tmp[2218903]
              {
                ref i_x[2218912]:string[26] "temp"
                (2218914 'move' i_x[2218912](2218916 'set reference' chpl__elidedIdx[2218889]))
                (2218919 call deinit[30831] i_x[2218912])
                const-val moreVal1[2218921]:int(64)[13] "const" "temp"
                (2218923 '=' moreVal1[2218921](2218925 '.v' _ic_[2217469] more[1093685]))
                const-val moreValNeg1[2218928]:int(64)[13] "const" "temp"
                (2218930 'move' moreValNeg1[2218928](2218932 'u-' moreVal1[2218921]))
                (2218934 '.=' _ic_[2217469] more[1093685] moreValNeg1[2218928])
                (2218939 call advance[1093708] _ic_[2217469])
                const-val moreVal2[2218941]:int(64)[13] "const" "temp"
                (2218943 '=' moreVal2[2218941](2218945 '.v' _ic_[2217529] more[1105207]))
                const-val moreValNeg2[2218948]:int(64)[13] "const" "temp"
                (2218950 'move' moreValNeg2[2218948](2218952 'u-' moreVal2[2218941]))
                (2218954 '.=' _ic_[2217529] more[1105207] moreValNeg2[2218948])
                (2218959 call advance[1105230] _ic_[2217529])
                const-val call_tmp[2218968]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2218970 'move' call_tmp[2218968](2218972 'cast_to_void_star' _ic_[2217469]))
                (2218975 call chpl_here_free[188093] call_tmp[2218968])
                const-val call_tmp[2218984]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2218986 'move' call_tmp[2218984](2218988 'cast_to_void_star' _ic_[2217529]))
                (2218991 call chpl_here_free[188093] call_tmp[2218984])
                ref i_x[2218993]:string[26] "temp"
                (2218995 'move' i_x[2218993](2218997 'set reference' chunk[2217318]))
                (2219000 call deinit[30831] i_x[2218993])
                ref i_x[2219002]:string[26] "temp"
                (2219004 'move' i_x[2219002](2219006 'set reference' localx[2217303]))
                (2219009 call deinit[30831] i_x[2219002])
                ref i_x[2219011]:string[26] "temp"
                (2219013 'move' i_x[2219011](2219015 'set reference' s[2218867]))
                (2219018 call deinit[30831] i_x[2219011])
                break _breakLabel[2222786] _breakLabel[2222786]
              }
              ref i_x[2219032]:string[26] "temp"
              (2219034 'move' i_x[2219032](2219036 'set reference' chpl__elidedIdx[2218889]))
              (2219039 call deinit[30831] i_x[2219032])
              ref i_x[2219041]:string[26] "temp"
              (2219043 'move' i_x[2219041](2219045 'set reference' s[2218867]))
              (2219048 call deinit[30831] i_x[2219041])
              (2219050 '=' yieldChunk[2217313] 0)
            }
            if done[2217308]
            {
              const-val moreVal1[2219056]:int(64)[13] "const" "temp"
              (2219058 '=' moreVal1[2219056](2219060 '.v' _ic_[2217469] more[1093685]))
              const-val moreValNeg1[2219063]:int(64)[13] "const" "temp"
              (2219065 'move' moreValNeg1[2219063](2219067 'u-' moreVal1[2219056]))
              (2219069 '.=' _ic_[2217469] more[1093685] moreValNeg1[2219063])
              (2219074 call advance[1093708] _ic_[2217469])
              const-val moreVal2[2219076]:int(64)[13] "const" "temp"
              (2219078 '=' moreVal2[2219076](2219080 '.v' _ic_[2217529] more[1105207]))
              const-val moreValNeg2[2219083]:int(64)[13] "const" "temp"
              (2219085 'move' moreValNeg2[2219083](2219087 'u-' moreVal2[2219076]))
              (2219089 '.=' _ic_[2217529] more[1105207] moreValNeg2[2219083])
              (2219094 call advance[1105230] _ic_[2217529])
              break _breakLabel[2219195] _breakLabel[2219195]
            }
            {
              const-val tmp[2218241]:int(64)[13] "temp"
              (2218243 'move' tmp[2218241](2218245 '.v' _ic_[2217469] F3_coerce_tmp[1955928]))
              (2218248 '.=' _ic_[2217469] F1_i[1955924] tmp[2218241])
              const-val tmp[2218252]:int(64)[13] "temp"
              const-ref tmp[2218254]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
              (2218256 'move' tmp[2218254](2218258 '.' _ic_[2217529] F5__iterator[1940105]))
              (2218261 'move' tmp[2218252](2218263 '.v' tmp[2218254] F0_low[1958041]))
              (2218266 '.=' _ic_[2217529] F7_low[1940109] tmp[2218252])
              const-val tmp[2218270]:int(64)[13] "temp"
              (2218272 'move' tmp[2218270](2218274 '.v' _ic_[2217529] F7_low[1940109]))
              (2218277 '.=' _ic_[2217529] F6_i[1940107] tmp[2218270])
            }
            {
              val tmp[2218282]:int(64)[13] "temp"
              const-val tmp[2218284]:int(64)[13] "temp"
              (2218286 'move' tmp[2218284](2218288 '.v' _ic_[2217469] F1_i[1955924]))
              const-val tmp[2218291]:int(64)[13] "temp"
              (2218293 'move' tmp[2218291](2218295 '.v' _ic_[2217469] F2_end[1955926]))
              (2218298 'move' tmp[2218282](2218300 '<=' tmp[2218284] tmp[2218291]))
              tmp[2218282]
            }
            {
              val tmp[2218305]:int(64)[13] "temp"
              (2218307 'move' tmp[2218305](2218309 '.v' _ic_[2217469] F1_i[1955924]))
              (2218312 '+=' tmp[2218305] 1)
              (2218315 '.=' _ic_[2217469] F1_i[1955924] tmp[2218305])
              val tmp[2218319]:int(64)[13] "temp"
              (2218321 'move' tmp[2218319](2218323 '.v' _ic_[2217529] F6_i[1940107]))
              (2218326 '+=' tmp[2218319] 1)
              (2218329 '.=' _ic_[2217529] F6_i[1940107] tmp[2218319])
            }
          }
          val tmp[2219099]:int(64)[13] "temp"
          const-val high[2219101]:int(64)[13] "temp"
          const-ref tmp[2219103]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          (2219105 'move' tmp[2219103](2219107 '.' _ic_[2217529] F5__iterator[1940105]))
          (2219110 'move' high[2219101](2219112 '.v' tmp[2219103] F1_high[1958045]))
          const-val tmp[2219115]:int(64)[13] "temp"
          (2219117 'move' tmp[2219115](2219119 '.v' _ic_[2217529] F6_i[1940107]))
          (2219122 'move' tmp[2219099](2219124 '<=' tmp[2219115] high[2219101]))
          (2219127 'move' hasMore[2218237](2219129 'cast' bool[10] tmp[2219099]))
          if hasMore[2218237]
          {
            (2219134 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          val tmp[2219137]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
          val tmp[2219139]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
          val tmp[2219141]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
          const-ref tmp[2219143]:string[26] "temp"
          (2219145 'move' tmp[2219137](2219147 '.v' _ic_[2217529] F5__iterator[1940105]))
          const-val call_tmp[2219150]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219152 'move' call_tmp[2219150](2219154 'cast_to_void_star' tmp[2219137]))
          (2219157 call chpl_here_free[188093] call_tmp[2219150])
          (2219159 'move' tmp[2219139](2219161 '.v' _ic_[2217529] F3__iterator[1940101]))
          const-val call_tmp[2219164]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219166 'move' call_tmp[2219164](2219168 'cast_to_void_star' tmp[2219139]))
          (2219171 call chpl_here_free[188093] call_tmp[2219164])
          (2219173 'move' tmp[2219141](2219175 '.v' _ic_[2217529] F2__iterator[1940099]))
          const-val call_tmp[2219178]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219180 'move' call_tmp[2219178](2219182 'cast_to_void_star' tmp[2219141]))
          (2219185 call chpl_here_free[188093] call_tmp[2219178])
          (2219187 'move' tmp[2219143](2219189 '.' _ic_[2217529] F1_localThis[1940097]))
          (2219193 call deinit[30831] tmp[2219143])
          label _breakLabel[2219195]
          const-val call_tmp[2219204]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219206 'move' call_tmp[2219204](2219208 'cast_to_void_star' _ic_[2217469]))
          (2219211 call chpl_here_free[188093] call_tmp[2219204])
          const-val call_tmp[2219220]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219222 'move' call_tmp[2219220](2219224 'cast_to_void_star' _ic_[2217529]))
          (2219227 call chpl_here_free[188093] call_tmp[2219220])
          ref i_x[2219229]:string[26] "temp"
          (2219231 'move' i_x[2219229](2219233 'set reference' chunk[2217318]))
          (2219236 call deinit[30831] i_x[2219229])
          ref i_x[2219238]:string[26] "temp"
          (2219240 'move' i_x[2219238](2219242 'set reference' localx[2217303]))
          (2219245 call deinit[30831] i_x[2219238])
        }
        label _enddoSplitWSNoEnc[2219248]
      }
      {
        const-val coerce_tmp[2219267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2219269 'move' coerce_tmp[2219267](2219271 '.v' localX[2215851] buffLen[30719]))
        const-val call_tmp[2219274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2219276 'move' call_tmp[2219274](2219278 '==' coerce_tmp[2219267] 0))
        const-val call_tmp[2219281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2219283 'move' call_tmp[2219281](2219285 '!' call_tmp[2219274]))
        if call_tmp[2219281]
        {
          const-val ret[2219296]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2219298]:string[26] "dead at end of block" "insert auto destroy"
          (2219301 call init[30760] ret[2219298])
          const-val coerce_tmp[2219303]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2219305 'move' coerce_tmp[2219303](2219307 '.v' localX[2215851] cachedNumCodepoints[30731]))
          (2219310 '.=' ret[2219298] cachedNumCodepoints[30731] coerce_tmp[2219303])
          (2219315 call initWithBorrowedBuffer[946797] ret[2219298] i_this[2217022])
          (2219318 'move' ret[2219296] ret[2219298])
          const localThis[2219321]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2219323 'move' localThis[2219321] ret[2219296])
          val done[2219326]:bool[10] "dead at end of block" "insert auto destroy"
          (2219328 'move' done[2219326] 0)
          val yieldChunk[2219331]:bool[10] "dead at end of block" "insert auto destroy"
          (2219333 'move' yieldChunk[2219331] 0)
          val chunk[2219336]:string[26] "dead at end of block" "insert auto destroy"
          (2219339 call init[30760] chunk[2219336])
          const-val maxsplit[2219341]:int(64)[13] "temp"
          (2219343 'move' maxsplit[2219341] _ic__F1_maxsplit[2244434])
          const-val call_tmp[2219348]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219350 'move' call_tmp[2219348](2219352 '==' maxsplit[2219341] 0))
          const-val noSplits[2219355]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2219357 'move' noSplits[2219355] call_tmp[2219348])
          const-val maxsplit[2219360]:int(64)[13] "temp"
          (2219362 'move' maxsplit[2219360] _ic__F1_maxsplit[2244434])
          const-val call_tmp[2219367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219369 'move' call_tmp[2219367](2219371 '>' maxsplit[2219360] 0))
          const-val limitSplits[2219374]:bool[10] "dead at end of block" "const" "insert auto destroy"
          (2219376 'move' limitSplits[2219374] call_tmp[2219367])
          val splitCount[2219379]:int(64)[13] "dead at end of block" "insert auto destroy"
          (2219381 'move' splitCount[2219379] 0)
          const-val coerce_tmp[2219384]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2219386 'move' coerce_tmp[2219384](2219388 '.v' localThis[2219321] buffLen[30719]))
          const-val call_tmp[2219391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219393 'move' call_tmp[2219391](2219395 '-' coerce_tmp[2219384] 2))
          const-val iEnd[2219398]:byteIndex[28170] "dead at end of block" "const" "insert auto destroy"
          (2219401 call init=[28145] iEnd[2219398] call_tmp[2219391])
          val inChunk[2219404]:bool[10] "dead at end of block" "insert auto destroy"
          (2219406 'move' inChunk[2219404] 0)
          val chunkStart[2219409]:byteIndex[28170] "dead at end of block" "insert auto destroy"
          (2219412 call init[28097] chunkStart[2219409])
          const-val default_arg_start[2219418]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
          const-val ret[2219420]:byteIndex[28170] "dead after last mention" "RVV" "temp"
          val cpi[2219422]:byteIndex[28170] "dead at end of block" "insert auto destroy"
          (2219425 call init[28097] cpi[2219422])
          (2219427 '.=' cpi[2219422] _bindex[28091] 0)
          (2219431 'move' ret[2219420] cpi[2219422])
          (2219434 'move' default_arg_start[2219418] ret[2219420])
          ref i_this[2219437]:string[26] "temp"
          (2219439 'move' i_this[2219437](2219441 'set reference' localThis[2219321]))
          const-val ret[2219526]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2219528]:string[26] "dead at end of block" "insert auto destroy"
          (2219531 call init[30760] ret[2219528])
          const-val coerce_tmp[2219533]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2219535 'move' coerce_tmp[2219533](2219537 '.v' localThis[2219321] cachedNumCodepoints[30731]))
          (2219540 '.=' ret[2219528] cachedNumCodepoints[30731] coerce_tmp[2219533])
          (2219545 call initWithBorrowedBuffer[946797] ret[2219528] i_this[2219437])
          (2219548 'move' ret[2219526] ret[2219528])
          val localThis[2219551]:string[26] "dead at end of block" "insert auto destroy"
          (2219553 'move' localThis[2219551] ret[2219526])
          ref i_this[2219556]:string[26] "temp"
          (2219558 'move' i_this[2219556](2219560 'set reference' localThis[2219551]))
          const-val n[2219562]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[2219564]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (2219566 'move' coerce_tmp[2219564](2219568 '.v' localThis[2219551] cachedNumCodepoints[30731]))
          (2219571 '=' n[2219562] coerce_tmp[2219564])
          (2219574 'noop')
          const-val call_tmp[2219575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219577 'move' call_tmp[2219575](2219580 call countNumCodepoints[181346] i_this[2219556]))
          const-val call_tmp[2219582]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219584 'move' call_tmp[2219582](2219586 '!=' coerce_tmp[2219564] call_tmp[2219575]))
          if call_tmp[2219582]
          {
            (2219592 call halt[154071] "Encountered corrupt string metadata")
          }
          val ret[2219595]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2219597 'move' ret[2219595](2219599 '.v' localThis[2219551] buffLen[30719]))
          const-val call_tmp[2219602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2219604 'move' call_tmp[2219602](2219606 '==' n[2219562] ret[2219595]))
          if call_tmp[2219602]
          {
            val ret[2219620]:int(64)[13] "dead after last mention" "RVV" "temp"
            (2219622 'move' ret[2219620](2219624 '.v' localThis[2219321] buffLen[30719]))
            const-val call_tmp[2219627]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2219629 'move' call_tmp[2219627](2219631 '-' ret[2219620] 1))
            const-val call_tmp[2219634]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[2219636]:range(int(64),bounded,false)[1023946] "temp"
            (2219639 call chpl_build_bounded_range[455195] 0 call_tmp[2219627] ret_tmp[2219636])
            (2219643 'move' call_tmp[2219634] ret_tmp[2219636])
            const-val call_tmp_F0_this[2252622]:range(int(64),bounded,false)[1023946] "temp"
            const-val _ir_F0_this[2252630]:range(int(64),bounded,false)[1023946] "temp"
            (2219650 'move' _ir_F0_this[2252630] call_tmp[2219634])
            (2252628 'move' call_tmp_F0_this[2252622] _ir_F0_this[2252630])
            val _ic_[2219659]:_ic_these_range_int64_t_bounded_F[1093682] "dead after last mention" "temp"
            const-val call_tmp[2219661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2219663 'move' call_tmp[2219661](2219665 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1093682]))
            const-val cast_tmp[2219667]:c_void_ptr[149] "dead after last mention" "temp"
            (2219669 'move' cast_tmp[2219667](2219672 call chpl_here_alloc[187754] call_tmp[2219661] 27))
            (2219675 'move' _ic_[2219659](2219677 'cast' _ic_these_range_int64_t_bounded_F[1093682] cast_tmp[2219667]))
            (2219680 'setcid' _ic_[2219659])
            (2219685 '.=' _ic_[2219659] more[1093685] 1)
            const-val tmp[2219689]:range(int(64),bounded,false)[1023946] "temp"
            (2219691 'move' tmp[2219689] call_tmp_F0_this[2252622])
            (2219696 '.=' _ic_[2219659] F0_this[1955920] tmp[2219689])
            val _ic_[2219720]:_ic_chpl_bytes__ref_string[1105204] "dead after last mention" "temp"
            const-val call_tmp[2219722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2219724 'move' call_tmp[2219722](2219726 'sizeof_bundle' _ic_chpl_bytes__ref_string[1105204]))
            const-val cast_tmp[2219728]:c_void_ptr[149] "dead after last mention" "temp"
            (2219730 'move' cast_tmp[2219728](2219733 call chpl_here_alloc[187754] call_tmp[2219722] 31))
            (2219736 'move' _ic_[2219720](2219738 'cast' _ic_chpl_bytes__ref_string[1105204] cast_tmp[2219728]))
            (2219741 'setcid' _ic_[2219720])
            (2219746 '.=' _ic_[2219720] more[1105207] 1)
            (2219757 '.=' _ic_[2219720] F0_this[1940093] i_this[2219437])
            const-val coerce_tmp[2219788]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2219790]:range(int(64),bounded,false)[1023946] "temp"
            ref tmp[2219792]:range(int(64),bounded,false)[1023946] "temp"
            val tmp[2219794]:int(64)[13] "temp"
            ref tmp[2219796]:range(int(64),bounded,false)[1023946] "temp"
            (2219798 'move' tmp[2219790](2219800 '.v' _ic_[2219659] F0_this[1955920]))
            (2219804 call checkIfIterWillOverflow[1092793] tmp[2219790] 1)
            (2219807 '.=' _ic_[2219659] F1_i[1955924] 0)
            (2219811 'move' tmp[2219792](2219813 '.' _ic_[2219659] F0_this[1955920]))
            (2219816 'move' tmp[2219794](2219818 '.v' tmp[2219792] _low[1023908]))
            (2219821 '.=' _ic_[2219659] F3_coerce_tmp[1955928] tmp[2219794])
            (2219825 'noop')
            (2219826 'move' tmp[2219796](2219828 '.' _ic_[2219659] F0_this[1955920]))
            (2219831 'move' coerce_tmp[2219788](2219833 '.v' tmp[2219796] _high[1023913]))
            (2219836 '.=' _ic_[2219659] F2_end[1955926] coerce_tmp[2219788])
            (2219840 'noop')
            const-val call_tmp_F0_low[2262105]:int(64)[13] "temp"
            const-val call_tmp_F1_count[2262107]:int(64)[13] "temp"
            const-val coerce_tmp[2219843]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val call_tmp_F0_low[2263562]:int(64)[13] "temp"
            const-val call_tmp_F1_count[2263564]:int(64)[13] "temp"
            const-val low[2219847]:int(64)[13] "temp"
            const-val count[2219849]:int(64)[13] "temp"
            const-val count[2219851]:int(64)[13] "temp"
            val tmp[2219853]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val count[2219855]:int(64)[13] "temp"
            const-val coerce_tmp[2219857]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val coerce_tmp[2219859]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            const-val call_tmp_F0_low[2265575]:int(64)[13] "temp"
            const-val call_tmp_F1_high[2265577]:int(64)[13] "temp"
            const-val low[2219863]:int(64)[13] "temp"
            const-val high[2219865]:int(64)[13] "temp"
            const-val low[2219867]:int(64)[13] "temp"
            const-val high[2219869]:int(64)[13] "temp"
            const-ref tmp[2219871]:string[26] "temp"
            ref tmp[2219873]:string[26] "temp"
            const-ref tmp[2219875]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2219877]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2219879]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            const-ref tmp[2219881]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            const-ref tmp[2219883]:2*int(64)[1037179] "temp"
            const-ref tmp[2219885]:2*int(64)[1037179] "temp"
            const-ref tmp[2219887]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2219889]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2219891]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            const-ref tmp[2219893]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2219895 'move' tmp[2219871](2219897 '.v' _ic_[2219720] F0_this[1940093]))
            const-val ret[2219900]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2219902]:string[26] "dead at end of block" "insert auto destroy"
            (2219905 call init[30760] ret[2219902])
            const-val coerce_tmp[2219907]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2219909 'move' coerce_tmp[2219907](2219911 '.v' tmp[2219871] cachedNumCodepoints[30731]))
            (2219914 '.=' ret[2219902] cachedNumCodepoints[30731] coerce_tmp[2219907])
            (2219919 call initWithBorrowedBuffer[946797] ret[2219902] tmp[2219871])
            (2219922 'move' ret[2219900] ret[2219902])
            (2219925 '.=' _ic_[2219720] F1_localThis[1940097] ret[2219900])
            (2219929 'move' tmp[2219873](2219931 '.' _ic_[2219720] F1_localThis[1940097]))
            (2219934 'move' coerce_tmp[2219843](2219936 '.v' tmp[2219873] buffLen[30719]))
            const-val _ir_F0_low[2262121]:int(64)[13] "temp"
            const-val _ir_F1_count[2262123]:int(64)[13] "temp"
            (2219941 'move' _ir_F0_low[2262121] 0)
            (2219945 'move' _ir_F1_count[2262123] coerce_tmp[2219843])
            (2262113 'move' call_tmp_F0_low[2262105] _ir_F0_low[2262121])
            (2262118 'move' call_tmp_F1_count[2262107] _ir_F1_count[2262123])
            val _ic_[2219954]:_ic_chpl_direct_counted_range_iter[1100747] "dead after last mention" "temp"
            const-val call_tmp[2219956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2219958 'move' call_tmp[2219956](2219960 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1100747]))
            const-val cast_tmp[2219962]:c_void_ptr[149] "dead after last mention" "temp"
            (2219964 'move' cast_tmp[2219962](2219967 call chpl_here_alloc[187754] call_tmp[2219956] 30))
            (2219970 'move' _ic_[2219954](2219972 'cast' _ic_chpl_direct_counted_range_iter[1100747] cast_tmp[2219962]))
            (2219975 'setcid' _ic_[2219954])
            (2219980 '.=' _ic_[2219954] more[1100750] 1)
            const-val tmp[2219984]:int(64)[13] "temp"
            (2219986 'move' tmp[2219984] call_tmp_F0_low[2262105])
            (2219991 '.=' _ic_[2219954] F0_low[1952071] tmp[2219984])
            const-val tmp[2219995]:int(64)[13] "temp"
            (2219997 'move' tmp[2219995] call_tmp_F1_count[2262107])
            (2220002 '.=' _ic_[2219954] F1_count[1952075] tmp[2219995])
            (2220006 '.=' _ic_[2219720] F2__iterator[1940099] _ic_[2219954])
            (2220010 'move' tmp[2219875](2220012 '.' _ic_[2219720] F2__iterator[1940099]))
            (2220015 'move' low[2219847](2220017 '.v' tmp[2219875] F0_low[1952071]))
            (2220020 'move' tmp[2219877](2220022 '.' _ic_[2219720] F2__iterator[1940099]))
            (2220025 'move' count[2219849](2220027 '.v' tmp[2219877] F1_count[1952075]))
            const-val _ir_F0_low[2263578]:int(64)[13] "temp"
            const-val _ir_F1_count[2263580]:int(64)[13] "temp"
            (2220032 'move' _ir_F0_low[2263578] low[2219847])
            (2220036 'move' _ir_F1_count[2263580] count[2219849])
            (2263570 'move' call_tmp_F0_low[2263562] _ir_F0_low[2263578])
            (2263575 'move' call_tmp_F1_count[2263564] _ir_F1_count[2263580])
            val _ic_[2220045]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead after last mention" "temp"
            const-val call_tmp[2220047]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2220049 'move' call_tmp[2220047](2220051 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1100497]))
            const-val cast_tmp[2220053]:c_void_ptr[149] "dead after last mention" "temp"
            (2220055 'move' cast_tmp[2220053](2220058 call chpl_here_alloc[187754] call_tmp[2220047] 29))
            (2220061 'move' _ic_[2220045](2220063 'cast' _ic_chpl_direct_counted_range_iter_helper[1100497] cast_tmp[2220053]))
            (2220066 'setcid' _ic_[2220045])
            (2220071 '.=' _ic_[2220045] more[1100500] 1)
            const-val tmp[2220075]:int(64)[13] "temp"
            (2220077 'move' tmp[2220075] call_tmp_F0_low[2263562])
            (2220082 '.=' _ic_[2220045] F0_low[1956543] tmp[2220075])
            const-val tmp[2220086]:int(64)[13] "temp"
            (2220088 'move' tmp[2220086] call_tmp_F1_count[2263564])
            (2220093 '.=' _ic_[2220045] F1_count[1956547] tmp[2220086])
            (2220097 '.=' _ic_[2219720] F3__iterator[1940101] _ic_[2220045])
            (2220101 'move' tmp[2219879](2220103 '.' _ic_[2219720] F3__iterator[1940101]))
            (2220106 'move' count[2219851](2220108 '.v' tmp[2219879] F1_count[1956547]))
            const-val call_tmp[2220111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2220113 'move' call_tmp[2220111](2220115 '<' count[2219851] 0))
            if call_tmp[2220111]
            {
              (2220121 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
            }
            (2220124 'move' tmp[2219881](2220126 '.' _ic_[2219720] F3__iterator[1940101]))
            (2220129 'move' count[2219855](2220131 '.v' tmp[2219881] F1_count[1956547]))
            const-val call_tmp[2220134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2220136 'move' call_tmp[2220134](2220138 '==' count[2219855] 0))
            if call_tmp[2220134]
            {
              const-val low[2220143]:int(64)[13] "temp"
              const-ref tmp[2220145]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2220147 'move' tmp[2220145](2220149 '.' _ic_[2219720] F3__iterator[1940101]))
              (2220152 'move' low[2220143](2220154 '.v' tmp[2220145] F0_low[1956543]))
              const-val call_tmp[2220157]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220159 'move' call_tmp[2220157](2220161 'cast' uint(64)[115] low[2220143]))
              const-val call_tmp[2220164]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220166 'move' call_tmp[2220164](2220168 '-' call_tmp[2220157] 1))
              const-val call_tmp[2220171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220173 'move' call_tmp[2220171](2220175 'cast' int(64)[13] call_tmp[2220164]))
              const-val low[2220178]:int(64)[13] "temp"
              const-ref tmp[2220180]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2220182 'move' tmp[2220180](2220184 '.' _ic_[2219720] F3__iterator[1940101]))
              (2220187 'move' low[2220178](2220189 '.v' tmp[2220180] F0_low[1956543]))
              val this_x0[2260276]:int(64)[13]
              val this_x1[2260278]:int(64)[13]
              (2220194 'move' this_x0[2260276] low[2220178])
              (2220198 'move' this_x1[2260278] call_tmp[2220171])
              (2260284 '.=' tmp[2219853] x0[1037175] this_x0[2260276])
              (2260288 '.=' tmp[2219853] x1[1037177] this_x1[2260278])
            }
            {
              const-val count[2220206]:int(64)[13] "temp"
              const-ref tmp[2220208]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2220210 'move' tmp[2220208](2220212 '.' _ic_[2219720] F3__iterator[1940101]))
              (2220215 'move' count[2220206](2220217 '.v' tmp[2220208] F1_count[1956547]))
              const-val call_tmp[2220220]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220222 'move' call_tmp[2220220](2220224 '-' count[2220206] 1))
              const-val low[2220227]:int(64)[13] "temp"
              const-ref tmp[2220229]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2220231 'move' tmp[2220229](2220233 '.' _ic_[2219720] F3__iterator[1940101]))
              (2220236 'move' low[2220227](2220238 '.v' tmp[2220229] F0_low[1956543]))
              const-val call_tmp[2220241]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220243 'move' call_tmp[2220241](2220245 '+' low[2220227] call_tmp[2220220]))
              const-val low[2220248]:int(64)[13] "temp"
              const-ref tmp[2220250]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
              (2220252 'move' tmp[2220250](2220254 '.' _ic_[2219720] F3__iterator[1940101]))
              (2220257 'move' low[2220248](2220259 '.v' tmp[2220250] F0_low[1956543]))
              val this_x0[2260290]:int(64)[13]
              val this_x1[2260292]:int(64)[13]
              (2220264 'move' this_x0[2260290] low[2220248])
              (2220268 'move' this_x1[2260292] call_tmp[2220241])
              (2260298 '.=' tmp[2219853] x0[1037175] this_x0[2260290])
              (2260302 '.=' tmp[2219853] x1[1037177] this_x1[2260292])
            }
            (2220276 '.=' _ic_[2219720] F4_tmp[1940103] tmp[2219853])
            (2220280 'noop')
            (2220281 'move' tmp[2219883](2220283 '.' _ic_[2219720] F4_tmp[1940103]))
            (2220286 'move' coerce_tmp[2219857](2220288 '.v' tmp[2219883] x0[1037175]))
            (2220291 'noop')
            (2220292 'move' tmp[2219885](2220294 '.' _ic_[2219720] F4_tmp[1940103]))
            (2220297 'move' coerce_tmp[2219859](2220299 '.v' tmp[2219885] x1[1037177]))
            (2220302 'noop')
            const-val _ir_F0_low[2265591]:int(64)[13] "temp"
            const-val _ir_F1_high[2265593]:int(64)[13] "temp"
            (2220305 'move' _ir_F0_low[2265591] coerce_tmp[2219857])
            (2220309 'move' _ir_F1_high[2265593] coerce_tmp[2219859])
            (2265583 'move' call_tmp_F0_low[2265575] _ir_F0_low[2265591])
            (2265588 'move' call_tmp_F1_high[2265577] _ir_F1_high[2265593])
            val _ic_[2220318]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead after last mention" "temp"
            const-val call_tmp[2220320]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2220322 'move' call_tmp[2220320](2220324 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1100243]))
            const-val cast_tmp[2220326]:c_void_ptr[149] "dead after last mention" "temp"
            (2220328 'move' cast_tmp[2220326](2220331 call chpl_here_alloc[187754] call_tmp[2220320] 28))
            (2220334 'move' _ic_[2220318](2220336 'cast' _ic_chpl_direct_param_stride_range_iter[1100243] cast_tmp[2220326]))
            (2220339 'setcid' _ic_[2220318])
            (2220344 '.=' _ic_[2220318] more[1100246] 1)
            const-val tmp[2220348]:int(64)[13] "temp"
            (2220350 'move' tmp[2220348] call_tmp_F0_low[2265575])
            (2220355 '.=' _ic_[2220318] F0_low[1958041] tmp[2220348])
            const-val tmp[2220359]:int(64)[13] "temp"
            (2220361 'move' tmp[2220359] call_tmp_F1_high[2265577])
            (2220366 '.=' _ic_[2220318] F1_high[1958045] tmp[2220359])
            (2220370 '.=' _ic_[2219720] F5__iterator[1940105] _ic_[2220318])
            (2220374 '.=' _ic_[2219720] F6_i[1940107] 0)
            (2220378 'move' tmp[2219887](2220380 '.' _ic_[2219720] F5__iterator[1940105]))
            (2220383 'move' low[2219863](2220385 '.v' tmp[2219887] F0_low[1958041]))
            (2220388 'move' tmp[2219889](2220390 '.' _ic_[2219720] F5__iterator[1940105]))
            (2220393 'move' high[2219865](2220395 '.v' tmp[2219889] F1_high[1958045]))
            (2220398 'move' tmp[2219891](2220400 '.' _ic_[2219720] F5__iterator[1940105]))
            (2220403 'move' low[2219867](2220405 '.v' tmp[2219891] F0_low[1958041]))
            (2220408 'move' tmp[2219893](2220410 '.' _ic_[2219720] F5__iterator[1940105]))
            (2220413 'move' high[2219869](2220415 '.v' tmp[2219893] F1_high[1958045]))
            (2220419 call chpl_checkIfRangeIterWillOverflow[1093055] low[2219867] high[2219869] 1 low[2219863] high[2219865] 1)
            const-val isFinished[2220426]:bool[10] "temp"
            val hasMore[2220428]:bool[10] "temp"
            CForLoop[2220430]
            {
              val _indexOfInterest_x0[2267272]:int(64)[13] "temp"
              val _indexOfInterest_x1[2267274]:uint(8)[100] "temp"
              val coerce_tmp[2220526]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              const-val tmp[2220528]:int(64)[13] "temp"
              ref tmp[2220530]:string[26] "temp"
              val tmp[2220532]:uint(8)[100] "temp"
              (2220534 'move' tmp[2220528](2220536 '.v' _ic_[2219720] F6_i[1940107]))
              (2220539 'move' tmp[2220530](2220541 '.' _ic_[2219720] F1_localThis[1940097]))
              (2220544 'move' coerce_tmp[2220526](2220546 '.v' tmp[2220530] buff[30737]))
              ref call_tmp[2220549]:uint(8)[100] "dead after last mention" "maybe param" "temp"
              (2220551 'move' call_tmp[2220549](2220553 'array_get' coerce_tmp[2220526] tmp[2220528]))
              (2220556 'move' tmp[2220532](2220558 'deref' call_tmp[2220549]))
              (2220560 '.=' _ic_[2219720] value[1940111] tmp[2220532])
              (2220564 'noop')
              (2220565 '.=' _ic_[2219720] more[1105207] 2)
              val tmp[2220569]:int(64)[13] "temp"
              const-val high[2220571]:int(64)[13] "temp"
              const-ref tmp[2220573]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
              (2220575 'move' tmp[2220573](2220577 '.' _ic_[2219720] F5__iterator[1940105]))
              (2220580 'move' high[2220571](2220582 '.v' tmp[2220573] F1_high[1958045]))
              const-val tmp[2220585]:int(64)[13] "temp"
              (2220587 'move' tmp[2220585](2220589 '.v' _ic_[2219720] F6_i[1940107]))
              (2220592 'move' tmp[2220569](2220594 '<=' tmp[2220585] high[2220571]))
              (2220597 'move' hasMore[2220428](2220599 'cast' bool[10] tmp[2220569]))
              (2220602 'move' isFinished[2220426](2220604 '!' hasMore[2220428]))
              if isFinished[2220426]
              {
                (2220608 'chpl_error' c"zippered iterations have non-equal lengths")
              }
              val tmp[2220611]:uint(8)[100] "temp"
              (2220613 'move' tmp[2220611](2220615 '.v' _ic_[2219720] value[1940111]))
              const-val tmp[2220618]:int(64)[13] "temp"
              (2220620 'move' tmp[2220618](2220622 '.v' _ic_[2219659] F1_i[1955924]))
              (2220625 '.=' _ic_[2219659] value[1955930] tmp[2220618])
              (2220629 '.=' _ic_[2219659] more[1093685] 2)
              val tmp[2220633]:int(64)[13] "temp"
              (2220635 'move' tmp[2220633](2220637 '.v' _ic_[2219659] value[1955930]))
              (2220640 'move' _indexOfInterest_x1[2267274] tmp[2220611])
              (2220644 'move' _indexOfInterest_x0[2267272] tmp[2220633])
              const-val i[2220648]:int(64)[13] "const" "index var" "insert auto destroy"
              (2220650 'move' i[2220648] _indexOfInterest_x0[2267272])
              const-val b[2220655]:uint(8)[100] "const" "index var" "insert auto destroy"
              (2220657 'move' b[2220655] _indexOfInterest_x1[2267274])
              const-val call_tmp[2220662]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2220664 'move' call_tmp[2220662](2220666 'cast' int(32)[95] b[2220655]))
              const-val call_tmp[2220669]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret[2220671]:byteIndex[28170] "dead after last mention" "RVV" "temp"
              val cpi[2220673]:byteIndex[28170] "dead at end of block" "insert auto destroy"
              (2220676 call init[28097] cpi[2220673])
              (2220678 '.=' cpi[2220673] _bindex[28091] i[2220648])
              (2220682 'move' ret[2220671] cpi[2220673])
              (2220685 'move' call_tmp[2220669] ret[2220671])
              ref i__e1_x[2220688]:byteIndex[28170] "temp"
              (2220690 'move' i__e1_x[2220688](2220692 'set reference' call_tmp[2220669]))
              val this_x0[2251061]:int(32)[95]
              val this_x2[2251065]:int(64)[13]
              (2220696 'move' this_x0[2251061] call_tmp[2220662])
              (2220704 'move' this_x2[2251065] 1)
              val _yieldedIndex_x0[2251082]:int(32)[95] "temp"
              val _yieldedIndex_x2[2251086]:int(64)[13] "temp"
              (2251072 'move' _yieldedIndex_x0[2251082] this_x0[2251061])
              (2251080 'move' _yieldedIndex_x2[2251086] this_x2[2251065])
              const-val c[2220713]:int(32)[95] "const" "index var" "insert auto destroy"
              (2220715 'move' c[2220713] _yieldedIndex_x0[2251082])
              const-val nBytes[2220727]:int(64)[13] "const" "index var" "insert auto destroy"
              (2220729 'move' nBytes[2220727] _yieldedIndex_x2[2251086])
              if noSplits[2219355]
              {
                (2220736 '=' done[2219326] 1)
                const-val call_tmp[2220739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2220741 'move' call_tmp[2220739](2220744 call isSpace[36840] localThis[2219321]))
                const-val call_tmp[2220746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2220748 'move' call_tmp[2220746](2220750 '!' call_tmp[2220739]))
                if call_tmp[2220746]
                {
                  (2220755 call =[38269] chunk[2219336] localThis[2219321])
                  (2220758 '=' yieldChunk[2219331] 1)
                }
              }
              {
                const-val call_tmp[2220763]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2220765 'move' call_tmp[2220763](2220768 call iswspace[39162] c[2220713]))
                const-val coerce_tmp[2220770]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2220772 'move' coerce_tmp[2220770](2220774 'cast' int(32)[95] 0))
                const-val call_tmp[2220777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2220779 'move' call_tmp[2220777](2220781 '!=' call_tmp[2220763] coerce_tmp[2220770]))
                const-val cSpace[2220784]:bool[10] "dead at end of block" "insert auto destroy"
                (2220786 'move' cSpace[2220784] call_tmp[2220777])
                val tmp[2220789]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if inChunk[2219404]
                {
                  (2220793 'move' tmp[2220789] 1)
                }
                {
                  (2220797 'move' tmp[2220789] cSpace[2220784])
                }
                const-val call_tmp[2220801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2220803 'move' call_tmp[2220801](2220805 '!' tmp[2220789]))
                if call_tmp[2220801]
                {
                  (2220810 call =[38191] chunkStart[2219409] i__e1_x[2220688])
                  (2220813 '=' inChunk[2219404] 1)
                  const-val call_tmp[2220816]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2220818]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2220820 'move' ret[2220818](2220822 '.v' call_tmp[2220669] _bindex[28091]))
                  const-val call_tmp[2220825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2220827 'move' call_tmp[2220825](2220829 '-' ret[2220818] 1))
                  const-val ret[2220832]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2220834]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2220837 call init[28097] cpi[2220834])
                  (2220839 '.=' cpi[2220834] _bindex[28091] call_tmp[2220825])
                  (2220843 'move' ret[2220832] cpi[2220834])
                  (2220846 'move' call_tmp[2220816] ret[2220832])
                  const-val call_tmp[2220849]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2220851]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2220853 'move' ret[2220851](2220855 '.v' call_tmp[2220816] _bindex[28091]))
                  const-val call_tmp[2220858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2220860 'move' call_tmp[2220858](2220862 '+' ret[2220851] nBytes[2220727]))
                  const-val ret[2220865]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2220867]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2220870 call init[28097] cpi[2220867])
                  (2220872 '.=' cpi[2220867] _bindex[28091] call_tmp[2220858])
                  (2220876 'move' ret[2220865] cpi[2220867])
                  (2220879 'move' call_tmp[2220849] ret[2220865])
                  val ret[2220882]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2220884 'move' ret[2220882](2220886 '.v' call_tmp[2220849] _bindex[28091]))
                  val ret[2220889]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2220891 'move' ret[2220889](2220893 '.v' iEnd[2219398] _bindex[28091]))
                  const-val call_tmp[2220896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2220898 'move' call_tmp[2220896](2220900 '>' ret[2220882] ret[2220889]))
                  if call_tmp[2220896]
                  {
                    const-val call_tmp[2220905]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2220907]:range(byteIndex,boundedLow,false)[1140337] "temp"
                    (2220910 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2220907])
                    (2220913 'move' call_tmp[2220905] ret_tmp[2220907])
                    const-val call_tmp[2220916]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref i_this[2220918]:string[26] "temp"
                    (2220920 'move' i_this[2220918](2220922 'set reference' localThis[2219321]))
                    const-val call_tmp[2220924]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2220926]:string[26] "temp"
                    (2220929 call getSlice[1140693] i_this[2220918] call_tmp[2220905] ret_tmp[2220926])
                    (2220933 'move' call_tmp[2220924] ret_tmp[2220926])
                    (2220936 'move' call_tmp[2220916] call_tmp[2220924])
                    (2220940 call =[38269] chunk[2219336] call_tmp[2220916])
                    ref i_x[2220943]:string[26] "temp"
                    (2220945 'move' i_x[2220943](2220947 'set reference' call_tmp[2220916]))
                    (2220950 call deinit[30831] i_x[2220943])
                    (2220952 '=' yieldChunk[2219331] 1)
                    (2220955 '=' done[2219326] 1)
                  }
                }
                {
                  if inChunk[2219404]
                  {
                    if cSpace[2220784]
                    {
                      ref i_lhs[2220964]:int(64)[13] "temp"
                      (2220966 'move' i_lhs[2220964](2220968 'set reference' splitCount[2219379]))
                      (2220970 '+=' i_lhs[2220964] 1)
                      val tmp[2220973]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      if limitSplits[2219374]
                      {
                        const-val maxsplit[2220977]:int(64)[13] "temp"
                        (2220979 'move' maxsplit[2220977] _ic__F1_maxsplit[2244434])
                        const-val call_tmp[2220984]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2220986 'move' call_tmp[2220984](2220988 '>' splitCount[2219379] maxsplit[2220977]))
                        (2220991 'move' tmp[2220973] call_tmp[2220984])
                      }
                      {
                        (2220995 'move' tmp[2220973] 0)
                      }
                      if tmp[2220973]
                      {
                        const-val call_tmp[2221001]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221003]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2221006 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2221003])
                        (2221009 'move' call_tmp[2221001] ret_tmp[2221003])
                        const-val call_tmp[2221012]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2221014]:string[26] "temp"
                        (2221016 'move' i_this[2221014](2221018 'set reference' localThis[2219321]))
                        const-val call_tmp[2221020]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221022]:string[26] "temp"
                        (2221025 call getSlice[1140693] i_this[2221014] call_tmp[2221001] ret_tmp[2221022])
                        (2221029 'move' call_tmp[2221020] ret_tmp[2221022])
                        (2221032 'move' call_tmp[2221012] call_tmp[2221020])
                        (2221036 call =[38269] chunk[2219336] call_tmp[2221012])
                        ref i_x[2221039]:string[26] "temp"
                        (2221041 'move' i_x[2221039](2221043 'set reference' call_tmp[2221012]))
                        (2221046 call deinit[30831] i_x[2221039])
                        (2221048 '=' yieldChunk[2219331] 1)
                        (2221051 '=' done[2219326] 1)
                      }
                      {
                        const-val call_tmp[2221055]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val ret[2221057]:int(64)[13] "dead after last mention" "RVV" "temp"
                        (2221059 'move' ret[2221057](2221061 '.v' call_tmp[2220669] _bindex[28091]))
                        const-val call_tmp[2221064]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2221066 'move' call_tmp[2221064](2221068 '-' ret[2221057] 1))
                        const-val ret[2221071]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                        val cpi[2221073]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                        (2221076 call init[28097] cpi[2221073])
                        (2221078 '.=' cpi[2221073] _bindex[28091] call_tmp[2221064])
                        (2221082 'move' ret[2221071] cpi[2221073])
                        (2221085 'move' call_tmp[2221055] ret[2221071])
                        const-val call_tmp[2221088]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221090]:range(byteIndex,bounded,false)[1022924] "temp"
                        (2221093 call chpl_build_bounded_range[1120189] chunkStart[2219409] call_tmp[2221055] ret_tmp[2221090])
                        (2221097 'move' call_tmp[2221088] ret_tmp[2221090])
                        const-val call_tmp[2221100]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2221102]:string[26] "temp"
                        (2221104 'move' i_this[2221102](2221106 'set reference' localThis[2219321]))
                        const-val call_tmp[2221108]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221110]:string[26] "temp"
                        (2221113 call getSlice[1120471] i_this[2221102] call_tmp[2221088] ret_tmp[2221110])
                        (2221117 'move' call_tmp[2221108] ret_tmp[2221110])
                        (2221120 'move' call_tmp[2221100] call_tmp[2221108])
                        (2221124 call =[38269] chunk[2219336] call_tmp[2221100])
                        ref i_x[2221127]:string[26] "temp"
                        (2221129 'move' i_x[2221127](2221131 'set reference' call_tmp[2221100]))
                        (2221134 call deinit[30831] i_x[2221127])
                        (2221136 '=' yieldChunk[2219331] 1)
                        (2221139 '=' inChunk[2219404] 0)
                      }
                    }
                    {
                      const-val call_tmp[2221144]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2221146]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2221148 'move' ret[2221146](2221150 '.v' call_tmp[2220669] _bindex[28091]))
                      const-val call_tmp[2221153]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2221155 'move' call_tmp[2221153](2221157 '-' ret[2221146] 1))
                      const-val ret[2221160]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2221162]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2221165 call init[28097] cpi[2221162])
                      (2221167 '.=' cpi[2221162] _bindex[28091] call_tmp[2221153])
                      (2221171 'move' ret[2221160] cpi[2221162])
                      (2221174 'move' call_tmp[2221144] ret[2221160])
                      const-val call_tmp[2221177]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2221179]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2221181 'move' ret[2221179](2221183 '.v' call_tmp[2221144] _bindex[28091]))
                      const-val call_tmp[2221186]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2221188 'move' call_tmp[2221186](2221190 '+' ret[2221179] nBytes[2220727]))
                      const-val ret[2221193]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2221195]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2221198 call init[28097] cpi[2221195])
                      (2221200 '.=' cpi[2221195] _bindex[28091] call_tmp[2221186])
                      (2221204 'move' ret[2221193] cpi[2221195])
                      (2221207 'move' call_tmp[2221177] ret[2221193])
                      val ret[2221210]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2221212 'move' ret[2221210](2221214 '.v' call_tmp[2221177] _bindex[28091]))
                      val ret[2221217]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2221219 'move' ret[2221217](2221221 '.v' iEnd[2219398] _bindex[28091]))
                      const-val call_tmp[2221224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2221226 'move' call_tmp[2221224](2221228 '>' ret[2221210] ret[2221217]))
                      if call_tmp[2221224]
                      {
                        const-val call_tmp[2221233]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221235]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2221238 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2221235])
                        (2221241 'move' call_tmp[2221233] ret_tmp[2221235])
                        const-val call_tmp[2221244]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2221246]:string[26] "temp"
                        (2221248 'move' i_this[2221246](2221250 'set reference' localThis[2219321]))
                        const-val call_tmp[2221252]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2221254]:string[26] "temp"
                        (2221257 call getSlice[1140693] i_this[2221246] call_tmp[2221233] ret_tmp[2221254])
                        (2221261 'move' call_tmp[2221252] ret_tmp[2221254])
                        (2221264 'move' call_tmp[2221244] call_tmp[2221252])
                        (2221268 call =[38269] chunk[2219336] call_tmp[2221244])
                        ref i_x[2221271]:string[26] "temp"
                        (2221273 'move' i_x[2221271](2221275 'set reference' call_tmp[2221244]))
                        (2221278 call deinit[30831] i_x[2221271])
                        (2221280 '=' yieldChunk[2219331] 1)
                        (2221283 '=' done[2219326] 1)
                      }
                    }
                  }
                }
              }
              if yieldChunk[2219331]
              {
                ref i_x[2221293]:string[26] "temp"
                (2221295 'move' i_x[2221293](2221297 'set reference' chunk[2219336]))
                val ret[2221299]:string[26] "dead after last mention" "RVV" "temp"
                const-val tmp[2221301]:string[26] "dead after last mention" "temp"
                (2221304 call init=[30771] tmp[2221301] i_x[2221293])
                (2221307 'move' ret[2221299] tmp[2221301])
                const-val chpl__elidedIdx[2221310]:string[26] "const" "index var" "insert auto destroy"
                (2221312 'move' chpl__elidedIdx[2221310] ret[2221299])
                ref i_lhs[2221315]:int(64)[13] "temp"
                (2221317 'move' i_lhs[2221315](2221319 'set reference' numElements[2217013]))
                (2221321 '+=' i_lhs[2221315] 1)
                const-val call_tmp[2221324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221326 'move' call_tmp[2221324](2221328 '>' numElements[2217013] 1))
                if call_tmp[2221324]
                {
                  ref i_x[2221333]:string[26] "temp"
                  (2221335 'move' i_x[2221333](2221337 'set reference' chpl__elidedIdx[2221310]))
                  (2221340 call deinit[30831] i_x[2221333])
                  const-val moreVal1[2221342]:int(64)[13] "const" "temp"
                  (2221344 '=' moreVal1[2221342](2221346 '.v' _ic_[2219659] more[1093685]))
                  const-val moreValNeg1[2221349]:int(64)[13] "const" "temp"
                  (2221351 'move' moreValNeg1[2221349](2221353 'u-' moreVal1[2221342]))
                  (2221355 '.=' _ic_[2219659] more[1093685] moreValNeg1[2221349])
                  (2221360 call advance[1093708] _ic_[2219659])
                  const-val moreVal2[2221362]:int(64)[13] "const" "temp"
                  (2221364 '=' moreVal2[2221362](2221366 '.v' _ic_[2219720] more[1105207]))
                  const-val moreValNeg2[2221369]:int(64)[13] "const" "temp"
                  (2221371 'move' moreValNeg2[2221369](2221373 'u-' moreVal2[2221362]))
                  (2221375 '.=' _ic_[2219720] more[1105207] moreValNeg2[2221369])
                  (2221380 call advance[1105230] _ic_[2219720])
                  const-val call_tmp[2221389]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2221391 'move' call_tmp[2221389](2221393 'cast_to_void_star' _ic_[2219659]))
                  (2221396 call chpl_here_free[188093] call_tmp[2221389])
                  const-val call_tmp[2221405]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2221407 'move' call_tmp[2221405](2221409 'cast_to_void_star' _ic_[2219720]))
                  (2221412 call chpl_here_free[188093] call_tmp[2221405])
                  ref i_x[2221414]:string[26] "temp"
                  (2221416 'move' i_x[2221414](2221418 'set reference' localThis[2219551]))
                  (2221421 call deinit[30831] i_x[2221414])
                  ref i_x[2221432]:string[26] "temp"
                  (2221434 'move' i_x[2221432](2221436 'set reference' chunk[2219336]))
                  (2221439 call deinit[30831] i_x[2221432])
                  ref i_x[2221441]:string[26] "temp"
                  (2221443 'move' i_x[2221441](2221445 'set reference' localThis[2219321]))
                  (2221448 call deinit[30831] i_x[2221441])
                  break _breakLabel[2222786] _breakLabel[2222786]
                }
                ref i_x[2221453]:string[26] "temp"
                (2221455 'move' i_x[2221453](2221457 'set reference' chpl__elidedIdx[2221310]))
                (2221460 call deinit[30831] i_x[2221453])
                (2221462 '=' yieldChunk[2219331] 0)
              }
              if done[2219326]
              {
                const-val moreVal1[2221468]:int(64)[13] "const" "temp"
                (2221470 '=' moreVal1[2221468](2221472 '.v' _ic_[2219659] more[1093685]))
                const-val moreValNeg1[2221475]:int(64)[13] "const" "temp"
                (2221477 'move' moreValNeg1[2221475](2221479 'u-' moreVal1[2221468]))
                (2221481 '.=' _ic_[2219659] more[1093685] moreValNeg1[2221475])
                (2221486 call advance[1093708] _ic_[2219659])
                const-val moreVal2[2221488]:int(64)[13] "const" "temp"
                (2221490 '=' moreVal2[2221488](2221492 '.v' _ic_[2219720] more[1105207]))
                const-val moreValNeg2[2221495]:int(64)[13] "const" "temp"
                (2221497 'move' moreValNeg2[2221495](2221499 'u-' moreVal2[2221488]))
                (2221501 '.=' _ic_[2219720] more[1105207] moreValNeg2[2221495])
                (2221506 call advance[1105230] _ic_[2219720])
                const-val call_tmp[2221515]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221517 'move' call_tmp[2221515](2221519 'cast_to_void_star' _ic_[2219659]))
                (2221522 call chpl_here_free[188093] call_tmp[2221515])
                const-val call_tmp[2221531]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221533 'move' call_tmp[2221531](2221535 'cast_to_void_star' _ic_[2219720]))
                (2221538 call chpl_here_free[188093] call_tmp[2221531])
                ref i_x[2221540]:string[26] "temp"
                (2221542 'move' i_x[2221540](2221544 'set reference' localThis[2219551]))
                (2221547 call deinit[30831] i_x[2221540])
                break _breakLabel[2222753] _breakLabel[2222753]
              }
              {
                const-val tmp[2220432]:int(64)[13] "temp"
                (2220434 'move' tmp[2220432](2220436 '.v' _ic_[2219659] F3_coerce_tmp[1955928]))
                (2220439 '.=' _ic_[2219659] F1_i[1955924] tmp[2220432])
                const-val tmp[2220443]:int(64)[13] "temp"
                const-ref tmp[2220445]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
                (2220447 'move' tmp[2220445](2220449 '.' _ic_[2219720] F5__iterator[1940105]))
                (2220452 'move' tmp[2220443](2220454 '.v' tmp[2220445] F0_low[1958041]))
                (2220457 '.=' _ic_[2219720] F7_low[1940109] tmp[2220443])
                const-val tmp[2220461]:int(64)[13] "temp"
                (2220463 'move' tmp[2220461](2220465 '.v' _ic_[2219720] F7_low[1940109]))
                (2220468 '.=' _ic_[2219720] F6_i[1940107] tmp[2220461])
              }
              {
                val tmp[2220473]:int(64)[13] "temp"
                const-val tmp[2220475]:int(64)[13] "temp"
                (2220477 'move' tmp[2220475](2220479 '.v' _ic_[2219659] F1_i[1955924]))
                const-val tmp[2220482]:int(64)[13] "temp"
                (2220484 'move' tmp[2220482](2220486 '.v' _ic_[2219659] F2_end[1955926]))
                (2220489 'move' tmp[2220473](2220491 '<=' tmp[2220475] tmp[2220482]))
                tmp[2220473]
              }
              {
                val tmp[2220496]:int(64)[13] "temp"
                (2220498 'move' tmp[2220496](2220500 '.v' _ic_[2219659] F1_i[1955924]))
                (2220503 '+=' tmp[2220496] 1)
                (2220506 '.=' _ic_[2219659] F1_i[1955924] tmp[2220496])
                val tmp[2220510]:int(64)[13] "temp"
                (2220512 'move' tmp[2220510](2220514 '.v' _ic_[2219720] F6_i[1940107]))
                (2220517 '+=' tmp[2220510] 1)
                (2220520 '.=' _ic_[2219720] F6_i[1940107] tmp[2220510])
              }
            }
            val tmp[2221552]:int(64)[13] "temp"
            const-val high[2221554]:int(64)[13] "temp"
            const-ref tmp[2221556]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            (2221558 'move' tmp[2221556](2221560 '.' _ic_[2219720] F5__iterator[1940105]))
            (2221563 'move' high[2221554](2221565 '.v' tmp[2221556] F1_high[1958045]))
            const-val tmp[2221568]:int(64)[13] "temp"
            (2221570 'move' tmp[2221568](2221572 '.v' _ic_[2219720] F6_i[1940107]))
            (2221575 'move' tmp[2221552](2221577 '<=' tmp[2221568] high[2221554]))
            (2221580 'move' hasMore[2220428](2221582 'cast' bool[10] tmp[2221552]))
            if hasMore[2220428]
            {
              (2221587 'chpl_error' c"zippered iterations have non-equal lengths")
            }
            val tmp[2221590]:_ic_chpl_direct_param_stride_range_iter[1100243] "temp"
            val tmp[2221592]:_ic_chpl_direct_counted_range_iter_helper[1100497] "temp"
            val tmp[2221594]:_ic_chpl_direct_counted_range_iter[1100747] "temp"
            const-ref tmp[2221596]:string[26] "temp"
            (2221598 'move' tmp[2221590](2221600 '.v' _ic_[2219720] F5__iterator[1940105]))
            const-val call_tmp[2221603]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221605 'move' call_tmp[2221603](2221607 'cast_to_void_star' tmp[2221590]))
            (2221610 call chpl_here_free[188093] call_tmp[2221603])
            (2221612 'move' tmp[2221592](2221614 '.v' _ic_[2219720] F3__iterator[1940101]))
            const-val call_tmp[2221617]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221619 'move' call_tmp[2221617](2221621 'cast_to_void_star' tmp[2221592]))
            (2221624 call chpl_here_free[188093] call_tmp[2221617])
            (2221626 'move' tmp[2221594](2221628 '.v' _ic_[2219720] F2__iterator[1940099]))
            const-val call_tmp[2221631]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221633 'move' call_tmp[2221631](2221635 'cast_to_void_star' tmp[2221594]))
            (2221638 call chpl_here_free[188093] call_tmp[2221631])
            (2221640 'move' tmp[2221596](2221642 '.' _ic_[2219720] F1_localThis[1940097]))
            (2221646 call deinit[30831] tmp[2221596])
            const-val call_tmp[2221655]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221657 'move' call_tmp[2221655](2221659 'cast_to_void_star' _ic_[2219659]))
            (2221662 call chpl_here_free[188093] call_tmp[2221655])
            const-val call_tmp[2221671]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221673 'move' call_tmp[2221671](2221675 'cast_to_void_star' _ic_[2219720]))
            (2221678 call chpl_here_free[188093] call_tmp[2221671])
          }
          {
            val ret[2221688]:int(64)[13] "dead after last mention" "RVV" "temp"
            (2221690 'move' ret[2221688](2221692 '.v' default_arg_start[2219418] _bindex[28091]))
            val i[2221695]:int(64)[13] "dead at end of block" "insert auto destroy"
            (2221697 'move' i[2221695] ret[2221688])
            const-val call_tmp[2221700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221702 'move' call_tmp[2221700](2221704 '>' ret[2221688] 0))
            if call_tmp[2221700]
            {
              val tmp[2221709]:bool[10] "dead after last mention" "temp"
              const-val coerce_tmp[2221711]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2221713 'move' coerce_tmp[2221711](2221715 '.v' localThis[2219551] buffLen[30719]))
              const-val call_tmp[2221718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2221720 'move' call_tmp[2221718](2221722 '<' i[2221695] coerce_tmp[2221711]))
              val tmp[2221725]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2221718]
              {
                val coerce_tmp[2221729]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2221731 'move' coerce_tmp[2221729](2221733 '.v' localThis[2219551] buff[30737]))
                ref call_tmp[2221736]:uint(8)[100] "dead after last mention" "maybe param" "temp"
                (2221738 'move' call_tmp[2221736](2221740 'array_get' coerce_tmp[2221729] i[2221695]))
                const-val coerce_tmp[2221743]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2221745 'move' coerce_tmp[2221743](2221747 'deref' call_tmp[2221736]))
                const-val coerce_tmp[2221749]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2221751 'move' coerce_tmp[2221749](2221753 'cast' uint(8)[100] 192))
                const-val call_tmp[2221756]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221758 'move' call_tmp[2221756](2221760 '&' coerce_tmp[2221743] coerce_tmp[2221749]))
                const-val coerce_tmp[2221763]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2221765 'move' coerce_tmp[2221763](2221767 'cast' uint(8)[100] 128))
                const-val call_tmp[2221770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221772 'move' call_tmp[2221770](2221774 '!=' call_tmp[2221756] coerce_tmp[2221763]))
                const-val call_tmp[2221777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221779 'move' call_tmp[2221777](2221781 '!' call_tmp[2221770]))
                (2221783 'move' tmp[2221725] call_tmp[2221777])
              }
              {
                (2221787 'move' tmp[2221725] 0)
              }
              (2221791 'move' tmp[2221709] tmp[2221725])
              WhileDo[2221794]
              {
                ref i_lhs[2221796]:int(64)[13] "temp"
                (2221798 'move' i_lhs[2221796](2221800 'set reference' i[2221695]))
                (2221802 '+=' i_lhs[2221796] 1)
                const-val coerce_tmp[2221805]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2221807 'move' coerce_tmp[2221805](2221809 '.v' localThis[2219551] buffLen[30719]))
                const-val call_tmp[2221812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2221814 'move' call_tmp[2221812](2221816 '<' i[2221695] coerce_tmp[2221805]))
                val tmp[2221819]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if call_tmp[2221812]
                {
                  val coerce_tmp[2221823]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2221825 'move' coerce_tmp[2221823](2221827 '.v' localThis[2219551] buff[30737]))
                  ref call_tmp[2221830]:uint(8)[100] "dead after last mention" "maybe param" "temp"
                  (2221832 'move' call_tmp[2221830](2221834 'array_get' coerce_tmp[2221823] i[2221695]))
                  const-val coerce_tmp[2221837]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2221839 'move' coerce_tmp[2221837](2221841 'deref' call_tmp[2221830]))
                  const-val coerce_tmp[2221843]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2221845 'move' coerce_tmp[2221843](2221847 'cast' uint(8)[100] 192))
                  const-val call_tmp[2221850]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2221852 'move' call_tmp[2221850](2221854 '&' coerce_tmp[2221837] coerce_tmp[2221843]))
                  const-val coerce_tmp[2221857]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (2221859 'move' coerce_tmp[2221857](2221861 'cast' uint(8)[100] 128))
                  const-val call_tmp[2221864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2221866 'move' call_tmp[2221864](2221868 '!=' call_tmp[2221850] coerce_tmp[2221857]))
                  const-val call_tmp[2221871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2221873 'move' call_tmp[2221871](2221875 '!' call_tmp[2221864]))
                  (2221877 'move' tmp[2221819] call_tmp[2221871])
                }
                {
                  (2221881 'move' tmp[2221819] 0)
                }
                (2221885 'move' tmp[2221709] tmp[2221819])
                tmp[2221709]
              }
            }
            val tmp[2221889]:bool[10] "dead after last mention" "temp"
            const-val coerce_tmp[2221891]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2221893 'move' coerce_tmp[2221891](2221895 '.v' localThis[2219551] buffLen[30719]))
            const-val call_tmp[2221898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2221900 'move' call_tmp[2221898](2221902 '<' i[2221695] coerce_tmp[2221891]))
            (2221905 'move' tmp[2221889] call_tmp[2221898])
            WhileDo[2221908]
            {
              const-val call_tmp[2221910]:(syserr,int(32),int(32))[960390] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[2221912]:c_ptr(uint(8))[935386] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2221914 'move' coerce_tmp[2221912](2221916 '.v' localThis[2219551] buff[30737]))
              const-val coerce_tmp[2221919]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2221921 'move' coerce_tmp[2221919](2221923 '.v' localThis[2219551] buffLen[30719]))
              const-val ret_tmp[2221926]:(syserr,int(32),int(32))[960390] "temp"
              (2221929 call decodeHelp[174418] coerce_tmp[2221912] coerce_tmp[2221919] i[2221695] 1 ret_tmp[2221926])
              (2221935 'move' call_tmp[2221910] ret_tmp[2221926])
              val tmp_x1[2267187]:int(32)[95] "temp"
              val tmp_x2[2267189]:int(32)[95] "temp"
              (2267200 'move' tmp_x1[2267187](2267198 '.v' call_tmp[2221910] x1[960386]))
              (2267205 'move' tmp_x2[2267189](2267203 '.v' call_tmp[2221910] x2[960388]))
              const-val coerce_tmp[2221943]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2221945 'move' coerce_tmp[2221943] tmp_x1[2267187])
              const-val nBytes[2221950]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2221952]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2221954 'move' coerce_tmp[2221952] tmp_x2[2267189])
              (2221959 'move' nBytes[2221950] coerce_tmp[2221952])
              const-val call_tmp[2221962]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val ret[2221964]:byteIndex[28170] "dead after last mention" "RVV" "temp"
              val cpi[2221966]:byteIndex[28170] "dead at end of block" "insert auto destroy"
              (2221969 call init[28097] cpi[2221966])
              (2221971 '.=' cpi[2221966] _bindex[28091] i[2221695])
              (2221975 'move' ret[2221964] cpi[2221966])
              (2221978 'move' call_tmp[2221962] ret[2221964])
              const-val call_tmp[2221981]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2221983 'move' call_tmp[2221981](2221985 'cast' int(64)[13] coerce_tmp[2221952]))
              ref i__e1_x[2221988]:byteIndex[28170] "temp"
              (2221990 'move' i__e1_x[2221988](2221992 'set reference' call_tmp[2221962]))
              val this_x0[2251094]:int(32)[95]
              val this_x2[2251098]:int(64)[13]
              (2221996 'move' this_x0[2251094] coerce_tmp[2221943])
              (2222004 'move' this_x2[2251098] call_tmp[2221981])
              val _yieldedIndex_x0[2251115]:int(32)[95] "temp"
              val _yieldedIndex_x2[2251119]:int(64)[13] "temp"
              (2251105 'move' _yieldedIndex_x0[2251115] this_x0[2251094])
              (2251113 'move' _yieldedIndex_x2[2251119] this_x2[2251098])
              const-val c[2222013]:int(32)[95] "const" "index var" "insert auto destroy"
              (2222015 'move' c[2222013] _yieldedIndex_x0[2251115])
              const-val nBytes[2222027]:int(64)[13] "const" "index var" "insert auto destroy"
              (2222029 'move' nBytes[2222027] _yieldedIndex_x2[2251119])
              if noSplits[2219355]
              {
                (2222036 '=' done[2219326] 1)
                const-val call_tmp[2222039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222041 'move' call_tmp[2222039](2222044 call isSpace[36840] localThis[2219321]))
                const-val call_tmp[2222046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222048 'move' call_tmp[2222046](2222050 '!' call_tmp[2222039]))
                if call_tmp[2222046]
                {
                  (2222055 call =[38269] chunk[2219336] localThis[2219321])
                  (2222058 '=' yieldChunk[2219331] 1)
                }
              }
              {
                const-val call_tmp[2222063]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222065 'move' call_tmp[2222063](2222068 call iswspace[39162] c[2222013]))
                const-val coerce_tmp[2222070]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2222072 'move' coerce_tmp[2222070](2222074 'cast' int(32)[95] 0))
                const-val call_tmp[2222077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222079 'move' call_tmp[2222077](2222081 '!=' call_tmp[2222063] coerce_tmp[2222070]))
                const-val cSpace[2222084]:bool[10] "dead at end of block" "insert auto destroy"
                (2222086 'move' cSpace[2222084] call_tmp[2222077])
                val tmp[2222089]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                if inChunk[2219404]
                {
                  (2222093 'move' tmp[2222089] 1)
                }
                {
                  (2222097 'move' tmp[2222089] cSpace[2222084])
                }
                const-val call_tmp[2222101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222103 'move' call_tmp[2222101](2222105 '!' tmp[2222089]))
                if call_tmp[2222101]
                {
                  (2222110 call =[38191] chunkStart[2219409] i__e1_x[2221988])
                  (2222113 '=' inChunk[2219404] 1)
                  const-val call_tmp[2222116]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2222118]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2222120 'move' ret[2222118](2222122 '.v' call_tmp[2221962] _bindex[28091]))
                  const-val call_tmp[2222125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2222127 'move' call_tmp[2222125](2222129 '-' ret[2222118] 1))
                  const-val ret[2222132]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2222134]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2222137 call init[28097] cpi[2222134])
                  (2222139 '.=' cpi[2222134] _bindex[28091] call_tmp[2222125])
                  (2222143 'move' ret[2222132] cpi[2222134])
                  (2222146 'move' call_tmp[2222116] ret[2222132])
                  const-val call_tmp[2222149]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  val ret[2222151]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2222153 'move' ret[2222151](2222155 '.v' call_tmp[2222116] _bindex[28091]))
                  const-val call_tmp[2222158]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2222160 'move' call_tmp[2222158](2222162 '+' ret[2222151] nBytes[2222027]))
                  const-val ret[2222165]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                  val cpi[2222167]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                  (2222170 call init[28097] cpi[2222167])
                  (2222172 '.=' cpi[2222167] _bindex[28091] call_tmp[2222158])
                  (2222176 'move' ret[2222165] cpi[2222167])
                  (2222179 'move' call_tmp[2222149] ret[2222165])
                  val ret[2222182]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2222184 'move' ret[2222182](2222186 '.v' call_tmp[2222149] _bindex[28091]))
                  val ret[2222189]:int(64)[13] "dead after last mention" "RVV" "temp"
                  (2222191 'move' ret[2222189](2222193 '.v' iEnd[2219398] _bindex[28091]))
                  const-val call_tmp[2222196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2222198 'move' call_tmp[2222196](2222200 '>' ret[2222182] ret[2222189]))
                  if call_tmp[2222196]
                  {
                    const-val call_tmp[2222205]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2222207]:range(byteIndex,boundedLow,false)[1140337] "temp"
                    (2222210 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2222207])
                    (2222213 'move' call_tmp[2222205] ret_tmp[2222207])
                    const-val call_tmp[2222216]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    ref i_this[2222218]:string[26] "temp"
                    (2222220 'move' i_this[2222218](2222222 'set reference' localThis[2219321]))
                    const-val call_tmp[2222224]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val ret_tmp[2222226]:string[26] "temp"
                    (2222229 call getSlice[1140693] i_this[2222218] call_tmp[2222205] ret_tmp[2222226])
                    (2222233 'move' call_tmp[2222224] ret_tmp[2222226])
                    (2222236 'move' call_tmp[2222216] call_tmp[2222224])
                    (2222240 call =[38269] chunk[2219336] call_tmp[2222216])
                    ref i_x[2222243]:string[26] "temp"
                    (2222245 'move' i_x[2222243](2222247 'set reference' call_tmp[2222216]))
                    (2222250 call deinit[30831] i_x[2222243])
                    (2222252 '=' yieldChunk[2219331] 1)
                    (2222255 '=' done[2219326] 1)
                  }
                }
                {
                  if inChunk[2219404]
                  {
                    if cSpace[2222084]
                    {
                      ref i_lhs[2222264]:int(64)[13] "temp"
                      (2222266 'move' i_lhs[2222264](2222268 'set reference' splitCount[2219379]))
                      (2222270 '+=' i_lhs[2222264] 1)
                      val tmp[2222273]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                      if limitSplits[2219374]
                      {
                        const-val maxsplit[2222277]:int(64)[13] "temp"
                        (2222279 'move' maxsplit[2222277] _ic__F1_maxsplit[2244434])
                        const-val call_tmp[2222284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2222286 'move' call_tmp[2222284](2222288 '>' splitCount[2219379] maxsplit[2222277]))
                        (2222291 'move' tmp[2222273] call_tmp[2222284])
                      }
                      {
                        (2222295 'move' tmp[2222273] 0)
                      }
                      if tmp[2222273]
                      {
                        const-val call_tmp[2222301]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222303]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2222306 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2222303])
                        (2222309 'move' call_tmp[2222301] ret_tmp[2222303])
                        const-val call_tmp[2222312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2222314]:string[26] "temp"
                        (2222316 'move' i_this[2222314](2222318 'set reference' localThis[2219321]))
                        const-val call_tmp[2222320]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222322]:string[26] "temp"
                        (2222325 call getSlice[1140693] i_this[2222314] call_tmp[2222301] ret_tmp[2222322])
                        (2222329 'move' call_tmp[2222320] ret_tmp[2222322])
                        (2222332 'move' call_tmp[2222312] call_tmp[2222320])
                        (2222336 call =[38269] chunk[2219336] call_tmp[2222312])
                        ref i_x[2222339]:string[26] "temp"
                        (2222341 'move' i_x[2222339](2222343 'set reference' call_tmp[2222312]))
                        (2222346 call deinit[30831] i_x[2222339])
                        (2222348 '=' yieldChunk[2219331] 1)
                        (2222351 '=' done[2219326] 1)
                      }
                      {
                        const-val call_tmp[2222355]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val ret[2222357]:int(64)[13] "dead after last mention" "RVV" "temp"
                        (2222359 'move' ret[2222357](2222361 '.v' call_tmp[2221962] _bindex[28091]))
                        const-val call_tmp[2222364]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2222366 'move' call_tmp[2222364](2222368 '-' ret[2222357] 1))
                        const-val ret[2222371]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                        val cpi[2222373]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                        (2222376 call init[28097] cpi[2222373])
                        (2222378 '.=' cpi[2222373] _bindex[28091] call_tmp[2222364])
                        (2222382 'move' ret[2222371] cpi[2222373])
                        (2222385 'move' call_tmp[2222355] ret[2222371])
                        const-val call_tmp[2222388]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222390]:range(byteIndex,bounded,false)[1022924] "temp"
                        (2222393 call chpl_build_bounded_range[1120189] chunkStart[2219409] call_tmp[2222355] ret_tmp[2222390])
                        (2222397 'move' call_tmp[2222388] ret_tmp[2222390])
                        const-val call_tmp[2222400]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2222402]:string[26] "temp"
                        (2222404 'move' i_this[2222402](2222406 'set reference' localThis[2219321]))
                        const-val call_tmp[2222408]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222410]:string[26] "temp"
                        (2222413 call getSlice[1120471] i_this[2222402] call_tmp[2222388] ret_tmp[2222410])
                        (2222417 'move' call_tmp[2222408] ret_tmp[2222410])
                        (2222420 'move' call_tmp[2222400] call_tmp[2222408])
                        (2222424 call =[38269] chunk[2219336] call_tmp[2222400])
                        ref i_x[2222427]:string[26] "temp"
                        (2222429 'move' i_x[2222427](2222431 'set reference' call_tmp[2222400]))
                        (2222434 call deinit[30831] i_x[2222427])
                        (2222436 '=' yieldChunk[2219331] 1)
                        (2222439 '=' inChunk[2219404] 0)
                      }
                    }
                    {
                      const-val call_tmp[2222444]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2222446]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2222448 'move' ret[2222446](2222450 '.v' call_tmp[2221962] _bindex[28091]))
                      const-val call_tmp[2222453]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2222455 'move' call_tmp[2222453](2222457 '-' ret[2222446] 1))
                      const-val ret[2222460]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2222462]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2222465 call init[28097] cpi[2222462])
                      (2222467 '.=' cpi[2222462] _bindex[28091] call_tmp[2222453])
                      (2222471 'move' ret[2222460] cpi[2222462])
                      (2222474 'move' call_tmp[2222444] ret[2222460])
                      const-val call_tmp[2222477]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val ret[2222479]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2222481 'move' ret[2222479](2222483 '.v' call_tmp[2222444] _bindex[28091]))
                      const-val call_tmp[2222486]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2222488 'move' call_tmp[2222486](2222490 '+' ret[2222479] nBytes[2222027]))
                      const-val ret[2222493]:byteIndex[28170] "dead after last mention" "RVV" "temp"
                      val cpi[2222495]:byteIndex[28170] "dead at end of block" "insert auto destroy"
                      (2222498 call init[28097] cpi[2222495])
                      (2222500 '.=' cpi[2222495] _bindex[28091] call_tmp[2222486])
                      (2222504 'move' ret[2222493] cpi[2222495])
                      (2222507 'move' call_tmp[2222477] ret[2222493])
                      val ret[2222510]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2222512 'move' ret[2222510](2222514 '.v' call_tmp[2222477] _bindex[28091]))
                      val ret[2222517]:int(64)[13] "dead after last mention" "RVV" "temp"
                      (2222519 'move' ret[2222517](2222521 '.v' iEnd[2219398] _bindex[28091]))
                      const-val call_tmp[2222524]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2222526 'move' call_tmp[2222524](2222528 '>' ret[2222510] ret[2222517]))
                      if call_tmp[2222524]
                      {
                        const-val call_tmp[2222533]:range(byteIndex,boundedLow,false)[1140337] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222535]:range(byteIndex,boundedLow,false)[1140337] "temp"
                        (2222538 call chpl_build_low_bounded_range[1139644] chunkStart[2219409] ret_tmp[2222535])
                        (2222541 'move' call_tmp[2222533] ret_tmp[2222535])
                        const-val call_tmp[2222544]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        ref i_this[2222546]:string[26] "temp"
                        (2222548 'move' i_this[2222546](2222550 'set reference' localThis[2219321]))
                        const-val call_tmp[2222552]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[2222554]:string[26] "temp"
                        (2222557 call getSlice[1140693] i_this[2222546] call_tmp[2222533] ret_tmp[2222554])
                        (2222561 'move' call_tmp[2222552] ret_tmp[2222554])
                        (2222564 'move' call_tmp[2222544] call_tmp[2222552])
                        (2222568 call =[38269] chunk[2219336] call_tmp[2222544])
                        ref i_x[2222571]:string[26] "temp"
                        (2222573 'move' i_x[2222571](2222575 'set reference' call_tmp[2222544]))
                        (2222578 call deinit[30831] i_x[2222571])
                        (2222580 '=' yieldChunk[2219331] 1)
                        (2222583 '=' done[2219326] 1)
                      }
                    }
                  }
                }
              }
              if yieldChunk[2219331]
              {
                ref i_x[2222593]:string[26] "temp"
                (2222595 'move' i_x[2222593](2222597 'set reference' chunk[2219336]))
                val ret[2222599]:string[26] "dead after last mention" "RVV" "temp"
                const-val tmp[2222601]:string[26] "dead after last mention" "temp"
                (2222604 call init=[30771] tmp[2222601] i_x[2222593])
                (2222607 'move' ret[2222599] tmp[2222601])
                const-val chpl__elidedIdx[2222610]:string[26] "const" "index var" "insert auto destroy"
                (2222612 'move' chpl__elidedIdx[2222610] ret[2222599])
                ref i_lhs[2222615]:int(64)[13] "temp"
                (2222617 'move' i_lhs[2222615](2222619 'set reference' numElements[2217013]))
                (2222621 '+=' i_lhs[2222615] 1)
                const-val call_tmp[2222624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2222626 'move' call_tmp[2222624](2222628 '>' numElements[2217013] 1))
                if call_tmp[2222624]
                {
                  ref i_x[2222633]:string[26] "temp"
                  (2222635 'move' i_x[2222633](2222637 'set reference' chpl__elidedIdx[2222610]))
                  (2222640 call deinit[30831] i_x[2222633])
                  ref i_x[2222642]:string[26] "temp"
                  (2222644 'move' i_x[2222642](2222646 'set reference' localThis[2219551]))
                  (2222649 call deinit[30831] i_x[2222642])
                  ref i_x[2222660]:string[26] "temp"
                  (2222662 'move' i_x[2222660](2222664 'set reference' chunk[2219336]))
                  (2222667 call deinit[30831] i_x[2222660])
                  ref i_x[2222669]:string[26] "temp"
                  (2222671 'move' i_x[2222669](2222673 'set reference' localThis[2219321]))
                  (2222676 call deinit[30831] i_x[2222669])
                  break _breakLabel[2222786] _breakLabel[2222786]
                }
                ref i_x[2222681]:string[26] "temp"
                (2222683 'move' i_x[2222681](2222685 'set reference' chpl__elidedIdx[2222610]))
                (2222688 call deinit[30831] i_x[2222681])
                (2222690 '=' yieldChunk[2219331] 0)
              }
              if done[2219326]
              {
                ref i_x[2222696]:string[26] "temp"
                (2222698 'move' i_x[2222696](2222700 'set reference' localThis[2219551]))
                (2222703 call deinit[30831] i_x[2222696])
                break _breakLabel[2222753] _breakLabel[2222753]
              }
              const-val coerce_tmp[2222708]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2222710 'move' coerce_tmp[2222708](2222712 'cast' int(64)[13] nBytes[2221950]))
              ref i_lhs[2222715]:int(64)[13] "temp"
              (2222717 'move' i_lhs[2222715](2222719 'set reference' i[2221695]))
              (2222721 '+=' i_lhs[2222715] coerce_tmp[2222708])
              const-val coerce_tmp[2222724]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2222726 'move' coerce_tmp[2222724](2222728 '.v' localThis[2219551] buffLen[30719]))
              const-val call_tmp[2222731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2222733 'move' call_tmp[2222731](2222735 '<' i[2221695] coerce_tmp[2222724]))
              (2222738 'move' tmp[2221889] call_tmp[2222731])
              tmp[2221889]
            }
          }
          ref i_x[2222742]:string[26] "temp"
          (2222744 'move' i_x[2222742](2222746 'set reference' localThis[2219551]))
          (2222749 call deinit[30831] i_x[2222742])
          label _end_cpIndexLen[2222751]
          label _breakLabel[2222753]
          ref i_x[2222764]:string[26] "temp"
          (2222766 'move' i_x[2222764](2222768 'set reference' chunk[2219336]))
          (2222771 call deinit[30831] i_x[2222764])
          ref i_x[2222773]:string[26] "temp"
          (2222775 'move' i_x[2222773](2222777 'set reference' localThis[2219321]))
          (2222780 call deinit[30831] i_x[2222773])
        }
      }
      label _endsplit[2222784]
      label _breakLabel[2222786]
      const-val call_tmp[2222797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2222799 'move' call_tmp[2222797](2222801 '>' numElements[2217013] 1))
      if call_tmp[2222797]
      {
        const-val call_tmp[2222806]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2222808]:string[26] "temp"
        (2222811 call +[38342] "bad cast from string '" i_x[2215804] ret_tmp[2222808])
        (2222815 'move' call_tmp[2222806] ret_tmp[2222808])
        const-val call_tmp[2222818]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2222820]:string[26] "temp"
        (2222823 call +[38342] call_tmp[2222806] "' to " ret_tmp[2222820])
        (2222827 'move' call_tmp[2222818] ret_tmp[2222820])
        const-val call_tmp[2222830]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2222832]:string[26] "temp"
        (2222835 call +[38342] call_tmp[2222818] "uint(64)" ret_tmp[2222832])
        (2222839 'move' call_tmp[2222830] ret_tmp[2222832])
        const-val call_tmp[2222842]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
        val new_temp[2222844]:IllegalArgumentError[168204] "dead after last mention" "temp"
        (2222846 'move' new_temp[2222844](2222849 call _new[1061174] call_tmp[2222830]))
        const-val initTemp[2222851]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
        (2222854 call init[1061276] initTemp[2222851] new_temp[2222844])
        (2222857 'move' call_tmp[2222842] initTemp[2222851])
        val call_tmp[2222860]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2222862]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
        const-val ret_tmp[2222864]:owned Error[962257] "temp"
        ref i_x[2222866]:owned IllegalArgumentError[1061625] "temp"
        (2222868 'move' i_x[2222866](2222870 'set reference' call_tmp[2222842]))
        ref i__retArg[2222872]:owned Error[962257] "temp"
        (2222874 'move' i__retArg[2222872](2222876 'set reference' ret_tmp[2222864]))
        val _formal_tmp_x[2222878]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
        (2222880 'move' _formal_tmp_x[2222878] i_x[2222866])
        const-val ret[2222883]:owned Error[962257] "dead after last mention" "RVV" "temp"
        ref i_this[2222885]:owned IllegalArgumentError[1061625] "temp"
        (2222887 'move' i_this[2222885](2222889 'set reference' _formal_tmp_x[2222878]))
        val coerce_tmp[2222891]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2222893 'move' coerce_tmp[2222891](2222895 '.v' i_this[2222885] chpl_p[1061620]))
        val call_tmp[2222898]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
        (2222900 'move' call_tmp[2222898](2222902 'cast' Error[167942] coerce_tmp[2222891]))
        val castPtr[2222905]:Error[167942] "dead at end of block" "insert auto destroy"
        (2222907 'move' castPtr[2222905] call_tmp[2222898])
        ref i_this[2222910]:owned IllegalArgumentError[1061625] "temp"
        (2222912 'move' i_this[2222910](2222914 'set reference' _formal_tmp_x[2222878]))
        val tmp[2222916]:IllegalArgumentError[168204] "temp"
        (2222918 'move' tmp[2222916](2222920 'cast' IllegalArgumentError[168204] nil[44]))
        (2222923 '.=' i_this[2222910] chpl_p[1061620] tmp[2222916])
        val coerce_tmp[2222927]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2222929 'move' coerce_tmp[2222927](2222931 'cast' object[22] call_tmp[2222898]))
        const-val call_tmp[2222934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2222936 'move' call_tmp[2222934](2222938 'ptr_eq' coerce_tmp[2222927] nil[44]))
        if call_tmp[2222934]
        {
          (2222944 call nilCheckHalt[210068] "argument to ! is nil")
        }
        const-val call_tmp[2222947]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
        const-val initTemp[2222949]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
        (2222952 call init[963893] initTemp[2222949] castPtr[2222905])
        (2222955 'move' call_tmp[2222947] initTemp[2222949])
        (2222958 'move' ret[2222883] call_tmp[2222947])
        (2222962 call chpl__autoDestroy[1476602] _formal_tmp_x[2222878])
        (2222964 '=' i__retArg[2222872] ret[2222883])
        (2222967 'move' coerce_tmp[2222862] ret_tmp[2222864])
        const-val _formal_tmp_in_err[2222970]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
        (2222972 'move' _formal_tmp_in_err[2222970] coerce_tmp[2222862])
        (2222975 'move' call_tmp[2222860](2222978 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2222970]))
        (2222980 '=' error[1765934] call_tmp[2222860])
        ref i_x[2222983]:string[26] "temp"
        (2222985 'move' i_x[2222983](2222987 'set reference' call_tmp[2222830]))
        (2222990 call deinit[30831] i_x[2222983])
        ref i_x[2222992]:string[26] "temp"
        (2222994 'move' i_x[2222992](2222996 'set reference' call_tmp[2222818]))
        (2222999 call deinit[30831] i_x[2222992])
        ref i_x[2223001]:string[26] "temp"
        (2223003 'move' i_x[2223001](2223005 'set reference' call_tmp[2222806]))
        (2223008 call deinit[30831] i_x[2223001])
        ref i_x[2223010]:string[26] "temp"
        (2223012 'move' i_x[2223010](2223014 'set reference' localX[2215851]))
        (2223017 call deinit[30831] i_x[2223010])
        gotoErrorHandlingReturn _end__cast[2223730] _end__cast[2223730]
        ref i_x[2223021]:string[26] "temp"
        (2223023 'move' i_x[2223021](2223025 'set reference' call_tmp[2222830]))
        (2223028 call deinit[30831] i_x[2223021])
        ref i_x[2223030]:string[26] "temp"
        (2223032 'move' i_x[2223030](2223034 'set reference' call_tmp[2222818]))
        (2223037 call deinit[30831] i_x[2223030])
        ref i_x[2223039]:string[26] "temp"
        (2223041 'move' i_x[2223039](2223043 'set reference' call_tmp[2222806]))
        (2223046 call deinit[30831] i_x[2223039])
      }
      ref i_this[2223049]:string[26] "temp"
      (2223051 'move' i_this[2223049](2223053 'set reference' localX[2215851]))
      const-val n[2223055]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2223057]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2223059 'move' coerce_tmp[2223057](2223061 '.v' localX[2215851] cachedNumCodepoints[30731]))
      (2223064 '=' n[2223055] coerce_tmp[2223057])
      (2223067 'noop')
      const-val call_tmp[2223068]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223070 'move' call_tmp[2223068](2223073 call countNumCodepoints[181346] i_this[2223049]))
      const-val call_tmp[2223075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223077 'move' call_tmp[2223075](2223079 '!=' coerce_tmp[2223057] call_tmp[2223068]))
      if call_tmp[2223075]
      {
        (2223085 call halt[154071] "Encountered corrupt string metadata")
      }
      const-val call_tmp[2223088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223090 'move' call_tmp[2223088](2223092 '>=' n[2223055] 2))
      if call_tmp[2223088]
      {
        const-val call_tmp[2223097]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2223099]:string[26] "temp"
        (2223101 'move' i_this[2223099](2223103 'set reference' localX[2215851]))
        const-val call_tmp[2223105]:codepointIndex[28274] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret[2223107]:codepointIndex[28274] "dead after last mention" "RVV" "temp"
        val cpi[2223109]:codepointIndex[28274] "dead at end of block" "insert auto destroy"
        (2223112 call init[28201] cpi[2223109])
        (2223114 '.=' cpi[2223109] _cpindex[28195] 0)
        (2223118 'move' ret[2223107] cpi[2223109])
        (2223121 'move' call_tmp[2223105] ret[2223107])
        const-val call_tmp[2223124]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2223126]:string[26] "temp"
        (2223129 call this[34632] i_this[2223099] call_tmp[2223105] ret_tmp[2223126])
        (2223133 'move' call_tmp[2223124] ret_tmp[2223126])
        (2223136 'move' call_tmp[2223097] call_tmp[2223124])
        const-val call_tmp[2223139]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2223141]:range(int(64),boundedLow,false)[1084544] "temp"
        (2223144 call chpl_build_low_bounded_range[1083937] 1 ret_tmp[2223141])
        (2223147 'move' call_tmp[2223139] ret_tmp[2223141])
        const-val call_tmp[2223150]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2223152]:string[26] "temp"
        (2223154 'move' i_this[2223152](2223156 'set reference' localX[2215851]))
        const-val call_tmp[2223158]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2223160]:string[26] "temp"
        (2223163 call getSlice[1122532] i_this[2223152] call_tmp[2223139] ret_tmp[2223160])
        (2223167 'move' call_tmp[2223158] ret_tmp[2223160])
        (2223170 'move' call_tmp[2223150] call_tmp[2223158])
        const-val call_tmp[2223173]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref i_this[2223175]:string[26] "temp"
        (2223177 'move' i_this[2223175](2223179 'set reference' call_tmp[2223150]))
        val inlineImm[2223181]:string[26] "temp"
        (2223183 'move' inlineImm[2223181] "_")
        ref i_needle[2223186]:string[26] "temp"
        (2223188 'move' i_needle[2223186](2223190 'set reference' inlineImm[2223181]))
        val inlineImm[2223192]:string[26] "temp"
        (2223194 'move' inlineImm[2223192] "")
        ref i_replacement[2223197]:string[26] "temp"
        (2223199 'move' i_replacement[2223197](2223201 'set reference' inlineImm[2223192]))
        const-val call_tmp[2223203]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2223205]:string[26] "temp"
        (2223208 call doReplace[1177898] i_this[2223175] i_needle[2223186] i_replacement[2223197] -1 ret_tmp[2223205])
        (2223214 'move' call_tmp[2223203] ret_tmp[2223205])
        (2223217 'move' call_tmp[2223173] call_tmp[2223203])
        const-val call_tmp[2223220]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2223222]:string[26] "temp"
        (2223225 call +[38342] call_tmp[2223097] call_tmp[2223173] ret_tmp[2223222])
        (2223229 'move' call_tmp[2223220] ret_tmp[2223222])
        (2223233 call =[38269] localX[2215851] call_tmp[2223220])
        ref i_x[2223236]:string[26] "temp"
        (2223238 'move' i_x[2223236](2223240 'set reference' call_tmp[2223220]))
        (2223243 call deinit[30831] i_x[2223236])
        ref i_x[2223245]:string[26] "temp"
        (2223247 'move' i_x[2223245](2223249 'set reference' call_tmp[2223173]))
        (2223252 call deinit[30831] i_x[2223245])
        ref i_x[2223254]:string[26] "temp"
        (2223256 'move' i_x[2223254](2223258 'set reference' call_tmp[2223150]))
        (2223261 call deinit[30831] i_x[2223254])
        ref i_x[2223263]:string[26] "temp"
        (2223265 'move' i_x[2223263](2223267 'set reference' call_tmp[2223097]))
        (2223270 call deinit[30831] i_x[2223263])
      }
    }
    const-val coerce_tmp[2223274]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2223276 'move' coerce_tmp[2223274](2223278 '.v' localX[2215851] buffLen[30719]))
    const-val call_tmp[2223281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223283 'move' call_tmp[2223281](2223285 '==' coerce_tmp[2223274] 0))
    if call_tmp[2223281]
    {
      const-val call_tmp[2223290]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[2223292]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (2223294 'move' new_temp[2223292](2223297 call _new[1061174] "bad cast from empty string to uint(64)"))
      const-val initTemp[2223299]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (2223302 call init[1061276] initTemp[2223299] new_temp[2223292])
      (2223305 'move' call_tmp[2223290] initTemp[2223299])
      val call_tmp[2223308]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2223310]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2223312]:owned Error[962257] "temp"
      ref i_x[2223314]:owned IllegalArgumentError[1061625] "temp"
      (2223316 'move' i_x[2223314](2223318 'set reference' call_tmp[2223290]))
      ref i__retArg[2223320]:owned Error[962257] "temp"
      (2223322 'move' i__retArg[2223320](2223324 'set reference' ret_tmp[2223312]))
      val _formal_tmp_x[2223326]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2223328 'move' _formal_tmp_x[2223326] i_x[2223314])
      const-val ret[2223331]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2223333]:owned IllegalArgumentError[1061625] "temp"
      (2223335 'move' i_this[2223333](2223337 'set reference' _formal_tmp_x[2223326]))
      val coerce_tmp[2223339]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2223341 'move' coerce_tmp[2223339](2223343 '.v' i_this[2223333] chpl_p[1061620]))
      val call_tmp[2223346]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223348 'move' call_tmp[2223346](2223350 'cast' Error[167942] coerce_tmp[2223339]))
      val castPtr[2223353]:Error[167942] "dead at end of block" "insert auto destroy"
      (2223355 'move' castPtr[2223353] call_tmp[2223346])
      ref i_this[2223358]:owned IllegalArgumentError[1061625] "temp"
      (2223360 'move' i_this[2223358](2223362 'set reference' _formal_tmp_x[2223326]))
      val tmp[2223364]:IllegalArgumentError[168204] "temp"
      (2223366 'move' tmp[2223364](2223368 'cast' IllegalArgumentError[168204] nil[44]))
      (2223371 '.=' i_this[2223358] chpl_p[1061620] tmp[2223364])
      val coerce_tmp[2223375]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2223377 'move' coerce_tmp[2223375](2223379 'cast' object[22] call_tmp[2223346]))
      const-val call_tmp[2223382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223384 'move' call_tmp[2223382](2223386 'ptr_eq' coerce_tmp[2223375] nil[44]))
      if call_tmp[2223382]
      {
        (2223392 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2223395]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2223397]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2223400 call init[963893] initTemp[2223397] castPtr[2223353])
      (2223403 'move' call_tmp[2223395] initTemp[2223397])
      (2223406 'move' ret[2223331] call_tmp[2223395])
      (2223410 call chpl__autoDestroy[1476602] _formal_tmp_x[2223326])
      (2223412 '=' i__retArg[2223320] ret[2223331])
      (2223415 'move' coerce_tmp[2223310] ret_tmp[2223312])
      const-val _formal_tmp_in_err[2223418]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2223420 'move' _formal_tmp_in_err[2223418] coerce_tmp[2223310])
      (2223423 'move' call_tmp[2223308](2223426 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2223418]))
      (2223428 '=' error[1765934] call_tmp[2223308])
      ref i_x[2223431]:string[26] "temp"
      (2223433 'move' i_x[2223431](2223435 'set reference' localX[2215851]))
      (2223438 call deinit[30831] i_x[2223431])
      gotoErrorHandlingReturn _end__cast[2223730] _end__cast[2223730]
    }
    val coerce_tmp[2223443]:c_ptr(uint(8))[935386] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2223445 'move' coerce_tmp[2223443](2223447 '.v' localX[2215851] buff[30737]))
    const-val call_tmp[2223450]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223452 'move' call_tmp[2223450](2223454 'cast' c_string[19] coerce_tmp[2223443]))
    const-val call_tmp[2223457]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
    (2223459 'move' call_tmp[2223457](2223462 call c_string_to_uint64_t[1350124] call_tmp[2223450] isErr[2215821]))
    (2223465 'move' retVal[2215819] call_tmp[2223457])
    const-val call_tmp[2223468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223470 'move' call_tmp[2223468] isErr[2215821])
    if call_tmp[2223468]
    {
      const-val call_tmp[2223475]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2223477]:string[26] "temp"
      (2223480 call +[38342] "bad cast from string '" i_x[2215804] ret_tmp[2223477])
      (2223484 'move' call_tmp[2223475] ret_tmp[2223477])
      const-val call_tmp[2223487]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2223489]:string[26] "temp"
      (2223492 call +[38342] call_tmp[2223475] "' to " ret_tmp[2223489])
      (2223496 'move' call_tmp[2223487] ret_tmp[2223489])
      const-val call_tmp[2223499]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2223501]:string[26] "temp"
      (2223504 call +[38342] call_tmp[2223487] "uint(64)" ret_tmp[2223501])
      (2223508 'move' call_tmp[2223499] ret_tmp[2223501])
      const-val call_tmp[2223511]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[2223513]:IllegalArgumentError[168204] "dead after last mention" "temp"
      (2223515 'move' new_temp[2223513](2223518 call _new[1061174] call_tmp[2223499]))
      const-val initTemp[2223520]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
      (2223523 call init[1061276] initTemp[2223520] new_temp[2223513])
      (2223526 'move' call_tmp[2223511] initTemp[2223520])
      val call_tmp[2223529]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2223531]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2223533]:owned Error[962257] "temp"
      ref i_x[2223535]:owned IllegalArgumentError[1061625] "temp"
      (2223537 'move' i_x[2223535](2223539 'set reference' call_tmp[2223511]))
      ref i__retArg[2223541]:owned Error[962257] "temp"
      (2223543 'move' i__retArg[2223541](2223545 'set reference' ret_tmp[2223533]))
      val _formal_tmp_x[2223547]:owned IllegalArgumentError[1061625] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2223549 'move' _formal_tmp_x[2223547] i_x[2223535])
      const-val ret[2223552]:owned Error[962257] "dead after last mention" "RVV" "temp"
      ref i_this[2223554]:owned IllegalArgumentError[1061625] "temp"
      (2223556 'move' i_this[2223554](2223558 'set reference' _formal_tmp_x[2223547]))
      val coerce_tmp[2223560]:IllegalArgumentError[168204] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2223562 'move' coerce_tmp[2223560](2223564 '.v' i_this[2223554] chpl_p[1061620]))
      val call_tmp[2223567]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223569 'move' call_tmp[2223567](2223571 'cast' Error[167942] coerce_tmp[2223560]))
      val castPtr[2223574]:Error[167942] "dead at end of block" "insert auto destroy"
      (2223576 'move' castPtr[2223574] call_tmp[2223567])
      ref i_this[2223579]:owned IllegalArgumentError[1061625] "temp"
      (2223581 'move' i_this[2223579](2223583 'set reference' _formal_tmp_x[2223547]))
      val tmp[2223585]:IllegalArgumentError[168204] "temp"
      (2223587 'move' tmp[2223585](2223589 'cast' IllegalArgumentError[168204] nil[44]))
      (2223592 '.=' i_this[2223579] chpl_p[1061620] tmp[2223585])
      val coerce_tmp[2223596]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2223598 'move' coerce_tmp[2223596](2223600 'cast' object[22] call_tmp[2223567]))
      const-val call_tmp[2223603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223605 'move' call_tmp[2223603](2223607 'ptr_eq' coerce_tmp[2223596] nil[44]))
      if call_tmp[2223603]
      {
        (2223613 call nilCheckHalt[210068] "argument to ! is nil")
      }
      const-val call_tmp[2223616]:owned Error[962257] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2223618]:owned Error[962257] "dead after last mention" "delay instantiation" "temp"
      (2223621 call init[963893] initTemp[2223618] castPtr[2223574])
      (2223624 'move' call_tmp[2223616] initTemp[2223618])
      (2223627 'move' ret[2223552] call_tmp[2223616])
      (2223631 call chpl__autoDestroy[1476602] _formal_tmp_x[2223547])
      (2223633 '=' i__retArg[2223541] ret[2223552])
      (2223636 'move' coerce_tmp[2223531] ret_tmp[2223533])
      const-val _formal_tmp_in_err[2223639]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2223641 'move' _formal_tmp_in_err[2223639] coerce_tmp[2223531])
      (2223644 'move' call_tmp[2223529](2223647 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[2223639]))
      (2223649 '=' error[1765934] call_tmp[2223529])
      ref i_x[2223652]:string[26] "temp"
      (2223654 'move' i_x[2223652](2223656 'set reference' call_tmp[2223499]))
      (2223659 call deinit[30831] i_x[2223652])
      ref i_x[2223661]:string[26] "temp"
      (2223663 'move' i_x[2223661](2223665 'set reference' call_tmp[2223487]))
      (2223668 call deinit[30831] i_x[2223661])
      ref i_x[2223670]:string[26] "temp"
      (2223672 'move' i_x[2223670](2223674 'set reference' call_tmp[2223475]))
      (2223677 call deinit[30831] i_x[2223670])
      ref i_x[2223679]:string[26] "temp"
      (2223681 'move' i_x[2223679](2223683 'set reference' localX[2215851]))
      (2223686 call deinit[30831] i_x[2223679])
      gotoErrorHandlingReturn _end__cast[2223730] _end__cast[2223730]
      ref i_x[2223690]:string[26] "temp"
      (2223692 'move' i_x[2223690](2223694 'set reference' call_tmp[2223499]))
      (2223697 call deinit[30831] i_x[2223690])
      ref i_x[2223699]:string[26] "temp"
      (2223701 'move' i_x[2223699](2223703 'set reference' call_tmp[2223487]))
      (2223706 call deinit[30831] i_x[2223699])
      ref i_x[2223708]:string[26] "temp"
      (2223710 'move' i_x[2223708](2223712 'set reference' call_tmp[2223475]))
      (2223715 call deinit[30831] i_x[2223708])
    }
    (2223718 'move' ret[2215817] retVal[2215819])
    ref i_x[2223721]:string[26] "temp"
    (2223723 'move' i_x[2223721](2223725 'set reference' localX[2215851]))
    (2223728 call deinit[30831] i_x[2223721])
    label _end__cast[2223730]
    (1349864 'move' call_tmp[1349862] ret[2215817])
    val errorExists[2031087]:bool[10] "temp"
    (2031092 'move' errorExists[2031087](2031089 '!=' error[1765934] nil[44]))
    if errorExists[2031087]
    {
      (1765940 '=' error_out[1765898] error[1765934])
      ref i_x[2052148]:string[26] "temp"
      (2052152 'move' i_x[2052148](2052150 'set reference' str[1349809]))
      (2052156 call deinit[30831] i_x[2052148])
      gotoErrorHandlingReturn _end__do_command_line_cast[1349879] _end__do_command_line_cast[1349879]
    }
    (1349870 'move' ret[1349741] call_tmp[1349862])
    ref i_x[2052160]:string[26] "temp"
    (2052164 'move' i_x[2052160](2052162 'set reference' str[1349809]))
    (2052168 call deinit[30831] i_x[2052160])
    gotoReturn _end__do_command_line_cast[1349879] _end__do_command_line_cast[1349879]
    ref i_x[2052172]:string[26] "temp"
    (2052176 'move' i_x[2052172](2052174 'set reference' str[1349809]))
    (2052180 call deinit[30831] i_x[2052172])
    label _end__do_command_line_cast[1349879]
    (1349881 return ret[1349741])
  }
  function _do_command_line_cast[1352113](const in arg x[1352117]:c_string[19], ref arg error_out[1766041]:Error[167942], ref arg _retArg[1790383]:string[26]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1352119]:string[26] "dead after last mention" "RVV" "temp"
    const-val str[1352187]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1766043]:Error[167942] "error variable" "temp"
    (1766059 'move' error[1766043] nil[44])
    const-val call_tmp[1352200]:string[26] "dead at end of block" "maybe param" "temp"
    const-val default_arg_length[1352351]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val ret[2118037]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[2118039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2118041 'move' call_tmp[2118039](2118043 'string_length_bytes' x[1352117]))
    (2118045 'move' ret[2118037] call_tmp[2118039])
    (1352356 'move' default_arg_length[1352351] ret[2118037])
    val errorExists[2031127]:bool[10] "temp"
    (2031132 'move' errorExists[2031127](2031129 '!=' error[1766043] nil[44]))
    if errorExists[2031127]
    {
      gotoErrorHandling handler[1766044] handler[1766044]
    }
    const-val ret_tmp[1781670]:string[26] "temp"
    const-val ret[2061233]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2061235]:c_ptr(uint(8))[935386] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061237 'move' call_tmp[2061235](2061239 'cast' c_ptr(uint(8))[935386] x[1352117]))
    const-val call_tmp[2061242]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061244]:Error[167942] "error variable" "temp"
    (2061246 'move' error[2061244] nil[44])
    const-val ret[2061249]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2061251]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2061253]:Error[167942] "error variable" "temp"
    (2061255 'move' error[2061253] nil[44])
    const-val ret_tmp[2061258]:string[26] "temp"
    (2061261 call decodeByteBuffer[173904] call_tmp[2061235] default_arg_length[1352351] strict[173658] error[2061253] ret_tmp[2061258])
    (2061267 'move' call_tmp[2061251] ret_tmp[2061258])
    val errorExists[2061270]:bool[10] "temp"
    (2061272 'move' errorExists[2061270](2061274 '!=' error[2061253] nil[44]))
    if errorExists[2061270]
    {
      (2061279 '=' error[2061244] error[2061253])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061288] _endcreateStringWithNewBuffer[2061288]
    }
    (2061285 'move' ret[2061249] call_tmp[2061251])
    label _endcreateStringWithNewBuffer[2061288]
    (2061290 'move' call_tmp[2061242] ret[2061249])
    val errorExists[2061293]:bool[10] "temp"
    (2061295 'move' errorExists[2061293](2061297 '!=' error[2061244] nil[44]))
    if errorExists[2061293]
    {
      (2061302 '=' error[1766043] error[2061244])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2061311] _endcreateStringWithNewBuffer[2061311]
    }
    (2061308 'move' ret[2061233] call_tmp[2061242])
    label _endcreateStringWithNewBuffer[2061311]
    (2061313 '=' ret_tmp[1781670] ret[2061233])
    (1781673 'move' call_tmp[1352200] ret_tmp[1781670])
    val errorExists[2031135]:bool[10] "temp"
    (2031140 'move' errorExists[2031135](2031137 '!=' error[1766043] nil[44]))
    if errorExists[2031135]
    {
      gotoErrorHandling handler[1766044] handler[1766044]
    }
    (1352207 'move' str[1352187] call_tmp[1352200])
    label handler[1766044]
    const-val shouldHandleError[1766068]:bool[10] "temp"
    val errorExists[2031143]:bool[10] "temp"
    (2031148 'move' errorExists[2031143](2031145 '!=' error[1766043] nil[44]))
    (1766072 'move' shouldHandleError[1766068] errorExists[2031143])
    if shouldHandleError[1766068]
    {
      (1766065 call chpl_uncaught_error[170247] error[1766043])
    }
    (1352231 'move' ret[1352119] str[1352187])
    gotoReturn _end__do_command_line_cast[1352257] _end__do_command_line_cast[1352257]
    ref i_x[2052436]:string[26] "temp"
    (2052440 'move' i_x[2052436](2052438 'set reference' str[1352187]))
    (2052444 call deinit[30831] i_x[2052436])
    label _end__do_command_line_cast[1352257]
    (1790385 '=' _retArg[1790383] ret[1352119])
    (1790387 return _void[55])
  }
  function _command_line_cast[1021407](const in arg x[1021413]:c_string[19]) : int(64)[13] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1021415]:int(64)[13] "dead after last mention" "RVV" "temp"
    val error[1763390]:Error[167942] "error variable" "temp"
    (1763399 'move' error[1763390] nil[44])
    const-val call_tmp[1021426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021428 'move' call_tmp[1021426](1021431 call _do_command_line_cast[1021446] x[1021413] error[1763390]))
    val errorExists[2029807]:bool[10] "temp"
    (2029812 'move' errorExists[2029807](2029809 '!=' error[1763390] nil[44]))
    if errorExists[2029807]
    {
      gotoErrorHandling handler[1763391] handler[1763391]
    }
    (1021434 'move' ret[1021415] call_tmp[1021426])
    gotoReturn _end__command_line_cast[1021441] _end__command_line_cast[1021441]
    label handler[1763391]
    const-val shouldHandleError[1763408]:bool[10] "temp"
    val errorExists[2029815]:bool[10] "temp"
    (2029820 'move' errorExists[2029815](2029817 '!=' error[1763390] nil[44]))
    (1763412 'move' shouldHandleError[1763408] errorExists[2029815])
    if shouldHandleError[1763408]
    {
      (1763405 call chpl_uncaught_error[170247] error[1763390])
    }
    label _end__command_line_cast[1021441]
    (1021443 return ret[1021415])
  }
  function _command_line_cast[1202348](const in arg x[1202354]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1202356]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1765511]:Error[167942] "error variable" "temp"
    (1765520 'move' error[1765511] nil[44])
    const-val call_tmp[1202367]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1202369 'move' call_tmp[1202367](1202372 call _do_command_line_cast[1202387] x[1202354] error[1765511]))
    val errorExists[2030895]:bool[10] "temp"
    (2030900 'move' errorExists[2030895](2030897 '!=' error[1765511] nil[44]))
    if errorExists[2030895]
    {
      gotoErrorHandling handler[1765512] handler[1765512]
    }
    (1202375 'move' ret[1202356] call_tmp[1202367])
    gotoReturn _end__command_line_cast[1202382] _end__command_line_cast[1202382]
    label handler[1765512]
    const-val shouldHandleError[1765529]:bool[10] "temp"
    val errorExists[2030903]:bool[10] "temp"
    (2030908 'move' errorExists[2030903](2030905 '!=' error[1765511] nil[44]))
    (1765533 'move' shouldHandleError[1765529] errorExists[2030903])
    if shouldHandleError[1765529]
    {
      (1765526 call chpl_uncaught_error[170247] error[1765511])
    }
    label _end__command_line_cast[1202382]
    (1202384 return ret[1202356])
  }
  function _command_line_cast[1205082](const in arg x[1205088]:c_string[19]) : int(64)[13] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1205090]:int(64)[13] "dead after last mention" "RVV" "temp"
    val error[1765615]:Error[167942] "error variable" "temp"
    (1765624 'move' error[1765615] nil[44])
    const-val call_tmp[1205101]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1205103 'move' call_tmp[1205101](1205106 call _do_command_line_cast[1021446] x[1205088] error[1765615]))
    val errorExists[2030943]:bool[10] "temp"
    (2030948 'move' errorExists[2030943](2030945 '!=' error[1765615] nil[44]))
    if errorExists[2030943]
    {
      gotoErrorHandling handler[1765616] handler[1765616]
    }
    (1205109 'move' ret[1205090] call_tmp[1205101])
    gotoReturn _end__command_line_cast[1205116] _end__command_line_cast[1205116]
    label handler[1765616]
    const-val shouldHandleError[1765633]:bool[10] "temp"
    val errorExists[2030951]:bool[10] "temp"
    (2030956 'move' errorExists[2030951](2030953 '!=' error[1765615] nil[44]))
    (1765637 'move' shouldHandleError[1765633] errorExists[2030951])
    if shouldHandleError[1765633]
    {
      (1765630 call chpl_uncaught_error[170247] error[1765615])
    }
    label _end__command_line_cast[1205116]
    (1205118 return ret[1205090])
  }
  function _command_line_cast[1240547](const in arg x[1240553]:c_string[19]) : int(64)[13] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1240555]:int(64)[13] "dead after last mention" "RVV" "temp"
    val error[1765671]:Error[167942] "error variable" "temp"
    (1765680 'move' error[1765671] nil[44])
    const-val call_tmp[1240566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1240568 'move' call_tmp[1240566](1240571 call _do_command_line_cast[1021446] x[1240553] error[1765671]))
    val errorExists[2030959]:bool[10] "temp"
    (2030964 'move' errorExists[2030959](2030961 '!=' error[1765671] nil[44]))
    if errorExists[2030959]
    {
      gotoErrorHandling handler[1765672] handler[1765672]
    }
    (1240574 'move' ret[1240555] call_tmp[1240566])
    gotoReturn _end__command_line_cast[1240581] _end__command_line_cast[1240581]
    label handler[1765672]
    const-val shouldHandleError[1765689]:bool[10] "temp"
    val errorExists[2030967]:bool[10] "temp"
    (2030972 'move' errorExists[2030967](2030969 '!=' error[1765671] nil[44]))
    (1765693 'move' shouldHandleError[1765689] errorExists[2030967])
    if shouldHandleError[1765689]
    {
      (1765686 call chpl_uncaught_error[170247] error[1765671])
    }
    label _end__command_line_cast[1240581]
    (1240583 return ret[1240555])
  }
  function _command_line_cast[1349516](const in arg x[1349522]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349524]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1765768]:Error[167942] "error variable" "temp"
    (1765777 'move' error[1765768] nil[44])
    const-val call_tmp[1349535]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1349537 'move' call_tmp[1349535](1349540 call _do_command_line_cast[1202387] x[1349522] error[1765768]))
    val errorExists[2030983]:bool[10] "temp"
    (2030988 'move' errorExists[2030983](2030985 '!=' error[1765768] nil[44]))
    if errorExists[2030983]
    {
      gotoErrorHandling handler[1765769] handler[1765769]
    }
    (1349543 'move' ret[1349524] call_tmp[1349535])
    gotoReturn _end__command_line_cast[1349550] _end__command_line_cast[1349550]
    label handler[1765769]
    const-val shouldHandleError[1765786]:bool[10] "temp"
    val errorExists[2030991]:bool[10] "temp"
    (2030996 'move' errorExists[2030991](2030993 '!=' error[1765768] nil[44]))
    (1765790 'move' shouldHandleError[1765786] errorExists[2030991])
    if shouldHandleError[1765786]
    {
      (1765783 call chpl_uncaught_error[170247] error[1765768])
    }
    label _end__command_line_cast[1349550]
    (1349552 return ret[1349524])
  }
  function _command_line_cast[1349559](const in arg x[1349565]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349567]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1765794]:Error[167942] "error variable" "temp"
    (1765803 'move' error[1765794] nil[44])
    const-val call_tmp[1349578]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1349580 'move' call_tmp[1349578](1349583 call _do_command_line_cast[1202387] x[1349565] error[1765794]))
    val errorExists[2030999]:bool[10] "temp"
    (2031004 'move' errorExists[2030999](2031001 '!=' error[1765794] nil[44]))
    if errorExists[2030999]
    {
      gotoErrorHandling handler[1765795] handler[1765795]
    }
    (1349586 'move' ret[1349567] call_tmp[1349578])
    gotoReturn _end__command_line_cast[1349593] _end__command_line_cast[1349593]
    label handler[1765795]
    const-val shouldHandleError[1765812]:bool[10] "temp"
    val errorExists[2031007]:bool[10] "temp"
    (2031012 'move' errorExists[2031007](2031009 '!=' error[1765794] nil[44]))
    (1765816 'move' shouldHandleError[1765812] errorExists[2031007])
    if shouldHandleError[1765812]
    {
      (1765809 call chpl_uncaught_error[170247] error[1765794])
    }
    label _end__command_line_cast[1349593]
    (1349595 return ret[1349567])
  }
  function _command_line_cast[1349602](const in arg x[1349608]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349610]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1765820]:Error[167942] "error variable" "temp"
    (1765829 'move' error[1765820] nil[44])
    const-val call_tmp[1349621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1349623 'move' call_tmp[1349621](1349626 call _do_command_line_cast[1202387] x[1349608] error[1765820]))
    val errorExists[2031015]:bool[10] "temp"
    (2031020 'move' errorExists[2031015](2031017 '!=' error[1765820] nil[44]))
    if errorExists[2031015]
    {
      gotoErrorHandling handler[1765821] handler[1765821]
    }
    (1349629 'move' ret[1349610] call_tmp[1349621])
    gotoReturn _end__command_line_cast[1349636] _end__command_line_cast[1349636]
    label handler[1765821]
    const-val shouldHandleError[1765838]:bool[10] "temp"
    val errorExists[2031023]:bool[10] "temp"
    (2031028 'move' errorExists[2031023](2031025 '!=' error[1765820] nil[44]))
    (1765842 'move' shouldHandleError[1765838] errorExists[2031023])
    if shouldHandleError[1765838]
    {
      (1765835 call chpl_uncaught_error[170247] error[1765820])
    }
    label _end__command_line_cast[1349636]
    (1349638 return ret[1349610])
  }
  function _command_line_cast[1349645](const in arg x[1349651]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349653]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1765846]:Error[167942] "error variable" "temp"
    (1765855 'move' error[1765846] nil[44])
    const-val call_tmp[1349664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1349666 'move' call_tmp[1349664](1349669 call _do_command_line_cast[1202387] x[1349651] error[1765846]))
    val errorExists[2031031]:bool[10] "temp"
    (2031036 'move' errorExists[2031031](2031033 '!=' error[1765846] nil[44]))
    if errorExists[2031031]
    {
      gotoErrorHandling handler[1765847] handler[1765847]
    }
    (1349672 'move' ret[1349653] call_tmp[1349664])
    gotoReturn _end__command_line_cast[1349679] _end__command_line_cast[1349679]
    label handler[1765847]
    const-val shouldHandleError[1765864]:bool[10] "temp"
    val errorExists[2031039]:bool[10] "temp"
    (2031044 'move' errorExists[2031039](2031041 '!=' error[1765846] nil[44]))
    (1765868 'move' shouldHandleError[1765864] errorExists[2031039])
    if shouldHandleError[1765864]
    {
      (1765861 call chpl_uncaught_error[170247] error[1765846])
    }
    label _end__command_line_cast[1349679]
    (1349681 return ret[1349653])
  }
  function _command_line_cast[1349696](const in arg x[1349702]:c_string[19]) : uint(64)[115] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1349704]:uint(64)[115] "dead after last mention" "RVV" "temp"
    val error[1765872]:Error[167942] "error variable" "temp"
    (1765881 'move' error[1765872] nil[44])
    const-val call_tmp[1349715]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1349717 'move' call_tmp[1349715](1349720 call _do_command_line_cast[1349735] x[1349702] error[1765872]))
    val errorExists[2031047]:bool[10] "temp"
    (2031052 'move' errorExists[2031047](2031049 '!=' error[1765872] nil[44]))
    if errorExists[2031047]
    {
      gotoErrorHandling handler[1765873] handler[1765873]
    }
    (1349723 'move' ret[1349704] call_tmp[1349715])
    gotoReturn _end__command_line_cast[1349730] _end__command_line_cast[1349730]
    label handler[1765873]
    const-val shouldHandleError[1765890]:bool[10] "temp"
    val errorExists[2031055]:bool[10] "temp"
    (2031060 'move' errorExists[2031055](2031057 '!=' error[1765872] nil[44]))
    (1765894 'move' shouldHandleError[1765890] errorExists[2031055])
    if shouldHandleError[1765890]
    {
      (1765887 call chpl_uncaught_error[170247] error[1765872])
    }
    label _end__command_line_cast[1349730]
    (1349732 return ret[1349704])
  }
  function _command_line_cast[1352030](const in arg x[1352036]:c_string[19]) : uint(64)[115] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1352038]:uint(64)[115] "dead after last mention" "RVV" "temp"
    val error[1765989]:Error[167942] "error variable" "temp"
    (1765998 'move' error[1765989] nil[44])
    const-val call_tmp[1352049]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (1352051 'move' call_tmp[1352049](1352054 call _do_command_line_cast[1349735] x[1352036] error[1765989]))
    val errorExists[2031095]:bool[10] "temp"
    (2031100 'move' errorExists[2031095](2031097 '!=' error[1765989] nil[44]))
    if errorExists[2031095]
    {
      gotoErrorHandling handler[1765990] handler[1765990]
    }
    (1352057 'move' ret[1352038] call_tmp[1352049])
    gotoReturn _end__command_line_cast[1352064] _end__command_line_cast[1352064]
    label handler[1765990]
    const-val shouldHandleError[1766007]:bool[10] "temp"
    val errorExists[2031103]:bool[10] "temp"
    (2031108 'move' errorExists[2031103](2031105 '!=' error[1765989] nil[44]))
    (1766011 'move' shouldHandleError[1766007] errorExists[2031103])
    if shouldHandleError[1766007]
    {
      (1766004 call chpl_uncaught_error[170247] error[1765989])
    }
    label _end__command_line_cast[1352064]
    (1352066 return ret[1352038])
  }
  function _command_line_cast[1352074](const in arg x[1352080]:c_string[19], ref arg _retArg[1790359]:string[26]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1352082]:string[26] "dead after last mention" "RVV" "temp"
    val error[1766015]:Error[167942] "error variable" "temp"
    (1766024 'move' error[1766015] nil[44])
    const-val call_tmp[1352093]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790365]:string[26] "temp"
    (1352098 call _do_command_line_cast[1352113] x[1352080] error[1766015] ret_tmp[1790365])
    (1790368 'move' call_tmp[1352093] ret_tmp[1790365])
    val errorExists[2031111]:bool[10] "temp"
    (2031116 'move' errorExists[2031111](2031113 '!=' error[1766015] nil[44]))
    if errorExists[2031111]
    {
      gotoErrorHandling handler[1766016] handler[1766016]
    }
    (1352101 'move' ret[1352082] call_tmp[1352093])
    gotoReturn _end__command_line_cast[1352108] _end__command_line_cast[1352108]
    label handler[1766016]
    const-val shouldHandleError[1766033]:bool[10] "temp"
    val errorExists[2031119]:bool[10] "temp"
    (2031124 'move' errorExists[2031119](2031121 '!=' error[1766015] nil[44]))
    (1766037 'move' shouldHandleError[1766033] errorExists[2031119])
    if shouldHandleError[1766033]
    {
      (1766030 call chpl_uncaught_error[170247] error[1766015])
    }
    label _end__command_line_cast[1352108]
    (1790361 '=' _retArg[1790359] ret[1352082])
    (1790363 return _void[55])
  }
  function _command_line_cast[1352380](const in arg x[1352386]:c_string[19], ref arg _retArg[1790395]:string[26]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1352388]:string[26] "dead after last mention" "RVV" "temp"
    val error[1766076]:Error[167942] "error variable" "temp"
    (1766085 'move' error[1766076] nil[44])
    const-val call_tmp[1352399]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790371]:string[26] "temp"
    (1352404 call _do_command_line_cast[1352113] x[1352386] error[1766076] ret_tmp[1790371])
    (1790374 'move' call_tmp[1352399] ret_tmp[1790371])
    val errorExists[2031151]:bool[10] "temp"
    (2031156 'move' errorExists[2031151](2031153 '!=' error[1766076] nil[44]))
    if errorExists[2031151]
    {
      gotoErrorHandling handler[1766077] handler[1766077]
    }
    (1352407 'move' ret[1352388] call_tmp[1352399])
    gotoReturn _end__command_line_cast[1352414] _end__command_line_cast[1352414]
    label handler[1766077]
    const-val shouldHandleError[1766094]:bool[10] "temp"
    val errorExists[2031159]:bool[10] "temp"
    (2031164 'move' errorExists[2031159](2031161 '!=' error[1766076] nil[44]))
    (1766098 'move' shouldHandleError[1766094] errorExists[2031159])
    if shouldHandleError[1766094]
    {
      (1766091 call chpl_uncaught_error[170247] error[1766076])
    }
    label _end__command_line_cast[1352414]
    (1790397 '=' _retArg[1790395] ret[1352388])
    (1790399 return _void[55])
  }
  function _command_line_cast[1352424](const in arg x[1352430]:c_string[19], ref arg _retArg[1790407]:string[26]) : void[4] "command line setting" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1352432]:string[26] "dead after last mention" "RVV" "temp"
    val error[1766102]:Error[167942] "error variable" "temp"
    (1766111 'move' error[1766102] nil[44])
    const-val call_tmp[1352443]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790377]:string[26] "temp"
    (1352448 call _do_command_line_cast[1352113] x[1352430] error[1766102] ret_tmp[1790377])
    (1790380 'move' call_tmp[1352443] ret_tmp[1790377])
    val errorExists[2031167]:bool[10] "temp"
    (2031172 'move' errorExists[2031167](2031169 '!=' error[1766102] nil[44]))
    if errorExists[2031167]
    {
      gotoErrorHandling handler[1766103] handler[1766103]
    }
    (1352451 'move' ret[1352432] call_tmp[1352443])
    gotoReturn _end__command_line_cast[1352458] _end__command_line_cast[1352458]
    label handler[1766103]
    const-val shouldHandleError[1766120]:bool[10] "temp"
    val errorExists[2031175]:bool[10] "temp"
    (2031180 'move' errorExists[2031175](2031177 '!=' error[1766102] nil[44]))
    (1766124 'move' shouldHandleError[1766120] errorExists[2031175])
    if shouldHandleError[1766120]
    {
      (1766117 call chpl_uncaught_error[170247] error[1766102])
    }
    label _end__command_line_cast[1352458]
    (1790409 '=' _retArg[1790407] ret[1352432])
    (1790411 return _void[55])
  }
  function _command_line_cast[1378129](const in arg x[1378135]:c_string[19]) : bool[10] "command line setting" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1378137]:bool[10] "dead after last mention" "RVV" "temp"
    val error[1766464]:Error[167942] "error variable" "temp"
    (1766473 'move' error[1766464] nil[44])
    const-val call_tmp[1378148]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378150 'move' call_tmp[1378148](1378153 call _do_command_line_cast[1202387] x[1378135] error[1766464]))
    val errorExists[2031351]:bool[10] "temp"
    (2031356 'move' errorExists[2031351](2031353 '!=' error[1766464] nil[44]))
    if errorExists[2031351]
    {
      gotoErrorHandling handler[1766465] handler[1766465]
    }
    (1378156 'move' ret[1378137] call_tmp[1378148])
    gotoReturn _end__command_line_cast[1378163] _end__command_line_cast[1378163]
    label handler[1766465]
    const-val shouldHandleError[1766482]:bool[10] "temp"
    val errorExists[2031359]:bool[10] "temp"
    (2031364 'move' errorExists[2031359](2031361 '!=' error[1766464] nil[44]))
    (1766486 'move' shouldHandleError[1766482] errorExists[2031359])
    if shouldHandleError[1766482]
    {
      (1766479 call chpl_uncaught_error[170247] error[1766464])
    }
    label _end__command_line_cast[1378163]
    (1378165 return ret[1378137])
  }
  function chpl__autoDestroy[1492759](const  ref arg x[1492761]:DefaultDist[1240511]) : void[4] "auto destroy fn" "dont disable remote value forwarding" "instantiated generic" "invisible fn" "removable auto destroy" "resolved" "no return value for void"
  {
    (1769556 call deinit[1492439] x[1492761])
    (1492769 return _void[55])
  }
  function chpl__autoDestroy[1494814](const  ref arg x[1494816]:domain(1,int(64),false)[1249095]) : void[4] "auto destroy fn" "dont disable remote value forwarding" "instantiated generic" "invisible fn" "removable auto destroy" "resolved" "no return value for void"
  {
    (1769560 call deinit[1492938] x[1494816])
    (1494824 return _void[55])
  }
  function chpl__autoDestroy[1583022](const  ref arg x[1583024]:[domain(1,int(64),false)] locale[1283383]) : void[4] "auto destroy fn" "dont disable remote value forwarding" "instantiated generic" "invisible fn" "removable auto destroy" "resolved" "no return value for void"
  {
    (1769578 call deinit[1582918] x[1583024])
    (1583032 return _void[55])
  }
  function chpl__autoDestroy[1611169](const  ref arg x[1611171]:[domain(1,int(64),false)] unmanaged localesSignal?[1321329]) : void[4] "auto destroy fn" "dont disable remote value forwarding" "instantiated generic" "invisible fn" "removable auto destroy" "resolved" "no return value for void"
  {
    (1769584 call deinit[1611065] x[1611171])
    (1611179 return _void[55])
  }
  function chpl__autoDestroy[1644564](const  ref arg x[1644566]:[domain(1,int(64),false)] real(64)[1361426]) : void[4] "auto destroy fn" "dont disable remote value forwarding" "instantiated generic" "invisible fn" "removable auto destroy" "resolved" "no return value for void"
  {
    (1769592 call deinit[1644460] x[1644566])
    (1644574 return _void[55])
  }
  const QIO_STYLE_ELEMENT_STRING[19652]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_COMPLEX[19657]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_ARRAY[19662]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_AGGREGATE[19667]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_TUPLE[19672]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_BYTE_ORDER[19677]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_IS_NATIVE_BYTE_ORDER[19682]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_STYLE_ELEMENT_SKIP_UNKNOWN_FIELDS[19687]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_ARRAY_FORMAT_SPACE[19692]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_ARRAY_FORMAT_CHPL[19697]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_ARRAY_FORMAT_JSON[19702]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_AGGREGATE_FORMAT_BRACES[19707]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_AGGREGATE_FORMAT_CHPL[19712]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_AGGREGATE_FORMAT_JSON[19717]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_TUPLE_FORMAT_CHPL[19722]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_TUPLE_FORMAT_SPACE[19727]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  const QIO_TUPLE_FORMAT_JSON[19732]:int(64)[13] "dead at end of block" "const" "extern" "insert auto destroy"
  function chpl_ModuleDeinit[19824].deinit[752832](const in arg this[752836]:chpl_ModuleDeinit[19824]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1767275]
    (752844 return _void[55])
  }
  function _new[1380480](const in arg moduleName[1380491]:c_string[19], const in arg deinitFun[1380496]:c_fn_ptr[152], in arg prevModule[1380501]:chpl_ModuleDeinit[19824]) : chpl_ModuleDeinit[19824] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "suppress lvalue error"
  {
    val ret[1380531]:chpl_ModuleDeinit[19824] "dead after last mention" "RVV" "temp"
    val initTemp[1380482]:chpl_ModuleDeinit[19824] "dead after last mention" "temp"
    const-val call_tmp[1380538]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1380541 'move' call_tmp[1380538](1380550 'sizeof_bundle' chpl_ModuleDeinit[19824]))
    const-val cast_tmp[1380553]:c_void_ptr[149] "dead after last mention" "temp"
    (1380555 'move' cast_tmp[1380553](1380509 call chpl_here_alloc[187754] call_tmp[1380538] 72))
    (1380512 'move' initTemp[1380482](1380557 'cast' chpl_ModuleDeinit[19824] cast_tmp[1380553]))
    (1380514 'setcid' initTemp[1380482])
    val super_tmp[2127171]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2127173 'move' super_tmp[2127171](2127175 '.v' initTemp[1380482] super[355659]))
    (2127178 'setcid' super_tmp[2127171])
    val call_tmp[2127180]:object[22] "dead at end of block" "maybe param" "temp"
    (2127182 'move' call_tmp[2127180](2127184 'cast' object[22] initTemp[1380482]))
    (2127187 'setcid' call_tmp[2127180])
    (2127189 '.=' initTemp[1380482] moduleName[19738] moduleName[1380491])
    (2127193 '.=' initTemp[1380482] deinitFun[19743] deinitFun[1380496])
    (2127197 '.=' initTemp[1380482] prevModule[19750] prevModule[1380501])
    (2127201 'setcid' initTemp[1380482])
    val tmp[1380516]:chpl_ModuleDeinit[19824] "dead after last mention" "temp"
    (1380520 'move' tmp[1380516] initTemp[1380482])
    (1380536 'move' ret[1380531] tmp[1380516])
    (1380533 return ret[1380531])
  }
  type chpl_ModuleDeinit[19824] val super[355659]:object[22] "super class" const-val moduleName[19738]:c_string[19] "const" const-val deinitFun[19743]:c_fn_ptr[152] "const" const-val prevModule[19750]:chpl_ModuleDeinit[19824] "const"
  val chpl_moduleDeinitFuns[19837]:chpl_ModuleDeinit[19824] "dead at end of block" "insert auto destroy"
  function _cast[1067350](const in arg _arg2[1067354]:uint(8)[100], ref arg error_out[1764328]:Error[167942]) : iokind[230848] throws "compiler generated" "instantiated generic" "invisible fn" "last resort" "resolved"
  {
    val ret[1067356]:iokind[230848] "dead after last mention" "RVV" "temp"
    const-val tmp[1067464]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067466 'move' tmp[1067464] _arg2[1067354])
    const-val call_tmp[1067477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1067969]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1067975 'move' coerce_tmp[1067969](1067971 'cast' uint(8)[100] 0))
    const-val call_tmp[2125530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125532 'move' call_tmp[2125530](2125534 '==' tmp[1067464] coerce_tmp[1067969]))
    (1067479 'move' call_tmp[1067477] call_tmp[2125530])
    const-val call_tmp[1067485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067487 'move' call_tmp[1067485] call_tmp[1067477])
    if call_tmp[1067485]
    {
      const-val call_tmp[1067494]:iokind[230848] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067496 'move' call_tmp[1067494](1067498 'cast' iokind[230848] _arg2[1067354]))
      (1067501 'move' ret[1067356] call_tmp[1067494])
      gotoReturn _end__cast[1067638] _end__cast[1067638]
    }
    {
      const-val call_tmp[1067516]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1068275]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1068281 'move' coerce_tmp[1068275](1068277 'cast' uint(8)[100] 1))
      const-val call_tmp[2125540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2125542 'move' call_tmp[2125540](2125544 '==' tmp[1067464] coerce_tmp[1068275]))
      (1067518 'move' call_tmp[1067516] call_tmp[2125540])
      const-val call_tmp[1067524]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067526 'move' call_tmp[1067524] call_tmp[1067516])
      if call_tmp[1067524]
      {
        const-val call_tmp[1067533]:iokind[230848] "dead after last mention" "expr temp" "maybe param" "temp"
        (1067535 'move' call_tmp[1067533](1067537 'cast' iokind[230848] _arg2[1067354]))
        (1067540 'move' ret[1067356] call_tmp[1067533])
        gotoReturn _end__cast[1067638] _end__cast[1067638]
      }
      {
        const-val call_tmp[1067555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1068581]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1068587 'move' coerce_tmp[1068581](1068583 'cast' uint(8)[100] 2))
        const-val call_tmp[2125550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2125552 'move' call_tmp[2125550](2125554 '==' tmp[1067464] coerce_tmp[1068581]))
        (1067557 'move' call_tmp[1067555] call_tmp[2125550])
        const-val call_tmp[1067563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1067565 'move' call_tmp[1067563] call_tmp[1067555])
        if call_tmp[1067563]
        {
          const-val call_tmp[1067572]:iokind[230848] "dead after last mention" "expr temp" "maybe param" "temp"
          (1067574 'move' call_tmp[1067572](1067576 'cast' iokind[230848] _arg2[1067354]))
          (1067579 'move' ret[1067356] call_tmp[1067572])
          gotoReturn _end__cast[1067638] _end__cast[1067638]
        }
        {
          const-val call_tmp[1067594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1068887]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1068893 'move' coerce_tmp[1068887](1068889 'cast' uint(8)[100] 3))
          const-val call_tmp[2125560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2125562 'move' call_tmp[2125560](2125564 '==' tmp[1067464] coerce_tmp[1068887]))
          (1067596 'move' call_tmp[1067594] call_tmp[2125560])
          const-val call_tmp[1067602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1067604 'move' call_tmp[1067602] call_tmp[1067594])
          if call_tmp[1067602]
          {
            const-val call_tmp[1067611]:iokind[230848] "dead after last mention" "expr temp" "maybe param" "temp"
            (1067613 'move' call_tmp[1067611](1067615 'cast' iokind[230848] _arg2[1067354]))
            (1067618 'move' ret[1067356] call_tmp[1067611])
            gotoReturn _end__cast[1067638] _end__cast[1067638]
          }
        }
      }
    }
    val error[1764330]:Error[167942] "error variable" "temp"
    (1764339 'move' error[1764330] nil[44])
    (1067630 call chpl_enum_cast_error[1068897] _arg2[1067354] "iokind" error[1764330])
    val errorExists[2030271]:bool[10] "temp"
    (2030276 'move' errorExists[2030271](2030273 '!=' error[1764330] nil[44]))
    if errorExists[2030271]
    {
      gotoErrorHandling handler[1764331] handler[1764331]
    }
    label handler[1764331]
    const-val shouldHandleError[1764350]:bool[10] "temp"
    val errorExists[2030279]:bool[10] "temp"
    (2030284 'move' errorExists[2030279](2030281 '!=' error[1764330] nil[44]))
    (1764354 'move' shouldHandleError[1764350] errorExists[2030279])
    if shouldHandleError[1764350]
    {
      (1764346 '=' error_out[1764328] error[1764330])
      gotoErrorHandlingReturn _end__cast[1067638] _end__cast[1067638]
    }
    (1067634 'move' ret[1067356] dynamic[230837])
    label _end__cast[1067638]
    (1067640 return ret[1067356])
  }
  val call_tmp[594607]:chpl_ModuleDeinit[19824] "dead at end of block" "maybe param" "temp"
  function chpl_task_reset_spawn_order[12628]() : void[4] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (500003 return _void[55])
  }
  function chpl_mem_array_alloc[1215907](const in arg nmemb[1215911]:uint(64)[115], const in arg eltSize[1215915]:uint(64)[115], const in arg subloc[1215919]:int(32)[95], ref arg callPostAlloc[1215921]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1215924]:c_void_ptr[149] "RVV" "temp"
    (1215926 return ret[1215924])
  }
  function chpl_mem_array_postAlloc[1239389](const in arg data[1239391]:c_void_ptr[149], const in arg nmemb[1239395]:uint(64)[115], const in arg eltSize[1239399]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1239402 return _void[55])
  }
  function chpl_mem_array_alloc[1245078](const in arg nmemb[1245082]:uint(64)[115], const in arg eltSize[1245086]:uint(64)[115], const in arg subloc[1245090]:int(32)[95], ref arg callPostAlloc[1245092]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1245095]:c_void_ptr[149] "RVV" "temp"
    (1245097 return ret[1245095])
  }
  function chpl_mem_array_postAlloc[1247240](const in arg data[1247242]:c_void_ptr[149], const in arg nmemb[1247246]:uint(64)[115], const in arg eltSize[1247250]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1247253 return _void[55])
  }
  function chpl_mem_array_alloc[1256590](const in arg nmemb[1256594]:uint(64)[115], const in arg eltSize[1256598]:uint(64)[115], const in arg subloc[1256602]:int(32)[95], ref arg callPostAlloc[1256604]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1256607]:c_void_ptr[149] "RVV" "temp"
    (1256609 return ret[1256607])
  }
  function chpl_mem_array_postAlloc[1259645](const in arg data[1259647]:c_void_ptr[149], const in arg nmemb[1259651]:uint(64)[115], const in arg eltSize[1259655]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1259658 return _void[55])
  }
  function chpl_mem_array_free[1274458](const in arg data[1274460]:c_void_ptr[149], const in arg nmemb[1274464]:uint(64)[115], const in arg eltSize[1274468]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1274471 return _void[55])
  }
  function chpl_mem_array_alloc[1316964](const in arg nmemb[1316968]:uint(64)[115], const in arg eltSize[1316972]:uint(64)[115], const in arg subloc[1316976]:int(32)[95], ref arg callPostAlloc[1316978]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1316981]:c_void_ptr[149] "RVV" "temp"
    (1316983 return ret[1316981])
  }
  function chpl_mem_array_postAlloc[1319571](const in arg data[1319573]:c_void_ptr[149], const in arg nmemb[1319577]:uint(64)[115], const in arg eltSize[1319581]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1319584 return _void[55])
  }
  function chpl_mem_array_alloc[1356870](const in arg nmemb[1356874]:uint(64)[115], const in arg eltSize[1356878]:uint(64)[115], const in arg subloc[1356882]:int(32)[95], ref arg callPostAlloc[1356884]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1356887]:c_void_ptr[149] "RVV" "temp"
    (1356889 return ret[1356887])
  }
  function chpl_mem_array_postAlloc[1359668](const in arg data[1359670]:c_void_ptr[149], const in arg nmemb[1359674]:uint(64)[115], const in arg eltSize[1359678]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1359681 return _void[55])
  }
  function chpl_mem_array_free[1389377](const in arg data[1389379]:c_void_ptr[149], const in arg nmemb[1389383]:uint(64)[115], const in arg eltSize[1389387]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1389390 return _void[55])
  }
  function chpl_mem_array_alloc[1523963](const in arg nmemb[1523967]:uint(64)[115], const in arg eltSize[1523971]:uint(64)[115], const in arg subloc[1523975]:int(32)[95], ref arg callPostAlloc[1523977]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1523980]:c_void_ptr[149] "RVV" "temp"
    (1523982 return ret[1523980])
  }
  function chpl_mem_array_postAlloc[1525313](const in arg data[1525315]:c_void_ptr[149], const in arg nmemb[1525319]:uint(64)[115], const in arg eltSize[1525323]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1525326 return _void[55])
  }
  function chpl_mem_array_alloc[1542431](const in arg nmemb[1542435]:uint(64)[115], const in arg eltSize[1542439]:uint(64)[115], const in arg subloc[1542443]:int(32)[95], ref arg callPostAlloc[1542445]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1542448]:c_void_ptr[149] "RVV" "temp"
    (1542450 return ret[1542448])
  }
  function chpl_mem_array_postAlloc[1544030](const in arg data[1544032]:c_void_ptr[149], const in arg nmemb[1544036]:uint(64)[115], const in arg eltSize[1544040]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1544043 return _void[55])
  }
  function chpl_mem_array_free[1718010](const in arg data[1718012]:c_void_ptr[149], const in arg nmemb[1718016]:uint(64)[115], const in arg eltSize[1718020]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1718023 return _void[55])
  }
  function chpl_mem_array_free[1718941](const in arg data[1718943]:c_void_ptr[149], const in arg nmemb[1718947]:uint(64)[115], const in arg eltSize[1718951]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1718954 return _void[55])
  }
  function chpl_mem_array_free[1719872](const in arg data[1719874]:c_void_ptr[149], const in arg nmemb[1719878]:uint(64)[115], const in arg eltSize[1719882]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1719885 return _void[55])
  }
  function chpl_mem_array_free[1720803](const in arg data[1720805]:c_void_ptr[149], const in arg nmemb[1720809]:uint(64)[115], const in arg eltSize[1720813]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1720816 return _void[55])
  }
  function chpl_mem_array_free[1721734](const in arg data[1721736]:c_void_ptr[149], const in arg nmemb[1721740]:uint(64)[115], const in arg eltSize[1721744]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1721747 return _void[55])
  }
  function chpl_mem_array_realloc[1727072](const in arg ptr[1727074]:c_void_ptr[149], const in arg oldNmemb[1727078]:uint(64)[115], const in arg newNmemb[1727082]:uint(64)[115], const in arg eltSize[1727086]:uint(64)[115], const in arg subloc[1727090]:int(32)[95], ref arg callPostAlloc[1727092]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1727095]:c_void_ptr[149] "RVV" "temp"
    (1727097 return ret[1727095])
  }
  function chpl_mem_array_postRealloc[1727408](const in arg oldData[1727410]:c_void_ptr[149], const in arg oldNmemb[1727414]:uint(64)[115], const in arg newData[1727416]:c_void_ptr[149], const in arg newNmemb[1727420]:uint(64)[115], const in arg eltSize[1727424]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1727427 return _void[55])
  }
  function chpl_mem_array_realloc[1733916](const in arg ptr[1733918]:c_void_ptr[149], const in arg oldNmemb[1733922]:uint(64)[115], const in arg newNmemb[1733926]:uint(64)[115], const in arg eltSize[1733930]:uint(64)[115], const in arg subloc[1733934]:int(32)[95], ref arg callPostAlloc[1733936]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1733939]:c_void_ptr[149] "RVV" "temp"
    (1733941 return ret[1733939])
  }
  function chpl_mem_array_postRealloc[1734252](const in arg oldData[1734254]:c_void_ptr[149], const in arg oldNmemb[1734258]:uint(64)[115], const in arg newData[1734260]:c_void_ptr[149], const in arg newNmemb[1734264]:uint(64)[115], const in arg eltSize[1734268]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1734271 return _void[55])
  }
  function chpl_mem_array_realloc[1737707](const in arg ptr[1737709]:c_void_ptr[149], const in arg oldNmemb[1737713]:uint(64)[115], const in arg newNmemb[1737717]:uint(64)[115], const in arg eltSize[1737721]:uint(64)[115], const in arg subloc[1737725]:int(32)[95], ref arg callPostAlloc[1737727]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1737730]:c_void_ptr[149] "RVV" "temp"
    (1737732 return ret[1737730])
  }
  function chpl_mem_array_postRealloc[1738043](const in arg oldData[1738045]:c_void_ptr[149], const in arg oldNmemb[1738049]:uint(64)[115], const in arg newData[1738051]:c_void_ptr[149], const in arg newNmemb[1738055]:uint(64)[115], const in arg eltSize[1738059]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1738062 return _void[55])
  }
  function chpl_mem_array_realloc[1741498](const in arg ptr[1741500]:c_void_ptr[149], const in arg oldNmemb[1741504]:uint(64)[115], const in arg newNmemb[1741508]:uint(64)[115], const in arg eltSize[1741512]:uint(64)[115], const in arg subloc[1741516]:int(32)[95], ref arg callPostAlloc[1741518]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1741521]:c_void_ptr[149] "RVV" "temp"
    (1741523 return ret[1741521])
  }
  function chpl_mem_array_postRealloc[1741834](const in arg oldData[1741836]:c_void_ptr[149], const in arg oldNmemb[1741840]:uint(64)[115], const in arg newData[1741842]:c_void_ptr[149], const in arg newNmemb[1741846]:uint(64)[115], const in arg eltSize[1741850]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1741853 return _void[55])
  }
  function chpl_mem_array_realloc[1745289](const in arg ptr[1745291]:c_void_ptr[149], const in arg oldNmemb[1745295]:uint(64)[115], const in arg newNmemb[1745299]:uint(64)[115], const in arg eltSize[1745303]:uint(64)[115], const in arg subloc[1745307]:int(32)[95], ref arg callPostAlloc[1745309]:bool[10]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1745312]:c_void_ptr[149] "RVV" "temp"
    (1745314 return ret[1745312])
  }
  function chpl_mem_array_postRealloc[1745625](const in arg oldData[1745627]:c_void_ptr[149], const in arg oldNmemb[1745631]:uint(64)[115], const in arg newData[1745633]:c_void_ptr[149], const in arg newNmemb[1745637]:uint(64)[115], const in arg eltSize[1745641]:uint(64)[115]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    (1745644 return _void[55])
  }
  function coforall_fn[1805809](const in arg len[1805811]:int(64)[13], const in arg numChunks[1805813]:int(64)[13], const in arg this[1805815]:range(int(64),bounded,false)[1023946], const in arg chunk[1805817]:int(64)[13], const in arg _coforallCount[1805819]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg x[1806005]:_ddata(locale)[1251892]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1805845]:2*int(64)[1037179] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1805847]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1805849 'move' coerce_tmp[1805847](2276523 '.v' this[1805815] _high[1023913]))
    const-val coerce_tmp[1805853]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1805855 'move' coerce_tmp[1805853](2276530 '.v' this[1805815] _low[1023908]))
    const-val coerce_tmp[1805859]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1805861 'move' coerce_tmp[1805859](2276537 '.v' this[1805815] _low[1023908]))
    const-val ret_tmp[1805865]:2*int(64)[1037179] "temp"
    (1805868 call _computeBlock[1226167] len[1805811] numChunks[1805813] chunk[1805817] coerce_tmp[1805847] coerce_tmp[1805853] coerce_tmp[1805859] ret_tmp[1805865])
    (1805876 'move' call_tmp[1805845] ret_tmp[1805865])
    val tmp_x0[2256110]:int(64)[13] "temp"
    val tmp_x1[2256112]:int(64)[13] "temp"
    (2256118 'move' tmp_x0[2256110](2256116 '.v' call_tmp[1805845] x0[1037175]))
    (2256123 'move' tmp_x1[2256112](2256121 '.v' call_tmp[1805845] x1[1037177]))
    1
    const-val lo[1805892]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1805894]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1805896 'move' coerce_tmp[1805894] tmp_x0[2256110])
    (1805900 '=' lo[1805892] coerce_tmp[1805894])
    (1805903 'noop')
    const-val hi[1805911]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1805913]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1805915 'move' coerce_tmp[1805913] tmp_x1[2256112])
    (1805919 '=' hi[1805911] coerce_tmp[1805913])
    (1805922 'noop')
    const-val call_tmp_F0_low[2255589]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2255591]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2255605]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2255607]:int(64)[13] "temp"
    const-val _ir_F0_low[2255877]:int(64)[13] "temp"
    const-val _ir_F1_high[2255879]:int(64)[13] "temp"
    (2193638 'move' _ir_F0_low[2255877] lo[1805892])
    (2193642 'move' _ir_F1_high[2255879] hi[1805911])
    (2255613 'move' ret_tmp_F0_low[2255605] _ir_F0_low[2255877])
    (2255618 'move' ret_tmp_F1_high[2255607] _ir_F1_high[2255879])
    (2255597 'move' call_tmp_F0_low[2255589] ret_tmp_F0_low[2255605])
    (2255602 'move' call_tmp_F1_high[2255591] ret_tmp_F1_high[2255607])
    const-val _ic__F0_low[2248167]:int(64)[13] "temp"
    const-val _ic__F1_high[2248169]:int(64)[13] "temp"
    const-val tmp[2194399]:int(64)[13] "temp"
    (2194401 'move' tmp[2194399] call_tmp_F0_low[2255589])
    (2194406 'move' _ic__F0_low[2248167] tmp[2194399])
    const-val tmp[2194410]:int(64)[13] "temp"
    (2194412 'move' tmp[2194410] call_tmp_F1_high[2255591])
    (2194417 'move' _ic__F1_high[2248169] tmp[2194410])
    const-val call_tmp_F0_low[2264095]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2264097]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2264111]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2264113]:int(64)[13] "temp"
    const-val low[1887036]:int(64)[13] "temp"
    (1887041 'move' low[1887036] _ic__F0_low[2248167])
    const-val high[1887043]:int(64)[13] "temp"
    (1887048 'move' high[1887043] _ic__F1_high[2248169])
    const-val _ir_F0_low[2265047]:int(64)[13] "temp"
    const-val _ir_F1_high[2265049]:int(64)[13] "temp"
    (2101325 'move' _ir_F0_low[2265047] low[1887036])
    (2101329 'move' _ir_F1_high[2265049] high[1887043])
    (2264119 'move' ret_tmp_F0_low[2264111] _ir_F0_low[2265047])
    (2264124 'move' ret_tmp_F1_high[2264113] _ir_F1_high[2265049])
    (2264103 'move' call_tmp_F0_low[2264095] ret_tmp_F0_low[2264111])
    (2264108 'move' call_tmp_F1_high[2264097] ret_tmp_F1_high[2264113])
    const-val _ic__F0_low[2251354]:int(64)[13] "temp"
    const-val _ic__F1_high[2251356]:int(64)[13] "temp"
    const-val tmp[2102815]:int(64)[13] "temp"
    (2102817 'move' tmp[2102815] call_tmp_F0_low[2264095])
    (2102822 'move' _ic__F0_low[2251354] tmp[2102815])
    const-val tmp[2102826]:int(64)[13] "temp"
    (2102828 'move' tmp[2102826] call_tmp_F1_high[2264097])
    (2102833 'move' _ic__F1_high[2251356] tmp[2102826])
    val i[1886863]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1886867 'move' i[1886863] 0)
    const-val default_arg_first[1886872]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1886874]:int(64)[13] "temp"
    (1886876 'move' low[1886874] _ic__F0_low[2251354])
    (1886881 'move' default_arg_first[1886872] low[1886874])
    const-val default_arg_last[1886886]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1886888]:int(64)[13] "temp"
    (1886890 'move' high[1886888] _ic__F1_high[2251356])
    (1886895 'move' default_arg_last[1886886] high[1886888])
    const-val low[1886902]:int(64)[13] "temp"
    (1886904 'move' low[1886902] _ic__F0_low[2251354])
    const-val high[1886909]:int(64)[13] "temp"
    (1886911 'move' high[1886909] _ic__F1_high[2251356])
    (1886919 call chpl_checkIfRangeIterWillOverflow[1093055] low[1886902] high[1886909] 1 default_arg_first[1886872] default_arg_last[1886886] 1)
    CForLoop[1886926] order-independent
    {
      const-val _yieldedIndex[1886960]:int(64)[13] "temp"
      (1886962 'move' _yieldedIndex[1886960] i[1886863])
      const-val _yieldedIndex[1886995]:int(64)[13] "temp"
      (1887034 'move' _yieldedIndex[1886995] _yieldedIndex[1886960])
      const-val i[1886997]:int(64)[13] "const" "index var" "insert auto destroy"
      (1886999 'move' i[1886997] _yieldedIndex[1886995])
      const-val yret[1887003]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[1887005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1887007 'move' call_tmp[1887005] i[1886997])
      (1887013 'move' yret[1887003] call_tmp[1887005])
      const i[1887016]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (1887018 'move' i[1887016] yret[1887003])
      val y[1887022]:locale[28] "dead at end of block" "no auto destroy" "unsafe"
      (1887025 call init[90004] y[1887022])
      (1887027 'array_set_first' x[1806005] i[1887016] y[1887022])
      {
        const-val low[1886928]:int(64)[13] "temp"
        (1886930 'move' low[1886928] _ic__F0_low[2251354])
        (1886935 '=' i[1886863] low[1886928])
      }
      {
        const-val high[1886939]:int(64)[13] "temp"
        (1886941 'move' high[1886939] _ic__F1_high[2251356])
        (1886946 '<=' i[1886863] high[1886939])
      }
      {
        (1886952 '+=' i[1886863] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1886986]
    label _endchpl_direct_range_iter[1886991]
    label _endcoforall_fn[1805994]
    (1805996 return _void[55])
  }
  function coforall_fn[1806270](const in arg len[1806272]:int(64)[13], const in arg numChunks[1806274]:int(64)[13], const in arg this[1806276]:range(int(64),bounded,false)[1023946], const in arg chunk[1806278]:int(64)[13], const in arg _coforallCount[1806280]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg x[1806466]:_ddata(unmanaged localesSignal?)[1313711]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1806306]:2*int(64)[1037179] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1806308]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806310 'move' coerce_tmp[1806308](2276549 '.v' this[1806276] _high[1023913]))
    const-val coerce_tmp[1806314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806316 'move' coerce_tmp[1806314](2276556 '.v' this[1806276] _low[1023908]))
    const-val coerce_tmp[1806320]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806322 'move' coerce_tmp[1806320](2276563 '.v' this[1806276] _low[1023908]))
    const-val ret_tmp[1806326]:2*int(64)[1037179] "temp"
    (1806329 call _computeBlock[1226167] len[1806272] numChunks[1806274] chunk[1806278] coerce_tmp[1806308] coerce_tmp[1806314] coerce_tmp[1806320] ret_tmp[1806326])
    (1806337 'move' call_tmp[1806306] ret_tmp[1806326])
    val tmp_x0[2256128]:int(64)[13] "temp"
    val tmp_x1[2256130]:int(64)[13] "temp"
    (2256136 'move' tmp_x0[2256128](2256134 '.v' call_tmp[1806306] x0[1037175]))
    (2256141 'move' tmp_x1[2256130](2256139 '.v' call_tmp[1806306] x1[1037177]))
    1
    const-val lo[1806353]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1806355]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1806357 'move' coerce_tmp[1806355] tmp_x0[2256128])
    (1806361 '=' lo[1806353] coerce_tmp[1806355])
    (1806364 'noop')
    const-val hi[1806372]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1806374]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1806376 'move' coerce_tmp[1806374] tmp_x1[2256130])
    (1806380 '=' hi[1806372] coerce_tmp[1806374])
    (1806383 'noop')
    const-val call_tmp_F0_low[2255621]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2255623]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2255637]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2255639]:int(64)[13] "temp"
    const-val _ir_F0_low[2255885]:int(64)[13] "temp"
    const-val _ir_F1_high[2255887]:int(64)[13] "temp"
    (2193660 'move' _ir_F0_low[2255885] lo[1806353])
    (2193664 'move' _ir_F1_high[2255887] hi[1806372])
    (2255645 'move' ret_tmp_F0_low[2255637] _ir_F0_low[2255885])
    (2255650 'move' ret_tmp_F1_high[2255639] _ir_F1_high[2255887])
    (2255629 'move' call_tmp_F0_low[2255621] ret_tmp_F0_low[2255637])
    (2255634 'move' call_tmp_F1_high[2255623] ret_tmp_F1_high[2255639])
    const-val _ic__F0_low[2248188]:int(64)[13] "temp"
    const-val _ic__F1_high[2248190]:int(64)[13] "temp"
    const-val tmp[2194462]:int(64)[13] "temp"
    (2194464 'move' tmp[2194462] call_tmp_F0_low[2255621])
    (2194469 'move' _ic__F0_low[2248188] tmp[2194462])
    const-val tmp[2194473]:int(64)[13] "temp"
    (2194475 'move' tmp[2194473] call_tmp_F1_high[2255623])
    (2194480 'move' _ic__F1_high[2248190] tmp[2194473])
    const-val call_tmp_F0_low[2264127]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2264129]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2264143]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2264145]:int(64)[13] "temp"
    const-val low[1887558]:int(64)[13] "temp"
    (1887563 'move' low[1887558] _ic__F0_low[2248188])
    const-val high[1887565]:int(64)[13] "temp"
    (1887570 'move' high[1887565] _ic__F1_high[2248190])
    const-val _ir_F0_low[2265055]:int(64)[13] "temp"
    const-val _ir_F1_high[2265057]:int(64)[13] "temp"
    (2101347 'move' _ir_F0_low[2265055] low[1887558])
    (2101351 'move' _ir_F1_high[2265057] high[1887565])
    (2264151 'move' ret_tmp_F0_low[2264143] _ir_F0_low[2265055])
    (2264156 'move' ret_tmp_F1_high[2264145] _ir_F1_high[2265057])
    (2264135 'move' call_tmp_F0_low[2264127] ret_tmp_F0_low[2264143])
    (2264140 'move' call_tmp_F1_high[2264129] ret_tmp_F1_high[2264145])
    const-val _ic__F0_low[2251373]:int(64)[13] "temp"
    const-val _ic__F1_high[2251375]:int(64)[13] "temp"
    const-val tmp[2102878]:int(64)[13] "temp"
    (2102880 'move' tmp[2102878] call_tmp_F0_low[2264127])
    (2102885 'move' _ic__F0_low[2251373] tmp[2102878])
    const-val tmp[2102889]:int(64)[13] "temp"
    (2102891 'move' tmp[2102889] call_tmp_F1_high[2264129])
    (2102896 'move' _ic__F1_high[2251375] tmp[2102889])
    val i[1887383]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1887387 'move' i[1887383] 0)
    const-val default_arg_first[1887392]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1887394]:int(64)[13] "temp"
    (1887396 'move' low[1887394] _ic__F0_low[2251373])
    (1887401 'move' default_arg_first[1887392] low[1887394])
    const-val default_arg_last[1887406]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1887408]:int(64)[13] "temp"
    (1887410 'move' high[1887408] _ic__F1_high[2251375])
    (1887415 'move' default_arg_last[1887406] high[1887408])
    const-val low[1887422]:int(64)[13] "temp"
    (1887424 'move' low[1887422] _ic__F0_low[2251373])
    const-val high[1887429]:int(64)[13] "temp"
    (1887431 'move' high[1887429] _ic__F1_high[2251375])
    (1887439 call chpl_checkIfRangeIterWillOverflow[1093055] low[1887422] high[1887429] 1 default_arg_first[1887392] default_arg_last[1887406] 1)
    CForLoop[1887446] order-independent
    {
      const-val _yieldedIndex[1887480]:int(64)[13] "temp"
      (1887482 'move' _yieldedIndex[1887480] i[1887383])
      const-val _yieldedIndex[1887515]:int(64)[13] "temp"
      (1887556 'move' _yieldedIndex[1887515] _yieldedIndex[1887480])
      const-val i[1887517]:int(64)[13] "const" "index var" "insert auto destroy"
      (1887519 'move' i[1887517] _yieldedIndex[1887515])
      const-val yret[1887523]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[1887525]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1887527 'move' call_tmp[1887525] i[1887517])
      (1887533 'move' yret[1887523] call_tmp[1887525])
      const i[1887536]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (1887538 'move' i[1887536] yret[1887523])
      val y[1887542]:localesSignal[92283] "dead at end of block" "no auto destroy" "unsafe"
      (1887544 'move' y[1887542](1887546 'cast' localesSignal[92283] nil[44]))
      (1887549 'array_set_first' x[1806466] i[1887536] y[1887542])
      {
        const-val low[1887448]:int(64)[13] "temp"
        (1887450 'move' low[1887448] _ic__F0_low[2251373])
        (1887455 '=' i[1887383] low[1887448])
      }
      {
        const-val high[1887459]:int(64)[13] "temp"
        (1887461 'move' high[1887459] _ic__F1_high[2251375])
        (1887466 '<=' i[1887383] high[1887459])
      }
      {
        (1887472 '+=' i[1887383] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1887506]
    label _endchpl_direct_range_iter[1887511]
    label _endcoforall_fn[1806455]
    (1806457 return _void[55])
  }
  function coforall_fn[1806731](const in arg len[1806733]:int(64)[13], const in arg numChunks[1806735]:int(64)[13], const in arg this[1806737]:range(int(64),bounded,false)[1023946], const in arg chunk[1806739]:int(64)[13], const in arg _coforallCount[1806741]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg x[1806927]:_ddata(real(64))[1353617]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1806767]:2*int(64)[1037179] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1806769]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806771 'move' coerce_tmp[1806769](2276575 '.v' this[1806737] _high[1023913]))
    const-val coerce_tmp[1806775]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806777 'move' coerce_tmp[1806775](2276582 '.v' this[1806737] _low[1023908]))
    const-val coerce_tmp[1806781]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1806783 'move' coerce_tmp[1806781](2276589 '.v' this[1806737] _low[1023908]))
    const-val ret_tmp[1806787]:2*int(64)[1037179] "temp"
    (1806790 call _computeBlock[1226167] len[1806733] numChunks[1806735] chunk[1806739] coerce_tmp[1806769] coerce_tmp[1806775] coerce_tmp[1806781] ret_tmp[1806787])
    (1806798 'move' call_tmp[1806767] ret_tmp[1806787])
    val tmp_x0[2256146]:int(64)[13] "temp"
    val tmp_x1[2256148]:int(64)[13] "temp"
    (2256154 'move' tmp_x0[2256146](2256152 '.v' call_tmp[1806767] x0[1037175]))
    (2256159 'move' tmp_x1[2256148](2256157 '.v' call_tmp[1806767] x1[1037177]))
    1
    const-val lo[1806814]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1806816]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1806818 'move' coerce_tmp[1806816] tmp_x0[2256146])
    (1806822 '=' lo[1806814] coerce_tmp[1806816])
    (1806825 'noop')
    const-val hi[1806833]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1806835]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1806837 'move' coerce_tmp[1806835] tmp_x1[2256148])
    (1806841 '=' hi[1806833] coerce_tmp[1806835])
    (1806844 'noop')
    const-val call_tmp_F0_low[2255653]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2255655]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2255669]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2255671]:int(64)[13] "temp"
    const-val _ir_F0_low[2255893]:int(64)[13] "temp"
    const-val _ir_F1_high[2255895]:int(64)[13] "temp"
    (2193682 'move' _ir_F0_low[2255893] lo[1806814])
    (2193686 'move' _ir_F1_high[2255895] hi[1806833])
    (2255677 'move' ret_tmp_F0_low[2255669] _ir_F0_low[2255893])
    (2255682 'move' ret_tmp_F1_high[2255671] _ir_F1_high[2255895])
    (2255661 'move' call_tmp_F0_low[2255653] ret_tmp_F0_low[2255669])
    (2255666 'move' call_tmp_F1_high[2255655] ret_tmp_F1_high[2255671])
    const-val _ic__F0_low[2248209]:int(64)[13] "temp"
    const-val _ic__F1_high[2248211]:int(64)[13] "temp"
    const-val tmp[2194525]:int(64)[13] "temp"
    (2194527 'move' tmp[2194525] call_tmp_F0_low[2255653])
    (2194532 'move' _ic__F0_low[2248209] tmp[2194525])
    const-val tmp[2194536]:int(64)[13] "temp"
    (2194538 'move' tmp[2194536] call_tmp_F1_high[2255655])
    (2194543 'move' _ic__F1_high[2248211] tmp[2194536])
    const-val call_tmp_F0_low[2264159]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2264161]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2264175]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2264177]:int(64)[13] "temp"
    const-val low[1888076]:int(64)[13] "temp"
    (1888081 'move' low[1888076] _ic__F0_low[2248209])
    const-val high[1888083]:int(64)[13] "temp"
    (1888088 'move' high[1888083] _ic__F1_high[2248211])
    const-val _ir_F0_low[2265063]:int(64)[13] "temp"
    const-val _ir_F1_high[2265065]:int(64)[13] "temp"
    (2101369 'move' _ir_F0_low[2265063] low[1888076])
    (2101373 'move' _ir_F1_high[2265065] high[1888083])
    (2264183 'move' ret_tmp_F0_low[2264175] _ir_F0_low[2265063])
    (2264188 'move' ret_tmp_F1_high[2264177] _ir_F1_high[2265065])
    (2264167 'move' call_tmp_F0_low[2264159] ret_tmp_F0_low[2264175])
    (2264172 'move' call_tmp_F1_high[2264161] ret_tmp_F1_high[2264177])
    const-val _ic__F0_low[2251392]:int(64)[13] "temp"
    const-val _ic__F1_high[2251394]:int(64)[13] "temp"
    const-val tmp[2102941]:int(64)[13] "temp"
    (2102943 'move' tmp[2102941] call_tmp_F0_low[2264159])
    (2102948 'move' _ic__F0_low[2251392] tmp[2102941])
    const-val tmp[2102952]:int(64)[13] "temp"
    (2102954 'move' tmp[2102952] call_tmp_F1_high[2264161])
    (2102959 'move' _ic__F1_high[2251394] tmp[2102952])
    val i[1887903]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1887907 'move' i[1887903] 0)
    const-val default_arg_first[1887912]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1887914]:int(64)[13] "temp"
    (1887916 'move' low[1887914] _ic__F0_low[2251392])
    (1887921 'move' default_arg_first[1887912] low[1887914])
    const-val default_arg_last[1887926]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1887928]:int(64)[13] "temp"
    (1887930 'move' high[1887928] _ic__F1_high[2251394])
    (1887935 'move' default_arg_last[1887926] high[1887928])
    const-val low[1887942]:int(64)[13] "temp"
    (1887944 'move' low[1887942] _ic__F0_low[2251392])
    const-val high[1887949]:int(64)[13] "temp"
    (1887951 'move' high[1887949] _ic__F1_high[2251394])
    (1887959 call chpl_checkIfRangeIterWillOverflow[1093055] low[1887942] high[1887949] 1 default_arg_first[1887912] default_arg_last[1887926] 1)
    CForLoop[1887966] order-independent
    {
      const-val _yieldedIndex[1888000]:int(64)[13] "temp"
      (1888002 'move' _yieldedIndex[1888000] i[1887903])
      const-val _yieldedIndex[1888035]:int(64)[13] "temp"
      (1888074 'move' _yieldedIndex[1888035] _yieldedIndex[1888000])
      const-val i[1888037]:int(64)[13] "const" "index var" "insert auto destroy"
      (1888039 'move' i[1888037] _yieldedIndex[1888035])
      const-val yret[1888043]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[1888045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1888047 'move' call_tmp[1888045] i[1888037])
      (1888053 'move' yret[1888043] call_tmp[1888045])
      const i[1888056]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (1888058 'move' i[1888056] yret[1888043])
      val y[1888062]:real(64)[16] "dead at end of block" "no auto destroy" "unsafe"
      (1888064 'move' y[1888062] 0.0)
      (1888067 'array_set_first' x[1806927] i[1888056] y[1888062])
      {
        const-val low[1887968]:int(64)[13] "temp"
        (1887970 'move' low[1887968] _ic__F0_low[2251392])
        (1887975 '=' i[1887903] low[1887968])
      }
      {
        const-val high[1887979]:int(64)[13] "temp"
        (1887981 'move' high[1887979] _ic__F1_high[2251394])
        (1887986 '<=' i[1887903] high[1887979])
      }
      {
        (1887992 '+=' i[1887903] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1888026]
    label _endchpl_direct_range_iter[1888031]
    label _endcoforall_fn[1806916]
    (1806918 return _void[55])
  }
  function coforall_fn[1808183](const in arg len[1808185]:int(64)[13], const in arg numChunks[1808187]:int(64)[13], const in arg this[1808189]:range(int(64),bounded,false)[1023946], const in arg chunk[1808191]:int(64)[13], const in arg _coforallCount[1808193]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg x[1808379]:_ddata(int(64))[1520710]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1808219]:2*int(64)[1037179] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1808221]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808223 'move' coerce_tmp[1808221](2276601 '.v' this[1808189] _high[1023913]))
    const-val coerce_tmp[1808227]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808229 'move' coerce_tmp[1808227](2276608 '.v' this[1808189] _low[1023908]))
    const-val coerce_tmp[1808233]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808235 'move' coerce_tmp[1808233](2276615 '.v' this[1808189] _low[1023908]))
    const-val ret_tmp[1808239]:2*int(64)[1037179] "temp"
    (1808242 call _computeBlock[1226167] len[1808185] numChunks[1808187] chunk[1808191] coerce_tmp[1808221] coerce_tmp[1808227] coerce_tmp[1808233] ret_tmp[1808239])
    (1808250 'move' call_tmp[1808219] ret_tmp[1808239])
    val tmp_x0[2256164]:int(64)[13] "temp"
    val tmp_x1[2256166]:int(64)[13] "temp"
    (2256172 'move' tmp_x0[2256164](2256170 '.v' call_tmp[1808219] x0[1037175]))
    (2256177 'move' tmp_x1[2256166](2256175 '.v' call_tmp[1808219] x1[1037177]))
    1
    const-val lo[1808266]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1808268]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1808270 'move' coerce_tmp[1808268] tmp_x0[2256164])
    (1808274 '=' lo[1808266] coerce_tmp[1808268])
    (1808277 'noop')
    const-val hi[1808285]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1808287]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1808289 'move' coerce_tmp[1808287] tmp_x1[2256166])
    (1808293 '=' hi[1808285] coerce_tmp[1808287])
    (1808296 'noop')
    const-val call_tmp_F0_low[2255685]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2255687]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2255701]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2255703]:int(64)[13] "temp"
    const-val _ir_F0_low[2255901]:int(64)[13] "temp"
    const-val _ir_F1_high[2255903]:int(64)[13] "temp"
    (2193704 'move' _ir_F0_low[2255901] lo[1808266])
    (2193708 'move' _ir_F1_high[2255903] hi[1808285])
    (2255709 'move' ret_tmp_F0_low[2255701] _ir_F0_low[2255901])
    (2255714 'move' ret_tmp_F1_high[2255703] _ir_F1_high[2255903])
    (2255693 'move' call_tmp_F0_low[2255685] ret_tmp_F0_low[2255701])
    (2255698 'move' call_tmp_F1_high[2255687] ret_tmp_F1_high[2255703])
    const-val _ic__F0_low[2248230]:int(64)[13] "temp"
    const-val _ic__F1_high[2248232]:int(64)[13] "temp"
    const-val tmp[2194588]:int(64)[13] "temp"
    (2194590 'move' tmp[2194588] call_tmp_F0_low[2255685])
    (2194595 'move' _ic__F0_low[2248230] tmp[2194588])
    const-val tmp[2194599]:int(64)[13] "temp"
    (2194601 'move' tmp[2194599] call_tmp_F1_high[2255687])
    (2194606 'move' _ic__F1_high[2248232] tmp[2194599])
    const-val call_tmp_F0_low[2264191]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2264193]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2264207]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2264209]:int(64)[13] "temp"
    const-val low[1888594]:int(64)[13] "temp"
    (1888599 'move' low[1888594] _ic__F0_low[2248230])
    const-val high[1888601]:int(64)[13] "temp"
    (1888606 'move' high[1888601] _ic__F1_high[2248232])
    const-val _ir_F0_low[2265071]:int(64)[13] "temp"
    const-val _ir_F1_high[2265073]:int(64)[13] "temp"
    (2101391 'move' _ir_F0_low[2265071] low[1888594])
    (2101395 'move' _ir_F1_high[2265073] high[1888601])
    (2264215 'move' ret_tmp_F0_low[2264207] _ir_F0_low[2265071])
    (2264220 'move' ret_tmp_F1_high[2264209] _ir_F1_high[2265073])
    (2264199 'move' call_tmp_F0_low[2264191] ret_tmp_F0_low[2264207])
    (2264204 'move' call_tmp_F1_high[2264193] ret_tmp_F1_high[2264209])
    const-val _ic__F0_low[2251411]:int(64)[13] "temp"
    const-val _ic__F1_high[2251413]:int(64)[13] "temp"
    const-val tmp[2103004]:int(64)[13] "temp"
    (2103006 'move' tmp[2103004] call_tmp_F0_low[2264191])
    (2103011 'move' _ic__F0_low[2251411] tmp[2103004])
    const-val tmp[2103015]:int(64)[13] "temp"
    (2103017 'move' tmp[2103015] call_tmp_F1_high[2264193])
    (2103022 'move' _ic__F1_high[2251413] tmp[2103015])
    val i[1888421]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1888425 'move' i[1888421] 0)
    const-val default_arg_first[1888430]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1888432]:int(64)[13] "temp"
    (1888434 'move' low[1888432] _ic__F0_low[2251411])
    (1888439 'move' default_arg_first[1888430] low[1888432])
    const-val default_arg_last[1888444]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1888446]:int(64)[13] "temp"
    (1888448 'move' high[1888446] _ic__F1_high[2251413])
    (1888453 'move' default_arg_last[1888444] high[1888446])
    const-val low[1888460]:int(64)[13] "temp"
    (1888462 'move' low[1888460] _ic__F0_low[2251411])
    const-val high[1888467]:int(64)[13] "temp"
    (1888469 'move' high[1888467] _ic__F1_high[2251413])
    (1888477 call chpl_checkIfRangeIterWillOverflow[1093055] low[1888460] high[1888467] 1 default_arg_first[1888430] default_arg_last[1888444] 1)
    CForLoop[1888484] order-independent
    {
      const-val _yieldedIndex[1888518]:int(64)[13] "temp"
      (1888520 'move' _yieldedIndex[1888518] i[1888421])
      const-val _yieldedIndex[1888553]:int(64)[13] "temp"
      (1888592 'move' _yieldedIndex[1888553] _yieldedIndex[1888518])
      const-val i[1888555]:int(64)[13] "const" "index var" "insert auto destroy"
      (1888557 'move' i[1888555] _yieldedIndex[1888553])
      const-val yret[1888561]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[1888563]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1888565 'move' call_tmp[1888563] i[1888555])
      (1888571 'move' yret[1888561] call_tmp[1888563])
      const i[1888574]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (1888576 'move' i[1888574] yret[1888561])
      val y[1888580]:int(64)[13] "dead at end of block" "no auto destroy" "unsafe"
      (1888582 'move' y[1888580] 0)
      (1888585 'array_set_first' x[1808379] i[1888574] y[1888580])
      {
        const-val low[1888486]:int(64)[13] "temp"
        (1888488 'move' low[1888486] _ic__F0_low[2251411])
        (1888493 '=' i[1888421] low[1888486])
      }
      {
        const-val high[1888497]:int(64)[13] "temp"
        (1888499 'move' high[1888497] _ic__F1_high[2251413])
        (1888504 '<=' i[1888421] high[1888497])
      }
      {
        (1888510 '+=' i[1888421] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1888544]
    label _endchpl_direct_range_iter[1888549]
    label _endcoforall_fn[1808368]
    (1808370 return _void[55])
  }
  function coforall_fn[1808642](const in arg len[1808644]:int(64)[13], const in arg numChunks[1808646]:int(64)[13], const in arg this[1808648]:range(int(64),bounded,false)[1023946], const in arg chunk[1808650]:int(64)[13], const in arg _coforallCount[1808652]:_EndCount(AtomicT(int(64)),int(64))[943272], const in arg x[1808838]:_ddata(uint(64))[1539178]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1808678]:2*int(64)[1037179] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1808680]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808682 'move' coerce_tmp[1808680](2276627 '.v' this[1808648] _high[1023913]))
    const-val coerce_tmp[1808686]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808688 'move' coerce_tmp[1808686](2276634 '.v' this[1808648] _low[1023908]))
    const-val coerce_tmp[1808692]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1808694 'move' coerce_tmp[1808692](2276641 '.v' this[1808648] _low[1023908]))
    const-val ret_tmp[1808698]:2*int(64)[1037179] "temp"
    (1808701 call _computeBlock[1226167] len[1808644] numChunks[1808646] chunk[1808650] coerce_tmp[1808680] coerce_tmp[1808686] coerce_tmp[1808692] ret_tmp[1808698])
    (1808709 'move' call_tmp[1808678] ret_tmp[1808698])
    val tmp_x0[2256182]:int(64)[13] "temp"
    val tmp_x1[2256184]:int(64)[13] "temp"
    (2256190 'move' tmp_x0[2256182](2256188 '.v' call_tmp[1808678] x0[1037175]))
    (2256195 'move' tmp_x1[2256184](2256193 '.v' call_tmp[1808678] x1[1037177]))
    1
    const-val lo[1808725]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1808727]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1808729 'move' coerce_tmp[1808727] tmp_x0[2256182])
    (1808733 '=' lo[1808725] coerce_tmp[1808727])
    (1808736 'noop')
    const-val hi[1808744]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1808746]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1808748 'move' coerce_tmp[1808746] tmp_x1[2256184])
    (1808752 '=' hi[1808744] coerce_tmp[1808746])
    (1808755 'noop')
    const-val call_tmp_F0_low[2255717]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2255719]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2255733]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2255735]:int(64)[13] "temp"
    const-val _ir_F0_low[2255909]:int(64)[13] "temp"
    const-val _ir_F1_high[2255911]:int(64)[13] "temp"
    (2193726 'move' _ir_F0_low[2255909] lo[1808725])
    (2193730 'move' _ir_F1_high[2255911] hi[1808744])
    (2255741 'move' ret_tmp_F0_low[2255733] _ir_F0_low[2255909])
    (2255746 'move' ret_tmp_F1_high[2255735] _ir_F1_high[2255911])
    (2255725 'move' call_tmp_F0_low[2255717] ret_tmp_F0_low[2255733])
    (2255730 'move' call_tmp_F1_high[2255719] ret_tmp_F1_high[2255735])
    const-val _ic__F0_low[2248251]:int(64)[13] "temp"
    const-val _ic__F1_high[2248253]:int(64)[13] "temp"
    const-val tmp[2194651]:int(64)[13] "temp"
    (2194653 'move' tmp[2194651] call_tmp_F0_low[2255717])
    (2194658 'move' _ic__F0_low[2248251] tmp[2194651])
    const-val tmp[2194662]:int(64)[13] "temp"
    (2194664 'move' tmp[2194662] call_tmp_F1_high[2255719])
    (2194669 'move' _ic__F1_high[2248253] tmp[2194662])
    const-val call_tmp_F0_low[2264223]:int(64)[13] "temp"
    const-val call_tmp_F1_high[2264225]:int(64)[13] "temp"
    const-val ret_tmp_F0_low[2264239]:int(64)[13] "temp"
    const-val ret_tmp_F1_high[2264241]:int(64)[13] "temp"
    const-val low[1889112]:int(64)[13] "temp"
    (1889117 'move' low[1889112] _ic__F0_low[2248251])
    const-val high[1889119]:int(64)[13] "temp"
    (1889124 'move' high[1889119] _ic__F1_high[2248253])
    const-val _ir_F0_low[2265079]:int(64)[13] "temp"
    const-val _ir_F1_high[2265081]:int(64)[13] "temp"
    (2101413 'move' _ir_F0_low[2265079] low[1889112])
    (2101417 'move' _ir_F1_high[2265081] high[1889119])
    (2264247 'move' ret_tmp_F0_low[2264239] _ir_F0_low[2265079])
    (2264252 'move' ret_tmp_F1_high[2264241] _ir_F1_high[2265081])
    (2264231 'move' call_tmp_F0_low[2264223] ret_tmp_F0_low[2264239])
    (2264236 'move' call_tmp_F1_high[2264225] ret_tmp_F1_high[2264241])
    const-val _ic__F0_low[2251430]:int(64)[13] "temp"
    const-val _ic__F1_high[2251432]:int(64)[13] "temp"
    const-val tmp[2103067]:int(64)[13] "temp"
    (2103069 'move' tmp[2103067] call_tmp_F0_low[2264223])
    (2103074 'move' _ic__F0_low[2251430] tmp[2103067])
    const-val tmp[2103078]:int(64)[13] "temp"
    (2103080 'move' tmp[2103078] call_tmp_F1_high[2264225])
    (2103085 'move' _ic__F1_high[2251432] tmp[2103078])
    val i[1888939]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1888943 'move' i[1888939] 0)
    const-val default_arg_first[1888948]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[1888950]:int(64)[13] "temp"
    (1888952 'move' low[1888950] _ic__F0_low[2251430])
    (1888957 'move' default_arg_first[1888948] low[1888950])
    const-val default_arg_last[1888962]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[1888964]:int(64)[13] "temp"
    (1888966 'move' high[1888964] _ic__F1_high[2251432])
    (1888971 'move' default_arg_last[1888962] high[1888964])
    const-val low[1888978]:int(64)[13] "temp"
    (1888980 'move' low[1888978] _ic__F0_low[2251430])
    const-val high[1888985]:int(64)[13] "temp"
    (1888987 'move' high[1888985] _ic__F1_high[2251432])
    (1888995 call chpl_checkIfRangeIterWillOverflow[1093055] low[1888978] high[1888985] 1 default_arg_first[1888948] default_arg_last[1888962] 1)
    CForLoop[1889002] order-independent
    {
      const-val _yieldedIndex[1889036]:int(64)[13] "temp"
      (1889038 'move' _yieldedIndex[1889036] i[1888939])
      const-val _yieldedIndex[1889071]:int(64)[13] "temp"
      (1889110 'move' _yieldedIndex[1889071] _yieldedIndex[1889036])
      const-val i[1889073]:int(64)[13] "const" "index var" "insert auto destroy"
      (1889075 'move' i[1889073] _yieldedIndex[1889071])
      const-val yret[1889079]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[1889081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1889083 'move' call_tmp[1889081] i[1889073])
      (1889089 'move' yret[1889079] call_tmp[1889081])
      const i[1889092]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (1889094 'move' i[1889092] yret[1889079])
      val y[1889098]:uint(64)[115] "dead at end of block" "no auto destroy" "unsafe"
      (1889100 'move' y[1889098] 0)
      (1889103 'array_set_first' x[1808838] i[1889092] y[1889098])
      {
        const-val low[1889004]:int(64)[13] "temp"
        (1889006 'move' low[1889004] _ic__F0_low[2251430])
        (1889011 '=' i[1888939] low[1889004])
      }
      {
        const-val high[1889015]:int(64)[13] "temp"
        (1889017 'move' high[1889015] _ic__F1_high[2251432])
        (1889022 '<=' i[1888939] high[1889015])
      }
      {
        (1889028 '+=' i[1888939] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1889062]
    label _endchpl_direct_range_iter[1889067]
    label _endcoforall_fn[1808827]
    (1808829 return _void[55])
  }
  function wrapcoforall_fn[2025245](ref arg dummy_taskList[2025247]:c_void_ptr[149], in arg dummy_taskListNode[2025249]:int(64)[13], in arg buf[2025251]:c_void_ptr[149], in arg buf_size[2025253]:int(64)[13], in arg c[2025255]:_class_localscoforall_fn[2025174]) : void[4] "cobegin or coforall block"
  {
    val _0_len[2025260]:int(64)[13] "temp"
    (2025265 'move' _0_len[2025260](2025262 '.v' c[2025255] _0_len[2025177]))
    val _1_numChunks[2025268]:int(64)[13] "temp"
    (2025273 'move' _1_numChunks[2025268](2025270 '.v' c[2025255] _1_numChunks[2025179]))
    val _2_call_tmp[2025276]:range(int(64),bounded,false)[1023946] "temp"
    (2025281 'move' _2_call_tmp[2025276](2025278 '.v' c[2025255] _2_call_tmp[2025181]))
    val _3_chunk[2025284]:int(64)[13] "temp"
    (2025289 'move' _3_chunk[2025284](2025286 '.v' c[2025255] _3_chunk[2025183]))
    val _4__coforallCount[2025292]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025297 'move' _4__coforallCount[2025292](2025294 '.v' c[2025255] _4__coforallCount[2025185]))
    val _5_x[2025300]:_ddata(locale)[1251892] "temp"
    (2025305 'move' _5_x[2025300](2025302 '.v' c[2025255] _5_x[2025187]))
    (2025258 call coforall_fn[1805809] _0_len[2025260] _1_numChunks[2025268] _2_call_tmp[2025276] _3_chunk[2025284] _4__coforallCount[2025292] _5_x[2025300])
    val endcount[2025308]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025313 'move' endcount[2025308](2025310 '.v' c[2025255] _4__coforallCount[2025185]))
    (2025315 call _downEndCount[1227468] endcount[2025308] nil[44])
    (2025319 return _void[55])
  }
  function wrapcoforall_fn[2025400](ref arg dummy_taskList[2025402]:c_void_ptr[149], in arg dummy_taskListNode[2025404]:int(64)[13], in arg buf[2025406]:c_void_ptr[149], in arg buf_size[2025408]:int(64)[13], in arg c[2025410]:_class_localscoforall_fn[2025329]) : void[4] "cobegin or coforall block"
  {
    val _0_len[2025415]:int(64)[13] "temp"
    (2025420 'move' _0_len[2025415](2025417 '.v' c[2025410] _0_len[2025332]))
    val _1_numChunks[2025423]:int(64)[13] "temp"
    (2025428 'move' _1_numChunks[2025423](2025425 '.v' c[2025410] _1_numChunks[2025334]))
    val _2_call_tmp[2025431]:range(int(64),bounded,false)[1023946] "temp"
    (2025436 'move' _2_call_tmp[2025431](2025433 '.v' c[2025410] _2_call_tmp[2025336]))
    val _3_chunk[2025439]:int(64)[13] "temp"
    (2025444 'move' _3_chunk[2025439](2025441 '.v' c[2025410] _3_chunk[2025338]))
    val _4__coforallCount[2025447]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025452 'move' _4__coforallCount[2025447](2025449 '.v' c[2025410] _4__coforallCount[2025340]))
    val _5_x[2025455]:_ddata(unmanaged localesSignal?)[1313711] "temp"
    (2025460 'move' _5_x[2025455](2025457 '.v' c[2025410] _5_x[2025342]))
    (2025413 call coforall_fn[1806270] _0_len[2025415] _1_numChunks[2025423] _2_call_tmp[2025431] _3_chunk[2025439] _4__coforallCount[2025447] _5_x[2025455])
    val endcount[2025463]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025468 'move' endcount[2025463](2025465 '.v' c[2025410] _4__coforallCount[2025340]))
    (2025470 call _downEndCount[1227468] endcount[2025463] nil[44])
    (2025474 return _void[55])
  }
  function wrapcoforall_fn[2025555](ref arg dummy_taskList[2025557]:c_void_ptr[149], in arg dummy_taskListNode[2025559]:int(64)[13], in arg buf[2025561]:c_void_ptr[149], in arg buf_size[2025563]:int(64)[13], in arg c[2025565]:_class_localscoforall_fn[2025484]) : void[4] "cobegin or coforall block"
  {
    val _0_len[2025570]:int(64)[13] "temp"
    (2025575 'move' _0_len[2025570](2025572 '.v' c[2025565] _0_len[2025487]))
    val _1_numChunks[2025578]:int(64)[13] "temp"
    (2025583 'move' _1_numChunks[2025578](2025580 '.v' c[2025565] _1_numChunks[2025489]))
    val _2_call_tmp[2025586]:range(int(64),bounded,false)[1023946] "temp"
    (2025591 'move' _2_call_tmp[2025586](2025588 '.v' c[2025565] _2_call_tmp[2025491]))
    val _3_chunk[2025594]:int(64)[13] "temp"
    (2025599 'move' _3_chunk[2025594](2025596 '.v' c[2025565] _3_chunk[2025493]))
    val _4__coforallCount[2025602]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025607 'move' _4__coforallCount[2025602](2025604 '.v' c[2025565] _4__coforallCount[2025495]))
    val _5_x[2025610]:_ddata(real(64))[1353617] "temp"
    (2025615 'move' _5_x[2025610](2025612 '.v' c[2025565] _5_x[2025497]))
    (2025568 call coforall_fn[1806731] _0_len[2025570] _1_numChunks[2025578] _2_call_tmp[2025586] _3_chunk[2025594] _4__coforallCount[2025602] _5_x[2025610])
    val endcount[2025618]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025623 'move' endcount[2025618](2025620 '.v' c[2025565] _4__coforallCount[2025495]))
    (2025625 call _downEndCount[1227468] endcount[2025618] nil[44])
    (2025629 return _void[55])
  }
  function wrapcoforall_fn[2025710](ref arg dummy_taskList[2025712]:c_void_ptr[149], in arg dummy_taskListNode[2025714]:int(64)[13], in arg buf[2025716]:c_void_ptr[149], in arg buf_size[2025718]:int(64)[13], in arg c[2025720]:_class_localscoforall_fn[2025639]) : void[4] "cobegin or coforall block"
  {
    val _0_len[2025725]:int(64)[13] "temp"
    (2025730 'move' _0_len[2025725](2025727 '.v' c[2025720] _0_len[2025642]))
    val _1_numChunks[2025733]:int(64)[13] "temp"
    (2025738 'move' _1_numChunks[2025733](2025735 '.v' c[2025720] _1_numChunks[2025644]))
    val _2_call_tmp[2025741]:range(int(64),bounded,false)[1023946] "temp"
    (2025746 'move' _2_call_tmp[2025741](2025743 '.v' c[2025720] _2_call_tmp[2025646]))
    val _3_chunk[2025749]:int(64)[13] "temp"
    (2025754 'move' _3_chunk[2025749](2025751 '.v' c[2025720] _3_chunk[2025648]))
    val _4__coforallCount[2025757]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025762 'move' _4__coforallCount[2025757](2025759 '.v' c[2025720] _4__coforallCount[2025650]))
    val _5_x[2025765]:_ddata(int(64))[1520710] "temp"
    (2025770 'move' _5_x[2025765](2025767 '.v' c[2025720] _5_x[2025652]))
    (2025723 call coforall_fn[1808183] _0_len[2025725] _1_numChunks[2025733] _2_call_tmp[2025741] _3_chunk[2025749] _4__coforallCount[2025757] _5_x[2025765])
    val endcount[2025773]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025778 'move' endcount[2025773](2025775 '.v' c[2025720] _4__coforallCount[2025650]))
    (2025780 call _downEndCount[1227468] endcount[2025773] nil[44])
    (2025784 return _void[55])
  }
  function wrapcoforall_fn[2025865](ref arg dummy_taskList[2025867]:c_void_ptr[149], in arg dummy_taskListNode[2025869]:int(64)[13], in arg buf[2025871]:c_void_ptr[149], in arg buf_size[2025873]:int(64)[13], in arg c[2025875]:_class_localscoforall_fn[2025794]) : void[4] "cobegin or coforall block"
  {
    val _0_len[2025880]:int(64)[13] "temp"
    (2025885 'move' _0_len[2025880](2025882 '.v' c[2025875] _0_len[2025797]))
    val _1_numChunks[2025888]:int(64)[13] "temp"
    (2025893 'move' _1_numChunks[2025888](2025890 '.v' c[2025875] _1_numChunks[2025799]))
    val _2_call_tmp[2025896]:range(int(64),bounded,false)[1023946] "temp"
    (2025901 'move' _2_call_tmp[2025896](2025898 '.v' c[2025875] _2_call_tmp[2025801]))
    val _3_chunk[2025904]:int(64)[13] "temp"
    (2025909 'move' _3_chunk[2025904](2025906 '.v' c[2025875] _3_chunk[2025803]))
    val _4__coforallCount[2025912]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025917 'move' _4__coforallCount[2025912](2025914 '.v' c[2025875] _4__coforallCount[2025805]))
    val _5_x[2025920]:_ddata(uint(64))[1539178] "temp"
    (2025925 'move' _5_x[2025920](2025922 '.v' c[2025875] _5_x[2025807]))
    (2025878 call coforall_fn[1808642] _0_len[2025880] _1_numChunks[2025888] _2_call_tmp[2025896] _3_chunk[2025904] _4__coforallCount[2025912] _5_x[2025920])
    val endcount[2025928]:_EndCount(AtomicT(int(64)),int(64))[943272] "temp"
    (2025933 'move' endcount[2025928](2025930 '.v' c[2025875] _4__coforallCount[2025805]))
    (2025935 call _downEndCount[1227468] endcount[2025928] nil[44])
    (2025939 return _void[55])
  }
}