AST dump for Builtins after pass copyPropagation.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416208]() : void[4] "insert line file info" "module init" "resolved"
  {
    (527982 return _void[55])
  }
  function assert[210432](const in arg test[210429]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[2228247]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228249 'move' call_tmp[2228247](2228251 '!' test[210429]))
    if call_tmp[2228247]
    {
      (210442 'chpl_error' c"assert failed")
    }
    (527960 return _void[55])
  }
  function assert[1442412](const in arg test[1442414]:bool[10], const  ref arg _e0_args[1442416]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[2228742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228744 'move' call_tmp[2228742](2228746 '!' test[1442414]))
    if call_tmp[2228742]
    {
      const-val call_tmp[1442441]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1915121]:string[26] "temp"
      (1442446 call stringify[1442480] _e0_args[1442416] ret_tmp[1915121])
      (1915124 'move' call_tmp[1442441] ret_tmp[1915121])
      const-val call_tmp[1442448]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906076]:string[26] "temp"
      (1442453 call +[38345] "assert failed - " call_tmp[1442441] ret_tmp[1906076])
      (1906079 'move' call_tmp[1442448] ret_tmp[1906076])
      const-val tmpstring[1442456]:string[26] "dead at end of block" "insert auto destroy"
      (1442458 'move' tmpstring[1442456] call_tmp[1442448])
      const-val coerce_tmp[2268967]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2268969 'move' coerce_tmp[2268967](2268971 '.v' tmpstring[1442456] locale_id[30757]))
      const-val call_tmp[2268974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2268976 'move' call_tmp[2268974](2268978 '!=' coerce_tmp[2268967] chpl_nodeID[208207]))
      if call_tmp[2268974]
      {
        (2268984 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2268987]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2268989 'move' coerce_tmp[2268987](2268991 '.v' tmpstring[1442456] buff[30740]))
      const-val call_tmp[2268994]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2268996 'move' call_tmp[2268994](2268998 'cast' c_string[19] coerce_tmp[2268987]))
      (1442471 'chpl_error' call_tmp[2268994])
      ref i_x[2249237]:string[26] "temp"
      (2249241 'move' i_x[2249237](2249239 'set reference' tmpstring[1442456]))
      (2249245 call deinit[30834] i_x[2249237])
      ref i_x[2249249]:string[26] "temp"
      (2249253 'move' i_x[2249249](2249251 'set reference' call_tmp[1442441]))
      (2249257 call deinit[30834] i_x[2249249])
    }
    (1442476 return _void[55])
  }
  function assert[1465943](const in arg test[1465945]:bool[10], const  ref arg _e0_args[1465947]:string[26], const in arg _e1_args[1465949]:uint(64)[115], const  ref arg _e2_args[1465951]:string[26], const in arg _e3_args[1465953]:int(64)[13]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[2228778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228780 'move' call_tmp[2228778](2228782 '!' test[1465945]))
    if call_tmp[2228778]
    {
      const-val call_tmp[1465984]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1915340]:string[26] "temp"
      (1465989 call stringify[1466032] _e0_args[1465947] _e1_args[1465949] _e2_args[1465951] _e3_args[1465953] ret_tmp[1915340])
      (1915343 'move' call_tmp[1465984] ret_tmp[1915340])
      const-val call_tmp[1465994]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906082]:string[26] "temp"
      (1465999 call +[38345] "assert failed - " call_tmp[1465984] ret_tmp[1906082])
      (1906085 'move' call_tmp[1465994] ret_tmp[1906082])
      const-val tmpstring[1466002]:string[26] "dead at end of block" "insert auto destroy"
      (1466004 'move' tmpstring[1466002] call_tmp[1465994])
      const-val coerce_tmp[2269010]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269012 'move' coerce_tmp[2269010](2269014 '.v' tmpstring[1466002] locale_id[30757]))
      const-val call_tmp[2269017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269019 'move' call_tmp[2269017](2269021 '!=' coerce_tmp[2269010] chpl_nodeID[208207]))
      if call_tmp[2269017]
      {
        (2269027 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269030]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269032 'move' coerce_tmp[2269030](2269034 '.v' tmpstring[1466002] buff[30740]))
      const-val call_tmp[2269037]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269039 'move' call_tmp[2269037](2269041 'cast' c_string[19] coerce_tmp[2269030]))
      (1466017 'chpl_error' call_tmp[2269037])
      ref i_x[2249261]:string[26] "temp"
      (2249265 'move' i_x[2249261](2249263 'set reference' tmpstring[1466002]))
      (2249269 call deinit[30834] i_x[2249261])
      ref i_x[2249273]:string[26] "temp"
      (2249277 'move' i_x[2249273](2249275 'set reference' call_tmp[1465984]))
      (2249281 call deinit[30834] i_x[2249273])
    }
    (1466022 return _void[55])
  }
  function assert[1559946](const in arg test[1559948]:bool[10], const  ref arg _e0_args[1559950]:string[26], const  ref arg _e1_args[1559952]:string[26], const  ref arg _e2_args[1559954]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[2228868]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228870 'move' call_tmp[2228868](2228872 '!' test[1559948]))
    if call_tmp[2228868]
    {
      const-val call_tmp[1559983]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1916861]:string[26] "temp"
      (1559988 call stringify[1560024] _e0_args[1559950] _e1_args[1559952] _e2_args[1559954] ret_tmp[1916861])
      (1916864 'move' call_tmp[1559983] ret_tmp[1916861])
      const-val call_tmp[1559992]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906094]:string[26] "temp"
      (1559997 call +[38345] "assert failed - " call_tmp[1559983] ret_tmp[1906094])
      (1906097 'move' call_tmp[1559992] ret_tmp[1906094])
      const-val tmpstring[1560000]:string[26] "dead at end of block" "insert auto destroy"
      (1560002 'move' tmpstring[1560000] call_tmp[1559992])
      const-val coerce_tmp[2269053]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269055 'move' coerce_tmp[2269053](2269057 '.v' tmpstring[1560000] locale_id[30757]))
      const-val call_tmp[2269060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269062 'move' call_tmp[2269060](2269064 '!=' coerce_tmp[2269053] chpl_nodeID[208207]))
      if call_tmp[2269060]
      {
        (2269070 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269073]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2269075 'move' coerce_tmp[2269073](2269077 '.v' tmpstring[1560000] buff[30740]))
      const-val call_tmp[2269080]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269082 'move' call_tmp[2269080](2269084 'cast' c_string[19] coerce_tmp[2269073]))
      (1560015 'chpl_error' call_tmp[2269080])
      ref i_x[2249405]:string[26] "temp"
      (2249409 'move' i_x[2249405](2249407 'set reference' tmpstring[1560000]))
      (2249413 call deinit[30834] i_x[2249405])
      ref i_x[2249417]:string[26] "temp"
      (2249421 'move' i_x[2249417](2249419 'set reference' call_tmp[1559983]))
      (2249425 call deinit[30834] i_x[2249417])
    }
    (1560020 return _void[55])
  }
  function compilerAssert[974079]() : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (974107 return _void[55])
  }
}