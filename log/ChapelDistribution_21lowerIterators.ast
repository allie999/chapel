AST dump for ChapelDistribution after pass lowerIterators.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  function chpl__init_ChapelDistribution[416100]() : void[4] "insert line file info" "module init" "resolved"
  {
    (520523 return _void[55])
  }
  function BaseDist[145968].deinit[145498](const in arg this[145970]:BaseDist[145968]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1890100]
    ref _field_destructor_tmp_[1890098]:_ref(chpl_LocalSpinlock)[941260] "temp"
    (1890105 'move' _field_destructor_tmp_[1890098](1890102 '.' this[145970] _domsLock[145481]))
    (1890107 call deinit[820583] _field_destructor_tmp_[1890098])
    ref _field_destructor_tmp_[1890110]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "temp"
    (1890115 'move' _field_destructor_tmp_[1890110](1890112 '.' this[145970] _doms[145476]))
    (1890117 call deinit[1689389] _field_destructor_tmp_[1890110])
    val _parent_destructor_tmp_[1890120]:object[22] "temp"
    (1890125 'move' _parent_destructor_tmp_[1890120](1890121 'cast' object[22] this[145970]))
    (1890127 call deinit[749568] _parent_destructor_tmp_[1890120])
    (519799 return _void[55])
  }
  function BaseDist[145968].remove[145505](const in arg this[145974]:BaseDist[145968]) : BaseDist[145968] "dont disable remote value forwarding" "method" "primary method" "resolved"
  {
    val ret[519803]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    val free_dist[145511]:bool[10] "dead at end of block" "insert auto destroy"
    (543659 'move' free_dist[145511] 0)
    val call_tmp[667543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val _virtual_method_tmp_[1875682]:int(32)[95] "temp"
    (1875686 'move' _virtual_method_tmp_[1875682](1875684 'getcid' this[145974]))
    (667546 'move' call_tmp[667543](145518 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1875682] this[145974]))
    val call_tmp[667548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667551 'move' call_tmp[667548] call_tmp[667543])
    if call_tmp[667548]
    {
      const tmp[145576]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      val call_tmp[667553]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (667556 'move' call_tmp[667553](145573 '_wide_get_locale' this[145974]))
      (145578 'move' tmp[145576] call_tmp[667553])
      (935345 call on_fn[935341] tmp[145576] this[145974] free_dist[145511])
      {
      }
    }
    {
      (145587 call =[435290] free_dist[145511] 1)
    }
    val call_tmp[667612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667615 'move' call_tmp[667612] free_dist[145511])
    if call_tmp[667612]
    {
      val call_tmp[667617]:BaseDist[145968] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (667620 'move' call_tmp[667617](145599 call _to_unmanaged[1501336] this[145974]))
      (519809 'move' ret[519803] call_tmp[667617])
      gotoReturn _end_remove[519801] _end_remove[519801]
    }
    {
      (519815 'move' ret[519803](1501383 'cast' BaseDist[145968] nil[44]))
      gotoReturn _end_remove[519801] _end_remove[519801]
    }
    label _end_remove[519801]
    (519805 return ret[519803])
  }
  function BaseDist[145968].remove_dom[145621](const in arg this[145978]:BaseDist[145968], const in arg x[145618]:BaseDom[146767]) : bool[10] "inline" "method" "primary method" "resolved"
  {
    val ret[519821]:bool[10] "dead after last mention" "RVV" "temp"
    val count[145627]:int(64)[13] "dead at end of block" "insert auto destroy"
    (543663 'move' count[145627] -1)
    const tmp[145696]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[667627]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667630 'move' call_tmp[667627](145693 '_wide_get_locale' this[145978]))
    (145698 'move' tmp[145696] call_tmp[667627])
    (935354 call on_fn[935350] tmp[145696] this[145978] x[145618] count[145627])
    {
    }
    val call_tmp[667695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667698 'move' call_tmp[667695](145706 call ==[435744] count[145627] 0))
    (1500736 'move' ret[519821] call_tmp[667695])
    gotoReturn _end_remove_dom[519819] _end_remove_dom[519819]
    label _end_remove_dom[519819]
    (519823 return ret[519821])
  }
  function BaseDist[145968].dsiDestroyDist[145894](const in arg this[146006]:BaseDist[145968]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519857 return _void[55])
  }
  function BaseDist[145968].dsiTrackDomains[145939](const in arg this[146018]:BaseDist[145968]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519872]:bool[10] "dead after last mention" "RVV" "temp"
    (519877 'move' ret[519872] 1)
    (519874 return ret[519872])
  }
  function BaseDist[145968].init[786978](const in arg this[786981]:BaseDist[145968], ref arg _doms[786992]:chpl__simpleSet(unmanaged BaseDom)[1208831], ref arg _domsLock[787007]:chpl_LocalSpinlock[187432], in arg _free_when_no_doms[787020]:bool[10], in arg pid[787033]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__doms[1209138]:chpl__simpleSet(unmanaged BaseDom)[1208831] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209144 'move' _formal_tmp__doms[1209138] _doms[786992])
    val _formal_tmp__domsLock[1209139]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209148 'move' _formal_tmp__domsLock[1209139] _domsLock[787007])
    val _formal_tmp__free_when_no_doms[1209140]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1209155 'move' _formal_tmp__free_when_no_doms[1209140](1209152 call chpl__initCopy[1035073] _free_when_no_doms[787020]))
    val _formal_tmp_pid[1209141]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1209161 'move' _formal_tmp_pid[1209141](1209158 call chpl__initCopy[955521] pid[787033]))
    val super_tmp[787050]:object[22] "dead after last mention" "temporary of super field" "temp"
    (787052 'move' super_tmp[787050](787049 '.v' this[786981] super[355763]))
    (786991 call init[749552] super_tmp[787050])
    val tmp[787055]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[787107]:object[22] "dead at end of block" "maybe param" "temp"
    (787110 'move' call_tmp[787107](787066 'cast' object[22] this[786981]))
    val chpl__thisAsParent[787063]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (787098 'move' chpl__thisAsParent[787063](1209167 call chpl__initCopy[945460] call_tmp[787107]))
    (787069 'setcid' chpl__thisAsParent[787063])
    (787071 '.=' this[786981] _doms[145476] _formal_tmp__doms[1209138])
    (787074 '.=' this[786981] _domsLock[145481] _formal_tmp__domsLock[1209139])
    (787077 '.=' this[786981] _free_when_no_doms[145486] _formal_tmp__free_when_no_doms[1209140])
    (787080 '.=' this[786981] pid[145492] _formal_tmp_pid[1209141])
    (787083 'setcid' this[786981])
    (787096 return _void[55])
  }
  function BaseDist[145968]._doms[801416](const in arg this[801420]:BaseDist[145968]) ref : _ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801430]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "dead after last mention" "RVV" "temp"
    ref call_tmp[801437]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "dead after last mention" "maybe param" "temp"
    (801440 'move' call_tmp[801437](801424 '.' this[801420] _doms[145476]))
    (801435 'move' ret[801430] call_tmp[801437])
    (801432 return ret[801430])
  }
  function BaseDist[145968]._domsLock[801442](const in arg this[801446]:BaseDist[145968]) ref : _ref(chpl_LocalSpinlock)[941260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801456]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "RVV" "temp"
    ref call_tmp[801463]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
    (801466 'move' call_tmp[801463](801450 '.' this[801446] _domsLock[145481]))
    (801461 'move' ret[801456] call_tmp[801463])
    (801458 return ret[801456])
  }
  function BaseDist[145968]._free_when_no_doms[801468](const in arg this[801472]:BaseDist[145968]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801482]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[801489]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (801492 'move' call_tmp[801489](801476 '.' this[801472] _free_when_no_doms[145486]))
    (801487 'move' ret[801482] call_tmp[801489])
    (801484 return ret[801482])
  }
  function BaseDist[145968].pid[801494](const in arg this[801498]:BaseDist[145968]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801508]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[801515]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (801518 'move' call_tmp[801515](801502 '.' this[801498] pid[145492]))
    (801513 'move' ret[801508] call_tmp[801515])
    (801510 return ret[801508])
  }
  type BaseDist[145968] val super[355763]:object[22] "super class" val _doms[145476]:chpl__simpleSet(unmanaged BaseDom)[1208831] val _domsLock[145481]:chpl_LocalSpinlock[187432] val _free_when_no_doms[145486]:bool[10] val pid[145492]:int(64)[13]
  function BaseDom[146767].init[146064](const in arg this[146769]:BaseDom[146767]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[461803]:object[22] "dead after last mention" "temporary of super field" "temp"
    (461811 'move' super_tmp[461803](461804 '.v' this[146769] super[355767]))
    (461807 call init[749552] super_tmp[461803])
    val tmp[461738]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[667737]:object[22] "dead at end of block" "maybe param" "temp"
    (667740 'move' call_tmp[667737](461749 'cast' object[22] this[146769]))
    val chpl__thisAsParent[461746]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (543667 'move' chpl__thisAsParent[461746](1247630 call chpl__initCopy[945460] call_tmp[667737]))
    (461752 'setcid' chpl__thisAsParent[461746])
    val tmp[461755]:chpl__simpleSet(unmanaged BaseArr)[1208531] "dead after last mention" "temp"
    val call_tmp[667742]:chpl__simpleSet(unmanaged BaseArr)[1208531] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val default_arg_table[1250995]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    val ret_tmp[1911618]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "temp"
    (1250997 call init_default_table[1247717] ret_tmp[1911618])
    (1911621 'move' default_arg_table[1250995] ret_tmp[1911618])
    (1247652 call init[1247657] tmp[461755] default_arg_table[1250995])
    (461762 '.=' this[146769] _arrs[146037] tmp[461755])
    val tmp[461766]:int(64)[13] "dead after last mention" "temp"
    (1251004 'move' tmp[461766] 0)
    (461771 '.=' this[146769] _arrs_containing_dom[146042] tmp[461766])
    val tmp[461775]:chpl_LocalSpinlock[187432] "dead after last mention" "temp"
    val default_arg_l[1251014]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    val ret_tmp[1907832]:AtomicBool[45877] "temp"
    (1251016 call init_default_l[945017] ret_tmp[1907832])
    (1907835 'move' default_arg_l[1251014] ret_tmp[1907832])
    (1251006 call init[820510] tmp[461775] default_arg_l[1251014])
    (461780 '.=' this[146769] _arrsLock[146047] tmp[461775])
    val tmp[461784]:bool[10] "dead after last mention" "temp"
    (1251023 'move' tmp[461784] 0)
    (461789 '.=' this[146769] _free_when_no_arrs[146052] tmp[461784])
    val tmp[461794]:int(64)[13] "dead after last mention" "temp"
    (461797 'move' tmp[461794] -1)
    (461799 '.=' this[146769] pid[146058] tmp[461794])
    (461814 'setcid' this[146769])
    (519897 return _void[55])
  }
  function BaseDom[146767].deinit[146071](const in arg this[146773]:BaseDom[146767]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1890132]
    ref _field_destructor_tmp_[1890130]:_ref(chpl_LocalSpinlock)[941260] "temp"
    (1890137 'move' _field_destructor_tmp_[1890130](1890134 '.' this[146773] _arrsLock[146047]))
    (1890139 call deinit[820583] _field_destructor_tmp_[1890130])
    ref _field_destructor_tmp_[1890142]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
    (1890147 'move' _field_destructor_tmp_[1890142](1890144 '.' this[146773] _arrs[146037]))
    (1890149 call deinit[1686305] _field_destructor_tmp_[1890142])
    val _parent_destructor_tmp_[1890152]:object[22] "temp"
    (1890157 'move' _parent_destructor_tmp_[1890152](1890153 'cast' object[22] this[146773]))
    (1890159 call deinit[749568] _parent_destructor_tmp_[1890152])
    (519899 return _void[55])
  }
  function BaseDom[146767].dsiMyDist[146078](const in arg this[146777]:BaseDom[146767]) : BaseDist[145968] "method" "primary method" "resolved" "virtual"
  {
    val ret[519903]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    (146101 call halt[154111] "internal error: dsiMyDist is not implemented")
    val ret[146106]:BaseDist[145968] "dead at end of block" "insert auto destroy" "unsafe"
    (1496574 'move' ret[146106](1496572 'cast' BaseDist[145968] nil[44]))
    (1496569 'move' ret[519903] ret[146106])
    gotoReturn _end_dsiMyDist[519901] _end_dsiMyDist[519901]
    label _end_dsiMyDist[519901]
    (519905 return ret[519903])
  }
  function BaseDom[146767].remove[146118](const in arg this[146781]:BaseDom[146767], ref arg _retArg[1906870]:_ref((unmanaged BaseDom?,unmanaged BaseDist?))[1496543]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "method" "primary method" "resolved"
  {
    val ret[519915]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "RVV" "temp"
    val call_tmp[667749]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
    val _virtual_method_tmp_[1875689]:int(32)[95] "temp"
    (1875693 'move' _virtual_method_tmp_[1875689](1875691 'getcid' this[146781]))
    (667752 'move' call_tmp[667749](146132 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1875689] this[146781]))
    val call_tmp[667756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1496576]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1496581 'move' coerce_tmp[1496576] call_tmp[667749])
    val _virtual_method_tmp_[1875696]:int(32)[95] "temp"
    (1875700 'move' _virtual_method_tmp_[1875696](1875698 'getcid' coerce_tmp[1496576]))
    (667759 'move' call_tmp[667756](146139 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1875696] coerce_tmp[1496576]))
    val call_tmp[667763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val _virtual_method_tmp_[1875703]:int(32)[95] "temp"
    (1875707 'move' _virtual_method_tmp_[1875703](1875705 'getcid' this[146781]))
    (667766 'move' call_tmp[667763](146142 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1875703] this[146781]))
    val call_tmp[667768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667771 'move' call_tmp[667768](146143 call ==[938] call_tmp[667756] call_tmp[667763]))
    (146146 call assert[210432] call_tmp[667768])
    val ret_dom[146153]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1496587]:BaseDom[146767] "dead at end of block" "temp"
    (1496590 'move' init_coerce_tmp[1496587](1500917 'cast' BaseDom[146767] nil[44]))
    (543671 'move' ret_dom[146153] init_coerce_tmp[1496587])
    val ret_dist[146161]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1496593]:BaseDist[145968] "dead at end of block" "temp"
    (1496596 'move' init_coerce_tmp[1496593](1500921 'cast' BaseDist[145968] nil[44]))
    (543673 'move' ret_dist[146161] init_coerce_tmp[1496593])
    val call_tmp[667775]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
    val _virtual_method_tmp_[1875710]:int(32)[95] "temp"
    (1875714 'move' _virtual_method_tmp_[1875710](1875712 'getcid' this[146781]))
    (667778 'move' call_tmp[667775](146167 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1875710] this[146781]))
    val dist[146168]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    (543675 'move' dist[146168](1496600 call chpl__initCopy[1496602] call_tmp[667775]))
    val free_dom[146173]:bool[10] "dead at end of block" "insert auto destroy"
    (543677 'move' free_dom[146173] 0)
    val remove_dist[146178]:bool[10] "dead at end of block" "insert auto destroy"
    (543679 'move' remove_dist[146178] 0)
    const tmp[146266]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[667780]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667783 'move' call_tmp[667780](146263 '_wide_get_locale' this[146781]))
    (146268 'move' tmp[146266] call_tmp[667780])
    (935372 call on_fn[935368] tmp[146266] this[146781] free_dom[146173] dist[146168] remove_dist[146178])
    {
    }
    val call_tmp[667865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667868 'move' call_tmp[667865] free_dom[146173])
    if call_tmp[667865]
    {
      val call_tmp[667870]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
      (667873 'move' call_tmp[667870](146279 call _to_unmanaged[1496642] this[146781]))
      val coerce_tmp[1500740]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500746 'move' coerce_tmp[1500740] call_tmp[667870])
      (146280 call =[1495600] ret_dom[146153] coerce_tmp[1500740])
    }
    val call_tmp[667875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667878 'move' call_tmp[667875] remove_dist[146178])
    if call_tmp[667875]
    {
      val coerce_tmp[1500825]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500831 'move' coerce_tmp[1500825] dist[146168])
      (146291 call =[1500790] ret_dist[146161] coerce_tmp[1500825])
    }
    val call_tmp[667880]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[1916183]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "temp"
    (146302 call _build_tuple[1500834] ret_dom[146153] ret_dist[146161] ret_tmp[1916183])
    (1916186 'move' call_tmp[667880] ret_tmp[1916183])
    val call_tmp[667885]:(unmanaged BaseDom?,unmanaged BaseDist?)[1496480] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1500926 'move' ret[519915] call_tmp[667880])
    gotoReturn _end_remove[519913] _end_remove[519913]
    label _end_remove[519913]
    (1906872 '=' _retArg[1906870] ret[519915])
    (1906874 return _void[55])
  }
  function BaseDom[146767].remove_arr[1494140](const in arg this[1494144]:BaseDom[146767], const in arg x[1494146]:BaseArr[149584]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1494156]:bool[10] "dead after last mention" "RVV" "temp"
    val count[1494169]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1494171 'move' count[1494169] -1)
    const tmp[1494175]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[1494177]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1494179 'move' call_tmp[1494177](1494181 '_wide_get_locale' this[1494144]))
    (1494183 'move' tmp[1494175] call_tmp[1494177])
    (1494188 call on_fn[1494190] tmp[1494175] this[1494144] x[1494146] count[1494169])
    {
    }
    val call_tmp[1494354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1494356 'move' call_tmp[1494354](1494359 call ==[435744] count[1494169] 0))
    (1495556 'move' ret[1494156] call_tmp[1494354])
    gotoReturn _end_remove_arr[1494371] _end_remove_arr[1494371]
    label _end_remove_arr[1494371]
    (1494373 return ret[1494156])
  }
  function BaseDom[146767].add_arr[1264931](const in arg this[1264935]:BaseDom[146767], const in arg x[1264937]:BaseArr[149584]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const tmp[1264953]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[1264955]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264957 'move' call_tmp[1264955](1264959 '_wide_get_locale' this[1264935]))
    (1264961 'move' tmp[1264953] call_tmp[1264955])
    (1264966 call on_fn[1264968] tmp[1264953] this[1264935] x[1264937])
    {
    }
    (1265061 return _void[55])
  }
  function BaseDom[146767].dsiLinksDistribution[146679](const in arg this[146813]:BaseDom[146767]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519984]:bool[10] "dead after last mention" "RVV" "temp"
    (519989 'move' ret[519984] 1)
    (519986 return ret[519984])
  }
  function BaseDom[146767].dsiDestroyDom[146689](const in arg this[146817]:BaseDom[146767]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519991 return _void[55])
  }
  function BaseDom[146767]._arrs[801578](const in arg this[801582]:BaseDom[146767]) ref : _ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801592]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "RVV" "temp"
    ref call_tmp[801599]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "maybe param" "temp"
    (801602 'move' call_tmp[801599](801586 '.' this[801582] _arrs[146037]))
    (801597 'move' ret[801592] call_tmp[801599])
    (801594 return ret[801592])
  }
  function BaseDom[146767]._arrs_containing_dom[801604](const in arg this[801608]:BaseDom[146767]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801618]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[801625]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (801628 'move' call_tmp[801625](801612 '.' this[801608] _arrs_containing_dom[146042]))
    (801623 'move' ret[801618] call_tmp[801625])
    (801620 return ret[801618])
  }
  function BaseDom[146767]._arrsLock[801630](const in arg this[801634]:BaseDom[146767]) ref : _ref(chpl_LocalSpinlock)[941260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801644]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "RVV" "temp"
    ref call_tmp[801651]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
    (801654 'move' call_tmp[801651](801638 '.' this[801634] _arrsLock[146047]))
    (801649 'move' ret[801644] call_tmp[801651])
    (801646 return ret[801644])
  }
  function BaseDom[146767]._free_when_no_arrs[801656](const in arg this[801660]:BaseDom[146767]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801670]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[801677]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (801680 'move' call_tmp[801677](801664 '.' this[801660] _free_when_no_arrs[146052]))
    (801675 'move' ret[801670] call_tmp[801677])
    (801672 return ret[801670])
  }
  function BaseDom[146767].pid[801682](const in arg this[801686]:BaseDom[146767]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801696]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[801703]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (801706 'move' call_tmp[801703](801690 '.' this[801686] pid[146058]))
    (801701 'move' ret[801696] call_tmp[801703])
    (801698 return ret[801696])
  }
  type BaseDom[146767] val super[355767]:object[22] "super class" val _arrs[146037]:chpl__simpleSet(unmanaged BaseArr)[1208531] val _arrs_containing_dom[146042]:int(64)[13] val _arrsLock[146047]:chpl_LocalSpinlock[187432] val _free_when_no_arrs[146052]:bool[10] val pid[146058]:int(64)[13]
  function BaseRectangularDom(1,int(64),false)[1251088].deinit[1831922](const in arg this[1831926]:BaseRectangularDom(1,int(64),false)[1251088]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892003]
    val _parent_destructor_tmp_[1891998]:BaseDom[146767] "temp"
    (1892005 'move' _parent_destructor_tmp_[1891998](1891999 'cast' BaseDom[146767] this[1831926]))
    (1892007 call deinit[146071] _parent_destructor_tmp_[1891998])
    (1831932 return _void[55])
  }
  function BaseRectangularDom(1,int(64),false)[1251088].init[1247519](const in arg this[1247523]:BaseRectangularDom(1,int(64),false)[1251088]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879879]:int(64)[13] "temp"
    val super_tmp[1247539]:BaseDom[146767] "dead after last mention" "temporary of super field" "temp"
    (1247541 'move' super_tmp[1247539](1247543 '.v' this[1247523] super[1251078]))
    (1247550 call init[146064] super_tmp[1247539])
    val tmp[1247552]:BaseDom[146767] "dead after last mention" "temp" "type variable"
    val call_tmp[1247571]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    (1247573 'move' call_tmp[1247571](1247575 'cast' BaseDom[146767] this[1247523]))
    val chpl__thisAsParent[1247578]:BaseDom[146767] "dead at end of block" "insert auto destroy" "temp"
    (1247580 'move' chpl__thisAsParent[1247578](1251026 call chpl__initCopy[1251028] call_tmp[1247571]))
    (1247584 'setcid' chpl__thisAsParent[1247578])
    (1247616 'setcid' this[1247523])
    (1247618 return _void[55])
  }
  type BaseRectangularDom(1,int(64),false)[1251088] val super[1251078]:BaseDom[146767] "super class"
  function BaseArr[149584].deinit[148925](const in arg this[149602]:BaseArr[149584]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1890167]
    val _parent_destructor_tmp_[1890162]:object[22] "temp"
    (1890169 'move' _parent_destructor_tmp_[1890162](1890163 'cast' object[22] this[149602]))
    (1890171 call deinit[749568] _parent_destructor_tmp_[1890162])
    (520343 return _void[55])
  }
  function BaseArr[149584].dsiGetBaseDom[148944](const in arg this[149610]:BaseArr[149584]) : BaseDom[146767] "method" "primary method" "resolved" "virtual"
  {
    val ret[520356]:BaseDom[146767] "dead after last mention" "RVV" "temp"
    (148967 call halt[154111] "internal error: dsiGetBaseDom is not implemented")
    val ret[148972]:BaseDom[146767] "dead at end of block" "insert auto destroy" "unsafe"
    (1494056 'move' ret[148972](1494054 'cast' BaseDom[146767] nil[44]))
    (1494051 'move' ret[520356] ret[148972])
    gotoReturn _end_dsiGetBaseDom[520354] _end_dsiGetBaseDom[520354]
    label _end_dsiGetBaseDom[520354]
    (520358 return ret[520356])
  }
  function BaseArr[149584].remove[1493907](const in arg this[1493911]:BaseArr[149584], ref arg _retArg[1916089]:_ref((BaseArr,unmanaged BaseDom?))[1495776]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1493915]:(BaseArr,unmanaged BaseDom?)[1495686] "dead after last mention" "RVV" "temp"
    val ret_arr[1493923]:BaseArr[149584] "dead at end of block" "insert auto destroy"
    (1493925 'move' ret_arr[1493923](1494028 call chpl__initCopy[1256348] this[1493911]))
    val ret_dom[1493929]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1494041]:BaseDom[146767] "dead at end of block" "temp"
    (1494044 'move' init_coerce_tmp[1494041](1495826 'cast' BaseDom[146767] nil[44]))
    (1493931 'move' ret_dom[1493929] init_coerce_tmp[1494041])
    val rm_dom[1493936]:bool[10] "dead at end of block" "insert auto destroy"
    (1493938 'move' rm_dom[1493936] 0)
    val call_tmp[1493942]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    val _virtual_method_tmp_[1875822]:int(32)[95] "temp"
    (1875826 'move' _virtual_method_tmp_[1875822](1875824 'getcid' this[1493911]))
    (1493944 'move' call_tmp[1493942](1493950 'virtual method call' dsiGetBaseDom[148944] _virtual_method_tmp_[1875822] this[1493911]))
    val dom[1493951]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    (1493953 'move' dom[1493951](1494058 call chpl__initCopy[1494060] call_tmp[1493942]))
    val call_tmp[1493957]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp"
    (1493959 'move' call_tmp[1493957](1493962 call _to_unmanaged[1494079] this[1493911]))
    val call_tmp[1493964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1494375]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1494380 'move' coerce_tmp[1494375] dom[1493951])
    (1493966 'move' call_tmp[1493964](1493972 call remove_arr[1494140] coerce_tmp[1494375] call_tmp[1493957]))
    (1493976 call =[435290] rm_dom[1493936] call_tmp[1493964])
    val call_tmp[1493982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1493984 'move' call_tmp[1493982] rm_dom[1493936])
    if call_tmp[1493982]
    {
      val coerce_tmp[1495635]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1495641 'move' coerce_tmp[1495635] dom[1493951])
      (1493992 call =[1495600] ret_dom[1493929] coerce_tmp[1495635])
    }
    val call_tmp[1493999]:(BaseArr,unmanaged BaseDom?)[1495686] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[1916107]:(BaseArr,unmanaged BaseDom?)[1495686] "temp"
    (1494004 call _build_tuple[1495644] ret_arr[1493923] ret_dom[1493929] ret_tmp[1916107])
    (1916110 'move' call_tmp[1493999] ret_tmp[1916107])
    (1494007 'move' ret[1493915] call_tmp[1493999])
    gotoReturn _end_remove[1494016] _end_remove[1494016]
    label _end_remove[1494016]
    (1916091 '=' _retArg[1916089] ret[1493915])
    (1916093 return _void[55])
  }
  function BaseArr[149584].dsiDestroyArr[149115](const in arg this[149626]:BaseArr[149584], const in arg deinitElts[149112]:bool[10]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (149136 call halt[154111] "dsiDestroyArr must be defined")
    (520381 return _void[55])
  }
  function BaseArr[149584].decEltCountsIfNeeded[149578](const in arg this[149706]:BaseArr[149584]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (520463 return _void[55])
  }
  function BaseArr[149584]._decEltRefCounts[806869](const in arg this[806873]:BaseArr[149584]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[806883]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[806890]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (806893 'move' call_tmp[806890](806877 '.' this[806873] _decEltRefCounts[148879]))
    (806888 'move' ret[806883] call_tmp[806890])
    (806885 return ret[806883])
  }
  function BaseArr[149584].init[806895](const in arg this[806898]:BaseArr[149584], in arg pid[806909]:int(64)[13], in arg _decEltRefCounts[806924]:bool[10]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_pid[1256321]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1256328 'move' _formal_tmp_pid[1256321](1256325 call chpl__initCopy[955521] pid[806909]))
    val _formal_tmp__decEltRefCounts[1256322]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1256334 'move' _formal_tmp__decEltRefCounts[1256322](1256331 call chpl__initCopy[1035073] _decEltRefCounts[806924]))
    val super_tmp[806941]:object[22] "dead after last mention" "temporary of super field" "temp"
    (806943 'move' super_tmp[806941](806940 '.v' this[806898] super[355775]))
    (806908 call init[749552] super_tmp[806941])
    val tmp[806946]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[806991]:object[22] "dead at end of block" "maybe param" "temp"
    (806994 'move' call_tmp[806991](806957 'cast' object[22] this[806898]))
    val chpl__thisAsParent[806954]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (806982 'move' chpl__thisAsParent[806954](1256340 call chpl__initCopy[945460] call_tmp[806991]))
    (806960 'setcid' chpl__thisAsParent[806954])
    (806962 '.=' this[806898] pid[148873] _formal_tmp_pid[1256321])
    (806965 '.=' this[806898] _decEltRefCounts[148879] _formal_tmp__decEltRefCounts[1256322])
    (806968 'setcid' this[806898])
    (806980 return _void[55])
  }
  type BaseArr[149584] val super[355775]:object[22] "super class" val pid[148873]:int(64)[13] val _decEltRefCounts[148879]:bool[10]
  function BaseArrOverRectangularDom(1,int(64),false)[1256408].dsiReallocate[1297681](const in arg this[1297685]:BaseArrOverRectangularDom(1,int(64),false)[1256408], const  ref arg bounds[1297725]:1*range(int(64),bounded,false)[1244885]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (1297744 call halt[154111] "reallocating not supported for this array type")
    (1297746 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256408].dsiPostReallocate[1297808](const in arg this[1297812]:BaseArrOverRectangularDom(1,int(64),false)[1256408]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1297818 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256408].deinit[1831983](const in arg this[1831987]:BaseArrOverRectangularDom(1,int(64),false)[1256408]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892015]
    val _parent_destructor_tmp_[1892010]:BaseArr[149584] "temp"
    (1892017 'move' _parent_destructor_tmp_[1892010](1892011 'cast' BaseArr[149584] this[1831987]))
    (1892019 call deinit[148925] _parent_destructor_tmp_[1892010])
    (1831993 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256408].init[1256198](const in arg this[1256202]:BaseArrOverRectangularDom(1,int(64),false)[1256408], in arg pid[1256208]:int(64)[13], in arg _decEltRefCounts[1256214]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879924]:int(64)[13] "temp"
    val super_tmp[1256230]:BaseArr[149584] "dead after last mention" "temporary of super field" "temp"
    (1256232 'move' super_tmp[1256230](1256234 '.v' this[1256202] super[1256398]))
    (1256241 call init[806895] super_tmp[1256230] pid[1256208] _decEltRefCounts[1256214])
    val tmp[1256245]:BaseArr[149584] "dead after last mention" "temp" "type variable"
    val call_tmp[1256264]:BaseArr[149584] "dead at end of block" "maybe param" "temp"
    (1256266 'move' call_tmp[1256264](1256268 'cast' BaseArr[149584] this[1256202]))
    val chpl__thisAsParent[1256271]:BaseArr[149584] "dead at end of block" "insert auto destroy" "temp"
    (1256273 'move' chpl__thisAsParent[1256271](1256346 call chpl__initCopy[1256348] call_tmp[1256264]))
    (1256277 'setcid' chpl__thisAsParent[1256271])
    (1256309 'setcid' this[1256202])
    (1256311 return _void[55])
  }
  function _new[1289333](in arg pid[1289346]:int(64)[13], in arg _decEltRefCounts[1289353]:bool[10]) : BaseArrOverRectangularDom(1,int(64),false)[1256408] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879957]:int(64)[13] "temp"
    val _formal_type_tmp_[1879955]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    val ret[1289401]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "RVV" "temp"
    val initTemp[1289335]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp"
    val call_tmp[1289408]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1289411 'move' call_tmp[1289408](1289506 'sizeof_bundle' BaseArrOverRectangularDom(1,int(64),false)[1256408]))
    val cast_tmp[1289509]:c_void_ptr[149] "dead after last mention" "temp"
    (1289511 'move' cast_tmp[1289509](1289376 call chpl_here_alloc[187788] call_tmp[1289408] 47))
    (1289379 'move' initTemp[1289335](1289513 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] cast_tmp[1289509]))
    (1289381 'setcid' initTemp[1289335])
    (1289336 call init[1256198] initTemp[1289335] pid[1289346] _decEltRefCounts[1289353])
    val tmp[1289383]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp"
    (1289390 'move' tmp[1289383] initTemp[1289335])
    (1289406 'move' ret[1289401] tmp[1289383])
    (1289403 return ret[1289401])
  }
  function _new_default__decEltRefCounts[1289466]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1289468]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1289473]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1289477]:bool[10] "dead after last mention" "temp"
    val _formal_type[1289479]:bool[10] "dead after last mention" "temp" "type variable"
    (1289487 'move' tmp[1289477] 0)
    (1289490 'move' _decEltRefCounts[1289473] tmp[1289477])
    (1289495 'move' ret[1289468] _decEltRefCounts[1289473])
    (1289471 return ret[1289468])
  }
  function _new_default_pid[1289426]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "resolved" "was compiler generated"
  {
    val ret[1289428]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1289433]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1289437]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1289439]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1289447 'move' tmp[1289437] -1)
    (1289450 'move' pid[1289433] tmp[1289437])
    (1289455 'move' ret[1289428] pid[1289433])
    (1289431 return ret[1289428])
  }
  type BaseArrOverRectangularDom(1,int(64),false)[1256408] val super[1256398]:BaseArr[149584] "super class"
  function BaseRectangularArr(1,int(64),false,locale)[1256461].deinit[1831995](const in arg this[1831999]:BaseRectangularArr(1,int(64),false,locale)[1256461]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892027]
    val _parent_destructor_tmp_[1892022]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892029 'move' _parent_destructor_tmp_[1892022](1892023 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1831999]))
    (1892031 call deinit[1831983] _parent_destructor_tmp_[1892022])
    (1832005 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187].deinit[1832019](const in arg this[1832023]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892091]
    val _parent_destructor_tmp_[1892086]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892093 'move' _parent_destructor_tmp_[1892086](1892087 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1832023]))
    (1892095 call deinit[1831983] _parent_destructor_tmp_[1892086])
    (1832029 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358730].deinit[1832043](const in arg this[1832047]:BaseRectangularArr(1,int(64),false,real(64))[1358730]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892155]
    val _parent_destructor_tmp_[1892150]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892157 'move' _parent_destructor_tmp_[1892150](1892151 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1832047]))
    (1892159 call deinit[1831983] _parent_destructor_tmp_[1892150])
    (1832053 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368653].deinit[1832067](const in arg this[1832071]:BaseRectangularArr(1,int(64),false,int(64))[1368653]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892219]
    val _parent_destructor_tmp_[1892214]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892221 'move' _parent_destructor_tmp_[1892214](1892215 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1832071]))
    (1892223 call deinit[1831983] _parent_destructor_tmp_[1892214])
    (1832077 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010].deinit[1832091](const in arg this[1832095]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892283]
    val _parent_destructor_tmp_[1892278]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892285 'move' _parent_destructor_tmp_[1892278](1892279 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1832095]))
    (1892287 call deinit[1831983] _parent_destructor_tmp_[1892278])
    (1832101 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1450047].deinit[1832115](const in arg this[1832119]:BaseRectangularArr(1,int(64),false,uint(64))[1450047]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1892347]
    val _parent_destructor_tmp_[1892342]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1892349 'move' _parent_destructor_tmp_[1892342](1892343 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1832119]))
    (1892351 call deinit[1831983] _parent_destructor_tmp_[1892342])
    (1832125 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256461].decEltCountsIfNeeded[1837954](const in arg this[1837958]:BaseRectangularArr(1,int(64),false,locale)[1256461]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1837964]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1838003]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1838009 'move' coerce_tmp[1838003](1838005 'cast' BaseArr[149584] this[1837958]))
    (1837966 'move' call_tmp[1837964](1837969 call _decEltRefCounts[806869] coerce_tmp[1838003]))
    val call_tmp[1837972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1838012]:bool[10] "dead after last mention" "const" "temp"
    (1838014 'move' tmp[1838012](1838016 'deref' call_tmp[1837964]))
    (1837974 'move' call_tmp[1837972] tmp[1838012])
    if call_tmp[1837972]
    {
      val call_tmp[1837981]:BaseRectangularArr(1,int(64),false,locale)[1256461] "dead after last mention" "expr temp" "maybe param" "temp"
      (1837983 'move' call_tmp[1837981](1837986 call _to_unmanaged[1838018] this[1837958]))
      val call_tmp[1837988]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1838423]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1838429 'move' coerce_tmp[1838423](1838425 'cast' BaseArr[149584] call_tmp[1837981]))
      (1837997 call chpl_decRefCountsForDomainsInArrayEltTypes[1838081] coerce_tmp[1838423])
    }
    (1838001 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187].decEltCountsIfNeeded[1838436](const in arg this[1838440]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1838446]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1838485]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1838491 'move' coerce_tmp[1838485](1838487 'cast' BaseArr[149584] this[1838440]))
    (1838448 'move' call_tmp[1838446](1838451 call _decEltRefCounts[806869] coerce_tmp[1838485]))
    val call_tmp[1838454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1838494]:bool[10] "dead after last mention" "const" "temp"
    (1838496 'move' tmp[1838494](1838498 'deref' call_tmp[1838446]))
    (1838456 'move' call_tmp[1838454] tmp[1838494])
    if call_tmp[1838454]
    {
      val call_tmp[1838463]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] "dead after last mention" "expr temp" "maybe param" "temp"
      (1838465 'move' call_tmp[1838463](1838468 call _to_unmanaged[1838500] this[1838440]))
      val call_tmp[1838470]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1838905]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1838911 'move' coerce_tmp[1838905](1838907 'cast' BaseArr[149584] call_tmp[1838463]))
      (1838479 call chpl_decRefCountsForDomainsInArrayEltTypes[1838563] coerce_tmp[1838905])
    }
    (1838483 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358730].decEltCountsIfNeeded[1838918](const in arg this[1838922]:BaseRectangularArr(1,int(64),false,real(64))[1358730]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1838928]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1838967]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1838973 'move' coerce_tmp[1838967](1838969 'cast' BaseArr[149584] this[1838922]))
    (1838930 'move' call_tmp[1838928](1838933 call _decEltRefCounts[806869] coerce_tmp[1838967]))
    val call_tmp[1838936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1838976]:bool[10] "dead after last mention" "const" "temp"
    (1838978 'move' tmp[1838976](1838980 'deref' call_tmp[1838928]))
    (1838938 'move' call_tmp[1838936] tmp[1838976])
    if call_tmp[1838936]
    {
      val call_tmp[1838945]:BaseRectangularArr(1,int(64),false,real(64))[1358730] "dead after last mention" "expr temp" "maybe param" "temp"
      (1838947 'move' call_tmp[1838945](1838950 call _to_unmanaged[1838982] this[1838922]))
      val call_tmp[1838952]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1839387]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1839393 'move' coerce_tmp[1839387](1839389 'cast' BaseArr[149584] call_tmp[1838945]))
      (1838961 call chpl_decRefCountsForDomainsInArrayEltTypes[1839045] coerce_tmp[1839387])
    }
    (1838965 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368653].decEltCountsIfNeeded[1839400](const in arg this[1839404]:BaseRectangularArr(1,int(64),false,int(64))[1368653]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1839410]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1839449]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1839455 'move' coerce_tmp[1839449](1839451 'cast' BaseArr[149584] this[1839404]))
    (1839412 'move' call_tmp[1839410](1839415 call _decEltRefCounts[806869] coerce_tmp[1839449]))
    val call_tmp[1839418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1839458]:bool[10] "dead after last mention" "const" "temp"
    (1839460 'move' tmp[1839458](1839462 'deref' call_tmp[1839410]))
    (1839420 'move' call_tmp[1839418] tmp[1839458])
    if call_tmp[1839418]
    {
      val call_tmp[1839427]:BaseRectangularArr(1,int(64),false,int(64))[1368653] "dead after last mention" "expr temp" "maybe param" "temp"
      (1839429 'move' call_tmp[1839427](1839432 call _to_unmanaged[1839464] this[1839404]))
      val call_tmp[1839434]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1839869]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1839875 'move' coerce_tmp[1839869](1839871 'cast' BaseArr[149584] call_tmp[1839427]))
      (1839443 call chpl_decRefCountsForDomainsInArrayEltTypes[1839527] coerce_tmp[1839869])
    }
    (1839447 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010].decEltCountsIfNeeded[1839882](const in arg this[1839886]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1839892]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1839931]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1839937 'move' coerce_tmp[1839931](1839933 'cast' BaseArr[149584] this[1839886]))
    (1839894 'move' call_tmp[1839892](1839897 call _decEltRefCounts[806869] coerce_tmp[1839931]))
    val call_tmp[1839900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1839940]:bool[10] "dead after last mention" "const" "temp"
    (1839942 'move' tmp[1839940](1839944 'deref' call_tmp[1839892]))
    (1839902 'move' call_tmp[1839900] tmp[1839940])
    if call_tmp[1839900]
    {
      val call_tmp[1839909]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] "dead after last mention" "expr temp" "maybe param" "temp"
      (1839911 'move' call_tmp[1839909](1839914 call _to_unmanaged[1839946] this[1839886]))
      val call_tmp[1839916]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1840009]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1840015 'move' coerce_tmp[1840009](1840011 'cast' BaseArr[149584] call_tmp[1839909]))
      (1839925 call chpl_decRefCountsForDomainsInArrayEltTypes[1509986] coerce_tmp[1840009])
    }
    (1839929 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1450047].decEltCountsIfNeeded[1840018](const in arg this[1840022]:BaseRectangularArr(1,int(64),false,uint(64))[1450047]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1840028]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1840067]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1840073 'move' coerce_tmp[1840067](1840069 'cast' BaseArr[149584] this[1840022]))
    (1840030 'move' call_tmp[1840028](1840033 call _decEltRefCounts[806869] coerce_tmp[1840067]))
    val call_tmp[1840036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1840076]:bool[10] "dead after last mention" "const" "temp"
    (1840078 'move' tmp[1840076](1840080 'deref' call_tmp[1840028]))
    (1840038 'move' call_tmp[1840036] tmp[1840076])
    if call_tmp[1840036]
    {
      val call_tmp[1840045]:BaseRectangularArr(1,int(64),false,uint(64))[1450047] "dead after last mention" "expr temp" "maybe param" "temp"
      (1840047 'move' call_tmp[1840045](1840050 call _to_unmanaged[1840082] this[1840022]))
      val call_tmp[1840052]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1840487]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1840493 'move' coerce_tmp[1840487](1840489 'cast' BaseArr[149584] call_tmp[1840045]))
      (1840061 call chpl_decRefCountsForDomainsInArrayEltTypes[1840145] coerce_tmp[1840487])
    }
    (1840065 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256461].init[1256012](const in arg this[1256016]:BaseRectangularArr(1,int(64),false,locale)[1256461], in arg pid[1256022]:int(64)[13], in arg _decEltRefCounts[1256028]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879922]:locale[28] "temp"
    val _formal_type_tmp_[1879920]:int(64)[13] "temp"
    val super_tmp[1256048]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1256050 'move' super_tmp[1256048](1256052 '.v' this[1256016] super[1256457]))
    (1256059 call init[1256198] super_tmp[1256048] pid[1256022] _decEltRefCounts[1256028])
    val tmp[1256066]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1256085]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1256087 'move' call_tmp[1256085](1256089 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1256016]))
    val chpl__thisAsParent[1256092]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1256094 'move' chpl__thisAsParent[1256092](1256435 call chpl__initCopy[1256437] call_tmp[1256085]))
    (1256098 'setcid' chpl__thisAsParent[1256092])
    (1256105 'setcid' this[1256016])
    (1256107 return _void[55])
  }
  function init_default__decEltRefCounts[1256158]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1256160]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1256165]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1256169]:bool[10] "dead after last mention" "temp"
    val _formal_type[1256171]:bool[10] "dead after last mention" "temp" "type variable"
    (1256179 'move' tmp[1256169] 0)
    (1256182 'move' _decEltRefCounts[1256165] tmp[1256169])
    (1256187 'move' ret[1256160] _decEltRefCounts[1256165])
    (1256163 return ret[1256160])
  }
  function init_default_pid[1256118]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1256120]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1256125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1256129]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1256131]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1256139 'move' tmp[1256129] -1)
    (1256142 'move' pid[1256125] tmp[1256129])
    (1256147 'move' ret[1256120] pid[1256125])
    (1256123 return ret[1256120])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187].init[1317991](const in arg this[1317995]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187], in arg pid[1318001]:int(64)[13], in arg _decEltRefCounts[1318007]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879983]:localesSignal[92278] "temp"
    val _formal_type_tmp_[1879981]:int(64)[13] "temp"
    val super_tmp[1318027]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1318029 'move' super_tmp[1318027](1318031 '.v' this[1317995] super[1318183]))
    (1318038 call init[1256198] super_tmp[1318027] pid[1318001] _decEltRefCounts[1318007])
    val tmp[1318045]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1318064]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1318066 'move' call_tmp[1318064](1318068 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1317995]))
    val chpl__thisAsParent[1318071]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1318073 'move' chpl__thisAsParent[1318071](1318179 call chpl__initCopy[1256437] call_tmp[1318064]))
    (1318077 'setcid' chpl__thisAsParent[1318071])
    (1318084 'setcid' this[1317995])
    (1318086 return _void[55])
  }
  function init_default__decEltRefCounts[1318137]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1318139]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1318144]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1318148]:bool[10] "dead after last mention" "temp"
    val _formal_type[1318150]:bool[10] "dead after last mention" "temp" "type variable"
    (1318158 'move' tmp[1318148] 0)
    (1318161 'move' _decEltRefCounts[1318144] tmp[1318148])
    (1318166 'move' ret[1318139] _decEltRefCounts[1318144])
    (1318142 return ret[1318139])
  }
  function init_default_pid[1318097]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1318099]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1318104]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1318108]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1318110]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1318118 'move' tmp[1318108] -1)
    (1318121 'move' pid[1318104] tmp[1318108])
    (1318126 'move' ret[1318099] pid[1318104])
    (1318102 return ret[1318099])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358730].init[1358534](const in arg this[1358538]:BaseRectangularArr(1,int(64),false,real(64))[1358730], in arg pid[1358544]:int(64)[13], in arg _decEltRefCounts[1358550]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1880070]:real(64)[16] "temp"
    val _formal_type_tmp_[1880068]:int(64)[13] "temp"
    val super_tmp[1358570]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1358572 'move' super_tmp[1358570](1358574 '.v' this[1358538] super[1358726]))
    (1358581 call init[1256198] super_tmp[1358570] pid[1358544] _decEltRefCounts[1358550])
    val tmp[1358588]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1358607]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1358609 'move' call_tmp[1358607](1358611 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1358538]))
    val chpl__thisAsParent[1358614]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1358616 'move' chpl__thisAsParent[1358614](1358722 call chpl__initCopy[1256437] call_tmp[1358607]))
    (1358620 'setcid' chpl__thisAsParent[1358614])
    (1358627 'setcid' this[1358538])
    (1358629 return _void[55])
  }
  function init_default__decEltRefCounts[1358680]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358682]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1358687]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1358691]:bool[10] "dead after last mention" "temp"
    val _formal_type[1358693]:bool[10] "dead after last mention" "temp" "type variable"
    (1358701 'move' tmp[1358691] 0)
    (1358704 'move' _decEltRefCounts[1358687] tmp[1358691])
    (1358709 'move' ret[1358682] _decEltRefCounts[1358687])
    (1358685 return ret[1358682])
  }
  function init_default_pid[1358640]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358642]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1358647]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1358651]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1358653]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1358661 'move' tmp[1358651] -1)
    (1358664 'move' pid[1358647] tmp[1358651])
    (1358669 'move' ret[1358642] pid[1358647])
    (1358645 return ret[1358642])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368653].init[1368457](const in arg this[1368461]:BaseRectangularArr(1,int(64),false,int(64))[1368653], in arg pid[1368467]:int(64)[13], in arg _decEltRefCounts[1368473]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1880106]:int(64)[13] "temp"
    val _formal_type_tmp_[1880104]:int(64)[13] "temp"
    val super_tmp[1368493]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1368495 'move' super_tmp[1368493](1368497 '.v' this[1368461] super[1368649]))
    (1368504 call init[1256198] super_tmp[1368493] pid[1368467] _decEltRefCounts[1368473])
    val tmp[1368511]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1368530]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1368532 'move' call_tmp[1368530](1368534 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1368461]))
    val chpl__thisAsParent[1368537]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1368539 'move' chpl__thisAsParent[1368537](1368645 call chpl__initCopy[1256437] call_tmp[1368530]))
    (1368543 'setcid' chpl__thisAsParent[1368537])
    (1368550 'setcid' this[1368461])
    (1368552 return _void[55])
  }
  function init_default__decEltRefCounts[1368603]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368605]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1368610]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1368614]:bool[10] "dead after last mention" "temp"
    val _formal_type[1368616]:bool[10] "dead after last mention" "temp" "type variable"
    (1368624 'move' tmp[1368614] 0)
    (1368627 'move' _decEltRefCounts[1368610] tmp[1368614])
    (1368632 'move' ret[1368605] _decEltRefCounts[1368610])
    (1368608 return ret[1368605])
  }
  function init_default_pid[1368563]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368565]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1368570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1368574]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1368576]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1368584 'move' tmp[1368574] -1)
    (1368587 'move' pid[1368570] tmp[1368574])
    (1368592 'move' ret[1368565] pid[1368570])
    (1368568 return ret[1368565])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010].init[1408814](const in arg this[1408818]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010], in arg pid[1408824]:int(64)[13], in arg _decEltRefCounts[1408830]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1880164]:range(int(64),bounded,false)[1027003] "temp"
    val _formal_type_tmp_[1880162]:int(64)[13] "temp"
    val super_tmp[1408850]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1408852 'move' super_tmp[1408850](1408854 '.v' this[1408818] super[1409006]))
    (1408861 call init[1256198] super_tmp[1408850] pid[1408824] _decEltRefCounts[1408830])
    val tmp[1408868]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1408887]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1408889 'move' call_tmp[1408887](1408891 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1408818]))
    val chpl__thisAsParent[1408894]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1408896 'move' chpl__thisAsParent[1408894](1409002 call chpl__initCopy[1256437] call_tmp[1408887]))
    (1408900 'setcid' chpl__thisAsParent[1408894])
    (1408907 'setcid' this[1408818])
    (1408909 return _void[55])
  }
  function init_default__decEltRefCounts[1408960]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1408962]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1408967]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1408971]:bool[10] "dead after last mention" "temp"
    val _formal_type[1408973]:bool[10] "dead after last mention" "temp" "type variable"
    (1408981 'move' tmp[1408971] 0)
    (1408984 'move' _decEltRefCounts[1408967] tmp[1408971])
    (1408989 'move' ret[1408962] _decEltRefCounts[1408967])
    (1408965 return ret[1408962])
  }
  function init_default_pid[1408920]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1408922]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1408927]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1408931]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1408933]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1408941 'move' tmp[1408931] -1)
    (1408944 'move' pid[1408927] tmp[1408931])
    (1408949 'move' ret[1408922] pid[1408927])
    (1408925 return ret[1408922])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1450047].init[1449851](const in arg this[1449855]:BaseRectangularArr(1,int(64),false,uint(64))[1450047], in arg pid[1449861]:int(64)[13], in arg _decEltRefCounts[1449867]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1880219]:uint(64)[115] "temp"
    val _formal_type_tmp_[1880217]:int(64)[13] "temp"
    val super_tmp[1449887]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temporary of super field" "temp"
    (1449889 'move' super_tmp[1449887](1449891 '.v' this[1449855] super[1450043]))
    (1449898 call init[1256198] super_tmp[1449887] pid[1449861] _decEltRefCounts[1449867])
    val tmp[1449905]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "temp" "type variable"
    val call_tmp[1449924]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
    (1449926 'move' call_tmp[1449924](1449928 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256408] this[1449855]))
    val chpl__thisAsParent[1449931]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "temp"
    (1449933 'move' chpl__thisAsParent[1449931](1450039 call chpl__initCopy[1256437] call_tmp[1449924]))
    (1449937 'setcid' chpl__thisAsParent[1449931])
    (1449944 'setcid' this[1449855])
    (1449946 return _void[55])
  }
  function init_default__decEltRefCounts[1449997]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1449999]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    val _decEltRefCounts[1450004]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1450008]:bool[10] "dead after last mention" "temp"
    val _formal_type[1450010]:bool[10] "dead after last mention" "temp" "type variable"
    (1450018 'move' tmp[1450008] 0)
    (1450021 'move' _decEltRefCounts[1450004] tmp[1450008])
    (1450026 'move' ret[1449999] _decEltRefCounts[1450004])
    (1450002 return ret[1449999])
  }
  function init_default_pid[1449957]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1449959]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    val pid[1449964]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[1449968]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1449970]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1449978 'move' tmp[1449968] -1)
    (1449981 'move' pid[1449964] tmp[1449968])
    (1449986 'move' ret[1449959] pid[1449964])
    (1449962 return ret[1449959])
  }
  type BaseRectangularArr(1,int(64),false,locale)[1256461] val super[1256457]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  type BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318187] val super[1318183]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  type BaseRectangularArr(1,int(64),false,real(64))[1358730] val super[1358726]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  type BaseRectangularArr(1,int(64),false,int(64))[1368653] val super[1368649]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  type BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1409010] val super[1409006]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  type BaseRectangularArr(1,int(64),false,uint(64))[1450047] val super[1450043]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "super class"
  function _delete_dist[150617](const in arg dist[150614]:BaseDist[145968], const in arg privatized[150620]:bool[10]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[1505752]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1505757 'move' coerce_tmp[1505752] dist[150614])
    (150630 call dsiDestroyDist[145894] coerce_tmp[1505752])
    val tmp[568801]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[568809]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (568811 'move' tmp[568809] privatized[150620])
    (568816 'move' tmp[568801] tmp[568809])
    val call_tmp[669735]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (669738 'move' call_tmp[669735] tmp[568801])
    if call_tmp[669735]
    {
      ref call_tmp[669742]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1505765]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1505770 'move' coerce_tmp[1505765] dist[150614])
      (669745 'move' call_tmp[669742](150639 call pid[801494] coerce_tmp[1505765]))
      val coerce_tmp[1505773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1505777 'move' coerce_tmp[1505773](1505775 'deref' call_tmp[669742]))
      val coerce_tmp[1505779]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1505785 'move' coerce_tmp[1505779](1505781 'cast' object[22] dist[150614]))
      (150644 call _freePrivatizedClass[1502772] coerce_tmp[1505773] coerce_tmp[1505779])
    }
    (150653 call chpl__delete[1505788] dist[150614])
    (520513 return _void[55])
  }
  function _delete_dom[1502652](const in arg dom[1502654]:BaseDom[146767], const in arg privatized[1502656]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1502751]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1502756 'move' coerce_tmp[1502751] dom[1502654])
    (1502666 call dsiDestroyDom[146689] coerce_tmp[1502751])
    val tmp[1502686]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1502704]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1502706 'move' tmp[1502704] privatized[1502656])
    (1502711 'move' tmp[1502686] tmp[1502704])
    val call_tmp[1502723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1502725 'move' call_tmp[1502723] tmp[1502686])
    if call_tmp[1502723]
    {
      ref call_tmp[1502732]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1502764]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1502769 'move' coerce_tmp[1502764] dom[1502654])
      (1502734 'move' call_tmp[1502732](1502737 call pid[801682] coerce_tmp[1502764]))
      val coerce_tmp[1503105]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1503109 'move' coerce_tmp[1503105](1503107 'deref' call_tmp[1502732]))
      val coerce_tmp[1503111]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1503117 'move' coerce_tmp[1503111](1503113 'cast' object[22] dom[1502654]))
      (1502741 call _freePrivatizedClass[1502772] coerce_tmp[1503105] coerce_tmp[1503111])
    }
    (1502746 call chpl__delete[1504683] dom[1502654])
    (1502748 return _void[55])
  }
  function _delete_dom[1695853](const in arg dom[1695855]:domain(1,int(64),false)[1251123], const in arg privatized[1695857]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1695952]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1695957 'move' coerce_tmp[1695952](1695954 'cast' BaseDom[146767] dom[1695855]))
    (1695867 call dsiDestroyDom[146689] coerce_tmp[1695952])
    val tmp[1695887]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val tmp[1695905]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1695907 'move' tmp[1695905] privatized[1695857])
    (1695912 'move' tmp[1695887] tmp[1695905])
    val call_tmp[1695924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1695926 'move' call_tmp[1695924] tmp[1695887])
    if call_tmp[1695924]
    {
      ref call_tmp[1695933]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1695965]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695970 'move' coerce_tmp[1695965](1695967 'cast' BaseDom[146767] dom[1695855]))
      (1695935 'move' call_tmp[1695933](1695938 call pid[801682] coerce_tmp[1695965]))
      val coerce_tmp[1695973]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695977 'move' coerce_tmp[1695973](1695975 'deref' call_tmp[1695933]))
      val coerce_tmp[1695979]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1695985 'move' coerce_tmp[1695979](1695981 'cast' object[22] dom[1695855]))
      (1695942 call _freePrivatizedClass[1502772] coerce_tmp[1695973] coerce_tmp[1695979])
    }
    (1695947 call chpl__delete[1695988] dom[1695855])
    (1695949 return _void[55])
  }
  function _delete_arr[1501421](const in arg arr[1501423]:BaseArr[149584], const in arg deinitElts[1501431]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1501542]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1501547 'move' coerce_tmp[1501542] arr[1501423])
    val _virtual_method_tmp_[1875829]:int(32)[95] "temp"
    (1875833 'move' _virtual_method_tmp_[1875829](1875831 'getcid' coerce_tmp[1501542]))
    (1501441 'virtual method call' dsiDestroyArr[149115] _virtual_method_tmp_[1875829] coerce_tmp[1501542] deinitElts[1501431])
    val coerce_tmp[1501551]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1501556 'move' coerce_tmp[1501551] arr[1501423])
    val _virtual_method_tmp_[1875836]:int(32)[95] "temp"
    (1875840 'move' _virtual_method_tmp_[1875836](1875838 'getcid' coerce_tmp[1501551]))
    (1501449 'virtual method call' decEltCountsIfNeeded[149578] _virtual_method_tmp_[1875836] coerce_tmp[1501551])
    (1501529 call chpl__delete[1501566] arr[1501423])
    (1501531 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[1288641](const in arg lhs[1288643]:domain(1,int(64),false)[1251123], const  ref arg rhs[1288645]:domain(1,int(64),false)[1252786]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val arrType[1288707]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289297]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289303 'move' coerce_tmp[1289297](1289299 'cast' BaseRectangularDom(1,int(64),false)[1251088] lhs[1288643]))
    val idxType[1288735]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289552]:BaseRectangularDom(1,int(64),false)[1251088] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289558 'move' coerce_tmp[1289552](1289554 'cast' BaseRectangularDom(1,int(64),false)[1251088] lhs[1288643]))
    {
      val _indexOfInterest[1288762]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288764]:_ic_these__ref_chpl__simpleSet_BaseArr[1290408] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288766]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1289564]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1289570 'move' coerce_tmp[1289564](1289566 'cast' BaseDom[146767] lhs[1288643]))
      (1288768 'move' call_tmp[1288766](1288771 call _arrs[801578] coerce_tmp[1289564]))
      (1288774 'move' _iterator[1288764](1288777 call _getIterator[1289573] call_tmp[1288766]))
      {
        val ret[2001080]:_ir_these__ref_chpl__simpleSet_BaseArr[1290414] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2001082]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2001084]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289834] "dead at end of block" "expr temp" "temp"
        ref call_tmp[2001086]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead at end of block" "maybe param" "temp"
        ref this[2001228]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
        (2001233 'move' this[2001228](2001230 '.v' _iterator[1288764] F0_this[2118017]))
        (2001088 'move' call_tmp[2001086](2001091 call table[1265258] this[2001228]))
        val call_tmp[2001093]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "dead at end of block" "expr temp" "maybe param" "temp"
        val ret_tmp[2001095]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "temp"
        (2001098 call allSlots[1289743] call_tmp[2001086] ret_tmp[2001095])
        (2001101 'move' call_tmp[2001093] ret_tmp[2001095])
        (2001104 'move' _iterator[2001084](2001107 call _getIterator[1289849] call_tmp[2001093]))
        {
          val ret[2070329]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2070331]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2070333]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2070335]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
          ref this[2070629]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "temp"
          (2070634 'move' this[2070629](2070631 '.v' _iterator[2001084] F0_this[2118477]))
          (2070337 'move' call_tmp[2070335](2070340 call tableSize[1248057] this[2070629]))
          val call_tmp[2070342]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[2070344]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2070346 'move' coerce_tmp[2070344](2070348 'deref' call_tmp[2070335]))
          val ret_tmp[2070350]:_ir__allSlots[1221795] "temp"
          (2070353 call _allSlots[201320] coerce_tmp[2070344] ret_tmp[2070350])
          (2070356 'move' call_tmp[2070342] ret_tmp[2070350])
          (2070359 'move' _iterator[2070333](2070362 call _getIterator[1221804] call_tmp[2070342]))
          {
            val ret[2070365]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2070367]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2070369]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            val call_tmp[2070371]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            val ret_tmp[2070373]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            const-val size[2070375]:int(64)[13] "temp"
            (2070377 'move' size[2070375](2070379 '.v' _iterator[2070333] F0_size[2103702]))
            (2070383 call chpl_direct_counted_range_iter[458112] 0 size[2070375] ret_tmp[2070373])
            (2070387 'move' call_tmp[2070371] ret_tmp[2070373])
            (2070390 'move' _iterator[2070369](2070393 call _getIterator[1103994] call_tmp[2070371]))
            {
              val ret[2070396]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2070398]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2070400]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
              val call_tmp[2070402]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
              val ret_tmp[2070404]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
              const-val low[2070406]:int(64)[13] "temp"
              (2070408 'move' low[2070406](2070410 '.v' _iterator[2070369] F0_low[2107536]))
              const-val count[2070413]:int(64)[13] "temp"
              (2070415 'move' count[2070413](2070417 '.v' _iterator[2070369] F1_count[2107540]))
              (2070421 call chpl_direct_counted_range_iter_helper[1102287] low[2070406] count[2070413] ret_tmp[2070404])
              (2070425 'move' call_tmp[2070402] ret_tmp[2070404])
              (2070428 'move' _iterator[2070400](2070431 call _getIterator[1103744] call_tmp[2070402]))
              {
                val ret[2091853]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                val call_tmp[2091855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val tmp[2091857]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val tmp[2091859]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[2091861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2092363]:int(64)[13] "temp"
                (2092368 'move' count[2092363](2092365 '.v' _iterator[2070400] F1_count[2113698]))
                (2091863 'move' call_tmp[2091861](2091866 call <[948587] count[2092363]))
                (2091868 'move' tmp[2091859] call_tmp[2091861])
                (2091871 'move' tmp[2091857] call_tmp[2091861])
                val call_tmp[2091874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2091876 'move' call_tmp[2091874] call_tmp[2091861])
                if call_tmp[2091861]
                {
                  (2091882 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                }
                const tmp[2091885]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2091887]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                val tmp[2091889]:bool[10] "dead after last mention" "maybe param" "temp"
                val call_tmp[2091891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2092370]:int(64)[13] "temp"
                (2092375 'move' count[2092370](2092372 '.v' _iterator[2070400] F1_count[2113698]))
                (2091893 'move' call_tmp[2091891](2091896 call ==[435744] count[2092370] 0))
                (2091899 'move' tmp[2091889] call_tmp[2091891])
                if call_tmp[2091891]
                {
                  val tmp[2091904]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2091906]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[2091908]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2092377]:int(64)[13] "temp"
                  (2092382 'move' low[2092377](2092379 '.v' _iterator[2070400] F0_low[2113694]))
                  (2091910 'move' call_tmp[2091908](2091913 call _cast[956223] low[2092377]))
                  val call_tmp[2091915]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  val coerce_tmp[2091917]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2091919 'move' coerce_tmp[2091917](2091921 'cast' uint(64)[115] 1))
                  (2091924 'move' call_tmp[2091915](2091927 call -[962382] call_tmp[2091908]))
                  val call_tmp[2091929]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2091931 'move' call_tmp[2091929](2091934 call _cast[953732] call_tmp[2091915]))
                  val ret_tmp[2091936]:2*int(64)[1040245] "temp"
                  const-val low[2092384]:int(64)[13] "temp"
                  (2092389 'move' low[2092384](2092386 '.v' _iterator[2070400] F0_low[2113694]))
                  (2091939 call _build_tuple[1040203] low[2092384] call_tmp[2091929] ret_tmp[2091936])
                  (2091943 'move' tmp[2091904] ret_tmp[2091936])
                  (2091946 'move' tmp[2091887] tmp[2091904])
                }
                {
                  val tmp[2091950]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2091952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[2091954]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2092391]:int(64)[13] "temp"
                  (2092396 'move' count[2092391](2092393 '.v' _iterator[2070400] F1_count[2113698]))
                  (2091956 'move' call_tmp[2091954] count[2092391])
                  val call_tmp[2091959]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2092398]:int(64)[13] "temp"
                  (2092403 'move' count[2092398](2092400 '.v' _iterator[2070400] F1_count[2113698]))
                  (2091961 'move' call_tmp[2091959](2091964 call -[962415] count[2092398]))
                  val call_tmp[2091966]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2092405]:int(64)[13] "temp"
                  (2092410 'move' low[2092405](2092407 '.v' _iterator[2070400] F0_low[2113694]))
                  (2091968 'move' call_tmp[2091966](2091971 call +[439752] low[2092405] call_tmp[2091959]))
                  val ret_tmp[2091974]:2*int(64)[1040245] "temp"
                  const-val low[2092412]:int(64)[13] "temp"
                  (2092417 'move' low[2092412](2092414 '.v' _iterator[2070400] F0_low[2113694]))
                  (2091977 call _build_tuple[1040203] low[2092412] call_tmp[2091966] ret_tmp[2091974])
                  (2091981 'move' tmp[2091950] ret_tmp[2091974])
                  (2091984 'move' tmp[2091887] tmp[2091950])
                }
                (2091988 '=' tmp[2091885] tmp[2091887])
                (2091991 'noop')
                1
                ref call_tmp[2091993]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2091995 'move' call_tmp[2091993](2091997 '.' tmp[2091885] x0[1040241]))
                const start[2092000]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                val coerce_tmp[2092002]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2092004 'move' coerce_tmp[2092002](2092006 'deref' call_tmp[2091993]))
                (2092008 '=' start[2092000] coerce_tmp[2092002])
                (2092011 'noop')
                ref call_tmp[2092012]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2092014 'move' call_tmp[2092012](2092016 '.' tmp[2091885] x1[1040243]))
                const end[2092019]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                val coerce_tmp[2092021]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2092023 'move' coerce_tmp[2092021](2092025 'deref' call_tmp[2092012]))
                (2092027 '=' end[2092019] coerce_tmp[2092021])
                (2092030 'noop')
                val _indexOfInterest[2092031]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2092033]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                val call_tmp[2092035]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                val ret_tmp[2092037]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                (2092040 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2092002] coerce_tmp[2092021] ret_tmp[2092037])
                (2092044 'move' call_tmp[2092035] ret_tmp[2092037])
                (2092047 'move' _iterator[2092033](2092050 call _getIterator[1103490] call_tmp[2092035]))
                {
                  val ret[2092053]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                  val call_tmp[2092055]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2092058 call chpl_range_check_stride[1103033])
                  val i[2092059]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2092061]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2092063 'move' i[2092059] 0)
                  val call_tmp[2092066]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val default_arg_first[2092068]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2092070]:int(64)[13] "temp"
                  (2092072 'move' low[2092070](2092074 '.v' _iterator[2092033] F0_low[2115192]))
                  (2092077 'move' default_arg_first[2092068](2092080 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2092070]))
                  val default_arg_last[2092082]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2092084]:int(64)[13] "temp"
                  (2092086 'move' high[2092084](2092088 '.v' _iterator[2092033] F1_high[2115196]))
                  (2092091 'move' default_arg_last[2092082](2092094 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2092084]))
                  val _return_tmp_[2092096]:bool[10] "dead after last mention" "temp"
                  const-val low[2092098]:int(64)[13] "temp"
                  (2092100 'move' low[2092098](2092102 '.v' _iterator[2092033] F0_low[2115192]))
                  const-val high[2092105]:int(64)[13] "temp"
                  (2092107 'move' high[2092105](2092109 '.v' _iterator[2092033] F1_high[2115196]))
                  (2092112 'move' _return_tmp_[2092096](2092115 call chpl_checkIfRangeIterWillOverflow[1096265] low[2092098] high[2092105] 1 default_arg_first[2092068] default_arg_last[2092082] 1))
                  CForLoop[2092122] hazard
                  {
                    val yret[2092151]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2092153 'move' yret[2092151] i[2092059])
                    val _yieldedIndex[2092156]:int(64)[13] "temp"
                    (2092158 'move' _yieldedIndex[2092156] i[2092059])
                    {
                      const i[2092162]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2092164 'move' i[2092162] _yieldedIndex[2092156])
                      val yret[2092167]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2092169 'move' yret[2092167] _yieldedIndex[2092156])
                      val _yieldedIndex[2092197]:int(64)[13] "temp"
                      (2092361 'move' _yieldedIndex[2092197] _yieldedIndex[2092156])
                      {
                        const i[2092199]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2092201 'move' i[2092199] _yieldedIndex[2092197])
                        val yret[2092204]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2092206 'move' yret[2092204] _yieldedIndex[2092197])
                        val _yieldedIndex[2092209]:int(64)[13] "temp"
                        (2092211 'move' _yieldedIndex[2092209] _yieldedIndex[2092197])
                        {
                          const slot[2092215]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2092217 'move' slot[2092215] _yieldedIndex[2092209])
                          val yret[2092220]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2092222 'move' yret[2092220] _yieldedIndex[2092209])
                          val _yieldedIndex[2092225]:int(64)[13] "temp"
                          (2092227 'move' _yieldedIndex[2092225] _yieldedIndex[2092209])
                          {
                            const slot[2092231]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2092233 'move' slot[2092231] _yieldedIndex[2092225])
                            val yret[2092236]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2092238 'move' yret[2092236] _yieldedIndex[2092225])
                            val _yieldedIndex[2092241]:int(64)[13] "temp"
                            (2092243 'move' _yieldedIndex[2092241] _yieldedIndex[2092225])
                            {
                              const slot[2092247]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2092249 'move' slot[2092247] _yieldedIndex[2092241])
                              ref call_tmp[2092252]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead after last mention" "maybe param" "temp"
                              ref this[2092254]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
                              (2092256 'move' this[2092254](2092258 '.v' _iterator[1288764] F0_this[2118017]))
                              (2092261 'move' call_tmp[2092252](2092264 call table[1265258] this[2092254]))
                              val call_tmp[2092266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2092268 'move' call_tmp[2092266](2092271 call isSlotFull[1290312] call_tmp[2092252] _yieldedIndex[2092241]))
                              val call_tmp[2092274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2092276 'move' call_tmp[2092274] call_tmp[2092266])
                              if call_tmp[2092266]
                              {
                                val yret[2092281]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2092283]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead after last mention" "maybe param" "temp"
                                ref this[2092285]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
                                (2092287 'move' this[2092285](2092289 '.v' _iterator[1288764] F0_this[2118017]))
                                (2092292 'move' call_tmp[2092283](2092295 call table[1265258] this[2092285]))
                                ref call_tmp[2092297]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208669] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2092299]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208692] "dead after last mention" "temp"
                                (2092301 'move' _this_tmp_[2092299](2092304 call table[1248029] call_tmp[2092283]))
                                val coerce_tmp[2092306]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2092308 'move' coerce_tmp[2092306](2092310 'deref' _this_tmp_[2092299]))
                                (2092312 'move' call_tmp[2092297](2092315 call this[1250579] coerce_tmp[2092306] slot[2092247]))
                                ref call_tmp[2092318]:_ref(BaseArr)[1208506] "dead after last mention" "maybe param" "temp"
                                (2092320 'move' call_tmp[2092318](2092323 call key[1267443] call_tmp[2092297]))
                                val _yieldedIndex[2092325]:BaseArr[149584] "temp"
                                (2092327 'move' _yieldedIndex[2092325](2092329 'deref' call_tmp[2092318]))
                                {
                                  const e[2092332]:BaseArr[149584] "const" "index var" "insert auto destroy"
                                  (2092334 'move' e[2092332] _yieldedIndex[2092325])
                                  {
                                    const tmp[2092338]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    val call_tmp[2092340]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2092342 'move' call_tmp[2092340](2092344 '_wide_get_locale' e[2092332]))
                                    (2092346 'move' tmp[2092338] call_tmp[2092340])
                                    (2092350 call on_fn[1288817] tmp[2092338] e[2092332] arrType[1288707] rhs[1288645] idxType[1288735])
                                    {
                                    }
                                  }
                                  label _continueLabel[2092357]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2092124]:int(64)[13] "temp"
                      (2092126 'move' low[2092124](2092128 '.v' _iterator[2092033] F0_low[2115192]))
                      (2092131 '=' i[2092059] low[2092124])
                    }
                    {
                      const-val high[2092135]:int(64)[13] "temp"
                      (2092137 'move' high[2092135](2092139 '.v' _iterator[2092033] F1_high[2115196]))
                      (2092142 '<=' i[2092059] high[2092135])
                    }
                    {
                      val call_tmp[2092146]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2092148 '+=' i[2092059] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2092185]
                }
                (2092188 call _freeIterator[1103663] _iterator[2092033])
                (2092191 call chpl__autoDestroy[1674803] tmp[2091885])
                label _endchpl_direct_counted_range_iter_helper[2092193]
              }
              (2070495 call _freeIterator[1103913] _iterator[2070400])
              label _endchpl_direct_counted_range_iter[2070497]
            }
            (2070500 call _freeIterator[1104163] _iterator[2070369])
            label _end_allSlots[2070502]
          }
          (2070505 call _freeIterator[1223333] _iterator[2070333])
          label _endallSlots[2070507]
        }
        (2001192 call _freeIterator[1290246] _iterator[2001084])
        label _endthese[2001194]
      }
      label _breakLabel[1289066]
      (1924944 call _freeIterator[1290592] _iterator[1288764])
    }
    val call_tmp[1289068]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret_tmp[1913326]:1*range(int(64),bounded,false)[1244885] "temp"
    (1289076 call getIndices[1296962] rhs[1288645] ret_tmp[1913326])
    (1913329 'move' call_tmp[1289068] ret_tmp[1913326])
    (1289081 call dsiSetIndices[1251497] lhs[1288643] call_tmp[1289068])
    (1924946 call chpl__autoDestroy[1695146] call_tmp[1289068])
    {
      val _indexOfInterest[1289085]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1289087]:_ic_these__ref_chpl__simpleSet_BaseArr[1290408] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1289089]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1297779]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1297785 'move' coerce_tmp[1297779](1297781 'cast' BaseDom[146767] lhs[1288643]))
      (1289091 'move' call_tmp[1289089](1289094 call _arrs[801578] coerce_tmp[1297779]))
      (1289097 'move' _iterator[1289087](1289100 call _getIterator[1289573] call_tmp[1289089]))
      {
        val ret[2001250]:_ir_these__ref_chpl__simpleSet_BaseArr[1290414] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[2001252]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2001254]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289834] "dead at end of block" "expr temp" "temp"
        ref call_tmp[2001256]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead at end of block" "maybe param" "temp"
        ref this[2001430]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
        (2001435 'move' this[2001430](2001432 '.v' _iterator[1289087] F0_this[2118017]))
        (2001258 'move' call_tmp[2001256](2001261 call table[1265258] this[2001430]))
        val call_tmp[2001263]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "dead at end of block" "expr temp" "maybe param" "temp"
        val ret_tmp[2001265]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "temp"
        (2001268 call allSlots[1289743] call_tmp[2001256] ret_tmp[2001265])
        (2001271 'move' call_tmp[2001263] ret_tmp[2001265])
        (2001274 'move' _iterator[2001254](2001277 call _getIterator[1289849] call_tmp[2001263]))
        {
          val ret[2070637]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2070639]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2070641]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2070643]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
          ref this[2070969]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "temp"
          (2070974 'move' this[2070969](2070971 '.v' _iterator[2001254] F0_this[2118477]))
          (2070645 'move' call_tmp[2070643](2070648 call tableSize[1248057] this[2070969]))
          val call_tmp[2070650]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
          val coerce_tmp[2070652]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2070654 'move' coerce_tmp[2070652](2070656 'deref' call_tmp[2070643]))
          val ret_tmp[2070658]:_ir__allSlots[1221795] "temp"
          (2070661 call _allSlots[201320] coerce_tmp[2070652] ret_tmp[2070658])
          (2070664 'move' call_tmp[2070650] ret_tmp[2070658])
          (2070667 'move' _iterator[2070641](2070670 call _getIterator[1221804] call_tmp[2070650]))
          {
            val ret[2070673]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2070675]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2070677]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            val call_tmp[2070679]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            val ret_tmp[2070681]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            const-val size[2070683]:int(64)[13] "temp"
            (2070685 'move' size[2070683](2070687 '.v' _iterator[2070641] F0_size[2103702]))
            (2070691 call chpl_direct_counted_range_iter[458112] 0 size[2070683] ret_tmp[2070681])
            (2070695 'move' call_tmp[2070679] ret_tmp[2070681])
            (2070698 'move' _iterator[2070677](2070701 call _getIterator[1103994] call_tmp[2070679]))
            {
              val ret[2070704]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2070706]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2070708]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
              val call_tmp[2070710]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
              val ret_tmp[2070712]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
              const-val low[2070714]:int(64)[13] "temp"
              (2070716 'move' low[2070714](2070718 '.v' _iterator[2070677] F0_low[2107536]))
              const-val count[2070721]:int(64)[13] "temp"
              (2070723 'move' count[2070721](2070725 '.v' _iterator[2070677] F1_count[2107540]))
              (2070729 call chpl_direct_counted_range_iter_helper[1102287] low[2070714] count[2070721] ret_tmp[2070712])
              (2070733 'move' call_tmp[2070710] ret_tmp[2070712])
              (2070736 'move' _iterator[2070708](2070739 call _getIterator[1103744] call_tmp[2070710]))
              {
                val ret[2092420]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                val call_tmp[2092422]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val tmp[2092424]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                val tmp[2092426]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                val call_tmp[2092428]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2092962]:int(64)[13] "temp"
                (2092967 'move' count[2092962](2092964 '.v' _iterator[2070708] F1_count[2113698]))
                (2092430 'move' call_tmp[2092428](2092433 call <[948587] count[2092962]))
                (2092435 'move' tmp[2092426] call_tmp[2092428])
                (2092438 'move' tmp[2092424] call_tmp[2092428])
                val call_tmp[2092441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2092443 'move' call_tmp[2092441] call_tmp[2092428])
                if call_tmp[2092428]
                {
                  (2092449 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                }
                const tmp[2092452]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2092454]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                val tmp[2092456]:bool[10] "dead after last mention" "maybe param" "temp"
                val call_tmp[2092458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2092969]:int(64)[13] "temp"
                (2092974 'move' count[2092969](2092971 '.v' _iterator[2070708] F1_count[2113698]))
                (2092460 'move' call_tmp[2092458](2092463 call ==[435744] count[2092969] 0))
                (2092466 'move' tmp[2092456] call_tmp[2092458])
                if call_tmp[2092458]
                {
                  val tmp[2092471]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2092473]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[2092475]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2092976]:int(64)[13] "temp"
                  (2092981 'move' low[2092976](2092978 '.v' _iterator[2070708] F0_low[2113694]))
                  (2092477 'move' call_tmp[2092475](2092480 call _cast[956223] low[2092976]))
                  val call_tmp[2092482]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  val coerce_tmp[2092484]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2092486 'move' coerce_tmp[2092484](2092488 'cast' uint(64)[115] 1))
                  (2092491 'move' call_tmp[2092482](2092494 call -[962382] call_tmp[2092475]))
                  val call_tmp[2092496]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2092498 'move' call_tmp[2092496](2092501 call _cast[953732] call_tmp[2092482]))
                  val ret_tmp[2092503]:2*int(64)[1040245] "temp"
                  const-val low[2092983]:int(64)[13] "temp"
                  (2092988 'move' low[2092983](2092985 '.v' _iterator[2070708] F0_low[2113694]))
                  (2092506 call _build_tuple[1040203] low[2092983] call_tmp[2092496] ret_tmp[2092503])
                  (2092510 'move' tmp[2092471] ret_tmp[2092503])
                  (2092513 'move' tmp[2092454] tmp[2092471])
                }
                {
                  val tmp[2092517]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2092519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[2092521]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2092990]:int(64)[13] "temp"
                  (2092995 'move' count[2092990](2092992 '.v' _iterator[2070708] F1_count[2113698]))
                  (2092523 'move' call_tmp[2092521] count[2092990])
                  val call_tmp[2092526]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2092997]:int(64)[13] "temp"
                  (2093002 'move' count[2092997](2092999 '.v' _iterator[2070708] F1_count[2113698]))
                  (2092528 'move' call_tmp[2092526](2092531 call -[962415] count[2092997]))
                  val call_tmp[2092533]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2093004]:int(64)[13] "temp"
                  (2093009 'move' low[2093004](2093006 '.v' _iterator[2070708] F0_low[2113694]))
                  (2092535 'move' call_tmp[2092533](2092538 call +[439752] low[2093004] call_tmp[2092526]))
                  val ret_tmp[2092541]:2*int(64)[1040245] "temp"
                  const-val low[2093011]:int(64)[13] "temp"
                  (2093016 'move' low[2093011](2093013 '.v' _iterator[2070708] F0_low[2113694]))
                  (2092544 call _build_tuple[1040203] low[2093011] call_tmp[2092533] ret_tmp[2092541])
                  (2092548 'move' tmp[2092517] ret_tmp[2092541])
                  (2092551 'move' tmp[2092454] tmp[2092517])
                }
                (2092555 '=' tmp[2092452] tmp[2092454])
                (2092558 'noop')
                1
                ref call_tmp[2092560]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2092562 'move' call_tmp[2092560](2092564 '.' tmp[2092452] x0[1040241]))
                const start[2092567]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                val coerce_tmp[2092569]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2092571 'move' coerce_tmp[2092569](2092573 'deref' call_tmp[2092560]))
                (2092575 '=' start[2092567] coerce_tmp[2092569])
                (2092578 'noop')
                ref call_tmp[2092579]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2092581 'move' call_tmp[2092579](2092583 '.' tmp[2092452] x1[1040243]))
                const end[2092586]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                val coerce_tmp[2092588]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2092590 'move' coerce_tmp[2092588](2092592 'deref' call_tmp[2092579]))
                (2092594 '=' end[2092586] coerce_tmp[2092588])
                (2092597 'noop')
                val _indexOfInterest[2092598]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2092600]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                val call_tmp[2092602]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                val ret_tmp[2092604]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                (2092607 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2092569] coerce_tmp[2092588] ret_tmp[2092604])
                (2092611 'move' call_tmp[2092602] ret_tmp[2092604])
                (2092614 'move' _iterator[2092600](2092617 call _getIterator[1103490] call_tmp[2092602]))
                {
                  val ret[2092620]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                  val call_tmp[2092622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2092625 call chpl_range_check_stride[1103033])
                  val i[2092626]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2092628]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2092630 'move' i[2092626] 0)
                  val call_tmp[2092633]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val default_arg_first[2092635]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2092637]:int(64)[13] "temp"
                  (2092639 'move' low[2092637](2092641 '.v' _iterator[2092600] F0_low[2115192]))
                  (2092644 'move' default_arg_first[2092635](2092647 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2092637]))
                  val default_arg_last[2092649]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2092651]:int(64)[13] "temp"
                  (2092653 'move' high[2092651](2092655 '.v' _iterator[2092600] F1_high[2115196]))
                  (2092658 'move' default_arg_last[2092649](2092661 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2092651]))
                  val _return_tmp_[2092663]:bool[10] "dead after last mention" "temp"
                  const-val low[2092665]:int(64)[13] "temp"
                  (2092667 'move' low[2092665](2092669 '.v' _iterator[2092600] F0_low[2115192]))
                  const-val high[2092672]:int(64)[13] "temp"
                  (2092674 'move' high[2092672](2092676 '.v' _iterator[2092600] F1_high[2115196]))
                  (2092679 'move' _return_tmp_[2092663](2092682 call chpl_checkIfRangeIterWillOverflow[1096265] low[2092665] high[2092672] 1 default_arg_first[2092635] default_arg_last[2092649] 1))
                  CForLoop[2092689] hazard
                  {
                    val yret[2092718]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2092720 'move' yret[2092718] i[2092626])
                    val _yieldedIndex[2092723]:int(64)[13] "temp"
                    (2092725 'move' _yieldedIndex[2092723] i[2092626])
                    {
                      const i[2092729]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2092731 'move' i[2092729] _yieldedIndex[2092723])
                      val yret[2092734]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2092736 'move' yret[2092734] _yieldedIndex[2092723])
                      val _yieldedIndex[2092764]:int(64)[13] "temp"
                      (2092960 'move' _yieldedIndex[2092764] _yieldedIndex[2092723])
                      {
                        const i[2092766]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2092768 'move' i[2092766] _yieldedIndex[2092764])
                        val yret[2092771]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2092773 'move' yret[2092771] _yieldedIndex[2092764])
                        val _yieldedIndex[2092776]:int(64)[13] "temp"
                        (2092778 'move' _yieldedIndex[2092776] _yieldedIndex[2092764])
                        {
                          const slot[2092782]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2092784 'move' slot[2092782] _yieldedIndex[2092776])
                          val yret[2092787]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2092789 'move' yret[2092787] _yieldedIndex[2092776])
                          val _yieldedIndex[2092792]:int(64)[13] "temp"
                          (2092794 'move' _yieldedIndex[2092792] _yieldedIndex[2092776])
                          {
                            const slot[2092798]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2092800 'move' slot[2092798] _yieldedIndex[2092792])
                            val yret[2092803]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2092805 'move' yret[2092803] _yieldedIndex[2092792])
                            val _yieldedIndex[2092808]:int(64)[13] "temp"
                            (2092810 'move' _yieldedIndex[2092808] _yieldedIndex[2092792])
                            {
                              const slot[2092814]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2092816 'move' slot[2092814] _yieldedIndex[2092808])
                              ref call_tmp[2092819]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead after last mention" "maybe param" "temp"
                              ref this[2092821]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
                              (2092823 'move' this[2092821](2092825 '.v' _iterator[1289087] F0_this[2118017]))
                              (2092828 'move' call_tmp[2092819](2092831 call table[1265258] this[2092821]))
                              val call_tmp[2092833]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2092835 'move' call_tmp[2092833](2092838 call isSlotFull[1290312] call_tmp[2092819] _yieldedIndex[2092808]))
                              val call_tmp[2092841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2092843 'move' call_tmp[2092841] call_tmp[2092833])
                              if call_tmp[2092833]
                              {
                                val yret[2092848]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2092850]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208626] "dead after last mention" "maybe param" "temp"
                                ref this[2092852]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "temp"
                                (2092854 'move' this[2092852](2092856 '.v' _iterator[1289087] F0_this[2118017]))
                                (2092859 'move' call_tmp[2092850](2092862 call table[1265258] this[2092852]))
                                ref call_tmp[2092864]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208669] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2092866]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208692] "dead after last mention" "temp"
                                (2092868 'move' _this_tmp_[2092866](2092871 call table[1248029] call_tmp[2092850]))
                                val coerce_tmp[2092873]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2092875 'move' coerce_tmp[2092873](2092877 'deref' _this_tmp_[2092866]))
                                (2092879 'move' call_tmp[2092864](2092882 call this[1250579] coerce_tmp[2092873] slot[2092814]))
                                ref call_tmp[2092885]:_ref(BaseArr)[1208506] "dead after last mention" "maybe param" "temp"
                                (2092887 'move' call_tmp[2092885](2092890 call key[1267443] call_tmp[2092864]))
                                val _yieldedIndex[2092892]:BaseArr[149584] "temp"
                                (2092894 'move' _yieldedIndex[2092892](2092896 'deref' call_tmp[2092885]))
                                {
                                  const e[2092899]:BaseArr[149584] "const" "index var" "insert auto destroy"
                                  (2092901 'move' e[2092899] _yieldedIndex[2092892])
                                  {
                                    val call_tmp[2092905]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                    val call_tmp[2092907]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
                                    val coerce_tmp[2092909]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                    (2092911 'move' coerce_tmp[2092909] e[2092899])
                                    (2092914 'move' call_tmp[2092907](2092917 call _cast[1290905] coerce_tmp[2092909]))
                                    val eCastQ[2092919]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy"
                                    (2092921 'move' eCastQ[2092919](2092924 call chpl__initCopy[1291113] call_tmp[2092907]))
                                    val call_tmp[2092926]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
                                    (2092928 'move' call_tmp[2092926](2092931 call postfix![1296674] eCastQ[2092919]))
                                    val eCast[2092933]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy"
                                    (2092935 'move' eCast[2092933](2092938 call chpl__initCopy[1289530] call_tmp[2092926]))
                                    const tmp[2092940]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    val call_tmp[2092942]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2092944 'move' call_tmp[2092942](2092946 '_wide_get_locale' e[2092899]))
                                    (2092948 'move' tmp[2092940] call_tmp[2092942])
                                    (2092952 call on_fn[1289176] tmp[2092940] eCast[2092933])
                                    {
                                    }
                                  }
                                  label _continueLabel[2092956]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2092691]:int(64)[13] "temp"
                      (2092693 'move' low[2092691](2092695 '.v' _iterator[2092600] F0_low[2115192]))
                      (2092698 '=' i[2092626] low[2092691])
                    }
                    {
                      const-val high[2092702]:int(64)[13] "temp"
                      (2092704 'move' high[2092702](2092706 '.v' _iterator[2092600] F1_high[2115196]))
                      (2092709 '<=' i[2092626] high[2092702])
                    }
                    {
                      val call_tmp[2092713]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2092715 '+=' i[2092626] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2092752]
                }
                (2092755 call _freeIterator[1103663] _iterator[2092600])
                (2092758 call chpl__autoDestroy[1674803] tmp[2092452])
                label _endchpl_direct_counted_range_iter_helper[2092760]
              }
              (2070803 call _freeIterator[1103913] _iterator[2070708])
              label _endchpl_direct_counted_range_iter[2070805]
            }
            (2070808 call _freeIterator[1104163] _iterator[2070677])
            label _end_allSlots[2070810]
          }
          (2070813 call _freeIterator[1223333] _iterator[2070641])
          label _endallSlots[2070815]
        }
        (2001362 call _freeIterator[1290246] _iterator[2001254])
        label _endthese[2001364]
      }
      label _breakLabel[1289194]
      (1924952 call _freeIterator[1290592] _iterator[1289087])
    }
    (1289218 return _void[55])
  }
  function on_fn[935341](const in arg dummy_locale_arg[935343]:chpl_localeID_t[209352], const in arg this[1882146]:BaseDist[145968], ref arg free_dist[1882148]:_ref(bool)[937388]) : void[4] "on" "resolved"
  {
    {
      val dom_count[145523]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543661 'move' dom_count[145523] -1)
      {
        {
          ref call_tmp[667565]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667568 'move' call_tmp[667565](360560 call _domsLock[801442] this[1882146]))
          (145533 call lock[187323] call_tmp[667565])
          ref call_tmp[667574]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
          (667577 'move' call_tmp[667574](385491 call _free_when_no_doms[801468] this[1882146]))
          (145538 call =[435290] call_tmp[667574] 1)
          ref call_tmp[667581]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "dead after last mention" "maybe param" "temp"
          (667584 'move' call_tmp[667581](360565 call _doms[801416] this[1882146]))
          val call_tmp[667588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667591 'move' call_tmp[667588](145543 call size[1500682] call_tmp[667581]))
          (145546 call =[435443] dom_count[145523] call_tmp[667588])
          ref call_tmp[667595]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667598 'move' call_tmp[667595](360570 call _domsLock[801442] this[1882146]))
          (145554 call unlock[187415] call_tmp[667595])
        }
        (145558 'local block')
      }
      val call_tmp[667602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667605 'move' call_tmp[667602](145561 call ==[435744] dom_count[145523] 0))
      val call_tmp[667607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667610 'move' call_tmp[667607] call_tmp[667602])
      if call_tmp[667607]
      {
        (145565 call =[435290] free_dist[1882148] 1)
      }
    }
    (935348 return _void[55])
  }
  function on_fn[935350](const in arg dummy_locale_arg[935352]:chpl_localeID_t[209352], const in arg this[1882150]:BaseDist[145968], const in arg x[1882152]:BaseDom[146767], ref arg count[1882154]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    {
      val cnt[145636]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543665 'move' cnt[145636] -1)
      {
        {
          ref call_tmp[667639]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667642 'move' call_tmp[667639](360575 call _domsLock[801442] this[1882150]))
          (145646 call lock[187323] call_tmp[667639])
          ref call_tmp[667648]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "dead after last mention" "maybe param" "temp"
          (667651 'move' call_tmp[667648](360580 call _doms[801416] this[1882150]))
          (145655 call remove[1496701] call_tmp[667648] x[1882152])
          ref call_tmp[667657]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208840] "dead after last mention" "maybe param" "temp"
          (667660 'move' call_tmp[667657](360585 call _doms[801416] this[1882150]))
          val call_tmp[667664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667667 'move' call_tmp[667664](145659 call size[1500682] call_tmp[667657]))
          (145662 call =[435443] cnt[145636] call_tmp[667664])
          ref call_tmp[667671]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
          (667674 'move' call_tmp[667671](385506 call _free_when_no_doms[801468] this[1882150]))
          val call_tmp[667676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1500723]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1500727 'move' coerce_tmp[1500723](1500725 'deref' call_tmp[667671]))
          (667679 'move' call_tmp[667676](145666 call ![7494] coerce_tmp[1500723]))
          val call_tmp[667681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (667684 'move' call_tmp[667681] call_tmp[667676])
          if call_tmp[667681]
          {
            (145670 call +=[451431] cnt[145636] 1)
          }
          ref call_tmp[667688]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667691 'move' call_tmp[667688](360590 call _domsLock[801442] this[1882150]))
          (145683 call unlock[187415] call_tmp[667688])
        }
        (145687 'local block')
      }
      (145690 call =[435443] count[1882154] cnt[145636])
    }
    (935357 return _void[55])
  }
  function on_fn[935368](const in arg dummy_locale_arg[935370]:chpl_localeID_t[209352], const in arg this[1882156]:BaseDom[146767], ref arg free_dom[1882158]:_ref(bool)[937388], const  ref arg dist[1882160]:_ref(BaseDist)[1209040], ref arg remove_dist[1882162]:_ref(bool)[937388]) : void[4] "on" "resolved"
  {
    {
      val arr_count[146184]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543681 'move' arr_count[146184] 0)
      {
        {
          ref call_tmp[667787]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667790 'move' call_tmp[667787](360612 call _arrsLock[801630] this[1882156]))
          (146194 call lock[187323] call_tmp[667787])
          ref call_tmp[667796]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "maybe param" "temp"
          (667799 'move' call_tmp[667796](360617 call _arrs[801578] this[1882156]))
          val call_tmp[667803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667806 'move' call_tmp[667803](146199 call size[1495494] call_tmp[667796]))
          (146202 call =[435443] arr_count[146184] call_tmp[667803])
          ref call_tmp[667810]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (667813 'move' call_tmp[667810](385551 call _arrs_containing_dom[801604] this[1882156]))
          val coerce_tmp[1496628]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1496632 'move' coerce_tmp[1496628](1496630 'deref' call_tmp[667810]))
          (146207 call +=[451431] arr_count[146184] coerce_tmp[1496628])
          ref call_tmp[667817]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
          (667820 'move' call_tmp[667817](385556 call _free_when_no_arrs[801656] this[1882156]))
          (146212 call =[435290] call_tmp[667817] 1)
          ref call_tmp[667824]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (667827 'move' call_tmp[667824](360622 call _arrsLock[801630] this[1882156]))
          (146220 call unlock[187415] call_tmp[667824])
        }
        (146224 'local block')
      }
      val call_tmp[667831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667834 'move' call_tmp[667831](146227 call ==[435744] arr_count[146184] 0))
      val call_tmp[667836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667839 'move' call_tmp[667836] call_tmp[667831])
      if call_tmp[667836]
      {
        (146231 call =[435290] free_dom[1882158] 1)
        val call_tmp[667843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val _virtual_method_tmp_[1875717]:int(32)[95] "temp"
        (1875721 'move' _virtual_method_tmp_[1875717](1875719 'getcid' this[1882156]))
        (667846 'move' call_tmp[667843](146237 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1875717] this[1882156]))
        val call_tmp[667848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (667851 'move' call_tmp[667848] call_tmp[667843])
        if call_tmp[667848]
        {
          val call_tmp[667855]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
          (667858 'move' call_tmp[667855](146248 call _to_unmanaged[1496642] this[1882156]))
          val call_tmp[667860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1496685]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[1882966]:BaseDist[145968] "temp"
          (1882969 'move' tmp[1882966](1882967 'deref' dist[1882160]))
          (1496690 'move' coerce_tmp[1496685] tmp[1882966])
          (667863 'move' call_tmp[667860](146250 call remove_dom[145621] coerce_tmp[1496685] call_tmp[667855]))
          (146251 call =[435290] remove_dist[1882162] call_tmp[667860])
        }
      }
    }
    (935375 return _void[55])
  }
  function on_fn[1264968](const in arg dummy_locale_arg[1264970]:chpl_localeID_t[209352], const in arg this[1882496]:BaseDom[146767], const in arg x[1882498]:BaseArr[149584]) : void[4] "on" "resolved"
  {
    {
      {
        ref call_tmp[1264983]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
        (1264985 'move' call_tmp[1264983](1264988 call _arrsLock[801630] this[1882496]))
        (1264995 call lock[187323] call_tmp[1264983])
      }
      {
        ref call_tmp[1265006]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "maybe param" "temp"
        (1265008 'move' call_tmp[1265006](1265011 call _arrs[801578] this[1882496]))
        (1265018 call add[1265158] call_tmp[1265006] x[1882498])
      }
      {
        ref call_tmp[1265043]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
        (1265045 'move' call_tmp[1265043](1265048 call _arrsLock[801630] this[1882496]))
        (1265055 call unlock[187415] call_tmp[1265043])
      }
    }
    (1265057 return _void[55])
  }
  function on_fn[1288817](const in arg dummy_locale_arg[1288819]:chpl_localeID_t[209352], const in arg e[1882500]:BaseArr[149584], const  ref arg arrType[1882502]:_ref(BaseArrOverRectangularDom(1,int(64),false))[1256424], const  ref arg rhs[1882504]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252812], const  ref arg idxType[1882506]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    {
      val call_tmp[1288823]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288829]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1291094]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1291099 'move' coerce_tmp[1291094] e[1882500])
      (1288831 'move' call_tmp[1288829](1288834 call _cast[1290905] coerce_tmp[1291094]))
      val eCastQ[1288837]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy"
      (1288839 'move' eCastQ[1288837](1291222 call chpl__initCopy[1291113] call_tmp[1288829]))
      val call_tmp[1288843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1291225]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1291230 'move' coerce_tmp[1291225](1291227 'cast' object[22] eCastQ[1288837]))
      (1288845 'move' call_tmp[1288843](1288848 call ==[1146] coerce_tmp[1291225] nil[44]))
      val call_tmp[1288851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1288853 'move' call_tmp[1288851] call_tmp[1288843])
      if call_tmp[1288851]
      {
        val call_tmp[1288860]:domain(1,int(64),false)[1251123] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1288883 call halt[1291267] "internal error: " "borrowed domain(1,int(64),false)" " contains an bad array type " "unmanaged BaseArrOverRectangularDom(1,int(64),false)")
      }
      val call_tmp[1288891]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "maybe param" "temp"
      (1288893 'move' call_tmp[1288891](1288896 call postfix![1296674] eCastQ[1288837]))
      val eCast[1288898]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead at end of block" "insert auto destroy"
      (1288900 'move' eCast[1288898](1296945 call chpl__initCopy[1289530] call_tmp[1288891]))
      val call_tmp[1288904]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "maybe param" "temp"
      val ret_tmp[1913320]:1*range(int(64),bounded,false)[1244885] "temp"
      (1288912 call getIndices[1296962] rhs[1882504] ret_tmp[1913320])
      (1913323 'move' call_tmp[1288904] ret_tmp[1913320])
      val inds[1288913]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      (1288915 'move' inds[1288913] call_tmp[1288904])
      val tmp[1288919]:1*range(int(64),bounded,false)[1244885] "dead at end of block" "insert auto destroy"
      val call_tmp[1288921]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288930]:1*range(int(64),bounded,false)[1244885] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val ret_tmp[1911654]:1*range(int(64),bounded,false)[1244885] "temp"
      (1297757 call _defaultOf[1251254] ret_tmp[1911654])
      (1911657 'move' tmp[1288919] ret_tmp[1911654])
      {
        val i[1288947]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1288949 'move' i[1288947] 0)
        {
          {
            ref call_tmp[1297141]:_ref(range(int(64),bounded,false))[1027047] "dead at end of block" "maybe param" "temp"
            (1297143 'move' call_tmp[1297141](1297193 '.' inds[1288913] x0[1244883]))
            val from[1297148]:range(int(64),bounded,false)[1027003] "dead at end of block" "insert auto destroy"
            (1297150 'move' from[1297148](1297196 'deref' call_tmp[1297141]))
            ref call_tmp[1297156]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
            (1297158 'move' call_tmp[1297156](1297199 '.' tmp[1288919] x0[1244883]))
            val call_tmp[1297163]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1297172]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            val ret_tmp[1913352]:range(int(64),bounded,false)[1027003] "temp"
            (1297180 call safeCast[1297206] from[1297148] ret_tmp[1913352])
            (1913355 'move' call_tmp[1297172] ret_tmp[1913352])
            (1297183 call =[1251739] call_tmp[1297156] call_tmp[1297172])
            (1924955 call chpl__autoDestroy[1407763] call_tmp[1297172])
            (1924958 call chpl__autoDestroy[1407763] from[1297148])
          }
        }
        label _continueLabel0[1297137]
        label _unused_continueLabel[1289047]
        label _breakLabel[1289049]
      }
      val coerce_tmp[1297748]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1297753 'move' coerce_tmp[1297748] eCast[1288898])
      val _virtual_method_tmp_[1875808]:int(32)[95] "temp"
      (1875812 'move' _virtual_method_tmp_[1875808](1875810 'getcid' coerce_tmp[1297748]))
      (1289055 'virtual method call' dsiReallocate[1297681] _virtual_method_tmp_[1875808] coerce_tmp[1297748] tmp[1288919])
      (1924962 call chpl__autoDestroy[1695146] tmp[1288919])
      (1924965 call chpl__autoDestroy[1695146] inds[1288913])
    }
    (1289060 return _void[55])
  }
  function on_fn[1289176](const in arg dummy_locale_arg[1289178]:chpl_localeID_t[209352], const  ref arg eCast[1882508]:_ref(BaseArrOverRectangularDom(1,int(64),false))[1256424]) : void[4] "on" "resolved"
  {
    val coerce_tmp[1297820]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1883026]:BaseArrOverRectangularDom(1,int(64),false)[1256408] "temp"
    (1883029 'move' tmp[1883026](1883027 'deref' eCast[1882508]))
    (1297825 'move' coerce_tmp[1297820] tmp[1883026])
    val _virtual_method_tmp_[1875815]:int(32)[95] "temp"
    (1875819 'move' _virtual_method_tmp_[1875815](1875817 'getcid' coerce_tmp[1297820]))
    (1289185 'virtual method call' dsiPostReallocate[1297808] _virtual_method_tmp_[1875815] coerce_tmp[1297820])
    (1289188 return _void[55])
  }
  function on_fn[1494190](const in arg dummy_locale_arg[1494192]:chpl_localeID_t[209352], const in arg this[1882622]:BaseDom[146767], const in arg x[1882624]:BaseArr[149584], ref arg count[1882626]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    {
      val cnt[1494203]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1494205 'move' cnt[1494203] -1)
      {
        {
          ref call_tmp[1494212]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (1494214 'move' call_tmp[1494212](1494217 call _arrsLock[801630] this[1882622]))
          (1494224 call lock[187323] call_tmp[1494212])
          {
            ref call_tmp[1494235]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "maybe param" "temp"
            (1494237 'move' call_tmp[1494235](1494240 call _arrs[801578] this[1882622]))
            (1494247 call remove[1494393] call_tmp[1494235] x[1882624])
          }
          ref call_tmp[1494263]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208540] "dead after last mention" "maybe param" "temp"
          (1494265 'move' call_tmp[1494263](1494268 call _arrs[801578] this[1882622]))
          val call_tmp[1494271]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1494273 'move' call_tmp[1494271](1494276 call size[1495494] call_tmp[1494263]))
          (1494280 call =[435443] cnt[1494203] call_tmp[1494271])
          ref call_tmp[1494285]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
          (1494287 'move' call_tmp[1494285](1494290 call _arrs_containing_dom[801604] this[1882622]))
          val coerce_tmp[1495535]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1495539 'move' coerce_tmp[1495535](1495537 'deref' call_tmp[1494285]))
          (1494294 call +=[451431] cnt[1494203] coerce_tmp[1495535])
          ref call_tmp[1494299]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
          (1494301 'move' call_tmp[1494299](1494304 call _free_when_no_arrs[801656] this[1882622]))
          val call_tmp[1494307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1495543]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1495547 'move' coerce_tmp[1495543](1495545 'deref' call_tmp[1494299]))
          (1494309 'move' call_tmp[1494307](1494312 call ![7494] coerce_tmp[1495543]))
          val call_tmp[1494314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1494316 'move' call_tmp[1494314] call_tmp[1494307])
          if call_tmp[1494314]
          {
            (1494324 call +=[451431] cnt[1494203] 1)
          }
          ref call_tmp[1494330]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
          (1494332 'move' call_tmp[1494330](1494335 call _arrsLock[801630] this[1882622]))
          (1494342 call unlock[187415] call_tmp[1494330])
        }
        (1494210 'local block')
      }
      (1494344 call =[435443] count[1882626] cnt[1494203])
    }
    (1494350 return _void[55])
  }
}