AST dump for List after pass createTaskFunctions.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416271]() : void[4] "insert line file info" "module init"
  {
    (549947 'init var' _initialCapacity[298324] 8)
    (298327 'end of statement')
    (549949 'init var' _initialArrayCapacity[298329] 16)
    (298332 'end of statement')
    (549951 'init var' _sanityChecks[298334] 0)
    (298337 'end of statement')
    (549957 'move' _lockType[298366](549956 call chpl_LocalSpinlock[187432]))
    (491028 'end of statement')
    (539749 return _void[55])
  }
  const _initialCapacity[298324] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298329] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298334] "dead at end of block" "no doc" "param" "private"
  function _sanity[298344](arg expr[298341]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744319] "expr temp" "maybe param" "maybe type" "temp"
    (744322 'move' call_tmp[744319](298352 call _cond_test _sanityChecks[298334]))
    if call_tmp[744319]
    {
      (298350 call assert expr[298341])
    }
    (539191 return _void[55])
  }
  unknown _lockType[298366] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187432]
  function _LockWrapper[298407].lock[298380](arg _mt[298411]:_MT[238], arg this[298409]:_LockWrapper[298407]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744326] "expr temp" "maybe param" "maybe type" "temp"
    (744329 'move' call_tmp[744326](365011 call lock$ _mt[243] this[298409]))
    (298387 call(298383 call (partial) lock _mt[243] call_tmp[744326]))
    (539193 return _void[55])
  }
  function _LockWrapper[298407].unlock[298394](arg _mt[298415]:_MT[238], arg this[298413]:_LockWrapper[298407]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744335] "expr temp" "maybe param" "maybe type" "temp"
    (744338 'move' call_tmp[744335](365016 call lock$ _mt[243] this[298413]))
    (298401 call(298397 call (partial) unlock _mt[243] call_tmp[744335]))
    (539195 return _void[55])
  }
  function _LockWrapper[298407].super[930148](arg _mt[930150]:_MT[238], arg this[930152]:_LockWrapper[298407]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930162] "RVV" "temp"
    unknown call_tmp[930169] "expr temp" "maybe param" "maybe type" "temp"
    (930172 'move' call_tmp[930169](930156 '.v' this[930152] c"super"))
    (930167 'move' ret[930162](930166 'deref' call_tmp[930169]))
    (930164 return ret[930162])
  }
  function _LockWrapper[298407].lock$[930174](arg _mt[930176]:_MT[238], arg this[930178]:_LockWrapper[298407]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930188] "RVV" "temp"
    unknown call_tmp[930195] "expr temp" "maybe param" "maybe type" "temp"
    (930198 'move' call_tmp[930195](930182 '.' this[930178] c"lock$"))
    (930193 'move' ret[930188](930192 'addr of' call_tmp[930195]))
    (930190 return ret[930188])
  }
  function _LockWrapper[298407].init[930200](arg _mt[930202]:_MT[238], arg this[930203]:_LockWrapper[298407], in arg lock$[930214] :
  (930284 'new' _lockType[298366]) =
  (930285 'new' _lockType[298366])) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[930233] "temporary of super field" "temp"
    (930235 'move' super_tmp[930233](930232 '.v' this[930203] c"super"))
    (930213 call(930211 call (partial) init _mt[243] super_tmp[930233]))
    (930259 'end of statement')
    unknown tmp[930238] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[930262] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[930274] "expr temp" "maybe param" "maybe type" "temp"
      (930277 'move' call_tmp[930274](930240 '.v' this[930203] c"super"))
      (930266 'move' call_type_tmp[930262](930243 'typeof' call_tmp[930274]))
    }
    (930244 'move' tmp[930238] call_type_tmp[930262])
    unknown call_tmp[930279] "maybe param" "maybe type" "temp"
    (930282 'move' call_tmp[930279](930249 'cast' tmp[930238] this[930203]))
    unknown chpl__thisAsParent[930246] "dead at end of block" "insert auto destroy" "temp"
    (930270 'init var' chpl__thisAsParent[930246] call_tmp[930279] tmp[930238])
    (930252 'setcid' chpl__thisAsParent[930246])
    (930254 '.=' this[930203] c"lock$" lock$[930214])
    (930260 'end of statement')
    (930257 'setcid' this[930203])
    (930268 return _void[55])
  }
  function _LockWrapper[298407].deinit[930286](arg _mt[930288]:_MT[238], arg this[930290]:_LockWrapper[298407]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (930298 return _void[55])
  }
  function _LockWrapper[298407].writeThis[930300](arg _mt[930304]:_MT[238], arg this[930302]:_LockWrapper[298407], arg f[930303]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930309 call writeThisDefaultImpl f[930303] this[930302])
    (930314 return _void[55])
  }
  function _LockWrapper[298407].readThis[930316](arg _mt[930320]:_MT[238], arg this[930318]:_LockWrapper[298407], arg f[930319]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930324 call readThisDefaultImpl f[930319] this[930318])
    (930330 return _void[55])
  }
  type _LockWrapper[298407] val super[355883]:object[22] "super class" unknown lock$[298374](298370 'new'(298373 call _lockType[298366]))
  type _LockWrapper[405313](?)
  function _checkType[298422](arg eltType[298420]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744342] "expr temp" "maybe param" "maybe type" "temp"
    (744345 'move' call_tmp[744342](298427 call isGenericType eltType[298420]))
    unknown call_tmp[744347] "expr temp" "maybe param" "maybe type" "temp"
    (744350 'move' call_tmp[744347](298500 call _cond_test call_tmp[744342]))
    if call_tmp[744347]
    {
      unknown call_tmp[744352] "expr temp" "maybe param" "maybe type" "temp"
      (744355 'move' call_tmp[744352](298448 call _cast string[26] eltType[298420]))
      unknown call_tmp[744357] "expr temp" "maybe param" "maybe type" "temp"
      (744360 'move' call_tmp[744357](298450 call + "creating a list with element type " call_tmp[744352]))
      (298453 call compilerWarning call_tmp[744357])
      (491031 'end of statement')
      unknown tmp[434912] "maybe param" "temp"
      (434923 'move' tmp[434912](298459 call isClassType eltType[298420]))
      unknown call_tmp[744362] "expr temp" "maybe param" "maybe type" "temp"
      (744365 'move' call_tmp[744362](434925 call _cond_invalid tmp[434912]))
      if call_tmp[744362]
      {
        (434928 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580799] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580800] "maybe param" "temp"
      unknown call_tmp[744367] "expr temp" "maybe param" "maybe type" "temp"
      (744370 'move' call_tmp[744367](434913 call isTrue tmp[434912]))
      (580805 'move' tmp[580800](580803 call _cond_test call_tmp[744367]))
      if tmp[580800]
      {
        unknown tmp[580807] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744372] "expr temp" "maybe param" "maybe type" "temp"
        (744375 'move' call_tmp[744372](298462 'to borrowed class from unknown' eltType[298420]))
        unknown call_tmp[744377] "expr temp" "maybe param" "maybe type" "temp"
        (744380 'move' call_tmp[744377](298464 call isGenericType call_tmp[744372]))
        unknown call_tmp[744382] "expr temp" "maybe param" "maybe type" "temp"
        (744385 'move' call_tmp[744382](298465 call ! call_tmp[744377]))
        (580809 'move' tmp[580807](434916 call isTrue call_tmp[744382]))
        (580814 'move' tmp[580799](580811 '_paramFoldLogical' tmp[580800] tmp[580807]))
      }
      {
        (580819 'move' tmp[580799](580816 '_paramFoldLogical' tmp[580800] 0))
      }
      unknown call_tmp[744387] "expr temp" "maybe param" "maybe type" "temp"
      (744390 'move' call_tmp[744387](298475 call _cond_test tmp[580799]))
      if call_tmp[744387]
      {
        (298472 call compilerWarning "which now means class type with generic management")
      }
      (298498 call compilerError "list element type cannot currently be generic")
    }
    (539197 return _void[55])
  }
  function _dummyFieldType[298511](arg t[298509]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[539201] "RVV" "temp" "type variable"
    unknown call_tmp[744392] "expr temp" "maybe param" "maybe type" "temp"
    (744395 'move' call_tmp[744392](298516 call isBorrowedClass t[298509]))
    unknown call_tmp[744397] "expr temp" "maybe param" "maybe type" "temp"
    (744400 'move' call_tmp[744397](298526 call _cond_test call_tmp[744392]))
    if call_tmp[744397]
    {
      unknown call_tmp[744402] "expr temp" "maybe param" "maybe type" "temp"
      (744405 'move' call_tmp[744402](298518 'to nilable class from type' t[298509]))
      (539206 'move' ret[539201](539205 'deref' call_tmp[744402]))
      gotoReturn _end__dummyFieldType[539199] _end__dummyFieldType[539199]
    }
    {
      (539211 'move' ret[539201](539210 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[539199] _end__dummyFieldType[539199]
    }
    label _end__dummyFieldType[539199]
    (539203 return ret[539201])
  }
  function list[304289](?).init[298597](arg _mt[304293]:_MT[238], ref arg this[304291]:list[304289](?), arg eltType[298595]:_any[178](?), param arg parSafe[298600] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298606 call _checkType eltType[298595])
    (491037 'end of statement')
    unknown tmp[467194] "temp" "type variable"
    (467196 'move' tmp[467194] eltType[298595])
    (467198 'init field' this[304291] c"eltType" tmp[467194])
    (491038 'end of statement')
    unknown tmp[467202] "param" "temp"
    (467204 'init var' tmp[467202] parSafe[298600])
    (467206 'init field' this[304291] c"parSafe" tmp[467202])
    (491039 'end of statement')
    unknown tmp[467211] "temp"
    (467213 'init var' tmp[467211] 0)
    (467215 '.=' this[304291] c"_size" tmp[467211])
    (491040 'end of statement')
    unknown tmp[467227] "temp"
    unknown tmp[580826] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580827] "maybe param" "temp"
    unknown call_tmp[744407] "expr temp" "maybe param" "maybe type" "temp"
    (744410 'move' call_tmp[744407](467235 '.v' this[304291] c"parSafe"))
    (580832 'move' tmp[580827](580830 call _cond_test call_tmp[744407]))
    if tmp[580827]
    {
      unknown tmp[580834] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580836 'move' tmp[580834](748310 'new' _LockWrapper[405313](?)))
      (580841 'move' tmp[580826](580838 '_paramFoldLogical' tmp[580827] tmp[580834]))
    }
    {
      (580846 'move' tmp[580826](580843 '_paramFoldLogical' tmp[580827] none[57]))
    }
    (467229 'init var' tmp[467227] tmp[580826])
    (467231 '.=' this[304291] c"_lock$" tmp[467227])
    (491041 'end of statement')
    unknown call_tmp[744412] "expr temp" "maybe param" "maybe type" "temp"
    (744415 'move' call_tmp[744412](467252 '.v' this[304291] c"eltType"))
    unknown call_tmp[744417] "expr temp" "maybe param" "maybe type" "temp"
    (744420 'move' call_tmp[744417](467244 call _ddata[11696](?) call_tmp[744412]))
    unknown call_tmp[744422] "maybe param" "maybe type" "temp"
    (744425 'move' call_tmp[744422](467242 call _ddata[11696](?) call_tmp[744417]))
    unknown tmp[467239] "temp"
    (467246 'init var' tmp[467239] nil[44] call_tmp[744422])
    (467248 'init field' this[304291] c"_arrays" tmp[467239])
    (491042 'end of statement')
    unknown tmp[467256] "temp"
    (467258 'init var' tmp[467256] 0)
    (467260 '.=' this[304291] c"_arrayCapacity" tmp[467256])
    (491043 'end of statement')
    unknown tmp[467265] "temp"
    (467267 'init var' tmp[467265] 0)
    (467269 '.=' this[304291] c"_totalCapacity" tmp[467265])
    (491044 'end of statement')
    unknown tmp[467273] "temp"
    unknown call_tmp[744427] "expr temp" "maybe param" "maybe type" "temp"
    (744430 'move' call_tmp[744427](467286 '.v' this[304291] c"eltType"))
    unknown call_tmp[744432] "expr temp" "maybe param" "maybe type" "temp"
    (744435 'move' call_tmp[744432](467276 call _dummyFieldType call_tmp[744427]))
    (467278 'default init var' tmp[467273] call_tmp[744432])
    (467282 '.=' this[304291] c"_dummyFieldToForceBorrowChecking" tmp[467273])
    (491045 'end of statement')
    (298639 call(298635 call (partial) _firstTimeInitializeArrays _mt[243] this[304291]))
    (539215 return _void[55])
  }
  function list[304289](?).init[298653](arg _mt[304297]:_MT[238], ref arg this[304295]:list[304289](?), arg other[298650]:list[304289](?), param arg parSafe[298656] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744439] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744442 'move' call_tmp[744439](298661 'typeof' this[304295]))
    unknown call_tmp[744446] "expr temp" "maybe param" "maybe type" "temp"
    (744449 'move' call_tmp[744446](298662 call eltType _mt[243] call_tmp[744439]))
    unknown call_tmp[744451] "expr temp" "maybe param" "maybe type" "temp"
    (744454 'move' call_tmp[744451](298666 call isCopyableType call_tmp[744446]))
    unknown call_tmp[744456] "expr temp" "maybe param" "maybe type" "temp"
    (744459 'move' call_tmp[744456](298667 call ! call_tmp[744451]))
    unknown call_tmp[744461] "expr temp" "maybe param" "maybe type" "temp"
    (744464 'move' call_tmp[744461](298709 call _cond_test call_tmp[744456]))
    if call_tmp[744461]
    {
      unknown call_tmp[744466] "expr temp" "maybe param" "maybe type" "temp"
      (744469 'move' call_tmp[744466](298704 call + "Cannot copy list with element type that " "cannot be copied"))
      (298707 call compilerError call_tmp[744466])
    }
    unknown tmp[467299] "temp" "type variable"
    (467301 'move' tmp[467299](467295 'query' other[298650] 1))
    (467303 'init field' this[304295] c"eltType" tmp[467299])
    (491048 'end of statement')
    unknown tmp[467307] "param" "temp"
    (467309 'init var' tmp[467307] parSafe[298656])
    (467311 'init field' this[304295] c"parSafe" tmp[467307])
    (491049 'end of statement')
    unknown tmp[467316] "temp"
    (467318 'init var' tmp[467316] 0)
    (467320 '.=' this[304295] c"_size" tmp[467316])
    (491050 'end of statement')
    unknown tmp[467332] "temp"
    unknown tmp[580853] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580854] "maybe param" "temp"
    unknown call_tmp[744471] "expr temp" "maybe param" "maybe type" "temp"
    (744474 'move' call_tmp[744471](467340 '.v' this[304295] c"parSafe"))
    (580859 'move' tmp[580854](580857 call _cond_test call_tmp[744471]))
    if tmp[580854]
    {
      unknown tmp[580861] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580863 'move' tmp[580861](748311 'new' _LockWrapper[405313](?)))
      (580868 'move' tmp[580853](580865 '_paramFoldLogical' tmp[580854] tmp[580861]))
    }
    {
      (580873 'move' tmp[580853](580870 '_paramFoldLogical' tmp[580854] none[57]))
    }
    (467334 'init var' tmp[467332] tmp[580853])
    (467336 '.=' this[304295] c"_lock$" tmp[467332])
    (491051 'end of statement')
    unknown call_tmp[744476] "expr temp" "maybe param" "maybe type" "temp"
    (744479 'move' call_tmp[744476](467357 '.v' this[304295] c"eltType"))
    unknown call_tmp[744481] "expr temp" "maybe param" "maybe type" "temp"
    (744484 'move' call_tmp[744481](467349 call _ddata[11696](?) call_tmp[744476]))
    unknown call_tmp[744486] "maybe param" "maybe type" "temp"
    (744489 'move' call_tmp[744486](467347 call _ddata[11696](?) call_tmp[744481]))
    unknown tmp[467344] "temp"
    (467351 'init var' tmp[467344] nil[44] call_tmp[744486])
    (467353 'init field' this[304295] c"_arrays" tmp[467344])
    (491052 'end of statement')
    unknown tmp[467361] "temp"
    (467363 'init var' tmp[467361] 0)
    (467365 '.=' this[304295] c"_arrayCapacity" tmp[467361])
    (491053 'end of statement')
    unknown tmp[467370] "temp"
    (467372 'init var' tmp[467370] 0)
    (467374 '.=' this[304295] c"_totalCapacity" tmp[467370])
    (491054 'end of statement')
    unknown tmp[467378] "temp"
    unknown call_tmp[744491] "expr temp" "maybe param" "maybe type" "temp"
    (744494 'move' call_tmp[744491](467389 '.v' this[304295] c"eltType"))
    unknown call_tmp[744496] "expr temp" "maybe param" "maybe type" "temp"
    (744499 'move' call_tmp[744496](467381 call _dummyFieldType call_tmp[744491]))
    (467383 'default init var' tmp[467378] call_tmp[744496])
    (467385 '.=' this[304295] c"_dummyFieldToForceBorrowChecking" tmp[467378])
    (491055 'end of statement')
    (298741 call(405330 call (partial) _commonInitFromIterable _mt[243] this[304295]) other[298650])
    (539217 return _void[55])
  }
  function list[304289](?).init[298757](arg _mt[304301]:_MT[238], ref arg this[304299]:list[304289](?), arg other[298754]:_array[133594](?), param arg parSafe[298760] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744505] "expr temp" "maybe param" "maybe type" "temp"
    (744508 'move' call_tmp[744505](467394 call eltType _mt[243] other[298754]))
    (298766 call _checkType call_tmp[744505])
    (491057 'end of statement')
    unknown call_tmp[744512] "expr temp" "maybe param" "maybe type" "temp"
    (744515 'move' call_tmp[744512](467398 call eltType _mt[243] other[298754]))
    unknown call_tmp[744517] "expr temp" "maybe param" "maybe type" "temp"
    (744520 'move' call_tmp[744517](298772 call isCopyableType call_tmp[744512]))
    unknown call_tmp[744522] "expr temp" "maybe param" "maybe type" "temp"
    (744525 'move' call_tmp[744522](298773 call ! call_tmp[744517]))
    unknown call_tmp[744527] "expr temp" "maybe param" "maybe type" "temp"
    (744530 'move' call_tmp[744527](298815 call _cond_test call_tmp[744522]))
    if call_tmp[744527]
    {
      unknown call_tmp[744532] "expr temp" "maybe param" "maybe type" "temp"
      (744535 'move' call_tmp[744532](298810 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298813 call compilerError call_tmp[744532])
    }
    unknown tmp[467406] "temp" "type variable"
    (467408 'move' tmp[467406](467402 call eltType _mt[243] other[298754]))
    (467410 'init field' this[304299] c"eltType" tmp[467406])
    (491059 'end of statement')
    unknown tmp[467414] "param" "temp"
    (467416 'init var' tmp[467414] parSafe[298760])
    (467418 'init field' this[304299] c"parSafe" tmp[467414])
    (491060 'end of statement')
    unknown tmp[467423] "temp"
    (467425 'init var' tmp[467423] 0)
    (467427 '.=' this[304299] c"_size" tmp[467423])
    (491061 'end of statement')
    unknown tmp[467439] "temp"
    unknown tmp[580880] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580881] "maybe param" "temp"
    unknown call_tmp[744539] "expr temp" "maybe param" "maybe type" "temp"
    (744542 'move' call_tmp[744539](467447 '.v' this[304299] c"parSafe"))
    (580886 'move' tmp[580881](580884 call _cond_test call_tmp[744539]))
    if tmp[580881]
    {
      unknown tmp[580888] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580890 'move' tmp[580888](748312 'new' _LockWrapper[405313](?)))
      (580895 'move' tmp[580880](580892 '_paramFoldLogical' tmp[580881] tmp[580888]))
    }
    {
      (580900 'move' tmp[580880](580897 '_paramFoldLogical' tmp[580881] none[57]))
    }
    (467441 'init var' tmp[467439] tmp[580880])
    (467443 '.=' this[304299] c"_lock$" tmp[467439])
    (491062 'end of statement')
    unknown call_tmp[744544] "expr temp" "maybe param" "maybe type" "temp"
    (744547 'move' call_tmp[744544](467464 '.v' this[304299] c"eltType"))
    unknown call_tmp[744549] "expr temp" "maybe param" "maybe type" "temp"
    (744552 'move' call_tmp[744549](467456 call _ddata[11696](?) call_tmp[744544]))
    unknown call_tmp[744554] "maybe param" "maybe type" "temp"
    (744557 'move' call_tmp[744554](467454 call _ddata[11696](?) call_tmp[744549]))
    unknown tmp[467451] "temp"
    (467458 'init var' tmp[467451] nil[44] call_tmp[744554])
    (467460 'init field' this[304299] c"_arrays" tmp[467451])
    (491063 'end of statement')
    unknown tmp[467468] "temp"
    (467470 'init var' tmp[467468] 0)
    (467472 '.=' this[304299] c"_arrayCapacity" tmp[467468])
    (491064 'end of statement')
    unknown tmp[467477] "temp"
    (467479 'init var' tmp[467477] 0)
    (467481 '.=' this[304299] c"_totalCapacity" tmp[467477])
    (491065 'end of statement')
    unknown tmp[467485] "temp"
    unknown call_tmp[744559] "expr temp" "maybe param" "maybe type" "temp"
    (744562 'move' call_tmp[744559](467496 '.v' this[304299] c"eltType"))
    unknown call_tmp[744564] "expr temp" "maybe param" "maybe type" "temp"
    (744567 'move' call_tmp[744564](467488 call _dummyFieldType call_tmp[744559]))
    (467490 'default init var' tmp[467485] call_tmp[744564])
    (467492 '.=' this[304299] c"_dummyFieldToForceBorrowChecking" tmp[467485])
    (491066 'end of statement')
    (298846 call(405339 call (partial) _commonInitFromIterable _mt[243] this[304299]) other[298754])
    (539219 return _void[55])
  }
  function list[304289](?).init[298860](arg _mt[304305]:_MT[238], ref arg this[304303]:list[304289](?), arg other[298857]:range[64319](?), param arg parSafe[298863] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744571] "expr temp" "maybe param" "maybe type" "temp"
    (744574 'move' call_tmp[744571](467505 'query' other[298857] 1))
    (298869 call _checkType call_tmp[744571])
    (491068 'end of statement')
    unknown tmp[467512] "temp" "type variable"
    (467514 'move' tmp[467512](467508 'query' other[298857] 1))
    (467516 'init field' this[304303] c"eltType" tmp[467512])
    (491069 'end of statement')
    unknown tmp[467520] "param" "temp"
    (467522 'init var' tmp[467520] parSafe[298863])
    (467524 'init field' this[304303] c"parSafe" tmp[467520])
    (491070 'end of statement')
    unknown call_tmp[744576] "expr temp" "maybe param" "maybe type" "temp"
    (744579 'move' call_tmp[744576](298891 call isBoundedRange other[298857]))
    unknown call_tmp[744581] "expr temp" "maybe param" "maybe type" "temp"
    (744584 'move' call_tmp[744581](298892 call ! call_tmp[744576]))
    unknown call_tmp[744586] "expr temp" "maybe param" "maybe type" "temp"
    (744589 'move' call_tmp[744586](298964 call _cond_test call_tmp[744581]))
    if call_tmp[744586]
    {
      unknown call_tmp[744591] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744594 'move' call_tmp[744591](298895 'typeof' this[304303]))
      unknown call_tmp[744596] "maybe param" "maybe type" "temp"
      (744599 'move' call_tmp[744596](298897 call _cast string[26] call_tmp[744591]))
      unknown e[298899] "dead at end of block" "param"
      (549959 'init var' e[298899] call_tmp[744596])
      (298902 'end of statement')
      unknown call_tmp[744601] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744604 'move' call_tmp[744601](298905 'typeof' other[298857]))
      unknown call_tmp[744606] "maybe param" "maybe type" "temp"
      (744609 'move' call_tmp[744606](298907 call _cast string[26] call_tmp[744601]))
      unknown f[298909] "dead at end of block" "param"
      (549961 'init var' f[298909] call_tmp[744606])
      (298912 'end of statement')
      unknown call_tmp[744611] "expr temp" "maybe param" "maybe type" "temp"
      (744614 'move' call_tmp[744611](298931 call + "Cannot init " e[298899]))
      unknown call_tmp[744616] "expr temp" "maybe param" "maybe type" "temp"
      (744619 'move' call_tmp[744616](298950 call + call_tmp[744611] " from unbounded "))
      unknown call_tmp[744621] "maybe param" "maybe type" "temp"
      (744624 'move' call_tmp[744621](298953 call + call_tmp[744616] f[298909]))
      unknown msg[298955] "dead at end of block" "param"
      (549963 'init var' msg[298955] call_tmp[744621])
      (298958 'end of statement')
      (298962 call compilerError msg[298955])
    }
    unknown tmp[467529] "temp"
    (467531 'init var' tmp[467529] 0)
    (467533 '.=' this[304303] c"_size" tmp[467529])
    (491072 'end of statement')
    unknown tmp[467545] "temp"
    unknown tmp[580907] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580908] "maybe param" "temp"
    unknown call_tmp[744626] "expr temp" "maybe param" "maybe type" "temp"
    (744629 'move' call_tmp[744626](467553 '.v' this[304303] c"parSafe"))
    (580913 'move' tmp[580908](580911 call _cond_test call_tmp[744626]))
    if tmp[580908]
    {
      unknown tmp[580915] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580917 'move' tmp[580915](748313 'new' _LockWrapper[405313](?)))
      (580922 'move' tmp[580907](580919 '_paramFoldLogical' tmp[580908] tmp[580915]))
    }
    {
      (580927 'move' tmp[580907](580924 '_paramFoldLogical' tmp[580908] none[57]))
    }
    (467547 'init var' tmp[467545] tmp[580907])
    (467549 '.=' this[304303] c"_lock$" tmp[467545])
    (491073 'end of statement')
    unknown call_tmp[744631] "expr temp" "maybe param" "maybe type" "temp"
    (744634 'move' call_tmp[744631](467570 '.v' this[304303] c"eltType"))
    unknown call_tmp[744636] "expr temp" "maybe param" "maybe type" "temp"
    (744639 'move' call_tmp[744636](467562 call _ddata[11696](?) call_tmp[744631]))
    unknown call_tmp[744641] "maybe param" "maybe type" "temp"
    (744644 'move' call_tmp[744641](467560 call _ddata[11696](?) call_tmp[744636]))
    unknown tmp[467557] "temp"
    (467564 'init var' tmp[467557] nil[44] call_tmp[744641])
    (467566 'init field' this[304303] c"_arrays" tmp[467557])
    (491074 'end of statement')
    unknown tmp[467574] "temp"
    (467576 'init var' tmp[467574] 0)
    (467578 '.=' this[304303] c"_arrayCapacity" tmp[467574])
    (491075 'end of statement')
    unknown tmp[467583] "temp"
    (467585 'init var' tmp[467583] 0)
    (467587 '.=' this[304303] c"_totalCapacity" tmp[467583])
    (491076 'end of statement')
    unknown tmp[467591] "temp"
    unknown call_tmp[744646] "expr temp" "maybe param" "maybe type" "temp"
    (744649 'move' call_tmp[744646](467602 '.v' this[304303] c"eltType"))
    unknown call_tmp[744651] "expr temp" "maybe param" "maybe type" "temp"
    (744654 'move' call_tmp[744651](467594 call _dummyFieldType call_tmp[744646]))
    (467596 'default init var' tmp[467591] call_tmp[744651])
    (467598 '.=' this[304303] c"_dummyFieldToForceBorrowChecking" tmp[467591])
    (491077 'end of statement')
    (298978 call(405354 call (partial) _commonInitFromIterable _mt[243] this[304303]) other[298857])
    (539221 return _void[55])
  }
  function list[304289](?).init=[298997](arg _mt[304309]:_MT[238], ref arg this[304307]:list[304289](?), arg other[298994]:list[304289](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744658] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744661 'move' call_tmp[744658](299001 'typeof' this[304307]))
    unknown call_tmp[744665] "expr temp" "maybe param" "maybe type" "temp"
    (744668 'move' call_tmp[744665](299002 call eltType _mt[243] call_tmp[744658]))
    unknown call_tmp[744670] "expr temp" "maybe param" "maybe type" "temp"
    (744673 'move' call_tmp[744670](299006 call isCopyableType call_tmp[744665]))
    unknown call_tmp[744675] "expr temp" "maybe param" "maybe type" "temp"
    (744678 'move' call_tmp[744675](299007 call ! call_tmp[744670]))
    unknown call_tmp[744680] "expr temp" "maybe param" "maybe type" "temp"
    (744683 'move' call_tmp[744680](299017 call _cond_test call_tmp[744675]))
    if call_tmp[744680]
    {
      unknown call_tmp[744685] "expr temp" "maybe param" "maybe type" "temp"
      (744688 'move' call_tmp[744685](299012 call + "Cannot copy list with element type that " "cannot be copied"))
      (299015 call compilerError call_tmp[744685])
    }
    unknown tmp[467626] "temp" "type variable"
    unknown call_tmp[744690] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744693 'move' call_tmp[744690](299028 'typeof' this[304307]))
    (467628 'move' tmp[467626](299029 call eltType _mt[243] call_tmp[744690]))
    (467630 'init field' this[304307] c"eltType" tmp[467626])
    (491080 'end of statement')
    unknown call_tmp[744697] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744700 'move' call_tmp[744697](299040 'typeof' this[304307]))
    unknown call_tmp[744704] "maybe param" "maybe type" "temp"
    (744707 'move' call_tmp[744704](299041 call parSafe _mt[243] call_tmp[744697]))
    unknown tmp[467634] "param" "temp"
    (467636 'init var' tmp[467634] call_tmp[744704])
    (467638 'init field' this[304307] c"parSafe" tmp[467634])
    (491081 'end of statement')
    unknown tmp[467643] "temp"
    (467645 'init var' tmp[467643] 0)
    (467647 '.=' this[304307] c"_size" tmp[467643])
    (491082 'end of statement')
    unknown tmp[467659] "temp"
    unknown tmp[580934] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580935] "maybe param" "temp"
    unknown call_tmp[744709] "expr temp" "maybe param" "maybe type" "temp"
    (744712 'move' call_tmp[744709](467667 '.v' this[304307] c"parSafe"))
    (580940 'move' tmp[580935](580938 call _cond_test call_tmp[744709]))
    if tmp[580935]
    {
      unknown tmp[580942] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580944 'move' tmp[580942](748314 'new' _LockWrapper[405313](?)))
      (580949 'move' tmp[580934](580946 '_paramFoldLogical' tmp[580935] tmp[580942]))
    }
    {
      (580954 'move' tmp[580934](580951 '_paramFoldLogical' tmp[580935] none[57]))
    }
    (467661 'init var' tmp[467659] tmp[580934])
    (467663 '.=' this[304307] c"_lock$" tmp[467659])
    (491083 'end of statement')
    unknown call_tmp[744714] "expr temp" "maybe param" "maybe type" "temp"
    (744717 'move' call_tmp[744714](467684 '.v' this[304307] c"eltType"))
    unknown call_tmp[744719] "expr temp" "maybe param" "maybe type" "temp"
    (744722 'move' call_tmp[744719](467676 call _ddata[11696](?) call_tmp[744714]))
    unknown call_tmp[744724] "maybe param" "maybe type" "temp"
    (744727 'move' call_tmp[744724](467674 call _ddata[11696](?) call_tmp[744719]))
    unknown tmp[467671] "temp"
    (467678 'init var' tmp[467671] nil[44] call_tmp[744724])
    (467680 'init field' this[304307] c"_arrays" tmp[467671])
    (491084 'end of statement')
    unknown tmp[467688] "temp"
    (467690 'init var' tmp[467688] 0)
    (467692 '.=' this[304307] c"_arrayCapacity" tmp[467688])
    (491085 'end of statement')
    unknown tmp[467697] "temp"
    (467699 'init var' tmp[467697] 0)
    (467701 '.=' this[304307] c"_totalCapacity" tmp[467697])
    (491086 'end of statement')
    unknown tmp[467705] "temp"
    unknown call_tmp[744729] "expr temp" "maybe param" "maybe type" "temp"
    (744732 'move' call_tmp[744729](467716 '.v' this[304307] c"eltType"))
    unknown call_tmp[744734] "expr temp" "maybe param" "maybe type" "temp"
    (744737 'move' call_tmp[744734](467708 call _dummyFieldType call_tmp[744729]))
    (467710 'default init var' tmp[467705] call_tmp[744734])
    (467712 '.=' this[304307] c"_dummyFieldToForceBorrowChecking" tmp[467705])
    (491087 'end of statement')
    (299057 call(405364 call (partial) _commonInitFromIterable _mt[243] this[304307]) other[298994])
    (539223 return _void[55])
  }
  where {
    unknown call_tmp[744741] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744744 'move' call_tmp[744741](467613 'typeof' this[304307]))
    unknown call_tmp[744748] "expr temp" "maybe param" "maybe type" "temp"
    (744751 'move' call_tmp[744748](467612 call eltType _mt[243] call_tmp[744741]))
    unknown call_tmp[744753] "expr temp" "maybe param" "maybe type" "temp"
    (744756 'move' call_tmp[744753](467608 'query' other[298994] 1))
    unknown call_tmp[744758] "expr temp" "maybe param" "maybe type" "temp"
    (744761 'move' call_tmp[744758](467616 call == call_tmp[744748] call_tmp[744753]))
    (467620 call & 1 call_tmp[744758])
  }
  function list[304289](?).init=[299076](arg _mt[304313]:_MT[238], ref arg this[304311]:list[304289](?), arg other[299073]:_array[133594](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744763] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744766 'move' call_tmp[744763](299080 'typeof' this[304311]))
    unknown call_tmp[744770] "expr temp" "maybe param" "maybe type" "temp"
    (744773 'move' call_tmp[744770](299081 call eltType _mt[243] call_tmp[744763]))
    unknown call_tmp[744775] "expr temp" "maybe param" "maybe type" "temp"
    (744778 'move' call_tmp[744775](299085 call isCopyableType call_tmp[744770]))
    unknown call_tmp[744780] "expr temp" "maybe param" "maybe type" "temp"
    (744783 'move' call_tmp[744780](299086 call ! call_tmp[744775]))
    unknown call_tmp[744785] "expr temp" "maybe param" "maybe type" "temp"
    (744788 'move' call_tmp[744785](299128 call _cond_test call_tmp[744780]))
    if call_tmp[744785]
    {
      unknown call_tmp[744790] "expr temp" "maybe param" "maybe type" "temp"
      (744793 'move' call_tmp[744790](299123 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (299126 call compilerError call_tmp[744790])
    }
    unknown tmp[467731] "temp" "type variable"
    unknown call_tmp[744795] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744798 'move' call_tmp[744795](299139 'typeof' this[304311]))
    (467733 'move' tmp[467731](299140 call eltType _mt[243] call_tmp[744795]))
    (467735 'init field' this[304311] c"eltType" tmp[467731])
    (491090 'end of statement')
    unknown call_tmp[744802] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744805 'move' call_tmp[744802](299151 'typeof' this[304311]))
    unknown call_tmp[744809] "maybe param" "maybe type" "temp"
    (744812 'move' call_tmp[744809](299152 call parSafe _mt[243] call_tmp[744802]))
    unknown tmp[467739] "param" "temp"
    (467741 'init var' tmp[467739] call_tmp[744809])
    (467743 'init field' this[304311] c"parSafe" tmp[467739])
    (491091 'end of statement')
    unknown tmp[467748] "temp"
    (467750 'init var' tmp[467748] 0)
    (467752 '.=' this[304311] c"_size" tmp[467748])
    (491092 'end of statement')
    unknown tmp[467764] "temp"
    unknown tmp[580961] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580962] "maybe param" "temp"
    unknown call_tmp[744814] "expr temp" "maybe param" "maybe type" "temp"
    (744817 'move' call_tmp[744814](467772 '.v' this[304311] c"parSafe"))
    (580967 'move' tmp[580962](580965 call _cond_test call_tmp[744814]))
    if tmp[580962]
    {
      unknown tmp[580969] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580971 'move' tmp[580969](748315 'new' _LockWrapper[405313](?)))
      (580976 'move' tmp[580961](580973 '_paramFoldLogical' tmp[580962] tmp[580969]))
    }
    {
      (580981 'move' tmp[580961](580978 '_paramFoldLogical' tmp[580962] none[57]))
    }
    (467766 'init var' tmp[467764] tmp[580961])
    (467768 '.=' this[304311] c"_lock$" tmp[467764])
    (491093 'end of statement')
    unknown call_tmp[744819] "expr temp" "maybe param" "maybe type" "temp"
    (744822 'move' call_tmp[744819](467789 '.v' this[304311] c"eltType"))
    unknown call_tmp[744824] "expr temp" "maybe param" "maybe type" "temp"
    (744827 'move' call_tmp[744824](467781 call _ddata[11696](?) call_tmp[744819]))
    unknown call_tmp[744829] "maybe param" "maybe type" "temp"
    (744832 'move' call_tmp[744829](467779 call _ddata[11696](?) call_tmp[744824]))
    unknown tmp[467776] "temp"
    (467783 'init var' tmp[467776] nil[44] call_tmp[744829])
    (467785 'init field' this[304311] c"_arrays" tmp[467776])
    (491094 'end of statement')
    unknown tmp[467793] "temp"
    (467795 'init var' tmp[467793] 0)
    (467797 '.=' this[304311] c"_arrayCapacity" tmp[467793])
    (491095 'end of statement')
    unknown tmp[467802] "temp"
    (467804 'init var' tmp[467802] 0)
    (467806 '.=' this[304311] c"_totalCapacity" tmp[467802])
    (491096 'end of statement')
    unknown tmp[467810] "temp"
    unknown call_tmp[744834] "expr temp" "maybe param" "maybe type" "temp"
    (744837 'move' call_tmp[744834](467821 '.v' this[304311] c"eltType"))
    unknown call_tmp[744839] "expr temp" "maybe param" "maybe type" "temp"
    (744842 'move' call_tmp[744839](467813 call _dummyFieldType call_tmp[744834]))
    (467815 'default init var' tmp[467810] call_tmp[744839])
    (467817 '.=' this[304311] c"_dummyFieldToForceBorrowChecking" tmp[467810])
    (491097 'end of statement')
    (299168 call(405373 call (partial) _commonInitFromIterable _mt[243] this[304311]) other[299073])
    (539225 return _void[55])
  }
  where {
    unknown call_tmp[744846] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744849 'move' call_tmp[744846](299067 'typeof' this[304311]))
    unknown call_tmp[744853] "expr temp" "maybe param" "maybe type" "temp"
    (744856 'move' call_tmp[744853](299068 call eltType _mt[243] call_tmp[744846]))
    unknown call_tmp[744860] "expr temp" "maybe param" "maybe type" "temp"
    (744863 'move' call_tmp[744860](467725 call eltType _mt[243] other[299073]))
    unknown call_tmp[744865] "expr temp" "maybe param" "maybe type" "temp"
    (744868 'move' call_tmp[744865](467729 call == call_tmp[744853] call_tmp[744860]))
    (467723 call & 1 call_tmp[744865])
  }
  function list[304289](?).init=[299189](arg _mt[304317]:_MT[238], ref arg this[304315]:list[304289](?), arg other[299186]:range[64319](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467848] "temp" "type variable"
    unknown call_tmp[744870] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744873 'move' call_tmp[744870](299196 'typeof' this[304315]))
    (467850 'move' tmp[467848](299197 call eltType _mt[243] call_tmp[744870]))
    (467852 'init field' this[304315] c"eltType" tmp[467848])
    (491099 'end of statement')
    unknown call_tmp[744877] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744880 'move' call_tmp[744877](299209 'typeof' this[304315]))
    unknown call_tmp[744884] "maybe param" "maybe type" "temp"
    (744887 'move' call_tmp[744884](299210 call parSafe _mt[243] call_tmp[744877]))
    unknown tmp[467856] "param" "temp"
    (467858 'init var' tmp[467856] call_tmp[744884])
    (467860 'init field' this[304315] c"parSafe" tmp[467856])
    (491100 'end of statement')
    unknown call_tmp[744889] "expr temp" "maybe param" "maybe type" "temp"
    (744892 'move' call_tmp[744889](299219 call isBoundedRange other[299186]))
    unknown call_tmp[744894] "expr temp" "maybe param" "maybe type" "temp"
    (744897 'move' call_tmp[744894](299220 call ! call_tmp[744889]))
    unknown call_tmp[744899] "expr temp" "maybe param" "maybe type" "temp"
    (744902 'move' call_tmp[744899](299260 call _cond_test call_tmp[744894]))
    if call_tmp[744899]
    {
      unknown call_tmp[744904] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744907 'move' call_tmp[744904](299223 'typeof' this[304315]))
      unknown call_tmp[744909] "maybe param" "maybe type" "temp"
      (744912 'move' call_tmp[744909](299225 call _cast string[26] call_tmp[744904]))
      unknown e[299227] "dead at end of block" "param"
      (549965 'init var' e[299227] call_tmp[744909])
      (299230 'end of statement')
      unknown call_tmp[744914] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744917 'move' call_tmp[744914](299233 'typeof' other[299186]))
      unknown call_tmp[744919] "maybe param" "maybe type" "temp"
      (744922 'move' call_tmp[744919](299235 call _cast string[26] call_tmp[744914]))
      unknown f[299237] "dead at end of block" "param"
      (549967 'init var' f[299237] call_tmp[744919])
      (299240 'end of statement')
      unknown call_tmp[744924] "expr temp" "maybe param" "maybe type" "temp"
      (744927 'move' call_tmp[744924](299243 call + "Cannot init " e[299227]))
      unknown call_tmp[744929] "expr temp" "maybe param" "maybe type" "temp"
      (744932 'move' call_tmp[744929](299246 call + call_tmp[744924] " from unbounded "))
      unknown call_tmp[744934] "maybe param" "maybe type" "temp"
      (744937 'move' call_tmp[744934](299249 call + call_tmp[744929] f[299237]))
      unknown msg[299251] "dead at end of block" "param"
      (549969 'init var' msg[299251] call_tmp[744934])
      (299254 'end of statement')
      (299258 call compilerError msg[299251])
    }
    unknown tmp[467865] "temp"
    (467867 'init var' tmp[467865] 0)
    (467869 '.=' this[304315] c"_size" tmp[467865])
    (491102 'end of statement')
    unknown tmp[467881] "temp"
    unknown tmp[580988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580989] "maybe param" "temp"
    unknown call_tmp[744939] "expr temp" "maybe param" "maybe type" "temp"
    (744942 'move' call_tmp[744939](467889 '.v' this[304315] c"parSafe"))
    (580994 'move' tmp[580989](580992 call _cond_test call_tmp[744939]))
    if tmp[580989]
    {
      unknown tmp[580996] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580998 'move' tmp[580996](748316 'new' _LockWrapper[405313](?)))
      (581003 'move' tmp[580988](581000 '_paramFoldLogical' tmp[580989] tmp[580996]))
    }
    {
      (581008 'move' tmp[580988](581005 '_paramFoldLogical' tmp[580989] none[57]))
    }
    (467883 'init var' tmp[467881] tmp[580988])
    (467885 '.=' this[304315] c"_lock$" tmp[467881])
    (491103 'end of statement')
    unknown call_tmp[744944] "expr temp" "maybe param" "maybe type" "temp"
    (744947 'move' call_tmp[744944](467906 '.v' this[304315] c"eltType"))
    unknown call_tmp[744949] "expr temp" "maybe param" "maybe type" "temp"
    (744952 'move' call_tmp[744949](467898 call _ddata[11696](?) call_tmp[744944]))
    unknown call_tmp[744954] "maybe param" "maybe type" "temp"
    (744957 'move' call_tmp[744954](467896 call _ddata[11696](?) call_tmp[744949]))
    unknown tmp[467893] "temp"
    (467900 'init var' tmp[467893] nil[44] call_tmp[744954])
    (467902 'init field' this[304315] c"_arrays" tmp[467893])
    (491104 'end of statement')
    unknown tmp[467910] "temp"
    (467912 'init var' tmp[467910] 0)
    (467914 '.=' this[304315] c"_arrayCapacity" tmp[467910])
    (491105 'end of statement')
    unknown tmp[467919] "temp"
    (467921 'init var' tmp[467919] 0)
    (467923 '.=' this[304315] c"_totalCapacity" tmp[467919])
    (491106 'end of statement')
    unknown tmp[467927] "temp"
    unknown call_tmp[744959] "expr temp" "maybe param" "maybe type" "temp"
    (744962 'move' call_tmp[744959](467938 '.v' this[304315] c"eltType"))
    unknown call_tmp[744964] "expr temp" "maybe param" "maybe type" "temp"
    (744967 'move' call_tmp[744964](467930 call _dummyFieldType call_tmp[744959]))
    (467932 'default init var' tmp[467927] call_tmp[744964])
    (467934 '.=' this[304315] c"_dummyFieldToForceBorrowChecking" tmp[467927])
    (491107 'end of statement')
    (299274 call(405388 call (partial) _commonInitFromIterable _mt[243] this[304315]) other[299186])
    (539227 return _void[55])
  }
  where {
    unknown call_tmp[744971] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744974 'move' call_tmp[744971](467832 'typeof' this[304315]))
    unknown call_tmp[744978] "expr temp" "maybe param" "maybe type" "temp"
    (744981 'move' call_tmp[744978](467831 call eltType _mt[243] call_tmp[744971]))
    unknown call_tmp[744983] "expr temp" "maybe param" "maybe type" "temp"
    (744986 'move' call_tmp[744983](467827 'query' other[299186] 1))
    unknown call_tmp[744988] "expr temp" "maybe param" "maybe type" "temp"
    (744991 'move' call_tmp[744988](467835 call == call_tmp[744978] call_tmp[744983]))
    (467839 call & 1 call_tmp[744988])
  }
  function list[304289](?)._commonInitFromIterable[299282](arg _mt[304321]:_MT[238], arg this[304319]:list[304289](?), arg iterable[299280]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299295 call(299291 call (partial) _firstTimeInitializeArrays _mt[243] this[304319]))
    (491109 'end of statement')
    {
      unknown _indexOfInterest[299305] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299306] "expr temp" "temp"
      (299315 'move' _iterator[299306](299313 call _getIterator iterable[299280]))
      Defer
      {
        {
          (299331 call _freeIterator _iterator[299306])
        }
      }
      { scopeless type
        (299320 'move' _indexOfInterest[299305](299317 call iteratorIndex _iterator[299306]))
      }
      ForLoop[299307]
      {
        unknown x[299324] "index var" "insert auto destroy"
        (491111 'end of statement')
        (299326 'move' x[299324] _indexOfInterest[299305])
        (491112 'end of statement' x[299324])
        (299303 call(405396 call (partial) append _mt[243] this[304319]) x[299324])
        (491114 'end of statement' x[299324])
        label _continueLabel[299310]
        _indexOfInterest[299305]
        _iterator[299306]
      }
      label _breakLabel[299311]
    }
    (539229 return _void[55])
  }
  {
    (299288 call <(299285 'lifetime_of' this[304319])(299287 'lifetime_of' iterable[299280]))
  }
  function list[304289](?)._firstTimeInitializeArrays[299343](arg _mt[304325]:_MT[238], arg this[304323]:list[304289](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744999] "expr temp" "maybe param" "maybe type" "temp"
    (745002 'move' call_tmp[744999](405404 call _arrays _mt[243] this[304323]))
    unknown call_tmp[745004] "expr temp" "maybe param" "maybe type" "temp"
    (745007 'move' call_tmp[745004](299348 call == call_tmp[744999] nil[44]))
    (299351 call _sanity call_tmp[745004])
    (491116 'end of statement')
    unknown call_tmp[745011] "expr temp" "maybe param" "maybe type" "temp"
    (745014 'move' call_tmp[745011](405411 call _totalCapacity _mt[243] this[304323]))
    unknown call_tmp[745016] "expr temp" "maybe param" "maybe type" "temp"
    (745019 'move' call_tmp[745016](299357 call == call_tmp[745011] 0))
    (299360 call _sanity call_tmp[745016])
    (491117 'end of statement')
    unknown call_tmp[745023] "expr temp" "maybe param" "maybe type" "temp"
    (745026 'move' call_tmp[745023](405418 call _size _mt[243] this[304323]))
    unknown call_tmp[745028] "expr temp" "maybe param" "maybe type" "temp"
    (745031 'move' call_tmp[745028](299365 call == call_tmp[745023] 0))
    (299368 call _sanity call_tmp[745028])
    (491118 'end of statement')
    unknown call_tmp[745035] "expr temp" "maybe param" "maybe type" "temp"
    (745038 'move' call_tmp[745035](405423 call _arrays _mt[243] this[304323]))
    unknown call_tmp[745042] "expr temp" "maybe param" "maybe type" "temp"
    (745045 'move' call_tmp[745042](299374 call(405429 call (partial) _makeBlockArray _mt[243] this[304323]) _initialArrayCapacity[298329]))
    (299375 call = call_tmp[745035] call_tmp[745042])
    (491119 'end of statement')
    unknown call_tmp[745049] "expr temp" "maybe param" "maybe type" "temp"
    (745052 'move' call_tmp[745049](405437 call _arrayCapacity _mt[243] this[304323]))
    (299380 call = call_tmp[745049] _initialArrayCapacity[298329])
    (491120 'end of statement')
    unknown call_tmp[745056] "expr temp" "maybe param" "maybe type" "temp"
    (745059 'move' call_tmp[745056](299386 call(405443 call (partial) _arrays _mt[243] this[304323]) 0))
    unknown call_tmp[745063] "expr temp" "maybe param" "maybe type" "temp"
    (745066 'move' call_tmp[745063](299390 call(405449 call (partial) _makeArray _mt[243] this[304323]) _initialCapacity[298324]))
    (299391 call = call_tmp[745056] call_tmp[745063])
    (491121 'end of statement')
    unknown call_tmp[745070] "expr temp" "maybe param" "maybe type" "temp"
    (745073 'move' call_tmp[745070](405455 call _totalCapacity _mt[243] this[304323]))
    (299396 call = call_tmp[745070] _initialCapacity[298324])
    (539231 return _void[55])
  }
  function list[304289](?).deinit[299403](arg _mt[304329]:_MT[238], arg this[304327]:list[304289](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299407 call(405462 call (partial) _fireAllDestructors _mt[243] this[304327]))
    (491123 'end of statement')
    (299412 call(405468 call (partial) _freeAllArrays _mt[243] this[304327]))
    (491124 'end of statement')
    unknown call_tmp[745081] "expr temp" "maybe param" "maybe type" "temp"
    (745084 'move' call_tmp[745081](405473 call _totalCapacity _mt[243] this[304327]))
    unknown call_tmp[745086] "expr temp" "maybe param" "maybe type" "temp"
    (745089 'move' call_tmp[745086](299417 call == call_tmp[745081] 0))
    (299420 call _sanity call_tmp[745086])
    (491125 'end of statement')
    unknown call_tmp[745093] "expr temp" "maybe param" "maybe type" "temp"
    (745096 'move' call_tmp[745093](405478 call _size _mt[243] this[304327]))
    unknown call_tmp[745098] "expr temp" "maybe param" "maybe type" "temp"
    (745101 'move' call_tmp[745098](299425 call == call_tmp[745093] 0))
    (299428 call _sanity call_tmp[745098])
    (491126 'end of statement')
    unknown call_tmp[745105] "expr temp" "maybe param" "maybe type" "temp"
    (745108 'move' call_tmp[745105](405483 call _arrays _mt[243] this[304327]))
    unknown call_tmp[745110] "expr temp" "maybe param" "maybe type" "temp"
    (745113 'move' call_tmp[745110](299433 call == call_tmp[745105] nil[44]))
    (299436 call _sanity call_tmp[745110])
    (539233 return _void[55])
  }
  function list[304289](?)._destroy[299446](arg _mt[304333]:_MT[238], arg this[304331]:list[304289](?), ref arg item[299443] :
  (405488 call eltType _mt[243] this[304331])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299451 call chpl__autoDestroy item[299443])
    (539235 return _void[55])
  }
  function list[304289](?)._move[299463](arg _mt[304337]:_MT[238], arg this[304335]:list[304289](?), ref arg src[299460]:_any[178](?), ref arg dst[299466] :
  (467941 'typeof' src[299460])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299479 '=' dst[299466] src[299460])
    (539237 return _void[55])
  }
  {
    (299473 call ==(299470 'lifetime_of' src[299460])(299472 'lifetime_of' dst[299466]))
  }
  function list[304289](?)._getArrayCapacity[299491](arg _mt[304341]:_MT[238], arg this[304339]:list[304289](?), arg array[299488]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539241] "RVV" "temp"
    unknown call_tmp[745117] "expr temp" "maybe param" "maybe type" "temp"
    (745120 'move' call_tmp[745117](299498 call log2 _initialCapacity[298324]))
    unknown call_tmp[745122] "maybe param" "maybe type" "temp"
    (745125 'move' call_tmp[745122](299499 call + array[299488] call_tmp[745117]))
    const exp[299501] "dead at end of block" "const" "insert auto destroy"
    (549971 'init var' exp[299501] call_tmp[745122])
    (299504 'end of statement')
    unknown call_tmp[745127] "maybe param" "maybe type" "temp"
    (745130 'move' call_tmp[745127](299508 call ** 2 exp[299501]))
    const result[299510] "dead at end of block" "const" "insert auto destroy"
    (549973 'init var' result[299510] call_tmp[745127])
    (299513 'end of statement' exp[299501])
    (539247 'move' ret[539241](539246 'coerce' result[299510] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539239] _end__getArrayCapacity[539239]
    (491131 'end of statement' result[299510])
    label _end__getArrayCapacity[539239]
    (539243 return ret[539241])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?)._getArrayIdx[299526](arg _mt[304345]:_MT[238], arg this[304343]:list[304289](?), arg zpos[299523]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539253] "RVV" "temp"
    unknown call_tmp[745132] "maybe param" "maybe type" "temp"
    (745135 'move' call_tmp[745132](299531 call + zpos[299523] _initialCapacity[298324]))
    const adj[299533] "dead at end of block" "const" "insert auto destroy"
    (549975 'init var' adj[299533] call_tmp[745132])
    (299536 'end of statement')
    unknown call_tmp[745137] "expr temp" "maybe param" "maybe type" "temp"
    (745140 'move' call_tmp[745137](299541 call log2 adj[299533]))
    unknown call_tmp[745142] "expr temp" "maybe param" "maybe type" "temp"
    (745145 'move' call_tmp[745142](299545 call log2 _initialCapacity[298324]))
    unknown call_tmp[745147] "maybe param" "maybe type" "temp"
    (745150 'move' call_tmp[745147](299546 call - call_tmp[745137] call_tmp[745142]))
    const result[299548] "dead at end of block" "const" "insert auto destroy"
    (549977 'init var' result[299548] call_tmp[745147])
    (299551 'end of statement' adj[299533])
    (539259 'move' ret[539253](539258 'coerce' result[299548] int(64)[13]))
    gotoReturn _end__getArrayIdx[539251] _end__getArrayIdx[539251]
    (491134 'end of statement' result[299548])
    label _end__getArrayIdx[539251]
    (539255 return ret[539253])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?)._getLastArrayIdx[299560](arg _mt[304349]:_MT[238], arg this[304347]:list[304289](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539265] "RVV" "temp"
    unknown call_tmp[745156] "expr temp" "maybe param" "maybe type" "temp"
    (745159 'move' call_tmp[745156](405514 call _size _mt[243] this[304347]))
    unknown call_tmp[745161] "expr temp" "maybe param" "maybe type" "temp"
    (745164 'move' call_tmp[745161](299566 call - call_tmp[745156] 1))
    unknown call_tmp[745166] "maybe param" "maybe type" "temp"
    (745169 'move' call_tmp[745166](299569 call(405509 call (partial) _getArrayIdx _mt[243] this[304347]) call_tmp[745161]))
    const result[299570] "dead at end of block" "const" "insert auto destroy"
    (549979 'init var' result[299570] call_tmp[745166])
    (299573 'end of statement')
    unknown call_tmp[745171] "expr temp" "maybe param" "maybe type" "temp"
    (745174 'move' call_tmp[745171](299578 call >= result[299570] 0))
    (299581 call _sanity call_tmp[745171])
    (491136 'end of statement' result[299570])
    (539271 'move' ret[539265](539270 'coerce' result[299570] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539263] _end__getLastArrayIdx[539263]
    (491138 'end of statement' result[299570])
    label _end__getLastArrayIdx[539263]
    (539267 return ret[539265])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?)._getItemIdx[299595](arg _mt[304353]:_MT[238], arg this[304351]:list[304289](?), arg zpos[299592]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539277] "RVV" "temp"
    unknown call_tmp[745176] "maybe param" "maybe type" "temp"
    (745179 'move' call_tmp[745176](299600 call + zpos[299592] _initialCapacity[298324]))
    const adj[299602] "dead at end of block" "const" "insert auto destroy"
    (549981 'init var' adj[299602] call_tmp[745176])
    (299605 'end of statement')
    unknown call_tmp[745181] "expr temp" "maybe param" "maybe type" "temp"
    (745184 'move' call_tmp[745181](299612 call log2 adj[299602]))
    unknown call_tmp[745186] "expr temp" "maybe param" "maybe type" "temp"
    (745189 'move' call_tmp[745186](299613 call << 1 call_tmp[745181]))
    unknown call_tmp[745191] "maybe param" "maybe type" "temp"
    (745194 'move' call_tmp[745191](299615 call ^ adj[299602] call_tmp[745186]))
    const result[299617] "dead at end of block" "const" "insert auto destroy"
    (549983 'init var' result[299617] call_tmp[745191])
    (299620 'end of statement' adj[299602] adj[299602])
    (539283 'move' ret[539277](539282 'coerce' result[299617] int(64)[13]))
    gotoReturn _end__getItemIdx[539275] _end__getItemIdx[539275]
    (491142 'end of statement' result[299617])
    label _end__getItemIdx[539275]
    (539279 return ret[539277])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?)._getRef[299633](arg _mt[304357]:_MT[238], const  ref arg this[304355]:list[304289](?), arg idx[299630]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539289] "RVV" "temp"
    unknown tmp[434933] "maybe param" "temp"
    (434944 'move' tmp[434933](299638 call >= idx[299630] 0))
    unknown call_tmp[745196] "expr temp" "maybe param" "maybe type" "temp"
    (745199 'move' call_tmp[745196](434946 call _cond_invalid tmp[434933]))
    if call_tmp[745196]
    {
      (434949 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581015] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581016] "maybe param" "temp"
    unknown call_tmp[745201] "expr temp" "maybe param" "maybe type" "temp"
    (745204 'move' call_tmp[745201](434934 call isTrue tmp[434933]))
    (581021 'move' tmp[581016](581019 call _cond_test call_tmp[745201]))
    if tmp[581016]
    {
      unknown tmp[581023] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745208] "expr temp" "maybe param" "maybe type" "temp"
      (745211 'move' call_tmp[745208](405528 call _totalCapacity _mt[243] this[304355]))
      unknown call_tmp[745213] "expr temp" "maybe param" "maybe type" "temp"
      (745216 'move' call_tmp[745213](299642 call < idx[299630] call_tmp[745208]))
      (581025 'move' tmp[581023](434937 call isTrue call_tmp[745213]))
      (581030 'move' tmp[581015](581027 '_paramFoldLogical' tmp[581016] tmp[581023]))
    }
    {
      (581035 'move' tmp[581015](581032 '_paramFoldLogical' tmp[581016] 0))
    }
    (299647 call _sanity tmp[581015])
    (491145 'end of statement')
    unknown call_tmp[745220] "maybe param" "maybe type" "temp"
    (745223 'move' call_tmp[745220](299653 call(405532 call (partial) _getArrayIdx _mt[243] this[304355]) idx[299630]))
    const arrayIdx[299654] "dead at end of block" "const" "insert auto destroy"
    (549985 'init var' arrayIdx[299654] call_tmp[745220])
    (299657 'end of statement')
    unknown call_tmp[745227] "maybe param" "maybe type" "temp"
    (745230 'move' call_tmp[745227](299661 call(405539 call (partial) _getItemIdx _mt[243] this[304355]) idx[299630]))
    const itemIdx[299662] "dead at end of block" "const" "insert auto destroy"
    (549987 'init var' itemIdx[299662] call_tmp[745227])
    (299665 'end of statement')
    unknown call_tmp[745234] "maybe param" "maybe type" "temp"
    (745237 'move' call_tmp[745234](299669 call(405545 call (partial) _arrays _mt[243] this[304355]) arrayIdx[299654]))
    const array[299670] "dead at end of block" "const" "insert auto destroy"
    (549989 'init var' array[299670] call_tmp[745234])
    (299673 'end of statement')
    unknown call_tmp[745239] "expr temp" "maybe param" "maybe type" "temp"
    (745242 'move' call_tmp[745239](299677 call != array[299670] nil[44]))
    (299680 call _sanity call_tmp[745239])
    (491147 'end of statement' array[299670])
    unknown result[299686] "dead at end of block" "ref var"
    unknown call_tmp[745244] "expr temp" "maybe param" "maybe type" "temp"
    (745247 'move' call_tmp[745244](299685 call array[299670] itemIdx[299662]))
    (549992 'move' result[299686](549991 'addr of' call_tmp[745244]))
    (299689 'end of statement' arrayIdx[299654] array[299670] itemIdx[299662])
    (539294 'move' ret[539289](539293 'addr of' result[299686]))
    gotoReturn _end__getRef[539287] _end__getRef[539287]
    (491151 'end of statement' result[299686])
    label _end__getRef[539287]
    (539291 return ret[539289])
  }
  function list[304289](?)._enter[299697](arg _mt[304361]:_MT[238], arg this[304359]:list[304289](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745251] "expr temp" "maybe param" "maybe type" "temp"
    (745254 'move' call_tmp[745251](405555 call parSafe _mt[243] this[304359]))
    unknown call_tmp[745256] "expr temp" "maybe param" "maybe type" "temp"
    (745259 'move' call_tmp[745256](299707 call _cond_test call_tmp[745251]))
    if call_tmp[745256]
    {
      unknown call_tmp[745263] "expr temp" "maybe param" "maybe type" "temp"
      (745266 'move' call_tmp[745263](365046 call _lock$ _mt[243] this[304359]))
      (299705 call(299701 call (partial) lock _mt[243] call_tmp[745263]))
    }
    (539298 return _void[55])
  }
  function list[304289](?)._leave[299717](arg _mt[304365]:_MT[238], arg this[304363]:list[304289](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745272] "expr temp" "maybe param" "maybe type" "temp"
    (745275 'move' call_tmp[745272](405560 call parSafe _mt[243] this[304363]))
    unknown call_tmp[745277] "expr temp" "maybe param" "maybe type" "temp"
    (745280 'move' call_tmp[745277](299727 call _cond_test call_tmp[745272]))
    if call_tmp[745277]
    {
      unknown call_tmp[745284] "expr temp" "maybe param" "maybe type" "temp"
      (745287 'move' call_tmp[745284](365051 call _lock$ _mt[243] this[304363]))
      (299725 call(299721 call (partial) unlock _mt[243] call_tmp[745284]))
    }
    (539300 return _void[55])
  }
  function list[304289](?)._withinBounds[299741](arg _mt[304369]:_MT[238], const arg this[304367]:list[304289](?), arg idx[299738]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539304] "RVV" "temp"
    unknown tmp[434954] "maybe param" "temp"
    (434965 'move' tmp[434954](299746 call >= idx[299738] 0))
    unknown call_tmp[745291] "expr temp" "maybe param" "maybe type" "temp"
    (745294 'move' call_tmp[745291](434967 call _cond_invalid tmp[434954]))
    if call_tmp[745291]
    {
      (434970 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581042] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581043] "maybe param" "temp"
    unknown call_tmp[745296] "expr temp" "maybe param" "maybe type" "temp"
    (745299 'move' call_tmp[745296](434955 call isTrue tmp[434954]))
    (581048 'move' tmp[581043](581046 call _cond_test call_tmp[745296]))
    if tmp[581043]
    {
      unknown tmp[581050] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745303] "expr temp" "maybe param" "maybe type" "temp"
      (745306 'move' call_tmp[745303](405567 call _size _mt[243] this[304367]))
      unknown call_tmp[745308] "expr temp" "maybe param" "maybe type" "temp"
      (745311 'move' call_tmp[745308](299750 call < idx[299738] call_tmp[745303]))
      (581052 'move' tmp[581050](434958 call isTrue call_tmp[745308]))
      (581057 'move' tmp[581042](581054 '_paramFoldLogical' tmp[581043] tmp[581050]))
    }
    {
      (581062 'move' tmp[581042](581059 '_paramFoldLogical' tmp[581043] 0))
    }
    (539310 'move' ret[539304](539309 'coerce' tmp[581042] bool[10]))
    (539306 return ret[539304])
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?)._boundsCheckLeaveOnThrow[299766](arg _mt[304373]:_MT[238], const arg this[304371]:list[304289](?), arg i[299763]:int(64)[13], arg umsg[299786]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745315] "expr temp" "maybe param" "maybe type" "temp"
    (745318 'move' call_tmp[745315](299793 call(405573 call (partial) _withinBounds _mt[243] this[304371]) i[299763]))
    unknown call_tmp[745320] "expr temp" "maybe param" "maybe type" "temp"
    (745323 'move' call_tmp[745320](299794 call ! call_tmp[745315]))
    unknown call_tmp[745325] "expr temp" "maybe param" "maybe type" "temp"
    (745328 'move' call_tmp[745325](299861 call _cond_test call_tmp[745320]))
    if call_tmp[745325]
    {
      (299798 call(405580 call (partial) _leave _mt[243] this[304371]))
      (491157 'end of statement')
      const msg[299848] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[581069] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581070] "maybe param" "temp"
      unknown call_tmp[745332] "expr temp" "maybe param" "maybe type" "temp"
      (745335 'move' call_tmp[745332](299819 call != umsg[299786] ""))
      (581075 'move' tmp[581070](581073 call _cond_test call_tmp[745332]))
      if tmp[581070]
      {
        (581080 'move' tmp[581069](581077 '_paramFoldLogical' tmp[581070] umsg[299786]))
      }
      {
        unknown tmp[581082] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745337] "expr temp" "maybe param" "maybe type" "temp"
        (745340 'move' call_tmp[745337](299841 call _cast string[26] i[299763]))
        (581084 'move' tmp[581082](299843 call + "Index out of bounds: " call_tmp[745337]))
        (581089 'move' tmp[581069](581086 '_paramFoldLogical' tmp[581070] tmp[581082]))
      }
      (549994 'init var' msg[299848] tmp[581069])
      (299851 'end of statement')
      unknown call_tmp[745342] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745345 'move' call_tmp[745342](748317 'new' IllegalArgumentError[388889](?) msg[299848](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745347] "expr temp" "maybe param" "maybe type" "temp"
      (745350 'move' call_tmp[745347](468283 call chpl_fix_thrown_error call_tmp[745342]))
      (299859 'throw' call_tmp[745347])
      (491158 'end of statement' msg[299848])
    }
    (539312 return _void[55])
  }
  function list[304289](?)._makeBlockArray[299874](arg _mt[304377]:_MT[238], arg this[304375]:list[304289](?), arg size[299871]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539316] "RVV" "temp"
    unknown call_tmp[745354] "expr temp" "maybe param" "maybe type" "temp"
    (745357 'move' call_tmp[745354](405591 call eltType _mt[243] this[304375]))
    unknown call_tmp[745359] "expr temp" "maybe param" "maybe type" "temp"
    (745362 'move' call_tmp[745359](299880 call _ddata[11696](?) call_tmp[745354]))
    unknown call_tmp[745364] "expr temp" "maybe param" "maybe type" "temp"
    (745367 'move' call_tmp[745364](299883 call _ddata_allocate call_tmp[745359] size[299871]))
    (539321 'move' ret[539316](539320 'deref' call_tmp[745364]))
    (539318 return ret[539316])
  }
  function list[304289](?)._freeBlockArray[299901](arg _mt[304381]:_MT[238], arg this[304379]:list[304289](?), arg data[299898] :
  unknown call_tmp[745371] "expr temp" "maybe param" "maybe type" "temp", arg size[299904]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299911 call _ddata_free data[299898] size[299904])
    (539323 return _void[55])
  }
  function list[304289](?)._makeArray[299922](arg _mt[304385]:_MT[238], arg this[304383]:list[304289](?), arg size[299919]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539327] "RVV" "temp"
    unknown call_tmp[745383] "expr temp" "maybe param" "maybe type" "temp"
    (745386 'move' call_tmp[745383](405606 call eltType _mt[243] this[304383]))
    unknown call_tmp[745388] "expr temp" "maybe param" "maybe type" "temp"
    (745391 'move' call_tmp[745388](299930 call _ddata_allocate call_tmp[745383] size[299919](initElts = 0)))
    (539332 'move' ret[539327](539331 'deref' call_tmp[745388]))
    (539329 return ret[539327])
  }
  function list[304289](?)._freeArray[299945](arg _mt[304389]:_MT[238], arg this[304387]:list[304289](?), arg data[299942] :
  unknown call_tmp[745395] "expr temp" "maybe param" "maybe type" "temp", arg size[299948]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299955 call _ddata_free data[299942] size[299948])
    (539334 return _void[55])
  }
  function list[304289](?)._maybeAcquireMem[299966](arg _mt[304393]:_MT[238], arg this[304391]:list[304289](?), arg amount[299963]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745402] "expr temp" "maybe param" "maybe type" "temp"
    (745405 'move' call_tmp[745402](405620 call _totalCapacity _mt[243] this[304391]))
    unknown call_tmp[745409] "expr temp" "maybe param" "maybe type" "temp"
    (745412 'move' call_tmp[745409](405625 call _size _mt[243] this[304391]))
    unknown call_tmp[745414] "maybe param" "maybe type" "temp"
    (745417 'move' call_tmp[745414](299970 call - call_tmp[745402] call_tmp[745409]))
    const remaining[299972] "dead at end of block" "const" "insert auto destroy"
    (549996 'init var' remaining[299972] call_tmp[745414])
    (299975 'end of statement')
    unknown call_tmp[745419] "expr temp" "maybe param" "maybe type" "temp"
    (745422 'move' call_tmp[745419](299980 call >= remaining[299972] 0))
    (299983 call _sanity call_tmp[745419])
    (491164 'end of statement' remaining[299972])
    unknown call_tmp[745424] "expr temp" "maybe param" "maybe type" "temp"
    (745427 'move' call_tmp[745424](299987 call >= remaining[299972] amount[299963]))
    unknown call_tmp[745429] "expr temp" "maybe param" "maybe type" "temp"
    (745432 'move' call_tmp[745429](299991 call _cond_test call_tmp[745424]))
    if call_tmp[745429]
    {
      gotoReturn _end__maybeAcquireMem[539336] _end__maybeAcquireMem[539336]
    }
    unknown lastArrayIdx[300007] "dead at end of block" "insert auto destroy"
    unknown tmp[581096] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581097] "maybe param" "temp"
    unknown call_tmp[745436] "expr temp" "maybe param" "maybe type" "temp"
    (745439 'move' call_tmp[745436](405633 call _size _mt[243] this[304391]))
    unknown call_tmp[745441] "expr temp" "maybe param" "maybe type" "temp"
    (745444 'move' call_tmp[745441](299998 call == call_tmp[745436] 0))
    (581102 'move' tmp[581097](581100 call _cond_test call_tmp[745441]))
    if tmp[581097]
    {
      (581107 'move' tmp[581096](581104 '_paramFoldLogical' tmp[581097] 0))
    }
    {
      unknown tmp[581109] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (581111 'move' tmp[581109](300003 call(405639 call (partial) _getLastArrayIdx _mt[243] this[304391])))
      (581116 'move' tmp[581096](581113 '_paramFoldLogical' tmp[581097] tmp[581109]))
    }
    (549998 'init var' lastArrayIdx[300007] tmp[581096])
    (300010 'end of statement')
    unknown call_tmp[745448] "maybe param" "maybe type" "temp"
    (745451 'move' call_tmp[745448](300013 call - amount[299963] remaining[299972]))
    unknown req[300015] "dead at end of block" "insert auto destroy"
    (550000 'init var' req[300015] call_tmp[745448])
    (300018 'end of statement' remaining[299972])
    {
      unknown tmp[300218] "temp"
      unknown call_tmp[745453] "expr temp" "maybe param" "maybe type" "temp"
      (745456 'move' call_tmp[745453](300239 call > req[300015] 0))
      (300242 'move' tmp[300218](300237 call _cond_test call_tmp[745453]))
      WhileDo[300223]
      {
        {
          unknown call_tmp[745460] "expr temp" "maybe param" "maybe type" "temp"
          (745463 'move' call_tmp[745460](405647 call _arrayCapacity _mt[243] this[304391]))
          unknown call_tmp[745465] "expr temp" "maybe param" "maybe type" "temp"
          (745468 'move' call_tmp[745465](300026 call - call_tmp[745460] 1))
          unknown call_tmp[745470] "expr temp" "maybe param" "maybe type" "temp"
          (745473 'move' call_tmp[745470](300028 call >= lastArrayIdx[300007] call_tmp[745465]))
          unknown call_tmp[745475] "expr temp" "maybe param" "maybe type" "temp"
          (745478 'move' call_tmp[745475](300128 call _cond_test call_tmp[745470]))
          if call_tmp[745475]
          {
            const tmp[300120] "const" "temp"
            unknown call_tmp[745480] "expr temp" "maybe param" "maybe type" "temp"
            (745483 'move' call_tmp[745480](300117 '_wide_get_locale' this[304391]))
            (300122 'move' tmp[300120](300118 'deref' call_tmp[745480]))
            (936483 call on_fn[936479] tmp[300120])
            function on_fn[936479](const in arg dummy_locale_arg[936481]:chpl_localeID_t[209352]) : void[4] "on"
            {
              {
                unknown call_tmp[745489] "expr temp" "maybe param" "maybe type" "temp"
                (745492 'move' call_tmp[745489](405657 call _arrayCapacity _mt[243] this[304391]))
                unknown call_tmp[745494] "expr temp" "maybe param" "maybe type" "temp"
                (745497 'move' call_tmp[745494](300034 call * call_tmp[745489] 2))
                unknown call_tmp[745499] "maybe param" "maybe type" "temp"
                (745502 'move' call_tmp[745499](300037 call(405652 call (partial) _makeBlockArray _mt[243] this[304391]) call_tmp[745494]))
                unknown _narrays[300038] "dead at end of block" "insert auto destroy"
                (550002 'init var' _narrays[300038] call_tmp[745499])
                (300041 'end of statement')
                {
                  unknown _indexOfInterest[300061] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[300062] "expr temp" "temp"
                  unknown call_tmp[745506] "expr temp" "maybe param" "maybe type" "temp"
                  (745509 'move' call_tmp[745506](405670 call _arrayCapacity _mt[243] this[304391]))
                  unknown call_tmp[745511] "expr temp" "maybe param" "maybe type" "temp"
                  (745514 'move' call_tmp[745511](300078 call chpl_direct_counted_range_iter 0 call_tmp[745506]))
                  (300071 'move' _iterator[300062](300069 call _getIterator call_tmp[745511]))
                  Defer
                  {
                    {
                      (300094 call _freeIterator _iterator[300062])
                    }
                  }
                  { scopeless type
                    (300083 'move' _indexOfInterest[300061](300080 call iteratorIndex _iterator[300062]))
                  }
                  ForLoop[300063]
                  {
                    unknown i[300087] "index var" "insert auto destroy"
                    (491169 'end of statement')
                    (300089 'move' i[300087] _indexOfInterest[300061])
                    (491170 'end of statement' i[300087])
                    unknown call_tmp[745516] "expr temp" "maybe param" "maybe type" "temp"
                    (745519 'move' call_tmp[745516](300053 call _narrays[300038] i[300087]))
                    unknown call_tmp[745523] "expr temp" "maybe param" "maybe type" "temp"
                    (745526 'move' call_tmp[745523](300057 call(405664 call (partial) _arrays _mt[243] this[304391]) i[300087]))
                    (300058 call = call_tmp[745516] call_tmp[745523])
                    (491172 'end of statement' _narrays[300038] i[300087] i[300087])
                    label _continueLabel[300066]
                    _indexOfInterest[300061]
                    _iterator[300062]
                  }
                  label _breakLabel[300067]
                }
                unknown call_tmp[745532] "expr temp" "maybe param" "maybe type" "temp"
                (745535 'move' call_tmp[745532](405681 call _arrays _mt[243] this[304391]))
                unknown call_tmp[745539] "expr temp" "maybe param" "maybe type" "temp"
                (745542 'move' call_tmp[745539](405686 call _arrayCapacity _mt[243] this[304391]))
                (300105 call(405676 call (partial) _freeBlockArray _mt[243] this[304391]) call_tmp[745532] call_tmp[745539])
                (491176 'end of statement')
                unknown call_tmp[745546] "expr temp" "maybe param" "maybe type" "temp"
                (745549 'move' call_tmp[745546](405691 call _arrays _mt[243] this[304391]))
                (300109 call = call_tmp[745546] _narrays[300038])
                (491177 'end of statement' _narrays[300038])
                unknown call_tmp[745553] "expr temp" "maybe param" "maybe type" "temp"
                (745556 'move' call_tmp[745553](405697 call _arrayCapacity _mt[243] this[304391]))
                (300114 call *= call_tmp[745553] 2)
              }
              (936486 return _void[55])
            }
            {
            }
          }
          const tmp[300210] "const" "temp"
          unknown call_tmp[745558] "expr temp" "maybe param" "maybe type" "temp"
          (745561 'move' call_tmp[745558](300207 '_wide_get_locale' this[304391]))
          (300212 'move' tmp[300210](300208 'deref' call_tmp[745558]))
          (936492 call on_fn[936488] tmp[300210])
          function on_fn[936488](const in arg dummy_locale_arg[936490]:chpl_localeID_t[209352]) : void[4] "on"
          {
            {
              unknown call_tmp[745565] "maybe param" "maybe type" "temp"
              (745568 'move' call_tmp[745565](300138 call(405703 call (partial) _arrays _mt[243] this[304391]) lastArrayIdx[300007]))
              const oldLast[300139] "dead at end of block" "const" "insert auto destroy"
              (550004 'init var' oldLast[300139] call_tmp[745565])
              (300142 'end of statement')
              unknown call_tmp[745572] "maybe param" "maybe type" "temp"
              (745575 'move' call_tmp[745572](300147 call(405710 call (partial) _getArrayCapacity _mt[243] this[304391]) lastArrayIdx[300007]))
              const oldLastCapacity[300148] "dead at end of block" "const" "insert auto destroy"
              (550006 'init var' oldLastCapacity[300148] call_tmp[745572])
              (300151 'end of statement')
              (300154 call += lastArrayIdx[300007] 1)
              (491182 'end of statement' lastArrayIdx[300007])
              unknown newLast[300161] "dead at end of block" "ref var"
              unknown call_tmp[745579] "expr temp" "maybe param" "maybe type" "temp"
              (745582 'move' call_tmp[745579](300160 call(405717 call (partial) _arrays _mt[243] this[304391]) lastArrayIdx[300007]))
              (550009 'move' newLast[300161](550008 'addr of' call_tmp[745579]))
              (300164 'end of statement')
              unknown call_tmp[745584] "maybe param" "maybe type" "temp"
              (745587 'move' call_tmp[745584](300167 call * oldLastCapacity[300148] 2))
              const newLastCapacity[300169] "dead at end of block" "const" "insert auto destroy"
              (550011 'init var' newLastCapacity[300169] call_tmp[745584])
              (300172 'end of statement' lastArrayIdx[300007] lastArrayIdx[300007] lastArrayIdx[300007] oldLastCapacity[300148])
              unknown call_tmp[745589] "expr temp" "maybe param" "maybe type" "temp"
              (745592 'move' call_tmp[745589](300176 call != oldLast[300139] nil[44]))
              (300179 call _sanity call_tmp[745589])
              (491186 'end of statement' oldLast[300139])
              unknown call_tmp[745594] "expr temp" "maybe param" "maybe type" "temp"
              (745597 'move' call_tmp[745594](300184 call == newLast[300161] nil[44]))
              (300187 call _sanity call_tmp[745594])
              (491188 'end of statement' newLast[300161])
              unknown call_tmp[745601] "expr temp" "maybe param" "maybe type" "temp"
              (745604 'move' call_tmp[745601](300193 call(405726 call (partial) _makeArray _mt[243] this[304391]) newLastCapacity[300169]))
              (300194 call = newLast[300161] call_tmp[745601])
              (491190 'end of statement' newLast[300161] newLastCapacity[300169])
              unknown call_tmp[745608] "expr temp" "maybe param" "maybe type" "temp"
              (745611 'move' call_tmp[745608](405732 call _totalCapacity _mt[243] this[304391]))
              (300199 call += call_tmp[745608] newLastCapacity[300169])
              (491193 'end of statement' newLastCapacity[300169])
              (300204 call -= req[300015] newLastCapacity[300169])
              (491195 'end of statement' req[300015] newLastCapacity[300169])
            }
            (936495 return _void[55])
          }
          {
          }
        }
        label _continueLabel[300221]
        unknown call_tmp[745613] "expr temp" "maybe param" "maybe type" "temp"
        (745616 'move' call_tmp[745613](300229 call > req[300015] 0))
        (300232 'move' tmp[300218](300227 call _cond_test call_tmp[745613]))
        tmp[300218]
      }
      label _breakLabel[300222]
    }
    label _end__maybeAcquireMem[539336]
    (539338 return _void[55])
  }
  function list[304289](?)._maybeReleaseMem[300255](arg _mt[304397]:_MT[238], arg this[304395]:list[304289](?), arg amount[300252]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745620] "expr temp" "maybe param" "maybe type" "temp"
    (745623 'move' call_tmp[745620](405742 call _totalCapacity _mt[243] this[304395]))
    unknown call_tmp[745625] "expr temp" "maybe param" "maybe type" "temp"
    (745628 'move' call_tmp[745625](300259 call <= call_tmp[745620] _initialCapacity[298324]))
    unknown call_tmp[745630] "expr temp" "maybe param" "maybe type" "temp"
    (745633 'move' call_tmp[745630](300263 call _cond_test call_tmp[745625]))
    if call_tmp[745630]
    {
      gotoReturn _end__maybeReleaseMem[539342] _end__maybeReleaseMem[539342]
    }
    unknown call_tmp[745637] "maybe param" "maybe type" "temp"
    (745640 'move' call_tmp[745637](300271 call(405747 call (partial) _getLastArrayIdx _mt[243] this[304395])))
    const lastArrayIdx[300272] "dead at end of block" "const" "insert auto destroy"
    (550013 'init var' lastArrayIdx[300272] call_tmp[745637])
    (300275 'end of statement')
    unknown call_tmp[745642] "expr temp" "maybe param" "maybe type" "temp"
    (745645 'move' call_tmp[745642](300279 call != lastArrayIdx[300272] 0))
    (300282 call _sanity call_tmp[745642])
    (491200 'end of statement' lastArrayIdx[300272])
    unknown call_tmp[745649] "maybe param" "maybe type" "temp"
    (745652 'move' call_tmp[745649](300287 call(405752 call (partial) _getArrayCapacity _mt[243] this[304395]) lastArrayIdx[300272]))
    const lastArrayCapacity[300288] "dead at end of block" "const" "insert auto destroy"
    (550015 'init var' lastArrayCapacity[300288] call_tmp[745649])
    (300291 'end of statement')
    unknown call_tmp[745656] "expr temp" "maybe param" "maybe type" "temp"
    (745659 'move' call_tmp[745656](405758 call _totalCapacity _mt[243] this[304395]))
    unknown call_tmp[745661] "maybe param" "maybe type" "temp"
    (745664 'move' call_tmp[745661](300294 call - call_tmp[745656] lastArrayCapacity[300288]))
    const threshold[300296] "dead at end of block" "const" "insert auto destroy"
    (550017 'init var' threshold[300296] call_tmp[745661])
    (300299 'end of statement')
    unknown call_tmp[745668] "expr temp" "maybe param" "maybe type" "temp"
    (745671 'move' call_tmp[745668](405764 call _size _mt[243] this[304395]))
    unknown call_tmp[745673] "maybe param" "maybe type" "temp"
    (745676 'move' call_tmp[745673](300302 call - call_tmp[745668] amount[300252]))
    const nsize[300304] "dead at end of block" "const" "insert auto destroy"
    (550019 'init var' nsize[300304] call_tmp[745673])
    (300307 'end of statement')
    unknown call_tmp[745678] "expr temp" "maybe param" "maybe type" "temp"
    (745681 'move' call_tmp[745678](300310 call > nsize[300304] threshold[300296]))
    unknown call_tmp[745683] "expr temp" "maybe param" "maybe type" "temp"
    (745686 'move' call_tmp[745683](300314 call _cond_test call_tmp[745678]))
    if call_tmp[745683]
    {
      gotoReturn _end__maybeReleaseMem[539342] _end__maybeReleaseMem[539342]
    }
    unknown array[300323] "dead at end of block" "ref var"
    unknown call_tmp[745690] "expr temp" "maybe param" "maybe type" "temp"
    (745693 'move' call_tmp[745690](300322 call(405772 call (partial) _arrays _mt[243] this[304395]) lastArrayIdx[300272]))
    (550022 'move' array[300323](550021 'addr of' call_tmp[745690]))
    (300326 'end of statement' lastArrayIdx[300272] lastArrayCapacity[300288] lastArrayIdx[300272])
    unknown call_tmp[745695] "expr temp" "maybe param" "maybe type" "temp"
    (745698 'move' call_tmp[745695](300330 call != array[300323] nil[44]))
    (300333 call _sanity call_tmp[745695])
    (491206 'end of statement' array[300323])
    (300339 call(405780 call (partial) _freeArray _mt[243] this[304395]) array[300323] lastArrayCapacity[300288])
    (491208 'end of statement' array[300323] lastArrayCapacity[300288])
    unknown call_tmp[745704] "expr temp" "maybe param" "maybe type" "temp"
    (745707 'move' call_tmp[745704](405787 call _totalCapacity _mt[243] this[304395]))
    (300343 call -= call_tmp[745704] lastArrayCapacity[300288])
    (491211 'end of statement' lastArrayCapacity[300288])
    (300348 call = array[300323] nil[44])
    (491213 'end of statement' array[300323])
    label _end__maybeReleaseMem[539342]
    (539344 return _void[55])
  }
  function list[304289](?)._expand[300359](arg _mt[304401]:_MT[238], ref arg this[304399]:list[304289](?), arg idx[300356]:int(64)[13], arg shift[300363]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745711] "expr temp" "maybe param" "maybe type" "temp"
    (745714 'move' call_tmp[745711](300371 call(405793 call (partial) _withinBounds _mt[243] this[304399]) idx[300356]))
    (300373 call _sanity call_tmp[745711])
    (491215 'end of statement')
    unknown call_tmp[745716] "expr temp" "maybe param" "maybe type" "temp"
    (745719 'move' call_tmp[745716](300378 call <= shift[300363] 0))
    unknown call_tmp[745721] "expr temp" "maybe param" "maybe type" "temp"
    (745724 'move' call_tmp[745721](300382 call _cond_test call_tmp[745716]))
    if call_tmp[745721]
    {
      gotoReturn _end__expand[539350] _end__expand[539350]
    }
    const tmp[300486] "const" "temp"
    unknown call_tmp[745726] "expr temp" "maybe param" "maybe type" "temp"
    (745729 'move' call_tmp[745726](300483 '_wide_get_locale' this[304399]))
    (300488 'move' tmp[300486](300484 'deref' call_tmp[745726]))
    (936501 call on_fn[936497] tmp[300486])
    function on_fn[936497](const in arg dummy_locale_arg[936499]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (300391 call(405802 call (partial) _maybeAcquireMem _mt[243] this[304399]) shift[300363])
        (491217 'end of statement')
        {
          unknown _indexOfInterest[300433] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300434] "expr temp" "temp"
          unknown call_tmp[745735] "expr temp" "maybe param" "maybe type" "temp"
          (745738 'move' call_tmp[745735](405830 call _size _mt[243] this[304399]))
          unknown call_tmp[745740] "expr temp" "maybe param" "maybe type" "temp"
          (745743 'move' call_tmp[745740](300457 call - call_tmp[745735] 1))
          unknown call_tmp[745745] "expr temp" "maybe param" "maybe type" "temp"
          (745748 'move' call_tmp[745745](300453 call - 1))
          unknown call_tmp[745750] "expr temp" "maybe param" "maybe type" "temp"
          (745753 'move' call_tmp[745750](300460 call chpl_direct_range_iter idx[300356] call_tmp[745740] call_tmp[745745]))
          (300443 'move' _iterator[300434](300441 call _getIterator call_tmp[745750]))
          Defer
          {
            {
              (300476 call _freeIterator _iterator[300434])
            }
          }
          { scopeless type
            (300465 'move' _indexOfInterest[300433](300462 call iteratorIndex _iterator[300434]))
          }
          ForLoop[300435]
          {
            unknown i[300469] "index var" "insert auto destroy"
            (491219 'end of statement')
            (300471 'move' i[300469] _indexOfInterest[300433])
            (491220 'end of statement' i[300469])
            {
              unknown src[300411] "dead at end of block" "ref var"
              unknown call_tmp[745757] "expr temp" "maybe param" "maybe type" "temp"
              (745760 'move' call_tmp[745757](300410 call(405809 call (partial) _getRef _mt[243] this[304399]) i[300469]))
              (550025 'move' src[300411](550024 'addr of' call_tmp[745757]))
              (300414 'end of statement')
              unknown dst[300423] "dead at end of block" "ref var"
              unknown call_tmp[745764] "expr temp" "maybe param" "maybe type" "temp"
              (745767 'move' call_tmp[745764](300419 call + i[300469] shift[300363]))
              unknown call_tmp[745769] "expr temp" "maybe param" "maybe type" "temp"
              (745772 'move' call_tmp[745769](300422 call(405814 call (partial) _getRef _mt[243] this[304399]) call_tmp[745764]))
              (550028 'move' dst[300423](550027 'addr of' call_tmp[745769]))
              (300426 'end of statement' i[300469] i[300469])
              (300431 call(405822 call (partial) _move _mt[243] this[304399]) src[300411] dst[300423])
              (491224 'end of statement' src[300411] dst[300423])
            }
            label _continueLabel[300438]
            _indexOfInterest[300433]
            _iterator[300434]
          }
          label _breakLabel[300439]
        }
      }
      (936504 return _void[55])
    }
    {
    }
    label _end__expand[539350]
    (539352 return _void[55])
  }
  function list[304289](?)._collapse[300504](arg _mt[304405]:_MT[238], ref arg this[304403]:list[304289](?), arg idx[300501]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745778] "expr temp" "maybe param" "maybe type" "temp"
    (745781 'move' call_tmp[745778](300510 call(405834 call (partial) _withinBounds _mt[243] this[304403]) idx[300501]))
    (300512 call _sanity call_tmp[745778])
    (491228 'end of statement')
    unknown call_tmp[745785] "expr temp" "maybe param" "maybe type" "temp"
    (745788 'move' call_tmp[745785](405841 call _size _mt[243] this[304403]))
    unknown call_tmp[745790] "expr temp" "maybe param" "maybe type" "temp"
    (745793 'move' call_tmp[745790](300518 call - call_tmp[745785] 1))
    unknown call_tmp[745795] "expr temp" "maybe param" "maybe type" "temp"
    (745798 'move' call_tmp[745795](300520 call == idx[300501] call_tmp[745790]))
    unknown call_tmp[745800] "expr temp" "maybe param" "maybe type" "temp"
    (745803 'move' call_tmp[745800](300542 call _cond_test call_tmp[745795]))
    if call_tmp[745800]
    {
      const tmp[300531] "const" "temp"
      unknown call_tmp[745805] "expr temp" "maybe param" "maybe type" "temp"
      (745808 'move' call_tmp[745805](300528 '_wide_get_locale' this[304403]))
      (300533 'move' tmp[300531](300529 'deref' call_tmp[745805]))
      (936510 call on_fn[936506] tmp[300531])
      function on_fn[936506](const in arg dummy_locale_arg[936508]:chpl_localeID_t[209352]) : void[4] "on"
      {
        (300526 call(405848 call (partial) _maybeReleaseMem _mt[243] this[304403]) 1)
        (936513 return _void[55])
      }
      {
      }
      gotoReturn _end__collapse[539356] _end__collapse[539356]
    }
    const tmp[300631] "const" "temp"
    unknown call_tmp[745812] "expr temp" "maybe param" "maybe type" "temp"
    (745815 'move' call_tmp[745812](300628 '_wide_get_locale' this[304403]))
    (300633 'move' tmp[300631](300629 'deref' call_tmp[745812]))
    (936519 call on_fn[936515] tmp[300631])
    function on_fn[936515](const in arg dummy_locale_arg[936517]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown _indexOfInterest[300581] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300582] "expr temp" "temp"
          unknown call_tmp[745819] "expr temp" "maybe param" "maybe type" "temp"
          (745822 'move' call_tmp[745819](405871 call _size _mt[243] this[304403]))
          unknown call_tmp[745824] "expr temp" "maybe param" "maybe type" "temp"
          (745827 'move' call_tmp[745824](300596 call - call_tmp[745819] 2))
          unknown call_tmp[745829] "expr temp" "maybe param" "maybe type" "temp"
          (745832 'move' call_tmp[745829](300599 call chpl_direct_range_iter idx[300501] call_tmp[745824] 1))
          (300591 'move' _iterator[300582](300589 call _getIterator call_tmp[745829]))
          Defer
          {
            {
              (300615 call _freeIterator _iterator[300582])
            }
          }
          { scopeless type
            (300604 'move' _indexOfInterest[300581](300601 call iteratorIndex _iterator[300582]))
          }
          ForLoop[300583]
          {
            unknown i[300608] "index var" "insert auto destroy"
            (491232 'end of statement')
            (300610 'move' i[300608] _indexOfInterest[300581])
            (491233 'end of statement' i[300608])
            {
              unknown src[300562] "dead at end of block" "ref var"
              unknown call_tmp[745836] "expr temp" "maybe param" "maybe type" "temp"
              (745839 'move' call_tmp[745836](300558 call + i[300608] 1))
              unknown call_tmp[745841] "expr temp" "maybe param" "maybe type" "temp"
              (745844 'move' call_tmp[745841](300561 call(405853 call (partial) _getRef _mt[243] this[304403]) call_tmp[745836]))
              (550031 'move' src[300562](550030 'addr of' call_tmp[745841]))
              (300565 'end of statement')
              unknown dst[300571] "dead at end of block" "ref var"
              unknown call_tmp[745848] "expr temp" "maybe param" "maybe type" "temp"
              (745851 'move' call_tmp[745848](300570 call(405858 call (partial) _getRef _mt[243] this[304403]) i[300608]))
              (550034 'move' dst[300571](550033 'addr of' call_tmp[745848]))
              (300574 'end of statement' i[300608] i[300608])
              (300579 call(405863 call (partial) _move _mt[243] this[304403]) src[300562] dst[300571])
              (491237 'end of statement' src[300562] dst[300571])
            }
            label _continueLabel[300586]
            _indexOfInterest[300581]
            _iterator[300582]
          }
          label _breakLabel[300587]
        }
        (300626 call(405875 call (partial) _maybeReleaseMem _mt[243] this[304403]) 1)
      }
      (936522 return _void[55])
    }
    {
    }
    label _end__collapse[539356]
    (539358 return _void[55])
  }
  function list[304289](?)._appendByRef[300649](arg _mt[304409]:_MT[238], ref arg this[304407]:list[304289](?), ref arg x[300646] :
  (405880 call eltType _mt[243] this[304407])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300654 call(405884 call (partial) _maybeAcquireMem _mt[243] this[304407]) 1)
    (491242 'end of statement')
    unknown src[300658] "dead at end of block" "ref var"
    (550037 'move' src[300658](550036 'addr of' x[300646]))
    (300661 'end of statement')
    unknown dst[300666] "dead at end of block" "ref var"
    unknown call_tmp[745865] "expr temp" "maybe param" "maybe type" "temp"
    (745868 'move' call_tmp[745865](405894 call _size _mt[243] this[304407]))
    unknown call_tmp[745870] "expr temp" "maybe param" "maybe type" "temp"
    (745873 'move' call_tmp[745870](300665 call(405889 call (partial) _getRef _mt[243] this[304407]) call_tmp[745865]))
    (550040 'move' dst[300666](550039 'addr of' call_tmp[745870]))
    (300669 'end of statement')
    (300674 call(405898 call (partial) _move _mt[243] this[304407]) src[300658] dst[300666])
    (491243 'end of statement' src[300658] dst[300666])
    unknown call_tmp[745879] "expr temp" "maybe param" "maybe type" "temp"
    (745882 'move' call_tmp[745879](405905 call _size _mt[243] this[304407]))
    (300678 call += call_tmp[745879] 1)
    (539362 return _void[55])
  }
  function list[304289](?).append[300692](arg _mt[304413]:_MT[238], ref arg this[304411]:list[304289](?), in arg x[300689] :
  (300686 call eltType _mt[243] this[304411])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300702 call(405913 call (partial) _enter _mt[243] this[304411]))
    (491247 'end of statement')
    (300708 call(405919 call (partial) _appendByRef _mt[243] this[304411]) x[300689])
    (491248 'end of statement')
    (300712 call(405924 call (partial) _leave _mt[243] this[304411]))
    (539364 return _void[55])
  }
  {
    (300698 call <(300695 'lifetime_of' this[304411])(300697 'lifetime_of' x[300689]))
  }
  function list[304289](?).contains[300723](arg _mt[304417]:_MT[238], const arg this[304415]:list[304289](?), arg x[300720] :
  (405929 call eltType _mt[243] this[304415])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539368] "RVV" "temp"
    unknown result[300727] "dead at end of block" "insert auto destroy"
    (550042 'init var' result[300727] 0)
    (300730 'end of statement')
    const tmp[300797] "const" "temp"
    unknown call_tmp[745894] "expr temp" "maybe param" "maybe type" "temp"
    (745897 'move' call_tmp[745894](300794 '_wide_get_locale' this[304415]))
    (300799 'move' tmp[300797](300795 'deref' call_tmp[745894]))
    (936528 call on_fn[936524] tmp[300797])
    function on_fn[936524](const in arg dummy_locale_arg[936526]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (300735 call(405934 call (partial) _enter _mt[243] this[304415]))
        (491250 'end of statement')
        {
          unknown _indexOfInterest[300757] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300758] "expr temp" "temp"
          (300767 'move' _iterator[300758](300765 call _getIterator this[304415]))
          Defer
          {
            {
              (300783 call _freeIterator _iterator[300758])
            }
          }
          { scopeless type
            (300772 'move' _indexOfInterest[300757](300769 call iteratorIndex _iterator[300758]))
          }
          ForLoop[300759]
          {
            unknown item[300776] "index var" "insert auto destroy"
            (491252 'end of statement')
            (300778 'move' item[300776] _indexOfInterest[300757])
            (491253 'end of statement' item[300776])
            unknown call_tmp[745901] "expr temp" "maybe param" "maybe type" "temp"
            (745904 'move' call_tmp[745901](300742 call == item[300776] x[300720]))
            unknown call_tmp[745906] "expr temp" "maybe param" "maybe type" "temp"
            (745909 'move' call_tmp[745906](300753 call _cond_test call_tmp[745901]))
            if call_tmp[745906]
            {
              (300746 call = result[300727] 1)
              (491255 'end of statement' result[300727])
              break _breakLabel[300763] _breakLabel[300763]
            }
            label _continueLabel[300762]
            _indexOfInterest[300757]
            _iterator[300758]
          }
          label _breakLabel[300763]
        }
        (300792 call(405942 call (partial) _leave _mt[243] this[304415]))
      }
      (936531 return _void[55])
    }
    {
    }
    (539374 'move' ret[539368](539373 'coerce' result[300727] bool[10]))
    gotoReturn _end_contains[539366] _end_contains[539366]
    (491258 'end of statement' result[300727])
    label _end_contains[539366]
    (539370 return ret[539368])
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?).first[300813](arg _mt[304421]:_MT[238], ref arg this[304419]:list[304289](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539380] "RVV" "temp"
    (300817 call(405947 call (partial) _enter _mt[243] this[304419]))
    (491260 'end of statement')
    unknown tmp[434975] "maybe param" "temp"
    (434986 'move' tmp[434975] 1)
    unknown call_tmp[745915] "expr temp" "maybe param" "maybe type" "temp"
    (745918 'move' call_tmp[745915](434988 call _cond_invalid tmp[434975]))
    if call_tmp[745915]
    {
      (434991 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581123] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581124] "maybe param" "temp"
    unknown call_tmp[745920] "expr temp" "maybe param" "maybe type" "temp"
    (745923 'move' call_tmp[745920](434976 call isTrue tmp[434975]))
    (581129 'move' tmp[581124](581127 call _cond_test call_tmp[745920]))
    if tmp[581124]
    {
      unknown tmp[581131] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745927] "expr temp" "maybe param" "maybe type" "temp"
      (745930 'move' call_tmp[745927](405953 call _size _mt[243] this[304419]))
      unknown call_tmp[745932] "expr temp" "maybe param" "maybe type" "temp"
      (745935 'move' call_tmp[745932](300823 call == call_tmp[745927] 0))
      (581133 'move' tmp[581131](434979 call isTrue call_tmp[745932]))
      (581138 'move' tmp[581123](581135 '_paramFoldLogical' tmp[581124] tmp[581131]))
    }
    {
      (581143 'move' tmp[581123](581140 '_paramFoldLogical' tmp[581124] 0))
    }
    unknown call_tmp[745937] "expr temp" "maybe param" "maybe type" "temp"
    (745940 'move' call_tmp[745937](300853 call _cond_test tmp[581123]))
    if call_tmp[745937]
    {
      (300829 call(405957 call (partial) _leave _mt[243] this[304419]))
      (491262 'end of statement')
      (300851 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300861] "dead at end of block" "ref var"
    unknown call_tmp[745946] "expr temp" "maybe param" "maybe type" "temp"
    (745949 'move' call_tmp[745946](300860 call(405961 call (partial) _getRef _mt[243] this[304419]) 0))
    (550045 'move' result[300861](550044 'addr of' call_tmp[745946]))
    (300864 'end of statement')
    (300867 call(405965 call (partial) _leave _mt[243] this[304419]))
    (491264 'end of statement')
    (539385 'move' ret[539380](539384 'addr of' result[300861]))
    gotoReturn _end_first[539378] _end_first[539378]
    (491265 'end of statement' result[300861])
    label _end_first[539378]
    (539382 return ret[539380])
  }
  function list[304289](?).last[300876](arg _mt[304425]:_MT[238], ref arg this[304423]:list[304289](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539391] "RVV" "temp"
    (300880 call(405970 call (partial) _enter _mt[243] this[304423]))
    (491267 'end of statement')
    unknown tmp[434996] "maybe param" "temp"
    (435007 'move' tmp[434996] 1)
    unknown call_tmp[745955] "expr temp" "maybe param" "maybe type" "temp"
    (745958 'move' call_tmp[745955](435009 call _cond_invalid tmp[434996]))
    if call_tmp[745955]
    {
      (435012 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581150] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581151] "maybe param" "temp"
    unknown call_tmp[745960] "expr temp" "maybe param" "maybe type" "temp"
    (745963 'move' call_tmp[745960](434997 call isTrue tmp[434996]))
    (581156 'move' tmp[581151](581154 call _cond_test call_tmp[745960]))
    if tmp[581151]
    {
      unknown tmp[581158] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745967] "expr temp" "maybe param" "maybe type" "temp"
      (745970 'move' call_tmp[745967](405976 call _size _mt[243] this[304423]))
      unknown call_tmp[745972] "expr temp" "maybe param" "maybe type" "temp"
      (745975 'move' call_tmp[745972](300886 call == call_tmp[745967] 0))
      (581160 'move' tmp[581158](435000 call isTrue call_tmp[745972]))
      (581165 'move' tmp[581150](581162 '_paramFoldLogical' tmp[581151] tmp[581158]))
    }
    {
      (581170 'move' tmp[581150](581167 '_paramFoldLogical' tmp[581151] 0))
    }
    unknown call_tmp[745977] "expr temp" "maybe param" "maybe type" "temp"
    (745980 'move' call_tmp[745977](300916 call _cond_test tmp[581150]))
    if call_tmp[745977]
    {
      (300892 call(405980 call (partial) _leave _mt[243] this[304423]))
      (491269 'end of statement')
      (300914 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300927] "dead at end of block" "ref var"
    unknown call_tmp[745988] "expr temp" "maybe param" "maybe type" "temp"
    (745991 'move' call_tmp[745988](405989 call _size _mt[243] this[304423]))
    unknown call_tmp[745993] "expr temp" "maybe param" "maybe type" "temp"
    (745996 'move' call_tmp[745993](300923 call - call_tmp[745988] 1))
    unknown call_tmp[745998] "expr temp" "maybe param" "maybe type" "temp"
    (746001 'move' call_tmp[745998](300926 call(405984 call (partial) _getRef _mt[243] this[304423]) call_tmp[745993]))
    (550048 'move' result[300927](550047 'addr of' call_tmp[745998]))
    (300930 'end of statement')
    (300933 call(405993 call (partial) _leave _mt[243] this[304423]))
    (491271 'end of statement')
    (539396 'move' ret[539391](539395 'addr of' result[300927]))
    gotoReturn _end_last[539389] _end_last[539389]
    (491272 'end of statement' result[300927])
    label _end_last[539389]
    (539393 return ret[539391])
  }
  function list[304289](?)._extendGeneric[300944](arg _mt[304429]:_MT[238], ref arg this[304427]:list[304289](?), arg collection[300942]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[300997] "const" "temp"
    unknown call_tmp[746005] "expr temp" "maybe param" "maybe type" "temp"
    (746008 'move' call_tmp[746005](300994 '_wide_get_locale' this[304427]))
    (300999 'move' tmp[300997](300995 'deref' call_tmp[746005]))
    (936537 call on_fn[936533] tmp[300997])
    function on_fn[936533](const in arg dummy_locale_arg[936535]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown _indexOfInterest[300960] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300961] "expr temp" "temp"
          (300970 'move' _iterator[300961](300968 call _getIterator collection[300942]))
          Defer
          {
            {
              (300986 call _freeIterator _iterator[300961])
            }
          }
          { scopeless type
            (300975 'move' _indexOfInterest[300960](300972 call iteratorIndex _iterator[300961]))
          }
          ForLoop[300962]
          {
            unknown item[300979] "index var" "insert auto destroy"
            (491275 'end of statement')
            (300981 'move' item[300979] _indexOfInterest[300960])
            (491276 'end of statement' item[300979])
            {
              unknown cpy[300950] "dead at end of block" "no auto destroy"
              (550050 'init var' cpy[300950] item[300979])
              (300953 'end of statement' item[300979])
              (300958 call(406001 call (partial) _appendByRef _mt[243] this[304427]) cpy[300950])
              (491279 'end of statement' cpy[300950])
            }
            label _continueLabel[300965]
            _indexOfInterest[300960]
            _iterator[300961]
          }
          label _breakLabel[300966]
        }
      }
      (936540 return _void[55])
    }
    {
    }
    (539400 return _void[55])
  }
  function list[304289](?).extend[301019](arg _mt[304433]:_MT[238], ref arg this[304431]:list[304289](?), arg other[301016]:list[304289](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[301045] "const" "temp"
    unknown call_tmp[746012] "expr temp" "maybe param" "maybe type" "temp"
    (746015 'move' call_tmp[746012](301042 '_wide_get_locale' this[304431]))
    (301047 'move' tmp[301045](301043 'deref' call_tmp[746012]))
    (936546 call on_fn[936542] tmp[301045])
    function on_fn[936542](const in arg dummy_locale_arg[936544]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301030 call(406015 call (partial) _enter _mt[243] this[304431]))
        (491281 'end of statement')
        (301036 call(406021 call (partial) _extendGeneric _mt[243] this[304431]) other[301016])
        (491282 'end of statement')
        (301040 call(406026 call (partial) _leave _mt[243] this[304431]))
      }
      (936549 return _void[55])
    }
    {
    }
    (539402 return _void[55])
  }
  where {
    unknown call_tmp[746025] "expr temp" "maybe param" "maybe type" "temp"
    (746028 'move' call_tmp[746025](467950 call eltType _mt[243] this[304431]))
    unknown call_tmp[746030] "expr temp" "maybe param" "maybe type" "temp"
    (746033 'move' call_tmp[746030](467946 'query' other[301016] 1))
    unknown call_tmp[746035] "expr temp" "maybe param" "maybe type" "temp"
    (746038 'move' call_tmp[746035](467953 call == call_tmp[746025] call_tmp[746030]))
    (467957 call & 1 call_tmp[746035])
  }
  {
    (301025 call <(301022 'lifetime_of' this[304431])(301024 'lifetime_of' other[301016]))
  }
  function list[304289](?).extend[301068](arg _mt[304437]:_MT[238], ref arg this[304435]:list[304289](?), arg other[301065]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[301094] "const" "temp"
    unknown call_tmp[746040] "expr temp" "maybe param" "maybe type" "temp"
    (746043 'move' call_tmp[746040](301091 '_wide_get_locale' this[304435]))
    (301096 'move' tmp[301094](301092 'deref' call_tmp[746040]))
    (936555 call on_fn[936551] tmp[301094])
    function on_fn[936551](const in arg dummy_locale_arg[936553]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301079 call(406038 call (partial) _enter _mt[243] this[304435]))
        (491284 'end of statement')
        (301085 call(406042 call (partial) _extendGeneric _mt[243] this[304435]) other[301065])
        (491285 'end of statement')
        (301089 call(406047 call (partial) _leave _mt[243] this[304435]))
      }
      (936558 return _void[55])
    }
    {
    }
    (539404 return _void[55])
  }
  where {
    unknown call_tmp[746053] "expr temp" "maybe param" "maybe type" "temp"
    (746056 'move' call_tmp[746053](406031 call eltType _mt[243] this[304435]))
    unknown call_tmp[746060] "expr temp" "maybe param" "maybe type" "temp"
    (746063 'move' call_tmp[746060](467969 call eltType _mt[243] other[301065]))
    unknown call_tmp[746065] "expr temp" "maybe param" "maybe type" "temp"
    (746068 'move' call_tmp[746065](467973 call == call_tmp[746053] call_tmp[746060]))
    (467967 call & 1 call_tmp[746065])
  }
  {
    (301074 call <(301071 'lifetime_of' this[304435])(301073 'lifetime_of' other[301065]))
  }
  function list[304289](?).extend[301119](arg _mt[304441]:_MT[238], ref arg this[304439]:list[304289](?), arg other[301116]:range[64319](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[746070] "expr temp" "maybe param" "maybe type" "temp"
    (746073 'move' call_tmp[746070](301130 call isBoundedRange other[301116]))
    unknown call_tmp[746075] "expr temp" "maybe param" "maybe type" "temp"
    (746078 'move' call_tmp[746075](301131 call ! call_tmp[746070]))
    unknown call_tmp[746080] "expr temp" "maybe param" "maybe type" "temp"
    (746083 'move' call_tmp[746080](301203 call _cond_test call_tmp[746075]))
    if call_tmp[746080]
    {
      unknown call_tmp[746085] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (746088 'move' call_tmp[746085](301134 'typeof' this[304439]))
      unknown call_tmp[746090] "maybe param" "maybe type" "temp"
      (746093 'move' call_tmp[746090](301136 call _cast string[26] call_tmp[746085]))
      unknown e[301138] "dead at end of block" "param"
      (550052 'init var' e[301138] call_tmp[746090])
      (301141 'end of statement')
      unknown call_tmp[746095] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (746098 'move' call_tmp[746095](301144 'typeof' other[301116]))
      unknown call_tmp[746100] "maybe param" "maybe type" "temp"
      (746103 'move' call_tmp[746100](301146 call _cast string[26] call_tmp[746095]))
      unknown f[301148] "dead at end of block" "param"
      (550054 'init var' f[301148] call_tmp[746100])
      (301151 'end of statement')
      unknown call_tmp[746105] "expr temp" "maybe param" "maybe type" "temp"
      (746108 'move' call_tmp[746105](301170 call + "Cannot extend " e[301138]))
      unknown call_tmp[746110] "expr temp" "maybe param" "maybe type" "temp"
      (746113 'move' call_tmp[746110](301189 call + call_tmp[746105] " with unbounded "))
      unknown call_tmp[746115] "maybe param" "maybe type" "temp"
      (746118 'move' call_tmp[746115](301192 call + call_tmp[746110] f[301148]))
      unknown msg[301194] "dead at end of block" "param"
      (550056 'init var' msg[301194] call_tmp[746115])
      (301197 'end of statement')
      (301201 call compilerError msg[301194])
    }
    const tmp[301226] "const" "temp"
    unknown call_tmp[746120] "expr temp" "maybe param" "maybe type" "temp"
    (746123 'move' call_tmp[746120](301223 '_wide_get_locale' this[304439]))
    (301228 'move' tmp[301226](301224 'deref' call_tmp[746120]))
    (936564 call on_fn[936560] tmp[301226])
    function on_fn[936560](const in arg dummy_locale_arg[936562]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301211 call(406066 call (partial) _enter _mt[243] this[304439]))
        (491288 'end of statement')
        (301217 call(406070 call (partial) _extendGeneric _mt[243] this[304439]) other[301116])
        (491289 'end of statement')
        (301221 call(406075 call (partial) _leave _mt[243] this[304439]))
      }
      (936567 return _void[55])
    }
    {
    }
    (539406 return _void[55])
  }
  where {
    unknown call_tmp[746133] "expr temp" "maybe param" "maybe type" "temp"
    (746136 'move' call_tmp[746133](467982 call eltType _mt[243] this[304439]))
    unknown call_tmp[746138] "expr temp" "maybe param" "maybe type" "temp"
    (746141 'move' call_tmp[746138](467978 'query' other[301116] 1))
    unknown call_tmp[746143] "expr temp" "maybe param" "maybe type" "temp"
    (746146 'move' call_tmp[746143](467985 call == call_tmp[746133] call_tmp[746138]))
    (467989 call & 1 call_tmp[746143])
  }
  {
    (301125 call <(301122 'lifetime_of' this[304439])(301124 'lifetime_of' other[301116]))
  }
  function list[304289](?).insert[301243](arg _mt[304445]:_MT[238], ref arg this[304443]:list[304289](?), arg idx[301240]:int(64)[13], in arg x[301246] :
  (406080 call eltType _mt[243] this[304443])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539410] "RVV" "temp"
    unknown result[301257] "dead at end of block" "insert auto destroy"
    (550058 'init var' result[301257] 0)
    (301260 'end of statement')
    const tmp[301338] "const" "temp"
    unknown call_tmp[746150] "expr temp" "maybe param" "maybe type" "temp"
    (746153 'move' call_tmp[746150](301335 '_wide_get_locale' this[304443]))
    (301340 'move' tmp[301338](301336 'deref' call_tmp[746150]))
    (936573 call on_fn[936569] tmp[301338])
    function on_fn[936569](const in arg dummy_locale_arg[936571]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301265 call(406087 call (partial) _enter _mt[243] this[304443]))
        (491291 'end of statement')
        unknown call_tmp[746159] "expr temp" "maybe param" "maybe type" "temp"
        (746162 'move' call_tmp[746159](406093 call _size _mt[243] this[304443]))
        unknown call_tmp[746164] "expr temp" "maybe param" "maybe type" "temp"
        (746167 'move' call_tmp[746164](301270 call == idx[301240] call_tmp[746159]))
        unknown call_tmp[746169] "expr temp" "maybe param" "maybe type" "temp"
        (746172 'move' call_tmp[746169](301326 call _cond_test call_tmp[746164]))
        if call_tmp[746169]
        {
          (301275 call(406097 call (partial) _appendByRef _mt[243] this[304443]) x[301246])
          (491292 'end of statement')
          (301280 call = result[301257] 1)
          (491293 'end of statement' result[301257])
        }
        {
          unknown call_tmp[746178] "expr temp" "maybe param" "maybe type" "temp"
          (746181 'move' call_tmp[746178](301286 call(406103 call (partial) _withinBounds _mt[243] this[304443]) idx[301240]))
          unknown call_tmp[746183] "expr temp" "maybe param" "maybe type" "temp"
          (746186 'move' call_tmp[746183](301322 call _cond_test call_tmp[746178]))
          if call_tmp[746183]
          {
            (301290 call(406110 call (partial) _expand _mt[243] this[304443]) idx[301240])
            (491295 'end of statement')
            unknown src[301294] "dead at end of block" "ref var"
            (550061 'move' src[301294](550060 'addr of' x[301246]))
            (301297 'end of statement')
            unknown dst[301302] "dead at end of block" "ref var"
            unknown call_tmp[746192] "expr temp" "maybe param" "maybe type" "temp"
            (746195 'move' call_tmp[746192](301301 call(406116 call (partial) _getRef _mt[243] this[304443]) idx[301240]))
            (550064 'move' dst[301302](550063 'addr of' call_tmp[746192]))
            (301305 'end of statement')
            (301310 call(406121 call (partial) _move _mt[243] this[304443]) src[301294] dst[301302])
            (491296 'end of statement' src[301294] dst[301302])
            unknown call_tmp[746201] "expr temp" "maybe param" "maybe type" "temp"
            (746204 'move' call_tmp[746201](406128 call _size _mt[243] this[304443]))
            (301314 call += call_tmp[746201] 1)
            (491299 'end of statement')
            (301319 call = result[301257] 1)
            (491300 'end of statement' result[301257])
          }
        }
        (301333 call(406133 call (partial) _leave _mt[243] this[304443]))
      }
      (936576 return _void[55])
    }
    {
    }
    unknown call_tmp[746208] "expr temp" "maybe param" "maybe type" "temp"
    (746211 'move' call_tmp[746208](301347 call ! result[301257]))
    unknown call_tmp[746213] "expr temp" "maybe param" "maybe type" "temp"
    (746216 'move' call_tmp[746213](301354 call _cond_test call_tmp[746208]))
    if call_tmp[746213]
    {
      (301352 call(406140 call (partial) _destroy _mt[243] this[304443]) x[301246])
    }
    (539416 'move' ret[539410](539415 'coerce' result[301257] bool[10]))
    gotoReturn _end_insert[539408] _end_insert[539408]
    (491304 'end of statement' result[301257])
    label _end_insert[539408]
    (539412 return ret[539410])
  }
  {
    (301254 call <(301251 'lifetime_of' this[304443])(301253 'lifetime_of' x[301246]))
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?)._insertGenericKnownSize[301372](arg _mt[304449]:_MT[238], ref arg this[304447]:list[304289](?), arg idx[301369]:int(64)[13], arg items[301374]:_any[178](?), arg size[301377]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539422] "RVV" "temp"
    unknown result[301382] "dead at end of block" "insert auto destroy"
    (550066 'init var' result[301382] 0)
    (301385 'end of statement')
    unknown call_tmp[746220] "expr temp" "maybe param" "maybe type" "temp"
    (746223 'move' call_tmp[746220](301390 call >= size[301377] 0))
    (301393 call _sanity call_tmp[746220])
    (491306 'end of statement')
    unknown call_tmp[746225] "expr temp" "maybe param" "maybe type" "temp"
    (746228 'move' call_tmp[746225](301397 call == size[301377] 0))
    unknown call_tmp[746230] "expr temp" "maybe param" "maybe type" "temp"
    (746233 'move' call_tmp[746230](301402 call _cond_test call_tmp[746225]))
    if call_tmp[746230]
    {
      (539428 'move' ret[539422](539427 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539420] _end__insertGenericKnownSize[539420]
    }
    const tmp[301527] "const" "temp"
    unknown call_tmp[746235] "expr temp" "maybe param" "maybe type" "temp"
    (746238 'move' call_tmp[746235](301524 '_wide_get_locale' this[304447]))
    (301529 'move' tmp[301527](301525 'deref' call_tmp[746235]))
    (936582 call on_fn[936578] tmp[301527])
    function on_fn[936578](const in arg dummy_locale_arg[936580]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        unknown call_tmp[746242] "expr temp" "maybe param" "maybe type" "temp"
        (746245 'move' call_tmp[746242](406151 call _size _mt[243] this[304447]))
        unknown call_tmp[746247] "expr temp" "maybe param" "maybe type" "temp"
        (746250 'move' call_tmp[746247](301410 call == idx[301369] call_tmp[746242]))
        unknown call_tmp[746252] "expr temp" "maybe param" "maybe type" "temp"
        (746255 'move' call_tmp[746252](301518 call _cond_test call_tmp[746247]))
        if call_tmp[746252]
        {
          (301415 call(406155 call (partial) _extendGeneric _mt[243] this[304447]) items[301374])
          (491308 'end of statement')
          (301420 call = result[301382] 1)
          (491309 'end of statement' result[301382])
        }
        {
          unknown call_tmp[746261] "expr temp" "maybe param" "maybe type" "temp"
          (746264 'move' call_tmp[746261](301426 call(406161 call (partial) _withinBounds _mt[243] this[304447]) idx[301369]))
          unknown call_tmp[746266] "expr temp" "maybe param" "maybe type" "temp"
          (746269 'move' call_tmp[746266](301514 call _cond_test call_tmp[746261]))
          if call_tmp[746266]
          {
            (301431 call(406166 call (partial) _expand _mt[243] this[304447]) idx[301369] size[301377])
            (491311 'end of statement')
            unknown i[301435] "dead at end of block" "insert auto destroy"
            (550068 'init var' i[301435] idx[301369])
            (301438 'end of statement')
            {
              unknown _indexOfInterest[301476] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301477] "expr temp" "temp"
              (301486 'move' _iterator[301477](301484 call _getIterator items[301374]))
              Defer
              {
                {
                  (301502 call _freeIterator _iterator[301477])
                }
              }
              { scopeless type
                (301491 'move' _indexOfInterest[301476](301488 call iteratorIndex _iterator[301477]))
              }
              ForLoop[301478]
              {
                unknown x[301495] "index var" "insert auto destroy"
                (491313 'end of statement')
                (301497 'move' x[301495] _indexOfInterest[301476])
                (491314 'end of statement' x[301495])
                {
                  unknown cpy[301442] "dead at end of block" "no auto destroy"
                  (550070 'init var' cpy[301442] x[301495])
                  (301445 'end of statement')
                  unknown src[301448] "dead at end of block" "ref var"
                  (550073 'move' src[301448](550072 'addr of' cpy[301442]))
                  (301451 'end of statement')
                  unknown dst[301456] "dead at end of block" "ref var"
                  unknown call_tmp[746275] "expr temp" "maybe param" "maybe type" "temp"
                  (746278 'move' call_tmp[746275](301455 call(406176 call (partial) _getRef _mt[243] this[304447]) i[301435]))
                  (550076 'move' dst[301456](550075 'addr of' call_tmp[746275]))
                  (301459 'end of statement' x[301495] cpy[301442] i[301435])
                  (301464 call(406181 call (partial) _move _mt[243] this[304447]) src[301448] dst[301456])
                  (491319 'end of statement' src[301448] dst[301456])
                  unknown call_tmp[746284] "expr temp" "maybe param" "maybe type" "temp"
                  (746287 'move' call_tmp[746284](406188 call _size _mt[243] this[304447]))
                  (301468 call += call_tmp[746284] 1)
                  (491322 'end of statement')
                  (301473 call += i[301435] 1)
                  (491323 'end of statement' i[301435])
                }
                label _continueLabel[301481]
                _indexOfInterest[301476]
                _iterator[301477]
              }
              label _breakLabel[301482]
            }
            (301511 call = result[301382] 1)
            (491325 'end of statement' result[301382])
          }
        }
      }
      (936585 return _void[55])
    }
    {
    }
    (539434 'move' ret[539422](539433 'coerce' result[301382] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539420] _end__insertGenericKnownSize[539420]
    (491327 'end of statement' result[301382])
    label _end__insertGenericKnownSize[539420]
    (539424 return ret[539422])
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?).insert[301547](arg _mt[304453]:_MT[238], ref arg this[304451]:list[304289](?), arg idx[301544]:int(64)[13], arg arr[301555]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539440] "RVV" "temp"
    unknown result[301566] "dead at end of block" "insert auto destroy"
    (550078 'init var' result[301566] 0)
    (301569 'end of statement')
    const tmp[301597] "const" "temp"
    unknown call_tmp[746289] "expr temp" "maybe param" "maybe type" "temp"
    (746292 'move' call_tmp[746289](301594 '_wide_get_locale' this[304451]))
    (301599 'move' tmp[301597](301595 'deref' call_tmp[746289]))
    (936591 call on_fn[936587] tmp[301597])
    function on_fn[936587](const in arg dummy_locale_arg[936589]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301574 call(406203 call (partial) _enter _mt[243] this[304451]))
        (491329 'end of statement')
        unknown call_tmp[746300] "expr temp" "maybe param" "maybe type" "temp"
        (746303 'move' call_tmp[746300](301583 call size _mt[243] arr[301555]))
        unknown call_tmp[746305] "expr temp" "maybe param" "maybe type" "temp"
        (746308 'move' call_tmp[746305](301586 call(406210 call (partial) _insertGenericKnownSize _mt[243] this[304451]) idx[301544] arr[301555] call_tmp[746300]))
        (301587 call = result[301566] call_tmp[746305])
        (491330 'end of statement' result[301566])
        (301592 call(406216 call (partial) _leave _mt[243] this[304451]))
      }
      (936594 return _void[55])
    }
    {
    }
    (539446 'move' ret[539440](539445 'coerce' result[301566] bool[10]))
    gotoReturn _end_insert[539438] _end_insert[539438]
    (491333 'end of statement' result[301566])
    label _end_insert[539438]
    (539442 return ret[539440])
  }
  where {
    unknown call_tmp[746314] "expr temp" "maybe param" "maybe type" "temp"
    (746317 'move' call_tmp[746314](406196 call eltType _mt[243] this[304451]))
    unknown call_tmp[746321] "expr temp" "maybe param" "maybe type" "temp"
    (746324 'move' call_tmp[746321](468004 call eltType _mt[243] arr[301555]))
    unknown call_tmp[746326] "expr temp" "maybe param" "maybe type" "temp"
    (746329 'move' call_tmp[746326](468008 call == call_tmp[746314] call_tmp[746321]))
    (468002 call & 1 call_tmp[746326])
  }
  {
    (301563 call <(301560 'lifetime_of' this[304451])(301562 'lifetime_of' arr[301555]))
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?).insert[301618](arg _mt[304457]:_MT[238], ref arg this[304455]:list[304289](?), arg idx[301615]:int(64)[13], arg lst[301624]:list[304289](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539452] "RVV" "temp"
    unknown result[301635] "dead at end of block" "insert auto destroy"
    (550080 'init var' result[301635] 0)
    (301638 'end of statement')
    unknown call_tmp[746333] "maybe param" "maybe type" "temp"
    (746336 'move' call_tmp[746333](301641 call size _mt[243] lst[301624]))
    const size[301644] "dead at end of block" "const" "insert auto destroy"
    (550082 'init var' size[301644] call_tmp[746333])
    (301647 'end of statement')
    const tmp[301671] "const" "temp"
    unknown call_tmp[746338] "expr temp" "maybe param" "maybe type" "temp"
    (746341 'move' call_tmp[746338](301668 '_wide_get_locale' this[304455]))
    (301673 'move' tmp[301671](301669 'deref' call_tmp[746338]))
    (936600 call on_fn[936596] tmp[301671])
    function on_fn[936596](const in arg dummy_locale_arg[936598]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (301651 call(406230 call (partial) _enter _mt[243] this[304455]))
        (491335 'end of statement')
        unknown call_tmp[746347] "expr temp" "maybe param" "maybe type" "temp"
        (746350 'move' call_tmp[746347](301660 call(406235 call (partial) _insertGenericKnownSize _mt[243] this[304455]) idx[301615] lst[301624] size[301644]))
        (301661 call = result[301635] call_tmp[746347])
        (491336 'end of statement' result[301635] size[301644])
        (301666 call(406242 call (partial) _leave _mt[243] this[304455]))
      }
      (936603 return _void[55])
    }
    {
    }
    (539458 'move' ret[539452](539457 'coerce' result[301635] bool[10]))
    gotoReturn _end_insert[539450] _end_insert[539450]
    (491340 'end of statement' result[301635])
    label _end_insert[539450]
    (539454 return ret[539452])
  }
  where {
    unknown call_tmp[746356] "expr temp" "maybe param" "maybe type" "temp"
    (746359 'move' call_tmp[746356](468017 call eltType _mt[243] this[304455]))
    unknown call_tmp[746361] "expr temp" "maybe param" "maybe type" "temp"
    (746364 'move' call_tmp[746361](468013 'query' lst[301624] 1))
    unknown call_tmp[746366] "expr temp" "maybe param" "maybe type" "temp"
    (746369 'move' call_tmp[746366](468020 call == call_tmp[746356] call_tmp[746361]))
    (468024 call & 1 call_tmp[746366])
  }
  {
    (301632 call <(301629 'lifetime_of' this[304455])(301631 'lifetime_of' lst[301624]))
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?).remove[301692](arg _mt[304461]:_MT[238], ref arg this[304459]:list[304289](?), arg x[301689] :
  (406248 call eltType _mt[243] this[304459]), arg count[301696]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539464] "RVV" "temp"
    unknown result[301702] "dead at end of block" "insert auto destroy"
    (550084 'init var' result[301702] 0)
    (301705 'end of statement')
    const tmp[301942] "const" "temp"
    unknown call_tmp[746373] "expr temp" "maybe param" "maybe type" "temp"
    (746376 'move' call_tmp[746373](301939 '_wide_get_locale' this[304459]))
    (301944 'move' tmp[301942](301940 'deref' call_tmp[746373]))
    (936609 call on_fn[936605] tmp[301942])
    function on_fn[936605](const in arg dummy_locale_arg[936607]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        unknown src_i[301708] "dead at end of block" "insert auto destroy"
        (550086 'default init var' src_i[301708] int(64)[13])
        unknown dst_i[301712] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746378] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746381 'move' call_tmp[746378](301716 'typeof' src_i[301708]))
        (550088 'default init var' dst_i[301712] call_tmp[746378])
        (301717 'end of statement')
        unknown removed[301720] "dead at end of block" "insert auto destroy"
        (550090 'init var' removed[301720] 0)
        (301723 'end of statement' src_i[301708])
        (301726 call = src_i[301708] 0)
        (491343 'end of statement' src_i[301708])
        (301731 call(406255 call (partial) _enter _mt[243] this[304459]))
        (491345 'end of statement')
        {
          unknown tmp[301773] "temp"
          unknown call_tmp[746387] "expr temp" "maybe param" "maybe type" "temp"
          (746390 'move' call_tmp[746387](406281 call _size _mt[243] this[304459]))
          unknown call_tmp[746392] "expr temp" "maybe param" "maybe type" "temp"
          (746395 'move' call_tmp[746392](301794 call < dst_i[301712] call_tmp[746387]))
          (301797 'move' tmp[301773](301792 call _cond_test call_tmp[746392]))
          WhileDo[301778]
          {
            {
              unknown dst[301741] "dead at end of block" "ref var"
              unknown call_tmp[746399] "expr temp" "maybe param" "maybe type" "temp"
              (746402 'move' call_tmp[746399](301740 call(406259 call (partial) _getRef _mt[243] this[304459]) dst_i[301712]))
              (550093 'move' dst[301741](550092 'addr of' call_tmp[746399]))
              (301744 'end of statement' dst_i[301712])
              unknown call_tmp[746404] "expr temp" "maybe param" "maybe type" "temp"
              (746407 'move' call_tmp[746404](301748 call == dst[301741] x[301689]))
              unknown call_tmp[746409] "expr temp" "maybe param" "maybe type" "temp"
              (746412 'move' call_tmp[746409](301764 call _cond_test call_tmp[746404]))
              if call_tmp[746409]
              {
                (301753 call(406266 call (partial) _destroy _mt[243] this[304459]) dst[301741])
                (491347 'end of statement' dst[301741])
                (301758 call += removed[301720] 1)
                (491349 'end of statement' removed[301720])
                break _breakLabel[301777] _breakLabel[301777]
              }
              (301770 call += dst_i[301712] 1)
              (491351 'end of statement' dst_i[301712])
            }
            label _continueLabel[301776]
            unknown call_tmp[746418] "expr temp" "maybe param" "maybe type" "temp"
            (746421 'move' call_tmp[746418](406275 call _size _mt[243] this[304459]))
            unknown call_tmp[746423] "expr temp" "maybe param" "maybe type" "temp"
            (746426 'move' call_tmp[746423](301784 call < dst_i[301712] call_tmp[746418]))
            (301787 'move' tmp[301773](301782 call _cond_test call_tmp[746423]))
            tmp[301773]
          }
          label _breakLabel[301777]
        }
        unknown call_tmp[746428] "expr temp" "maybe param" "maybe type" "temp"
        (746431 'move' call_tmp[746428](301803 call + dst_i[301712] 1))
        (301805 call = src_i[301708] call_tmp[746428])
        (491353 'end of statement' src_i[301708] dst_i[301712])
        {
          unknown tmp[301884] "temp"
          unknown call_tmp[746435] "expr temp" "maybe param" "maybe type" "temp"
          (746438 'move' call_tmp[746435](406325 call _size _mt[243] this[304459]))
          unknown call_tmp[746440] "expr temp" "maybe param" "maybe type" "temp"
          (746443 'move' call_tmp[746440](301905 call < src_i[301708] call_tmp[746435]))
          (301908 'move' tmp[301884](301903 call _cond_test call_tmp[746440]))
          WhileDo[301889]
          {
            {
              unknown src[301816] "dead at end of block" "ref var"
              unknown call_tmp[746447] "expr temp" "maybe param" "maybe type" "temp"
              (746450 'move' call_tmp[746447](301815 call(406287 call (partial) _getRef _mt[243] this[304459]) src_i[301708]))
              (550096 'move' src[301816](550095 'addr of' call_tmp[746447]))
              (301819 'end of statement')
              unknown tmp[435017] "maybe param" "temp"
              unknown tmp[435038] "maybe param" "temp"
              (435049 'move' tmp[435038](301823 call == count[301696] 0))
              unknown call_tmp[746452] "expr temp" "maybe param" "maybe type" "temp"
              (746455 'move' call_tmp[746452](435051 call _cond_invalid tmp[435038]))
              if call_tmp[746452]
              {
                (435054 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[581177] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581178] "maybe param" "temp"
              unknown call_tmp[746457] "expr temp" "maybe param" "maybe type" "temp"
              (746460 'move' call_tmp[746457](435039 call isTrue tmp[435038]))
              (581183 'move' tmp[581178](581181 call _cond_test call_tmp[746457]))
              if tmp[581178]
              {
                (581188 'move' tmp[581177](581185 '_paramFoldLogical' tmp[581178] 1))
              }
              {
                unknown tmp[581190] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746462] "expr temp" "maybe param" "maybe type" "temp"
                (746465 'move' call_tmp[746462](301827 call < removed[301720] count[301696]))
                (581192 'move' tmp[581190](435043 call isTrue call_tmp[746462]))
                (581197 'move' tmp[581177](581194 '_paramFoldLogical' tmp[581178] tmp[581190]))
              }
              (435028 'move' tmp[435017] tmp[581177])
              unknown call_tmp[746467] "expr temp" "maybe param" "maybe type" "temp"
              (746470 'move' call_tmp[746467](435030 call _cond_invalid tmp[435017]))
              if call_tmp[746467]
              {
                (435033 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[581204] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581205] "maybe param" "temp"
              unknown call_tmp[746472] "expr temp" "maybe param" "maybe type" "temp"
              (746475 'move' call_tmp[746472](435018 call isTrue tmp[435017]))
              (581210 'move' tmp[581205](581208 call _cond_test call_tmp[746472]))
              if tmp[581205]
              {
                unknown tmp[581212] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746477] "expr temp" "maybe param" "maybe type" "temp"
                (746480 'move' call_tmp[746477](301833 call == src[301816] x[301689]))
                (581214 'move' tmp[581212](435021 call isTrue call_tmp[746477]))
                (581219 'move' tmp[581204](581216 '_paramFoldLogical' tmp[581205] tmp[581212]))
              }
              {
                (581224 'move' tmp[581204](581221 '_paramFoldLogical' tmp[581205] 0))
              }
              unknown call_tmp[746482] "expr temp" "maybe param" "maybe type" "temp"
              (746485 'move' call_tmp[746482](301856 call _cond_test tmp[581204]))
              if call_tmp[746482]
              {
                (301840 call(406297 call (partial) _destroy _mt[243] this[304459]) src[301816])
                (491359 'end of statement' src[301816])
                (301845 call += src_i[301708] 1)
                (491361 'end of statement' src_i[301708])
                (301850 call += removed[301720] 1)
                (491363 'end of statement' removed[301720])
                continue _continueLabel[301887] _continueLabel[301887]
              }
              unknown dst[301864] "dead at end of block" "ref var"
              unknown call_tmp[746491] "expr temp" "maybe param" "maybe type" "temp"
              (746494 'move' call_tmp[746491](301863 call(406304 call (partial) _getRef _mt[243] this[304459]) dst_i[301712]))
              (550099 'move' dst[301864](550098 'addr of' call_tmp[746491]))
              (301867 'end of statement' src_i[301708] dst_i[301712])
              (301872 call(406309 call (partial) _move _mt[243] this[304459]) src[301816] dst[301864])
              (491366 'end of statement' src[301816] dst[301864])
              (301876 call += src_i[301708] 1)
              (491369 'end of statement' src_i[301708])
              (301881 call += dst_i[301712] 1)
              (491371 'end of statement' dst_i[301712])
            }
            label _continueLabel[301887]
            unknown call_tmp[746500] "expr temp" "maybe param" "maybe type" "temp"
            (746503 'move' call_tmp[746500](406319 call _size _mt[243] this[304459]))
            unknown call_tmp[746505] "expr temp" "maybe param" "maybe type" "temp"
            (746508 'move' call_tmp[746505](301895 call < src_i[301708] call_tmp[746500]))
            (301898 'move' tmp[301884](301893 call _cond_test call_tmp[746505]))
            tmp[301884]
          }
          label _breakLabel[301888]
        }
        unknown call_tmp[746510] "expr temp" "maybe param" "maybe type" "temp"
        (746513 'move' call_tmp[746510](301926 call _cond_test removed[301720]))
        if call_tmp[746510]
        {
          (301915 call(406330 call (partial) _maybeReleaseMem _mt[243] this[304459]) removed[301720])
          (491373 'end of statement' removed[301720])
          unknown call_tmp[746519] "expr temp" "maybe param" "maybe type" "temp"
          (746522 'move' call_tmp[746519](406336 call _size _mt[243] this[304459]))
          unknown call_tmp[746526] "expr temp" "maybe param" "maybe type" "temp"
          (746529 'move' call_tmp[746526](406341 call _size _mt[243] this[304459]))
          unknown call_tmp[746531] "expr temp" "maybe param" "maybe type" "temp"
          (746534 'move' call_tmp[746531](301921 call - call_tmp[746526] removed[301720]))
          (301923 call = call_tmp[746519] call_tmp[746531])
          (491375 'end of statement' removed[301720])
        }
        (301932 call(406346 call (partial) _leave _mt[243] this[304459]))
        (491377 'end of statement')
        (301936 call = result[301702] removed[301720])
        (491378 'end of statement' result[301702] removed[301720])
      }
      (936612 return _void[55])
    }
    {
    }
    (539470 'move' ret[539464](539469 'coerce' result[301702] int(64)[13]))
    gotoReturn _end_remove[539462] _end_remove[539462]
    (491381 'end of statement' result[301702])
    label _end_remove[539462]
    (539466 return ret[539464])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?)._popAtIndex[301962](arg _mt[304465]:_MT[238], ref arg this[304463]:list[304289](?), arg idx[301959]:int(64)[13], arg unlockBeforeHalt[301965] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539476] "RVV" "temp"
    unknown tmp[435059] "maybe param" "temp"
    (435070 'move' tmp[435059] 1)
    unknown call_tmp[746538] "expr temp" "maybe param" "maybe type" "temp"
    (746541 'move' call_tmp[746538](435072 call _cond_invalid tmp[435059]))
    if call_tmp[746538]
    {
      (435075 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581232] "maybe param" "temp"
    unknown call_tmp[746543] "expr temp" "maybe param" "maybe type" "temp"
    (746546 'move' call_tmp[746543](435060 call isTrue tmp[435059]))
    (581237 'move' tmp[581232](581235 call _cond_test call_tmp[746543]))
    if tmp[581232]
    {
      unknown tmp[581239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746550] "expr temp" "maybe param" "maybe type" "temp"
      (746553 'move' call_tmp[746550](406360 call _size _mt[243] this[304463]))
      unknown call_tmp[746555] "expr temp" "maybe param" "maybe type" "temp"
      (746558 'move' call_tmp[746555](301972 call <= call_tmp[746550] 0))
      (581241 'move' tmp[581239](435063 call isTrue call_tmp[746555]))
      (581246 'move' tmp[581231](581243 '_paramFoldLogical' tmp[581232] tmp[581239]))
    }
    {
      (581251 'move' tmp[581231](581248 '_paramFoldLogical' tmp[581232] 0))
    }
    unknown call_tmp[746560] "expr temp" "maybe param" "maybe type" "temp"
    (746563 'move' call_tmp[746560](302008 call _cond_test tmp[581231]))
    if call_tmp[746560]
    {
      unknown call_tmp[746565] "expr temp" "maybe param" "maybe type" "temp"
      (746568 'move' call_tmp[746565](301981 call _cond_test unlockBeforeHalt[301965]))
      if call_tmp[746565]
      {
        (301979 call(406365 call (partial) _leave _mt[243] this[304463]))
      }
      (302006 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[435080] "maybe param" "temp"
    (435091 'move' tmp[435080] 1)
    unknown call_tmp[746572] "expr temp" "maybe param" "maybe type" "temp"
    (746575 'move' call_tmp[746572](435093 call _cond_invalid tmp[435080]))
    if call_tmp[746572]
    {
      (435096 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581258] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581259] "maybe param" "temp"
    unknown call_tmp[746577] "expr temp" "maybe param" "maybe type" "temp"
    (746580 'move' call_tmp[746577](435081 call isTrue tmp[435080]))
    (581264 'move' tmp[581259](581262 call _cond_test call_tmp[746577]))
    if tmp[581259]
    {
      unknown tmp[581266] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746584] "expr temp" "maybe param" "maybe type" "temp"
      (746587 'move' call_tmp[746584](302017 call(406370 call (partial) _withinBounds _mt[243] this[304463]) idx[301959]))
      unknown call_tmp[746589] "expr temp" "maybe param" "maybe type" "temp"
      (746592 'move' call_tmp[746589](302018 call ! call_tmp[746584]))
      (581268 'move' tmp[581266](435084 call isTrue call_tmp[746589]))
      (581273 'move' tmp[581258](581270 '_paramFoldLogical' tmp[581259] tmp[581266]))
    }
    {
      (581278 'move' tmp[581258](581275 '_paramFoldLogical' tmp[581259] 0))
    }
    unknown call_tmp[746594] "expr temp" "maybe param" "maybe type" "temp"
    (746597 'move' call_tmp[746594](302065 call _cond_test tmp[581258]))
    if call_tmp[746594]
    {
      unknown call_tmp[746599] "expr temp" "maybe param" "maybe type" "temp"
      (746602 'move' call_tmp[746599](302027 call _cond_test unlockBeforeHalt[301965]))
      if call_tmp[746599]
      {
        (302025 call(406376 call (partial) _leave _mt[243] this[304463]))
      }
      unknown call_tmp[746606] "expr temp" "maybe param" "maybe type" "temp"
      (746609 'move' call_tmp[746606](302052 call _cast string[26] idx[301959]))
      unknown call_tmp[746611] "maybe param" "maybe type" "temp"
      (746614 'move' call_tmp[746611](302054 call + "Index for \"list.pop\" out of bounds: " call_tmp[746606]))
      const msg[302056] "dead at end of block" "const" "insert auto destroy"
      (550101 'init var' msg[302056] call_tmp[746611])
      (302059 'end of statement')
      (302063 call boundsCheckHalt msg[302056])
      (491388 'end of statement' msg[302056])
    }
    unknown item[302073] "dead at end of block" "ref var"
    unknown call_tmp[746618] "expr temp" "maybe param" "maybe type" "temp"
    (746621 'move' call_tmp[746618](302072 call(406382 call (partial) _getRef _mt[243] this[304463]) idx[301959]))
    (550104 'move' item[302073](550103 'addr of' call_tmp[746618]))
    (302076 'end of statement')
    unknown result[302078] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746625] "expr temp" "maybe param" "maybe type" "temp"
    (746628 'move' call_tmp[746625](406388 call eltType _mt[243] this[304463]))
    (550106 'default init var' result[302078] call_tmp[746625])
    (302081 'end of statement')
    (302086 call(406392 call (partial) _move _mt[243] this[304463]) item[302073] result[302078])
    (491390 'end of statement' item[302073] result[302078])
    (302091 call(406400 call (partial) _collapse _mt[243] this[304463]) idx[301959])
    (491393 'end of statement')
    unknown call_tmp[746636] "expr temp" "maybe param" "maybe type" "temp"
    (746639 'move' call_tmp[746636](406406 call _size _mt[243] this[304463]))
    (302095 call -= call_tmp[746636] 1)
    (491394 'end of statement')
    unknown call_tmp[746643] "expr temp" "maybe param" "maybe type" "temp"
    (746646 'move' call_tmp[746643](539481 call eltType _mt[243] this[304463]))
    (539485 'move' ret[539476](539484 'coerce' result[302078] call_tmp[746643]))
    gotoReturn _end__popAtIndex[539474] _end__popAtIndex[539474]
    (491395 'end of statement' result[302078])
    label _end__popAtIndex[539474]
    (539478 return ret[539476])
  }
  { scopeless type
    (406354 call eltType _mt[243] this[304463])
  }
  function list[304289](?).pop[302106](arg _mt[304469]:_MT[238], ref arg this[304467]:list[304289](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539491] "RVV" "temp"
    (302111 call(406416 call (partial) _enter _mt[243] this[304467]))
    (491397 'end of statement')
    unknown call_tmp[746656] "expr temp" "maybe param" "maybe type" "temp"
    (746659 'move' call_tmp[746656](406427 call _size _mt[243] this[304467]))
    unknown call_tmp[746661] "expr temp" "maybe param" "maybe type" "temp"
    (746664 'move' call_tmp[746661](302117 call - call_tmp[746656] 1))
    unknown call_tmp[746666] "maybe param" "maybe type" "temp"
    (746669 'move' call_tmp[746666](302120 call(406422 call (partial) _popAtIndex _mt[243] this[304467]) call_tmp[746661]))
    unknown result[302121] "dead at end of block" "insert auto destroy"
    (550108 'init var' result[302121] call_tmp[746666])
    (302124 'end of statement')
    (302127 call(406431 call (partial) _leave _mt[243] this[304467]))
    (491398 'end of statement')
    unknown call_tmp[746675] "expr temp" "maybe param" "maybe type" "temp"
    (746678 'move' call_tmp[746675](539496 call eltType _mt[243] this[304467]))
    (539500 'move' ret[539491](539499 'coerce' result[302121] call_tmp[746675]))
    gotoReturn _end_pop[539489] _end_pop[539489]
    (491399 'end of statement' result[302121])
    label _end_pop[539489]
    (539493 return ret[539491])
  }
  { scopeless type
    (406412 call eltType _mt[243] this[304467])
  }
  function list[304289](?).pop[302141](arg _mt[304473]:_MT[238], ref arg this[304471]:list[304289](?), arg idx[302138]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539506] "RVV" "temp"
    (302146 call(406441 call (partial) _enter _mt[243] this[304471]))
    (491401 'end of statement')
    unknown call_tmp[746686] "maybe param" "maybe type" "temp"
    (746689 'move' call_tmp[746686](302152 call(406445 call (partial) _popAtIndex _mt[243] this[304471]) idx[302138]))
    unknown result[302153] "dead at end of block" "insert auto destroy"
    (550110 'init var' result[302153] call_tmp[746686])
    (302156 'end of statement')
    (302159 call(406450 call (partial) _leave _mt[243] this[304471]))
    (491402 'end of statement')
    unknown call_tmp[746695] "expr temp" "maybe param" "maybe type" "temp"
    (746698 'move' call_tmp[746695](539511 call eltType _mt[243] this[304471]))
    (539515 'move' ret[539506](539514 'coerce' result[302153] call_tmp[746695]))
    gotoReturn _end_pop[539504] _end_pop[539504]
    (491403 'end of statement' result[302153])
    label _end_pop[539504]
    (539508 return ret[539506])
  }
  { scopeless type
    (406437 call eltType _mt[243] this[304471])
  }
  function list[304289](?)._fireAllDestructors[302169](arg _mt[304477]:_MT[238], arg this[304475]:list[304289](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[302242] "const" "temp"
    unknown call_tmp[746702] "expr temp" "maybe param" "maybe type" "temp"
    (746705 'move' call_tmp[746702](302239 '_wide_get_locale' this[304475]))
    (302244 'move' tmp[302242](302240 'deref' call_tmp[746702]))
    (936618 call on_fn[936614] tmp[302242])
    function on_fn[936614](const in arg dummy_locale_arg[936616]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown _indexOfInterest[302193] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302194] "expr temp" "temp"
          unknown call_tmp[746709] "expr temp" "maybe param" "maybe type" "temp"
          (746712 'move' call_tmp[746709](406467 call _size _mt[243] this[304475]))
          unknown call_tmp[746714] "expr temp" "maybe param" "maybe type" "temp"
          (746717 'move' call_tmp[746714](302210 call chpl_direct_counted_range_iter 0 call_tmp[746709]))
          (302203 'move' _iterator[302194](302201 call _getIterator call_tmp[746714]))
          Defer
          {
            {
              (302226 call _freeIterator _iterator[302194])
            }
          }
          { scopeless type
            (302215 'move' _indexOfInterest[302193](302212 call iteratorIndex _iterator[302194]))
          }
          ForLoop[302195]
          {
            unknown i[302219] "index var" "insert auto destroy"
            (491406 'end of statement')
            (302221 'move' i[302219] _indexOfInterest[302193])
            (491407 'end of statement' i[302219])
            {
              unknown item[302183] "dead at end of block" "ref var"
              unknown call_tmp[746721] "expr temp" "maybe param" "maybe type" "temp"
              (746724 'move' call_tmp[746721](302182 call(406456 call (partial) _getRef _mt[243] this[304475]) i[302219]))
              (550113 'move' item[302183](550112 'addr of' call_tmp[746721]))
              (302186 'end of statement' i[302219])
              (302191 call(406461 call (partial) _destroy _mt[243] this[304475]) item[302183])
              (491410 'end of statement' item[302183])
            }
            label _continueLabel[302198]
            _indexOfInterest[302193]
            _iterator[302194]
          }
          label _breakLabel[302199]
        }
        unknown call_tmp[746730] "expr temp" "maybe param" "maybe type" "temp"
        (746733 'move' call_tmp[746730](406472 call _size _mt[243] this[304475]))
        (302236 call = call_tmp[746730] 0)
      }
      (936621 return _void[55])
    }
    {
    }
    (539521 return _void[55])
  }
  function list[304289](?)._freeAllArrays[302257](arg _mt[304481]:_MT[238], arg this[304479]:list[304289](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746737] "expr temp" "maybe param" "maybe type" "temp"
    (746740 'move' call_tmp[746737](406477 call _arrays _mt[243] this[304479]))
    unknown call_tmp[746742] "expr temp" "maybe param" "maybe type" "temp"
    (746745 'move' call_tmp[746742](302261 call == call_tmp[746737] nil[44]))
    unknown call_tmp[746747] "expr temp" "maybe param" "maybe type" "temp"
    (746750 'move' call_tmp[746747](302265 call _cond_test call_tmp[746742]))
    if call_tmp[746747]
    {
      gotoReturn _end__freeAllArrays[539523] _end__freeAllArrays[539523]
    }
    unknown call_tmp[746754] "expr temp" "maybe param" "maybe type" "temp"
    (746757 'move' call_tmp[746754](406482 call _totalCapacity _mt[243] this[304479]))
    unknown call_tmp[746759] "expr temp" "maybe param" "maybe type" "temp"
    (746762 'move' call_tmp[746759](302274 call != call_tmp[746754] 0))
    (302277 call _sanity call_tmp[746759])
    (491415 'end of statement')
    unknown call_tmp[746766] "expr temp" "maybe param" "maybe type" "temp"
    (746769 'move' call_tmp[746766](406487 call _arrayCapacity _mt[243] this[304479]))
    unknown call_tmp[746771] "expr temp" "maybe param" "maybe type" "temp"
    (746774 'move' call_tmp[746771](302282 call != call_tmp[746766] 0))
    (302285 call _sanity call_tmp[746771])
    (491416 'end of statement')
    const tmp[302408] "const" "temp"
    unknown call_tmp[746776] "expr temp" "maybe param" "maybe type" "temp"
    (746779 'move' call_tmp[746776](302405 '_wide_get_locale' this[304479]))
    (302410 'move' tmp[302408](302406 'deref' call_tmp[746776]))
    (936627 call on_fn[936623] tmp[302408])
    function on_fn[936623](const in arg dummy_locale_arg[936625]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        {
          unknown _indexOfInterest[302340] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302341] "expr temp" "temp"
          unknown call_tmp[746783] "expr temp" "maybe param" "maybe type" "temp"
          (746786 'move' call_tmp[746783](406518 call _arrayCapacity _mt[243] this[304479]))
          unknown call_tmp[746788] "expr temp" "maybe param" "maybe type" "temp"
          (746791 'move' call_tmp[746788](302357 call chpl_direct_counted_range_iter 0 call_tmp[746783]))
          (302350 'move' _iterator[302341](302348 call _getIterator call_tmp[746788]))
          Defer
          {
            {
              (302373 call _freeIterator _iterator[302341])
            }
          }
          { scopeless type
            (302362 'move' _indexOfInterest[302340](302359 call iteratorIndex _iterator[302341]))
          }
          ForLoop[302342]
          {
            unknown i[302366] "index var" "insert auto destroy"
            (491418 'end of statement')
            (302368 'move' i[302366] _indexOfInterest[302340])
            (491419 'end of statement' i[302366])
            {
              unknown array[302299] "dead at end of block" "ref var"
              unknown call_tmp[746795] "expr temp" "maybe param" "maybe type" "temp"
              (746798 'move' call_tmp[746795](302298 call(406493 call (partial) _arrays _mt[243] this[304479]) i[302366]))
              (550116 'move' array[302299](550115 'addr of' call_tmp[746795]))
              (302302 'end of statement')
              unknown call_tmp[746800] "expr temp" "maybe param" "maybe type" "temp"
              (746803 'move' call_tmp[746800](302306 call == array[302299] nil[44]))
              unknown call_tmp[746805] "expr temp" "maybe param" "maybe type" "temp"
              (746808 'move' call_tmp[746805](302311 call _cond_test call_tmp[746800]))
              if call_tmp[746805]
              {
                continue _continueLabel[302345] _continueLabel[302345]
              }
              unknown call_tmp[746812] "maybe param" "maybe type" "temp"
              (746815 'move' call_tmp[746812](302319 call(406499 call (partial) _getArrayCapacity _mt[243] this[304479]) i[302366]))
              const capacity[302320] "dead at end of block" "const" "insert auto destroy"
              (550118 'init var' capacity[302320] call_tmp[746812])
              (302323 'end of statement' i[302366] i[302366])
              unknown call_tmp[746819] "expr temp" "maybe param" "maybe type" "temp"
              (746822 'move' call_tmp[746819](406505 call _totalCapacity _mt[243] this[304479]))
              (302326 call -= call_tmp[746819] capacity[302320])
              (491423 'end of statement' capacity[302320])
              (302333 call(406510 call (partial) _freeArray _mt[243] this[304479]) array[302299] capacity[302320])
              (491425 'end of statement' array[302299] capacity[302320])
              (302337 call = array[302299] nil[44])
              (491428 'end of statement' array[302299])
            }
            label _continueLabel[302345]
            _indexOfInterest[302340]
            _iterator[302341]
          }
          label _breakLabel[302346]
        }
        unknown call_tmp[746828] "expr temp" "maybe param" "maybe type" "temp"
        (746831 'move' call_tmp[746828](406523 call _totalCapacity _mt[243] this[304479]))
        unknown call_tmp[746833] "expr temp" "maybe param" "maybe type" "temp"
        (746836 'move' call_tmp[746833](302384 call == call_tmp[746828] 0))
        (302387 call _sanity call_tmp[746833])
        (491430 'end of statement')
        unknown call_tmp[746842] "expr temp" "maybe param" "maybe type" "temp"
        (746845 'move' call_tmp[746842](406532 call _arrays _mt[243] this[304479]))
        unknown call_tmp[746849] "expr temp" "maybe param" "maybe type" "temp"
        (746852 'move' call_tmp[746849](406537 call _arrayCapacity _mt[243] this[304479]))
        (302393 call(406527 call (partial) _freeBlockArray _mt[243] this[304479]) call_tmp[746842] call_tmp[746849])
        (491431 'end of statement')
        unknown call_tmp[746856] "expr temp" "maybe param" "maybe type" "temp"
        (746859 'move' call_tmp[746856](406542 call _arrays _mt[243] this[304479]))
        (302397 call = call_tmp[746856] nil[44])
        (491432 'end of statement')
        unknown call_tmp[746863] "expr temp" "maybe param" "maybe type" "temp"
        (746866 'move' call_tmp[746863](406547 call _size _mt[243] this[304479]))
        (302402 call = call_tmp[746863] 0)
      }
      (936630 return _void[55])
    }
    {
    }
    label _end__freeAllArrays[539523]
    (539525 return _void[55])
  }
  function list[304289](?).clear[302422](arg _mt[304485]:_MT[238], ref arg this[304483]:list[304289](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302473] "const" "temp"
    unknown call_tmp[746868] "expr temp" "maybe param" "maybe type" "temp"
    (746871 'move' call_tmp[746868](302470 '_wide_get_locale' this[304483]))
    (302475 'move' tmp[302473](302471 'deref' call_tmp[746868]))
    (936636 call on_fn[936632] tmp[302473])
    function on_fn[936632](const in arg dummy_locale_arg[936634]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (302427 call(406552 call (partial) _enter _mt[243] this[304483]))
        (491435 'end of statement')
        (302432 call(406556 call (partial) _fireAllDestructors _mt[243] this[304483]))
        (491436 'end of statement')
        (302436 call(406560 call (partial) _freeAllArrays _mt[243] this[304483]))
        (491437 'end of statement')
        unknown call_tmp[746881] "expr temp" "maybe param" "maybe type" "temp"
        (746884 'move' call_tmp[746881](406565 call _totalCapacity _mt[243] this[304483]))
        unknown call_tmp[746886] "expr temp" "maybe param" "maybe type" "temp"
        (746889 'move' call_tmp[746886](302441 call == call_tmp[746881] 0))
        (302444 call _sanity call_tmp[746886])
        (491438 'end of statement')
        unknown call_tmp[746893] "expr temp" "maybe param" "maybe type" "temp"
        (746896 'move' call_tmp[746893](406570 call _size _mt[243] this[304483]))
        unknown call_tmp[746898] "expr temp" "maybe param" "maybe type" "temp"
        (746901 'move' call_tmp[746898](302449 call == call_tmp[746893] 0))
        (302452 call _sanity call_tmp[746898])
        (491439 'end of statement')
        unknown call_tmp[746905] "expr temp" "maybe param" "maybe type" "temp"
        (746908 'move' call_tmp[746905](406575 call _arrays _mt[243] this[304483]))
        unknown call_tmp[746910] "expr temp" "maybe param" "maybe type" "temp"
        (746913 'move' call_tmp[746910](302457 call == call_tmp[746905] nil[44]))
        (302460 call _sanity call_tmp[746910])
        (491440 'end of statement')
        (302464 call(406579 call (partial) _firstTimeInitializeArrays _mt[243] this[304483]))
        (491441 'end of statement')
        (302468 call(406583 call (partial) _leave _mt[243] this[304483]))
      }
      (936639 return _void[55])
    }
    {
    }
    (539529 return _void[55])
  }
  function list[304289](?).indexOf[302490](arg _mt[304489]:_MT[238], const arg this[304487]:list[304289](?), arg x[302487] :
  (406588 call eltType _mt[243] this[304487]), arg start[302494]:int(64)[13] =
  0, arg end[302502]:int(64)[13] =
  (302500 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539533] "RVV" "temp"
    unknown call_tmp[746921] "expr temp" "maybe param" "maybe type" "temp"
    (746924 'move' call_tmp[746921](302618 call _cond_test 1))
    if call_tmp[746921]
    {
      const msg[302525] "dead at end of block" "const" "insert auto destroy"
      (550120 'init var' msg[302525] " index for \"list.indexOf\" out of bounds: ")
      (302528 'end of statement')
      unknown tmp[435101] "maybe param" "temp"
      (435112 'move' tmp[435101](302532 call >= end[302502] 0))
      unknown call_tmp[746926] "expr temp" "maybe param" "maybe type" "temp"
      (746929 'move' call_tmp[746926](435114 call _cond_invalid tmp[435101]))
      if call_tmp[746926]
      {
        (435117 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581285] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581286] "maybe param" "temp"
      unknown call_tmp[746931] "expr temp" "maybe param" "maybe type" "temp"
      (746934 'move' call_tmp[746931](435102 call isTrue tmp[435101]))
      (581291 'move' tmp[581286](581289 call _cond_test call_tmp[746931]))
      if tmp[581286]
      {
        unknown tmp[581293] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746938] "expr temp" "maybe param" "maybe type" "temp"
        (746941 'move' call_tmp[746938](302537 call(406594 call (partial) _withinBounds _mt[243] this[304487]) end[302502]))
        unknown call_tmp[746943] "expr temp" "maybe param" "maybe type" "temp"
        (746946 'move' call_tmp[746943](302538 call ! call_tmp[746938]))
        (581295 'move' tmp[581293](435105 call isTrue call_tmp[746943]))
        (581300 'move' tmp[581285](581297 '_paramFoldLogical' tmp[581286] tmp[581293]))
      }
      {
        (581305 'move' tmp[581285](581302 '_paramFoldLogical' tmp[581286] 0))
      }
      unknown call_tmp[746948] "expr temp" "maybe param" "maybe type" "temp"
      (746951 'move' call_tmp[746948](302572 call _cond_test tmp[581285]))
      if call_tmp[746948]
      {
        unknown call_tmp[746953] "expr temp" "maybe param" "maybe type" "temp"
        (746956 'move' call_tmp[746953](302561 call + "End" msg[302525]))
        unknown call_tmp[746958] "expr temp" "maybe param" "maybe type" "temp"
        (746961 'move' call_tmp[746958](302565 call _cast string[26] end[302502]))
        unknown call_tmp[746963] "expr temp" "maybe param" "maybe type" "temp"
        (746966 'move' call_tmp[746963](302567 call + call_tmp[746953] call_tmp[746958]))
        (302570 call boundsCheckHalt call_tmp[746963])
        (491444 'end of statement' msg[302525])
      }
      unknown call_tmp[746970] "expr temp" "maybe param" "maybe type" "temp"
      (746973 'move' call_tmp[746970](302580 call(406601 call (partial) _withinBounds _mt[243] this[304487]) start[302494]))
      unknown call_tmp[746975] "expr temp" "maybe param" "maybe type" "temp"
      (746978 'move' call_tmp[746975](302581 call ! call_tmp[746970]))
      unknown call_tmp[746980] "expr temp" "maybe param" "maybe type" "temp"
      (746983 'move' call_tmp[746980](302613 call _cond_test call_tmp[746975]))
      if call_tmp[746980]
      {
        unknown call_tmp[746985] "expr temp" "maybe param" "maybe type" "temp"
        (746988 'move' call_tmp[746985](302602 call + "Start" msg[302525]))
        unknown call_tmp[746990] "expr temp" "maybe param" "maybe type" "temp"
        (746993 'move' call_tmp[746990](302606 call _cast string[26] start[302494]))
        unknown call_tmp[746995] "expr temp" "maybe param" "maybe type" "temp"
        (746998 'move' call_tmp[746995](302608 call + call_tmp[746985] call_tmp[746990]))
        (302611 call boundsCheckHalt call_tmp[746995])
        (491446 'end of statement' msg[302525])
      }
    }
    unknown call_tmp[747000] "maybe param" "maybe type" "temp"
    (747003 'move' call_tmp[747000](302624 call - 1))
    unknown error[302626] "dead at end of block" "param"
    (550122 'init var' error[302626] call_tmp[747000])
    (302629 'end of statement')
    unknown tmp[435122] "maybe param" "temp"
    (435133 'move' tmp[435122](302632 call >= end[302502] 0))
    unknown call_tmp[747005] "expr temp" "maybe param" "maybe type" "temp"
    (747008 'move' call_tmp[747005](435135 call _cond_invalid tmp[435122]))
    if call_tmp[747005]
    {
      (435138 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581312] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581313] "maybe param" "temp"
    unknown call_tmp[747010] "expr temp" "maybe param" "maybe type" "temp"
    (747013 'move' call_tmp[747010](435123 call isTrue tmp[435122]))
    (581318 'move' tmp[581313](581316 call _cond_test call_tmp[747010]))
    if tmp[581313]
    {
      unknown tmp[581320] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747015] "expr temp" "maybe param" "maybe type" "temp"
      (747018 'move' call_tmp[747015](302636 call < end[302502] start[302494]))
      (581322 'move' tmp[581320](435126 call isTrue call_tmp[747015]))
      (581327 'move' tmp[581312](581324 '_paramFoldLogical' tmp[581313] tmp[581320]))
    }
    {
      (581332 'move' tmp[581312](581329 '_paramFoldLogical' tmp[581313] 0))
    }
    unknown call_tmp[747020] "expr temp" "maybe param" "maybe type" "temp"
    (747023 'move' call_tmp[747020](302643 call _cond_test tmp[581312]))
    if call_tmp[747020]
    {
      (539539 'move' ret[539533](539538 'coerce' error[302626] int(64)[13]))
      gotoReturn _end_indexOf[539531] _end_indexOf[539531]
    }
    unknown result[302649] "dead at end of block" "insert auto destroy"
    (550124 'init var' result[302649] error[302626])
    (302652 'end of statement')
    const tmp[302745] "const" "temp"
    unknown call_tmp[747025] "expr temp" "maybe param" "maybe type" "temp"
    (747028 'move' call_tmp[747025](302742 '_wide_get_locale' this[304487]))
    (302747 'move' tmp[302745](302743 'deref' call_tmp[747025]))
    (936645 call on_fn[936641] tmp[302745])
    function on_fn[936641](const in arg dummy_locale_arg[936643]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (302656 call(406614 call (partial) _enter _mt[243] this[304487]))
        (491450 'end of statement')
        const stop[302671] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581339] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581340] "maybe param" "temp"
        unknown call_tmp[747032] "expr temp" "maybe param" "maybe type" "temp"
        (747035 'move' call_tmp[747032](302661 call < end[302502] 0))
        (581345 'move' tmp[581340](581343 call _cond_test call_tmp[747032]))
        if tmp[581340]
        {
          unknown tmp[581347] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747039] "expr temp" "maybe param" "maybe type" "temp"
          (747042 'move' call_tmp[747039](406620 call _size _mt[243] this[304487]))
          (581349 'move' tmp[581347](302665 call - call_tmp[747039] 1))
          (581354 'move' tmp[581339](581351 '_paramFoldLogical' tmp[581340] tmp[581347]))
        }
        {
          (581359 'move' tmp[581339](581356 '_paramFoldLogical' tmp[581340] end[302502]))
        }
        (550126 'init var' stop[302671] tmp[581339])
        (302674 'end of statement')
        {
          unknown _indexOfInterest[302700] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302701] "expr temp" "temp"
          unknown call_tmp[747044] "expr temp" "maybe param" "maybe type" "temp"
          (747047 'move' call_tmp[747044](302715 call chpl_direct_range_iter start[302494] stop[302671] 1))
          (302710 'move' _iterator[302701](302708 call _getIterator call_tmp[747044]))
          Defer
          {
            {
              (302731 call _freeIterator _iterator[302701])
            }
          }
          { scopeless type
            (302720 'move' _indexOfInterest[302700](302717 call iteratorIndex _iterator[302701]))
          }
          ForLoop[302702]
          {
            unknown i[302724] "index var" "insert auto destroy"
            (491452 'end of statement')
            (302726 'move' i[302724] _indexOfInterest[302700])
            (491453 'end of statement' i[302724])
            unknown call_tmp[747051] "expr temp" "maybe param" "maybe type" "temp"
            (747054 'move' call_tmp[747051](302684 call(406626 call (partial) _getRef _mt[243] this[304487]) i[302724]))
            unknown call_tmp[747056] "expr temp" "maybe param" "maybe type" "temp"
            (747059 'move' call_tmp[747056](302685 call == x[302487] call_tmp[747051]))
            unknown call_tmp[747061] "expr temp" "maybe param" "maybe type" "temp"
            (747064 'move' call_tmp[747061](302696 call _cond_test call_tmp[747056]))
            if call_tmp[747061]
            {
              (302689 call = result[302649] i[302724])
              (491455 'end of statement' result[302649] i[302724])
              break _breakLabel[302706] _breakLabel[302706]
            }
            label _continueLabel[302705]
            _indexOfInterest[302700]
            _iterator[302701]
          }
          label _breakLabel[302706]
        }
        (302740 call(406635 call (partial) _leave _mt[243] this[304487]))
      }
      (936648 return _void[55])
    }
    {
    }
    (539545 'move' ret[539533](539544 'coerce' result[302649] int(64)[13]))
    gotoReturn _end_indexOf[539531] _end_indexOf[539531]
    (491459 'end of statement' result[302649])
    label _end_indexOf[539531]
    (539535 return ret[539533])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?).count[302765](arg _mt[304493]:_MT[238], const arg this[304491]:list[304289](?), arg x[302762] :
  (406641 call eltType _mt[243] this[304491])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539551] "RVV" "temp"
    unknown result[302769] "dead at end of block" "insert auto destroy"
    (550128 'init var' result[302769] 0)
    (302772 'end of statement')
    const tmp[302846] "const" "temp"
    unknown call_tmp[747070] "expr temp" "maybe param" "maybe type" "temp"
    (747073 'move' call_tmp[747070](302843 '_wide_get_locale' this[304491]))
    (302848 'move' tmp[302846](302844 'deref' call_tmp[747070]))
    (936654 call on_fn[936650] tmp[302846])
    function on_fn[936650](const in arg dummy_locale_arg[936652]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (302777 call(406646 call (partial) _enter _mt[243] this[304491]))
        (491461 'end of statement')
        unknown count[302781] "dead at end of block" "insert auto destroy"
        (550130 'init var' count[302781] 0)
        (302784 'end of statement')
        {
          unknown _indexOfInterest[302801] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302802] "expr temp" "temp"
          (302811 'move' _iterator[302802](302809 call _getIterator this[304491]))
          Defer
          {
            {
              (302827 call _freeIterator _iterator[302802])
            }
          }
          { scopeless type
            (302816 'move' _indexOfInterest[302801](302813 call iteratorIndex _iterator[302802]))
          }
          ForLoop[302803]
          {
            unknown item[302820] "index var" "insert auto destroy"
            (491463 'end of statement')
            (302822 'move' item[302820] _indexOfInterest[302801])
            (491464 'end of statement' item[302820])
            unknown call_tmp[747077] "expr temp" "maybe param" "maybe type" "temp"
            (747080 'move' call_tmp[747077](302789 call == x[302762] item[302820]))
            unknown call_tmp[747082] "expr temp" "maybe param" "maybe type" "temp"
            (747085 'move' call_tmp[747082](302796 call _cond_test call_tmp[747077]))
            if call_tmp[747082]
            {
              (302793 call += count[302781] 1)
              (491466 'end of statement' count[302781])
            }
            label _continueLabel[302806]
            _indexOfInterest[302801]
            _iterator[302802]
          }
          label _breakLabel[302807]
        }
        (302836 call = result[302769] count[302781])
        (491468 'end of statement' result[302769] count[302781])
        (302841 call(406656 call (partial) _leave _mt[243] this[304491]))
      }
      (936657 return _void[55])
    }
    {
    }
    (539557 'move' ret[539551](539556 'coerce' result[302769] int(64)[13]))
    gotoReturn _end_count[539549] _end_count[539549]
    (491472 'end of statement' result[302769])
    label _end_count[539549]
    (539553 return ret[539551])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304289](?).sort[302872](arg _mt[304497]:_MT[238], ref arg this[304495]:list[304289](?), arg comparator[302868]:_any[178](?) :
  defaultComparator[268065] =
  defaultComparator[268065]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302998] "const" "temp"
    unknown call_tmp[747089] "expr temp" "maybe param" "maybe type" "temp"
    (747092 'move' call_tmp[747089](302995 '_wide_get_locale' this[304495]))
    (303000 'move' tmp[302998](302996 'deref' call_tmp[747089]))
    (936663 call on_fn[936659] tmp[302998])
    function on_fn[936659](const in arg dummy_locale_arg[936661]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (302877 call(406662 call (partial) _enter _mt[243] this[304495]))
        (491474 'end of statement')
        unknown call_tmp[747098] "expr temp" "maybe param" "maybe type" "temp"
        (747101 'move' call_tmp[747098](406667 call _size _mt[243] this[304495]))
        unknown call_tmp[747103] "expr temp" "maybe param" "maybe type" "temp"
        (747106 'move' call_tmp[747103](302882 call > call_tmp[747098] 1))
        unknown call_tmp[747108] "expr temp" "maybe param" "maybe type" "temp"
        (747111 'move' call_tmp[747108](302987 call _cond_test call_tmp[747103]))
        if call_tmp[747108]
        {
          unknown arr[302896] "dead at end of block" "insert auto destroy"
          unknown call_tmp[747113] "expr temp" "maybe param" "maybe type" "temp"
          (747116 'move' call_tmp[747113](302885 call chpl_build_low_bounded_range 0))
          unknown call_tmp[747120] "expr temp" "maybe param" "maybe type" "temp"
          (747123 'move' call_tmp[747120](406672 call _size _mt[243] this[304495]))
          unknown call_tmp[747125] "expr temp" "maybe param" "maybe type" "temp"
          (747128 'move' call_tmp[747125](302888 call # call_tmp[747113] call_tmp[747120]))
          unknown call_tmp[747130] "expr temp" "maybe param" "maybe type" "temp"
          (747133 'move' call_tmp[747130](302892 call chpl__ensureDomainExpr call_tmp[747125]))
          unknown call_tmp[747137] "expr temp" "maybe param" "maybe type" "temp"
          (747140 'move' call_tmp[747137](406677 call eltType _mt[243] this[304495]))
          unknown call_tmp[747142] "expr temp" "maybe param" "maybe type" "temp"
          (747145 'move' call_tmp[747142](302894 call chpl__buildArrayRuntimeType call_tmp[747130] call_tmp[747137]))
          (550132 'default init var' arr[302896] call_tmp[747142])
          (302899 'end of statement')
          {
            unknown _indexOfInterest[302919] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302920] "expr temp" "temp"
            unknown call_tmp[747149] "expr temp" "maybe param" "maybe type" "temp"
            (747152 'move' call_tmp[747149](406686 call _size _mt[243] this[304495]))
            unknown call_tmp[747154] "expr temp" "maybe param" "maybe type" "temp"
            (747157 'move' call_tmp[747154](302936 call chpl_direct_counted_range_iter 0 call_tmp[747149]))
            (302929 'move' _iterator[302920](302927 call _getIterator call_tmp[747154]))
            Defer
            {
              {
                (302952 call _freeIterator _iterator[302920])
              }
            }
            { scopeless type
              (302941 'move' _indexOfInterest[302919](302938 call iteratorIndex _iterator[302920]))
            }
            ForLoop[302921]
            {
              unknown i[302945] "index var" "insert auto destroy"
              (491476 'end of statement')
              (302947 'move' i[302945] _indexOfInterest[302919])
              (491477 'end of statement' i[302945])
              unknown call_tmp[747159] "expr temp" "maybe param" "maybe type" "temp"
              (747162 'move' call_tmp[747159](302911 call arr[302896] i[302945]))
              unknown call_tmp[747164] "expr temp" "maybe param" "maybe type" "temp"
              (747167 'move' call_tmp[747164](302915 call this[304495] i[302945]))
              (302916 call = call_tmp[747159] call_tmp[747164])
              (491479 'end of statement' arr[302896] i[302945] i[302945])
              label _continueLabel[302924]
              _indexOfInterest[302919]
              _iterator[302920]
            }
            label _breakLabel[302925]
          }
          (302968 call sort module=[255] Sort[268056] arr[302896] comparator[302868])
          (491483 'end of statement' arr[302896])
          (302972 call(406692 call (partial) _fireAllDestructors _mt[243] this[304495]))
          (491485 'end of statement')
          (302976 call(406696 call (partial) _freeAllArrays _mt[243] this[304495]))
          (491486 'end of statement')
          (302980 call(406700 call (partial) _firstTimeInitializeArrays _mt[243] this[304495]))
          (491487 'end of statement')
          (302985 call(406704 call (partial) _extendGeneric _mt[243] this[304495]) arr[302896])
          (491488 'end of statement' arr[302896])
          (365061 'referenced modules list' Sort[268056])
        }
        (302993 call(406709 call (partial) _leave _mt[243] this[304495]))
      }
      (936666 return _void[55])
    }
    {
    }
    (539563 return _void[55])
  }
  function list[304289](?).this[303017](arg _mt[304501]:_MT[238], ref arg this[304499]:list[304289](?), arg i[303014]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539567] "RVV" "temp"
    unknown tmp[435143] "maybe param" "temp"
    (435154 'move' tmp[435143] 1)
    unknown call_tmp[747179] "expr temp" "maybe param" "maybe type" "temp"
    (747182 'move' call_tmp[747179](435156 call _cond_invalid tmp[435143]))
    if call_tmp[747179]
    {
      (435159 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581366] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581367] "maybe param" "temp"
    unknown call_tmp[747184] "expr temp" "maybe param" "maybe type" "temp"
    (747187 'move' call_tmp[747184](435144 call isTrue tmp[435143]))
    (581372 'move' tmp[581367](581370 call _cond_test call_tmp[747184]))
    if tmp[581367]
    {
      unknown tmp[581374] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747191] "expr temp" "maybe param" "maybe type" "temp"
      (747194 'move' call_tmp[747191](303023 call(406714 call (partial) _withinBounds _mt[243] this[304499]) i[303014]))
      unknown call_tmp[747196] "expr temp" "maybe param" "maybe type" "temp"
      (747199 'move' call_tmp[747196](303024 call ! call_tmp[747191]))
      (581376 'move' tmp[581374](435147 call isTrue call_tmp[747196]))
      (581381 'move' tmp[581366](581378 '_paramFoldLogical' tmp[581367] tmp[581374]))
    }
    {
      (581386 'move' tmp[581366](581383 '_paramFoldLogical' tmp[581367] 0))
    }
    unknown call_tmp[747201] "expr temp" "maybe param" "maybe type" "temp"
    (747204 'move' call_tmp[747201](303061 call _cond_test tmp[581366]))
    if call_tmp[747201]
    {
      unknown call_tmp[747206] "expr temp" "maybe param" "maybe type" "temp"
      (747209 'move' call_tmp[747206](303047 call _cast string[26] i[303014]))
      unknown call_tmp[747211] "maybe param" "maybe type" "temp"
      (747214 'move' call_tmp[747211](303049 call + "Invalid list index: " call_tmp[747206]))
      const msg[303051] "dead at end of block" "const" "insert auto destroy"
      (550134 'init var' msg[303051] call_tmp[747211])
      (303054 'end of statement')
      (303059 call boundsCheckHalt msg[303051])
      (491493 'end of statement' msg[303051])
    }
    unknown result[303070] "dead at end of block" "ref var"
    unknown call_tmp[747218] "expr temp" "maybe param" "maybe type" "temp"
    (747221 'move' call_tmp[747218](303069 call(406721 call (partial) _getRef _mt[243] this[304499]) i[303014]))
    (550137 'move' result[303070](550136 'addr of' call_tmp[747218]))
    (303073 'end of statement')
    (539572 'move' ret[539567](539571 'addr of' result[303070]))
    gotoReturn _end_this[539565] _end_this[539565]
    (491495 'end of statement' result[303070])
    label _end_this[539565]
    (539569 return ret[539567])
  }
  function list[304289](?).this[303085](arg _mt[304505]:_MT[238], const  ref arg this[304503]:list[304289](?), arg i[303082]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539578] "RVV" "temp"
    unknown tmp[435164] "maybe param" "temp"
    (435175 'move' tmp[435164] 1)
    unknown call_tmp[747223] "expr temp" "maybe param" "maybe type" "temp"
    (747226 'move' call_tmp[747223](435177 call _cond_invalid tmp[435164]))
    if call_tmp[747223]
    {
      (435180 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581393] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581394] "maybe param" "temp"
    unknown call_tmp[747228] "expr temp" "maybe param" "maybe type" "temp"
    (747231 'move' call_tmp[747228](435165 call isTrue tmp[435164]))
    (581399 'move' tmp[581394](581397 call _cond_test call_tmp[747228]))
    if tmp[581394]
    {
      unknown tmp[581401] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747235] "expr temp" "maybe param" "maybe type" "temp"
      (747238 'move' call_tmp[747235](303091 call(406728 call (partial) _withinBounds _mt[243] this[304503]) i[303082]))
      unknown call_tmp[747240] "expr temp" "maybe param" "maybe type" "temp"
      (747243 'move' call_tmp[747240](303092 call ! call_tmp[747235]))
      (581403 'move' tmp[581401](435168 call isTrue call_tmp[747240]))
      (581408 'move' tmp[581393](581405 '_paramFoldLogical' tmp[581394] tmp[581401]))
    }
    {
      (581413 'move' tmp[581393](581410 '_paramFoldLogical' tmp[581394] 0))
    }
    unknown call_tmp[747245] "expr temp" "maybe param" "maybe type" "temp"
    (747248 'move' call_tmp[747245](303113 call _cond_test tmp[581393]))
    if call_tmp[747245]
    {
      unknown call_tmp[747250] "expr temp" "maybe param" "maybe type" "temp"
      (747253 'move' call_tmp[747250](303099 call _cast string[26] i[303082]))
      unknown call_tmp[747255] "maybe param" "maybe type" "temp"
      (747258 'move' call_tmp[747255](303101 call + "Invalid list index: " call_tmp[747250]))
      const msg[303103] "dead at end of block" "const" "insert auto destroy"
      (550139 'init var' msg[303103] call_tmp[747255])
      (303106 'end of statement')
      (303111 call halt msg[303103])
      (491498 'end of statement' msg[303103])
    }
    const result[303122] "dead at end of block" "const" "ref var"
    unknown call_tmp[747262] "expr temp" "maybe param" "maybe type" "temp"
    (747265 'move' call_tmp[747262](303121 call(406735 call (partial) _getRef _mt[243] this[304503]) i[303082]))
    (550142 'move' result[303122](550141 'addr of' call_tmp[747262]))
    (303125 'end of statement')
    (539583 'move' ret[539578](539582 'addr of' result[303122]))
    gotoReturn _end_this[539576] _end_this[539576]
    (491500 'end of statement' result[303122])
    label _end_this[539576]
    (539580 return ret[539578])
  }
  function list[304289](?).these[303133](arg _mt[304509]:_MT[238], arg this[304507]:list[304289](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539589] "RVV" "temp"
    {
      unknown _indexOfInterest[303154] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303155] "expr temp" "temp"
      unknown call_tmp[747269] "expr temp" "maybe param" "maybe type" "temp"
      (747272 'move' call_tmp[747269](406748 call _size _mt[243] this[304507]))
      unknown call_tmp[747274] "expr temp" "maybe param" "maybe type" "temp"
      (747277 'move' call_tmp[747274](303171 call chpl_direct_counted_range_iter 0 call_tmp[747269]))
      (303164 'move' _iterator[303155](303162 call _getIterator call_tmp[747274]))
      Defer
      {
        {
          (303187 call _freeIterator _iterator[303155])
        }
      }
      { scopeless type
        (303176 'move' _indexOfInterest[303154](303173 call iteratorIndex _iterator[303155]))
      }
      ForLoop[303156]
      {
        unknown i[303180] "index var" "insert auto destroy"
        (491503 'end of statement')
        (303182 'move' i[303180] _indexOfInterest[303154])
        (491504 'end of statement' i[303180])
        {
          unknown result[303146] "dead at end of block" "ref var"
          unknown call_tmp[747281] "expr temp" "maybe param" "maybe type" "temp"
          (747284 'move' call_tmp[747281](303145 call(406741 call (partial) _getRef _mt[243] this[304507]) i[303180]))
          (550145 'move' result[303146](550144 'addr of' call_tmp[747281]))
          (303149 'end of statement' i[303180])
          unknown yret[539593] "YVV" "temp"
          (539596 'move' yret[539593](539595 'addr of' result[303146]))
          (539598 yield yret[539593])
          (491507 'end of statement' result[303146])
        }
        label _continueLabel[303159]
        _indexOfInterest[303154]
        _iterator[303155]
      }
      label _breakLabel[303160]
    }
    (539591 return ret[539589])
  }
  function list[304289](?).these[303203](arg _mt[304513]:_MT[238], arg this[304511]:list[304289](?), param arg tag[303200]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539602] "RVV" "temp"
    unknown call_tmp[747288] "maybe param" "maybe type" "temp"
    (747291 'move' call_tmp[747288](406755 call _size _mt[243] this[304511]))
    const osz[303213] "dead at end of block" "const" "insert auto destroy"
    (550147 'init var' osz[303213] call_tmp[747288])
    (303216 'end of statement')
    const minChunkSize[303219] "dead at end of block" "const" "insert auto destroy"
    (550149 'init var' minChunkSize[303219] 64)
    (303222 'end of statement')
    unknown call_tmp[747293] "maybe param" "maybe type" "temp"
    (747296 'move' call_tmp[747293](303225 call <= osz[303213] minChunkSize[303219]))
    const hasOneChunk[303227] "dead at end of block" "const" "insert auto destroy"
    (550151 'init var' hasOneChunk[303227] call_tmp[747293])
    (303230 'end of statement')
    const numTasks[303240] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581420] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581421] "maybe param" "temp"
    (581426 'move' tmp[581421](581424 call _cond_test hasOneChunk[303227]))
    if tmp[581421]
    {
      (581431 'move' tmp[581420](581428 '_paramFoldLogical' tmp[581421] 1))
    }
    {
      unknown tmp[581433] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747298] "expr temp" "maybe param" "maybe type" "temp"
      (747301 'move' call_tmp[747298](365067 call here[90438]))
      (581435 'move' tmp[581433](303234 call maxTaskPar _mt[243] call_tmp[747298]))
      (581440 'move' tmp[581420](581437 '_paramFoldLogical' tmp[581421] tmp[581433]))
    }
    (550153 'init var' numTasks[303240] tmp[581420])
    (303243 'end of statement')
    unknown call_tmp[747305] "expr temp" "maybe param" "maybe type" "temp"
    (747308 'move' call_tmp[747305](303247 call / osz[303213] numTasks[303240]))
    unknown call_tmp[747310] "expr temp" "maybe param" "maybe type" "temp"
    (747313 'move' call_tmp[747310](303250 call floor call_tmp[747305]))
    unknown call_tmp[747315] "maybe param" "maybe type" "temp"
    (747318 'move' call_tmp[747315](303252 call _cast int(64)[13] call_tmp[747310]))
    const chunkSize[303254] "dead at end of block" "const" "insert auto destroy"
    (550155 'init var' chunkSize[303254] call_tmp[747315])
    (303257 'end of statement')
    unknown call_tmp[747320] "expr temp" "maybe param" "maybe type" "temp"
    (747323 'move' call_tmp[747320](303261 call * chunkSize[303254] numTasks[303240]))
    unknown call_tmp[747325] "maybe param" "maybe type" "temp"
    (747328 'move' call_tmp[747325](303263 call - osz[303213] call_tmp[747320]))
    const trailing[303265] "dead at end of block" "const" "insert auto destroy"
    (550157 'init var' trailing[303265] call_tmp[747325])
    (303268 'end of statement' osz[303213] minChunkSize[303219] hasOneChunk[303227] osz[303213] numTasks[303240] osz[303213] chunkSize[303254] numTasks[303240])
    {
      unknown tmpIter[303332] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747330] "expr temp" "maybe param" "maybe type" "temp"
      (747333 'move' call_tmp[747330](303271 call chpl_build_low_bounded_range 0))
      (303335 'move' tmpIter[303332](303274 call # call_tmp[747330] numTasks[303240]))
      unknown isRngDomArr[303521] "maybe param" "temp"
      unknown tmp[435185] "maybe param" "temp"
      (435196 'move' tmp[435185](303523 call isBoundedRange tmpIter[303332]))
      unknown call_tmp[747335] "expr temp" "maybe param" "maybe type" "temp"
      (747338 'move' call_tmp[747335](435198 call _cond_invalid tmp[435185]))
      if call_tmp[747335]
      {
        (435201 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581474] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581475] "maybe param" "temp"
      unknown call_tmp[747340] "expr temp" "maybe param" "maybe type" "temp"
      (747343 'move' call_tmp[747340](435186 call isTrue tmp[435185]))
      (581480 'move' tmp[581475](581478 call _cond_test call_tmp[747340]))
      if tmp[581475]
      {
        (581485 'move' tmp[581474](581482 '_paramFoldLogical' tmp[581475] 1))
      }
      {
        unknown tmp[435206] "maybe param" "temp"
        (435217 'move' tmp[435206](303526 call isDomain tmpIter[303332]))
        unknown call_tmp[747345] "expr temp" "maybe param" "maybe type" "temp"
        (747348 'move' call_tmp[747345](435219 call _cond_invalid tmp[435206]))
        if call_tmp[747345]
        {
          (435222 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581447] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581448] "maybe param" "temp"
        unknown call_tmp[747350] "expr temp" "maybe param" "maybe type" "temp"
        (747353 'move' call_tmp[747350](435207 call isTrue tmp[435206]))
        (581453 'move' tmp[581448](581451 call _cond_test call_tmp[747350]))
        if tmp[581448]
        {
          (581458 'move' tmp[581447](581455 '_paramFoldLogical' tmp[581448] 1))
        }
        {
          unknown tmp[581460] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747355] "expr temp" "maybe param" "maybe type" "temp"
          (747358 'move' call_tmp[747355](303529 call isArray tmpIter[303332]))
          (581462 'move' tmp[581460](435211 call isTrue call_tmp[747355]))
          (581467 'move' tmp[581447](581464 '_paramFoldLogical' tmp[581448] tmp[581460]))
        }
        unknown tmp[581487] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581489 'move' tmp[581487](435190 call isTrue tmp[581447]))
        (581494 'move' tmp[581474](581491 '_paramFoldLogical' tmp[581475] tmp[581487]))
      }
      (303536 'move' isRngDomArr[303521] tmp[581474])
      if isRngDomArr[303521]
      {
        const _coforallCount[303388] "const" "end count" "temp"
        (303457 'move' _coforallCount[303388](303454 call _endCountAlloc 1))
        unknown numTasks[303389] "temp"
        (303441 'move' numTasks[303389](303437 call size _mt[243] tmpIter[303332]))
        (303432 call _upEndCount _coforallCount[303388] 1 numTasks[303389])
        (491518 'end of statement')
        (303429 call chpl_resetTaskSpawn numTasks[303389])
        (491519 'end of statement')
        unknown _indexOfInterest[303396] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303397] "expr temp" "temp"
        (303406 'move' _iterator[303397](303404 call _getIterator tmpIter[303332]))
        Defer
        {
          {
            (303422 call _freeIterator _iterator[303397])
          }
        }
        { scopeless type
          (303411 'move' _indexOfInterest[303396](303408 call iteratorIndex _iterator[303397]))
        }
        ForLoop[303398]
        {
          unknown tid[303415] "coforall index var" "index var" "insert auto destroy"
          (491521 'end of statement')
          (303417 'move' tid[303415] _indexOfInterest[303396])
          (491522 'end of statement' tid[303415])
          (936670 call coforall_fn[936668] chunkSize[303254] trailing[303265])
          function coforall_fn[936668](arg chunkSize[936675], arg trailing[936678]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747364] "maybe param" "maybe type" "temp"
              (747367 'move' call_tmp[747364](303341 call(406780 call (partial) _computeChunk _mt[243] this[304511]) tid[303415] chunkSize[936675] trailing[936678]))
              unknown chunk[303339] "dead at end of block" "insert auto destroy"
              (550159 'init var' chunk[303339] call_tmp[747364])
              (303346 'end of statement' tid[303415] chunkSize[936675] trailing[936678])
              {
                unknown _indexOfInterest[303348] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303350] "expr temp" "temp"
                unknown call_tmp[747369] "expr temp" "maybe param" "maybe type" "temp"
                (747372 'move' call_tmp[747369](303357 call chunk[303339] 0))
                (303352 'move' _iterator[303350](303355 call _getIterator call_tmp[747369]))
                Defer
                {
                  {
                    (303361 call _freeIterator _iterator[303350])
                  }
                }
                { scopeless type
                  (303365 'move' _indexOfInterest[303348](303368 call iteratorIndex _iterator[303350]))
                }
                ForLoop[303370]
                {
                  unknown i[303373] "index var" "insert auto destroy"
                  (491528 'end of statement')
                  (303375 'move' i[303373] _indexOfInterest[303348])
                  (491529 'end of statement' i[303373])
                  unknown yret[539606] "YVV" "temp"
                  unknown call_tmp[747374] "expr temp" "maybe param" "maybe type" "temp"
                  (747377 'move' call_tmp[747374](303381 call this[304511] i[303373]))
                  (539609 'move' yret[539606](539608 'addr of' call_tmp[747374]))
                  (539611 yield yret[539606])
                  (491531 'end of statement' i[303373])
                  label _continueLabel[303383]
                  _indexOfInterest[303348]
                  _iterator[303350]
                }
                label _breakLabel[303385]
              }
            }
            (303391 call _downEndCount _coforallCount[303388] nil[44])
            (936673 return _void[55])
          }
          {
          }
          label _continueLabel[303401]
          _indexOfInterest[303396]
          _iterator[303397]
        }
        label _breakLabel[303402]
        Defer
        {
          {
            (303444 call _endCountFree _coforallCount[303388])
          }
        }
        (303449 call _waitEndCount _coforallCount[303388] 1 numTasks[303389])
      }
      {
        const _coforallCount[303461] "const" "end count" "temp"
        (303518 'move' _coforallCount[303461](303515 call _endCountAlloc 1))
        unknown _indexOfInterest[303469] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303470] "expr temp" "temp"
        (303479 'move' _iterator[303470](303477 call _getIterator tmpIter[303332]))
        Defer
        {
          {
            (303495 call _freeIterator _iterator[303470])
          }
        }
        { scopeless type
          (303484 'move' _indexOfInterest[303469](303481 call iteratorIndex _iterator[303470]))
        }
        ForLoop[303471]
        {
          unknown tid[303488] "coforall index var" "index var" "insert auto destroy"
          (491537 'end of statement')
          (303490 'move' tid[303488] _indexOfInterest[303469])
          (491538 'end of statement' tid[303488])
          (303502 call _upEndCount _coforallCount[303461] 1)
          (491540 'end of statement')
          (936683 call coforall_fn[936681] chunkSize[303254] trailing[303265])
          function coforall_fn[936681](arg chunkSize[936688], arg trailing[936691]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747381] "maybe param" "maybe type" "temp"
              (747384 'move' call_tmp[747381](303281 call(406770 call (partial) _computeChunk _mt[243] this[304511]) tid[303488] chunkSize[936688] trailing[936691]))
              unknown chunk[303282] "dead at end of block" "insert auto destroy"
              (550161 'init var' chunk[303282] call_tmp[747381])
              (303285 'end of statement' tid[303488] chunkSize[936688] trailing[936691])
              {
                unknown _indexOfInterest[303298] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303299] "expr temp" "temp"
                unknown call_tmp[747386] "expr temp" "maybe param" "maybe type" "temp"
                (747389 'move' call_tmp[747386](303291 call chunk[303282] 0))
                (303308 'move' _iterator[303299](303306 call _getIterator call_tmp[747386]))
                Defer
                {
                  {
                    (303325 call _freeIterator _iterator[303299])
                  }
                }
                { scopeless type
                  (303314 'move' _indexOfInterest[303298](303311 call iteratorIndex _iterator[303299]))
                }
                ForLoop[303300]
                {
                  unknown i[303318] "index var" "insert auto destroy"
                  (491545 'end of statement')
                  (303320 'move' i[303318] _indexOfInterest[303298])
                  (491546 'end of statement' i[303318])
                  unknown yret[539613] "YVV" "temp"
                  unknown call_tmp[747391] "expr temp" "maybe param" "maybe type" "temp"
                  (747394 'move' call_tmp[747391](303295 call this[304511] i[303318]))
                  (539616 'move' yret[539613](539615 'addr of' call_tmp[747391]))
                  (539618 yield yret[539613])
                  (491548 'end of statement' i[303318])
                  label _continueLabel[303303]
                  _indexOfInterest[303298]
                  _iterator[303299]
                }
                label _breakLabel[303304]
              }
            }
            (303464 call _downEndCount _coforallCount[303461] nil[44])
            (936686 return _void[55])
          }
          {
          }
          label _continueLabel[303474]
          _indexOfInterest[303469]
          _iterator[303470]
        }
        label _breakLabel[303475]
        Defer
        {
          {
            (303506 call _endCountFree _coforallCount[303461])
          }
        }
        (303511 call _waitEndCount _coforallCount[303461] 1)
      }
    }
    (539604 return ret[539602])
  }
  where {
    (303210 call == tag[303200] standalone[451])
  }
  function list[304289](?)._computeChunk[303547](arg _mt[304517]:_MT[238], arg this[304515]:list[304289](?), arg tid[303545]:_any[178](?), arg chunkSize[303549]:_any[178](?), arg trailing[303551]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539622] "RVV" "temp"
    unknown lo[303553] "dead at end of block" "insert auto destroy"
    (550163 'init var' lo[303553] 0)
    unknown hi[303557] "dead at end of block" "insert auto destroy"
    (550165 'init var' hi[303557] lo[303553])
    (303561 'end of statement' lo[303553])
    unknown call_tmp[747396] "expr temp" "maybe param" "maybe type" "temp"
    (747399 'move' call_tmp[747396](303565 call <= tid[303545] 0))
    unknown call_tmp[747401] "expr temp" "maybe param" "maybe type" "temp"
    (747404 'move' call_tmp[747401](303607 call _cond_test call_tmp[747396]))
    if call_tmp[747401]
    {
      (303569 call = lo[303553] 0)
      (491554 'end of statement' lo[303553])
      unknown call_tmp[747406] "expr temp" "maybe param" "maybe type" "temp"
      (747409 'move' call_tmp[747406](303576 call + chunkSize[303549] trailing[303551]))
      unknown call_tmp[747411] "expr temp" "maybe param" "maybe type" "temp"
      (747414 'move' call_tmp[747411](303579 call - call_tmp[747406] 1))
      (303581 call = hi[303557] call_tmp[747411])
      (491556 'end of statement' hi[303557])
    }
    {
      unknown call_tmp[747416] "expr temp" "maybe param" "maybe type" "temp"
      (747419 'move' call_tmp[747416](303587 call * chunkSize[303549] tid[303545]))
      unknown call_tmp[747421] "expr temp" "maybe param" "maybe type" "temp"
      (747424 'move' call_tmp[747421](303590 call + call_tmp[747416] trailing[303551]))
      (303592 call = lo[303553] call_tmp[747421])
      (491558 'end of statement' lo[303553])
      unknown call_tmp[747426] "expr temp" "maybe param" "maybe type" "temp"
      (747429 'move' call_tmp[747426](303599 call + lo[303553] chunkSize[303549]))
      unknown call_tmp[747431] "expr temp" "maybe param" "maybe type" "temp"
      (747434 'move' call_tmp[747431](303602 call - call_tmp[747426] 1))
      (303604 call = hi[303557] call_tmp[747431])
      (491560 'end of statement' hi[303557] lo[303553])
    }
    unknown call_tmp[747436] "expr temp" "maybe param" "maybe type" "temp"
    (747439 'move' call_tmp[747436](303613 call chpl_build_bounded_range lo[303553] hi[303557]))
    unknown call_tmp[747441] "expr temp" "maybe param" "maybe type" "temp"
    (747444 'move' call_tmp[747441](303615 call _build_tuple call_tmp[747436]))
    (539627 'move' ret[539622](539626 'deref' call_tmp[747441]))
    gotoReturn _end__computeChunk[539620] _end__computeChunk[539620]
    (491563 'end of statement' lo[303553] hi[303557])
    label _end__computeChunk[539620]
    (539624 return ret[539622])
  }
  function list[304289](?).these[303625](arg _mt[304521]:_MT[238], arg this[304519]:list[304289](?), param arg tag[303623]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539633] "RVV" "temp"
    unknown call_tmp[747448] "maybe param" "maybe type" "temp"
    (747451 'move' call_tmp[747448](406807 call _size _mt[243] this[304519]))
    const osz[303635] "dead at end of block" "const" "insert auto destroy"
    (550167 'init var' osz[303635] call_tmp[747448])
    (303638 'end of statement')
    const minChunkSize[303641] "dead at end of block" "const" "insert auto destroy"
    (550169 'init var' minChunkSize[303641] 32)
    (303644 'end of statement')
    unknown call_tmp[747453] "maybe param" "maybe type" "temp"
    (747456 'move' call_tmp[747453](303647 call <= osz[303635] minChunkSize[303641]))
    const hasOneChunk[303649] "dead at end of block" "const" "insert auto destroy"
    (550171 'init var' hasOneChunk[303649] call_tmp[747453])
    (303652 'end of statement')
    const numTasks[303659] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581501] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581502] "maybe param" "temp"
    (581507 'move' tmp[581502](581505 call _cond_test hasOneChunk[303649]))
    if tmp[581502]
    {
      (581512 'move' tmp[581501](581509 '_paramFoldLogical' tmp[581502] 1))
    }
    {
      (581517 'move' tmp[581501](581514 '_paramFoldLogical' tmp[581502] dataParTasksPerLocale[93284]))
    }
    (550173 'init var' numTasks[303659] tmp[581501])
    (303662 'end of statement')
    unknown call_tmp[747458] "expr temp" "maybe param" "maybe type" "temp"
    (747461 'move' call_tmp[747458](303666 call / osz[303635] numTasks[303659]))
    unknown call_tmp[747463] "expr temp" "maybe param" "maybe type" "temp"
    (747466 'move' call_tmp[747463](303669 call floor call_tmp[747458]))
    unknown call_tmp[747468] "maybe param" "maybe type" "temp"
    (747471 'move' call_tmp[747468](303671 call _cast int(64)[13] call_tmp[747463]))
    const chunkSize[303673] "dead at end of block" "const" "insert auto destroy"
    (550175 'init var' chunkSize[303673] call_tmp[747468])
    (303676 'end of statement')
    unknown call_tmp[747473] "expr temp" "maybe param" "maybe type" "temp"
    (747476 'move' call_tmp[747473](303680 call * chunkSize[303673] numTasks[303659]))
    unknown call_tmp[747478] "maybe param" "maybe type" "temp"
    (747481 'move' call_tmp[747478](303682 call - osz[303635] call_tmp[747473]))
    const trailing[303684] "dead at end of block" "const" "insert auto destroy"
    (550177 'init var' trailing[303684] call_tmp[747478])
    (303687 'end of statement' osz[303635] minChunkSize[303641] hasOneChunk[303649] osz[303635] numTasks[303659] osz[303635] chunkSize[303673] numTasks[303659])
    {
      unknown tmpIter[303709] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747483] "expr temp" "maybe param" "maybe type" "temp"
      (747486 'move' call_tmp[747483](303690 call chpl_build_low_bounded_range 0))
      (303712 'move' tmpIter[303709](303693 call # call_tmp[747483] numTasks[303659]))
      unknown isRngDomArr[303860] "maybe param" "temp"
      unknown tmp[435227] "maybe param" "temp"
      (435238 'move' tmp[435227](303862 call isBoundedRange tmpIter[303709]))
      unknown call_tmp[747488] "expr temp" "maybe param" "maybe type" "temp"
      (747491 'move' call_tmp[747488](435240 call _cond_invalid tmp[435227]))
      if call_tmp[747488]
      {
        (435243 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581551] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581552] "maybe param" "temp"
      unknown call_tmp[747493] "expr temp" "maybe param" "maybe type" "temp"
      (747496 'move' call_tmp[747493](435228 call isTrue tmp[435227]))
      (581557 'move' tmp[581552](581555 call _cond_test call_tmp[747493]))
      if tmp[581552]
      {
        (581562 'move' tmp[581551](581559 '_paramFoldLogical' tmp[581552] 1))
      }
      {
        unknown tmp[435248] "maybe param" "temp"
        (435259 'move' tmp[435248](303865 call isDomain tmpIter[303709]))
        unknown call_tmp[747498] "expr temp" "maybe param" "maybe type" "temp"
        (747501 'move' call_tmp[747498](435261 call _cond_invalid tmp[435248]))
        if call_tmp[747498]
        {
          (435264 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581524] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581525] "maybe param" "temp"
        unknown call_tmp[747503] "expr temp" "maybe param" "maybe type" "temp"
        (747506 'move' call_tmp[747503](435249 call isTrue tmp[435248]))
        (581530 'move' tmp[581525](581528 call _cond_test call_tmp[747503]))
        if tmp[581525]
        {
          (581535 'move' tmp[581524](581532 '_paramFoldLogical' tmp[581525] 1))
        }
        {
          unknown tmp[581537] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747508] "expr temp" "maybe param" "maybe type" "temp"
          (747511 'move' call_tmp[747508](303868 call isArray tmpIter[303709]))
          (581539 'move' tmp[581537](435253 call isTrue call_tmp[747508]))
          (581544 'move' tmp[581524](581541 '_paramFoldLogical' tmp[581525] tmp[581537]))
        }
        unknown tmp[581564] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581566 'move' tmp[581564](435232 call isTrue tmp[581524]))
        (581571 'move' tmp[581551](581568 '_paramFoldLogical' tmp[581552] tmp[581564]))
      }
      (303875 'move' isRngDomArr[303860] tmp[581551])
      if isRngDomArr[303860]
      {
        const _coforallCount[303727] "const" "end count" "temp"
        (303796 'move' _coforallCount[303727](303793 call _endCountAlloc 1))
        unknown numTasks[303728] "temp"
        (303780 'move' numTasks[303728](303776 call size _mt[243] tmpIter[303709]))
        (303771 call _upEndCount _coforallCount[303727] 1 numTasks[303728])
        (491575 'end of statement')
        (303768 call chpl_resetTaskSpawn numTasks[303728])
        (491576 'end of statement')
        unknown _indexOfInterest[303735] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303736] "expr temp" "temp"
        (303745 'move' _iterator[303736](303743 call _getIterator tmpIter[303709]))
        Defer
        {
          {
            (303761 call _freeIterator _iterator[303736])
          }
        }
        { scopeless type
          (303750 'move' _indexOfInterest[303735](303747 call iteratorIndex _iterator[303736]))
        }
        ForLoop[303737]
        {
          unknown tid[303754] "coforall index var" "index var" "insert auto destroy"
          (491578 'end of statement')
          (303756 'move' tid[303754] _indexOfInterest[303735])
          (491579 'end of statement' tid[303754])
          (936696 call coforall_fn[936694] chunkSize[303673] trailing[303684])
          function coforall_fn[936694](arg chunkSize[936701], arg trailing[936704]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747517] "maybe param" "maybe type" "temp"
              (747520 'move' call_tmp[747517](303718 call(406829 call (partial) _computeChunk _mt[243] this[304519]) tid[303754] chunkSize[936701] trailing[936704]))
              unknown chunk[303716] "dead at end of block" "insert auto destroy"
              (550179 'init var' chunk[303716] call_tmp[747517])
              (303723 'end of statement' tid[303754] chunkSize[936701] trailing[936704])
              unknown yret[539637] "YVV" "temp"
              (539640 'move' yret[539637](539639 'addr of' chunk[303716]))
              (539642 yield yret[539637])
              (491584 'end of statement' chunk[303716])
            }
            (303730 call _downEndCount _coforallCount[303727] nil[44])
            (936699 return _void[55])
          }
          {
          }
          label _continueLabel[303740]
          _indexOfInterest[303735]
          _iterator[303736]
        }
        label _breakLabel[303741]
        Defer
        {
          {
            (303783 call _endCountFree _coforallCount[303727])
          }
        }
        (303788 call _waitEndCount _coforallCount[303727] 1 numTasks[303728])
      }
      {
        const _coforallCount[303800] "const" "end count" "temp"
        (303857 'move' _coforallCount[303800](303854 call _endCountAlloc 1))
        unknown _indexOfInterest[303808] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303809] "expr temp" "temp"
        (303818 'move' _iterator[303809](303816 call _getIterator tmpIter[303709]))
        Defer
        {
          {
            (303834 call _freeIterator _iterator[303809])
          }
        }
        { scopeless type
          (303823 'move' _indexOfInterest[303808](303820 call iteratorIndex _iterator[303809]))
        }
        ForLoop[303810]
        {
          unknown tid[303827] "coforall index var" "index var" "insert auto destroy"
          (491590 'end of statement')
          (303829 'move' tid[303827] _indexOfInterest[303808])
          (491591 'end of statement' tid[303827])
          (303841 call _upEndCount _coforallCount[303800] 1)
          (491593 'end of statement')
          (936709 call coforall_fn[936707] chunkSize[303673] trailing[303684])
          function coforall_fn[936707](arg chunkSize[936714], arg trailing[936717]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747524] "maybe param" "maybe type" "temp"
              (747527 'move' call_tmp[747524](303700 call(406821 call (partial) _computeChunk _mt[243] this[304519]) tid[303827] chunkSize[936714] trailing[936717]))
              unknown chunk[303701] "dead at end of block" "insert auto destroy"
              (550181 'init var' chunk[303701] call_tmp[747524])
              (303704 'end of statement' tid[303827] chunkSize[936714] trailing[936717])
              unknown yret[539644] "YVV" "temp"
              (539647 'move' yret[539644](539646 'addr of' chunk[303701]))
              (539649 yield yret[539644])
              (491597 'end of statement' chunk[303701])
            }
            (303803 call _downEndCount _coforallCount[303800] nil[44])
            (936712 return _void[55])
          }
          {
          }
          label _continueLabel[303813]
          _indexOfInterest[303808]
          _iterator[303809]
        }
        label _breakLabel[303814]
        Defer
        {
          {
            (303845 call _endCountFree _coforallCount[303800])
          }
        }
        (303850 call _waitEndCount _coforallCount[303800] 1)
      }
    }
    (539635 return ret[539633])
  }
  where {
    (303632 call == tag[303623] leader[447])
  }
  function list[304289](?).these[303886](arg _mt[304525]:_MT[238], arg this[304523]:list[304289](?), param arg tag[303884]:_any[178](?), arg followThis[303888]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539653] "RVV" "temp"
    {
      unknown _indexOfInterest[303908] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303909] "expr temp" "temp"
      unknown call_tmp[747529] "expr temp" "maybe param" "maybe type" "temp"
      (747532 'move' call_tmp[747529](303901 call followThis[303888] 0))
      (303918 'move' _iterator[303909](303916 call _getIterator call_tmp[747529]))
      Defer
      {
        {
          (303935 call _freeIterator _iterator[303909])
        }
      }
      { scopeless type
        (303924 'move' _indexOfInterest[303908](303921 call iteratorIndex _iterator[303909]))
      }
      ForLoop[303910]
      {
        unknown i[303928] "index var" "insert auto destroy"
        (491603 'end of statement')
        (303930 'move' i[303928] _indexOfInterest[303908])
        (491604 'end of statement' i[303928])
        unknown yret[539657] "YVV" "temp"
        unknown call_tmp[747534] "expr temp" "maybe param" "maybe type" "temp"
        (747537 'move' call_tmp[747534](303905 call this[304523] i[303928]))
        (539660 'move' yret[539657](539659 'addr of' call_tmp[747534]))
        (539662 yield yret[539657])
        (491606 'end of statement' i[303928])
        label _continueLabel[303913]
        _indexOfInterest[303908]
        _iterator[303909]
      }
      label _breakLabel[303914]
    }
    (539655 return ret[539653])
  }
  where {
    (303895 call == tag[303884] follower[449])
  }
  function list[304289](?).readWriteThis[303952](arg _mt[304529]:_MT[238], arg this[304527]:list[304289](?), arg ch[303949]:channel[237818](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303956 call(406842 call (partial) _enter _mt[243] this[304527]))
    (491608 'end of statement')
    (303961 call <~> ch[303949] "[")
    (491609 'end of statement')
    {
      unknown _indexOfInterest[303983] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303984] "expr temp" "temp"
      unknown call_tmp[747543] "expr temp" "maybe param" "maybe type" "temp"
      (747546 'move' call_tmp[747543](406854 call _size _mt[243] this[304527]))
      unknown call_tmp[747548] "expr temp" "maybe param" "maybe type" "temp"
      (747551 'move' call_tmp[747548](303998 call - call_tmp[747543] 2))
      unknown call_tmp[747553] "expr temp" "maybe param" "maybe type" "temp"
      (747556 'move' call_tmp[747553](304001 call chpl_direct_range_iter 0 call_tmp[747548] 1))
      (303993 'move' _iterator[303984](303991 call _getIterator call_tmp[747553]))
      Defer
      {
        {
          (304017 call _freeIterator _iterator[303984])
        }
      }
      { scopeless type
        (304006 'move' _indexOfInterest[303983](304003 call iteratorIndex _iterator[303984]))
      }
      ForLoop[303985]
      {
        unknown i[304010] "index var" "insert auto destroy"
        (491611 'end of statement')
        (304012 'move' i[304010] _indexOfInterest[303983])
        (491612 'end of statement' i[304010])
        unknown call_tmp[747560] "expr temp" "maybe param" "maybe type" "temp"
        (747563 'move' call_tmp[747560](303976 call(406848 call (partial) _getRef _mt[243] this[304527]) i[304010]))
        unknown call_tmp[747565] "expr temp" "maybe param" "maybe type" "temp"
        (747568 'move' call_tmp[747565](303977 call <~> ch[303949] call_tmp[747560]))
        (303980 call <~> call_tmp[747565] ", ")
        (491614 'end of statement' i[304010])
        label _continueLabel[303988]
        _indexOfInterest[303983]
        _iterator[303984]
      }
      label _breakLabel[303989]
    }
    unknown call_tmp[747572] "expr temp" "maybe param" "maybe type" "temp"
    (747575 'move' call_tmp[747572](406859 call _size _mt[243] this[304527]))
    unknown call_tmp[747577] "expr temp" "maybe param" "maybe type" "temp"
    (747580 'move' call_tmp[747577](304026 call > call_tmp[747572] 0))
    unknown call_tmp[747582] "expr temp" "maybe param" "maybe type" "temp"
    (747585 'move' call_tmp[747582](304039 call _cond_test call_tmp[747577]))
    if call_tmp[747582]
    {
      unknown call_tmp[747591] "expr temp" "maybe param" "maybe type" "temp"
      (747594 'move' call_tmp[747591](406869 call _size _mt[243] this[304527]))
      unknown call_tmp[747596] "expr temp" "maybe param" "maybe type" "temp"
      (747599 'move' call_tmp[747596](304032 call - call_tmp[747591] 1))
      unknown call_tmp[747601] "expr temp" "maybe param" "maybe type" "temp"
      (747604 'move' call_tmp[747601](304035 call(406864 call (partial) _getRef _mt[243] this[304527]) call_tmp[747596]))
      (304036 call <~> ch[303949] call_tmp[747601])
    }
    (304046 call <~> ch[303949] "]")
    (491617 'end of statement')
    (304051 call(406874 call (partial) _leave _mt[243] this[304527]))
    (539664 return _void[55])
  }
  function list[304289](?).isEmpty[304057](arg _mt[304533]:_MT[238], const arg this[304531]:list[304289](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539668] "RVV" "temp"
    (304062 call(406878 call (partial) _enter _mt[243] this[304531]))
    (491619 'end of statement')
    unknown call_tmp[747612] "expr temp" "maybe param" "maybe type" "temp"
    (747615 'move' call_tmp[747612](406883 call _size _mt[243] this[304531]))
    unknown call_tmp[747617] "maybe param" "maybe type" "temp"
    (747620 'move' call_tmp[747617](304067 call == call_tmp[747612] 0))
    unknown result[304069] "dead at end of block" "insert auto destroy"
    (550183 'init var' result[304069] call_tmp[747617])
    (304072 'end of statement')
    (304075 call(406887 call (partial) _leave _mt[243] this[304531]))
    (491620 'end of statement')
    (539674 'move' ret[539668](539673 'coerce' result[304069] bool[10]))
    gotoReturn _end_isEmpty[539666] _end_isEmpty[539666]
    (491621 'end of statement' result[304069])
    label _end_isEmpty[539666]
    (539670 return ret[539668])
  }
  { scopeless type
    bool[10]
  }
  function list[304289](?).size[304085](arg _mt[304537]:_MT[238], const arg this[304535]:list[304289](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539680] "RVV" "temp"
    unknown result[304088] "dead at end of block" "insert auto destroy"
    (550185 'init var' result[304088] 0)
    (304091 'end of statement')
    const tmp[304111] "const" "temp"
    unknown call_tmp[747624] "expr temp" "maybe param" "maybe type" "temp"
    (747627 'move' call_tmp[747624](304108 '_wide_get_locale' this[304535]))
    (304113 'move' tmp[304111](304109 'deref' call_tmp[747624]))
    (936724 call on_fn[936720] tmp[304111])
    function on_fn[936720](const in arg dummy_locale_arg[936722]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (304096 call(406893 call (partial) _enter _mt[243] this[304535]))
        (491623 'end of statement')
        unknown call_tmp[747633] "expr temp" "maybe param" "maybe type" "temp"
        (747636 'move' call_tmp[747633](406899 call _size _mt[243] this[304535]))
        (304101 call = result[304088] call_tmp[747633])
        (491624 'end of statement' result[304088])
        (304106 call(406903 call (partial) _leave _mt[243] this[304535]))
      }
      (936727 return _void[55])
    }
    {
    }
    (539685 'move' ret[539680](539684 'deref' result[304088]))
    gotoReturn _end_size[539678] _end_size[539678]
    (491627 'end of statement' result[304088])
    label _end_size[539678]
    (539682 return ret[539680])
  }
  function list[304289](?).indices[304126](arg _mt[304541]:_MT[238], arg this[304539]:list[304289](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539691] "RVV" "temp"
    unknown call_tmp[747642] "expr temp" "maybe param" "maybe type" "temp"
    (747645 'move' call_tmp[747642](304130 call size _mt[243] this[304539]))
    unknown call_tmp[747647] "expr temp" "maybe param" "maybe type" "temp"
    (747650 'move' call_tmp[747647](304134 call - call_tmp[747642] 1))
    unknown call_tmp[747652] "expr temp" "maybe param" "maybe type" "temp"
    (747655 'move' call_tmp[747652](304136 call chpl_build_bounded_range 0 call_tmp[747647]))
    (539696 'move' ret[539691](539695 'deref' call_tmp[747652]))
    (539693 return ret[539691])
  }
  function list[304289](?).toArray[304145](arg _mt[304545]:_MT[238], const arg this[304543]:list[304289](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539700] "RVV" "temp"
    unknown tmp[435269] "maybe param" "temp"
    unknown call_tmp[747659] "expr temp" "maybe param" "maybe type" "temp"
    (747662 'move' call_tmp[747659](406914 call eltType _mt[243] this[304543]))
    (435280 'move' tmp[435269](304154 call isNonNilableClass call_tmp[747659]))
    unknown call_tmp[747664] "expr temp" "maybe param" "maybe type" "temp"
    (747667 'move' call_tmp[747664](435282 call _cond_invalid tmp[435269]))
    if call_tmp[747664]
    {
      (435285 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581578] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581579] "maybe param" "temp"
    unknown call_tmp[747669] "expr temp" "maybe param" "maybe type" "temp"
    (747672 'move' call_tmp[747669](435270 call isTrue tmp[435269]))
    (581584 'move' tmp[581579](581582 call _cond_test call_tmp[747669]))
    if tmp[581579]
    {
      unknown tmp[581586] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747676] "expr temp" "maybe param" "maybe type" "temp"
      (747679 'move' call_tmp[747676](406919 call eltType _mt[243] this[304543]))
      unknown call_tmp[747681] "expr temp" "maybe param" "maybe type" "temp"
      (747684 'move' call_tmp[747681](304158 call isOwnedClass call_tmp[747676]))
      (581588 'move' tmp[581586](435273 call isTrue call_tmp[747681]))
      (581593 'move' tmp[581578](581590 '_paramFoldLogical' tmp[581579] tmp[581586]))
    }
    {
      (581598 'move' tmp[581578](581595 '_paramFoldLogical' tmp[581579] 0))
    }
    unknown call_tmp[747686] "expr temp" "maybe param" "maybe type" "temp"
    (747689 'move' call_tmp[747686](304203 call _cond_test tmp[581578]))
    if call_tmp[747686]
    {
      unknown call_tmp[747693] "expr temp" "maybe param" "maybe type" "temp"
      (747696 'move' call_tmp[747693](406924 call eltType _mt[243] this[304543]))
      unknown call_tmp[747698] "expr temp" "maybe param" "maybe type" "temp"
      (747701 'move' call_tmp[747698](304199 call _cast string[26] call_tmp[747693]))
      (304201 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747698])
    }
    unknown result[304221] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747703] "expr temp" "maybe param" "maybe type" "temp"
    (747706 'move' call_tmp[747703](304210 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747710] "expr temp" "maybe param" "maybe type" "temp"
    (747713 'move' call_tmp[747710](406929 call _size _mt[243] this[304543]))
    unknown call_tmp[747715] "expr temp" "maybe param" "maybe type" "temp"
    (747718 'move' call_tmp[747715](304213 call # call_tmp[747703] call_tmp[747710]))
    unknown call_tmp[747720] "expr temp" "maybe param" "maybe type" "temp"
    (747723 'move' call_tmp[747720](304217 call chpl__ensureDomainExpr call_tmp[747715]))
    unknown call_tmp[747727] "expr temp" "maybe param" "maybe type" "temp"
    (747730 'move' call_tmp[747727](406934 call eltType _mt[243] this[304543]))
    unknown call_tmp[747732] "expr temp" "maybe param" "maybe type" "temp"
    (747735 'move' call_tmp[747732](304219 call chpl__buildArrayRuntimeType call_tmp[747720] call_tmp[747727]))
    (550187 'default init var' result[304221] call_tmp[747732])
    (304224 'end of statement')
    const tmp[304274] "const" "temp"
    unknown call_tmp[747737] "expr temp" "maybe param" "maybe type" "temp"
    (747740 'move' call_tmp[747737](304271 '_wide_get_locale' this[304543]))
    (304276 'move' tmp[304274](304272 'deref' call_tmp[747737]))
    (936733 call on_fn[936729] tmp[304274])
    function on_fn[936729](const in arg dummy_locale_arg[936731]:chpl_localeID_t[209352]) : void[4] "on"
    {
      {
        (304228 call(406939 call (partial) _enter _mt[243] this[304543]))
        (491632 'end of statement')
        unknown tmp[304258] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583344](arg iterator[583346]:_any[178](?), arg this[583482]:list[304289](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583493] "RVV" "temp"
          {
            unknown _indexOfInterest[583351] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583352] "expr temp" "temp"
            (583361 'move' _iterator[583352](583359 call _getIterator iterator[583346]))
            Defer
            {
              {
                (583375 call _freeIterator _iterator[583352])
              }
            }
            { scopeless type
              (583366 'move' _indexOfInterest[583351](583363 call iteratorIndex _iterator[583352]))
            }
            ForLoop[583353] for-expr
            {
              unknown i[304256] "index var" "insert auto destroy" "no doc"
              (583486 'end of statement')
              (583370 'move' i[304256] _indexOfInterest[583351])
              (583487 'end of statement' i[304256])
              {
                {
                  unknown yret[583497] "YVV" "temp"
                  unknown call_tmp[583506] "expr temp" "maybe param" "maybe type" "temp"
                  (583509 'move' call_tmp[583506](304253 call(406959 call (partial) _getRef _mt[243] this[583482]) i[304256]))
                  (583500 'move' yret[583497](583499 'deref' call_tmp[583506]))
                  (583502 yield yret[583497])
                  (583489 'end of statement' i[304256])
                }
              }
              label _continueLabel[583356]
              _indexOfInterest[583351]
              _iterator[583352]
            }
            label _breakLabel[583357]
          }
          (583495 return ret[583493])
        }
        function chpl__loopexpr_iter10[583382](param arg tag[583386]:iterKind[453], arg iterator[583389]:_any[178](?), arg this[583410]:list[304289](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583536] "RVV" "temp"
          const _leaderIterator[583401] "const" "expr temp" "temp"
          (583406 'move' _leaderIterator[583401](583403 call _toLeader iterator[583389]))
          (583541 'move' ret[583536](583540 'deref' _leaderIterator[583401]))
          (583538 return ret[583536])
        }
        where {
          unknown tmp[583512] "maybe param" "temp"
          (583523 'move' tmp[583512](583391 call == tag[583386] leader[447]))
          unknown call_tmp[583570] "expr temp" "maybe param" "maybe type" "temp"
          (583573 'move' call_tmp[583570](583525 call _cond_invalid tmp[583512]))
          if call_tmp[583570]
          {
            (583528 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583543] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583544] "maybe param" "temp"
          unknown call_tmp[583575] "expr temp" "maybe param" "maybe type" "temp"
          (583578 'move' call_tmp[583575](583513 call isTrue tmp[583512]))
          (583549 'move' tmp[583544](583547 call _cond_test call_tmp[583575]))
          if tmp[583544]
          {
            unknown tmp[583551] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583580] "expr temp" "maybe param" "maybe type" "temp"
            (583583 'move' call_tmp[583580](583395 'call resolves' "_toLeader" iterator[583389]))
            (583553 'move' tmp[583551](583516 call isTrue call_tmp[583580]))
            (583558 'move' tmp[583543](583555 '_paramFoldLogical' tmp[583544] tmp[583551]))
          }
          {
            (583563 'move' tmp[583543](583560 '_paramFoldLogical' tmp[583544] 0))
          }
          (748617 call chpl_statementLevelSymbol tmp[583543])
        }
        function chpl__loopexpr_iter10[583412](param arg tag[583416]:iterKind[453], arg followThis[583419]:_any[178](?), arg iterator[583421]:_any[178](?), arg this[583480]:list[304289](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583594] "RVV" "temp"
          const _followerIterator[583428] "const" "expr temp" "temp"
          (583434 'move' _followerIterator[583428](583430 call _toFollower iterator[583421] followThis[583419]))
          {
            unknown _indexOfInterest[583449] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583450] "expr temp" "temp"
            (583459 'move' _iterator[583450](583457 call _getIterator _followerIterator[583428]))
            Defer
            {
              {
                (583473 call _freeIterator _iterator[583450])
              }
            }
            { scopeless type
              (583464 'move' _indexOfInterest[583449](583461 call iteratorIndex _iterator[583450]))
            }
            ForLoop[583451] lowered-forall for-expr
            {
              unknown i[583436] "index var" "insert auto destroy" "no doc"
              (583587 'end of statement')
              (583468 'move' i[583436] _indexOfInterest[583449])
              (583588 'end of statement' i[583436])
              {
                {
                  unknown yret[583598] "YVV" "temp"
                  unknown call_tmp[583607] "expr temp" "maybe param" "maybe type" "temp"
                  (583610 'move' call_tmp[583607](583445 call(583442 call (partial) _getRef _mt[243] this[583480]) i[583436]))
                  (583601 'move' yret[583598](583600 'deref' call_tmp[583607]))
                  (583603 yield yret[583598])
                  (583590 'end of statement' i[583436])
                }
              }
              label _continueLabel[583454]
              _indexOfInterest[583449]
              _iterator[583450]
            }
            label _breakLabel[583455]
          }
          (583596 return ret[583594])
        }
        where {
          (583424 call == tag[583416] follower[449])
        }
        function chpl__forallexpr10[583324](arg iterExpr[583327]:_any[178](?), arg this[583331]:list[304289](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583615] "RVV" "temp"
          unknown _iterator[583334] "expr temp" "maybe ref" "temp"
          (583336 'move' _iterator[583334] iterExpr[583327])
          unknown call_tmp[583622] "expr temp" "maybe param" "maybe type" "temp"
          (583625 'move' call_tmp[583622](583339 call chpl__loopexpr_iter10 _iterator[583334] this[583331]))
          (583620 'move' ret[583615](583619 'deref' call_tmp[583622]))
          (583617 return ret[583615])
        }
        unknown call_tmp[583627] "expr temp" "maybe param" "maybe type" "temp"
        (583630 'move' call_tmp[583627](304245 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583634] "expr temp" "maybe param" "maybe type" "temp"
        (583637 'move' call_tmp[583634](406955 call _size _mt[243] this[304543]))
        unknown call_tmp[583639] "expr temp" "maybe param" "maybe type" "temp"
        (583642 'move' call_tmp[583639](304248 call # call_tmp[583627] call_tmp[583634]))
        unknown call_tmp[583644] "maybe param" "maybe type" "temp"
        (583647 'move' call_tmp[583644](583329 call chpl__forallexpr10 call_tmp[583639] this[304543]))
        (583651 'iterator record set shape' call_tmp[583644] call_tmp[583639] 0)
        unknown call_tmp[747744] "expr temp" "maybe param" "maybe type" "temp"
        (747747 'move' call_tmp[747744](304232 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747751] "expr temp" "maybe param" "maybe type" "temp"
        (747754 'move' call_tmp[747751](406944 call _size _mt[243] this[304543]))
        unknown call_tmp[747756] "expr temp" "maybe param" "maybe type" "temp"
        (747759 'move' call_tmp[747756](304235 call # call_tmp[747744] call_tmp[747751]))
        unknown call_tmp[747761] "expr temp" "maybe param" "maybe type" "temp"
        (747764 'move' call_tmp[747761](304239 call chpl__ensureDomainExpr call_tmp[747756]))
        unknown call_tmp[747768] "expr temp" "maybe param" "maybe type" "temp"
        (747771 'move' call_tmp[747768](406949 call eltType _mt[243] this[304543]))
        unknown call_tmp[747773] "maybe param" "maybe type" "temp"
        (747776 'move' call_tmp[747773](304241 call chpl__buildArrayRuntimeType call_tmp[747761] call_tmp[747768]))
        (550189 'init var' tmp[304258] call_tmp[583644] call_tmp[747773])
        (304261 'end of statement')
        (304264 call = result[304221] tmp[304258])
        (491633 'end of statement' result[304221] tmp[304258])
        (304269 call(406966 call (partial) _leave _mt[243] this[304543]))
      }
      (936736 return _void[55])
    }
    {
    }
    unknown call_tmp[747782] "expr temp" "maybe param" "maybe type" "temp"
    (747785 'move' call_tmp[747782](539706 call eltType _mt[243] this[304543]))
    (539709 call chpl__checkEltTypeMatch result[304221] call_tmp[747782])
    (539711 'move' ret[539700] result[304221])
    gotoReturn _end_toArray[539698] _end_toArray[539698]
    (491637 'end of statement' result[304221])
    label _end_toArray[539698]
    (539702 return ret[539700])
  }
  function list[304289](?).eltType[930332](arg _mt[930334]:_MT[238], arg this[930336]:list[304289](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930355] "RVV" "temp" "type variable"
    unknown call_tmp[930369] "expr temp" "maybe param" "maybe type" "temp"
    (930372 'move' call_tmp[930369](930341 'is bound' this[930336] c"eltType"))
    if call_tmp[930369]
    {
      unknown call_tmp[930374] "expr temp" "maybe param" "maybe type" "temp"
      (930377 'move' call_tmp[930374](930340 '.v' this[930336] c"eltType"))
      (930360 'move' ret[930355](930359 'deref' call_tmp[930374]))
      gotoReturn _end_eltType[930353] _end_eltType[930353]
    }
    {
      (930365 'move' ret[930355](930364 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930353] _end_eltType[930353]
    }
    label _end_eltType[930353]
    (930357 return ret[930355])
  }
  function list[304289](?).eltType[930379](arg _mt[930381]:_MT[238], arg this[930383]:list[304289](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930402] "RVV" "temp" "type variable"
    unknown call_tmp[930416] "expr temp" "maybe param" "maybe type" "temp"
    (930419 'move' call_tmp[930416](930388 'is bound' this[930383] c"eltType"))
    if call_tmp[930416]
    {
      unknown call_tmp[930421] "expr temp" "maybe param" "maybe type" "temp"
      (930424 'move' call_tmp[930421](930387 '.v' this[930383] c"eltType"))
      (930407 'move' ret[930402](930406 'deref' call_tmp[930421]))
      gotoReturn _end_eltType[930400] _end_eltType[930400]
    }
    {
      (930412 'move' ret[930402](930411 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930400] _end_eltType[930400]
    }
    label _end_eltType[930400]
    (930404 return ret[930402])
  }
  function list[304289](?).parSafe[930426](arg _mt[930428]:_MT[238], arg this[930430]:list[304289](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930449] "RVV" "param" "temp"
    unknown call_tmp[930463] "expr temp" "maybe param" "maybe type" "temp"
    (930466 'move' call_tmp[930463](930435 'is bound' this[930430] c"parSafe"))
    if call_tmp[930463]
    {
      unknown call_tmp[930468] "expr temp" "maybe param" "maybe type" "temp"
      (930471 'move' call_tmp[930468](930434 '.' this[930430] c"parSafe"))
      (930454 'move' ret[930449](930453 'deref' call_tmp[930468]))
      gotoReturn _end_parSafe[930447] _end_parSafe[930447]
    }
    {
      (930459 'move' ret[930449](930458 'deref' ?[260]))
      gotoReturn _end_parSafe[930447] _end_parSafe[930447]
    }
    label _end_parSafe[930447]
    (930451 return ret[930449])
  }
  function list[304289](?).parSafe[930473](arg _mt[930475]:_MT[238], arg this[930477]:list[304289](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930496] "RVV" "param" "temp"
    unknown call_tmp[930510] "expr temp" "maybe param" "maybe type" "temp"
    (930513 'move' call_tmp[930510](930482 'is bound' this[930477] c"parSafe"))
    if call_tmp[930510]
    {
      unknown call_tmp[930515] "expr temp" "maybe param" "maybe type" "temp"
      (930518 'move' call_tmp[930515](930481 '.' this[930477] c"parSafe"))
      (930501 'move' ret[930496](930500 'deref' call_tmp[930515]))
      gotoReturn _end_parSafe[930494] _end_parSafe[930494]
    }
    {
      (930506 'move' ret[930496](930505 'deref' ?[260]))
      gotoReturn _end_parSafe[930494] _end_parSafe[930494]
    }
    label _end_parSafe[930494]
    (930498 return ret[930496])
  }
  function list[304289](?)._size[930520](arg _mt[930522]:_MT[238], ref arg this[930524]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930534] "RVV" "temp"
    unknown call_tmp[930541] "expr temp" "maybe param" "maybe type" "temp"
    (930544 'move' call_tmp[930541](930528 '.' this[930524] c"_size"))
    (930539 'move' ret[930534](930538 'addr of' call_tmp[930541]))
    (930536 return ret[930534])
  }
  function list[304289](?)._lock$[930546](arg _mt[930548]:_MT[238], ref arg this[930550]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930560] "RVV" "temp"
    unknown call_tmp[930567] "expr temp" "maybe param" "maybe type" "temp"
    (930570 'move' call_tmp[930567](930554 '.' this[930550] c"_lock$"))
    (930565 'move' ret[930560](930564 'addr of' call_tmp[930567]))
    (930562 return ret[930560])
  }
  function list[304289](?)._arrays[930572](arg _mt[930574]:_MT[238], ref arg this[930576]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930586] "RVV" "temp"
    unknown call_tmp[930593] "expr temp" "maybe param" "maybe type" "temp"
    (930596 'move' call_tmp[930593](930580 '.' this[930576] c"_arrays"))
    (930591 'move' ret[930586](930590 'addr of' call_tmp[930593]))
    (930588 return ret[930586])
  }
  function list[304289](?)._arrayCapacity[930598](arg _mt[930600]:_MT[238], ref arg this[930602]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930612] "RVV" "temp"
    unknown call_tmp[930619] "expr temp" "maybe param" "maybe type" "temp"
    (930622 'move' call_tmp[930619](930606 '.' this[930602] c"_arrayCapacity"))
    (930617 'move' ret[930612](930616 'addr of' call_tmp[930619]))
    (930614 return ret[930612])
  }
  function list[304289](?)._totalCapacity[930624](arg _mt[930626]:_MT[238], ref arg this[930628]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930638] "RVV" "temp"
    unknown call_tmp[930645] "expr temp" "maybe param" "maybe type" "temp"
    (930648 'move' call_tmp[930645](930632 '.' this[930628] c"_totalCapacity"))
    (930643 'move' ret[930638](930642 'addr of' call_tmp[930645]))
    (930640 return ret[930638])
  }
  function list[304289](?)._dummyFieldToForceBorrowChecking[930650](arg _mt[930652]:_MT[238], ref arg this[930654]:list[304289](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930664] "RVV" "temp"
    unknown call_tmp[930671] "expr temp" "maybe param" "maybe type" "temp"
    (930674 'move' call_tmp[930671](930658 '.' this[930654] c"_dummyFieldToForceBorrowChecking"))
    (930669 'move' ret[930664](930668 'addr of' call_tmp[930671]))
    (930666 return ret[930664])
  }
  function list[304289](?).writeThis[930676](arg _mt[930680]:_MT[238], arg this[930678]:list[304289](?), arg f[930679]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930689 call(930685 call (partial) readWriteThis _mt[243] this[930678]) f[930679])
    (930692 return _void[55])
  }
  function list[304289](?).readThis[930696](arg _mt[930700]:_MT[238], arg this[930698]:list[304289](?), arg f[930699]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930708 call(930704 call (partial) readWriteThis _mt[243] this[930698]) f[930699])
    (930712 return _void[55])
  }
  function chpl_fields_are_comparable[930728](arg _arg1[930730]:list[304289](?), arg _arg2[930731]:list[304289](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[930810]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[930817] "expr temp" "maybe param" "maybe type" "temp"
    (930820 'move' call_tmp[930817](930734 call parSafe _mt[243] _arg1[930730]))
    unknown call_tmp[930822] "expr temp" "maybe param" "maybe type" "temp"
    (930825 'move' call_tmp[930822](930738 call parSafe _mt[243] _arg2[930731]))
    unknown call_tmp[930827] "expr temp" "maybe param" "maybe type" "temp"
    (930830 'move' call_tmp[930827](930742 'call resolves' c"<" call_tmp[930817] call_tmp[930822]))
    unknown call_tmp[930832] "expr temp" "maybe param" "maybe type" "temp"
    (930835 'move' call_tmp[930832](930744 call _size _mt[243] _arg1[930730]))
    unknown call_tmp[930837] "expr temp" "maybe param" "maybe type" "temp"
    (930840 'move' call_tmp[930837](930748 call _size _mt[243] _arg2[930731]))
    unknown call_tmp[930842] "expr temp" "maybe param" "maybe type" "temp"
    (930845 'move' call_tmp[930842](930752 'call resolves' c"<" call_tmp[930832] call_tmp[930837]))
    unknown call_tmp[930847] "expr temp" "maybe param" "maybe type" "temp"
    (930850 'move' call_tmp[930847](930754 call _lock$ _mt[243] _arg1[930730]))
    unknown call_tmp[930852] "expr temp" "maybe param" "maybe type" "temp"
    (930855 'move' call_tmp[930852](930758 call _lock$ _mt[243] _arg2[930731]))
    unknown call_tmp[930857] "expr temp" "maybe param" "maybe type" "temp"
    (930860 'move' call_tmp[930857](930762 'call resolves' c"<" call_tmp[930847] call_tmp[930852]))
    unknown call_tmp[930862] "expr temp" "maybe param" "maybe type" "temp"
    (930865 'move' call_tmp[930862](930764 call _arrays _mt[243] _arg1[930730]))
    unknown call_tmp[930867] "expr temp" "maybe param" "maybe type" "temp"
    (930870 'move' call_tmp[930867](930768 call _arrays _mt[243] _arg2[930731]))
    unknown call_tmp[930872] "expr temp" "maybe param" "maybe type" "temp"
    (930875 'move' call_tmp[930872](930772 'call resolves' c"<" call_tmp[930862] call_tmp[930867]))
    unknown call_tmp[930877] "expr temp" "maybe param" "maybe type" "temp"
    (930880 'move' call_tmp[930877](930774 call _arrayCapacity _mt[243] _arg1[930730]))
    unknown call_tmp[930882] "expr temp" "maybe param" "maybe type" "temp"
    (930885 'move' call_tmp[930882](930778 call _arrayCapacity _mt[243] _arg2[930731]))
    unknown call_tmp[930887] "expr temp" "maybe param" "maybe type" "temp"
    (930890 'move' call_tmp[930887](930782 'call resolves' c"<" call_tmp[930877] call_tmp[930882]))
    unknown call_tmp[930892] "expr temp" "maybe param" "maybe type" "temp"
    (930895 'move' call_tmp[930892](930784 call _totalCapacity _mt[243] _arg1[930730]))
    unknown call_tmp[930897] "expr temp" "maybe param" "maybe type" "temp"
    (930900 'move' call_tmp[930897](930788 call _totalCapacity _mt[243] _arg2[930731]))
    unknown call_tmp[930902] "expr temp" "maybe param" "maybe type" "temp"
    (930905 'move' call_tmp[930902](930792 'call resolves' c"<" call_tmp[930892] call_tmp[930897]))
    unknown call_tmp[930907] "expr temp" "maybe param" "maybe type" "temp"
    (930910 'move' call_tmp[930907](930794 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930730]))
    unknown call_tmp[930912] "expr temp" "maybe param" "maybe type" "temp"
    (930915 'move' call_tmp[930912](930798 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930731]))
    unknown call_tmp[930917] "expr temp" "maybe param" "maybe type" "temp"
    (930920 'move' call_tmp[930917](930802 'call resolves' c"<" call_tmp[930907] call_tmp[930912]))
    unknown call_tmp[930922] "expr temp" "maybe param" "maybe type" "temp"
    (930925 'move' call_tmp[930922](930804 '&' call_tmp[930827] call_tmp[930842] call_tmp[930857] call_tmp[930872] call_tmp[930887] call_tmp[930902] call_tmp[930917]))
    (930815 'move' ret[930810](930814 'deref' call_tmp[930922]))
    (930812 return ret[930810])
  }
  function <[930716](arg _arg1[930718]:list[304289](?), arg _arg2[930719]:list[304289](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931149]:bool[10] "RVV" "temp"
    unknown call_tmp[931226] "expr temp" "maybe param" "maybe type" "temp"
    (931229 'move' call_tmp[931226](930933 call parSafe _mt[243] _arg1[930718]))
    unknown call_tmp[931231] "expr temp" "maybe param" "maybe type" "temp"
    (931234 'move' call_tmp[931231](930937 call parSafe _mt[243] _arg2[930719]))
    unknown call_tmp[931236] "expr temp" "maybe param" "maybe type" "temp"
    (931239 'move' call_tmp[931236](930941 call < call_tmp[931226] call_tmp[931231]))
    if call_tmp[931236]
    {
      (931154 'move' ret[931149](931153 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931241] "expr temp" "maybe param" "maybe type" "temp"
    (931244 'move' call_tmp[931241](930947 call parSafe _mt[243] _arg1[930718]))
    unknown call_tmp[931246] "expr temp" "maybe param" "maybe type" "temp"
    (931249 'move' call_tmp[931246](930951 call parSafe _mt[243] _arg2[930719]))
    unknown call_tmp[931251] "expr temp" "maybe param" "maybe type" "temp"
    (931254 'move' call_tmp[931251](930955 call > call_tmp[931241] call_tmp[931246]))
    if call_tmp[931251]
    {
      (931159 'move' ret[931149](931158 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931256] "expr temp" "maybe param" "maybe type" "temp"
    (931259 'move' call_tmp[931256](930961 call _size _mt[243] _arg1[930718]))
    unknown call_tmp[931261] "expr temp" "maybe param" "maybe type" "temp"
    (931264 'move' call_tmp[931261](930965 call _size _mt[243] _arg2[930719]))
    unknown call_tmp[931266] "expr temp" "maybe param" "maybe type" "temp"
    (931269 'move' call_tmp[931266](930969 call < call_tmp[931256] call_tmp[931261]))
    if call_tmp[931266]
    {
      (931164 'move' ret[931149](931163 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931271] "expr temp" "maybe param" "maybe type" "temp"
    (931274 'move' call_tmp[931271](930975 call _size _mt[243] _arg1[930718]))
    unknown call_tmp[931276] "expr temp" "maybe param" "maybe type" "temp"
    (931279 'move' call_tmp[931276](930979 call _size _mt[243] _arg2[930719]))
    unknown call_tmp[931281] "expr temp" "maybe param" "maybe type" "temp"
    (931284 'move' call_tmp[931281](930983 call > call_tmp[931271] call_tmp[931276]))
    if call_tmp[931281]
    {
      (931169 'move' ret[931149](931168 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931286] "expr temp" "maybe param" "maybe type" "temp"
    (931289 'move' call_tmp[931286](930989 call _lock$ _mt[243] _arg1[930718]))
    unknown call_tmp[931291] "expr temp" "maybe param" "maybe type" "temp"
    (931294 'move' call_tmp[931291](930993 call _lock$ _mt[243] _arg2[930719]))
    unknown call_tmp[931296] "expr temp" "maybe param" "maybe type" "temp"
    (931299 'move' call_tmp[931296](930997 call < call_tmp[931286] call_tmp[931291]))
    if call_tmp[931296]
    {
      (931174 'move' ret[931149](931173 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931301] "expr temp" "maybe param" "maybe type" "temp"
    (931304 'move' call_tmp[931301](931003 call _lock$ _mt[243] _arg1[930718]))
    unknown call_tmp[931306] "expr temp" "maybe param" "maybe type" "temp"
    (931309 'move' call_tmp[931306](931007 call _lock$ _mt[243] _arg2[930719]))
    unknown call_tmp[931311] "expr temp" "maybe param" "maybe type" "temp"
    (931314 'move' call_tmp[931311](931011 call > call_tmp[931301] call_tmp[931306]))
    if call_tmp[931311]
    {
      (931179 'move' ret[931149](931178 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931316] "expr temp" "maybe param" "maybe type" "temp"
    (931319 'move' call_tmp[931316](931017 call _arrays _mt[243] _arg1[930718]))
    unknown call_tmp[931321] "expr temp" "maybe param" "maybe type" "temp"
    (931324 'move' call_tmp[931321](931021 call _arrays _mt[243] _arg2[930719]))
    unknown call_tmp[931326] "expr temp" "maybe param" "maybe type" "temp"
    (931329 'move' call_tmp[931326](931025 call < call_tmp[931316] call_tmp[931321]))
    if call_tmp[931326]
    {
      (931184 'move' ret[931149](931183 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931331] "expr temp" "maybe param" "maybe type" "temp"
    (931334 'move' call_tmp[931331](931031 call _arrays _mt[243] _arg1[930718]))
    unknown call_tmp[931336] "expr temp" "maybe param" "maybe type" "temp"
    (931339 'move' call_tmp[931336](931035 call _arrays _mt[243] _arg2[930719]))
    unknown call_tmp[931341] "expr temp" "maybe param" "maybe type" "temp"
    (931344 'move' call_tmp[931341](931039 call > call_tmp[931331] call_tmp[931336]))
    if call_tmp[931341]
    {
      (931189 'move' ret[931149](931188 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931346] "expr temp" "maybe param" "maybe type" "temp"
    (931349 'move' call_tmp[931346](931045 call _arrayCapacity _mt[243] _arg1[930718]))
    unknown call_tmp[931351] "expr temp" "maybe param" "maybe type" "temp"
    (931354 'move' call_tmp[931351](931049 call _arrayCapacity _mt[243] _arg2[930719]))
    unknown call_tmp[931356] "expr temp" "maybe param" "maybe type" "temp"
    (931359 'move' call_tmp[931356](931053 call < call_tmp[931346] call_tmp[931351]))
    if call_tmp[931356]
    {
      (931194 'move' ret[931149](931193 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931361] "expr temp" "maybe param" "maybe type" "temp"
    (931364 'move' call_tmp[931361](931059 call _arrayCapacity _mt[243] _arg1[930718]))
    unknown call_tmp[931366] "expr temp" "maybe param" "maybe type" "temp"
    (931369 'move' call_tmp[931366](931063 call _arrayCapacity _mt[243] _arg2[930719]))
    unknown call_tmp[931371] "expr temp" "maybe param" "maybe type" "temp"
    (931374 'move' call_tmp[931371](931067 call > call_tmp[931361] call_tmp[931366]))
    if call_tmp[931371]
    {
      (931199 'move' ret[931149](931198 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931376] "expr temp" "maybe param" "maybe type" "temp"
    (931379 'move' call_tmp[931376](931073 call _totalCapacity _mt[243] _arg1[930718]))
    unknown call_tmp[931381] "expr temp" "maybe param" "maybe type" "temp"
    (931384 'move' call_tmp[931381](931077 call _totalCapacity _mt[243] _arg2[930719]))
    unknown call_tmp[931386] "expr temp" "maybe param" "maybe type" "temp"
    (931389 'move' call_tmp[931386](931081 call < call_tmp[931376] call_tmp[931381]))
    if call_tmp[931386]
    {
      (931204 'move' ret[931149](931203 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931391] "expr temp" "maybe param" "maybe type" "temp"
    (931394 'move' call_tmp[931391](931087 call _totalCapacity _mt[243] _arg1[930718]))
    unknown call_tmp[931396] "expr temp" "maybe param" "maybe type" "temp"
    (931399 'move' call_tmp[931396](931091 call _totalCapacity _mt[243] _arg2[930719]))
    unknown call_tmp[931401] "expr temp" "maybe param" "maybe type" "temp"
    (931404 'move' call_tmp[931401](931095 call > call_tmp[931391] call_tmp[931396]))
    if call_tmp[931401]
    {
      (931209 'move' ret[931149](931208 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931406] "expr temp" "maybe param" "maybe type" "temp"
    (931409 'move' call_tmp[931406](931101 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930718]))
    unknown call_tmp[931411] "expr temp" "maybe param" "maybe type" "temp"
    (931414 'move' call_tmp[931411](931105 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930719]))
    unknown call_tmp[931416] "expr temp" "maybe param" "maybe type" "temp"
    (931419 'move' call_tmp[931416](931109 call < call_tmp[931406] call_tmp[931411]))
    if call_tmp[931416]
    {
      (931214 'move' ret[931149](931213 'deref' 1))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    unknown call_tmp[931421] "expr temp" "maybe param" "maybe type" "temp"
    (931424 'move' call_tmp[931421](931115 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930718]))
    unknown call_tmp[931426] "expr temp" "maybe param" "maybe type" "temp"
    (931429 'move' call_tmp[931426](931119 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930719]))
    unknown call_tmp[931431] "expr temp" "maybe param" "maybe type" "temp"
    (931434 'move' call_tmp[931431](931123 call > call_tmp[931421] call_tmp[931426]))
    if call_tmp[931431]
    {
      (931219 'move' ret[931149](931218 'deref' 0))
      gotoReturn _end_<[931147] _end_<[931147]
    }
    (931224 'move' ret[931149](931223 'deref' 0))
    label _end_<[931147]
    (931151 return ret[931149])
  }
  where {
    unknown call_tmp[931436] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931439 'move' call_tmp[931436](930722 'typeof' _arg1[930718]))
    unknown call_tmp[931441] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931444 'move' call_tmp[931441](930724 'typeof' _arg2[930719]))
    unknown call_tmp[931446] "expr temp" "maybe param" "maybe type" "temp"
    (931449 'move' call_tmp[931446](930726 call == call_tmp[931436] call_tmp[931441]))
    unknown call_tmp[931451] "expr temp" "maybe param" "maybe type" "temp"
    (931454 'move' call_tmp[931451](930927 call chpl_fields_are_comparable[930728] _arg1[930718] _arg2[930719]))
    (930931 '&' call_tmp[931446] call_tmp[931451])
  }
  function chpl_fields_are_comparable[931468](arg _arg1[931470]:list[304289](?), arg _arg2[931471]:list[304289](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[931550]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[931557] "expr temp" "maybe param" "maybe type" "temp"
    (931560 'move' call_tmp[931557](931474 call parSafe _mt[243] _arg1[931470]))
    unknown call_tmp[931562] "expr temp" "maybe param" "maybe type" "temp"
    (931565 'move' call_tmp[931562](931478 call parSafe _mt[243] _arg2[931471]))
    unknown call_tmp[931567] "expr temp" "maybe param" "maybe type" "temp"
    (931570 'move' call_tmp[931567](931482 'call resolves' c"<=" call_tmp[931557] call_tmp[931562]))
    unknown call_tmp[931572] "expr temp" "maybe param" "maybe type" "temp"
    (931575 'move' call_tmp[931572](931484 call _size _mt[243] _arg1[931470]))
    unknown call_tmp[931577] "expr temp" "maybe param" "maybe type" "temp"
    (931580 'move' call_tmp[931577](931488 call _size _mt[243] _arg2[931471]))
    unknown call_tmp[931582] "expr temp" "maybe param" "maybe type" "temp"
    (931585 'move' call_tmp[931582](931492 'call resolves' c"<=" call_tmp[931572] call_tmp[931577]))
    unknown call_tmp[931587] "expr temp" "maybe param" "maybe type" "temp"
    (931590 'move' call_tmp[931587](931494 call _lock$ _mt[243] _arg1[931470]))
    unknown call_tmp[931592] "expr temp" "maybe param" "maybe type" "temp"
    (931595 'move' call_tmp[931592](931498 call _lock$ _mt[243] _arg2[931471]))
    unknown call_tmp[931597] "expr temp" "maybe param" "maybe type" "temp"
    (931600 'move' call_tmp[931597](931502 'call resolves' c"<=" call_tmp[931587] call_tmp[931592]))
    unknown call_tmp[931602] "expr temp" "maybe param" "maybe type" "temp"
    (931605 'move' call_tmp[931602](931504 call _arrays _mt[243] _arg1[931470]))
    unknown call_tmp[931607] "expr temp" "maybe param" "maybe type" "temp"
    (931610 'move' call_tmp[931607](931508 call _arrays _mt[243] _arg2[931471]))
    unknown call_tmp[931612] "expr temp" "maybe param" "maybe type" "temp"
    (931615 'move' call_tmp[931612](931512 'call resolves' c"<=" call_tmp[931602] call_tmp[931607]))
    unknown call_tmp[931617] "expr temp" "maybe param" "maybe type" "temp"
    (931620 'move' call_tmp[931617](931514 call _arrayCapacity _mt[243] _arg1[931470]))
    unknown call_tmp[931622] "expr temp" "maybe param" "maybe type" "temp"
    (931625 'move' call_tmp[931622](931518 call _arrayCapacity _mt[243] _arg2[931471]))
    unknown call_tmp[931627] "expr temp" "maybe param" "maybe type" "temp"
    (931630 'move' call_tmp[931627](931522 'call resolves' c"<=" call_tmp[931617] call_tmp[931622]))
    unknown call_tmp[931632] "expr temp" "maybe param" "maybe type" "temp"
    (931635 'move' call_tmp[931632](931524 call _totalCapacity _mt[243] _arg1[931470]))
    unknown call_tmp[931637] "expr temp" "maybe param" "maybe type" "temp"
    (931640 'move' call_tmp[931637](931528 call _totalCapacity _mt[243] _arg2[931471]))
    unknown call_tmp[931642] "expr temp" "maybe param" "maybe type" "temp"
    (931645 'move' call_tmp[931642](931532 'call resolves' c"<=" call_tmp[931632] call_tmp[931637]))
    unknown call_tmp[931647] "expr temp" "maybe param" "maybe type" "temp"
    (931650 'move' call_tmp[931647](931534 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931470]))
    unknown call_tmp[931652] "expr temp" "maybe param" "maybe type" "temp"
    (931655 'move' call_tmp[931652](931538 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931471]))
    unknown call_tmp[931657] "expr temp" "maybe param" "maybe type" "temp"
    (931660 'move' call_tmp[931657](931542 'call resolves' c"<=" call_tmp[931647] call_tmp[931652]))
    unknown call_tmp[931662] "expr temp" "maybe param" "maybe type" "temp"
    (931665 'move' call_tmp[931662](931544 '&' call_tmp[931567] call_tmp[931582] call_tmp[931597] call_tmp[931612] call_tmp[931627] call_tmp[931642] call_tmp[931657]))
    (931555 'move' ret[931550](931554 'deref' call_tmp[931662]))
    (931552 return ret[931550])
  }
  function <=[931456](arg _arg1[931458]:list[304289](?), arg _arg2[931459]:list[304289](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931889]:bool[10] "RVV" "temp"
    unknown call_tmp[931966] "expr temp" "maybe param" "maybe type" "temp"
    (931969 'move' call_tmp[931966](931673 call parSafe _mt[243] _arg1[931458]))
    unknown call_tmp[931971] "expr temp" "maybe param" "maybe type" "temp"
    (931974 'move' call_tmp[931971](931677 call parSafe _mt[243] _arg2[931459]))
    unknown call_tmp[931976] "expr temp" "maybe param" "maybe type" "temp"
    (931979 'move' call_tmp[931976](931681 call < call_tmp[931966] call_tmp[931971]))
    if call_tmp[931976]
    {
      (931894 'move' ret[931889](931893 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[931981] "expr temp" "maybe param" "maybe type" "temp"
    (931984 'move' call_tmp[931981](931687 call parSafe _mt[243] _arg1[931458]))
    unknown call_tmp[931986] "expr temp" "maybe param" "maybe type" "temp"
    (931989 'move' call_tmp[931986](931691 call parSafe _mt[243] _arg2[931459]))
    unknown call_tmp[931991] "expr temp" "maybe param" "maybe type" "temp"
    (931994 'move' call_tmp[931991](931695 call > call_tmp[931981] call_tmp[931986]))
    if call_tmp[931991]
    {
      (931899 'move' ret[931889](931898 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[931996] "expr temp" "maybe param" "maybe type" "temp"
    (931999 'move' call_tmp[931996](931701 call _size _mt[243] _arg1[931458]))
    unknown call_tmp[932001] "expr temp" "maybe param" "maybe type" "temp"
    (932004 'move' call_tmp[932001](931705 call _size _mt[243] _arg2[931459]))
    unknown call_tmp[932006] "expr temp" "maybe param" "maybe type" "temp"
    (932009 'move' call_tmp[932006](931709 call < call_tmp[931996] call_tmp[932001]))
    if call_tmp[932006]
    {
      (931904 'move' ret[931889](931903 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932011] "expr temp" "maybe param" "maybe type" "temp"
    (932014 'move' call_tmp[932011](931715 call _size _mt[243] _arg1[931458]))
    unknown call_tmp[932016] "expr temp" "maybe param" "maybe type" "temp"
    (932019 'move' call_tmp[932016](931719 call _size _mt[243] _arg2[931459]))
    unknown call_tmp[932021] "expr temp" "maybe param" "maybe type" "temp"
    (932024 'move' call_tmp[932021](931723 call > call_tmp[932011] call_tmp[932016]))
    if call_tmp[932021]
    {
      (931909 'move' ret[931889](931908 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932026] "expr temp" "maybe param" "maybe type" "temp"
    (932029 'move' call_tmp[932026](931729 call _lock$ _mt[243] _arg1[931458]))
    unknown call_tmp[932031] "expr temp" "maybe param" "maybe type" "temp"
    (932034 'move' call_tmp[932031](931733 call _lock$ _mt[243] _arg2[931459]))
    unknown call_tmp[932036] "expr temp" "maybe param" "maybe type" "temp"
    (932039 'move' call_tmp[932036](931737 call < call_tmp[932026] call_tmp[932031]))
    if call_tmp[932036]
    {
      (931914 'move' ret[931889](931913 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932041] "expr temp" "maybe param" "maybe type" "temp"
    (932044 'move' call_tmp[932041](931743 call _lock$ _mt[243] _arg1[931458]))
    unknown call_tmp[932046] "expr temp" "maybe param" "maybe type" "temp"
    (932049 'move' call_tmp[932046](931747 call _lock$ _mt[243] _arg2[931459]))
    unknown call_tmp[932051] "expr temp" "maybe param" "maybe type" "temp"
    (932054 'move' call_tmp[932051](931751 call > call_tmp[932041] call_tmp[932046]))
    if call_tmp[932051]
    {
      (931919 'move' ret[931889](931918 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932056] "expr temp" "maybe param" "maybe type" "temp"
    (932059 'move' call_tmp[932056](931757 call _arrays _mt[243] _arg1[931458]))
    unknown call_tmp[932061] "expr temp" "maybe param" "maybe type" "temp"
    (932064 'move' call_tmp[932061](931761 call _arrays _mt[243] _arg2[931459]))
    unknown call_tmp[932066] "expr temp" "maybe param" "maybe type" "temp"
    (932069 'move' call_tmp[932066](931765 call < call_tmp[932056] call_tmp[932061]))
    if call_tmp[932066]
    {
      (931924 'move' ret[931889](931923 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932071] "expr temp" "maybe param" "maybe type" "temp"
    (932074 'move' call_tmp[932071](931771 call _arrays _mt[243] _arg1[931458]))
    unknown call_tmp[932076] "expr temp" "maybe param" "maybe type" "temp"
    (932079 'move' call_tmp[932076](931775 call _arrays _mt[243] _arg2[931459]))
    unknown call_tmp[932081] "expr temp" "maybe param" "maybe type" "temp"
    (932084 'move' call_tmp[932081](931779 call > call_tmp[932071] call_tmp[932076]))
    if call_tmp[932081]
    {
      (931929 'move' ret[931889](931928 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932086] "expr temp" "maybe param" "maybe type" "temp"
    (932089 'move' call_tmp[932086](931785 call _arrayCapacity _mt[243] _arg1[931458]))
    unknown call_tmp[932091] "expr temp" "maybe param" "maybe type" "temp"
    (932094 'move' call_tmp[932091](931789 call _arrayCapacity _mt[243] _arg2[931459]))
    unknown call_tmp[932096] "expr temp" "maybe param" "maybe type" "temp"
    (932099 'move' call_tmp[932096](931793 call < call_tmp[932086] call_tmp[932091]))
    if call_tmp[932096]
    {
      (931934 'move' ret[931889](931933 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932101] "expr temp" "maybe param" "maybe type" "temp"
    (932104 'move' call_tmp[932101](931799 call _arrayCapacity _mt[243] _arg1[931458]))
    unknown call_tmp[932106] "expr temp" "maybe param" "maybe type" "temp"
    (932109 'move' call_tmp[932106](931803 call _arrayCapacity _mt[243] _arg2[931459]))
    unknown call_tmp[932111] "expr temp" "maybe param" "maybe type" "temp"
    (932114 'move' call_tmp[932111](931807 call > call_tmp[932101] call_tmp[932106]))
    if call_tmp[932111]
    {
      (931939 'move' ret[931889](931938 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932116] "expr temp" "maybe param" "maybe type" "temp"
    (932119 'move' call_tmp[932116](931813 call _totalCapacity _mt[243] _arg1[931458]))
    unknown call_tmp[932121] "expr temp" "maybe param" "maybe type" "temp"
    (932124 'move' call_tmp[932121](931817 call _totalCapacity _mt[243] _arg2[931459]))
    unknown call_tmp[932126] "expr temp" "maybe param" "maybe type" "temp"
    (932129 'move' call_tmp[932126](931821 call < call_tmp[932116] call_tmp[932121]))
    if call_tmp[932126]
    {
      (931944 'move' ret[931889](931943 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932131] "expr temp" "maybe param" "maybe type" "temp"
    (932134 'move' call_tmp[932131](931827 call _totalCapacity _mt[243] _arg1[931458]))
    unknown call_tmp[932136] "expr temp" "maybe param" "maybe type" "temp"
    (932139 'move' call_tmp[932136](931831 call _totalCapacity _mt[243] _arg2[931459]))
    unknown call_tmp[932141] "expr temp" "maybe param" "maybe type" "temp"
    (932144 'move' call_tmp[932141](931835 call > call_tmp[932131] call_tmp[932136]))
    if call_tmp[932141]
    {
      (931949 'move' ret[931889](931948 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932146] "expr temp" "maybe param" "maybe type" "temp"
    (932149 'move' call_tmp[932146](931841 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931458]))
    unknown call_tmp[932151] "expr temp" "maybe param" "maybe type" "temp"
    (932154 'move' call_tmp[932151](931845 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931459]))
    unknown call_tmp[932156] "expr temp" "maybe param" "maybe type" "temp"
    (932159 'move' call_tmp[932156](931849 call < call_tmp[932146] call_tmp[932151]))
    if call_tmp[932156]
    {
      (931954 'move' ret[931889](931953 'deref' 1))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    unknown call_tmp[932161] "expr temp" "maybe param" "maybe type" "temp"
    (932164 'move' call_tmp[932161](931855 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931458]))
    unknown call_tmp[932166] "expr temp" "maybe param" "maybe type" "temp"
    (932169 'move' call_tmp[932166](931859 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931459]))
    unknown call_tmp[932171] "expr temp" "maybe param" "maybe type" "temp"
    (932174 'move' call_tmp[932171](931863 call > call_tmp[932161] call_tmp[932166]))
    if call_tmp[932171]
    {
      (931959 'move' ret[931889](931958 'deref' 0))
      gotoReturn _end_<=[931887] _end_<=[931887]
    }
    (931964 'move' ret[931889](931963 'deref' 1))
    label _end_<=[931887]
    (931891 return ret[931889])
  }
  where {
    unknown call_tmp[932176] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932179 'move' call_tmp[932176](931462 'typeof' _arg1[931458]))
    unknown call_tmp[932181] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932184 'move' call_tmp[932181](931464 'typeof' _arg2[931459]))
    unknown call_tmp[932186] "expr temp" "maybe param" "maybe type" "temp"
    (932189 'move' call_tmp[932186](931466 call == call_tmp[932176] call_tmp[932181]))
    unknown call_tmp[932191] "expr temp" "maybe param" "maybe type" "temp"
    (932194 'move' call_tmp[932191](931667 call chpl_fields_are_comparable[931468] _arg1[931458] _arg2[931459]))
    (931671 '&' call_tmp[932186] call_tmp[932191])
  }
  function chpl_fields_are_comparable[932208](arg _arg1[932210]:list[304289](?), arg _arg2[932211]:list[304289](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932290]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932297] "expr temp" "maybe param" "maybe type" "temp"
    (932300 'move' call_tmp[932297](932214 call parSafe _mt[243] _arg1[932210]))
    unknown call_tmp[932302] "expr temp" "maybe param" "maybe type" "temp"
    (932305 'move' call_tmp[932302](932218 call parSafe _mt[243] _arg2[932211]))
    unknown call_tmp[932307] "expr temp" "maybe param" "maybe type" "temp"
    (932310 'move' call_tmp[932307](932222 'call resolves' c">" call_tmp[932297] call_tmp[932302]))
    unknown call_tmp[932312] "expr temp" "maybe param" "maybe type" "temp"
    (932315 'move' call_tmp[932312](932224 call _size _mt[243] _arg1[932210]))
    unknown call_tmp[932317] "expr temp" "maybe param" "maybe type" "temp"
    (932320 'move' call_tmp[932317](932228 call _size _mt[243] _arg2[932211]))
    unknown call_tmp[932322] "expr temp" "maybe param" "maybe type" "temp"
    (932325 'move' call_tmp[932322](932232 'call resolves' c">" call_tmp[932312] call_tmp[932317]))
    unknown call_tmp[932327] "expr temp" "maybe param" "maybe type" "temp"
    (932330 'move' call_tmp[932327](932234 call _lock$ _mt[243] _arg1[932210]))
    unknown call_tmp[932332] "expr temp" "maybe param" "maybe type" "temp"
    (932335 'move' call_tmp[932332](932238 call _lock$ _mt[243] _arg2[932211]))
    unknown call_tmp[932337] "expr temp" "maybe param" "maybe type" "temp"
    (932340 'move' call_tmp[932337](932242 'call resolves' c">" call_tmp[932327] call_tmp[932332]))
    unknown call_tmp[932342] "expr temp" "maybe param" "maybe type" "temp"
    (932345 'move' call_tmp[932342](932244 call _arrays _mt[243] _arg1[932210]))
    unknown call_tmp[932347] "expr temp" "maybe param" "maybe type" "temp"
    (932350 'move' call_tmp[932347](932248 call _arrays _mt[243] _arg2[932211]))
    unknown call_tmp[932352] "expr temp" "maybe param" "maybe type" "temp"
    (932355 'move' call_tmp[932352](932252 'call resolves' c">" call_tmp[932342] call_tmp[932347]))
    unknown call_tmp[932357] "expr temp" "maybe param" "maybe type" "temp"
    (932360 'move' call_tmp[932357](932254 call _arrayCapacity _mt[243] _arg1[932210]))
    unknown call_tmp[932362] "expr temp" "maybe param" "maybe type" "temp"
    (932365 'move' call_tmp[932362](932258 call _arrayCapacity _mt[243] _arg2[932211]))
    unknown call_tmp[932367] "expr temp" "maybe param" "maybe type" "temp"
    (932370 'move' call_tmp[932367](932262 'call resolves' c">" call_tmp[932357] call_tmp[932362]))
    unknown call_tmp[932372] "expr temp" "maybe param" "maybe type" "temp"
    (932375 'move' call_tmp[932372](932264 call _totalCapacity _mt[243] _arg1[932210]))
    unknown call_tmp[932377] "expr temp" "maybe param" "maybe type" "temp"
    (932380 'move' call_tmp[932377](932268 call _totalCapacity _mt[243] _arg2[932211]))
    unknown call_tmp[932382] "expr temp" "maybe param" "maybe type" "temp"
    (932385 'move' call_tmp[932382](932272 'call resolves' c">" call_tmp[932372] call_tmp[932377]))
    unknown call_tmp[932387] "expr temp" "maybe param" "maybe type" "temp"
    (932390 'move' call_tmp[932387](932274 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932210]))
    unknown call_tmp[932392] "expr temp" "maybe param" "maybe type" "temp"
    (932395 'move' call_tmp[932392](932278 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932211]))
    unknown call_tmp[932397] "expr temp" "maybe param" "maybe type" "temp"
    (932400 'move' call_tmp[932397](932282 'call resolves' c">" call_tmp[932387] call_tmp[932392]))
    unknown call_tmp[932402] "expr temp" "maybe param" "maybe type" "temp"
    (932405 'move' call_tmp[932402](932284 '&' call_tmp[932307] call_tmp[932322] call_tmp[932337] call_tmp[932352] call_tmp[932367] call_tmp[932382] call_tmp[932397]))
    (932295 'move' ret[932290](932294 'deref' call_tmp[932402]))
    (932292 return ret[932290])
  }
  function >[932196](arg _arg1[932198]:list[304289](?), arg _arg2[932199]:list[304289](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[932629]:bool[10] "RVV" "temp"
    unknown call_tmp[932706] "expr temp" "maybe param" "maybe type" "temp"
    (932709 'move' call_tmp[932706](932413 call parSafe _mt[243] _arg1[932198]))
    unknown call_tmp[932711] "expr temp" "maybe param" "maybe type" "temp"
    (932714 'move' call_tmp[932711](932417 call parSafe _mt[243] _arg2[932199]))
    unknown call_tmp[932716] "expr temp" "maybe param" "maybe type" "temp"
    (932719 'move' call_tmp[932716](932421 call > call_tmp[932706] call_tmp[932711]))
    if call_tmp[932716]
    {
      (932634 'move' ret[932629](932633 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932721] "expr temp" "maybe param" "maybe type" "temp"
    (932724 'move' call_tmp[932721](932427 call parSafe _mt[243] _arg1[932198]))
    unknown call_tmp[932726] "expr temp" "maybe param" "maybe type" "temp"
    (932729 'move' call_tmp[932726](932431 call parSafe _mt[243] _arg2[932199]))
    unknown call_tmp[932731] "expr temp" "maybe param" "maybe type" "temp"
    (932734 'move' call_tmp[932731](932435 call < call_tmp[932721] call_tmp[932726]))
    if call_tmp[932731]
    {
      (932639 'move' ret[932629](932638 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932736] "expr temp" "maybe param" "maybe type" "temp"
    (932739 'move' call_tmp[932736](932441 call _size _mt[243] _arg1[932198]))
    unknown call_tmp[932741] "expr temp" "maybe param" "maybe type" "temp"
    (932744 'move' call_tmp[932741](932445 call _size _mt[243] _arg2[932199]))
    unknown call_tmp[932746] "expr temp" "maybe param" "maybe type" "temp"
    (932749 'move' call_tmp[932746](932449 call > call_tmp[932736] call_tmp[932741]))
    if call_tmp[932746]
    {
      (932644 'move' ret[932629](932643 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932751] "expr temp" "maybe param" "maybe type" "temp"
    (932754 'move' call_tmp[932751](932455 call _size _mt[243] _arg1[932198]))
    unknown call_tmp[932756] "expr temp" "maybe param" "maybe type" "temp"
    (932759 'move' call_tmp[932756](932459 call _size _mt[243] _arg2[932199]))
    unknown call_tmp[932761] "expr temp" "maybe param" "maybe type" "temp"
    (932764 'move' call_tmp[932761](932463 call < call_tmp[932751] call_tmp[932756]))
    if call_tmp[932761]
    {
      (932649 'move' ret[932629](932648 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932766] "expr temp" "maybe param" "maybe type" "temp"
    (932769 'move' call_tmp[932766](932469 call _lock$ _mt[243] _arg1[932198]))
    unknown call_tmp[932771] "expr temp" "maybe param" "maybe type" "temp"
    (932774 'move' call_tmp[932771](932473 call _lock$ _mt[243] _arg2[932199]))
    unknown call_tmp[932776] "expr temp" "maybe param" "maybe type" "temp"
    (932779 'move' call_tmp[932776](932477 call > call_tmp[932766] call_tmp[932771]))
    if call_tmp[932776]
    {
      (932654 'move' ret[932629](932653 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932781] "expr temp" "maybe param" "maybe type" "temp"
    (932784 'move' call_tmp[932781](932483 call _lock$ _mt[243] _arg1[932198]))
    unknown call_tmp[932786] "expr temp" "maybe param" "maybe type" "temp"
    (932789 'move' call_tmp[932786](932487 call _lock$ _mt[243] _arg2[932199]))
    unknown call_tmp[932791] "expr temp" "maybe param" "maybe type" "temp"
    (932794 'move' call_tmp[932791](932491 call < call_tmp[932781] call_tmp[932786]))
    if call_tmp[932791]
    {
      (932659 'move' ret[932629](932658 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932796] "expr temp" "maybe param" "maybe type" "temp"
    (932799 'move' call_tmp[932796](932497 call _arrays _mt[243] _arg1[932198]))
    unknown call_tmp[932801] "expr temp" "maybe param" "maybe type" "temp"
    (932804 'move' call_tmp[932801](932501 call _arrays _mt[243] _arg2[932199]))
    unknown call_tmp[932806] "expr temp" "maybe param" "maybe type" "temp"
    (932809 'move' call_tmp[932806](932505 call > call_tmp[932796] call_tmp[932801]))
    if call_tmp[932806]
    {
      (932664 'move' ret[932629](932663 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932811] "expr temp" "maybe param" "maybe type" "temp"
    (932814 'move' call_tmp[932811](932511 call _arrays _mt[243] _arg1[932198]))
    unknown call_tmp[932816] "expr temp" "maybe param" "maybe type" "temp"
    (932819 'move' call_tmp[932816](932515 call _arrays _mt[243] _arg2[932199]))
    unknown call_tmp[932821] "expr temp" "maybe param" "maybe type" "temp"
    (932824 'move' call_tmp[932821](932519 call < call_tmp[932811] call_tmp[932816]))
    if call_tmp[932821]
    {
      (932669 'move' ret[932629](932668 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932826] "expr temp" "maybe param" "maybe type" "temp"
    (932829 'move' call_tmp[932826](932525 call _arrayCapacity _mt[243] _arg1[932198]))
    unknown call_tmp[932831] "expr temp" "maybe param" "maybe type" "temp"
    (932834 'move' call_tmp[932831](932529 call _arrayCapacity _mt[243] _arg2[932199]))
    unknown call_tmp[932836] "expr temp" "maybe param" "maybe type" "temp"
    (932839 'move' call_tmp[932836](932533 call > call_tmp[932826] call_tmp[932831]))
    if call_tmp[932836]
    {
      (932674 'move' ret[932629](932673 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932841] "expr temp" "maybe param" "maybe type" "temp"
    (932844 'move' call_tmp[932841](932539 call _arrayCapacity _mt[243] _arg1[932198]))
    unknown call_tmp[932846] "expr temp" "maybe param" "maybe type" "temp"
    (932849 'move' call_tmp[932846](932543 call _arrayCapacity _mt[243] _arg2[932199]))
    unknown call_tmp[932851] "expr temp" "maybe param" "maybe type" "temp"
    (932854 'move' call_tmp[932851](932547 call < call_tmp[932841] call_tmp[932846]))
    if call_tmp[932851]
    {
      (932679 'move' ret[932629](932678 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932856] "expr temp" "maybe param" "maybe type" "temp"
    (932859 'move' call_tmp[932856](932553 call _totalCapacity _mt[243] _arg1[932198]))
    unknown call_tmp[932861] "expr temp" "maybe param" "maybe type" "temp"
    (932864 'move' call_tmp[932861](932557 call _totalCapacity _mt[243] _arg2[932199]))
    unknown call_tmp[932866] "expr temp" "maybe param" "maybe type" "temp"
    (932869 'move' call_tmp[932866](932561 call > call_tmp[932856] call_tmp[932861]))
    if call_tmp[932866]
    {
      (932684 'move' ret[932629](932683 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932871] "expr temp" "maybe param" "maybe type" "temp"
    (932874 'move' call_tmp[932871](932567 call _totalCapacity _mt[243] _arg1[932198]))
    unknown call_tmp[932876] "expr temp" "maybe param" "maybe type" "temp"
    (932879 'move' call_tmp[932876](932571 call _totalCapacity _mt[243] _arg2[932199]))
    unknown call_tmp[932881] "expr temp" "maybe param" "maybe type" "temp"
    (932884 'move' call_tmp[932881](932575 call < call_tmp[932871] call_tmp[932876]))
    if call_tmp[932881]
    {
      (932689 'move' ret[932629](932688 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932886] "expr temp" "maybe param" "maybe type" "temp"
    (932889 'move' call_tmp[932886](932581 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932198]))
    unknown call_tmp[932891] "expr temp" "maybe param" "maybe type" "temp"
    (932894 'move' call_tmp[932891](932585 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932199]))
    unknown call_tmp[932896] "expr temp" "maybe param" "maybe type" "temp"
    (932899 'move' call_tmp[932896](932589 call > call_tmp[932886] call_tmp[932891]))
    if call_tmp[932896]
    {
      (932694 'move' ret[932629](932693 'deref' 1))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    unknown call_tmp[932901] "expr temp" "maybe param" "maybe type" "temp"
    (932904 'move' call_tmp[932901](932595 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932198]))
    unknown call_tmp[932906] "expr temp" "maybe param" "maybe type" "temp"
    (932909 'move' call_tmp[932906](932599 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932199]))
    unknown call_tmp[932911] "expr temp" "maybe param" "maybe type" "temp"
    (932914 'move' call_tmp[932911](932603 call < call_tmp[932901] call_tmp[932906]))
    if call_tmp[932911]
    {
      (932699 'move' ret[932629](932698 'deref' 0))
      gotoReturn _end_>[932627] _end_>[932627]
    }
    (932704 'move' ret[932629](932703 'deref' 0))
    label _end_>[932627]
    (932631 return ret[932629])
  }
  where {
    unknown call_tmp[932916] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932919 'move' call_tmp[932916](932202 'typeof' _arg1[932198]))
    unknown call_tmp[932921] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932924 'move' call_tmp[932921](932204 'typeof' _arg2[932199]))
    unknown call_tmp[932926] "expr temp" "maybe param" "maybe type" "temp"
    (932929 'move' call_tmp[932926](932206 call == call_tmp[932916] call_tmp[932921]))
    unknown call_tmp[932931] "expr temp" "maybe param" "maybe type" "temp"
    (932934 'move' call_tmp[932931](932407 call chpl_fields_are_comparable[932208] _arg1[932198] _arg2[932199]))
    (932411 '&' call_tmp[932926] call_tmp[932931])
  }
  function chpl_fields_are_comparable[932948](arg _arg1[932950]:list[304289](?), arg _arg2[932951]:list[304289](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[933030]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[933037] "expr temp" "maybe param" "maybe type" "temp"
    (933040 'move' call_tmp[933037](932954 call parSafe _mt[243] _arg1[932950]))
    unknown call_tmp[933042] "expr temp" "maybe param" "maybe type" "temp"
    (933045 'move' call_tmp[933042](932958 call parSafe _mt[243] _arg2[932951]))
    unknown call_tmp[933047] "expr temp" "maybe param" "maybe type" "temp"
    (933050 'move' call_tmp[933047](932962 'call resolves' c">=" call_tmp[933037] call_tmp[933042]))
    unknown call_tmp[933052] "expr temp" "maybe param" "maybe type" "temp"
    (933055 'move' call_tmp[933052](932964 call _size _mt[243] _arg1[932950]))
    unknown call_tmp[933057] "expr temp" "maybe param" "maybe type" "temp"
    (933060 'move' call_tmp[933057](932968 call _size _mt[243] _arg2[932951]))
    unknown call_tmp[933062] "expr temp" "maybe param" "maybe type" "temp"
    (933065 'move' call_tmp[933062](932972 'call resolves' c">=" call_tmp[933052] call_tmp[933057]))
    unknown call_tmp[933067] "expr temp" "maybe param" "maybe type" "temp"
    (933070 'move' call_tmp[933067](932974 call _lock$ _mt[243] _arg1[932950]))
    unknown call_tmp[933072] "expr temp" "maybe param" "maybe type" "temp"
    (933075 'move' call_tmp[933072](932978 call _lock$ _mt[243] _arg2[932951]))
    unknown call_tmp[933077] "expr temp" "maybe param" "maybe type" "temp"
    (933080 'move' call_tmp[933077](932982 'call resolves' c">=" call_tmp[933067] call_tmp[933072]))
    unknown call_tmp[933082] "expr temp" "maybe param" "maybe type" "temp"
    (933085 'move' call_tmp[933082](932984 call _arrays _mt[243] _arg1[932950]))
    unknown call_tmp[933087] "expr temp" "maybe param" "maybe type" "temp"
    (933090 'move' call_tmp[933087](932988 call _arrays _mt[243] _arg2[932951]))
    unknown call_tmp[933092] "expr temp" "maybe param" "maybe type" "temp"
    (933095 'move' call_tmp[933092](932992 'call resolves' c">=" call_tmp[933082] call_tmp[933087]))
    unknown call_tmp[933097] "expr temp" "maybe param" "maybe type" "temp"
    (933100 'move' call_tmp[933097](932994 call _arrayCapacity _mt[243] _arg1[932950]))
    unknown call_tmp[933102] "expr temp" "maybe param" "maybe type" "temp"
    (933105 'move' call_tmp[933102](932998 call _arrayCapacity _mt[243] _arg2[932951]))
    unknown call_tmp[933107] "expr temp" "maybe param" "maybe type" "temp"
    (933110 'move' call_tmp[933107](933002 'call resolves' c">=" call_tmp[933097] call_tmp[933102]))
    unknown call_tmp[933112] "expr temp" "maybe param" "maybe type" "temp"
    (933115 'move' call_tmp[933112](933004 call _totalCapacity _mt[243] _arg1[932950]))
    unknown call_tmp[933117] "expr temp" "maybe param" "maybe type" "temp"
    (933120 'move' call_tmp[933117](933008 call _totalCapacity _mt[243] _arg2[932951]))
    unknown call_tmp[933122] "expr temp" "maybe param" "maybe type" "temp"
    (933125 'move' call_tmp[933122](933012 'call resolves' c">=" call_tmp[933112] call_tmp[933117]))
    unknown call_tmp[933127] "expr temp" "maybe param" "maybe type" "temp"
    (933130 'move' call_tmp[933127](933014 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932950]))
    unknown call_tmp[933132] "expr temp" "maybe param" "maybe type" "temp"
    (933135 'move' call_tmp[933132](933018 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932951]))
    unknown call_tmp[933137] "expr temp" "maybe param" "maybe type" "temp"
    (933140 'move' call_tmp[933137](933022 'call resolves' c">=" call_tmp[933127] call_tmp[933132]))
    unknown call_tmp[933142] "expr temp" "maybe param" "maybe type" "temp"
    (933145 'move' call_tmp[933142](933024 '&' call_tmp[933047] call_tmp[933062] call_tmp[933077] call_tmp[933092] call_tmp[933107] call_tmp[933122] call_tmp[933137]))
    (933035 'move' ret[933030](933034 'deref' call_tmp[933142]))
    (933032 return ret[933030])
  }
  function >=[932936](arg _arg1[932938]:list[304289](?), arg _arg2[932939]:list[304289](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[933369]:bool[10] "RVV" "temp"
    unknown call_tmp[933446] "expr temp" "maybe param" "maybe type" "temp"
    (933449 'move' call_tmp[933446](933153 call parSafe _mt[243] _arg1[932938]))
    unknown call_tmp[933451] "expr temp" "maybe param" "maybe type" "temp"
    (933454 'move' call_tmp[933451](933157 call parSafe _mt[243] _arg2[932939]))
    unknown call_tmp[933456] "expr temp" "maybe param" "maybe type" "temp"
    (933459 'move' call_tmp[933456](933161 call > call_tmp[933446] call_tmp[933451]))
    if call_tmp[933456]
    {
      (933374 'move' ret[933369](933373 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933461] "expr temp" "maybe param" "maybe type" "temp"
    (933464 'move' call_tmp[933461](933167 call parSafe _mt[243] _arg1[932938]))
    unknown call_tmp[933466] "expr temp" "maybe param" "maybe type" "temp"
    (933469 'move' call_tmp[933466](933171 call parSafe _mt[243] _arg2[932939]))
    unknown call_tmp[933471] "expr temp" "maybe param" "maybe type" "temp"
    (933474 'move' call_tmp[933471](933175 call < call_tmp[933461] call_tmp[933466]))
    if call_tmp[933471]
    {
      (933379 'move' ret[933369](933378 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933476] "expr temp" "maybe param" "maybe type" "temp"
    (933479 'move' call_tmp[933476](933181 call _size _mt[243] _arg1[932938]))
    unknown call_tmp[933481] "expr temp" "maybe param" "maybe type" "temp"
    (933484 'move' call_tmp[933481](933185 call _size _mt[243] _arg2[932939]))
    unknown call_tmp[933486] "expr temp" "maybe param" "maybe type" "temp"
    (933489 'move' call_tmp[933486](933189 call > call_tmp[933476] call_tmp[933481]))
    if call_tmp[933486]
    {
      (933384 'move' ret[933369](933383 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933491] "expr temp" "maybe param" "maybe type" "temp"
    (933494 'move' call_tmp[933491](933195 call _size _mt[243] _arg1[932938]))
    unknown call_tmp[933496] "expr temp" "maybe param" "maybe type" "temp"
    (933499 'move' call_tmp[933496](933199 call _size _mt[243] _arg2[932939]))
    unknown call_tmp[933501] "expr temp" "maybe param" "maybe type" "temp"
    (933504 'move' call_tmp[933501](933203 call < call_tmp[933491] call_tmp[933496]))
    if call_tmp[933501]
    {
      (933389 'move' ret[933369](933388 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933506] "expr temp" "maybe param" "maybe type" "temp"
    (933509 'move' call_tmp[933506](933209 call _lock$ _mt[243] _arg1[932938]))
    unknown call_tmp[933511] "expr temp" "maybe param" "maybe type" "temp"
    (933514 'move' call_tmp[933511](933213 call _lock$ _mt[243] _arg2[932939]))
    unknown call_tmp[933516] "expr temp" "maybe param" "maybe type" "temp"
    (933519 'move' call_tmp[933516](933217 call > call_tmp[933506] call_tmp[933511]))
    if call_tmp[933516]
    {
      (933394 'move' ret[933369](933393 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933521] "expr temp" "maybe param" "maybe type" "temp"
    (933524 'move' call_tmp[933521](933223 call _lock$ _mt[243] _arg1[932938]))
    unknown call_tmp[933526] "expr temp" "maybe param" "maybe type" "temp"
    (933529 'move' call_tmp[933526](933227 call _lock$ _mt[243] _arg2[932939]))
    unknown call_tmp[933531] "expr temp" "maybe param" "maybe type" "temp"
    (933534 'move' call_tmp[933531](933231 call < call_tmp[933521] call_tmp[933526]))
    if call_tmp[933531]
    {
      (933399 'move' ret[933369](933398 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933536] "expr temp" "maybe param" "maybe type" "temp"
    (933539 'move' call_tmp[933536](933237 call _arrays _mt[243] _arg1[932938]))
    unknown call_tmp[933541] "expr temp" "maybe param" "maybe type" "temp"
    (933544 'move' call_tmp[933541](933241 call _arrays _mt[243] _arg2[932939]))
    unknown call_tmp[933546] "expr temp" "maybe param" "maybe type" "temp"
    (933549 'move' call_tmp[933546](933245 call > call_tmp[933536] call_tmp[933541]))
    if call_tmp[933546]
    {
      (933404 'move' ret[933369](933403 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933551] "expr temp" "maybe param" "maybe type" "temp"
    (933554 'move' call_tmp[933551](933251 call _arrays _mt[243] _arg1[932938]))
    unknown call_tmp[933556] "expr temp" "maybe param" "maybe type" "temp"
    (933559 'move' call_tmp[933556](933255 call _arrays _mt[243] _arg2[932939]))
    unknown call_tmp[933561] "expr temp" "maybe param" "maybe type" "temp"
    (933564 'move' call_tmp[933561](933259 call < call_tmp[933551] call_tmp[933556]))
    if call_tmp[933561]
    {
      (933409 'move' ret[933369](933408 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933566] "expr temp" "maybe param" "maybe type" "temp"
    (933569 'move' call_tmp[933566](933265 call _arrayCapacity _mt[243] _arg1[932938]))
    unknown call_tmp[933571] "expr temp" "maybe param" "maybe type" "temp"
    (933574 'move' call_tmp[933571](933269 call _arrayCapacity _mt[243] _arg2[932939]))
    unknown call_tmp[933576] "expr temp" "maybe param" "maybe type" "temp"
    (933579 'move' call_tmp[933576](933273 call > call_tmp[933566] call_tmp[933571]))
    if call_tmp[933576]
    {
      (933414 'move' ret[933369](933413 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933581] "expr temp" "maybe param" "maybe type" "temp"
    (933584 'move' call_tmp[933581](933279 call _arrayCapacity _mt[243] _arg1[932938]))
    unknown call_tmp[933586] "expr temp" "maybe param" "maybe type" "temp"
    (933589 'move' call_tmp[933586](933283 call _arrayCapacity _mt[243] _arg2[932939]))
    unknown call_tmp[933591] "expr temp" "maybe param" "maybe type" "temp"
    (933594 'move' call_tmp[933591](933287 call < call_tmp[933581] call_tmp[933586]))
    if call_tmp[933591]
    {
      (933419 'move' ret[933369](933418 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933596] "expr temp" "maybe param" "maybe type" "temp"
    (933599 'move' call_tmp[933596](933293 call _totalCapacity _mt[243] _arg1[932938]))
    unknown call_tmp[933601] "expr temp" "maybe param" "maybe type" "temp"
    (933604 'move' call_tmp[933601](933297 call _totalCapacity _mt[243] _arg2[932939]))
    unknown call_tmp[933606] "expr temp" "maybe param" "maybe type" "temp"
    (933609 'move' call_tmp[933606](933301 call > call_tmp[933596] call_tmp[933601]))
    if call_tmp[933606]
    {
      (933424 'move' ret[933369](933423 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933611] "expr temp" "maybe param" "maybe type" "temp"
    (933614 'move' call_tmp[933611](933307 call _totalCapacity _mt[243] _arg1[932938]))
    unknown call_tmp[933616] "expr temp" "maybe param" "maybe type" "temp"
    (933619 'move' call_tmp[933616](933311 call _totalCapacity _mt[243] _arg2[932939]))
    unknown call_tmp[933621] "expr temp" "maybe param" "maybe type" "temp"
    (933624 'move' call_tmp[933621](933315 call < call_tmp[933611] call_tmp[933616]))
    if call_tmp[933621]
    {
      (933429 'move' ret[933369](933428 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933626] "expr temp" "maybe param" "maybe type" "temp"
    (933629 'move' call_tmp[933626](933321 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932938]))
    unknown call_tmp[933631] "expr temp" "maybe param" "maybe type" "temp"
    (933634 'move' call_tmp[933631](933325 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932939]))
    unknown call_tmp[933636] "expr temp" "maybe param" "maybe type" "temp"
    (933639 'move' call_tmp[933636](933329 call > call_tmp[933626] call_tmp[933631]))
    if call_tmp[933636]
    {
      (933434 'move' ret[933369](933433 'deref' 1))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    unknown call_tmp[933641] "expr temp" "maybe param" "maybe type" "temp"
    (933644 'move' call_tmp[933641](933335 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932938]))
    unknown call_tmp[933646] "expr temp" "maybe param" "maybe type" "temp"
    (933649 'move' call_tmp[933646](933339 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932939]))
    unknown call_tmp[933651] "expr temp" "maybe param" "maybe type" "temp"
    (933654 'move' call_tmp[933651](933343 call < call_tmp[933641] call_tmp[933646]))
    if call_tmp[933651]
    {
      (933439 'move' ret[933369](933438 'deref' 0))
      gotoReturn _end_>=[933367] _end_>=[933367]
    }
    (933444 'move' ret[933369](933443 'deref' 1))
    label _end_>=[933367]
    (933371 return ret[933369])
  }
  where {
    unknown call_tmp[933656] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933659 'move' call_tmp[933656](932942 'typeof' _arg1[932938]))
    unknown call_tmp[933661] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933664 'move' call_tmp[933661](932944 'typeof' _arg2[932939]))
    unknown call_tmp[933666] "expr temp" "maybe param" "maybe type" "temp"
    (933669 'move' call_tmp[933666](932946 call == call_tmp[933656] call_tmp[933661]))
    unknown call_tmp[933671] "expr temp" "maybe param" "maybe type" "temp"
    (933674 'move' call_tmp[933671](933147 call chpl_fields_are_comparable[932948] _arg1[932938] _arg2[932939]))
    (933151 '&' call_tmp[933666] call_tmp[933671])
  }
  function chpl__defaultHash[933676](arg r[933678]:list[304289](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[933754] "RVV" "temp"
    unknown call_tmp[933761] "expr temp" "maybe param" "maybe type" "temp"
    (933764 'move' call_tmp[933761](933740 call _dummyFieldToForceBorrowChecking _mt[243] r[933678]))
    unknown call_tmp[933766] "expr temp" "maybe param" "maybe type" "temp"
    (933769 'move' call_tmp[933766](933744 call chpl__defaultHash call_tmp[933761]))
    unknown call_tmp[933771] "expr temp" "maybe param" "maybe type" "temp"
    (933774 'move' call_tmp[933771](933731 call _totalCapacity _mt[243] r[933678]))
    unknown call_tmp[933776] "expr temp" "maybe param" "maybe type" "temp"
    (933779 'move' call_tmp[933776](933735 call chpl__defaultHash call_tmp[933771]))
    unknown call_tmp[933781] "expr temp" "maybe param" "maybe type" "temp"
    (933784 'move' call_tmp[933781](933722 call _arrayCapacity _mt[243] r[933678]))
    unknown call_tmp[933786] "expr temp" "maybe param" "maybe type" "temp"
    (933789 'move' call_tmp[933786](933726 call chpl__defaultHash call_tmp[933781]))
    unknown call_tmp[933791] "expr temp" "maybe param" "maybe type" "temp"
    (933794 'move' call_tmp[933791](933713 call _arrays _mt[243] r[933678]))
    unknown call_tmp[933796] "expr temp" "maybe param" "maybe type" "temp"
    (933799 'move' call_tmp[933796](933717 call chpl__defaultHash call_tmp[933791]))
    unknown call_tmp[933801] "expr temp" "maybe param" "maybe type" "temp"
    (933804 'move' call_tmp[933801](933704 call _lock$ _mt[243] r[933678]))
    unknown call_tmp[933806] "expr temp" "maybe param" "maybe type" "temp"
    (933809 'move' call_tmp[933806](933708 call chpl__defaultHash call_tmp[933801]))
    unknown call_tmp[933811] "expr temp" "maybe param" "maybe type" "temp"
    (933814 'move' call_tmp[933811](933695 call _size _mt[243] r[933678]))
    unknown call_tmp[933816] "expr temp" "maybe param" "maybe type" "temp"
    (933819 'move' call_tmp[933816](933699 call chpl__defaultHash call_tmp[933811]))
    unknown call_tmp[933821] "expr temp" "maybe param" "maybe type" "temp"
    (933824 'move' call_tmp[933821](933686 call parSafe _mt[243] r[933678]))
    unknown call_tmp[933826] "expr temp" "maybe param" "maybe type" "temp"
    (933829 'move' call_tmp[933826](933690 call chpl__defaultHash call_tmp[933821]))
    unknown call_tmp[933831] "expr temp" "maybe param" "maybe type" "temp"
    (933834 'move' call_tmp[933831](933680 call eltType _mt[243] r[933678]))
    unknown call_tmp[933836] "expr temp" "maybe param" "maybe type" "temp"
    (933839 'move' call_tmp[933836](933684 call chpl__defaultHash call_tmp[933831]))
    unknown call_tmp[933841] "expr temp" "maybe param" "maybe type" "temp"
    (933844 'move' call_tmp[933841](933692 call chpl__defaultHashCombine call_tmp[933826] call_tmp[933836] 2))
    unknown call_tmp[933846] "expr temp" "maybe param" "maybe type" "temp"
    (933849 'move' call_tmp[933846](933701 call chpl__defaultHashCombine call_tmp[933816] call_tmp[933841] 3))
    unknown call_tmp[933851] "expr temp" "maybe param" "maybe type" "temp"
    (933854 'move' call_tmp[933851](933710 call chpl__defaultHashCombine call_tmp[933806] call_tmp[933846] 4))
    unknown call_tmp[933856] "expr temp" "maybe param" "maybe type" "temp"
    (933859 'move' call_tmp[933856](933719 call chpl__defaultHashCombine call_tmp[933796] call_tmp[933851] 5))
    unknown call_tmp[933861] "expr temp" "maybe param" "maybe type" "temp"
    (933864 'move' call_tmp[933861](933728 call chpl__defaultHashCombine call_tmp[933786] call_tmp[933856] 6))
    unknown call_tmp[933866] "expr temp" "maybe param" "maybe type" "temp"
    (933869 'move' call_tmp[933866](933737 call chpl__defaultHashCombine call_tmp[933776] call_tmp[933861] 7))
    unknown call_tmp[933871] "expr temp" "maybe param" "maybe type" "temp"
    (933874 'move' call_tmp[933871](933746 call chpl__defaultHashCombine call_tmp[933766] call_tmp[933866] 8))
    (933759 'move' ret[933754](933758 'deref' call_tmp[933871]))
    (933756 return ret[933754])
  }
  type list[304289](?) unknown eltType[298537] "type variable" unknown parSafe[298541] "param" 0 val _size[298546]:int(64)[13] "no doc" 0 unknown _lock$[298559] "no doc"(298556 IfExpr  parSafe[298541] then
  { scopeless
    (748318 'new' _LockWrapper[405313](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298571] "no doc" nil[44](298569 call _ddata[11696](?)(298567 call _ddata[11696](?) eltType[298537])) val _arrayCapacity[298576]:int(64)[13] "no doc" 0 val _totalCapacity[298581]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298589] "no doc"(298588 call _dummyFieldType eltType[298537])
  function =[304559](ref arg lhs[304556]:list[304289](?), arg rhs[304566]:list[304289](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304574 call(304570 call (partial) clear _mt[243] lhs[304556]))
    (491639 'end of statement')
    (304585 call(304580 call (partial) extend _mt[243] lhs[304556]) rhs[304566])
    (539715 return _void[55])
  }
  where {
    unknown call_tmp[747791] "expr temp" "maybe param" "maybe type" "temp"
    (747794 'move' call_tmp[747791](468046 'query' lhs[304556] 1))
    unknown call_tmp[747796] "expr temp" "maybe param" "maybe type" "temp"
    (747799 'move' call_tmp[747796](468043 'query' rhs[304566] 1))
    unknown call_tmp[747801] "expr temp" "maybe param" "maybe type" "temp"
    (747804 'move' call_tmp[747801](468049 call == call_tmp[747791] call_tmp[747796]))
    (468053 call & 1 call_tmp[747801])
  }
  function ==[304600](arg a[304597]:list[304289](?), arg b[304607]:list[304289](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539719] "RVV" "temp"
    unknown call_tmp[747808] "expr temp" "maybe param" "maybe type" "temp"
    (747811 'move' call_tmp[747808](304612 call size _mt[243] a[304597]))
    unknown call_tmp[747815] "expr temp" "maybe param" "maybe type" "temp"
    (747818 'move' call_tmp[747815](304616 call size _mt[243] b[304607]))
    unknown call_tmp[747820] "expr temp" "maybe param" "maybe type" "temp"
    (747823 'move' call_tmp[747820](304619 call != call_tmp[747808] call_tmp[747815]))
    unknown call_tmp[747825] "expr temp" "maybe param" "maybe type" "temp"
    (747828 'move' call_tmp[747825](304624 call _cond_test call_tmp[747820]))
    if call_tmp[747825]
    {
      (539725 'move' ret[539719](539724 'coerce' 0 bool[10]))
      gotoReturn _end_==[539717] _end_==[539717]
    }
    {
      unknown _indexOfInterest[304658] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304659] "expr temp" "temp"
      unknown call_tmp[747832] "expr temp" "maybe param" "maybe type" "temp"
      (747835 'move' call_tmp[747832](304674 call size _mt[243] a[304597]))
      unknown call_tmp[747837] "expr temp" "maybe param" "maybe type" "temp"
      (747840 'move' call_tmp[747837](304678 call chpl_direct_counted_range_iter 0 call_tmp[747832]))
      (304668 'move' _iterator[304659](304666 call _getIterator call_tmp[747837]))
      Defer
      {
        {
          (304694 call _freeIterator _iterator[304659])
        }
      }
      { scopeless type
        (304683 'move' _indexOfInterest[304658](304680 call iteratorIndex _iterator[304659]))
      }
      ForLoop[304660]
      {
        unknown i[304687] "index var" "insert auto destroy"
        (491643 'end of statement')
        (304689 'move' i[304687] _indexOfInterest[304658])
        (491644 'end of statement' i[304687])
        unknown call_tmp[747842] "expr temp" "maybe param" "maybe type" "temp"
        (747845 'move' call_tmp[747842](304643 call a[304597] i[304687]))
        unknown call_tmp[747847] "expr temp" "maybe param" "maybe type" "temp"
        (747850 'move' call_tmp[747847](304647 call b[304607] i[304687]))
        unknown call_tmp[747852] "expr temp" "maybe param" "maybe type" "temp"
        (747855 'move' call_tmp[747852](304648 call != call_tmp[747842] call_tmp[747847]))
        unknown call_tmp[747857] "expr temp" "maybe param" "maybe type" "temp"
        (747860 'move' call_tmp[747857](304653 call _cond_test call_tmp[747852]))
        if call_tmp[747857]
        {
          (539731 'move' ret[539719](539730 'coerce' 0 bool[10]))
          gotoReturn _end_==[539717] _end_==[539717]
        }
        label _continueLabel[304663]
        _indexOfInterest[304658]
        _iterator[304659]
      }
      label _breakLabel[304664]
    }
    (539737 'move' ret[539719](539736 'coerce' 1 bool[10]))
    label _end_==[539717]
    (539721 return ret[539719])
  }
  where {
    unknown call_tmp[747862] "expr temp" "maybe param" "maybe type" "temp"
    (747865 'move' call_tmp[747862](468078 'query' a[304597] 1))
    unknown call_tmp[747867] "expr temp" "maybe param" "maybe type" "temp"
    (747870 'move' call_tmp[747867](468075 'query' b[304607] 1))
    unknown call_tmp[747872] "expr temp" "maybe param" "maybe type" "temp"
    (747875 'move' call_tmp[747872](468081 call == call_tmp[747862] call_tmp[747867]))
    (468085 call & 1 call_tmp[747872])
  }
  { scopeless type
    bool[10]
  }
  function !=[304718](arg a[304715]:list[304289](?), arg b[304725]:list[304289](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539741] "RVV" "temp"
    unknown call_tmp[747877] "expr temp" "maybe param" "maybe type" "temp"
    (747880 'move' call_tmp[747877](304731 call == a[304715] b[304725]))
    unknown call_tmp[747882] "expr temp" "maybe param" "maybe type" "temp"
    (747885 'move' call_tmp[747882](304733 call ! call_tmp[747877]))
    (539747 'move' ret[539741](539746 'coerce' call_tmp[747882] bool[10]))
    (539743 return ret[539741])
  }
  where {
    unknown call_tmp[747887] "expr temp" "maybe param" "maybe type" "temp"
    (747890 'move' call_tmp[747887](468110 'query' a[304715] 1))
    unknown call_tmp[747892] "expr temp" "maybe param" "maybe type" "temp"
    (747895 'move' call_tmp[747892](468107 'query' b[304725] 1))
    unknown call_tmp[747897] "expr temp" "maybe param" "maybe type" "temp"
    (747900 'move' call_tmp[747897](468113 call == call_tmp[747887] call_tmp[747892]))
    (468117 call & 1 call_tmp[747897])
  }
  { scopeless type
    bool[10]
  }
  (355622 'used modules list'(353169 'use' ChapelStandard[20267])(298314 'import' ChapelLocks[187302])(298318 'use' HaltWrappers[210085])(298321 'use' Sort[268056])(298534 'use' IO[230979]))
  (365004 'referenced modules list' ChapelLocks[187302] Sort[268056])
}