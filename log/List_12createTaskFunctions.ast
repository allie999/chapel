AST dump for List after pass createTaskFunctions.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416213]() : void[4] "insert line file info" "module init"
  {
    (549869 'init var' _initialCapacity[298157] 8)
    (298160 'end of statement')
    (549871 'init var' _initialArrayCapacity[298162] 16)
    (298165 'end of statement')
    (549873 'init var' _sanityChecks[298167] 0)
    (298170 'end of statement')
    (549879 'move' _lockType[298199](549878 call chpl_LocalSpinlock[187398]))
    (490968 'end of statement')
    (539671 return _void[55])
  }
  const _initialCapacity[298157] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298162] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298167] "dead at end of block" "no doc" "param" "private"
  function _sanity[298177](arg expr[298174]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744171] "expr temp" "maybe param" "maybe type" "temp"
    (744174 'move' call_tmp[744171](298185 call _cond_test _sanityChecks[298167]))
    if call_tmp[744171]
    {
      (298183 call assert expr[298174])
    }
    (539113 return _void[55])
  }
  unknown _lockType[298199] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187398]
  function _LockWrapper[298240].lock[298213](arg _mt[298244]:_MT[238], arg this[298242]:_LockWrapper[298240]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744178] "expr temp" "maybe param" "maybe type" "temp"
    (744181 'move' call_tmp[744178](364957 call lock$ _mt[243] this[298242]))
    (298220 call(298216 call (partial) lock _mt[243] call_tmp[744178]))
    (539115 return _void[55])
  }
  function _LockWrapper[298240].unlock[298227](arg _mt[298248]:_MT[238], arg this[298246]:_LockWrapper[298240]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744187] "expr temp" "maybe param" "maybe type" "temp"
    (744190 'move' call_tmp[744187](364962 call lock$ _mt[243] this[298246]))
    (298234 call(298230 call (partial) unlock _mt[243] call_tmp[744187]))
    (539117 return _void[55])
  }
  function _LockWrapper[298240].super[929998](arg _mt[930000]:_MT[238], arg this[930002]:_LockWrapper[298240]) : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930012] "RVV" "temp"
    unknown call_tmp[930019] "expr temp" "maybe param" "maybe type" "temp"
    (930022 'move' call_tmp[930019](930006 '.v' this[930002] c"super"))
    (930017 'move' ret[930012](930016 'deref' call_tmp[930019]))
    (930014 return ret[930012])
  }
  function _LockWrapper[298240].lock$[930024](arg _mt[930026]:_MT[238], arg this[930028]:_LockWrapper[298240]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930038] "RVV" "temp"
    unknown call_tmp[930045] "expr temp" "maybe param" "maybe type" "temp"
    (930048 'move' call_tmp[930045](930032 '.' this[930028] c"lock$"))
    (930043 'move' ret[930038](930042 'addr of' call_tmp[930045]))
    (930040 return ret[930038])
  }
  function _LockWrapper[298240].init[930050](arg _mt[930052]:_MT[238], arg this[930053]:_LockWrapper[298240], in arg lock$[930064] :
  (930134 'new' _lockType[298199]) =
  (930135 'new' _lockType[298199])) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "suppress lvalue error"
  {
    unknown super_tmp[930083] "temporary of super field" "temp"
    (930085 'move' super_tmp[930083](930082 '.v' this[930053] c"super"))
    (930063 call(930061 call (partial) init _mt[243] super_tmp[930083]))
    (930109 'end of statement')
    unknown tmp[930088] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[930112] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[930124] "expr temp" "maybe param" "maybe type" "temp"
      (930127 'move' call_tmp[930124](930090 '.v' this[930053] c"super"))
      (930116 'move' call_type_tmp[930112](930093 'typeof' call_tmp[930124]))
    }
    (930094 'move' tmp[930088] call_type_tmp[930112])
    unknown call_tmp[930129] "maybe param" "maybe type" "temp"
    (930132 'move' call_tmp[930129](930099 'cast' tmp[930088] this[930053]))
    unknown chpl__thisAsParent[930096] "dead at end of block" "insert auto destroy" "temp"
    (930120 'init var' chpl__thisAsParent[930096] call_tmp[930129] tmp[930088])
    (930102 'setcid' chpl__thisAsParent[930096])
    (930104 '.=' this[930053] c"lock$" lock$[930064])
    (930110 'end of statement')
    (930107 'setcid' this[930053])
    (930118 return _void[55])
  }
  function _LockWrapper[298240].deinit[930136](arg _mt[930138]:_MT[238], arg this[930140]:_LockWrapper[298240]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (930148 return _void[55])
  }
  function _LockWrapper[298240].writeThis[930150](arg _mt[930154]:_MT[238], arg this[930152]:_LockWrapper[298240], arg f[930153]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930159 call writeThisDefaultImpl f[930153] this[930152])
    (930164 return _void[55])
  }
  function _LockWrapper[298240].readThis[930166](arg _mt[930170]:_MT[238], arg this[930168]:_LockWrapper[298240], arg f[930169]:_any[178](?)) : void[4] throws "compiler generated" "last resort" "method" "primary method" "method overrides"
  {
    (930174 call readThisDefaultImpl f[930169] this[930168])
    (930180 return _void[55])
  }
  type _LockWrapper[298240] val super[355829]:object[22] "super class" unknown lock$[298207](298203 'new'(298206 call _lockType[298199]))
  type _LockWrapper[405255](?)
  function _checkType[298255](arg eltType[298253]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744194] "expr temp" "maybe param" "maybe type" "temp"
    (744197 'move' call_tmp[744194](298260 call isGenericType eltType[298253]))
    unknown call_tmp[744199] "expr temp" "maybe param" "maybe type" "temp"
    (744202 'move' call_tmp[744199](298333 call _cond_test call_tmp[744194]))
    if call_tmp[744199]
    {
      unknown call_tmp[744204] "expr temp" "maybe param" "maybe type" "temp"
      (744207 'move' call_tmp[744204](298281 call _cast string[26] eltType[298253]))
      unknown call_tmp[744209] "expr temp" "maybe param" "maybe type" "temp"
      (744212 'move' call_tmp[744209](298283 call + "creating a list with element type " call_tmp[744204]))
      (298286 call compilerWarning call_tmp[744209])
      (490971 'end of statement')
      unknown tmp[434854] "maybe param" "temp"
      (434865 'move' tmp[434854](298292 call isClassType eltType[298253]))
      unknown call_tmp[744214] "expr temp" "maybe param" "maybe type" "temp"
      (744217 'move' call_tmp[744214](434867 call _cond_invalid tmp[434854]))
      if call_tmp[744214]
      {
        (434870 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580721] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580722] "maybe param" "temp"
      unknown call_tmp[744219] "expr temp" "maybe param" "maybe type" "temp"
      (744222 'move' call_tmp[744219](434855 call isTrue tmp[434854]))
      (580727 'move' tmp[580722](580725 call _cond_test call_tmp[744219]))
      if tmp[580722]
      {
        unknown tmp[580729] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744224] "expr temp" "maybe param" "maybe type" "temp"
        (744227 'move' call_tmp[744224](298295 'to borrowed class from unknown' eltType[298253]))
        unknown call_tmp[744229] "expr temp" "maybe param" "maybe type" "temp"
        (744232 'move' call_tmp[744229](298297 call isGenericType call_tmp[744224]))
        unknown call_tmp[744234] "expr temp" "maybe param" "maybe type" "temp"
        (744237 'move' call_tmp[744234](298298 call ! call_tmp[744229]))
        (580731 'move' tmp[580729](434858 call isTrue call_tmp[744234]))
        (580736 'move' tmp[580721](580733 '_paramFoldLogical' tmp[580722] tmp[580729]))
      }
      {
        (580741 'move' tmp[580721](580738 '_paramFoldLogical' tmp[580722] 0))
      }
      unknown call_tmp[744239] "expr temp" "maybe param" "maybe type" "temp"
      (744242 'move' call_tmp[744239](298308 call _cond_test tmp[580721]))
      if call_tmp[744239]
      {
        (298305 call compilerWarning "which now means class type with generic management")
      }
      (298331 call compilerError "list element type cannot currently be generic")
    }
    (539119 return _void[55])
  }
  function _dummyFieldType[298344](arg t[298342]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[539123] "RVV" "temp" "type variable"
    unknown call_tmp[744244] "expr temp" "maybe param" "maybe type" "temp"
    (744247 'move' call_tmp[744244](298349 call isBorrowedClass t[298342]))
    unknown call_tmp[744249] "expr temp" "maybe param" "maybe type" "temp"
    (744252 'move' call_tmp[744249](298359 call _cond_test call_tmp[744244]))
    if call_tmp[744249]
    {
      unknown call_tmp[744254] "expr temp" "maybe param" "maybe type" "temp"
      (744257 'move' call_tmp[744254](298351 'to nilable class from type' t[298342]))
      (539128 'move' ret[539123](539127 'deref' call_tmp[744254]))
      gotoReturn _end__dummyFieldType[539121] _end__dummyFieldType[539121]
    }
    {
      (539133 'move' ret[539123](539132 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[539121] _end__dummyFieldType[539121]
    }
    label _end__dummyFieldType[539121]
    (539125 return ret[539123])
  }
  function list[304122](?).init[298430](arg _mt[304126]:_MT[238], ref arg this[304124]:list[304122](?), arg eltType[298428]:_any[178](?), param arg parSafe[298433] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298439 call _checkType eltType[298428])
    (490977 'end of statement')
    unknown tmp[467136] "temp" "type variable"
    (467138 'move' tmp[467136] eltType[298428])
    (467140 'init field' this[304124] c"eltType" tmp[467136])
    (490978 'end of statement')
    unknown tmp[467144] "param" "temp"
    (467146 'init var' tmp[467144] parSafe[298433])
    (467148 'init field' this[304124] c"parSafe" tmp[467144])
    (490979 'end of statement')
    unknown tmp[467153] "temp"
    (467155 'init var' tmp[467153] 0)
    (467157 '.=' this[304124] c"_size" tmp[467153])
    (490980 'end of statement')
    unknown tmp[467169] "temp"
    unknown tmp[580748] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580749] "maybe param" "temp"
    unknown call_tmp[744259] "expr temp" "maybe param" "maybe type" "temp"
    (744262 'move' call_tmp[744259](467177 '.v' this[304124] c"parSafe"))
    (580754 'move' tmp[580749](580752 call _cond_test call_tmp[744259]))
    if tmp[580749]
    {
      unknown tmp[580756] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580758 'move' tmp[580756](748160 'new' _LockWrapper[405255](?)))
      (580763 'move' tmp[580748](580760 '_paramFoldLogical' tmp[580749] tmp[580756]))
    }
    {
      (580768 'move' tmp[580748](580765 '_paramFoldLogical' tmp[580749] none[57]))
    }
    (467171 'init var' tmp[467169] tmp[580748])
    (467173 '.=' this[304124] c"_lock$" tmp[467169])
    (490981 'end of statement')
    unknown call_tmp[744264] "expr temp" "maybe param" "maybe type" "temp"
    (744267 'move' call_tmp[744264](467194 '.v' this[304124] c"eltType"))
    unknown call_tmp[744269] "expr temp" "maybe param" "maybe type" "temp"
    (744272 'move' call_tmp[744269](467186 call _ddata[11695](?) call_tmp[744264]))
    unknown call_tmp[744274] "maybe param" "maybe type" "temp"
    (744277 'move' call_tmp[744274](467184 call _ddata[11695](?) call_tmp[744269]))
    unknown tmp[467181] "temp"
    (467188 'init var' tmp[467181] nil[44] call_tmp[744274])
    (467190 'init field' this[304124] c"_arrays" tmp[467181])
    (490982 'end of statement')
    unknown tmp[467198] "temp"
    (467200 'init var' tmp[467198] 0)
    (467202 '.=' this[304124] c"_arrayCapacity" tmp[467198])
    (490983 'end of statement')
    unknown tmp[467207] "temp"
    (467209 'init var' tmp[467207] 0)
    (467211 '.=' this[304124] c"_totalCapacity" tmp[467207])
    (490984 'end of statement')
    unknown tmp[467215] "temp"
    unknown call_tmp[744279] "expr temp" "maybe param" "maybe type" "temp"
    (744282 'move' call_tmp[744279](467228 '.v' this[304124] c"eltType"))
    unknown call_tmp[744284] "expr temp" "maybe param" "maybe type" "temp"
    (744287 'move' call_tmp[744284](467218 call _dummyFieldType call_tmp[744279]))
    (467220 'default init var' tmp[467215] call_tmp[744284])
    (467224 '.=' this[304124] c"_dummyFieldToForceBorrowChecking" tmp[467215])
    (490985 'end of statement')
    (298472 call(298468 call (partial) _firstTimeInitializeArrays _mt[243] this[304124]))
    (539137 return _void[55])
  }
  function list[304122](?).init[298486](arg _mt[304130]:_MT[238], ref arg this[304128]:list[304122](?), arg other[298483]:list[304122](?), param arg parSafe[298489] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744291] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744294 'move' call_tmp[744291](298494 'typeof' this[304128]))
    unknown call_tmp[744298] "expr temp" "maybe param" "maybe type" "temp"
    (744301 'move' call_tmp[744298](298495 call eltType _mt[243] call_tmp[744291]))
    unknown call_tmp[744303] "expr temp" "maybe param" "maybe type" "temp"
    (744306 'move' call_tmp[744303](298499 call isCopyableType call_tmp[744298]))
    unknown call_tmp[744308] "expr temp" "maybe param" "maybe type" "temp"
    (744311 'move' call_tmp[744308](298500 call ! call_tmp[744303]))
    unknown call_tmp[744313] "expr temp" "maybe param" "maybe type" "temp"
    (744316 'move' call_tmp[744313](298542 call _cond_test call_tmp[744308]))
    if call_tmp[744313]
    {
      unknown call_tmp[744318] "expr temp" "maybe param" "maybe type" "temp"
      (744321 'move' call_tmp[744318](298537 call + "Cannot copy list with element type that " "cannot be copied"))
      (298540 call compilerError call_tmp[744318])
    }
    unknown tmp[467241] "temp" "type variable"
    (467243 'move' tmp[467241](467237 'query' other[298483] 1))
    (467245 'init field' this[304128] c"eltType" tmp[467241])
    (490988 'end of statement')
    unknown tmp[467249] "param" "temp"
    (467251 'init var' tmp[467249] parSafe[298489])
    (467253 'init field' this[304128] c"parSafe" tmp[467249])
    (490989 'end of statement')
    unknown tmp[467258] "temp"
    (467260 'init var' tmp[467258] 0)
    (467262 '.=' this[304128] c"_size" tmp[467258])
    (490990 'end of statement')
    unknown tmp[467274] "temp"
    unknown tmp[580775] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580776] "maybe param" "temp"
    unknown call_tmp[744323] "expr temp" "maybe param" "maybe type" "temp"
    (744326 'move' call_tmp[744323](467282 '.v' this[304128] c"parSafe"))
    (580781 'move' tmp[580776](580779 call _cond_test call_tmp[744323]))
    if tmp[580776]
    {
      unknown tmp[580783] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580785 'move' tmp[580783](748161 'new' _LockWrapper[405255](?)))
      (580790 'move' tmp[580775](580787 '_paramFoldLogical' tmp[580776] tmp[580783]))
    }
    {
      (580795 'move' tmp[580775](580792 '_paramFoldLogical' tmp[580776] none[57]))
    }
    (467276 'init var' tmp[467274] tmp[580775])
    (467278 '.=' this[304128] c"_lock$" tmp[467274])
    (490991 'end of statement')
    unknown call_tmp[744328] "expr temp" "maybe param" "maybe type" "temp"
    (744331 'move' call_tmp[744328](467299 '.v' this[304128] c"eltType"))
    unknown call_tmp[744333] "expr temp" "maybe param" "maybe type" "temp"
    (744336 'move' call_tmp[744333](467291 call _ddata[11695](?) call_tmp[744328]))
    unknown call_tmp[744338] "maybe param" "maybe type" "temp"
    (744341 'move' call_tmp[744338](467289 call _ddata[11695](?) call_tmp[744333]))
    unknown tmp[467286] "temp"
    (467293 'init var' tmp[467286] nil[44] call_tmp[744338])
    (467295 'init field' this[304128] c"_arrays" tmp[467286])
    (490992 'end of statement')
    unknown tmp[467303] "temp"
    (467305 'init var' tmp[467303] 0)
    (467307 '.=' this[304128] c"_arrayCapacity" tmp[467303])
    (490993 'end of statement')
    unknown tmp[467312] "temp"
    (467314 'init var' tmp[467312] 0)
    (467316 '.=' this[304128] c"_totalCapacity" tmp[467312])
    (490994 'end of statement')
    unknown tmp[467320] "temp"
    unknown call_tmp[744343] "expr temp" "maybe param" "maybe type" "temp"
    (744346 'move' call_tmp[744343](467331 '.v' this[304128] c"eltType"))
    unknown call_tmp[744348] "expr temp" "maybe param" "maybe type" "temp"
    (744351 'move' call_tmp[744348](467323 call _dummyFieldType call_tmp[744343]))
    (467325 'default init var' tmp[467320] call_tmp[744348])
    (467327 '.=' this[304128] c"_dummyFieldToForceBorrowChecking" tmp[467320])
    (490995 'end of statement')
    (298574 call(405272 call (partial) _commonInitFromIterable _mt[243] this[304128]) other[298483])
    (539139 return _void[55])
  }
  function list[304122](?).init[298590](arg _mt[304134]:_MT[238], ref arg this[304132]:list[304122](?), arg other[298587]:_array[133600](?), param arg parSafe[298593] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744357] "expr temp" "maybe param" "maybe type" "temp"
    (744360 'move' call_tmp[744357](467336 call eltType _mt[243] other[298587]))
    (298599 call _checkType call_tmp[744357])
    (490997 'end of statement')
    unknown call_tmp[744364] "expr temp" "maybe param" "maybe type" "temp"
    (744367 'move' call_tmp[744364](467340 call eltType _mt[243] other[298587]))
    unknown call_tmp[744369] "expr temp" "maybe param" "maybe type" "temp"
    (744372 'move' call_tmp[744369](298605 call isCopyableType call_tmp[744364]))
    unknown call_tmp[744374] "expr temp" "maybe param" "maybe type" "temp"
    (744377 'move' call_tmp[744374](298606 call ! call_tmp[744369]))
    unknown call_tmp[744379] "expr temp" "maybe param" "maybe type" "temp"
    (744382 'move' call_tmp[744379](298648 call _cond_test call_tmp[744374]))
    if call_tmp[744379]
    {
      unknown call_tmp[744384] "expr temp" "maybe param" "maybe type" "temp"
      (744387 'move' call_tmp[744384](298643 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298646 call compilerError call_tmp[744384])
    }
    unknown tmp[467348] "temp" "type variable"
    (467350 'move' tmp[467348](467344 call eltType _mt[243] other[298587]))
    (467352 'init field' this[304132] c"eltType" tmp[467348])
    (490999 'end of statement')
    unknown tmp[467356] "param" "temp"
    (467358 'init var' tmp[467356] parSafe[298593])
    (467360 'init field' this[304132] c"parSafe" tmp[467356])
    (491000 'end of statement')
    unknown tmp[467365] "temp"
    (467367 'init var' tmp[467365] 0)
    (467369 '.=' this[304132] c"_size" tmp[467365])
    (491001 'end of statement')
    unknown tmp[467381] "temp"
    unknown tmp[580802] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580803] "maybe param" "temp"
    unknown call_tmp[744391] "expr temp" "maybe param" "maybe type" "temp"
    (744394 'move' call_tmp[744391](467389 '.v' this[304132] c"parSafe"))
    (580808 'move' tmp[580803](580806 call _cond_test call_tmp[744391]))
    if tmp[580803]
    {
      unknown tmp[580810] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580812 'move' tmp[580810](748162 'new' _LockWrapper[405255](?)))
      (580817 'move' tmp[580802](580814 '_paramFoldLogical' tmp[580803] tmp[580810]))
    }
    {
      (580822 'move' tmp[580802](580819 '_paramFoldLogical' tmp[580803] none[57]))
    }
    (467383 'init var' tmp[467381] tmp[580802])
    (467385 '.=' this[304132] c"_lock$" tmp[467381])
    (491002 'end of statement')
    unknown call_tmp[744396] "expr temp" "maybe param" "maybe type" "temp"
    (744399 'move' call_tmp[744396](467406 '.v' this[304132] c"eltType"))
    unknown call_tmp[744401] "expr temp" "maybe param" "maybe type" "temp"
    (744404 'move' call_tmp[744401](467398 call _ddata[11695](?) call_tmp[744396]))
    unknown call_tmp[744406] "maybe param" "maybe type" "temp"
    (744409 'move' call_tmp[744406](467396 call _ddata[11695](?) call_tmp[744401]))
    unknown tmp[467393] "temp"
    (467400 'init var' tmp[467393] nil[44] call_tmp[744406])
    (467402 'init field' this[304132] c"_arrays" tmp[467393])
    (491003 'end of statement')
    unknown tmp[467410] "temp"
    (467412 'init var' tmp[467410] 0)
    (467414 '.=' this[304132] c"_arrayCapacity" tmp[467410])
    (491004 'end of statement')
    unknown tmp[467419] "temp"
    (467421 'init var' tmp[467419] 0)
    (467423 '.=' this[304132] c"_totalCapacity" tmp[467419])
    (491005 'end of statement')
    unknown tmp[467427] "temp"
    unknown call_tmp[744411] "expr temp" "maybe param" "maybe type" "temp"
    (744414 'move' call_tmp[744411](467438 '.v' this[304132] c"eltType"))
    unknown call_tmp[744416] "expr temp" "maybe param" "maybe type" "temp"
    (744419 'move' call_tmp[744416](467430 call _dummyFieldType call_tmp[744411]))
    (467432 'default init var' tmp[467427] call_tmp[744416])
    (467434 '.=' this[304132] c"_dummyFieldToForceBorrowChecking" tmp[467427])
    (491006 'end of statement')
    (298679 call(405281 call (partial) _commonInitFromIterable _mt[243] this[304132]) other[298587])
    (539141 return _void[55])
  }
  function list[304122](?).init[298693](arg _mt[304138]:_MT[238], ref arg this[304136]:list[304122](?), arg other[298690]:range[64316](?), param arg parSafe[298696] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744423] "expr temp" "maybe param" "maybe type" "temp"
    (744426 'move' call_tmp[744423](467447 'query' other[298690] 1))
    (298702 call _checkType call_tmp[744423])
    (491008 'end of statement')
    unknown tmp[467454] "temp" "type variable"
    (467456 'move' tmp[467454](467450 'query' other[298690] 1))
    (467458 'init field' this[304136] c"eltType" tmp[467454])
    (491009 'end of statement')
    unknown tmp[467462] "param" "temp"
    (467464 'init var' tmp[467462] parSafe[298696])
    (467466 'init field' this[304136] c"parSafe" tmp[467462])
    (491010 'end of statement')
    unknown call_tmp[744428] "expr temp" "maybe param" "maybe type" "temp"
    (744431 'move' call_tmp[744428](298724 call isBoundedRange other[298690]))
    unknown call_tmp[744433] "expr temp" "maybe param" "maybe type" "temp"
    (744436 'move' call_tmp[744433](298725 call ! call_tmp[744428]))
    unknown call_tmp[744438] "expr temp" "maybe param" "maybe type" "temp"
    (744441 'move' call_tmp[744438](298797 call _cond_test call_tmp[744433]))
    if call_tmp[744438]
    {
      unknown call_tmp[744443] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744446 'move' call_tmp[744443](298728 'typeof' this[304136]))
      unknown call_tmp[744448] "maybe param" "maybe type" "temp"
      (744451 'move' call_tmp[744448](298730 call _cast string[26] call_tmp[744443]))
      unknown e[298732] "dead at end of block" "param"
      (549881 'init var' e[298732] call_tmp[744448])
      (298735 'end of statement')
      unknown call_tmp[744453] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744456 'move' call_tmp[744453](298738 'typeof' other[298690]))
      unknown call_tmp[744458] "maybe param" "maybe type" "temp"
      (744461 'move' call_tmp[744458](298740 call _cast string[26] call_tmp[744453]))
      unknown f[298742] "dead at end of block" "param"
      (549883 'init var' f[298742] call_tmp[744458])
      (298745 'end of statement')
      unknown call_tmp[744463] "expr temp" "maybe param" "maybe type" "temp"
      (744466 'move' call_tmp[744463](298764 call + "Cannot init " e[298732]))
      unknown call_tmp[744468] "expr temp" "maybe param" "maybe type" "temp"
      (744471 'move' call_tmp[744468](298783 call + call_tmp[744463] " from unbounded "))
      unknown call_tmp[744473] "maybe param" "maybe type" "temp"
      (744476 'move' call_tmp[744473](298786 call + call_tmp[744468] f[298742]))
      unknown msg[298788] "dead at end of block" "param"
      (549885 'init var' msg[298788] call_tmp[744473])
      (298791 'end of statement')
      (298795 call compilerError msg[298788])
    }
    unknown tmp[467471] "temp"
    (467473 'init var' tmp[467471] 0)
    (467475 '.=' this[304136] c"_size" tmp[467471])
    (491012 'end of statement')
    unknown tmp[467487] "temp"
    unknown tmp[580829] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580830] "maybe param" "temp"
    unknown call_tmp[744478] "expr temp" "maybe param" "maybe type" "temp"
    (744481 'move' call_tmp[744478](467495 '.v' this[304136] c"parSafe"))
    (580835 'move' tmp[580830](580833 call _cond_test call_tmp[744478]))
    if tmp[580830]
    {
      unknown tmp[580837] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580839 'move' tmp[580837](748163 'new' _LockWrapper[405255](?)))
      (580844 'move' tmp[580829](580841 '_paramFoldLogical' tmp[580830] tmp[580837]))
    }
    {
      (580849 'move' tmp[580829](580846 '_paramFoldLogical' tmp[580830] none[57]))
    }
    (467489 'init var' tmp[467487] tmp[580829])
    (467491 '.=' this[304136] c"_lock$" tmp[467487])
    (491013 'end of statement')
    unknown call_tmp[744483] "expr temp" "maybe param" "maybe type" "temp"
    (744486 'move' call_tmp[744483](467512 '.v' this[304136] c"eltType"))
    unknown call_tmp[744488] "expr temp" "maybe param" "maybe type" "temp"
    (744491 'move' call_tmp[744488](467504 call _ddata[11695](?) call_tmp[744483]))
    unknown call_tmp[744493] "maybe param" "maybe type" "temp"
    (744496 'move' call_tmp[744493](467502 call _ddata[11695](?) call_tmp[744488]))
    unknown tmp[467499] "temp"
    (467506 'init var' tmp[467499] nil[44] call_tmp[744493])
    (467508 'init field' this[304136] c"_arrays" tmp[467499])
    (491014 'end of statement')
    unknown tmp[467516] "temp"
    (467518 'init var' tmp[467516] 0)
    (467520 '.=' this[304136] c"_arrayCapacity" tmp[467516])
    (491015 'end of statement')
    unknown tmp[467525] "temp"
    (467527 'init var' tmp[467525] 0)
    (467529 '.=' this[304136] c"_totalCapacity" tmp[467525])
    (491016 'end of statement')
    unknown tmp[467533] "temp"
    unknown call_tmp[744498] "expr temp" "maybe param" "maybe type" "temp"
    (744501 'move' call_tmp[744498](467544 '.v' this[304136] c"eltType"))
    unknown call_tmp[744503] "expr temp" "maybe param" "maybe type" "temp"
    (744506 'move' call_tmp[744503](467536 call _dummyFieldType call_tmp[744498]))
    (467538 'default init var' tmp[467533] call_tmp[744503])
    (467540 '.=' this[304136] c"_dummyFieldToForceBorrowChecking" tmp[467533])
    (491017 'end of statement')
    (298811 call(405296 call (partial) _commonInitFromIterable _mt[243] this[304136]) other[298690])
    (539143 return _void[55])
  }
  function list[304122](?).init=[298830](arg _mt[304142]:_MT[238], ref arg this[304140]:list[304122](?), arg other[298827]:list[304122](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744510] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744513 'move' call_tmp[744510](298834 'typeof' this[304140]))
    unknown call_tmp[744517] "expr temp" "maybe param" "maybe type" "temp"
    (744520 'move' call_tmp[744517](298835 call eltType _mt[243] call_tmp[744510]))
    unknown call_tmp[744522] "expr temp" "maybe param" "maybe type" "temp"
    (744525 'move' call_tmp[744522](298839 call isCopyableType call_tmp[744517]))
    unknown call_tmp[744527] "expr temp" "maybe param" "maybe type" "temp"
    (744530 'move' call_tmp[744527](298840 call ! call_tmp[744522]))
    unknown call_tmp[744532] "expr temp" "maybe param" "maybe type" "temp"
    (744535 'move' call_tmp[744532](298850 call _cond_test call_tmp[744527]))
    if call_tmp[744532]
    {
      unknown call_tmp[744537] "expr temp" "maybe param" "maybe type" "temp"
      (744540 'move' call_tmp[744537](298845 call + "Cannot copy list with element type that " "cannot be copied"))
      (298848 call compilerError call_tmp[744537])
    }
    unknown tmp[467568] "temp" "type variable"
    unknown call_tmp[744542] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744545 'move' call_tmp[744542](298861 'typeof' this[304140]))
    (467570 'move' tmp[467568](298862 call eltType _mt[243] call_tmp[744542]))
    (467572 'init field' this[304140] c"eltType" tmp[467568])
    (491020 'end of statement')
    unknown call_tmp[744549] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744552 'move' call_tmp[744549](298873 'typeof' this[304140]))
    unknown call_tmp[744556] "maybe param" "maybe type" "temp"
    (744559 'move' call_tmp[744556](298874 call parSafe _mt[243] call_tmp[744549]))
    unknown tmp[467576] "param" "temp"
    (467578 'init var' tmp[467576] call_tmp[744556])
    (467580 'init field' this[304140] c"parSafe" tmp[467576])
    (491021 'end of statement')
    unknown tmp[467585] "temp"
    (467587 'init var' tmp[467585] 0)
    (467589 '.=' this[304140] c"_size" tmp[467585])
    (491022 'end of statement')
    unknown tmp[467601] "temp"
    unknown tmp[580856] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580857] "maybe param" "temp"
    unknown call_tmp[744561] "expr temp" "maybe param" "maybe type" "temp"
    (744564 'move' call_tmp[744561](467609 '.v' this[304140] c"parSafe"))
    (580862 'move' tmp[580857](580860 call _cond_test call_tmp[744561]))
    if tmp[580857]
    {
      unknown tmp[580864] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580866 'move' tmp[580864](748164 'new' _LockWrapper[405255](?)))
      (580871 'move' tmp[580856](580868 '_paramFoldLogical' tmp[580857] tmp[580864]))
    }
    {
      (580876 'move' tmp[580856](580873 '_paramFoldLogical' tmp[580857] none[57]))
    }
    (467603 'init var' tmp[467601] tmp[580856])
    (467605 '.=' this[304140] c"_lock$" tmp[467601])
    (491023 'end of statement')
    unknown call_tmp[744566] "expr temp" "maybe param" "maybe type" "temp"
    (744569 'move' call_tmp[744566](467626 '.v' this[304140] c"eltType"))
    unknown call_tmp[744571] "expr temp" "maybe param" "maybe type" "temp"
    (744574 'move' call_tmp[744571](467618 call _ddata[11695](?) call_tmp[744566]))
    unknown call_tmp[744576] "maybe param" "maybe type" "temp"
    (744579 'move' call_tmp[744576](467616 call _ddata[11695](?) call_tmp[744571]))
    unknown tmp[467613] "temp"
    (467620 'init var' tmp[467613] nil[44] call_tmp[744576])
    (467622 'init field' this[304140] c"_arrays" tmp[467613])
    (491024 'end of statement')
    unknown tmp[467630] "temp"
    (467632 'init var' tmp[467630] 0)
    (467634 '.=' this[304140] c"_arrayCapacity" tmp[467630])
    (491025 'end of statement')
    unknown tmp[467639] "temp"
    (467641 'init var' tmp[467639] 0)
    (467643 '.=' this[304140] c"_totalCapacity" tmp[467639])
    (491026 'end of statement')
    unknown tmp[467647] "temp"
    unknown call_tmp[744581] "expr temp" "maybe param" "maybe type" "temp"
    (744584 'move' call_tmp[744581](467658 '.v' this[304140] c"eltType"))
    unknown call_tmp[744586] "expr temp" "maybe param" "maybe type" "temp"
    (744589 'move' call_tmp[744586](467650 call _dummyFieldType call_tmp[744581]))
    (467652 'default init var' tmp[467647] call_tmp[744586])
    (467654 '.=' this[304140] c"_dummyFieldToForceBorrowChecking" tmp[467647])
    (491027 'end of statement')
    (298890 call(405306 call (partial) _commonInitFromIterable _mt[243] this[304140]) other[298827])
    (539145 return _void[55])
  }
  where {
    unknown call_tmp[744593] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744596 'move' call_tmp[744593](467555 'typeof' this[304140]))
    unknown call_tmp[744600] "expr temp" "maybe param" "maybe type" "temp"
    (744603 'move' call_tmp[744600](467554 call eltType _mt[243] call_tmp[744593]))
    unknown call_tmp[744605] "expr temp" "maybe param" "maybe type" "temp"
    (744608 'move' call_tmp[744605](467550 'query' other[298827] 1))
    unknown call_tmp[744610] "expr temp" "maybe param" "maybe type" "temp"
    (744613 'move' call_tmp[744610](467558 call == call_tmp[744600] call_tmp[744605]))
    (467562 call & 1 call_tmp[744610])
  }
  function list[304122](?).init=[298909](arg _mt[304146]:_MT[238], ref arg this[304144]:list[304122](?), arg other[298906]:_array[133600](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744615] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744618 'move' call_tmp[744615](298913 'typeof' this[304144]))
    unknown call_tmp[744622] "expr temp" "maybe param" "maybe type" "temp"
    (744625 'move' call_tmp[744622](298914 call eltType _mt[243] call_tmp[744615]))
    unknown call_tmp[744627] "expr temp" "maybe param" "maybe type" "temp"
    (744630 'move' call_tmp[744627](298918 call isCopyableType call_tmp[744622]))
    unknown call_tmp[744632] "expr temp" "maybe param" "maybe type" "temp"
    (744635 'move' call_tmp[744632](298919 call ! call_tmp[744627]))
    unknown call_tmp[744637] "expr temp" "maybe param" "maybe type" "temp"
    (744640 'move' call_tmp[744637](298961 call _cond_test call_tmp[744632]))
    if call_tmp[744637]
    {
      unknown call_tmp[744642] "expr temp" "maybe param" "maybe type" "temp"
      (744645 'move' call_tmp[744642](298956 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (298959 call compilerError call_tmp[744642])
    }
    unknown tmp[467673] "temp" "type variable"
    unknown call_tmp[744647] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744650 'move' call_tmp[744647](298972 'typeof' this[304144]))
    (467675 'move' tmp[467673](298973 call eltType _mt[243] call_tmp[744647]))
    (467677 'init field' this[304144] c"eltType" tmp[467673])
    (491030 'end of statement')
    unknown call_tmp[744654] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744657 'move' call_tmp[744654](298984 'typeof' this[304144]))
    unknown call_tmp[744661] "maybe param" "maybe type" "temp"
    (744664 'move' call_tmp[744661](298985 call parSafe _mt[243] call_tmp[744654]))
    unknown tmp[467681] "param" "temp"
    (467683 'init var' tmp[467681] call_tmp[744661])
    (467685 'init field' this[304144] c"parSafe" tmp[467681])
    (491031 'end of statement')
    unknown tmp[467690] "temp"
    (467692 'init var' tmp[467690] 0)
    (467694 '.=' this[304144] c"_size" tmp[467690])
    (491032 'end of statement')
    unknown tmp[467706] "temp"
    unknown tmp[580883] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580884] "maybe param" "temp"
    unknown call_tmp[744666] "expr temp" "maybe param" "maybe type" "temp"
    (744669 'move' call_tmp[744666](467714 '.v' this[304144] c"parSafe"))
    (580889 'move' tmp[580884](580887 call _cond_test call_tmp[744666]))
    if tmp[580884]
    {
      unknown tmp[580891] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580893 'move' tmp[580891](748165 'new' _LockWrapper[405255](?)))
      (580898 'move' tmp[580883](580895 '_paramFoldLogical' tmp[580884] tmp[580891]))
    }
    {
      (580903 'move' tmp[580883](580900 '_paramFoldLogical' tmp[580884] none[57]))
    }
    (467708 'init var' tmp[467706] tmp[580883])
    (467710 '.=' this[304144] c"_lock$" tmp[467706])
    (491033 'end of statement')
    unknown call_tmp[744671] "expr temp" "maybe param" "maybe type" "temp"
    (744674 'move' call_tmp[744671](467731 '.v' this[304144] c"eltType"))
    unknown call_tmp[744676] "expr temp" "maybe param" "maybe type" "temp"
    (744679 'move' call_tmp[744676](467723 call _ddata[11695](?) call_tmp[744671]))
    unknown call_tmp[744681] "maybe param" "maybe type" "temp"
    (744684 'move' call_tmp[744681](467721 call _ddata[11695](?) call_tmp[744676]))
    unknown tmp[467718] "temp"
    (467725 'init var' tmp[467718] nil[44] call_tmp[744681])
    (467727 'init field' this[304144] c"_arrays" tmp[467718])
    (491034 'end of statement')
    unknown tmp[467735] "temp"
    (467737 'init var' tmp[467735] 0)
    (467739 '.=' this[304144] c"_arrayCapacity" tmp[467735])
    (491035 'end of statement')
    unknown tmp[467744] "temp"
    (467746 'init var' tmp[467744] 0)
    (467748 '.=' this[304144] c"_totalCapacity" tmp[467744])
    (491036 'end of statement')
    unknown tmp[467752] "temp"
    unknown call_tmp[744686] "expr temp" "maybe param" "maybe type" "temp"
    (744689 'move' call_tmp[744686](467763 '.v' this[304144] c"eltType"))
    unknown call_tmp[744691] "expr temp" "maybe param" "maybe type" "temp"
    (744694 'move' call_tmp[744691](467755 call _dummyFieldType call_tmp[744686]))
    (467757 'default init var' tmp[467752] call_tmp[744691])
    (467759 '.=' this[304144] c"_dummyFieldToForceBorrowChecking" tmp[467752])
    (491037 'end of statement')
    (299001 call(405315 call (partial) _commonInitFromIterable _mt[243] this[304144]) other[298906])
    (539147 return _void[55])
  }
  where {
    unknown call_tmp[744698] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744701 'move' call_tmp[744698](298900 'typeof' this[304144]))
    unknown call_tmp[744705] "expr temp" "maybe param" "maybe type" "temp"
    (744708 'move' call_tmp[744705](298901 call eltType _mt[243] call_tmp[744698]))
    unknown call_tmp[744712] "expr temp" "maybe param" "maybe type" "temp"
    (744715 'move' call_tmp[744712](467667 call eltType _mt[243] other[298906]))
    unknown call_tmp[744717] "expr temp" "maybe param" "maybe type" "temp"
    (744720 'move' call_tmp[744717](467671 call == call_tmp[744705] call_tmp[744712]))
    (467665 call & 1 call_tmp[744717])
  }
  function list[304122](?).init=[299022](arg _mt[304150]:_MT[238], ref arg this[304148]:list[304122](?), arg other[299019]:range[64316](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467790] "temp" "type variable"
    unknown call_tmp[744722] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744725 'move' call_tmp[744722](299029 'typeof' this[304148]))
    (467792 'move' tmp[467790](299030 call eltType _mt[243] call_tmp[744722]))
    (467794 'init field' this[304148] c"eltType" tmp[467790])
    (491039 'end of statement')
    unknown call_tmp[744729] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744732 'move' call_tmp[744729](299042 'typeof' this[304148]))
    unknown call_tmp[744736] "maybe param" "maybe type" "temp"
    (744739 'move' call_tmp[744736](299043 call parSafe _mt[243] call_tmp[744729]))
    unknown tmp[467798] "param" "temp"
    (467800 'init var' tmp[467798] call_tmp[744736])
    (467802 'init field' this[304148] c"parSafe" tmp[467798])
    (491040 'end of statement')
    unknown call_tmp[744741] "expr temp" "maybe param" "maybe type" "temp"
    (744744 'move' call_tmp[744741](299052 call isBoundedRange other[299019]))
    unknown call_tmp[744746] "expr temp" "maybe param" "maybe type" "temp"
    (744749 'move' call_tmp[744746](299053 call ! call_tmp[744741]))
    unknown call_tmp[744751] "expr temp" "maybe param" "maybe type" "temp"
    (744754 'move' call_tmp[744751](299093 call _cond_test call_tmp[744746]))
    if call_tmp[744751]
    {
      unknown call_tmp[744756] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744759 'move' call_tmp[744756](299056 'typeof' this[304148]))
      unknown call_tmp[744761] "maybe param" "maybe type" "temp"
      (744764 'move' call_tmp[744761](299058 call _cast string[26] call_tmp[744756]))
      unknown e[299060] "dead at end of block" "param"
      (549887 'init var' e[299060] call_tmp[744761])
      (299063 'end of statement')
      unknown call_tmp[744766] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744769 'move' call_tmp[744766](299066 'typeof' other[299019]))
      unknown call_tmp[744771] "maybe param" "maybe type" "temp"
      (744774 'move' call_tmp[744771](299068 call _cast string[26] call_tmp[744766]))
      unknown f[299070] "dead at end of block" "param"
      (549889 'init var' f[299070] call_tmp[744771])
      (299073 'end of statement')
      unknown call_tmp[744776] "expr temp" "maybe param" "maybe type" "temp"
      (744779 'move' call_tmp[744776](299076 call + "Cannot init " e[299060]))
      unknown call_tmp[744781] "expr temp" "maybe param" "maybe type" "temp"
      (744784 'move' call_tmp[744781](299079 call + call_tmp[744776] " from unbounded "))
      unknown call_tmp[744786] "maybe param" "maybe type" "temp"
      (744789 'move' call_tmp[744786](299082 call + call_tmp[744781] f[299070]))
      unknown msg[299084] "dead at end of block" "param"
      (549891 'init var' msg[299084] call_tmp[744786])
      (299087 'end of statement')
      (299091 call compilerError msg[299084])
    }
    unknown tmp[467807] "temp"
    (467809 'init var' tmp[467807] 0)
    (467811 '.=' this[304148] c"_size" tmp[467807])
    (491042 'end of statement')
    unknown tmp[467823] "temp"
    unknown tmp[580910] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580911] "maybe param" "temp"
    unknown call_tmp[744791] "expr temp" "maybe param" "maybe type" "temp"
    (744794 'move' call_tmp[744791](467831 '.v' this[304148] c"parSafe"))
    (580916 'move' tmp[580911](580914 call _cond_test call_tmp[744791]))
    if tmp[580911]
    {
      unknown tmp[580918] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580920 'move' tmp[580918](748166 'new' _LockWrapper[405255](?)))
      (580925 'move' tmp[580910](580922 '_paramFoldLogical' tmp[580911] tmp[580918]))
    }
    {
      (580930 'move' tmp[580910](580927 '_paramFoldLogical' tmp[580911] none[57]))
    }
    (467825 'init var' tmp[467823] tmp[580910])
    (467827 '.=' this[304148] c"_lock$" tmp[467823])
    (491043 'end of statement')
    unknown call_tmp[744796] "expr temp" "maybe param" "maybe type" "temp"
    (744799 'move' call_tmp[744796](467848 '.v' this[304148] c"eltType"))
    unknown call_tmp[744801] "expr temp" "maybe param" "maybe type" "temp"
    (744804 'move' call_tmp[744801](467840 call _ddata[11695](?) call_tmp[744796]))
    unknown call_tmp[744806] "maybe param" "maybe type" "temp"
    (744809 'move' call_tmp[744806](467838 call _ddata[11695](?) call_tmp[744801]))
    unknown tmp[467835] "temp"
    (467842 'init var' tmp[467835] nil[44] call_tmp[744806])
    (467844 'init field' this[304148] c"_arrays" tmp[467835])
    (491044 'end of statement')
    unknown tmp[467852] "temp"
    (467854 'init var' tmp[467852] 0)
    (467856 '.=' this[304148] c"_arrayCapacity" tmp[467852])
    (491045 'end of statement')
    unknown tmp[467861] "temp"
    (467863 'init var' tmp[467861] 0)
    (467865 '.=' this[304148] c"_totalCapacity" tmp[467861])
    (491046 'end of statement')
    unknown tmp[467869] "temp"
    unknown call_tmp[744811] "expr temp" "maybe param" "maybe type" "temp"
    (744814 'move' call_tmp[744811](467880 '.v' this[304148] c"eltType"))
    unknown call_tmp[744816] "expr temp" "maybe param" "maybe type" "temp"
    (744819 'move' call_tmp[744816](467872 call _dummyFieldType call_tmp[744811]))
    (467874 'default init var' tmp[467869] call_tmp[744816])
    (467876 '.=' this[304148] c"_dummyFieldToForceBorrowChecking" tmp[467869])
    (491047 'end of statement')
    (299107 call(405330 call (partial) _commonInitFromIterable _mt[243] this[304148]) other[299019])
    (539149 return _void[55])
  }
  where {
    unknown call_tmp[744823] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744826 'move' call_tmp[744823](467774 'typeof' this[304148]))
    unknown call_tmp[744830] "expr temp" "maybe param" "maybe type" "temp"
    (744833 'move' call_tmp[744830](467773 call eltType _mt[243] call_tmp[744823]))
    unknown call_tmp[744835] "expr temp" "maybe param" "maybe type" "temp"
    (744838 'move' call_tmp[744835](467769 'query' other[299019] 1))
    unknown call_tmp[744840] "expr temp" "maybe param" "maybe type" "temp"
    (744843 'move' call_tmp[744840](467777 call == call_tmp[744830] call_tmp[744835]))
    (467781 call & 1 call_tmp[744840])
  }
  function list[304122](?)._commonInitFromIterable[299115](arg _mt[304154]:_MT[238], arg this[304152]:list[304122](?), arg iterable[299113]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299128 call(299124 call (partial) _firstTimeInitializeArrays _mt[243] this[304152]))
    (491049 'end of statement')
    {
      unknown _indexOfInterest[299138] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299139] "expr temp" "temp"
      (299148 'move' _iterator[299139](299146 call _getIterator iterable[299113]))
      Defer
      {
        {
          (299164 call _freeIterator _iterator[299139])
        }
      }
      { scopeless type
        (299153 'move' _indexOfInterest[299138](299150 call iteratorIndex _iterator[299139]))
      }
      ForLoop[299140]
      {
        unknown x[299157] "index var" "insert auto destroy"
        (491051 'end of statement')
        (299159 'move' x[299157] _indexOfInterest[299138])
        (491052 'end of statement' x[299157])
        (299136 call(405338 call (partial) append _mt[243] this[304152]) x[299157])
        (491054 'end of statement' x[299157])
        label _continueLabel[299143]
        _indexOfInterest[299138]
        _iterator[299139]
      }
      label _breakLabel[299144]
    }
    (539151 return _void[55])
  }
  {
    (299121 call <(299118 'lifetime_of' this[304152])(299120 'lifetime_of' iterable[299113]))
  }
  function list[304122](?)._firstTimeInitializeArrays[299176](arg _mt[304158]:_MT[238], arg this[304156]:list[304122](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744851] "expr temp" "maybe param" "maybe type" "temp"
    (744854 'move' call_tmp[744851](405346 call _arrays _mt[243] this[304156]))
    unknown call_tmp[744856] "expr temp" "maybe param" "maybe type" "temp"
    (744859 'move' call_tmp[744856](299181 call == call_tmp[744851] nil[44]))
    (299184 call _sanity call_tmp[744856])
    (491056 'end of statement')
    unknown call_tmp[744863] "expr temp" "maybe param" "maybe type" "temp"
    (744866 'move' call_tmp[744863](405353 call _totalCapacity _mt[243] this[304156]))
    unknown call_tmp[744868] "expr temp" "maybe param" "maybe type" "temp"
    (744871 'move' call_tmp[744868](299190 call == call_tmp[744863] 0))
    (299193 call _sanity call_tmp[744868])
    (491057 'end of statement')
    unknown call_tmp[744875] "expr temp" "maybe param" "maybe type" "temp"
    (744878 'move' call_tmp[744875](405360 call _size _mt[243] this[304156]))
    unknown call_tmp[744880] "expr temp" "maybe param" "maybe type" "temp"
    (744883 'move' call_tmp[744880](299198 call == call_tmp[744875] 0))
    (299201 call _sanity call_tmp[744880])
    (491058 'end of statement')
    unknown call_tmp[744887] "expr temp" "maybe param" "maybe type" "temp"
    (744890 'move' call_tmp[744887](405365 call _arrays _mt[243] this[304156]))
    unknown call_tmp[744894] "expr temp" "maybe param" "maybe type" "temp"
    (744897 'move' call_tmp[744894](299207 call(405371 call (partial) _makeBlockArray _mt[243] this[304156]) _initialArrayCapacity[298162]))
    (299208 call = call_tmp[744887] call_tmp[744894])
    (491059 'end of statement')
    unknown call_tmp[744901] "expr temp" "maybe param" "maybe type" "temp"
    (744904 'move' call_tmp[744901](405379 call _arrayCapacity _mt[243] this[304156]))
    (299213 call = call_tmp[744901] _initialArrayCapacity[298162])
    (491060 'end of statement')
    unknown call_tmp[744908] "expr temp" "maybe param" "maybe type" "temp"
    (744911 'move' call_tmp[744908](299219 call(405385 call (partial) _arrays _mt[243] this[304156]) 0))
    unknown call_tmp[744915] "expr temp" "maybe param" "maybe type" "temp"
    (744918 'move' call_tmp[744915](299223 call(405391 call (partial) _makeArray _mt[243] this[304156]) _initialCapacity[298157]))
    (299224 call = call_tmp[744908] call_tmp[744915])
    (491061 'end of statement')
    unknown call_tmp[744922] "expr temp" "maybe param" "maybe type" "temp"
    (744925 'move' call_tmp[744922](405397 call _totalCapacity _mt[243] this[304156]))
    (299229 call = call_tmp[744922] _initialCapacity[298157])
    (539153 return _void[55])
  }
  function list[304122](?).deinit[299236](arg _mt[304162]:_MT[238], arg this[304160]:list[304122](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299240 call(405404 call (partial) _fireAllDestructors _mt[243] this[304160]))
    (491063 'end of statement')
    (299245 call(405410 call (partial) _freeAllArrays _mt[243] this[304160]))
    (491064 'end of statement')
    unknown call_tmp[744933] "expr temp" "maybe param" "maybe type" "temp"
    (744936 'move' call_tmp[744933](405415 call _totalCapacity _mt[243] this[304160]))
    unknown call_tmp[744938] "expr temp" "maybe param" "maybe type" "temp"
    (744941 'move' call_tmp[744938](299250 call == call_tmp[744933] 0))
    (299253 call _sanity call_tmp[744938])
    (491065 'end of statement')
    unknown call_tmp[744945] "expr temp" "maybe param" "maybe type" "temp"
    (744948 'move' call_tmp[744945](405420 call _size _mt[243] this[304160]))
    unknown call_tmp[744950] "expr temp" "maybe param" "maybe type" "temp"
    (744953 'move' call_tmp[744950](299258 call == call_tmp[744945] 0))
    (299261 call _sanity call_tmp[744950])
    (491066 'end of statement')
    unknown call_tmp[744957] "expr temp" "maybe param" "maybe type" "temp"
    (744960 'move' call_tmp[744957](405425 call _arrays _mt[243] this[304160]))
    unknown call_tmp[744962] "expr temp" "maybe param" "maybe type" "temp"
    (744965 'move' call_tmp[744962](299266 call == call_tmp[744957] nil[44]))
    (299269 call _sanity call_tmp[744962])
    (539155 return _void[55])
  }
  function list[304122](?)._destroy[299279](arg _mt[304166]:_MT[238], arg this[304164]:list[304122](?), ref arg item[299276] :
  (405430 call eltType _mt[243] this[304164])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299284 call chpl__autoDestroy item[299276])
    (539157 return _void[55])
  }
  function list[304122](?)._move[299296](arg _mt[304170]:_MT[238], arg this[304168]:list[304122](?), ref arg src[299293]:_any[178](?), ref arg dst[299299] :
  (467883 'typeof' src[299293])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299312 '=' dst[299299] src[299293])
    (539159 return _void[55])
  }
  {
    (299306 call ==(299303 'lifetime_of' src[299293])(299305 'lifetime_of' dst[299299]))
  }
  function list[304122](?)._getArrayCapacity[299324](arg _mt[304174]:_MT[238], arg this[304172]:list[304122](?), arg array[299321]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539163] "RVV" "temp"
    unknown call_tmp[744969] "expr temp" "maybe param" "maybe type" "temp"
    (744972 'move' call_tmp[744969](299331 call log2 _initialCapacity[298157]))
    unknown call_tmp[744974] "maybe param" "maybe type" "temp"
    (744977 'move' call_tmp[744974](299332 call + array[299321] call_tmp[744969]))
    const exp[299334] "dead at end of block" "const" "insert auto destroy"
    (549893 'init var' exp[299334] call_tmp[744974])
    (299337 'end of statement')
    unknown call_tmp[744979] "maybe param" "maybe type" "temp"
    (744982 'move' call_tmp[744979](299341 call ** 2 exp[299334]))
    const result[299343] "dead at end of block" "const" "insert auto destroy"
    (549895 'init var' result[299343] call_tmp[744979])
    (299346 'end of statement' exp[299334])
    (539169 'move' ret[539163](539168 'coerce' result[299343] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539161] _end__getArrayCapacity[539161]
    (491071 'end of statement' result[299343])
    label _end__getArrayCapacity[539161]
    (539165 return ret[539163])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?)._getArrayIdx[299359](arg _mt[304178]:_MT[238], arg this[304176]:list[304122](?), arg zpos[299356]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539175] "RVV" "temp"
    unknown call_tmp[744984] "maybe param" "maybe type" "temp"
    (744987 'move' call_tmp[744984](299364 call + zpos[299356] _initialCapacity[298157]))
    const adj[299366] "dead at end of block" "const" "insert auto destroy"
    (549897 'init var' adj[299366] call_tmp[744984])
    (299369 'end of statement')
    unknown call_tmp[744989] "expr temp" "maybe param" "maybe type" "temp"
    (744992 'move' call_tmp[744989](299374 call log2 adj[299366]))
    unknown call_tmp[744994] "expr temp" "maybe param" "maybe type" "temp"
    (744997 'move' call_tmp[744994](299378 call log2 _initialCapacity[298157]))
    unknown call_tmp[744999] "maybe param" "maybe type" "temp"
    (745002 'move' call_tmp[744999](299379 call - call_tmp[744989] call_tmp[744994]))
    const result[299381] "dead at end of block" "const" "insert auto destroy"
    (549899 'init var' result[299381] call_tmp[744999])
    (299384 'end of statement' adj[299366])
    (539181 'move' ret[539175](539180 'coerce' result[299381] int(64)[13]))
    gotoReturn _end__getArrayIdx[539173] _end__getArrayIdx[539173]
    (491074 'end of statement' result[299381])
    label _end__getArrayIdx[539173]
    (539177 return ret[539175])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?)._getLastArrayIdx[299393](arg _mt[304182]:_MT[238], arg this[304180]:list[304122](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539187] "RVV" "temp"
    unknown call_tmp[745008] "expr temp" "maybe param" "maybe type" "temp"
    (745011 'move' call_tmp[745008](405456 call _size _mt[243] this[304180]))
    unknown call_tmp[745013] "expr temp" "maybe param" "maybe type" "temp"
    (745016 'move' call_tmp[745013](299399 call - call_tmp[745008] 1))
    unknown call_tmp[745018] "maybe param" "maybe type" "temp"
    (745021 'move' call_tmp[745018](299402 call(405451 call (partial) _getArrayIdx _mt[243] this[304180]) call_tmp[745013]))
    const result[299403] "dead at end of block" "const" "insert auto destroy"
    (549901 'init var' result[299403] call_tmp[745018])
    (299406 'end of statement')
    unknown call_tmp[745023] "expr temp" "maybe param" "maybe type" "temp"
    (745026 'move' call_tmp[745023](299411 call >= result[299403] 0))
    (299414 call _sanity call_tmp[745023])
    (491076 'end of statement' result[299403])
    (539193 'move' ret[539187](539192 'coerce' result[299403] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539185] _end__getLastArrayIdx[539185]
    (491078 'end of statement' result[299403])
    label _end__getLastArrayIdx[539185]
    (539189 return ret[539187])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?)._getItemIdx[299428](arg _mt[304186]:_MT[238], arg this[304184]:list[304122](?), arg zpos[299425]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539199] "RVV" "temp"
    unknown call_tmp[745028] "maybe param" "maybe type" "temp"
    (745031 'move' call_tmp[745028](299433 call + zpos[299425] _initialCapacity[298157]))
    const adj[299435] "dead at end of block" "const" "insert auto destroy"
    (549903 'init var' adj[299435] call_tmp[745028])
    (299438 'end of statement')
    unknown call_tmp[745033] "expr temp" "maybe param" "maybe type" "temp"
    (745036 'move' call_tmp[745033](299445 call log2 adj[299435]))
    unknown call_tmp[745038] "expr temp" "maybe param" "maybe type" "temp"
    (745041 'move' call_tmp[745038](299446 call << 1 call_tmp[745033]))
    unknown call_tmp[745043] "maybe param" "maybe type" "temp"
    (745046 'move' call_tmp[745043](299448 call ^ adj[299435] call_tmp[745038]))
    const result[299450] "dead at end of block" "const" "insert auto destroy"
    (549905 'init var' result[299450] call_tmp[745043])
    (299453 'end of statement' adj[299435] adj[299435])
    (539205 'move' ret[539199](539204 'coerce' result[299450] int(64)[13]))
    gotoReturn _end__getItemIdx[539197] _end__getItemIdx[539197]
    (491082 'end of statement' result[299450])
    label _end__getItemIdx[539197]
    (539201 return ret[539199])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?)._getRef[299466](arg _mt[304190]:_MT[238], const  ref arg this[304188]:list[304122](?), arg idx[299463]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539211] "RVV" "temp"
    unknown tmp[434875] "maybe param" "temp"
    (434886 'move' tmp[434875](299471 call >= idx[299463] 0))
    unknown call_tmp[745048] "expr temp" "maybe param" "maybe type" "temp"
    (745051 'move' call_tmp[745048](434888 call _cond_invalid tmp[434875]))
    if call_tmp[745048]
    {
      (434891 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580937] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580938] "maybe param" "temp"
    unknown call_tmp[745053] "expr temp" "maybe param" "maybe type" "temp"
    (745056 'move' call_tmp[745053](434876 call isTrue tmp[434875]))
    (580943 'move' tmp[580938](580941 call _cond_test call_tmp[745053]))
    if tmp[580938]
    {
      unknown tmp[580945] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745060] "expr temp" "maybe param" "maybe type" "temp"
      (745063 'move' call_tmp[745060](405470 call _totalCapacity _mt[243] this[304188]))
      unknown call_tmp[745065] "expr temp" "maybe param" "maybe type" "temp"
      (745068 'move' call_tmp[745065](299475 call < idx[299463] call_tmp[745060]))
      (580947 'move' tmp[580945](434879 call isTrue call_tmp[745065]))
      (580952 'move' tmp[580937](580949 '_paramFoldLogical' tmp[580938] tmp[580945]))
    }
    {
      (580957 'move' tmp[580937](580954 '_paramFoldLogical' tmp[580938] 0))
    }
    (299480 call _sanity tmp[580937])
    (491085 'end of statement')
    unknown call_tmp[745072] "maybe param" "maybe type" "temp"
    (745075 'move' call_tmp[745072](299486 call(405474 call (partial) _getArrayIdx _mt[243] this[304188]) idx[299463]))
    const arrayIdx[299487] "dead at end of block" "const" "insert auto destroy"
    (549907 'init var' arrayIdx[299487] call_tmp[745072])
    (299490 'end of statement')
    unknown call_tmp[745079] "maybe param" "maybe type" "temp"
    (745082 'move' call_tmp[745079](299494 call(405481 call (partial) _getItemIdx _mt[243] this[304188]) idx[299463]))
    const itemIdx[299495] "dead at end of block" "const" "insert auto destroy"
    (549909 'init var' itemIdx[299495] call_tmp[745079])
    (299498 'end of statement')
    unknown call_tmp[745086] "maybe param" "maybe type" "temp"
    (745089 'move' call_tmp[745086](299502 call(405487 call (partial) _arrays _mt[243] this[304188]) arrayIdx[299487]))
    const array[299503] "dead at end of block" "const" "insert auto destroy"
    (549911 'init var' array[299503] call_tmp[745086])
    (299506 'end of statement')
    unknown call_tmp[745091] "expr temp" "maybe param" "maybe type" "temp"
    (745094 'move' call_tmp[745091](299510 call != array[299503] nil[44]))
    (299513 call _sanity call_tmp[745091])
    (491087 'end of statement' array[299503])
    unknown result[299519] "dead at end of block" "ref var"
    unknown call_tmp[745096] "expr temp" "maybe param" "maybe type" "temp"
    (745099 'move' call_tmp[745096](299518 call array[299503] itemIdx[299495]))
    (549914 'move' result[299519](549913 'addr of' call_tmp[745096]))
    (299522 'end of statement' arrayIdx[299487] array[299503] itemIdx[299495])
    (539216 'move' ret[539211](539215 'addr of' result[299519]))
    gotoReturn _end__getRef[539209] _end__getRef[539209]
    (491091 'end of statement' result[299519])
    label _end__getRef[539209]
    (539213 return ret[539211])
  }
  function list[304122](?)._enter[299530](arg _mt[304194]:_MT[238], arg this[304192]:list[304122](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745103] "expr temp" "maybe param" "maybe type" "temp"
    (745106 'move' call_tmp[745103](405497 call parSafe _mt[243] this[304192]))
    unknown call_tmp[745108] "expr temp" "maybe param" "maybe type" "temp"
    (745111 'move' call_tmp[745108](299540 call _cond_test call_tmp[745103]))
    if call_tmp[745108]
    {
      unknown call_tmp[745115] "expr temp" "maybe param" "maybe type" "temp"
      (745118 'move' call_tmp[745115](364992 call _lock$ _mt[243] this[304192]))
      (299538 call(299534 call (partial) lock _mt[243] call_tmp[745115]))
    }
    (539220 return _void[55])
  }
  function list[304122](?)._leave[299550](arg _mt[304198]:_MT[238], arg this[304196]:list[304122](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745124] "expr temp" "maybe param" "maybe type" "temp"
    (745127 'move' call_tmp[745124](405502 call parSafe _mt[243] this[304196]))
    unknown call_tmp[745129] "expr temp" "maybe param" "maybe type" "temp"
    (745132 'move' call_tmp[745129](299560 call _cond_test call_tmp[745124]))
    if call_tmp[745129]
    {
      unknown call_tmp[745136] "expr temp" "maybe param" "maybe type" "temp"
      (745139 'move' call_tmp[745136](364997 call _lock$ _mt[243] this[304196]))
      (299558 call(299554 call (partial) unlock _mt[243] call_tmp[745136]))
    }
    (539222 return _void[55])
  }
  function list[304122](?)._withinBounds[299574](arg _mt[304202]:_MT[238], const arg this[304200]:list[304122](?), arg idx[299571]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539226] "RVV" "temp"
    unknown tmp[434896] "maybe param" "temp"
    (434907 'move' tmp[434896](299579 call >= idx[299571] 0))
    unknown call_tmp[745143] "expr temp" "maybe param" "maybe type" "temp"
    (745146 'move' call_tmp[745143](434909 call _cond_invalid tmp[434896]))
    if call_tmp[745143]
    {
      (434912 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580964] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580965] "maybe param" "temp"
    unknown call_tmp[745148] "expr temp" "maybe param" "maybe type" "temp"
    (745151 'move' call_tmp[745148](434897 call isTrue tmp[434896]))
    (580970 'move' tmp[580965](580968 call _cond_test call_tmp[745148]))
    if tmp[580965]
    {
      unknown tmp[580972] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745155] "expr temp" "maybe param" "maybe type" "temp"
      (745158 'move' call_tmp[745155](405509 call _size _mt[243] this[304200]))
      unknown call_tmp[745160] "expr temp" "maybe param" "maybe type" "temp"
      (745163 'move' call_tmp[745160](299583 call < idx[299571] call_tmp[745155]))
      (580974 'move' tmp[580972](434900 call isTrue call_tmp[745160]))
      (580979 'move' tmp[580964](580976 '_paramFoldLogical' tmp[580965] tmp[580972]))
    }
    {
      (580984 'move' tmp[580964](580981 '_paramFoldLogical' tmp[580965] 0))
    }
    (539232 'move' ret[539226](539231 'coerce' tmp[580964] bool[10]))
    (539228 return ret[539226])
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?)._boundsCheckLeaveOnThrow[299599](arg _mt[304206]:_MT[238], const arg this[304204]:list[304122](?), arg i[299596]:int(64)[13], arg umsg[299619]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745167] "expr temp" "maybe param" "maybe type" "temp"
    (745170 'move' call_tmp[745167](299626 call(405515 call (partial) _withinBounds _mt[243] this[304204]) i[299596]))
    unknown call_tmp[745172] "expr temp" "maybe param" "maybe type" "temp"
    (745175 'move' call_tmp[745172](299627 call ! call_tmp[745167]))
    unknown call_tmp[745177] "expr temp" "maybe param" "maybe type" "temp"
    (745180 'move' call_tmp[745177](299694 call _cond_test call_tmp[745172]))
    if call_tmp[745177]
    {
      (299631 call(405522 call (partial) _leave _mt[243] this[304204]))
      (491097 'end of statement')
      const msg[299681] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[580991] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580992] "maybe param" "temp"
      unknown call_tmp[745184] "expr temp" "maybe param" "maybe type" "temp"
      (745187 'move' call_tmp[745184](299652 call != umsg[299619] ""))
      (580997 'move' tmp[580992](580995 call _cond_test call_tmp[745184]))
      if tmp[580992]
      {
        (581002 'move' tmp[580991](580999 '_paramFoldLogical' tmp[580992] umsg[299619]))
      }
      {
        unknown tmp[581004] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745189] "expr temp" "maybe param" "maybe type" "temp"
        (745192 'move' call_tmp[745189](299674 call _cast string[26] i[299596]))
        (581006 'move' tmp[581004](299676 call + "Index out of bounds: " call_tmp[745189]))
        (581011 'move' tmp[580991](581008 '_paramFoldLogical' tmp[580992] tmp[581004]))
      }
      (549916 'init var' msg[299681] tmp[580991])
      (299684 'end of statement')
      unknown call_tmp[745194] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745197 'move' call_tmp[745194](748167 'new' IllegalArgumentError[388835](?) msg[299681](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745199] "expr temp" "maybe param" "maybe type" "temp"
      (745202 'move' call_tmp[745199](468225 call chpl_fix_thrown_error call_tmp[745194]))
      (299692 'throw' call_tmp[745199])
      (491098 'end of statement' msg[299681])
    }
    (539234 return _void[55])
  }
  function list[304122](?)._makeBlockArray[299707](arg _mt[304210]:_MT[238], arg this[304208]:list[304122](?), arg size[299704]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539238] "RVV" "temp"
    unknown call_tmp[745206] "expr temp" "maybe param" "maybe type" "temp"
    (745209 'move' call_tmp[745206](405533 call eltType _mt[243] this[304208]))
    unknown call_tmp[745211] "expr temp" "maybe param" "maybe type" "temp"
    (745214 'move' call_tmp[745211](299713 call _ddata[11695](?) call_tmp[745206]))
    unknown call_tmp[745216] "expr temp" "maybe param" "maybe type" "temp"
    (745219 'move' call_tmp[745216](299716 call _ddata_allocate call_tmp[745211] size[299704]))
    (539243 'move' ret[539238](539242 'deref' call_tmp[745216]))
    (539240 return ret[539238])
  }
  function list[304122](?)._freeBlockArray[299734](arg _mt[304214]:_MT[238], arg this[304212]:list[304122](?), arg data[299731] :
  unknown call_tmp[745223] "expr temp" "maybe param" "maybe type" "temp", arg size[299737]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299744 call _ddata_free data[299731] size[299737])
    (539245 return _void[55])
  }
  function list[304122](?)._makeArray[299755](arg _mt[304218]:_MT[238], arg this[304216]:list[304122](?), arg size[299752]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539249] "RVV" "temp"
    unknown call_tmp[745235] "expr temp" "maybe param" "maybe type" "temp"
    (745238 'move' call_tmp[745235](405548 call eltType _mt[243] this[304216]))
    unknown call_tmp[745240] "expr temp" "maybe param" "maybe type" "temp"
    (745243 'move' call_tmp[745240](299763 call _ddata_allocate call_tmp[745235] size[299752](initElts = 0)))
    (539254 'move' ret[539249](539253 'deref' call_tmp[745240]))
    (539251 return ret[539249])
  }
  function list[304122](?)._freeArray[299778](arg _mt[304222]:_MT[238], arg this[304220]:list[304122](?), arg data[299775] :
  unknown call_tmp[745247] "expr temp" "maybe param" "maybe type" "temp", arg size[299781]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299788 call _ddata_free data[299775] size[299781])
    (539256 return _void[55])
  }
  function list[304122](?)._maybeAcquireMem[299799](arg _mt[304226]:_MT[238], arg this[304224]:list[304122](?), arg amount[299796]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745254] "expr temp" "maybe param" "maybe type" "temp"
    (745257 'move' call_tmp[745254](405562 call _totalCapacity _mt[243] this[304224]))
    unknown call_tmp[745261] "expr temp" "maybe param" "maybe type" "temp"
    (745264 'move' call_tmp[745261](405567 call _size _mt[243] this[304224]))
    unknown call_tmp[745266] "maybe param" "maybe type" "temp"
    (745269 'move' call_tmp[745266](299803 call - call_tmp[745254] call_tmp[745261]))
    const remaining[299805] "dead at end of block" "const" "insert auto destroy"
    (549918 'init var' remaining[299805] call_tmp[745266])
    (299808 'end of statement')
    unknown call_tmp[745271] "expr temp" "maybe param" "maybe type" "temp"
    (745274 'move' call_tmp[745271](299813 call >= remaining[299805] 0))
    (299816 call _sanity call_tmp[745271])
    (491104 'end of statement' remaining[299805])
    unknown call_tmp[745276] "expr temp" "maybe param" "maybe type" "temp"
    (745279 'move' call_tmp[745276](299820 call >= remaining[299805] amount[299796]))
    unknown call_tmp[745281] "expr temp" "maybe param" "maybe type" "temp"
    (745284 'move' call_tmp[745281](299824 call _cond_test call_tmp[745276]))
    if call_tmp[745281]
    {
      gotoReturn _end__maybeAcquireMem[539258] _end__maybeAcquireMem[539258]
    }
    unknown lastArrayIdx[299840] "dead at end of block" "insert auto destroy"
    unknown tmp[581018] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581019] "maybe param" "temp"
    unknown call_tmp[745288] "expr temp" "maybe param" "maybe type" "temp"
    (745291 'move' call_tmp[745288](405575 call _size _mt[243] this[304224]))
    unknown call_tmp[745293] "expr temp" "maybe param" "maybe type" "temp"
    (745296 'move' call_tmp[745293](299831 call == call_tmp[745288] 0))
    (581024 'move' tmp[581019](581022 call _cond_test call_tmp[745293]))
    if tmp[581019]
    {
      (581029 'move' tmp[581018](581026 '_paramFoldLogical' tmp[581019] 0))
    }
    {
      unknown tmp[581031] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (581033 'move' tmp[581031](299836 call(405581 call (partial) _getLastArrayIdx _mt[243] this[304224])))
      (581038 'move' tmp[581018](581035 '_paramFoldLogical' tmp[581019] tmp[581031]))
    }
    (549920 'init var' lastArrayIdx[299840] tmp[581018])
    (299843 'end of statement')
    unknown call_tmp[745300] "maybe param" "maybe type" "temp"
    (745303 'move' call_tmp[745300](299846 call - amount[299796] remaining[299805]))
    unknown req[299848] "dead at end of block" "insert auto destroy"
    (549922 'init var' req[299848] call_tmp[745300])
    (299851 'end of statement' remaining[299805])
    {
      unknown tmp[300051] "temp"
      unknown call_tmp[745305] "expr temp" "maybe param" "maybe type" "temp"
      (745308 'move' call_tmp[745305](300072 call > req[299848] 0))
      (300075 'move' tmp[300051](300070 call _cond_test call_tmp[745305]))
      WhileDo[300056]
      {
        {
          unknown call_tmp[745312] "expr temp" "maybe param" "maybe type" "temp"
          (745315 'move' call_tmp[745312](405589 call _arrayCapacity _mt[243] this[304224]))
          unknown call_tmp[745317] "expr temp" "maybe param" "maybe type" "temp"
          (745320 'move' call_tmp[745317](299859 call - call_tmp[745312] 1))
          unknown call_tmp[745322] "expr temp" "maybe param" "maybe type" "temp"
          (745325 'move' call_tmp[745322](299861 call >= lastArrayIdx[299840] call_tmp[745317]))
          unknown call_tmp[745327] "expr temp" "maybe param" "maybe type" "temp"
          (745330 'move' call_tmp[745327](299961 call _cond_test call_tmp[745322]))
          if call_tmp[745327]
          {
            {
              const tmp[299953] "const" "temp"
              unknown call_tmp[745332] "expr temp" "maybe param" "maybe type" "temp"
              (745335 'move' call_tmp[745332](299950 '_wide_get_locale' this[304224]))
              (299954 'move' tmp[299953](299951 'deref' call_tmp[745332]))
              {
                unknown call_tmp[745341] "expr temp" "maybe param" "maybe type" "temp"
                (745344 'move' call_tmp[745341](405599 call _arrayCapacity _mt[243] this[304224]))
                unknown call_tmp[745346] "expr temp" "maybe param" "maybe type" "temp"
                (745349 'move' call_tmp[745346](299867 call * call_tmp[745341] 2))
                unknown call_tmp[745351] "maybe param" "maybe type" "temp"
                (745354 'move' call_tmp[745351](299870 call(405594 call (partial) _makeBlockArray _mt[243] this[304224]) call_tmp[745346]))
                unknown _narrays[299871] "dead at end of block" "insert auto destroy"
                (549924 'init var' _narrays[299871] call_tmp[745351])
                (299874 'end of statement')
                {
                  unknown _indexOfInterest[299894] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[299895] "expr temp" "temp"
                  unknown call_tmp[745358] "expr temp" "maybe param" "maybe type" "temp"
                  (745361 'move' call_tmp[745358](405612 call _arrayCapacity _mt[243] this[304224]))
                  unknown call_tmp[745363] "expr temp" "maybe param" "maybe type" "temp"
                  (745366 'move' call_tmp[745363](299911 call chpl_direct_counted_range_iter 0 call_tmp[745358]))
                  (299904 'move' _iterator[299895](299902 call _getIterator call_tmp[745363]))
                  Defer
                  {
                    {
                      (299927 call _freeIterator _iterator[299895])
                    }
                  }
                  { scopeless type
                    (299916 'move' _indexOfInterest[299894](299913 call iteratorIndex _iterator[299895]))
                  }
                  ForLoop[299896]
                  {
                    unknown i[299920] "index var" "insert auto destroy"
                    (491109 'end of statement')
                    (299922 'move' i[299920] _indexOfInterest[299894])
                    (491110 'end of statement' i[299920])
                    unknown call_tmp[745368] "expr temp" "maybe param" "maybe type" "temp"
                    (745371 'move' call_tmp[745368](299886 call _narrays[299871] i[299920]))
                    unknown call_tmp[745375] "expr temp" "maybe param" "maybe type" "temp"
                    (745378 'move' call_tmp[745375](299890 call(405606 call (partial) _arrays _mt[243] this[304224]) i[299920]))
                    (299891 call = call_tmp[745368] call_tmp[745375])
                    (491112 'end of statement' _narrays[299871] i[299920] i[299920])
                    label _continueLabel[299899]
                    _indexOfInterest[299894]
                    _iterator[299895]
                  }
                  label _breakLabel[299900]
                }
                unknown call_tmp[745384] "expr temp" "maybe param" "maybe type" "temp"
                (745387 'move' call_tmp[745384](405623 call _arrays _mt[243] this[304224]))
                unknown call_tmp[745391] "expr temp" "maybe param" "maybe type" "temp"
                (745394 'move' call_tmp[745391](405628 call _arrayCapacity _mt[243] this[304224]))
                (299938 call(405618 call (partial) _freeBlockArray _mt[243] this[304224]) call_tmp[745384] call_tmp[745391])
                (491116 'end of statement')
                unknown call_tmp[745398] "expr temp" "maybe param" "maybe type" "temp"
                (745401 'move' call_tmp[745398](405633 call _arrays _mt[243] this[304224]))
                (299942 call = call_tmp[745398] _narrays[299871])
                (491117 'end of statement' _narrays[299871])
                unknown call_tmp[745405] "expr temp" "maybe param" "maybe type" "temp"
                (745408 'move' call_tmp[745405](405639 call _arrayCapacity _mt[243] this[304224]))
                (299947 call *= call_tmp[745405] 2)
              }
              (299957 'elided on block' 0 tmp[299953])
            }
          }
          {
            const tmp[300043] "const" "temp"
            unknown call_tmp[745410] "expr temp" "maybe param" "maybe type" "temp"
            (745413 'move' call_tmp[745410](300040 '_wide_get_locale' this[304224]))
            (300044 'move' tmp[300043](300041 'deref' call_tmp[745410]))
            {
              unknown call_tmp[745417] "maybe param" "maybe type" "temp"
              (745420 'move' call_tmp[745417](299971 call(405645 call (partial) _arrays _mt[243] this[304224]) lastArrayIdx[299840]))
              const oldLast[299972] "dead at end of block" "const" "insert auto destroy"
              (549926 'init var' oldLast[299972] call_tmp[745417])
              (299975 'end of statement')
              unknown call_tmp[745424] "maybe param" "maybe type" "temp"
              (745427 'move' call_tmp[745424](299980 call(405652 call (partial) _getArrayCapacity _mt[243] this[304224]) lastArrayIdx[299840]))
              const oldLastCapacity[299981] "dead at end of block" "const" "insert auto destroy"
              (549928 'init var' oldLastCapacity[299981] call_tmp[745424])
              (299984 'end of statement')
              (299987 call += lastArrayIdx[299840] 1)
              (491122 'end of statement' lastArrayIdx[299840])
              unknown newLast[299994] "dead at end of block" "ref var"
              unknown call_tmp[745431] "expr temp" "maybe param" "maybe type" "temp"
              (745434 'move' call_tmp[745431](299993 call(405659 call (partial) _arrays _mt[243] this[304224]) lastArrayIdx[299840]))
              (549931 'move' newLast[299994](549930 'addr of' call_tmp[745431]))
              (299997 'end of statement')
              unknown call_tmp[745436] "maybe param" "maybe type" "temp"
              (745439 'move' call_tmp[745436](300000 call * oldLastCapacity[299981] 2))
              const newLastCapacity[300002] "dead at end of block" "const" "insert auto destroy"
              (549933 'init var' newLastCapacity[300002] call_tmp[745436])
              (300005 'end of statement' lastArrayIdx[299840] lastArrayIdx[299840] lastArrayIdx[299840] oldLastCapacity[299981])
              unknown call_tmp[745441] "expr temp" "maybe param" "maybe type" "temp"
              (745444 'move' call_tmp[745441](300009 call != oldLast[299972] nil[44]))
              (300012 call _sanity call_tmp[745441])
              (491126 'end of statement' oldLast[299972])
              unknown call_tmp[745446] "expr temp" "maybe param" "maybe type" "temp"
              (745449 'move' call_tmp[745446](300017 call == newLast[299994] nil[44]))
              (300020 call _sanity call_tmp[745446])
              (491128 'end of statement' newLast[299994])
              unknown call_tmp[745453] "expr temp" "maybe param" "maybe type" "temp"
              (745456 'move' call_tmp[745453](300026 call(405668 call (partial) _makeArray _mt[243] this[304224]) newLastCapacity[300002]))
              (300027 call = newLast[299994] call_tmp[745453])
              (491130 'end of statement' newLast[299994] newLastCapacity[300002])
              unknown call_tmp[745460] "expr temp" "maybe param" "maybe type" "temp"
              (745463 'move' call_tmp[745460](405674 call _totalCapacity _mt[243] this[304224]))
              (300032 call += call_tmp[745460] newLastCapacity[300002])
              (491133 'end of statement' newLastCapacity[300002])
              (300037 call -= req[299848] newLastCapacity[300002])
              (491135 'end of statement' req[299848] newLastCapacity[300002])
            }
            (300047 'elided on block' 0 tmp[300043])
          }
        }
        label _continueLabel[300054]
        unknown call_tmp[745465] "expr temp" "maybe param" "maybe type" "temp"
        (745468 'move' call_tmp[745465](300062 call > req[299848] 0))
        (300065 'move' tmp[300051](300060 call _cond_test call_tmp[745465]))
        tmp[300051]
      }
      label _breakLabel[300055]
    }
    label _end__maybeAcquireMem[539258]
    (539260 return _void[55])
  }
  function list[304122](?)._maybeReleaseMem[300088](arg _mt[304230]:_MT[238], arg this[304228]:list[304122](?), arg amount[300085]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745472] "expr temp" "maybe param" "maybe type" "temp"
    (745475 'move' call_tmp[745472](405684 call _totalCapacity _mt[243] this[304228]))
    unknown call_tmp[745477] "expr temp" "maybe param" "maybe type" "temp"
    (745480 'move' call_tmp[745477](300092 call <= call_tmp[745472] _initialCapacity[298157]))
    unknown call_tmp[745482] "expr temp" "maybe param" "maybe type" "temp"
    (745485 'move' call_tmp[745482](300096 call _cond_test call_tmp[745477]))
    if call_tmp[745482]
    {
      gotoReturn _end__maybeReleaseMem[539264] _end__maybeReleaseMem[539264]
    }
    unknown call_tmp[745489] "maybe param" "maybe type" "temp"
    (745492 'move' call_tmp[745489](300104 call(405689 call (partial) _getLastArrayIdx _mt[243] this[304228])))
    const lastArrayIdx[300105] "dead at end of block" "const" "insert auto destroy"
    (549935 'init var' lastArrayIdx[300105] call_tmp[745489])
    (300108 'end of statement')
    unknown call_tmp[745494] "expr temp" "maybe param" "maybe type" "temp"
    (745497 'move' call_tmp[745494](300112 call != lastArrayIdx[300105] 0))
    (300115 call _sanity call_tmp[745494])
    (491140 'end of statement' lastArrayIdx[300105])
    unknown call_tmp[745501] "maybe param" "maybe type" "temp"
    (745504 'move' call_tmp[745501](300120 call(405694 call (partial) _getArrayCapacity _mt[243] this[304228]) lastArrayIdx[300105]))
    const lastArrayCapacity[300121] "dead at end of block" "const" "insert auto destroy"
    (549937 'init var' lastArrayCapacity[300121] call_tmp[745501])
    (300124 'end of statement')
    unknown call_tmp[745508] "expr temp" "maybe param" "maybe type" "temp"
    (745511 'move' call_tmp[745508](405700 call _totalCapacity _mt[243] this[304228]))
    unknown call_tmp[745513] "maybe param" "maybe type" "temp"
    (745516 'move' call_tmp[745513](300127 call - call_tmp[745508] lastArrayCapacity[300121]))
    const threshold[300129] "dead at end of block" "const" "insert auto destroy"
    (549939 'init var' threshold[300129] call_tmp[745513])
    (300132 'end of statement')
    unknown call_tmp[745520] "expr temp" "maybe param" "maybe type" "temp"
    (745523 'move' call_tmp[745520](405706 call _size _mt[243] this[304228]))
    unknown call_tmp[745525] "maybe param" "maybe type" "temp"
    (745528 'move' call_tmp[745525](300135 call - call_tmp[745520] amount[300085]))
    const nsize[300137] "dead at end of block" "const" "insert auto destroy"
    (549941 'init var' nsize[300137] call_tmp[745525])
    (300140 'end of statement')
    unknown call_tmp[745530] "expr temp" "maybe param" "maybe type" "temp"
    (745533 'move' call_tmp[745530](300143 call > nsize[300137] threshold[300129]))
    unknown call_tmp[745535] "expr temp" "maybe param" "maybe type" "temp"
    (745538 'move' call_tmp[745535](300147 call _cond_test call_tmp[745530]))
    if call_tmp[745535]
    {
      gotoReturn _end__maybeReleaseMem[539264] _end__maybeReleaseMem[539264]
    }
    unknown array[300156] "dead at end of block" "ref var"
    unknown call_tmp[745542] "expr temp" "maybe param" "maybe type" "temp"
    (745545 'move' call_tmp[745542](300155 call(405714 call (partial) _arrays _mt[243] this[304228]) lastArrayIdx[300105]))
    (549944 'move' array[300156](549943 'addr of' call_tmp[745542]))
    (300159 'end of statement' lastArrayIdx[300105] lastArrayCapacity[300121] lastArrayIdx[300105])
    unknown call_tmp[745547] "expr temp" "maybe param" "maybe type" "temp"
    (745550 'move' call_tmp[745547](300163 call != array[300156] nil[44]))
    (300166 call _sanity call_tmp[745547])
    (491146 'end of statement' array[300156])
    (300172 call(405722 call (partial) _freeArray _mt[243] this[304228]) array[300156] lastArrayCapacity[300121])
    (491148 'end of statement' array[300156] lastArrayCapacity[300121])
    unknown call_tmp[745556] "expr temp" "maybe param" "maybe type" "temp"
    (745559 'move' call_tmp[745556](405729 call _totalCapacity _mt[243] this[304228]))
    (300176 call -= call_tmp[745556] lastArrayCapacity[300121])
    (491151 'end of statement' lastArrayCapacity[300121])
    (300181 call = array[300156] nil[44])
    (491153 'end of statement' array[300156])
    label _end__maybeReleaseMem[539264]
    (539266 return _void[55])
  }
  function list[304122](?)._expand[300192](arg _mt[304234]:_MT[238], ref arg this[304232]:list[304122](?), arg idx[300189]:int(64)[13], arg shift[300196]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745563] "expr temp" "maybe param" "maybe type" "temp"
    (745566 'move' call_tmp[745563](300204 call(405735 call (partial) _withinBounds _mt[243] this[304232]) idx[300189]))
    (300206 call _sanity call_tmp[745563])
    (491155 'end of statement')
    unknown call_tmp[745568] "expr temp" "maybe param" "maybe type" "temp"
    (745571 'move' call_tmp[745568](300211 call <= shift[300196] 0))
    unknown call_tmp[745573] "expr temp" "maybe param" "maybe type" "temp"
    (745576 'move' call_tmp[745573](300215 call _cond_test call_tmp[745568]))
    if call_tmp[745573]
    {
      gotoReturn _end__expand[539272] _end__expand[539272]
    }
    {
      const tmp[300319] "const" "temp"
      unknown call_tmp[745578] "expr temp" "maybe param" "maybe type" "temp"
      (745581 'move' call_tmp[745578](300316 '_wide_get_locale' this[304232]))
      (300320 'move' tmp[300319](300317 'deref' call_tmp[745578]))
      {
        (300224 call(405744 call (partial) _maybeAcquireMem _mt[243] this[304232]) shift[300196])
        (491157 'end of statement')
        {
          unknown _indexOfInterest[300266] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300267] "expr temp" "temp"
          unknown call_tmp[745587] "expr temp" "maybe param" "maybe type" "temp"
          (745590 'move' call_tmp[745587](405772 call _size _mt[243] this[304232]))
          unknown call_tmp[745592] "expr temp" "maybe param" "maybe type" "temp"
          (745595 'move' call_tmp[745592](300290 call - call_tmp[745587] 1))
          unknown call_tmp[745597] "expr temp" "maybe param" "maybe type" "temp"
          (745600 'move' call_tmp[745597](300286 call - 1))
          unknown call_tmp[745602] "expr temp" "maybe param" "maybe type" "temp"
          (745605 'move' call_tmp[745602](300293 call chpl_direct_range_iter idx[300189] call_tmp[745592] call_tmp[745597]))
          (300276 'move' _iterator[300267](300274 call _getIterator call_tmp[745602]))
          Defer
          {
            {
              (300309 call _freeIterator _iterator[300267])
            }
          }
          { scopeless type
            (300298 'move' _indexOfInterest[300266](300295 call iteratorIndex _iterator[300267]))
          }
          ForLoop[300268]
          {
            unknown i[300302] "index var" "insert auto destroy"
            (491159 'end of statement')
            (300304 'move' i[300302] _indexOfInterest[300266])
            (491160 'end of statement' i[300302])
            {
              unknown src[300244] "dead at end of block" "ref var"
              unknown call_tmp[745609] "expr temp" "maybe param" "maybe type" "temp"
              (745612 'move' call_tmp[745609](300243 call(405751 call (partial) _getRef _mt[243] this[304232]) i[300302]))
              (549947 'move' src[300244](549946 'addr of' call_tmp[745609]))
              (300247 'end of statement')
              unknown dst[300256] "dead at end of block" "ref var"
              unknown call_tmp[745616] "expr temp" "maybe param" "maybe type" "temp"
              (745619 'move' call_tmp[745616](300252 call + i[300302] shift[300196]))
              unknown call_tmp[745621] "expr temp" "maybe param" "maybe type" "temp"
              (745624 'move' call_tmp[745621](300255 call(405756 call (partial) _getRef _mt[243] this[304232]) call_tmp[745616]))
              (549950 'move' dst[300256](549949 'addr of' call_tmp[745621]))
              (300259 'end of statement' i[300302] i[300302])
              (300264 call(405764 call (partial) _move _mt[243] this[304232]) src[300244] dst[300256])
              (491164 'end of statement' src[300244] dst[300256])
            }
            label _continueLabel[300271]
            _indexOfInterest[300266]
            _iterator[300267]
          }
          label _breakLabel[300272]
        }
      }
      (300323 'elided on block' 0 tmp[300319])
    }
    label _end__expand[539272]
    (539274 return _void[55])
  }
  function list[304122](?)._collapse[300337](arg _mt[304238]:_MT[238], ref arg this[304236]:list[304122](?), arg idx[300334]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745630] "expr temp" "maybe param" "maybe type" "temp"
    (745633 'move' call_tmp[745630](300343 call(405776 call (partial) _withinBounds _mt[243] this[304236]) idx[300334]))
    (300345 call _sanity call_tmp[745630])
    (491168 'end of statement')
    unknown call_tmp[745637] "expr temp" "maybe param" "maybe type" "temp"
    (745640 'move' call_tmp[745637](405783 call _size _mt[243] this[304236]))
    unknown call_tmp[745642] "expr temp" "maybe param" "maybe type" "temp"
    (745645 'move' call_tmp[745642](300351 call - call_tmp[745637] 1))
    unknown call_tmp[745647] "expr temp" "maybe param" "maybe type" "temp"
    (745650 'move' call_tmp[745647](300353 call == idx[300334] call_tmp[745642]))
    unknown call_tmp[745652] "expr temp" "maybe param" "maybe type" "temp"
    (745655 'move' call_tmp[745652](300375 call _cond_test call_tmp[745647]))
    if call_tmp[745652]
    {
      {
        const tmp[300364] "const" "temp"
        unknown call_tmp[745657] "expr temp" "maybe param" "maybe type" "temp"
        (745660 'move' call_tmp[745657](300361 '_wide_get_locale' this[304236]))
        (300365 'move' tmp[300364](300362 'deref' call_tmp[745657]))
        (300359 call(405790 call (partial) _maybeReleaseMem _mt[243] this[304236]) 1)
        (300368 'elided on block' 0 tmp[300364])
      }
      gotoReturn _end__collapse[539278] _end__collapse[539278]
    }
    {
      const tmp[300464] "const" "temp"
      unknown call_tmp[745664] "expr temp" "maybe param" "maybe type" "temp"
      (745667 'move' call_tmp[745664](300461 '_wide_get_locale' this[304236]))
      (300465 'move' tmp[300464](300462 'deref' call_tmp[745664]))
      {
        {
          unknown _indexOfInterest[300414] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300415] "expr temp" "temp"
          unknown call_tmp[745671] "expr temp" "maybe param" "maybe type" "temp"
          (745674 'move' call_tmp[745671](405813 call _size _mt[243] this[304236]))
          unknown call_tmp[745676] "expr temp" "maybe param" "maybe type" "temp"
          (745679 'move' call_tmp[745676](300429 call - call_tmp[745671] 2))
          unknown call_tmp[745681] "expr temp" "maybe param" "maybe type" "temp"
          (745684 'move' call_tmp[745681](300432 call chpl_direct_range_iter idx[300334] call_tmp[745676] 1))
          (300424 'move' _iterator[300415](300422 call _getIterator call_tmp[745681]))
          Defer
          {
            {
              (300448 call _freeIterator _iterator[300415])
            }
          }
          { scopeless type
            (300437 'move' _indexOfInterest[300414](300434 call iteratorIndex _iterator[300415]))
          }
          ForLoop[300416]
          {
            unknown i[300441] "index var" "insert auto destroy"
            (491172 'end of statement')
            (300443 'move' i[300441] _indexOfInterest[300414])
            (491173 'end of statement' i[300441])
            {
              unknown src[300395] "dead at end of block" "ref var"
              unknown call_tmp[745688] "expr temp" "maybe param" "maybe type" "temp"
              (745691 'move' call_tmp[745688](300391 call + i[300441] 1))
              unknown call_tmp[745693] "expr temp" "maybe param" "maybe type" "temp"
              (745696 'move' call_tmp[745693](300394 call(405795 call (partial) _getRef _mt[243] this[304236]) call_tmp[745688]))
              (549953 'move' src[300395](549952 'addr of' call_tmp[745693]))
              (300398 'end of statement')
              unknown dst[300404] "dead at end of block" "ref var"
              unknown call_tmp[745700] "expr temp" "maybe param" "maybe type" "temp"
              (745703 'move' call_tmp[745700](300403 call(405800 call (partial) _getRef _mt[243] this[304236]) i[300441]))
              (549956 'move' dst[300404](549955 'addr of' call_tmp[745700]))
              (300407 'end of statement' i[300441] i[300441])
              (300412 call(405805 call (partial) _move _mt[243] this[304236]) src[300395] dst[300404])
              (491177 'end of statement' src[300395] dst[300404])
            }
            label _continueLabel[300419]
            _indexOfInterest[300414]
            _iterator[300415]
          }
          label _breakLabel[300420]
        }
        (300459 call(405817 call (partial) _maybeReleaseMem _mt[243] this[304236]) 1)
      }
      (300468 'elided on block' 0 tmp[300464])
    }
    label _end__collapse[539278]
    (539280 return _void[55])
  }
  function list[304122](?)._appendByRef[300482](arg _mt[304242]:_MT[238], ref arg this[304240]:list[304122](?), ref arg x[300479] :
  (405822 call eltType _mt[243] this[304240])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300487 call(405826 call (partial) _maybeAcquireMem _mt[243] this[304240]) 1)
    (491182 'end of statement')
    unknown src[300491] "dead at end of block" "ref var"
    (549959 'move' src[300491](549958 'addr of' x[300479]))
    (300494 'end of statement')
    unknown dst[300499] "dead at end of block" "ref var"
    unknown call_tmp[745717] "expr temp" "maybe param" "maybe type" "temp"
    (745720 'move' call_tmp[745717](405836 call _size _mt[243] this[304240]))
    unknown call_tmp[745722] "expr temp" "maybe param" "maybe type" "temp"
    (745725 'move' call_tmp[745722](300498 call(405831 call (partial) _getRef _mt[243] this[304240]) call_tmp[745717]))
    (549962 'move' dst[300499](549961 'addr of' call_tmp[745722]))
    (300502 'end of statement')
    (300507 call(405840 call (partial) _move _mt[243] this[304240]) src[300491] dst[300499])
    (491183 'end of statement' src[300491] dst[300499])
    unknown call_tmp[745731] "expr temp" "maybe param" "maybe type" "temp"
    (745734 'move' call_tmp[745731](405847 call _size _mt[243] this[304240]))
    (300511 call += call_tmp[745731] 1)
    (539284 return _void[55])
  }
  function list[304122](?).append[300525](arg _mt[304246]:_MT[238], ref arg this[304244]:list[304122](?), in arg x[300522] :
  (300519 call eltType _mt[243] this[304244])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300535 call(405855 call (partial) _enter _mt[243] this[304244]))
    (491187 'end of statement')
    (300541 call(405861 call (partial) _appendByRef _mt[243] this[304244]) x[300522])
    (491188 'end of statement')
    (300545 call(405866 call (partial) _leave _mt[243] this[304244]))
    (539286 return _void[55])
  }
  {
    (300531 call <(300528 'lifetime_of' this[304244])(300530 'lifetime_of' x[300522]))
  }
  function list[304122](?).contains[300556](arg _mt[304250]:_MT[238], const arg this[304248]:list[304122](?), arg x[300553] :
  (405871 call eltType _mt[243] this[304248])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539290] "RVV" "temp"
    unknown result[300560] "dead at end of block" "insert auto destroy"
    (549964 'init var' result[300560] 0)
    (300563 'end of statement')
    {
      const tmp[300630] "const" "temp"
      unknown call_tmp[745746] "expr temp" "maybe param" "maybe type" "temp"
      (745749 'move' call_tmp[745746](300627 '_wide_get_locale' this[304248]))
      (300631 'move' tmp[300630](300628 'deref' call_tmp[745746]))
      {
        (300568 call(405876 call (partial) _enter _mt[243] this[304248]))
        (491190 'end of statement')
        {
          unknown _indexOfInterest[300590] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300591] "expr temp" "temp"
          (300600 'move' _iterator[300591](300598 call _getIterator this[304248]))
          Defer
          {
            {
              (300616 call _freeIterator _iterator[300591])
            }
          }
          { scopeless type
            (300605 'move' _indexOfInterest[300590](300602 call iteratorIndex _iterator[300591]))
          }
          ForLoop[300592]
          {
            unknown item[300609] "index var" "insert auto destroy"
            (491192 'end of statement')
            (300611 'move' item[300609] _indexOfInterest[300590])
            (491193 'end of statement' item[300609])
            unknown call_tmp[745753] "expr temp" "maybe param" "maybe type" "temp"
            (745756 'move' call_tmp[745753](300575 call == item[300609] x[300553]))
            unknown call_tmp[745758] "expr temp" "maybe param" "maybe type" "temp"
            (745761 'move' call_tmp[745758](300586 call _cond_test call_tmp[745753]))
            if call_tmp[745758]
            {
              (300579 call = result[300560] 1)
              (491195 'end of statement' result[300560])
              break _breakLabel[300596] _breakLabel[300596]
            }
            label _continueLabel[300595]
            _indexOfInterest[300590]
            _iterator[300591]
          }
          label _breakLabel[300596]
        }
        (300625 call(405884 call (partial) _leave _mt[243] this[304248]))
      }
      (300634 'elided on block' 0 tmp[300630])
    }
    (539296 'move' ret[539290](539295 'coerce' result[300560] bool[10]))
    gotoReturn _end_contains[539288] _end_contains[539288]
    (491198 'end of statement' result[300560])
    label _end_contains[539288]
    (539292 return ret[539290])
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?).first[300646](arg _mt[304254]:_MT[238], ref arg this[304252]:list[304122](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539302] "RVV" "temp"
    (300650 call(405889 call (partial) _enter _mt[243] this[304252]))
    (491200 'end of statement')
    unknown tmp[434917] "maybe param" "temp"
    (434928 'move' tmp[434917] 1)
    unknown call_tmp[745767] "expr temp" "maybe param" "maybe type" "temp"
    (745770 'move' call_tmp[745767](434930 call _cond_invalid tmp[434917]))
    if call_tmp[745767]
    {
      (434933 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581045] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581046] "maybe param" "temp"
    unknown call_tmp[745772] "expr temp" "maybe param" "maybe type" "temp"
    (745775 'move' call_tmp[745772](434918 call isTrue tmp[434917]))
    (581051 'move' tmp[581046](581049 call _cond_test call_tmp[745772]))
    if tmp[581046]
    {
      unknown tmp[581053] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745779] "expr temp" "maybe param" "maybe type" "temp"
      (745782 'move' call_tmp[745779](405895 call _size _mt[243] this[304252]))
      unknown call_tmp[745784] "expr temp" "maybe param" "maybe type" "temp"
      (745787 'move' call_tmp[745784](300656 call == call_tmp[745779] 0))
      (581055 'move' tmp[581053](434921 call isTrue call_tmp[745784]))
      (581060 'move' tmp[581045](581057 '_paramFoldLogical' tmp[581046] tmp[581053]))
    }
    {
      (581065 'move' tmp[581045](581062 '_paramFoldLogical' tmp[581046] 0))
    }
    unknown call_tmp[745789] "expr temp" "maybe param" "maybe type" "temp"
    (745792 'move' call_tmp[745789](300686 call _cond_test tmp[581045]))
    if call_tmp[745789]
    {
      (300662 call(405899 call (partial) _leave _mt[243] this[304252]))
      (491202 'end of statement')
      (300684 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300694] "dead at end of block" "ref var"
    unknown call_tmp[745798] "expr temp" "maybe param" "maybe type" "temp"
    (745801 'move' call_tmp[745798](300693 call(405903 call (partial) _getRef _mt[243] this[304252]) 0))
    (549967 'move' result[300694](549966 'addr of' call_tmp[745798]))
    (300697 'end of statement')
    (300700 call(405907 call (partial) _leave _mt[243] this[304252]))
    (491204 'end of statement')
    (539307 'move' ret[539302](539306 'addr of' result[300694]))
    gotoReturn _end_first[539300] _end_first[539300]
    (491205 'end of statement' result[300694])
    label _end_first[539300]
    (539304 return ret[539302])
  }
  function list[304122](?).last[300709](arg _mt[304258]:_MT[238], ref arg this[304256]:list[304122](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539313] "RVV" "temp"
    (300713 call(405912 call (partial) _enter _mt[243] this[304256]))
    (491207 'end of statement')
    unknown tmp[434938] "maybe param" "temp"
    (434949 'move' tmp[434938] 1)
    unknown call_tmp[745807] "expr temp" "maybe param" "maybe type" "temp"
    (745810 'move' call_tmp[745807](434951 call _cond_invalid tmp[434938]))
    if call_tmp[745807]
    {
      (434954 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581072] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581073] "maybe param" "temp"
    unknown call_tmp[745812] "expr temp" "maybe param" "maybe type" "temp"
    (745815 'move' call_tmp[745812](434939 call isTrue tmp[434938]))
    (581078 'move' tmp[581073](581076 call _cond_test call_tmp[745812]))
    if tmp[581073]
    {
      unknown tmp[581080] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745819] "expr temp" "maybe param" "maybe type" "temp"
      (745822 'move' call_tmp[745819](405918 call _size _mt[243] this[304256]))
      unknown call_tmp[745824] "expr temp" "maybe param" "maybe type" "temp"
      (745827 'move' call_tmp[745824](300719 call == call_tmp[745819] 0))
      (581082 'move' tmp[581080](434942 call isTrue call_tmp[745824]))
      (581087 'move' tmp[581072](581084 '_paramFoldLogical' tmp[581073] tmp[581080]))
    }
    {
      (581092 'move' tmp[581072](581089 '_paramFoldLogical' tmp[581073] 0))
    }
    unknown call_tmp[745829] "expr temp" "maybe param" "maybe type" "temp"
    (745832 'move' call_tmp[745829](300749 call _cond_test tmp[581072]))
    if call_tmp[745829]
    {
      (300725 call(405922 call (partial) _leave _mt[243] this[304256]))
      (491209 'end of statement')
      (300747 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300760] "dead at end of block" "ref var"
    unknown call_tmp[745840] "expr temp" "maybe param" "maybe type" "temp"
    (745843 'move' call_tmp[745840](405931 call _size _mt[243] this[304256]))
    unknown call_tmp[745845] "expr temp" "maybe param" "maybe type" "temp"
    (745848 'move' call_tmp[745845](300756 call - call_tmp[745840] 1))
    unknown call_tmp[745850] "expr temp" "maybe param" "maybe type" "temp"
    (745853 'move' call_tmp[745850](300759 call(405926 call (partial) _getRef _mt[243] this[304256]) call_tmp[745845]))
    (549970 'move' result[300760](549969 'addr of' call_tmp[745850]))
    (300763 'end of statement')
    (300766 call(405935 call (partial) _leave _mt[243] this[304256]))
    (491211 'end of statement')
    (539318 'move' ret[539313](539317 'addr of' result[300760]))
    gotoReturn _end_last[539311] _end_last[539311]
    (491212 'end of statement' result[300760])
    label _end_last[539311]
    (539315 return ret[539313])
  }
  function list[304122](?)._extendGeneric[300777](arg _mt[304262]:_MT[238], ref arg this[304260]:list[304122](?), arg collection[300775]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    {
      const tmp[300830] "const" "temp"
      unknown call_tmp[745857] "expr temp" "maybe param" "maybe type" "temp"
      (745860 'move' call_tmp[745857](300827 '_wide_get_locale' this[304260]))
      (300831 'move' tmp[300830](300828 'deref' call_tmp[745857]))
      {
        {
          unknown _indexOfInterest[300793] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300794] "expr temp" "temp"
          (300803 'move' _iterator[300794](300801 call _getIterator collection[300775]))
          Defer
          {
            {
              (300819 call _freeIterator _iterator[300794])
            }
          }
          { scopeless type
            (300808 'move' _indexOfInterest[300793](300805 call iteratorIndex _iterator[300794]))
          }
          ForLoop[300795]
          {
            unknown item[300812] "index var" "insert auto destroy"
            (491215 'end of statement')
            (300814 'move' item[300812] _indexOfInterest[300793])
            (491216 'end of statement' item[300812])
            {
              unknown cpy[300783] "dead at end of block" "no auto destroy"
              (549972 'init var' cpy[300783] item[300812])
              (300786 'end of statement' item[300812])
              (300791 call(405943 call (partial) _appendByRef _mt[243] this[304260]) cpy[300783])
              (491219 'end of statement' cpy[300783])
            }
            label _continueLabel[300798]
            _indexOfInterest[300793]
            _iterator[300794]
          }
          label _breakLabel[300799]
        }
      }
      (300834 'elided on block' 0 tmp[300830])
    }
    (539322 return _void[55])
  }
  function list[304122](?).extend[300852](arg _mt[304266]:_MT[238], ref arg this[304264]:list[304122](?), arg other[300849]:list[304122](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    {
      const tmp[300878] "const" "temp"
      unknown call_tmp[745864] "expr temp" "maybe param" "maybe type" "temp"
      (745867 'move' call_tmp[745864](300875 '_wide_get_locale' this[304264]))
      (300879 'move' tmp[300878](300876 'deref' call_tmp[745864]))
      {
        (300863 call(405957 call (partial) _enter _mt[243] this[304264]))
        (491221 'end of statement')
        (300869 call(405963 call (partial) _extendGeneric _mt[243] this[304264]) other[300849])
        (491222 'end of statement')
        (300873 call(405968 call (partial) _leave _mt[243] this[304264]))
      }
      (300882 'elided on block' 0 tmp[300878])
    }
    (539324 return _void[55])
  }
  where {
    unknown call_tmp[745877] "expr temp" "maybe param" "maybe type" "temp"
    (745880 'move' call_tmp[745877](467892 call eltType _mt[243] this[304264]))
    unknown call_tmp[745882] "expr temp" "maybe param" "maybe type" "temp"
    (745885 'move' call_tmp[745882](467888 'query' other[300849] 1))
    unknown call_tmp[745887] "expr temp" "maybe param" "maybe type" "temp"
    (745890 'move' call_tmp[745887](467895 call == call_tmp[745877] call_tmp[745882]))
    (467899 call & 1 call_tmp[745887])
  }
  {
    (300858 call <(300855 'lifetime_of' this[304264])(300857 'lifetime_of' other[300849]))
  }
  function list[304122](?).extend[300901](arg _mt[304270]:_MT[238], ref arg this[304268]:list[304122](?), arg other[300898]:_array[133600](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    {
      const tmp[300927] "const" "temp"
      unknown call_tmp[745892] "expr temp" "maybe param" "maybe type" "temp"
      (745895 'move' call_tmp[745892](300924 '_wide_get_locale' this[304268]))
      (300928 'move' tmp[300927](300925 'deref' call_tmp[745892]))
      {
        (300912 call(405980 call (partial) _enter _mt[243] this[304268]))
        (491224 'end of statement')
        (300918 call(405984 call (partial) _extendGeneric _mt[243] this[304268]) other[300898])
        (491225 'end of statement')
        (300922 call(405989 call (partial) _leave _mt[243] this[304268]))
      }
      (300931 'elided on block' 0 tmp[300927])
    }
    (539326 return _void[55])
  }
  where {
    unknown call_tmp[745905] "expr temp" "maybe param" "maybe type" "temp"
    (745908 'move' call_tmp[745905](405973 call eltType _mt[243] this[304268]))
    unknown call_tmp[745912] "expr temp" "maybe param" "maybe type" "temp"
    (745915 'move' call_tmp[745912](467911 call eltType _mt[243] other[300898]))
    unknown call_tmp[745917] "expr temp" "maybe param" "maybe type" "temp"
    (745920 'move' call_tmp[745917](467915 call == call_tmp[745905] call_tmp[745912]))
    (467909 call & 1 call_tmp[745917])
  }
  {
    (300907 call <(300904 'lifetime_of' this[304268])(300906 'lifetime_of' other[300898]))
  }
  function list[304122](?).extend[300952](arg _mt[304274]:_MT[238], ref arg this[304272]:list[304122](?), arg other[300949]:range[64316](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[745922] "expr temp" "maybe param" "maybe type" "temp"
    (745925 'move' call_tmp[745922](300963 call isBoundedRange other[300949]))
    unknown call_tmp[745927] "expr temp" "maybe param" "maybe type" "temp"
    (745930 'move' call_tmp[745927](300964 call ! call_tmp[745922]))
    unknown call_tmp[745932] "expr temp" "maybe param" "maybe type" "temp"
    (745935 'move' call_tmp[745932](301036 call _cond_test call_tmp[745927]))
    if call_tmp[745932]
    {
      unknown call_tmp[745937] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745940 'move' call_tmp[745937](300967 'typeof' this[304272]))
      unknown call_tmp[745942] "maybe param" "maybe type" "temp"
      (745945 'move' call_tmp[745942](300969 call _cast string[26] call_tmp[745937]))
      unknown e[300971] "dead at end of block" "param"
      (549974 'init var' e[300971] call_tmp[745942])
      (300974 'end of statement')
      unknown call_tmp[745947] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745950 'move' call_tmp[745947](300977 'typeof' other[300949]))
      unknown call_tmp[745952] "maybe param" "maybe type" "temp"
      (745955 'move' call_tmp[745952](300979 call _cast string[26] call_tmp[745947]))
      unknown f[300981] "dead at end of block" "param"
      (549976 'init var' f[300981] call_tmp[745952])
      (300984 'end of statement')
      unknown call_tmp[745957] "expr temp" "maybe param" "maybe type" "temp"
      (745960 'move' call_tmp[745957](301003 call + "Cannot extend " e[300971]))
      unknown call_tmp[745962] "expr temp" "maybe param" "maybe type" "temp"
      (745965 'move' call_tmp[745962](301022 call + call_tmp[745957] " with unbounded "))
      unknown call_tmp[745967] "maybe param" "maybe type" "temp"
      (745970 'move' call_tmp[745967](301025 call + call_tmp[745962] f[300981]))
      unknown msg[301027] "dead at end of block" "param"
      (549978 'init var' msg[301027] call_tmp[745967])
      (301030 'end of statement')
      (301034 call compilerError msg[301027])
    }
    {
      const tmp[301059] "const" "temp"
      unknown call_tmp[745972] "expr temp" "maybe param" "maybe type" "temp"
      (745975 'move' call_tmp[745972](301056 '_wide_get_locale' this[304272]))
      (301060 'move' tmp[301059](301057 'deref' call_tmp[745972]))
      {
        (301044 call(406008 call (partial) _enter _mt[243] this[304272]))
        (491228 'end of statement')
        (301050 call(406012 call (partial) _extendGeneric _mt[243] this[304272]) other[300949])
        (491229 'end of statement')
        (301054 call(406017 call (partial) _leave _mt[243] this[304272]))
      }
      (301063 'elided on block' 0 tmp[301059])
    }
    (539328 return _void[55])
  }
  where {
    unknown call_tmp[745985] "expr temp" "maybe param" "maybe type" "temp"
    (745988 'move' call_tmp[745985](467924 call eltType _mt[243] this[304272]))
    unknown call_tmp[745990] "expr temp" "maybe param" "maybe type" "temp"
    (745993 'move' call_tmp[745990](467920 'query' other[300949] 1))
    unknown call_tmp[745995] "expr temp" "maybe param" "maybe type" "temp"
    (745998 'move' call_tmp[745995](467927 call == call_tmp[745985] call_tmp[745990]))
    (467931 call & 1 call_tmp[745995])
  }
  {
    (300958 call <(300955 'lifetime_of' this[304272])(300957 'lifetime_of' other[300949]))
  }
  function list[304122](?).insert[301076](arg _mt[304278]:_MT[238], ref arg this[304276]:list[304122](?), arg idx[301073]:int(64)[13], in arg x[301079] :
  (406022 call eltType _mt[243] this[304276])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539332] "RVV" "temp"
    unknown result[301090] "dead at end of block" "insert auto destroy"
    (549980 'init var' result[301090] 0)
    (301093 'end of statement')
    {
      const tmp[301171] "const" "temp"
      unknown call_tmp[746002] "expr temp" "maybe param" "maybe type" "temp"
      (746005 'move' call_tmp[746002](301168 '_wide_get_locale' this[304276]))
      (301172 'move' tmp[301171](301169 'deref' call_tmp[746002]))
      {
        (301098 call(406029 call (partial) _enter _mt[243] this[304276]))
        (491231 'end of statement')
        unknown call_tmp[746011] "expr temp" "maybe param" "maybe type" "temp"
        (746014 'move' call_tmp[746011](406035 call _size _mt[243] this[304276]))
        unknown call_tmp[746016] "expr temp" "maybe param" "maybe type" "temp"
        (746019 'move' call_tmp[746016](301103 call == idx[301073] call_tmp[746011]))
        unknown call_tmp[746021] "expr temp" "maybe param" "maybe type" "temp"
        (746024 'move' call_tmp[746021](301159 call _cond_test call_tmp[746016]))
        if call_tmp[746021]
        {
          (301108 call(406039 call (partial) _appendByRef _mt[243] this[304276]) x[301079])
          (491232 'end of statement')
          (301113 call = result[301090] 1)
          (491233 'end of statement' result[301090])
        }
        {
          unknown call_tmp[746030] "expr temp" "maybe param" "maybe type" "temp"
          (746033 'move' call_tmp[746030](301119 call(406045 call (partial) _withinBounds _mt[243] this[304276]) idx[301073]))
          unknown call_tmp[746035] "expr temp" "maybe param" "maybe type" "temp"
          (746038 'move' call_tmp[746035](301155 call _cond_test call_tmp[746030]))
          if call_tmp[746035]
          {
            (301123 call(406052 call (partial) _expand _mt[243] this[304276]) idx[301073])
            (491235 'end of statement')
            unknown src[301127] "dead at end of block" "ref var"
            (549983 'move' src[301127](549982 'addr of' x[301079]))
            (301130 'end of statement')
            unknown dst[301135] "dead at end of block" "ref var"
            unknown call_tmp[746044] "expr temp" "maybe param" "maybe type" "temp"
            (746047 'move' call_tmp[746044](301134 call(406058 call (partial) _getRef _mt[243] this[304276]) idx[301073]))
            (549986 'move' dst[301135](549985 'addr of' call_tmp[746044]))
            (301138 'end of statement')
            (301143 call(406063 call (partial) _move _mt[243] this[304276]) src[301127] dst[301135])
            (491236 'end of statement' src[301127] dst[301135])
            unknown call_tmp[746053] "expr temp" "maybe param" "maybe type" "temp"
            (746056 'move' call_tmp[746053](406070 call _size _mt[243] this[304276]))
            (301147 call += call_tmp[746053] 1)
            (491239 'end of statement')
            (301152 call = result[301090] 1)
            (491240 'end of statement' result[301090])
          }
        }
        (301166 call(406075 call (partial) _leave _mt[243] this[304276]))
      }
      (301175 'elided on block' 0 tmp[301171])
    }
    unknown call_tmp[746060] "expr temp" "maybe param" "maybe type" "temp"
    (746063 'move' call_tmp[746060](301180 call ! result[301090]))
    unknown call_tmp[746065] "expr temp" "maybe param" "maybe type" "temp"
    (746068 'move' call_tmp[746065](301187 call _cond_test call_tmp[746060]))
    if call_tmp[746065]
    {
      (301185 call(406082 call (partial) _destroy _mt[243] this[304276]) x[301079])
    }
    (539338 'move' ret[539332](539337 'coerce' result[301090] bool[10]))
    gotoReturn _end_insert[539330] _end_insert[539330]
    (491244 'end of statement' result[301090])
    label _end_insert[539330]
    (539334 return ret[539332])
  }
  {
    (301087 call <(301084 'lifetime_of' this[304276])(301086 'lifetime_of' x[301079]))
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?)._insertGenericKnownSize[301205](arg _mt[304282]:_MT[238], ref arg this[304280]:list[304122](?), arg idx[301202]:int(64)[13], arg items[301207]:_any[178](?), arg size[301210]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539344] "RVV" "temp"
    unknown result[301215] "dead at end of block" "insert auto destroy"
    (549988 'init var' result[301215] 0)
    (301218 'end of statement')
    unknown call_tmp[746072] "expr temp" "maybe param" "maybe type" "temp"
    (746075 'move' call_tmp[746072](301223 call >= size[301210] 0))
    (301226 call _sanity call_tmp[746072])
    (491246 'end of statement')
    unknown call_tmp[746077] "expr temp" "maybe param" "maybe type" "temp"
    (746080 'move' call_tmp[746077](301230 call == size[301210] 0))
    unknown call_tmp[746082] "expr temp" "maybe param" "maybe type" "temp"
    (746085 'move' call_tmp[746082](301235 call _cond_test call_tmp[746077]))
    if call_tmp[746082]
    {
      (539350 'move' ret[539344](539349 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539342] _end__insertGenericKnownSize[539342]
    }
    {
      const tmp[301360] "const" "temp"
      unknown call_tmp[746087] "expr temp" "maybe param" "maybe type" "temp"
      (746090 'move' call_tmp[746087](301357 '_wide_get_locale' this[304280]))
      (301361 'move' tmp[301360](301358 'deref' call_tmp[746087]))
      {
        unknown call_tmp[746094] "expr temp" "maybe param" "maybe type" "temp"
        (746097 'move' call_tmp[746094](406093 call _size _mt[243] this[304280]))
        unknown call_tmp[746099] "expr temp" "maybe param" "maybe type" "temp"
        (746102 'move' call_tmp[746099](301243 call == idx[301202] call_tmp[746094]))
        unknown call_tmp[746104] "expr temp" "maybe param" "maybe type" "temp"
        (746107 'move' call_tmp[746104](301351 call _cond_test call_tmp[746099]))
        if call_tmp[746104]
        {
          (301248 call(406097 call (partial) _extendGeneric _mt[243] this[304280]) items[301207])
          (491248 'end of statement')
          (301253 call = result[301215] 1)
          (491249 'end of statement' result[301215])
        }
        {
          unknown call_tmp[746113] "expr temp" "maybe param" "maybe type" "temp"
          (746116 'move' call_tmp[746113](301259 call(406103 call (partial) _withinBounds _mt[243] this[304280]) idx[301202]))
          unknown call_tmp[746118] "expr temp" "maybe param" "maybe type" "temp"
          (746121 'move' call_tmp[746118](301347 call _cond_test call_tmp[746113]))
          if call_tmp[746118]
          {
            (301264 call(406108 call (partial) _expand _mt[243] this[304280]) idx[301202] size[301210])
            (491251 'end of statement')
            unknown i[301268] "dead at end of block" "insert auto destroy"
            (549990 'init var' i[301268] idx[301202])
            (301271 'end of statement')
            {
              unknown _indexOfInterest[301309] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301310] "expr temp" "temp"
              (301319 'move' _iterator[301310](301317 call _getIterator items[301207]))
              Defer
              {
                {
                  (301335 call _freeIterator _iterator[301310])
                }
              }
              { scopeless type
                (301324 'move' _indexOfInterest[301309](301321 call iteratorIndex _iterator[301310]))
              }
              ForLoop[301311]
              {
                unknown x[301328] "index var" "insert auto destroy"
                (491253 'end of statement')
                (301330 'move' x[301328] _indexOfInterest[301309])
                (491254 'end of statement' x[301328])
                {
                  unknown cpy[301275] "dead at end of block" "no auto destroy"
                  (549992 'init var' cpy[301275] x[301328])
                  (301278 'end of statement')
                  unknown src[301281] "dead at end of block" "ref var"
                  (549995 'move' src[301281](549994 'addr of' cpy[301275]))
                  (301284 'end of statement')
                  unknown dst[301289] "dead at end of block" "ref var"
                  unknown call_tmp[746127] "expr temp" "maybe param" "maybe type" "temp"
                  (746130 'move' call_tmp[746127](301288 call(406118 call (partial) _getRef _mt[243] this[304280]) i[301268]))
                  (549998 'move' dst[301289](549997 'addr of' call_tmp[746127]))
                  (301292 'end of statement' x[301328] cpy[301275] i[301268])
                  (301297 call(406123 call (partial) _move _mt[243] this[304280]) src[301281] dst[301289])
                  (491259 'end of statement' src[301281] dst[301289])
                  unknown call_tmp[746136] "expr temp" "maybe param" "maybe type" "temp"
                  (746139 'move' call_tmp[746136](406130 call _size _mt[243] this[304280]))
                  (301301 call += call_tmp[746136] 1)
                  (491262 'end of statement')
                  (301306 call += i[301268] 1)
                  (491263 'end of statement' i[301268])
                }
                label _continueLabel[301314]
                _indexOfInterest[301309]
                _iterator[301310]
              }
              label _breakLabel[301315]
            }
            (301344 call = result[301215] 1)
            (491265 'end of statement' result[301215])
          }
        }
      }
      (301364 'elided on block' 0 tmp[301360])
    }
    (539356 'move' ret[539344](539355 'coerce' result[301215] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539342] _end__insertGenericKnownSize[539342]
    (491267 'end of statement' result[301215])
    label _end__insertGenericKnownSize[539342]
    (539346 return ret[539344])
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?).insert[301380](arg _mt[304286]:_MT[238], ref arg this[304284]:list[304122](?), arg idx[301377]:int(64)[13], arg arr[301388]:_array[133600](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539362] "RVV" "temp"
    unknown result[301399] "dead at end of block" "insert auto destroy"
    (550000 'init var' result[301399] 0)
    (301402 'end of statement')
    {
      const tmp[301430] "const" "temp"
      unknown call_tmp[746141] "expr temp" "maybe param" "maybe type" "temp"
      (746144 'move' call_tmp[746141](301427 '_wide_get_locale' this[304284]))
      (301431 'move' tmp[301430](301428 'deref' call_tmp[746141]))
      {
        (301407 call(406145 call (partial) _enter _mt[243] this[304284]))
        (491269 'end of statement')
        unknown call_tmp[746152] "expr temp" "maybe param" "maybe type" "temp"
        (746155 'move' call_tmp[746152](301416 call size _mt[243] arr[301388]))
        unknown call_tmp[746157] "expr temp" "maybe param" "maybe type" "temp"
        (746160 'move' call_tmp[746157](301419 call(406152 call (partial) _insertGenericKnownSize _mt[243] this[304284]) idx[301377] arr[301388] call_tmp[746152]))
        (301420 call = result[301399] call_tmp[746157])
        (491270 'end of statement' result[301399])
        (301425 call(406158 call (partial) _leave _mt[243] this[304284]))
      }
      (301434 'elided on block' 0 tmp[301430])
    }
    (539368 'move' ret[539362](539367 'coerce' result[301399] bool[10]))
    gotoReturn _end_insert[539360] _end_insert[539360]
    (491273 'end of statement' result[301399])
    label _end_insert[539360]
    (539364 return ret[539362])
  }
  where {
    unknown call_tmp[746166] "expr temp" "maybe param" "maybe type" "temp"
    (746169 'move' call_tmp[746166](406138 call eltType _mt[243] this[304284]))
    unknown call_tmp[746173] "expr temp" "maybe param" "maybe type" "temp"
    (746176 'move' call_tmp[746173](467946 call eltType _mt[243] arr[301388]))
    unknown call_tmp[746178] "expr temp" "maybe param" "maybe type" "temp"
    (746181 'move' call_tmp[746178](467950 call == call_tmp[746166] call_tmp[746173]))
    (467944 call & 1 call_tmp[746178])
  }
  {
    (301396 call <(301393 'lifetime_of' this[304284])(301395 'lifetime_of' arr[301388]))
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?).insert[301451](arg _mt[304290]:_MT[238], ref arg this[304288]:list[304122](?), arg idx[301448]:int(64)[13], arg lst[301457]:list[304122](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539374] "RVV" "temp"
    unknown result[301468] "dead at end of block" "insert auto destroy"
    (550002 'init var' result[301468] 0)
    (301471 'end of statement')
    unknown call_tmp[746185] "maybe param" "maybe type" "temp"
    (746188 'move' call_tmp[746185](301474 call size _mt[243] lst[301457]))
    const size[301477] "dead at end of block" "const" "insert auto destroy"
    (550004 'init var' size[301477] call_tmp[746185])
    (301480 'end of statement')
    {
      const tmp[301504] "const" "temp"
      unknown call_tmp[746190] "expr temp" "maybe param" "maybe type" "temp"
      (746193 'move' call_tmp[746190](301501 '_wide_get_locale' this[304288]))
      (301505 'move' tmp[301504](301502 'deref' call_tmp[746190]))
      {
        (301484 call(406172 call (partial) _enter _mt[243] this[304288]))
        (491275 'end of statement')
        unknown call_tmp[746199] "expr temp" "maybe param" "maybe type" "temp"
        (746202 'move' call_tmp[746199](301493 call(406177 call (partial) _insertGenericKnownSize _mt[243] this[304288]) idx[301448] lst[301457] size[301477]))
        (301494 call = result[301468] call_tmp[746199])
        (491276 'end of statement' result[301468] size[301477])
        (301499 call(406184 call (partial) _leave _mt[243] this[304288]))
      }
      (301508 'elided on block' 0 tmp[301504])
    }
    (539380 'move' ret[539374](539379 'coerce' result[301468] bool[10]))
    gotoReturn _end_insert[539372] _end_insert[539372]
    (491280 'end of statement' result[301468])
    label _end_insert[539372]
    (539376 return ret[539374])
  }
  where {
    unknown call_tmp[746208] "expr temp" "maybe param" "maybe type" "temp"
    (746211 'move' call_tmp[746208](467959 call eltType _mt[243] this[304288]))
    unknown call_tmp[746213] "expr temp" "maybe param" "maybe type" "temp"
    (746216 'move' call_tmp[746213](467955 'query' lst[301457] 1))
    unknown call_tmp[746218] "expr temp" "maybe param" "maybe type" "temp"
    (746221 'move' call_tmp[746218](467962 call == call_tmp[746208] call_tmp[746213]))
    (467966 call & 1 call_tmp[746218])
  }
  {
    (301465 call <(301462 'lifetime_of' this[304288])(301464 'lifetime_of' lst[301457]))
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?).remove[301525](arg _mt[304294]:_MT[238], ref arg this[304292]:list[304122](?), arg x[301522] :
  (406190 call eltType _mt[243] this[304292]), arg count[301529]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539386] "RVV" "temp"
    unknown result[301535] "dead at end of block" "insert auto destroy"
    (550006 'init var' result[301535] 0)
    (301538 'end of statement')
    {
      const tmp[301775] "const" "temp"
      unknown call_tmp[746225] "expr temp" "maybe param" "maybe type" "temp"
      (746228 'move' call_tmp[746225](301772 '_wide_get_locale' this[304292]))
      (301776 'move' tmp[301775](301773 'deref' call_tmp[746225]))
      {
        unknown src_i[301541] "dead at end of block" "insert auto destroy"
        (550008 'default init var' src_i[301541] int(64)[13])
        unknown dst_i[301545] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746230] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746233 'move' call_tmp[746230](301549 'typeof' src_i[301541]))
        (550010 'default init var' dst_i[301545] call_tmp[746230])
        (301550 'end of statement')
        unknown removed[301553] "dead at end of block" "insert auto destroy"
        (550012 'init var' removed[301553] 0)
        (301556 'end of statement' src_i[301541])
        (301559 call = src_i[301541] 0)
        (491283 'end of statement' src_i[301541])
        (301564 call(406197 call (partial) _enter _mt[243] this[304292]))
        (491285 'end of statement')
        {
          unknown tmp[301606] "temp"
          unknown call_tmp[746239] "expr temp" "maybe param" "maybe type" "temp"
          (746242 'move' call_tmp[746239](406223 call _size _mt[243] this[304292]))
          unknown call_tmp[746244] "expr temp" "maybe param" "maybe type" "temp"
          (746247 'move' call_tmp[746244](301627 call < dst_i[301545] call_tmp[746239]))
          (301630 'move' tmp[301606](301625 call _cond_test call_tmp[746244]))
          WhileDo[301611]
          {
            {
              unknown dst[301574] "dead at end of block" "ref var"
              unknown call_tmp[746251] "expr temp" "maybe param" "maybe type" "temp"
              (746254 'move' call_tmp[746251](301573 call(406201 call (partial) _getRef _mt[243] this[304292]) dst_i[301545]))
              (550015 'move' dst[301574](550014 'addr of' call_tmp[746251]))
              (301577 'end of statement' dst_i[301545])
              unknown call_tmp[746256] "expr temp" "maybe param" "maybe type" "temp"
              (746259 'move' call_tmp[746256](301581 call == dst[301574] x[301522]))
              unknown call_tmp[746261] "expr temp" "maybe param" "maybe type" "temp"
              (746264 'move' call_tmp[746261](301597 call _cond_test call_tmp[746256]))
              if call_tmp[746261]
              {
                (301586 call(406208 call (partial) _destroy _mt[243] this[304292]) dst[301574])
                (491287 'end of statement' dst[301574])
                (301591 call += removed[301553] 1)
                (491289 'end of statement' removed[301553])
                break _breakLabel[301610] _breakLabel[301610]
              }
              (301603 call += dst_i[301545] 1)
              (491291 'end of statement' dst_i[301545])
            }
            label _continueLabel[301609]
            unknown call_tmp[746270] "expr temp" "maybe param" "maybe type" "temp"
            (746273 'move' call_tmp[746270](406217 call _size _mt[243] this[304292]))
            unknown call_tmp[746275] "expr temp" "maybe param" "maybe type" "temp"
            (746278 'move' call_tmp[746275](301617 call < dst_i[301545] call_tmp[746270]))
            (301620 'move' tmp[301606](301615 call _cond_test call_tmp[746275]))
            tmp[301606]
          }
          label _breakLabel[301610]
        }
        unknown call_tmp[746280] "expr temp" "maybe param" "maybe type" "temp"
        (746283 'move' call_tmp[746280](301636 call + dst_i[301545] 1))
        (301638 call = src_i[301541] call_tmp[746280])
        (491293 'end of statement' src_i[301541] dst_i[301545])
        {
          unknown tmp[301717] "temp"
          unknown call_tmp[746287] "expr temp" "maybe param" "maybe type" "temp"
          (746290 'move' call_tmp[746287](406267 call _size _mt[243] this[304292]))
          unknown call_tmp[746292] "expr temp" "maybe param" "maybe type" "temp"
          (746295 'move' call_tmp[746292](301738 call < src_i[301541] call_tmp[746287]))
          (301741 'move' tmp[301717](301736 call _cond_test call_tmp[746292]))
          WhileDo[301722]
          {
            {
              unknown src[301649] "dead at end of block" "ref var"
              unknown call_tmp[746299] "expr temp" "maybe param" "maybe type" "temp"
              (746302 'move' call_tmp[746299](301648 call(406229 call (partial) _getRef _mt[243] this[304292]) src_i[301541]))
              (550018 'move' src[301649](550017 'addr of' call_tmp[746299]))
              (301652 'end of statement')
              unknown tmp[434959] "maybe param" "temp"
              unknown tmp[434980] "maybe param" "temp"
              (434991 'move' tmp[434980](301656 call == count[301529] 0))
              unknown call_tmp[746304] "expr temp" "maybe param" "maybe type" "temp"
              (746307 'move' call_tmp[746304](434993 call _cond_invalid tmp[434980]))
              if call_tmp[746304]
              {
                (434996 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[581099] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581100] "maybe param" "temp"
              unknown call_tmp[746309] "expr temp" "maybe param" "maybe type" "temp"
              (746312 'move' call_tmp[746309](434981 call isTrue tmp[434980]))
              (581105 'move' tmp[581100](581103 call _cond_test call_tmp[746309]))
              if tmp[581100]
              {
                (581110 'move' tmp[581099](581107 '_paramFoldLogical' tmp[581100] 1))
              }
              {
                unknown tmp[581112] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746314] "expr temp" "maybe param" "maybe type" "temp"
                (746317 'move' call_tmp[746314](301660 call < removed[301553] count[301529]))
                (581114 'move' tmp[581112](434985 call isTrue call_tmp[746314]))
                (581119 'move' tmp[581099](581116 '_paramFoldLogical' tmp[581100] tmp[581112]))
              }
              (434970 'move' tmp[434959] tmp[581099])
              unknown call_tmp[746319] "expr temp" "maybe param" "maybe type" "temp"
              (746322 'move' call_tmp[746319](434972 call _cond_invalid tmp[434959]))
              if call_tmp[746319]
              {
                (434975 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[581126] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581127] "maybe param" "temp"
              unknown call_tmp[746324] "expr temp" "maybe param" "maybe type" "temp"
              (746327 'move' call_tmp[746324](434960 call isTrue tmp[434959]))
              (581132 'move' tmp[581127](581130 call _cond_test call_tmp[746324]))
              if tmp[581127]
              {
                unknown tmp[581134] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746329] "expr temp" "maybe param" "maybe type" "temp"
                (746332 'move' call_tmp[746329](301666 call == src[301649] x[301522]))
                (581136 'move' tmp[581134](434963 call isTrue call_tmp[746329]))
                (581141 'move' tmp[581126](581138 '_paramFoldLogical' tmp[581127] tmp[581134]))
              }
              {
                (581146 'move' tmp[581126](581143 '_paramFoldLogical' tmp[581127] 0))
              }
              unknown call_tmp[746334] "expr temp" "maybe param" "maybe type" "temp"
              (746337 'move' call_tmp[746334](301689 call _cond_test tmp[581126]))
              if call_tmp[746334]
              {
                (301673 call(406239 call (partial) _destroy _mt[243] this[304292]) src[301649])
                (491299 'end of statement' src[301649])
                (301678 call += src_i[301541] 1)
                (491301 'end of statement' src_i[301541])
                (301683 call += removed[301553] 1)
                (491303 'end of statement' removed[301553])
                continue _continueLabel[301720] _continueLabel[301720]
              }
              unknown dst[301697] "dead at end of block" "ref var"
              unknown call_tmp[746343] "expr temp" "maybe param" "maybe type" "temp"
              (746346 'move' call_tmp[746343](301696 call(406246 call (partial) _getRef _mt[243] this[304292]) dst_i[301545]))
              (550021 'move' dst[301697](550020 'addr of' call_tmp[746343]))
              (301700 'end of statement' src_i[301541] dst_i[301545])
              (301705 call(406251 call (partial) _move _mt[243] this[304292]) src[301649] dst[301697])
              (491306 'end of statement' src[301649] dst[301697])
              (301709 call += src_i[301541] 1)
              (491309 'end of statement' src_i[301541])
              (301714 call += dst_i[301545] 1)
              (491311 'end of statement' dst_i[301545])
            }
            label _continueLabel[301720]
            unknown call_tmp[746352] "expr temp" "maybe param" "maybe type" "temp"
            (746355 'move' call_tmp[746352](406261 call _size _mt[243] this[304292]))
            unknown call_tmp[746357] "expr temp" "maybe param" "maybe type" "temp"
            (746360 'move' call_tmp[746357](301728 call < src_i[301541] call_tmp[746352]))
            (301731 'move' tmp[301717](301726 call _cond_test call_tmp[746357]))
            tmp[301717]
          }
          label _breakLabel[301721]
        }
        unknown call_tmp[746362] "expr temp" "maybe param" "maybe type" "temp"
        (746365 'move' call_tmp[746362](301759 call _cond_test removed[301553]))
        if call_tmp[746362]
        {
          (301748 call(406272 call (partial) _maybeReleaseMem _mt[243] this[304292]) removed[301553])
          (491313 'end of statement' removed[301553])
          unknown call_tmp[746371] "expr temp" "maybe param" "maybe type" "temp"
          (746374 'move' call_tmp[746371](406278 call _size _mt[243] this[304292]))
          unknown call_tmp[746378] "expr temp" "maybe param" "maybe type" "temp"
          (746381 'move' call_tmp[746378](406283 call _size _mt[243] this[304292]))
          unknown call_tmp[746383] "expr temp" "maybe param" "maybe type" "temp"
          (746386 'move' call_tmp[746383](301754 call - call_tmp[746378] removed[301553]))
          (301756 call = call_tmp[746371] call_tmp[746383])
          (491315 'end of statement' removed[301553])
        }
        (301765 call(406288 call (partial) _leave _mt[243] this[304292]))
        (491317 'end of statement')
        (301769 call = result[301535] removed[301553])
        (491318 'end of statement' result[301535] removed[301553])
      }
      (301779 'elided on block' 0 tmp[301775])
    }
    (539392 'move' ret[539386](539391 'coerce' result[301535] int(64)[13]))
    gotoReturn _end_remove[539384] _end_remove[539384]
    (491321 'end of statement' result[301535])
    label _end_remove[539384]
    (539388 return ret[539386])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?)._popAtIndex[301795](arg _mt[304298]:_MT[238], ref arg this[304296]:list[304122](?), arg idx[301792]:int(64)[13], arg unlockBeforeHalt[301798] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539398] "RVV" "temp"
    unknown tmp[435001] "maybe param" "temp"
    (435012 'move' tmp[435001] 1)
    unknown call_tmp[746390] "expr temp" "maybe param" "maybe type" "temp"
    (746393 'move' call_tmp[746390](435014 call _cond_invalid tmp[435001]))
    if call_tmp[746390]
    {
      (435017 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581153] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581154] "maybe param" "temp"
    unknown call_tmp[746395] "expr temp" "maybe param" "maybe type" "temp"
    (746398 'move' call_tmp[746395](435002 call isTrue tmp[435001]))
    (581159 'move' tmp[581154](581157 call _cond_test call_tmp[746395]))
    if tmp[581154]
    {
      unknown tmp[581161] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746402] "expr temp" "maybe param" "maybe type" "temp"
      (746405 'move' call_tmp[746402](406302 call _size _mt[243] this[304296]))
      unknown call_tmp[746407] "expr temp" "maybe param" "maybe type" "temp"
      (746410 'move' call_tmp[746407](301805 call <= call_tmp[746402] 0))
      (581163 'move' tmp[581161](435005 call isTrue call_tmp[746407]))
      (581168 'move' tmp[581153](581165 '_paramFoldLogical' tmp[581154] tmp[581161]))
    }
    {
      (581173 'move' tmp[581153](581170 '_paramFoldLogical' tmp[581154] 0))
    }
    unknown call_tmp[746412] "expr temp" "maybe param" "maybe type" "temp"
    (746415 'move' call_tmp[746412](301841 call _cond_test tmp[581153]))
    if call_tmp[746412]
    {
      unknown call_tmp[746417] "expr temp" "maybe param" "maybe type" "temp"
      (746420 'move' call_tmp[746417](301814 call _cond_test unlockBeforeHalt[301798]))
      if call_tmp[746417]
      {
        (301812 call(406307 call (partial) _leave _mt[243] this[304296]))
      }
      (301839 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[435022] "maybe param" "temp"
    (435033 'move' tmp[435022] 1)
    unknown call_tmp[746424] "expr temp" "maybe param" "maybe type" "temp"
    (746427 'move' call_tmp[746424](435035 call _cond_invalid tmp[435022]))
    if call_tmp[746424]
    {
      (435038 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581180] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581181] "maybe param" "temp"
    unknown call_tmp[746429] "expr temp" "maybe param" "maybe type" "temp"
    (746432 'move' call_tmp[746429](435023 call isTrue tmp[435022]))
    (581186 'move' tmp[581181](581184 call _cond_test call_tmp[746429]))
    if tmp[581181]
    {
      unknown tmp[581188] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746436] "expr temp" "maybe param" "maybe type" "temp"
      (746439 'move' call_tmp[746436](301850 call(406312 call (partial) _withinBounds _mt[243] this[304296]) idx[301792]))
      unknown call_tmp[746441] "expr temp" "maybe param" "maybe type" "temp"
      (746444 'move' call_tmp[746441](301851 call ! call_tmp[746436]))
      (581190 'move' tmp[581188](435026 call isTrue call_tmp[746441]))
      (581195 'move' tmp[581180](581192 '_paramFoldLogical' tmp[581181] tmp[581188]))
    }
    {
      (581200 'move' tmp[581180](581197 '_paramFoldLogical' tmp[581181] 0))
    }
    unknown call_tmp[746446] "expr temp" "maybe param" "maybe type" "temp"
    (746449 'move' call_tmp[746446](301898 call _cond_test tmp[581180]))
    if call_tmp[746446]
    {
      unknown call_tmp[746451] "expr temp" "maybe param" "maybe type" "temp"
      (746454 'move' call_tmp[746451](301860 call _cond_test unlockBeforeHalt[301798]))
      if call_tmp[746451]
      {
        (301858 call(406318 call (partial) _leave _mt[243] this[304296]))
      }
      unknown call_tmp[746458] "expr temp" "maybe param" "maybe type" "temp"
      (746461 'move' call_tmp[746458](301885 call _cast string[26] idx[301792]))
      unknown call_tmp[746463] "maybe param" "maybe type" "temp"
      (746466 'move' call_tmp[746463](301887 call + "Index for \"list.pop\" out of bounds: " call_tmp[746458]))
      const msg[301889] "dead at end of block" "const" "insert auto destroy"
      (550023 'init var' msg[301889] call_tmp[746463])
      (301892 'end of statement')
      (301896 call boundsCheckHalt msg[301889])
      (491328 'end of statement' msg[301889])
    }
    unknown item[301906] "dead at end of block" "ref var"
    unknown call_tmp[746470] "expr temp" "maybe param" "maybe type" "temp"
    (746473 'move' call_tmp[746470](301905 call(406324 call (partial) _getRef _mt[243] this[304296]) idx[301792]))
    (550026 'move' item[301906](550025 'addr of' call_tmp[746470]))
    (301909 'end of statement')
    unknown result[301911] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746477] "expr temp" "maybe param" "maybe type" "temp"
    (746480 'move' call_tmp[746477](406330 call eltType _mt[243] this[304296]))
    (550028 'default init var' result[301911] call_tmp[746477])
    (301914 'end of statement')
    (301919 call(406334 call (partial) _move _mt[243] this[304296]) item[301906] result[301911])
    (491330 'end of statement' item[301906] result[301911])
    (301924 call(406342 call (partial) _collapse _mt[243] this[304296]) idx[301792])
    (491333 'end of statement')
    unknown call_tmp[746488] "expr temp" "maybe param" "maybe type" "temp"
    (746491 'move' call_tmp[746488](406348 call _size _mt[243] this[304296]))
    (301928 call -= call_tmp[746488] 1)
    (491334 'end of statement')
    unknown call_tmp[746495] "expr temp" "maybe param" "maybe type" "temp"
    (746498 'move' call_tmp[746495](539403 call eltType _mt[243] this[304296]))
    (539407 'move' ret[539398](539406 'coerce' result[301911] call_tmp[746495]))
    gotoReturn _end__popAtIndex[539396] _end__popAtIndex[539396]
    (491335 'end of statement' result[301911])
    label _end__popAtIndex[539396]
    (539400 return ret[539398])
  }
  { scopeless type
    (406296 call eltType _mt[243] this[304296])
  }
  function list[304122](?).pop[301939](arg _mt[304302]:_MT[238], ref arg this[304300]:list[304122](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539413] "RVV" "temp"
    (301944 call(406358 call (partial) _enter _mt[243] this[304300]))
    (491337 'end of statement')
    unknown call_tmp[746508] "expr temp" "maybe param" "maybe type" "temp"
    (746511 'move' call_tmp[746508](406369 call _size _mt[243] this[304300]))
    unknown call_tmp[746513] "expr temp" "maybe param" "maybe type" "temp"
    (746516 'move' call_tmp[746513](301950 call - call_tmp[746508] 1))
    unknown call_tmp[746518] "maybe param" "maybe type" "temp"
    (746521 'move' call_tmp[746518](301953 call(406364 call (partial) _popAtIndex _mt[243] this[304300]) call_tmp[746513]))
    unknown result[301954] "dead at end of block" "insert auto destroy"
    (550030 'init var' result[301954] call_tmp[746518])
    (301957 'end of statement')
    (301960 call(406373 call (partial) _leave _mt[243] this[304300]))
    (491338 'end of statement')
    unknown call_tmp[746527] "expr temp" "maybe param" "maybe type" "temp"
    (746530 'move' call_tmp[746527](539418 call eltType _mt[243] this[304300]))
    (539422 'move' ret[539413](539421 'coerce' result[301954] call_tmp[746527]))
    gotoReturn _end_pop[539411] _end_pop[539411]
    (491339 'end of statement' result[301954])
    label _end_pop[539411]
    (539415 return ret[539413])
  }
  { scopeless type
    (406354 call eltType _mt[243] this[304300])
  }
  function list[304122](?).pop[301974](arg _mt[304306]:_MT[238], ref arg this[304304]:list[304122](?), arg idx[301971]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539428] "RVV" "temp"
    (301979 call(406383 call (partial) _enter _mt[243] this[304304]))
    (491341 'end of statement')
    unknown call_tmp[746538] "maybe param" "maybe type" "temp"
    (746541 'move' call_tmp[746538](301985 call(406387 call (partial) _popAtIndex _mt[243] this[304304]) idx[301971]))
    unknown result[301986] "dead at end of block" "insert auto destroy"
    (550032 'init var' result[301986] call_tmp[746538])
    (301989 'end of statement')
    (301992 call(406392 call (partial) _leave _mt[243] this[304304]))
    (491342 'end of statement')
    unknown call_tmp[746547] "expr temp" "maybe param" "maybe type" "temp"
    (746550 'move' call_tmp[746547](539433 call eltType _mt[243] this[304304]))
    (539437 'move' ret[539428](539436 'coerce' result[301986] call_tmp[746547]))
    gotoReturn _end_pop[539426] _end_pop[539426]
    (491343 'end of statement' result[301986])
    label _end_pop[539426]
    (539430 return ret[539428])
  }
  { scopeless type
    (406379 call eltType _mt[243] this[304304])
  }
  function list[304122](?)._fireAllDestructors[302002](arg _mt[304310]:_MT[238], arg this[304308]:list[304122](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    {
      const tmp[302075] "const" "temp"
      unknown call_tmp[746554] "expr temp" "maybe param" "maybe type" "temp"
      (746557 'move' call_tmp[746554](302072 '_wide_get_locale' this[304308]))
      (302076 'move' tmp[302075](302073 'deref' call_tmp[746554]))
      {
        {
          unknown _indexOfInterest[302026] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302027] "expr temp" "temp"
          unknown call_tmp[746561] "expr temp" "maybe param" "maybe type" "temp"
          (746564 'move' call_tmp[746561](406409 call _size _mt[243] this[304308]))
          unknown call_tmp[746566] "expr temp" "maybe param" "maybe type" "temp"
          (746569 'move' call_tmp[746566](302043 call chpl_direct_counted_range_iter 0 call_tmp[746561]))
          (302036 'move' _iterator[302027](302034 call _getIterator call_tmp[746566]))
          Defer
          {
            {
              (302059 call _freeIterator _iterator[302027])
            }
          }
          { scopeless type
            (302048 'move' _indexOfInterest[302026](302045 call iteratorIndex _iterator[302027]))
          }
          ForLoop[302028]
          {
            unknown i[302052] "index var" "insert auto destroy"
            (491346 'end of statement')
            (302054 'move' i[302052] _indexOfInterest[302026])
            (491347 'end of statement' i[302052])
            {
              unknown item[302016] "dead at end of block" "ref var"
              unknown call_tmp[746573] "expr temp" "maybe param" "maybe type" "temp"
              (746576 'move' call_tmp[746573](302015 call(406398 call (partial) _getRef _mt[243] this[304308]) i[302052]))
              (550035 'move' item[302016](550034 'addr of' call_tmp[746573]))
              (302019 'end of statement' i[302052])
              (302024 call(406403 call (partial) _destroy _mt[243] this[304308]) item[302016])
              (491350 'end of statement' item[302016])
            }
            label _continueLabel[302031]
            _indexOfInterest[302026]
            _iterator[302027]
          }
          label _breakLabel[302032]
        }
        unknown call_tmp[746582] "expr temp" "maybe param" "maybe type" "temp"
        (746585 'move' call_tmp[746582](406414 call _size _mt[243] this[304308]))
        (302069 call = call_tmp[746582] 0)
      }
      (302079 'elided on block' 0 tmp[302075])
    }
    (539443 return _void[55])
  }
  function list[304122](?)._freeAllArrays[302090](arg _mt[304314]:_MT[238], arg this[304312]:list[304122](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746589] "expr temp" "maybe param" "maybe type" "temp"
    (746592 'move' call_tmp[746589](406419 call _arrays _mt[243] this[304312]))
    unknown call_tmp[746594] "expr temp" "maybe param" "maybe type" "temp"
    (746597 'move' call_tmp[746594](302094 call == call_tmp[746589] nil[44]))
    unknown call_tmp[746599] "expr temp" "maybe param" "maybe type" "temp"
    (746602 'move' call_tmp[746599](302098 call _cond_test call_tmp[746594]))
    if call_tmp[746599]
    {
      gotoReturn _end__freeAllArrays[539445] _end__freeAllArrays[539445]
    }
    unknown call_tmp[746606] "expr temp" "maybe param" "maybe type" "temp"
    (746609 'move' call_tmp[746606](406424 call _totalCapacity _mt[243] this[304312]))
    unknown call_tmp[746611] "expr temp" "maybe param" "maybe type" "temp"
    (746614 'move' call_tmp[746611](302107 call != call_tmp[746606] 0))
    (302110 call _sanity call_tmp[746611])
    (491355 'end of statement')
    unknown call_tmp[746618] "expr temp" "maybe param" "maybe type" "temp"
    (746621 'move' call_tmp[746618](406429 call _arrayCapacity _mt[243] this[304312]))
    unknown call_tmp[746623] "expr temp" "maybe param" "maybe type" "temp"
    (746626 'move' call_tmp[746623](302115 call != call_tmp[746618] 0))
    (302118 call _sanity call_tmp[746623])
    (491356 'end of statement')
    {
      const tmp[302241] "const" "temp"
      unknown call_tmp[746628] "expr temp" "maybe param" "maybe type" "temp"
      (746631 'move' call_tmp[746628](302238 '_wide_get_locale' this[304312]))
      (302242 'move' tmp[302241](302239 'deref' call_tmp[746628]))
      {
        {
          unknown _indexOfInterest[302173] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302174] "expr temp" "temp"
          unknown call_tmp[746635] "expr temp" "maybe param" "maybe type" "temp"
          (746638 'move' call_tmp[746635](406460 call _arrayCapacity _mt[243] this[304312]))
          unknown call_tmp[746640] "expr temp" "maybe param" "maybe type" "temp"
          (746643 'move' call_tmp[746640](302190 call chpl_direct_counted_range_iter 0 call_tmp[746635]))
          (302183 'move' _iterator[302174](302181 call _getIterator call_tmp[746640]))
          Defer
          {
            {
              (302206 call _freeIterator _iterator[302174])
            }
          }
          { scopeless type
            (302195 'move' _indexOfInterest[302173](302192 call iteratorIndex _iterator[302174]))
          }
          ForLoop[302175]
          {
            unknown i[302199] "index var" "insert auto destroy"
            (491358 'end of statement')
            (302201 'move' i[302199] _indexOfInterest[302173])
            (491359 'end of statement' i[302199])
            {
              unknown array[302132] "dead at end of block" "ref var"
              unknown call_tmp[746647] "expr temp" "maybe param" "maybe type" "temp"
              (746650 'move' call_tmp[746647](302131 call(406435 call (partial) _arrays _mt[243] this[304312]) i[302199]))
              (550038 'move' array[302132](550037 'addr of' call_tmp[746647]))
              (302135 'end of statement')
              unknown call_tmp[746652] "expr temp" "maybe param" "maybe type" "temp"
              (746655 'move' call_tmp[746652](302139 call == array[302132] nil[44]))
              unknown call_tmp[746657] "expr temp" "maybe param" "maybe type" "temp"
              (746660 'move' call_tmp[746657](302144 call _cond_test call_tmp[746652]))
              if call_tmp[746657]
              {
                continue _continueLabel[302178] _continueLabel[302178]
              }
              unknown call_tmp[746664] "maybe param" "maybe type" "temp"
              (746667 'move' call_tmp[746664](302152 call(406441 call (partial) _getArrayCapacity _mt[243] this[304312]) i[302199]))
              const capacity[302153] "dead at end of block" "const" "insert auto destroy"
              (550040 'init var' capacity[302153] call_tmp[746664])
              (302156 'end of statement' i[302199] i[302199])
              unknown call_tmp[746671] "expr temp" "maybe param" "maybe type" "temp"
              (746674 'move' call_tmp[746671](406447 call _totalCapacity _mt[243] this[304312]))
              (302159 call -= call_tmp[746671] capacity[302153])
              (491363 'end of statement' capacity[302153])
              (302166 call(406452 call (partial) _freeArray _mt[243] this[304312]) array[302132] capacity[302153])
              (491365 'end of statement' array[302132] capacity[302153])
              (302170 call = array[302132] nil[44])
              (491368 'end of statement' array[302132])
            }
            label _continueLabel[302178]
            _indexOfInterest[302173]
            _iterator[302174]
          }
          label _breakLabel[302179]
        }
        unknown call_tmp[746680] "expr temp" "maybe param" "maybe type" "temp"
        (746683 'move' call_tmp[746680](406465 call _totalCapacity _mt[243] this[304312]))
        unknown call_tmp[746685] "expr temp" "maybe param" "maybe type" "temp"
        (746688 'move' call_tmp[746685](302217 call == call_tmp[746680] 0))
        (302220 call _sanity call_tmp[746685])
        (491370 'end of statement')
        unknown call_tmp[746694] "expr temp" "maybe param" "maybe type" "temp"
        (746697 'move' call_tmp[746694](406474 call _arrays _mt[243] this[304312]))
        unknown call_tmp[746701] "expr temp" "maybe param" "maybe type" "temp"
        (746704 'move' call_tmp[746701](406479 call _arrayCapacity _mt[243] this[304312]))
        (302226 call(406469 call (partial) _freeBlockArray _mt[243] this[304312]) call_tmp[746694] call_tmp[746701])
        (491371 'end of statement')
        unknown call_tmp[746708] "expr temp" "maybe param" "maybe type" "temp"
        (746711 'move' call_tmp[746708](406484 call _arrays _mt[243] this[304312]))
        (302230 call = call_tmp[746708] nil[44])
        (491372 'end of statement')
        unknown call_tmp[746715] "expr temp" "maybe param" "maybe type" "temp"
        (746718 'move' call_tmp[746715](406489 call _size _mt[243] this[304312]))
        (302235 call = call_tmp[746715] 0)
      }
      (302245 'elided on block' 0 tmp[302241])
    }
    label _end__freeAllArrays[539445]
    (539447 return _void[55])
  }
  function list[304122](?).clear[302255](arg _mt[304318]:_MT[238], ref arg this[304316]:list[304122](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    {
      const tmp[302306] "const" "temp"
      unknown call_tmp[746720] "expr temp" "maybe param" "maybe type" "temp"
      (746723 'move' call_tmp[746720](302303 '_wide_get_locale' this[304316]))
      (302307 'move' tmp[302306](302304 'deref' call_tmp[746720]))
      {
        (302260 call(406494 call (partial) _enter _mt[243] this[304316]))
        (491375 'end of statement')
        (302265 call(406498 call (partial) _fireAllDestructors _mt[243] this[304316]))
        (491376 'end of statement')
        (302269 call(406502 call (partial) _freeAllArrays _mt[243] this[304316]))
        (491377 'end of statement')
        unknown call_tmp[746733] "expr temp" "maybe param" "maybe type" "temp"
        (746736 'move' call_tmp[746733](406507 call _totalCapacity _mt[243] this[304316]))
        unknown call_tmp[746738] "expr temp" "maybe param" "maybe type" "temp"
        (746741 'move' call_tmp[746738](302274 call == call_tmp[746733] 0))
        (302277 call _sanity call_tmp[746738])
        (491378 'end of statement')
        unknown call_tmp[746745] "expr temp" "maybe param" "maybe type" "temp"
        (746748 'move' call_tmp[746745](406512 call _size _mt[243] this[304316]))
        unknown call_tmp[746750] "expr temp" "maybe param" "maybe type" "temp"
        (746753 'move' call_tmp[746750](302282 call == call_tmp[746745] 0))
        (302285 call _sanity call_tmp[746750])
        (491379 'end of statement')
        unknown call_tmp[746757] "expr temp" "maybe param" "maybe type" "temp"
        (746760 'move' call_tmp[746757](406517 call _arrays _mt[243] this[304316]))
        unknown call_tmp[746762] "expr temp" "maybe param" "maybe type" "temp"
        (746765 'move' call_tmp[746762](302290 call == call_tmp[746757] nil[44]))
        (302293 call _sanity call_tmp[746762])
        (491380 'end of statement')
        (302297 call(406521 call (partial) _firstTimeInitializeArrays _mt[243] this[304316]))
        (491381 'end of statement')
        (302301 call(406525 call (partial) _leave _mt[243] this[304316]))
      }
      (302310 'elided on block' 0 tmp[302306])
    }
    (539451 return _void[55])
  }
  function list[304122](?).indexOf[302323](arg _mt[304322]:_MT[238], const arg this[304320]:list[304122](?), arg x[302320] :
  (406530 call eltType _mt[243] this[304320]), arg start[302327]:int(64)[13] =
  0, arg end[302335]:int(64)[13] =
  (302333 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539455] "RVV" "temp"
    unknown call_tmp[746773] "expr temp" "maybe param" "maybe type" "temp"
    (746776 'move' call_tmp[746773](302451 call _cond_test 1))
    if call_tmp[746773]
    {
      const msg[302358] "dead at end of block" "const" "insert auto destroy"
      (550042 'init var' msg[302358] " index for \"list.indexOf\" out of bounds: ")
      (302361 'end of statement')
      unknown tmp[435043] "maybe param" "temp"
      (435054 'move' tmp[435043](302365 call >= end[302335] 0))
      unknown call_tmp[746778] "expr temp" "maybe param" "maybe type" "temp"
      (746781 'move' call_tmp[746778](435056 call _cond_invalid tmp[435043]))
      if call_tmp[746778]
      {
        (435059 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581207] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581208] "maybe param" "temp"
      unknown call_tmp[746783] "expr temp" "maybe param" "maybe type" "temp"
      (746786 'move' call_tmp[746783](435044 call isTrue tmp[435043]))
      (581213 'move' tmp[581208](581211 call _cond_test call_tmp[746783]))
      if tmp[581208]
      {
        unknown tmp[581215] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746790] "expr temp" "maybe param" "maybe type" "temp"
        (746793 'move' call_tmp[746790](302370 call(406536 call (partial) _withinBounds _mt[243] this[304320]) end[302335]))
        unknown call_tmp[746795] "expr temp" "maybe param" "maybe type" "temp"
        (746798 'move' call_tmp[746795](302371 call ! call_tmp[746790]))
        (581217 'move' tmp[581215](435047 call isTrue call_tmp[746795]))
        (581222 'move' tmp[581207](581219 '_paramFoldLogical' tmp[581208] tmp[581215]))
      }
      {
        (581227 'move' tmp[581207](581224 '_paramFoldLogical' tmp[581208] 0))
      }
      unknown call_tmp[746800] "expr temp" "maybe param" "maybe type" "temp"
      (746803 'move' call_tmp[746800](302405 call _cond_test tmp[581207]))
      if call_tmp[746800]
      {
        unknown call_tmp[746805] "expr temp" "maybe param" "maybe type" "temp"
        (746808 'move' call_tmp[746805](302394 call + "End" msg[302358]))
        unknown call_tmp[746810] "expr temp" "maybe param" "maybe type" "temp"
        (746813 'move' call_tmp[746810](302398 call _cast string[26] end[302335]))
        unknown call_tmp[746815] "expr temp" "maybe param" "maybe type" "temp"
        (746818 'move' call_tmp[746815](302400 call + call_tmp[746805] call_tmp[746810]))
        (302403 call boundsCheckHalt call_tmp[746815])
        (491384 'end of statement' msg[302358])
      }
      unknown call_tmp[746822] "expr temp" "maybe param" "maybe type" "temp"
      (746825 'move' call_tmp[746822](302413 call(406543 call (partial) _withinBounds _mt[243] this[304320]) start[302327]))
      unknown call_tmp[746827] "expr temp" "maybe param" "maybe type" "temp"
      (746830 'move' call_tmp[746827](302414 call ! call_tmp[746822]))
      unknown call_tmp[746832] "expr temp" "maybe param" "maybe type" "temp"
      (746835 'move' call_tmp[746832](302446 call _cond_test call_tmp[746827]))
      if call_tmp[746832]
      {
        unknown call_tmp[746837] "expr temp" "maybe param" "maybe type" "temp"
        (746840 'move' call_tmp[746837](302435 call + "Start" msg[302358]))
        unknown call_tmp[746842] "expr temp" "maybe param" "maybe type" "temp"
        (746845 'move' call_tmp[746842](302439 call _cast string[26] start[302327]))
        unknown call_tmp[746847] "expr temp" "maybe param" "maybe type" "temp"
        (746850 'move' call_tmp[746847](302441 call + call_tmp[746837] call_tmp[746842]))
        (302444 call boundsCheckHalt call_tmp[746847])
        (491386 'end of statement' msg[302358])
      }
    }
    unknown call_tmp[746852] "maybe param" "maybe type" "temp"
    (746855 'move' call_tmp[746852](302457 call - 1))
    unknown error[302459] "dead at end of block" "param"
    (550044 'init var' error[302459] call_tmp[746852])
    (302462 'end of statement')
    unknown tmp[435064] "maybe param" "temp"
    (435075 'move' tmp[435064](302465 call >= end[302335] 0))
    unknown call_tmp[746857] "expr temp" "maybe param" "maybe type" "temp"
    (746860 'move' call_tmp[746857](435077 call _cond_invalid tmp[435064]))
    if call_tmp[746857]
    {
      (435080 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581234] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581235] "maybe param" "temp"
    unknown call_tmp[746862] "expr temp" "maybe param" "maybe type" "temp"
    (746865 'move' call_tmp[746862](435065 call isTrue tmp[435064]))
    (581240 'move' tmp[581235](581238 call _cond_test call_tmp[746862]))
    if tmp[581235]
    {
      unknown tmp[581242] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746867] "expr temp" "maybe param" "maybe type" "temp"
      (746870 'move' call_tmp[746867](302469 call < end[302335] start[302327]))
      (581244 'move' tmp[581242](435068 call isTrue call_tmp[746867]))
      (581249 'move' tmp[581234](581246 '_paramFoldLogical' tmp[581235] tmp[581242]))
    }
    {
      (581254 'move' tmp[581234](581251 '_paramFoldLogical' tmp[581235] 0))
    }
    unknown call_tmp[746872] "expr temp" "maybe param" "maybe type" "temp"
    (746875 'move' call_tmp[746872](302476 call _cond_test tmp[581234]))
    if call_tmp[746872]
    {
      (539461 'move' ret[539455](539460 'coerce' error[302459] int(64)[13]))
      gotoReturn _end_indexOf[539453] _end_indexOf[539453]
    }
    unknown result[302482] "dead at end of block" "insert auto destroy"
    (550046 'init var' result[302482] error[302459])
    (302485 'end of statement')
    {
      const tmp[302578] "const" "temp"
      unknown call_tmp[746877] "expr temp" "maybe param" "maybe type" "temp"
      (746880 'move' call_tmp[746877](302575 '_wide_get_locale' this[304320]))
      (302579 'move' tmp[302578](302576 'deref' call_tmp[746877]))
      {
        (302489 call(406556 call (partial) _enter _mt[243] this[304320]))
        (491390 'end of statement')
        const stop[302504] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581261] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581262] "maybe param" "temp"
        unknown call_tmp[746884] "expr temp" "maybe param" "maybe type" "temp"
        (746887 'move' call_tmp[746884](302494 call < end[302335] 0))
        (581267 'move' tmp[581262](581265 call _cond_test call_tmp[746884]))
        if tmp[581262]
        {
          unknown tmp[581269] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[746891] "expr temp" "maybe param" "maybe type" "temp"
          (746894 'move' call_tmp[746891](406562 call _size _mt[243] this[304320]))
          (581271 'move' tmp[581269](302498 call - call_tmp[746891] 1))
          (581276 'move' tmp[581261](581273 '_paramFoldLogical' tmp[581262] tmp[581269]))
        }
        {
          (581281 'move' tmp[581261](581278 '_paramFoldLogical' tmp[581262] end[302335]))
        }
        (550048 'init var' stop[302504] tmp[581261])
        (302507 'end of statement')
        {
          unknown _indexOfInterest[302533] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302534] "expr temp" "temp"
          unknown call_tmp[746896] "expr temp" "maybe param" "maybe type" "temp"
          (746899 'move' call_tmp[746896](302548 call chpl_direct_range_iter start[302327] stop[302504] 1))
          (302543 'move' _iterator[302534](302541 call _getIterator call_tmp[746896]))
          Defer
          {
            {
              (302564 call _freeIterator _iterator[302534])
            }
          }
          { scopeless type
            (302553 'move' _indexOfInterest[302533](302550 call iteratorIndex _iterator[302534]))
          }
          ForLoop[302535]
          {
            unknown i[302557] "index var" "insert auto destroy"
            (491392 'end of statement')
            (302559 'move' i[302557] _indexOfInterest[302533])
            (491393 'end of statement' i[302557])
            unknown call_tmp[746903] "expr temp" "maybe param" "maybe type" "temp"
            (746906 'move' call_tmp[746903](302517 call(406568 call (partial) _getRef _mt[243] this[304320]) i[302557]))
            unknown call_tmp[746908] "expr temp" "maybe param" "maybe type" "temp"
            (746911 'move' call_tmp[746908](302518 call == x[302320] call_tmp[746903]))
            unknown call_tmp[746913] "expr temp" "maybe param" "maybe type" "temp"
            (746916 'move' call_tmp[746913](302529 call _cond_test call_tmp[746908]))
            if call_tmp[746913]
            {
              (302522 call = result[302482] i[302557])
              (491395 'end of statement' result[302482] i[302557])
              break _breakLabel[302539] _breakLabel[302539]
            }
            label _continueLabel[302538]
            _indexOfInterest[302533]
            _iterator[302534]
          }
          label _breakLabel[302539]
        }
        (302573 call(406577 call (partial) _leave _mt[243] this[304320]))
      }
      (302582 'elided on block' 0 tmp[302578])
    }
    (539467 'move' ret[539455](539466 'coerce' result[302482] int(64)[13]))
    gotoReturn _end_indexOf[539453] _end_indexOf[539453]
    (491399 'end of statement' result[302482])
    label _end_indexOf[539453]
    (539457 return ret[539455])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?).count[302598](arg _mt[304326]:_MT[238], const arg this[304324]:list[304122](?), arg x[302595] :
  (406583 call eltType _mt[243] this[304324])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539473] "RVV" "temp"
    unknown result[302602] "dead at end of block" "insert auto destroy"
    (550050 'init var' result[302602] 0)
    (302605 'end of statement')
    {
      const tmp[302679] "const" "temp"
      unknown call_tmp[746922] "expr temp" "maybe param" "maybe type" "temp"
      (746925 'move' call_tmp[746922](302676 '_wide_get_locale' this[304324]))
      (302680 'move' tmp[302679](302677 'deref' call_tmp[746922]))
      {
        (302610 call(406588 call (partial) _enter _mt[243] this[304324]))
        (491401 'end of statement')
        unknown count[302614] "dead at end of block" "insert auto destroy"
        (550052 'init var' count[302614] 0)
        (302617 'end of statement')
        {
          unknown _indexOfInterest[302634] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302635] "expr temp" "temp"
          (302644 'move' _iterator[302635](302642 call _getIterator this[304324]))
          Defer
          {
            {
              (302660 call _freeIterator _iterator[302635])
            }
          }
          { scopeless type
            (302649 'move' _indexOfInterest[302634](302646 call iteratorIndex _iterator[302635]))
          }
          ForLoop[302636]
          {
            unknown item[302653] "index var" "insert auto destroy"
            (491403 'end of statement')
            (302655 'move' item[302653] _indexOfInterest[302634])
            (491404 'end of statement' item[302653])
            unknown call_tmp[746929] "expr temp" "maybe param" "maybe type" "temp"
            (746932 'move' call_tmp[746929](302622 call == x[302595] item[302653]))
            unknown call_tmp[746934] "expr temp" "maybe param" "maybe type" "temp"
            (746937 'move' call_tmp[746934](302629 call _cond_test call_tmp[746929]))
            if call_tmp[746934]
            {
              (302626 call += count[302614] 1)
              (491406 'end of statement' count[302614])
            }
            label _continueLabel[302639]
            _indexOfInterest[302634]
            _iterator[302635]
          }
          label _breakLabel[302640]
        }
        (302669 call = result[302602] count[302614])
        (491408 'end of statement' result[302602] count[302614])
        (302674 call(406598 call (partial) _leave _mt[243] this[304324]))
      }
      (302683 'elided on block' 0 tmp[302679])
    }
    (539479 'move' ret[539473](539478 'coerce' result[302602] int(64)[13]))
    gotoReturn _end_count[539471] _end_count[539471]
    (491412 'end of statement' result[302602])
    label _end_count[539471]
    (539475 return ret[539473])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304122](?).sort[302705](arg _mt[304330]:_MT[238], ref arg this[304328]:list[304122](?), arg comparator[302701]:_any[178](?) :
  defaultComparator[267894] =
  defaultComparator[267894]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    {
      const tmp[302831] "const" "temp"
      unknown call_tmp[746941] "expr temp" "maybe param" "maybe type" "temp"
      (746944 'move' call_tmp[746941](302828 '_wide_get_locale' this[304328]))
      (302832 'move' tmp[302831](302829 'deref' call_tmp[746941]))
      {
        (302710 call(406604 call (partial) _enter _mt[243] this[304328]))
        (491414 'end of statement')
        unknown call_tmp[746950] "expr temp" "maybe param" "maybe type" "temp"
        (746953 'move' call_tmp[746950](406609 call _size _mt[243] this[304328]))
        unknown call_tmp[746955] "expr temp" "maybe param" "maybe type" "temp"
        (746958 'move' call_tmp[746955](302715 call > call_tmp[746950] 1))
        unknown call_tmp[746960] "expr temp" "maybe param" "maybe type" "temp"
        (746963 'move' call_tmp[746960](302820 call _cond_test call_tmp[746955]))
        if call_tmp[746960]
        {
          unknown arr[302729] "dead at end of block" "insert auto destroy"
          unknown call_tmp[746965] "expr temp" "maybe param" "maybe type" "temp"
          (746968 'move' call_tmp[746965](302718 call chpl_build_low_bounded_range 0))
          unknown call_tmp[746972] "expr temp" "maybe param" "maybe type" "temp"
          (746975 'move' call_tmp[746972](406614 call _size _mt[243] this[304328]))
          unknown call_tmp[746977] "expr temp" "maybe param" "maybe type" "temp"
          (746980 'move' call_tmp[746977](302721 call # call_tmp[746965] call_tmp[746972]))
          unknown call_tmp[746982] "expr temp" "maybe param" "maybe type" "temp"
          (746985 'move' call_tmp[746982](302725 call chpl__ensureDomainExpr call_tmp[746977]))
          unknown call_tmp[746989] "expr temp" "maybe param" "maybe type" "temp"
          (746992 'move' call_tmp[746989](406619 call eltType _mt[243] this[304328]))
          unknown call_tmp[746994] "expr temp" "maybe param" "maybe type" "temp"
          (746997 'move' call_tmp[746994](302727 call chpl__buildArrayRuntimeType call_tmp[746982] call_tmp[746989]))
          (550054 'default init var' arr[302729] call_tmp[746994])
          (302732 'end of statement')
          {
            unknown _indexOfInterest[302752] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302753] "expr temp" "temp"
            unknown call_tmp[747001] "expr temp" "maybe param" "maybe type" "temp"
            (747004 'move' call_tmp[747001](406628 call _size _mt[243] this[304328]))
            unknown call_tmp[747006] "expr temp" "maybe param" "maybe type" "temp"
            (747009 'move' call_tmp[747006](302769 call chpl_direct_counted_range_iter 0 call_tmp[747001]))
            (302762 'move' _iterator[302753](302760 call _getIterator call_tmp[747006]))
            Defer
            {
              {
                (302785 call _freeIterator _iterator[302753])
              }
            }
            { scopeless type
              (302774 'move' _indexOfInterest[302752](302771 call iteratorIndex _iterator[302753]))
            }
            ForLoop[302754]
            {
              unknown i[302778] "index var" "insert auto destroy"
              (491416 'end of statement')
              (302780 'move' i[302778] _indexOfInterest[302752])
              (491417 'end of statement' i[302778])
              unknown call_tmp[747011] "expr temp" "maybe param" "maybe type" "temp"
              (747014 'move' call_tmp[747011](302744 call arr[302729] i[302778]))
              unknown call_tmp[747016] "expr temp" "maybe param" "maybe type" "temp"
              (747019 'move' call_tmp[747016](302748 call this[304328] i[302778]))
              (302749 call = call_tmp[747011] call_tmp[747016])
              (491419 'end of statement' arr[302729] i[302778] i[302778])
              label _continueLabel[302757]
              _indexOfInterest[302752]
              _iterator[302753]
            }
            label _breakLabel[302758]
          }
          (302801 call sort module=[255] Sort[267885] arr[302729] comparator[302701])
          (491423 'end of statement' arr[302729])
          (302805 call(406634 call (partial) _fireAllDestructors _mt[243] this[304328]))
          (491425 'end of statement')
          (302809 call(406638 call (partial) _freeAllArrays _mt[243] this[304328]))
          (491426 'end of statement')
          (302813 call(406642 call (partial) _firstTimeInitializeArrays _mt[243] this[304328]))
          (491427 'end of statement')
          (302818 call(406646 call (partial) _extendGeneric _mt[243] this[304328]) arr[302729])
          (491428 'end of statement' arr[302729])
          (365007 'referenced modules list' Sort[267885])
        }
        (302826 call(406651 call (partial) _leave _mt[243] this[304328]))
      }
      (302835 'elided on block' 0 tmp[302831])
    }
    (539485 return _void[55])
  }
  function list[304122](?).this[302850](arg _mt[304334]:_MT[238], ref arg this[304332]:list[304122](?), arg i[302847]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539489] "RVV" "temp"
    unknown tmp[435085] "maybe param" "temp"
    (435096 'move' tmp[435085] 1)
    unknown call_tmp[747031] "expr temp" "maybe param" "maybe type" "temp"
    (747034 'move' call_tmp[747031](435098 call _cond_invalid tmp[435085]))
    if call_tmp[747031]
    {
      (435101 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581288] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581289] "maybe param" "temp"
    unknown call_tmp[747036] "expr temp" "maybe param" "maybe type" "temp"
    (747039 'move' call_tmp[747036](435086 call isTrue tmp[435085]))
    (581294 'move' tmp[581289](581292 call _cond_test call_tmp[747036]))
    if tmp[581289]
    {
      unknown tmp[581296] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747043] "expr temp" "maybe param" "maybe type" "temp"
      (747046 'move' call_tmp[747043](302856 call(406656 call (partial) _withinBounds _mt[243] this[304332]) i[302847]))
      unknown call_tmp[747048] "expr temp" "maybe param" "maybe type" "temp"
      (747051 'move' call_tmp[747048](302857 call ! call_tmp[747043]))
      (581298 'move' tmp[581296](435089 call isTrue call_tmp[747048]))
      (581303 'move' tmp[581288](581300 '_paramFoldLogical' tmp[581289] tmp[581296]))
    }
    {
      (581308 'move' tmp[581288](581305 '_paramFoldLogical' tmp[581289] 0))
    }
    unknown call_tmp[747053] "expr temp" "maybe param" "maybe type" "temp"
    (747056 'move' call_tmp[747053](302894 call _cond_test tmp[581288]))
    if call_tmp[747053]
    {
      unknown call_tmp[747058] "expr temp" "maybe param" "maybe type" "temp"
      (747061 'move' call_tmp[747058](302880 call _cast string[26] i[302847]))
      unknown call_tmp[747063] "maybe param" "maybe type" "temp"
      (747066 'move' call_tmp[747063](302882 call + "Invalid list index: " call_tmp[747058]))
      const msg[302884] "dead at end of block" "const" "insert auto destroy"
      (550056 'init var' msg[302884] call_tmp[747063])
      (302887 'end of statement')
      (302892 call boundsCheckHalt msg[302884])
      (491433 'end of statement' msg[302884])
    }
    unknown result[302903] "dead at end of block" "ref var"
    unknown call_tmp[747070] "expr temp" "maybe param" "maybe type" "temp"
    (747073 'move' call_tmp[747070](302902 call(406663 call (partial) _getRef _mt[243] this[304332]) i[302847]))
    (550059 'move' result[302903](550058 'addr of' call_tmp[747070]))
    (302906 'end of statement')
    (539494 'move' ret[539489](539493 'addr of' result[302903]))
    gotoReturn _end_this[539487] _end_this[539487]
    (491435 'end of statement' result[302903])
    label _end_this[539487]
    (539491 return ret[539489])
  }
  function list[304122](?).this[302918](arg _mt[304338]:_MT[238], const  ref arg this[304336]:list[304122](?), arg i[302915]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539500] "RVV" "temp"
    unknown tmp[435106] "maybe param" "temp"
    (435117 'move' tmp[435106] 1)
    unknown call_tmp[747075] "expr temp" "maybe param" "maybe type" "temp"
    (747078 'move' call_tmp[747075](435119 call _cond_invalid tmp[435106]))
    if call_tmp[747075]
    {
      (435122 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581315] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581316] "maybe param" "temp"
    unknown call_tmp[747080] "expr temp" "maybe param" "maybe type" "temp"
    (747083 'move' call_tmp[747080](435107 call isTrue tmp[435106]))
    (581321 'move' tmp[581316](581319 call _cond_test call_tmp[747080]))
    if tmp[581316]
    {
      unknown tmp[581323] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747087] "expr temp" "maybe param" "maybe type" "temp"
      (747090 'move' call_tmp[747087](302924 call(406670 call (partial) _withinBounds _mt[243] this[304336]) i[302915]))
      unknown call_tmp[747092] "expr temp" "maybe param" "maybe type" "temp"
      (747095 'move' call_tmp[747092](302925 call ! call_tmp[747087]))
      (581325 'move' tmp[581323](435110 call isTrue call_tmp[747092]))
      (581330 'move' tmp[581315](581327 '_paramFoldLogical' tmp[581316] tmp[581323]))
    }
    {
      (581335 'move' tmp[581315](581332 '_paramFoldLogical' tmp[581316] 0))
    }
    unknown call_tmp[747097] "expr temp" "maybe param" "maybe type" "temp"
    (747100 'move' call_tmp[747097](302946 call _cond_test tmp[581315]))
    if call_tmp[747097]
    {
      unknown call_tmp[747102] "expr temp" "maybe param" "maybe type" "temp"
      (747105 'move' call_tmp[747102](302932 call _cast string[26] i[302915]))
      unknown call_tmp[747107] "maybe param" "maybe type" "temp"
      (747110 'move' call_tmp[747107](302934 call + "Invalid list index: " call_tmp[747102]))
      const msg[302936] "dead at end of block" "const" "insert auto destroy"
      (550061 'init var' msg[302936] call_tmp[747107])
      (302939 'end of statement')
      (302944 call halt msg[302936])
      (491438 'end of statement' msg[302936])
    }
    const result[302955] "dead at end of block" "const" "ref var"
    unknown call_tmp[747114] "expr temp" "maybe param" "maybe type" "temp"
    (747117 'move' call_tmp[747114](302954 call(406677 call (partial) _getRef _mt[243] this[304336]) i[302915]))
    (550064 'move' result[302955](550063 'addr of' call_tmp[747114]))
    (302958 'end of statement')
    (539505 'move' ret[539500](539504 'addr of' result[302955]))
    gotoReturn _end_this[539498] _end_this[539498]
    (491440 'end of statement' result[302955])
    label _end_this[539498]
    (539502 return ret[539500])
  }
  function list[304122](?).these[302966](arg _mt[304342]:_MT[238], arg this[304340]:list[304122](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539511] "RVV" "temp"
    {
      unknown _indexOfInterest[302987] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[302988] "expr temp" "temp"
      unknown call_tmp[747121] "expr temp" "maybe param" "maybe type" "temp"
      (747124 'move' call_tmp[747121](406690 call _size _mt[243] this[304340]))
      unknown call_tmp[747126] "expr temp" "maybe param" "maybe type" "temp"
      (747129 'move' call_tmp[747126](303004 call chpl_direct_counted_range_iter 0 call_tmp[747121]))
      (302997 'move' _iterator[302988](302995 call _getIterator call_tmp[747126]))
      Defer
      {
        {
          (303020 call _freeIterator _iterator[302988])
        }
      }
      { scopeless type
        (303009 'move' _indexOfInterest[302987](303006 call iteratorIndex _iterator[302988]))
      }
      ForLoop[302989]
      {
        unknown i[303013] "index var" "insert auto destroy"
        (491443 'end of statement')
        (303015 'move' i[303013] _indexOfInterest[302987])
        (491444 'end of statement' i[303013])
        {
          unknown result[302979] "dead at end of block" "ref var"
          unknown call_tmp[747133] "expr temp" "maybe param" "maybe type" "temp"
          (747136 'move' call_tmp[747133](302978 call(406683 call (partial) _getRef _mt[243] this[304340]) i[303013]))
          (550067 'move' result[302979](550066 'addr of' call_tmp[747133]))
          (302982 'end of statement' i[303013])
          unknown yret[539515] "YVV" "temp"
          (539518 'move' yret[539515](539517 'addr of' result[302979]))
          (539520 yield yret[539515])
          (491447 'end of statement' result[302979])
        }
        label _continueLabel[302992]
        _indexOfInterest[302987]
        _iterator[302988]
      }
      label _breakLabel[302993]
    }
    (539513 return ret[539511])
  }
  function list[304122](?).these[303036](arg _mt[304346]:_MT[238], arg this[304344]:list[304122](?), param arg tag[303033]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539524] "RVV" "temp"
    unknown call_tmp[747140] "maybe param" "maybe type" "temp"
    (747143 'move' call_tmp[747140](406697 call _size _mt[243] this[304344]))
    const osz[303046] "dead at end of block" "const" "insert auto destroy"
    (550069 'init var' osz[303046] call_tmp[747140])
    (303049 'end of statement')
    const minChunkSize[303052] "dead at end of block" "const" "insert auto destroy"
    (550071 'init var' minChunkSize[303052] 64)
    (303055 'end of statement')
    unknown call_tmp[747145] "maybe param" "maybe type" "temp"
    (747148 'move' call_tmp[747145](303058 call <= osz[303046] minChunkSize[303052]))
    const hasOneChunk[303060] "dead at end of block" "const" "insert auto destroy"
    (550073 'init var' hasOneChunk[303060] call_tmp[747145])
    (303063 'end of statement')
    const numTasks[303073] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581342] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581343] "maybe param" "temp"
    (581348 'move' tmp[581343](581346 call _cond_test hasOneChunk[303060]))
    if tmp[581343]
    {
      (581353 'move' tmp[581342](581350 '_paramFoldLogical' tmp[581343] 1))
    }
    {
      unknown tmp[581355] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747150] "expr temp" "maybe param" "maybe type" "temp"
      (747153 'move' call_tmp[747150](365013 call here[90439]))
      (581357 'move' tmp[581355](303067 call maxTaskPar _mt[243] call_tmp[747150]))
      (581362 'move' tmp[581342](581359 '_paramFoldLogical' tmp[581343] tmp[581355]))
    }
    (550075 'init var' numTasks[303073] tmp[581342])
    (303076 'end of statement')
    unknown call_tmp[747157] "expr temp" "maybe param" "maybe type" "temp"
    (747160 'move' call_tmp[747157](303080 call / osz[303046] numTasks[303073]))
    unknown call_tmp[747162] "expr temp" "maybe param" "maybe type" "temp"
    (747165 'move' call_tmp[747162](303083 call floor call_tmp[747157]))
    unknown call_tmp[747167] "maybe param" "maybe type" "temp"
    (747170 'move' call_tmp[747167](303085 call _cast int(64)[13] call_tmp[747162]))
    const chunkSize[303087] "dead at end of block" "const" "insert auto destroy"
    (550077 'init var' chunkSize[303087] call_tmp[747167])
    (303090 'end of statement')
    unknown call_tmp[747172] "expr temp" "maybe param" "maybe type" "temp"
    (747175 'move' call_tmp[747172](303094 call * chunkSize[303087] numTasks[303073]))
    unknown call_tmp[747177] "maybe param" "maybe type" "temp"
    (747180 'move' call_tmp[747177](303096 call - osz[303046] call_tmp[747172]))
    const trailing[303098] "dead at end of block" "const" "insert auto destroy"
    (550079 'init var' trailing[303098] call_tmp[747177])
    (303101 'end of statement' osz[303046] minChunkSize[303052] hasOneChunk[303060] osz[303046] numTasks[303073] osz[303046] chunkSize[303087] numTasks[303073])
    {
      unknown tmpIter[303165] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747182] "expr temp" "maybe param" "maybe type" "temp"
      (747185 'move' call_tmp[747182](303104 call chpl_build_low_bounded_range 0))
      (303168 'move' tmpIter[303165](303107 call # call_tmp[747182] numTasks[303073]))
      unknown isRngDomArr[303354] "maybe param" "temp"
      unknown tmp[435127] "maybe param" "temp"
      (435138 'move' tmp[435127](303356 call isBoundedRange tmpIter[303165]))
      unknown call_tmp[747187] "expr temp" "maybe param" "maybe type" "temp"
      (747190 'move' call_tmp[747187](435140 call _cond_invalid tmp[435127]))
      if call_tmp[747187]
      {
        (435143 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581396] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581397] "maybe param" "temp"
      unknown call_tmp[747192] "expr temp" "maybe param" "maybe type" "temp"
      (747195 'move' call_tmp[747192](435128 call isTrue tmp[435127]))
      (581402 'move' tmp[581397](581400 call _cond_test call_tmp[747192]))
      if tmp[581397]
      {
        (581407 'move' tmp[581396](581404 '_paramFoldLogical' tmp[581397] 1))
      }
      {
        unknown tmp[435148] "maybe param" "temp"
        (435159 'move' tmp[435148](303359 call isDomain tmpIter[303165]))
        unknown call_tmp[747197] "expr temp" "maybe param" "maybe type" "temp"
        (747200 'move' call_tmp[747197](435161 call _cond_invalid tmp[435148]))
        if call_tmp[747197]
        {
          (435164 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581369] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581370] "maybe param" "temp"
        unknown call_tmp[747202] "expr temp" "maybe param" "maybe type" "temp"
        (747205 'move' call_tmp[747202](435149 call isTrue tmp[435148]))
        (581375 'move' tmp[581370](581373 call _cond_test call_tmp[747202]))
        if tmp[581370]
        {
          (581380 'move' tmp[581369](581377 '_paramFoldLogical' tmp[581370] 1))
        }
        {
          unknown tmp[581382] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747207] "expr temp" "maybe param" "maybe type" "temp"
          (747210 'move' call_tmp[747207](303362 call isArray tmpIter[303165]))
          (581384 'move' tmp[581382](435153 call isTrue call_tmp[747207]))
          (581389 'move' tmp[581369](581386 '_paramFoldLogical' tmp[581370] tmp[581382]))
        }
        unknown tmp[581409] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581411 'move' tmp[581409](435132 call isTrue tmp[581369]))
        (581416 'move' tmp[581396](581413 '_paramFoldLogical' tmp[581397] tmp[581409]))
      }
      (303369 'move' isRngDomArr[303354] tmp[581396])
      if isRngDomArr[303354]
      {
        const _coforallCount[303221] "const" "end count" "temp"
        (303290 'move' _coforallCount[303221](303287 call _endCountAlloc 1))
        unknown numTasks[303222] "temp"
        (303274 'move' numTasks[303222](303270 call size _mt[243] tmpIter[303165]))
        (303265 call _upEndCount _coforallCount[303221] 1 numTasks[303222])
        (491458 'end of statement')
        (303262 call chpl_resetTaskSpawn numTasks[303222])
        (491459 'end of statement')
        unknown _indexOfInterest[303229] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303230] "expr temp" "temp"
        (303239 'move' _iterator[303230](303237 call _getIterator tmpIter[303165]))
        Defer
        {
          {
            (303255 call _freeIterator _iterator[303230])
          }
        }
        { scopeless type
          (303244 'move' _indexOfInterest[303229](303241 call iteratorIndex _iterator[303230]))
        }
        ForLoop[303231]
        {
          unknown tid[303248] "coforall index var" "index var" "insert auto destroy"
          (491461 'end of statement')
          (303250 'move' tid[303248] _indexOfInterest[303229])
          (491462 'end of statement' tid[303248])
          (934462 call coforall_fn[934460] chunkSize[303087] trailing[303098])
          function coforall_fn[934460](arg chunkSize[934467], arg trailing[934470]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747216] "maybe param" "maybe type" "temp"
              (747219 'move' call_tmp[747216](303174 call(406722 call (partial) _computeChunk _mt[243] this[304344]) tid[303248] chunkSize[934467] trailing[934470]))
              unknown chunk[303172] "dead at end of block" "insert auto destroy"
              (550081 'init var' chunk[303172] call_tmp[747216])
              (303179 'end of statement' tid[303248] chunkSize[934467] trailing[934470])
              {
                unknown _indexOfInterest[303181] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303183] "expr temp" "temp"
                unknown call_tmp[747221] "expr temp" "maybe param" "maybe type" "temp"
                (747224 'move' call_tmp[747221](303190 call chunk[303172] 0))
                (303185 'move' _iterator[303183](303188 call _getIterator call_tmp[747221]))
                Defer
                {
                  {
                    (303194 call _freeIterator _iterator[303183])
                  }
                }
                { scopeless type
                  (303198 'move' _indexOfInterest[303181](303201 call iteratorIndex _iterator[303183]))
                }
                ForLoop[303203]
                {
                  unknown i[303206] "index var" "insert auto destroy"
                  (491468 'end of statement')
                  (303208 'move' i[303206] _indexOfInterest[303181])
                  (491469 'end of statement' i[303206])
                  unknown yret[539528] "YVV" "temp"
                  unknown call_tmp[747226] "expr temp" "maybe param" "maybe type" "temp"
                  (747229 'move' call_tmp[747226](303214 call this[304344] i[303206]))
                  (539531 'move' yret[539528](539530 'addr of' call_tmp[747226]))
                  (539533 yield yret[539528])
                  (491471 'end of statement' i[303206])
                  label _continueLabel[303216]
                  _indexOfInterest[303181]
                  _iterator[303183]
                }
                label _breakLabel[303218]
              }
            }
            (303224 call _downEndCount _coforallCount[303221] nil[44])
            (934465 return _void[55])
          }
          {
          }
          label _continueLabel[303234]
          _indexOfInterest[303229]
          _iterator[303230]
        }
        label _breakLabel[303235]
        Defer
        {
          {
            (303277 call _endCountFree _coforallCount[303221])
          }
        }
        (303282 call _waitEndCount _coforallCount[303221] 1 numTasks[303222])
      }
      {
        const _coforallCount[303294] "const" "end count" "temp"
        (303351 'move' _coforallCount[303294](303348 call _endCountAlloc 1))
        unknown _indexOfInterest[303302] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303303] "expr temp" "temp"
        (303312 'move' _iterator[303303](303310 call _getIterator tmpIter[303165]))
        Defer
        {
          {
            (303328 call _freeIterator _iterator[303303])
          }
        }
        { scopeless type
          (303317 'move' _indexOfInterest[303302](303314 call iteratorIndex _iterator[303303]))
        }
        ForLoop[303304]
        {
          unknown tid[303321] "coforall index var" "index var" "insert auto destroy"
          (491477 'end of statement')
          (303323 'move' tid[303321] _indexOfInterest[303302])
          (491478 'end of statement' tid[303321])
          (303335 call _upEndCount _coforallCount[303294] 1)
          (491480 'end of statement')
          (934475 call coforall_fn[934473] chunkSize[303087] trailing[303098])
          function coforall_fn[934473](arg chunkSize[934480], arg trailing[934483]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747233] "maybe param" "maybe type" "temp"
              (747236 'move' call_tmp[747233](303114 call(406712 call (partial) _computeChunk _mt[243] this[304344]) tid[303321] chunkSize[934480] trailing[934483]))
              unknown chunk[303115] "dead at end of block" "insert auto destroy"
              (550083 'init var' chunk[303115] call_tmp[747233])
              (303118 'end of statement' tid[303321] chunkSize[934480] trailing[934483])
              {
                unknown _indexOfInterest[303131] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303132] "expr temp" "temp"
                unknown call_tmp[747238] "expr temp" "maybe param" "maybe type" "temp"
                (747241 'move' call_tmp[747238](303124 call chunk[303115] 0))
                (303141 'move' _iterator[303132](303139 call _getIterator call_tmp[747238]))
                Defer
                {
                  {
                    (303158 call _freeIterator _iterator[303132])
                  }
                }
                { scopeless type
                  (303147 'move' _indexOfInterest[303131](303144 call iteratorIndex _iterator[303132]))
                }
                ForLoop[303133]
                {
                  unknown i[303151] "index var" "insert auto destroy"
                  (491485 'end of statement')
                  (303153 'move' i[303151] _indexOfInterest[303131])
                  (491486 'end of statement' i[303151])
                  unknown yret[539535] "YVV" "temp"
                  unknown call_tmp[747243] "expr temp" "maybe param" "maybe type" "temp"
                  (747246 'move' call_tmp[747243](303128 call this[304344] i[303151]))
                  (539538 'move' yret[539535](539537 'addr of' call_tmp[747243]))
                  (539540 yield yret[539535])
                  (491488 'end of statement' i[303151])
                  label _continueLabel[303136]
                  _indexOfInterest[303131]
                  _iterator[303132]
                }
                label _breakLabel[303137]
              }
            }
            (303297 call _downEndCount _coforallCount[303294] nil[44])
            (934478 return _void[55])
          }
          {
          }
          label _continueLabel[303307]
          _indexOfInterest[303302]
          _iterator[303303]
        }
        label _breakLabel[303308]
        Defer
        {
          {
            (303339 call _endCountFree _coforallCount[303294])
          }
        }
        (303344 call _waitEndCount _coforallCount[303294] 1)
      }
    }
    (539526 return ret[539524])
  }
  where {
    (303043 call == tag[303033] standalone[451])
  }
  function list[304122](?)._computeChunk[303380](arg _mt[304350]:_MT[238], arg this[304348]:list[304122](?), arg tid[303378]:_any[178](?), arg chunkSize[303382]:_any[178](?), arg trailing[303384]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539544] "RVV" "temp"
    unknown lo[303386] "dead at end of block" "insert auto destroy"
    (550085 'init var' lo[303386] 0)
    unknown hi[303390] "dead at end of block" "insert auto destroy"
    (550087 'init var' hi[303390] lo[303386])
    (303394 'end of statement' lo[303386])
    unknown call_tmp[747248] "expr temp" "maybe param" "maybe type" "temp"
    (747251 'move' call_tmp[747248](303398 call <= tid[303378] 0))
    unknown call_tmp[747253] "expr temp" "maybe param" "maybe type" "temp"
    (747256 'move' call_tmp[747253](303440 call _cond_test call_tmp[747248]))
    if call_tmp[747253]
    {
      (303402 call = lo[303386] 0)
      (491494 'end of statement' lo[303386])
      unknown call_tmp[747258] "expr temp" "maybe param" "maybe type" "temp"
      (747261 'move' call_tmp[747258](303409 call + chunkSize[303382] trailing[303384]))
      unknown call_tmp[747263] "expr temp" "maybe param" "maybe type" "temp"
      (747266 'move' call_tmp[747263](303412 call - call_tmp[747258] 1))
      (303414 call = hi[303390] call_tmp[747263])
      (491496 'end of statement' hi[303390])
    }
    {
      unknown call_tmp[747268] "expr temp" "maybe param" "maybe type" "temp"
      (747271 'move' call_tmp[747268](303420 call * chunkSize[303382] tid[303378]))
      unknown call_tmp[747273] "expr temp" "maybe param" "maybe type" "temp"
      (747276 'move' call_tmp[747273](303423 call + call_tmp[747268] trailing[303384]))
      (303425 call = lo[303386] call_tmp[747273])
      (491498 'end of statement' lo[303386])
      unknown call_tmp[747278] "expr temp" "maybe param" "maybe type" "temp"
      (747281 'move' call_tmp[747278](303432 call + lo[303386] chunkSize[303382]))
      unknown call_tmp[747283] "expr temp" "maybe param" "maybe type" "temp"
      (747286 'move' call_tmp[747283](303435 call - call_tmp[747278] 1))
      (303437 call = hi[303390] call_tmp[747283])
      (491500 'end of statement' hi[303390] lo[303386])
    }
    unknown call_tmp[747288] "expr temp" "maybe param" "maybe type" "temp"
    (747291 'move' call_tmp[747288](303446 call chpl_build_bounded_range lo[303386] hi[303390]))
    unknown call_tmp[747293] "expr temp" "maybe param" "maybe type" "temp"
    (747296 'move' call_tmp[747293](303448 call _build_tuple call_tmp[747288]))
    (539549 'move' ret[539544](539548 'deref' call_tmp[747293]))
    gotoReturn _end__computeChunk[539542] _end__computeChunk[539542]
    (491503 'end of statement' lo[303386] hi[303390])
    label _end__computeChunk[539542]
    (539546 return ret[539544])
  }
  function list[304122](?).these[303458](arg _mt[304354]:_MT[238], arg this[304352]:list[304122](?), param arg tag[303456]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539555] "RVV" "temp"
    unknown call_tmp[747300] "maybe param" "maybe type" "temp"
    (747303 'move' call_tmp[747300](406749 call _size _mt[243] this[304352]))
    const osz[303468] "dead at end of block" "const" "insert auto destroy"
    (550089 'init var' osz[303468] call_tmp[747300])
    (303471 'end of statement')
    const minChunkSize[303474] "dead at end of block" "const" "insert auto destroy"
    (550091 'init var' minChunkSize[303474] 32)
    (303477 'end of statement')
    unknown call_tmp[747305] "maybe param" "maybe type" "temp"
    (747308 'move' call_tmp[747305](303480 call <= osz[303468] minChunkSize[303474]))
    const hasOneChunk[303482] "dead at end of block" "const" "insert auto destroy"
    (550093 'init var' hasOneChunk[303482] call_tmp[747305])
    (303485 'end of statement')
    const numTasks[303492] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581423] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581424] "maybe param" "temp"
    (581429 'move' tmp[581424](581427 call _cond_test hasOneChunk[303482]))
    if tmp[581424]
    {
      (581434 'move' tmp[581423](581431 '_paramFoldLogical' tmp[581424] 1))
    }
    {
      (581439 'move' tmp[581423](581436 '_paramFoldLogical' tmp[581424] dataParTasksPerLocale[93289]))
    }
    (550095 'init var' numTasks[303492] tmp[581423])
    (303495 'end of statement')
    unknown call_tmp[747310] "expr temp" "maybe param" "maybe type" "temp"
    (747313 'move' call_tmp[747310](303499 call / osz[303468] numTasks[303492]))
    unknown call_tmp[747315] "expr temp" "maybe param" "maybe type" "temp"
    (747318 'move' call_tmp[747315](303502 call floor call_tmp[747310]))
    unknown call_tmp[747320] "maybe param" "maybe type" "temp"
    (747323 'move' call_tmp[747320](303504 call _cast int(64)[13] call_tmp[747315]))
    const chunkSize[303506] "dead at end of block" "const" "insert auto destroy"
    (550097 'init var' chunkSize[303506] call_tmp[747320])
    (303509 'end of statement')
    unknown call_tmp[747325] "expr temp" "maybe param" "maybe type" "temp"
    (747328 'move' call_tmp[747325](303513 call * chunkSize[303506] numTasks[303492]))
    unknown call_tmp[747330] "maybe param" "maybe type" "temp"
    (747333 'move' call_tmp[747330](303515 call - osz[303468] call_tmp[747325]))
    const trailing[303517] "dead at end of block" "const" "insert auto destroy"
    (550099 'init var' trailing[303517] call_tmp[747330])
    (303520 'end of statement' osz[303468] minChunkSize[303474] hasOneChunk[303482] osz[303468] numTasks[303492] osz[303468] chunkSize[303506] numTasks[303492])
    {
      unknown tmpIter[303542] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747335] "expr temp" "maybe param" "maybe type" "temp"
      (747338 'move' call_tmp[747335](303523 call chpl_build_low_bounded_range 0))
      (303545 'move' tmpIter[303542](303526 call # call_tmp[747335] numTasks[303492]))
      unknown isRngDomArr[303693] "maybe param" "temp"
      unknown tmp[435169] "maybe param" "temp"
      (435180 'move' tmp[435169](303695 call isBoundedRange tmpIter[303542]))
      unknown call_tmp[747340] "expr temp" "maybe param" "maybe type" "temp"
      (747343 'move' call_tmp[747340](435182 call _cond_invalid tmp[435169]))
      if call_tmp[747340]
      {
        (435185 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581473] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581474] "maybe param" "temp"
      unknown call_tmp[747345] "expr temp" "maybe param" "maybe type" "temp"
      (747348 'move' call_tmp[747345](435170 call isTrue tmp[435169]))
      (581479 'move' tmp[581474](581477 call _cond_test call_tmp[747345]))
      if tmp[581474]
      {
        (581484 'move' tmp[581473](581481 '_paramFoldLogical' tmp[581474] 1))
      }
      {
        unknown tmp[435190] "maybe param" "temp"
        (435201 'move' tmp[435190](303698 call isDomain tmpIter[303542]))
        unknown call_tmp[747350] "expr temp" "maybe param" "maybe type" "temp"
        (747353 'move' call_tmp[747350](435203 call _cond_invalid tmp[435190]))
        if call_tmp[747350]
        {
          (435206 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581446] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581447] "maybe param" "temp"
        unknown call_tmp[747355] "expr temp" "maybe param" "maybe type" "temp"
        (747358 'move' call_tmp[747355](435191 call isTrue tmp[435190]))
        (581452 'move' tmp[581447](581450 call _cond_test call_tmp[747355]))
        if tmp[581447]
        {
          (581457 'move' tmp[581446](581454 '_paramFoldLogical' tmp[581447] 1))
        }
        {
          unknown tmp[581459] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747360] "expr temp" "maybe param" "maybe type" "temp"
          (747363 'move' call_tmp[747360](303701 call isArray tmpIter[303542]))
          (581461 'move' tmp[581459](435195 call isTrue call_tmp[747360]))
          (581466 'move' tmp[581446](581463 '_paramFoldLogical' tmp[581447] tmp[581459]))
        }
        unknown tmp[581486] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581488 'move' tmp[581486](435174 call isTrue tmp[581446]))
        (581493 'move' tmp[581473](581490 '_paramFoldLogical' tmp[581474] tmp[581486]))
      }
      (303708 'move' isRngDomArr[303693] tmp[581473])
      if isRngDomArr[303693]
      {
        const _coforallCount[303560] "const" "end count" "temp"
        (303629 'move' _coforallCount[303560](303626 call _endCountAlloc 1))
        unknown numTasks[303561] "temp"
        (303613 'move' numTasks[303561](303609 call size _mt[243] tmpIter[303542]))
        (303604 call _upEndCount _coforallCount[303560] 1 numTasks[303561])
        (491515 'end of statement')
        (303601 call chpl_resetTaskSpawn numTasks[303561])
        (491516 'end of statement')
        unknown _indexOfInterest[303568] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303569] "expr temp" "temp"
        (303578 'move' _iterator[303569](303576 call _getIterator tmpIter[303542]))
        Defer
        {
          {
            (303594 call _freeIterator _iterator[303569])
          }
        }
        { scopeless type
          (303583 'move' _indexOfInterest[303568](303580 call iteratorIndex _iterator[303569]))
        }
        ForLoop[303570]
        {
          unknown tid[303587] "coforall index var" "index var" "insert auto destroy"
          (491518 'end of statement')
          (303589 'move' tid[303587] _indexOfInterest[303568])
          (491519 'end of statement' tid[303587])
          (934488 call coforall_fn[934486] chunkSize[303506] trailing[303517])
          function coforall_fn[934486](arg chunkSize[934493], arg trailing[934496]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747369] "maybe param" "maybe type" "temp"
              (747372 'move' call_tmp[747369](303551 call(406771 call (partial) _computeChunk _mt[243] this[304352]) tid[303587] chunkSize[934493] trailing[934496]))
              unknown chunk[303549] "dead at end of block" "insert auto destroy"
              (550101 'init var' chunk[303549] call_tmp[747369])
              (303556 'end of statement' tid[303587] chunkSize[934493] trailing[934496])
              unknown yret[539559] "YVV" "temp"
              (539562 'move' yret[539559](539561 'addr of' chunk[303549]))
              (539564 yield yret[539559])
              (491524 'end of statement' chunk[303549])
            }
            (303563 call _downEndCount _coforallCount[303560] nil[44])
            (934491 return _void[55])
          }
          {
          }
          label _continueLabel[303573]
          _indexOfInterest[303568]
          _iterator[303569]
        }
        label _breakLabel[303574]
        Defer
        {
          {
            (303616 call _endCountFree _coforallCount[303560])
          }
        }
        (303621 call _waitEndCount _coforallCount[303560] 1 numTasks[303561])
      }
      {
        const _coforallCount[303633] "const" "end count" "temp"
        (303690 'move' _coforallCount[303633](303687 call _endCountAlloc 1))
        unknown _indexOfInterest[303641] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303642] "expr temp" "temp"
        (303651 'move' _iterator[303642](303649 call _getIterator tmpIter[303542]))
        Defer
        {
          {
            (303667 call _freeIterator _iterator[303642])
          }
        }
        { scopeless type
          (303656 'move' _indexOfInterest[303641](303653 call iteratorIndex _iterator[303642]))
        }
        ForLoop[303643]
        {
          unknown tid[303660] "coforall index var" "index var" "insert auto destroy"
          (491530 'end of statement')
          (303662 'move' tid[303660] _indexOfInterest[303641])
          (491531 'end of statement' tid[303660])
          (303674 call _upEndCount _coforallCount[303633] 1)
          (491533 'end of statement')
          (934501 call coforall_fn[934499] chunkSize[303506] trailing[303517])
          function coforall_fn[934499](arg chunkSize[934506], arg trailing[934509]) : void[4] "cobegin or coforall"
          {
            {
              unknown call_tmp[747376] "maybe param" "maybe type" "temp"
              (747379 'move' call_tmp[747376](303533 call(406763 call (partial) _computeChunk _mt[243] this[304352]) tid[303660] chunkSize[934506] trailing[934509]))
              unknown chunk[303534] "dead at end of block" "insert auto destroy"
              (550103 'init var' chunk[303534] call_tmp[747376])
              (303537 'end of statement' tid[303660] chunkSize[934506] trailing[934509])
              unknown yret[539566] "YVV" "temp"
              (539569 'move' yret[539566](539568 'addr of' chunk[303534]))
              (539571 yield yret[539566])
              (491537 'end of statement' chunk[303534])
            }
            (303636 call _downEndCount _coforallCount[303633] nil[44])
            (934504 return _void[55])
          }
          {
          }
          label _continueLabel[303646]
          _indexOfInterest[303641]
          _iterator[303642]
        }
        label _breakLabel[303647]
        Defer
        {
          {
            (303678 call _endCountFree _coforallCount[303633])
          }
        }
        (303683 call _waitEndCount _coforallCount[303633] 1)
      }
    }
    (539557 return ret[539555])
  }
  where {
    (303465 call == tag[303456] leader[447])
  }
  function list[304122](?).these[303719](arg _mt[304358]:_MT[238], arg this[304356]:list[304122](?), param arg tag[303717]:_any[178](?), arg followThis[303721]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539575] "RVV" "temp"
    {
      unknown _indexOfInterest[303741] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303742] "expr temp" "temp"
      unknown call_tmp[747381] "expr temp" "maybe param" "maybe type" "temp"
      (747384 'move' call_tmp[747381](303734 call followThis[303721] 0))
      (303751 'move' _iterator[303742](303749 call _getIterator call_tmp[747381]))
      Defer
      {
        {
          (303768 call _freeIterator _iterator[303742])
        }
      }
      { scopeless type
        (303757 'move' _indexOfInterest[303741](303754 call iteratorIndex _iterator[303742]))
      }
      ForLoop[303743]
      {
        unknown i[303761] "index var" "insert auto destroy"
        (491543 'end of statement')
        (303763 'move' i[303761] _indexOfInterest[303741])
        (491544 'end of statement' i[303761])
        unknown yret[539579] "YVV" "temp"
        unknown call_tmp[747386] "expr temp" "maybe param" "maybe type" "temp"
        (747389 'move' call_tmp[747386](303738 call this[304356] i[303761]))
        (539582 'move' yret[539579](539581 'addr of' call_tmp[747386]))
        (539584 yield yret[539579])
        (491546 'end of statement' i[303761])
        label _continueLabel[303746]
        _indexOfInterest[303741]
        _iterator[303742]
      }
      label _breakLabel[303747]
    }
    (539577 return ret[539575])
  }
  where {
    (303728 call == tag[303717] follower[449])
  }
  function list[304122](?).readWriteThis[303785](arg _mt[304362]:_MT[238], arg this[304360]:list[304122](?), arg ch[303782]:channel[237647](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303789 call(406784 call (partial) _enter _mt[243] this[304360]))
    (491548 'end of statement')
    (303794 call <~> ch[303782] "[")
    (491549 'end of statement')
    {
      unknown _indexOfInterest[303816] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303817] "expr temp" "temp"
      unknown call_tmp[747395] "expr temp" "maybe param" "maybe type" "temp"
      (747398 'move' call_tmp[747395](406796 call _size _mt[243] this[304360]))
      unknown call_tmp[747400] "expr temp" "maybe param" "maybe type" "temp"
      (747403 'move' call_tmp[747400](303831 call - call_tmp[747395] 2))
      unknown call_tmp[747405] "expr temp" "maybe param" "maybe type" "temp"
      (747408 'move' call_tmp[747405](303834 call chpl_direct_range_iter 0 call_tmp[747400] 1))
      (303826 'move' _iterator[303817](303824 call _getIterator call_tmp[747405]))
      Defer
      {
        {
          (303850 call _freeIterator _iterator[303817])
        }
      }
      { scopeless type
        (303839 'move' _indexOfInterest[303816](303836 call iteratorIndex _iterator[303817]))
      }
      ForLoop[303818]
      {
        unknown i[303843] "index var" "insert auto destroy"
        (491551 'end of statement')
        (303845 'move' i[303843] _indexOfInterest[303816])
        (491552 'end of statement' i[303843])
        unknown call_tmp[747412] "expr temp" "maybe param" "maybe type" "temp"
        (747415 'move' call_tmp[747412](303809 call(406790 call (partial) _getRef _mt[243] this[304360]) i[303843]))
        unknown call_tmp[747417] "expr temp" "maybe param" "maybe type" "temp"
        (747420 'move' call_tmp[747417](303810 call <~> ch[303782] call_tmp[747412]))
        (303813 call <~> call_tmp[747417] ", ")
        (491554 'end of statement' i[303843])
        label _continueLabel[303821]
        _indexOfInterest[303816]
        _iterator[303817]
      }
      label _breakLabel[303822]
    }
    unknown call_tmp[747424] "expr temp" "maybe param" "maybe type" "temp"
    (747427 'move' call_tmp[747424](406801 call _size _mt[243] this[304360]))
    unknown call_tmp[747429] "expr temp" "maybe param" "maybe type" "temp"
    (747432 'move' call_tmp[747429](303859 call > call_tmp[747424] 0))
    unknown call_tmp[747434] "expr temp" "maybe param" "maybe type" "temp"
    (747437 'move' call_tmp[747434](303872 call _cond_test call_tmp[747429]))
    if call_tmp[747434]
    {
      unknown call_tmp[747443] "expr temp" "maybe param" "maybe type" "temp"
      (747446 'move' call_tmp[747443](406811 call _size _mt[243] this[304360]))
      unknown call_tmp[747448] "expr temp" "maybe param" "maybe type" "temp"
      (747451 'move' call_tmp[747448](303865 call - call_tmp[747443] 1))
      unknown call_tmp[747453] "expr temp" "maybe param" "maybe type" "temp"
      (747456 'move' call_tmp[747453](303868 call(406806 call (partial) _getRef _mt[243] this[304360]) call_tmp[747448]))
      (303869 call <~> ch[303782] call_tmp[747453])
    }
    (303879 call <~> ch[303782] "]")
    (491557 'end of statement')
    (303884 call(406816 call (partial) _leave _mt[243] this[304360]))
    (539586 return _void[55])
  }
  function list[304122](?).isEmpty[303890](arg _mt[304366]:_MT[238], const arg this[304364]:list[304122](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539590] "RVV" "temp"
    (303895 call(406820 call (partial) _enter _mt[243] this[304364]))
    (491559 'end of statement')
    unknown call_tmp[747464] "expr temp" "maybe param" "maybe type" "temp"
    (747467 'move' call_tmp[747464](406825 call _size _mt[243] this[304364]))
    unknown call_tmp[747469] "maybe param" "maybe type" "temp"
    (747472 'move' call_tmp[747469](303900 call == call_tmp[747464] 0))
    unknown result[303902] "dead at end of block" "insert auto destroy"
    (550105 'init var' result[303902] call_tmp[747469])
    (303905 'end of statement')
    (303908 call(406829 call (partial) _leave _mt[243] this[304364]))
    (491560 'end of statement')
    (539596 'move' ret[539590](539595 'coerce' result[303902] bool[10]))
    gotoReturn _end_isEmpty[539588] _end_isEmpty[539588]
    (491561 'end of statement' result[303902])
    label _end_isEmpty[539588]
    (539592 return ret[539590])
  }
  { scopeless type
    bool[10]
  }
  function list[304122](?).size[303918](arg _mt[304370]:_MT[238], const arg this[304368]:list[304122](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539602] "RVV" "temp"
    unknown result[303921] "dead at end of block" "insert auto destroy"
    (550107 'init var' result[303921] 0)
    (303924 'end of statement')
    {
      const tmp[303944] "const" "temp"
      unknown call_tmp[747476] "expr temp" "maybe param" "maybe type" "temp"
      (747479 'move' call_tmp[747476](303941 '_wide_get_locale' this[304368]))
      (303945 'move' tmp[303944](303942 'deref' call_tmp[747476]))
      {
        (303929 call(406835 call (partial) _enter _mt[243] this[304368]))
        (491563 'end of statement')
        unknown call_tmp[747485] "expr temp" "maybe param" "maybe type" "temp"
        (747488 'move' call_tmp[747485](406841 call _size _mt[243] this[304368]))
        (303934 call = result[303921] call_tmp[747485])
        (491564 'end of statement' result[303921])
        (303939 call(406845 call (partial) _leave _mt[243] this[304368]))
      }
      (303948 'elided on block' 0 tmp[303944])
    }
    (539607 'move' ret[539602](539606 'deref' result[303921]))
    gotoReturn _end_size[539600] _end_size[539600]
    (491567 'end of statement' result[303921])
    label _end_size[539600]
    (539604 return ret[539602])
  }
  function list[304122](?).indices[303959](arg _mt[304374]:_MT[238], arg this[304372]:list[304122](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539613] "RVV" "temp"
    unknown call_tmp[747494] "expr temp" "maybe param" "maybe type" "temp"
    (747497 'move' call_tmp[747494](303963 call size _mt[243] this[304372]))
    unknown call_tmp[747499] "expr temp" "maybe param" "maybe type" "temp"
    (747502 'move' call_tmp[747499](303967 call - call_tmp[747494] 1))
    unknown call_tmp[747504] "expr temp" "maybe param" "maybe type" "temp"
    (747507 'move' call_tmp[747504](303969 call chpl_build_bounded_range 0 call_tmp[747499]))
    (539618 'move' ret[539613](539617 'deref' call_tmp[747504]))
    (539615 return ret[539613])
  }
  function list[304122](?).toArray[303978](arg _mt[304378]:_MT[238], const arg this[304376]:list[304122](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539622] "RVV" "temp"
    unknown tmp[435211] "maybe param" "temp"
    unknown call_tmp[747511] "expr temp" "maybe param" "maybe type" "temp"
    (747514 'move' call_tmp[747511](406856 call eltType _mt[243] this[304376]))
    (435222 'move' tmp[435211](303987 call isNonNilableClass call_tmp[747511]))
    unknown call_tmp[747516] "expr temp" "maybe param" "maybe type" "temp"
    (747519 'move' call_tmp[747516](435224 call _cond_invalid tmp[435211]))
    if call_tmp[747516]
    {
      (435227 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581500] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581501] "maybe param" "temp"
    unknown call_tmp[747521] "expr temp" "maybe param" "maybe type" "temp"
    (747524 'move' call_tmp[747521](435212 call isTrue tmp[435211]))
    (581506 'move' tmp[581501](581504 call _cond_test call_tmp[747521]))
    if tmp[581501]
    {
      unknown tmp[581508] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747528] "expr temp" "maybe param" "maybe type" "temp"
      (747531 'move' call_tmp[747528](406861 call eltType _mt[243] this[304376]))
      unknown call_tmp[747533] "expr temp" "maybe param" "maybe type" "temp"
      (747536 'move' call_tmp[747533](303991 call isOwnedClass call_tmp[747528]))
      (581510 'move' tmp[581508](435215 call isTrue call_tmp[747533]))
      (581515 'move' tmp[581500](581512 '_paramFoldLogical' tmp[581501] tmp[581508]))
    }
    {
      (581520 'move' tmp[581500](581517 '_paramFoldLogical' tmp[581501] 0))
    }
    unknown call_tmp[747538] "expr temp" "maybe param" "maybe type" "temp"
    (747541 'move' call_tmp[747538](304036 call _cond_test tmp[581500]))
    if call_tmp[747538]
    {
      unknown call_tmp[747545] "expr temp" "maybe param" "maybe type" "temp"
      (747548 'move' call_tmp[747545](406866 call eltType _mt[243] this[304376]))
      unknown call_tmp[747550] "expr temp" "maybe param" "maybe type" "temp"
      (747553 'move' call_tmp[747550](304032 call _cast string[26] call_tmp[747545]))
      (304034 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747550])
    }
    unknown result[304054] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747555] "expr temp" "maybe param" "maybe type" "temp"
    (747558 'move' call_tmp[747555](304043 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747562] "expr temp" "maybe param" "maybe type" "temp"
    (747565 'move' call_tmp[747562](406871 call _size _mt[243] this[304376]))
    unknown call_tmp[747567] "expr temp" "maybe param" "maybe type" "temp"
    (747570 'move' call_tmp[747567](304046 call # call_tmp[747555] call_tmp[747562]))
    unknown call_tmp[747572] "expr temp" "maybe param" "maybe type" "temp"
    (747575 'move' call_tmp[747572](304050 call chpl__ensureDomainExpr call_tmp[747567]))
    unknown call_tmp[747579] "expr temp" "maybe param" "maybe type" "temp"
    (747582 'move' call_tmp[747579](406876 call eltType _mt[243] this[304376]))
    unknown call_tmp[747584] "expr temp" "maybe param" "maybe type" "temp"
    (747587 'move' call_tmp[747584](304052 call chpl__buildArrayRuntimeType call_tmp[747572] call_tmp[747579]))
    (550109 'default init var' result[304054] call_tmp[747584])
    (304057 'end of statement')
    {
      const tmp[304107] "const" "temp"
      unknown call_tmp[747589] "expr temp" "maybe param" "maybe type" "temp"
      (747592 'move' call_tmp[747589](304104 '_wide_get_locale' this[304376]))
      (304108 'move' tmp[304107](304105 'deref' call_tmp[747589]))
      {
        (304061 call(406881 call (partial) _enter _mt[243] this[304376]))
        (491572 'end of statement')
        unknown tmp[304091] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583266](arg iterator[583268]:_any[178](?), arg this[583404]:list[304122](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583415] "RVV" "temp"
          {
            unknown _indexOfInterest[583273] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583274] "expr temp" "temp"
            (583283 'move' _iterator[583274](583281 call _getIterator iterator[583268]))
            Defer
            {
              {
                (583297 call _freeIterator _iterator[583274])
              }
            }
            { scopeless type
              (583288 'move' _indexOfInterest[583273](583285 call iteratorIndex _iterator[583274]))
            }
            ForLoop[583275] for-expr
            {
              unknown i[304089] "index var" "insert auto destroy" "no doc"
              (583408 'end of statement')
              (583292 'move' i[304089] _indexOfInterest[583273])
              (583409 'end of statement' i[304089])
              {
                {
                  unknown yret[583419] "YVV" "temp"
                  unknown call_tmp[583428] "expr temp" "maybe param" "maybe type" "temp"
                  (583431 'move' call_tmp[583428](304086 call(406901 call (partial) _getRef _mt[243] this[583404]) i[304089]))
                  (583422 'move' yret[583419](583421 'deref' call_tmp[583428]))
                  (583424 yield yret[583419])
                  (583411 'end of statement' i[304089])
                }
              }
              label _continueLabel[583278]
              _indexOfInterest[583273]
              _iterator[583274]
            }
            label _breakLabel[583279]
          }
          (583417 return ret[583415])
        }
        function chpl__loopexpr_iter10[583304](param arg tag[583308]:iterKind[453], arg iterator[583311]:_any[178](?), arg this[583332]:list[304122](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583458] "RVV" "temp"
          const _leaderIterator[583323] "const" "expr temp" "temp"
          (583328 'move' _leaderIterator[583323](583325 call _toLeader iterator[583311]))
          (583463 'move' ret[583458](583462 'deref' _leaderIterator[583323]))
          (583460 return ret[583458])
        }
        where {
          unknown tmp[583434] "maybe param" "temp"
          (583445 'move' tmp[583434](583313 call == tag[583308] leader[447]))
          unknown call_tmp[583492] "expr temp" "maybe param" "maybe type" "temp"
          (583495 'move' call_tmp[583492](583447 call _cond_invalid tmp[583434]))
          if call_tmp[583492]
          {
            (583450 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583465] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583466] "maybe param" "temp"
          unknown call_tmp[583497] "expr temp" "maybe param" "maybe type" "temp"
          (583500 'move' call_tmp[583497](583435 call isTrue tmp[583434]))
          (583471 'move' tmp[583466](583469 call _cond_test call_tmp[583497]))
          if tmp[583466]
          {
            unknown tmp[583473] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583502] "expr temp" "maybe param" "maybe type" "temp"
            (583505 'move' call_tmp[583502](583317 'call resolves' "_toLeader" iterator[583311]))
            (583475 'move' tmp[583473](583438 call isTrue call_tmp[583502]))
            (583480 'move' tmp[583465](583477 '_paramFoldLogical' tmp[583466] tmp[583473]))
          }
          {
            (583485 'move' tmp[583465](583482 '_paramFoldLogical' tmp[583466] 0))
          }
          (748467 call chpl_statementLevelSymbol tmp[583465])
        }
        function chpl__loopexpr_iter10[583334](param arg tag[583338]:iterKind[453], arg followThis[583341]:_any[178](?), arg iterator[583343]:_any[178](?), arg this[583402]:list[304122](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583516] "RVV" "temp"
          const _followerIterator[583350] "const" "expr temp" "temp"
          (583356 'move' _followerIterator[583350](583352 call _toFollower iterator[583343] followThis[583341]))
          {
            unknown _indexOfInterest[583371] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583372] "expr temp" "temp"
            (583381 'move' _iterator[583372](583379 call _getIterator _followerIterator[583350]))
            Defer
            {
              {
                (583395 call _freeIterator _iterator[583372])
              }
            }
            { scopeless type
              (583386 'move' _indexOfInterest[583371](583383 call iteratorIndex _iterator[583372]))
            }
            ForLoop[583373] lowered-forall for-expr
            {
              unknown i[583358] "index var" "insert auto destroy" "no doc"
              (583509 'end of statement')
              (583390 'move' i[583358] _indexOfInterest[583371])
              (583510 'end of statement' i[583358])
              {
                {
                  unknown yret[583520] "YVV" "temp"
                  unknown call_tmp[583529] "expr temp" "maybe param" "maybe type" "temp"
                  (583532 'move' call_tmp[583529](583367 call(583364 call (partial) _getRef _mt[243] this[583402]) i[583358]))
                  (583523 'move' yret[583520](583522 'deref' call_tmp[583529]))
                  (583525 yield yret[583520])
                  (583512 'end of statement' i[583358])
                }
              }
              label _continueLabel[583376]
              _indexOfInterest[583371]
              _iterator[583372]
            }
            label _breakLabel[583377]
          }
          (583518 return ret[583516])
        }
        where {
          (583346 call == tag[583338] follower[449])
        }
        function chpl__forallexpr10[583246](arg iterExpr[583249]:_any[178](?), arg this[583253]:list[304122](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583537] "RVV" "temp"
          unknown _iterator[583256] "expr temp" "maybe ref" "temp"
          (583258 'move' _iterator[583256] iterExpr[583249])
          unknown call_tmp[583544] "expr temp" "maybe param" "maybe type" "temp"
          (583547 'move' call_tmp[583544](583261 call chpl__loopexpr_iter10 _iterator[583256] this[583253]))
          (583542 'move' ret[583537](583541 'deref' call_tmp[583544]))
          (583539 return ret[583537])
        }
        unknown call_tmp[583549] "expr temp" "maybe param" "maybe type" "temp"
        (583552 'move' call_tmp[583549](304078 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583556] "expr temp" "maybe param" "maybe type" "temp"
        (583559 'move' call_tmp[583556](406897 call _size _mt[243] this[304376]))
        unknown call_tmp[583561] "expr temp" "maybe param" "maybe type" "temp"
        (583564 'move' call_tmp[583561](304081 call # call_tmp[583549] call_tmp[583556]))
        unknown call_tmp[583566] "maybe param" "maybe type" "temp"
        (583569 'move' call_tmp[583566](583251 call chpl__forallexpr10 call_tmp[583561] this[304376]))
        (583573 'iterator record set shape' call_tmp[583566] call_tmp[583561] 0)
        unknown call_tmp[747596] "expr temp" "maybe param" "maybe type" "temp"
        (747599 'move' call_tmp[747596](304065 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747603] "expr temp" "maybe param" "maybe type" "temp"
        (747606 'move' call_tmp[747603](406886 call _size _mt[243] this[304376]))
        unknown call_tmp[747608] "expr temp" "maybe param" "maybe type" "temp"
        (747611 'move' call_tmp[747608](304068 call # call_tmp[747596] call_tmp[747603]))
        unknown call_tmp[747613] "expr temp" "maybe param" "maybe type" "temp"
        (747616 'move' call_tmp[747613](304072 call chpl__ensureDomainExpr call_tmp[747608]))
        unknown call_tmp[747620] "expr temp" "maybe param" "maybe type" "temp"
        (747623 'move' call_tmp[747620](406891 call eltType _mt[243] this[304376]))
        unknown call_tmp[747625] "maybe param" "maybe type" "temp"
        (747628 'move' call_tmp[747625](304074 call chpl__buildArrayRuntimeType call_tmp[747613] call_tmp[747620]))
        (550111 'init var' tmp[304091] call_tmp[583566] call_tmp[747625])
        (304094 'end of statement')
        (304097 call = result[304054] tmp[304091])
        (491573 'end of statement' result[304054] tmp[304091])
        (304102 call(406908 call (partial) _leave _mt[243] this[304376]))
      }
      (304111 'elided on block' 0 tmp[304107])
    }
    unknown call_tmp[747634] "expr temp" "maybe param" "maybe type" "temp"
    (747637 'move' call_tmp[747634](539628 call eltType _mt[243] this[304376]))
    (539631 call chpl__checkEltTypeMatch result[304054] call_tmp[747634])
    (539633 'move' ret[539622] result[304054])
    gotoReturn _end_toArray[539620] _end_toArray[539620]
    (491577 'end of statement' result[304054])
    label _end_toArray[539620]
    (539624 return ret[539622])
  }
  function list[304122](?).eltType[930182](arg _mt[930184]:_MT[238], arg this[930186]:list[304122](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930205] "RVV" "temp" "type variable"
    unknown call_tmp[930219] "expr temp" "maybe param" "maybe type" "temp"
    (930222 'move' call_tmp[930219](930191 'is bound' this[930186] c"eltType"))
    if call_tmp[930219]
    {
      unknown call_tmp[930224] "expr temp" "maybe param" "maybe type" "temp"
      (930227 'move' call_tmp[930224](930190 '.v' this[930186] c"eltType"))
      (930210 'move' ret[930205](930209 'deref' call_tmp[930224]))
      gotoReturn _end_eltType[930203] _end_eltType[930203]
    }
    {
      (930215 'move' ret[930205](930214 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930203] _end_eltType[930203]
    }
    label _end_eltType[930203]
    (930207 return ret[930205])
  }
  function list[304122](?).eltType[930229](arg _mt[930231]:_MT[238], arg this[930233]:list[304122](?)) type : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930252] "RVV" "temp" "type variable"
    unknown call_tmp[930266] "expr temp" "maybe param" "maybe type" "temp"
    (930269 'move' call_tmp[930266](930238 'is bound' this[930233] c"eltType"))
    if call_tmp[930266]
    {
      unknown call_tmp[930271] "expr temp" "maybe param" "maybe type" "temp"
      (930274 'move' call_tmp[930271](930237 '.v' this[930233] c"eltType"))
      (930257 'move' ret[930252](930256 'deref' call_tmp[930271]))
      gotoReturn _end_eltType[930250] _end_eltType[930250]
    }
    {
      (930262 'move' ret[930252](930261 'deref' _uninstantiated[258]))
      gotoReturn _end_eltType[930250] _end_eltType[930250]
    }
    label _end_eltType[930250]
    (930254 return ret[930252])
  }
  function list[304122](?).parSafe[930276](arg _mt[930278]:_MT[238], arg this[930280]:list[304122](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930299] "RVV" "param" "temp"
    unknown call_tmp[930313] "expr temp" "maybe param" "maybe type" "temp"
    (930316 'move' call_tmp[930313](930285 'is bound' this[930280] c"parSafe"))
    if call_tmp[930313]
    {
      unknown call_tmp[930318] "expr temp" "maybe param" "maybe type" "temp"
      (930321 'move' call_tmp[930318](930284 '.' this[930280] c"parSafe"))
      (930304 'move' ret[930299](930303 'deref' call_tmp[930318]))
      gotoReturn _end_parSafe[930297] _end_parSafe[930297]
    }
    {
      (930309 'move' ret[930299](930308 'deref' ?[260]))
      gotoReturn _end_parSafe[930297] _end_parSafe[930297]
    }
    label _end_parSafe[930297]
    (930301 return ret[930299])
  }
  function list[304122](?).parSafe[930323](arg _mt[930325]:_MT[238], arg this[930327]:list[304122](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[930346] "RVV" "param" "temp"
    unknown call_tmp[930360] "expr temp" "maybe param" "maybe type" "temp"
    (930363 'move' call_tmp[930360](930332 'is bound' this[930327] c"parSafe"))
    if call_tmp[930360]
    {
      unknown call_tmp[930365] "expr temp" "maybe param" "maybe type" "temp"
      (930368 'move' call_tmp[930365](930331 '.' this[930327] c"parSafe"))
      (930351 'move' ret[930346](930350 'deref' call_tmp[930365]))
      gotoReturn _end_parSafe[930344] _end_parSafe[930344]
    }
    {
      (930356 'move' ret[930346](930355 'deref' ?[260]))
      gotoReturn _end_parSafe[930344] _end_parSafe[930344]
    }
    label _end_parSafe[930344]
    (930348 return ret[930346])
  }
  function list[304122](?)._size[930370](arg _mt[930372]:_MT[238], ref arg this[930374]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930384] "RVV" "temp"
    unknown call_tmp[930391] "expr temp" "maybe param" "maybe type" "temp"
    (930394 'move' call_tmp[930391](930378 '.' this[930374] c"_size"))
    (930389 'move' ret[930384](930388 'addr of' call_tmp[930391]))
    (930386 return ret[930384])
  }
  function list[304122](?)._lock$[930396](arg _mt[930398]:_MT[238], ref arg this[930400]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930410] "RVV" "temp"
    unknown call_tmp[930417] "expr temp" "maybe param" "maybe type" "temp"
    (930420 'move' call_tmp[930417](930404 '.' this[930400] c"_lock$"))
    (930415 'move' ret[930410](930414 'addr of' call_tmp[930417]))
    (930412 return ret[930410])
  }
  function list[304122](?)._arrays[930422](arg _mt[930424]:_MT[238], ref arg this[930426]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930436] "RVV" "temp"
    unknown call_tmp[930443] "expr temp" "maybe param" "maybe type" "temp"
    (930446 'move' call_tmp[930443](930430 '.' this[930426] c"_arrays"))
    (930441 'move' ret[930436](930440 'addr of' call_tmp[930443]))
    (930438 return ret[930436])
  }
  function list[304122](?)._arrayCapacity[930448](arg _mt[930450]:_MT[238], ref arg this[930452]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930462] "RVV" "temp"
    unknown call_tmp[930469] "expr temp" "maybe param" "maybe type" "temp"
    (930472 'move' call_tmp[930469](930456 '.' this[930452] c"_arrayCapacity"))
    (930467 'move' ret[930462](930466 'addr of' call_tmp[930469]))
    (930464 return ret[930462])
  }
  function list[304122](?)._totalCapacity[930474](arg _mt[930476]:_MT[238], ref arg this[930478]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930488] "RVV" "temp"
    unknown call_tmp[930495] "expr temp" "maybe param" "maybe type" "temp"
    (930498 'move' call_tmp[930495](930482 '.' this[930478] c"_totalCapacity"))
    (930493 'move' ret[930488](930492 'addr of' call_tmp[930495]))
    (930490 return ret[930488])
  }
  function list[304122](?)._dummyFieldToForceBorrowChecking[930500](arg _mt[930502]:_MT[238], ref arg this[930504]:list[304122](?)) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[930514] "RVV" "temp"
    unknown call_tmp[930521] "expr temp" "maybe param" "maybe type" "temp"
    (930524 'move' call_tmp[930521](930508 '.' this[930504] c"_dummyFieldToForceBorrowChecking"))
    (930519 'move' ret[930514](930518 'addr of' call_tmp[930521]))
    (930516 return ret[930514])
  }
  function list[304122](?).writeThis[930526](arg _mt[930530]:_MT[238], arg this[930528]:list[304122](?), arg f[930529]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930539 call(930535 call (partial) readWriteThis _mt[243] this[930528]) f[930529])
    (930542 return _void[55])
  }
  function list[304122](?).readThis[930546](arg _mt[930550]:_MT[238], arg this[930548]:list[304122](?), arg f[930549]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (930558 call(930554 call (partial) readWriteThis _mt[243] this[930548]) f[930549])
    (930562 return _void[55])
  }
  function chpl_fields_are_comparable[930578](arg _arg1[930580]:list[304122](?), arg _arg2[930581]:list[304122](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[930660]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[930667] "expr temp" "maybe param" "maybe type" "temp"
    (930670 'move' call_tmp[930667](930584 call parSafe _mt[243] _arg1[930580]))
    unknown call_tmp[930672] "expr temp" "maybe param" "maybe type" "temp"
    (930675 'move' call_tmp[930672](930588 call parSafe _mt[243] _arg2[930581]))
    unknown call_tmp[930677] "expr temp" "maybe param" "maybe type" "temp"
    (930680 'move' call_tmp[930677](930592 'call resolves' c"<" call_tmp[930667] call_tmp[930672]))
    unknown call_tmp[930682] "expr temp" "maybe param" "maybe type" "temp"
    (930685 'move' call_tmp[930682](930594 call _size _mt[243] _arg1[930580]))
    unknown call_tmp[930687] "expr temp" "maybe param" "maybe type" "temp"
    (930690 'move' call_tmp[930687](930598 call _size _mt[243] _arg2[930581]))
    unknown call_tmp[930692] "expr temp" "maybe param" "maybe type" "temp"
    (930695 'move' call_tmp[930692](930602 'call resolves' c"<" call_tmp[930682] call_tmp[930687]))
    unknown call_tmp[930697] "expr temp" "maybe param" "maybe type" "temp"
    (930700 'move' call_tmp[930697](930604 call _lock$ _mt[243] _arg1[930580]))
    unknown call_tmp[930702] "expr temp" "maybe param" "maybe type" "temp"
    (930705 'move' call_tmp[930702](930608 call _lock$ _mt[243] _arg2[930581]))
    unknown call_tmp[930707] "expr temp" "maybe param" "maybe type" "temp"
    (930710 'move' call_tmp[930707](930612 'call resolves' c"<" call_tmp[930697] call_tmp[930702]))
    unknown call_tmp[930712] "expr temp" "maybe param" "maybe type" "temp"
    (930715 'move' call_tmp[930712](930614 call _arrays _mt[243] _arg1[930580]))
    unknown call_tmp[930717] "expr temp" "maybe param" "maybe type" "temp"
    (930720 'move' call_tmp[930717](930618 call _arrays _mt[243] _arg2[930581]))
    unknown call_tmp[930722] "expr temp" "maybe param" "maybe type" "temp"
    (930725 'move' call_tmp[930722](930622 'call resolves' c"<" call_tmp[930712] call_tmp[930717]))
    unknown call_tmp[930727] "expr temp" "maybe param" "maybe type" "temp"
    (930730 'move' call_tmp[930727](930624 call _arrayCapacity _mt[243] _arg1[930580]))
    unknown call_tmp[930732] "expr temp" "maybe param" "maybe type" "temp"
    (930735 'move' call_tmp[930732](930628 call _arrayCapacity _mt[243] _arg2[930581]))
    unknown call_tmp[930737] "expr temp" "maybe param" "maybe type" "temp"
    (930740 'move' call_tmp[930737](930632 'call resolves' c"<" call_tmp[930727] call_tmp[930732]))
    unknown call_tmp[930742] "expr temp" "maybe param" "maybe type" "temp"
    (930745 'move' call_tmp[930742](930634 call _totalCapacity _mt[243] _arg1[930580]))
    unknown call_tmp[930747] "expr temp" "maybe param" "maybe type" "temp"
    (930750 'move' call_tmp[930747](930638 call _totalCapacity _mt[243] _arg2[930581]))
    unknown call_tmp[930752] "expr temp" "maybe param" "maybe type" "temp"
    (930755 'move' call_tmp[930752](930642 'call resolves' c"<" call_tmp[930742] call_tmp[930747]))
    unknown call_tmp[930757] "expr temp" "maybe param" "maybe type" "temp"
    (930760 'move' call_tmp[930757](930644 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930580]))
    unknown call_tmp[930762] "expr temp" "maybe param" "maybe type" "temp"
    (930765 'move' call_tmp[930762](930648 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930581]))
    unknown call_tmp[930767] "expr temp" "maybe param" "maybe type" "temp"
    (930770 'move' call_tmp[930767](930652 'call resolves' c"<" call_tmp[930757] call_tmp[930762]))
    unknown call_tmp[930772] "expr temp" "maybe param" "maybe type" "temp"
    (930775 'move' call_tmp[930772](930654 '&' call_tmp[930677] call_tmp[930692] call_tmp[930707] call_tmp[930722] call_tmp[930737] call_tmp[930752] call_tmp[930767]))
    (930665 'move' ret[930660](930664 'deref' call_tmp[930772]))
    (930662 return ret[930660])
  }
  function <[930566](arg _arg1[930568]:list[304122](?), arg _arg2[930569]:list[304122](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[930999]:bool[10] "RVV" "temp"
    unknown call_tmp[931076] "expr temp" "maybe param" "maybe type" "temp"
    (931079 'move' call_tmp[931076](930783 call parSafe _mt[243] _arg1[930568]))
    unknown call_tmp[931081] "expr temp" "maybe param" "maybe type" "temp"
    (931084 'move' call_tmp[931081](930787 call parSafe _mt[243] _arg2[930569]))
    unknown call_tmp[931086] "expr temp" "maybe param" "maybe type" "temp"
    (931089 'move' call_tmp[931086](930791 call < call_tmp[931076] call_tmp[931081]))
    if call_tmp[931086]
    {
      (931004 'move' ret[930999](931003 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931091] "expr temp" "maybe param" "maybe type" "temp"
    (931094 'move' call_tmp[931091](930797 call parSafe _mt[243] _arg1[930568]))
    unknown call_tmp[931096] "expr temp" "maybe param" "maybe type" "temp"
    (931099 'move' call_tmp[931096](930801 call parSafe _mt[243] _arg2[930569]))
    unknown call_tmp[931101] "expr temp" "maybe param" "maybe type" "temp"
    (931104 'move' call_tmp[931101](930805 call > call_tmp[931091] call_tmp[931096]))
    if call_tmp[931101]
    {
      (931009 'move' ret[930999](931008 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931106] "expr temp" "maybe param" "maybe type" "temp"
    (931109 'move' call_tmp[931106](930811 call _size _mt[243] _arg1[930568]))
    unknown call_tmp[931111] "expr temp" "maybe param" "maybe type" "temp"
    (931114 'move' call_tmp[931111](930815 call _size _mt[243] _arg2[930569]))
    unknown call_tmp[931116] "expr temp" "maybe param" "maybe type" "temp"
    (931119 'move' call_tmp[931116](930819 call < call_tmp[931106] call_tmp[931111]))
    if call_tmp[931116]
    {
      (931014 'move' ret[930999](931013 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931121] "expr temp" "maybe param" "maybe type" "temp"
    (931124 'move' call_tmp[931121](930825 call _size _mt[243] _arg1[930568]))
    unknown call_tmp[931126] "expr temp" "maybe param" "maybe type" "temp"
    (931129 'move' call_tmp[931126](930829 call _size _mt[243] _arg2[930569]))
    unknown call_tmp[931131] "expr temp" "maybe param" "maybe type" "temp"
    (931134 'move' call_tmp[931131](930833 call > call_tmp[931121] call_tmp[931126]))
    if call_tmp[931131]
    {
      (931019 'move' ret[930999](931018 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931136] "expr temp" "maybe param" "maybe type" "temp"
    (931139 'move' call_tmp[931136](930839 call _lock$ _mt[243] _arg1[930568]))
    unknown call_tmp[931141] "expr temp" "maybe param" "maybe type" "temp"
    (931144 'move' call_tmp[931141](930843 call _lock$ _mt[243] _arg2[930569]))
    unknown call_tmp[931146] "expr temp" "maybe param" "maybe type" "temp"
    (931149 'move' call_tmp[931146](930847 call < call_tmp[931136] call_tmp[931141]))
    if call_tmp[931146]
    {
      (931024 'move' ret[930999](931023 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931151] "expr temp" "maybe param" "maybe type" "temp"
    (931154 'move' call_tmp[931151](930853 call _lock$ _mt[243] _arg1[930568]))
    unknown call_tmp[931156] "expr temp" "maybe param" "maybe type" "temp"
    (931159 'move' call_tmp[931156](930857 call _lock$ _mt[243] _arg2[930569]))
    unknown call_tmp[931161] "expr temp" "maybe param" "maybe type" "temp"
    (931164 'move' call_tmp[931161](930861 call > call_tmp[931151] call_tmp[931156]))
    if call_tmp[931161]
    {
      (931029 'move' ret[930999](931028 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931166] "expr temp" "maybe param" "maybe type" "temp"
    (931169 'move' call_tmp[931166](930867 call _arrays _mt[243] _arg1[930568]))
    unknown call_tmp[931171] "expr temp" "maybe param" "maybe type" "temp"
    (931174 'move' call_tmp[931171](930871 call _arrays _mt[243] _arg2[930569]))
    unknown call_tmp[931176] "expr temp" "maybe param" "maybe type" "temp"
    (931179 'move' call_tmp[931176](930875 call < call_tmp[931166] call_tmp[931171]))
    if call_tmp[931176]
    {
      (931034 'move' ret[930999](931033 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931181] "expr temp" "maybe param" "maybe type" "temp"
    (931184 'move' call_tmp[931181](930881 call _arrays _mt[243] _arg1[930568]))
    unknown call_tmp[931186] "expr temp" "maybe param" "maybe type" "temp"
    (931189 'move' call_tmp[931186](930885 call _arrays _mt[243] _arg2[930569]))
    unknown call_tmp[931191] "expr temp" "maybe param" "maybe type" "temp"
    (931194 'move' call_tmp[931191](930889 call > call_tmp[931181] call_tmp[931186]))
    if call_tmp[931191]
    {
      (931039 'move' ret[930999](931038 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931196] "expr temp" "maybe param" "maybe type" "temp"
    (931199 'move' call_tmp[931196](930895 call _arrayCapacity _mt[243] _arg1[930568]))
    unknown call_tmp[931201] "expr temp" "maybe param" "maybe type" "temp"
    (931204 'move' call_tmp[931201](930899 call _arrayCapacity _mt[243] _arg2[930569]))
    unknown call_tmp[931206] "expr temp" "maybe param" "maybe type" "temp"
    (931209 'move' call_tmp[931206](930903 call < call_tmp[931196] call_tmp[931201]))
    if call_tmp[931206]
    {
      (931044 'move' ret[930999](931043 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931211] "expr temp" "maybe param" "maybe type" "temp"
    (931214 'move' call_tmp[931211](930909 call _arrayCapacity _mt[243] _arg1[930568]))
    unknown call_tmp[931216] "expr temp" "maybe param" "maybe type" "temp"
    (931219 'move' call_tmp[931216](930913 call _arrayCapacity _mt[243] _arg2[930569]))
    unknown call_tmp[931221] "expr temp" "maybe param" "maybe type" "temp"
    (931224 'move' call_tmp[931221](930917 call > call_tmp[931211] call_tmp[931216]))
    if call_tmp[931221]
    {
      (931049 'move' ret[930999](931048 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931226] "expr temp" "maybe param" "maybe type" "temp"
    (931229 'move' call_tmp[931226](930923 call _totalCapacity _mt[243] _arg1[930568]))
    unknown call_tmp[931231] "expr temp" "maybe param" "maybe type" "temp"
    (931234 'move' call_tmp[931231](930927 call _totalCapacity _mt[243] _arg2[930569]))
    unknown call_tmp[931236] "expr temp" "maybe param" "maybe type" "temp"
    (931239 'move' call_tmp[931236](930931 call < call_tmp[931226] call_tmp[931231]))
    if call_tmp[931236]
    {
      (931054 'move' ret[930999](931053 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931241] "expr temp" "maybe param" "maybe type" "temp"
    (931244 'move' call_tmp[931241](930937 call _totalCapacity _mt[243] _arg1[930568]))
    unknown call_tmp[931246] "expr temp" "maybe param" "maybe type" "temp"
    (931249 'move' call_tmp[931246](930941 call _totalCapacity _mt[243] _arg2[930569]))
    unknown call_tmp[931251] "expr temp" "maybe param" "maybe type" "temp"
    (931254 'move' call_tmp[931251](930945 call > call_tmp[931241] call_tmp[931246]))
    if call_tmp[931251]
    {
      (931059 'move' ret[930999](931058 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931256] "expr temp" "maybe param" "maybe type" "temp"
    (931259 'move' call_tmp[931256](930951 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930568]))
    unknown call_tmp[931261] "expr temp" "maybe param" "maybe type" "temp"
    (931264 'move' call_tmp[931261](930955 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930569]))
    unknown call_tmp[931266] "expr temp" "maybe param" "maybe type" "temp"
    (931269 'move' call_tmp[931266](930959 call < call_tmp[931256] call_tmp[931261]))
    if call_tmp[931266]
    {
      (931064 'move' ret[930999](931063 'deref' 1))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    unknown call_tmp[931271] "expr temp" "maybe param" "maybe type" "temp"
    (931274 'move' call_tmp[931271](930965 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[930568]))
    unknown call_tmp[931276] "expr temp" "maybe param" "maybe type" "temp"
    (931279 'move' call_tmp[931276](930969 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[930569]))
    unknown call_tmp[931281] "expr temp" "maybe param" "maybe type" "temp"
    (931284 'move' call_tmp[931281](930973 call > call_tmp[931271] call_tmp[931276]))
    if call_tmp[931281]
    {
      (931069 'move' ret[930999](931068 'deref' 0))
      gotoReturn _end_<[930997] _end_<[930997]
    }
    (931074 'move' ret[930999](931073 'deref' 0))
    label _end_<[930997]
    (931001 return ret[930999])
  }
  where {
    unknown call_tmp[931286] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931289 'move' call_tmp[931286](930572 'typeof' _arg1[930568]))
    unknown call_tmp[931291] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (931294 'move' call_tmp[931291](930574 'typeof' _arg2[930569]))
    unknown call_tmp[931296] "expr temp" "maybe param" "maybe type" "temp"
    (931299 'move' call_tmp[931296](930576 call == call_tmp[931286] call_tmp[931291]))
    unknown call_tmp[931301] "expr temp" "maybe param" "maybe type" "temp"
    (931304 'move' call_tmp[931301](930777 call chpl_fields_are_comparable[930578] _arg1[930568] _arg2[930569]))
    (930781 '&' call_tmp[931296] call_tmp[931301])
  }
  function chpl_fields_are_comparable[931318](arg _arg1[931320]:list[304122](?), arg _arg2[931321]:list[304122](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[931400]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[931407] "expr temp" "maybe param" "maybe type" "temp"
    (931410 'move' call_tmp[931407](931324 call parSafe _mt[243] _arg1[931320]))
    unknown call_tmp[931412] "expr temp" "maybe param" "maybe type" "temp"
    (931415 'move' call_tmp[931412](931328 call parSafe _mt[243] _arg2[931321]))
    unknown call_tmp[931417] "expr temp" "maybe param" "maybe type" "temp"
    (931420 'move' call_tmp[931417](931332 'call resolves' c"<=" call_tmp[931407] call_tmp[931412]))
    unknown call_tmp[931422] "expr temp" "maybe param" "maybe type" "temp"
    (931425 'move' call_tmp[931422](931334 call _size _mt[243] _arg1[931320]))
    unknown call_tmp[931427] "expr temp" "maybe param" "maybe type" "temp"
    (931430 'move' call_tmp[931427](931338 call _size _mt[243] _arg2[931321]))
    unknown call_tmp[931432] "expr temp" "maybe param" "maybe type" "temp"
    (931435 'move' call_tmp[931432](931342 'call resolves' c"<=" call_tmp[931422] call_tmp[931427]))
    unknown call_tmp[931437] "expr temp" "maybe param" "maybe type" "temp"
    (931440 'move' call_tmp[931437](931344 call _lock$ _mt[243] _arg1[931320]))
    unknown call_tmp[931442] "expr temp" "maybe param" "maybe type" "temp"
    (931445 'move' call_tmp[931442](931348 call _lock$ _mt[243] _arg2[931321]))
    unknown call_tmp[931447] "expr temp" "maybe param" "maybe type" "temp"
    (931450 'move' call_tmp[931447](931352 'call resolves' c"<=" call_tmp[931437] call_tmp[931442]))
    unknown call_tmp[931452] "expr temp" "maybe param" "maybe type" "temp"
    (931455 'move' call_tmp[931452](931354 call _arrays _mt[243] _arg1[931320]))
    unknown call_tmp[931457] "expr temp" "maybe param" "maybe type" "temp"
    (931460 'move' call_tmp[931457](931358 call _arrays _mt[243] _arg2[931321]))
    unknown call_tmp[931462] "expr temp" "maybe param" "maybe type" "temp"
    (931465 'move' call_tmp[931462](931362 'call resolves' c"<=" call_tmp[931452] call_tmp[931457]))
    unknown call_tmp[931467] "expr temp" "maybe param" "maybe type" "temp"
    (931470 'move' call_tmp[931467](931364 call _arrayCapacity _mt[243] _arg1[931320]))
    unknown call_tmp[931472] "expr temp" "maybe param" "maybe type" "temp"
    (931475 'move' call_tmp[931472](931368 call _arrayCapacity _mt[243] _arg2[931321]))
    unknown call_tmp[931477] "expr temp" "maybe param" "maybe type" "temp"
    (931480 'move' call_tmp[931477](931372 'call resolves' c"<=" call_tmp[931467] call_tmp[931472]))
    unknown call_tmp[931482] "expr temp" "maybe param" "maybe type" "temp"
    (931485 'move' call_tmp[931482](931374 call _totalCapacity _mt[243] _arg1[931320]))
    unknown call_tmp[931487] "expr temp" "maybe param" "maybe type" "temp"
    (931490 'move' call_tmp[931487](931378 call _totalCapacity _mt[243] _arg2[931321]))
    unknown call_tmp[931492] "expr temp" "maybe param" "maybe type" "temp"
    (931495 'move' call_tmp[931492](931382 'call resolves' c"<=" call_tmp[931482] call_tmp[931487]))
    unknown call_tmp[931497] "expr temp" "maybe param" "maybe type" "temp"
    (931500 'move' call_tmp[931497](931384 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931320]))
    unknown call_tmp[931502] "expr temp" "maybe param" "maybe type" "temp"
    (931505 'move' call_tmp[931502](931388 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931321]))
    unknown call_tmp[931507] "expr temp" "maybe param" "maybe type" "temp"
    (931510 'move' call_tmp[931507](931392 'call resolves' c"<=" call_tmp[931497] call_tmp[931502]))
    unknown call_tmp[931512] "expr temp" "maybe param" "maybe type" "temp"
    (931515 'move' call_tmp[931512](931394 '&' call_tmp[931417] call_tmp[931432] call_tmp[931447] call_tmp[931462] call_tmp[931477] call_tmp[931492] call_tmp[931507]))
    (931405 'move' ret[931400](931404 'deref' call_tmp[931512]))
    (931402 return ret[931400])
  }
  function <=[931306](arg _arg1[931308]:list[304122](?), arg _arg2[931309]:list[304122](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[931739]:bool[10] "RVV" "temp"
    unknown call_tmp[931816] "expr temp" "maybe param" "maybe type" "temp"
    (931819 'move' call_tmp[931816](931523 call parSafe _mt[243] _arg1[931308]))
    unknown call_tmp[931821] "expr temp" "maybe param" "maybe type" "temp"
    (931824 'move' call_tmp[931821](931527 call parSafe _mt[243] _arg2[931309]))
    unknown call_tmp[931826] "expr temp" "maybe param" "maybe type" "temp"
    (931829 'move' call_tmp[931826](931531 call < call_tmp[931816] call_tmp[931821]))
    if call_tmp[931826]
    {
      (931744 'move' ret[931739](931743 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931831] "expr temp" "maybe param" "maybe type" "temp"
    (931834 'move' call_tmp[931831](931537 call parSafe _mt[243] _arg1[931308]))
    unknown call_tmp[931836] "expr temp" "maybe param" "maybe type" "temp"
    (931839 'move' call_tmp[931836](931541 call parSafe _mt[243] _arg2[931309]))
    unknown call_tmp[931841] "expr temp" "maybe param" "maybe type" "temp"
    (931844 'move' call_tmp[931841](931545 call > call_tmp[931831] call_tmp[931836]))
    if call_tmp[931841]
    {
      (931749 'move' ret[931739](931748 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931846] "expr temp" "maybe param" "maybe type" "temp"
    (931849 'move' call_tmp[931846](931551 call _size _mt[243] _arg1[931308]))
    unknown call_tmp[931851] "expr temp" "maybe param" "maybe type" "temp"
    (931854 'move' call_tmp[931851](931555 call _size _mt[243] _arg2[931309]))
    unknown call_tmp[931856] "expr temp" "maybe param" "maybe type" "temp"
    (931859 'move' call_tmp[931856](931559 call < call_tmp[931846] call_tmp[931851]))
    if call_tmp[931856]
    {
      (931754 'move' ret[931739](931753 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931861] "expr temp" "maybe param" "maybe type" "temp"
    (931864 'move' call_tmp[931861](931565 call _size _mt[243] _arg1[931308]))
    unknown call_tmp[931866] "expr temp" "maybe param" "maybe type" "temp"
    (931869 'move' call_tmp[931866](931569 call _size _mt[243] _arg2[931309]))
    unknown call_tmp[931871] "expr temp" "maybe param" "maybe type" "temp"
    (931874 'move' call_tmp[931871](931573 call > call_tmp[931861] call_tmp[931866]))
    if call_tmp[931871]
    {
      (931759 'move' ret[931739](931758 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931876] "expr temp" "maybe param" "maybe type" "temp"
    (931879 'move' call_tmp[931876](931579 call _lock$ _mt[243] _arg1[931308]))
    unknown call_tmp[931881] "expr temp" "maybe param" "maybe type" "temp"
    (931884 'move' call_tmp[931881](931583 call _lock$ _mt[243] _arg2[931309]))
    unknown call_tmp[931886] "expr temp" "maybe param" "maybe type" "temp"
    (931889 'move' call_tmp[931886](931587 call < call_tmp[931876] call_tmp[931881]))
    if call_tmp[931886]
    {
      (931764 'move' ret[931739](931763 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931891] "expr temp" "maybe param" "maybe type" "temp"
    (931894 'move' call_tmp[931891](931593 call _lock$ _mt[243] _arg1[931308]))
    unknown call_tmp[931896] "expr temp" "maybe param" "maybe type" "temp"
    (931899 'move' call_tmp[931896](931597 call _lock$ _mt[243] _arg2[931309]))
    unknown call_tmp[931901] "expr temp" "maybe param" "maybe type" "temp"
    (931904 'move' call_tmp[931901](931601 call > call_tmp[931891] call_tmp[931896]))
    if call_tmp[931901]
    {
      (931769 'move' ret[931739](931768 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931906] "expr temp" "maybe param" "maybe type" "temp"
    (931909 'move' call_tmp[931906](931607 call _arrays _mt[243] _arg1[931308]))
    unknown call_tmp[931911] "expr temp" "maybe param" "maybe type" "temp"
    (931914 'move' call_tmp[931911](931611 call _arrays _mt[243] _arg2[931309]))
    unknown call_tmp[931916] "expr temp" "maybe param" "maybe type" "temp"
    (931919 'move' call_tmp[931916](931615 call < call_tmp[931906] call_tmp[931911]))
    if call_tmp[931916]
    {
      (931774 'move' ret[931739](931773 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931921] "expr temp" "maybe param" "maybe type" "temp"
    (931924 'move' call_tmp[931921](931621 call _arrays _mt[243] _arg1[931308]))
    unknown call_tmp[931926] "expr temp" "maybe param" "maybe type" "temp"
    (931929 'move' call_tmp[931926](931625 call _arrays _mt[243] _arg2[931309]))
    unknown call_tmp[931931] "expr temp" "maybe param" "maybe type" "temp"
    (931934 'move' call_tmp[931931](931629 call > call_tmp[931921] call_tmp[931926]))
    if call_tmp[931931]
    {
      (931779 'move' ret[931739](931778 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931936] "expr temp" "maybe param" "maybe type" "temp"
    (931939 'move' call_tmp[931936](931635 call _arrayCapacity _mt[243] _arg1[931308]))
    unknown call_tmp[931941] "expr temp" "maybe param" "maybe type" "temp"
    (931944 'move' call_tmp[931941](931639 call _arrayCapacity _mt[243] _arg2[931309]))
    unknown call_tmp[931946] "expr temp" "maybe param" "maybe type" "temp"
    (931949 'move' call_tmp[931946](931643 call < call_tmp[931936] call_tmp[931941]))
    if call_tmp[931946]
    {
      (931784 'move' ret[931739](931783 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931951] "expr temp" "maybe param" "maybe type" "temp"
    (931954 'move' call_tmp[931951](931649 call _arrayCapacity _mt[243] _arg1[931308]))
    unknown call_tmp[931956] "expr temp" "maybe param" "maybe type" "temp"
    (931959 'move' call_tmp[931956](931653 call _arrayCapacity _mt[243] _arg2[931309]))
    unknown call_tmp[931961] "expr temp" "maybe param" "maybe type" "temp"
    (931964 'move' call_tmp[931961](931657 call > call_tmp[931951] call_tmp[931956]))
    if call_tmp[931961]
    {
      (931789 'move' ret[931739](931788 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931966] "expr temp" "maybe param" "maybe type" "temp"
    (931969 'move' call_tmp[931966](931663 call _totalCapacity _mt[243] _arg1[931308]))
    unknown call_tmp[931971] "expr temp" "maybe param" "maybe type" "temp"
    (931974 'move' call_tmp[931971](931667 call _totalCapacity _mt[243] _arg2[931309]))
    unknown call_tmp[931976] "expr temp" "maybe param" "maybe type" "temp"
    (931979 'move' call_tmp[931976](931671 call < call_tmp[931966] call_tmp[931971]))
    if call_tmp[931976]
    {
      (931794 'move' ret[931739](931793 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931981] "expr temp" "maybe param" "maybe type" "temp"
    (931984 'move' call_tmp[931981](931677 call _totalCapacity _mt[243] _arg1[931308]))
    unknown call_tmp[931986] "expr temp" "maybe param" "maybe type" "temp"
    (931989 'move' call_tmp[931986](931681 call _totalCapacity _mt[243] _arg2[931309]))
    unknown call_tmp[931991] "expr temp" "maybe param" "maybe type" "temp"
    (931994 'move' call_tmp[931991](931685 call > call_tmp[931981] call_tmp[931986]))
    if call_tmp[931991]
    {
      (931799 'move' ret[931739](931798 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[931996] "expr temp" "maybe param" "maybe type" "temp"
    (931999 'move' call_tmp[931996](931691 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931308]))
    unknown call_tmp[932001] "expr temp" "maybe param" "maybe type" "temp"
    (932004 'move' call_tmp[932001](931695 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931309]))
    unknown call_tmp[932006] "expr temp" "maybe param" "maybe type" "temp"
    (932009 'move' call_tmp[932006](931699 call < call_tmp[931996] call_tmp[932001]))
    if call_tmp[932006]
    {
      (931804 'move' ret[931739](931803 'deref' 1))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    unknown call_tmp[932011] "expr temp" "maybe param" "maybe type" "temp"
    (932014 'move' call_tmp[932011](931705 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[931308]))
    unknown call_tmp[932016] "expr temp" "maybe param" "maybe type" "temp"
    (932019 'move' call_tmp[932016](931709 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[931309]))
    unknown call_tmp[932021] "expr temp" "maybe param" "maybe type" "temp"
    (932024 'move' call_tmp[932021](931713 call > call_tmp[932011] call_tmp[932016]))
    if call_tmp[932021]
    {
      (931809 'move' ret[931739](931808 'deref' 0))
      gotoReturn _end_<=[931737] _end_<=[931737]
    }
    (931814 'move' ret[931739](931813 'deref' 1))
    label _end_<=[931737]
    (931741 return ret[931739])
  }
  where {
    unknown call_tmp[932026] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932029 'move' call_tmp[932026](931312 'typeof' _arg1[931308]))
    unknown call_tmp[932031] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932034 'move' call_tmp[932031](931314 'typeof' _arg2[931309]))
    unknown call_tmp[932036] "expr temp" "maybe param" "maybe type" "temp"
    (932039 'move' call_tmp[932036](931316 call == call_tmp[932026] call_tmp[932031]))
    unknown call_tmp[932041] "expr temp" "maybe param" "maybe type" "temp"
    (932044 'move' call_tmp[932041](931517 call chpl_fields_are_comparable[931318] _arg1[931308] _arg2[931309]))
    (931521 '&' call_tmp[932036] call_tmp[932041])
  }
  function chpl_fields_are_comparable[932058](arg _arg1[932060]:list[304122](?), arg _arg2[932061]:list[304122](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932140]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932147] "expr temp" "maybe param" "maybe type" "temp"
    (932150 'move' call_tmp[932147](932064 call parSafe _mt[243] _arg1[932060]))
    unknown call_tmp[932152] "expr temp" "maybe param" "maybe type" "temp"
    (932155 'move' call_tmp[932152](932068 call parSafe _mt[243] _arg2[932061]))
    unknown call_tmp[932157] "expr temp" "maybe param" "maybe type" "temp"
    (932160 'move' call_tmp[932157](932072 'call resolves' c">" call_tmp[932147] call_tmp[932152]))
    unknown call_tmp[932162] "expr temp" "maybe param" "maybe type" "temp"
    (932165 'move' call_tmp[932162](932074 call _size _mt[243] _arg1[932060]))
    unknown call_tmp[932167] "expr temp" "maybe param" "maybe type" "temp"
    (932170 'move' call_tmp[932167](932078 call _size _mt[243] _arg2[932061]))
    unknown call_tmp[932172] "expr temp" "maybe param" "maybe type" "temp"
    (932175 'move' call_tmp[932172](932082 'call resolves' c">" call_tmp[932162] call_tmp[932167]))
    unknown call_tmp[932177] "expr temp" "maybe param" "maybe type" "temp"
    (932180 'move' call_tmp[932177](932084 call _lock$ _mt[243] _arg1[932060]))
    unknown call_tmp[932182] "expr temp" "maybe param" "maybe type" "temp"
    (932185 'move' call_tmp[932182](932088 call _lock$ _mt[243] _arg2[932061]))
    unknown call_tmp[932187] "expr temp" "maybe param" "maybe type" "temp"
    (932190 'move' call_tmp[932187](932092 'call resolves' c">" call_tmp[932177] call_tmp[932182]))
    unknown call_tmp[932192] "expr temp" "maybe param" "maybe type" "temp"
    (932195 'move' call_tmp[932192](932094 call _arrays _mt[243] _arg1[932060]))
    unknown call_tmp[932197] "expr temp" "maybe param" "maybe type" "temp"
    (932200 'move' call_tmp[932197](932098 call _arrays _mt[243] _arg2[932061]))
    unknown call_tmp[932202] "expr temp" "maybe param" "maybe type" "temp"
    (932205 'move' call_tmp[932202](932102 'call resolves' c">" call_tmp[932192] call_tmp[932197]))
    unknown call_tmp[932207] "expr temp" "maybe param" "maybe type" "temp"
    (932210 'move' call_tmp[932207](932104 call _arrayCapacity _mt[243] _arg1[932060]))
    unknown call_tmp[932212] "expr temp" "maybe param" "maybe type" "temp"
    (932215 'move' call_tmp[932212](932108 call _arrayCapacity _mt[243] _arg2[932061]))
    unknown call_tmp[932217] "expr temp" "maybe param" "maybe type" "temp"
    (932220 'move' call_tmp[932217](932112 'call resolves' c">" call_tmp[932207] call_tmp[932212]))
    unknown call_tmp[932222] "expr temp" "maybe param" "maybe type" "temp"
    (932225 'move' call_tmp[932222](932114 call _totalCapacity _mt[243] _arg1[932060]))
    unknown call_tmp[932227] "expr temp" "maybe param" "maybe type" "temp"
    (932230 'move' call_tmp[932227](932118 call _totalCapacity _mt[243] _arg2[932061]))
    unknown call_tmp[932232] "expr temp" "maybe param" "maybe type" "temp"
    (932235 'move' call_tmp[932232](932122 'call resolves' c">" call_tmp[932222] call_tmp[932227]))
    unknown call_tmp[932237] "expr temp" "maybe param" "maybe type" "temp"
    (932240 'move' call_tmp[932237](932124 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932060]))
    unknown call_tmp[932242] "expr temp" "maybe param" "maybe type" "temp"
    (932245 'move' call_tmp[932242](932128 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932061]))
    unknown call_tmp[932247] "expr temp" "maybe param" "maybe type" "temp"
    (932250 'move' call_tmp[932247](932132 'call resolves' c">" call_tmp[932237] call_tmp[932242]))
    unknown call_tmp[932252] "expr temp" "maybe param" "maybe type" "temp"
    (932255 'move' call_tmp[932252](932134 '&' call_tmp[932157] call_tmp[932172] call_tmp[932187] call_tmp[932202] call_tmp[932217] call_tmp[932232] call_tmp[932247]))
    (932145 'move' ret[932140](932144 'deref' call_tmp[932252]))
    (932142 return ret[932140])
  }
  function >[932046](arg _arg1[932048]:list[304122](?), arg _arg2[932049]:list[304122](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[932479]:bool[10] "RVV" "temp"
    unknown call_tmp[932556] "expr temp" "maybe param" "maybe type" "temp"
    (932559 'move' call_tmp[932556](932263 call parSafe _mt[243] _arg1[932048]))
    unknown call_tmp[932561] "expr temp" "maybe param" "maybe type" "temp"
    (932564 'move' call_tmp[932561](932267 call parSafe _mt[243] _arg2[932049]))
    unknown call_tmp[932566] "expr temp" "maybe param" "maybe type" "temp"
    (932569 'move' call_tmp[932566](932271 call > call_tmp[932556] call_tmp[932561]))
    if call_tmp[932566]
    {
      (932484 'move' ret[932479](932483 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932571] "expr temp" "maybe param" "maybe type" "temp"
    (932574 'move' call_tmp[932571](932277 call parSafe _mt[243] _arg1[932048]))
    unknown call_tmp[932576] "expr temp" "maybe param" "maybe type" "temp"
    (932579 'move' call_tmp[932576](932281 call parSafe _mt[243] _arg2[932049]))
    unknown call_tmp[932581] "expr temp" "maybe param" "maybe type" "temp"
    (932584 'move' call_tmp[932581](932285 call < call_tmp[932571] call_tmp[932576]))
    if call_tmp[932581]
    {
      (932489 'move' ret[932479](932488 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932586] "expr temp" "maybe param" "maybe type" "temp"
    (932589 'move' call_tmp[932586](932291 call _size _mt[243] _arg1[932048]))
    unknown call_tmp[932591] "expr temp" "maybe param" "maybe type" "temp"
    (932594 'move' call_tmp[932591](932295 call _size _mt[243] _arg2[932049]))
    unknown call_tmp[932596] "expr temp" "maybe param" "maybe type" "temp"
    (932599 'move' call_tmp[932596](932299 call > call_tmp[932586] call_tmp[932591]))
    if call_tmp[932596]
    {
      (932494 'move' ret[932479](932493 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932601] "expr temp" "maybe param" "maybe type" "temp"
    (932604 'move' call_tmp[932601](932305 call _size _mt[243] _arg1[932048]))
    unknown call_tmp[932606] "expr temp" "maybe param" "maybe type" "temp"
    (932609 'move' call_tmp[932606](932309 call _size _mt[243] _arg2[932049]))
    unknown call_tmp[932611] "expr temp" "maybe param" "maybe type" "temp"
    (932614 'move' call_tmp[932611](932313 call < call_tmp[932601] call_tmp[932606]))
    if call_tmp[932611]
    {
      (932499 'move' ret[932479](932498 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932616] "expr temp" "maybe param" "maybe type" "temp"
    (932619 'move' call_tmp[932616](932319 call _lock$ _mt[243] _arg1[932048]))
    unknown call_tmp[932621] "expr temp" "maybe param" "maybe type" "temp"
    (932624 'move' call_tmp[932621](932323 call _lock$ _mt[243] _arg2[932049]))
    unknown call_tmp[932626] "expr temp" "maybe param" "maybe type" "temp"
    (932629 'move' call_tmp[932626](932327 call > call_tmp[932616] call_tmp[932621]))
    if call_tmp[932626]
    {
      (932504 'move' ret[932479](932503 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932631] "expr temp" "maybe param" "maybe type" "temp"
    (932634 'move' call_tmp[932631](932333 call _lock$ _mt[243] _arg1[932048]))
    unknown call_tmp[932636] "expr temp" "maybe param" "maybe type" "temp"
    (932639 'move' call_tmp[932636](932337 call _lock$ _mt[243] _arg2[932049]))
    unknown call_tmp[932641] "expr temp" "maybe param" "maybe type" "temp"
    (932644 'move' call_tmp[932641](932341 call < call_tmp[932631] call_tmp[932636]))
    if call_tmp[932641]
    {
      (932509 'move' ret[932479](932508 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932646] "expr temp" "maybe param" "maybe type" "temp"
    (932649 'move' call_tmp[932646](932347 call _arrays _mt[243] _arg1[932048]))
    unknown call_tmp[932651] "expr temp" "maybe param" "maybe type" "temp"
    (932654 'move' call_tmp[932651](932351 call _arrays _mt[243] _arg2[932049]))
    unknown call_tmp[932656] "expr temp" "maybe param" "maybe type" "temp"
    (932659 'move' call_tmp[932656](932355 call > call_tmp[932646] call_tmp[932651]))
    if call_tmp[932656]
    {
      (932514 'move' ret[932479](932513 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932661] "expr temp" "maybe param" "maybe type" "temp"
    (932664 'move' call_tmp[932661](932361 call _arrays _mt[243] _arg1[932048]))
    unknown call_tmp[932666] "expr temp" "maybe param" "maybe type" "temp"
    (932669 'move' call_tmp[932666](932365 call _arrays _mt[243] _arg2[932049]))
    unknown call_tmp[932671] "expr temp" "maybe param" "maybe type" "temp"
    (932674 'move' call_tmp[932671](932369 call < call_tmp[932661] call_tmp[932666]))
    if call_tmp[932671]
    {
      (932519 'move' ret[932479](932518 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932676] "expr temp" "maybe param" "maybe type" "temp"
    (932679 'move' call_tmp[932676](932375 call _arrayCapacity _mt[243] _arg1[932048]))
    unknown call_tmp[932681] "expr temp" "maybe param" "maybe type" "temp"
    (932684 'move' call_tmp[932681](932379 call _arrayCapacity _mt[243] _arg2[932049]))
    unknown call_tmp[932686] "expr temp" "maybe param" "maybe type" "temp"
    (932689 'move' call_tmp[932686](932383 call > call_tmp[932676] call_tmp[932681]))
    if call_tmp[932686]
    {
      (932524 'move' ret[932479](932523 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932691] "expr temp" "maybe param" "maybe type" "temp"
    (932694 'move' call_tmp[932691](932389 call _arrayCapacity _mt[243] _arg1[932048]))
    unknown call_tmp[932696] "expr temp" "maybe param" "maybe type" "temp"
    (932699 'move' call_tmp[932696](932393 call _arrayCapacity _mt[243] _arg2[932049]))
    unknown call_tmp[932701] "expr temp" "maybe param" "maybe type" "temp"
    (932704 'move' call_tmp[932701](932397 call < call_tmp[932691] call_tmp[932696]))
    if call_tmp[932701]
    {
      (932529 'move' ret[932479](932528 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932706] "expr temp" "maybe param" "maybe type" "temp"
    (932709 'move' call_tmp[932706](932403 call _totalCapacity _mt[243] _arg1[932048]))
    unknown call_tmp[932711] "expr temp" "maybe param" "maybe type" "temp"
    (932714 'move' call_tmp[932711](932407 call _totalCapacity _mt[243] _arg2[932049]))
    unknown call_tmp[932716] "expr temp" "maybe param" "maybe type" "temp"
    (932719 'move' call_tmp[932716](932411 call > call_tmp[932706] call_tmp[932711]))
    if call_tmp[932716]
    {
      (932534 'move' ret[932479](932533 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932721] "expr temp" "maybe param" "maybe type" "temp"
    (932724 'move' call_tmp[932721](932417 call _totalCapacity _mt[243] _arg1[932048]))
    unknown call_tmp[932726] "expr temp" "maybe param" "maybe type" "temp"
    (932729 'move' call_tmp[932726](932421 call _totalCapacity _mt[243] _arg2[932049]))
    unknown call_tmp[932731] "expr temp" "maybe param" "maybe type" "temp"
    (932734 'move' call_tmp[932731](932425 call < call_tmp[932721] call_tmp[932726]))
    if call_tmp[932731]
    {
      (932539 'move' ret[932479](932538 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932736] "expr temp" "maybe param" "maybe type" "temp"
    (932739 'move' call_tmp[932736](932431 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932048]))
    unknown call_tmp[932741] "expr temp" "maybe param" "maybe type" "temp"
    (932744 'move' call_tmp[932741](932435 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932049]))
    unknown call_tmp[932746] "expr temp" "maybe param" "maybe type" "temp"
    (932749 'move' call_tmp[932746](932439 call > call_tmp[932736] call_tmp[932741]))
    if call_tmp[932746]
    {
      (932544 'move' ret[932479](932543 'deref' 1))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    unknown call_tmp[932751] "expr temp" "maybe param" "maybe type" "temp"
    (932754 'move' call_tmp[932751](932445 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932048]))
    unknown call_tmp[932756] "expr temp" "maybe param" "maybe type" "temp"
    (932759 'move' call_tmp[932756](932449 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932049]))
    unknown call_tmp[932761] "expr temp" "maybe param" "maybe type" "temp"
    (932764 'move' call_tmp[932761](932453 call < call_tmp[932751] call_tmp[932756]))
    if call_tmp[932761]
    {
      (932549 'move' ret[932479](932548 'deref' 0))
      gotoReturn _end_>[932477] _end_>[932477]
    }
    (932554 'move' ret[932479](932553 'deref' 0))
    label _end_>[932477]
    (932481 return ret[932479])
  }
  where {
    unknown call_tmp[932766] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932769 'move' call_tmp[932766](932052 'typeof' _arg1[932048]))
    unknown call_tmp[932771] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (932774 'move' call_tmp[932771](932054 'typeof' _arg2[932049]))
    unknown call_tmp[932776] "expr temp" "maybe param" "maybe type" "temp"
    (932779 'move' call_tmp[932776](932056 call == call_tmp[932766] call_tmp[932771]))
    unknown call_tmp[932781] "expr temp" "maybe param" "maybe type" "temp"
    (932784 'move' call_tmp[932781](932257 call chpl_fields_are_comparable[932058] _arg1[932048] _arg2[932049]))
    (932261 '&' call_tmp[932776] call_tmp[932781])
  }
  function chpl_fields_are_comparable[932798](arg _arg1[932800]:list[304122](?), arg _arg2[932801]:list[304122](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[932880]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[932887] "expr temp" "maybe param" "maybe type" "temp"
    (932890 'move' call_tmp[932887](932804 call parSafe _mt[243] _arg1[932800]))
    unknown call_tmp[932892] "expr temp" "maybe param" "maybe type" "temp"
    (932895 'move' call_tmp[932892](932808 call parSafe _mt[243] _arg2[932801]))
    unknown call_tmp[932897] "expr temp" "maybe param" "maybe type" "temp"
    (932900 'move' call_tmp[932897](932812 'call resolves' c">=" call_tmp[932887] call_tmp[932892]))
    unknown call_tmp[932902] "expr temp" "maybe param" "maybe type" "temp"
    (932905 'move' call_tmp[932902](932814 call _size _mt[243] _arg1[932800]))
    unknown call_tmp[932907] "expr temp" "maybe param" "maybe type" "temp"
    (932910 'move' call_tmp[932907](932818 call _size _mt[243] _arg2[932801]))
    unknown call_tmp[932912] "expr temp" "maybe param" "maybe type" "temp"
    (932915 'move' call_tmp[932912](932822 'call resolves' c">=" call_tmp[932902] call_tmp[932907]))
    unknown call_tmp[932917] "expr temp" "maybe param" "maybe type" "temp"
    (932920 'move' call_tmp[932917](932824 call _lock$ _mt[243] _arg1[932800]))
    unknown call_tmp[932922] "expr temp" "maybe param" "maybe type" "temp"
    (932925 'move' call_tmp[932922](932828 call _lock$ _mt[243] _arg2[932801]))
    unknown call_tmp[932927] "expr temp" "maybe param" "maybe type" "temp"
    (932930 'move' call_tmp[932927](932832 'call resolves' c">=" call_tmp[932917] call_tmp[932922]))
    unknown call_tmp[932932] "expr temp" "maybe param" "maybe type" "temp"
    (932935 'move' call_tmp[932932](932834 call _arrays _mt[243] _arg1[932800]))
    unknown call_tmp[932937] "expr temp" "maybe param" "maybe type" "temp"
    (932940 'move' call_tmp[932937](932838 call _arrays _mt[243] _arg2[932801]))
    unknown call_tmp[932942] "expr temp" "maybe param" "maybe type" "temp"
    (932945 'move' call_tmp[932942](932842 'call resolves' c">=" call_tmp[932932] call_tmp[932937]))
    unknown call_tmp[932947] "expr temp" "maybe param" "maybe type" "temp"
    (932950 'move' call_tmp[932947](932844 call _arrayCapacity _mt[243] _arg1[932800]))
    unknown call_tmp[932952] "expr temp" "maybe param" "maybe type" "temp"
    (932955 'move' call_tmp[932952](932848 call _arrayCapacity _mt[243] _arg2[932801]))
    unknown call_tmp[932957] "expr temp" "maybe param" "maybe type" "temp"
    (932960 'move' call_tmp[932957](932852 'call resolves' c">=" call_tmp[932947] call_tmp[932952]))
    unknown call_tmp[932962] "expr temp" "maybe param" "maybe type" "temp"
    (932965 'move' call_tmp[932962](932854 call _totalCapacity _mt[243] _arg1[932800]))
    unknown call_tmp[932967] "expr temp" "maybe param" "maybe type" "temp"
    (932970 'move' call_tmp[932967](932858 call _totalCapacity _mt[243] _arg2[932801]))
    unknown call_tmp[932972] "expr temp" "maybe param" "maybe type" "temp"
    (932975 'move' call_tmp[932972](932862 'call resolves' c">=" call_tmp[932962] call_tmp[932967]))
    unknown call_tmp[932977] "expr temp" "maybe param" "maybe type" "temp"
    (932980 'move' call_tmp[932977](932864 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932800]))
    unknown call_tmp[932982] "expr temp" "maybe param" "maybe type" "temp"
    (932985 'move' call_tmp[932982](932868 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932801]))
    unknown call_tmp[932987] "expr temp" "maybe param" "maybe type" "temp"
    (932990 'move' call_tmp[932987](932872 'call resolves' c">=" call_tmp[932977] call_tmp[932982]))
    unknown call_tmp[932992] "expr temp" "maybe param" "maybe type" "temp"
    (932995 'move' call_tmp[932992](932874 '&' call_tmp[932897] call_tmp[932912] call_tmp[932927] call_tmp[932942] call_tmp[932957] call_tmp[932972] call_tmp[932987]))
    (932885 'move' ret[932880](932884 'deref' call_tmp[932992]))
    (932882 return ret[932880])
  }
  function >=[932786](arg _arg1[932788]:list[304122](?), arg _arg2[932789]:list[304122](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[933219]:bool[10] "RVV" "temp"
    unknown call_tmp[933296] "expr temp" "maybe param" "maybe type" "temp"
    (933299 'move' call_tmp[933296](933003 call parSafe _mt[243] _arg1[932788]))
    unknown call_tmp[933301] "expr temp" "maybe param" "maybe type" "temp"
    (933304 'move' call_tmp[933301](933007 call parSafe _mt[243] _arg2[932789]))
    unknown call_tmp[933306] "expr temp" "maybe param" "maybe type" "temp"
    (933309 'move' call_tmp[933306](933011 call > call_tmp[933296] call_tmp[933301]))
    if call_tmp[933306]
    {
      (933224 'move' ret[933219](933223 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933311] "expr temp" "maybe param" "maybe type" "temp"
    (933314 'move' call_tmp[933311](933017 call parSafe _mt[243] _arg1[932788]))
    unknown call_tmp[933316] "expr temp" "maybe param" "maybe type" "temp"
    (933319 'move' call_tmp[933316](933021 call parSafe _mt[243] _arg2[932789]))
    unknown call_tmp[933321] "expr temp" "maybe param" "maybe type" "temp"
    (933324 'move' call_tmp[933321](933025 call < call_tmp[933311] call_tmp[933316]))
    if call_tmp[933321]
    {
      (933229 'move' ret[933219](933228 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933326] "expr temp" "maybe param" "maybe type" "temp"
    (933329 'move' call_tmp[933326](933031 call _size _mt[243] _arg1[932788]))
    unknown call_tmp[933331] "expr temp" "maybe param" "maybe type" "temp"
    (933334 'move' call_tmp[933331](933035 call _size _mt[243] _arg2[932789]))
    unknown call_tmp[933336] "expr temp" "maybe param" "maybe type" "temp"
    (933339 'move' call_tmp[933336](933039 call > call_tmp[933326] call_tmp[933331]))
    if call_tmp[933336]
    {
      (933234 'move' ret[933219](933233 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933341] "expr temp" "maybe param" "maybe type" "temp"
    (933344 'move' call_tmp[933341](933045 call _size _mt[243] _arg1[932788]))
    unknown call_tmp[933346] "expr temp" "maybe param" "maybe type" "temp"
    (933349 'move' call_tmp[933346](933049 call _size _mt[243] _arg2[932789]))
    unknown call_tmp[933351] "expr temp" "maybe param" "maybe type" "temp"
    (933354 'move' call_tmp[933351](933053 call < call_tmp[933341] call_tmp[933346]))
    if call_tmp[933351]
    {
      (933239 'move' ret[933219](933238 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933356] "expr temp" "maybe param" "maybe type" "temp"
    (933359 'move' call_tmp[933356](933059 call _lock$ _mt[243] _arg1[932788]))
    unknown call_tmp[933361] "expr temp" "maybe param" "maybe type" "temp"
    (933364 'move' call_tmp[933361](933063 call _lock$ _mt[243] _arg2[932789]))
    unknown call_tmp[933366] "expr temp" "maybe param" "maybe type" "temp"
    (933369 'move' call_tmp[933366](933067 call > call_tmp[933356] call_tmp[933361]))
    if call_tmp[933366]
    {
      (933244 'move' ret[933219](933243 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933371] "expr temp" "maybe param" "maybe type" "temp"
    (933374 'move' call_tmp[933371](933073 call _lock$ _mt[243] _arg1[932788]))
    unknown call_tmp[933376] "expr temp" "maybe param" "maybe type" "temp"
    (933379 'move' call_tmp[933376](933077 call _lock$ _mt[243] _arg2[932789]))
    unknown call_tmp[933381] "expr temp" "maybe param" "maybe type" "temp"
    (933384 'move' call_tmp[933381](933081 call < call_tmp[933371] call_tmp[933376]))
    if call_tmp[933381]
    {
      (933249 'move' ret[933219](933248 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933386] "expr temp" "maybe param" "maybe type" "temp"
    (933389 'move' call_tmp[933386](933087 call _arrays _mt[243] _arg1[932788]))
    unknown call_tmp[933391] "expr temp" "maybe param" "maybe type" "temp"
    (933394 'move' call_tmp[933391](933091 call _arrays _mt[243] _arg2[932789]))
    unknown call_tmp[933396] "expr temp" "maybe param" "maybe type" "temp"
    (933399 'move' call_tmp[933396](933095 call > call_tmp[933386] call_tmp[933391]))
    if call_tmp[933396]
    {
      (933254 'move' ret[933219](933253 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933401] "expr temp" "maybe param" "maybe type" "temp"
    (933404 'move' call_tmp[933401](933101 call _arrays _mt[243] _arg1[932788]))
    unknown call_tmp[933406] "expr temp" "maybe param" "maybe type" "temp"
    (933409 'move' call_tmp[933406](933105 call _arrays _mt[243] _arg2[932789]))
    unknown call_tmp[933411] "expr temp" "maybe param" "maybe type" "temp"
    (933414 'move' call_tmp[933411](933109 call < call_tmp[933401] call_tmp[933406]))
    if call_tmp[933411]
    {
      (933259 'move' ret[933219](933258 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933416] "expr temp" "maybe param" "maybe type" "temp"
    (933419 'move' call_tmp[933416](933115 call _arrayCapacity _mt[243] _arg1[932788]))
    unknown call_tmp[933421] "expr temp" "maybe param" "maybe type" "temp"
    (933424 'move' call_tmp[933421](933119 call _arrayCapacity _mt[243] _arg2[932789]))
    unknown call_tmp[933426] "expr temp" "maybe param" "maybe type" "temp"
    (933429 'move' call_tmp[933426](933123 call > call_tmp[933416] call_tmp[933421]))
    if call_tmp[933426]
    {
      (933264 'move' ret[933219](933263 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933431] "expr temp" "maybe param" "maybe type" "temp"
    (933434 'move' call_tmp[933431](933129 call _arrayCapacity _mt[243] _arg1[932788]))
    unknown call_tmp[933436] "expr temp" "maybe param" "maybe type" "temp"
    (933439 'move' call_tmp[933436](933133 call _arrayCapacity _mt[243] _arg2[932789]))
    unknown call_tmp[933441] "expr temp" "maybe param" "maybe type" "temp"
    (933444 'move' call_tmp[933441](933137 call < call_tmp[933431] call_tmp[933436]))
    if call_tmp[933441]
    {
      (933269 'move' ret[933219](933268 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933446] "expr temp" "maybe param" "maybe type" "temp"
    (933449 'move' call_tmp[933446](933143 call _totalCapacity _mt[243] _arg1[932788]))
    unknown call_tmp[933451] "expr temp" "maybe param" "maybe type" "temp"
    (933454 'move' call_tmp[933451](933147 call _totalCapacity _mt[243] _arg2[932789]))
    unknown call_tmp[933456] "expr temp" "maybe param" "maybe type" "temp"
    (933459 'move' call_tmp[933456](933151 call > call_tmp[933446] call_tmp[933451]))
    if call_tmp[933456]
    {
      (933274 'move' ret[933219](933273 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933461] "expr temp" "maybe param" "maybe type" "temp"
    (933464 'move' call_tmp[933461](933157 call _totalCapacity _mt[243] _arg1[932788]))
    unknown call_tmp[933466] "expr temp" "maybe param" "maybe type" "temp"
    (933469 'move' call_tmp[933466](933161 call _totalCapacity _mt[243] _arg2[932789]))
    unknown call_tmp[933471] "expr temp" "maybe param" "maybe type" "temp"
    (933474 'move' call_tmp[933471](933165 call < call_tmp[933461] call_tmp[933466]))
    if call_tmp[933471]
    {
      (933279 'move' ret[933219](933278 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933476] "expr temp" "maybe param" "maybe type" "temp"
    (933479 'move' call_tmp[933476](933171 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932788]))
    unknown call_tmp[933481] "expr temp" "maybe param" "maybe type" "temp"
    (933484 'move' call_tmp[933481](933175 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932789]))
    unknown call_tmp[933486] "expr temp" "maybe param" "maybe type" "temp"
    (933489 'move' call_tmp[933486](933179 call > call_tmp[933476] call_tmp[933481]))
    if call_tmp[933486]
    {
      (933284 'move' ret[933219](933283 'deref' 1))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    unknown call_tmp[933491] "expr temp" "maybe param" "maybe type" "temp"
    (933494 'move' call_tmp[933491](933185 call _dummyFieldToForceBorrowChecking _mt[243] _arg1[932788]))
    unknown call_tmp[933496] "expr temp" "maybe param" "maybe type" "temp"
    (933499 'move' call_tmp[933496](933189 call _dummyFieldToForceBorrowChecking _mt[243] _arg2[932789]))
    unknown call_tmp[933501] "expr temp" "maybe param" "maybe type" "temp"
    (933504 'move' call_tmp[933501](933193 call < call_tmp[933491] call_tmp[933496]))
    if call_tmp[933501]
    {
      (933289 'move' ret[933219](933288 'deref' 0))
      gotoReturn _end_>=[933217] _end_>=[933217]
    }
    (933294 'move' ret[933219](933293 'deref' 1))
    label _end_>=[933217]
    (933221 return ret[933219])
  }
  where {
    unknown call_tmp[933506] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933509 'move' call_tmp[933506](932792 'typeof' _arg1[932788]))
    unknown call_tmp[933511] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (933514 'move' call_tmp[933511](932794 'typeof' _arg2[932789]))
    unknown call_tmp[933516] "expr temp" "maybe param" "maybe type" "temp"
    (933519 'move' call_tmp[933516](932796 call == call_tmp[933506] call_tmp[933511]))
    unknown call_tmp[933521] "expr temp" "maybe param" "maybe type" "temp"
    (933524 'move' call_tmp[933521](932997 call chpl_fields_are_comparable[932798] _arg1[932788] _arg2[932789]))
    (933001 '&' call_tmp[933516] call_tmp[933521])
  }
  function chpl__defaultHash[933526](arg r[933528]:list[304122](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[933604] "RVV" "temp"
    unknown call_tmp[933611] "expr temp" "maybe param" "maybe type" "temp"
    (933614 'move' call_tmp[933611](933590 call _dummyFieldToForceBorrowChecking _mt[243] r[933528]))
    unknown call_tmp[933616] "expr temp" "maybe param" "maybe type" "temp"
    (933619 'move' call_tmp[933616](933594 call chpl__defaultHash call_tmp[933611]))
    unknown call_tmp[933621] "expr temp" "maybe param" "maybe type" "temp"
    (933624 'move' call_tmp[933621](933581 call _totalCapacity _mt[243] r[933528]))
    unknown call_tmp[933626] "expr temp" "maybe param" "maybe type" "temp"
    (933629 'move' call_tmp[933626](933585 call chpl__defaultHash call_tmp[933621]))
    unknown call_tmp[933631] "expr temp" "maybe param" "maybe type" "temp"
    (933634 'move' call_tmp[933631](933572 call _arrayCapacity _mt[243] r[933528]))
    unknown call_tmp[933636] "expr temp" "maybe param" "maybe type" "temp"
    (933639 'move' call_tmp[933636](933576 call chpl__defaultHash call_tmp[933631]))
    unknown call_tmp[933641] "expr temp" "maybe param" "maybe type" "temp"
    (933644 'move' call_tmp[933641](933563 call _arrays _mt[243] r[933528]))
    unknown call_tmp[933646] "expr temp" "maybe param" "maybe type" "temp"
    (933649 'move' call_tmp[933646](933567 call chpl__defaultHash call_tmp[933641]))
    unknown call_tmp[933651] "expr temp" "maybe param" "maybe type" "temp"
    (933654 'move' call_tmp[933651](933554 call _lock$ _mt[243] r[933528]))
    unknown call_tmp[933656] "expr temp" "maybe param" "maybe type" "temp"
    (933659 'move' call_tmp[933656](933558 call chpl__defaultHash call_tmp[933651]))
    unknown call_tmp[933661] "expr temp" "maybe param" "maybe type" "temp"
    (933664 'move' call_tmp[933661](933545 call _size _mt[243] r[933528]))
    unknown call_tmp[933666] "expr temp" "maybe param" "maybe type" "temp"
    (933669 'move' call_tmp[933666](933549 call chpl__defaultHash call_tmp[933661]))
    unknown call_tmp[933671] "expr temp" "maybe param" "maybe type" "temp"
    (933674 'move' call_tmp[933671](933536 call parSafe _mt[243] r[933528]))
    unknown call_tmp[933676] "expr temp" "maybe param" "maybe type" "temp"
    (933679 'move' call_tmp[933676](933540 call chpl__defaultHash call_tmp[933671]))
    unknown call_tmp[933681] "expr temp" "maybe param" "maybe type" "temp"
    (933684 'move' call_tmp[933681](933530 call eltType _mt[243] r[933528]))
    unknown call_tmp[933686] "expr temp" "maybe param" "maybe type" "temp"
    (933689 'move' call_tmp[933686](933534 call chpl__defaultHash call_tmp[933681]))
    unknown call_tmp[933691] "expr temp" "maybe param" "maybe type" "temp"
    (933694 'move' call_tmp[933691](933542 call chpl__defaultHashCombine call_tmp[933676] call_tmp[933686] 2))
    unknown call_tmp[933696] "expr temp" "maybe param" "maybe type" "temp"
    (933699 'move' call_tmp[933696](933551 call chpl__defaultHashCombine call_tmp[933666] call_tmp[933691] 3))
    unknown call_tmp[933701] "expr temp" "maybe param" "maybe type" "temp"
    (933704 'move' call_tmp[933701](933560 call chpl__defaultHashCombine call_tmp[933656] call_tmp[933696] 4))
    unknown call_tmp[933706] "expr temp" "maybe param" "maybe type" "temp"
    (933709 'move' call_tmp[933706](933569 call chpl__defaultHashCombine call_tmp[933646] call_tmp[933701] 5))
    unknown call_tmp[933711] "expr temp" "maybe param" "maybe type" "temp"
    (933714 'move' call_tmp[933711](933578 call chpl__defaultHashCombine call_tmp[933636] call_tmp[933706] 6))
    unknown call_tmp[933716] "expr temp" "maybe param" "maybe type" "temp"
    (933719 'move' call_tmp[933716](933587 call chpl__defaultHashCombine call_tmp[933626] call_tmp[933711] 7))
    unknown call_tmp[933721] "expr temp" "maybe param" "maybe type" "temp"
    (933724 'move' call_tmp[933721](933596 call chpl__defaultHashCombine call_tmp[933616] call_tmp[933716] 8))
    (933609 'move' ret[933604](933608 'deref' call_tmp[933721]))
    (933606 return ret[933604])
  }
  type list[304122](?) unknown eltType[298370] "type variable" unknown parSafe[298374] "param" 0 val _size[298379]:int(64)[13] "no doc" 0 unknown _lock$[298392] "no doc"(298389 IfExpr  parSafe[298374] then
  { scopeless
    (748168 'new' _LockWrapper[405255](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298404] "no doc" nil[44](298402 call _ddata[11695](?)(298400 call _ddata[11695](?) eltType[298370])) val _arrayCapacity[298409]:int(64)[13] "no doc" 0 val _totalCapacity[298414]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298422] "no doc"(298421 call _dummyFieldType eltType[298370])
  function =[304392](ref arg lhs[304389]:list[304122](?), arg rhs[304399]:list[304122](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304407 call(304403 call (partial) clear _mt[243] lhs[304389]))
    (491579 'end of statement')
    (304418 call(304413 call (partial) extend _mt[243] lhs[304389]) rhs[304399])
    (539637 return _void[55])
  }
  where {
    unknown call_tmp[747643] "expr temp" "maybe param" "maybe type" "temp"
    (747646 'move' call_tmp[747643](467988 'query' lhs[304389] 1))
    unknown call_tmp[747648] "expr temp" "maybe param" "maybe type" "temp"
    (747651 'move' call_tmp[747648](467985 'query' rhs[304399] 1))
    unknown call_tmp[747653] "expr temp" "maybe param" "maybe type" "temp"
    (747656 'move' call_tmp[747653](467991 call == call_tmp[747643] call_tmp[747648]))
    (467995 call & 1 call_tmp[747653])
  }
  function ==[304433](arg a[304430]:list[304122](?), arg b[304440]:list[304122](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539641] "RVV" "temp"
    unknown call_tmp[747660] "expr temp" "maybe param" "maybe type" "temp"
    (747663 'move' call_tmp[747660](304445 call size _mt[243] a[304430]))
    unknown call_tmp[747667] "expr temp" "maybe param" "maybe type" "temp"
    (747670 'move' call_tmp[747667](304449 call size _mt[243] b[304440]))
    unknown call_tmp[747672] "expr temp" "maybe param" "maybe type" "temp"
    (747675 'move' call_tmp[747672](304452 call != call_tmp[747660] call_tmp[747667]))
    unknown call_tmp[747677] "expr temp" "maybe param" "maybe type" "temp"
    (747680 'move' call_tmp[747677](304457 call _cond_test call_tmp[747672]))
    if call_tmp[747677]
    {
      (539647 'move' ret[539641](539646 'coerce' 0 bool[10]))
      gotoReturn _end_==[539639] _end_==[539639]
    }
    {
      unknown _indexOfInterest[304491] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304492] "expr temp" "temp"
      unknown call_tmp[747684] "expr temp" "maybe param" "maybe type" "temp"
      (747687 'move' call_tmp[747684](304507 call size _mt[243] a[304430]))
      unknown call_tmp[747689] "expr temp" "maybe param" "maybe type" "temp"
      (747692 'move' call_tmp[747689](304511 call chpl_direct_counted_range_iter 0 call_tmp[747684]))
      (304501 'move' _iterator[304492](304499 call _getIterator call_tmp[747689]))
      Defer
      {
        {
          (304527 call _freeIterator _iterator[304492])
        }
      }
      { scopeless type
        (304516 'move' _indexOfInterest[304491](304513 call iteratorIndex _iterator[304492]))
      }
      ForLoop[304493]
      {
        unknown i[304520] "index var" "insert auto destroy"
        (491583 'end of statement')
        (304522 'move' i[304520] _indexOfInterest[304491])
        (491584 'end of statement' i[304520])
        unknown call_tmp[747694] "expr temp" "maybe param" "maybe type" "temp"
        (747697 'move' call_tmp[747694](304476 call a[304430] i[304520]))
        unknown call_tmp[747699] "expr temp" "maybe param" "maybe type" "temp"
        (747702 'move' call_tmp[747699](304480 call b[304440] i[304520]))
        unknown call_tmp[747704] "expr temp" "maybe param" "maybe type" "temp"
        (747707 'move' call_tmp[747704](304481 call != call_tmp[747694] call_tmp[747699]))
        unknown call_tmp[747709] "expr temp" "maybe param" "maybe type" "temp"
        (747712 'move' call_tmp[747709](304486 call _cond_test call_tmp[747704]))
        if call_tmp[747709]
        {
          (539653 'move' ret[539641](539652 'coerce' 0 bool[10]))
          gotoReturn _end_==[539639] _end_==[539639]
        }
        label _continueLabel[304496]
        _indexOfInterest[304491]
        _iterator[304492]
      }
      label _breakLabel[304497]
    }
    (539659 'move' ret[539641](539658 'coerce' 1 bool[10]))
    label _end_==[539639]
    (539643 return ret[539641])
  }
  where {
    unknown call_tmp[747714] "expr temp" "maybe param" "maybe type" "temp"
    (747717 'move' call_tmp[747714](468020 'query' a[304430] 1))
    unknown call_tmp[747719] "expr temp" "maybe param" "maybe type" "temp"
    (747722 'move' call_tmp[747719](468017 'query' b[304440] 1))
    unknown call_tmp[747724] "expr temp" "maybe param" "maybe type" "temp"
    (747727 'move' call_tmp[747724](468023 call == call_tmp[747714] call_tmp[747719]))
    (468027 call & 1 call_tmp[747724])
  }
  { scopeless type
    bool[10]
  }
  function !=[304551](arg a[304548]:list[304122](?), arg b[304558]:list[304122](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539663] "RVV" "temp"
    unknown call_tmp[747729] "expr temp" "maybe param" "maybe type" "temp"
    (747732 'move' call_tmp[747729](304564 call == a[304548] b[304558]))
    unknown call_tmp[747734] "expr temp" "maybe param" "maybe type" "temp"
    (747737 'move' call_tmp[747734](304566 call ! call_tmp[747729]))
    (539669 'move' ret[539663](539668 'coerce' call_tmp[747734] bool[10]))
    (539665 return ret[539663])
  }
  where {
    unknown call_tmp[747739] "expr temp" "maybe param" "maybe type" "temp"
    (747742 'move' call_tmp[747739](468052 'query' a[304548] 1))
    unknown call_tmp[747744] "expr temp" "maybe param" "maybe type" "temp"
    (747747 'move' call_tmp[747744](468049 'query' b[304558] 1))
    unknown call_tmp[747749] "expr temp" "maybe param" "maybe type" "temp"
    (747752 'move' call_tmp[747749](468055 call == call_tmp[747739] call_tmp[747744]))
    (468059 call & 1 call_tmp[747749])
  }
  { scopeless type
    bool[10]
  }
  (355568 'used modules list'(353117 'use' ChapelStandard[20264])(298147 'import' ChapelLocks[187268])(298151 'use' HaltWrappers[209915])(298154 'use' Sort[267885])(298367 'use' IO[230808]))
  (364950 'referenced modules list' ChapelLocks[187268] Sort[267885])
}