AST dump for ChapelSerializedBroadcast after pass scopeResolve.
Module use list: ChapelLocale CPtr 

{
  unknown chpl__enableSerializedGlobals[171427] "config" "param" 1
  (171430 'end of statement')
  function chpl_get_global_serialize_table[171437](arg idx[171434] :
  int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171450](ref arg localeZeroGlobal[171447] :
  unknown T[171445], arg id[171453] :
  int(64)[13]) : _unknown[51] "no return value for void"
  {
    if(171795 call _cond_test(171465 call &&(171460 call isArray localeZeroGlobal[171447])(171464 call chpl__isArrayView localeZeroGlobal[171447])))
    {
      (171486 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      const data[171495] "const"(171494 call(171490 call . localeZeroGlobal[171447] c"chpl__serialize"))
      (171498 'end of statement')
      const root[171504] "const"(171501 call .(361490 call here[90439]) c"id")
      (171507 'end of statement')
      {
        unknown tmpIter[171578] "expr temp" "maybe ref" "no copy" "temp"
        (171581 'move' tmpIter[171578] Locales[113668])
        unknown isRngDomArr[171776] "maybe param" "temp"
        (171791 'move' isRngDomArr[171776](171789 call ||(171778 call isBoundedRange tmpIter[171578])(171787 call ||(171781 call isDomain tmpIter[171578])(171784 call isArray tmpIter[171578]))))
        if isRngDomArr[171776]
        {
          const _coforallCount[171643] "const" "end count" "temp"
          (171712 'move' _coforallCount[171643](171709 call _endCountAlloc 1))
          unknown numTasks[171644] "temp"
          (171696 'move' numTasks[171644](171692 call . tmpIter[171578] c"size"))
          (171687 call _upEndCount _coforallCount[171643] 1 numTasks[171644])
          (171684 call chpl_resetTaskSpawn numTasks[171644])
          unknown _indexOfInterest[171651] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171652] "expr temp" "temp"
          (171661 'move' _iterator[171652](171659 call _getIterator tmpIter[171578]))
          Defer
          {
            {
              (171677 call _freeIterator _iterator[171652])
            }
          }
          { scopeless type
            (171666 'move' _indexOfInterest[171651](171663 call iteratorIndex _iterator[171652]))
          }
          ForLoop[171653]
          {
            unknown loc[171670] "coforall index var" "index var" "insert auto destroy"
            (171672 'move' loc[171670] _indexOfInterest[171651])
            {
              {
                const tmp[171587] "const" "temp"
                (171589 'move' tmp[171587](171591 'deref'(171592 '_wide_get_locale' loc[171670])))
                {
                  if(171596 call _cond_test(171598 call !=(171600 call .(361495 call here[90439]) c"id") root[171504]))
                  {
                    unknown temp[171606] "no auto destroy" "no copy"(171612 call(171608 call .(171609 'typeof' localeZeroGlobal[171447]) c"chpl__deserialize") data[171495])
                    (171615 'end of statement')
                    const destVoidPtr[171617] "const"(171619 call chpl_get_global_serialize_table id[171453])
                    (171622 'end of statement')
                    const dest[171624] "const"(171626 call _cast(171628 call c_ptr[205057](?)(171629 'typeof' localeZeroGlobal[171447])) destVoidPtr[171617])
                    (171633 'end of statement')
                    (171634 '='(171639 call(171636 call . dest[171624] c"deref")) temp[171606])
                  }
                }
                (171584 'elided on block' 0 tmp[171587])
              }
              (171646 call _downEndCount _coforallCount[171643] nil[44])
              (171645 'coforall loop')
            }
            label _continueLabel[171656]
            _indexOfInterest[171651]
            _iterator[171652]
          }
          label _breakLabel[171657]
          Defer
          {
            {
              (171699 call _endCountFree _coforallCount[171643])
            }
          }
          (171704 call _waitEndCount _coforallCount[171643] 1 numTasks[171644])
        }
        {
          const _coforallCount[171716] "const" "end count" "temp"
          (171773 'move' _coforallCount[171716](171770 call _endCountAlloc 1))
          unknown _indexOfInterest[171724] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171725] "expr temp" "temp"
          (171734 'move' _iterator[171725](171732 call _getIterator tmpIter[171578]))
          Defer
          {
            {
              (171750 call _freeIterator _iterator[171725])
            }
          }
          { scopeless type
            (171739 'move' _indexOfInterest[171724](171736 call iteratorIndex _iterator[171725]))
          }
          ForLoop[171726]
          {
            unknown loc[171743] "coforall index var" "index var" "insert auto destroy"
            (171745 'move' loc[171743] _indexOfInterest[171724])
            (171757 call _upEndCount _coforallCount[171716] 1)
            {
              {
                const tmp[171570] "const" "temp"
                (171571 'move' tmp[171570](171568 'deref'(171567 '_wide_get_locale' loc[171743])))
                {
                  if(171562 call _cond_test(171516 call !=(171512 call .(361492 call here[90439]) c"id") root[171504]))
                  {
                    unknown temp[171526] "no auto destroy" "no copy"(171525 call(171520 call .(171519 'typeof' localeZeroGlobal[171447]) c"chpl__deserialize") data[171495])
                    (171529 'end of statement')
                    const destVoidPtr[171535] "const"(171534 call chpl_get_global_serialize_table id[171453])
                    (171538 'end of statement')
                    const dest[171547] "const"(171545 call _cast(171544 call c_ptr[205057](?)(171542 'typeof' localeZeroGlobal[171447])) destVoidPtr[171535])
                    (171550 'end of statement')
                    (171560 '='(171558 call(171554 call . dest[171547] c"deref")) temp[171526])
                  }
                }
                (171574 'elided on block' 0 tmp[171570])
              }
              (171719 call _downEndCount _coforallCount[171716] nil[44])
              (171718 'coforall loop')
            }
            label _continueLabel[171729]
            _indexOfInterest[171724]
            _iterator[171725]
          }
          label _breakLabel[171730]
          Defer
          {
            {
              (171761 call _endCountFree _coforallCount[171716])
            }
          }
          (171766 call _waitEndCount _coforallCount[171716] 1)
        }
      }
    }
  }
  where {
    chpl__enableSerializedGlobals[171427]
  }
  function chpl__destroyBroadcastedGlobal[171807](ref arg localeZeroGlobal[171805]:_any[178](?), arg id[171810] :
  int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171816] "type variable"(171815 'typeof' localeZeroGlobal[171805])
    const root[171824] "const"(171821 call .(361498 call here[90439]) c"id")
    (171827 'end of statement')
    {
      unknown tmpIter[171889] "expr temp" "maybe ref" "no copy" "temp"
      (171892 'move' tmpIter[171889] Locales[113668])
      unknown isRngDomArr[172080] "maybe param" "temp"
      (172095 'move' isRngDomArr[172080](172093 call ||(172082 call isBoundedRange tmpIter[171889])(172091 call ||(172085 call isDomain tmpIter[171889])(172088 call isArray tmpIter[171889]))))
      if isRngDomArr[172080]
      {
        const _coforallCount[171947] "const" "end count" "temp"
        (172016 'move' _coforallCount[171947](172013 call _endCountAlloc 1))
        unknown numTasks[171948] "temp"
        (172000 'move' numTasks[171948](171996 call . tmpIter[171889] c"size"))
        (171991 call _upEndCount _coforallCount[171947] 1 numTasks[171948])
        (171988 call chpl_resetTaskSpawn numTasks[171948])
        unknown _indexOfInterest[171955] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171956] "expr temp" "temp"
        (171965 'move' _iterator[171956](171963 call _getIterator tmpIter[171889]))
        Defer
        {
          {
            (171981 call _freeIterator _iterator[171956])
          }
        }
        { scopeless type
          (171970 'move' _indexOfInterest[171955](171967 call iteratorIndex _iterator[171956]))
        }
        ForLoop[171957]
        {
          unknown loc[171974] "coforall index var" "index var" "insert auto destroy"
          (171976 'move' loc[171974] _indexOfInterest[171955])
          {
            {
              const tmp[171898] "const" "temp"
              (171900 'move' tmp[171898](171902 'deref'(171903 '_wide_get_locale' loc[171974])))
              {
                if(171907 call _cond_test(171909 call !=(171911 call .(361503 call here[90439]) c"id") root[171824]))
                {
                  const voidPtr[171917] "const"(171919 call chpl_get_global_serialize_table id[171810])
                  (171922 'end of statement')
                  unknown ptr[171924](171926 call _cast(171928 call c_ptr[205057](?) globalType[171816]) voidPtr[171917])
                  (171932 'end of statement')
                  unknown temp[171934] "no auto destroy" "no copy"(171939 call(171936 call . ptr[171924] c"deref"))
                  (171941 'end of statement')
                  (171943 call chpl__autoDestroy temp[171934])
                }
              }
              (171895 'elided on block' 0 tmp[171898])
            }
            (171950 call _downEndCount _coforallCount[171947] nil[44])
            (171949 'coforall loop')
          }
          label _continueLabel[171960]
          _indexOfInterest[171955]
          _iterator[171956]
        }
        label _breakLabel[171961]
        Defer
        {
          {
            (172003 call _endCountFree _coforallCount[171947])
          }
        }
        (172008 call _waitEndCount _coforallCount[171947] 1 numTasks[171948])
      }
      {
        const _coforallCount[172020] "const" "end count" "temp"
        (172077 'move' _coforallCount[172020](172074 call _endCountAlloc 1))
        unknown _indexOfInterest[172028] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172029] "expr temp" "temp"
        (172038 'move' _iterator[172029](172036 call _getIterator tmpIter[171889]))
        Defer
        {
          {
            (172054 call _freeIterator _iterator[172029])
          }
        }
        { scopeless type
          (172043 'move' _indexOfInterest[172028](172040 call iteratorIndex _iterator[172029]))
        }
        ForLoop[172030]
        {
          unknown loc[172047] "coforall index var" "index var" "insert auto destroy"
          (172049 'move' loc[172047] _indexOfInterest[172028])
          (172061 call _upEndCount _coforallCount[172020] 1)
          {
            {
              const tmp[171881] "const" "temp"
              (171882 'move' tmp[171881](171879 'deref'(171878 '_wide_get_locale' loc[172047])))
              {
                if(171873 call _cond_test(171836 call !=(171832 call .(361500 call here[90439]) c"id") root[171824]))
                {
                  const voidPtr[171842] "const"(171841 call chpl_get_global_serialize_table id[171810])
                  (171845 'end of statement')
                  unknown ptr[171854](171852 call _cast(171851 call c_ptr[205057](?) globalType[171816]) voidPtr[171842])
                  (171857 'end of statement')
                  unknown temp[171864] "no auto destroy" "no copy"(171863 call(171859 call . ptr[171854] c"deref"))
                  (171867 'end of statement')
                  (171871 call chpl__autoDestroy temp[171864])
                }
              }
              (171885 'elided on block' 0 tmp[171881])
            }
            (172023 call _downEndCount _coforallCount[172020] nil[44])
            (172022 'coforall loop')
          }
          label _continueLabel[172033]
          _indexOfInterest[172028]
          _iterator[172029]
        }
        label _breakLabel[172034]
        Defer
        {
          {
            (172065 call _endCountFree _coforallCount[172020])
          }
        }
        (172070 call _waitEndCount _coforallCount[172020] 1)
      }
    }
  }
  where {
    chpl__enableSerializedGlobals[171427]
  }
  (355239 'used modules list'(171420 'use' ChapelLocale[89848])(171424 'use' CPtr[204946]))
}