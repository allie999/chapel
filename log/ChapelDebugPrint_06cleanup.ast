AST dump for ChapelDebugPrint after pass cleanup.
Module use list: 

{
  (188158 'use' ChapelStandard)
  (188160 'use' SysCTypes)
  (188163 'use' IO)
  function chpl_debug_stringify[188171](arg args[188168]:_any[178](?) ...) : _unknown[51]
  {
    unknown str[188191] ""
    (188194 'end of statement')
    {
      unknown i[188238] 0
      unknown tmp[188239] "maybe param" "temp"
      (188251 'move' tmp[188239](188249 call chpl_compute_low_param_loop_bound 0(188202 call -(188198 call . args c"size") 1)))
      unknown tmp[188240] "maybe param" "temp"
      (188264 'move' tmp[188240](188262 call chpl_compute_high_param_loop_bound 0(188256 call -(188258 call . args c"size") 1)))
      unknown tmp[188241] "maybe param" "temp"
      (188267 'move' tmp[188241] 1)
      ParamForLoop[188269]
      { i[188238] tmp[188239] tmp[188240] tmp[188241]
        {
          unknown tmp[188210](188209 call args i)
          (188213 'end of statement')
          if(188234 call _cond_test(188218 call _can_stringify_direct tmp))
          {
            (188224 call += str(188223 call stringify tmp))
          }
          {
            (188230 call += str "\?")
          }
        }
      }
      label _unused_continueLabel[188243]
      label _breakLabel[188242]
    }
    (188279 return str)
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188290](arg args[188287]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188298](arg fmt[188295] :
    c_string, arg f[188301] :
    c_string) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    unknown str[188312](188311 call chpl_debug_stringify(188309 'expand_tuple' args))
    (188315 'end of statement')
    (188341 call printf "%s\n"(188340 call(188336 call . str c"c_str")))
  }
  unknown chpl__testParFlag[188346] "config" "no doc" "param" 0
  (188349 'end of statement')
  unknown chpl__testParOn[188351] "no doc" 0
  (188354 'end of statement')
  function chpl__testParStart[188357]() : _unknown[51] "no doc" "no return value for void"
  {
    (188361 call = chpl__testParOn 1)
  }
  function chpl__testParStop[188369]() : _unknown[51] "no doc" "no return value for void"
  {
    (188373 call = chpl__testParOn 0)
  }
  function chpl__testPar[188385](arg args[188382]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    if(188490 call _cond_test(188389 call && chpl__testParFlag chpl__testParOn))
    {
      const file_cs[188398] "const"(188397 'chpl_lookupFilename'(188396 '_get_user_file')) c_string
      (188401 'end of statement')
      unknown file[188404] string[26]
      (188407 'end of statement')
      Try!
      {
        {
          (188413 call = file(188412 call createStringWithNewBuffer file_cs))
        }
      }
      const line[188423] "const"(188422 '_get_user_line')
      (188426 'end of statement')
      unknown str[188432](188431 call chpl_debug_stringify(188429 'expand_tuple' args))
      (188435 'end of statement')
      function printf[188442](arg fmt[188439] :
      c_string, arg f[188445] :
      c_string, arg ln[188449] :
      c_int, arg s[188453] :
      c_string) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
      }
      (188488 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs(188480 call _cast c_int line)(188487 call(188483 call . str c"c_str")))
    }
  }
  function chpl__testParWriteln[188503](arg args[188500]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    if(188588 call _cond_test(188507 call && chpl__testParFlag chpl__testParOn))
    {
      const file_cs[188516] "const"(188515 'chpl_lookupFilename'(188514 '_get_user_file')) c_string
      (188519 'end of statement')
      unknown file[188522] string[26]
      (188525 'end of statement')
      Try!
      {
        {
          (188531 call = file(188530 call createStringWithNewBuffer file_cs))
        }
      }
      const line[188541] "const"(188540 '_get_user_line')
      (188544 'end of statement')
      (188586 call writeln "CHPL TEST PAR (" file ":" line "): "(188585 'expand_tuple' args))
    }
  }
}