AST dump for ShellSort after pass normalize.
Module use list: ChapelStandard Sort 

{
  function chpl__init_ShellSort[416045]() : void[4] "insert line file info" "module init"
  {
    (537851 return _void[55])
  }
  function shellSort[273449](arg Data[273446]:_array[133588](?), arg comparator[273454]:_any[178](?) :
  defaultComparator[267889] =
  defaultComparator[267889], arg start[273462] :
  unknown call_tmp[748920] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[738655] "expr temp" "maybe param" "maybe type" "temp", arg end[273469] :
  unknown call_tmp[748933] "expr temp" "maybe param" "maybe type" "temp" =
  unknown call_tmp[738664] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[738673] "expr temp" "maybe param" "maybe type" "temp"
    (738676 'move' call_tmp[738673](466690 call eltType _mt[243] Data[273446]))
    (273476 call chpl_check_comparator comparator[273454] call_tmp[738673])
    (489992 'end of statement')
    unknown call_tmp[738680] "expr temp" "maybe param" "maybe type" "temp"
    (738683 'move' call_tmp[738680](466682 call _dom _mt[243] Data[273446]))
    unknown call_tmp[738687] "expr temp" "maybe param" "maybe type" "temp"
    (738690 'move' call_tmp[738687](273480 call rank _mt[243] call_tmp[738680]))
    unknown call_tmp[738692] "expr temp" "maybe param" "maybe type" "temp"
    (738695 'move' call_tmp[738692](273484 call != call_tmp[738687] 1))
    unknown call_tmp[738697] "expr temp" "maybe param" "maybe type" "temp"
    (738700 'move' call_tmp[738697](273507 call _cond_test call_tmp[738692]))
    if call_tmp[738697]
    {
      (273505 call compilerError "shellSort() requires 1-D array")
    }
    unknown call_tmp[738704] "expr temp" "maybe param" "maybe type" "temp"
    (738707 'move' call_tmp[738704](466686 call _dom _mt[243] Data[273446]))
    unknown call_tmp[738711] "expr temp" "maybe param" "maybe type" "temp"
    (738714 'move' call_tmp[738711](273513 call stridable _mt[243] call_tmp[738704]))
    unknown call_tmp[738716] "expr temp" "maybe param" "maybe type" "temp"
    (738719 'move' call_tmp[738716](273537 call _cond_test call_tmp[738711]))
    if call_tmp[738716]
    {
      (273535 call compilerError "shellSort() requires an array over a non-stridable domain")
    }
    unknown call_tmp[738721] "expr temp" "maybe param" "maybe type" "temp"
    (738724 'move' call_tmp[738721](273544 call + 1 end[273469]))
    unknown call_tmp[738726] "maybe param" "maybe type" "temp"
    (738729 'move' call_tmp[738726](273547 call - call_tmp[738721] start[273462]))
    unknown n[273549] "dead at end of block" "insert auto destroy"
    (548744 'init var' n[273549] call_tmp[738726])
    (273552 'end of statement')
    unknown js[273553] "dead at end of block" "insert auto destroy"
    (548746 'default init var' js[273553] int(64)[13])
    unknown hs[273557] "dead at end of block" "insert auto destroy"
    unknown call_tmp[738731] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (738734 'move' call_tmp[738731](273561 'typeof' js[273553]))
    (548748 'default init var' hs[273557] call_tmp[738731])
    (273562 'end of statement')
    unknown v[273563] "dead at end of block" "insert auto destroy"
    unknown call_tmp[738738] "expr temp" "maybe param" "maybe type" "temp"
    (738741 'move' call_tmp[738738](273567 call eltType _mt[243] Data[273446]))
    (548750 'default init var' v[273563] call_tmp[738738])
    unknown tmp[273570] "dead at end of block" "insert auto destroy"
    unknown call_tmp[738743] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (738746 'move' call_tmp[738743](273574 'typeof' v[273563]))
    (548752 'default init var' tmp[273570] call_tmp[738743])
    (273575 'end of statement')
    unknown call_tmp[738748] "maybe param" "maybe type" "temp"
    (738751 'move' call_tmp[738748](273591 call _build_tuple 701 301 132 57 23 10 4 1))
    const incs[273593] "dead at end of block" "const" "insert auto destroy"
    (548754 'init var' incs[273593] call_tmp[738748])
    (273596 'end of statement' js[273553] v[273563])
    {
      unknown _indexOfInterest[273771] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[273772] "expr temp" "temp"
      (273781 'move' _iterator[273772](273779 call _getIterator incs[273593]))
      Defer
      {
        {
          (273797 call _freeIterator _iterator[273772])
        }
      }
      { scopeless type
        (273786 'move' _indexOfInterest[273771](273783 call iteratorIndex _iterator[273772]))
      }
      ForLoop[273773]
      {
        unknown h[273790] "index var" "insert auto destroy"
        (489998 'end of statement')
        (273792 'move' h[273790] _indexOfInterest[273771])
        (489999 'end of statement' h[273790])
        {
          unknown call_tmp[738753] "expr temp" "maybe param" "maybe type" "temp"
          (738756 'move' call_tmp[738753](273602 call + h[273790] start[273462]))
          (273604 call = hs[273557] call_tmp[738753])
          (490001 'end of statement' hs[273557] h[273790])
          {
            unknown _indexOfInterest[273733] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[273734] "expr temp" "temp"
            unknown call_tmp[738758] "expr temp" "maybe param" "maybe type" "temp"
            (738761 'move' call_tmp[738758](273748 call chpl_direct_range_iter hs[273557] end[273469] 1))
            (273743 'move' _iterator[273734](273741 call _getIterator call_tmp[738758]))
            Defer
            {
              {
                (273764 call _freeIterator _iterator[273734])
              }
            }
            { scopeless type
              (273753 'move' _indexOfInterest[273733](273750 call iteratorIndex _iterator[273734]))
            }
            ForLoop[273735]
            {
              unknown is[273757] "index var" "insert auto destroy"
              (490005 'end of statement')
              (273759 'move' is[273757] _indexOfInterest[273733])
              (490006 'end of statement' is[273757])
              {
                unknown call_tmp[738763] "expr temp" "maybe param" "maybe type" "temp"
                (738766 'move' call_tmp[738763](273617 call Data[273446] is[273757]))
                (273618 call = v[273563] call_tmp[738763])
                (490008 'end of statement' v[273563] is[273757])
                (273624 call = js[273553] is[273757])
                (490011 'end of statement' js[273553] is[273757])
                {
                  unknown tmp[273668] "temp"
                  unknown tmp[434119] "maybe param" "temp"
                  (434130 'move' tmp[434119](273706 call >= js[273553] hs[273557]))
                  unknown call_tmp[738768] "expr temp" "maybe param" "maybe type" "temp"
                  (738771 'move' call_tmp[738768](434132 call _cond_invalid tmp[434119]))
                  if call_tmp[738768]
                  {
                    (434135 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[579800] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[579801] "maybe param" "temp"
                  unknown call_tmp[738773] "expr temp" "maybe param" "maybe type" "temp"
                  (738776 'move' call_tmp[738773](434120 call isTrue tmp[434119]))
                  (579806 'move' tmp[579801](579804 call _cond_test call_tmp[738773]))
                  if tmp[579801]
                  {
                    unknown tmp[579808] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[738778] "expr temp" "maybe param" "maybe type" "temp"
                    (738781 'move' call_tmp[738778](273717 call - js[273553] h[273790]))
                    unknown call_tmp[738783] "expr temp" "maybe param" "maybe type" "temp"
                    (738786 'move' call_tmp[738783](273715 call Data[273446] call_tmp[738778]))
                    unknown call_tmp[738788] "expr temp" "maybe param" "maybe type" "temp"
                    (738791 'move' call_tmp[738788](273712 call chpl_compare v[273563] call_tmp[738783] comparator[273454]))
                    unknown call_tmp[738793] "expr temp" "maybe param" "maybe type" "temp"
                    (738796 'move' call_tmp[738793](273710 call < call_tmp[738788] 0))
                    (579810 'move' tmp[579808](434123 call isTrue call_tmp[738793]))
                    (579815 'move' tmp[579800](579812 '_paramFoldLogical' tmp[579801] tmp[579808]))
                  }
                  {
                    (579820 'move' tmp[579800](579817 '_paramFoldLogical' tmp[579801] 0))
                  }
                  (273722 'move' tmp[273668](273702 call _cond_test tmp[579800]))
                  WhileDo[273673]
                  {
                    {
                      unknown call_tmp[738798] "expr temp" "maybe param" "maybe type" "temp"
                      (738801 'move' call_tmp[738798](273651 call Data[273446] js[273553]))
                      unknown call_tmp[738803] "expr temp" "maybe param" "maybe type" "temp"
                      (738806 'move' call_tmp[738803](273655 call - js[273553] h[273790]))
                      unknown call_tmp[738808] "expr temp" "maybe param" "maybe type" "temp"
                      (738811 'move' call_tmp[738808](273658 call Data[273446] call_tmp[738803]))
                      (273659 call = call_tmp[738798] call_tmp[738808])
                      (490015 'end of statement' js[273553] js[273553] h[273790])
                      (273665 call -= js[273553] h[273790])
                      (490019 'end of statement' js[273553] h[273790])
                    }
                    label _continueLabel[273671]
                    unknown tmp[434098] "maybe param" "temp"
                    (434109 'move' tmp[434098](273681 call >= js[273553] hs[273557]))
                    unknown call_tmp[738813] "expr temp" "maybe param" "maybe type" "temp"
                    (738816 'move' call_tmp[738813](434111 call _cond_invalid tmp[434098]))
                    if call_tmp[738813]
                    {
                      (434114 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[579827] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[579828] "maybe param" "temp"
                    unknown call_tmp[738818] "expr temp" "maybe param" "maybe type" "temp"
                    (738821 'move' call_tmp[738818](434099 call isTrue tmp[434098]))
                    (579833 'move' tmp[579828](579831 call _cond_test call_tmp[738818]))
                    if tmp[579828]
                    {
                      unknown tmp[579835] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[738823] "expr temp" "maybe param" "maybe type" "temp"
                      (738826 'move' call_tmp[738823](273692 call - js[273553] h[273790]))
                      unknown call_tmp[738828] "expr temp" "maybe param" "maybe type" "temp"
                      (738831 'move' call_tmp[738828](273690 call Data[273446] call_tmp[738823]))
                      unknown call_tmp[738833] "expr temp" "maybe param" "maybe type" "temp"
                      (738836 'move' call_tmp[738833](273687 call chpl_compare v[273563] call_tmp[738828] comparator[273454]))
                      unknown call_tmp[738838] "expr temp" "maybe param" "maybe type" "temp"
                      (738841 'move' call_tmp[738838](273685 call < call_tmp[738833] 0))
                      (579837 'move' tmp[579835](434102 call isTrue call_tmp[738838]))
                      (579842 'move' tmp[579827](579839 '_paramFoldLogical' tmp[579828] tmp[579835]))
                    }
                    {
                      (579847 'move' tmp[579827](579844 '_paramFoldLogical' tmp[579828] 0))
                    }
                    (273697 'move' tmp[273668](273677 call _cond_test tmp[579827]))
                    tmp[273668]
                  }
                  label _breakLabel[273672]
                }
                unknown call_tmp[738843] "expr temp" "maybe param" "maybe type" "temp"
                (738846 'move' call_tmp[738843](273728 call Data[273446] js[273553]))
                (273730 call = call_tmp[738843] v[273563])
                (490023 'end of statement' js[273553] v[273563])
              }
              label _continueLabel[273738]
              _indexOfInterest[273733]
              _iterator[273734]
            }
            label _breakLabel[273739]
          }
        }
        label _continueLabel[273776]
        _indexOfInterest[273771]
        _iterator[273772]
      }
      label _breakLabel[273777]
    }
    (537849 return _void[55])
  }
  (355270 'used modules list'(352946 'use' ChapelStandard[20264])(273434 'use' Sort[267880]))
}