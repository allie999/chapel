AST dump for Builtins after pass flattenFunctions.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416092]() : void[4] "insert line file info" "module init" "resolved"
  {
    (527840 return _void[55])
  }
  function assert[210345](const in arg test[210342]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "no return value for void"
  {
    val call_tmp[704762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (704765 'move' call_tmp[704762](210348 call ![7494] test[210342]))
    val call_tmp[704767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (704770 'move' call_tmp[704767] call_tmp[704762])
    if call_tmp[704767]
    {
      (210355 'chpl_error' c"assert failed")
    }
    (527818 return _void[55])
  }
  function assert[1402715](const in arg test[1402717]:bool[10], const  ref arg _e0_args[1402719]:string[26], const  ref arg _e1_args[1402721]:string[26], const  ref arg _e2_args[1402723]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1402736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402738 'move' call_tmp[1402736](1402741 call ![7494] test[1402717]))
    val call_tmp[1402743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402745 'move' call_tmp[1402743] call_tmp[1402736])
    if call_tmp[1402743]
    {
      val call_tmp[1402752]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1402754 'move' call_tmp[1402752](1402757 call stringify[1402793] _e0_args[1402719] _e1_args[1402721] _e2_args[1402723]))
      val call_tmp[1402761]:string[26] "dead at end of block" "maybe param" "temp"
      (1402763 'move' call_tmp[1402761](1402766 call +[38342] "assert failed - " call_tmp[1402752]))
      val tmpstring[1402769]:string[26] "dead at end of block" "insert auto destroy"
      (1402771 'move' tmpstring[1402769] call_tmp[1402761])
      (1402774 'end of statement')
      val call_tmp[1402775]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402777 'move' call_tmp[1402775](1402783 call c_str[32932] tmpstring[1402769]))
      (1402784 'chpl_error' call_tmp[1402775])
      (1402786 'end of statement' tmpstring[1402769])
    }
    (1402789 return _void[55])
  }
  function assert[1581498](const in arg test[1581500]:bool[10], const  ref arg _e0_args[1581502]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1581511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1581513 'move' call_tmp[1581511](1581516 call ![7494] test[1581500]))
    val call_tmp[1581518]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1581520 'move' call_tmp[1581518] call_tmp[1581511])
    if call_tmp[1581518]
    {
      val call_tmp[1581527]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1581529 'move' call_tmp[1581527](1581532 call stringify[1581566] _e0_args[1581502]))
      val call_tmp[1581534]:string[26] "dead at end of block" "maybe param" "temp"
      (1581536 'move' call_tmp[1581534](1581539 call +[38342] "assert failed - " call_tmp[1581527]))
      val tmpstring[1581542]:string[26] "dead at end of block" "insert auto destroy"
      (1581544 'move' tmpstring[1581542] call_tmp[1581534])
      (1581547 'end of statement')
      val call_tmp[1581548]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1581550 'move' call_tmp[1581548](1581556 call c_str[32932] tmpstring[1581542]))
      (1581557 'chpl_error' call_tmp[1581548])
      (1581559 'end of statement' tmpstring[1581542])
    }
    (1581562 return _void[55])
  }
  function assert[1605001](const in arg test[1605003]:bool[10], const  ref arg _e0_args[1605005]:string[26], const in arg _e1_args[1605007]:uint(64)[115], const  ref arg _e2_args[1605009]:string[26], const in arg _e3_args[1605011]:int(64)[13]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1605026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1605028 'move' call_tmp[1605026](1605031 call ![7494] test[1605003]))
    val call_tmp[1605033]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1605035 'move' call_tmp[1605033] call_tmp[1605026])
    if call_tmp[1605033]
    {
      val call_tmp[1605042]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1605044 'move' call_tmp[1605042](1605047 call stringify[1605090] _e0_args[1605005] _e1_args[1605007] _e2_args[1605009] _e3_args[1605011]))
      val call_tmp[1605052]:string[26] "dead at end of block" "maybe param" "temp"
      (1605054 'move' call_tmp[1605052](1605057 call +[38342] "assert failed - " call_tmp[1605042]))
      val tmpstring[1605060]:string[26] "dead at end of block" "insert auto destroy"
      (1605062 'move' tmpstring[1605060] call_tmp[1605052])
      (1605065 'end of statement')
      val call_tmp[1605066]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1605068 'move' call_tmp[1605066](1605074 call c_str[32932] tmpstring[1605060]))
      (1605075 'chpl_error' call_tmp[1605066])
      (1605077 'end of statement' tmpstring[1605060])
    }
    (1605080 return _void[55])
  }
  function compilerAssert[973890]() : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (973924 'end of statement')
    (973918 return _void[55])
  }
}