AST dump for ChapelLocks after pass resolveIntents.
Module use list: Atomics ChapelBase MemConsistency 

{
  function chpl__init_ChapelLocks[416090]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524058 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941132].lock[187323](const?  ref arg this[187434]:_ref(chpl_LocalSpinlock)[941132]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const tmp[187402]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    val call_tmp[690536]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (690539 'move' call_tmp[690536](187399 '_wide_get_locale' this[187434]))
    (187404 'move' tmp[187402] call_tmp[690536])
    (935538 call on_fn[935534] tmp[187402])
    function on_fn[935534](const in arg dummy_locale_arg[935536]:chpl_localeID_t[209352]) : void[4] "on" "resolved"
    {
      {
        val tmp[187348]:bool[10] "dead after last mention" "temp"
        val tmp[429568]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[690543]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
        (690546 'move' call_tmp[690543](361923 call l[820356] this[187434]))
        (429579 'move' tmp[429568](187386 call read[1230830] call_tmp[690543]))
        (1231704 'end of statement')
        val tmp[572132]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        val tmp[572133]:bool[10] "dead after last mention" "maybe param" "temp"
        val call_tmp[690555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (690558 'move' call_tmp[690555] tmp[429568])
        (572138 'move' tmp[572133] call_tmp[690555])
        if tmp[572133]
        {
          (572143 'move' tmp[572132] 1)
        }
        {
          val tmp[572145]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[690562]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
          (690565 'move' call_tmp[690562](361928 call l[820356] this[187434]))
          val call_tmp[690569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (690572 'move' call_tmp[690569](187391 call testAndSet[1231706] call_tmp[690562]))
          (572147 'move' tmp[572145] call_tmp[690569])
          (572152 'move' tmp[572132] tmp[572145])
        }
        (187396 'move' tmp[187348] tmp[572132])
        WhileDo[187353]
        {
          (187346 call chpl_task_yield[209700])
          (484541 'end of statement')
          label _continueLabel[187351]
          val tmp[429547]:bool[10] "dead after last mention" "maybe param" "temp"
          ref call_tmp[690576]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
          (690579 'move' call_tmp[690576](361912 call l[820356] this[187434]))
          (429558 'move' tmp[429547](187364 call read[1230830] call_tmp[690576]))
          (1232458 'end of statement')
          val tmp[572159]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          val tmp[572160]:bool[10] "dead after last mention" "maybe param" "temp"
          val call_tmp[690588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (690591 'move' call_tmp[690588] tmp[429547])
          (572165 'move' tmp[572160] call_tmp[690588])
          if tmp[572160]
          {
            (572170 'move' tmp[572159] 1)
          }
          {
            val tmp[572172]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            ref call_tmp[690595]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
            (690598 'move' call_tmp[690595](361917 call l[820356] this[187434]))
            val call_tmp[690602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (690605 'move' call_tmp[690602](187369 call testAndSet[1231706] call_tmp[690595]))
            (572174 'move' tmp[572172] call_tmp[690602])
            (572179 'move' tmp[572159] tmp[572172])
          }
          (187374 'move' tmp[187348] tmp[572159])
          tmp[187348]
        }
        label _breakLabel[187352]
      }
      (935541 return _void[55])
    }
    {
    }
    (524054 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941132].unlock[187415](const?  ref arg this[187438]:_ref(chpl_LocalSpinlock)[941132]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[690609]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
    (690612 'move' call_tmp[690609](361934 call l[820356] this[187438]))
    (187426 call clear[1232556] call_tmp[690609])
    (524056 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941132].l[820356](ref arg this[820360]:_ref(chpl_LocalSpinlock)[941132]) ref : _ref(AtomicBool)[941243] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[820370]:_ref(AtomicBool)[941243] "dead after last mention" "RVV" "temp"
    ref call_tmp[820377]:_ref(AtomicBool)[941243] "dead after last mention" "maybe param" "temp"
    (820380 'move' call_tmp[820377](820364 '.' this[820360] l[187317]))
    (820375 'move' ret[820370] call_tmp[820377])
    (820372 return ret[820370])
  }
  function _ref(chpl_LocalSpinlock)[941132].init[820382](ref arg this[820385]:_ref(chpl_LocalSpinlock)[941132], ref arg l[820388]:AtomicBool[45877]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_l[945216]:AtomicBool[45877] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945219 'move' _formal_tmp_l[945216] l[820388])
    (820404 '.=' this[820385] l[187317] _formal_tmp_l[945216])
    (820408 return _void[55])
  }
  function init_default_l[944889]() : AtomicBool[45877] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[944891]:AtomicBool[45877] "dead after last mention" "RVV" "maybe param" "temp"
    val l[944896]:AtomicBool[45877] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val _formal_type[944898]:AtomicBool[45877] "dead after last mention" "temp" "type variable"
    (944913 call init[44788] l[944896])
    (944909 'move' ret[944891] l[944896])
    (944894 return ret[944891])
  }
  function _ref(chpl_LocalSpinlock)[941132].init=[820410](ref arg this[820414]:_ref(chpl_LocalSpinlock)[941132], ref arg other[820415]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[820445]:_ref(AtomicBool)[941243] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (820448 'move' call_tmp[820445](820423 call l[820356] other[820415]))
    val call_tmp[820450]:AtomicBool[45877] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[820429]:AtomicBool[45877] "dead after last mention" "temp"
    (820434 call init=[44816] tmp[820429] call_tmp[820445])
    (820436 '.=' this[820414] l[187317] tmp[820429])
    (820440 'end of statement')
    (820441 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941132].deinit[820455](const?  ref arg this[820459]:_ref(chpl_LocalSpinlock)[941132]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (820467 return _void[55])
  }
  type chpl_LocalSpinlock[187432] val l[187317]:AtomicBool[45877]
}