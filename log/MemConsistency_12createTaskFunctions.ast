AST dump for MemConsistency after pass createTaskFunctions.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[416102]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (545489 'default init var' memory_order_relaxed[186938] memory_order[186619])
    }
    (186941 'end of statement')
    { scopeless type extern
      (545492 'default init var' memory_order_consume[186943] memory_order[186619])
    }
    (186946 'end of statement')
    { scopeless type extern
      (545495 'default init var' memory_order_acquire[186948] memory_order[186619])
    }
    (186951 'end of statement')
    { scopeless type extern
      (545498 'default init var' memory_order_release[186953] memory_order[186619])
    }
    (186956 'end of statement')
    { scopeless type extern
      (545501 'default init var' memory_order_acq_rel[186958] memory_order[186619])
    }
    (186961 'end of statement')
    { scopeless type extern
      (545504 'default init var' memory_order_seq_cst[186963] memory_order[186619])
    }
    (186966 'end of statement')
    (524070 return _void[55])
  }
  type memory_order[186619]
  function _defaultOf[186628](arg t[186625]:memory_order[186619]) : _unknown[51] "inline" "last resort" "no doc"
  {
    unknown ret[523976] "RVV" "temp"
    function _defaultOfMemoryOrder[186632]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
      unknown ret[523970] "RVV" "temp"
      (523972 return ret[523970])
    }
    { scopeless type
      memory_order[186619]
    }
    unknown call_tmp[690385] "expr temp" "maybe param" "maybe type" "temp"
    (690388 'move' call_tmp[690385](186641 call _defaultOfMemoryOrder))
    (523981 'move' ret[523976](523980 'deref' call_tmp[690385]))
    (523978 return ret[523976])
  }
  function ==[186652](arg a[186649]:memory_order[186619], arg b[186655]:memory_order[186619]) : _unknown[51]
  {
    unknown ret[523985] "RVV" "temp"
    unknown call_tmp[690390] "expr temp" "maybe param" "maybe type" "temp"
    (690393 'move' call_tmp[690390](186663 '==' a[186649] b[186655]))
    (523991 'move' ret[523985](523990 'coerce' call_tmp[690390] bool[10]))
    (523987 return ret[523985])
  }
  { scopeless type
    bool[10]
  }
  function !=[186676](arg a[186673]:memory_order[186619], arg b[186679]:memory_order[186619]) : _unknown[51]
  {
    unknown ret[523995] "RVV" "temp"
    unknown call_tmp[690395] "expr temp" "maybe param" "maybe type" "temp"
    (690398 'move' call_tmp[690395](186687 '!=' a[186673] b[186679]))
    (524001 'move' ret[523995](524000 'coerce' call_tmp[690395] bool[10]))
    (523997 return ret[523995])
  }
  { scopeless type
    bool[10]
  }
  function =[186700](ref arg lhs[186697]:memory_order[186619], arg rhs[186703]:memory_order[186619]) : _unknown[51] "assignop" "no return value for void"
  {
    (186710 '=' lhs[186697] rhs[186703])
    (524003 return _void[55])
  }
  function memory_order[186619].writeThis[186720](arg _mt[186725]:_MT[238], arg this[186722]:memory_order[186619] :
  memory_order[186619], arg ch[186718]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[690400] "expr temp" "maybe param" "maybe type" "temp"
    (690403 'move' call_tmp[690400](186729 call == this[186722] memory_order_relaxed[186938]))
    unknown call_tmp[690405] "expr temp" "maybe param" "maybe type" "temp"
    (690408 'move' call_tmp[690405](186928 call _cond_test call_tmp[690400]))
    if call_tmp[690405]
    {
      (186749 call <~> ch[186718] "memory_order_relaxed")
    }
    {
      unknown call_tmp[690410] "expr temp" "maybe param" "maybe type" "temp"
      (690413 'move' call_tmp[690410](186754 call == this[186722] memory_order_consume[186943]))
      unknown call_tmp[690415] "expr temp" "maybe param" "maybe type" "temp"
      (690418 'move' call_tmp[690415](186922 call _cond_test call_tmp[690410]))
      if call_tmp[690415]
      {
        (186774 call <~> ch[186718] "memory_order_consume")
      }
      {
        unknown call_tmp[690420] "expr temp" "maybe param" "maybe type" "temp"
        (690423 'move' call_tmp[690420](186779 call == this[186722] memory_order_acquire[186948]))
        unknown call_tmp[690425] "expr temp" "maybe param" "maybe type" "temp"
        (690428 'move' call_tmp[690425](186916 call _cond_test call_tmp[690420]))
        if call_tmp[690425]
        {
          (186799 call <~> ch[186718] "memory_order_acquire")
        }
        {
          unknown call_tmp[690430] "expr temp" "maybe param" "maybe type" "temp"
          (690433 'move' call_tmp[690430](186804 call == this[186722] memory_order_release[186953]))
          unknown call_tmp[690435] "expr temp" "maybe param" "maybe type" "temp"
          (690438 'move' call_tmp[690435](186910 call _cond_test call_tmp[690430]))
          if call_tmp[690435]
          {
            (186824 call <~> ch[186718] "memory_order_release")
          }
          {
            unknown call_tmp[690440] "expr temp" "maybe param" "maybe type" "temp"
            (690443 'move' call_tmp[690440](186829 call == this[186722] memory_order_acq_rel[186958]))
            unknown call_tmp[690445] "expr temp" "maybe param" "maybe type" "temp"
            (690448 'move' call_tmp[690445](186904 call _cond_test call_tmp[690440]))
            if call_tmp[690445]
            {
              (186849 call <~> ch[186718] "memory_order_acq_rel")
            }
            {
              unknown call_tmp[690450] "expr temp" "maybe param" "maybe type" "temp"
              (690453 'move' call_tmp[690450](186854 call == this[186722] memory_order_seq_cst[186963]))
              unknown call_tmp[690455] "expr temp" "maybe param" "maybe type" "temp"
              (690458 'move' call_tmp[690455](186898 call _cond_test call_tmp[690450]))
              if call_tmp[690455]
              {
                (186874 call <~> ch[186718] "memory_order_seq_cst")
              }
              {
                (186895 call <~> ch[186718] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
    (524005 return _void[55])
  }
  const memory_order_relaxed[186938] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186943] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acquire[186948] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_release[186953] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186958] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_seq_cst[186963] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[186978] def seqCst[186968]:memoryOrder[186978] def acqRel[186970]:memoryOrder[186978] def release[186972]:memoryOrder[186978] def acquire[186974]:memoryOrder[186978] def relaxed[186976]:memoryOrder[186978]
  function readableOrder[186987](param arg order[186984]:memoryOrder[186978]) param : _unknown[51]
  {
    unknown ret[524009] "RVV" "param" "temp"
    unknown tmp[429541] "maybe param" "temp"
    (429552 'move' tmp[429541](186994 call == order[186984] release[186972]))
    unknown call_tmp[690460] "expr temp" "maybe param" "maybe type" "temp"
    (690463 'move' call_tmp[690460](429554 call _cond_invalid tmp[429541]))
    if call_tmp[690460]
    {
      (429557 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[572114] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572115] "maybe param" "temp"
    unknown call_tmp[690465] "expr temp" "maybe param" "maybe type" "temp"
    (690468 'move' call_tmp[690465](429542 call isTrue tmp[429541]))
    (572120 'move' tmp[572115](572118 call _cond_test call_tmp[690465]))
    if tmp[572115]
    {
      (572125 'move' tmp[572114](572122 '_paramFoldLogical' tmp[572115] 1))
    }
    {
      unknown tmp[572127] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690470] "expr temp" "maybe param" "maybe type" "temp"
      (690473 'move' call_tmp[690470](187003 call == order[186984] acqRel[186970]))
      (572129 'move' tmp[572127](429546 call isTrue call_tmp[690470]))
      (572134 'move' tmp[572114](572131 '_paramFoldLogical' tmp[572115] tmp[572127]))
    }
    unknown call_tmp[690475] "expr temp" "maybe param" "maybe type" "temp"
    (690478 'move' call_tmp[690475](187018 call _cond_test tmp[572114]))
    if call_tmp[690475]
    {
      (524014 'move' ret[524009](524013 'deref' acquire[186974]))
      gotoReturn _end_readableOrder[524007] _end_readableOrder[524007]
    }
    {
      (524019 'move' ret[524009](524018 'deref' order[186984]))
      gotoReturn _end_readableOrder[524007] _end_readableOrder[524007]
    }
    label _end_readableOrder[524007]
    (524011 return ret[524009])
  }
  function c_memory_order[187031](param arg order[187028]:memoryOrder[186978]) : _unknown[51] "inline"
  {
    unknown ret[524025] "RVV" "temp"
    {
      unknown tmp[187124] "expr temp" "maybe param" "maybe type" "temp"
      (187126 'move' tmp[187124] order[187028])
      unknown call_tmp[690480] "expr temp" "maybe param" "maybe type" "temp"
      (690483 'move' call_tmp[690480](187128 call == tmp[187124] relaxed[186976]))
      unknown call_tmp[690485] "expr temp" "maybe param" "maybe type" "temp"
      (690488 'move' call_tmp[690485](187131 call _cond_test call_tmp[690480]))
      if call_tmp[690485]
      {
        (524030 'move' ret[524025](524029 'deref' memory_order_relaxed[186938]))
        gotoReturn _end_c_memory_order[524023] _end_c_memory_order[524023]
      }
      {
        unknown call_tmp[690490] "expr temp" "maybe param" "maybe type" "temp"
        (690493 'move' call_tmp[690490](187134 call == tmp[187124] acquire[186974]))
        unknown call_tmp[690495] "expr temp" "maybe param" "maybe type" "temp"
        (690498 'move' call_tmp[690495](187137 call _cond_test call_tmp[690490]))
        if call_tmp[690495]
        {
          (524035 'move' ret[524025](524034 'deref' memory_order_acquire[186948]))
          gotoReturn _end_c_memory_order[524023] _end_c_memory_order[524023]
        }
        {
          unknown call_tmp[690500] "expr temp" "maybe param" "maybe type" "temp"
          (690503 'move' call_tmp[690500](187141 call == tmp[187124] release[186972]))
          unknown call_tmp[690505] "expr temp" "maybe param" "maybe type" "temp"
          (690508 'move' call_tmp[690505](187144 call _cond_test call_tmp[690500]))
          if call_tmp[690505]
          {
            (524040 'move' ret[524025](524039 'deref' memory_order_release[186953]))
            gotoReturn _end_c_memory_order[524023] _end_c_memory_order[524023]
          }
          {
            unknown call_tmp[690510] "expr temp" "maybe param" "maybe type" "temp"
            (690513 'move' call_tmp[690510](187148 call == tmp[187124] acqRel[186970]))
            unknown call_tmp[690515] "expr temp" "maybe param" "maybe type" "temp"
            (690518 'move' call_tmp[690515](187151 call _cond_test call_tmp[690510]))
            if call_tmp[690515]
            {
              (524045 'move' ret[524025](524044 'deref' memory_order_acq_rel[186958]))
              gotoReturn _end_c_memory_order[524023] _end_c_memory_order[524023]
            }
            {
              unknown call_tmp[690520] "expr temp" "maybe param" "maybe type" "temp"
              (690523 'move' call_tmp[690520](187155 call == tmp[187124] seqCst[186968]))
              unknown call_tmp[690525] "expr temp" "maybe param" "maybe type" "temp"
              (690528 'move' call_tmp[690525](187158 call _cond_test call_tmp[690520]))
              if call_tmp[690525]
              {
                (524050 'move' ret[524025](524049 'deref' memory_order_seq_cst[186963]))
                gotoReturn _end_c_memory_order[524023] _end_c_memory_order[524023]
              }
              {
                (187118 call exhaustiveSelectHalt module=[255] HaltWrappers[209915] "Invalid memoryOrder")
                (361919 'referenced modules list' HaltWrappers[209915])
              }
            }
          }
        }
      }
    }
    label _end_c_memory_order[524023]
    (524027 return ret[524025])
    (355277 'used modules list'(187034 'import' HaltWrappers[209915]))
  }
  function chpl_rmem_consist_release[187167]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524054 return _void[55])
  }
  function chpl_rmem_consist_acquire[187173]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524056 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187183](arg order[187180]:memory_order[186619]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524058 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187193](param arg order[187190]:memoryOrder[186978]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690530] "expr temp" "maybe param" "maybe type" "temp"
    (690533 'move' call_tmp[690530](187199 call c_memory_order order[187190]))
    (187201 call chpl_rmem_consist_maybe_release call_tmp[690530])
    (524060 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187212](arg order[187209]:memory_order[186619]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524062 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187222](param arg order[187219]:memoryOrder[186978]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690535] "expr temp" "maybe param" "maybe type" "temp"
    (690538 'move' call_tmp[690535](187228 call c_memory_order order[187219]))
    (187230 call chpl_rmem_consist_maybe_acquire call_tmp[690535])
    (524064 return _void[55])
  }
  function chpl_rmem_consist_fence[187241](arg order[187238]:memory_order[186619]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
    (524066 return _void[55])
  }
  function chpl_rmem_consist_fence[187251](param arg order[187248]:memoryOrder[186978]) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[690540] "expr temp" "maybe param" "maybe type" "temp"
    (690543 'move' call_tmp[690540](187257 call c_memory_order order[187248]))
    (187259 call chpl_rmem_consist_fence call_tmp[690540])
    (524068 return _void[55])
  }
}