AST dump for MemConsistency after pass createTaskFunctions.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[416044]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (545425 'default init var' memory_order_relaxed[186926] memory_order[186607])
    }
    (186929 'end of statement')
    { scopeless type extern
      (545428 'default init var' memory_order_consume[186931] memory_order[186607])
    }
    (186934 'end of statement')
    { scopeless type extern
      (545431 'default init var' memory_order_acquire[186936] memory_order[186607])
    }
    (186939 'end of statement')
    { scopeless type extern
      (545434 'default init var' memory_order_release[186941] memory_order[186607])
    }
    (186944 'end of statement')
    { scopeless type extern
      (545437 'default init var' memory_order_acq_rel[186946] memory_order[186607])
    }
    (186949 'end of statement')
    { scopeless type extern
      (545440 'default init var' memory_order_seq_cst[186951] memory_order[186607])
    }
    (186954 'end of statement')
    (524006 return _void[55])
  }
  type memory_order[186607]
  function _defaultOf[186616](arg t[186613]:memory_order[186607]) : _unknown[51] "inline" "last resort" "no doc"
  {
    unknown ret[523912] "RVV" "temp"
    function _defaultOfMemoryOrder[186620]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
      unknown ret[523906] "RVV" "temp"
      (523908 return ret[523906])
    }
    { scopeless type
      memory_order[186607]
    }
    unknown call_tmp[690321] "expr temp" "maybe param" "maybe type" "temp"
    (690324 'move' call_tmp[690321](186629 call _defaultOfMemoryOrder))
    (523917 'move' ret[523912](523916 'deref' call_tmp[690321]))
    (523914 return ret[523912])
  }
  function ==[186640](arg a[186637]:memory_order[186607], arg b[186643]:memory_order[186607]) : _unknown[51]
  {
    unknown ret[523921] "RVV" "temp"
    unknown call_tmp[690326] "expr temp" "maybe param" "maybe type" "temp"
    (690329 'move' call_tmp[690326](186651 '==' a[186637] b[186643]))
    (523927 'move' ret[523921](523926 'coerce' call_tmp[690326] bool[10]))
    (523923 return ret[523921])
  }
  { scopeless type
    bool[10]
  }
  function !=[186664](arg a[186661]:memory_order[186607], arg b[186667]:memory_order[186607]) : _unknown[51]
  {
    unknown ret[523931] "RVV" "temp"
    unknown call_tmp[690331] "expr temp" "maybe param" "maybe type" "temp"
    (690334 'move' call_tmp[690331](186675 '!=' a[186661] b[186667]))
    (523937 'move' ret[523931](523936 'coerce' call_tmp[690331] bool[10]))
    (523933 return ret[523931])
  }
  { scopeless type
    bool[10]
  }
  function =[186688](ref arg lhs[186685]:memory_order[186607], arg rhs[186691]:memory_order[186607]) : _unknown[51] "assignop" "no return value for void"
  {
    (186698 '=' lhs[186685] rhs[186691])
    (523939 return _void[55])
  }
  function memory_order[186607].writeThis[186708](arg _mt[186713]:_MT[238], arg this[186710]:memory_order[186607] :
  memory_order[186607], arg ch[186706]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[690336] "expr temp" "maybe param" "maybe type" "temp"
    (690339 'move' call_tmp[690336](186717 call == this[186710] memory_order_relaxed[186926]))
    unknown call_tmp[690341] "expr temp" "maybe param" "maybe type" "temp"
    (690344 'move' call_tmp[690341](186916 call _cond_test call_tmp[690336]))
    if call_tmp[690341]
    {
      (186737 call <~> ch[186706] "memory_order_relaxed")
    }
    {
      unknown call_tmp[690346] "expr temp" "maybe param" "maybe type" "temp"
      (690349 'move' call_tmp[690346](186742 call == this[186710] memory_order_consume[186931]))
      unknown call_tmp[690351] "expr temp" "maybe param" "maybe type" "temp"
      (690354 'move' call_tmp[690351](186910 call _cond_test call_tmp[690346]))
      if call_tmp[690351]
      {
        (186762 call <~> ch[186706] "memory_order_consume")
      }
      {
        unknown call_tmp[690356] "expr temp" "maybe param" "maybe type" "temp"
        (690359 'move' call_tmp[690356](186767 call == this[186710] memory_order_acquire[186936]))
        unknown call_tmp[690361] "expr temp" "maybe param" "maybe type" "temp"
        (690364 'move' call_tmp[690361](186904 call _cond_test call_tmp[690356]))
        if call_tmp[690361]
        {
          (186787 call <~> ch[186706] "memory_order_acquire")
        }
        {
          unknown call_tmp[690366] "expr temp" "maybe param" "maybe type" "temp"
          (690369 'move' call_tmp[690366](186792 call == this[186710] memory_order_release[186941]))
          unknown call_tmp[690371] "expr temp" "maybe param" "maybe type" "temp"
          (690374 'move' call_tmp[690371](186898 call _cond_test call_tmp[690366]))
          if call_tmp[690371]
          {
            (186812 call <~> ch[186706] "memory_order_release")
          }
          {
            unknown call_tmp[690376] "expr temp" "maybe param" "maybe type" "temp"
            (690379 'move' call_tmp[690376](186817 call == this[186710] memory_order_acq_rel[186946]))
            unknown call_tmp[690381] "expr temp" "maybe param" "maybe type" "temp"
            (690384 'move' call_tmp[690381](186892 call _cond_test call_tmp[690376]))
            if call_tmp[690381]
            {
              (186837 call <~> ch[186706] "memory_order_acq_rel")
            }
            {
              unknown call_tmp[690386] "expr temp" "maybe param" "maybe type" "temp"
              (690389 'move' call_tmp[690386](186842 call == this[186710] memory_order_seq_cst[186951]))
              unknown call_tmp[690391] "expr temp" "maybe param" "maybe type" "temp"
              (690394 'move' call_tmp[690391](186886 call _cond_test call_tmp[690386]))
              if call_tmp[690391]
              {
                (186862 call <~> ch[186706] "memory_order_seq_cst")
              }
              {
                (186883 call <~> ch[186706] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
    (523941 return _void[55])
  }
  const memory_order_relaxed[186926] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186931] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acquire[186936] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_release[186941] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186946] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_seq_cst[186951] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[186966] def seqCst[186956]:memoryOrder[186966] def acqRel[186958]:memoryOrder[186966] def release[186960]:memoryOrder[186966] def acquire[186962]:memoryOrder[186966] def relaxed[186964]:memoryOrder[186966]
  function readableOrder[186975](param arg order[186972]:memoryOrder[186966]) param : _unknown[51]
  {
    unknown ret[523945] "RVV" "param" "temp"
    unknown tmp[429483] "maybe param" "temp"
    (429494 'move' tmp[429483](186982 call == order[186972] release[186960]))
    unknown call_tmp[690396] "expr temp" "maybe param" "maybe type" "temp"
    (690399 'move' call_tmp[690396](429496 call _cond_invalid tmp[429483]))
    if call_tmp[690396]
    {
      (429499 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[572050] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572051] "maybe param" "temp"
    unknown call_tmp[690401] "expr temp" "maybe param" "maybe type" "temp"
    (690404 'move' call_tmp[690401](429484 call isTrue tmp[429483]))
    (572056 'move' tmp[572051](572054 call _cond_test call_tmp[690401]))
    if tmp[572051]
    {
      (572061 'move' tmp[572050](572058 '_paramFoldLogical' tmp[572051] 1))
    }
    {
      unknown tmp[572063] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690406] "expr temp" "maybe param" "maybe type" "temp"
      (690409 'move' call_tmp[690406](186991 call == order[186972] acqRel[186958]))
      (572065 'move' tmp[572063](429488 call isTrue call_tmp[690406]))
      (572070 'move' tmp[572050](572067 '_paramFoldLogical' tmp[572051] tmp[572063]))
    }
    unknown call_tmp[690411] "expr temp" "maybe param" "maybe type" "temp"
    (690414 'move' call_tmp[690411](187006 call _cond_test tmp[572050]))
    if call_tmp[690411]
    {
      (523950 'move' ret[523945](523949 'deref' acquire[186962]))
      gotoReturn _end_readableOrder[523943] _end_readableOrder[523943]
    }
    {
      (523955 'move' ret[523945](523954 'deref' order[186972]))
      gotoReturn _end_readableOrder[523943] _end_readableOrder[523943]
    }
    label _end_readableOrder[523943]
    (523947 return ret[523945])
  }
  function c_memory_order[187019](param arg order[187016]:memoryOrder[186966]) : _unknown[51] "inline"
  {
    unknown ret[523961] "RVV" "temp"
    {
      unknown tmp[187112] "expr temp" "maybe param" "maybe type" "temp"
      (187114 'move' tmp[187112] order[187016])
      unknown call_tmp[690416] "expr temp" "maybe param" "maybe type" "temp"
      (690419 'move' call_tmp[690416](187116 call == tmp[187112] relaxed[186964]))
      unknown call_tmp[690421] "expr temp" "maybe param" "maybe type" "temp"
      (690424 'move' call_tmp[690421](187119 call _cond_test call_tmp[690416]))
      if call_tmp[690421]
      {
        (523966 'move' ret[523961](523965 'deref' memory_order_relaxed[186926]))
        gotoReturn _end_c_memory_order[523959] _end_c_memory_order[523959]
      }
      {
        unknown call_tmp[690426] "expr temp" "maybe param" "maybe type" "temp"
        (690429 'move' call_tmp[690426](187122 call == tmp[187112] acquire[186962]))
        unknown call_tmp[690431] "expr temp" "maybe param" "maybe type" "temp"
        (690434 'move' call_tmp[690431](187125 call _cond_test call_tmp[690426]))
        if call_tmp[690431]
        {
          (523971 'move' ret[523961](523970 'deref' memory_order_acquire[186936]))
          gotoReturn _end_c_memory_order[523959] _end_c_memory_order[523959]
        }
        {
          unknown call_tmp[690436] "expr temp" "maybe param" "maybe type" "temp"
          (690439 'move' call_tmp[690436](187129 call == tmp[187112] release[186960]))
          unknown call_tmp[690441] "expr temp" "maybe param" "maybe type" "temp"
          (690444 'move' call_tmp[690441](187132 call _cond_test call_tmp[690436]))
          if call_tmp[690441]
          {
            (523976 'move' ret[523961](523975 'deref' memory_order_release[186941]))
            gotoReturn _end_c_memory_order[523959] _end_c_memory_order[523959]
          }
          {
            unknown call_tmp[690446] "expr temp" "maybe param" "maybe type" "temp"
            (690449 'move' call_tmp[690446](187136 call == tmp[187112] acqRel[186958]))
            unknown call_tmp[690451] "expr temp" "maybe param" "maybe type" "temp"
            (690454 'move' call_tmp[690451](187139 call _cond_test call_tmp[690446]))
            if call_tmp[690451]
            {
              (523981 'move' ret[523961](523980 'deref' memory_order_acq_rel[186946]))
              gotoReturn _end_c_memory_order[523959] _end_c_memory_order[523959]
            }
            {
              unknown call_tmp[690456] "expr temp" "maybe param" "maybe type" "temp"
              (690459 'move' call_tmp[690456](187143 call == tmp[187112] seqCst[186956]))
              unknown call_tmp[690461] "expr temp" "maybe param" "maybe type" "temp"
              (690464 'move' call_tmp[690461](187146 call _cond_test call_tmp[690456]))
              if call_tmp[690461]
              {
                (523986 'move' ret[523961](523985 'deref' memory_order_seq_cst[186951]))
                gotoReturn _end_c_memory_order[523959] _end_c_memory_order[523959]
              }
              {
                (187106 call exhaustiveSelectHalt module=[255] HaltWrappers[209998] "Invalid memoryOrder")
                (361862 'referenced modules list' HaltWrappers[209998])
              }
            }
          }
        }
      }
    }
    label _end_c_memory_order[523959]
    (523963 return ret[523961])
    (355220 'used modules list'(187022 'import' HaltWrappers[209998]))
  }
  function chpl_rmem_consist_release[187155]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523990 return _void[55])
  }
  function chpl_rmem_consist_acquire[187161]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523992 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187171](arg order[187168]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523994 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187181](param arg order[187178]:memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690466] "expr temp" "maybe param" "maybe type" "temp"
    (690469 'move' call_tmp[690466](187187 call c_memory_order order[187178]))
    (187189 call chpl_rmem_consist_maybe_release call_tmp[690466])
    (523996 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187200](arg order[187197]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523998 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187210](param arg order[187207]:memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690471] "expr temp" "maybe param" "maybe type" "temp"
    (690474 'move' call_tmp[690471](187216 call c_memory_order order[187207]))
    (187218 call chpl_rmem_consist_maybe_acquire call_tmp[690471])
    (524000 return _void[55])
  }
  function chpl_rmem_consist_fence[187229](arg order[187226]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
    (524002 return _void[55])
  }
  function chpl_rmem_consist_fence[187239](param arg order[187236]:memoryOrder[186966]) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[690476] "expr temp" "maybe param" "maybe type" "temp"
    (690479 'move' call_tmp[690476](187245 call c_memory_order order[187236]))
    (187247 call chpl_rmem_consist_fence call_tmp[690476])
    (524004 return _void[55])
  }
}