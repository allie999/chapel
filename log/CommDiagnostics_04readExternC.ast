AST dump for CommDiagnostics after pass readExternC.
Module use list: 

{
  (353002 'use' ChapelStandard)
  { scopeless
    unknown commDiagsPrintUnstable[222271] "config" "param" 0
    (222274 'end of statement')
  }
  type chpl_commDiagnostics[222553] unknown get[222281](222280 call uint[115] 64) unknown get_nb[222289](222288 call uint[115] 64) unknown put[222297](222296 call uint[115] 64) unknown put_nb[222305](222304 call uint[115] 64) unknown test_nb[222313](222312 call uint[115] 64) unknown wait_nb[222321](222320 call uint[115] 64) unknown try_nb[222329](222328 call uint[115] 64) unknown amo[222337](222336 call uint[115] 64) unknown execute_on[222345](222344 call uint[115] 64) unknown execute_on_fast[222353](222352 call uint[115] 64) unknown execute_on_nb[222361](222360 call uint[115] 64) function chpl_commDiagnostics[222553].writeThis[222369](arg _mt[222557]:_MT[238], arg this[222555]:chpl_commDiagnostics[222553], arg c[222367]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (222372 'use' Reflection)
    { scopeless
      unknown first[222376] 1
      (222379 'end of statement')
    }
    (222382 call <~> c "(")
    {
      unknown i[222479] 0
      unknown tmp[222480] "maybe param" "temp"
      (222492 'move' tmp[222480](222490 call chpl_compute_low_param_loop_bound 0(222391 call -(222389 call numFields chpl_commDiagnostics) 1)))
      unknown tmp[222481] "maybe param" "temp"
      (222504 'move' tmp[222481](222502 call chpl_compute_high_param_loop_bound 0(222497 call -(222499 call numFields chpl_commDiagnostics) 1)))
      unknown tmp[222482] "maybe param" "temp"
      (222507 'move' tmp[222482] 1)
      ParamForLoop[222509]
      { i[222479] tmp[222480] tmp[222481] tmp[222482]
        {
          { scopeless
            unknown name[222400] "param"(222399 call getFieldName chpl_commDiagnostics i)
            (222403 'end of statement')
          }
          { scopeless
            const val[222410] "const"(222409 call getField this i)
            (222413 'end of statement')
          }
          if(222475 call _cond_test(222416 call != val 0))
          {
            if(222470 call _cond_test(222439 call || commDiagsPrintUnstable(222437 call != name "amo")))
            {
              if(222452 call _cond_test first)
              {
                { scopeless
                  (222444 call = first 0)
                }
              }
              {
                { scopeless
                  (222449 call <~> c ", ")
                }
              }
              (222467 call <~>(222464 call <~>(222461 call <~> c name) " = ") val)
            }
          }
        }
      }
      label _unused_continueLabel[222484]
      label _breakLabel[222483]
    }
    if(222540 call _cond_test first)
    {
      { scopeless
        (222537 call <~> c "<no communication>")
      }
    }
    (222547 call <~> c ")")
  }
  {
  }
  unknown commDiagnostics[222563] "type variable" chpl_commDiagnostics
  function chpl_comm_startVerbose[222572](arg print_unstable[222569] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerbose[222578]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startVerboseHere[222588](arg print_unstable[222585] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerboseHere[222594]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnostics[222604](arg print_unstable[222601] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnostics[222610]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnosticsHere[222620](arg print_unstable[222617] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnosticsHere[222626]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_resetDiagnosticsHere[222632]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_getDiagnosticsHere[222642](out arg cd[222639] :
  commDiagnostics) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function startVerboseComm[222648]() : _unknown[51]
  {
    (222653 call chpl_comm_startVerbose commDiagsPrintUnstable)
  }
  function stopVerboseComm[222660]() : _unknown[51]
  {
    (222664 call chpl_comm_stopVerbose)
  }
  function startVerboseCommHere[222671]() : _unknown[51]
  {
    (222676 call chpl_comm_startVerboseHere commDiagsPrintUnstable)
  }
  function stopVerboseCommHere[222683]() : _unknown[51]
  {
    (222687 call chpl_comm_stopVerboseHere)
  }
  function startCommDiagnostics[222694]() : _unknown[51]
  {
    (222699 call chpl_comm_startDiagnostics commDiagsPrintUnstable)
  }
  function stopCommDiagnostics[222706]() : _unknown[51]
  {
    (222710 call chpl_comm_stopDiagnostics)
  }
  function startCommDiagnosticsHere[222717]() : _unknown[51]
  {
    (222722 call chpl_comm_startDiagnosticsHere commDiagsPrintUnstable)
  }
  function stopCommDiagnosticsHere[222729]() : _unknown[51]
  {
    (222733 call chpl_comm_stopDiagnosticsHere)
  }
  function resetCommDiagnostics[222740]() : _unknown[51]
  {
    {
      unknown _indexOfInterest[222760] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[222761] "expr temp" "temp"
      (222770 'move' _iterator[222761](222768 call _getIterator Locales))
      Defer
      {
        {
          (222786 call _freeIterator _iterator[222761])
        }
      }
      { scopeless type
        (222775 'move' _indexOfInterest[222760](222772 call iteratorIndex _iterator[222761]))
      }
      ForLoop[222762]
      {
        unknown loc[222779] "index var" "insert auto destroy"
        (222781 'move' loc[222779] _indexOfInterest[222760])
        { scopeless
          const tmp[222752] "const" "temp"
          (222754 'move' tmp[222752](222750 'deref'(222749 '_wide_get_locale' loc)))
          {
            { scopeless
              (222747 call resetCommDiagnosticsHere)
            }
            (222757 'on block' 0 tmp[222752])
          }
        }
        label _continueLabel[222765]
        _indexOfInterest[222760]
        _iterator[222761]
      }
      label _breakLabel[222766]
    }
  }
  function resetCommDiagnosticsHere[222798]() : _unknown[51] "inline"
  {
    (222802 call chpl_comm_resetDiagnosticsHere)
  }
  function getCommDiagnostics[222809]() : _unknown[51]
  {
    { scopeless
      unknown D[222818](222816 call chpl__buildArrayRuntimeType(222814 call chpl__ensureDomainExpr LocaleSpace) commDiagnostics)
      (222821 'end of statement')
    }
    {
      unknown _indexOfInterest[222851] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[222852] "expr temp" "temp"
      (222861 'move' _iterator[222852](222859 call _getIterator Locales))
      Defer
      {
        {
          (222877 call _freeIterator _iterator[222852])
        }
      }
      { scopeless type
        (222866 'move' _indexOfInterest[222851](222863 call iteratorIndex _iterator[222852]))
      }
      ForLoop[222853]
      {
        unknown loc[222870] "index var" "insert auto destroy"
        (222872 'move' loc[222870] _indexOfInterest[222851])
        { scopeless
          const tmp[222843] "const" "temp"
          (222845 'move' tmp[222843](222841 'deref'(222840 '_wide_get_locale' loc)))
          {
            {
              (222836 call =(222832 call D(222828 call . loc c"id"))(222835 call getCommDiagnosticsHere))
            }
            (222848 'on block' 0 tmp[222843])
          }
        }
        label _continueLabel[222856]
        _indexOfInterest[222851]
        _iterator[222852]
      }
      label _breakLabel[222857]
    }
    (222885 return D)
  }
  function getCommDiagnosticsHere[222891]() : _unknown[51]
  {
    { scopeless
      unknown cd[222894] commDiagnostics
      (222897 'end of statement')
    }
    (222902 call chpl_comm_getDiagnosticsHere cd)
    (222905 return cd)
  }
  function printCommDiagnosticsTable[222915](arg printEmptyColumns[222912] =
  0) : _unknown[51]
  {
    (222918 'use' Reflection)
    { scopeless
      unknown unstable[222938] "param" "unstable"
      (222941 'end of statement')
    }
    { scopeless
      unknown CommDiags[222945](222944 call getCommDiagnostics)
      (222948 'end of statement')
    }
    { scopeless
      unknown nFields[222953] "param"(222952 call numFields chpl_commDiagnostics)
      (222956 'end of statement')
    }
    { scopeless
      unknown fieldWidth[222970](222968 call chpl__buildArrayRuntimeType(222966 call chpl__ensureDomainExpr(222962 call chpl_build_bounded_range 0(222960 call - nFields 1))) int[13])
      (222973 'end of statement')
    }
    (223010 call writef "| %6s " "locale")
    {
      unknown fieldID[223180] 0
      unknown tmp[223181] "maybe param" "temp"
      (223193 'move' tmp[223181](223191 call chpl_compute_low_param_loop_bound 0(223015 call - nFields 1)))
      unknown tmp[223182] "maybe param" "temp"
      (223203 'move' tmp[223182](223201 call chpl_compute_high_param_loop_bound 0(223198 call - nFields 1)))
      unknown tmp[223183] "maybe param" "temp"
      (223206 'move' tmp[223183] 1)
      ParamForLoop[223208]
      { fieldID[223180] tmp[223181] tmp[223182] tmp[223183]
        {
          { scopeless
            unknown name[223024] "param"(223023 call getFieldName chpl_commDiagnostics fieldID)
            (223027 'end of statement')
          }
          { scopeless
            unknown maxval[223030] 0
            (223033 'end of statement')
          }
          {
            unknown _indexOfInterest[223058] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[223059] "expr temp" "temp"
            (223068 'move' _iterator[223059](223066 call _getIterator LocaleSpace))
            Defer
            {
              {
                (223084 call _freeIterator _iterator[223059])
              }
            }
            { scopeless type
              (223073 'move' _indexOfInterest[223058](223070 call iteratorIndex _iterator[223059]))
            }
            ForLoop[223060]
            {
              unknown locID[223077] "index var" "insert auto destroy"
              (223079 'move' locID[223077] _indexOfInterest[223058])
              { scopeless
                (223055 call = maxval(223054 call max maxval(223053 call(223048 call .(223047 call getField(223044 call CommDiags locID) fieldID) c"safeCast") int[13])))
              }
              label _continueLabel[223063]
              _indexOfInterest[223058]
              _iterator[223059]
            }
            label _breakLabel[223064]
          }
          if(223176 call _cond_test(223096 call || printEmptyColumns(223094 call != maxval 0)))
          {
            { scopeless
              const width[223137] "const"(223134 IfExpr (223106 call &&(223100 call == commDiagsPrintUnstable 0)(223104 call == name "amo")) then
              { scopeless
                (223112 call -(223109 call . unstable c"size"))
              } else
              { scopeless
                (223133 call max(223116 call . name c"size")(223131 call _cast int[13](223129 call ceil(223127 call log10(223124 call + maxval 1)))))
              } )
              (223140 'end of statement')
            }
            (223147 call =(223145 call fieldWidth fieldID) width)
            (223174 call writef "| %*s "(223172 call abs width) name)
          }
        }
      }
      label _unused_continueLabel[223185]
      label _breakLabel[223184]
    }
    (223220 call writeln "|")
    (223241 call writef "| -----: ")
    {
      unknown fieldID[223313] 0
      unknown tmp[223314] "maybe param" "temp"
      (223326 'move' tmp[223314](223324 call chpl_compute_low_param_loop_bound 0(223246 call - nFields 1)))
      unknown tmp[223315] "maybe param" "temp"
      (223336 'move' tmp[223315](223334 call chpl_compute_high_param_loop_bound 0(223331 call - nFields 1)))
      unknown tmp[223316] "maybe param" "temp"
      (223339 'move' tmp[223316] 1)
      ParamForLoop[223341]
      { fieldID[223313] tmp[223314] tmp[223315] tmp[223316]
        {
          { scopeless
            const width[223257] "const"(223256 call abs(223254 call fieldWidth fieldID))
            (223260 'end of statement')
          }
          if(223309 call _cond_test(223264 call != width 0))
          {
            (223306 call writef "| %.*s: "(223287 call - width 1) "------------------")
          }
        }
      }
      label _unused_continueLabel[223318]
      label _breakLabel[223317]
    }
    (223353 call writeln "|")
    {
      unknown _indexOfInterest[223467] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[223468] "expr temp" "temp"
      (223477 'move' _iterator[223468](223475 call _getIterator LocaleSpace))
      Defer
      {
        {
          (223493 call _freeIterator _iterator[223468])
        }
      }
      { scopeless type
        (223482 'move' _indexOfInterest[223467](223479 call iteratorIndex _iterator[223468]))
      }
      ForLoop[223469]
      {
        unknown locID[223486] "index var" "insert auto destroy"
        (223488 'move' locID[223486] _indexOfInterest[223467])
        {
          (223364 call writef "| %6s "(223362 call _cast string[26] locID))
          {
            unknown fieldID[223425] 0
            unknown tmp[223426] "maybe param" "temp"
            (223438 'move' tmp[223426](223436 call chpl_compute_low_param_loop_bound 0(223370 call - nFields 1)))
            unknown tmp[223427] "maybe param" "temp"
            (223448 'move' tmp[223427](223446 call chpl_compute_high_param_loop_bound 0(223443 call - nFields 1)))
            unknown tmp[223428] "maybe param" "temp"
            (223451 'move' tmp[223428] 1)
            ParamForLoop[223453]
            { fieldID[223425] tmp[223426] tmp[223427] tmp[223428]
              {
                { scopeless
                  unknown width[223378](223377 call fieldWidth fieldID)
                  (223381 'end of statement')
                }
                { scopeless
                  const count[223402] "const"(223399 IfExpr (223385 call < width 0) then
                  { scopeless
                    unstable
                  } else
                  { scopeless
                    (223397 call _cast string[26](223395 call getField(223392 call CommDiags locID) fieldID))
                  } )
                  (223405 'end of statement')
                }
                if(223420 call _cond_test(223408 call != width 0))
                {
                  { scopeless
                    (223418 call writef "| %*s "(223416 call abs width) count)
                  }
                }
              }
            }
            label _unused_continueLabel[223430]
            label _breakLabel[223429]
          }
          (223465 call writeln "|")
        }
        label _continueLabel[223472]
        _indexOfInterest[223467]
        _iterator[223468]
      }
      label _breakLabel[223473]
    }
  }
  { scopeless
    unknown printInitVerboseComm[223503] "config" "param" 0
    (223506 'end of statement')
  }
  { scopeless
    unknown printInitCommCounts[223508] "config" "param" 0
    (223511 'end of statement')
  }
}