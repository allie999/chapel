AST dump for CommDiagnostics after pass readExternC.
Module use list: 

{
  (353111 'use' ChapelStandard)
  { scopeless
    unknown commDiagsPrintUnstable[222359] "config" "param" 0
    (222362 'end of statement')
  }
  type chpl_commDiagnostics[222641] unknown get[222369](222368 call uint[115] 64) unknown get_nb[222377](222376 call uint[115] 64) unknown put[222385](222384 call uint[115] 64) unknown put_nb[222393](222392 call uint[115] 64) unknown test_nb[222401](222400 call uint[115] 64) unknown wait_nb[222409](222408 call uint[115] 64) unknown try_nb[222417](222416 call uint[115] 64) unknown amo[222425](222424 call uint[115] 64) unknown execute_on[222433](222432 call uint[115] 64) unknown execute_on_fast[222441](222440 call uint[115] 64) unknown execute_on_nb[222449](222448 call uint[115] 64) function chpl_commDiagnostics[222641].writeThis[222457](arg _mt[222645]:_MT[238], arg this[222643]:chpl_commDiagnostics[222641], arg c[222455]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (222460 'use' Reflection)
    { scopeless
      unknown first[222464] 1
      (222467 'end of statement')
    }
    (222470 call <~> c "(")
    {
      unknown i[222567] 0
      unknown tmp[222568] "maybe param" "temp"
      (222580 'move' tmp[222568](222578 call chpl_compute_low_param_loop_bound 0(222479 call -(222477 call numFields chpl_commDiagnostics) 1)))
      unknown tmp[222569] "maybe param" "temp"
      (222592 'move' tmp[222569](222590 call chpl_compute_high_param_loop_bound 0(222585 call -(222587 call numFields chpl_commDiagnostics) 1)))
      unknown tmp[222570] "maybe param" "temp"
      (222595 'move' tmp[222570] 1)
      ParamForLoop[222597]
      { i[222567] tmp[222568] tmp[222569] tmp[222570]
        {
          { scopeless
            unknown name[222488] "param"(222487 call getFieldName chpl_commDiagnostics i)
            (222491 'end of statement')
          }
          { scopeless
            const val[222498] "const"(222497 call getField this i)
            (222501 'end of statement')
          }
          if(222563 call _cond_test(222504 call != val 0))
          {
            if(222558 call _cond_test(222527 call || commDiagsPrintUnstable(222525 call != name "amo")))
            {
              if(222540 call _cond_test first)
              {
                { scopeless
                  (222532 call = first 0)
                }
              }
              {
                { scopeless
                  (222537 call <~> c ", ")
                }
              }
              (222555 call <~>(222552 call <~>(222549 call <~> c name) " = ") val)
            }
          }
        }
      }
      label _unused_continueLabel[222572]
      label _breakLabel[222571]
    }
    if(222628 call _cond_test first)
    {
      { scopeless
        (222625 call <~> c "<no communication>")
      }
    }
    (222635 call <~> c ")")
  }
  {
  }
  unknown commDiagnostics[222651] "type variable" chpl_commDiagnostics
  function chpl_comm_startVerbose[222660](arg print_unstable[222657] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerbose[222666]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startVerboseHere[222676](arg print_unstable[222673] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopVerboseHere[222682]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnostics[222692](arg print_unstable[222689] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnostics[222698]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_startDiagnosticsHere[222708](arg print_unstable[222705] :
  bool[10]) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_stopDiagnosticsHere[222714]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_resetDiagnosticsHere[222720]() : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function chpl_comm_getDiagnosticsHere[222730](out arg cd[222727] :
  commDiagnostics) : void[4] "extern" "local args" "no fn body" "private"
  {
  }
  function startVerboseComm[222736]() : _unknown[51]
  {
    (222741 call chpl_comm_startVerbose commDiagsPrintUnstable)
  }
  function stopVerboseComm[222748]() : _unknown[51]
  {
    (222752 call chpl_comm_stopVerbose)
  }
  function startVerboseCommHere[222759]() : _unknown[51]
  {
    (222764 call chpl_comm_startVerboseHere commDiagsPrintUnstable)
  }
  function stopVerboseCommHere[222771]() : _unknown[51]
  {
    (222775 call chpl_comm_stopVerboseHere)
  }
  function startCommDiagnostics[222782]() : _unknown[51]
  {
    (222787 call chpl_comm_startDiagnostics commDiagsPrintUnstable)
  }
  function stopCommDiagnostics[222794]() : _unknown[51]
  {
    (222798 call chpl_comm_stopDiagnostics)
  }
  function startCommDiagnosticsHere[222805]() : _unknown[51]
  {
    (222810 call chpl_comm_startDiagnosticsHere commDiagsPrintUnstable)
  }
  function stopCommDiagnosticsHere[222817]() : _unknown[51]
  {
    (222821 call chpl_comm_stopDiagnosticsHere)
  }
  function resetCommDiagnostics[222828]() : _unknown[51]
  {
    {
      unknown _indexOfInterest[222848] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[222849] "expr temp" "temp"
      (222858 'move' _iterator[222849](222856 call _getIterator Locales))
      Defer
      {
        {
          (222874 call _freeIterator _iterator[222849])
        }
      }
      { scopeless type
        (222863 'move' _indexOfInterest[222848](222860 call iteratorIndex _iterator[222849]))
      }
      ForLoop[222850]
      {
        unknown loc[222867] "index var" "insert auto destroy"
        (222869 'move' loc[222867] _indexOfInterest[222848])
        { scopeless
          const tmp[222840] "const" "temp"
          (222842 'move' tmp[222840](222838 'deref'(222837 '_wide_get_locale' loc)))
          {
            { scopeless
              (222835 call resetCommDiagnosticsHere)
            }
            (222845 'on block' 0 tmp[222840])
          }
        }
        label _continueLabel[222853]
        _indexOfInterest[222848]
        _iterator[222849]
      }
      label _breakLabel[222854]
    }
  }
  function resetCommDiagnosticsHere[222886]() : _unknown[51] "inline"
  {
    (222890 call chpl_comm_resetDiagnosticsHere)
  }
  function getCommDiagnostics[222897]() : _unknown[51]
  {
    { scopeless
      unknown D[222906](222904 call chpl__buildArrayRuntimeType(222902 call chpl__ensureDomainExpr LocaleSpace) commDiagnostics)
      (222909 'end of statement')
    }
    {
      unknown _indexOfInterest[222939] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[222940] "expr temp" "temp"
      (222949 'move' _iterator[222940](222947 call _getIterator Locales))
      Defer
      {
        {
          (222965 call _freeIterator _iterator[222940])
        }
      }
      { scopeless type
        (222954 'move' _indexOfInterest[222939](222951 call iteratorIndex _iterator[222940]))
      }
      ForLoop[222941]
      {
        unknown loc[222958] "index var" "insert auto destroy"
        (222960 'move' loc[222958] _indexOfInterest[222939])
        { scopeless
          const tmp[222931] "const" "temp"
          (222933 'move' tmp[222931](222929 'deref'(222928 '_wide_get_locale' loc)))
          {
            {
              (222924 call =(222920 call D(222916 call . loc c"id"))(222923 call getCommDiagnosticsHere))
            }
            (222936 'on block' 0 tmp[222931])
          }
        }
        label _continueLabel[222944]
        _indexOfInterest[222939]
        _iterator[222940]
      }
      label _breakLabel[222945]
    }
    (222973 return D)
  }
  function getCommDiagnosticsHere[222979]() : _unknown[51]
  {
    { scopeless
      unknown cd[222982] commDiagnostics
      (222985 'end of statement')
    }
    (222990 call chpl_comm_getDiagnosticsHere cd)
    (222993 return cd)
  }
  function printCommDiagnosticsTable[223003](arg printEmptyColumns[223000] =
  0) : _unknown[51]
  {
    (223006 'use' Reflection)
    { scopeless
      unknown unstable[223026] "param" "unstable"
      (223029 'end of statement')
    }
    { scopeless
      unknown CommDiags[223033](223032 call getCommDiagnostics)
      (223036 'end of statement')
    }
    { scopeless
      unknown nFields[223041] "param"(223040 call numFields chpl_commDiagnostics)
      (223044 'end of statement')
    }
    { scopeless
      unknown fieldWidth[223058](223056 call chpl__buildArrayRuntimeType(223054 call chpl__ensureDomainExpr(223050 call chpl_build_bounded_range 0(223048 call - nFields 1))) int[13])
      (223061 'end of statement')
    }
    (223098 call writef "| %6s " "locale")
    {
      unknown fieldID[223268] 0
      unknown tmp[223269] "maybe param" "temp"
      (223281 'move' tmp[223269](223279 call chpl_compute_low_param_loop_bound 0(223103 call - nFields 1)))
      unknown tmp[223270] "maybe param" "temp"
      (223291 'move' tmp[223270](223289 call chpl_compute_high_param_loop_bound 0(223286 call - nFields 1)))
      unknown tmp[223271] "maybe param" "temp"
      (223294 'move' tmp[223271] 1)
      ParamForLoop[223296]
      { fieldID[223268] tmp[223269] tmp[223270] tmp[223271]
        {
          { scopeless
            unknown name[223112] "param"(223111 call getFieldName chpl_commDiagnostics fieldID)
            (223115 'end of statement')
          }
          { scopeless
            unknown maxval[223118] 0
            (223121 'end of statement')
          }
          {
            unknown _indexOfInterest[223146] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[223147] "expr temp" "temp"
            (223156 'move' _iterator[223147](223154 call _getIterator LocaleSpace))
            Defer
            {
              {
                (223172 call _freeIterator _iterator[223147])
              }
            }
            { scopeless type
              (223161 'move' _indexOfInterest[223146](223158 call iteratorIndex _iterator[223147]))
            }
            ForLoop[223148]
            {
              unknown locID[223165] "index var" "insert auto destroy"
              (223167 'move' locID[223165] _indexOfInterest[223146])
              { scopeless
                (223143 call = maxval(223142 call max maxval(223141 call(223136 call .(223135 call getField(223132 call CommDiags locID) fieldID) c"safeCast") int[13])))
              }
              label _continueLabel[223151]
              _indexOfInterest[223146]
              _iterator[223147]
            }
            label _breakLabel[223152]
          }
          if(223264 call _cond_test(223184 call || printEmptyColumns(223182 call != maxval 0)))
          {
            { scopeless
              const width[223225] "const"(223222 IfExpr (223194 call &&(223188 call == commDiagsPrintUnstable 0)(223192 call == name "amo")) then
              { scopeless
                (223200 call -(223197 call . unstable c"size"))
              } else
              { scopeless
                (223221 call max(223204 call . name c"size")(223219 call _cast int[13](223217 call ceil(223215 call log10(223212 call + maxval 1)))))
              } )
              (223228 'end of statement')
            }
            (223235 call =(223233 call fieldWidth fieldID) width)
            (223262 call writef "| %*s "(223260 call abs width) name)
          }
        }
      }
      label _unused_continueLabel[223273]
      label _breakLabel[223272]
    }
    (223308 call writeln "|")
    (223329 call writef "| -----: ")
    {
      unknown fieldID[223401] 0
      unknown tmp[223402] "maybe param" "temp"
      (223414 'move' tmp[223402](223412 call chpl_compute_low_param_loop_bound 0(223334 call - nFields 1)))
      unknown tmp[223403] "maybe param" "temp"
      (223424 'move' tmp[223403](223422 call chpl_compute_high_param_loop_bound 0(223419 call - nFields 1)))
      unknown tmp[223404] "maybe param" "temp"
      (223427 'move' tmp[223404] 1)
      ParamForLoop[223429]
      { fieldID[223401] tmp[223402] tmp[223403] tmp[223404]
        {
          { scopeless
            const width[223345] "const"(223344 call abs(223342 call fieldWidth fieldID))
            (223348 'end of statement')
          }
          if(223397 call _cond_test(223352 call != width 0))
          {
            (223394 call writef "| %.*s: "(223375 call - width 1) "------------------")
          }
        }
      }
      label _unused_continueLabel[223406]
      label _breakLabel[223405]
    }
    (223441 call writeln "|")
    {
      unknown _indexOfInterest[223555] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[223556] "expr temp" "temp"
      (223565 'move' _iterator[223556](223563 call _getIterator LocaleSpace))
      Defer
      {
        {
          (223581 call _freeIterator _iterator[223556])
        }
      }
      { scopeless type
        (223570 'move' _indexOfInterest[223555](223567 call iteratorIndex _iterator[223556]))
      }
      ForLoop[223557]
      {
        unknown locID[223574] "index var" "insert auto destroy"
        (223576 'move' locID[223574] _indexOfInterest[223555])
        {
          (223452 call writef "| %6s "(223450 call _cast string[26] locID))
          {
            unknown fieldID[223513] 0
            unknown tmp[223514] "maybe param" "temp"
            (223526 'move' tmp[223514](223524 call chpl_compute_low_param_loop_bound 0(223458 call - nFields 1)))
            unknown tmp[223515] "maybe param" "temp"
            (223536 'move' tmp[223515](223534 call chpl_compute_high_param_loop_bound 0(223531 call - nFields 1)))
            unknown tmp[223516] "maybe param" "temp"
            (223539 'move' tmp[223516] 1)
            ParamForLoop[223541]
            { fieldID[223513] tmp[223514] tmp[223515] tmp[223516]
              {
                { scopeless
                  unknown width[223466](223465 call fieldWidth fieldID)
                  (223469 'end of statement')
                }
                { scopeless
                  const count[223490] "const"(223487 IfExpr (223473 call < width 0) then
                  { scopeless
                    unstable
                  } else
                  { scopeless
                    (223485 call _cast string[26](223483 call getField(223480 call CommDiags locID) fieldID))
                  } )
                  (223493 'end of statement')
                }
                if(223508 call _cond_test(223496 call != width 0))
                {
                  { scopeless
                    (223506 call writef "| %*s "(223504 call abs width) count)
                  }
                }
              }
            }
            label _unused_continueLabel[223518]
            label _breakLabel[223517]
          }
          (223553 call writeln "|")
        }
        label _continueLabel[223560]
        _indexOfInterest[223555]
        _iterator[223556]
      }
      label _breakLabel[223561]
    }
  }
  { scopeless
    unknown printInitVerboseComm[223591] "config" "param" 0
    (223594 'end of statement')
  }
  { scopeless
    unknown printInitCommCounts[223596] "config" "param" 0
    (223599 'end of statement')
  }
}