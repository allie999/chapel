AST dump for InsertionSort after pass createTaskFunctions.
Module use list: ChapelStandard Sort ShallowCopy 

{
  function chpl__init_InsertionSort[416244]() : void[4] "insert line file info" "module init"
  {
    (538011 return _void[55])
  }
  function insertionSort[270198](arg Data[270195]:_array[133594](?), arg comparator[270203]:_any[178](?) :
  defaultComparator[268065] =
  defaultComparator[268065], arg lo[270212]:int(64)[13] =
  unknown call_tmp[737853] "expr temp" "maybe param" "maybe type" "temp", arg hi[270221]:int(64)[13] =
  unknown call_tmp[737862] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737871] "expr temp" "maybe param" "maybe type" "temp"
    (737874 'move' call_tmp[737871](466803 call eltType _mt[243] Data[270195]))
    (270229 call chpl_check_comparator comparator[270203] call_tmp[737871])
    (490020 'end of statement')
    unknown call_tmp[737878] "expr temp" "maybe param" "maybe type" "temp"
    (737881 'move' call_tmp[737878](466795 call _dom _mt[243] Data[270195]))
    unknown call_tmp[737885] "expr temp" "maybe param" "maybe type" "temp"
    (737888 'move' call_tmp[737885](270233 call rank _mt[243] call_tmp[737878]))
    unknown call_tmp[737890] "expr temp" "maybe param" "maybe type" "temp"
    (737893 'move' call_tmp[737890](270237 call != call_tmp[737885] 1))
    unknown call_tmp[737895] "expr temp" "maybe param" "maybe type" "temp"
    (737898 'move' call_tmp[737895](270261 call _cond_test call_tmp[737890]))
    if call_tmp[737895]
    {
      (270258 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270266] "dead at end of block" "const" "insert auto destroy"
    (548881 'init var' low[270266] lo[270212])
    const high[270270] "dead at end of block" "const" "insert auto destroy"
    (548883 'init var' high[270270] hi[270221])
    unknown call_tmp[737902] "expr temp" "maybe param" "maybe type" "temp"
    (737905 'move' call_tmp[737902](466799 call _dom _mt[243] Data[270195]))
    unknown call_tmp[737909] "expr temp" "maybe param" "maybe type" "temp"
    (737912 'move' call_tmp[737909](270275 call stride _mt[243] call_tmp[737902]))
    unknown call_tmp[737914] "maybe param" "maybe type" "temp"
    (737917 'move' call_tmp[737914](270279 call abs call_tmp[737909]))
    const stride[270280] "dead at end of block" "const" "insert auto destroy"
    (548885 'init var' stride[270280] call_tmp[737914])
    (270283 'end of statement')
    {
      unknown _indexOfInterest[270437] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270438] "expr temp" "temp"
      unknown call_tmp[737919] "expr temp" "maybe param" "maybe type" "temp"
      (737922 'move' call_tmp[737919](270456 call chpl_direct_range_iter low[270266] high[270270] stride[270280]))
      (270447 'move' _iterator[270438](270445 call _getIterator call_tmp[737919]))
      Defer
      {
        {
          (270472 call _freeIterator _iterator[270438])
        }
      }
      { scopeless type
        (270461 'move' _indexOfInterest[270437](270458 call iteratorIndex _iterator[270438]))
      }
      ForLoop[270439]
      {
        unknown i[270465] "index var" "insert auto destroy"
        (490023 'end of statement')
        (270467 'move' i[270465] _indexOfInterest[270437])
        (490024 'end of statement' i[270465])
        {
          unknown call_tmp[737924] "maybe param" "maybe type" "temp"
          (737927 'move' call_tmp[737924](270295 call Data[270195] i[270465]))
          unknown ithVal[270296] "dead at end of block" "insert auto destroy"
          (548887 'init var' ithVal[270296] call_tmp[737924])
          (270299 'end of statement')
          unknown inserted[270302] "dead at end of block" "insert auto destroy"
          (548889 'init var' inserted[270302] 0)
          (270305 'end of statement' i[270465])
          {
            unknown _indexOfInterest[270371] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270372] "expr temp" "temp"
            unknown call_tmp[737929] "expr temp" "maybe param" "maybe type" "temp"
            (737932 'move' call_tmp[737929](270395 call - i[270465] stride[270280]))
            unknown call_tmp[737934] "expr temp" "maybe param" "maybe type" "temp"
            (737937 'move' call_tmp[737934](270391 call - stride[270280]))
            unknown call_tmp[737939] "expr temp" "maybe param" "maybe type" "temp"
            (737942 'move' call_tmp[737939](270398 call chpl_direct_range_iter low[270266] call_tmp[737929] call_tmp[737934]))
            (270381 'move' _iterator[270372](270379 call _getIterator call_tmp[737939]))
            Defer
            {
              {
                (270414 call _freeIterator _iterator[270372])
              }
            }
            { scopeless type
              (270403 'move' _indexOfInterest[270371](270400 call iteratorIndex _iterator[270372]))
            }
            ForLoop[270373]
            {
              unknown j[270407] "index var" "insert auto destroy"
              (490028 'end of statement')
              (270409 'move' j[270407] _indexOfInterest[270371])
              (490029 'end of statement' j[270407])
              {
                unknown call_tmp[737944] "expr temp" "maybe param" "maybe type" "temp"
                (737947 'move' call_tmp[737944](270325 call Data[270195] j[270407]))
                unknown call_tmp[737949] "expr temp" "maybe param" "maybe type" "temp"
                (737952 'move' call_tmp[737949](270327 call chpl_compare ithVal[270296] call_tmp[737944] comparator[270203]))
                unknown call_tmp[737954] "expr temp" "maybe param" "maybe type" "temp"
                (737957 'move' call_tmp[737954](270329 call < call_tmp[737949] 0))
                unknown call_tmp[737959] "expr temp" "maybe param" "maybe type" "temp"
                (737962 'move' call_tmp[737959](270366 call _cond_test call_tmp[737954]))
                if call_tmp[737959]
                {
                  unknown call_tmp[737964] "expr temp" "maybe param" "maybe type" "temp"
                  (737967 'move' call_tmp[737964](270334 call + j[270407] stride[270280]))
                  unknown call_tmp[737969] "expr temp" "maybe param" "maybe type" "temp"
                  (737972 'move' call_tmp[737969](270337 call Data[270195] call_tmp[737964]))
                  unknown call_tmp[737974] "expr temp" "maybe param" "maybe type" "temp"
                  (737977 'move' call_tmp[737974](270341 call Data[270195] j[270407]))
                  (270342 call = call_tmp[737969] call_tmp[737974])
                  (490031 'end of statement' j[270407] stride[270280] j[270407])
                }
                {
                  unknown call_tmp[737979] "expr temp" "maybe param" "maybe type" "temp"
                  (737982 'move' call_tmp[737979](270349 call + j[270407] stride[270280]))
                  unknown call_tmp[737984] "expr temp" "maybe param" "maybe type" "temp"
                  (737987 'move' call_tmp[737984](270352 call Data[270195] call_tmp[737979]))
                  (270354 call = call_tmp[737984] ithVal[270296])
                  (490035 'end of statement' j[270407] stride[270280] ithVal[270296])
                  (270360 call = inserted[270302] 1)
                  (490039 'end of statement' inserted[270302])
                  break _breakLabel[270377] _breakLabel[270377]
                }
              }
              label _continueLabel[270376]
              _indexOfInterest[270371]
              _iterator[270372]
            }
            label _breakLabel[270377]
          }
          unknown call_tmp[737989] "expr temp" "maybe param" "maybe type" "temp"
          (737992 'move' call_tmp[737989](270422 call ! inserted[270302]))
          unknown call_tmp[737994] "expr temp" "maybe param" "maybe type" "temp"
          (737997 'move' call_tmp[737994](270433 call _cond_test call_tmp[737989]))
          if call_tmp[737994]
          {
            unknown call_tmp[737999] "expr temp" "maybe param" "maybe type" "temp"
            (738002 'move' call_tmp[737999](270427 call Data[270195] low[270266]))
            (270429 call = call_tmp[737999] ithVal[270296])
            (490041 'end of statement' low[270266] ithVal[270296])
          }
        }
        label _continueLabel[270442]
        _indexOfInterest[270437]
        _iterator[270438]
      }
      label _breakLabel[270443]
    }
    (538007 return _void[55])
  }
  function insertionSortMoveElts[270493](arg Data[270490]:_array[133594](?), arg comparator[270498]:_any[178](?) :
  defaultComparator[268065] =
  defaultComparator[268065], arg lo[270507]:int(64)[13] =
  unknown call_tmp[738006] "expr temp" "maybe param" "maybe type" "temp", arg hi[270516]:int(64)[13] =
  unknown call_tmp[738015] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[738024] "expr temp" "maybe param" "maybe type" "temp"
    (738027 'move' call_tmp[738024](466825 call eltType _mt[243] Data[270490]))
    (270524 call chpl_check_comparator comparator[270498] call_tmp[738024])
    (490044 'end of statement')
    unknown call_tmp[738031] "expr temp" "maybe param" "maybe type" "temp"
    (738034 'move' call_tmp[738031](466817 call _dom _mt[243] Data[270490]))
    unknown call_tmp[738038] "expr temp" "maybe param" "maybe type" "temp"
    (738041 'move' call_tmp[738038](270528 call rank _mt[243] call_tmp[738031]))
    unknown call_tmp[738043] "expr temp" "maybe param" "maybe type" "temp"
    (738046 'move' call_tmp[738043](270532 call != call_tmp[738038] 1))
    unknown call_tmp[738048] "expr temp" "maybe param" "maybe type" "temp"
    (738051 'move' call_tmp[738048](270540 call _cond_test call_tmp[738043]))
    if call_tmp[738048]
    {
      (270537 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270545] "dead at end of block" "const" "insert auto destroy"
    (548891 'init var' low[270545] lo[270507])
    const high[270549] "dead at end of block" "const" "insert auto destroy"
    (548893 'init var' high[270549] hi[270516])
    unknown call_tmp[738055] "expr temp" "maybe param" "maybe type" "temp"
    (738058 'move' call_tmp[738055](466821 call _dom _mt[243] Data[270490]))
    unknown call_tmp[738062] "expr temp" "maybe param" "maybe type" "temp"
    (738065 'move' call_tmp[738062](270554 call stride _mt[243] call_tmp[738055]))
    unknown call_tmp[738067] "maybe param" "maybe type" "temp"
    (738070 'move' call_tmp[738067](270558 call abs call_tmp[738062]))
    const stride[270559] "dead at end of block" "const" "insert auto destroy"
    (548895 'init var' stride[270559] call_tmp[738067])
    (270562 'end of statement')
    {
      unknown _indexOfInterest[270738] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270739] "expr temp" "temp"
      unknown call_tmp[738072] "expr temp" "maybe param" "maybe type" "temp"
      (738075 'move' call_tmp[738072](270757 call chpl_direct_range_iter low[270545] high[270549] stride[270559]))
      (270748 'move' _iterator[270739](270746 call _getIterator call_tmp[738072]))
      Defer
      {
        {
          (270773 call _freeIterator _iterator[270739])
        }
      }
      { scopeless type
        (270762 'move' _indexOfInterest[270738](270759 call iteratorIndex _iterator[270739]))
      }
      ForLoop[270740]
      {
        unknown i[270766] "index var" "insert auto destroy"
        (490047 'end of statement')
        (270768 'move' i[270766] _indexOfInterest[270738])
        (490048 'end of statement' i[270766])
        {
          unknown call_tmp[738077] "expr temp" "maybe param" "maybe type" "temp"
          (738080 'move' call_tmp[738077](270580 call Data[270490] i[270766]))
          unknown call_tmp[738082] "maybe param" "maybe type" "temp"
          (738085 'move' call_tmp[738082](270582 call shallowCopyInit module=[255] ShallowCopy[277471] call_tmp[738077]))
          unknown ithVal[270583] "dead at end of block" "no auto destroy"
          (548897 'init var' ithVal[270583] call_tmp[738082])
          (270586 'end of statement')
          unknown inserted[270589] "dead at end of block" "insert auto destroy"
          (548899 'init var' inserted[270589] 0)
          (270592 'end of statement' i[270766])
          {
            unknown _indexOfInterest[270668] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270669] "expr temp" "temp"
            unknown call_tmp[738087] "expr temp" "maybe param" "maybe type" "temp"
            (738090 'move' call_tmp[738087](270692 call - i[270766] stride[270559]))
            unknown call_tmp[738092] "expr temp" "maybe param" "maybe type" "temp"
            (738095 'move' call_tmp[738092](270688 call - stride[270559]))
            unknown call_tmp[738097] "expr temp" "maybe param" "maybe type" "temp"
            (738100 'move' call_tmp[738097](270695 call chpl_direct_range_iter low[270545] call_tmp[738087] call_tmp[738092]))
            (270678 'move' _iterator[270669](270676 call _getIterator call_tmp[738097]))
            Defer
            {
              {
                (270711 call _freeIterator _iterator[270669])
              }
            }
            { scopeless type
              (270700 'move' _indexOfInterest[270668](270697 call iteratorIndex _iterator[270669]))
            }
            ForLoop[270670]
            {
              unknown j[270704] "index var" "insert auto destroy"
              (490052 'end of statement')
              (270706 'move' j[270704] _indexOfInterest[270668])
              (490053 'end of statement' j[270704])
              {
                unknown call_tmp[738102] "expr temp" "maybe param" "maybe type" "temp"
                (738105 'move' call_tmp[738102](270612 call Data[270490] j[270704]))
                unknown call_tmp[738107] "expr temp" "maybe param" "maybe type" "temp"
                (738110 'move' call_tmp[738107](270614 call chpl_compare ithVal[270583] call_tmp[738102] comparator[270498]))
                unknown call_tmp[738112] "expr temp" "maybe param" "maybe type" "temp"
                (738115 'move' call_tmp[738112](270616 call < call_tmp[738107] 0))
                unknown call_tmp[738117] "expr temp" "maybe param" "maybe type" "temp"
                (738120 'move' call_tmp[738117](270663 call _cond_test call_tmp[738112]))
                if call_tmp[738117]
                {
                  unknown call_tmp[738122] "expr temp" "maybe param" "maybe type" "temp"
                  (738125 'move' call_tmp[738122](270627 call + j[270704] stride[270559]))
                  unknown call_tmp[738127] "expr temp" "maybe param" "maybe type" "temp"
                  (738130 'move' call_tmp[738127](270630 call Data[270490] call_tmp[738122]))
                  unknown call_tmp[738132] "expr temp" "maybe param" "maybe type" "temp"
                  (738135 'move' call_tmp[738132](270635 call Data[270490] j[270704]))
                  (270636 call shallowCopy module=[255] ShallowCopy[277471] call_tmp[738127] call_tmp[738132])
                  (490055 'end of statement' j[270704] stride[270559] j[270704])
                  (364260 'referenced modules list' ShallowCopy[277471])
                }
                {
                  unknown call_tmp[738137] "expr temp" "maybe param" "maybe type" "temp"
                  (738140 'move' call_tmp[738137](270646 call + j[270704] stride[270559]))
                  unknown call_tmp[738142] "expr temp" "maybe param" "maybe type" "temp"
                  (738145 'move' call_tmp[738142](270649 call Data[270490] call_tmp[738137]))
                  (270652 call shallowCopy module=[255] ShallowCopy[277471] call_tmp[738142] ithVal[270583])
                  (490059 'end of statement' j[270704] stride[270559] ithVal[270583])
                  (270657 call = inserted[270589] 1)
                  (490063 'end of statement' inserted[270589])
                  break _breakLabel[270674] _breakLabel[270674]
                  (364266 'referenced modules list' ShallowCopy[277471])
                }
              }
              label _continueLabel[270673]
              _indexOfInterest[270668]
              _iterator[270669]
            }
            label _breakLabel[270674]
          }
          unknown call_tmp[738147] "expr temp" "maybe param" "maybe type" "temp"
          (738150 'move' call_tmp[738147](270719 call ! inserted[270589]))
          unknown call_tmp[738152] "expr temp" "maybe param" "maybe type" "temp"
          (738155 'move' call_tmp[738152](270734 call _cond_test call_tmp[738147]))
          if call_tmp[738152]
          {
            unknown call_tmp[738157] "expr temp" "maybe param" "maybe type" "temp"
            (738160 'move' call_tmp[738157](270728 call Data[270490] low[270545]))
            (270731 call shallowCopy module=[255] ShallowCopy[277471] call_tmp[738157] ithVal[270583])
            (490065 'end of statement' low[270545] ithVal[270583])
            (364272 'referenced modules list' ShallowCopy[277471])
          }
          (364254 'referenced modules list' ShallowCopy[277471])
        }
        label _continueLabel[270743]
        _indexOfInterest[270738]
        _iterator[270739]
      }
      label _breakLabel[270744]
    }
    (538009 return _void[55])
  }
  (355449 'used modules list'(353133 'use' ChapelStandard[20267])(270183 'use' Sort[268056]))
}