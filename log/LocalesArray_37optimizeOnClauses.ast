AST dump for LocalesArray after pass optimizeOnClauses.
Module use list: ChapelStandard 

{
  function chpl__init_LocalesArray[415978]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val local__str_literal_129[2377661]:string[26] "temp"
    (2377662 'move' "argument to ! is nil" "argument to ! is nil")
    (113638 call chpl_init_rootLocale[92492])
    (648121 'move' call_tmp[648118](2367552 '.' rootLocale[91511] _instance[89975]))
    (1353022 'move' coerce_tmp[1353018](1353020 'deref' call_tmp[648118]))
    (1353029 'move' coerce_tmp[1353024] coerce_tmp[1353018])
    val _formal_type_tmp_[2171592]:RootLocale[89691] "temp"
    val ret[2171594]:__wide_RootLocale[2381053] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2171596]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2171598 'move' coerce_tmp[2171596](2171600 'cast' object[22] coerce_tmp[1353024]))
    const-val call_tmp[2171603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2429405]:__wide_object[2381018] "temp"
    (2429408 'move' tmp[2429405] nil[44])
    (2171605 'move' call_tmp[2171603](2171607 'ptr_eq' coerce_tmp[2171596] tmp[2429405]))
    if call_tmp[2171603]
    {
      val tmp[2384500]:RootLocale[89691] "temp"
      (2384503 'move' tmp[2384500](2171614 'cast' RootLocale[89691] nil[44]))
      (2171612 'move' ret[2171594] tmp[2384500])
      gotoReturn _end__cast[2171630] _end__cast[2171630]
    }
    val call_tmp[2171620]:__wide_RootLocale[2381053] "dead at end of block" "maybe param" "temp"
    (2171622 'move' call_tmp[2171620](2171624 'dynamic_cast' _formal_type_tmp_[2171592] coerce_tmp[1353024]))
    (2171627 'move' ret[2171594] call_tmp[2171620])
    label _end__cast[2171630]
    (648126 'move' call_tmp[648123] ret[2171594])
    val coerce_tmp[2171760]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2171762 'move' coerce_tmp[2171760](2171764 'cast' object[22] call_tmp[648123]))
    const-val call_tmp[2171767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2429429]:__wide_object[2381018] "temp"
    (2429432 'move' tmp[2429429] nil[44])
    (2171769 'move' call_tmp[2171767](2171771 'ptr_eq' coerce_tmp[2171760] tmp[2429429]))
    if call_tmp[2171767]
    {
      (2171777 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (648131 'move' call_tmp[648128] call_tmp[648123])
    (648138 'move' call_tmp[648135](113655 call getDefaultLocaleArray[89593] call_tmp[648128]))
    (542585 'move' Locales[113656] call_tmp[648135])
    const-val ret_tmp[1837625]:domain(1,int(64),false)[1252597] "temp"
    (113661 call _dom[1346727] Locales[113656] ret_tmp[1837625])
    (1837628 'move' call_tmp[648142] ret_tmp[1837625])
    ref i_x[2332874]:domain(1,int(64),false)[1252597] "temp"
    (2332878 'move' i_x[2332874](2332876 'set reference' ret_tmp[1837625]))
    val ret[2332881]:domain(1,int(64),false)[1252597] "dead after last mention" "RVV" "temp"
    const-val tmp[2332883]:bool[10] "dead after last mention" "const" "temp"
    val tmp[2442415]:bool[10] "temp"
    (2332885 'move' tmp[2442415](2332887 '.v' ret_tmp[1837625] _unowned[1252593]))
    (2442418 'move' tmp[2332883] tmp[2442415])
    if tmp[2332883]
    {
      val ret[2332892]:domain(1,int(64),false)[1252597] "dead after last mention" "RVV" "temp"
      const-val tmp[2332894]:domain(1,int(64),false)[1252597] "dead after last mention" "temp"
      (2332897 call init=[1353062] tmp[2332894] i_x[2332874])
      (2332900 'move' ret[2332892] tmp[2332894])
      (2332903 'move' ret[2332881] ret[2332892])
      gotoReturn _end_chpl__unalias[2332920] _end_chpl__unalias[2332920]
    }
    {
      const-val ret[2332909]:domain(1,int(64),false)[1252597] "dead at end of block" "insert auto destroy" "no copy"
      (2332911 'move' ret[2332909] ret_tmp[1837625])
      (2332914 'move' ret[2332881] ret[2332909])
      gotoReturn _end_chpl__unalias[2332920] _end_chpl__unalias[2332920]
    }
    label _end_chpl__unalias[2332920]
    (542587 'move' LocaleSpace[113664] ret[2332881])
    (2085019 '_private_broadcast' LocaleSpace[113664])
    (515673 return _void[55])
  }
  const-wide-ref Locales[113656]:[domain(1,int(64),false)] locale[1287011] "dead at end of block" "const" "locale private" "reference to a const" "ref var"
  const-val LocaleSpace[113664]:domain(1,int(64),false)[1252597] "dead at end of block" "const" "insert auto destroy"
  ref call_tmp[648118]:__wide_BaseLocale[2381060] "dead at end of block" "maybe param" "temp"
  val call_tmp[648123]:__wide_RootLocale[2381053] "dead at end of block" "expr temp" "maybe param" "temp"
  val call_tmp[648128]:__wide_RootLocale[2381053] "dead at end of block" "expr temp" "maybe param" "temp"
  wide-ref call_tmp[648135]:[domain(1,int(64),false)] locale[1287011] "dead at end of block" "maybe param" "reference to a const" "temp"
  val coerce_tmp[1353018]:__wide_BaseLocale[2381060] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  val coerce_tmp[1353024]:__wide_BaseLocale[2381060] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  const-val call_tmp[648142]:domain(1,int(64),false)[1252597] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_LocalesArray[1852095]() : void[4] "resolved"
  {
    const-val local_LocaleSpace[2380376]:domain(1,int(64),false)[1252597] "temp"
    (2380377 'move' local_LocaleSpace[2380376] LocaleSpace[113664])
    label _endchpl__deinit_LocalesArray[1852101]
    (1852103 call chpl__autoDestroy[1556881] local_LocaleSpace[2380376])
    (1852098 return _void[55])
  }
}