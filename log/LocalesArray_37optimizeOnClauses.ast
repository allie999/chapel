AST dump for LocalesArray after pass optimizeOnClauses.
Module use list: ChapelStandard 

{
  function chpl__init_LocalesArray[416094]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val local__str_literal_129[2577243]:string[26] "temp"
    (2577244 'move' "argument to ! is nil" "argument to ! is nil")
    (113644 call chpl_init_rootLocale[92495])
    (648263 'move' call_tmp[648260](2564721 '.' rootLocale[91514] _instance[89978]))
    (1353211 'move' coerce_tmp[1353207](1353209 'deref' call_tmp[648260]))
    (1353218 'move' coerce_tmp[1353213] coerce_tmp[1353207])
    val _formal_type_tmp_[2291038]:RootLocale[89694] "temp"
    val ret[2291040]:__wide_RootLocale[2581348] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2291042]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2291044 'move' coerce_tmp[2291042](2291046 'cast' object[22] coerce_tmp[1353213]))
    const-val call_tmp[2291049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2631731]:__wide_object[2581313] "temp"
    (2631734 'move' tmp[2631731] nil[44])
    (2291051 'move' call_tmp[2291049](2291053 'ptr_eq' coerce_tmp[2291042] tmp[2631731]))
    if call_tmp[2291049]
    {
      val tmp[2585031]:RootLocale[89694] "temp"
      (2585034 'move' tmp[2585031](2291060 'cast' RootLocale[89694] nil[44]))
      (2291058 'move' ret[2291040] tmp[2585031])
      gotoReturn _end__cast[2291076] _end__cast[2291076]
    }
    val call_tmp[2291066]:__wide_RootLocale[2581348] "dead at end of block" "maybe param" "temp"
    (2291068 'move' call_tmp[2291066](2291070 'dynamic_cast' _formal_type_tmp_[2291038] coerce_tmp[1353213]))
    (2291073 'move' ret[2291040] call_tmp[2291066])
    label _end__cast[2291076]
    (648268 'move' call_tmp[648265] ret[2291040])
    val coerce_tmp[2291206]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2291208 'move' coerce_tmp[2291206](2291210 'cast' object[22] call_tmp[648265]))
    const-val call_tmp[2291213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2631755]:__wide_object[2581313] "temp"
    (2631758 'move' tmp[2631755] nil[44])
    (2291215 'move' call_tmp[2291213](2291217 'ptr_eq' coerce_tmp[2291206] tmp[2631755]))
    if call_tmp[2291213]
    {
      (2291223 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (648273 'move' call_tmp[648270] call_tmp[648265])
    (648280 'move' call_tmp[648277](113661 call getDefaultLocaleArray[89596] call_tmp[648270]))
    (542727 'move' Locales[113662] call_tmp[648277])
    const-val ret_tmp[1913925]:domain(1,int(64),false)[1252786] "temp"
    (113667 call _dom[1346916] Locales[113662] ret_tmp[1913925])
    (1913928 'move' call_tmp[648284] ret_tmp[1913925])
    ref i_x[2518503]:domain(1,int(64),false)[1252786] "temp"
    (2518507 'move' i_x[2518503](2518505 'set reference' ret_tmp[1913925]))
    val ret[2518510]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
    const-val tmp[2518512]:bool[10] "dead after last mention" "const" "temp"
    val tmp[2646934]:bool[10] "temp"
    (2518514 'move' tmp[2646934](2518516 '.v' ret_tmp[1913925] _unowned[1252782]))
    (2646937 'move' tmp[2518512] tmp[2646934])
    if tmp[2518512]
    {
      val ret[2518521]:domain(1,int(64),false)[1252786] "dead after last mention" "RVV" "temp"
      const-val tmp[2518523]:domain(1,int(64),false)[1252786] "dead after last mention" "temp"
      (2518526 call init=[1353251] tmp[2518523] i_x[2518503])
      (2518529 'move' ret[2518521] tmp[2518523])
      (2518532 'move' ret[2518510] ret[2518521])
      gotoReturn _end_chpl__unalias[2518549] _end_chpl__unalias[2518549]
    }
    {
      const-val ret[2518538]:domain(1,int(64),false)[1252786] "dead at end of block" "insert auto destroy" "no copy"
      (2518540 'move' ret[2518538] ret_tmp[1913925])
      (2518543 'move' ret[2518510] ret[2518538])
      gotoReturn _end_chpl__unalias[2518549] _end_chpl__unalias[2518549]
    }
    label _end_chpl__unalias[2518549]
    (542729 'move' LocaleSpace[113670] ret[2518510])
    (2197346 '_private_broadcast' LocaleSpace[113670])
    (515797 return _void[55])
  }
  const-wide-ref Locales[113662]:[domain(1,int(64),false)] locale[1287200] "dead at end of block" "const" "locale private" "reference to a const" "ref var"
  const-val LocaleSpace[113670]:domain(1,int(64),false)[1252786] "dead at end of block" "const" "insert auto destroy"
  ref call_tmp[648260]:__wide_BaseLocale[2581355] "dead at end of block" "maybe param" "temp"
  val call_tmp[648265]:__wide_RootLocale[2581348] "dead at end of block" "expr temp" "maybe param" "temp"
  val call_tmp[648270]:__wide_RootLocale[2581348] "dead at end of block" "expr temp" "maybe param" "temp"
  wide-ref call_tmp[648277]:[domain(1,int(64),false)] locale[1287200] "dead at end of block" "maybe param" "reference to a const" "temp"
  val coerce_tmp[1353207]:__wide_BaseLocale[2581355] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  val coerce_tmp[1353213]:__wide_BaseLocale[2581355] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  const-val call_tmp[648284]:domain(1,int(64),false)[1252786] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_LocalesArray[1930206]() : void[4] "resolved"
  {
    const-val local_LocaleSpace[2580374]:domain(1,int(64),false)[1252786] "temp"
    (2580375 'move' local_LocaleSpace[2580374] LocaleSpace[113670])
    label _endchpl__deinit_LocalesArray[1930212]
    (1930214 call chpl__autoDestroy[1697012] local_LocaleSpace[2580374])
    (1930209 return _void[55])
  }
}