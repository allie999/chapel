AST dump for ChapelSyncvar after pass normalize.
Module use list: ChapelStandard AlignedTSupport MemConsistency SyncVarRuntimeSupport 

{
  function chpl__init_ChapelSyncvar[416073]() : void[4] "insert line file info" "module init"
  {
    (541647 'init var' useNativeSyncVar[84492] 1)
    (84495 'end of statement')
    (513258 return _void[55])
  }
  function isSupported[84309](arg t[84307]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[512792] "RVV" "param" "temp"
    unknown tmp[422144] "maybe param" "temp"
    unknown tmp[422165] "maybe param" "temp"
    unknown tmp[422186] "maybe param" "temp"
    unknown tmp[422207] "maybe param" "temp"
    unknown tmp[422228] "maybe param" "temp"
    unknown tmp[422249] "maybe param" "temp"
    unknown tmp[422270] "maybe param" "temp"
    unknown tmp[422291] "maybe param" "temp"
    (422302 'move' tmp[422291](84314 call isNothingType t[84307]))
    unknown call_tmp[630036] "expr temp" "maybe param" "maybe type" "temp"
    (630039 'move' call_tmp[630036](422304 call _cond_invalid tmp[422291]))
    if call_tmp[630036]
    {
      (422307 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560664] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560665] "maybe param" "temp"
    unknown call_tmp[630041] "expr temp" "maybe param" "maybe type" "temp"
    (630044 'move' call_tmp[630041](422292 call isTrue tmp[422291]))
    (560670 'move' tmp[560665](560668 call _cond_test call_tmp[630041]))
    if tmp[560665]
    {
      (560675 'move' tmp[560664](560672 '_paramFoldLogical' tmp[560665] 1))
    }
    {
      unknown tmp[560677] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630046] "expr temp" "maybe param" "maybe type" "temp"
      (630049 'move' call_tmp[630046](84318 call isBoolType t[84307]))
      (560679 'move' tmp[560677](422296 call isTrue call_tmp[630046]))
      (560684 'move' tmp[560664](560681 '_paramFoldLogical' tmp[560665] tmp[560677]))
    }
    (422281 'move' tmp[422270] tmp[560664])
    unknown call_tmp[630051] "expr temp" "maybe param" "maybe type" "temp"
    (630054 'move' call_tmp[630051](422283 call _cond_invalid tmp[422270]))
    if call_tmp[630051]
    {
      (422286 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560691] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560692] "maybe param" "temp"
    unknown call_tmp[630056] "expr temp" "maybe param" "maybe type" "temp"
    (630059 'move' call_tmp[630056](422271 call isTrue tmp[422270]))
    (560697 'move' tmp[560692](560695 call _cond_test call_tmp[630056]))
    if tmp[560692]
    {
      (560702 'move' tmp[560691](560699 '_paramFoldLogical' tmp[560692] 1))
    }
    {
      unknown tmp[560704] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630061] "expr temp" "maybe param" "maybe type" "temp"
      (630064 'move' call_tmp[630061](84324 call isIntegralType t[84307]))
      (560706 'move' tmp[560704](422275 call isTrue call_tmp[630061]))
      (560711 'move' tmp[560691](560708 '_paramFoldLogical' tmp[560692] tmp[560704]))
    }
    (422260 'move' tmp[422249] tmp[560691])
    unknown call_tmp[630066] "expr temp" "maybe param" "maybe type" "temp"
    (630069 'move' call_tmp[630066](422262 call _cond_invalid tmp[422249]))
    if call_tmp[630066]
    {
      (422265 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560718] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560719] "maybe param" "temp"
    unknown call_tmp[630071] "expr temp" "maybe param" "maybe type" "temp"
    (630074 'move' call_tmp[630071](422250 call isTrue tmp[422249]))
    (560724 'move' tmp[560719](560722 call _cond_test call_tmp[630071]))
    if tmp[560719]
    {
      (560729 'move' tmp[560718](560726 '_paramFoldLogical' tmp[560719] 1))
    }
    {
      unknown tmp[560731] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630076] "expr temp" "maybe param" "maybe type" "temp"
      (630079 'move' call_tmp[630076](84330 call isRealType t[84307]))
      (560733 'move' tmp[560731](422254 call isTrue call_tmp[630076]))
      (560738 'move' tmp[560718](560735 '_paramFoldLogical' tmp[560719] tmp[560731]))
    }
    (422239 'move' tmp[422228] tmp[560718])
    unknown call_tmp[630081] "expr temp" "maybe param" "maybe type" "temp"
    (630084 'move' call_tmp[630081](422241 call _cond_invalid tmp[422228]))
    if call_tmp[630081]
    {
      (422244 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560745] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560746] "maybe param" "temp"
    unknown call_tmp[630086] "expr temp" "maybe param" "maybe type" "temp"
    (630089 'move' call_tmp[630086](422229 call isTrue tmp[422228]))
    (560751 'move' tmp[560746](560749 call _cond_test call_tmp[630086]))
    if tmp[560746]
    {
      (560756 'move' tmp[560745](560753 '_paramFoldLogical' tmp[560746] 1))
    }
    {
      unknown tmp[560758] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630091] "expr temp" "maybe param" "maybe type" "temp"
      (630094 'move' call_tmp[630091](84336 call isImagType t[84307]))
      (560760 'move' tmp[560758](422233 call isTrue call_tmp[630091]))
      (560765 'move' tmp[560745](560762 '_paramFoldLogical' tmp[560746] tmp[560758]))
    }
    (422218 'move' tmp[422207] tmp[560745])
    unknown call_tmp[630096] "expr temp" "maybe param" "maybe type" "temp"
    (630099 'move' call_tmp[630096](422220 call _cond_invalid tmp[422207]))
    if call_tmp[630096]
    {
      (422223 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560772] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560773] "maybe param" "temp"
    unknown call_tmp[630101] "expr temp" "maybe param" "maybe type" "temp"
    (630104 'move' call_tmp[630101](422208 call isTrue tmp[422207]))
    (560778 'move' tmp[560773](560776 call _cond_test call_tmp[630101]))
    if tmp[560773]
    {
      (560783 'move' tmp[560772](560780 '_paramFoldLogical' tmp[560773] 1))
    }
    {
      unknown tmp[560785] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630106] "expr temp" "maybe param" "maybe type" "temp"
      (630109 'move' call_tmp[630106](84342 call isEnumType t[84307]))
      (560787 'move' tmp[560785](422212 call isTrue call_tmp[630106]))
      (560792 'move' tmp[560772](560789 '_paramFoldLogical' tmp[560773] tmp[560785]))
    }
    (422197 'move' tmp[422186] tmp[560772])
    unknown call_tmp[630111] "expr temp" "maybe param" "maybe type" "temp"
    (630114 'move' call_tmp[630111](422199 call _cond_invalid tmp[422186]))
    if call_tmp[630111]
    {
      (422202 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560799] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560800] "maybe param" "temp"
    unknown call_tmp[630116] "expr temp" "maybe param" "maybe type" "temp"
    (630119 'move' call_tmp[630116](422187 call isTrue tmp[422186]))
    (560805 'move' tmp[560800](560803 call _cond_test call_tmp[630116]))
    if tmp[560800]
    {
      (560810 'move' tmp[560799](560807 '_paramFoldLogical' tmp[560800] 1))
    }
    {
      unknown tmp[560812] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630121] "expr temp" "maybe param" "maybe type" "temp"
      (630124 'move' call_tmp[630121](84348 call isClassType t[84307]))
      (560814 'move' tmp[560812](422191 call isTrue call_tmp[630121]))
      (560819 'move' tmp[560799](560816 '_paramFoldLogical' tmp[560800] tmp[560812]))
    }
    (422176 'move' tmp[422165] tmp[560799])
    unknown call_tmp[630126] "expr temp" "maybe param" "maybe type" "temp"
    (630129 'move' call_tmp[630126](422178 call _cond_invalid tmp[422165]))
    if call_tmp[630126]
    {
      (422181 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560826] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560827] "maybe param" "temp"
    unknown call_tmp[630131] "expr temp" "maybe param" "maybe type" "temp"
    (630134 'move' call_tmp[630131](422166 call isTrue tmp[422165]))
    (560832 'move' tmp[560827](560830 call _cond_test call_tmp[630131]))
    if tmp[560827]
    {
      (560837 'move' tmp[560826](560834 '_paramFoldLogical' tmp[560827] 1))
    }
    {
      unknown tmp[560839] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630136] "expr temp" "maybe param" "maybe type" "temp"
      (630139 'move' call_tmp[630136](84354 call isStringType t[84307]))
      (560841 'move' tmp[560839](422170 call isTrue call_tmp[630136]))
      (560846 'move' tmp[560826](560843 '_paramFoldLogical' tmp[560827] tmp[560839]))
    }
    (422155 'move' tmp[422144] tmp[560826])
    unknown call_tmp[630141] "expr temp" "maybe param" "maybe type" "temp"
    (630144 'move' call_tmp[630141](422157 call _cond_invalid tmp[422144]))
    if call_tmp[630141]
    {
      (422160 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560853] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560854] "maybe param" "temp"
    unknown call_tmp[630146] "expr temp" "maybe param" "maybe type" "temp"
    (630149 'move' call_tmp[630146](422145 call isTrue tmp[422144]))
    (560859 'move' tmp[560854](560857 call _cond_test call_tmp[630146]))
    if tmp[560854]
    {
      (560864 'move' tmp[560853](560861 '_paramFoldLogical' tmp[560854] 1))
    }
    {
      unknown tmp[560866] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630151] "expr temp" "maybe param" "maybe type" "temp"
      (630154 'move' call_tmp[630151](84359 call == t[84307] chpl_taskID_t[163]))
      (560868 'move' tmp[560866](422149 call isTrue call_tmp[630151]))
      (560873 'move' tmp[560853](560870 '_paramFoldLogical' tmp[560854] tmp[560866]))
    }
    (512797 'move' ret[512792](512796 'deref' tmp[560853]))
    (512794 return ret[512792])
  }
  function ensureFEType[84372](arg t[84370]:_any[178](?)) : _unknown[51] "private" "no return value for void"
  {
    unknown call_tmp[630156] "expr temp" "maybe param" "maybe type" "temp"
    (630159 'move' call_tmp[630156](84377 call isSupported t[84370]))
    unknown call_tmp[630161] "expr temp" "maybe param" "maybe type" "temp"
    (630164 'move' call_tmp[630161](84379 call == call_tmp[630156] 0))
    unknown call_tmp[630166] "expr temp" "maybe param" "maybe type" "temp"
    (630169 'move' call_tmp[630166](84423 call _cond_test call_tmp[630161]))
    if call_tmp[630166]
    {
      unknown call_tmp[630171] "expr temp" "maybe param" "maybe type" "temp"
      (630174 'move' call_tmp[630171](84402 call _cast string[26] t[84370]))
      (84421 call compilerError "sync/single types cannot contain type '" call_tmp[630171] "'")
    }
    unknown call_tmp[630176] "expr temp" "maybe param" "maybe type" "temp"
    (630179 'move' call_tmp[630176](84432 call isNonNilableClass t[84370]))
    unknown call_tmp[630181] "expr temp" "maybe param" "maybe type" "temp"
    (630184 'move' call_tmp[630181](84454 call _cond_test call_tmp[630176]))
    if call_tmp[630181]
    {
      (84452 call compilerError "sync/single types cannot contain non-nilable classes")
    }
    unknown call_tmp[630186] "expr temp" "maybe param" "maybe type" "temp"
    (630189 'move' call_tmp[630186](84462 call isGenericType t[84370]))
    unknown call_tmp[630191] "expr temp" "maybe param" "maybe type" "temp"
    (630194 'move' call_tmp[630191](84484 call _cond_test call_tmp[630186]))
    if call_tmp[630191]
    {
      (84482 call compilerError "sync/single types cannot contain generic types")
    }
    (512799 return _void[55])
  }
  unknown useNativeSyncVar[84492] "config" "no doc" "param"
  function getSyncClassType[84500](arg valType[84498]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[512803] "RVV" "temp" "type variable"
    unknown tmp[422312] "maybe param" "temp"
    (422323 'move' tmp[422312] useNativeSyncVar[84492])
    unknown call_tmp[630196] "expr temp" "maybe param" "maybe type" "temp"
    (630199 'move' call_tmp[630196](422325 call _cond_invalid tmp[422312]))
    if call_tmp[630196]
    {
      (422328 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[560880] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560881] "maybe param" "temp"
    unknown call_tmp[630201] "expr temp" "maybe param" "maybe type" "temp"
    (630204 'move' call_tmp[630201](422313 call isTrue tmp[422312]))
    (560886 'move' tmp[560881](560884 call _cond_test call_tmp[630201]))
    if tmp[560881]
    {
      unknown tmp[560888] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[630206] "expr temp" "maybe param" "maybe type" "temp"
      (630209 'move' call_tmp[630206](84506 call supportsNativeSyncVar valType[84498]))
      (560890 'move' tmp[560888](422316 call isTrue call_tmp[630206]))
      (560895 'move' tmp[560880](560892 '_paramFoldLogical' tmp[560881] tmp[560888]))
    }
    {
      (560900 'move' tmp[560880](560897 '_paramFoldLogical' tmp[560881] 0))
    }
    unknown call_tmp[630211] "expr temp" "maybe param" "maybe type" "temp"
    (630214 'move' call_tmp[630211](84525 call _cond_test tmp[560880]))
    if call_tmp[630211]
    {
      unknown call_tmp[630216] "expr temp" "maybe param" "maybe type" "temp"
      (630219 'move' call_tmp[630216](84512 call unmanaged _qthreads_synccls[415524](?) valType[84498]))
      (512808 'move' ret[512803](512807 'deref' call_tmp[630216]))
      gotoReturn _end_getSyncClassType[512801] _end_getSyncClassType[512801]
    }
    {
      unknown call_tmp[630221] "expr temp" "maybe param" "maybe type" "temp"
      (630224 'move' call_tmp[630221](84520 call unmanaged _synccls[415527](?) valType[84498]))
      (512813 'move' ret[512803](512812 'deref' call_tmp[630221]))
      gotoReturn _end_getSyncClassType[512801] _end_getSyncClassType[512801]
    }
    label _end_getSyncClassType[512801]
    (512805 return ret[512803])
  }
  function chpl__readXX[84536](arg x[84534]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown ret[512819] "RVV" "temp"
    (512824 'move' ret[512819](512823 'deref' x[84534]))
    (512821 return ret[512819])
  }
  function _syncvar[84947](?).init[84566](arg _mt[84951]:_MT[238], ref arg this[84949]:_syncvar[84947](?), arg valType[84564]:_any[178](?)) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    (84571 call ensureFEType valType[84564])
    (476947 'end of statement')
    unknown tmp[459846] "temp" "type variable"
    (459848 'move' tmp[459846] valType[84564])
    (459850 'init field' this[84949] c"valType" tmp[459846])
    (476948 'end of statement')
    unknown call_tmp[630226] "expr temp" "maybe param" "maybe type" "temp"
    (630229 'move' call_tmp[630226](84594 call getSyncClassType valType[84564]))
    unknown call_tmp[630231] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (630234 'move' call_tmp[630231](747993 'new' call_tmp[630226]))
    unknown call_tmp[630236] "expr temp" "maybe param" "maybe type" "temp"
    (630239 'move' call_tmp[630236](459865 '.v' this[84949] c"valType"))
    unknown call_tmp[630241] "maybe param" "maybe type" "temp"
    (630244 'move' call_tmp[630241](459857 call getSyncClassType call_tmp[630236]))
    unknown tmp[459854] "temp"
    (459859 'init var' tmp[459854] call_tmp[630231] call_tmp[630241])
    (459861 'init field' this[84949] c"wrapped" tmp[459854])
    (476949 'end of statement')
    unknown tmp[459870] "temp"
    (459873 'init var' tmp[459870] 1 bool[10])
    (459875 'init field' this[84949] c"isOwned" tmp[459870])
    (476950 'end of statement')
    (512826 return _void[55])
  }
  function _syncvar[84947](?).init[84608](arg _mt[84955]:_MT[238], ref arg this[84953]:_syncvar[84947](?), const arg other[84605]:_syncvar[84947](?)) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown tmp[459879] "temp" "type variable"
    (459881 'move' tmp[459879](84615 call valType _mt[243] other[84605]))
    (459883 'init field' this[84953] c"valType" tmp[459879])
    (476951 'end of statement')
    unknown call_tmp[630250] "maybe param" "maybe type" "temp"
    (630253 'move' call_tmp[630250](84627 call wrapped _mt[243] other[84605]))
    unknown call_tmp[630255] "expr temp" "maybe param" "maybe type" "temp"
    (630258 'move' call_tmp[630255](459898 '.v' this[84953] c"valType"))
    unknown call_tmp[630260] "maybe param" "maybe type" "temp"
    (630263 'move' call_tmp[630260](459890 call getSyncClassType call_tmp[630255]))
    unknown tmp[459887] "temp"
    (459892 'init var' tmp[459887] call_tmp[630250] call_tmp[630260])
    (459894 'init field' this[84953] c"wrapped" tmp[459887])
    (476952 'end of statement')
    unknown tmp[459901] "temp"
    (459904 'init var' tmp[459901] 0 bool[10])
    (459906 'init field' this[84953] c"isOwned" tmp[459901])
    (476953 'end of statement')
    (512828 return _void[55])
  }
  function _syncvar[84947](?).init=[84651](arg _mt[84959]:_MT[238], ref arg this[84957]:_syncvar[84947](?), const arg other[84648]:_syncvar[84947](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[630265] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (630268 'move' call_tmp[630265](84660 'typeof' this[84957]))
    unknown call_tmp[630272] "expr temp" "maybe param" "maybe type" "temp"
    (630275 'move' call_tmp[630272](84661 call valType _mt[243] call_tmp[630265]))
    unknown call_tmp[630279] "expr temp" "maybe param" "maybe type" "temp"
    (630282 'move' call_tmp[630279](84655 call valType _mt[243] other[84648]))
    unknown call_tmp[630284] "expr temp" "maybe param" "maybe type" "temp"
    (630287 'move' call_tmp[630284](354332 'is_coercible' call_tmp[630272] call_tmp[630279]))
    unknown call_tmp[630289] "expr temp" "maybe param" "maybe type" "temp"
    (630292 'move' call_tmp[630289](84666 call == call_tmp[630284] 0))
    unknown call_tmp[630294] "expr temp" "maybe param" "maybe type" "temp"
    (630297 'move' call_tmp[630294](84796 call _cond_test call_tmp[630289]))
    if call_tmp[630294]
    {
      unknown call_tmp[630299] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (630302 'move' call_tmp[630299](84670 'typeof' this[84957]))
      unknown call_tmp[630304] "expr temp" "maybe param" "maybe type" "temp"
      (630307 'move' call_tmp[630304](84672 call _cast string[26] call_tmp[630299]))
      unknown call_tmp[630309] "expr temp" "maybe param" "maybe type" "temp"
      (630312 'move' call_tmp[630309](84674 call + "'" call_tmp[630304]))
      unknown call_tmp[630314] "expr temp" "maybe param" "maybe type" "temp"
      (630317 'move' call_tmp[630314](84693 call + call_tmp[630309] "' from '"))
      unknown call_tmp[630319] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (630322 'move' call_tmp[630319](84696 'typeof' other[84648]))
      unknown call_tmp[630324] "expr temp" "maybe param" "maybe type" "temp"
      (630327 'move' call_tmp[630324](84698 call _cast string[26] call_tmp[630319]))
      unknown call_tmp[630329] "expr temp" "maybe param" "maybe type" "temp"
      (630332 'move' call_tmp[630329](84700 call + call_tmp[630314] call_tmp[630324]))
      unknown call_tmp[630334] "maybe param" "maybe type" "temp"
      (630337 'move' call_tmp[630334](84703 call + call_tmp[630329] "'"))
      unknown theseTypes[84705] "dead at end of block" "param"
      (541649 'init var' theseTypes[84705] call_tmp[630334])
      (84708 'end of statement')
      unknown call_tmp[630341] "expr temp" "maybe param" "maybe type" "temp"
      (630344 'move' call_tmp[630341](84728 call valType _mt[243] other[84648]))
      unknown call_tmp[630346] "expr temp" "maybe param" "maybe type" "temp"
      (630349 'move' call_tmp[630346](84732 call _cast string[26] call_tmp[630341]))
      unknown call_tmp[630351] "expr temp" "maybe param" "maybe type" "temp"
      (630354 'move' call_tmp[630351](84734 call + "because '" call_tmp[630346]))
      unknown call_tmp[630356] "expr temp" "maybe param" "maybe type" "temp"
      (630359 'move' call_tmp[630356](84753 call + call_tmp[630351] "' is not coercible to '"))
      unknown call_tmp[630361] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (630364 'move' call_tmp[630361](84756 'typeof' this[84957]))
      unknown call_tmp[630368] "expr temp" "maybe param" "maybe type" "temp"
      (630371 'move' call_tmp[630368](84757 call valType _mt[243] call_tmp[630361]))
      unknown call_tmp[630373] "expr temp" "maybe param" "maybe type" "temp"
      (630376 'move' call_tmp[630373](84761 call _cast string[26] call_tmp[630368]))
      unknown call_tmp[630378] "expr temp" "maybe param" "maybe type" "temp"
      (630381 'move' call_tmp[630378](84763 call + call_tmp[630356] call_tmp[630373]))
      unknown call_tmp[630383] "maybe param" "maybe type" "temp"
      (630386 'move' call_tmp[630383](84766 call + call_tmp[630378] "'"))
      unknown because[84768] "dead at end of block" "param"
      (541651 'init var' because[84768] call_tmp[630383])
      (84771 'end of statement')
      (84794 call compilerError "cannot initialize " theseTypes[84705] " " because[84768])
    }
    unknown call_tmp[630390] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (630393 'move' call_tmp[630390](84806 'typeof' this[84957]))
    unknown call_tmp[630397] "expr temp" "maybe param" "maybe type" "temp"
    (630400 'move' call_tmp[630397](84807 call valType _mt[243] call_tmp[630390]))
    (84811 call(84802 call (partial) init _mt[243] this[84957]) call_tmp[630397])
    (476955 'end of statement')
    unknown call_tmp[630406] "expr temp" "maybe param" "maybe type" "temp"
    (630409 'move' call_tmp[630406](84824 call(84820 call (partial) readFE _mt[243] other[84648])))
    (84826 call(84816 call (partial) writeEF _mt[243] this[84957]) call_tmp[630406])
    (512830 return _void[55])
  }
  function _syncvar[84947](?).init=[84839](arg _mt[84963]:_MT[238], ref arg this[84961]:_syncvar[84947](?), const arg other[84836] :
  (84833 call valType _mt[243] this[84961])) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[630415] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (630418 'move' call_tmp[630415](84846 'typeof' other[84836]))
    (84848 call(84842 call (partial) init _mt[243] this[84961]) call_tmp[630415])
    (476957 'end of statement')
    (84857 call(84852 call (partial) writeEF _mt[243] this[84961]) other[84836])
    (512832 return _void[55])
  }
  function _syncvar[84947](?).deinit[84863](arg _mt[84967]:_MT[238], arg this[84965]:_syncvar[84947](?)) : _unknown[51] "destructor" "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[630424] "expr temp" "maybe param" "maybe type" "temp"
    (630427 'move' call_tmp[630424](377021 call isOwned _mt[243] this[84965]))
    unknown call_tmp[630429] "expr temp" "maybe param" "maybe type" "temp"
    (630432 'move' call_tmp[630429](84867 call == call_tmp[630424] 1))
    unknown call_tmp[630434] "expr temp" "maybe param" "maybe type" "temp"
    (630437 'move' call_tmp[630434](84874 call _cond_test call_tmp[630429]))
    if call_tmp[630434]
    {
      unknown call_tmp[630441] "expr temp" "maybe param" "maybe type" "temp"
      (630444 'move' call_tmp[630441](377026 call wrapped _mt[243] this[84965]))
      (84871 call chpl__delete call_tmp[630441])
    }
    (512834 return _void[55])
  }
  function _syncvar[84947](?).readThis[84886](arg _mt[84971]:_MT[238], arg this[84969]:_syncvar[84947](?), arg x[84884]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (84909 call compilerError "sync variables cannot currently be read - use writeEF/writeFF instead")
    (512836 return _void[55])
  }
  function _syncvar[84947](?).writeThis[84918](arg _mt[84975]:_MT[238], arg this[84973]:_syncvar[84947](?), arg x[84916]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (84941 call compilerError "sync variables cannot currently be written - apply readFE/readFF() to those variables first")
    (512838 return _void[55])
  }
  sync type _syncvar[84947](?) unknown valType[84545] "type variable" unknown wrapped[84552](84551 call getSyncClassType valType[84545]) val isOwned[84558]:bool[10] 1 bool[10]
  function isSyncType[84984](arg t[84981]:_syncvar[84947](?)) param : _unknown[51] "no doc"
  {
    unknown ret[512842] "RVV" "param" "temp"
    (512847 'move' ret[512842](512846 'deref' 1))
    (512844 return ret[512842])
  }
  function isSyncType[84996](arg t[84994]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[512851] "RVV" "param" "temp"
    (512856 'move' ret[512851](512855 'deref' 0))
    (512853 return ret[512851])
  }
  function _syncvar[84947](?).readFE[85007](arg _mt[85012]:_MT[238], arg this[85009]:_syncvar[84947](?) :
  _syncvar[84947](?)) : _unknown[51] "method"
  {
    unknown ret[512860] "RVV" "temp"
    unknown call_tmp[630448] "expr temp" "maybe param" "maybe type" "temp"
    (630451 'move' call_tmp[630448](358281 call wrapped _mt[243] this[85009]))
    unknown call_tmp[630455] "expr temp" "maybe param" "maybe type" "temp"
    (630458 'move' call_tmp[630455](85019 call(85015 call (partial) readFE _mt[243] call_tmp[630448])))
    (512865 'move' ret[512860](512864 'deref' call_tmp[630455]))
    (512862 return ret[512860])
  }
  function _syncvar[84947](?).readFF[85028](arg _mt[85033]:_MT[238], arg this[85030]:_syncvar[84947](?) :
  _syncvar[84947](?)) : _unknown[51] "method"
  {
    unknown ret[512869] "RVV" "temp"
    unknown call_tmp[630462] "expr temp" "maybe param" "maybe type" "temp"
    (630465 'move' call_tmp[630462](358286 call wrapped _mt[243] this[85030]))
    unknown call_tmp[630469] "expr temp" "maybe param" "maybe type" "temp"
    (630472 'move' call_tmp[630469](85040 call(85036 call (partial) readFF _mt[243] call_tmp[630462])))
    (512874 'move' ret[512869](512873 'deref' call_tmp[630469]))
    (512871 return ret[512869])
  }
  function _syncvar[84947](?).readXX[85049](arg _mt[85054]:_MT[238], arg this[85051]:_syncvar[84947](?) :
  _syncvar[84947](?)) : _unknown[51] "method"
  {
    unknown ret[512878] "RVV" "temp"
    (85058 call chpl_task_yield)
    (476966 'end of statement')
    unknown call_tmp[630476] "expr temp" "maybe param" "maybe type" "temp"
    (630479 'move' call_tmp[630476](358291 call wrapped _mt[243] this[85051]))
    unknown call_tmp[630483] "expr temp" "maybe param" "maybe type" "temp"
    (630486 'move' call_tmp[630483](85068 call(85064 call (partial) readXX _mt[243] call_tmp[630476])))
    (512883 'move' ret[512878](512882 'deref' call_tmp[630483]))
    (512880 return ret[512878])
  }
  function _syncvar[84947](?).writeEF[85080](arg _mt[85085]:_MT[238], arg this[85082]:_syncvar[84947](?) :
  _syncvar[84947](?), arg x[85077] :
  (377032 call valType _mt[243] this[85082])) : _unknown[51] "method" "no return value for void"
  {
    unknown call_tmp[630492] "expr temp" "maybe param" "maybe type" "temp"
    (630495 'move' call_tmp[630492](358296 call wrapped _mt[243] this[85082]))
    (85093 call(85088 call (partial) writeEF _mt[243] call_tmp[630492]) x[85077])
    (512885 return _void[55])
  }
  function _syncvar[84947](?).writeFF[85105](arg _mt[85110]:_MT[238], arg this[85107]:_syncvar[84947](?) :
  _syncvar[84947](?), arg x[85102] :
  (377038 call valType _mt[243] this[85107])) : _unknown[51] "method" "no return value for void"
  {
    unknown call_tmp[630503] "expr temp" "maybe param" "maybe type" "temp"
    (630506 'move' call_tmp[630503](358301 call wrapped _mt[243] this[85107]))
    (85120 call(85115 call (partial) writeFF _mt[243] call_tmp[630503]) x[85102])
    (512887 return _void[55])
  }
  function _syncvar[84947](?).writeXF[85132](arg _mt[85137]:_MT[238], arg this[85134]:_syncvar[84947](?) :
  _syncvar[84947](?), arg x[85129] :
  (377044 call valType _mt[243] this[85134])) : _unknown[51] "method" "no return value for void"
  {
    unknown call_tmp[630514] "expr temp" "maybe param" "maybe type" "temp"
    (630517 'move' call_tmp[630514](358306 call wrapped _mt[243] this[85134]))
    (85147 call(85142 call (partial) writeXF _mt[243] call_tmp[630514]) x[85129])
    (512889 return _void[55])
  }
  function _syncvar[84947](?).reset[85155](arg _mt[85160]:_MT[238], arg this[85157]:_syncvar[84947](?) :
  _syncvar[84947](?)) : _unknown[51] "method" "no return value for void"
  {
    unknown call_tmp[630523] "expr temp" "maybe param" "maybe type" "temp"
    (630526 'move' call_tmp[630523](358311 call wrapped _mt[243] this[85157]))
    (85169 call(85165 call (partial) reset _mt[243] call_tmp[630523]))
    (512891 return _void[55])
  }
  function _syncvar[84947](?).isFull[85177](arg _mt[85182]:_MT[238], arg this[85179]:_syncvar[84947](?) :
  _syncvar[84947](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[512895] "RVV" "temp"
    unknown call_tmp[630532] "expr temp" "maybe param" "maybe type" "temp"
    (630535 'move' call_tmp[630532](358316 call wrapped _mt[243] this[85179]))
    unknown call_tmp[630539] "expr temp" "maybe param" "maybe type" "temp"
    (630542 'move' call_tmp[630539](85187 call isFull _mt[243] call_tmp[630532]))
    (512900 'move' ret[512895](512899 'deref' call_tmp[630539]))
    (512897 return ret[512895])
  }
  function =[85205](ref arg lhs[85202]:_syncvar[84947](?), arg rhs[85208] :
  (459916 'query' lhs[85202] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630546] "expr temp" "maybe param" "maybe type" "temp"
    (630549 'move' call_tmp[630546](85212 call wrapped _mt[243] lhs[85202]))
    (85220 call(85215 call (partial) writeEF _mt[243] call_tmp[630546]) rhs[85208])
    (512902 return _void[55])
  }
  function +=[85235](ref arg lhs[85232]:_syncvar[84947](?), arg rhs[85238] :
  (459926 'query' lhs[85232] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630555] "expr temp" "maybe param" "maybe type" "temp"
    (630558 'move' call_tmp[630555](85242 call wrapped _mt[243] lhs[85232]))
    unknown call_tmp[630564] "expr temp" "maybe param" "maybe type" "temp"
    (630567 'move' call_tmp[630564](85249 call wrapped _mt[243] lhs[85232]))
    unknown call_tmp[630571] "expr temp" "maybe param" "maybe type" "temp"
    (630574 'move' call_tmp[630571](85256 call(85252 call (partial) readFE _mt[243] call_tmp[630564])))
    unknown call_tmp[630576] "expr temp" "maybe param" "maybe type" "temp"
    (630579 'move' call_tmp[630576](85258 call + call_tmp[630571] rhs[85238]))
    (85261 call(85245 call (partial) writeEF _mt[243] call_tmp[630555]) call_tmp[630576])
    (512904 return _void[55])
  }
  function -=[85276](ref arg lhs[85273]:_syncvar[84947](?), arg rhs[85279] :
  (459936 'query' lhs[85273] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630583] "expr temp" "maybe param" "maybe type" "temp"
    (630586 'move' call_tmp[630583](85283 call wrapped _mt[243] lhs[85273]))
    unknown call_tmp[630592] "expr temp" "maybe param" "maybe type" "temp"
    (630595 'move' call_tmp[630592](85290 call wrapped _mt[243] lhs[85273]))
    unknown call_tmp[630599] "expr temp" "maybe param" "maybe type" "temp"
    (630602 'move' call_tmp[630599](85297 call(85293 call (partial) readFE _mt[243] call_tmp[630592])))
    unknown call_tmp[630604] "expr temp" "maybe param" "maybe type" "temp"
    (630607 'move' call_tmp[630604](85299 call - call_tmp[630599] rhs[85279]))
    (85302 call(85286 call (partial) writeEF _mt[243] call_tmp[630583]) call_tmp[630604])
    (512906 return _void[55])
  }
  function *=[85317](ref arg lhs[85314]:_syncvar[84947](?), arg rhs[85320] :
  (459946 'query' lhs[85314] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630611] "expr temp" "maybe param" "maybe type" "temp"
    (630614 'move' call_tmp[630611](85324 call wrapped _mt[243] lhs[85314]))
    unknown call_tmp[630620] "expr temp" "maybe param" "maybe type" "temp"
    (630623 'move' call_tmp[630620](85331 call wrapped _mt[243] lhs[85314]))
    unknown call_tmp[630627] "expr temp" "maybe param" "maybe type" "temp"
    (630630 'move' call_tmp[630627](85338 call(85334 call (partial) readFE _mt[243] call_tmp[630620])))
    unknown call_tmp[630632] "expr temp" "maybe param" "maybe type" "temp"
    (630635 'move' call_tmp[630632](85340 call * call_tmp[630627] rhs[85320]))
    (85343 call(85327 call (partial) writeEF _mt[243] call_tmp[630611]) call_tmp[630632])
    (512908 return _void[55])
  }
  function /=[85358](ref arg lhs[85355]:_syncvar[84947](?), arg rhs[85361] :
  (459956 'query' lhs[85355] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630639] "expr temp" "maybe param" "maybe type" "temp"
    (630642 'move' call_tmp[630639](85365 call wrapped _mt[243] lhs[85355]))
    unknown call_tmp[630648] "expr temp" "maybe param" "maybe type" "temp"
    (630651 'move' call_tmp[630648](85372 call wrapped _mt[243] lhs[85355]))
    unknown call_tmp[630655] "expr temp" "maybe param" "maybe type" "temp"
    (630658 'move' call_tmp[630655](85379 call(85375 call (partial) readFE _mt[243] call_tmp[630648])))
    unknown call_tmp[630660] "expr temp" "maybe param" "maybe type" "temp"
    (630663 'move' call_tmp[630660](85381 call / call_tmp[630655] rhs[85361]))
    (85384 call(85368 call (partial) writeEF _mt[243] call_tmp[630639]) call_tmp[630660])
    (512910 return _void[55])
  }
  function %=[85399](ref arg lhs[85396]:_syncvar[84947](?), arg rhs[85402] :
  (459966 'query' lhs[85396] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630667] "expr temp" "maybe param" "maybe type" "temp"
    (630670 'move' call_tmp[630667](85406 call wrapped _mt[243] lhs[85396]))
    unknown call_tmp[630676] "expr temp" "maybe param" "maybe type" "temp"
    (630679 'move' call_tmp[630676](85413 call wrapped _mt[243] lhs[85396]))
    unknown call_tmp[630683] "expr temp" "maybe param" "maybe type" "temp"
    (630686 'move' call_tmp[630683](85420 call(85416 call (partial) readFE _mt[243] call_tmp[630676])))
    unknown call_tmp[630688] "expr temp" "maybe param" "maybe type" "temp"
    (630691 'move' call_tmp[630688](85422 call % call_tmp[630683] rhs[85402]))
    (85425 call(85409 call (partial) writeEF _mt[243] call_tmp[630667]) call_tmp[630688])
    (512912 return _void[55])
  }
  function **=[85440](ref arg lhs[85437]:_syncvar[84947](?), arg rhs[85443] :
  (459976 'query' lhs[85437] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630695] "expr temp" "maybe param" "maybe type" "temp"
    (630698 'move' call_tmp[630695](85447 call wrapped _mt[243] lhs[85437]))
    unknown call_tmp[630704] "expr temp" "maybe param" "maybe type" "temp"
    (630707 'move' call_tmp[630704](85454 call wrapped _mt[243] lhs[85437]))
    unknown call_tmp[630711] "expr temp" "maybe param" "maybe type" "temp"
    (630714 'move' call_tmp[630711](85461 call(85457 call (partial) readFE _mt[243] call_tmp[630704])))
    unknown call_tmp[630716] "expr temp" "maybe param" "maybe type" "temp"
    (630719 'move' call_tmp[630716](85463 call ** call_tmp[630711] rhs[85443]))
    (85466 call(85450 call (partial) writeEF _mt[243] call_tmp[630695]) call_tmp[630716])
    (512914 return _void[55])
  }
  function &=[85481](ref arg lhs[85478]:_syncvar[84947](?), arg rhs[85484] :
  (459986 'query' lhs[85478] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630723] "expr temp" "maybe param" "maybe type" "temp"
    (630726 'move' call_tmp[630723](85488 call wrapped _mt[243] lhs[85478]))
    unknown call_tmp[630732] "expr temp" "maybe param" "maybe type" "temp"
    (630735 'move' call_tmp[630732](85495 call wrapped _mt[243] lhs[85478]))
    unknown call_tmp[630739] "expr temp" "maybe param" "maybe type" "temp"
    (630742 'move' call_tmp[630739](85502 call(85498 call (partial) readFE _mt[243] call_tmp[630732])))
    unknown call_tmp[630744] "expr temp" "maybe param" "maybe type" "temp"
    (630747 'move' call_tmp[630744](85504 call & call_tmp[630739] rhs[85484]))
    (85507 call(85491 call (partial) writeEF _mt[243] call_tmp[630723]) call_tmp[630744])
    (512916 return _void[55])
  }
  function |=[85522](ref arg lhs[85519]:_syncvar[84947](?), arg rhs[85525] :
  (459996 'query' lhs[85519] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630751] "expr temp" "maybe param" "maybe type" "temp"
    (630754 'move' call_tmp[630751](85529 call wrapped _mt[243] lhs[85519]))
    unknown call_tmp[630760] "expr temp" "maybe param" "maybe type" "temp"
    (630763 'move' call_tmp[630760](85536 call wrapped _mt[243] lhs[85519]))
    unknown call_tmp[630767] "expr temp" "maybe param" "maybe type" "temp"
    (630770 'move' call_tmp[630767](85543 call(85539 call (partial) readFE _mt[243] call_tmp[630760])))
    unknown call_tmp[630772] "expr temp" "maybe param" "maybe type" "temp"
    (630775 'move' call_tmp[630772](85545 call | call_tmp[630767] rhs[85525]))
    (85548 call(85532 call (partial) writeEF _mt[243] call_tmp[630751]) call_tmp[630772])
    (512918 return _void[55])
  }
  function ^=[85563](ref arg lhs[85560]:_syncvar[84947](?), arg rhs[85566] :
  (460006 'query' lhs[85560] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630779] "expr temp" "maybe param" "maybe type" "temp"
    (630782 'move' call_tmp[630779](85570 call wrapped _mt[243] lhs[85560]))
    unknown call_tmp[630788] "expr temp" "maybe param" "maybe type" "temp"
    (630791 'move' call_tmp[630788](85577 call wrapped _mt[243] lhs[85560]))
    unknown call_tmp[630795] "expr temp" "maybe param" "maybe type" "temp"
    (630798 'move' call_tmp[630795](85584 call(85580 call (partial) readFE _mt[243] call_tmp[630788])))
    unknown call_tmp[630800] "expr temp" "maybe param" "maybe type" "temp"
    (630803 'move' call_tmp[630800](85586 call ^ call_tmp[630795] rhs[85566]))
    (85589 call(85573 call (partial) writeEF _mt[243] call_tmp[630779]) call_tmp[630800])
    (512920 return _void[55])
  }
  function >>=[85604](ref arg lhs[85601]:_syncvar[84947](?), arg rhs[85607] :
  (460016 'query' lhs[85601] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630807] "expr temp" "maybe param" "maybe type" "temp"
    (630810 'move' call_tmp[630807](85611 call wrapped _mt[243] lhs[85601]))
    unknown call_tmp[630816] "expr temp" "maybe param" "maybe type" "temp"
    (630819 'move' call_tmp[630816](85618 call wrapped _mt[243] lhs[85601]))
    unknown call_tmp[630823] "expr temp" "maybe param" "maybe type" "temp"
    (630826 'move' call_tmp[630823](85625 call(85621 call (partial) readFE _mt[243] call_tmp[630816])))
    unknown call_tmp[630828] "expr temp" "maybe param" "maybe type" "temp"
    (630831 'move' call_tmp[630828](85627 call >> call_tmp[630823] rhs[85607]))
    (85630 call(85614 call (partial) writeEF _mt[243] call_tmp[630807]) call_tmp[630828])
    (512922 return _void[55])
  }
  function <<=[85645](ref arg lhs[85642]:_syncvar[84947](?), arg rhs[85648] :
  (460026 'query' lhs[85642] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[630835] "expr temp" "maybe param" "maybe type" "temp"
    (630838 'move' call_tmp[630835](85652 call wrapped _mt[243] lhs[85642]))
    unknown call_tmp[630844] "expr temp" "maybe param" "maybe type" "temp"
    (630847 'move' call_tmp[630844](85659 call wrapped _mt[243] lhs[85642]))
    unknown call_tmp[630851] "expr temp" "maybe param" "maybe type" "temp"
    (630854 'move' call_tmp[630851](85666 call(85662 call (partial) readFE _mt[243] call_tmp[630844])))
    unknown call_tmp[630856] "expr temp" "maybe param" "maybe type" "temp"
    (630859 'move' call_tmp[630856](85668 call << call_tmp[630851] rhs[85648]))
    (85671 call(85655 call (partial) writeEF _mt[243] call_tmp[630835]) call_tmp[630856])
    (512924 return _void[55])
  }
  function chpl__initCopy[85686](ref arg sv[85683]:_syncvar[84947](?)) : _unknown[51] "init copy fn"
  {
    unknown ret[512928] "RVV" "temp"
    unknown call_tmp[630863] "expr temp" "maybe param" "maybe type" "temp"
    (630866 'move' call_tmp[630863](85693 call(85689 call (partial) readFE _mt[243] sv[85683])))
    (512933 'move' ret[512928](512932 'deref' call_tmp[630863]))
    (512930 return ret[512928])
  }
  function chpl__autoCopy[85705](const  ref arg rhs[85702]:_syncvar[84947](?)) : _unknown[51] "auto copy fn" "no doc"
  {
    unknown ret[512937] "RVV" "temp"
    unknown call_tmp[630868] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (630871 'move' call_tmp[630868](747994 'new' _syncvar[84947](?) rhs[85702]))
    (512942 'move' ret[512937](512941 'deref' call_tmp[630868]))
    (512939 return ret[512937])
  }
  function chpl__maybeAutoDestroyed[85727](arg x[85724]:_syncvar[84947](?)) param : _unknown[51] "inline"
  {
    unknown ret[512946] "RVV" "param" "temp"
    (512951 'move' ret[512946](512950 'deref' 1))
    (512948 return ret[512946])
  }
  function chpl__autoDestroy[85744](arg x[85741]:_syncvar[84947](?)) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[630875] "expr temp" "maybe param" "maybe type" "temp"
    (630878 'move' call_tmp[630875](85747 call isOwned _mt[243] x[85741]))
    unknown call_tmp[630880] "expr temp" "maybe param" "maybe type" "temp"
    (630883 'move' call_tmp[630880](85751 call == call_tmp[630875] 1))
    unknown call_tmp[630885] "expr temp" "maybe param" "maybe type" "temp"
    (630888 'move' call_tmp[630885](85761 call _cond_test call_tmp[630880]))
    if call_tmp[630885]
    {
      unknown call_tmp[630892] "expr temp" "maybe param" "maybe type" "temp"
      (630895 'move' call_tmp[630892](85754 call wrapped _mt[243] x[85741]))
      (85758 call chpl__delete call_tmp[630892])
    }
    (512953 return _void[55])
  }
  function chpl__readXX[85778](const  ref arg x[85775]:_syncvar[84947](?)) : _unknown[51] "no doc"
  {
    unknown ret[512957] "RVV" "temp"
    unknown call_tmp[630899] "expr temp" "maybe param" "maybe type" "temp"
    (630902 'move' call_tmp[630899](85785 call(85781 call (partial) readXX _mt[243] x[85775])))
    (512962 'move' ret[512957](512961 'deref' call_tmp[630899]))
    (512959 return ret[512957])
  }
  function <=>[85797](arg lhs[85794]:_syncvar[84947](?), ref arg rhs[85799]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    const tmp[85802] "dead at end of block" "const" "insert auto destroy"
    (541653 'init var' tmp[85802] lhs[85794])
    (85805 'end of statement')
    (85809 call = lhs[85794] rhs[85799])
    (476990 'end of statement')
    (85814 call = rhs[85799] tmp[85802])
    (476991 'end of statement' tmp[85802])
    (512964 return _void[55])
  }
  function <=>[85823](ref arg lhs[85821]:_any[178](?), arg rhs[85826]:_syncvar[84947](?)) : _unknown[51] "no return value for void"
  {
    const tmp[85830] "dead at end of block" "const" "insert auto destroy"
    (541655 'init var' tmp[85830] lhs[85821])
    (85833 'end of statement')
    (85837 call = lhs[85821] rhs[85826])
    (476993 'end of statement')
    (85842 call = rhs[85826] tmp[85830])
    (476994 'end of statement' tmp[85830])
    (512966 return _void[55])
  }
  function <=>[85853](arg lhs[85850]:_syncvar[84947](?), arg rhs[85856]:_syncvar[84947](?)) : _unknown[51] "no return value for void"
  {
    const tmp[85860] "dead at end of block" "const" "insert auto destroy"
    (541657 'init var' tmp[85860] lhs[85850])
    (85863 'end of statement')
    (85867 call = lhs[85850] rhs[85856])
    (476996 'end of statement')
    (85872 call = rhs[85856] tmp[85860])
    (476997 'end of statement' tmp[85860])
    (512968 return _void[55])
  }
  function _synccls[86374](?).init[85895](arg _mt[86378]:_MT[238], arg this[86376]:_synccls[86374](?), arg valType[85893]:_any[178](?)) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460109] "temporary of super field" "temp"
    (460117 'move' super_tmp[460109](460110 '.v' this[86376] c"super"))
    (460113 call init _mt[243] super_tmp[460109])
    (476999 'end of statement')
    unknown tmp[460062] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492057] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[630904] "expr temp" "maybe param" "maybe type" "temp"
      (630907 'move' call_tmp[630904](460064 '.v' this[86376] c"super"))
      (492061 'move' call_type_tmp[492057](460067 'typeof' call_tmp[630904]))
    }
    (460068 'move' tmp[460062] call_type_tmp[492057])
    unknown call_tmp[630909] "maybe param" "maybe type" "temp"
    (630912 'move' call_tmp[630909](460073 'cast' tmp[460062] this[86376]))
    unknown chpl__thisAsParent[460070] "dead at end of block" "insert auto destroy" "temp"
    (541659 'init var' chpl__thisAsParent[460070] call_tmp[630909] tmp[460062])
    (460076 'setcid' chpl__thisAsParent[460070])
    (477000 'end of statement')
    unknown tmp[460078] "temp" "type variable"
    (460080 'move' tmp[460078] valType[85893])
    (460082 'init field' this[86376] c"valType" tmp[460078])
    (477001 'end of statement')
    unknown tmp[460086] "temp"
    unknown call_tmp[630914] "expr temp" "maybe param" "maybe type" "temp"
    (630917 'move' call_tmp[630914](460095 '.v' this[86376] c"valType"))
    (460089 'default init var' tmp[460086] call_tmp[630914])
    (460091 '.=' this[86376] c"value" tmp[460086])
    (477002 'end of statement')
    val tmp[460098]:chpl_sync_aux_t[87955] "temp"
    (460101 'default init var' tmp[460098] chpl_sync_aux_t[87955])
    (460103 '.=' this[86376] c"syncAux" tmp[460098])
    (477003 'end of statement')
    (460108 'setcid' this[86376])
    (477004 'end of statement')
    unknown call_tmp[630921] "expr temp" "maybe param" "maybe type" "temp"
    (630924 'move' call_tmp[630921](377117 call syncAux _mt[243] this[86376]))
    (85916 call chpl_sync_initAux call_tmp[630921])
    (512970 return _void[55])
  }
  function _synccls[86374](?).deinit[85922](arg _mt[86382]:_MT[238], arg this[86380]:_synccls[86374](?)) : _unknown[51] "destructor" "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[630928] "expr temp" "maybe param" "maybe type" "temp"
    (630931 'move' call_tmp[630928](377122 call syncAux _mt[243] this[86380]))
    (85927 call chpl_sync_destroyAux call_tmp[630928])
    (512972 return _void[55])
  }
  function _synccls[86374](?).readFE[85934](arg _mt[86386]:_MT[238], arg this[86384]:_synccls[86374](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[512976] "RVV" "temp"
    unknown ret[85937] "dead at end of block" "insert auto destroy"
    unknown call_tmp[630935] "expr temp" "maybe param" "maybe type" "temp"
    (630938 'move' call_tmp[630935](377127 call valType _mt[243] this[86384]))
    (541661 'default init var' ret[85937] call_tmp[630935])
    (85940 'end of statement')
    const tmp[85980] "const" "temp"
    unknown call_tmp[630940] "expr temp" "maybe param" "maybe type" "temp"
    (630943 'move' call_tmp[630940](85977 '_wide_get_locale' this[86384]))
    (85982 'move' tmp[85980](85978 'deref' call_tmp[630940]))
    {
      {
        unknown localRet[85944] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[541663] "maybe param" "maybe type" "temp"
        (541672 'move' type_tmp[541663](541669 call valType _mt[243] this[86384]))
        (541665 'init var split decl' localRet[85944] type_tmp[541663])
        (85947 'end of statement')
        (85951 call chpl_rmem_consist_release)
        (477007 'end of statement')
        unknown call_tmp[630949] "expr temp" "maybe param" "maybe type" "temp"
        (630952 'move' call_tmp[630949](377138 call syncAux _mt[243] this[86384]))
        (85956 call chpl_sync_waitFullAndLock call_tmp[630949])
        (477008 'end of statement')
        unknown call_tmp[630956] "maybe param" "maybe type" "temp"
        (630959 'move' call_tmp[630956](377144 call value _mt[243] this[86384]))
        (541674 'init var split init' localRet[85944] call_tmp[630956] type_tmp[541663])
        (477009 'end of statement' localRet[85944])
        unknown call_tmp[630963] "expr temp" "maybe param" "maybe type" "temp"
        (630966 'move' call_tmp[630963](377149 call syncAux _mt[243] this[86384]))
        (85966 call chpl_sync_markAndSignalEmpty call_tmp[630963])
        (477011 'end of statement')
        (85970 call chpl_rmem_consist_acquire)
        (477012 'end of statement')
        (85974 call = ret[85937] localRet[85944])
        (477013 'end of statement' ret[85937] localRet[85944])
      }
      (85985 'on block' 0 tmp[85980])
    }
    (512981 'move' ret[512976](512980 'deref' ret[85937]))
    gotoReturn _end_readFE[512974] _end_readFE[512974]
    (477016 'end of statement' ret[85937])
    label _end_readFE[512974]
    (512978 return ret[512976])
  }
  function _synccls[86374](?).readFF[85995](arg _mt[86390]:_MT[238], arg this[86388]:_synccls[86374](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[512987] "RVV" "temp"
    unknown ret[85998] "dead at end of block" "insert auto destroy"
    unknown call_tmp[630970] "expr temp" "maybe param" "maybe type" "temp"
    (630973 'move' call_tmp[630970](377157 call valType _mt[243] this[86388]))
    (541677 'default init var' ret[85998] call_tmp[630970])
    (86001 'end of statement')
    const tmp[86041] "const" "temp"
    unknown call_tmp[630975] "expr temp" "maybe param" "maybe type" "temp"
    (630978 'move' call_tmp[630975](86038 '_wide_get_locale' this[86388]))
    (86043 'move' tmp[86041](86039 'deref' call_tmp[630975]))
    {
      {
        unknown localRet[86005] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[541679] "maybe param" "maybe type" "temp"
        (541688 'move' type_tmp[541679](541685 call valType _mt[243] this[86388]))
        (541681 'init var split decl' localRet[86005] type_tmp[541679])
        (86008 'end of statement')
        (86012 call chpl_rmem_consist_release)
        (477018 'end of statement')
        unknown call_tmp[630984] "expr temp" "maybe param" "maybe type" "temp"
        (630987 'move' call_tmp[630984](377168 call syncAux _mt[243] this[86388]))
        (86017 call chpl_sync_waitFullAndLock call_tmp[630984])
        (477019 'end of statement')
        unknown call_tmp[630991] "maybe param" "maybe type" "temp"
        (630994 'move' call_tmp[630991](377174 call value _mt[243] this[86388]))
        (541690 'init var split init' localRet[86005] call_tmp[630991] type_tmp[541679])
        (477020 'end of statement' localRet[86005])
        unknown call_tmp[630998] "expr temp" "maybe param" "maybe type" "temp"
        (631001 'move' call_tmp[630998](377179 call syncAux _mt[243] this[86388]))
        (86027 call chpl_sync_markAndSignalFull call_tmp[630998])
        (477022 'end of statement')
        (86031 call chpl_rmem_consist_acquire)
        (477023 'end of statement')
        (86035 call = ret[85998] localRet[86005])
        (477024 'end of statement' ret[85998] localRet[86005])
      }
      (86046 'on block' 0 tmp[86041])
    }
    (512992 'move' ret[512987](512991 'deref' ret[85998]))
    gotoReturn _end_readFF[512985] _end_readFF[512985]
    (477027 'end of statement' ret[85998])
    label _end_readFF[512985]
    (512989 return ret[512987])
  }
  function _synccls[86374](?).readXX[86056](arg _mt[86394]:_MT[238], arg this[86392]:_synccls[86374](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[512998] "RVV" "temp"
    unknown ret[86059] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631005] "expr temp" "maybe param" "maybe type" "temp"
    (631008 'move' call_tmp[631005](377187 call valType _mt[243] this[86392]))
    (541693 'default init var' ret[86059] call_tmp[631005])
    (86062 'end of statement')
    const tmp[86102] "const" "temp"
    unknown call_tmp[631010] "expr temp" "maybe param" "maybe type" "temp"
    (631013 'move' call_tmp[631010](86099 '_wide_get_locale' this[86392]))
    (86104 'move' tmp[86102](86100 'deref' call_tmp[631010]))
    {
      {
        unknown localRet[86066] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[541695] "maybe param" "maybe type" "temp"
        (541704 'move' type_tmp[541695](541701 call valType _mt[243] this[86392]))
        (541697 'init var split decl' localRet[86066] type_tmp[541695])
        (86069 'end of statement')
        (86073 call chpl_rmem_consist_release)
        (477029 'end of statement')
        unknown call_tmp[631019] "expr temp" "maybe param" "maybe type" "temp"
        (631022 'move' call_tmp[631019](377198 call syncAux _mt[243] this[86392]))
        (86078 call chpl_sync_lock call_tmp[631019])
        (477030 'end of statement')
        unknown call_tmp[631026] "maybe param" "maybe type" "temp"
        (631029 'move' call_tmp[631026](377204 call value _mt[243] this[86392]))
        (541706 'init var split init' localRet[86066] call_tmp[631026] type_tmp[541695])
        (477031 'end of statement' localRet[86066])
        unknown call_tmp[631033] "expr temp" "maybe param" "maybe type" "temp"
        (631036 'move' call_tmp[631033](377209 call syncAux _mt[243] this[86392]))
        (86088 call chpl_sync_unlock call_tmp[631033])
        (477033 'end of statement')
        (86092 call chpl_rmem_consist_acquire)
        (477034 'end of statement')
        (86096 call = ret[86059] localRet[86066])
        (477035 'end of statement' ret[86059] localRet[86066])
      }
      (86107 'on block' 0 tmp[86102])
    }
    (513003 'move' ret[512998](513002 'deref' ret[86059]))
    gotoReturn _end_readXX[512996] _end_readXX[512996]
    (477038 'end of statement' ret[86059])
    label _end_readXX[512996]
    (513000 return ret[512998])
  }
  function _synccls[86374](?).writeEF[86121](arg _mt[86398]:_MT[238], arg this[86396]:_synccls[86374](?), arg val[86118] :
  (377217 call valType _mt[243] this[86396])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86157] "const" "temp"
    unknown call_tmp[631040] "expr temp" "maybe param" "maybe type" "temp"
    (631043 'move' call_tmp[631040](86154 '_wide_get_locale' this[86396]))
    (86159 'move' tmp[86157](86155 'deref' call_tmp[631040]))
    {
      {
        (86132 call chpl_rmem_consist_release)
        (477040 'end of statement')
        unknown call_tmp[631047] "expr temp" "maybe param" "maybe type" "temp"
        (631050 'move' call_tmp[631047](377225 call syncAux _mt[243] this[86396]))
        (86138 call chpl_sync_waitEmptyAndLock call_tmp[631047])
        (477041 'end of statement')
        unknown call_tmp[631054] "expr temp" "maybe param" "maybe type" "temp"
        (631057 'move' call_tmp[631054](377230 call value _mt[243] this[86396]))
        (86142 call = call_tmp[631054] val[86118])
        (477042 'end of statement')
        unknown call_tmp[631061] "expr temp" "maybe param" "maybe type" "temp"
        (631064 'move' call_tmp[631061](377236 call syncAux _mt[243] this[86396]))
        (86148 call chpl_sync_markAndSignalFull call_tmp[631061])
        (477043 'end of statement')
        (86152 call chpl_rmem_consist_acquire)
      }
      (86162 'on block' 0 tmp[86157])
    }
    (513007 return _void[55])
  }
  {
    (86127 call <(86124 'lifetime_of' this[86396])(86126 'lifetime_of' val[86118]))
  }
  function _synccls[86374](?).writeFF[86175](arg _mt[86402]:_MT[238], arg this[86400]:_synccls[86374](?), arg val[86172] :
  (377241 call valType _mt[243] this[86400])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86211] "const" "temp"
    unknown call_tmp[631068] "expr temp" "maybe param" "maybe type" "temp"
    (631071 'move' call_tmp[631068](86208 '_wide_get_locale' this[86400]))
    (86213 'move' tmp[86211](86209 'deref' call_tmp[631068]))
    {
      {
        (86186 call chpl_rmem_consist_release)
        (477045 'end of statement')
        unknown call_tmp[631075] "expr temp" "maybe param" "maybe type" "temp"
        (631078 'move' call_tmp[631075](377249 call syncAux _mt[243] this[86400]))
        (86192 call chpl_sync_waitFullAndLock call_tmp[631075])
        (477046 'end of statement')
        unknown call_tmp[631082] "expr temp" "maybe param" "maybe type" "temp"
        (631085 'move' call_tmp[631082](377254 call value _mt[243] this[86400]))
        (86196 call = call_tmp[631082] val[86172])
        (477047 'end of statement')
        unknown call_tmp[631089] "expr temp" "maybe param" "maybe type" "temp"
        (631092 'move' call_tmp[631089](377260 call syncAux _mt[243] this[86400]))
        (86202 call chpl_sync_markAndSignalFull call_tmp[631089])
        (477048 'end of statement')
        (86206 call chpl_rmem_consist_acquire)
      }
      (86216 'on block' 0 tmp[86211])
    }
    (513009 return _void[55])
  }
  {
    (86181 call <(86178 'lifetime_of' this[86400])(86180 'lifetime_of' val[86172]))
  }
  function _synccls[86374](?).writeXF[86229](arg _mt[86406]:_MT[238], arg this[86404]:_synccls[86374](?), arg val[86226] :
  (377265 call valType _mt[243] this[86404])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86265] "const" "temp"
    unknown call_tmp[631096] "expr temp" "maybe param" "maybe type" "temp"
    (631099 'move' call_tmp[631096](86262 '_wide_get_locale' this[86404]))
    (86267 'move' tmp[86265](86263 'deref' call_tmp[631096]))
    {
      {
        (86240 call chpl_rmem_consist_release)
        (477050 'end of statement')
        unknown call_tmp[631103] "expr temp" "maybe param" "maybe type" "temp"
        (631106 'move' call_tmp[631103](377273 call syncAux _mt[243] this[86404]))
        (86246 call chpl_sync_lock call_tmp[631103])
        (477051 'end of statement')
        unknown call_tmp[631110] "expr temp" "maybe param" "maybe type" "temp"
        (631113 'move' call_tmp[631110](377278 call value _mt[243] this[86404]))
        (86250 call = call_tmp[631110] val[86226])
        (477052 'end of statement')
        unknown call_tmp[631117] "expr temp" "maybe param" "maybe type" "temp"
        (631120 'move' call_tmp[631117](377284 call syncAux _mt[243] this[86404]))
        (86256 call chpl_sync_markAndSignalFull call_tmp[631117])
        (477053 'end of statement')
        (86260 call chpl_rmem_consist_acquire)
      }
      (86270 'on block' 0 tmp[86265])
    }
    (513011 return _void[55])
  }
  {
    (86235 call <(86232 'lifetime_of' this[86404])(86234 'lifetime_of' val[86226]))
  }
  function _synccls[86374](?).reset[86279](arg _mt[86410]:_MT[238], arg this[86408]:_synccls[86374](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86314] "const" "temp"
    unknown call_tmp[631122] "expr temp" "maybe param" "maybe type" "temp"
    (631125 'move' call_tmp[631122](86311 '_wide_get_locale' this[86408]))
    (86316 'move' tmp[86314](86312 'deref' call_tmp[631122]))
    {
      {
        const defaultValue[86283] "dead at end of block" "const" "insert auto destroy"
        unknown call_tmp[631129] "expr temp" "maybe param" "maybe type" "temp"
        (631132 'move' call_tmp[631129](377290 call valType _mt[243] this[86408]))
        (541709 'default init var' defaultValue[86283] call_tmp[631129])
        (86286 'end of statement')
        (86290 call chpl_rmem_consist_release)
        (477055 'end of statement')
        unknown call_tmp[631136] "expr temp" "maybe param" "maybe type" "temp"
        (631139 'move' call_tmp[631136](377295 call syncAux _mt[243] this[86408]))
        (86295 call chpl_sync_lock call_tmp[631136])
        (477056 'end of statement')
        unknown call_tmp[631143] "expr temp" "maybe param" "maybe type" "temp"
        (631146 'move' call_tmp[631143](377300 call value _mt[243] this[86408]))
        (86299 call = call_tmp[631143] defaultValue[86283])
        (477057 'end of statement' defaultValue[86283])
        unknown call_tmp[631150] "expr temp" "maybe param" "maybe type" "temp"
        (631153 'move' call_tmp[631150](377306 call syncAux _mt[243] this[86408]))
        (86305 call chpl_sync_markAndSignalEmpty call_tmp[631150])
        (477059 'end of statement')
        (86309 call chpl_rmem_consist_acquire)
      }
      (86319 'on block' 0 tmp[86314])
    }
    (513013 return _void[55])
  }
  function _synccls[86374](?).isFull[86327](arg _mt[86414]:_MT[238], arg this[86412]:_synccls[86374](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513017] "RVV" "temp"
    unknown b[86330] "dead at end of block" "insert auto destroy"
    (541711 'default init var' b[86330] bool[10])
    (86333 'end of statement')
    const tmp[86360] "const" "temp"
    unknown call_tmp[631155] "expr temp" "maybe param" "maybe type" "temp"
    (631158 'move' call_tmp[631155](86357 '_wide_get_locale' this[86412]))
    (86362 'move' tmp[86360](86358 'deref' call_tmp[631155]))
    {
      {
        (86338 call chpl_rmem_consist_release)
        (477061 'end of statement')
        unknown call_tmp[631162] "expr temp" "maybe param" "maybe type" "temp"
        (631165 'move' call_tmp[631162](377313 call value _mt[243] this[86412]))
        unknown call_tmp[631167] "expr temp" "maybe param" "maybe type" "temp"
        (631170 'move' call_tmp[631167](86346 call c_ptrTo call_tmp[631162]))
        unknown call_tmp[631174] "expr temp" "maybe param" "maybe type" "temp"
        (631177 'move' call_tmp[631174](377318 call syncAux _mt[243] this[86412]))
        unknown call_tmp[631179] "expr temp" "maybe param" "maybe type" "temp"
        (631182 'move' call_tmp[631179](86349 call chpl_sync_isFull call_tmp[631167] call_tmp[631174]))
        (86350 call = b[86330] call_tmp[631179])
        (477062 'end of statement' b[86330])
        (86355 call chpl_rmem_consist_acquire)
      }
      (86365 'on block' 0 tmp[86360])
    }
    (513022 'move' ret[513017](513021 'deref' b[86330]))
    gotoReturn _end_isFull[513015] _end_isFull[513015]
    (477065 'end of statement' b[86330])
    label _end_isFull[513015]
    (513019 return ret[513017])
  }
  type _synccls[86374](?) val super[355743]:object[22] "super class" unknown valType[85878] "type variable" unknown value[85882] valType[85878] val syncAux[85887]:chpl_sync_aux_t[87955] chpl_sync_aux_t[87955]
  type unmanaged _synccls[415527](?)
  type _synccls[376999](?)
  function _qthreads_synccls[86865](?).init[86430](arg _mt[86869]:_MT[238], arg this[86867]:_qthreads_synccls[86865](?), arg valType[86428]:_any[178](?)) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460159] "temporary of super field" "temp"
    (460167 'move' super_tmp[460159](460160 '.v' this[86867] c"super"))
    (460163 call init _mt[243] super_tmp[460159])
    (477067 'end of statement')
    unknown tmp[460124] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492063] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[631184] "expr temp" "maybe param" "maybe type" "temp"
      (631187 'move' call_tmp[631184](460126 '.v' this[86867] c"super"))
      (492067 'move' call_type_tmp[492063](460129 'typeof' call_tmp[631184]))
    }
    (460130 'move' tmp[460124] call_type_tmp[492063])
    unknown call_tmp[631189] "maybe param" "maybe type" "temp"
    (631192 'move' call_tmp[631189](460135 'cast' tmp[460124] this[86867]))
    unknown chpl__thisAsParent[460132] "dead at end of block" "insert auto destroy" "temp"
    (541713 'init var' chpl__thisAsParent[460132] call_tmp[631189] tmp[460124])
    (460138 'setcid' chpl__thisAsParent[460132])
    (477068 'end of statement')
    unknown tmp[460140] "temp" "type variable"
    (460142 'move' tmp[460140] valType[86428])
    (460144 'init field' this[86867] c"valType" tmp[460140])
    (477069 'end of statement')
    val tmp[460148]:aligned_t[88362] "temp"
    (460151 'default init var' tmp[460148] aligned_t[88362])
    (460153 '.=' this[86867] c"alignedValue" tmp[460148])
    (477070 'end of statement')
    (460158 'setcid' this[86867])
    (477071 'end of statement')
    unknown call_tmp[631196] "expr temp" "maybe param" "maybe type" "temp"
    (631199 'move' call_tmp[631196](377328 call alignedValue _mt[243] this[86867]))
    unknown call_tmp[631201] "expr temp" "maybe param" "maybe type" "temp"
    (631204 'move' call_tmp[631201](86454 call defaultOfAlignedT valType[86428]))
    (86455 call qthread_purge_to call_tmp[631196] call_tmp[631201])
    (513026 return _void[55])
  }
  function _qthreads_synccls[86865](?).deinit[86461](arg _mt[86873]:_MT[238], arg this[86871]:_qthreads_synccls[86865](?)) : _unknown[51] "destructor" "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[631208] "expr temp" "maybe param" "maybe type" "temp"
    (631211 'move' call_tmp[631208](377334 call alignedValue _mt[243] this[86871]))
    (86466 call qthread_fill call_tmp[631208])
    (513028 return _void[55])
  }
  function _qthreads_synccls[86865](?).readFE[86473](arg _mt[86877]:_MT[238], arg this[86875]:_qthreads_synccls[86865](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[513032] "RVV" "temp"
    unknown ret[86476] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631215] "expr temp" "maybe param" "maybe type" "temp"
    (631218 'move' call_tmp[631215](377339 call valType _mt[243] this[86875]))
    (541715 'default init var' ret[86476] call_tmp[631215])
    (86479 'end of statement')
    const tmp[86513] "const" "temp"
    unknown call_tmp[631220] "expr temp" "maybe param" "maybe type" "temp"
    (631223 'move' call_tmp[631220](86510 '_wide_get_locale' this[86875]))
    (86515 'move' tmp[86513](86511 'deref' call_tmp[631220]))
    {
      {
        unknown alignedLocalRet[86483] "dead at end of block" "insert auto destroy"
        (541717 'default init var' alignedLocalRet[86483] aligned_t[88362])
        (86486 'end of statement')
        (86490 call chpl_rmem_consist_release)
        (477074 'end of statement')
        unknown call_tmp[631227] "expr temp" "maybe param" "maybe type" "temp"
        (631230 'move' call_tmp[631227](377347 call alignedValue _mt[243] this[86875]))
        (86496 call qthread_readFE alignedLocalRet[86483] call_tmp[631227])
        (477075 'end of statement' alignedLocalRet[86483])
        (86500 call chpl_rmem_consist_acquire)
        (477077 'end of statement')
        unknown call_tmp[631234] "expr temp" "maybe param" "maybe type" "temp"
        (631237 'move' call_tmp[631234](377354 call valType _mt[243] this[86875]))
        unknown call_tmp[631239] "expr temp" "maybe param" "maybe type" "temp"
        (631242 'move' call_tmp[631239](86505 call _cast call_tmp[631234] alignedLocalRet[86483]))
        (86507 call = ret[86476] call_tmp[631239])
        (477078 'end of statement' ret[86476] alignedLocalRet[86483])
      }
      (86518 'on block' 0 tmp[86513])
    }
    (513037 'move' ret[513032](513036 'deref' ret[86476]))
    gotoReturn _end_readFE[513030] _end_readFE[513030]
    (477081 'end of statement' ret[86476])
    label _end_readFE[513030]
    (513034 return ret[513032])
  }
  function _qthreads_synccls[86865](?).readFF[86528](arg _mt[86881]:_MT[238], arg this[86879]:_qthreads_synccls[86865](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[513043] "RVV" "temp"
    unknown ret[86531] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631246] "expr temp" "maybe param" "maybe type" "temp"
    (631249 'move' call_tmp[631246](377360 call valType _mt[243] this[86879]))
    (541719 'default init var' ret[86531] call_tmp[631246])
    (86534 'end of statement')
    const tmp[86568] "const" "temp"
    unknown call_tmp[631251] "expr temp" "maybe param" "maybe type" "temp"
    (631254 'move' call_tmp[631251](86565 '_wide_get_locale' this[86879]))
    (86570 'move' tmp[86568](86566 'deref' call_tmp[631251]))
    {
      {
        unknown alignedLocalRet[86538] "dead at end of block" "insert auto destroy"
        (541721 'default init var' alignedLocalRet[86538] aligned_t[88362])
        (86541 'end of statement')
        (86545 call chpl_rmem_consist_release)
        (477083 'end of statement')
        unknown call_tmp[631258] "expr temp" "maybe param" "maybe type" "temp"
        (631261 'move' call_tmp[631258](377368 call alignedValue _mt[243] this[86879]))
        (86551 call qthread_readFF alignedLocalRet[86538] call_tmp[631258])
        (477084 'end of statement' alignedLocalRet[86538])
        (86555 call chpl_rmem_consist_acquire)
        (477086 'end of statement')
        unknown call_tmp[631265] "expr temp" "maybe param" "maybe type" "temp"
        (631268 'move' call_tmp[631265](377375 call valType _mt[243] this[86879]))
        unknown call_tmp[631270] "expr temp" "maybe param" "maybe type" "temp"
        (631273 'move' call_tmp[631270](86560 call _cast call_tmp[631265] alignedLocalRet[86538]))
        (86562 call = ret[86531] call_tmp[631270])
        (477087 'end of statement' ret[86531] alignedLocalRet[86538])
      }
      (86573 'on block' 0 tmp[86568])
    }
    (513048 'move' ret[513043](513047 'deref' ret[86531]))
    gotoReturn _end_readFF[513041] _end_readFF[513041]
    (477090 'end of statement' ret[86531])
    label _end_readFF[513041]
    (513045 return ret[513043])
  }
  function _qthreads_synccls[86865](?).readXX[86583](arg _mt[86885]:_MT[238], arg this[86883]:_qthreads_synccls[86865](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[513054] "RVV" "temp"
    unknown ret[86586] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631277] "expr temp" "maybe param" "maybe type" "temp"
    (631280 'move' call_tmp[631277](377381 call valType _mt[243] this[86883]))
    (541723 'default init var' ret[86586] call_tmp[631277])
    (86589 'end of statement')
    const tmp[86623] "const" "temp"
    unknown call_tmp[631282] "expr temp" "maybe param" "maybe type" "temp"
    (631285 'move' call_tmp[631282](86620 '_wide_get_locale' this[86883]))
    (86625 'move' tmp[86623](86621 'deref' call_tmp[631282]))
    {
      {
        unknown alignedLocalRet[86593] "dead at end of block" "insert auto destroy"
        (541725 'default init var' alignedLocalRet[86593] aligned_t[88362])
        (86596 'end of statement')
        (86600 call chpl_rmem_consist_release)
        (477092 'end of statement')
        unknown call_tmp[631289] "expr temp" "maybe param" "maybe type" "temp"
        (631292 'move' call_tmp[631289](377389 call alignedValue _mt[243] this[86883]))
        (86606 call qthread_readXX alignedLocalRet[86593] call_tmp[631289])
        (477093 'end of statement' alignedLocalRet[86593])
        (86610 call chpl_rmem_consist_acquire)
        (477095 'end of statement')
        unknown call_tmp[631296] "expr temp" "maybe param" "maybe type" "temp"
        (631299 'move' call_tmp[631296](377396 call valType _mt[243] this[86883]))
        unknown call_tmp[631301] "expr temp" "maybe param" "maybe type" "temp"
        (631304 'move' call_tmp[631301](86615 call _cast call_tmp[631296] alignedLocalRet[86593]))
        (86617 call = ret[86586] call_tmp[631301])
        (477096 'end of statement' ret[86586] alignedLocalRet[86593])
      }
      (86628 'on block' 0 tmp[86623])
    }
    (513059 'move' ret[513054](513058 'deref' ret[86586]))
    gotoReturn _end_readXX[513052] _end_readXX[513052]
    (477099 'end of statement' ret[86586])
    label _end_readXX[513052]
    (513056 return ret[513054])
  }
  function _qthreads_synccls[86865](?).writeEF[86642](arg _mt[86889]:_MT[238], arg this[86887]:_qthreads_synccls[86865](?), arg val[86639] :
  (377402 call valType _mt[243] this[86887])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86672] "const" "temp"
    unknown call_tmp[631308] "expr temp" "maybe param" "maybe type" "temp"
    (631311 'move' call_tmp[631308](86669 '_wide_get_locale' this[86887]))
    (86674 'move' tmp[86672](86670 'deref' call_tmp[631308]))
    {
      {
        (86653 call chpl_rmem_consist_release)
        (477101 'end of statement')
        unknown call_tmp[631315] "expr temp" "maybe param" "maybe type" "temp"
        (631318 'move' call_tmp[631315](377410 call alignedValue _mt[243] this[86887]))
        unknown call_tmp[631320] "expr temp" "maybe param" "maybe type" "temp"
        (631323 'move' call_tmp[631320](86661 call _cast aligned_t[88362] val[86639]))
        (86663 call qthread_writeEF call_tmp[631315] call_tmp[631320])
        (477102 'end of statement')
        (86667 call chpl_rmem_consist_acquire)
      }
      (86677 'on block' 0 tmp[86672])
    }
    (513063 return _void[55])
  }
  {
    (86648 call <(86645 'lifetime_of' this[86887])(86647 'lifetime_of' val[86639]))
  }
  function _qthreads_synccls[86865](?).writeFF[86690](arg _mt[86893]:_MT[238], arg this[86891]:_qthreads_synccls[86865](?), arg val[86687] :
  (377417 call valType _mt[243] this[86891])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86720] "const" "temp"
    unknown call_tmp[631327] "expr temp" "maybe param" "maybe type" "temp"
    (631330 'move' call_tmp[631327](86717 '_wide_get_locale' this[86891]))
    (86722 'move' tmp[86720](86718 'deref' call_tmp[631327]))
    {
      {
        (86701 call chpl_rmem_consist_release)
        (477104 'end of statement')
        unknown call_tmp[631334] "expr temp" "maybe param" "maybe type" "temp"
        (631337 'move' call_tmp[631334](377425 call alignedValue _mt[243] this[86891]))
        unknown call_tmp[631339] "expr temp" "maybe param" "maybe type" "temp"
        (631342 'move' call_tmp[631339](86709 call _cast aligned_t[88362] val[86687]))
        (86711 call qthread_writeFF call_tmp[631334] call_tmp[631339])
        (477105 'end of statement')
        (86715 call chpl_rmem_consist_acquire)
      }
      (86725 'on block' 0 tmp[86720])
    }
    (513065 return _void[55])
  }
  {
    (86696 call <(86693 'lifetime_of' this[86891])(86695 'lifetime_of' val[86687]))
  }
  function _qthreads_synccls[86865](?).writeXF[86738](arg _mt[86897]:_MT[238], arg this[86895]:_qthreads_synccls[86865](?), arg val[86735] :
  (377432 call valType _mt[243] this[86895])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86768] "const" "temp"
    unknown call_tmp[631346] "expr temp" "maybe param" "maybe type" "temp"
    (631349 'move' call_tmp[631346](86765 '_wide_get_locale' this[86895]))
    (86770 'move' tmp[86768](86766 'deref' call_tmp[631346]))
    {
      {
        (86749 call chpl_rmem_consist_release)
        (477107 'end of statement')
        unknown call_tmp[631353] "expr temp" "maybe param" "maybe type" "temp"
        (631356 'move' call_tmp[631353](377440 call alignedValue _mt[243] this[86895]))
        unknown call_tmp[631358] "expr temp" "maybe param" "maybe type" "temp"
        (631361 'move' call_tmp[631358](86757 call _cast aligned_t[88362] val[86735]))
        (86759 call qthread_writeF call_tmp[631353] call_tmp[631358])
        (477108 'end of statement')
        (86763 call chpl_rmem_consist_acquire)
      }
      (86773 'on block' 0 tmp[86768])
    }
    (513067 return _void[55])
  }
  {
    (86744 call <(86741 'lifetime_of' this[86895])(86743 'lifetime_of' val[86735]))
  }
  function _qthreads_synccls[86865](?).reset[86782](arg _mt[86901]:_MT[238], arg this[86899]:_qthreads_synccls[86865](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[86806] "const" "temp"
    unknown call_tmp[631363] "expr temp" "maybe param" "maybe type" "temp"
    (631366 'move' call_tmp[631363](86803 '_wide_get_locale' this[86899]))
    (86808 'move' tmp[86806](86804 'deref' call_tmp[631363]))
    {
      {
        (86787 call chpl_rmem_consist_release)
        (477110 'end of statement')
        unknown call_tmp[631370] "expr temp" "maybe param" "maybe type" "temp"
        (631373 'move' call_tmp[631370](377448 call alignedValue _mt[243] this[86899]))
        unknown call_tmp[631377] "expr temp" "maybe param" "maybe type" "temp"
        (631380 'move' call_tmp[631377](377453 call valType _mt[243] this[86899]))
        unknown call_tmp[631382] "expr temp" "maybe param" "maybe type" "temp"
        (631385 'move' call_tmp[631382](86796 call defaultOfAlignedT call_tmp[631377]))
        (86797 call qthread_purge_to call_tmp[631370] call_tmp[631382])
        (477111 'end of statement')
        (86801 call chpl_rmem_consist_acquire)
      }
      (86811 'on block' 0 tmp[86806])
    }
    (513069 return _void[55])
  }
  function _qthreads_synccls[86865](?).isFull[86819](arg _mt[86905]:_MT[238], arg this[86903]:_qthreads_synccls[86865](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513073] "RVV" "temp"
    unknown b[86822] "dead at end of block" "insert auto destroy"
    (541727 'default init var' b[86822] bool[10])
    (86825 'end of statement')
    const tmp[86851] "const" "temp"
    unknown call_tmp[631387] "expr temp" "maybe param" "maybe type" "temp"
    (631390 'move' call_tmp[631387](86848 '_wide_get_locale' this[86903]))
    (86853 'move' tmp[86851](86849 'deref' call_tmp[631387]))
    {
      {
        (86830 call chpl_rmem_consist_release)
        (477113 'end of statement')
        unknown call_tmp[631394] "expr temp" "maybe param" "maybe type" "temp"
        (631397 'move' call_tmp[631394](377460 call alignedValue _mt[243] this[86903]))
        unknown call_tmp[631399] "expr temp" "maybe param" "maybe type" "temp"
        (631402 'move' call_tmp[631399](86837 call qthread_feb_status call_tmp[631394]))
        unknown call_tmp[631404] "expr temp" "maybe param" "maybe type" "temp"
        (631407 'move' call_tmp[631404](86839 call _cast bool[10] call_tmp[631399]))
        (86841 call = b[86822] call_tmp[631404])
        (477114 'end of statement' b[86822])
        (86846 call chpl_rmem_consist_acquire)
      }
      (86856 'on block' 0 tmp[86851])
    }
    (513078 'move' ret[513073](513077 'deref' b[86822]))
    gotoReturn _end_isFull[513071] _end_isFull[513071]
    (477117 'end of statement' b[86822])
    label _end_isFull[513071]
    (513075 return ret[513073])
  }
  type _qthreads_synccls[86865](?) val super[355745]:object[22] "super class" unknown valType[86418] "type variable" val alignedValue[86422]:aligned_t[88362] aligned_t[88362]
  type unmanaged _qthreads_synccls[415524](?)
  type _qthreads_synccls[376994](?)
  function isSyncValue[86914](arg x[86911]:_syncvar[84947](?)) param : _unknown[51] "no doc"
  {
    unknown ret[513084] "RVV" "param" "temp"
    (513089 'move' ret[513084](513088 'deref' 1))
    (513086 return ret[513084])
  }
  function isSyncValue[86926](arg x[86924]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[513093] "RVV" "param" "temp"
    (513098 'move' ret[513093](513097 'deref' 0))
    (513095 return ret[513093])
  }
  function _singlevar[87256](?).init[86957](arg _mt[87260]:_MT[238], ref arg this[87258]:_singlevar[87256](?), arg valType[86955]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    (86962 call ensureFEType valType[86955])
    (477121 'end of statement')
    unknown tmp[460170] "temp" "type variable"
    (460172 'move' tmp[460170] valType[86955])
    (460174 'init field' this[87258] c"valType" tmp[460170])
    (477122 'end of statement')
    unknown call_tmp[631409] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (631412 'move' call_tmp[631409](747995 'new' _singlecls[377466](?) valType[86955](_chpl_manager = unmanaged[220](?))))
    unknown call_tmp[631414] "expr temp" "maybe param" "maybe type" "temp"
    (631417 'move' call_tmp[631414](460189 '.v' this[87258] c"valType"))
    unknown call_tmp[631419] "maybe param" "maybe type" "temp"
    (631422 'move' call_tmp[631419](460181 call unmanaged _singlecls[415530](?) call_tmp[631414]))
    unknown tmp[460178] "temp"
    (460183 'init var' tmp[460178] call_tmp[631409] call_tmp[631419])
    (460185 'init field' this[87258] c"wrapped" tmp[460178])
    (477123 'end of statement')
    unknown tmp[460194] "temp"
    (460197 'init var' tmp[460194] 1 bool[10])
    (460199 'init field' this[87258] c"isOwned" tmp[460194])
    (477124 'end of statement')
    (513100 return _void[55])
  }
  function _singlevar[87256](?).init[86992](arg _mt[87264]:_MT[238], ref arg this[87262]:_singlevar[87256](?), const arg other[86989]:_singlevar[87256](?)) : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown tmp[460203] "temp" "type variable"
    (460205 'move' tmp[460203](86999 call valType _mt[243] other[86989]))
    (460207 'init field' this[87262] c"valType" tmp[460203])
    (477125 'end of statement')
    unknown call_tmp[631428] "maybe param" "maybe type" "temp"
    (631431 'move' call_tmp[631428](87008 call wrapped _mt[243] other[86989]))
    unknown call_tmp[631433] "expr temp" "maybe param" "maybe type" "temp"
    (631436 'move' call_tmp[631433](460222 '.v' this[87262] c"valType"))
    unknown call_tmp[631438] "maybe param" "maybe type" "temp"
    (631441 'move' call_tmp[631438](460214 call unmanaged _singlecls[415530](?) call_tmp[631433]))
    unknown tmp[460211] "temp"
    (460216 'init var' tmp[460211] call_tmp[631428] call_tmp[631438])
    (460218 'init field' this[87262] c"wrapped" tmp[460211])
    (477126 'end of statement')
    unknown tmp[460225] "temp"
    (460228 'init var' tmp[460225] 0 bool[10])
    (460230 'init field' this[87262] c"isOwned" tmp[460225])
    (477127 'end of statement')
    (513102 return _void[55])
  }
  function _singlevar[87256](?).init=[87027](arg _mt[87268]:_MT[238], ref arg this[87266]:_singlevar[87256](?), const arg other[87024]:_singlevar[87256](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[631443] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (631446 'move' call_tmp[631443](87036 'typeof' this[87266]))
    unknown call_tmp[631450] "expr temp" "maybe param" "maybe type" "temp"
    (631453 'move' call_tmp[631450](87037 call valType _mt[243] call_tmp[631443]))
    unknown call_tmp[631457] "expr temp" "maybe param" "maybe type" "temp"
    (631460 'move' call_tmp[631457](87031 call valType _mt[243] other[87024]))
    unknown call_tmp[631462] "expr temp" "maybe param" "maybe type" "temp"
    (631465 'move' call_tmp[631462](354333 'is_coercible' call_tmp[631450] call_tmp[631457]))
    unknown call_tmp[631467] "expr temp" "maybe param" "maybe type" "temp"
    (631470 'move' call_tmp[631467](87042 call == call_tmp[631462] 0))
    unknown call_tmp[631472] "expr temp" "maybe param" "maybe type" "temp"
    (631475 'move' call_tmp[631472](87108 call _cond_test call_tmp[631467]))
    if call_tmp[631472]
    {
      unknown call_tmp[631477] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (631480 'move' call_tmp[631477](87046 'typeof' this[87266]))
      unknown call_tmp[631482] "expr temp" "maybe param" "maybe type" "temp"
      (631485 'move' call_tmp[631482](87048 call _cast string[26] call_tmp[631477]))
      unknown call_tmp[631487] "expr temp" "maybe param" "maybe type" "temp"
      (631490 'move' call_tmp[631487](87050 call + "'" call_tmp[631482]))
      unknown call_tmp[631492] "expr temp" "maybe param" "maybe type" "temp"
      (631495 'move' call_tmp[631492](87053 call + call_tmp[631487] "' from '"))
      unknown call_tmp[631497] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (631500 'move' call_tmp[631497](87056 'typeof' other[87024]))
      unknown call_tmp[631502] "expr temp" "maybe param" "maybe type" "temp"
      (631505 'move' call_tmp[631502](87058 call _cast string[26] call_tmp[631497]))
      unknown call_tmp[631507] "expr temp" "maybe param" "maybe type" "temp"
      (631510 'move' call_tmp[631507](87060 call + call_tmp[631492] call_tmp[631502]))
      unknown call_tmp[631512] "maybe param" "maybe type" "temp"
      (631515 'move' call_tmp[631512](87063 call + call_tmp[631507] "'"))
      unknown theseTypes[87065] "dead at end of block" "param"
      (541729 'init var' theseTypes[87065] call_tmp[631512])
      (87068 'end of statement')
      unknown call_tmp[631519] "expr temp" "maybe param" "maybe type" "temp"
      (631522 'move' call_tmp[631519](87072 call valType _mt[243] other[87024]))
      unknown call_tmp[631524] "expr temp" "maybe param" "maybe type" "temp"
      (631527 'move' call_tmp[631524](87076 call _cast string[26] call_tmp[631519]))
      unknown call_tmp[631529] "expr temp" "maybe param" "maybe type" "temp"
      (631532 'move' call_tmp[631529](87078 call + "because '" call_tmp[631524]))
      unknown call_tmp[631534] "expr temp" "maybe param" "maybe type" "temp"
      (631537 'move' call_tmp[631534](87081 call + call_tmp[631529] "' is not coercible to '"))
      unknown call_tmp[631539] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (631542 'move' call_tmp[631539](87084 'typeof' this[87266]))
      unknown call_tmp[631546] "expr temp" "maybe param" "maybe type" "temp"
      (631549 'move' call_tmp[631546](87085 call valType _mt[243] call_tmp[631539]))
      unknown call_tmp[631551] "expr temp" "maybe param" "maybe type" "temp"
      (631554 'move' call_tmp[631551](87089 call _cast string[26] call_tmp[631546]))
      unknown call_tmp[631556] "expr temp" "maybe param" "maybe type" "temp"
      (631559 'move' call_tmp[631556](87091 call + call_tmp[631534] call_tmp[631551]))
      unknown call_tmp[631561] "maybe param" "maybe type" "temp"
      (631564 'move' call_tmp[631561](87094 call + call_tmp[631556] "'"))
      unknown because[87096] "dead at end of block" "param"
      (541731 'init var' because[87096] call_tmp[631561])
      (87099 'end of statement')
      (87106 call compilerError "cannot initialize " theseTypes[87065] " " because[87096])
    }
    unknown call_tmp[631568] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (631571 'move' call_tmp[631568](87118 'typeof' this[87266]))
    unknown call_tmp[631575] "expr temp" "maybe param" "maybe type" "temp"
    (631578 'move' call_tmp[631575](87119 call valType _mt[243] call_tmp[631568]))
    (87123 call(87114 call (partial) init _mt[243] this[87266]) call_tmp[631575])
    (477129 'end of statement')
    unknown call_tmp[631584] "expr temp" "maybe param" "maybe type" "temp"
    (631587 'move' call_tmp[631584](87134 call(87130 call (partial) readFF _mt[243] other[87024])))
    (87136 call(87126 call (partial) writeEF _mt[243] this[87266]) call_tmp[631584])
    (513104 return _void[55])
  }
  function _singlevar[87256](?).init=[87150](arg _mt[87272]:_MT[238], ref arg this[87270]:_singlevar[87256](?), const arg other[87147] :
  unknown call_tmp[631589] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[631598] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (631601 'move' call_tmp[631598](87157 'typeof' other[87147]))
    (87159 call(87153 call (partial) init _mt[243] this[87270]) call_tmp[631598])
    (477131 'end of statement')
    (87168 call(87163 call (partial) writeEF _mt[243] this[87270]) other[87147])
    (513106 return _void[55])
  }
  function _singlevar[87256](?).deinit[87174](arg _mt[87276]:_MT[238], arg this[87274]:_singlevar[87256](?)) : _unknown[51] "destructor" "dont disable remote value forwarding" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[631607] "expr temp" "maybe param" "maybe type" "temp"
    (631610 'move' call_tmp[631607](377503 call isOwned _mt[243] this[87274]))
    unknown call_tmp[631612] "expr temp" "maybe param" "maybe type" "temp"
    (631615 'move' call_tmp[631612](87178 call == call_tmp[631607] 1))
    unknown call_tmp[631617] "expr temp" "maybe param" "maybe type" "temp"
    (631620 'move' call_tmp[631617](87185 call _cond_test call_tmp[631612]))
    if call_tmp[631617]
    {
      unknown call_tmp[631624] "expr temp" "maybe param" "maybe type" "temp"
      (631627 'move' call_tmp[631624](377508 call wrapped _mt[243] this[87274]))
      (87182 call chpl__delete call_tmp[631624])
    }
    (513108 return _void[55])
  }
  function _singlevar[87256](?).readThis[87197](arg _mt[87280]:_MT[238], arg this[87278]:_singlevar[87256](?), arg x[87195]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (87218 call compilerError "single variables cannot currently be read - use writeEF instead")
    (513110 return _void[55])
  }
  function _singlevar[87256](?).writeThis[87227](arg _mt[87284]:_MT[238], arg this[87282]:_singlevar[87256](?), arg x[87225]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (87250 call compilerError "single variables cannot currently be written - apply readFF() to those variables first")
    (513112 return _void[55])
  }
  single type _singlevar[87256](?) unknown valType[86935] "type variable" unknown wrapped[86943](86941 call unmanaged _singlecls[415530](?) valType[86935]) val isOwned[86949]:bool[10] 1 bool[10]
  function isSingleType[87293](arg t[87290]:_singlevar[87256](?)) param : _unknown[51] "no doc"
  {
    unknown ret[513116] "RVV" "param" "temp"
    (513121 'move' ret[513116](513120 'deref' 1))
    (513118 return ret[513116])
  }
  function isSingleType[87305](arg t[87303]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[513125] "RVV" "param" "temp"
    (513130 'move' ret[513125](513129 'deref' 0))
    (513127 return ret[513125])
  }
  function _singlevar[87256](?).readFF[87316](arg _mt[87321]:_MT[238], arg this[87318]:_singlevar[87256](?) :
  _singlevar[87256](?)) : _unknown[51] "method"
  {
    unknown ret[513134] "RVV" "temp"
    unknown call_tmp[631631] "expr temp" "maybe param" "maybe type" "temp"
    (631634 'move' call_tmp[631631](358363 call wrapped _mt[243] this[87318]))
    unknown call_tmp[631638] "expr temp" "maybe param" "maybe type" "temp"
    (631641 'move' call_tmp[631638](87328 call(87324 call (partial) readFF _mt[243] call_tmp[631631])))
    (513139 'move' ret[513134](513138 'deref' call_tmp[631638]))
    (513136 return ret[513134])
  }
  function _singlevar[87256](?).readXX[87337](arg _mt[87342]:_MT[238], arg this[87339]:_singlevar[87256](?) :
  _singlevar[87256](?)) : _unknown[51] "method"
  {
    unknown ret[513143] "RVV" "temp"
    (87346 call chpl_task_yield)
    (477139 'end of statement')
    unknown call_tmp[631645] "expr temp" "maybe param" "maybe type" "temp"
    (631648 'move' call_tmp[631645](358368 call wrapped _mt[243] this[87339]))
    unknown call_tmp[631652] "expr temp" "maybe param" "maybe type" "temp"
    (631655 'move' call_tmp[631652](87354 call(87350 call (partial) readXX _mt[243] call_tmp[631645])))
    (513148 'move' ret[513143](513147 'deref' call_tmp[631652]))
    (513145 return ret[513143])
  }
  function _singlevar[87256](?).writeEF[87366](arg _mt[87371]:_MT[238], arg this[87368]:_singlevar[87256](?) :
  _singlevar[87256](?), arg x[87363] :
  (377514 call valType _mt[243] this[87368])) : _unknown[51] "method" "no return value for void"
  {
    unknown call_tmp[631661] "expr temp" "maybe param" "maybe type" "temp"
    (631664 'move' call_tmp[631661](358373 call wrapped _mt[243] this[87368]))
    (87379 call(87374 call (partial) writeEF _mt[243] call_tmp[631661]) x[87363])
    (513150 return _void[55])
  }
  function _singlevar[87256](?).isFull[87387](arg _mt[87392]:_MT[238], arg this[87389]:_singlevar[87256](?) :
  _singlevar[87256](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[513154] "RVV" "temp"
    unknown call_tmp[631670] "expr temp" "maybe param" "maybe type" "temp"
    (631673 'move' call_tmp[631670](358378 call wrapped _mt[243] this[87389]))
    unknown call_tmp[631677] "expr temp" "maybe param" "maybe type" "temp"
    (631680 'move' call_tmp[631677](87395 call isFull _mt[243] call_tmp[631670]))
    (513159 'move' ret[513154](513158 'deref' call_tmp[631677]))
    (513156 return ret[513154])
  }
  function =[87413](ref arg lhs[87410]:_singlevar[87256](?), arg rhs[87416] :
  (460240 'query' lhs[87410] 1)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[631684] "expr temp" "maybe param" "maybe type" "temp"
    (631687 'move' call_tmp[631684](87420 call wrapped _mt[243] lhs[87410]))
    (87428 call(87423 call (partial) writeEF _mt[243] call_tmp[631684]) rhs[87416])
    (513161 return _void[55])
  }
  function chpl__initCopy[87443](ref arg sv[87440]:_singlevar[87256](?)) : _unknown[51] "init copy fn"
  {
    unknown ret[513165] "RVV" "temp"
    unknown call_tmp[631693] "expr temp" "maybe param" "maybe type" "temp"
    (631696 'move' call_tmp[631693](87450 call(87446 call (partial) readFF _mt[243] sv[87440])))
    (513170 'move' ret[513165](513169 'deref' call_tmp[631693]))
    (513167 return ret[513165])
  }
  function chpl__autoCopy[87462](const  ref arg rhs[87459]:_singlevar[87256](?)) : _unknown[51] "auto copy fn" "no doc"
  {
    unknown ret[513174] "RVV" "temp"
    unknown call_tmp[631698] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (631701 'move' call_tmp[631698](747996 'new' _singlevar[87256](?) rhs[87459]))
    (513179 'move' ret[513174](513178 'deref' call_tmp[631698]))
    (513176 return ret[513174])
  }
  function chpl__maybeAutoDestroyed[87484](arg x[87481]:_singlevar[87256](?)) param : _unknown[51] "inline"
  {
    unknown ret[513183] "RVV" "param" "temp"
    (513188 'move' ret[513183](513187 'deref' 1))
    (513185 return ret[513183])
  }
  function chpl__autoDestroy[87501](arg x[87498]:_singlevar[87256](?)) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[631705] "expr temp" "maybe param" "maybe type" "temp"
    (631708 'move' call_tmp[631705](87504 call isOwned _mt[243] x[87498]))
    unknown call_tmp[631710] "expr temp" "maybe param" "maybe type" "temp"
    (631713 'move' call_tmp[631710](87508 call == call_tmp[631705] 1))
    unknown call_tmp[631715] "expr temp" "maybe param" "maybe type" "temp"
    (631718 'move' call_tmp[631715](87518 call _cond_test call_tmp[631710]))
    if call_tmp[631715]
    {
      unknown call_tmp[631722] "expr temp" "maybe param" "maybe type" "temp"
      (631725 'move' call_tmp[631722](87511 call wrapped _mt[243] x[87498]))
      (87515 call chpl__delete call_tmp[631722])
    }
    (513190 return _void[55])
  }
  function chpl__readXX[87535](const  ref arg x[87532]:_singlevar[87256](?)) : _unknown[51] "no doc"
  {
    unknown ret[513194] "RVV" "temp"
    unknown call_tmp[631729] "expr temp" "maybe param" "maybe type" "temp"
    (631732 'move' call_tmp[631729](87542 call(87538 call (partial) readXX _mt[243] x[87532])))
    (513199 'move' ret[513194](513198 'deref' call_tmp[631729]))
    (513196 return ret[513194])
  }
  function _singlecls[87888](?).init[87566](arg _mt[87892]:_MT[238], arg this[87890]:_singlecls[87888](?), arg valType[87564]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460323] "temporary of super field" "temp"
    (460331 'move' super_tmp[460323](460324 '.v' this[87890] c"super"))
    (460327 call init _mt[243] super_tmp[460323])
    (477149 'end of statement')
    unknown tmp[460276] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492069] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[631734] "expr temp" "maybe param" "maybe type" "temp"
      (631737 'move' call_tmp[631734](460278 '.v' this[87890] c"super"))
      (492073 'move' call_type_tmp[492069](460281 'typeof' call_tmp[631734]))
    }
    (460282 'move' tmp[460276] call_type_tmp[492069])
    unknown call_tmp[631739] "maybe param" "maybe type" "temp"
    (631742 'move' call_tmp[631739](460287 'cast' tmp[460276] this[87890]))
    unknown chpl__thisAsParent[460284] "dead at end of block" "insert auto destroy" "temp"
    (541733 'init var' chpl__thisAsParent[460284] call_tmp[631739] tmp[460276])
    (460290 'setcid' chpl__thisAsParent[460284])
    (477150 'end of statement')
    unknown tmp[460292] "temp" "type variable"
    (460294 'move' tmp[460292] valType[87564])
    (460296 'init field' this[87890] c"valType" tmp[460292])
    (477151 'end of statement')
    unknown tmp[460300] "temp"
    unknown call_tmp[631744] "expr temp" "maybe param" "maybe type" "temp"
    (631747 'move' call_tmp[631744](460309 '.v' this[87890] c"valType"))
    (460303 'default init var' tmp[460300] call_tmp[631744])
    (460305 '.=' this[87890] c"value" tmp[460300])
    (477152 'end of statement')
    val tmp[460312]:chpl_single_aux_t[88058] "temp"
    (460315 'default init var' tmp[460312] chpl_single_aux_t[88058])
    (460317 '.=' this[87890] c"singleAux" tmp[460312])
    (477153 'end of statement')
    (460322 'setcid' this[87890])
    (477154 'end of statement')
    unknown call_tmp[631751] "expr temp" "maybe param" "maybe type" "temp"
    (631754 'move' call_tmp[631751](377535 call singleAux _mt[243] this[87890]))
    (87587 call chpl_single_initAux call_tmp[631751])
    (513201 return _void[55])
  }
  function _singlecls[87888](?).deinit[87593](arg _mt[87896]:_MT[238], arg this[87894]:_singlecls[87888](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[631758] "expr temp" "maybe param" "maybe type" "temp"
    (631761 'move' call_tmp[631758](377540 call singleAux _mt[243] this[87894]))
    (87598 call chpl_single_destroyAux call_tmp[631758])
    (513203 return _void[55])
  }
  function _singlecls[87888](?).readFF[87605](arg _mt[87900]:_MT[238], arg this[87898]:_singlecls[87888](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[513207] "RVV" "temp"
    unknown ret[87608] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631765] "expr temp" "maybe param" "maybe type" "temp"
    (631768 'move' call_tmp[631765](377545 call valType _mt[243] this[87898]))
    (541735 'default init var' ret[87608] call_tmp[631765])
    (87611 'end of statement')
    const tmp[87666] "const" "temp"
    unknown call_tmp[631770] "expr temp" "maybe param" "maybe type" "temp"
    (631773 'move' call_tmp[631770](87663 '_wide_get_locale' this[87898]))
    (87668 'move' tmp[87666](87664 'deref' call_tmp[631770]))
    {
      {
        unknown localRet[87615] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[541737] "maybe param" "maybe type" "temp"
        (541746 'move' type_tmp[541737](541743 call valType _mt[243] this[87898]))
        (541739 'init var split decl' localRet[87615] type_tmp[541737])
        (87618 'end of statement')
        (87622 call chpl_rmem_consist_release)
        (477157 'end of statement')
        unknown call_tmp[631779] "expr temp" "maybe param" "maybe type" "temp"
        (631782 'move' call_tmp[631779](87625 call isFull _mt[243] this[87898]))
        unknown call_tmp[631784] "expr temp" "maybe param" "maybe type" "temp"
        (631787 'move' call_tmp[631784](87649 call _cond_test call_tmp[631779]))
        if call_tmp[631784]
        {
          unknown call_tmp[631791] "maybe param" "maybe type" "temp"
          (631794 'move' call_tmp[631791](377557 call value _mt[243] this[87898]))
          (541748 'init var split init' localRet[87615] call_tmp[631791] type_tmp[541737])
          (477158 'end of statement' localRet[87615])
        }
        {
          unknown call_tmp[631798] "expr temp" "maybe param" "maybe type" "temp"
          (631801 'move' call_tmp[631798](377562 call singleAux _mt[243] this[87898]))
          (87636 call chpl_single_waitFullAndLock call_tmp[631798])
          (477160 'end of statement')
          unknown call_tmp[631805] "maybe param" "maybe type" "temp"
          (631808 'move' call_tmp[631805](377568 call value _mt[243] this[87898]))
          (541751 'init var split init' localRet[87615] call_tmp[631805] type_tmp[541737])
          (477161 'end of statement' localRet[87615])
          unknown call_tmp[631812] "expr temp" "maybe param" "maybe type" "temp"
          (631815 'move' call_tmp[631812](377573 call singleAux _mt[243] this[87898]))
          (87647 call chpl_single_markAndSignalFull call_tmp[631812])
        }
        (87656 call chpl_rmem_consist_acquire)
        (477164 'end of statement')
        (87660 call = ret[87608] localRet[87615])
        (477165 'end of statement' ret[87608] localRet[87615])
      }
      (87671 'on block' 0 tmp[87666])
    }
    (513212 'move' ret[513207](513211 'deref' ret[87608]))
    gotoReturn _end_readFF[513205] _end_readFF[513205]
    (477168 'end of statement' ret[87608])
    label _end_readFF[513205]
    (513209 return ret[513207])
  }
  function _singlecls[87888](?).readXX[87681](arg _mt[87904]:_MT[238], arg this[87902]:_singlecls[87888](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[513218] "RVV" "temp"
    unknown ret[87684] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631819] "expr temp" "maybe param" "maybe type" "temp"
    (631822 'move' call_tmp[631819](377581 call valType _mt[243] this[87902]))
    (541754 'default init var' ret[87684] call_tmp[631819])
    (87687 'end of statement')
    const tmp[87742] "const" "temp"
    unknown call_tmp[631824] "expr temp" "maybe param" "maybe type" "temp"
    (631827 'move' call_tmp[631824](87739 '_wide_get_locale' this[87902]))
    (87744 'move' tmp[87742](87740 'deref' call_tmp[631824]))
    {
      {
        unknown localRet[87691] "dead at end of block" "insert auto destroy" "split inited"
        unknown type_tmp[541756] "maybe param" "maybe type" "temp"
        (541765 'move' type_tmp[541756](541762 call valType _mt[243] this[87902]))
        (541758 'init var split decl' localRet[87691] type_tmp[541756])
        (87694 'end of statement')
        (87698 call chpl_rmem_consist_release)
        (477170 'end of statement')
        unknown call_tmp[631833] "expr temp" "maybe param" "maybe type" "temp"
        (631836 'move' call_tmp[631833](87701 call isFull _mt[243] this[87902]))
        unknown call_tmp[631838] "expr temp" "maybe param" "maybe type" "temp"
        (631841 'move' call_tmp[631838](87725 call _cond_test call_tmp[631833]))
        if call_tmp[631838]
        {
          unknown call_tmp[631845] "maybe param" "maybe type" "temp"
          (631848 'move' call_tmp[631845](377593 call value _mt[243] this[87902]))
          (541767 'init var split init' localRet[87691] call_tmp[631845] type_tmp[541756])
          (477171 'end of statement' localRet[87691])
        }
        {
          unknown call_tmp[631852] "expr temp" "maybe param" "maybe type" "temp"
          (631855 'move' call_tmp[631852](377598 call singleAux _mt[243] this[87902]))
          (87712 call chpl_single_lock call_tmp[631852])
          (477173 'end of statement')
          unknown call_tmp[631859] "maybe param" "maybe type" "temp"
          (631862 'move' call_tmp[631859](377604 call value _mt[243] this[87902]))
          (541770 'init var split init' localRet[87691] call_tmp[631859] type_tmp[541756])
          (477174 'end of statement' localRet[87691])
          unknown call_tmp[631866] "expr temp" "maybe param" "maybe type" "temp"
          (631869 'move' call_tmp[631866](377609 call singleAux _mt[243] this[87902]))
          (87723 call chpl_single_unlock call_tmp[631866])
        }
        (87732 call chpl_rmem_consist_acquire)
        (477177 'end of statement')
        (87736 call = ret[87684] localRet[87691])
        (477178 'end of statement' ret[87684] localRet[87691])
      }
      (87747 'on block' 0 tmp[87742])
    }
    (513223 'move' ret[513218](513222 'deref' ret[87684]))
    gotoReturn _end_readXX[513216] _end_readXX[513216]
    (477181 'end of statement' ret[87684])
    label _end_readXX[513216]
    (513220 return ret[513218])
  }
  function _singlecls[87888](?).writeEF[87761](arg _mt[87908]:_MT[238], arg this[87906]:_singlecls[87888](?), arg val[87758] :
  (377617 call valType _mt[243] this[87906])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[87827] "const" "temp"
    unknown call_tmp[631873] "expr temp" "maybe param" "maybe type" "temp"
    (631876 'move' call_tmp[631873](87824 '_wide_get_locale' this[87906]))
    (87829 'move' tmp[87827](87825 'deref' call_tmp[631873]))
    {
      {
        (87772 call chpl_rmem_consist_release)
        (477183 'end of statement')
        unknown call_tmp[631880] "expr temp" "maybe param" "maybe type" "temp"
        (631883 'move' call_tmp[631880](377625 call singleAux _mt[243] this[87906]))
        (87778 call chpl_single_lock call_tmp[631880])
        (477184 'end of statement')
        unknown call_tmp[631887] "expr temp" "maybe param" "maybe type" "temp"
        (631890 'move' call_tmp[631887](87781 call isFull _mt[243] this[87906]))
        unknown call_tmp[631892] "expr temp" "maybe param" "maybe type" "temp"
        (631895 'move' call_tmp[631892](87805 call _cond_test call_tmp[631887]))
        if call_tmp[631892]
        {
          (87803 call halt "single var already defined")
        }
        unknown call_tmp[631899] "expr temp" "maybe param" "maybe type" "temp"
        (631902 'move' call_tmp[631899](377630 call value _mt[243] this[87906]))
        (87812 call = call_tmp[631899] val[87758])
        (477186 'end of statement')
        unknown call_tmp[631906] "expr temp" "maybe param" "maybe type" "temp"
        (631909 'move' call_tmp[631906](377636 call singleAux _mt[243] this[87906]))
        (87818 call chpl_single_markAndSignalFull call_tmp[631906])
        (477187 'end of statement')
        (87822 call chpl_rmem_consist_acquire)
      }
      (87832 'on block' 0 tmp[87827])
    }
    (513227 return _void[55])
  }
  {
    (87767 call <(87764 'lifetime_of' this[87906])(87766 'lifetime_of' val[87758]))
  }
  function _singlecls[87888](?).isFull[87841](arg _mt[87912]:_MT[238], arg this[87910]:_singlecls[87888](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513231] "RVV" "temp"
    unknown b[87844] "dead at end of block" "insert auto destroy"
    (541773 'default init var' b[87844] bool[10])
    (87847 'end of statement')
    const tmp[87874] "const" "temp"
    unknown call_tmp[631911] "expr temp" "maybe param" "maybe type" "temp"
    (631914 'move' call_tmp[631911](87871 '_wide_get_locale' this[87910]))
    (87876 'move' tmp[87874](87872 'deref' call_tmp[631911]))
    {
      {
        (87852 call chpl_rmem_consist_release)
        (477189 'end of statement')
        unknown call_tmp[631918] "expr temp" "maybe param" "maybe type" "temp"
        (631921 'move' call_tmp[631918](377643 call value _mt[243] this[87910]))
        unknown call_tmp[631923] "expr temp" "maybe param" "maybe type" "temp"
        (631926 'move' call_tmp[631923](87860 call c_ptrTo call_tmp[631918]))
        unknown call_tmp[631930] "expr temp" "maybe param" "maybe type" "temp"
        (631933 'move' call_tmp[631930](377648 call singleAux _mt[243] this[87910]))
        unknown call_tmp[631935] "expr temp" "maybe param" "maybe type" "temp"
        (631938 'move' call_tmp[631935](87863 call chpl_single_isFull call_tmp[631923] call_tmp[631930]))
        (87864 call = b[87844] call_tmp[631935])
        (477190 'end of statement' b[87844])
        (87869 call chpl_rmem_consist_acquire)
      }
      (87879 'on block' 0 tmp[87874])
    }
    (513236 'move' ret[513231](513235 'deref' b[87844]))
    gotoReturn _end_isFull[513229] _end_isFull[513229]
    (477193 'end of statement' b[87844])
    label _end_isFull[513229]
    (513233 return ret[513231])
  }
  type _singlecls[87888](?) val super[355747]:object[22] "super class" unknown valType[87549] "type variable" unknown value[87553] valType[87549] val singleAux[87558]:chpl_single_aux_t[88058] chpl_single_aux_t[88058]
  type unmanaged _singlecls[415530](?)
  type _singlecls[377466](?)
  function isSingleValue[87921](arg x[87918]:_singlevar[87256](?)) param : _unknown[51] "no doc"
  {
    unknown ret[513242] "RVV" "param" "temp"
    (513247 'move' ret[513242](513246 'deref' 1))
    (513244 return ret[513242])
  }
  function isSingleValue[87933](arg x[87931]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[513251] "RVV" "param" "temp"
    (513256 'move' ret[513251](513255 'deref' 0))
    (513253 return ret[513251])
  }
  (355173 'used modules list'(84293 'use' ChapelStandard[20267])(84297 'use' AlignedTSupport[88357])(84300 'use' MemConsistency[186648])(84303 'use' SyncVarRuntimeSupport[87943]))
}