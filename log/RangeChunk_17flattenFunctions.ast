AST dump for RangeChunk after pass flattenFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416165]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537516 return _void[55])
  }
  type RemElems[266487] def Thru[266481]:RemElems[266487] def Pack[266483]:RemElems[266487] def Mod[266485]:RemElems[266487]
  function _ic_chunks[1376150].advance[1376176](const in arg this[1376178]:_ic_chunks[1376150]) : void[4] "auto ii" "method" "resolved"
  {
    (1376183 return _void[55])
  }
  function _ic_chunks[1376150].zip1[1376185](const in arg this[1376187]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376192 return _void[55])
  }
  function _ic_chunks[1376150].zip2[1376194](const in arg this[1376196]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376201 return _void[55])
  }
  function _ic_chunks[1376150].zip3[1376203](const in arg this[1376205]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376210 return _void[55])
  }
  function _ic_chunks[1376150].zip4[1376212](const in arg this[1376214]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376219 return _void[55])
  }
  function _ic_chunks[1376150].hasMore[1376221](const in arg this[1376223]:_ic_chunks[1376150]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    (1376228 return _void[55])
  }
  function _ic_chunks[1376150].getValue[1376230](const in arg this[1376232]:_ic_chunks[1376150]) : range(int(64),bounded,false)[1026875] "auto ii" "inline" "method" "resolved"
  {
    (1376237 return _void[55])
  }
  function _ic_chunks[1376150].init[1376239](const in arg this[1376241]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376246 return _void[55])
  }
  function _ic_chunks[1376150].incr[1376248](const in arg this[1376250]:_ic_chunks[1376150]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376255 return _void[55])
  }
  type _ic_chunks[1376150] val super[1376151]:object[22] "super class" val more[1376153]:int(64)[13]
  type unmanaged _ic_chunks?[1840266]
  type unmanaged _ic_chunks[1840263]
  type borrowed _ic_chunks?[1840260]
  type _ir_chunks[1376156]
  function _getIterator[1376165](const  ref arg ir[1376167]:_ir_chunks[1376156]) : _ic_chunks[1376150] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376274]:_ic_chunks[1376150] "dead after last mention" "RVV" "temp"
    val _ic_[1376157]:_ic_chunks[1376150] "dead after last mention" "temp"
    val call_tmp[1376281]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376284 'move' call_tmp[1376281](1376296 'sizeof_bundle' _ic_chunks[1376150]))
    val cast_tmp[1376299]:c_void_ptr[149] "dead after last mention" "temp"
    (1376301 'move' cast_tmp[1376299](1376162 call chpl_here_alloc[187788] call_tmp[1376281] 70))
    (1376170 'move' _ic_[1376157](1376303 'cast' _ic_chunks[1376150] cast_tmp[1376299]))
    (1376172 'setcid' _ic_[1376157])
    (1376270 'end of statement')
    (1376279 'move' ret[1376274] _ic_[1376157])
    (1376276 return ret[1376274])
  }
  function chunks[1375718](const in arg r[1375720]:range(int(64),bounded,false)[1026875], const in arg numChunks[1375722]:int(64)[13], const in arg remPol[1375726]:RemElems[266487]) : _ir_chunks[1376156] "compiler added where" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val ret[1375768]:_ir_chunks[1376156] "dead at end of block" "RVV" "temp"
    {
      val _indexOfInterest[1376310]:2*int(64)[1040117] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1376312]:_ic_chunksOrder[1376614] "dead at end of block" "expr temp" "temp"
      val call_tmp[1376314]:_ir_chunksOrder[1376620] "dead at end of block" "expr temp" "maybe param" "temp"
      (1376316 'move' call_tmp[1376314](1376319 call chunksOrder[1376548] r[1375720] numChunks[1375722] remPol[1375726]))
      (1376323 'move' _iterator[1376312](1376326 call _getIterator[1376629] call_tmp[1376314]))
      Defer
      {
        {
          (1376330 call _freeIterator[1378692] _iterator[1376312])
        }
      }
      ForLoop[1376339]
      {
        1
        (1376346 'end of statement')
        const startOrder[1376347]:int(64)[13] "const" "index var" "insert auto destroy"
        (1376349 'end of statement')
        (1376350 'move' startOrder[1376347](1378761 '.v' _indexOfInterest[1376310] x0[1040113]))
        (1376355 'end of statement' startOrder[1376347])
        const endOrder[1376357]:int(64)[13] "const" "index var" "insert auto destroy"
        (1376359 'end of statement')
        (1376360 'move' endOrder[1376357](1378766 '.v' _indexOfInterest[1376310] x1[1040115]))
        (1376365 'end of statement' endOrder[1376357])
        {
          val call_tmp[1376368]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1376370 'move' call_tmp[1376368](1376376 call orderToIndex[1104101] r[1375720] startOrder[1376347]))
          const start[1376378]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1376380 'move' start[1376378] call_tmp[1376368])
          (1376383 'end of statement')
          val call_tmp[1376384]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1376386 'move' call_tmp[1376384](1376392 call orderToIndex[1104101] r[1375720] endOrder[1376357]))
          const end[1376394]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1376396 'move' end[1376394] call_tmp[1376384])
          (1376399 'end of statement' startOrder[1376347] endOrder[1376357])
          val yret[1376402]:range(int(64),bounded,false)[1026875] "dead after last mention" "YVV" "temp"
          val tmp[1376404]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val tmp[1376452]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          (1376454 'move' tmp[1376452](1376457 call chpl_build_bounded_range[455180] start[1376378] end[1376394]))
          (1376460 'move' tmp[1376404] tmp[1376452])
          val call_tmp[1376466]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1376480]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1378797 'move' yret[1376402] tmp[1376404])
          (1376494 yield yret[1376402])
          (1376496 'end of statement' start[1376378] end[1376394] start[1376378] end[1376394] start[1376378] end[1376394] start[1376378] end[1376394])
        }
        label _continueLabel[1376501]
        _indexOfInterest[1376310]
        _iterator[1376312]
      }
      label _breakLabel[1376503]
    }
    (1376505 return ret[1375768])
  }
  function _ic_chunksOrder[1376614].advance[1376640](const in arg this[1376642]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "method" "resolved"
  {
    (1376647 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip1[1376649](const in arg this[1376651]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376656 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip2[1376658](const in arg this[1376660]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376665 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip3[1376667](const in arg this[1376669]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376674 return _void[55])
  }
  function _ic_chunksOrder[1376614].zip4[1376676](const in arg this[1376678]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376683 return _void[55])
  }
  function _ic_chunksOrder[1376614].hasMore[1376685](const in arg this[1376687]:_ic_chunksOrder[1376614]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    (1376692 return _void[55])
  }
  function _ic_chunksOrder[1376614].getValue[1376694](const in arg this[1376696]:_ic_chunksOrder[1376614]) : 2*int(64)[1040117] "auto ii" "inline" "method" "resolved"
  {
    (1376701 return _void[55])
  }
  function _ic_chunksOrder[1376614].init[1376703](const in arg this[1376705]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376710 return _void[55])
  }
  function _ic_chunksOrder[1376614].incr[1376712](const in arg this[1376714]:_ic_chunksOrder[1376614]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1376719 return _void[55])
  }
  type _ic_chunksOrder[1376614] val super[1376615]:object[22] "super class" val more[1376617]:int(64)[13]
  type unmanaged _ic_chunksOrder?[1840275]
  type unmanaged _ic_chunksOrder[1840272]
  type borrowed _ic_chunksOrder?[1840269]
  type _ir_chunksOrder[1376620]
  function _getIterator[1376629](const  ref arg ir[1376631]:_ir_chunksOrder[1376620]) : _ic_chunksOrder[1376614] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1376738]:_ic_chunksOrder[1376614] "dead after last mention" "RVV" "temp"
    val _ic_[1376621]:_ic_chunksOrder[1376614] "dead after last mention" "temp"
    val call_tmp[1376745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376748 'move' call_tmp[1376745](1376760 'sizeof_bundle' _ic_chunksOrder[1376614]))
    val cast_tmp[1376763]:c_void_ptr[149] "dead after last mention" "temp"
    (1376765 'move' cast_tmp[1376763](1376626 call chpl_here_alloc[187788] call_tmp[1376745] 71))
    (1376634 'move' _ic_[1376621](1376767 'cast' _ic_chunksOrder[1376614] cast_tmp[1376763]))
    (1376636 'setcid' _ic_[1376621])
    (1376734 'end of statement')
    (1376743 'move' ret[1376738] _ic_[1376621])
    (1376740 return ret[1376738])
  }
  function chunksOrder[1376548](const in arg r[1376550]:range(int(64),bounded,false)[1026875], const in arg numChunks[1376552]:int(64)[13], const in arg remPol[1376556]:RemElems[266487]) : _ir_chunksOrder[1376620] "compiler added where" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val ret[1376590]:_ir_chunksOrder[1376620] "dead at end of block" "RVV" "temp"
    val tmp[1376773]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1376775]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376777 'move' call_tmp[1376775](1376780 call size[1035850] r[1376550]))
    (1376783 'move' tmp[1376773](1376786 call ==[435671] call_tmp[1376775] 0))
    (1377301 'end of statement')
    val tmp[1376802]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1376804]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1376806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376808 'move' call_tmp[1376806] tmp[1376773])
    (1376813 'move' tmp[1376804] call_tmp[1376806])
    if tmp[1376804]
    {
      (1376820 'move' tmp[1376802] 1)
    }
    {
      val tmp[1376826]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1376828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376830 'move' call_tmp[1376828](1376833 call <=[437055] numChunks[1376552] 0))
      (1376836 'move' tmp[1376826] call_tmp[1376828])
      (1376841 'move' tmp[1376802] tmp[1376826])
    }
    val call_tmp[1376847]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1376849 'move' call_tmp[1376847] tmp[1376802])
    if call_tmp[1376847]
    {
      gotoReturn _end_chunksOrder[1377292] _end_chunksOrder[1377292]
    }
    val call_tmp[1376859]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1376861 'move' call_tmp[1376859](1376864 call size[1035850] r[1376550]))
    const nElems[1376867]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1376869 'move' nElems[1376867] call_tmp[1376859])
    (1376872 'end of statement')
    val call_tmp[1376873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1376880]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1376882 'move' call_tmp[1376880](1376885 call min[450039] numChunks[1376552] nElems[1376867]))
    val call_tmp[1376888]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1376890 'move' call_tmp[1376888] call_tmp[1376880])
    val nChunks[1376896]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1376898 'move' nChunks[1376896] call_tmp[1376888])
    (1376901 'end of statement')
    val chunkSize[1376902]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1376904]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378583 'move' chunkSize[1376902] 0)
    val rem[1376914]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1376916]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378586 'move' rem[1376914] 0)
    (1376925 'end of statement' nElems[1376867] chunkSize[1376902])
    {
      val tmp[1376929]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376931 'move' tmp[1376929] remPol[1376556])
      val call_tmp[1376934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376936 'move' call_tmp[1376934](1376939 call ==[1377318] tmp[1376929] Pack[266483]))
      val call_tmp[1376942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376944 'move' call_tmp[1376942] call_tmp[1376934])
      if call_tmp[1376942]
      {
        val call_tmp[1376951]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1376953 'move' call_tmp[1376951](1376956 call /[442723] nElems[1376867] nChunks[1376896]))
        (1376960 call =[435370] chunkSize[1376902] call_tmp[1376951])
        (1376963 'end of statement' chunkSize[1376902] nElems[1376867] nChunks[1376896])
        val call_tmp[1376967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1376969 'move' call_tmp[1376967](1376972 call *[441871] chunkSize[1376902] nChunks[1376896]))
        val call_tmp[1376975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1376977 'move' call_tmp[1376975](1376980 call !=[436055] call_tmp[1376967] nElems[1376867]))
        val call_tmp[1376983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1376985 'move' call_tmp[1376983] call_tmp[1376975])
        if call_tmp[1376983]
        {
          (1376993 call +=[451358] chunkSize[1376902] 1)
          (1376996 'end of statement' chunkSize[1376902])
          val call_tmp[1376998]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1377000 'move' call_tmp[1376998](1377003 call divceil[1377371] nElems[1376867] chunkSize[1376902]))
          (1377007 call =[435370] nChunks[1376896] call_tmp[1376998])
          (1377010 'end of statement' nChunks[1376896] nElems[1376867] chunkSize[1376902])
        }
      }
      {
        val call_tmp[1377016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1377018 'move' call_tmp[1377016](1377021 call ==[1377318] tmp[1376929] Mod[266485]))
        val call_tmp[1377024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1377026 'move' call_tmp[1377024] call_tmp[1377016])
        if call_tmp[1377024]
        {
          val call_tmp[1377033]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1377035 'move' call_tmp[1377033](1377038 call /[442723] nElems[1376867] nChunks[1376896]))
          (1377042 call =[435370] chunkSize[1376902] call_tmp[1377033])
          (1377045 'end of statement' chunkSize[1376902] nElems[1376867] nChunks[1376896])
          val call_tmp[1377049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1377051 'move' call_tmp[1377049](1377054 call *[441871] chunkSize[1376902] nChunks[1376896]))
          val call_tmp[1377057]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1377059 'move' call_tmp[1377057](1377062 call -[440459] nElems[1376867] call_tmp[1377049]))
          (1377066 call =[435370] rem[1376914] call_tmp[1377057])
          (1377069 'end of statement' rem[1376914] nElems[1376867] chunkSize[1376902] nChunks[1376896])
        }
      }
    }
    {
      val _indexOfInterest[1377077]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1377079]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
      val call_tmp[1377081]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377083 'move' call_tmp[1377081](1377086 call chpl_direct_counted_range_iter[458039] 0 nChunks[1376896]))
      (1377089 'move' _iterator[1377079](1377092 call _getIterator[1103866] call_tmp[1377081]))
      Defer
      {
        {
          (1377096 call _freeIterator[1104035] _iterator[1377079])
        }
      }
      ForLoop[1377105]
      {
        const i[1377108]:int(64)[13] "const" "index var" "insert auto destroy"
        (1377110 'end of statement')
        (1377111 'move' i[1377108] _indexOfInterest[1377077])
        (1377114 'end of statement' i[1377108])
        {
          val chunk[1377117]:2*int(64)[1040117] "dead at end of block" "insert auto destroy"
          val call_tmp[1377119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1377126]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1378591 'move' chunk[1377117](1378588 call _defaultOf[1378593]))
          (1377137 'end of statement')
          {
            val tmp[1377139]:RemElems[266487] "dead after last mention" "expr temp" "maybe param" "temp"
            (1377141 'move' tmp[1377139] remPol[1376556])
            val call_tmp[1377144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1377146 'move' call_tmp[1377144](1377149 call ==[1377318] tmp[1377139] Thru[266481]))
            val call_tmp[1377152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1377154 'move' call_tmp[1377152] call_tmp[1377144])
            if call_tmp[1377152]
            {
              val call_tmp[1377161]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              (1377163 'move' call_tmp[1377161](1377166 call chunkOrderThru[1377588] nElems[1376867] nChunks[1376896] i[1377108]))
              (1377171 call =[1377840] chunk[1377117] call_tmp[1377161])
              (1377174 'end of statement' chunk[1377117] nElems[1376867] nChunks[1376896] i[1377108])
            }
            {
              val call_tmp[1377180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1377182 'move' call_tmp[1377180](1377185 call ==[1377318] tmp[1377139] Pack[266483]))
              val call_tmp[1377188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1377190 'move' call_tmp[1377188] call_tmp[1377180])
              if call_tmp[1377188]
              {
                val call_tmp[1377197]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (1377199 'move' call_tmp[1377197](1377202 call chunkOrderPack[1378064] chunkSize[1376902] nElems[1376867] i[1377108]))
                (1377207 call =[1377840] chunk[1377117] call_tmp[1377197])
                (1377210 'end of statement' chunk[1377117] chunkSize[1376902] nElems[1376867] i[1377108])
              }
              {
                val call_tmp[1377216]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1377218 'move' call_tmp[1377216](1377221 call ==[1377318] tmp[1377139] Mod[266485]))
                val call_tmp[1377224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1377226 'move' call_tmp[1377224] call_tmp[1377216])
                if call_tmp[1377224]
                {
                  val call_tmp[1377233]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  (1377235 'move' call_tmp[1377233](1377238 call chunkOrderMod[1378321] chunkSize[1376902] rem[1376914] nElems[1376867] nChunks[1376896] i[1377108]))
                  (1377245 call =[1377840] chunk[1377117] call_tmp[1377233])
                  (1377248 'end of statement' chunk[1377117] chunkSize[1376902] rem[1376914] nElems[1376867] nChunks[1376896] i[1377108])
                }
                {
                  (1377257 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          val yret[1377262]:2*int(64)[1040117] "dead after last mention" "YVV" "temp"
          val call_tmp[1377264]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1377271]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1378580 'move' yret[1377262] chunk[1377117])
          (1377284 yield yret[1377262])
          (1377286 'end of statement' chunk[1377117])
        }
        label _continueLabel[1377288]
        _indexOfInterest[1377077]
        _iterator[1377079]
      }
      label _breakLabel[1377290]
    }
    label _end_chunksOrder[1377292]
    (1377294 return ret[1376590])
  }
  function chunkOrderThru[1377588](const in arg nElems[1377590]:int(64)[13], const in arg nChunks[1377595]:int(64)[13], const in arg i[1377600]:int(64)[13]) : 2*int(64)[1040117] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1377619]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    val call_tmp[1377629]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1377631 'move' call_tmp[1377629](1377634 call *[441871] nElems[1377590] i[1377600]))
    const m[1377637]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1377639 'move' m[1377637] call_tmp[1377629])
    (1377642 'end of statement')
    const start[1377643]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377645]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1377647]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1377649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377651 'move' call_tmp[1377649](1377654 call ==[435671] i[1377600] 0))
    (1377657 'move' tmp[1377647] call_tmp[1377649])
    if tmp[1377647]
    {
      val call_tmp[1377666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1377678 'move' tmp[1377645] 0)
    }
    {
      val tmp[1377684]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377686 'move' tmp[1377684](1377689 call divceil[1377371] m[1377637] nChunks[1377595]))
      (1377692 'move' tmp[1377645] tmp[1377684])
    }
    (1377698 'move' start[1377643] tmp[1377645])
    (1377701 'end of statement')
    const end[1377702]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1377704]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1377706]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1377708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377710 'move' call_tmp[1377708](1377713 call -[962287] nChunks[1377595]))
    val call_tmp[1377716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1377718 'move' call_tmp[1377716](1377721 call ==[435671] i[1377600] call_tmp[1377708]))
    (1377724 'move' tmp[1377706] call_tmp[1377716])
    if tmp[1377706]
    {
      val tmp[1377731]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377733 'move' tmp[1377731](1377736 call -[962287] nElems[1377590]))
      (1377739 'move' tmp[1377704] tmp[1377731])
    }
    {
      val tmp[1377745]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1377747]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377749 'move' call_tmp[1377747](1377752 call +[439679] m[1377637] nElems[1377590]))
      val call_tmp[1377755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377757 'move' call_tmp[1377755](1377760 call divceil[1377371] call_tmp[1377747] nChunks[1377595]))
      (1377763 'move' tmp[1377745](1377766 call -[962287] call_tmp[1377755]))
      (1377769 'move' tmp[1377704] tmp[1377745])
    }
    (1377775 'move' end[1377702] tmp[1377704])
    (1377778 'end of statement' m[1377637] m[1377637])
    val call_tmp[1377781]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1377783 'move' call_tmp[1377781](1377786 call _build_tuple[1040075] start[1377643] end[1377702]))
    val call_tmp[1377789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377795]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1377801]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1377838 'move' ret[1377619] call_tmp[1377781])
    gotoReturn _end_chunkOrderThru[1377819] _end_chunkOrderThru[1377819]
    label _end_chunkOrderThru[1377819]
    (1377821 return ret[1377619])
  }
  function chunkOrderPack[1378064](const in arg chunkSize[1378066]:int(64)[13], const in arg nElems[1378071]:int(64)[13], const in arg i[1378076]:int(64)[13]) : 2*int(64)[1040117] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1378095]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    val call_tmp[1378105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378107 'move' call_tmp[1378105](1378110 call *[441871] chunkSize[1378066] i[1378076]))
    const start[1378113]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1378115 'move' start[1378113] call_tmp[1378105])
    (1378118 'end of statement')
    val call_tmp[1378119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378121 'move' call_tmp[1378119](1378124 call >=[437275] start[1378113] nElems[1378071]))
    val call_tmp[1378127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378129 'move' call_tmp[1378127] call_tmp[1378119])
    if call_tmp[1378127]
    {
      val call_tmp[1378136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378164]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1378166 'move' call_tmp[1378164](1378169 call _build_tuple[1040075] 1 0))
      val call_tmp[1378172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1378184]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1378314 'move' ret[1378095] call_tmp[1378164])
      gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    }
    val call_tmp[1378200]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1378202 'move' call_tmp[1378200](1378205 call +[439679] start[1378113] chunkSize[1378066]))
    val call_tmp[1378208]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1378210 'move' call_tmp[1378208](1378213 call -[962287] call_tmp[1378200]))
    val end[1378216]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378218 'move' end[1378216] call_tmp[1378208])
    (1378221 'end of statement' start[1378113])
    val call_tmp[1378223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378225 'move' call_tmp[1378223](1378228 call >=[437275] end[1378216] nElems[1378071]))
    val call_tmp[1378231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378233 'move' call_tmp[1378231] call_tmp[1378223])
    if call_tmp[1378231]
    {
      val call_tmp[1378240]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378242 'move' call_tmp[1378240](1378245 call -[962287] nElems[1378071]))
      (1378249 call =[435370] end[1378216] call_tmp[1378240])
      (1378252 'end of statement' end[1378216])
    }
    val call_tmp[1378255]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1378257 'move' call_tmp[1378255](1378260 call _build_tuple[1040075] start[1378113] end[1378216]))
    val call_tmp[1378263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378275]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378317 'move' ret[1378095] call_tmp[1378255])
    gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    label _end_chunkOrderPack[1378293]
    (1378295 return ret[1378095])
  }
  function chunkOrderMod[1378321](const in arg chunkSize[1378323]:int(64)[13], const in arg rem[1378328]:int(64)[13], const in arg nElems[1378333]:int(64)[13], const in arg nChunks[1378338]:int(64)[13], const in arg i[1378343]:int(64)[13]) : 2*int(64)[1040117] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1378362]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    val start[1378372]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1378374]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378568 'move' start[1378372] 0)
    val end[1378383]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1378385]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    (1378394 'end of statement' start[1378372])
    val call_tmp[1378396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378398 'move' call_tmp[1378396](1378401 call <[437495] i[1378343] rem[1378328]))
    val call_tmp[1378404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1378406 'move' call_tmp[1378404] call_tmp[1378396])
    if call_tmp[1378404]
    {
      val call_tmp[1378413]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378415 'move' call_tmp[1378413](1378418 call +[949727] chunkSize[1378323]))
      val call_tmp[1378421]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378423 'move' call_tmp[1378421](1378426 call *[441871] i[1378343] call_tmp[1378413]))
      (1378430 call =[435370] start[1378372] call_tmp[1378421])
      (1378433 'end of statement' start[1378372])
      val call_tmp[1378435]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378437 'move' call_tmp[1378435](1378440 call +[439679] start[1378372] chunkSize[1378323]))
      (1378443 'move' end[1378383] call_tmp[1378435])
      (1378447 'end of statement' end[1378383] start[1378372])
    }
    {
      val call_tmp[1378451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378453 'move' call_tmp[1378451](1378456 call -[440459] nChunks[1378338] i[1378343]))
      val call_tmp[1378459]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378461 'move' call_tmp[1378459](1378464 call *[441871] call_tmp[1378451] chunkSize[1378323]))
      val call_tmp[1378467]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1378469 'move' call_tmp[1378467](1378472 call -[440459] nElems[1378333] call_tmp[1378459]))
      (1378476 call =[435370] start[1378372] call_tmp[1378467])
      (1378479 'end of statement' start[1378372])
      val call_tmp[1378481]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1378483 'move' call_tmp[1378481](1378486 call +[439679] start[1378372] chunkSize[1378323]))
      val call_tmp[1378489]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1378491 'move' call_tmp[1378489](1378494 call -[962287] call_tmp[1378481]))
      (1378497 'move' end[1378383] call_tmp[1378489])
      (1378501 'end of statement' end[1378383] start[1378372])
    }
    val call_tmp[1378505]:2*int(64)[1040117] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1378507 'move' call_tmp[1378505](1378510 call _build_tuple[1040075] start[1378372] end[1378383]))
    val call_tmp[1378513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1378525]:2*int(64)[1040117] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1378565 'move' ret[1378362] call_tmp[1378505])
    gotoReturn _end_chunkOrderMod[1378543] _end_chunkOrderMod[1378543]
    label _end_chunkOrderMod[1378543]
    (1378545 return ret[1378362])
  }
}