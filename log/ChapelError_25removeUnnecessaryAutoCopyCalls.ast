AST dump for ChapelError after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2148185] val _runtime_hdr[2148186]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148188]:chpl_localeID_t[209352] ref _1_this[2148190]:chpl_TaskErrors[168348] val _2_err[2148192]:Error[167984]
  function chpl__init_ChapelError[416060]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522383 return _void[55])
  }
  function Error[167984].init[167942](const in arg this[167986]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462467]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462475 'move' super_tmp[462467](462468 '.v' this[167986] super[355739]))
    (462471 call init[749424] super_tmp[462467])
    val tmp[462402]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679441]:object[22] "dead at end of block" "maybe param" "temp"
    (679444 'move' call_tmp[679441](462413 'cast' object[22] this[167986]))
    val chpl__thisAsParent[462410]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544609 'move' chpl__thisAsParent[462410] call_tmp[679441])
    (462416 'setcid' chpl__thisAsParent[462410])
    val tmp[462418]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[965645]:Error[167984] "dead after last mention" "temp"
    (965648 'move' init_coerce_tmp[965645](965660 'cast' Error[167984] nil[44]))
    (462421 'move' tmp[462418] init_coerce_tmp[965645])
    (462423 '.=' this[167986] _next[167912] tmp[462418])
    val tmp[462428]:int(64)[13] "dead after last mention" "temp"
    (965665 'move' tmp[462428] 0)
    (462433 '.=' this[167986] thrownLine[167917] tmp[462428])
    val tmp[462437]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679446]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (965668 'move' tmp[462437] 0)
    (462444 '.=' this[167986] thrownFileId[167925] tmp[462437])
    val tmp[462448]:string[26] "dead after last mention" "temp"
    (965670 call init[30763] tmp[462448])
    (462453 '.=' this[167986] _msg[167930] tmp[462448])
    val tmp[462458]:bool[10] "dead after last mention" "temp"
    (462461 'move' tmp[462458] 0)
    (462463 '.=' this[167986] _hasThrowInfo[167936] tmp[462458])
    (462478 'setcid' this[167986])
    (522132 return _void[55])
  }
  function Error[167984].init[167958](const in arg this[167990]:Error[167984], const  ref arg msg[167955]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462550]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462558 'move' super_tmp[462550](462551 '.v' this[167990] super[355739]))
    (462554 call init[749424] super_tmp[462550])
    val tmp[462484]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679456]:object[22] "dead at end of block" "maybe param" "temp"
    (679459 'move' call_tmp[679456](462495 'cast' object[22] this[167990]))
    val chpl__thisAsParent[462492]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544611 'move' chpl__thisAsParent[462492] call_tmp[679456])
    (462498 'setcid' chpl__thisAsParent[462492])
    val tmp[462501]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[1064131]:Error[167984] "dead after last mention" "temp"
    (1064134 'move' init_coerce_tmp[1064131](1064148 'cast' Error[167984] nil[44]))
    (462504 'move' tmp[462501] init_coerce_tmp[1064131])
    (462506 '.=' this[167990] _next[167912] tmp[462501])
    val tmp[462510]:int(64)[13] "dead after last mention" "temp"
    (1064153 'move' tmp[462510] 0)
    (462515 '.=' this[167990] thrownLine[167917] tmp[462510])
    val tmp[462519]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679461]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1064156 'move' tmp[462519] 0)
    (462526 '.=' this[167990] thrownFileId[167925] tmp[462519])
    val tmp[462530]:string[26] "dead after last mention" "temp"
    (462533 call init=[30774] tmp[462530] msg[167955])
    (462535 '.=' this[167990] _msg[167930] tmp[462530])
    val tmp[462541]:bool[10] "dead after last mention" "temp"
    (462544 'move' tmp[462541] 0)
    (462546 '.=' this[167990] _hasThrowInfo[167936] tmp[462541])
    (462561 'setcid' this[167990])
    (522134 return _void[55])
  }
  function Error[167984].message[167975](const in arg this[167994]:Error[167984], ref arg _retArg[1864656]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522138]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679468]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
    (679471 'move' call_tmp[679468](388500 call _msg[811755] this[167994]))
    (522143 'move' ret[522138](1864660 call chpl__initCopy[981409] call_tmp[679468]))
    (1864658 '=' _retArg[1864656] ret[522138])
    (1864662 return _void[55])
  }
  function Error[167984]._next[811677](const in arg this[811681]:Error[167984]) ref : _ref(Error)[941081] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811691]:_ref(Error)[941081] "dead after last mention" "RVV" "temp"
    ref call_tmp[811698]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
    (811701 'move' call_tmp[811698](811685 '.' this[811681] _next[167912]))
    (811696 'move' ret[811691] call_tmp[811698])
    (811693 return ret[811691])
  }
  function Error[167984].thrownLine[811703](const in arg this[811707]:Error[167984]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811717]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[811724]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (811727 'move' call_tmp[811724](811711 '.' this[811707] thrownLine[167917]))
    (811722 'move' ret[811717] call_tmp[811724])
    (811719 return ret[811717])
  }
  function Error[167984].thrownFileId[811729](const in arg this[811733]:Error[167984]) ref : _ref(int(32))[936687] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811743]:_ref(int(32))[936687] "dead after last mention" "RVV" "temp"
    ref call_tmp[811750]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
    (811753 'move' call_tmp[811750](811737 '.' this[811733] thrownFileId[167925]))
    (811748 'move' ret[811743] call_tmp[811750])
    (811745 return ret[811743])
  }
  function Error[167984]._msg[811755](const in arg this[811759]:Error[167984]) ref : _ref(string)[938000] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811769]:_ref(string)[938000] "dead after last mention" "RVV" "temp"
    ref call_tmp[811776]:_ref(string)[938000] "dead after last mention" "maybe param" "temp"
    (811779 'move' call_tmp[811776](811763 '.' this[811759] _msg[167930]))
    (811774 'move' ret[811769] call_tmp[811776])
    (811771 return ret[811769])
  }
  function Error[167984]._hasThrowInfo[811781](const in arg this[811785]:Error[167984]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811795]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[811802]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (811805 'move' call_tmp[811802](811789 '.' this[811785] _hasThrowInfo[167936]))
    (811800 'move' ret[811795] call_tmp[811802])
    (811797 return ret[811795])
  }
  function Error[167984].deinit[811807](const in arg this[811811]:Error[167984]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848288]
    ref _field_destructor_tmp_[1848286]:_ref(string)[938000] "temp"
    (1848293 'move' _field_destructor_tmp_[1848286](1848290 '.' this[811811] _msg[167930]))
    (1848295 call deinit[30834] _field_destructor_tmp_[1848286])
    val _parent_destructor_tmp_[1848298]:object[22] "temp"
    (1848303 'move' _parent_destructor_tmp_[1848298](1848299 'cast' object[22] this[811811]))
    (1848305 call deinit[749440] _parent_destructor_tmp_[1848298])
    (811819 return _void[55])
  }
  type Error[167984] val super[355739]:object[22] "super class" val _next[167912]:Error[167984] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function NilThrownError[168029].message[168004](const in arg this[168031]:NilThrownError[168029], ref arg _retArg[1876350]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522147]:string[26] "dead after last mention" "RVV" "temp"
    (522152 'move' ret[522147](1876354 call chpl__initCopy[981409] "thrown error was nil"))
    (1876352 '=' _retArg[1876350] ret[522147])
    (1876356 return _void[55])
  }
  function NilThrownError[168029].init[811847](const in arg this[811850]:NilThrownError[168029]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811863]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (811865 'move' super_tmp[811863](811862 '.v' this[811850] super[355741]))
    (811860 call init[167942] super_tmp[811863])
    val tmp[811868]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[811906]:Error[167984] "dead at end of block" "maybe param" "temp"
    (811909 'move' call_tmp[811906](811879 'cast' Error[167984] this[811850]))
    val chpl__thisAsParent[811876]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (811897 'move' chpl__thisAsParent[811876] call_tmp[811906])
    (811882 'setcid' chpl__thisAsParent[811876])
    (811884 'setcid' this[811850])
    (811895 return _void[55])
  }
  function NilThrownError[168029].deinit[811911](const in arg this[811915]:NilThrownError[168029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1848313]
    val _parent_destructor_tmp_[1848308]:Error[167984] "temp"
    (1848315 'move' _parent_destructor_tmp_[1848308](1848309 'cast' Error[167984] this[811915]))
    (1848317 call deinit[811807] _parent_destructor_tmp_[1848308])
    (811923 return _void[55])
  }
  function _new[969610]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1838652]:NilThrownError[168029] "temp"
    val ret[969649]:NilThrownError[168029] "dead after last mention" "RVV" "temp"
    val initTemp[969612]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969656]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969659 'move' call_tmp[969656](969668 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969671]:c_void_ptr[149] "dead after last mention" "temp"
    (969673 'move' cast_tmp[969671](969624 call chpl_here_alloc[187788] call_tmp[969656] 2))
    (969627 'move' initTemp[969612](969675 'cast' NilThrownError[168029] cast_tmp[969671]))
    (969629 'setcid' initTemp[969612])
    (969613 call init[811847] initTemp[969612])
    val tmp[969631]:NilThrownError[168029] "dead after last mention" "temp"
    (969638 'move' tmp[969631] initTemp[969612])
    (969654 'move' ret[969649] tmp[969631])
    (969651 return ret[969649])
  }
  type NilThrownError[168029] val super[355741]:Error[167984] "super class"
  function DecodeError[168140].message[168115](const in arg this[168142]:DecodeError[168140], ref arg _retArg[1876380]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522174]:string[26] "dead after last mention" "RVV" "temp"
    (522179 'move' ret[522174](1876384 call chpl__initCopy[981409] "Invalid UTF-8 character encountered."))
    (1876382 '=' _retArg[1876380] ret[522174])
    (1876386 return _void[55])
  }
  function DecodeError[168140].init[812159](const in arg this[812162]:DecodeError[168140]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812175]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (812177 'move' super_tmp[812175](812174 '.v' this[812162] super[355747]))
    (812172 call init[167942] super_tmp[812175])
    val tmp[812180]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[812218]:Error[167984] "dead at end of block" "maybe param" "temp"
    (812221 'move' call_tmp[812218](812191 'cast' Error[167984] this[812162]))
    val chpl__thisAsParent[812188]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (812209 'move' chpl__thisAsParent[812188] call_tmp[812218])
    (812194 'setcid' chpl__thisAsParent[812188])
    (812196 'setcid' this[812162])
    (812207 return _void[55])
  }
  function DecodeError[168140].deinit[812223](const in arg this[812227]:DecodeError[168140]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848325]
    val _parent_destructor_tmp_[1848320]:Error[167984] "temp"
    (1848327 'move' _parent_destructor_tmp_[1848320](1848321 'cast' Error[167984] this[812227]))
    (1848329 call deinit[811807] _parent_destructor_tmp_[1848320])
    (812235 return _void[55])
  }
  function _new[965703]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1838646]:DecodeError[168140] "temp"
    val ret[965739]:DecodeError[168140] "dead after last mention" "RVV" "temp"
    val initTemp[965705]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965749 'move' call_tmp[965746](965760 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965763]:c_void_ptr[149] "dead after last mention" "temp"
    (965765 'move' cast_tmp[965763](965717 call chpl_here_alloc[187788] call_tmp[965746] 1))
    (965720 'move' initTemp[965705](965767 'cast' DecodeError[168140] cast_tmp[965763]))
    (965722 'setcid' initTemp[965705])
    (965706 call init[812159] initTemp[965705])
    val tmp[965724]:DecodeError[168140] "dead after last mention" "temp"
    (965728 'move' tmp[965724] initTemp[965705])
    (965744 'move' ret[965739] tmp[965724])
    (965741 return ret[965739])
  }
  type DecodeError[168140] val super[355747]:Error[167984] "super class"
  function IllegalArgumentError[168246].init[168163](const in arg this[168252]:IllegalArgumentError[168246], const  ref arg info[168160]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462597]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462599 'move' super_tmp[462597](462596 '.v' this[168252] super[355749]))
    (168171 call init[167958] super_tmp[462597] info[168160])
    val tmp[462602]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679490]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679493 'move' call_tmp[679490](462613 'cast' Error[167984] this[168252]))
    val chpl__thisAsParent[462610]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544615 'move' chpl__thisAsParent[462610] call_tmp[679490])
    (462616 'setcid' chpl__thisAsParent[462610])
    (462618 'setcid' this[168252])
    (522183 return _void[55])
  }
  function IllegalArgumentError[168246].init[168182](const in arg this[168256]:IllegalArgumentError[168246], const  ref arg formal[168179]:string[26], const  ref arg info[168185]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679495]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863328]:string[26] "temp"
    (168206 call +[38345] "illegal argument '" formal[168179] ret_tmp[1863328])
    (1863331 'move' call_tmp[679495] ret_tmp[1863328])
    const-val call_tmp[679500]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863334]:string[26] "temp"
    (168225 call +[38345] call_tmp[679495] "': " ret_tmp[1863334])
    (1863337 'move' call_tmp[679500] ret_tmp[1863334])
    const-val call_tmp[679505]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863340]:string[26] "temp"
    (168228 call +[38345] call_tmp[679500] info[168185] ret_tmp[1863340])
    (1863343 'move' call_tmp[679505] ret_tmp[1863340])
    const-val msg[168230]:string[26] "dead at end of block" "insert auto destroy"
    (544617 'move' msg[168230] call_tmp[679505])
    val super_tmp[462621]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462623 'move' super_tmp[462621](462620 '.v' this[168256] super[355749]))
    (168241 call init[167958] super_tmp[462621] msg[168230])
    val tmp[462626]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679517]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679520 'move' call_tmp[679517](462637 'cast' Error[167984] this[168256]))
    val chpl__thisAsParent[462634]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544619 'move' chpl__thisAsParent[462634] call_tmp[679517])
    (462640 'setcid' chpl__thisAsParent[462634])
    (462642 'setcid' this[168256])
    (1876941 call chpl__autoDestroy[1562275] msg[168230])
    (1876944 call chpl__autoDestroy[1562275] call_tmp[679500])
    (1876947 call chpl__autoDestroy[1562275] call_tmp[679495])
    (522185 return _void[55])
  }
  function IllegalArgumentError[168246].deinit[812263](const in arg this[812267]:IllegalArgumentError[168246]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848337]
    val _parent_destructor_tmp_[1848332]:Error[167984] "temp"
    (1848339 'move' _parent_destructor_tmp_[1848332](1848333 'cast' Error[167984] this[812267]))
    (1848341 call deinit[811807] _parent_destructor_tmp_[1848332])
    (812275 return _void[55])
  }
  function _new[1064168](const  ref arg info[1064177]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1838826]:IllegalArgumentError[168246] "temp"
    val ret[1064207]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1064170]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064217 'move' call_tmp[1064214](1064228 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064231]:c_void_ptr[149] "dead after last mention" "temp"
    (1064233 'move' cast_tmp[1064231](1064185 call chpl_here_alloc[187788] call_tmp[1064214] 26))
    (1064188 'move' initTemp[1064170](1064235 'cast' IllegalArgumentError[168246] cast_tmp[1064231]))
    (1064190 'setcid' initTemp[1064170])
    (1064171 call init[168163] initTemp[1064170] info[1064177])
    val tmp[1064192]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1064196 'move' tmp[1064192] initTemp[1064170])
    (1064212 'move' ret[1064207] tmp[1064192])
    (1064209 return ret[1064207])
  }
  function _new[1073563](const  ref arg formal[1073572]:string[26], const  ref arg info[1073575]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1838836]:IllegalArgumentError[168246] "temp"
    val ret[1073603]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1073565]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073613 'move' call_tmp[1073610](1073624 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073627]:c_void_ptr[149] "dead after last mention" "temp"
    (1073629 'move' cast_tmp[1073627](1073581 call chpl_here_alloc[187788] call_tmp[1073610] 26))
    (1073584 'move' initTemp[1073565](1073631 'cast' IllegalArgumentError[168246] cast_tmp[1073627]))
    (1073586 'setcid' initTemp[1073565])
    (1073566 call init[168182] initTemp[1073565] formal[1073572] info[1073575])
    val tmp[1073588]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073592 'move' tmp[1073588] initTemp[1073565])
    (1073608 'move' ret[1073603] tmp[1073588])
    (1073605 return ret[1073603])
  }
  type IllegalArgumentError[168246] val super[355749]:Error[167984] "super class"
  function _ref(chpl_TaskErrors)[941001].append[168282](ref arg this[168350]:_ref(chpl_TaskErrors)[941001], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[168323]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[679522]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679525 'move' call_tmp[679522](168320 '_wide_get_locale' this[168350]))
    (168325 'move' tmp[168323] call_tmp[679522])
    val isdirect[2148168]:bool[10] "temp"
    (2148173 'move' isdirect[2148168](2148170 call chpl_doDirectExecuteOn[187469] tmp[168323]))
    if isdirect[2148168]
    {
      (2148177 call on_fn[935399] this[168350] err[168279])
    }
    {
      val _args_foron_fn[2148195]:_class_localson_fn[2148185] "temp"
      (2148199 'move' _args_foron_fn[2148195](2148197 'stack allocate class' _class_localson_fn[2148185]))
      (2148201 '.=' _args_foron_fn[2148195] _0_tmp[2148188] tmp[168323])
      ref tmp[2148205]:chpl_TaskErrors[168348] "temp"
      (2148209 'move' tmp[2148205](2148207 'set reference' this[168350]))
      (2148211 '.=' _args_foron_fn[2148195] _1_this[2148190] tmp[2148205])
      (2148215 '.=' _args_foron_fn[2148195] _2_err[2148192] err[168279])
      val _args_vforon_fn[2148219]:c_void_ptr[149] "temp"
      (2148223 'move' _args_vforon_fn[2148219](2148221 'cast_to_void_star' _args_foron_fn[2148195]))
      val _args_sizeon_fn[2148225]:int(64)[13] "temp"
      (2148229 'move' _args_sizeon_fn[2148225](2148227 'sizeof_bundle' _class_localson_fn[2148185]))
      on(2148269 call wrapon_fn[2148231] tmp[168323] _args_vforon_fn[2148219] _args_sizeon_fn[2148225] _args_foron_fn[2148195])
    }
    {
    }
    (522187 return _void[55])
  }
  function _ref(chpl_TaskErrors)[941001].empty[168336](const  ref arg this[168354]:_ref(chpl_TaskErrors)[941001]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522191]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679568]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
    (679571 'move' call_tmp[679568](388525 call _head[812277] this[168354]))
    const-val call_tmp[679573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235619]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235623 'move' coerce_tmp[1235619](1235621 'deref' call_tmp[679568]))
    val coerce_tmp[1235625]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235630 'move' coerce_tmp[1235625](1235627 'cast' object[22] coerce_tmp[1235619]))
    (679576 'move' call_tmp[679573](168340 call ==[1146] coerce_tmp[1235625] nil[44]))
    (522196 'move' ret[522191] call_tmp[679573])
    (522193 return ret[522191])
  }
  function _ref(chpl_TaskErrors)[941001]._head[812277](ref arg this[812281]:_ref(chpl_TaskErrors)[941001]) ref : _ref(Error)[941081] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812291]:_ref(Error)[941081] "dead after last mention" "RVV" "temp"
    ref call_tmp[812298]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
    (812301 'move' call_tmp[812298](812285 '.' this[812281] _head[168266]))
    (812296 'move' ret[812291] call_tmp[812298])
    (812293 return ret[812291])
  }
  function _ref(chpl_TaskErrors)[941001]._errorsLock[812303](ref arg this[812307]:_ref(chpl_TaskErrors)[941001]) ref : _ref(chpl_LocalSpinlock)[941132] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812317]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "RVV" "temp"
    ref call_tmp[812324]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
    (812327 'move' call_tmp[812324](812311 '.' this[812307] _errorsLock[168271]))
    (812322 'move' ret[812317] call_tmp[812324])
    (812319 return ret[812317])
  }
  function _ref(chpl_TaskErrors)[941001].init[812329](ref arg this[812332]:_ref(chpl_TaskErrors)[941001], in arg _head[812335]:Error[167984], const  ref arg _errorsLock[812350]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945237]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945240 'move' _formal_tmp__errorsLock[945237] _errorsLock[812350])
    (812364 '.=' this[812332] _head[168266] _head[812335])
    (812367 '.=' this[812332] _errorsLock[168271] _formal_tmp__errorsLock[945237])
    (812371 return _void[55])
  }
  function init_default__errorsLock[941112](ref arg _retArg[1865538]:_ref(chpl_LocalSpinlock)[941132]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[941114]:chpl_LocalSpinlock[187432] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[941119]:chpl_LocalSpinlock[187432] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[945202]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1865544]:AtomicBool[45877] "temp"
    (945204 call init_default_l[944889] ret_tmp[1865544])
    (1865547 'move' default_arg_l[945202] ret_tmp[1865544])
    (944879 call init[820382] _errorsLock[941119] default_arg_l[945202])
    (944875 'move' ret[941114] _errorsLock[941119])
    (1865540 '=' _retArg[1865538] ret[941114])
    (1865542 return _void[55])
  }
  function init_default__head[941031]() : Error[167984] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[941033]:Error[167984] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[941038]:Error[167984] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[941042]:Error[167984] "dead after last mention" "temp"
    val _formal_type[941044]:Error[167984] "dead after last mention" "temp" "type variable"
    (941052 'move' tmp[941042](941100 'cast' Error[167984] nil[44]))
    (941055 'move' _head[941038] tmp[941042])
    (941097 'move' ret[941033] _head[941038])
    (941036 return ret[941033])
  }
  function _ref(chpl_TaskErrors)[941001].deinit[812438](const  ref arg this[812442]:_ref(chpl_TaskErrors)[941001]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1848346]
    ref _field_destructor_tmp_[1848344]:_ref(chpl_LocalSpinlock)[941132] "temp"
    (1848351 'move' _field_destructor_tmp_[1848344](1848348 '.' this[812442] _errorsLock[168271]))
    (1848353 call deinit[820455] _field_destructor_tmp_[1848344])
    (812450 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:Error[167984] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function TaskErrors[169702].init[168384](const in arg this[169704]:TaskErrors[169702], ref arg group[168381]:_ref(chpl_TaskErrors)[941001]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462688]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462696 'move' super_tmp[462688](462689 '.v' this[169704] super[355751]))
    (462692 call init[167942] super_tmp[462688])
    val tmp[462648]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679583]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679586 'move' call_tmp[679583](462659 'cast' Error[167984] this[169704]))
    val chpl__thisAsParent[462656]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544623 'move' chpl__thisAsParent[462656] call_tmp[679583])
    (462662 'setcid' chpl__thisAsParent[462656])
    ref call_tmp[679590]:_ref(Error)[941081] "dead at end of block" "maybe param" "temp"
    (679593 'move' call_tmp[679590](168392 call _head[812277] group[168381]))
    val head[168395]:Error[167984] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1237262]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1237266 'move' coerce_tmp[1237262](1237264 'deref' call_tmp[679590]))
    (1876950 '=' head[168395] coerce_tmp[1237262])
    (544625 'noop')
    ref call_tmp[679597]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
    (679600 'move' call_tmp[679597](168401 call _head[812277] group[168381]))
    (168405 call =[1237270] call_tmp[679597] nil[44])
    val tmp[462664]:int(64)[13] "dead after last mention" "temp"
    (1241028 'move' tmp[462664] 0)
    (462669 '.=' this[169704] nErrors[168363] tmp[462664])
    val tmp[462673]:c_ptr(owned Error?)[1235676] "dead after last mention" "temp"
    val call_tmp[679602]:owned Error?[966474] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679607]:c_ptr(owned Error?)[1235676] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1241033 'move' tmp[462673](1241031 'cast' c_ptr(owned Error?)[1235676] nil[44]))
    (462682 '.=' this[169704] errorsArray[168374] tmp[462673])
    (462687 'setcid' this[169704])
    val cur[168418]:Error[167984] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544627]:Error[167984] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168423]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544641 'move' n[168423] 0)
    (544638 'move' cur[168418] head[168395])
    {
      val tmp[168533]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1237336]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237341 'move' coerce_tmp[1237336](1237338 'cast' object[22] cur[168418]))
      (679615 'move' call_tmp[679612](168554 call !=[1485] coerce_tmp[1237336] nil[44]))
      (168557 'move' tmp[168533] call_tmp[679612])
      WhileDo[168538]
      {
        {
          val call_tmp[679617]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679620 'move' call_tmp[679617](168437 call postfix![967835] cur[168418]))
          ref call_tmp[679624]:_ref(Error)[941081] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237345]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237350 'move' coerce_tmp[1237345] call_tmp[679617])
          (679627 'move' call_tmp[679624](168439 call _next[811677] coerce_tmp[1237345]))
          val curnext[168442]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1237355]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1237359 'move' coerce_tmp[1237355](1237357 'deref' call_tmp[679624]))
          (1876953 '=' curnext[168442] coerce_tmp[1237355])
          (544643 'noop')
          val call_tmp[679629]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237538]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237543 'move' coerce_tmp[1237538] cur[168418])
          (679632 'move' call_tmp[679629](168454 call _cast[1237439] coerce_tmp[1237538]))
          val asTaskErr[168456]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544645 'move' asTaskErr[168456] call_tmp[679629])
          const-val call_tmp[679634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1237669]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1237674 'move' coerce_tmp[1237669](1237671 'cast' object[22] asTaskErr[168456]))
          (679637 'move' call_tmp[679634](168462 call ==[1146] coerce_tmp[1237669] nil[44]))
          const-val call_tmp[679639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679642 'move' call_tmp[679639] call_tmp[679634])
          if call_tmp[679639]
          {
            (168466 call +=[451358] n[168423] 1)
          }
          {
            {
              ref _indexOfInterest[168489]:_ref(owned Error?)[966483] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168490]:_ic_these_TaskErrors[1238037] "dead at end of block" "expr temp" "temp"
              val call_tmp[679644]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679647 'move' call_tmp[679644] asTaskErr[168456])
              (168499 'move' _iterator[168490](168497 call _getIterator[1237993] call_tmp[679644]))
              {
                val ret[1941852]:_ir_these_TaskErrors[1238043] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1941854]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1941856]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1941858]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                const-val this[1942035]:TaskErrors[169702] "temp"
                (1942040 'move' this[1942035](1942037 '.v' _iterator[168490] F0_this[2053870]))
                (1941860 'move' call_tmp[1941858](1941863 call nErrors[814092] this[1942035]))
                const-val call_tmp[1941865]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1941867]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1941869 'move' coerce_tmp[1941867](1941871 'deref' call_tmp[1941858]))
                const-val ret_tmp[1941873]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                (1941876 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1941867] ret_tmp[1941873])
                (1941880 'move' call_tmp[1941865] ret_tmp[1941873])
                (1941883 'move' _iterator[1941856](1941886 call _getIterator[1103866] call_tmp[1941865]))
                {
                  val ret[2008658]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[2008660]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2008662]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2008664]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2008666]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                  const-val low[2009143]:int(64)[13] "temp"
                  (2009148 'move' low[2009143](2009145 '.v' _iterator[1941856] F0_low[2058106]))
                  const-val count[2009150]:int(64)[13] "temp"
                  (2009155 'move' count[2009150](2009152 '.v' _iterator[1941856] F1_count[2058110]))
                  (2008669 call chpl_direct_counted_range_iter_helper[1102159] low[2009143] count[2009150] ret_tmp[2008666])
                  (2008673 'move' call_tmp[2008664] ret_tmp[2008666])
                  (2008676 'move' _iterator[2008662](2008679 call _getIterator[1103616] call_tmp[2008664]))
                  {
                    val ret[2008682]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                    val call_tmp[2008684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[2008686]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2008688]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2008690]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2008692]:int(64)[13] "temp"
                    (2008694 'move' count[2008692](2008696 '.v' _iterator[2008662] F1_count[2064268]))
                    (2008699 'move' call_tmp[2008690](2008702 call <[948459] count[2008692]))
                    (2008704 'move' tmp[2008688] call_tmp[2008690])
                    (2008707 'move' tmp[2008686] call_tmp[2008690])
                    const-val call_tmp[2008710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2008712 'move' call_tmp[2008710] call_tmp[2008690])
                    if call_tmp[2008690]
                    {
                      (2008718 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[2008721]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[2008723]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[2008725]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2008727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2008729]:int(64)[13] "temp"
                    (2008731 'move' count[2008729](2008733 '.v' _iterator[2008662] F1_count[2064268]))
                    (2008736 'move' call_tmp[2008727](2008739 call ==[435671] count[2008729] 0))
                    (2008742 'move' tmp[2008725] call_tmp[2008727])
                    if call_tmp[2008727]
                    {
                      const-val tmp[2008747]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2008749]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2008751]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2008753]:int(64)[13] "temp"
                      (2008755 'move' low[2008753](2008757 '.v' _iterator[2008662] F0_low[2064264]))
                      (2008760 'move' call_tmp[2008751](2008763 call _cast[956095] low[2008753]))
                      const-val call_tmp[2008765]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[2008767]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (2008769 'move' coerce_tmp[2008767](2008771 'cast' uint(64)[115] 1))
                      (2008774 'move' call_tmp[2008765](2008777 call -[962254] call_tmp[2008751]))
                      const-val call_tmp[2008779]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2008781 'move' call_tmp[2008779](2008784 call _cast[953604] call_tmp[2008765]))
                      const-val ret_tmp[2008786]:2*int(64)[1040117] "temp"
                      const-val low[2008788]:int(64)[13] "temp"
                      (2008790 'move' low[2008788](2008792 '.v' _iterator[2008662] F0_low[2064264]))
                      (2008796 call _build_tuple[1040075] low[2008788] call_tmp[2008779] ret_tmp[2008786])
                      (2008800 'move' tmp[2008747] ret_tmp[2008786])
                      (2008803 'move' tmp[2008723] tmp[2008747])
                    }
                    {
                      const-val tmp[2008807]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2008809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2008811]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2008813]:int(64)[13] "temp"
                      (2008815 'move' count[2008813](2008817 '.v' _iterator[2008662] F1_count[2064268]))
                      (2008820 'move' call_tmp[2008811] count[2008813])
                      const-val call_tmp[2008823]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2008825]:int(64)[13] "temp"
                      (2008827 'move' count[2008825](2008829 '.v' _iterator[2008662] F1_count[2064268]))
                      (2008832 'move' call_tmp[2008823](2008835 call -[962287] count[2008825]))
                      const-val call_tmp[2008837]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2008839]:int(64)[13] "temp"
                      (2008841 'move' low[2008839](2008843 '.v' _iterator[2008662] F0_low[2064264]))
                      (2008846 'move' call_tmp[2008837](2008849 call +[439679] low[2008839] call_tmp[2008823]))
                      const-val ret_tmp[2008852]:2*int(64)[1040117] "temp"
                      const-val low[2008854]:int(64)[13] "temp"
                      (2008856 'move' low[2008854](2008858 '.v' _iterator[2008662] F0_low[2064264]))
                      (2008862 call _build_tuple[1040075] low[2008854] call_tmp[2008837] ret_tmp[2008852])
                      (2008866 'move' tmp[2008807] ret_tmp[2008852])
                      (2008869 'move' tmp[2008723] tmp[2008807])
                    }
                    (2008873 '=' tmp[2008721] tmp[2008723])
                    (2008876 'noop')
                    1
                    ref call_tmp[2008878]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2008880 'move' call_tmp[2008878](2008882 '.' tmp[2008721] x0[1040113]))
                    const-val start[2008885]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2008887]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2008889 'move' coerce_tmp[2008887](2008891 'deref' call_tmp[2008878]))
                    (2008893 '=' start[2008885] coerce_tmp[2008887])
                    (2008896 'noop')
                    ref call_tmp[2008897]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2008899 'move' call_tmp[2008897](2008901 '.' tmp[2008721] x1[1040115]))
                    const-val end[2008904]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2008906]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2008908 'move' coerce_tmp[2008906](2008910 'deref' call_tmp[2008897]))
                    (2008912 '=' end[2008904] coerce_tmp[2008906])
                    (2008915 'noop')
                    val _indexOfInterest[2008916]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[2008918]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[2008920]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[2008922]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                    (2008925 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2008887] coerce_tmp[2008906] ret_tmp[2008922])
                    (2008929 'move' call_tmp[2008920] ret_tmp[2008922])
                    (2008932 'move' _iterator[2008918](2008935 call _getIterator[1103362] call_tmp[2008920]))
                    {
                      val ret[2041812]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                      val call_tmp[2041814]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2041817 call chpl_range_check_stride[1102905])
                      val i[2041818]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[2041820]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2041822 'move' i[2041818] 0)
                      val call_tmp[2041825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[2041827]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[2042062]:int(64)[13] "temp"
                      (2042067 'move' low[2042062](2042064 '.v' _iterator[2008918] F0_low[2065762]))
                      (2041829 'move' default_arg_first[2041827](2041832 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2042062]))
                      const-val default_arg_last[2041834]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[2042069]:int(64)[13] "temp"
                      (2042074 'move' high[2042069](2042071 '.v' _iterator[2008918] F1_high[2065766]))
                      (2041836 'move' default_arg_last[2041834](2041839 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2042069]))
                      const-val _return_tmp_[2041841]:bool[10] "dead after last mention" "temp"
                      const-val low[2042076]:int(64)[13] "temp"
                      (2042081 'move' low[2042076](2042078 '.v' _iterator[2008918] F0_low[2065762]))
                      const-val high[2042083]:int(64)[13] "temp"
                      (2042088 'move' high[2042083](2042085 '.v' _iterator[2008918] F1_high[2065766]))
                      (2041843 'move' _return_tmp_[2041841](2041846 call chpl_checkIfRangeIterWillOverflow[1096137] low[2042076] high[2042083] 1 default_arg_first[2041827] default_arg_last[2041834] 1))
                      CForLoop[2041853]
                      {
                        const-val yret[2041868]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2041870 'move' yret[2041868] i[2041818])
                        const-val _yieldedIndex[2041884]:int(64)[13] "temp"
                        (2042060 'move' _yieldedIndex[2041884] i[2041818])
                        {
                          const-val i[2041886]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2041888 'move' i[2041886] _yieldedIndex[2041884])
                          const-val yret[2041891]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2041893 'move' yret[2041891] _yieldedIndex[2041884])
                          const-val _yieldedIndex[2041896]:int(64)[13] "temp"
                          (2041898 'move' _yieldedIndex[2041896] _yieldedIndex[2041884])
                          {
                            const-val i[2041902]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2041904 'move' i[2041902] _yieldedIndex[2041896])
                            const-val yret[2041907]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2041909 'move' yret[2041907] _yieldedIndex[2041896])
                            const-val _yieldedIndex[2041912]:int(64)[13] "temp"
                            (2041914 'move' _yieldedIndex[2041912] _yieldedIndex[2041896])
                            {
                              const-val i[2041918]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2041920 'move' i[2041918] _yieldedIndex[2041912])
                              ref call_tmp[2041923]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[2041925]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                              const-val this[2041927]:TaskErrors[169702] "temp"
                              (2041929 'move' this[2041927](2041931 '.v' _iterator[168490] F0_this[2053870]))
                              (2041934 'move' _this_tmp_[2041925](2041937 call errorsArray[814118] this[2041927]))
                              val coerce_tmp[2041939]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2041941 'move' coerce_tmp[2041939](2041943 'deref' _this_tmp_[2041925]))
                              (2041945 'move' call_tmp[2041923](2041948 call this[1235814] coerce_tmp[2041939] _yieldedIndex[2041912]))
                              const-val call_tmp[2041951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[2041953]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2041955 'move' coerce_tmp[2041953](2041958 call borrow[1235889] call_tmp[2041923]))
                              val coerce_tmp[2041960]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2041962 'move' coerce_tmp[2041960](2041964 'cast' object[22] coerce_tmp[2041953]))
                              (2041967 'move' call_tmp[2041951](2041970 call !=[1485] coerce_tmp[2041960] nil[44]))
                              const-val call_tmp[2041973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2041975 'move' call_tmp[2041973] call_tmp[2041951])
                              if call_tmp[2041951]
                              {
                                ref yret[2041980]:_ref(owned Error?)[966483] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2041982]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2041984]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                                const-val this[2041986]:TaskErrors[169702] "temp"
                                (2041988 'move' this[2041986](2041990 '.v' _iterator[168490] F0_this[2053870]))
                                (2041993 'move' _this_tmp_[2041984](2041996 call errorsArray[814118] this[2041986]))
                                val coerce_tmp[2041998]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2042000 'move' coerce_tmp[2041998](2042002 'deref' _this_tmp_[2041984]))
                                (2042004 'move' call_tmp[2041982](2042007 call this[1235814] coerce_tmp[2041998] i[2041918]))
                                ref _yieldedIndex[2042010]:_ref(owned Error?)[966483] "temp"
                                (2042012 'move' _yieldedIndex[2042010] call_tmp[2041982])
                                {
                                  ref e[2042016]:_ref(owned Error?)[966483] "index var" "insert auto destroy"
                                  (2042018 'move' e[2042016] _yieldedIndex[2042010])
                                  {
                                    const-val call_tmp[2042022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[2042024]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2042026 'move' coerce_tmp[2042024](2042029 call borrow[1235889] e[2042016]))
                                    val coerce_tmp[2042031]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2042033 'move' coerce_tmp[2042031](2042035 'cast' object[22] coerce_tmp[2042024]))
                                    (2042038 'move' call_tmp[2042022](2042041 call !=[1485] coerce_tmp[2042031] nil[44]))
                                    const-val call_tmp[2042044]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2042046 'move' call_tmp[2042044] call_tmp[2042022])
                                    if call_tmp[2042044]
                                    {
                                      (2042052 call +=[451358] n[168423] 1)
                                    }
                                  }
                                  label _continueLabel[2042056]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[2042090]:int(64)[13] "temp"
                          (2042095 'move' low[2042090](2042092 '.v' _iterator[2008918] F0_low[2065762]))
                          (2041855 '=' i[2041818] low[2042090])
                        }
                        {
                          const-val high[2042097]:int(64)[13] "temp"
                          (2042102 'move' high[2042097](2042099 '.v' _iterator[2008918] F1_high[2065766]))
                          (2041859 '<=' i[2041818] high[2042097])
                        }
                        {
                          val call_tmp[2041863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2041865 '+=' i[2041818] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[2041880]
                    }
                    (2008983 call _freeIterator[1103535] _iterator[2008918])
                    (2008986 call chpl__autoDestroy[1635435] tmp[2008721])
                    label _endchpl_direct_counted_range_iter_helper[2008988]
                  }
                  (2008991 call _freeIterator[1103785] _iterator[2008662])
                  label _endchpl_direct_counted_range_iter[2008993]
                }
                (1941984 call _freeIterator[1104035] _iterator[1941856])
                label _endthese[1941986]
              }
              label _breakLabel[168495]
              (1876962 call _freeIterator[1238294] _iterator[168490])
            }
          }
          (168530 call =[1232507] cur[168418] curnext[168442])
        }
        label _continueLabel[168536]
        const-val call_tmp[679659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1238379]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1238384 'move' coerce_tmp[1238379](1238381 'cast' object[22] cur[168418]))
        (679662 'move' call_tmp[679659](168544 call !=[1485] coerce_tmp[1238379] nil[44]))
        (168547 'move' tmp[168533] call_tmp[679659])
        tmp[168533]
      }
      label _breakLabel[168537]
    }
    ref call_tmp[679666]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (679669 'move' call_tmp[679666](388553 call nErrors[814092] this[169704]))
    (168562 call =[435370] call_tmp[679666] n[168423])
    ref call_tmp[679673]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "maybe param" "temp"
    (679676 'move' call_tmp[679673](388561 call errorsArray[814118] this[169704]))
    val call_tmp[679678]:owned Error?[966474] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679683]:c_ptr(owned Error?)[1235676] "dead after last mention" "expr temp" "maybe param" "temp"
    (679686 'move' call_tmp[679683](168573 call c_calloc[1238398] n[168423]))
    (168574 call =[1238723] call_tmp[679673] call_tmp[679683])
    val idx[168578]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544647 'move' idx[168578] 0)
    (168584 call =[1232507] cur[168418] head[168395])
    {
      val tmp[168729]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1238751]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1238756 'move' coerce_tmp[1238751](1238753 'cast' object[22] cur[168418]))
      (679691 'move' call_tmp[679688](168750 call !=[1485] coerce_tmp[1238751] nil[44]))
      (168753 'move' tmp[168729] call_tmp[679688])
      WhileDo[168734] hazard
      {
        {
          val call_tmp[679693]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679696 'move' call_tmp[679693](168592 call postfix![967835] cur[168418]))
          ref call_tmp[679700]:_ref(Error)[941081] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238760]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238765 'move' coerce_tmp[1238760] call_tmp[679693])
          (679703 'move' call_tmp[679700](168594 call _next[811677] coerce_tmp[1238760]))
          val curnext[168597]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1238770]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1238774 'move' coerce_tmp[1238770](1238772 'deref' call_tmp[679700]))
          (1876956 '=' curnext[168597] coerce_tmp[1238770])
          (544649 'noop')
          val call_tmp[679705]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
          (679708 'move' call_tmp[679705](168603 call postfix![967835] cur[168418]))
          ref call_tmp[679712]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1238778]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238783 'move' coerce_tmp[1238778] call_tmp[679705])
          (679715 'move' call_tmp[679712](168605 call _next[811677] coerce_tmp[1238778]))
          (168609 call =[1237270] call_tmp[679712] nil[44])
          val call_tmp[679717]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238787]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238792 'move' coerce_tmp[1238787] cur[168418])
          (679720 'move' call_tmp[679717](168619 call _cast[1237439] coerce_tmp[1238787]))
          val asTaskErr[168621]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544651 'move' asTaskErr[168621] call_tmp[679717])
          const-val call_tmp[679722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1238798]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238803 'move' coerce_tmp[1238798](1238800 'cast' object[22] asTaskErr[168621]))
          (679725 'move' call_tmp[679722](168627 call ==[1146] coerce_tmp[1238798] nil[44]))
          const-val call_tmp[679727]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679730 'move' call_tmp[679727] call_tmp[679722])
          if call_tmp[679727]
          {
            ref call_tmp[679734]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1238807]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
            (1238809 'move' _this_tmp_[1238807](388577 call errorsArray[814118] this[169704]))
            val coerce_tmp[1238814]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1238818 'move' coerce_tmp[1238814](1238816 'deref' _this_tmp_[1238807]))
            (679737 'move' call_tmp[679734](168632 call this[1235814] coerce_tmp[1238814] idx[168578]))
            val call_tmp[679741]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
            (679744 'move' call_tmp[679741](168637 call postfix![967835] cur[168418]))
            (168640 call retain[1238836] call_tmp[679734] call_tmp[679741])
            (168645 call +=[451358] idx[168578] 1)
          }
          {
            {
              ref _indexOfInterest[168680]:_ref(owned Error?)[966483] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168681]:_ic_these_TaskErrors[1238037] "dead at end of block" "expr temp" "temp"
              val call_tmp[679746]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679749 'move' call_tmp[679746] asTaskErr[168621])
              const-val call_tmp[679753]:_ir_these_TaskErrors[1238043] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1239074]:TaskErrors[169702] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1239079 'move' coerce_tmp[1239074] call_tmp[679746])
              const-val ret_tmp[1864664]:_ir_these_TaskErrors[1238043] "temp"
              (168656 call these[168908] coerce_tmp[1239074] ret_tmp[1864664])
              (1864667 'move' call_tmp[679753] ret_tmp[1864664])
              (168690 'move' _iterator[168681](168688 call _getIterator[1238052] call_tmp[679753]))
              {
                val ret[1942057]:_ir_these_TaskErrors[1238043] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1942059]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1942061]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1942063]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
                const-val this[1942265]:TaskErrors[169702] "temp"
                (1942270 'move' this[1942265](1942267 '.v' _iterator[168681] F0_this[2053870]))
                (1942065 'move' call_tmp[1942063](1942068 call nErrors[814092] this[1942265]))
                const-val call_tmp[1942070]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1942072]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1942074 'move' coerce_tmp[1942072](1942076 'deref' call_tmp[1942063]))
                const-val ret_tmp[1942078]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
                (1942081 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1942072] ret_tmp[1942078])
                (1942085 'move' call_tmp[1942070] ret_tmp[1942078])
                (1942088 'move' _iterator[1942061](1942091 call _getIterator[1103866] call_tmp[1942070]))
                {
                  val ret[2009158]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[2009160]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2009162]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2009164]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2009166]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
                  const-val low[2009668]:int(64)[13] "temp"
                  (2009673 'move' low[2009668](2009670 '.v' _iterator[1942061] F0_low[2058106]))
                  const-val count[2009675]:int(64)[13] "temp"
                  (2009680 'move' count[2009675](2009677 '.v' _iterator[1942061] F1_count[2058110]))
                  (2009169 call chpl_direct_counted_range_iter_helper[1102159] low[2009668] count[2009675] ret_tmp[2009166])
                  (2009173 'move' call_tmp[2009164] ret_tmp[2009166])
                  (2009176 'move' _iterator[2009162](2009179 call _getIterator[1103616] call_tmp[2009164]))
                  {
                    val ret[2009182]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                    val call_tmp[2009184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[2009186]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2009188]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2009190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2009192]:int(64)[13] "temp"
                    (2009194 'move' count[2009192](2009196 '.v' _iterator[2009162] F1_count[2064268]))
                    (2009199 'move' call_tmp[2009190](2009202 call <[948459] count[2009192]))
                    (2009204 'move' tmp[2009188] call_tmp[2009190])
                    (2009207 'move' tmp[2009186] call_tmp[2009190])
                    const-val call_tmp[2009210]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2009212 'move' call_tmp[2009210] call_tmp[2009190])
                    if call_tmp[2009190]
                    {
                      (2009218 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[2009221]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[2009223]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[2009225]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2009227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2009229]:int(64)[13] "temp"
                    (2009231 'move' count[2009229](2009233 '.v' _iterator[2009162] F1_count[2064268]))
                    (2009236 'move' call_tmp[2009227](2009239 call ==[435671] count[2009229] 0))
                    (2009242 'move' tmp[2009225] call_tmp[2009227])
                    if call_tmp[2009227]
                    {
                      const-val tmp[2009247]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2009249]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2009251]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2009253]:int(64)[13] "temp"
                      (2009255 'move' low[2009253](2009257 '.v' _iterator[2009162] F0_low[2064264]))
                      (2009260 'move' call_tmp[2009251](2009263 call _cast[956095] low[2009253]))
                      const-val call_tmp[2009265]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[2009267]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (2009269 'move' coerce_tmp[2009267](2009271 'cast' uint(64)[115] 1))
                      (2009274 'move' call_tmp[2009265](2009277 call -[962254] call_tmp[2009251]))
                      const-val call_tmp[2009279]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2009281 'move' call_tmp[2009279](2009284 call _cast[953604] call_tmp[2009265]))
                      const-val ret_tmp[2009286]:2*int(64)[1040117] "temp"
                      const-val low[2009288]:int(64)[13] "temp"
                      (2009290 'move' low[2009288](2009292 '.v' _iterator[2009162] F0_low[2064264]))
                      (2009296 call _build_tuple[1040075] low[2009288] call_tmp[2009279] ret_tmp[2009286])
                      (2009300 'move' tmp[2009247] ret_tmp[2009286])
                      (2009303 'move' tmp[2009223] tmp[2009247])
                    }
                    {
                      const-val tmp[2009307]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2009309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2009311]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2009313]:int(64)[13] "temp"
                      (2009315 'move' count[2009313](2009317 '.v' _iterator[2009162] F1_count[2064268]))
                      (2009320 'move' call_tmp[2009311] count[2009313])
                      const-val call_tmp[2009323]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2009325]:int(64)[13] "temp"
                      (2009327 'move' count[2009325](2009329 '.v' _iterator[2009162] F1_count[2064268]))
                      (2009332 'move' call_tmp[2009323](2009335 call -[962287] count[2009325]))
                      const-val call_tmp[2009337]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2009339]:int(64)[13] "temp"
                      (2009341 'move' low[2009339](2009343 '.v' _iterator[2009162] F0_low[2064264]))
                      (2009346 'move' call_tmp[2009337](2009349 call +[439679] low[2009339] call_tmp[2009323]))
                      const-val ret_tmp[2009352]:2*int(64)[1040117] "temp"
                      const-val low[2009354]:int(64)[13] "temp"
                      (2009356 'move' low[2009354](2009358 '.v' _iterator[2009162] F0_low[2064264]))
                      (2009362 call _build_tuple[1040075] low[2009354] call_tmp[2009337] ret_tmp[2009352])
                      (2009366 'move' tmp[2009307] ret_tmp[2009352])
                      (2009369 'move' tmp[2009223] tmp[2009307])
                    }
                    (2009373 '=' tmp[2009221] tmp[2009223])
                    (2009376 'noop')
                    1
                    ref call_tmp[2009378]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2009380 'move' call_tmp[2009378](2009382 '.' tmp[2009221] x0[1040113]))
                    const-val start[2009385]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2009387]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2009389 'move' coerce_tmp[2009387](2009391 'deref' call_tmp[2009378]))
                    (2009393 '=' start[2009385] coerce_tmp[2009387])
                    (2009396 'noop')
                    ref call_tmp[2009397]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2009399 'move' call_tmp[2009397](2009401 '.' tmp[2009221] x1[1040115]))
                    const-val end[2009404]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2009406]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2009408 'move' coerce_tmp[2009406](2009410 'deref' call_tmp[2009397]))
                    (2009412 '=' end[2009404] coerce_tmp[2009406])
                    (2009415 'noop')
                    val _indexOfInterest[2009416]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[2009418]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[2009420]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[2009422]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                    (2009425 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2009387] coerce_tmp[2009406] ret_tmp[2009422])
                    (2009429 'move' call_tmp[2009420] ret_tmp[2009422])
                    (2009432 'move' _iterator[2009418](2009435 call _getIterator[1103362] call_tmp[2009420]))
                    {
                      val ret[2042105]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                      val call_tmp[2042107]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2042110 call chpl_range_check_stride[1102905])
                      val i[2042111]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[2042113]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2042115 'move' i[2042111] 0)
                      val call_tmp[2042118]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[2042120]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[2042380]:int(64)[13] "temp"
                      (2042385 'move' low[2042380](2042382 '.v' _iterator[2009418] F0_low[2065762]))
                      (2042122 'move' default_arg_first[2042120](2042125 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2042380]))
                      const-val default_arg_last[2042127]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[2042387]:int(64)[13] "temp"
                      (2042392 'move' high[2042387](2042389 '.v' _iterator[2009418] F1_high[2065766]))
                      (2042129 'move' default_arg_last[2042127](2042132 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2042387]))
                      const-val _return_tmp_[2042134]:bool[10] "dead after last mention" "temp"
                      const-val low[2042394]:int(64)[13] "temp"
                      (2042399 'move' low[2042394](2042396 '.v' _iterator[2009418] F0_low[2065762]))
                      const-val high[2042401]:int(64)[13] "temp"
                      (2042406 'move' high[2042401](2042403 '.v' _iterator[2009418] F1_high[2065766]))
                      (2042136 'move' _return_tmp_[2042134](2042139 call chpl_checkIfRangeIterWillOverflow[1096137] low[2042394] high[2042401] 1 default_arg_first[2042120] default_arg_last[2042127] 1))
                      CForLoop[2042146] hazard
                      {
                        const-val yret[2042161]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2042163 'move' yret[2042161] i[2042111])
                        const-val _yieldedIndex[2042177]:int(64)[13] "temp"
                        (2042378 'move' _yieldedIndex[2042177] i[2042111])
                        {
                          const-val i[2042179]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2042181 'move' i[2042179] _yieldedIndex[2042177])
                          const-val yret[2042184]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2042186 'move' yret[2042184] _yieldedIndex[2042177])
                          const-val _yieldedIndex[2042189]:int(64)[13] "temp"
                          (2042191 'move' _yieldedIndex[2042189] _yieldedIndex[2042177])
                          {
                            const-val i[2042195]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2042197 'move' i[2042195] _yieldedIndex[2042189])
                            const-val yret[2042200]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2042202 'move' yret[2042200] _yieldedIndex[2042189])
                            const-val _yieldedIndex[2042205]:int(64)[13] "temp"
                            (2042207 'move' _yieldedIndex[2042205] _yieldedIndex[2042189])
                            {
                              const-val i[2042211]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2042213 'move' i[2042211] _yieldedIndex[2042205])
                              ref call_tmp[2042216]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[2042218]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                              const-val this[2042220]:TaskErrors[169702] "temp"
                              (2042222 'move' this[2042220](2042224 '.v' _iterator[168681] F0_this[2053870]))
                              (2042227 'move' _this_tmp_[2042218](2042230 call errorsArray[814118] this[2042220]))
                              val coerce_tmp[2042232]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2042234 'move' coerce_tmp[2042232](2042236 'deref' _this_tmp_[2042218]))
                              (2042238 'move' call_tmp[2042216](2042241 call this[1235814] coerce_tmp[2042232] _yieldedIndex[2042205]))
                              const-val call_tmp[2042244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[2042246]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2042248 'move' coerce_tmp[2042246](2042251 call borrow[1235889] call_tmp[2042216]))
                              val coerce_tmp[2042253]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2042255 'move' coerce_tmp[2042253](2042257 'cast' object[22] coerce_tmp[2042246]))
                              (2042260 'move' call_tmp[2042244](2042263 call !=[1485] coerce_tmp[2042253] nil[44]))
                              const-val call_tmp[2042266]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2042268 'move' call_tmp[2042266] call_tmp[2042244])
                              if call_tmp[2042244]
                              {
                                ref yret[2042273]:_ref(owned Error?)[966483] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2042275]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2042277]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                                const-val this[2042279]:TaskErrors[169702] "temp"
                                (2042281 'move' this[2042279](2042283 '.v' _iterator[168681] F0_this[2053870]))
                                (2042286 'move' _this_tmp_[2042277](2042289 call errorsArray[814118] this[2042279]))
                                val coerce_tmp[2042291]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2042293 'move' coerce_tmp[2042291](2042295 'deref' _this_tmp_[2042277]))
                                (2042297 'move' call_tmp[2042275](2042300 call this[1235814] coerce_tmp[2042291] i[2042211]))
                                ref _yieldedIndex[2042303]:_ref(owned Error?)[966483] "temp"
                                (2042305 'move' _yieldedIndex[2042303] call_tmp[2042275])
                                {
                                  ref e[2042309]:_ref(owned Error?)[966483] "index var" "insert auto destroy"
                                  (2042311 'move' e[2042309] _yieldedIndex[2042303])
                                  {
                                    const-val call_tmp[2042315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[2042317]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2042319 'move' coerce_tmp[2042317](2042322 call borrow[1235889] e[2042309]))
                                    val coerce_tmp[2042324]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2042326 'move' coerce_tmp[2042324](2042328 'cast' object[22] coerce_tmp[2042317]))
                                    (2042331 'move' call_tmp[2042315](2042334 call !=[1485] coerce_tmp[2042324] nil[44]))
                                    const-val call_tmp[2042337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2042339 'move' call_tmp[2042337] call_tmp[2042315])
                                    if call_tmp[2042337]
                                    {
                                      ref call_tmp[2042344]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[2042346]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                                      (2042348 'move' _this_tmp_[2042346](2042351 call errorsArray[814118] this[169704]))
                                      val coerce_tmp[2042353]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (2042355 'move' coerce_tmp[2042353](2042357 'deref' _this_tmp_[2042346]))
                                      (2042359 'move' call_tmp[2042344](2042362 call this[1235814] coerce_tmp[2042353] idx[168578]))
                                      (2042366 call =[1239118] call_tmp[2042344] e[2042309])
                                      (2042370 call +=[451358] idx[168578] 1)
                                    }
                                  }
                                  label _continueLabel[2042374]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[2042408]:int(64)[13] "temp"
                          (2042413 'move' low[2042408](2042410 '.v' _iterator[2009418] F0_low[2065762]))
                          (2042148 '=' i[2042111] low[2042408])
                        }
                        {
                          const-val high[2042415]:int(64)[13] "temp"
                          (2042420 'move' high[2042415](2042417 '.v' _iterator[2009418] F1_high[2065766]))
                          (2042152 '<=' i[2042111] high[2042415])
                        }
                        {
                          val call_tmp[2042156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2042158 '+=' i[2042111] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[2042173]
                    }
                    (2009483 call _freeIterator[1103535] _iterator[2009418])
                    (2009486 call chpl__autoDestroy[1635435] tmp[2009221])
                    label _endchpl_direct_counted_range_iter_helper[2009488]
                  }
                  (2009491 call _freeIterator[1103785] _iterator[2009162])
                  label _endchpl_direct_counted_range_iter[2009493]
                }
                (1942189 call _freeIterator[1104035] _iterator[1942061])
                label _endthese[1942191]
              }
              label _breakLabel[168686]
              (1876967 call _freeIterator[1238294] _iterator[168681])
            }
            (168717 call chpl__delete[1240036] asTaskErr[168621])
          }
          (168726 call =[1232507] cur[168418] curnext[168597])
        }
        label _continueLabel[168732]
        const-val call_tmp[679775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1241019]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1241024 'move' coerce_tmp[1241019](1241021 'cast' object[22] cur[168418]))
        (679778 'move' call_tmp[679775](168740 call !=[1485] coerce_tmp[1241019] nil[44]))
        (168743 'move' tmp[168729] call_tmp[679775])
        tmp[168729]
      }
      label _breakLabel[168733]
    }
    (522198 return _void[55])
  }
  function TaskErrors[169702].init[168765](const in arg this[169708]:TaskErrors[169702], const in arg err[168762]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462743]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462751 'move' super_tmp[462743](462744 '.v' this[169708] super[355751]))
    (462747 call init[167942] super_tmp[462743])
    val tmp[462703]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679785]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679788 'move' call_tmp[679785](462714 'cast' Error[167984] this[169708]))
    val chpl__thisAsParent[462711]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544653 'move' chpl__thisAsParent[462711] call_tmp[679785])
    (462717 'setcid' chpl__thisAsParent[462711])
    val tmp[462719]:int(64)[13] "dead after last mention" "temp"
    (462722 'move' tmp[462719] 1)
    (462724 '.=' this[169708] nErrors[168363] tmp[462719])
    val call_tmp[679790]:owned Error?[966474] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679795]:c_ptr(owned Error?)[1235676] "dead after last mention" "maybe param" "temp"
    (679798 'move' call_tmp[679795](168781 call c_calloc[1238398] 1))
    val call_tmp[679800]:owned Error?[966474] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679805]:c_ptr(owned Error?)[1235676] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462728]:c_ptr(owned Error?)[1235676] "dead after last mention" "temp"
    (462735 'move' tmp[462728] call_tmp[679795])
    (462737 '.=' this[169708] errorsArray[168374] tmp[462728])
    (462742 'setcid' this[169708])
    ref call_tmp[679812]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1789265]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789270 'move' coerce_tmp[1789265] err[168762])
    (679815 'move' call_tmp[679812](168793 call _next[811677] coerce_tmp[1789265]))
    (168797 call =[1237270] call_tmp[679812] nil[44])
    ref call_tmp[679819]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1789275]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
    (1789277 'move' _this_tmp_[1789275](388613 call errorsArray[814118] this[169708]))
    val coerce_tmp[1789282]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789286 'move' coerce_tmp[1789282](1789284 'deref' _this_tmp_[1789275]))
    (679822 'move' call_tmp[679819](168803 call this[1235814] coerce_tmp[1789282] 0))
    (168809 call retain[1238836] call_tmp[679819] err[168762])
    (522200 return _void[55])
  }
  function TaskErrors[169702].deinit[168832](const in arg this[169716]:TaskErrors[169702]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679848]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "maybe param" "temp"
    (679851 'move' call_tmp[679848](388629 call errorsArray[814118] this[169716]))
    const-val call_tmp[679853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235759]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235763 'move' coerce_tmp[1235759](1235761 'deref' call_tmp[679848]))
    (679856 'move' call_tmp[679853](168899 call _cond_test[1235727] coerce_tmp[1235759]))
    if call_tmp[679853]
    {
      {
        val _indexOfInterest[168853]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168854]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679860]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
        (679863 'move' call_tmp[679860](388640 call nErrors[814092] this[169716]))
        const-val call_tmp[679865]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1235796]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1235800 'move' coerce_tmp[1235796](1235798 'deref' call_tmp[679860]))
        const-val ret_tmp[1865446]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
        (168870 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1235796] ret_tmp[1865446])
        (1865449 'move' call_tmp[679865] ret_tmp[1865446])
        (168863 'move' _iterator[168854](168861 call _getIterator[1103866] call_tmp[679865]))
        {
          val ret[1942287]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1942289]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1942291]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1942293]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1942295]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
          const-val low[1942377]:int(64)[13] "temp"
          (1942382 'move' low[1942377](1942379 '.v' _iterator[168854] F0_low[2058106]))
          const-val count[1942384]:int(64)[13] "temp"
          (1942389 'move' count[1942384](1942386 '.v' _iterator[168854] F1_count[2058110]))
          (1942298 call chpl_direct_counted_range_iter_helper[1102159] low[1942377] count[1942384] ret_tmp[1942295])
          (1942302 'move' call_tmp[1942293] ret_tmp[1942295])
          (1942305 'move' _iterator[1942291](1942308 call _getIterator[1103616] call_tmp[1942293]))
          {
            val ret[2009683]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
            val call_tmp[2009685]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2009687]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2009689]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2009691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2010080]:int(64)[13] "temp"
            (2010085 'move' count[2010080](2010082 '.v' _iterator[1942291] F1_count[2064268]))
            (2009693 'move' call_tmp[2009691](2009696 call <[948459] count[2010080]))
            (2009698 'move' tmp[2009689] call_tmp[2009691])
            (2009701 'move' tmp[2009687] call_tmp[2009691])
            const-val call_tmp[2009704]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2009706 'move' call_tmp[2009704] call_tmp[2009691])
            if call_tmp[2009691]
            {
              (2009712 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2009715]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2009717]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2009719]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2009721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2010087]:int(64)[13] "temp"
            (2010092 'move' count[2010087](2010089 '.v' _iterator[1942291] F1_count[2064268]))
            (2009723 'move' call_tmp[2009721](2009726 call ==[435671] count[2010087] 0))
            (2009729 'move' tmp[2009719] call_tmp[2009721])
            if call_tmp[2009721]
            {
              const-val tmp[2009734]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2009736]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2009738]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2010094]:int(64)[13] "temp"
              (2010099 'move' low[2010094](2010096 '.v' _iterator[1942291] F0_low[2064264]))
              (2009740 'move' call_tmp[2009738](2009743 call _cast[956095] low[2010094]))
              const-val call_tmp[2009745]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2009747]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2009749 'move' coerce_tmp[2009747](2009751 'cast' uint(64)[115] 1))
              (2009754 'move' call_tmp[2009745](2009757 call -[962254] call_tmp[2009738]))
              const-val call_tmp[2009759]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2009761 'move' call_tmp[2009759](2009764 call _cast[953604] call_tmp[2009745]))
              const-val ret_tmp[2009766]:2*int(64)[1040117] "temp"
              const-val low[2010101]:int(64)[13] "temp"
              (2010106 'move' low[2010101](2010103 '.v' _iterator[1942291] F0_low[2064264]))
              (2009769 call _build_tuple[1040075] low[2010101] call_tmp[2009759] ret_tmp[2009766])
              (2009773 'move' tmp[2009734] ret_tmp[2009766])
              (2009776 'move' tmp[2009717] tmp[2009734])
            }
            {
              const-val tmp[2009780]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2009782]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2009784]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2010108]:int(64)[13] "temp"
              (2010113 'move' count[2010108](2010110 '.v' _iterator[1942291] F1_count[2064268]))
              (2009786 'move' call_tmp[2009784] count[2010108])
              const-val call_tmp[2009789]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2010115]:int(64)[13] "temp"
              (2010120 'move' count[2010115](2010117 '.v' _iterator[1942291] F1_count[2064268]))
              (2009791 'move' call_tmp[2009789](2009794 call -[962287] count[2010115]))
              const-val call_tmp[2009796]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2010122]:int(64)[13] "temp"
              (2010127 'move' low[2010122](2010124 '.v' _iterator[1942291] F0_low[2064264]))
              (2009798 'move' call_tmp[2009796](2009801 call +[439679] low[2010122] call_tmp[2009789]))
              const-val ret_tmp[2009804]:2*int(64)[1040117] "temp"
              const-val low[2010129]:int(64)[13] "temp"
              (2010134 'move' low[2010129](2010131 '.v' _iterator[1942291] F0_low[2064264]))
              (2009807 call _build_tuple[1040075] low[2010129] call_tmp[2009796] ret_tmp[2009804])
              (2009811 'move' tmp[2009780] ret_tmp[2009804])
              (2009814 'move' tmp[2009717] tmp[2009780])
            }
            (2009818 '=' tmp[2009715] tmp[2009717])
            (2009821 'noop')
            1
            ref call_tmp[2009823]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2009825 'move' call_tmp[2009823](2009827 '.' tmp[2009715] x0[1040113]))
            const-val start[2009830]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2009832]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2009834 'move' coerce_tmp[2009832](2009836 'deref' call_tmp[2009823]))
            (2009838 '=' start[2009830] coerce_tmp[2009832])
            (2009841 'noop')
            ref call_tmp[2009842]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2009844 'move' call_tmp[2009842](2009846 '.' tmp[2009715] x1[1040115]))
            const-val end[2009849]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2009851]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2009853 'move' coerce_tmp[2009851](2009855 'deref' call_tmp[2009842]))
            (2009857 '=' end[2009849] coerce_tmp[2009851])
            (2009860 'noop')
            val _indexOfInterest[2009861]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2009863]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2009865]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2009867]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
            (2009870 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2009832] coerce_tmp[2009851] ret_tmp[2009867])
            (2009874 'move' call_tmp[2009865] ret_tmp[2009867])
            (2009877 'move' _iterator[2009863](2009880 call _getIterator[1103362] call_tmp[2009865]))
            {
              val ret[2009883]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
              val call_tmp[2009885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2009888 call chpl_range_check_stride[1102905])
              val i[2009889]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2009891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2009893 'move' i[2009889] 0)
              val call_tmp[2009896]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2009898]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2009900]:int(64)[13] "temp"
              (2009902 'move' low[2009900](2009904 '.v' _iterator[2009863] F0_low[2065762]))
              (2009907 'move' default_arg_first[2009898](2009910 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2009900]))
              const-val default_arg_last[2009912]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2009914]:int(64)[13] "temp"
              (2009916 'move' high[2009914](2009918 '.v' _iterator[2009863] F1_high[2065766]))
              (2009921 'move' default_arg_last[2009912](2009924 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2009914]))
              const-val _return_tmp_[2009926]:bool[10] "dead after last mention" "temp"
              const-val low[2009928]:int(64)[13] "temp"
              (2009930 'move' low[2009928](2009932 '.v' _iterator[2009863] F0_low[2065762]))
              const-val high[2009935]:int(64)[13] "temp"
              (2009937 'move' high[2009935](2009939 '.v' _iterator[2009863] F1_high[2065766]))
              (2009942 'move' _return_tmp_[2009926](2009945 call chpl_checkIfRangeIterWillOverflow[1096137] low[2009928] high[2009935] 1 default_arg_first[2009898] default_arg_last[2009912] 1))
              CForLoop[2009952] hazard
              {
                const-val yret[2009981]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2009983 'move' yret[2009981] i[2009889])
                const-val _yieldedIndex[2009986]:int(64)[13] "temp"
                (2009988 'move' _yieldedIndex[2009986] i[2009889])
                {
                  const-val i[2009992]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2009994 'move' i[2009992] _yieldedIndex[2009986])
                  const-val yret[2009997]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2009999 'move' yret[2009997] _yieldedIndex[2009986])
                  const-val _yieldedIndex[2010027]:int(64)[13] "temp"
                  (2010078 'move' _yieldedIndex[2010027] _yieldedIndex[2009986])
                  {
                    const-val i[2010029]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2010031 'move' i[2010029] _yieldedIndex[2010027])
                    const-val yret[2010034]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2010036 'move' yret[2010034] _yieldedIndex[2010027])
                    const-val _yieldedIndex[2010039]:int(64)[13] "temp"
                    (2010041 'move' _yieldedIndex[2010039] _yieldedIndex[2010027])
                    {
                      const-val i[2010045]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2010047 'move' i[2010045] _yieldedIndex[2010039])
                      {
                        ref call_tmp[2010051]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2010053]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                        (2010055 'move' _this_tmp_[2010053](2010058 call errorsArray[814118] this[169716]))
                        val coerce_tmp[2010060]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2010062 'move' coerce_tmp[2010060](2010064 'deref' _this_tmp_[2010053]))
                        (2010066 'move' call_tmp[2010051](2010069 call this[1235814] coerce_tmp[2010060] i[2010045]))
                        (2010073 call clear[1236108] call_tmp[2010051])
                      }
                      label _continueLabel[2010075]
                    }
                  }
                }
                {
                  const-val low[2009954]:int(64)[13] "temp"
                  (2009956 'move' low[2009954](2009958 '.v' _iterator[2009863] F0_low[2065762]))
                  (2009961 '=' i[2009889] low[2009954])
                }
                {
                  const-val high[2009965]:int(64)[13] "temp"
                  (2009967 'move' high[2009965](2009969 '.v' _iterator[2009863] F1_high[2065766]))
                  (2009972 '<=' i[2009889] high[2009965])
                }
                {
                  val call_tmp[2009976]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2009978 '+=' i[2009889] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[2010015]
            }
            (2010018 call _freeIterator[1103535] _iterator[2009863])
            (2010021 call chpl__autoDestroy[1635435] tmp[2009715])
            label _endchpl_direct_counted_range_iter_helper[2010023]
          }
          (1942334 call _freeIterator[1103785] _iterator[1942291])
          label _endchpl_direct_counted_range_iter[1942336]
        }
        label _breakLabel[168859]
        (1876972 call _freeIterator[1104035] _iterator[168854])
      }
      ref call_tmp[679881]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "maybe param" "temp"
      (679884 'move' call_tmp[679881](388645 call errorsArray[814118] this[169716]))
      val coerce_tmp[1237229]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237233 'move' coerce_tmp[1237229](1237231 'deref' call_tmp[679881]))
      const-val coerce_tmp[1237235]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237241 'move' coerce_tmp[1237235](1237237 'cast' c_void_ptr[149] coerce_tmp[1237229]))
      (168897 call c_free[207907] coerce_tmp[1237235])
    }
    label _enddeinit[1848041]
    val _parent_destructor_tmp_[1848036]:Error[167984] "temp"
    (1848043 'move' _parent_destructor_tmp_[1848036](1848037 'cast' Error[167984] this[169716]))
    (1848045 call deinit[811807] _parent_destructor_tmp_[1848036])
    (522204 return _void[55])
  }
  function TaskErrors[169702].these[168908](const in arg this[169720]:TaskErrors[169702], ref arg _retArg[1864694]:_ref(_ir_these_TaskErrors)[1238154]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2054245]:_ir_these_TaskErrors[1238043] "temp"
    (2054247 '.=' _ir[2054245] F0_this[2053872] this[169720])
    (2054251 '=' _retArg[1864694] _ir[2054245])
    (2054254 return _void[55])
  }
  type _ic_these_TaskErrors[1238037] val super[1238038]:object[22] "super class" val more[1238040]:int(64)[13] const-val F0_this[2053870]:TaskErrors[169702] val F1__iterator[2053874]:_ic_chpl_direct_counted_range_iter[1103851] val F2__iterator[2053876]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F3_tmp[2053878]:2*int(64)[1040117] val F4__iterator[2053880]:_ic_chpl_direct_param_stride_range_iter[1103347] val F5_i[2053882]:int(64)[13] ref value[2053884]:_ref(owned Error?)[966483]
  type _ir_these_TaskErrors[1238043] const-val F0_this[2053872]:TaskErrors[169702]
  function _getIterator[1238052](const  ref arg ir[1238054]:_ir_these_TaskErrors[1238043]) : _ic_these_TaskErrors[1238037] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1238161]:_ic_these_TaskErrors[1238037] "dead after last mention" "RVV" "temp"
    val _ic_[1238044]:_ic_these_TaskErrors[1238037] "dead after last mention" "temp"
    const-val call_tmp[1238168]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238171 'move' call_tmp[1238168](1238183 'sizeof_bundle' _ic_these_TaskErrors[1238037]))
    const-val cast_tmp[1238186]:c_void_ptr[149] "dead after last mention" "temp"
    (1238188 'move' cast_tmp[1238186](1238049 call chpl_here_alloc[187788] call_tmp[1238168] 40))
    (1238057 'move' _ic_[1238044](1238190 'cast' _ic_these_TaskErrors[1238037] cast_tmp[1238186]))
    (1238059 'setcid' _ic_[1238044])
    (1238166 'move' ret[1238161] _ic_[1238044])
    (2054257 '.=' ret[1238161] more[1238040] 1)
    const-val tmp[2054261]:TaskErrors[169702] "temp"
    (2054266 'move' tmp[2054261](2054262 '.v' ir[1238054] F0_this[2053872]))
    (2054268 '.=' ret[1238161] F0_this[2053870] tmp[2054261])
    (1238163 return ret[1238161])
  }
  function TaskErrors[169702].message[169077](const in arg this[169728]:TaskErrors[169702], ref arg _retArg[1876388]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522232]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544659 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1800309 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1800314 call init[30763] maxMsg[169092])
    val first[169099]:Error[167984] "dead at end of block" "insert auto destroy"
    (1800322 'move' first[169099](1800320 'cast' Error[167984] nil[44]))
    val last[169106]:Error[167984] "dead at end of block" "insert auto destroy"
    (1800327 'move' last[169106](1800325 'cast' Error[167984] nil[44]))
    {
      ref _indexOfInterest[169221]:_ref(owned Error?)[966483] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169222]:_ic_these_TaskErrors[1238037] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[679960]:_ir_these_TaskErrors[1238043] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1864670]:_ir_these_TaskErrors[1238043] "temp"
      (169113 call these[168908] this[169728] ret_tmp[1864670])
      (1864673 'move' call_tmp[679960] ret_tmp[1864670])
      (169231 'move' _iterator[169222](169229 call _getIterator[1238052] call_tmp[679960]))
      {
        val ret[1942561]:_ir_these_TaskErrors[1238043] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1942563]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1942565]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1942567]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
        const-val this[1942984]:TaskErrors[169702] "temp"
        (1942989 'move' this[1942984](1942986 '.v' _iterator[169222] F0_this[2053870]))
        (1942569 'move' call_tmp[1942567](1942572 call nErrors[814092] this[1942984]))
        const-val call_tmp[1942574]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1942576]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1942578 'move' coerce_tmp[1942576](1942580 'deref' call_tmp[1942567]))
        const-val ret_tmp[1942582]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
        (1942585 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1942576] ret_tmp[1942582])
        (1942589 'move' call_tmp[1942574] ret_tmp[1942582])
        (1942592 'move' _iterator[1942565](1942595 call _getIterator[1103866] call_tmp[1942574]))
        {
          val ret[1942598]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1942600]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1942602]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1942604]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1942606]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
          const-val low[1942608]:int(64)[13] "temp"
          (1942610 'move' low[1942608](1942612 '.v' _iterator[1942565] F0_low[2058106]))
          const-val count[1942615]:int(64)[13] "temp"
          (1942617 'move' count[1942615](1942619 '.v' _iterator[1942565] F1_count[2058110]))
          (1942623 call chpl_direct_counted_range_iter_helper[1102159] low[1942608] count[1942615] ret_tmp[1942606])
          (1942627 'move' call_tmp[1942604] ret_tmp[1942606])
          (1942630 'move' _iterator[1942602](1942633 call _getIterator[1103616] call_tmp[1942604]))
          {
            val ret[2010661]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
            val call_tmp[2010663]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2010665]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2010667]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2010669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2011345]:int(64)[13] "temp"
            (2011350 'move' count[2011345](2011347 '.v' _iterator[1942602] F1_count[2064268]))
            (2010671 'move' call_tmp[2010669](2010674 call <[948459] count[2011345]))
            (2010676 'move' tmp[2010667] call_tmp[2010669])
            (2010679 'move' tmp[2010665] call_tmp[2010669])
            const-val call_tmp[2010682]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2010684 'move' call_tmp[2010682] call_tmp[2010669])
            if call_tmp[2010669]
            {
              (2010690 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2010693]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2010695]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2010697]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2010699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2011352]:int(64)[13] "temp"
            (2011357 'move' count[2011352](2011354 '.v' _iterator[1942602] F1_count[2064268]))
            (2010701 'move' call_tmp[2010699](2010704 call ==[435671] count[2011352] 0))
            (2010707 'move' tmp[2010697] call_tmp[2010699])
            if call_tmp[2010699]
            {
              const-val tmp[2010712]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2010714]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2010716]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2011359]:int(64)[13] "temp"
              (2011364 'move' low[2011359](2011361 '.v' _iterator[1942602] F0_low[2064264]))
              (2010718 'move' call_tmp[2010716](2010721 call _cast[956095] low[2011359]))
              const-val call_tmp[2010723]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2010725]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2010727 'move' coerce_tmp[2010725](2010729 'cast' uint(64)[115] 1))
              (2010732 'move' call_tmp[2010723](2010735 call -[962254] call_tmp[2010716]))
              const-val call_tmp[2010737]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2010739 'move' call_tmp[2010737](2010742 call _cast[953604] call_tmp[2010723]))
              const-val ret_tmp[2010744]:2*int(64)[1040117] "temp"
              const-val low[2011366]:int(64)[13] "temp"
              (2011371 'move' low[2011366](2011368 '.v' _iterator[1942602] F0_low[2064264]))
              (2010747 call _build_tuple[1040075] low[2011366] call_tmp[2010737] ret_tmp[2010744])
              (2010751 'move' tmp[2010712] ret_tmp[2010744])
              (2010754 'move' tmp[2010695] tmp[2010712])
            }
            {
              const-val tmp[2010758]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2010760]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2010762]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2011373]:int(64)[13] "temp"
              (2011378 'move' count[2011373](2011375 '.v' _iterator[1942602] F1_count[2064268]))
              (2010764 'move' call_tmp[2010762] count[2011373])
              const-val call_tmp[2010767]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2011380]:int(64)[13] "temp"
              (2011385 'move' count[2011380](2011382 '.v' _iterator[1942602] F1_count[2064268]))
              (2010769 'move' call_tmp[2010767](2010772 call -[962287] count[2011380]))
              const-val call_tmp[2010774]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2011387]:int(64)[13] "temp"
              (2011392 'move' low[2011387](2011389 '.v' _iterator[1942602] F0_low[2064264]))
              (2010776 'move' call_tmp[2010774](2010779 call +[439679] low[2011387] call_tmp[2010767]))
              const-val ret_tmp[2010782]:2*int(64)[1040117] "temp"
              const-val low[2011394]:int(64)[13] "temp"
              (2011399 'move' low[2011394](2011396 '.v' _iterator[1942602] F0_low[2064264]))
              (2010785 call _build_tuple[1040075] low[2011394] call_tmp[2010774] ret_tmp[2010782])
              (2010789 'move' tmp[2010758] ret_tmp[2010782])
              (2010792 'move' tmp[2010695] tmp[2010758])
            }
            (2010796 '=' tmp[2010693] tmp[2010695])
            (2010799 'noop')
            1
            ref call_tmp[2010801]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2010803 'move' call_tmp[2010801](2010805 '.' tmp[2010693] x0[1040113]))
            const-val start[2010808]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2010810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2010812 'move' coerce_tmp[2010810](2010814 'deref' call_tmp[2010801]))
            (2010816 '=' start[2010808] coerce_tmp[2010810])
            (2010819 'noop')
            ref call_tmp[2010820]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2010822 'move' call_tmp[2010820](2010824 '.' tmp[2010693] x1[1040115]))
            const-val end[2010827]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2010829]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2010831 'move' coerce_tmp[2010829](2010833 'deref' call_tmp[2010820]))
            (2010835 '=' end[2010827] coerce_tmp[2010829])
            (2010838 'noop')
            val _indexOfInterest[2010839]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2010841]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2010843]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2010845]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
            (2010848 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2010810] coerce_tmp[2010829] ret_tmp[2010845])
            (2010852 'move' call_tmp[2010843] ret_tmp[2010845])
            (2010855 'move' _iterator[2010841](2010858 call _getIterator[1103362] call_tmp[2010843]))
            {
              val ret[2010861]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
              val call_tmp[2010863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2010866 call chpl_range_check_stride[1102905])
              val i[2010867]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2010869]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2010871 'move' i[2010867] 0)
              val call_tmp[2010874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2010876]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2010878]:int(64)[13] "temp"
              (2010880 'move' low[2010878](2010882 '.v' _iterator[2010841] F0_low[2065762]))
              (2010885 'move' default_arg_first[2010876](2010888 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2010878]))
              const-val default_arg_last[2010890]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2010892]:int(64)[13] "temp"
              (2010894 'move' high[2010892](2010896 '.v' _iterator[2010841] F1_high[2065766]))
              (2010899 'move' default_arg_last[2010890](2010902 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2010892]))
              const-val _return_tmp_[2010904]:bool[10] "dead after last mention" "temp"
              const-val low[2010906]:int(64)[13] "temp"
              (2010908 'move' low[2010906](2010910 '.v' _iterator[2010841] F0_low[2065762]))
              const-val high[2010913]:int(64)[13] "temp"
              (2010915 'move' high[2010913](2010917 '.v' _iterator[2010841] F1_high[2065766]))
              (2010920 'move' _return_tmp_[2010904](2010923 call chpl_checkIfRangeIterWillOverflow[1096137] low[2010906] high[2010913] 1 default_arg_first[2010876] default_arg_last[2010890] 1))
              CForLoop[2010930] hazard
              {
                const-val yret[2010959]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2010961 'move' yret[2010959] i[2010867])
                const-val _yieldedIndex[2010964]:int(64)[13] "temp"
                (2010966 'move' _yieldedIndex[2010964] i[2010867])
                {
                  const-val i[2010970]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2010972 'move' i[2010970] _yieldedIndex[2010964])
                  const-val yret[2010975]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2010977 'move' yret[2010975] _yieldedIndex[2010964])
                  const-val _yieldedIndex[2011005]:int(64)[13] "temp"
                  (2011343 'move' _yieldedIndex[2011005] _yieldedIndex[2010964])
                  {
                    const-val i[2011007]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2011009 'move' i[2011007] _yieldedIndex[2011005])
                    const-val yret[2011012]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2011014 'move' yret[2011012] _yieldedIndex[2011005])
                    const-val _yieldedIndex[2011017]:int(64)[13] "temp"
                    (2011019 'move' _yieldedIndex[2011017] _yieldedIndex[2011005])
                    {
                      const-val i[2011023]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2011025 'move' i[2011023] _yieldedIndex[2011017])
                      ref call_tmp[2011028]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2011030]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                      const-val this[2011032]:TaskErrors[169702] "temp"
                      (2011034 'move' this[2011032](2011036 '.v' _iterator[169222] F0_this[2053870]))
                      (2011039 'move' _this_tmp_[2011030](2011042 call errorsArray[814118] this[2011032]))
                      val coerce_tmp[2011044]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2011046 'move' coerce_tmp[2011044](2011048 'deref' _this_tmp_[2011030]))
                      (2011050 'move' call_tmp[2011028](2011053 call this[1235814] coerce_tmp[2011044] _yieldedIndex[2011017]))
                      const-val call_tmp[2011056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[2011058]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2011060 'move' coerce_tmp[2011058](2011063 call borrow[1235889] call_tmp[2011028]))
                      val coerce_tmp[2011065]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2011067 'move' coerce_tmp[2011065](2011069 'cast' object[22] coerce_tmp[2011058]))
                      (2011072 'move' call_tmp[2011056](2011075 call !=[1485] coerce_tmp[2011065] nil[44]))
                      const-val call_tmp[2011078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2011080 'move' call_tmp[2011078] call_tmp[2011056])
                      if call_tmp[2011056]
                      {
                        ref yret[2011085]:_ref(owned Error?)[966483] "dead after last mention" "YVV" "temp"
                        ref call_tmp[2011087]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2011089]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                        const-val this[2011091]:TaskErrors[169702] "temp"
                        (2011093 'move' this[2011091](2011095 '.v' _iterator[169222] F0_this[2053870]))
                        (2011098 'move' _this_tmp_[2011089](2011101 call errorsArray[814118] this[2011091]))
                        val coerce_tmp[2011103]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2011105 'move' coerce_tmp[2011103](2011107 'deref' _this_tmp_[2011089]))
                        (2011109 'move' call_tmp[2011087](2011112 call this[1235814] coerce_tmp[2011103] i[2011023]))
                        ref _yieldedIndex[2011115]:_ref(owned Error?)[966483] "temp"
                        (2011117 'move' _yieldedIndex[2011115] call_tmp[2011087])
                        {
                          ref err[2011121]:_ref(owned Error?)[966483] "index var" "insert auto destroy"
                          (2011123 'move' err[2011121] _yieldedIndex[2011115])
                          {
                            val call_tmp[2011127]:Error[167984] "dead at end of block" "maybe param" "temp"
                            (2011129 'move' call_tmp[2011127](2011132 call postfix![1799677] err[2011121]))
                            val e[2011134]:Error[167984] "dead at end of block" "insert auto destroy"
                            (2011136 'move' e[2011134] call_tmp[2011127])
                            const-val tmp[2011141]:bool[10] "dead after last mention" "maybe param" "temp"
                            (2011143 'move' tmp[2011141](2011146 call ==[38823] minMsg[169087] ""))
                            val tmp[2011149]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[2011151]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[2011153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2011155 'move' call_tmp[2011153] tmp[2011141])
                            (2011158 'move' tmp[2011151] call_tmp[2011153])
                            if tmp[2011151]
                            {
                              (2011163 'move' tmp[2011149] 1)
                            }
                            {
                              const-val tmp[2011167]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[2011169]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2011171]:int(32)[95] "temp"
                              (2011173 'move' _virtual_method_tmp_[2011171](2011175 'getcid' e[2011134]))
                              val ret_tmp[2011177]:string[26] "temp"
                              (2011179 'virtual method call' message[167975] _virtual_method_tmp_[2011171] e[2011134] ret_tmp[2011177])
                              (2011184 'move' call_tmp[2011169] ret_tmp[2011177])
                              const-val call_tmp[2011187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2011189 'move' call_tmp[2011187](2011192 call <[38873] call_tmp[2011169] minMsg[169087]))
                              (2011195 'move' tmp[2011167] call_tmp[2011187])
                              (2011198 'move' tmp[2011149] tmp[2011167])
                              (2011202 call chpl__autoDestroy[1562275] call_tmp[2011169])
                            }
                            const-val call_tmp[2011205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2011207 'move' call_tmp[2011205] tmp[2011149])
                            if call_tmp[2011205]
                            {
                              const-val call_tmp[2011212]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2011214]:int(32)[95] "temp"
                              (2011216 'move' _virtual_method_tmp_[2011214](2011218 'getcid' e[2011134]))
                              val ret_tmp[2011220]:string[26] "temp"
                              (2011222 'virtual method call' message[167975] _virtual_method_tmp_[2011214] e[2011134] ret_tmp[2011220])
                              (2011227 'move' call_tmp[2011212] ret_tmp[2011220])
                              (2011231 call =[38272] minMsg[169087] call_tmp[2011212])
                              (2011235 call chpl__autoDestroy[1562275] call_tmp[2011212])
                            }
                            const-val tmp[2011238]:bool[10] "dead after last mention" "maybe param" "temp"
                            (2011240 'move' tmp[2011238](2011243 call ==[38823] maxMsg[169092] ""))
                            val tmp[2011246]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[2011248]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[2011250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2011252 'move' call_tmp[2011250] tmp[2011238])
                            (2011255 'move' tmp[2011248] call_tmp[2011250])
                            if tmp[2011248]
                            {
                              (2011260 'move' tmp[2011246] 1)
                            }
                            {
                              const-val tmp[2011264]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[2011266]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2011268]:int(32)[95] "temp"
                              (2011270 'move' _virtual_method_tmp_[2011268](2011272 'getcid' e[2011134]))
                              val ret_tmp[2011274]:string[26] "temp"
                              (2011276 'virtual method call' message[167975] _virtual_method_tmp_[2011268] e[2011134] ret_tmp[2011274])
                              (2011281 'move' call_tmp[2011266] ret_tmp[2011274])
                              const-val call_tmp[2011284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2011286 'move' call_tmp[2011284](2011289 call >[38897] call_tmp[2011266] maxMsg[169092]))
                              (2011292 'move' tmp[2011264] call_tmp[2011284])
                              (2011295 'move' tmp[2011246] tmp[2011264])
                              (2011299 call chpl__autoDestroy[1562275] call_tmp[2011266])
                            }
                            const-val call_tmp[2011302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2011304 'move' call_tmp[2011302] tmp[2011246])
                            if call_tmp[2011302]
                            {
                              const-val call_tmp[2011309]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2011311]:int(32)[95] "temp"
                              (2011313 'move' _virtual_method_tmp_[2011311](2011315 'getcid' e[2011134]))
                              val ret_tmp[2011317]:string[26] "temp"
                              (2011319 'virtual method call' message[167975] _virtual_method_tmp_[2011311] e[2011134] ret_tmp[2011317])
                              (2011324 'move' call_tmp[2011309] ret_tmp[2011317])
                              (2011328 call =[38272] maxMsg[169092] call_tmp[2011309])
                              (2011332 call chpl__autoDestroy[1562275] call_tmp[2011309])
                            }
                            (2011336 call +=[451358] n[169081] 1)
                          }
                          label _continueLabel[2011339]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[2010932]:int(64)[13] "temp"
                  (2010934 'move' low[2010932](2010936 '.v' _iterator[2010841] F0_low[2065762]))
                  (2010939 '=' i[2010867] low[2010932])
                }
                {
                  const-val high[2010943]:int(64)[13] "temp"
                  (2010945 'move' high[2010943](2010947 '.v' _iterator[2010841] F1_high[2065766]))
                  (2010950 '<=' i[2010867] high[2010943])
                }
                {
                  val call_tmp[2010954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2010956 '+=' i[2010867] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[2010993]
            }
            (2010996 call _freeIterator[1103535] _iterator[2010841])
            (2010999 call chpl__autoDestroy[1635435] tmp[2010693])
            label _endchpl_direct_counted_range_iter_helper[2011001]
          }
          (1942750 call _freeIterator[1103785] _iterator[1942602])
          label _endchpl_direct_counted_range_iter[1942752]
        }
        (1942755 call _freeIterator[1104035] _iterator[1942565])
        label _endthese[1942757]
      }
      label _breakLabel[169227]
      (1877002 call _freeIterator[1238294] _iterator[169222])
    }
    {
      {
        ref _indexOfInterest[169300]:_ref(owned Error?)[966483] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169301]:_ic_these_TaskErrors[1238037] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[680040]:_ir_these_TaskErrors[1238043] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1864676]:_ir_these_TaskErrors[1238043] "temp"
        (169258 call these[168908] this[169728] ret_tmp[1864676])
        (1864679 'move' call_tmp[680040] ret_tmp[1864676])
        (169310 'move' _iterator[169301](169308 call _getIterator[1238052] call_tmp[680040]))
        {
          val ret[1943006]:_ir_these_TaskErrors[1238043] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1943008]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1943010]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1943012]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
          const-val this[1943309]:TaskErrors[169702] "temp"
          (1943314 'move' this[1943309](1943311 '.v' _iterator[169301] F0_this[2053870]))
          (1943014 'move' call_tmp[1943012](1943017 call nErrors[814092] this[1943309]))
          const-val call_tmp[1943019]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1943021]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1943023 'move' coerce_tmp[1943021](1943025 'deref' call_tmp[1943012]))
          const-val ret_tmp[1943027]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
          (1943030 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1943021] ret_tmp[1943027])
          (1943034 'move' call_tmp[1943019] ret_tmp[1943027])
          (1943037 'move' _iterator[1943010](1943040 call _getIterator[1103866] call_tmp[1943019]))
          {
            val ret[1943043]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1943045]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1943047]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1943049]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1943051]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
            const-val low[1943053]:int(64)[13] "temp"
            (1943055 'move' low[1943053](1943057 '.v' _iterator[1943010] F0_low[2058106]))
            const-val count[1943060]:int(64)[13] "temp"
            (1943062 'move' count[1943060](1943064 '.v' _iterator[1943010] F1_count[2058110]))
            (1943068 call chpl_direct_counted_range_iter_helper[1102159] low[1943053] count[1943060] ret_tmp[1943051])
            (1943072 'move' call_tmp[1943049] ret_tmp[1943051])
            (1943075 'move' _iterator[1943047](1943078 call _getIterator[1103616] call_tmp[1943049]))
            {
              val ret[2011402]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
              val call_tmp[2011404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[2011406]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[2011408]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[2011410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[2011966]:int(64)[13] "temp"
              (2011971 'move' count[2011966](2011968 '.v' _iterator[1943047] F1_count[2064268]))
              (2011412 'move' call_tmp[2011410](2011415 call <[948459] count[2011966]))
              (2011417 'move' tmp[2011408] call_tmp[2011410])
              (2011420 'move' tmp[2011406] call_tmp[2011410])
              const-val call_tmp[2011423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2011425 'move' call_tmp[2011423] call_tmp[2011410])
              if call_tmp[2011410]
              {
                (2011431 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
              }
              const-val tmp[2011434]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[2011436]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[2011438]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[2011440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[2011973]:int(64)[13] "temp"
              (2011978 'move' count[2011973](2011975 '.v' _iterator[1943047] F1_count[2064268]))
              (2011442 'move' call_tmp[2011440](2011445 call ==[435671] count[2011973] 0))
              (2011448 'move' tmp[2011438] call_tmp[2011440])
              if call_tmp[2011440]
              {
                const-val tmp[2011453]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[2011455]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[2011457]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[2011980]:int(64)[13] "temp"
                (2011985 'move' low[2011980](2011982 '.v' _iterator[1943047] F0_low[2064264]))
                (2011459 'move' call_tmp[2011457](2011462 call _cast[956095] low[2011980]))
                const-val call_tmp[2011464]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[2011466]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2011468 'move' coerce_tmp[2011466](2011470 'cast' uint(64)[115] 1))
                (2011473 'move' call_tmp[2011464](2011476 call -[962254] call_tmp[2011457]))
                const-val call_tmp[2011478]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2011480 'move' call_tmp[2011478](2011483 call _cast[953604] call_tmp[2011464]))
                const-val ret_tmp[2011485]:2*int(64)[1040117] "temp"
                const-val low[2011987]:int(64)[13] "temp"
                (2011992 'move' low[2011987](2011989 '.v' _iterator[1943047] F0_low[2064264]))
                (2011488 call _build_tuple[1040075] low[2011987] call_tmp[2011478] ret_tmp[2011485])
                (2011492 'move' tmp[2011453] ret_tmp[2011485])
                (2011495 'move' tmp[2011436] tmp[2011453])
              }
              {
                const-val tmp[2011499]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[2011501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[2011503]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[2011994]:int(64)[13] "temp"
                (2011999 'move' count[2011994](2011996 '.v' _iterator[1943047] F1_count[2064268]))
                (2011505 'move' call_tmp[2011503] count[2011994])
                const-val call_tmp[2011508]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[2012001]:int(64)[13] "temp"
                (2012006 'move' count[2012001](2012003 '.v' _iterator[1943047] F1_count[2064268]))
                (2011510 'move' call_tmp[2011508](2011513 call -[962287] count[2012001]))
                const-val call_tmp[2011515]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[2012008]:int(64)[13] "temp"
                (2012013 'move' low[2012008](2012010 '.v' _iterator[1943047] F0_low[2064264]))
                (2011517 'move' call_tmp[2011515](2011520 call +[439679] low[2012008] call_tmp[2011508]))
                const-val ret_tmp[2011523]:2*int(64)[1040117] "temp"
                const-val low[2012015]:int(64)[13] "temp"
                (2012020 'move' low[2012015](2012017 '.v' _iterator[1943047] F0_low[2064264]))
                (2011526 call _build_tuple[1040075] low[2012015] call_tmp[2011515] ret_tmp[2011523])
                (2011530 'move' tmp[2011499] ret_tmp[2011523])
                (2011533 'move' tmp[2011436] tmp[2011499])
              }
              (2011537 '=' tmp[2011434] tmp[2011436])
              (2011540 'noop')
              1
              ref call_tmp[2011542]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
              (2011544 'move' call_tmp[2011542](2011546 '.' tmp[2011434] x0[1040113]))
              const-val start[2011549]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2011551]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (2011553 'move' coerce_tmp[2011551](2011555 'deref' call_tmp[2011542]))
              (2011557 '=' start[2011549] coerce_tmp[2011551])
              (2011560 'noop')
              ref call_tmp[2011561]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
              (2011563 'move' call_tmp[2011561](2011565 '.' tmp[2011434] x1[1040115]))
              const-val end[2011568]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2011570]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (2011572 'move' coerce_tmp[2011570](2011574 'deref' call_tmp[2011561]))
              (2011576 '=' end[2011568] coerce_tmp[2011570])
              (2011579 'noop')
              val _indexOfInterest[2011580]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2011582]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2011584]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2011586]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
              (2011589 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2011551] coerce_tmp[2011570] ret_tmp[2011586])
              (2011593 'move' call_tmp[2011584] ret_tmp[2011586])
              (2011596 'move' _iterator[2011582](2011599 call _getIterator[1103362] call_tmp[2011584]))
              {
                val ret[2011602]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                val call_tmp[2011604]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2011607 call chpl_range_check_stride[1102905])
                val i[2011608]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2011610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2011612 'move' i[2011608] 0)
                val call_tmp[2011615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2011617]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2011619]:int(64)[13] "temp"
                (2011621 'move' low[2011619](2011623 '.v' _iterator[2011582] F0_low[2065762]))
                (2011626 'move' default_arg_first[2011617](2011629 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2011619]))
                const-val default_arg_last[2011631]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2011633]:int(64)[13] "temp"
                (2011635 'move' high[2011633](2011637 '.v' _iterator[2011582] F1_high[2065766]))
                (2011640 'move' default_arg_last[2011631](2011643 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2011633]))
                const-val _return_tmp_[2011645]:bool[10] "dead after last mention" "temp"
                const-val low[2011647]:int(64)[13] "temp"
                (2011649 'move' low[2011647](2011651 '.v' _iterator[2011582] F0_low[2065762]))
                const-val high[2011654]:int(64)[13] "temp"
                (2011656 'move' high[2011654](2011658 '.v' _iterator[2011582] F1_high[2065766]))
                (2011661 'move' _return_tmp_[2011645](2011664 call chpl_checkIfRangeIterWillOverflow[1096137] low[2011647] high[2011654] 1 default_arg_first[2011617] default_arg_last[2011631] 1))
                CForLoop[2011671] hazard
                {
                  const-val yret[2011700]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2011702 'move' yret[2011700] i[2011608])
                  const-val _yieldedIndex[2011705]:int(64)[13] "temp"
                  (2011707 'move' _yieldedIndex[2011705] i[2011608])
                  {
                    const-val i[2011711]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2011713 'move' i[2011711] _yieldedIndex[2011705])
                    const-val yret[2011716]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2011718 'move' yret[2011716] _yieldedIndex[2011705])
                    const-val _yieldedIndex[2011746]:int(64)[13] "temp"
                    (2011964 'move' _yieldedIndex[2011746] _yieldedIndex[2011705])
                    {
                      const-val i[2011748]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2011750 'move' i[2011748] _yieldedIndex[2011746])
                      const-val yret[2011753]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2011755 'move' yret[2011753] _yieldedIndex[2011746])
                      const-val _yieldedIndex[2011758]:int(64)[13] "temp"
                      (2011760 'move' _yieldedIndex[2011758] _yieldedIndex[2011746])
                      {
                        const-val i[2011764]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2011766 'move' i[2011764] _yieldedIndex[2011758])
                        ref call_tmp[2011769]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2011771]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                        const-val this[2011773]:TaskErrors[169702] "temp"
                        (2011775 'move' this[2011773](2011777 '.v' _iterator[169301] F0_this[2053870]))
                        (2011780 'move' _this_tmp_[2011771](2011783 call errorsArray[814118] this[2011773]))
                        val coerce_tmp[2011785]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2011787 'move' coerce_tmp[2011785](2011789 'deref' _this_tmp_[2011771]))
                        (2011791 'move' call_tmp[2011769](2011794 call this[1235814] coerce_tmp[2011785] _yieldedIndex[2011758]))
                        const-val call_tmp[2011797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[2011799]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2011801 'move' coerce_tmp[2011799](2011804 call borrow[1235889] call_tmp[2011769]))
                        val coerce_tmp[2011806]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2011808 'move' coerce_tmp[2011806](2011810 'cast' object[22] coerce_tmp[2011799]))
                        (2011813 'move' call_tmp[2011797](2011816 call !=[1485] coerce_tmp[2011806] nil[44]))
                        const-val call_tmp[2011819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2011821 'move' call_tmp[2011819] call_tmp[2011797])
                        if call_tmp[2011797]
                        {
                          ref yret[2011826]:_ref(owned Error?)[966483] "dead after last mention" "YVV" "temp"
                          ref call_tmp[2011828]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[2011830]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                          const-val this[2011832]:TaskErrors[169702] "temp"
                          (2011834 'move' this[2011832](2011836 '.v' _iterator[169301] F0_this[2053870]))
                          (2011839 'move' _this_tmp_[2011830](2011842 call errorsArray[814118] this[2011832]))
                          val coerce_tmp[2011844]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2011846 'move' coerce_tmp[2011844](2011848 'deref' _this_tmp_[2011830]))
                          (2011850 'move' call_tmp[2011828](2011853 call this[1235814] coerce_tmp[2011844] i[2011764]))
                          ref _yieldedIndex[2011856]:_ref(owned Error?)[966483] "temp"
                          (2011858 'move' _yieldedIndex[2011856] call_tmp[2011828])
                          {
                            ref err[2011862]:_ref(owned Error?)[966483] "index var" "insert auto destroy"
                            (2011864 'move' err[2011862] _yieldedIndex[2011856])
                            {
                              val call_tmp[2011868]:Error[167984] "dead at end of block" "maybe param" "temp"
                              (2011870 'move' call_tmp[2011868](2011873 call postfix![1799677] err[2011862]))
                              val e[2011875]:Error[167984] "dead at end of block" "insert auto destroy"
                              (2011877 'move' e[2011875] call_tmp[2011868])
                              const-val call_tmp[2011882]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2011884]:int(32)[95] "temp"
                              (2011886 'move' _virtual_method_tmp_[2011884](2011888 'getcid' e[2011875]))
                              val ret_tmp[2011890]:string[26] "temp"
                              (2011892 'virtual method call' message[167975] _virtual_method_tmp_[2011884] e[2011875] ret_tmp[2011890])
                              (2011897 'move' call_tmp[2011882] ret_tmp[2011890])
                              const-val call_tmp[2011900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2011902 'move' call_tmp[2011900](2011905 call ==[38823] call_tmp[2011882] minMsg[169087]))
                              const-val call_tmp[2011908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2011910 'move' call_tmp[2011908] call_tmp[2011900])
                              if call_tmp[2011908]
                              {
                                const-val call_tmp[2011915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[2011917]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2011919 'move' coerce_tmp[2011917](2011921 'cast' object[22] first[169099]))
                                (2011924 'move' call_tmp[2011915](2011927 call ==[1146] coerce_tmp[2011917] nil[44]))
                                const-val call_tmp[2011930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2011932 'move' call_tmp[2011930] call_tmp[2011915])
                                if call_tmp[2011930]
                                {
                                  val coerce_tmp[2011937]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (2011939 'move' coerce_tmp[2011937] e[2011875])
                                  (2011943 call =[1232479] first[169099] coerce_tmp[2011937])
                                }
                                val coerce_tmp[2011947]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2011949 'move' coerce_tmp[2011947] e[2011875])
                                (2011953 call =[1232479] last[169106] coerce_tmp[2011947])
                              }
                              (2011958 call chpl__autoDestroy[1562275] call_tmp[2011882])
                            }
                            label _continueLabel[2011960]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[2011673]:int(64)[13] "temp"
                    (2011675 'move' low[2011673](2011677 '.v' _iterator[2011582] F0_low[2065762]))
                    (2011680 '=' i[2011608] low[2011673])
                  }
                  {
                    const-val high[2011684]:int(64)[13] "temp"
                    (2011686 'move' high[2011684](2011688 '.v' _iterator[2011582] F1_high[2065766]))
                    (2011691 '<=' i[2011608] high[2011684])
                  }
                  {
                    val call_tmp[2011695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2011697 '+=' i[2011608] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[2011734]
              }
              (2011737 call _freeIterator[1103535] _iterator[2011582])
              (2011740 call chpl__autoDestroy[1635435] tmp[2011434])
              label _endchpl_direct_counted_range_iter_helper[2011742]
            }
            (1943195 call _freeIterator[1103785] _iterator[1943047])
            label _endchpl_direct_counted_range_iter[1943197]
          }
          (1943200 call _freeIterator[1104035] _iterator[1943010])
          label _endthese[1943202]
        }
        label _breakLabel[169306]
        (1877011 call _freeIterator[1238294] _iterator[169301])
      }
      const-val call_tmp[680077]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680080 'move' call_tmp[680077](169337 call !=[38847] minMsg[169087] maxMsg[169092]))
      const-val call_tmp[680082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680085 'move' call_tmp[680082] call_tmp[680077])
      if call_tmp[680082]
      {
        {
          ref _indexOfInterest[169370]:_ref(owned Error?)[966483] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169371]:_ic_these_TaskErrors[1238037] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[680089]:_ir_these_TaskErrors[1238043] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1864682]:_ir_these_TaskErrors[1238043] "temp"
          (169342 call these[168908] this[169728] ret_tmp[1864682])
          (1864685 'move' call_tmp[680089] ret_tmp[1864682])
          (169380 'move' _iterator[169371](169378 call _getIterator[1238052] call_tmp[680089]))
          {
            val ret[1943331]:_ir_these_TaskErrors[1238043] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1943333]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1943335]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1943337]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
            const-val this[1943602]:TaskErrors[169702] "temp"
            (1943607 'move' this[1943602](1943604 '.v' _iterator[169371] F0_this[2053870]))
            (1943339 'move' call_tmp[1943337](1943342 call nErrors[814092] this[1943602]))
            const-val call_tmp[1943344]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1943346]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1943348 'move' coerce_tmp[1943346](1943350 'deref' call_tmp[1943337]))
            const-val ret_tmp[1943352]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
            (1943355 call chpl_direct_counted_range_iter[458039] 0 coerce_tmp[1943346] ret_tmp[1943352])
            (1943359 'move' call_tmp[1943344] ret_tmp[1943352])
            (1943362 'move' _iterator[1943335](1943365 call _getIterator[1103866] call_tmp[1943344]))
            {
              val ret[1943368]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1943370]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1943372]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1943374]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1943376]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
              const-val low[1943378]:int(64)[13] "temp"
              (1943380 'move' low[1943378](1943382 '.v' _iterator[1943335] F0_low[2058106]))
              const-val count[1943385]:int(64)[13] "temp"
              (1943387 'move' count[1943385](1943389 '.v' _iterator[1943335] F1_count[2058110]))
              (1943393 call chpl_direct_counted_range_iter_helper[1102159] low[1943378] count[1943385] ret_tmp[1943376])
              (1943397 'move' call_tmp[1943374] ret_tmp[1943376])
              (1943400 'move' _iterator[1943372](1943403 call _getIterator[1103616] call_tmp[1943374]))
              {
                val ret[2012023]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                val call_tmp[2012025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2012027]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2012029]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2012031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2012555]:int(64)[13] "temp"
                (2012560 'move' count[2012555](2012557 '.v' _iterator[1943372] F1_count[2064268]))
                (2012033 'move' call_tmp[2012031](2012036 call <[948459] count[2012555]))
                (2012038 'move' tmp[2012029] call_tmp[2012031])
                (2012041 'move' tmp[2012027] call_tmp[2012031])
                const-val call_tmp[2012044]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2012046 'move' call_tmp[2012044] call_tmp[2012031])
                if call_tmp[2012031]
                {
                  (2012052 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2012055]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2012057]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2012059]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2012061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2012562]:int(64)[13] "temp"
                (2012567 'move' count[2012562](2012564 '.v' _iterator[1943372] F1_count[2064268]))
                (2012063 'move' call_tmp[2012061](2012066 call ==[435671] count[2012562] 0))
                (2012069 'move' tmp[2012059] call_tmp[2012061])
                if call_tmp[2012061]
                {
                  const-val tmp[2012074]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2012076]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2012078]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2012569]:int(64)[13] "temp"
                  (2012574 'move' low[2012569](2012571 '.v' _iterator[1943372] F0_low[2064264]))
                  (2012080 'move' call_tmp[2012078](2012083 call _cast[956095] low[2012569]))
                  const-val call_tmp[2012085]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2012087]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2012089 'move' coerce_tmp[2012087](2012091 'cast' uint(64)[115] 1))
                  (2012094 'move' call_tmp[2012085](2012097 call -[962254] call_tmp[2012078]))
                  const-val call_tmp[2012099]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2012101 'move' call_tmp[2012099](2012104 call _cast[953604] call_tmp[2012085]))
                  const-val ret_tmp[2012106]:2*int(64)[1040117] "temp"
                  const-val low[2012576]:int(64)[13] "temp"
                  (2012581 'move' low[2012576](2012578 '.v' _iterator[1943372] F0_low[2064264]))
                  (2012109 call _build_tuple[1040075] low[2012576] call_tmp[2012099] ret_tmp[2012106])
                  (2012113 'move' tmp[2012074] ret_tmp[2012106])
                  (2012116 'move' tmp[2012057] tmp[2012074])
                }
                {
                  const-val tmp[2012120]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2012122]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2012124]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2012583]:int(64)[13] "temp"
                  (2012588 'move' count[2012583](2012585 '.v' _iterator[1943372] F1_count[2064268]))
                  (2012126 'move' call_tmp[2012124] count[2012583])
                  const-val call_tmp[2012129]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2012590]:int(64)[13] "temp"
                  (2012595 'move' count[2012590](2012592 '.v' _iterator[1943372] F1_count[2064268]))
                  (2012131 'move' call_tmp[2012129](2012134 call -[962287] count[2012590]))
                  const-val call_tmp[2012136]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2012597]:int(64)[13] "temp"
                  (2012602 'move' low[2012597](2012599 '.v' _iterator[1943372] F0_low[2064264]))
                  (2012138 'move' call_tmp[2012136](2012141 call +[439679] low[2012597] call_tmp[2012129]))
                  const-val ret_tmp[2012144]:2*int(64)[1040117] "temp"
                  const-val low[2012604]:int(64)[13] "temp"
                  (2012609 'move' low[2012604](2012606 '.v' _iterator[1943372] F0_low[2064264]))
                  (2012147 call _build_tuple[1040075] low[2012604] call_tmp[2012136] ret_tmp[2012144])
                  (2012151 'move' tmp[2012120] ret_tmp[2012144])
                  (2012154 'move' tmp[2012057] tmp[2012120])
                }
                (2012158 '=' tmp[2012055] tmp[2012057])
                (2012161 'noop')
                1
                ref call_tmp[2012163]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2012165 'move' call_tmp[2012163](2012167 '.' tmp[2012055] x0[1040113]))
                const-val start[2012170]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2012172]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2012174 'move' coerce_tmp[2012172](2012176 'deref' call_tmp[2012163]))
                (2012178 '=' start[2012170] coerce_tmp[2012172])
                (2012181 'noop')
                ref call_tmp[2012182]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2012184 'move' call_tmp[2012182](2012186 '.' tmp[2012055] x1[1040115]))
                const-val end[2012189]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2012191]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2012193 'move' coerce_tmp[2012191](2012195 'deref' call_tmp[2012182]))
                (2012197 '=' end[2012189] coerce_tmp[2012191])
                (2012200 'noop')
                val _indexOfInterest[2012201]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2012203]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2012205]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2012207]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                (2012210 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2012172] coerce_tmp[2012191] ret_tmp[2012207])
                (2012214 'move' call_tmp[2012205] ret_tmp[2012207])
                (2012217 'move' _iterator[2012203](2012220 call _getIterator[1103362] call_tmp[2012205]))
                {
                  val ret[2012223]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                  val call_tmp[2012225]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2012228 call chpl_range_check_stride[1102905])
                  val i[2012229]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2012231]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2012233 'move' i[2012229] 0)
                  val call_tmp[2012236]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2012238]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2012240]:int(64)[13] "temp"
                  (2012242 'move' low[2012240](2012244 '.v' _iterator[2012203] F0_low[2065762]))
                  (2012247 'move' default_arg_first[2012238](2012250 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2012240]))
                  const-val default_arg_last[2012252]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2012254]:int(64)[13] "temp"
                  (2012256 'move' high[2012254](2012258 '.v' _iterator[2012203] F1_high[2065766]))
                  (2012261 'move' default_arg_last[2012252](2012264 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2012254]))
                  const-val _return_tmp_[2012266]:bool[10] "dead after last mention" "temp"
                  const-val low[2012268]:int(64)[13] "temp"
                  (2012270 'move' low[2012268](2012272 '.v' _iterator[2012203] F0_low[2065762]))
                  const-val high[2012275]:int(64)[13] "temp"
                  (2012277 'move' high[2012275](2012279 '.v' _iterator[2012203] F1_high[2065766]))
                  (2012282 'move' _return_tmp_[2012266](2012285 call chpl_checkIfRangeIterWillOverflow[1096137] low[2012268] high[2012275] 1 default_arg_first[2012238] default_arg_last[2012252] 1))
                  CForLoop[2012292] hazard
                  {
                    const-val yret[2012321]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2012323 'move' yret[2012321] i[2012229])
                    const-val _yieldedIndex[2012326]:int(64)[13] "temp"
                    (2012328 'move' _yieldedIndex[2012326] i[2012229])
                    {
                      const-val i[2012332]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2012334 'move' i[2012332] _yieldedIndex[2012326])
                      const-val yret[2012337]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2012339 'move' yret[2012337] _yieldedIndex[2012326])
                      const-val _yieldedIndex[2012367]:int(64)[13] "temp"
                      (2012553 'move' _yieldedIndex[2012367] _yieldedIndex[2012326])
                      {
                        const-val i[2012369]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2012371 'move' i[2012369] _yieldedIndex[2012367])
                        const-val yret[2012374]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2012376 'move' yret[2012374] _yieldedIndex[2012367])
                        const-val _yieldedIndex[2012379]:int(64)[13] "temp"
                        (2012381 'move' _yieldedIndex[2012379] _yieldedIndex[2012367])
                        {
                          const-val i[2012385]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2012387 'move' i[2012385] _yieldedIndex[2012379])
                          ref call_tmp[2012390]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[2012392]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                          const-val this[2012394]:TaskErrors[169702] "temp"
                          (2012396 'move' this[2012394](2012398 '.v' _iterator[169371] F0_this[2053870]))
                          (2012401 'move' _this_tmp_[2012392](2012404 call errorsArray[814118] this[2012394]))
                          val coerce_tmp[2012406]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2012408 'move' coerce_tmp[2012406](2012410 'deref' _this_tmp_[2012392]))
                          (2012412 'move' call_tmp[2012390](2012415 call this[1235814] coerce_tmp[2012406] _yieldedIndex[2012379]))
                          const-val call_tmp[2012418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[2012420]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2012422 'move' coerce_tmp[2012420](2012425 call borrow[1235889] call_tmp[2012390]))
                          val coerce_tmp[2012427]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2012429 'move' coerce_tmp[2012427](2012431 'cast' object[22] coerce_tmp[2012420]))
                          (2012434 'move' call_tmp[2012418](2012437 call !=[1485] coerce_tmp[2012427] nil[44]))
                          const-val call_tmp[2012440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2012442 'move' call_tmp[2012440] call_tmp[2012418])
                          if call_tmp[2012418]
                          {
                            ref yret[2012447]:_ref(owned Error?)[966483] "dead after last mention" "YVV" "temp"
                            ref call_tmp[2012449]:_ref(owned Error?)[966483] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[2012451]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "temp"
                            const-val this[2012453]:TaskErrors[169702] "temp"
                            (2012455 'move' this[2012453](2012457 '.v' _iterator[169371] F0_this[2053870]))
                            (2012460 'move' _this_tmp_[2012451](2012463 call errorsArray[814118] this[2012453]))
                            val coerce_tmp[2012465]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (2012467 'move' coerce_tmp[2012465](2012469 'deref' _this_tmp_[2012451]))
                            (2012471 'move' call_tmp[2012449](2012474 call this[1235814] coerce_tmp[2012465] i[2012385]))
                            ref _yieldedIndex[2012477]:_ref(owned Error?)[966483] "temp"
                            (2012479 'move' _yieldedIndex[2012477] call_tmp[2012449])
                            {
                              ref err[2012483]:_ref(owned Error?)[966483] "index var" "insert auto destroy"
                              (2012485 'move' err[2012483] _yieldedIndex[2012477])
                              {
                                val call_tmp[2012489]:Error[167984] "dead at end of block" "maybe param" "temp"
                                (2012491 'move' call_tmp[2012489](2012494 call postfix![1799677] err[2012483]))
                                val e[2012496]:Error[167984] "dead at end of block" "insert auto destroy"
                                (2012498 'move' e[2012496] call_tmp[2012489])
                                const-val call_tmp[2012503]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[2012505]:int(32)[95] "temp"
                                (2012507 'move' _virtual_method_tmp_[2012505](2012509 'getcid' e[2012496]))
                                val ret_tmp[2012511]:string[26] "temp"
                                (2012513 'virtual method call' message[167975] _virtual_method_tmp_[2012505] e[2012496] ret_tmp[2012511])
                                (2012518 'move' call_tmp[2012503] ret_tmp[2012511])
                                const-val call_tmp[2012521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2012523 'move' call_tmp[2012521](2012526 call ==[38823] call_tmp[2012503] maxMsg[169092]))
                                const-val call_tmp[2012529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2012531 'move' call_tmp[2012529] call_tmp[2012521])
                                if call_tmp[2012529]
                                {
                                  val coerce_tmp[2012536]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (2012538 'move' coerce_tmp[2012536] e[2012496])
                                  (2012542 call =[1232479] last[169106] coerce_tmp[2012536])
                                }
                                (2012547 call chpl__autoDestroy[1562275] call_tmp[2012503])
                              }
                              label _continueLabel[2012549]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2012294]:int(64)[13] "temp"
                      (2012296 'move' low[2012294](2012298 '.v' _iterator[2012203] F0_low[2065762]))
                      (2012301 '=' i[2012229] low[2012294])
                    }
                    {
                      const-val high[2012305]:int(64)[13] "temp"
                      (2012307 'move' high[2012305](2012309 '.v' _iterator[2012203] F1_high[2065766]))
                      (2012312 '<=' i[2012229] high[2012305])
                    }
                    {
                      val call_tmp[2012316]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2012318 '+=' i[2012229] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2012355]
                }
                (2012358 call _freeIterator[1103535] _iterator[2012203])
                (2012361 call chpl__autoDestroy[1635435] tmp[2012055])
                label _endchpl_direct_counted_range_iter_helper[2012363]
              }
              (1943520 call _freeIterator[1103785] _iterator[1943372])
              label _endchpl_direct_counted_range_iter[1943522]
            }
            (1943525 call _freeIterator[1104035] _iterator[1943335])
            label _endthese[1943527]
          }
          label _breakLabel[169376]
          (1877020 call _freeIterator[1238294] _iterator[169371])
        }
      }
    }
    const-val call_tmp[680116]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866700]:string[26] "temp"
    (169411 call _cast[1063214] n[169081] ret_tmp[1866700])
    (1866703 'move' call_tmp[680116] ret_tmp[1866700])
    const-val call_tmp[680121]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863346]:string[26] "temp"
    (169430 call +[38345] call_tmp[680116] " errors: " ret_tmp[1863346])
    (1863349 'move' call_tmp[680121] ret_tmp[1863346])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544675 'move' ret[169432] call_tmp[680121])
    const-val tmp[428434]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428455]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1800246]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800252 'move' coerce_tmp[1800246](1800248 'cast' object[22] first[169099]))
    (428466 'move' tmp[428455](169438 call !=[1485] coerce_tmp[1800246] nil[44]))
    val tmp[570535]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570536]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680134 'move' call_tmp[680131] tmp[428455])
    (570541 'move' tmp[570536] call_tmp[680131])
    if tmp[570536]
    {
      const-val tmp[570543]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1800258]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800264 'move' coerce_tmp[1800258](1800260 'cast' object[22] last[169106]))
      (680139 'move' call_tmp[680136](169442 call !=[1485] coerce_tmp[1800258] nil[44]))
      (570545 'move' tmp[570543] call_tmp[680136])
      (570550 'move' tmp[570535] tmp[570543])
    }
    {
      (570555 'move' tmp[570535] 0)
    }
    (428445 'move' tmp[428434] tmp[570535])
    val tmp[570562]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570563]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680149 'move' call_tmp[680146] tmp[428434])
    (570568 'move' tmp[570563] call_tmp[680146])
    if tmp[570563]
    {
      const-val tmp[570570]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1800270]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800276 'move' coerce_tmp[1800270](1800272 'cast' object[22] first[169099]))
      val coerce_tmp[1800278]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800284 'move' coerce_tmp[1800278](1800280 'cast' object[22] last[169106]))
      (680154 'move' call_tmp[680151](169448 call !=[1485] coerce_tmp[1800270] coerce_tmp[1800278]))
      (570572 'move' tmp[570570] call_tmp[680151])
      (570577 'move' tmp[570562] tmp[570570])
    }
    {
      (570582 'move' tmp[570562] 0)
    }
    const-val call_tmp[680156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680159 'move' call_tmp[680156] tmp[570562])
    if call_tmp[680156]
    {
      val call_tmp[680161]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680164 'move' call_tmp[680161](169455 call postfix![967844] first[169099]))
      const-val call_tmp[680166]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864710]:string[26] "temp"
      (169458 call chpl_describe_error[169835] call_tmp[680161] ret_tmp[1864710])
      (1864713 'move' call_tmp[680166] ret_tmp[1864710])
      const-val call_tmp[680171]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863352]:string[26] "temp"
      (169476 call +[38345] call_tmp[680166] " ... " ret_tmp[1863352])
      (1863355 'move' call_tmp[680171] ret_tmp[1863352])
      val call_tmp[680176]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680179 'move' call_tmp[680176](169480 call postfix![967844] last[169106]))
      const-val call_tmp[680181]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864716]:string[26] "temp"
      (169483 call chpl_describe_error[169835] call_tmp[680176] ret_tmp[1864716])
      (1864719 'move' call_tmp[680181] ret_tmp[1864716])
      const-val call_tmp[680186]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863358]:string[26] "temp"
      (169484 call +[38345] call_tmp[680171] call_tmp[680181] ret_tmp[1863358])
      (1863361 'move' call_tmp[680186] ret_tmp[1863358])
      (169486 call +=[38800] ret[169432] call_tmp[680186])
      (1877023 call chpl__autoDestroy[1562275] call_tmp[680186])
      (1877026 call chpl__autoDestroy[1562275] call_tmp[680181])
      (1877029 call chpl__autoDestroy[1562275] call_tmp[680171])
      (1877032 call chpl__autoDestroy[1562275] call_tmp[680166])
    }
    {
      const-val call_tmp[680191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1800294]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800300 'move' coerce_tmp[1800294](1800296 'cast' object[22] first[169099]))
      (680194 'move' call_tmp[680191](169491 call !=[1485] coerce_tmp[1800294] nil[44]))
      const-val call_tmp[680196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680199 'move' call_tmp[680196] call_tmp[680191])
      if call_tmp[680196]
      {
        val call_tmp[680201]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        (680204 'move' call_tmp[680201] first[169099])
        const-val call_tmp[680206]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1864722]:string[26] "temp"
        (169499 call chpl_describe_error[169835] call_tmp[680201] ret_tmp[1864722])
        (1864725 'move' call_tmp[680206] ret_tmp[1864722])
        (169500 call +=[38800] ret[169432] call_tmp[680206])
        (1877036 call chpl__autoDestroy[1562275] call_tmp[680206])
      }
    }
    (1800307 'move' ret[522232] ret[169432])
    (1877039 call chpl__autoDestroy[1562275] call_tmp[680116])
    (1877042 call chpl__autoDestroy[1562275] maxMsg[169092])
    (1877045 call chpl__autoDestroy[1562275] minMsg[169087])
    gotoReturn _end_message[522230] _end_message[522230]
    label _end_message[522230]
    (1876390 '=' _retArg[1876388] ret[522232])
    (1876392 return _void[55])
  }
  function TaskErrors[169702].nErrors[814092](const in arg this[814096]:TaskErrors[169702]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814106]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[814113]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (814116 'move' call_tmp[814113](814100 '.' this[814096] nErrors[168363]))
    (814111 'move' ret[814106] call_tmp[814113])
    (814108 return ret[814106])
  }
  function TaskErrors[169702].errorsArray[814118](const in arg this[814122]:TaskErrors[169702]) ref : _ref(c_ptr(owned Error?))[1235685] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814132]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "RVV" "temp"
    ref call_tmp[814139]:_ref(c_ptr(owned Error?))[1235685] "dead after last mention" "maybe param" "temp"
    (814142 'move' call_tmp[814139](814126 '.' this[814122] errorsArray[168374]))
    (814137 'move' ret[814132] call_tmp[814139])
    (814134 return ret[814132])
  }
  function _new[1241041](ref arg group[1241050]:_ref(chpl_TaskErrors)[941001]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1838949]:TaskErrors[169702] "temp"
    val ret[1241080]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1241043]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241090 'move' call_tmp[1241087](1241101 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241104]:c_void_ptr[149] "dead after last mention" "temp"
    (1241106 'move' cast_tmp[1241104](1241058 call chpl_here_alloc[187788] call_tmp[1241087] 41))
    (1241061 'move' initTemp[1241043](1241108 'cast' TaskErrors[169702] cast_tmp[1241104]))
    (1241063 'setcid' initTemp[1241043])
    (1241044 call init[168384] initTemp[1241043] group[1241050])
    val tmp[1241065]:TaskErrors[169702] "dead after last mention" "temp"
    (1241069 'move' tmp[1241065] initTemp[1241043])
    (1241085 'move' ret[1241080] tmp[1241065])
    (1241082 return ret[1241080])
  }
  function _new[1789310](const in arg err[1789319]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1839443]:TaskErrors[169702] "temp"
    val ret[1789347]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1789312]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1789354]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1789357 'move' call_tmp[1789354](1789366 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1789369]:c_void_ptr[149] "dead after last mention" "temp"
    (1789371 'move' cast_tmp[1789369](1789325 call chpl_here_alloc[187788] call_tmp[1789354] 41))
    (1789328 'move' initTemp[1789312](1789373 'cast' TaskErrors[169702] cast_tmp[1789369]))
    (1789330 'setcid' initTemp[1789312])
    (1789313 call init[168765] initTemp[1789312] err[1789319])
    val tmp[1789332]:TaskErrors[169702] "dead after last mention" "temp"
    (1789336 'move' tmp[1789332] initTemp[1789312])
    (1789352 'move' ret[1789347] tmp[1789332])
    (1789349 return ret[1789347])
  }
  type TaskErrors[169702] val super[355751]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235676] "no doc"
  function chpl_error_type_name[169752](const in arg err[169749]:Error[167984], ref arg _retArg[1864704]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522277]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680257]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680260 'move' call_tmp[680257](169774 'getcid' err[169749]))
    const-val cid[169775]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544679 'move' cid[169775] call_tmp[680257])
    const-val call_tmp[680262]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680265 'move' call_tmp[680262](169800 'class name by id' cid[169775]))
    const-val nameC[169801]:c_string[19] "dead at end of block" "insert auto destroy"
    (544681 'move' nameC[169801] call_tmp[680262])
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544683]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1842538]:Error[167984] "error variable" "temp"
      (1842554 'move' error[1842538] nil[44])
      const-val call_tmp[680267]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1788889]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1788894 'move' default_arg_length[1788889](1788891 call createStringWithNewBuffer_default_length[964107] nameC[169801] error[1842538]))
      val errorExists[2169820]:bool[10] "temp"
      (2169825 'move' errorExists[2169820](2169822 '!=' error[1842538] nil[44]))
      if errorExists[2169820]
      {
        gotoErrorHandling handler[1842539] handler[1842539]
      }
      const-val ret_tmp[1862570]:string[26] "temp"
      (169814 call createStringWithNewBuffer[30413] nameC[169801] default_arg_length[1788889] strict[173692] error[1842538] ret_tmp[1862570])
      (1862573 'move' call_tmp[680267] ret_tmp[1862570])
      val errorExists[2169828]:bool[10] "temp"
      (2169833 'move' errorExists[2169828](2169830 '!=' error[1842538] nil[44]))
      if errorExists[2169828]
      {
        gotoErrorHandling handler[1842539] handler[1842539]
      }
      (544694 'move' nameS[169806] call_tmp[680267])
      label handler[1842539]
      const-val shouldHandleError[1842563]:bool[10] "temp"
      val errorExists[2169836]:bool[10] "temp"
      (2169841 'move' errorExists[2169836](2169838 '!=' error[1842538] nil[44]))
      (1842567 'move' shouldHandleError[1842563] errorExists[2169836])
      if shouldHandleError[1842563]
      {
        (1842560 call chpl_uncaught_error[170289] error[1842538])
      }
    }
    (1788908 'move' ret[522277] nameS[169806])
    gotoReturn _end_chpl_error_type_name[522275] _end_chpl_error_type_name[522275]
    label _end_chpl_error_type_name[522275]
    (1864706 '=' _retArg[1864704] ret[522277])
    (1864708 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:Error[167984], ref arg _retArg[1864734]:_ref(string)[938000]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522289]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680272]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1864698]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1864698])
    (1864701 'move' call_tmp[680272] ret_tmp[1864698])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544697 'move' nameS[169842] call_tmp[680272])
    const-val call_tmp[680277]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863364]:string[26] "temp"
    (169849 call +[38345] nameS[169842] ": " ret_tmp[1863364])
    (1863367 'move' call_tmp[680277] ret_tmp[1863364])
    const-val call_tmp[680284]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1834921]:int(32)[95] "temp"
    (1834925 'move' _virtual_method_tmp_[1834921](1834923 'getcid' err[169832]))
    val ret_tmp[1864650]:string[26] "temp"
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1834921] err[169832] ret_tmp[1864650])
    (1864653 'move' call_tmp[680284] ret_tmp[1864650])
    const-val call_tmp[680289]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863370]:string[26] "temp"
    (169857 call +[38345] call_tmp[680277] call_tmp[680284] ret_tmp[1863370])
    (1863373 'move' call_tmp[680289] ret_tmp[1863370])
    const-val ret[169859]:string[26] "dead at end of block" "insert auto destroy"
    (544699 'move' ret[169859] call_tmp[680289])
    (1788915 'move' ret[522289] ret[169859])
    (1877048 call chpl__autoDestroy[1562275] call_tmp[680284])
    (1877051 call chpl__autoDestroy[1562275] call_tmp[680277])
    (1877054 call chpl__autoDestroy[1562275] nameS[169842])
    gotoReturn _end_chpl_describe_error[522287] _end_chpl_describe_error[522287]
    label _end_chpl_describe_error[522287]
    (1864736 '=' _retArg[1864734] ret[522289])
    (1864738 return _void[55])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:Error[167984]) : Error[167984] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522301]:Error[167984] "dead after last mention" "RVV" "temp"
    val fixErr[169885]:Error[167984] "dead at end of block" "insert auto destroy"
    (544701 'move' fixErr[169885] err[169874])
    const-val call_tmp[680294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969547]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969552 'move' coerce_tmp[969547](969549 'cast' object[22] fixErr[169885]))
    (680297 'move' call_tmp[680294](169892 call ==[1146] coerce_tmp[969547] nil[44]))
    const-val call_tmp[680299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680302 'move' call_tmp[680299] call_tmp[680294])
    if call_tmp[680299]
    {
      val call_tmp[680304]:NilThrownError[168029] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[969662]:NilThrownError[168029] "dead after last mention" "temp"
      (969664 'move' new_temp[969662](969594 call _new[969610]))
      (680307 'move' call_tmp[680304] new_temp[969662])
      val coerce_tmp[969769]:NilThrownError[168029] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969775 'move' coerce_tmp[969769] call_tmp[680304])
      (169901 call =[969724] fixErr[169885] coerce_tmp[969769])
    }
    const-val call_tmp[680309]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680312 'move' call_tmp[680309](169927 '_get_user_line'))
    const-val line[169928]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544703 'move' line[169928] call_tmp[680309])
    const-val call_tmp[680314]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680317 'move' call_tmp[680314](169950 '_get_user_file'))
    const-val fileId[169951]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544705 'move' fileId[169951] call_tmp[680314])
    val call_tmp[680319]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680322 'move' call_tmp[680319](169956 call postfix![967835] fixErr[169885]))
    ref call_tmp[680326]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[969786]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969791 'move' coerce_tmp[969786] call_tmp[680319])
    (680329 'move' call_tmp[680326](169960 call _hasThrowInfo[811781] coerce_tmp[969786]))
    const-val call_tmp[680331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[969794]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969798 'move' coerce_tmp[969794](969796 'deref' call_tmp[680326]))
    (680334 'move' call_tmp[680331](169963 call ![7494] coerce_tmp[969794]))
    const-val call_tmp[680336]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680339 'move' call_tmp[680336] call_tmp[680331])
    if call_tmp[680336]
    {
      val call_tmp[680341]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680344 'move' call_tmp[680341](169966 call postfix![967835] fixErr[169885]))
      ref call_tmp[680348]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969802]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969807 'move' coerce_tmp[969802] call_tmp[680341])
      (680351 'move' call_tmp[680348](169968 call _hasThrowInfo[811781] coerce_tmp[969802]))
      (169972 call =[435217] call_tmp[680348] 1)
      val call_tmp[680353]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680356 'move' call_tmp[680353](169977 call postfix![967835] fixErr[169885]))
      ref call_tmp[680360]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969812]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969817 'move' coerce_tmp[969812] call_tmp[680353])
      (680363 'move' call_tmp[680360](169981 call thrownLine[811703] coerce_tmp[969812]))
      (169985 call =[435370] call_tmp[680360] line[169928])
      val call_tmp[680365]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680368 'move' call_tmp[680365](169989 call postfix![967835] fixErr[169885]))
      ref call_tmp[680372]:_ref(int(32))[936687] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969822]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969827 'move' coerce_tmp[969822] call_tmp[680365])
      (680375 'move' call_tmp[680372](169993 call thrownFileId[811729] coerce_tmp[969822]))
      (169997 call =[435349] call_tmp[680372] fileId[169951])
    }
    val call_tmp[680377]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680380 'move' call_tmp[680377](170007 call _to_nonnil[968074] fixErr[169885]))
    (969833 'move' ret[522301] call_tmp[680377])
    gotoReturn _end_chpl_do_fix_thrown_error[522299] _end_chpl_do_fix_thrown_error[522299]
    label _end_chpl_do_fix_thrown_error[522299]
    (522303 return ret[522301])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966519]) : Error[167984] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969514]:owned Error[966519] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969517 'move' _formal_tmp_err[969514] err[170046])
    val ret[522323]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680396]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680399 'move' call_tmp[680396](170059 call release[969259] _formal_tmp_err[969514]))
    val call_tmp[680401]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969535]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969541 'move' coerce_tmp[969535] call_tmp[680396])
    (680404 'move' call_tmp[680401](170061 call chpl_do_fix_thrown_error[169877] coerce_tmp[969535]))
    (969836 'move' ret[522323] call_tmp[680401])
    (1877057 call chpl__autoDestroy[1569406] _formal_tmp_err[969514])
    (522325 return ret[522323])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1788762]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1788767 'move' coerce_tmp[1788762](1788764 'cast' object[22] err[170260]))
    (680459 'move' call_tmp[680456](170267 call !=[1485] coerce_tmp[1788762] nil[44]))
    const-val call_tmp[680461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680464 'move' call_tmp[680461] call_tmp[680456])
    if call_tmp[680461]
    {
      (170271 call chpl__delete[1236244] err[170260])
    }
    (522344 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:Error[167984]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680466]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680469 'move' call_tmp[680466](170321 '_get_user_file'))
    const-val call_tmp[680471]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680474 'move' call_tmp[680471](170322 'chpl_lookupFilename' call_tmp[680466]))
    const-val myFileC[170323]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544711 'move' myFileC[170323] call_tmp[680471])
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544713]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1842571]:Error[167984] "error variable" "temp"
      (1842587 'move' error[1842571] nil[44])
      const-val call_tmp[680476]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1788787]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1788792 'move' default_arg_length[1788787](1788789 call createStringWithNewBuffer_default_length[964107] myFileC[170323] error[1842571]))
      val errorExists[2169844]:bool[10] "temp"
      (2169849 'move' errorExists[2169844](2169846 '!=' error[1842571] nil[44]))
      if errorExists[2169844]
      {
        gotoErrorHandling handler[1842572] handler[1842572]
      }
      const-val ret_tmp[1862576]:string[26] "temp"
      (170336 call createStringWithNewBuffer[30413] myFileC[170323] default_arg_length[1788787] strict[173692] error[1842571] ret_tmp[1862576])
      (1862579 'move' call_tmp[680476] ret_tmp[1862576])
      val errorExists[2169852]:bool[10] "temp"
      (2169857 'move' errorExists[2169852](2169854 '!=' error[1842571] nil[44]))
      if errorExists[2169852]
      {
        gotoErrorHandling handler[1842572] handler[1842572]
      }
      (544724 'move' myFileS[170328] call_tmp[680476])
      label handler[1842572]
      const-val shouldHandleError[1842596]:bool[10] "temp"
      val errorExists[2169860]:bool[10] "temp"
      (2169865 'move' errorExists[2169860](2169862 '!=' error[1842571] nil[44]))
      (1842600 'move' shouldHandleError[1842596] errorExists[2169860])
      if shouldHandleError[1842596]
      {
        (1842593 call chpl_uncaught_error[170289] error[1842571])
      }
    }
    const-val call_tmp[680481]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680484 'move' call_tmp[680481](170346 '_get_user_line'))
    const-val myLine[170347]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544727 'move' myLine[170347] call_tmp[680481])
    ref call_tmp[680488]:_ref(int(32))[936687] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1788805]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1788810 'move' coerce_tmp[1788805] err[170286])
    (680491 'move' call_tmp[680488](170355 call thrownFileId[811729] coerce_tmp[1788805]))
    const-val call_tmp[680493]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680496 'move' call_tmp[680493](170358 'chpl_lookupFilename' call_tmp[680488]))
    const-val thrownFileC[170359]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544729 'move' thrownFileC[170359] call_tmp[680493])
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544731]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1842604]:Error[167984] "error variable" "temp"
      (1842620 'move' error[1842604] nil[44])
      const-val call_tmp[680498]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1788829]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1788834 'move' default_arg_length[1788829](1788831 call createStringWithNewBuffer_default_length[964107] thrownFileC[170359] error[1842604]))
      val errorExists[2169868]:bool[10] "temp"
      (2169873 'move' errorExists[2169868](2169870 '!=' error[1842604] nil[44]))
      if errorExists[2169868]
      {
        gotoErrorHandling handler[1842605] handler[1842605]
      }
      const-val ret_tmp[1862582]:string[26] "temp"
      (170372 call createStringWithNewBuffer[30413] thrownFileC[170359] default_arg_length[1788829] strict[173692] error[1842604] ret_tmp[1862582])
      (1862585 'move' call_tmp[680498] ret_tmp[1862582])
      val errorExists[2169876]:bool[10] "temp"
      (2169881 'move' errorExists[2169876](2169878 '!=' error[1842604] nil[44]))
      if errorExists[2169876]
      {
        gotoErrorHandling handler[1842605] handler[1842605]
      }
      (544742 'move' thrownFileS[170364] call_tmp[680498])
      label handler[1842605]
      const-val shouldHandleError[1842629]:bool[10] "temp"
      val errorExists[2169884]:bool[10] "temp"
      (2169889 'move' errorExists[2169884](2169886 '!=' error[1842604] nil[44]))
      (1842633 'move' shouldHandleError[1842629] errorExists[2169884])
      if shouldHandleError[1842629]
      {
        (1842626 call chpl_uncaught_error[170289] error[1842604])
      }
    }
    ref call_tmp[680505]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1788847]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1788852 'move' coerce_tmp[1788847] err[170286])
    (680508 'move' call_tmp[680505](170381 call thrownLine[811703] coerce_tmp[1788847]))
    const-val thrownLine[170384]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1788857]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1788861 'move' coerce_tmp[1788857](1788859 'deref' call_tmp[680505]))
    (1877060 '=' thrownLine[170384] coerce_tmp[1788857])
    (544745 'noop')
    const-val call_tmp[680510]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1788864]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1788869 'move' coerce_tmp[1788864] err[170286])
    const-val ret_tmp[1864728]:string[26] "temp"
    (170408 call chpl_describe_error[169835] coerce_tmp[1788864] ret_tmp[1864728])
    (1864731 'move' call_tmp[680510] ret_tmp[1864728])
    const-val call_tmp[680515]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863376]:string[26] "temp"
    (170409 call +[38345] "uncaught " call_tmp[680510] ret_tmp[1863376])
    (1863379 'move' call_tmp[680515] ret_tmp[1863376])
    const-val call_tmp[680520]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863382]:string[26] "temp"
    (170428 call +[38345] call_tmp[680515] "\n  " ret_tmp[1863382])
    (1863385 'move' call_tmp[680520] ret_tmp[1863382])
    const-val call_tmp[680525]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863388]:string[26] "temp"
    (170431 call +[38345] call_tmp[680520] thrownFileS[170364] ret_tmp[1863388])
    (1863391 'move' call_tmp[680525] ret_tmp[1863388])
    const-val call_tmp[680530]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863394]:string[26] "temp"
    (170434 call +[38345] call_tmp[680525] ":" ret_tmp[1863394])
    (1863397 'move' call_tmp[680530] ret_tmp[1863394])
    const-val call_tmp[680535]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866706]:string[26] "temp"
    (170438 call _cast[1063214] thrownLine[170384] ret_tmp[1866706])
    (1866709 'move' call_tmp[680535] ret_tmp[1866706])
    const-val call_tmp[680540]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863400]:string[26] "temp"
    (170440 call +[38345] call_tmp[680530] call_tmp[680535] ret_tmp[1863400])
    (1863403 'move' call_tmp[680540] ret_tmp[1863400])
    const-val call_tmp[680545]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863406]:string[26] "temp"
    (170459 call +[38345] call_tmp[680540] ": thrown here" ret_tmp[1863406])
    (1863409 'move' call_tmp[680545] ret_tmp[1863406])
    const-val call_tmp[680550]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863412]:string[26] "temp"
    (170462 call +[38345] call_tmp[680545] "\n  " ret_tmp[1863412])
    (1863415 'move' call_tmp[680550] ret_tmp[1863412])
    const-val call_tmp[680555]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863418]:string[26] "temp"
    (170465 call +[38345] call_tmp[680550] myFileS[170328] ret_tmp[1863418])
    (1863421 'move' call_tmp[680555] ret_tmp[1863418])
    const-val call_tmp[680560]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863424]:string[26] "temp"
    (170468 call +[38345] call_tmp[680555] ":" ret_tmp[1863424])
    (1863427 'move' call_tmp[680560] ret_tmp[1863424])
    const-val call_tmp[680565]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866712]:string[26] "temp"
    (170472 call _cast[1063214] myLine[170347] ret_tmp[1866712])
    (1866715 'move' call_tmp[680565] ret_tmp[1866712])
    const-val call_tmp[680570]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863430]:string[26] "temp"
    (170474 call +[38345] call_tmp[680560] call_tmp[680565] ret_tmp[1863430])
    (1863433 'move' call_tmp[680570] ret_tmp[1863430])
    const-val call_tmp[680575]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863436]:string[26] "temp"
    (170493 call +[38345] call_tmp[680570] ": uncaught here" ret_tmp[1863436])
    (1863439 'move' call_tmp[680575] ret_tmp[1863436])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544747 'move' s[170495] call_tmp[680575])
    const-val call_tmp[680582]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680585 'move' call_tmp[680582](170505 call c_str[32935] s[170495]))
    (170507 call chpl_error_preformatted[1788931] call_tmp[680582])
    (1877063 call chpl__autoDestroy[1562275] s[170495])
    (1877066 call chpl__autoDestroy[1562275] call_tmp[680570])
    (1877069 call chpl__autoDestroy[1562275] call_tmp[680565])
    (1877072 call chpl__autoDestroy[1562275] call_tmp[680560])
    (1877075 call chpl__autoDestroy[1562275] call_tmp[680555])
    (1877078 call chpl__autoDestroy[1562275] call_tmp[680550])
    (1877081 call chpl__autoDestroy[1562275] call_tmp[680545])
    (1877084 call chpl__autoDestroy[1562275] call_tmp[680540])
    (1877087 call chpl__autoDestroy[1562275] call_tmp[680535])
    (1877090 call chpl__autoDestroy[1562275] call_tmp[680530])
    (1877093 call chpl__autoDestroy[1562275] call_tmp[680525])
    (1877096 call chpl__autoDestroy[1562275] call_tmp[680520])
    (1877099 call chpl__autoDestroy[1562275] call_tmp[680515])
    (1877102 call chpl__autoDestroy[1562275] call_tmp[680510])
    (1877105 call chpl__autoDestroy[1562275] thrownFileS[170364])
    (1877108 call chpl__autoDestroy[1562275] myFileS[170328])
    (522348 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:Error[167984]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522350 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522354]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680587]:TaskErrors[169702] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1789161]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789166 'move' coerce_tmp[1789161] err[170532])
    (680590 'move' call_tmp[680587](170543 call _cast[1789019] coerce_tmp[1789161]))
    const-val call_tmp[680592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1789194]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789199 'move' coerce_tmp[1789194](1789196 'cast' object[22] call_tmp[680587]))
    (680595 'move' call_tmp[680592](170548 call _cond_test[9881] coerce_tmp[1789194]))
    if call_tmp[680592]
    {
      (1789379 'move' ret[522354] err[170532])
      gotoReturn _end_chpl_forall_error[522352] _end_chpl_forall_error[522352]
    }
    val call_tmp[680597]:TaskErrors[169702] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1789360]:TaskErrors[169702] "dead after last mention" "temp"
    (1789362 'move' new_temp[1789360](1789206 call _new[1789310] err[170532]))
    (680600 'move' call_tmp[680597] new_temp[1789360])
    (522366 'move' ret[522354](1789381 'cast' Error[167984] call_tmp[680597]))
    label _end_chpl_forall_error[522352]
    (522356 return ret[522354])
  }
  function chpl_enum_cast_error[1071916](const in arg casted[1071918]:uint(8)[100], const  ref arg enumName[1071920]:string[26], ref arg error_out[1844878]:Error[167984]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1071926]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867026]:string[26] "temp"
    (1071931 call _cast[1071980] casted[1071918] ret_tmp[1867026])
    (1867029 'move' call_tmp[1071926] ret_tmp[1867026])
    const-val call_tmp[1071934]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863568]:string[26] "temp"
    (1071939 call +[38345] "bad cast from int '" call_tmp[1071926] ret_tmp[1863568])
    (1863571 'move' call_tmp[1071934] ret_tmp[1863568])
    const-val call_tmp[1071942]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863574]:string[26] "temp"
    (1071947 call +[38345] call_tmp[1071934] "' to enum '" ret_tmp[1863574])
    (1863577 'move' call_tmp[1071942] ret_tmp[1863574])
    const-val call_tmp[1071950]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863580]:string[26] "temp"
    (1071955 call +[38345] call_tmp[1071942] enumName[1071920] ret_tmp[1863580])
    (1863583 'move' call_tmp[1071950] ret_tmp[1863580])
    const-val call_tmp[1071958]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073616]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073618 'move' new_temp[1073616](1073542 call _new[1073563] call_tmp[1071950] "'"))
    const-val initTemp[1073637]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
    (1073640 call init[1064270] initTemp[1073637] new_temp[1073616])
    (1071960 'move' call_tmp[1071958] initTemp[1073637])
    val call_tmp[1071968]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073654]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1866910]:owned Error[966519] "temp"
    (1073656 call _cast[1064791] call_tmp[1071958] ret_tmp[1866910])
    (1866913 'move' coerce_tmp[1073654] ret_tmp[1866910])
    const-val _formal_tmp_in_err[1073833]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073837 'move' _formal_tmp_in_err[1073833] coerce_tmp[1073654])
    (1071970 'move' call_tmp[1071968](1071973 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073833]))
    {
      val castedError[1844883]:Error[167984] "temp"
      (1844889 'move' castedError[1844883] call_tmp[1071968])
      (1844891 '=' error_out[1844878] castedError[1844883])
      (1878943 call chpl__autoDestroy[1562275] call_tmp[1071950])
      (1878946 call chpl__autoDestroy[1562275] call_tmp[1071942])
      (1878949 call chpl__autoDestroy[1562275] call_tmp[1071934])
      (1878952 call chpl__autoDestroy[1562275] call_tmp[1071926])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1844880] _endchpl_enum_cast_error[1844880]
    }
    (1878964 call chpl__autoDestroy[1562275] call_tmp[1071950])
    (1878961 call chpl__autoDestroy[1562275] call_tmp[1071942])
    (1878958 call chpl__autoDestroy[1562275] call_tmp[1071934])
    (1878955 call chpl__autoDestroy[1562275] call_tmp[1071926])
    label _endchpl_enum_cast_error[1844880]
    (1071977 return _void[55])
  }
  function on_fn[935399](ref arg this[1841194]:_ref(chpl_TaskErrors)[941001], const in arg err[1841196]:Error[167984]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[679529]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
      (679532 'move' call_tmp[679529](361444 call _errorsLock[812303] this[1841194]))
      (168290 call lock[187323] call_tmp[679529])
      ref call_tmp[679538]:_ref(Error)[941081] "dead at end of block" "maybe param" "temp"
      (679541 'move' call_tmp[679538](388513 call _head[812277] this[1841194]))
      val tmp[168294]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1232464]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1232468 'move' coerce_tmp[1232464](1232466 'deref' call_tmp[679538]))
      (1877397 '=' tmp[168294] coerce_tmp[1232464])
      (544621 'noop')
      ref call_tmp[679545]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1232471]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232476 'move' coerce_tmp[1232471] err[1841196])
      (679548 'move' call_tmp[679545](168301 call _next[811677] coerce_tmp[1232471]))
      (168305 call =[1232507] call_tmp[679545] tmp[168294])
      ref call_tmp[679552]:_ref(Error)[941081] "dead after last mention" "maybe param" "temp"
      (679555 'move' call_tmp[679552](388519 call _head[812277] this[1841194]))
      val coerce_tmp[1232544]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232550 'move' coerce_tmp[1232544] err[1841196])
      (168310 call =[1232507] call_tmp[679552] coerce_tmp[1232544])
      ref call_tmp[679559]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
      (679562 'move' call_tmp[679559](361450 call _errorsLock[812303] this[1841194]))
      (168318 call unlock[187415] call_tmp[679559])
    }
    (935406 return _void[55])
  }
  function chpl_error_preformatted[1788931](const in arg c_string[1788933]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1788939 return _void[55])
  }
  function wrapon_fn[2148231](const in arg dummy_locale_arg[2148233]:chpl_localeID_t[209352], in arg buf[2148235]:c_void_ptr[149], in arg buf_size[2148237]:int(64)[13], in arg c[2148239]:_class_localson_fn[2148185]) : void[4] "on block"
  {
    val _0_tmp[2148244]:chpl_localeID_t[209352] "temp"
    (2148249 'move' _0_tmp[2148244](2148246 '.v' c[2148239] _0_tmp[2148188]))
    ref _1_this[2148251]:chpl_TaskErrors[168348] "temp"
    (2148256 'move' _1_this[2148251](2148253 '.v' c[2148239] _1_this[2148190]))
    val _2_err[2148259]:Error[167984] "temp"
    (2148264 'move' _2_err[2148259](2148261 '.v' c[2148239] _2_err[2148192]))
    (2148242 call on_fn[935399] _1_this[2148251] _2_err[2148259])
    (2148267 return _void[55])
  }
}