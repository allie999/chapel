AST dump for PCGRandomLib after pass scopeResolve.
Module use list: ChapelStandard 

{ unknown PCG_DEFAULT_MULTIPLIER_8[311801] "param" "private" 141(311804 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_16[311809] "param" "private" 12829(311812 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_32[311816] "param" "private" 747796405(311819 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_64[311823] "param" "private" 6364136223846793005(311826 'end of statement') function pcg_setseq_8_step_r[311836](ref arg state[311833] :(311832 call uint(64)[115] 8), arg inc[311842] :(311841 call uint(64)[115] 8)) : _unknown[51] "inline" "private" "no return value for void"
  {(311853 call = state[311833](311851 call +(311848 call * state[311833] PCG_DEFAULT_MULTIPLIER_8[311801]) inc[311842]))
  } function pcg_setseq_16_step_r[311868](ref arg state[311865] :(311864 call uint(64)[115] 16), arg inc[311874] :(311873 call uint(64)[115] 16)) : _unknown[51] "inline" "private" "no return value for void"
  {(311885 call = state[311865](311883 call +(311880 call * state[311865] PCG_DEFAULT_MULTIPLIER_16[311809]) inc[311874]))
  } function pcg_setseq_32_step_r[311900](ref arg state[311897] :(311896 call uint(64)[115] 32), arg inc[311906] :(311905 call uint(64)[115] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {(311917 call = state[311897](311915 call +(311912 call * state[311897] PCG_DEFAULT_MULTIPLIER_32[311816]) inc[311906]))
  } function pcg_setseq_64_step_r[311932](ref arg state[311929] :(311928 call uint(64)[115] 64), arg inc[311938] :(311937 call uint(64)[115] 64)) : _unknown[51] "inline" "private" "no return value for void"
  {(311949 call = state[311929](311947 call +(311944 call * state[311929] PCG_DEFAULT_MULTIPLIER_64[311823]) inc[311938]))
  } function pcg_rotr_32[311964](arg value[311961] :(311960 call uint(64)[115] 32), arg rot[311970] :(311969 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { function chpl_bitops_rotr_32[311986](arg x[311983] :(311982 call uint(64)[115] 32), arg n[311992] :(311991 call uint(64)[115] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type(311998 call uint(64)[115] 32)
    } unknown ret[312008](312007 call chpl_bitops_rotr_32 value[311961] rot[311970])(312011 'end of statement')(312013 return ret[312008])
  }
  { scopeless type(311976 call uint(64)[115] 32)
  } function pcg_output_xsh_rr_64_32[312027](arg state[312024] :(312023 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const xorshifted[312053] "const"(312051 call _cast(312050 call uint(64)[115] 32)(312045 call >>(312042 call ^(312039 call >> state[312024] 18) state[312024]) 27))(312036 call uint(64)[115] 32)(312056 'end of statement') const rot[312072] "const"(312070 call _cast(312069 call uint(64)[115] 32)(312064 call >> state[312024] 59))(312061 call uint(64)[115] 32)(312075 'end of statement') const ret[312081] "const"(312080 call pcg_rotr_32 xorshifted[312053] rot[312072])(312084 'end of statement')(312086 return ret[312081])
  }
  { scopeless type(312032 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_8_8[312100](arg state[312097] :(312096 call uint(64)[115] 8)) : _unknown[51] "inline" "private"
  { const word[312128] "const"(312126 call *(312121 call ^(312118 call >> state[312097](312116 call +(312113 call >> state[312097] 6) 2)) state[312097]) 217)(312109 call uint(64)[115] 8)(312131 'end of statement')(312140 return(312138 call ^(312135 call >> word[312128] 6) word[312128]))
  }
  { scopeless type(312105 call uint(64)[115] 8)
  } function pcg_output_rxs_m_xs_16_16[312154](arg state[312151] :(312150 call uint(64)[115] 16)) : _unknown[51] "inline" "private"
  { const word[312182] "const"(312180 call *(312175 call ^(312172 call >> state[312151](312170 call +(312167 call >> state[312151] 13) 3)) state[312151]) 62169)(312163 call uint(64)[115] 16)(312185 'end of statement')(312194 return(312192 call ^(312189 call >> word[312182] 11) word[312182]))
  }
  { scopeless type(312159 call uint(64)[115] 16)
  } function pcg_output_rxs_m_xs_32_32[312208](arg state[312205] :(312204 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { const word[312236] "const"(312234 call *(312229 call ^(312226 call >> state[312205](312224 call +(312221 call >> state[312205] 28) 4)) state[312205]) 277803737)(312217 call uint(64)[115] 32)(312239 'end of statement')(312248 return(312246 call ^(312243 call >> word[312236] 22) word[312236]))
  }
  { scopeless type(312213 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_64_64[312262](arg state[312259] :(312258 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const word[312290] "const"(312288 call *(312283 call ^(312280 call >> state[312259](312278 call +(312275 call >> state[312259] 59) 5)) state[312259]) 12605985483714917081)(312271 call uint(64)[115] 64)(312293 'end of statement')(312302 return(312300 call ^(312297 call >> word[312290] 43) word[312290]))
  }
  { scopeless type(312267 call uint(64)[115] 64)
  } function pcg_setseq_64_xsh_rr_32_rng[312787].srandom[312325](arg _mt[312791]:_MT[238], arg this[312789]:pcg_setseq_64_xsh_rr_32_rng[312787], arg seed[312322] :(312321 call uint(64)[115] 64), arg inc[312331] :(312330 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312339 call =(407855 call . this[312789] c"state")(312337 call + inc[312331] seed[312322]))(312347 call pcg_setseq_64_step_r(407862 call . this[312789] c"state") inc[312331])
  } function pcg_setseq_64_xsh_rr_32_rng[312787].random[312360](arg _mt[312795]:_MT[238], arg this[312793]:pcg_setseq_64_xsh_rr_32_rng[312787], arg inc[312357] :(312356 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312371] "const"(407868 call . this[312793] c"state")(312369 call uint(64)[115] 64)(312374 'end of statement')(312380 call pcg_setseq_64_step_r(407873 call . this[312793] c"state") inc[312357])(312386 return(312385 call pcg_output_xsh_rr_64_32 oldstate[312371]))
  }
  { scopeless type(312365 call uint(64)[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312787].bounded_random[312400](arg _mt[312799]:_MT[238], arg this[312797]:pcg_setseq_64_xsh_rr_32_rng[312787], arg inc[312397] :(312396 call uint(64)[115] 64), arg bound[312406] :(312405 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312428] "const"(312426 call _cast(312425 call uint(64)[115] 32)(312420 call -(312418 call _cast(312417 call int(64)[13] 32) bound[312406])))(312412 call uint(64)[115] 32)(312431 'end of statement') const threshold[312441] "const"(312439 call % negbound[312428] bound[312406])(312436 call uint(64)[115] 32)(312444 'end of statement') unknown tmprng[312446] pcg_setseq_64_xsh_rr_32_rng[312787](312449 'end of statement') unknown tmpinc[312454](312453 call uint(64)[115] 64)(312457 'end of statement') unknown r[312462](312461 call uint(64)[115] 32)(312465 'end of statement')
    { unknown tmp[312491] "temp"(312509 'move' tmp[312491](312507 call _cond_test 1))
      WhileDo[312496]
      {
        {(312472 call = r[312462](312471 call(407884 call . this[312797] c"random") inc[312397]))
          if(312486 call _cond_test(312478 call >= r[312462] threshold[312441]))
          {(312484 return(312482 call % r[312462] bound[312406]))
          }
        } label _continueLabel[312494](312502 'move' tmp[312491](312500 call _cond_test 1)) tmp[312491]
      } label _breakLabel[312495]
    }(312513 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312787].bounded_random_vary_inc[312526](arg _mt[312803]:_MT[238], arg this[312801]:pcg_setseq_64_xsh_rr_32_rng[312787], arg inc[312523] :(312522 call uint(64)[115] 64), arg bound[312532] :(312531 call uint(64)[115] 32), arg seed[312539] :(312538 call uint(64)[115] 64), arg skip[312546] :(312545 call uint(64)[115] 64), arg next_inc[312553] :(312552 call uint(64)[115] 64), arg inc_increment[312560] :(312559 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312582] "const"(312580 call _cast(312579 call uint(64)[115] 32)(312574 call -(312572 call _cast(312571 call int(64)[13] 32) bound[312532])))(312566 call uint(64)[115] 32)(312585 'end of statement') const threshold[312595] "const"(312593 call % negbound[312582] bound[312532])(312590 call uint(64)[115] 32)(312598 'end of statement') unknown r[312603](312602 call uint(64)[115] 32)(312606 'end of statement')(312612 call = r[312603](312611 call(407897 call . this[312801] c"random") inc[312523]))
    if(312625 call _cond_test(312617 call >= r[312603] threshold[312595]))
    {(312623 return(312621 call % r[312603] bound[312532]))
    } unknown newinc[312634](312633 call uint(64)[115] 64)(312637 'end of statement')
    { unknown _indexOfInterest[312711] "an _indexOfInterest or chpl__followIdx variable" "temp" unknown _iterator[312712] "expr temp" "temp"(312721 'move' _iterator[312712](312719 call _getIterator(312643 call chpl_by(312640 call chpl_build_low_bounded_range next_inc[312553]) inc_increment[312560])))
      Defer
      {
        {(312741 call _freeIterator _iterator[312712])
        }
      }
      { scopeless type(312730 'move' _indexOfInterest[312711](312727 call iteratorIndex _iterator[312712]))
      }
      ForLoop[312713]
      { unknown newinc[312734] "index var" "insert auto destroy"(312736 'move' newinc[312734] _indexOfInterest[312711])
        { unknown tmprng[312646] pcg_setseq_64_xsh_rr_32_rng[312787](312649 'end of statement') unknown tmpinc[312655](312654 call uint(64)[115] 64)(312658 'end of statement')(312664 call = tmpinc[312655](312663 call pcg_getvalid_inc newinc[312734]))(312674 call(312668 call . tmprng[312646] c"srandom") seed[312539] tmpinc[312655])(312683 call(312677 call . tmprng[312646] c"advance") tmpinc[312655] skip[312546])(312693 call = r[312603](312692 call(312687 call . tmprng[312646] c"random") tmpinc[312655]))
          if(312706 call _cond_test(312698 call >= r[312603] threshold[312595]))
          {(312704 return(312702 call % r[312603] bound[312532]))
          }
        } label _continueLabel[312716] _indexOfInterest[312711] _iterator[312712]
      } label _breakLabel[312717]
    }(312749 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312787].advance[312762](arg _mt[312807]:_MT[238], arg this[312805]:pcg_setseq_64_xsh_rr_32_rng[312787], arg inc[312759] :(312758 call uint(64)[115] 64), arg delta[312768] :(312767 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312780 call =(407922 call . this[312805] c"state")(312779 call pcg_advance_lcg 64(407927 call . this[312805] c"state") delta[312768] PCG_DEFAULT_MULTIPLIER_64[311823] inc[312759]))
  } type pcg_setseq_64_xsh_rr_32_rng[312787] unknown state[312312](312311 call uint(64)[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312928].srandom[312828](arg _mt[312932]:_MT[238], arg this[312930]:pcg_setseq_64_rxs_m_xs_64_rng[312928], arg seed[312825] :(312824 call uint(64)[115] 64), arg inc[312834] :(312833 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312842 call =(407935 call . this[312930] c"state")(312840 call + inc[312834] seed[312825]))(312850 call pcg_setseq_64_step_r(407942 call . this[312930] c"state") inc[312834])
  } function pcg_setseq_64_rxs_m_xs_64_rng[312928].random[312863](arg _mt[312936]:_MT[238], arg this[312934]:pcg_setseq_64_rxs_m_xs_64_rng[312928], arg inc[312860] :(312859 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312874] "const"(407948 call . this[312934] c"state")(312872 call uint(64)[115] 64)(312877 'end of statement')(312883 call pcg_setseq_64_step_r(407953 call . this[312934] c"state") inc[312860])(312889 return(312888 call pcg_output_rxs_m_xs_64_64 oldstate[312874]))
  }
  { scopeless type(312868 call uint(64)[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312928].advance[312903](arg _mt[312940]:_MT[238], arg this[312938]:pcg_setseq_64_rxs_m_xs_64_rng[312928], arg inc[312900] :(312899 call uint(64)[115] 64), arg delta[312909] :(312908 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312921 call =(407960 call . this[312938] c"state")(312920 call pcg_advance_lcg 64(407965 call . this[312938] c"state") delta[312909] PCG_DEFAULT_MULTIPLIER_64[311823] inc[312900]))
  } type pcg_setseq_64_rxs_m_xs_64_rng[312928] unknown state[312815](312814 call uint(64)[115] 64) function pcg_setseq_32_rxs_m_xs_32_rng[313061].srandom[312961](arg _mt[313065]:_MT[238], arg this[313063]:pcg_setseq_32_rxs_m_xs_32_rng[313061], arg seed[312958] :(312957 call uint(64)[115] 32), arg inc[312967] :(312966 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312975 call =(407973 call . this[313063] c"state")(312973 call + inc[312967] seed[312958]))(312983 call pcg_setseq_32_step_r(407980 call . this[313063] c"state") inc[312967])
  } function pcg_setseq_32_rxs_m_xs_32_rng[313061].random[312996](arg _mt[313069]:_MT[238], arg this[313067]:pcg_setseq_32_rxs_m_xs_32_rng[313061], arg inc[312993] :(312992 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313007] "const"(407986 call . this[313067] c"state")(313005 call uint(64)[115] 32)(313010 'end of statement')(313016 call pcg_setseq_32_step_r(407991 call . this[313067] c"state") inc[312993])(313022 return(313021 call pcg_output_rxs_m_xs_32_32 oldstate[313007]))
  }
  { scopeless type(313001 call uint(64)[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313061].advance[313036](arg _mt[313073]:_MT[238], arg this[313071]:pcg_setseq_32_rxs_m_xs_32_rng[313061], arg inc[313033] :(313032 call uint(64)[115] 32), arg delta[313042] :(313041 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313054 call =(407998 call . this[313071] c"state")(313053 call pcg_advance_lcg 32(408003 call . this[313071] c"state") delta[313042] PCG_DEFAULT_MULTIPLIER_32[311816] inc[313033]))
  } type pcg_setseq_32_rxs_m_xs_32_rng[313061] unknown state[312948](312947 call uint(64)[115] 32) function pcg_setseq_16_rxs_m_xs_16_rng[313194].srandom[313094](arg _mt[313198]:_MT[238], arg this[313196]:pcg_setseq_16_rxs_m_xs_16_rng[313194], arg seed[313091] :(313090 call uint(64)[115] 16), arg inc[313100] :(313099 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313108 call =(408011 call . this[313196] c"state")(313106 call + inc[313100] seed[313091]))(313116 call pcg_setseq_16_step_r(408018 call . this[313196] c"state") inc[313100])
  } function pcg_setseq_16_rxs_m_xs_16_rng[313194].random[313129](arg _mt[313202]:_MT[238], arg this[313200]:pcg_setseq_16_rxs_m_xs_16_rng[313194], arg inc[313126] :(313125 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313140] "const"(408024 call . this[313200] c"state")(313138 call uint(64)[115] 16)(313143 'end of statement')(313149 call pcg_setseq_16_step_r(408029 call . this[313200] c"state") inc[313126])(313155 return(313154 call pcg_output_rxs_m_xs_16_16 oldstate[313140]))
  }
  { scopeless type(313134 call uint(64)[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313194].advance[313169](arg _mt[313206]:_MT[238], arg this[313204]:pcg_setseq_16_rxs_m_xs_16_rng[313194], arg inc[313166] :(313165 call uint(64)[115] 16), arg delta[313175] :(313174 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313187 call =(408036 call . this[313204] c"state")(313186 call pcg_advance_lcg 16(408041 call . this[313204] c"state") delta[313175] PCG_DEFAULT_MULTIPLIER_16[311809] inc[313166]))
  } type pcg_setseq_16_rxs_m_xs_16_rng[313194] unknown state[313081](313080 call uint(64)[115] 16) function pcg_setseq_8_rxs_m_xs_8_rng[313327].srandom[313227](arg _mt[313331]:_MT[238], arg this[313329]:pcg_setseq_8_rxs_m_xs_8_rng[313327], arg seed[313224] :(313223 call uint(64)[115] 8), arg inc[313233] :(313232 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313241 call =(408049 call . this[313329] c"state")(313239 call + inc[313233] seed[313224]))(313249 call pcg_setseq_8_step_r(408056 call . this[313329] c"state") inc[313233])
  } function pcg_setseq_8_rxs_m_xs_8_rng[313327].random[313262](arg _mt[313335]:_MT[238], arg this[313333]:pcg_setseq_8_rxs_m_xs_8_rng[313327], arg inc[313259] :(313258 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313273] "const"(408062 call . this[313333] c"state")(313271 call uint(64)[115] 8)(313276 'end of statement')(313282 call pcg_setseq_8_step_r(408067 call . this[313333] c"state") inc[313259])(313288 return(313287 call pcg_output_rxs_m_xs_8_8 oldstate[313273]))
  }
  { scopeless type(313267 call uint(64)[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313327].advance[313302](arg _mt[313339]:_MT[238], arg this[313337]:pcg_setseq_8_rxs_m_xs_8_rng[313327], arg inc[313299] :(313298 call uint(64)[115] 8), arg delta[313308] :(313307 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313320 call =(408074 call . this[313337] c"state")(313319 call pcg_advance_lcg 8(408079 call . this[313337] c"state") delta[313308] PCG_DEFAULT_MULTIPLIER_8[311801] inc[313299]))
  } type pcg_setseq_8_rxs_m_xs_8_rng[313327] unknown state[313214](313213 call uint(64)[115] 8) function uint_with_bits[313346](param arg nbits[313344]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313396 call _cond_test(313350 call <= nbits[313344] 8))
    {(313356 return(313355 call uint(64)[115] 8))
    }
    {
      if(313390 call _cond_test(313360 call <= nbits[313344] 16))
      {(313366 return(313365 call uint(64)[115] 16))
      }
      {
        if(313384 call _cond_test(313370 call <= nbits[313344] 32))
        {(313376 return(313375 call uint(64)[115] 32))
        }
        {(313382 return(313381 call uint(64)[115] 64))
        }
      }
    }
  } function normalize[313411](arg nbits[313408] : int(64)[13], arg x[313414] : uint(64)[115]) : _unknown[51] "inline" "private"
  { unknown oldx[313418] x[313414](313421 'end of statement') unknown shiftamt[313427](313425 call - 64 nbits[313408])(313430 'end of statement')(313433 call <<= oldx[313418] shiftamt[313427])(313440 return(313438 call >> oldx[313418] shiftamt[313427]))
  } function pcg_output_rxs_m_xs_N_mine[313450](arg nbits[313447] : int(64)[13], arg state_in[313452]:_any[178](?)) : _unknown[51] "private"
  {
    if(313461 call _cond_test(313456 call < nbits[313447] 8))
    {(313459 return state_in[313452])
    }
    if(313483 call _cond_test(313469 call == nbits[313447] 8))
    {(313481 return(313480 call pcg_output_rxs_m_xs_8_8(313477 call _cast(313476 call uint(64)[115] 8) state_in[313452])))
    }
    if(313504 call _cond_test(313490 call == nbits[313447] 16))
    {(313502 return(313501 call pcg_output_rxs_m_xs_16_16(313498 call _cast(313497 call uint(64)[115] 16) state_in[313452])))
    }
    if(313525 call _cond_test(313511 call == nbits[313447] 32))
    {(313523 return(313522 call pcg_output_rxs_m_xs_32_32(313519 call _cast(313518 call uint(64)[115] 32) state_in[313452])))
    }
    if(313546 call _cond_test(313532 call == nbits[313447] 64))
    {(313544 return(313543 call pcg_output_rxs_m_xs_64_64(313540 call _cast(313539 call uint(64)[115] 64) state_in[313452])))
    }
    { unknown shiftamt[313555](313553 call - nbits[313447] 4)(313558 'end of statement') unknown state[313564](313562 call _cast uint(64)[115] state_in[313452])(313567 'end of statement') unknown word[313585](313583 call *(313580 call ^(313577 call >> state[313564](313575 call +(313572 call >> state[313564] shiftamt[313555]) 2)) state[313564]) 217) uint(64)[115](313588 'end of statement')(313595 call = word[313585](313594 call normalize nbits[313447] word[313585]))(313605 return(313603 call ^(313600 call >> word[313585] shiftamt[313555]) word[313585]))
    }
  } function pcg_setseq_N_rxs_m_xs_N_rng[314189](?).mask_state[313621](arg _mt[314193]:_MT[238], arg this[314191]:pcg_setseq_N_rxs_m_xs_N_rng[314189](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {(313629 call =(408118 call . this[314191] c"state")(313628 call normalize(408125 call . this[314191] c"N")(408130 call . this[314191] c"state")))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314189](?).srandom[313641](arg _mt[314197]:_MT[238], arg this[314195]:pcg_setseq_N_rxs_m_xs_N_rng[314189](?), arg seed[313638] : uint(64)[115], arg inc[313644] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313652 call =(408135 call . this[314195] c"state")(313650 call + inc[313644] seed[313638]))
    if(313780 call _cond_test(313658 call <=(408142 call . this[314195] c"N") 8))
    { unknown tmpstate[313667](313665 call _cast(313664 call uint(64)[115] 8)(408147 call . this[314195] c"state"))(313670 'end of statement')(313682 call pcg_setseq_8_step_r tmpstate[313667](313680 call _cast(313679 call uint(64)[115] 8) inc[313644]))(313686 call =(408154 call . this[314195] c"state") tmpstate[313667])
    }
    {
      if(313775 call _cond_test(313691 call <=(408160 call . this[314195] c"N") 16))
      { unknown tmpstate[313700](313698 call _cast(313697 call uint(64)[115] 16)(408165 call . this[314195] c"state"))(313703 'end of statement')(313715 call pcg_setseq_16_step_r tmpstate[313700](313713 call _cast(313712 call uint(64)[115] 16) inc[313644]))(313719 call =(408172 call . this[314195] c"state") tmpstate[313700])
      }
      {
        if(313770 call _cond_test(313724 call <=(408178 call . this[314195] c"N") 32))
        { unknown tmpstate[313733](313731 call _cast(313730 call uint(64)[115] 32)(408183 call . this[314195] c"state"))(313736 'end of statement')(313748 call pcg_setseq_32_step_r tmpstate[313733](313746 call _cast(313745 call uint(64)[115] 32) inc[313644]))(313752 call =(408190 call . this[314195] c"state") tmpstate[313733])
        }
        {
          if(313766 call _cond_test(313757 call <=(408196 call . this[314195] c"N") 64))
          {(313763 call pcg_setseq_64_step_r(408201 call . this[314195] c"state") inc[313644])
          }
        }
      }
    }(313787 call(408208 call . this[314195] c"mask_state"))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314189](?).random[313797](arg _mt[314201]:_MT[238], arg this[314199]:pcg_setseq_N_rxs_m_xs_N_rng[314189](?), arg inc[313794] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314004 call _cond_test(313802 call <=(408213 call . this[314199] c"N") 8))
    { unknown tmpstate[313811](313809 call _cast(313808 call uint(64)[115] 8)(408218 call . this[314199] c"state"))(313814 'end of statement') unknown oldstate[313817] tmpstate[313811](313820 'end of statement')(313831 call pcg_setseq_8_step_r tmpstate[313811](313829 call _cast(313828 call uint(64)[115] 8) inc[313794]))(313835 call =(408226 call . this[314199] c"state") tmpstate[313811])(313840 call(408231 call . this[314199] c"mask_state"))(313851 return(313850 call normalize(408236 call . this[314199] c"N")(313849 call pcg_output_rxs_m_xs_N_mine(408241 call . this[314199] c"N") oldstate[313817])))
    }
    {
      if(313999 call _cond_test(313855 call <=(408247 call . this[314199] c"N") 16))
      { unknown tmpstate[313864](313862 call _cast(313861 call uint(64)[115] 16)(408252 call . this[314199] c"state"))(313867 'end of statement') unknown oldstate[313870] tmpstate[313864](313873 'end of statement')(313884 call pcg_setseq_16_step_r tmpstate[313864](313882 call _cast(313881 call uint(64)[115] 16) inc[313794]))(313888 call =(408260 call . this[314199] c"state") tmpstate[313864])(313893 call(408265 call . this[314199] c"mask_state"))(313904 return(313903 call normalize(408270 call . this[314199] c"N")(313902 call pcg_output_rxs_m_xs_N_mine(408275 call . this[314199] c"N") oldstate[313870])))
      }
      {
        if(313994 call _cond_test(313908 call <=(408281 call . this[314199] c"N") 32))
        { unknown tmpstate[313917](313915 call _cast(313914 call uint(64)[115] 32)(408286 call . this[314199] c"state"))(313920 'end of statement') unknown oldstate[313923] tmpstate[313917](313926 'end of statement')(313937 call pcg_setseq_32_step_r tmpstate[313917](313935 call _cast(313934 call uint(64)[115] 32) inc[313794]))(313941 call =(408294 call . this[314199] c"state") tmpstate[313917])(313946 call(408299 call . this[314199] c"mask_state"))(313957 return(313956 call normalize(408304 call . this[314199] c"N")(313955 call pcg_output_rxs_m_xs_N_mine(408309 call . this[314199] c"N") oldstate[313923])))
        }
        {
          if(313990 call _cond_test(313961 call <=(408315 call . this[314199] c"N") 64))
          { unknown oldstate[313964](408320 call . this[314199] c"state")(313967 'end of statement')(313973 call pcg_setseq_64_step_r(408325 call . this[314199] c"state") inc[313794])(313977 call(408330 call . this[314199] c"mask_state"))(313988 return(313987 call normalize(408335 call . this[314199] c"N")(313986 call pcg_output_rxs_m_xs_N_mine(408340 call . this[314199] c"N") oldstate[313964])))
          }
        }
      }
    }(314011 return 0)
  }
  { scopeless type uint(64)[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314189](?).advance[314022](arg _mt[314205]:_MT[238], arg this[314203]:pcg_setseq_N_rxs_m_xs_N_rng[314189](?), arg inc[314019] : uint(64)[115], arg delta[314025] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    if(314180 call _cond_test(314030 call <=(408346 call . this[314203] c"N") 8))
    {(314059 call =(408351 call . this[314203] c"state")(314058 call pcg_advance_lcg 8(314041 call _cast(314040 call uint(64)[115] 8)(408356 call . this[314203] c"state"))(314048 call _cast(314047 call uint(64)[115] 8) delta[314025]) PCG_DEFAULT_MULTIPLIER_8[311801](314056 call _cast(314055 call uint(64)[115] 8) inc[314019])))(314065 call(408363 call . this[314203] c"mask_state"))
    }
    {
      if(314175 call _cond_test(314069 call <=(408368 call . this[314203] c"N") 16))
      {(314098 call =(408373 call . this[314203] c"state")(314097 call pcg_advance_lcg 16(314080 call _cast(314079 call uint(64)[115] 16)(408378 call . this[314203] c"state"))(314087 call _cast(314086 call uint(64)[115] 16) delta[314025]) PCG_DEFAULT_MULTIPLIER_16[311809](314095 call _cast(314094 call uint(64)[115] 16) inc[314019])))(314104 call(408385 call . this[314203] c"mask_state"))
      }
      {
        if(314170 call _cond_test(314108 call <=(408390 call . this[314203] c"N") 32))
        {(314137 call =(408395 call . this[314203] c"state")(314136 call pcg_advance_lcg 32(314119 call _cast(314118 call uint(64)[115] 32)(408400 call . this[314203] c"state"))(314126 call _cast(314125 call uint(64)[115] 32) delta[314025]) PCG_DEFAULT_MULTIPLIER_32[311816](314134 call _cast(314133 call uint(64)[115] 32) inc[314019])))(314143 call(408407 call . this[314203] c"mask_state"))
        }
        {
          if(314166 call _cond_test(314147 call <=(408412 call . this[314203] c"N") 64))
          {(314158 call =(408417 call . this[314203] c"state")(314157 call pcg_advance_lcg 64(408422 call . this[314203] c"state") delta[314025] PCG_DEFAULT_MULTIPLIER_64[311823] inc[314019]))(314164 call(408429 call . this[314203] c"mask_state"))
          }
        }
      }
    }
  } type pcg_setseq_N_rxs_m_xs_N_rng[314189](?) const N[313610] "const" unknown state[313615] uint(64)[115] function pcg_getvalid_inc[314217](arg initseq[314214] :(314213 call uint(64)[115] 64)) : _unknown[51] "inline"
  {(314230 return(314228 call |(314225 call << initseq[314214] 1) 1))
  }
  { scopeless type(314222 call uint(64)[115] 64)
  } function pcg_getvalid_inc[314245](param arg initseq[314242] :(314241 call uint(64)[115] 64)) param : _unknown[51] "inline" "no doc"
  {(314254 return(314252 call |(314249 call << initseq[314242] 1) 1))
  } function pcg_advance_lcg[314263](param arg bits[314261]:_any[178](?), arg state[314269] :(314268 call uint_with_bits bits[314261]), in arg delta[314276] :(314275 call uint_with_bits bits[314261]), in arg cur_mult[314283] :(314282 call uint_with_bits bits[314261]), in arg cur_plus[314290] :(314289 call uint_with_bits bits[314261])) : _unknown[51] "private"
  { unknown acc_mult[314302] 1(314300 call uint_with_bits bits[314261])(314305 'end of statement') unknown acc_plus[314312] 0(314310 call uint_with_bits bits[314261])(314315 'end of statement')
    { unknown tmp[314370] "temp"(314394 'move' tmp[314370](314389 call _cond_test(314391 call > delta[314276] 0)))
      WhileDo[314375]
      {
        {
          if(314344 call _cond_test(314325 call !=(314322 call & delta[314276] 1) 0))
          {(314329 call *= acc_mult[314302] cur_mult[314283])(314341 call = acc_plus[314312](314339 call +(314336 call * acc_plus[314312] cur_mult[314283]) cur_plus[314290]))
          }(314357 call = cur_plus[314290](314355 call *(314352 call + cur_mult[314283] 1) cur_plus[314290]))(314362 call *= cur_mult[314283] cur_mult[314283])(314367 call /= delta[314276] 2)
        } label _continueLabel[314373](314384 'move' tmp[314370](314379 call _cond_test(314381 call > delta[314276] 0))) tmp[314370]
      } label _breakLabel[314374]
    }(314404 return(314402 call +(314399 call * acc_mult[314302] state[314269]) acc_plus[314312]))
  }
  { scopeless type(314296 call uint_with_bits bits[314261])
  }(355584 'used modules list'(353108 'use' ChapelStandard[20267]))
}