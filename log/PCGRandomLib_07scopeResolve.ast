AST dump for PCGRandomLib after pass scopeResolve.
Module use list: ChapelStandard 

{ unknown PCG_DEFAULT_MULTIPLIER_8[311773] "param" "private" 141(311776 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_16[311781] "param" "private" 12829(311784 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_32[311788] "param" "private" 747796405(311791 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_64[311795] "param" "private" 6364136223846793005(311798 'end of statement') function pcg_setseq_8_step_r[311808](ref arg state[311805] :(311804 call uint(64)[115] 8), arg inc[311814] :(311813 call uint(64)[115] 8)) : _unknown[51] "inline" "private" "no return value for void"
  {(311825 call = state[311805](311823 call +(311820 call * state[311805] PCG_DEFAULT_MULTIPLIER_8[311773]) inc[311814]))
  } function pcg_setseq_16_step_r[311840](ref arg state[311837] :(311836 call uint(64)[115] 16), arg inc[311846] :(311845 call uint(64)[115] 16)) : _unknown[51] "inline" "private" "no return value for void"
  {(311857 call = state[311837](311855 call +(311852 call * state[311837] PCG_DEFAULT_MULTIPLIER_16[311781]) inc[311846]))
  } function pcg_setseq_32_step_r[311872](ref arg state[311869] :(311868 call uint(64)[115] 32), arg inc[311878] :(311877 call uint(64)[115] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {(311889 call = state[311869](311887 call +(311884 call * state[311869] PCG_DEFAULT_MULTIPLIER_32[311788]) inc[311878]))
  } function pcg_setseq_64_step_r[311904](ref arg state[311901] :(311900 call uint(64)[115] 64), arg inc[311910] :(311909 call uint(64)[115] 64)) : _unknown[51] "inline" "private" "no return value for void"
  {(311921 call = state[311901](311919 call +(311916 call * state[311901] PCG_DEFAULT_MULTIPLIER_64[311795]) inc[311910]))
  } function pcg_rotr_32[311936](arg value[311933] :(311932 call uint(64)[115] 32), arg rot[311942] :(311941 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { function chpl_bitops_rotr_32[311958](arg x[311955] :(311954 call uint(64)[115] 32), arg n[311964] :(311963 call uint(64)[115] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type(311970 call uint(64)[115] 32)
    } unknown ret[311980](311979 call chpl_bitops_rotr_32 value[311933] rot[311942])(311983 'end of statement')(311985 return ret[311980])
  }
  { scopeless type(311948 call uint(64)[115] 32)
  } function pcg_output_xsh_rr_64_32[311999](arg state[311996] :(311995 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const xorshifted[312025] "const"(312023 call _cast(312022 call uint(64)[115] 32)(312017 call >>(312014 call ^(312011 call >> state[311996] 18) state[311996]) 27))(312008 call uint(64)[115] 32)(312028 'end of statement') const rot[312044] "const"(312042 call _cast(312041 call uint(64)[115] 32)(312036 call >> state[311996] 59))(312033 call uint(64)[115] 32)(312047 'end of statement') const ret[312053] "const"(312052 call pcg_rotr_32 xorshifted[312025] rot[312044])(312056 'end of statement')(312058 return ret[312053])
  }
  { scopeless type(312004 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_8_8[312072](arg state[312069] :(312068 call uint(64)[115] 8)) : _unknown[51] "inline" "private"
  { const word[312100] "const"(312098 call *(312093 call ^(312090 call >> state[312069](312088 call +(312085 call >> state[312069] 6) 2)) state[312069]) 217)(312081 call uint(64)[115] 8)(312103 'end of statement')(312112 return(312110 call ^(312107 call >> word[312100] 6) word[312100]))
  }
  { scopeless type(312077 call uint(64)[115] 8)
  } function pcg_output_rxs_m_xs_16_16[312126](arg state[312123] :(312122 call uint(64)[115] 16)) : _unknown[51] "inline" "private"
  { const word[312154] "const"(312152 call *(312147 call ^(312144 call >> state[312123](312142 call +(312139 call >> state[312123] 13) 3)) state[312123]) 62169)(312135 call uint(64)[115] 16)(312157 'end of statement')(312166 return(312164 call ^(312161 call >> word[312154] 11) word[312154]))
  }
  { scopeless type(312131 call uint(64)[115] 16)
  } function pcg_output_rxs_m_xs_32_32[312180](arg state[312177] :(312176 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { const word[312208] "const"(312206 call *(312201 call ^(312198 call >> state[312177](312196 call +(312193 call >> state[312177] 28) 4)) state[312177]) 277803737)(312189 call uint(64)[115] 32)(312211 'end of statement')(312220 return(312218 call ^(312215 call >> word[312208] 22) word[312208]))
  }
  { scopeless type(312185 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_64_64[312234](arg state[312231] :(312230 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const word[312262] "const"(312260 call *(312255 call ^(312252 call >> state[312231](312250 call +(312247 call >> state[312231] 59) 5)) state[312231]) 12605985483714917081)(312243 call uint(64)[115] 64)(312265 'end of statement')(312274 return(312272 call ^(312269 call >> word[312262] 43) word[312262]))
  }
  { scopeless type(312239 call uint(64)[115] 64)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].srandom[312297](arg _mt[312763]:_MT[238], arg this[312761]:pcg_setseq_64_xsh_rr_32_rng[312759], arg seed[312294] :(312293 call uint(64)[115] 64), arg inc[312303] :(312302 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312311 call =(407817 call . this[312761] c"state")(312309 call + inc[312303] seed[312294]))(312319 call pcg_setseq_64_step_r(407824 call . this[312761] c"state") inc[312303])
  } function pcg_setseq_64_xsh_rr_32_rng[312759].random[312332](arg _mt[312767]:_MT[238], arg this[312765]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312329] :(312328 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312343] "const"(407830 call . this[312765] c"state")(312341 call uint(64)[115] 64)(312346 'end of statement')(312352 call pcg_setseq_64_step_r(407835 call . this[312765] c"state") inc[312329])(312358 return(312357 call pcg_output_xsh_rr_64_32 oldstate[312343]))
  }
  { scopeless type(312337 call uint(64)[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].bounded_random[312372](arg _mt[312771]:_MT[238], arg this[312769]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312369] :(312368 call uint(64)[115] 64), arg bound[312378] :(312377 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312400] "const"(312398 call _cast(312397 call uint(64)[115] 32)(312392 call -(312390 call _cast(312389 call int(64)[13] 32) bound[312378])))(312384 call uint(64)[115] 32)(312403 'end of statement') const threshold[312413] "const"(312411 call % negbound[312400] bound[312378])(312408 call uint(64)[115] 32)(312416 'end of statement') unknown tmprng[312418] pcg_setseq_64_xsh_rr_32_rng[312759](312421 'end of statement') unknown tmpinc[312426](312425 call uint(64)[115] 64)(312429 'end of statement') unknown r[312434](312433 call uint(64)[115] 32)(312437 'end of statement')
    { unknown tmp[312463] "temp"(312481 'move' tmp[312463](312479 call _cond_test 1))
      WhileDo[312468]
      {
        {(312444 call = r[312434](312443 call(407846 call . this[312769] c"random") inc[312369]))
          if(312458 call _cond_test(312450 call >= r[312434] threshold[312413]))
          {(312456 return(312454 call % r[312434] bound[312378]))
          }
        } label _continueLabel[312466](312474 'move' tmp[312463](312472 call _cond_test 1)) tmp[312463]
      } label _breakLabel[312467]
    }(312485 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].bounded_random_vary_inc[312498](arg _mt[312775]:_MT[238], arg this[312773]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312495] :(312494 call uint(64)[115] 64), arg bound[312504] :(312503 call uint(64)[115] 32), arg seed[312511] :(312510 call uint(64)[115] 64), arg skip[312518] :(312517 call uint(64)[115] 64), arg next_inc[312525] :(312524 call uint(64)[115] 64), arg inc_increment[312532] :(312531 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312554] "const"(312552 call _cast(312551 call uint(64)[115] 32)(312546 call -(312544 call _cast(312543 call int(64)[13] 32) bound[312504])))(312538 call uint(64)[115] 32)(312557 'end of statement') const threshold[312567] "const"(312565 call % negbound[312554] bound[312504])(312562 call uint(64)[115] 32)(312570 'end of statement') unknown r[312575](312574 call uint(64)[115] 32)(312578 'end of statement')(312584 call = r[312575](312583 call(407859 call . this[312773] c"random") inc[312495]))
    if(312597 call _cond_test(312589 call >= r[312575] threshold[312567]))
    {(312595 return(312593 call % r[312575] bound[312504]))
    } unknown newinc[312606](312605 call uint(64)[115] 64)(312609 'end of statement')
    { unknown _indexOfInterest[312683] "an _indexOfInterest or chpl__followIdx variable" "temp" unknown _iterator[312684] "expr temp" "temp"(312693 'move' _iterator[312684](312691 call _getIterator(312615 call chpl_by(312612 call chpl_build_low_bounded_range next_inc[312525]) inc_increment[312532])))
      Defer
      {
        {(312713 call _freeIterator _iterator[312684])
        }
      }
      { scopeless type(312702 'move' _indexOfInterest[312683](312699 call iteratorIndex _iterator[312684]))
      }
      ForLoop[312685]
      { unknown newinc[312706] "index var" "insert auto destroy"(312708 'move' newinc[312706] _indexOfInterest[312683])
        { unknown tmprng[312618] pcg_setseq_64_xsh_rr_32_rng[312759](312621 'end of statement') unknown tmpinc[312627](312626 call uint(64)[115] 64)(312630 'end of statement')(312636 call = tmpinc[312627](312635 call pcg_getvalid_inc newinc[312706]))(312646 call(312640 call . tmprng[312618] c"srandom") seed[312511] tmpinc[312627])(312655 call(312649 call . tmprng[312618] c"advance") tmpinc[312627] skip[312518])(312665 call = r[312575](312664 call(312659 call . tmprng[312618] c"random") tmpinc[312627]))
          if(312678 call _cond_test(312670 call >= r[312575] threshold[312567]))
          {(312676 return(312674 call % r[312575] bound[312504]))
          }
        } label _continueLabel[312688] _indexOfInterest[312683] _iterator[312684]
      } label _breakLabel[312689]
    }(312721 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312759].advance[312734](arg _mt[312779]:_MT[238], arg this[312777]:pcg_setseq_64_xsh_rr_32_rng[312759], arg inc[312731] :(312730 call uint(64)[115] 64), arg delta[312740] :(312739 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312752 call =(407884 call . this[312777] c"state")(312751 call pcg_advance_lcg 64(407889 call . this[312777] c"state") delta[312740] PCG_DEFAULT_MULTIPLIER_64[311795] inc[312731]))
  } type pcg_setseq_64_xsh_rr_32_rng[312759] unknown state[312284](312283 call uint(64)[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312900].srandom[312800](arg _mt[312904]:_MT[238], arg this[312902]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg seed[312797] :(312796 call uint(64)[115] 64), arg inc[312806] :(312805 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312814 call =(407897 call . this[312902] c"state")(312812 call + inc[312806] seed[312797]))(312822 call pcg_setseq_64_step_r(407904 call . this[312902] c"state") inc[312806])
  } function pcg_setseq_64_rxs_m_xs_64_rng[312900].random[312835](arg _mt[312908]:_MT[238], arg this[312906]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg inc[312832] :(312831 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312846] "const"(407910 call . this[312906] c"state")(312844 call uint(64)[115] 64)(312849 'end of statement')(312855 call pcg_setseq_64_step_r(407915 call . this[312906] c"state") inc[312832])(312861 return(312860 call pcg_output_rxs_m_xs_64_64 oldstate[312846]))
  }
  { scopeless type(312840 call uint(64)[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312900].advance[312875](arg _mt[312912]:_MT[238], arg this[312910]:pcg_setseq_64_rxs_m_xs_64_rng[312900], arg inc[312872] :(312871 call uint(64)[115] 64), arg delta[312881] :(312880 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312893 call =(407922 call . this[312910] c"state")(312892 call pcg_advance_lcg 64(407927 call . this[312910] c"state") delta[312881] PCG_DEFAULT_MULTIPLIER_64[311795] inc[312872]))
  } type pcg_setseq_64_rxs_m_xs_64_rng[312900] unknown state[312787](312786 call uint(64)[115] 64) function pcg_setseq_32_rxs_m_xs_32_rng[313033].srandom[312933](arg _mt[313037]:_MT[238], arg this[313035]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg seed[312930] :(312929 call uint(64)[115] 32), arg inc[312939] :(312938 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312947 call =(407935 call . this[313035] c"state")(312945 call + inc[312939] seed[312930]))(312955 call pcg_setseq_32_step_r(407942 call . this[313035] c"state") inc[312939])
  } function pcg_setseq_32_rxs_m_xs_32_rng[313033].random[312968](arg _mt[313041]:_MT[238], arg this[313039]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg inc[312965] :(312964 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312979] "const"(407948 call . this[313039] c"state")(312977 call uint(64)[115] 32)(312982 'end of statement')(312988 call pcg_setseq_32_step_r(407953 call . this[313039] c"state") inc[312965])(312994 return(312993 call pcg_output_rxs_m_xs_32_32 oldstate[312979]))
  }
  { scopeless type(312973 call uint(64)[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313033].advance[313008](arg _mt[313045]:_MT[238], arg this[313043]:pcg_setseq_32_rxs_m_xs_32_rng[313033], arg inc[313005] :(313004 call uint(64)[115] 32), arg delta[313014] :(313013 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313026 call =(407960 call . this[313043] c"state")(313025 call pcg_advance_lcg 32(407965 call . this[313043] c"state") delta[313014] PCG_DEFAULT_MULTIPLIER_32[311788] inc[313005]))
  } type pcg_setseq_32_rxs_m_xs_32_rng[313033] unknown state[312920](312919 call uint(64)[115] 32) function pcg_setseq_16_rxs_m_xs_16_rng[313166].srandom[313066](arg _mt[313170]:_MT[238], arg this[313168]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg seed[313063] :(313062 call uint(64)[115] 16), arg inc[313072] :(313071 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313080 call =(407973 call . this[313168] c"state")(313078 call + inc[313072] seed[313063]))(313088 call pcg_setseq_16_step_r(407980 call . this[313168] c"state") inc[313072])
  } function pcg_setseq_16_rxs_m_xs_16_rng[313166].random[313101](arg _mt[313174]:_MT[238], arg this[313172]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg inc[313098] :(313097 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313112] "const"(407986 call . this[313172] c"state")(313110 call uint(64)[115] 16)(313115 'end of statement')(313121 call pcg_setseq_16_step_r(407991 call . this[313172] c"state") inc[313098])(313127 return(313126 call pcg_output_rxs_m_xs_16_16 oldstate[313112]))
  }
  { scopeless type(313106 call uint(64)[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313166].advance[313141](arg _mt[313178]:_MT[238], arg this[313176]:pcg_setseq_16_rxs_m_xs_16_rng[313166], arg inc[313138] :(313137 call uint(64)[115] 16), arg delta[313147] :(313146 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313159 call =(407998 call . this[313176] c"state")(313158 call pcg_advance_lcg 16(408003 call . this[313176] c"state") delta[313147] PCG_DEFAULT_MULTIPLIER_16[311781] inc[313138]))
  } type pcg_setseq_16_rxs_m_xs_16_rng[313166] unknown state[313053](313052 call uint(64)[115] 16) function pcg_setseq_8_rxs_m_xs_8_rng[313299].srandom[313199](arg _mt[313303]:_MT[238], arg this[313301]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg seed[313196] :(313195 call uint(64)[115] 8), arg inc[313205] :(313204 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313213 call =(408011 call . this[313301] c"state")(313211 call + inc[313205] seed[313196]))(313221 call pcg_setseq_8_step_r(408018 call . this[313301] c"state") inc[313205])
  } function pcg_setseq_8_rxs_m_xs_8_rng[313299].random[313234](arg _mt[313307]:_MT[238], arg this[313305]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg inc[313231] :(313230 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313245] "const"(408024 call . this[313305] c"state")(313243 call uint(64)[115] 8)(313248 'end of statement')(313254 call pcg_setseq_8_step_r(408029 call . this[313305] c"state") inc[313231])(313260 return(313259 call pcg_output_rxs_m_xs_8_8 oldstate[313245]))
  }
  { scopeless type(313239 call uint(64)[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313299].advance[313274](arg _mt[313311]:_MT[238], arg this[313309]:pcg_setseq_8_rxs_m_xs_8_rng[313299], arg inc[313271] :(313270 call uint(64)[115] 8), arg delta[313280] :(313279 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313292 call =(408036 call . this[313309] c"state")(313291 call pcg_advance_lcg 8(408041 call . this[313309] c"state") delta[313280] PCG_DEFAULT_MULTIPLIER_8[311773] inc[313271]))
  } type pcg_setseq_8_rxs_m_xs_8_rng[313299] unknown state[313186](313185 call uint(64)[115] 8) function uint_with_bits[313318](param arg nbits[313316]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313368 call _cond_test(313322 call <= nbits[313316] 8))
    {(313328 return(313327 call uint(64)[115] 8))
    }
    {
      if(313362 call _cond_test(313332 call <= nbits[313316] 16))
      {(313338 return(313337 call uint(64)[115] 16))
      }
      {
        if(313356 call _cond_test(313342 call <= nbits[313316] 32))
        {(313348 return(313347 call uint(64)[115] 32))
        }
        {(313354 return(313353 call uint(64)[115] 64))
        }
      }
    }
  } function normalize[313383](arg nbits[313380] : int(64)[13], arg x[313386] : uint(64)[115]) : _unknown[51] "inline" "private"
  { unknown oldx[313390] x[313386](313393 'end of statement') unknown shiftamt[313399](313397 call - 64 nbits[313380])(313402 'end of statement')(313405 call <<= oldx[313390] shiftamt[313399])(313412 return(313410 call >> oldx[313390] shiftamt[313399]))
  } function pcg_output_rxs_m_xs_N_mine[313422](arg nbits[313419] : int(64)[13], arg state_in[313424]:_any[178](?)) : _unknown[51] "private"
  {
    if(313433 call _cond_test(313428 call < nbits[313419] 8))
    {(313431 return state_in[313424])
    }
    if(313455 call _cond_test(313441 call == nbits[313419] 8))
    {(313453 return(313452 call pcg_output_rxs_m_xs_8_8(313449 call _cast(313448 call uint(64)[115] 8) state_in[313424])))
    }
    if(313476 call _cond_test(313462 call == nbits[313419] 16))
    {(313474 return(313473 call pcg_output_rxs_m_xs_16_16(313470 call _cast(313469 call uint(64)[115] 16) state_in[313424])))
    }
    if(313497 call _cond_test(313483 call == nbits[313419] 32))
    {(313495 return(313494 call pcg_output_rxs_m_xs_32_32(313491 call _cast(313490 call uint(64)[115] 32) state_in[313424])))
    }
    if(313518 call _cond_test(313504 call == nbits[313419] 64))
    {(313516 return(313515 call pcg_output_rxs_m_xs_64_64(313512 call _cast(313511 call uint(64)[115] 64) state_in[313424])))
    }
    { unknown shiftamt[313527](313525 call - nbits[313419] 4)(313530 'end of statement') unknown state[313536](313534 call _cast uint(64)[115] state_in[313424])(313539 'end of statement') unknown word[313557](313555 call *(313552 call ^(313549 call >> state[313536](313547 call +(313544 call >> state[313536] shiftamt[313527]) 2)) state[313536]) 217) uint(64)[115](313560 'end of statement')(313567 call = word[313557](313566 call normalize nbits[313419] word[313557]))(313577 return(313575 call ^(313572 call >> word[313557] shiftamt[313527]) word[313557]))
    }
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).mask_state[313593](arg _mt[314165]:_MT[238], arg this[314163]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {(313601 call =(408080 call . this[314163] c"state")(313600 call normalize(408087 call . this[314163] c"N")(408092 call . this[314163] c"state")))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).srandom[313613](arg _mt[314169]:_MT[238], arg this[314167]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg seed[313610] : uint(64)[115], arg inc[313616] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313624 call =(408097 call . this[314167] c"state")(313622 call + inc[313616] seed[313610]))
    if(313752 call _cond_test(313630 call <=(408104 call . this[314167] c"N") 8))
    { unknown tmpstate[313639](313637 call _cast(313636 call uint(64)[115] 8)(408109 call . this[314167] c"state"))(313642 'end of statement')(313654 call pcg_setseq_8_step_r tmpstate[313639](313652 call _cast(313651 call uint(64)[115] 8) inc[313616]))(313658 call =(408116 call . this[314167] c"state") tmpstate[313639])
    }
    {
      if(313747 call _cond_test(313663 call <=(408122 call . this[314167] c"N") 16))
      { unknown tmpstate[313672](313670 call _cast(313669 call uint(64)[115] 16)(408127 call . this[314167] c"state"))(313675 'end of statement')(313687 call pcg_setseq_16_step_r tmpstate[313672](313685 call _cast(313684 call uint(64)[115] 16) inc[313616]))(313691 call =(408134 call . this[314167] c"state") tmpstate[313672])
      }
      {
        if(313742 call _cond_test(313696 call <=(408140 call . this[314167] c"N") 32))
        { unknown tmpstate[313705](313703 call _cast(313702 call uint(64)[115] 32)(408145 call . this[314167] c"state"))(313708 'end of statement')(313720 call pcg_setseq_32_step_r tmpstate[313705](313718 call _cast(313717 call uint(64)[115] 32) inc[313616]))(313724 call =(408152 call . this[314167] c"state") tmpstate[313705])
        }
        {
          if(313738 call _cond_test(313729 call <=(408158 call . this[314167] c"N") 64))
          {(313735 call pcg_setseq_64_step_r(408163 call . this[314167] c"state") inc[313616])
          }
        }
      }
    }(313759 call(408170 call . this[314167] c"mask_state"))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).random[313769](arg _mt[314173]:_MT[238], arg this[314171]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg inc[313766] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(313976 call _cond_test(313774 call <=(408175 call . this[314171] c"N") 8))
    { unknown tmpstate[313783](313781 call _cast(313780 call uint(64)[115] 8)(408180 call . this[314171] c"state"))(313786 'end of statement') unknown oldstate[313789] tmpstate[313783](313792 'end of statement')(313803 call pcg_setseq_8_step_r tmpstate[313783](313801 call _cast(313800 call uint(64)[115] 8) inc[313766]))(313807 call =(408188 call . this[314171] c"state") tmpstate[313783])(313812 call(408193 call . this[314171] c"mask_state"))(313823 return(313822 call normalize(408198 call . this[314171] c"N")(313821 call pcg_output_rxs_m_xs_N_mine(408203 call . this[314171] c"N") oldstate[313789])))
    }
    {
      if(313971 call _cond_test(313827 call <=(408209 call . this[314171] c"N") 16))
      { unknown tmpstate[313836](313834 call _cast(313833 call uint(64)[115] 16)(408214 call . this[314171] c"state"))(313839 'end of statement') unknown oldstate[313842] tmpstate[313836](313845 'end of statement')(313856 call pcg_setseq_16_step_r tmpstate[313836](313854 call _cast(313853 call uint(64)[115] 16) inc[313766]))(313860 call =(408222 call . this[314171] c"state") tmpstate[313836])(313865 call(408227 call . this[314171] c"mask_state"))(313876 return(313875 call normalize(408232 call . this[314171] c"N")(313874 call pcg_output_rxs_m_xs_N_mine(408237 call . this[314171] c"N") oldstate[313842])))
      }
      {
        if(313966 call _cond_test(313880 call <=(408243 call . this[314171] c"N") 32))
        { unknown tmpstate[313889](313887 call _cast(313886 call uint(64)[115] 32)(408248 call . this[314171] c"state"))(313892 'end of statement') unknown oldstate[313895] tmpstate[313889](313898 'end of statement')(313909 call pcg_setseq_32_step_r tmpstate[313889](313907 call _cast(313906 call uint(64)[115] 32) inc[313766]))(313913 call =(408256 call . this[314171] c"state") tmpstate[313889])(313918 call(408261 call . this[314171] c"mask_state"))(313929 return(313928 call normalize(408266 call . this[314171] c"N")(313927 call pcg_output_rxs_m_xs_N_mine(408271 call . this[314171] c"N") oldstate[313895])))
        }
        {
          if(313962 call _cond_test(313933 call <=(408277 call . this[314171] c"N") 64))
          { unknown oldstate[313936](408282 call . this[314171] c"state")(313939 'end of statement')(313945 call pcg_setseq_64_step_r(408287 call . this[314171] c"state") inc[313766])(313949 call(408292 call . this[314171] c"mask_state"))(313960 return(313959 call normalize(408297 call . this[314171] c"N")(313958 call pcg_output_rxs_m_xs_N_mine(408302 call . this[314171] c"N") oldstate[313936])))
          }
        }
      }
    }(313983 return 0)
  }
  { scopeless type uint(64)[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314161](?).advance[313994](arg _mt[314177]:_MT[238], arg this[314175]:pcg_setseq_N_rxs_m_xs_N_rng[314161](?), arg inc[313991] : uint(64)[115], arg delta[313997] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    if(314152 call _cond_test(314002 call <=(408308 call . this[314175] c"N") 8))
    {(314031 call =(408313 call . this[314175] c"state")(314030 call pcg_advance_lcg 8(314013 call _cast(314012 call uint(64)[115] 8)(408318 call . this[314175] c"state"))(314020 call _cast(314019 call uint(64)[115] 8) delta[313997]) PCG_DEFAULT_MULTIPLIER_8[311773](314028 call _cast(314027 call uint(64)[115] 8) inc[313991])))(314037 call(408325 call . this[314175] c"mask_state"))
    }
    {
      if(314147 call _cond_test(314041 call <=(408330 call . this[314175] c"N") 16))
      {(314070 call =(408335 call . this[314175] c"state")(314069 call pcg_advance_lcg 16(314052 call _cast(314051 call uint(64)[115] 16)(408340 call . this[314175] c"state"))(314059 call _cast(314058 call uint(64)[115] 16) delta[313997]) PCG_DEFAULT_MULTIPLIER_16[311781](314067 call _cast(314066 call uint(64)[115] 16) inc[313991])))(314076 call(408347 call . this[314175] c"mask_state"))
      }
      {
        if(314142 call _cond_test(314080 call <=(408352 call . this[314175] c"N") 32))
        {(314109 call =(408357 call . this[314175] c"state")(314108 call pcg_advance_lcg 32(314091 call _cast(314090 call uint(64)[115] 32)(408362 call . this[314175] c"state"))(314098 call _cast(314097 call uint(64)[115] 32) delta[313997]) PCG_DEFAULT_MULTIPLIER_32[311788](314106 call _cast(314105 call uint(64)[115] 32) inc[313991])))(314115 call(408369 call . this[314175] c"mask_state"))
        }
        {
          if(314138 call _cond_test(314119 call <=(408374 call . this[314175] c"N") 64))
          {(314130 call =(408379 call . this[314175] c"state")(314129 call pcg_advance_lcg 64(408384 call . this[314175] c"state") delta[313997] PCG_DEFAULT_MULTIPLIER_64[311795] inc[313991]))(314136 call(408391 call . this[314175] c"mask_state"))
          }
        }
      }
    }
  } type pcg_setseq_N_rxs_m_xs_N_rng[314161](?) const N[313582] "const" unknown state[313587] uint(64)[115] function pcg_getvalid_inc[314189](arg initseq[314186] :(314185 call uint(64)[115] 64)) : _unknown[51] "inline"
  {(314202 return(314200 call |(314197 call << initseq[314186] 1) 1))
  }
  { scopeless type(314194 call uint(64)[115] 64)
  } function pcg_getvalid_inc[314217](param arg initseq[314214] :(314213 call uint(64)[115] 64)) param : _unknown[51] "inline" "no doc"
  {(314226 return(314224 call |(314221 call << initseq[314214] 1) 1))
  } function pcg_advance_lcg[314235](param arg bits[314233]:_any[178](?), arg state[314241] :(314240 call uint_with_bits bits[314233]), in arg delta[314248] :(314247 call uint_with_bits bits[314233]), in arg cur_mult[314255] :(314254 call uint_with_bits bits[314233]), in arg cur_plus[314262] :(314261 call uint_with_bits bits[314233])) : _unknown[51] "private"
  { unknown acc_mult[314274] 1(314272 call uint_with_bits bits[314233])(314277 'end of statement') unknown acc_plus[314284] 0(314282 call uint_with_bits bits[314233])(314287 'end of statement')
    { unknown tmp[314342] "temp"(314366 'move' tmp[314342](314361 call _cond_test(314363 call > delta[314248] 0)))
      WhileDo[314347]
      {
        {
          if(314316 call _cond_test(314297 call !=(314294 call & delta[314248] 1) 0))
          {(314301 call *= acc_mult[314274] cur_mult[314255])(314313 call = acc_plus[314284](314311 call +(314308 call * acc_plus[314284] cur_mult[314255]) cur_plus[314262]))
          }(314329 call = cur_plus[314262](314327 call *(314324 call + cur_mult[314255] 1) cur_plus[314262]))(314334 call *= cur_mult[314255] cur_mult[314255])(314339 call /= delta[314248] 2)
        } label _continueLabel[314345](314356 'move' tmp[314342](314351 call _cond_test(314353 call > delta[314248] 0))) tmp[314342]
      } label _breakLabel[314346]
    }(314376 return(314374 call +(314371 call * acc_mult[314274] state[314241]) acc_plus[314284]))
  }
  { scopeless type(314268 call uint_with_bits bits[314233])
  }(355544 'used modules list'(353068 'use' ChapelStandard[20264]))
}