AST dump for PCGRandomLib after pass scopeResolve.
Module use list: ChapelStandard 

{ unknown PCG_DEFAULT_MULTIPLIER_8[311803] "param" "private" 141(311806 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_16[311811] "param" "private" 12829(311814 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_32[311818] "param" "private" 747796405(311821 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_64[311825] "param" "private" 6364136223846793005(311828 'end of statement') function pcg_setseq_8_step_r[311838](ref arg state[311835] :(311834 call uint(64)[115] 8), arg inc[311844] :(311843 call uint(64)[115] 8)) : _unknown[51] "inline" "private" "no return value for void"
  {(311855 call = state[311835](311853 call +(311850 call * state[311835] PCG_DEFAULT_MULTIPLIER_8[311803]) inc[311844]))
  } function pcg_setseq_16_step_r[311870](ref arg state[311867] :(311866 call uint(64)[115] 16), arg inc[311876] :(311875 call uint(64)[115] 16)) : _unknown[51] "inline" "private" "no return value for void"
  {(311887 call = state[311867](311885 call +(311882 call * state[311867] PCG_DEFAULT_MULTIPLIER_16[311811]) inc[311876]))
  } function pcg_setseq_32_step_r[311902](ref arg state[311899] :(311898 call uint(64)[115] 32), arg inc[311908] :(311907 call uint(64)[115] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {(311919 call = state[311899](311917 call +(311914 call * state[311899] PCG_DEFAULT_MULTIPLIER_32[311818]) inc[311908]))
  } function pcg_setseq_64_step_r[311934](ref arg state[311931] :(311930 call uint(64)[115] 64), arg inc[311940] :(311939 call uint(64)[115] 64)) : _unknown[51] "inline" "private" "no return value for void"
  {(311951 call = state[311931](311949 call +(311946 call * state[311931] PCG_DEFAULT_MULTIPLIER_64[311825]) inc[311940]))
  } function pcg_rotr_32[311966](arg value[311963] :(311962 call uint(64)[115] 32), arg rot[311972] :(311971 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { function chpl_bitops_rotr_32[311988](arg x[311985] :(311984 call uint(64)[115] 32), arg n[311994] :(311993 call uint(64)[115] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type(312000 call uint(64)[115] 32)
    } unknown ret[312010](312009 call chpl_bitops_rotr_32 value[311963] rot[311972])(312013 'end of statement')(312015 return ret[312010])
  }
  { scopeless type(311978 call uint(64)[115] 32)
  } function pcg_output_xsh_rr_64_32[312029](arg state[312026] :(312025 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const xorshifted[312055] "const"(312053 call _cast(312052 call uint(64)[115] 32)(312047 call >>(312044 call ^(312041 call >> state[312026] 18) state[312026]) 27))(312038 call uint(64)[115] 32)(312058 'end of statement') const rot[312074] "const"(312072 call _cast(312071 call uint(64)[115] 32)(312066 call >> state[312026] 59))(312063 call uint(64)[115] 32)(312077 'end of statement') const ret[312083] "const"(312082 call pcg_rotr_32 xorshifted[312055] rot[312074])(312086 'end of statement')(312088 return ret[312083])
  }
  { scopeless type(312034 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_8_8[312102](arg state[312099] :(312098 call uint(64)[115] 8)) : _unknown[51] "inline" "private"
  { const word[312130] "const"(312128 call *(312123 call ^(312120 call >> state[312099](312118 call +(312115 call >> state[312099] 6) 2)) state[312099]) 217)(312111 call uint(64)[115] 8)(312133 'end of statement')(312142 return(312140 call ^(312137 call >> word[312130] 6) word[312130]))
  }
  { scopeless type(312107 call uint(64)[115] 8)
  } function pcg_output_rxs_m_xs_16_16[312156](arg state[312153] :(312152 call uint(64)[115] 16)) : _unknown[51] "inline" "private"
  { const word[312184] "const"(312182 call *(312177 call ^(312174 call >> state[312153](312172 call +(312169 call >> state[312153] 13) 3)) state[312153]) 62169)(312165 call uint(64)[115] 16)(312187 'end of statement')(312196 return(312194 call ^(312191 call >> word[312184] 11) word[312184]))
  }
  { scopeless type(312161 call uint(64)[115] 16)
  } function pcg_output_rxs_m_xs_32_32[312210](arg state[312207] :(312206 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { const word[312238] "const"(312236 call *(312231 call ^(312228 call >> state[312207](312226 call +(312223 call >> state[312207] 28) 4)) state[312207]) 277803737)(312219 call uint(64)[115] 32)(312241 'end of statement')(312250 return(312248 call ^(312245 call >> word[312238] 22) word[312238]))
  }
  { scopeless type(312215 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_64_64[312264](arg state[312261] :(312260 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const word[312292] "const"(312290 call *(312285 call ^(312282 call >> state[312261](312280 call +(312277 call >> state[312261] 59) 5)) state[312261]) 12605985483714917081)(312273 call uint(64)[115] 64)(312295 'end of statement')(312304 return(312302 call ^(312299 call >> word[312292] 43) word[312292]))
  }
  { scopeless type(312269 call uint(64)[115] 64)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].srandom[312327](arg _mt[312793]:_MT[238], arg this[312791]:pcg_setseq_64_xsh_rr_32_rng[312789], arg seed[312324] :(312323 call uint(64)[115] 64), arg inc[312333] :(312332 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312341 call =(407860 call . this[312791] c"state")(312339 call + inc[312333] seed[312324]))(312349 call pcg_setseq_64_step_r(407867 call . this[312791] c"state") inc[312333])
  } function pcg_setseq_64_xsh_rr_32_rng[312789].random[312362](arg _mt[312797]:_MT[238], arg this[312795]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312359] :(312358 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312373] "const"(407873 call . this[312795] c"state")(312371 call uint(64)[115] 64)(312376 'end of statement')(312382 call pcg_setseq_64_step_r(407878 call . this[312795] c"state") inc[312359])(312388 return(312387 call pcg_output_xsh_rr_64_32 oldstate[312373]))
  }
  { scopeless type(312367 call uint(64)[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].bounded_random[312402](arg _mt[312801]:_MT[238], arg this[312799]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312399] :(312398 call uint(64)[115] 64), arg bound[312408] :(312407 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312430] "const"(312428 call _cast(312427 call uint(64)[115] 32)(312422 call -(312420 call _cast(312419 call int(64)[13] 32) bound[312408])))(312414 call uint(64)[115] 32)(312433 'end of statement') const threshold[312443] "const"(312441 call % negbound[312430] bound[312408])(312438 call uint(64)[115] 32)(312446 'end of statement') unknown tmprng[312448] pcg_setseq_64_xsh_rr_32_rng[312789](312451 'end of statement') unknown tmpinc[312456](312455 call uint(64)[115] 64)(312459 'end of statement') unknown r[312464](312463 call uint(64)[115] 32)(312467 'end of statement')
    { unknown tmp[312493] "temp"(312511 'move' tmp[312493](312509 call _cond_test 1))
      WhileDo[312498]
      {
        {(312474 call = r[312464](312473 call(407889 call . this[312799] c"random") inc[312399]))
          if(312488 call _cond_test(312480 call >= r[312464] threshold[312443]))
          {(312486 return(312484 call % r[312464] bound[312408]))
          }
        } label _continueLabel[312496](312504 'move' tmp[312493](312502 call _cond_test 1)) tmp[312493]
      } label _breakLabel[312497]
    }(312515 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].bounded_random_vary_inc[312528](arg _mt[312805]:_MT[238], arg this[312803]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312525] :(312524 call uint(64)[115] 64), arg bound[312534] :(312533 call uint(64)[115] 32), arg seed[312541] :(312540 call uint(64)[115] 64), arg skip[312548] :(312547 call uint(64)[115] 64), arg next_inc[312555] :(312554 call uint(64)[115] 64), arg inc_increment[312562] :(312561 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312584] "const"(312582 call _cast(312581 call uint(64)[115] 32)(312576 call -(312574 call _cast(312573 call int(64)[13] 32) bound[312534])))(312568 call uint(64)[115] 32)(312587 'end of statement') const threshold[312597] "const"(312595 call % negbound[312584] bound[312534])(312592 call uint(64)[115] 32)(312600 'end of statement') unknown r[312605](312604 call uint(64)[115] 32)(312608 'end of statement')(312614 call = r[312605](312613 call(407902 call . this[312803] c"random") inc[312525]))
    if(312627 call _cond_test(312619 call >= r[312605] threshold[312597]))
    {(312625 return(312623 call % r[312605] bound[312534]))
    } unknown newinc[312636](312635 call uint(64)[115] 64)(312639 'end of statement')
    { unknown _indexOfInterest[312713] "an _indexOfInterest or chpl__followIdx variable" "temp" unknown _iterator[312714] "expr temp" "temp"(312723 'move' _iterator[312714](312721 call _getIterator(312645 call chpl_by(312642 call chpl_build_low_bounded_range next_inc[312555]) inc_increment[312562])))
      Defer
      {
        {(312743 call _freeIterator _iterator[312714])
        }
      }
      { scopeless type(312732 'move' _indexOfInterest[312713](312729 call iteratorIndex _iterator[312714]))
      }
      ForLoop[312715]
      { unknown newinc[312736] "index var" "insert auto destroy"(312738 'move' newinc[312736] _indexOfInterest[312713])
        { unknown tmprng[312648] pcg_setseq_64_xsh_rr_32_rng[312789](312651 'end of statement') unknown tmpinc[312657](312656 call uint(64)[115] 64)(312660 'end of statement')(312666 call = tmpinc[312657](312665 call pcg_getvalid_inc newinc[312736]))(312676 call(312670 call . tmprng[312648] c"srandom") seed[312541] tmpinc[312657])(312685 call(312679 call . tmprng[312648] c"advance") tmpinc[312657] skip[312548])(312695 call = r[312605](312694 call(312689 call . tmprng[312648] c"random") tmpinc[312657]))
          if(312708 call _cond_test(312700 call >= r[312605] threshold[312597]))
          {(312706 return(312704 call % r[312605] bound[312534]))
          }
        } label _continueLabel[312718] _indexOfInterest[312713] _iterator[312714]
      } label _breakLabel[312719]
    }(312751 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312789].advance[312764](arg _mt[312809]:_MT[238], arg this[312807]:pcg_setseq_64_xsh_rr_32_rng[312789], arg inc[312761] :(312760 call uint(64)[115] 64), arg delta[312770] :(312769 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312782 call =(407927 call . this[312807] c"state")(312781 call pcg_advance_lcg 64(407932 call . this[312807] c"state") delta[312770] PCG_DEFAULT_MULTIPLIER_64[311825] inc[312761]))
  } type pcg_setseq_64_xsh_rr_32_rng[312789] unknown state[312314](312313 call uint(64)[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312930].srandom[312830](arg _mt[312934]:_MT[238], arg this[312932]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg seed[312827] :(312826 call uint(64)[115] 64), arg inc[312836] :(312835 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312844 call =(407940 call . this[312932] c"state")(312842 call + inc[312836] seed[312827]))(312852 call pcg_setseq_64_step_r(407947 call . this[312932] c"state") inc[312836])
  } function pcg_setseq_64_rxs_m_xs_64_rng[312930].random[312865](arg _mt[312938]:_MT[238], arg this[312936]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg inc[312862] :(312861 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312876] "const"(407953 call . this[312936] c"state")(312874 call uint(64)[115] 64)(312879 'end of statement')(312885 call pcg_setseq_64_step_r(407958 call . this[312936] c"state") inc[312862])(312891 return(312890 call pcg_output_rxs_m_xs_64_64 oldstate[312876]))
  }
  { scopeless type(312870 call uint(64)[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312930].advance[312905](arg _mt[312942]:_MT[238], arg this[312940]:pcg_setseq_64_rxs_m_xs_64_rng[312930], arg inc[312902] :(312901 call uint(64)[115] 64), arg delta[312911] :(312910 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312923 call =(407965 call . this[312940] c"state")(312922 call pcg_advance_lcg 64(407970 call . this[312940] c"state") delta[312911] PCG_DEFAULT_MULTIPLIER_64[311825] inc[312902]))
  } type pcg_setseq_64_rxs_m_xs_64_rng[312930] unknown state[312817](312816 call uint(64)[115] 64) function pcg_setseq_32_rxs_m_xs_32_rng[313063].srandom[312963](arg _mt[313067]:_MT[238], arg this[313065]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg seed[312960] :(312959 call uint(64)[115] 32), arg inc[312969] :(312968 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312977 call =(407978 call . this[313065] c"state")(312975 call + inc[312969] seed[312960]))(312985 call pcg_setseq_32_step_r(407985 call . this[313065] c"state") inc[312969])
  } function pcg_setseq_32_rxs_m_xs_32_rng[313063].random[312998](arg _mt[313071]:_MT[238], arg this[313069]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg inc[312995] :(312994 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313009] "const"(407991 call . this[313069] c"state")(313007 call uint(64)[115] 32)(313012 'end of statement')(313018 call pcg_setseq_32_step_r(407996 call . this[313069] c"state") inc[312995])(313024 return(313023 call pcg_output_rxs_m_xs_32_32 oldstate[313009]))
  }
  { scopeless type(313003 call uint(64)[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313063].advance[313038](arg _mt[313075]:_MT[238], arg this[313073]:pcg_setseq_32_rxs_m_xs_32_rng[313063], arg inc[313035] :(313034 call uint(64)[115] 32), arg delta[313044] :(313043 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313056 call =(408003 call . this[313073] c"state")(313055 call pcg_advance_lcg 32(408008 call . this[313073] c"state") delta[313044] PCG_DEFAULT_MULTIPLIER_32[311818] inc[313035]))
  } type pcg_setseq_32_rxs_m_xs_32_rng[313063] unknown state[312950](312949 call uint(64)[115] 32) function pcg_setseq_16_rxs_m_xs_16_rng[313196].srandom[313096](arg _mt[313200]:_MT[238], arg this[313198]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg seed[313093] :(313092 call uint(64)[115] 16), arg inc[313102] :(313101 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313110 call =(408016 call . this[313198] c"state")(313108 call + inc[313102] seed[313093]))(313118 call pcg_setseq_16_step_r(408023 call . this[313198] c"state") inc[313102])
  } function pcg_setseq_16_rxs_m_xs_16_rng[313196].random[313131](arg _mt[313204]:_MT[238], arg this[313202]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg inc[313128] :(313127 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313142] "const"(408029 call . this[313202] c"state")(313140 call uint(64)[115] 16)(313145 'end of statement')(313151 call pcg_setseq_16_step_r(408034 call . this[313202] c"state") inc[313128])(313157 return(313156 call pcg_output_rxs_m_xs_16_16 oldstate[313142]))
  }
  { scopeless type(313136 call uint(64)[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313196].advance[313171](arg _mt[313208]:_MT[238], arg this[313206]:pcg_setseq_16_rxs_m_xs_16_rng[313196], arg inc[313168] :(313167 call uint(64)[115] 16), arg delta[313177] :(313176 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313189 call =(408041 call . this[313206] c"state")(313188 call pcg_advance_lcg 16(408046 call . this[313206] c"state") delta[313177] PCG_DEFAULT_MULTIPLIER_16[311811] inc[313168]))
  } type pcg_setseq_16_rxs_m_xs_16_rng[313196] unknown state[313083](313082 call uint(64)[115] 16) function pcg_setseq_8_rxs_m_xs_8_rng[313329].srandom[313229](arg _mt[313333]:_MT[238], arg this[313331]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg seed[313226] :(313225 call uint(64)[115] 8), arg inc[313235] :(313234 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313243 call =(408054 call . this[313331] c"state")(313241 call + inc[313235] seed[313226]))(313251 call pcg_setseq_8_step_r(408061 call . this[313331] c"state") inc[313235])
  } function pcg_setseq_8_rxs_m_xs_8_rng[313329].random[313264](arg _mt[313337]:_MT[238], arg this[313335]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg inc[313261] :(313260 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313275] "const"(408067 call . this[313335] c"state")(313273 call uint(64)[115] 8)(313278 'end of statement')(313284 call pcg_setseq_8_step_r(408072 call . this[313335] c"state") inc[313261])(313290 return(313289 call pcg_output_rxs_m_xs_8_8 oldstate[313275]))
  }
  { scopeless type(313269 call uint(64)[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313329].advance[313304](arg _mt[313341]:_MT[238], arg this[313339]:pcg_setseq_8_rxs_m_xs_8_rng[313329], arg inc[313301] :(313300 call uint(64)[115] 8), arg delta[313310] :(313309 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313322 call =(408079 call . this[313339] c"state")(313321 call pcg_advance_lcg 8(408084 call . this[313339] c"state") delta[313310] PCG_DEFAULT_MULTIPLIER_8[311803] inc[313301]))
  } type pcg_setseq_8_rxs_m_xs_8_rng[313329] unknown state[313216](313215 call uint(64)[115] 8) function uint_with_bits[313348](param arg nbits[313346]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313398 call _cond_test(313352 call <= nbits[313346] 8))
    {(313358 return(313357 call uint(64)[115] 8))
    }
    {
      if(313392 call _cond_test(313362 call <= nbits[313346] 16))
      {(313368 return(313367 call uint(64)[115] 16))
      }
      {
        if(313386 call _cond_test(313372 call <= nbits[313346] 32))
        {(313378 return(313377 call uint(64)[115] 32))
        }
        {(313384 return(313383 call uint(64)[115] 64))
        }
      }
    }
  } function normalize[313413](arg nbits[313410] : int(64)[13], arg x[313416] : uint(64)[115]) : _unknown[51] "inline" "private"
  { unknown oldx[313420] x[313416](313423 'end of statement') unknown shiftamt[313429](313427 call - 64 nbits[313410])(313432 'end of statement')(313435 call <<= oldx[313420] shiftamt[313429])(313442 return(313440 call >> oldx[313420] shiftamt[313429]))
  } function pcg_output_rxs_m_xs_N_mine[313452](arg nbits[313449] : int(64)[13], arg state_in[313454]:_any[178](?)) : _unknown[51] "private"
  {
    if(313463 call _cond_test(313458 call < nbits[313449] 8))
    {(313461 return state_in[313454])
    }
    if(313485 call _cond_test(313471 call == nbits[313449] 8))
    {(313483 return(313482 call pcg_output_rxs_m_xs_8_8(313479 call _cast(313478 call uint(64)[115] 8) state_in[313454])))
    }
    if(313506 call _cond_test(313492 call == nbits[313449] 16))
    {(313504 return(313503 call pcg_output_rxs_m_xs_16_16(313500 call _cast(313499 call uint(64)[115] 16) state_in[313454])))
    }
    if(313527 call _cond_test(313513 call == nbits[313449] 32))
    {(313525 return(313524 call pcg_output_rxs_m_xs_32_32(313521 call _cast(313520 call uint(64)[115] 32) state_in[313454])))
    }
    if(313548 call _cond_test(313534 call == nbits[313449] 64))
    {(313546 return(313545 call pcg_output_rxs_m_xs_64_64(313542 call _cast(313541 call uint(64)[115] 64) state_in[313454])))
    }
    { unknown shiftamt[313557](313555 call - nbits[313449] 4)(313560 'end of statement') unknown state[313566](313564 call _cast uint(64)[115] state_in[313454])(313569 'end of statement') unknown word[313587](313585 call *(313582 call ^(313579 call >> state[313566](313577 call +(313574 call >> state[313566] shiftamt[313557]) 2)) state[313566]) 217) uint(64)[115](313590 'end of statement')(313597 call = word[313587](313596 call normalize nbits[313449] word[313587]))(313607 return(313605 call ^(313602 call >> word[313587] shiftamt[313557]) word[313587]))
    }
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).mask_state[313623](arg _mt[314195]:_MT[238], arg this[314193]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {(313631 call =(408123 call . this[314193] c"state")(313630 call normalize(408130 call . this[314193] c"N")(408135 call . this[314193] c"state")))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).srandom[313643](arg _mt[314199]:_MT[238], arg this[314197]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg seed[313640] : uint(64)[115], arg inc[313646] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313654 call =(408140 call . this[314197] c"state")(313652 call + inc[313646] seed[313640]))
    if(313782 call _cond_test(313660 call <=(408147 call . this[314197] c"N") 8))
    { unknown tmpstate[313669](313667 call _cast(313666 call uint(64)[115] 8)(408152 call . this[314197] c"state"))(313672 'end of statement')(313684 call pcg_setseq_8_step_r tmpstate[313669](313682 call _cast(313681 call uint(64)[115] 8) inc[313646]))(313688 call =(408159 call . this[314197] c"state") tmpstate[313669])
    }
    {
      if(313777 call _cond_test(313693 call <=(408165 call . this[314197] c"N") 16))
      { unknown tmpstate[313702](313700 call _cast(313699 call uint(64)[115] 16)(408170 call . this[314197] c"state"))(313705 'end of statement')(313717 call pcg_setseq_16_step_r tmpstate[313702](313715 call _cast(313714 call uint(64)[115] 16) inc[313646]))(313721 call =(408177 call . this[314197] c"state") tmpstate[313702])
      }
      {
        if(313772 call _cond_test(313726 call <=(408183 call . this[314197] c"N") 32))
        { unknown tmpstate[313735](313733 call _cast(313732 call uint(64)[115] 32)(408188 call . this[314197] c"state"))(313738 'end of statement')(313750 call pcg_setseq_32_step_r tmpstate[313735](313748 call _cast(313747 call uint(64)[115] 32) inc[313646]))(313754 call =(408195 call . this[314197] c"state") tmpstate[313735])
        }
        {
          if(313768 call _cond_test(313759 call <=(408201 call . this[314197] c"N") 64))
          {(313765 call pcg_setseq_64_step_r(408206 call . this[314197] c"state") inc[313646])
          }
        }
      }
    }(313789 call(408213 call . this[314197] c"mask_state"))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).random[313799](arg _mt[314203]:_MT[238], arg this[314201]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg inc[313796] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314006 call _cond_test(313804 call <=(408218 call . this[314201] c"N") 8))
    { unknown tmpstate[313813](313811 call _cast(313810 call uint(64)[115] 8)(408223 call . this[314201] c"state"))(313816 'end of statement') unknown oldstate[313819] tmpstate[313813](313822 'end of statement')(313833 call pcg_setseq_8_step_r tmpstate[313813](313831 call _cast(313830 call uint(64)[115] 8) inc[313796]))(313837 call =(408231 call . this[314201] c"state") tmpstate[313813])(313842 call(408236 call . this[314201] c"mask_state"))(313853 return(313852 call normalize(408241 call . this[314201] c"N")(313851 call pcg_output_rxs_m_xs_N_mine(408246 call . this[314201] c"N") oldstate[313819])))
    }
    {
      if(314001 call _cond_test(313857 call <=(408252 call . this[314201] c"N") 16))
      { unknown tmpstate[313866](313864 call _cast(313863 call uint(64)[115] 16)(408257 call . this[314201] c"state"))(313869 'end of statement') unknown oldstate[313872] tmpstate[313866](313875 'end of statement')(313886 call pcg_setseq_16_step_r tmpstate[313866](313884 call _cast(313883 call uint(64)[115] 16) inc[313796]))(313890 call =(408265 call . this[314201] c"state") tmpstate[313866])(313895 call(408270 call . this[314201] c"mask_state"))(313906 return(313905 call normalize(408275 call . this[314201] c"N")(313904 call pcg_output_rxs_m_xs_N_mine(408280 call . this[314201] c"N") oldstate[313872])))
      }
      {
        if(313996 call _cond_test(313910 call <=(408286 call . this[314201] c"N") 32))
        { unknown tmpstate[313919](313917 call _cast(313916 call uint(64)[115] 32)(408291 call . this[314201] c"state"))(313922 'end of statement') unknown oldstate[313925] tmpstate[313919](313928 'end of statement')(313939 call pcg_setseq_32_step_r tmpstate[313919](313937 call _cast(313936 call uint(64)[115] 32) inc[313796]))(313943 call =(408299 call . this[314201] c"state") tmpstate[313919])(313948 call(408304 call . this[314201] c"mask_state"))(313959 return(313958 call normalize(408309 call . this[314201] c"N")(313957 call pcg_output_rxs_m_xs_N_mine(408314 call . this[314201] c"N") oldstate[313925])))
        }
        {
          if(313992 call _cond_test(313963 call <=(408320 call . this[314201] c"N") 64))
          { unknown oldstate[313966](408325 call . this[314201] c"state")(313969 'end of statement')(313975 call pcg_setseq_64_step_r(408330 call . this[314201] c"state") inc[313796])(313979 call(408335 call . this[314201] c"mask_state"))(313990 return(313989 call normalize(408340 call . this[314201] c"N")(313988 call pcg_output_rxs_m_xs_N_mine(408345 call . this[314201] c"N") oldstate[313966])))
          }
        }
      }
    }(314013 return 0)
  }
  { scopeless type uint(64)[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314191](?).advance[314024](arg _mt[314207]:_MT[238], arg this[314205]:pcg_setseq_N_rxs_m_xs_N_rng[314191](?), arg inc[314021] : uint(64)[115], arg delta[314027] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    if(314182 call _cond_test(314032 call <=(408351 call . this[314205] c"N") 8))
    {(314061 call =(408356 call . this[314205] c"state")(314060 call pcg_advance_lcg 8(314043 call _cast(314042 call uint(64)[115] 8)(408361 call . this[314205] c"state"))(314050 call _cast(314049 call uint(64)[115] 8) delta[314027]) PCG_DEFAULT_MULTIPLIER_8[311803](314058 call _cast(314057 call uint(64)[115] 8) inc[314021])))(314067 call(408368 call . this[314205] c"mask_state"))
    }
    {
      if(314177 call _cond_test(314071 call <=(408373 call . this[314205] c"N") 16))
      {(314100 call =(408378 call . this[314205] c"state")(314099 call pcg_advance_lcg 16(314082 call _cast(314081 call uint(64)[115] 16)(408383 call . this[314205] c"state"))(314089 call _cast(314088 call uint(64)[115] 16) delta[314027]) PCG_DEFAULT_MULTIPLIER_16[311811](314097 call _cast(314096 call uint(64)[115] 16) inc[314021])))(314106 call(408390 call . this[314205] c"mask_state"))
      }
      {
        if(314172 call _cond_test(314110 call <=(408395 call . this[314205] c"N") 32))
        {(314139 call =(408400 call . this[314205] c"state")(314138 call pcg_advance_lcg 32(314121 call _cast(314120 call uint(64)[115] 32)(408405 call . this[314205] c"state"))(314128 call _cast(314127 call uint(64)[115] 32) delta[314027]) PCG_DEFAULT_MULTIPLIER_32[311818](314136 call _cast(314135 call uint(64)[115] 32) inc[314021])))(314145 call(408412 call . this[314205] c"mask_state"))
        }
        {
          if(314168 call _cond_test(314149 call <=(408417 call . this[314205] c"N") 64))
          {(314160 call =(408422 call . this[314205] c"state")(314159 call pcg_advance_lcg 64(408427 call . this[314205] c"state") delta[314027] PCG_DEFAULT_MULTIPLIER_64[311825] inc[314021]))(314166 call(408434 call . this[314205] c"mask_state"))
          }
        }
      }
    }
  } type pcg_setseq_N_rxs_m_xs_N_rng[314191](?) const N[313612] "const" unknown state[313617] uint(64)[115] function pcg_getvalid_inc[314219](arg initseq[314216] :(314215 call uint(64)[115] 64)) : _unknown[51] "inline"
  {(314232 return(314230 call |(314227 call << initseq[314216] 1) 1))
  }
  { scopeless type(314224 call uint(64)[115] 64)
  } function pcg_getvalid_inc[314247](param arg initseq[314244] :(314243 call uint(64)[115] 64)) param : _unknown[51] "inline" "no doc"
  {(314256 return(314254 call |(314251 call << initseq[314244] 1) 1))
  } function pcg_advance_lcg[314265](param arg bits[314263]:_any[178](?), arg state[314271] :(314270 call uint_with_bits bits[314263]), in arg delta[314278] :(314277 call uint_with_bits bits[314263]), in arg cur_mult[314285] :(314284 call uint_with_bits bits[314263]), in arg cur_plus[314292] :(314291 call uint_with_bits bits[314263])) : _unknown[51] "private"
  { unknown acc_mult[314304] 1(314302 call uint_with_bits bits[314263])(314307 'end of statement') unknown acc_plus[314314] 0(314312 call uint_with_bits bits[314263])(314317 'end of statement')
    { unknown tmp[314372] "temp"(314396 'move' tmp[314372](314391 call _cond_test(314393 call > delta[314278] 0)))
      WhileDo[314377]
      {
        {
          if(314346 call _cond_test(314327 call !=(314324 call & delta[314278] 1) 0))
          {(314331 call *= acc_mult[314304] cur_mult[314285])(314343 call = acc_plus[314314](314341 call +(314338 call * acc_plus[314314] cur_mult[314285]) cur_plus[314292]))
          }(314359 call = cur_plus[314292](314357 call *(314354 call + cur_mult[314285] 1) cur_plus[314292]))(314364 call *= cur_mult[314285] cur_mult[314285])(314369 call /= delta[314278] 2)
        } label _continueLabel[314375](314386 'move' tmp[314372](314381 call _cond_test(314383 call > delta[314278] 0))) tmp[314372]
      } label _breakLabel[314376]
    }(314406 return(314404 call +(314401 call * acc_mult[314304] state[314271]) acc_plus[314314]))
  }
  { scopeless type(314298 call uint_with_bits bits[314263])
  }(355587 'used modules list'(353110 'use' ChapelStandard[20267]))
}