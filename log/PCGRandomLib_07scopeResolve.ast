AST dump for PCGRandomLib after pass scopeResolve.
Module use list: ChapelStandard 

{ unknown PCG_DEFAULT_MULTIPLIER_8[311870] "param" "private" 141(311873 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_16[311878] "param" "private" 12829(311881 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_32[311885] "param" "private" 747796405(311888 'end of statement') unknown PCG_DEFAULT_MULTIPLIER_64[311892] "param" "private" 6364136223846793005(311895 'end of statement') function pcg_setseq_8_step_r[311905](ref arg state[311902] :(311901 call uint(64)[115] 8), arg inc[311911] :(311910 call uint(64)[115] 8)) : _unknown[51] "inline" "private" "no return value for void"
  {(311922 call = state[311902](311920 call +(311917 call * state[311902] PCG_DEFAULT_MULTIPLIER_8[311870]) inc[311911]))
  } function pcg_setseq_16_step_r[311937](ref arg state[311934] :(311933 call uint(64)[115] 16), arg inc[311943] :(311942 call uint(64)[115] 16)) : _unknown[51] "inline" "private" "no return value for void"
  {(311954 call = state[311934](311952 call +(311949 call * state[311934] PCG_DEFAULT_MULTIPLIER_16[311878]) inc[311943]))
  } function pcg_setseq_32_step_r[311969](ref arg state[311966] :(311965 call uint(64)[115] 32), arg inc[311975] :(311974 call uint(64)[115] 32)) : _unknown[51] "inline" "private" "no return value for void"
  {(311986 call = state[311966](311984 call +(311981 call * state[311966] PCG_DEFAULT_MULTIPLIER_32[311885]) inc[311975]))
  } function pcg_setseq_64_step_r[312001](ref arg state[311998] :(311997 call uint(64)[115] 64), arg inc[312007] :(312006 call uint(64)[115] 64)) : _unknown[51] "inline" "private" "no return value for void"
  {(312018 call = state[311998](312016 call +(312013 call * state[311998] PCG_DEFAULT_MULTIPLIER_64[311892]) inc[312007]))
  } function pcg_rotr_32[312033](arg value[312030] :(312029 call uint(64)[115] 32), arg rot[312039] :(312038 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { function chpl_bitops_rotr_32[312055](arg x[312052] :(312051 call uint(64)[115] 32), arg n[312061] :(312060 call uint(64)[115] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
    }
    { scopeless type(312067 call uint(64)[115] 32)
    } unknown ret[312077](312076 call chpl_bitops_rotr_32 value[312030] rot[312039])(312080 'end of statement')(312082 return ret[312077])
  }
  { scopeless type(312045 call uint(64)[115] 32)
  } function pcg_output_xsh_rr_64_32[312096](arg state[312093] :(312092 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const xorshifted[312122] "const"(312120 call _cast(312119 call uint(64)[115] 32)(312114 call >>(312111 call ^(312108 call >> state[312093] 18) state[312093]) 27))(312105 call uint(64)[115] 32)(312125 'end of statement') const rot[312141] "const"(312139 call _cast(312138 call uint(64)[115] 32)(312133 call >> state[312093] 59))(312130 call uint(64)[115] 32)(312144 'end of statement') const ret[312150] "const"(312149 call pcg_rotr_32 xorshifted[312122] rot[312141])(312153 'end of statement')(312155 return ret[312150])
  }
  { scopeless type(312101 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_8_8[312169](arg state[312166] :(312165 call uint(64)[115] 8)) : _unknown[51] "inline" "private"
  { const word[312197] "const"(312195 call *(312190 call ^(312187 call >> state[312166](312185 call +(312182 call >> state[312166] 6) 2)) state[312166]) 217)(312178 call uint(64)[115] 8)(312200 'end of statement')(312209 return(312207 call ^(312204 call >> word[312197] 6) word[312197]))
  }
  { scopeless type(312174 call uint(64)[115] 8)
  } function pcg_output_rxs_m_xs_16_16[312223](arg state[312220] :(312219 call uint(64)[115] 16)) : _unknown[51] "inline" "private"
  { const word[312251] "const"(312249 call *(312244 call ^(312241 call >> state[312220](312239 call +(312236 call >> state[312220] 13) 3)) state[312220]) 62169)(312232 call uint(64)[115] 16)(312254 'end of statement')(312263 return(312261 call ^(312258 call >> word[312251] 11) word[312251]))
  }
  { scopeless type(312228 call uint(64)[115] 16)
  } function pcg_output_rxs_m_xs_32_32[312277](arg state[312274] :(312273 call uint(64)[115] 32)) : _unknown[51] "inline" "private"
  { const word[312305] "const"(312303 call *(312298 call ^(312295 call >> state[312274](312293 call +(312290 call >> state[312274] 28) 4)) state[312274]) 277803737)(312286 call uint(64)[115] 32)(312308 'end of statement')(312317 return(312315 call ^(312312 call >> word[312305] 22) word[312305]))
  }
  { scopeless type(312282 call uint(64)[115] 32)
  } function pcg_output_rxs_m_xs_64_64[312331](arg state[312328] :(312327 call uint(64)[115] 64)) : _unknown[51] "inline" "private"
  { const word[312359] "const"(312357 call *(312352 call ^(312349 call >> state[312328](312347 call +(312344 call >> state[312328] 59) 5)) state[312328]) 12605985483714917081)(312340 call uint(64)[115] 64)(312362 'end of statement')(312371 return(312369 call ^(312366 call >> word[312359] 43) word[312359]))
  }
  { scopeless type(312336 call uint(64)[115] 64)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].srandom[312394](arg _mt[312860]:_MT[238], arg this[312858]:pcg_setseq_64_xsh_rr_32_rng[312856], arg seed[312391] :(312390 call uint(64)[115] 64), arg inc[312400] :(312399 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312408 call =(407933 call . this[312858] c"state")(312406 call + inc[312400] seed[312391]))(312416 call pcg_setseq_64_step_r(407940 call . this[312858] c"state") inc[312400])
  } function pcg_setseq_64_xsh_rr_32_rng[312856].random[312429](arg _mt[312864]:_MT[238], arg this[312862]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312426] :(312425 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312440] "const"(407946 call . this[312862] c"state")(312438 call uint(64)[115] 64)(312443 'end of statement')(312449 call pcg_setseq_64_step_r(407951 call . this[312862] c"state") inc[312426])(312455 return(312454 call pcg_output_xsh_rr_64_32 oldstate[312440]))
  }
  { scopeless type(312434 call uint(64)[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].bounded_random[312469](arg _mt[312868]:_MT[238], arg this[312866]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312466] :(312465 call uint(64)[115] 64), arg bound[312475] :(312474 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312497] "const"(312495 call _cast(312494 call uint(64)[115] 32)(312489 call -(312487 call _cast(312486 call int(64)[13] 32) bound[312475])))(312481 call uint(64)[115] 32)(312500 'end of statement') const threshold[312510] "const"(312508 call % negbound[312497] bound[312475])(312505 call uint(64)[115] 32)(312513 'end of statement') unknown tmprng[312515] pcg_setseq_64_xsh_rr_32_rng[312856](312518 'end of statement') unknown tmpinc[312523](312522 call uint(64)[115] 64)(312526 'end of statement') unknown r[312531](312530 call uint(64)[115] 32)(312534 'end of statement')
    { unknown tmp[312560] "temp"(312578 'move' tmp[312560](312576 call _cond_test 1))
      WhileDo[312565]
      {
        {(312541 call = r[312531](312540 call(407962 call . this[312866] c"random") inc[312466]))
          if(312555 call _cond_test(312547 call >= r[312531] threshold[312510]))
          {(312553 return(312551 call % r[312531] bound[312475]))
          }
        } label _continueLabel[312563](312571 'move' tmp[312560](312569 call _cond_test 1)) tmp[312560]
      } label _breakLabel[312564]
    }(312582 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].bounded_random_vary_inc[312595](arg _mt[312872]:_MT[238], arg this[312870]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312592] :(312591 call uint(64)[115] 64), arg bound[312601] :(312600 call uint(64)[115] 32), arg seed[312608] :(312607 call uint(64)[115] 64), arg skip[312615] :(312614 call uint(64)[115] 64), arg next_inc[312622] :(312621 call uint(64)[115] 64), arg inc_increment[312629] :(312628 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const negbound[312651] "const"(312649 call _cast(312648 call uint(64)[115] 32)(312643 call -(312641 call _cast(312640 call int(64)[13] 32) bound[312601])))(312635 call uint(64)[115] 32)(312654 'end of statement') const threshold[312664] "const"(312662 call % negbound[312651] bound[312601])(312659 call uint(64)[115] 32)(312667 'end of statement') unknown r[312672](312671 call uint(64)[115] 32)(312675 'end of statement')(312681 call = r[312672](312680 call(407975 call . this[312870] c"random") inc[312592]))
    if(312694 call _cond_test(312686 call >= r[312672] threshold[312664]))
    {(312692 return(312690 call % r[312672] bound[312601]))
    } unknown newinc[312703](312702 call uint(64)[115] 64)(312706 'end of statement')
    { unknown _indexOfInterest[312780] "an _indexOfInterest or chpl__followIdx variable" "temp" unknown _iterator[312781] "expr temp" "temp"(312790 'move' _iterator[312781](312788 call _getIterator(312712 call chpl_by(312709 call chpl_build_low_bounded_range next_inc[312622]) inc_increment[312629])))
      Defer
      {
        {(312810 call _freeIterator _iterator[312781])
        }
      }
      { scopeless type(312799 'move' _indexOfInterest[312780](312796 call iteratorIndex _iterator[312781]))
      }
      ForLoop[312782]
      { unknown newinc[312803] "index var" "insert auto destroy"(312805 'move' newinc[312803] _indexOfInterest[312780])
        { unknown tmprng[312715] pcg_setseq_64_xsh_rr_32_rng[312856](312718 'end of statement') unknown tmpinc[312724](312723 call uint(64)[115] 64)(312727 'end of statement')(312733 call = tmpinc[312724](312732 call pcg_getvalid_inc newinc[312803]))(312743 call(312737 call . tmprng[312715] c"srandom") seed[312608] tmpinc[312724])(312752 call(312746 call . tmprng[312715] c"advance") tmpinc[312724] skip[312615])(312762 call = r[312672](312761 call(312756 call . tmprng[312715] c"random") tmpinc[312724]))
          if(312775 call _cond_test(312767 call >= r[312672] threshold[312664]))
          {(312773 return(312771 call % r[312672] bound[312601]))
          }
        } label _continueLabel[312785] _indexOfInterest[312780] _iterator[312781]
      } label _breakLabel[312786]
    }(312818 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312856].advance[312831](arg _mt[312876]:_MT[238], arg this[312874]:pcg_setseq_64_xsh_rr_32_rng[312856], arg inc[312828] :(312827 call uint(64)[115] 64), arg delta[312837] :(312836 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312849 call =(408000 call . this[312874] c"state")(312848 call pcg_advance_lcg 64(408005 call . this[312874] c"state") delta[312837] PCG_DEFAULT_MULTIPLIER_64[311892] inc[312828]))
  } type pcg_setseq_64_xsh_rr_32_rng[312856] unknown state[312381](312380 call uint(64)[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312997].srandom[312897](arg _mt[313001]:_MT[238], arg this[312999]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg seed[312894] :(312893 call uint(64)[115] 64), arg inc[312903] :(312902 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312911 call =(408013 call . this[312999] c"state")(312909 call + inc[312903] seed[312894]))(312919 call pcg_setseq_64_step_r(408020 call . this[312999] c"state") inc[312903])
  } function pcg_setseq_64_rxs_m_xs_64_rng[312997].random[312932](arg _mt[313005]:_MT[238], arg this[313003]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg inc[312929] :(312928 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[312943] "const"(408026 call . this[313003] c"state")(312941 call uint(64)[115] 64)(312946 'end of statement')(312952 call pcg_setseq_64_step_r(408031 call . this[313003] c"state") inc[312929])(312958 return(312957 call pcg_output_rxs_m_xs_64_64 oldstate[312943]))
  }
  { scopeless type(312937 call uint(64)[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312997].advance[312972](arg _mt[313009]:_MT[238], arg this[313007]:pcg_setseq_64_rxs_m_xs_64_rng[312997], arg inc[312969] :(312968 call uint(64)[115] 64), arg delta[312978] :(312977 call uint(64)[115] 64)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(312990 call =(408038 call . this[313007] c"state")(312989 call pcg_advance_lcg 64(408043 call . this[313007] c"state") delta[312978] PCG_DEFAULT_MULTIPLIER_64[311892] inc[312969]))
  } type pcg_setseq_64_rxs_m_xs_64_rng[312997] unknown state[312884](312883 call uint(64)[115] 64) function pcg_setseq_32_rxs_m_xs_32_rng[313130].srandom[313030](arg _mt[313134]:_MT[238], arg this[313132]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg seed[313027] :(313026 call uint(64)[115] 32), arg inc[313036] :(313035 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313044 call =(408051 call . this[313132] c"state")(313042 call + inc[313036] seed[313027]))(313052 call pcg_setseq_32_step_r(408058 call . this[313132] c"state") inc[313036])
  } function pcg_setseq_32_rxs_m_xs_32_rng[313130].random[313065](arg _mt[313138]:_MT[238], arg this[313136]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg inc[313062] :(313061 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313076] "const"(408064 call . this[313136] c"state")(313074 call uint(64)[115] 32)(313079 'end of statement')(313085 call pcg_setseq_32_step_r(408069 call . this[313136] c"state") inc[313062])(313091 return(313090 call pcg_output_rxs_m_xs_32_32 oldstate[313076]))
  }
  { scopeless type(313070 call uint(64)[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[313130].advance[313105](arg _mt[313142]:_MT[238], arg this[313140]:pcg_setseq_32_rxs_m_xs_32_rng[313130], arg inc[313102] :(313101 call uint(64)[115] 32), arg delta[313111] :(313110 call uint(64)[115] 32)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313123 call =(408076 call . this[313140] c"state")(313122 call pcg_advance_lcg 32(408081 call . this[313140] c"state") delta[313111] PCG_DEFAULT_MULTIPLIER_32[311885] inc[313102]))
  } type pcg_setseq_32_rxs_m_xs_32_rng[313130] unknown state[313017](313016 call uint(64)[115] 32) function pcg_setseq_16_rxs_m_xs_16_rng[313263].srandom[313163](arg _mt[313267]:_MT[238], arg this[313265]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg seed[313160] :(313159 call uint(64)[115] 16), arg inc[313169] :(313168 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313177 call =(408089 call . this[313265] c"state")(313175 call + inc[313169] seed[313160]))(313185 call pcg_setseq_16_step_r(408096 call . this[313265] c"state") inc[313169])
  } function pcg_setseq_16_rxs_m_xs_16_rng[313263].random[313198](arg _mt[313271]:_MT[238], arg this[313269]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg inc[313195] :(313194 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313209] "const"(408102 call . this[313269] c"state")(313207 call uint(64)[115] 16)(313212 'end of statement')(313218 call pcg_setseq_16_step_r(408107 call . this[313269] c"state") inc[313195])(313224 return(313223 call pcg_output_rxs_m_xs_16_16 oldstate[313209]))
  }
  { scopeless type(313203 call uint(64)[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313263].advance[313238](arg _mt[313275]:_MT[238], arg this[313273]:pcg_setseq_16_rxs_m_xs_16_rng[313263], arg inc[313235] :(313234 call uint(64)[115] 16), arg delta[313244] :(313243 call uint(64)[115] 16)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313256 call =(408114 call . this[313273] c"state")(313255 call pcg_advance_lcg 16(408119 call . this[313273] c"state") delta[313244] PCG_DEFAULT_MULTIPLIER_16[311878] inc[313235]))
  } type pcg_setseq_16_rxs_m_xs_16_rng[313263] unknown state[313150](313149 call uint(64)[115] 16) function pcg_setseq_8_rxs_m_xs_8_rng[313396].srandom[313296](arg _mt[313400]:_MT[238], arg this[313398]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg seed[313293] :(313292 call uint(64)[115] 8), arg inc[313302] :(313301 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313310 call =(408127 call . this[313398] c"state")(313308 call + inc[313302] seed[313293]))(313318 call pcg_setseq_8_step_r(408134 call . this[313398] c"state") inc[313302])
  } function pcg_setseq_8_rxs_m_xs_8_rng[313396].random[313331](arg _mt[313404]:_MT[238], arg this[313402]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg inc[313328] :(313327 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method"
  { const oldstate[313342] "const"(408140 call . this[313402] c"state")(313340 call uint(64)[115] 8)(313345 'end of statement')(313351 call pcg_setseq_8_step_r(408145 call . this[313402] c"state") inc[313328])(313357 return(313356 call pcg_output_rxs_m_xs_8_8 oldstate[313342]))
  }
  { scopeless type(313336 call uint(64)[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313396].advance[313371](arg _mt[313408]:_MT[238], arg this[313406]:pcg_setseq_8_rxs_m_xs_8_rng[313396], arg inc[313368] :(313367 call uint(64)[115] 8), arg delta[313377] :(313376 call uint(64)[115] 8)) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313389 call =(408152 call . this[313406] c"state")(313388 call pcg_advance_lcg 8(408157 call . this[313406] c"state") delta[313377] PCG_DEFAULT_MULTIPLIER_8[311870] inc[313368]))
  } type pcg_setseq_8_rxs_m_xs_8_rng[313396] unknown state[313283](313282 call uint(64)[115] 8) function uint_with_bits[313415](param arg nbits[313413]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313465 call _cond_test(313419 call <= nbits[313413] 8))
    {(313425 return(313424 call uint(64)[115] 8))
    }
    {
      if(313459 call _cond_test(313429 call <= nbits[313413] 16))
      {(313435 return(313434 call uint(64)[115] 16))
      }
      {
        if(313453 call _cond_test(313439 call <= nbits[313413] 32))
        {(313445 return(313444 call uint(64)[115] 32))
        }
        {(313451 return(313450 call uint(64)[115] 64))
        }
      }
    }
  } function normalize[313480](arg nbits[313477] : int(64)[13], arg x[313483] : uint(64)[115]) : _unknown[51] "inline" "private"
  { unknown oldx[313487] x[313483](313490 'end of statement') unknown shiftamt[313496](313494 call - 64 nbits[313477])(313499 'end of statement')(313502 call <<= oldx[313487] shiftamt[313496])(313509 return(313507 call >> oldx[313487] shiftamt[313496]))
  } function pcg_output_rxs_m_xs_N_mine[313519](arg nbits[313516] : int(64)[13], arg state_in[313521]:_any[178](?)) : _unknown[51] "private"
  {
    if(313530 call _cond_test(313525 call < nbits[313516] 8))
    {(313528 return state_in[313521])
    }
    if(313552 call _cond_test(313538 call == nbits[313516] 8))
    {(313550 return(313549 call pcg_output_rxs_m_xs_8_8(313546 call _cast(313545 call uint(64)[115] 8) state_in[313521])))
    }
    if(313573 call _cond_test(313559 call == nbits[313516] 16))
    {(313571 return(313570 call pcg_output_rxs_m_xs_16_16(313567 call _cast(313566 call uint(64)[115] 16) state_in[313521])))
    }
    if(313594 call _cond_test(313580 call == nbits[313516] 32))
    {(313592 return(313591 call pcg_output_rxs_m_xs_32_32(313588 call _cast(313587 call uint(64)[115] 32) state_in[313521])))
    }
    if(313615 call _cond_test(313601 call == nbits[313516] 64))
    {(313613 return(313612 call pcg_output_rxs_m_xs_64_64(313609 call _cast(313608 call uint(64)[115] 64) state_in[313521])))
    }
    { unknown shiftamt[313624](313622 call - nbits[313516] 4)(313627 'end of statement') unknown state[313633](313631 call _cast uint(64)[115] state_in[313521])(313636 'end of statement') unknown word[313654](313652 call *(313649 call ^(313646 call >> state[313633](313644 call +(313641 call >> state[313633] shiftamt[313624]) 2)) state[313633]) 217) uint(64)[115](313657 'end of statement')(313664 call = word[313654](313663 call normalize nbits[313516] word[313654]))(313674 return(313672 call ^(313669 call >> word[313654] shiftamt[313624]) word[313654]))
    }
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).mask_state[313690](arg _mt[314262]:_MT[238], arg this[314260]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {(313698 call =(408196 call . this[314260] c"state")(313697 call normalize(408203 call . this[314260] c"N")(408208 call . this[314260] c"state")))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).srandom[313710](arg _mt[314266]:_MT[238], arg this[314264]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg seed[313707] : uint(64)[115], arg inc[313713] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {(313721 call =(408213 call . this[314264] c"state")(313719 call + inc[313713] seed[313707]))
    if(313849 call _cond_test(313727 call <=(408220 call . this[314264] c"N") 8))
    { unknown tmpstate[313736](313734 call _cast(313733 call uint(64)[115] 8)(408225 call . this[314264] c"state"))(313739 'end of statement')(313751 call pcg_setseq_8_step_r tmpstate[313736](313749 call _cast(313748 call uint(64)[115] 8) inc[313713]))(313755 call =(408232 call . this[314264] c"state") tmpstate[313736])
    }
    {
      if(313844 call _cond_test(313760 call <=(408238 call . this[314264] c"N") 16))
      { unknown tmpstate[313769](313767 call _cast(313766 call uint(64)[115] 16)(408243 call . this[314264] c"state"))(313772 'end of statement')(313784 call pcg_setseq_16_step_r tmpstate[313769](313782 call _cast(313781 call uint(64)[115] 16) inc[313713]))(313788 call =(408250 call . this[314264] c"state") tmpstate[313769])
      }
      {
        if(313839 call _cond_test(313793 call <=(408256 call . this[314264] c"N") 32))
        { unknown tmpstate[313802](313800 call _cast(313799 call uint(64)[115] 32)(408261 call . this[314264] c"state"))(313805 'end of statement')(313817 call pcg_setseq_32_step_r tmpstate[313802](313815 call _cast(313814 call uint(64)[115] 32) inc[313713]))(313821 call =(408268 call . this[314264] c"state") tmpstate[313802])
        }
        {
          if(313835 call _cond_test(313826 call <=(408274 call . this[314264] c"N") 64))
          {(313832 call pcg_setseq_64_step_r(408279 call . this[314264] c"state") inc[313713])
          }
        }
      }
    }(313856 call(408286 call . this[314264] c"mask_state"))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).random[313866](arg _mt[314270]:_MT[238], arg this[314268]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg inc[313863] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314073 call _cond_test(313871 call <=(408291 call . this[314268] c"N") 8))
    { unknown tmpstate[313880](313878 call _cast(313877 call uint(64)[115] 8)(408296 call . this[314268] c"state"))(313883 'end of statement') unknown oldstate[313886] tmpstate[313880](313889 'end of statement')(313900 call pcg_setseq_8_step_r tmpstate[313880](313898 call _cast(313897 call uint(64)[115] 8) inc[313863]))(313904 call =(408304 call . this[314268] c"state") tmpstate[313880])(313909 call(408309 call . this[314268] c"mask_state"))(313920 return(313919 call normalize(408314 call . this[314268] c"N")(313918 call pcg_output_rxs_m_xs_N_mine(408319 call . this[314268] c"N") oldstate[313886])))
    }
    {
      if(314068 call _cond_test(313924 call <=(408325 call . this[314268] c"N") 16))
      { unknown tmpstate[313933](313931 call _cast(313930 call uint(64)[115] 16)(408330 call . this[314268] c"state"))(313936 'end of statement') unknown oldstate[313939] tmpstate[313933](313942 'end of statement')(313953 call pcg_setseq_16_step_r tmpstate[313933](313951 call _cast(313950 call uint(64)[115] 16) inc[313863]))(313957 call =(408338 call . this[314268] c"state") tmpstate[313933])(313962 call(408343 call . this[314268] c"mask_state"))(313973 return(313972 call normalize(408348 call . this[314268] c"N")(313971 call pcg_output_rxs_m_xs_N_mine(408353 call . this[314268] c"N") oldstate[313939])))
      }
      {
        if(314063 call _cond_test(313977 call <=(408359 call . this[314268] c"N") 32))
        { unknown tmpstate[313986](313984 call _cast(313983 call uint(64)[115] 32)(408364 call . this[314268] c"state"))(313989 'end of statement') unknown oldstate[313992] tmpstate[313986](313995 'end of statement')(314006 call pcg_setseq_32_step_r tmpstate[313986](314004 call _cast(314003 call uint(64)[115] 32) inc[313863]))(314010 call =(408372 call . this[314268] c"state") tmpstate[313986])(314015 call(408377 call . this[314268] c"mask_state"))(314026 return(314025 call normalize(408382 call . this[314268] c"N")(314024 call pcg_output_rxs_m_xs_N_mine(408387 call . this[314268] c"N") oldstate[313992])))
        }
        {
          if(314059 call _cond_test(314030 call <=(408393 call . this[314268] c"N") 64))
          { unknown oldstate[314033](408398 call . this[314268] c"state")(314036 'end of statement')(314042 call pcg_setseq_64_step_r(408403 call . this[314268] c"state") inc[313863])(314046 call(408408 call . this[314268] c"mask_state"))(314057 return(314056 call normalize(408413 call . this[314268] c"N")(314055 call pcg_output_rxs_m_xs_N_mine(408418 call . this[314268] c"N") oldstate[314033])))
          }
        }
      }
    }(314080 return 0)
  }
  { scopeless type uint(64)[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314258](?).advance[314091](arg _mt[314274]:_MT[238], arg this[314272]:pcg_setseq_N_rxs_m_xs_N_rng[314258](?), arg inc[314088] : uint(64)[115], arg delta[314094] : uint(64)[115]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    if(314249 call _cond_test(314099 call <=(408424 call . this[314272] c"N") 8))
    {(314128 call =(408429 call . this[314272] c"state")(314127 call pcg_advance_lcg 8(314110 call _cast(314109 call uint(64)[115] 8)(408434 call . this[314272] c"state"))(314117 call _cast(314116 call uint(64)[115] 8) delta[314094]) PCG_DEFAULT_MULTIPLIER_8[311870](314125 call _cast(314124 call uint(64)[115] 8) inc[314088])))(314134 call(408441 call . this[314272] c"mask_state"))
    }
    {
      if(314244 call _cond_test(314138 call <=(408446 call . this[314272] c"N") 16))
      {(314167 call =(408451 call . this[314272] c"state")(314166 call pcg_advance_lcg 16(314149 call _cast(314148 call uint(64)[115] 16)(408456 call . this[314272] c"state"))(314156 call _cast(314155 call uint(64)[115] 16) delta[314094]) PCG_DEFAULT_MULTIPLIER_16[311878](314164 call _cast(314163 call uint(64)[115] 16) inc[314088])))(314173 call(408463 call . this[314272] c"mask_state"))
      }
      {
        if(314239 call _cond_test(314177 call <=(408468 call . this[314272] c"N") 32))
        {(314206 call =(408473 call . this[314272] c"state")(314205 call pcg_advance_lcg 32(314188 call _cast(314187 call uint(64)[115] 32)(408478 call . this[314272] c"state"))(314195 call _cast(314194 call uint(64)[115] 32) delta[314094]) PCG_DEFAULT_MULTIPLIER_32[311885](314203 call _cast(314202 call uint(64)[115] 32) inc[314088])))(314212 call(408485 call . this[314272] c"mask_state"))
        }
        {
          if(314235 call _cond_test(314216 call <=(408490 call . this[314272] c"N") 64))
          {(314227 call =(408495 call . this[314272] c"state")(314226 call pcg_advance_lcg 64(408500 call . this[314272] c"state") delta[314094] PCG_DEFAULT_MULTIPLIER_64[311892] inc[314088]))(314233 call(408507 call . this[314272] c"mask_state"))
          }
        }
      }
    }
  } type pcg_setseq_N_rxs_m_xs_N_rng[314258](?) const N[313679] "const" unknown state[313684] uint(64)[115] function pcg_getvalid_inc[314286](arg initseq[314283] :(314282 call uint(64)[115] 64)) : _unknown[51] "inline"
  {(314299 return(314297 call |(314294 call << initseq[314283] 1) 1))
  }
  { scopeless type(314291 call uint(64)[115] 64)
  } function pcg_getvalid_inc[314314](param arg initseq[314311] :(314310 call uint(64)[115] 64)) param : _unknown[51] "inline" "no doc"
  {(314323 return(314321 call |(314318 call << initseq[314311] 1) 1))
  } function pcg_advance_lcg[314332](param arg bits[314330]:_any[178](?), arg state[314338] :(314337 call uint_with_bits bits[314330]), in arg delta[314345] :(314344 call uint_with_bits bits[314330]), in arg cur_mult[314352] :(314351 call uint_with_bits bits[314330]), in arg cur_plus[314359] :(314358 call uint_with_bits bits[314330])) : _unknown[51] "private"
  { unknown acc_mult[314371] 1(314369 call uint_with_bits bits[314330])(314374 'end of statement') unknown acc_plus[314381] 0(314379 call uint_with_bits bits[314330])(314384 'end of statement')
    { unknown tmp[314439] "temp"(314463 'move' tmp[314439](314458 call _cond_test(314460 call > delta[314345] 0)))
      WhileDo[314444]
      {
        {
          if(314413 call _cond_test(314394 call !=(314391 call & delta[314345] 1) 0))
          {(314398 call *= acc_mult[314371] cur_mult[314352])(314410 call = acc_plus[314381](314408 call +(314405 call * acc_plus[314381] cur_mult[314352]) cur_plus[314359]))
          }(314426 call = cur_plus[314359](314424 call *(314421 call + cur_mult[314352] 1) cur_plus[314359]))(314431 call *= cur_mult[314352] cur_mult[314352])(314436 call /= delta[314345] 2)
        } label _continueLabel[314442](314453 'move' tmp[314439](314448 call _cond_test(314450 call > delta[314345] 0))) tmp[314439]
      } label _breakLabel[314443]
    }(314473 return(314471 call +(314468 call * acc_mult[314371] state[314338]) acc_plus[314381]))
  }
  { scopeless type(314365 call uint_with_bits bits[314330])
  }(355655 'used modules list'(353177 'use' ChapelStandard[20267]))
}