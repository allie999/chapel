AST dump for AtomicsCommon after pass resolve.
Module use list: ChapelStandard 

{
  function chpl__init_AtomicsCommon[415997]() : void[4] "insert line file info" "module init" "resolved"
  {
    (506922 return _void[55])
  }
  function _ref(atomic_refcnt)[963259]._cnt[765414](ref arg this[765418]:_ref(atomic_refcnt)[963259]) ref : _ref(AtomicT(int(64)))[938073] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[765428]:_ref(AtomicT(int(64)))[938073] "dead after last mention" "RVV" "temp"
    ref call_tmp[765435]:_ref(AtomicT(int(64)))[938073] "dead after last mention" "maybe param" "temp"
    (765438 'move' call_tmp[765435](765422 '.' this[765418] _cnt[51949]))
    (765433 'move' ret[765428] call_tmp[765435])
    (765430 return ret[765428])
  }
  function _ref(atomic_refcnt)[963259].init=[765468](ref arg this[765472]:_ref(atomic_refcnt)[963259], arg other[765473]:atomic_refcnt[52099]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[765503]:_ref(AtomicT(int(64)))[938073] "dead after last mention" "insert auto destroy" "maybe param" "reference to a const" "temp"
    (765506 'move' call_tmp[765503](765481 call _cnt[765414] other[765473]))
    unknown call_tmp[765508]:AtomicT(int(64))[938064] "dead after last mention" "maybe param" "temp" "type variable"
    unknown tmp[765487]:AtomicT(int(64))[938064] "dead after last mention" "temp"
    (765492 call init=[1400835] tmp[765487] call_tmp[765503])
    (765494 '.=' this[765472] _cnt[51949] tmp[765487])
    (765498 'end of statement')
    (765499 return _void[55])
  }
  function _ref(atomic_refcnt)[963259].deinit[765513](arg this[765517]:_ref(atomic_refcnt)[963259]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (765525 return _void[55])
  }
  type atomic_refcnt[52099] unknown _cnt[51949]:AtomicT(int(64))[938064]
}