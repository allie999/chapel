AST dump for RangeChunk after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416238]() : void[4] "insert line file info" "module init"
  {
    (537603 return _void[55])
  }
  type RemElems[266554] def Thru[266548]:RemElems[266554] def Pack[266550]:RemElems[266554] def Mod[266552]:RemElems[266554]
  function chunks[266577](arg r[266574]:range[64319](?), arg numChunks[266580]:integral[199](?), arg remPol[266585]:RemElems[266554] =
  Thru[266548]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537408] "RVV" "temp"
    {
      unknown _indexOfInterest[266649] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266650] "expr temp" "temp"
      unknown call_tmp[734941] "expr temp" "maybe param" "maybe type" "temp"
      (734944 'move' call_tmp[734941](266605 call chunksOrder r[266574] numChunks[266580] remPol[266585]))
      (266659 'move' _iterator[266650](266657 call _getIterator call_tmp[734941]))
      Defer
      {
        {
          (266690 call _freeIterator _iterator[266650])
        }
      }
      { scopeless type
        (266665 'move' _indexOfInterest[266649](266662 call iteratorIndex _iterator[266650]))
      }
      ForLoop[266651]
      {
        (266670 call _check_tuple_var_decl _indexOfInterest[266649] 2)
        (489726 'end of statement')
        unknown startOrder[266676] "index var" "insert auto destroy"
        (489727 'end of statement')
        (266678 'move' startOrder[266676](266674 call _indexOfInterest[266649] 0))
        (489728 'end of statement' startOrder[266676])
        unknown endOrder[266683] "index var" "insert auto destroy"
        (489730 'end of statement')
        (266685 'move' endOrder[266683](266681 call _indexOfInterest[266649] 1))
        (489731 'end of statement' endOrder[266683])
        {
          unknown call_tmp[734948] "maybe param" "maybe type" "temp"
          (734951 'move' call_tmp[734948](266612 call(266607 call (partial) orderToIndex _mt[243] r[266574]) startOrder[266676]))
          const start[266613] "dead at end of block" "const" "insert auto destroy"
          (548704 'init var' start[266613] call_tmp[734948])
          (266616 'end of statement')
          unknown call_tmp[734955] "maybe param" "maybe type" "temp"
          (734958 'move' call_tmp[734955](266624 call(266619 call (partial) orderToIndex _mt[243] r[266574]) endOrder[266683]))
          const end[266625] "dead at end of block" "const" "insert auto destroy"
          (548706 'init var' end[266625] call_tmp[734955])
          (266628 'end of statement' startOrder[266676] endOrder[266683])
          unknown yret[537412] "YVV" "temp"
          unknown tmp[579247] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579248] "maybe param" "temp"
          unknown call_tmp[734960] "expr temp" "maybe param" "maybe type" "temp"
          (734963 'move' call_tmp[734960](466561 'query' r[266574] 3))
          (579253 'move' tmp[579248](579251 call _cond_test call_tmp[734960]))
          if tmp[579248]
          {
            unknown tmp[579255] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734965] "expr temp" "maybe param" "maybe type" "temp"
            (734968 'move' call_tmp[734965](266632 call chpl_build_bounded_range start[266613] end[266625]))
            unknown call_tmp[734972] "expr temp" "maybe param" "maybe type" "temp"
            (734975 'move' call_tmp[734972](266635 call stride _mt[243] r[266574]))
            (579257 'move' tmp[579255](266638 call chpl_by call_tmp[734965] call_tmp[734972]))
            (579262 'move' tmp[579247](579259 '_paramFoldLogical' tmp[579248] tmp[579255]))
          }
          {
            unknown tmp[579264] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579266 'move' tmp[579264](266642 call chpl_build_bounded_range start[266613] end[266625]))
            (579271 'move' tmp[579247](579268 '_paramFoldLogical' tmp[579248] tmp[579264]))
          }
          unknown call_tmp[734977] "expr temp" "maybe param" "maybe type" "temp"
          (734980 'move' call_tmp[734977](537416 'query' r[266574] 1))
          unknown call_tmp[734982] "expr temp" "maybe param" "maybe type" "temp"
          (734985 'move' call_tmp[734982](537420 'query' r[266574] 3))
          unknown call_tmp[734987] "expr temp" "maybe param" "maybe type" "temp"
          (734990 'move' call_tmp[734987](537415 call range[64319](?) call_tmp[734977] bounded[64208] call_tmp[734982]))
          (537424 'move' yret[537412](537423 'coerce' tmp[579247] call_tmp[734987]))
          (537426 yield yret[537412])
          (489735 'end of statement' start[266613] end[266625] start[266613] end[266625])
        }
        label _continueLabel[266654]
        _indexOfInterest[266649]
        _iterator[266650]
      }
      label _breakLabel[266655]
    }
    (537410 return ret[537408])
  }
  where {
    unknown call_tmp[734992] "expr temp" "maybe param" "maybe type" "temp"
    (734995 'move' call_tmp[734992](466548 'query' r[266574] 2))
    unknown call_tmp[734997] "expr temp" "maybe param" "maybe type" "temp"
    (735000 'move' call_tmp[734997](466552 call == bounded[64208] call_tmp[734992]))
    (466556 call & 1 call_tmp[734997])
  }
  { scopeless type
    unknown call_tmp[735002] "expr temp" "maybe param" "maybe type" "temp"
    (735005 'move' call_tmp[735002](466545 'query' r[266574] 1))
    unknown call_tmp[735007] "expr temp" "maybe param" "maybe type" "temp"
    (735010 'move' call_tmp[735007](466564 'query' r[266574] 3))
    (266594 call range[64319](?) call_tmp[735002] bounded[64208] call_tmp[735007])
  }
  function chunk[266714](arg r[266711]:range[64319](?), arg numChunks[266717]:integral[199](?), arg idx[266721]:integral[199](?), arg remPol[266726]:RemElems[266554] =
  Thru[266548]) : _unknown[51] "compiler added where"
  {
    unknown ret[537430] "RVV" "temp"
    unknown call_tmp[735012] "maybe param" "maybe type" "temp"
    (735015 'move' call_tmp[735012](266747 call chunkOrder r[266711] numChunks[266717] idx[266721] remPol[266726]))
    const tmp[266748] "dead at end of block" "const" "insert auto destroy" "temp"
    (548708 'init var' tmp[266748] call_tmp[735012])
    (266755 call _check_tuple_var_decl tmp[266748] 2)
    (489740 'end of statement')
    unknown call_tmp[735017] "maybe param" "maybe type" "temp"
    (735020 'move' call_tmp[735017](266749 call tmp[266748] 0))
    const startOrder[266736] "dead at end of block" "const" "insert auto destroy"
    (548710 'init var' startOrder[266736] call_tmp[735017])
    unknown call_tmp[735022] "maybe param" "maybe type" "temp"
    (735025 'move' call_tmp[735022](266752 call tmp[266748] 1))
    const endOrder[266738] "dead at end of block" "const" "insert auto destroy"
    (548712 'init var' endOrder[266738] call_tmp[735022])
    (266760 'end of statement')
    unknown call_tmp[735029] "maybe param" "maybe type" "temp"
    (735032 'move' call_tmp[735029](266768 call(266763 call (partial) orderToIndex _mt[243] r[266711]) startOrder[266736]))
    const start[266769] "dead at end of block" "const" "insert auto destroy"
    (548714 'init var' start[266769] call_tmp[735029])
    (266772 'end of statement')
    unknown call_tmp[735036] "maybe param" "maybe type" "temp"
    (735039 'move' call_tmp[735036](266779 call(266774 call (partial) orderToIndex _mt[243] r[266711]) endOrder[266738]))
    const end[266780] "dead at end of block" "const" "insert auto destroy"
    (548716 'init var' end[266780] call_tmp[735036])
    (266783 'end of statement' startOrder[266736] endOrder[266738])
    unknown tmp[579278] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579279] "maybe param" "temp"
    unknown call_tmp[735041] "expr temp" "maybe param" "maybe type" "temp"
    (735044 'move' call_tmp[735041](466590 'query' r[266711] 3))
    (579284 'move' tmp[579279](579282 call _cond_test call_tmp[735041]))
    if tmp[579279]
    {
      unknown tmp[579286] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735046] "expr temp" "maybe param" "maybe type" "temp"
      (735049 'move' call_tmp[735046](266787 call chpl_build_bounded_range start[266769] end[266780]))
      unknown call_tmp[735053] "expr temp" "maybe param" "maybe type" "temp"
      (735056 'move' call_tmp[735053](266790 call stride _mt[243] r[266711]))
      (579288 'move' tmp[579286](266793 call chpl_by call_tmp[735046] call_tmp[735053]))
      (579293 'move' tmp[579278](579290 '_paramFoldLogical' tmp[579279] tmp[579286]))
    }
    {
      unknown tmp[579295] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579297 'move' tmp[579295](266797 call chpl_build_bounded_range start[266769] end[266780]))
      (579302 'move' tmp[579278](579299 '_paramFoldLogical' tmp[579279] tmp[579295]))
    }
    unknown call_tmp[735058] "expr temp" "maybe param" "maybe type" "temp"
    (735061 'move' call_tmp[735058](537436 'query' r[266711] 1))
    unknown call_tmp[735063] "expr temp" "maybe param" "maybe type" "temp"
    (735066 'move' call_tmp[735063](537440 'query' r[266711] 3))
    unknown call_tmp[735068] "expr temp" "maybe param" "maybe type" "temp"
    (735071 'move' call_tmp[735068](537435 call range[64319](?) call_tmp[735058] bounded[64208] call_tmp[735063]))
    (537444 'move' ret[537430](537443 'coerce' tmp[579278] call_tmp[735068]))
    gotoReturn _end_chunk[537428] _end_chunk[537428]
    (489743 'end of statement' start[266769] end[266780] start[266769] end[266780])
    label _end_chunk[537428]
    (537432 return ret[537430])
  }
  where {
    unknown call_tmp[735073] "expr temp" "maybe param" "maybe type" "temp"
    (735076 'move' call_tmp[735073](466577 'query' r[266711] 2))
    unknown call_tmp[735078] "expr temp" "maybe param" "maybe type" "temp"
    (735081 'move' call_tmp[735078](466581 call == bounded[64208] call_tmp[735073]))
    (466585 call & 1 call_tmp[735078])
  }
  { scopeless type
    unknown call_tmp[735083] "expr temp" "maybe param" "maybe type" "temp"
    (735086 'move' call_tmp[735083](466574 'query' r[266711] 1))
    unknown call_tmp[735088] "expr temp" "maybe param" "maybe type" "temp"
    (735091 'move' call_tmp[735088](466593 'query' r[266711] 3))
    (266735 call range[64319](?) call_tmp[735083] bounded[64208] call_tmp[735088])
  }
  function blockCyclicChunks[266824](arg r[266821]:range[64319](?), arg blockSize[266827]:integral[199](?), arg tid[266831]:integral[199](?), arg nTasks[266835]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537450] "RVV" "temp"
    unknown call_tmp[735093] "expr temp" "maybe param" "maybe type" "temp"
    (735096 'move' call_tmp[735093](266840 call >= tid[266831] nTasks[266835]))
    unknown call_tmp[735098] "expr temp" "maybe param" "maybe type" "temp"
    (735101 'move' call_tmp[735098](266882 call _cond_test call_tmp[735093]))
    if call_tmp[735098]
    {
      unknown call_tmp[735103] "expr temp" "maybe param" "maybe type" "temp"
      (735106 'move' call_tmp[735103](266877 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266880 call halt call_tmp[735103])
    }
    unknown call_tmp[735108] "expr temp" "maybe param" "maybe type" "temp"
    (735111 'move' call_tmp[735108](266890 call <= blockSize[266827] 0))
    unknown call_tmp[735113] "expr temp" "maybe param" "maybe type" "temp"
    (735116 'move' call_tmp[735113](266913 call _cond_test call_tmp[735108]))
    if call_tmp[735113]
    {
      (266911 call halt "blockSize must a positive number")
    }
    unknown call_tmp[735118] "expr temp" "maybe param" "maybe type" "temp"
    (735121 'move' call_tmp[735118](266920 call <= nTasks[266835] 0))
    unknown call_tmp[735123] "expr temp" "maybe param" "maybe type" "temp"
    (735126 'move' call_tmp[735123](266943 call _cond_test call_tmp[735118]))
    if call_tmp[735123]
    {
      (266941 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[735130] "maybe param" "maybe type" "temp"
    (735133 'move' call_tmp[735130](266949 call stride _mt[243] r[266821]))
    unknown rangeStride[266952] "dead at end of block" "insert auto destroy"
    (548718 'init var' rangeStride[266952] call_tmp[735130])
    (266955 'end of statement')
    unknown call_tmp[735135] "maybe param" "maybe type" "temp"
    (735138 'move' call_tmp[735135](266958 call * blockSize[266827] rangeStride[266952]))
    unknown blockStride[266960] "dead at end of block" "insert auto destroy"
    (548720 'init var' blockStride[266960] call_tmp[735135])
    (266963 'end of statement')
    unknown call_tmp[735142] "maybe param" "maybe type" "temp"
    (735145 'move' call_tmp[735142](266965 call low _mt[243] r[266821]))
    unknown low[266968] "dead at end of block" "insert auto destroy"
    (548722 'init var' low[266968] call_tmp[735142])
    (266971 'end of statement')
    unknown call_tmp[735149] "maybe param" "maybe type" "temp"
    (735152 'move' call_tmp[735149](266973 call high _mt[243] r[266821]))
    unknown high[266976] "dead at end of block" "insert auto destroy"
    (548724 'init var' high[266976] call_tmp[735149])
    (266979 'end of statement')
    unknown firstBlockStart[267001] "dead at end of block" "insert auto destroy"
    unknown tmp[579309] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579310] "maybe param" "temp"
    unknown call_tmp[735154] "expr temp" "maybe param" "maybe type" "temp"
    (735157 'move' call_tmp[735154](266982 call > rangeStride[266952] 0))
    (579315 'move' tmp[579310](579313 call _cond_test call_tmp[735154]))
    if tmp[579310]
    {
      unknown tmp[579317] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579319 'move' tmp[579317](266985 call low _mt[243] r[266821]))
      (579324 'move' tmp[579309](579321 '_paramFoldLogical' tmp[579310] tmp[579317]))
    }
    {
      unknown tmp[579326] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579328 'move' tmp[579326](266989 call high _mt[243] r[266821]))
      (579333 'move' tmp[579309](579330 '_paramFoldLogical' tmp[579310] tmp[579326]))
    }
    unknown call_tmp[735163] "expr temp" "maybe param" "maybe type" "temp"
    (735166 'move' call_tmp[735163](266997 call * blockStride[266960] tid[266831]))
    unknown call_tmp[735168] "maybe param" "maybe type" "temp"
    (735171 'move' call_tmp[735168](266999 call + tmp[579309] call_tmp[735163]))
    (548726 'init var' firstBlockStart[267001] call_tmp[735168])
    (267004 'end of statement')
    unknown tmp[434114] "maybe param" "temp"
    unknown call_tmp[735175] "expr temp" "maybe param" "maybe type" "temp"
    (735178 'move' call_tmp[735175](267007 call high _mt[243] r[266821]))
    (434125 'move' tmp[434114](267010 call > firstBlockStart[267001] call_tmp[735175]))
    unknown call_tmp[735180] "expr temp" "maybe param" "maybe type" "temp"
    (735183 'move' call_tmp[735180](434127 call _cond_invalid tmp[434114]))
    if call_tmp[735180]
    {
      (434130 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579340] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579341] "maybe param" "temp"
    unknown call_tmp[735185] "expr temp" "maybe param" "maybe type" "temp"
    (735188 'move' call_tmp[735185](434115 call isTrue tmp[434114]))
    (579346 'move' tmp[579341](579344 call _cond_test call_tmp[735185]))
    if tmp[579341]
    {
      (579351 'move' tmp[579340](579348 '_paramFoldLogical' tmp[579341] 1))
    }
    {
      unknown tmp[579353] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735192] "expr temp" "maybe param" "maybe type" "temp"
      (735195 'move' call_tmp[735192](267014 call low _mt[243] r[266821]))
      unknown call_tmp[735197] "expr temp" "maybe param" "maybe type" "temp"
      (735200 'move' call_tmp[735197](267017 call < firstBlockStart[267001] call_tmp[735192]))
      (579355 'move' tmp[579353](434119 call isTrue call_tmp[735197]))
      (579360 'move' tmp[579340](579357 '_paramFoldLogical' tmp[579341] tmp[579353]))
    }
    unknown call_tmp[735202] "expr temp" "maybe param" "maybe type" "temp"
    (735205 'move' call_tmp[735202](267023 call _cond_test tmp[579340]))
    if call_tmp[735202]
    {
      gotoReturn _end_blockCyclicChunks[537448] _end_blockCyclicChunks[537448]
    }
    unknown call_tmp[735207] "maybe param" "maybe type" "temp"
    (735210 'move' call_tmp[735207](267030 call * blockStride[266960] nTasks[266835]))
    unknown strideToNextBlock[267032] "dead at end of block" "insert auto destroy"
    (548728 'init var' strideToNextBlock[267032] call_tmp[735207])
    (267035 'end of statement' rangeStride[266952] rangeStride[266952] blockStride[266960] blockStride[266960])
    unknown call_tmp[735212] "expr temp" "maybe param" "maybe type" "temp"
    (735215 'move' call_tmp[735212](267038 call > rangeStride[266952] 0))
    unknown call_tmp[735217] "expr temp" "maybe param" "maybe type" "temp"
    (735220 'move' call_tmp[735217](267192 call _cond_test call_tmp[735212]))
    if call_tmp[735217]
    {
      {
        unknown _indexOfInterest[267073] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267074] "expr temp" "temp"
        unknown call_tmp[735222] "expr temp" "maybe param" "maybe type" "temp"
        (735225 'move' call_tmp[735222](267092 call chpl_direct_range_iter firstBlockStart[267001] high[266976] strideToNextBlock[267032]))
        (267083 'move' _iterator[267074](267081 call _getIterator call_tmp[735222]))
        Defer
        {
          {
            (267108 call _freeIterator _iterator[267074])
          }
        }
        { scopeless type
          (267097 'move' _indexOfInterest[267073](267094 call iteratorIndex _iterator[267074]))
        }
        ForLoop[267075]
        {
          unknown blockStart[267101] "index var" "insert auto destroy"
          (489758 'end of statement')
          (267103 'move' blockStart[267101] _indexOfInterest[267073])
          (489759 'end of statement' blockStart[267101])
          {
            unknown call_tmp[735227] "expr temp" "maybe param" "maybe type" "temp"
            (735230 'move' call_tmp[735227](267053 call + blockStart[267101] blockStride[266960]))
            unknown call_tmp[735232] "expr temp" "maybe param" "maybe type" "temp"
            (735235 'move' call_tmp[735232](267056 call - call_tmp[735227] 1))
            unknown call_tmp[735237] "maybe param" "maybe type" "temp"
            (735240 'move' call_tmp[735237](267058 call min high[266976] call_tmp[735232]))
            unknown blockEnd[267059] "dead at end of block" "insert auto destroy"
            (548730 'init var' blockEnd[267059] call_tmp[735237])
            (267062 'end of statement' high[266976] blockStart[267101] blockStride[266960])
            unknown yret[537456] "YVV" "temp"
            unknown call_tmp[735242] "expr temp" "maybe param" "maybe type" "temp"
            (735245 'move' call_tmp[735242](267066 call chpl_build_bounded_range blockStart[267101] blockEnd[267059]))
            unknown call_tmp[735247] "expr temp" "maybe param" "maybe type" "temp"
            (735250 'move' call_tmp[735247](267069 call chpl_by call_tmp[735242] rangeStride[266952]))
            (537459 'move' yret[537456](537458 'deref' call_tmp[735247]))
            (537461 yield yret[537456])
            (489764 'end of statement' blockStart[267101] blockEnd[267059] rangeStride[266952])
          }
          label _continueLabel[267078]
          _indexOfInterest[267073]
          _iterator[267074]
        }
        label _breakLabel[267079]
      }
    }
    {
      {
        unknown _indexOfInterest[267149] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267150] "expr temp" "temp"
        unknown call_tmp[735252] "expr temp" "maybe param" "maybe type" "temp"
        (735255 'move' call_tmp[735252](267168 call chpl_direct_range_iter low[266968] firstBlockStart[267001] strideToNextBlock[267032]))
        (267159 'move' _iterator[267150](267157 call _getIterator call_tmp[735252]))
        Defer
        {
          {
            (267184 call _freeIterator _iterator[267150])
          }
        }
        { scopeless type
          (267173 'move' _indexOfInterest[267149](267170 call iteratorIndex _iterator[267150]))
        }
        ForLoop[267151]
        {
          unknown blockEnd[267177] "index var" "insert auto destroy"
          (489769 'end of statement')
          (267179 'move' blockEnd[267177] _indexOfInterest[267149])
          (489770 'end of statement' blockEnd[267177])
          {
            unknown call_tmp[735257] "expr temp" "maybe param" "maybe type" "temp"
            (735260 'move' call_tmp[735257](267129 call + blockEnd[267177] blockStride[266960]))
            unknown call_tmp[735262] "expr temp" "maybe param" "maybe type" "temp"
            (735265 'move' call_tmp[735262](267132 call + call_tmp[735257] 1))
            unknown call_tmp[735267] "maybe param" "maybe type" "temp"
            (735270 'move' call_tmp[735267](267134 call max low[266968] call_tmp[735262]))
            unknown blockStart[267135] "dead at end of block" "insert auto destroy"
            (548732 'init var' blockStart[267135] call_tmp[735267])
            (267138 'end of statement' low[266968] blockEnd[267177] blockStride[266960])
            unknown yret[537463] "YVV" "temp"
            unknown call_tmp[735272] "expr temp" "maybe param" "maybe type" "temp"
            (735275 'move' call_tmp[735272](267142 call chpl_build_bounded_range blockStart[267135] blockEnd[267177]))
            unknown call_tmp[735277] "expr temp" "maybe param" "maybe type" "temp"
            (735280 'move' call_tmp[735277](267145 call chpl_by call_tmp[735272] rangeStride[266952]))
            (537466 'move' yret[537463](537465 'deref' call_tmp[735277]))
            (537468 yield yret[537463])
            (489775 'end of statement' blockStart[267135] blockEnd[267177] rangeStride[266952])
          }
          label _continueLabel[267154]
          _indexOfInterest[267149]
          _iterator[267150]
        }
        label _breakLabel[267155]
      }
    }
    label _end_blockCyclicChunks[537448]
    (537452 return ret[537450])
  }
  where {
    unknown call_tmp[735282] "expr temp" "maybe param" "maybe type" "temp"
    (735285 'move' call_tmp[735282](466602 'query' r[266821] c"boundedType"))
    unknown call_tmp[735287] "expr temp" "maybe param" "maybe type" "temp"
    (735290 'move' call_tmp[735287](466605 call == bounded[64208] call_tmp[735282]))
    (466609 call & 1 call_tmp[735287])
  }
  function chunksOrder[267210](arg r[267207]:range[64319](?), arg numChunks[267213]:integral[199](?), arg remPol[267218]:RemElems[266554] =
  Thru[266548]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537472] "RVV" "temp"
    unknown tmp[434135] "maybe param" "temp"
    unknown call_tmp[735294] "expr temp" "maybe param" "maybe type" "temp"
    (735297 'move' call_tmp[735294](267227 call size _mt[243] r[267207]))
    (434146 'move' tmp[434135](267231 call == call_tmp[735294] 0))
    unknown call_tmp[735299] "expr temp" "maybe param" "maybe type" "temp"
    (735302 'move' call_tmp[735299](434148 call _cond_invalid tmp[434135]))
    if call_tmp[735299]
    {
      (434151 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579367] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579368] "maybe param" "temp"
    unknown call_tmp[735304] "expr temp" "maybe param" "maybe type" "temp"
    (735307 'move' call_tmp[735304](434136 call isTrue tmp[434135]))
    (579373 'move' tmp[579368](579371 call _cond_test call_tmp[735304]))
    if tmp[579368]
    {
      (579378 'move' tmp[579367](579375 '_paramFoldLogical' tmp[579368] 1))
    }
    {
      unknown tmp[579380] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735309] "expr temp" "maybe param" "maybe type" "temp"
      (735312 'move' call_tmp[735309](267235 call <= numChunks[267213] 0))
      (579382 'move' tmp[579380](434140 call isTrue call_tmp[735309]))
      (579387 'move' tmp[579367](579384 '_paramFoldLogical' tmp[579368] tmp[579380]))
    }
    unknown call_tmp[735314] "expr temp" "maybe param" "maybe type" "temp"
    (735317 'move' call_tmp[735314](267241 call _cond_test tmp[579367]))
    if call_tmp[735314]
    {
      gotoReturn _end_chunksOrder[537470] _end_chunksOrder[537470]
    }
    unknown call_tmp[735321] "maybe param" "maybe type" "temp"
    (735324 'move' call_tmp[735321](267248 call size _mt[243] r[267207]))
    const nElems[267251] "dead at end of block" "const" "insert auto destroy"
    (548734 'init var' nElems[267251] call_tmp[735321])
    (267254 'end of statement')
    unknown call_tmp[735326] "expr temp" "maybe param" "maybe type" "temp"
    (735329 'move' call_tmp[735326](466626 'query' r[267207] 1))
    unknown call_tmp[735331] "expr temp" "maybe param" "maybe type" "temp"
    (735334 'move' call_tmp[735331](267259 call min numChunks[267213] nElems[267251]))
    unknown call_tmp[735336] "maybe param" "maybe type" "temp"
    (735339 'move' call_tmp[735336](267261 call _cast call_tmp[735326] call_tmp[735331]))
    unknown nChunks[267263] "dead at end of block" "insert auto destroy"
    (548736 'init var' nChunks[267263] call_tmp[735336])
    (267266 'end of statement')
    unknown chunkSize[267267] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735341] "expr temp" "maybe param" "maybe type" "temp"
    (735344 'move' call_tmp[735341](466629 'query' r[267207] 1))
    (548738 'default init var' chunkSize[267267] call_tmp[735341])
    unknown rem[267271] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735346] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735349 'move' call_tmp[735346](267275 'typeof' chunkSize[267267]))
    (548740 'default init var' rem[267271] call_tmp[735346])
    (267276 'end of statement' nElems[267251] chunkSize[267267])
    {
      unknown tmp[267343] "expr temp" "maybe param" "maybe type" "temp"
      (267345 'move' tmp[267343] remPol[267218])
      unknown call_tmp[735351] "expr temp" "maybe param" "maybe type" "temp"
      (735354 'move' call_tmp[735351](267347 call == tmp[267343] Pack[266550]))
      unknown call_tmp[735356] "expr temp" "maybe param" "maybe type" "temp"
      (735359 'move' call_tmp[735356](267350 call _cond_test call_tmp[735351]))
      if call_tmp[735356]
      {
        unknown call_tmp[735361] "expr temp" "maybe param" "maybe type" "temp"
        (735364 'move' call_tmp[735361](267284 call / nElems[267251] nChunks[267263]))
        (267286 call = chunkSize[267267] call_tmp[735361])
        (489783 'end of statement' chunkSize[267267] nElems[267251] nChunks[267263])
        unknown call_tmp[735366] "expr temp" "maybe param" "maybe type" "temp"
        (735369 'move' call_tmp[735366](267292 call * chunkSize[267267] nChunks[267263]))
        unknown call_tmp[735371] "expr temp" "maybe param" "maybe type" "temp"
        (735374 'move' call_tmp[735371](267295 call != call_tmp[735366] nElems[267251]))
        unknown call_tmp[735376] "expr temp" "maybe param" "maybe type" "temp"
        (735379 'move' call_tmp[735376](267312 call _cond_test call_tmp[735371]))
        if call_tmp[735376]
        {
          (267299 call += chunkSize[267267] 1)
          (489787 'end of statement' chunkSize[267267])
          unknown call_tmp[735381] "expr temp" "maybe param" "maybe type" "temp"
          (735384 'move' call_tmp[735381](267308 call divceil nElems[267251] chunkSize[267267]))
          (267309 call = nChunks[267263] call_tmp[735381])
          (489789 'end of statement' nChunks[267263] nElems[267251] chunkSize[267267])
        }
      }
      {
        unknown call_tmp[735386] "expr temp" "maybe param" "maybe type" "temp"
        (735389 'move' call_tmp[735386](267353 call == tmp[267343] Mod[266552]))
        unknown call_tmp[735391] "expr temp" "maybe param" "maybe type" "temp"
        (735394 'move' call_tmp[735391](267356 call _cond_test call_tmp[735386]))
        if call_tmp[735391]
        {
          unknown call_tmp[735396] "expr temp" "maybe param" "maybe type" "temp"
          (735399 'move' call_tmp[735396](267323 call / nElems[267251] nChunks[267263]))
          (267325 call = chunkSize[267267] call_tmp[735396])
          (489793 'end of statement' chunkSize[267267] nElems[267251] nChunks[267263])
          unknown call_tmp[735401] "expr temp" "maybe param" "maybe type" "temp"
          (735404 'move' call_tmp[735401](267333 call * chunkSize[267267] nChunks[267263]))
          unknown call_tmp[735406] "expr temp" "maybe param" "maybe type" "temp"
          (735409 'move' call_tmp[735406](267335 call - nElems[267251] call_tmp[735401]))
          (267337 call = rem[267271] call_tmp[735406])
          (489797 'end of statement' rem[267271] nElems[267251] chunkSize[267267] nChunks[267263])
        }
      }
    }
    {
      unknown _indexOfInterest[267479] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267480] "expr temp" "temp"
      unknown call_tmp[735411] "expr temp" "maybe param" "maybe type" "temp"
      (735414 'move' call_tmp[735411](267496 call chpl_direct_counted_range_iter 0 nChunks[267263]))
      (267489 'move' _iterator[267480](267487 call _getIterator call_tmp[735411]))
      Defer
      {
        {
          (267512 call _freeIterator _iterator[267480])
        }
      }
      { scopeless type
        (267501 'move' _indexOfInterest[267479](267498 call iteratorIndex _iterator[267480]))
      }
      ForLoop[267481]
      {
        unknown i[267505] "index var" "insert auto destroy"
        (489803 'end of statement')
        (267507 'move' i[267505] _indexOfInterest[267479])
        (489804 'end of statement' i[267505])
        {
          unknown chunk[267372] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735416] "expr temp" "maybe param" "maybe type" "temp"
          (735419 'move' call_tmp[735416](466632 'query' r[267207] 1))
          unknown call_tmp[735421] "expr temp" "maybe param" "maybe type" "temp"
          (735424 'move' call_tmp[735421](267370 call * 2 call_tmp[735416]))
          (548742 'default init var' chunk[267372] call_tmp[735421])
          (267375 'end of statement')
          {
            unknown tmp[267451] "expr temp" "maybe param" "maybe type" "temp"
            (267453 'move' tmp[267451] remPol[267218])
            unknown call_tmp[735426] "expr temp" "maybe param" "maybe type" "temp"
            (735429 'move' call_tmp[735426](267455 call == tmp[267451] Thru[266548]))
            unknown call_tmp[735431] "expr temp" "maybe param" "maybe type" "temp"
            (735434 'move' call_tmp[735431](267458 call _cond_test call_tmp[735426]))
            if call_tmp[735431]
            {
              unknown call_tmp[735436] "expr temp" "maybe param" "maybe type" "temp"
              (735439 'move' call_tmp[735436](267387 call chunkOrderThru nElems[267251] nChunks[267263] i[267505]))
              (267388 call = chunk[267372] call_tmp[735436])
              (489806 'end of statement' chunk[267372] nElems[267251] nChunks[267263] i[267505])
            }
            {
              unknown call_tmp[735441] "expr temp" "maybe param" "maybe type" "temp"
              (735444 'move' call_tmp[735441](267461 call == tmp[267451] Pack[266550]))
              unknown call_tmp[735446] "expr temp" "maybe param" "maybe type" "temp"
              (735449 'move' call_tmp[735446](267464 call _cond_test call_tmp[735441]))
              if call_tmp[735446]
              {
                unknown call_tmp[735451] "expr temp" "maybe param" "maybe type" "temp"
                (735454 'move' call_tmp[735451](267402 call chunkOrderPack chunkSize[267267] nElems[267251] i[267505]))
                (267403 call = chunk[267372] call_tmp[735451])
                (489811 'end of statement' chunk[267372] chunkSize[267267] nElems[267251] i[267505])
              }
              {
                unknown call_tmp[735456] "expr temp" "maybe param" "maybe type" "temp"
                (735459 'move' call_tmp[735456](267468 call == tmp[267451] Mod[266552]))
                unknown call_tmp[735461] "expr temp" "maybe param" "maybe type" "temp"
                (735464 'move' call_tmp[735461](267471 call _cond_test call_tmp[735456]))
                if call_tmp[735461]
                {
                  unknown call_tmp[735466] "expr temp" "maybe param" "maybe type" "temp"
                  (735469 'move' call_tmp[735466](267419 call chunkOrderMod chunkSize[267267] rem[267271] nElems[267251] nChunks[267263] i[267505]))
                  (267420 call = chunk[267372] call_tmp[735466])
                  (489816 'end of statement' chunk[267372] chunkSize[267267] rem[267271] nElems[267251] nChunks[267263] i[267505])
                }
                {
                  (267445 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537478] "YVV" "temp"
          unknown call_tmp[735471] "expr temp" "maybe param" "maybe type" "temp"
          (735474 'move' call_tmp[735471](537483 'query' r[267207] 1))
          unknown call_tmp[735476] "expr temp" "maybe param" "maybe type" "temp"
          (735479 'move' call_tmp[735476](537481 call * 2 call_tmp[735471]))
          (537487 'move' yret[537478](537486 'coerce' chunk[267372] call_tmp[735476]))
          (537489 yield yret[537478])
          (489824 'end of statement' chunk[267372])
        }
        label _continueLabel[267484]
        _indexOfInterest[267479]
        _iterator[267480]
      }
      label _breakLabel[267485]
    }
    label _end_chunksOrder[537470]
    (537474 return ret[537472])
  }
  where {
    unknown call_tmp[735481] "expr temp" "maybe param" "maybe type" "temp"
    (735484 'move' call_tmp[735481](466638 'query' r[267207] 2))
    unknown call_tmp[735486] "expr temp" "maybe param" "maybe type" "temp"
    (735489 'move' call_tmp[735486](466642 call == bounded[64208] call_tmp[735481]))
    (466646 call & 1 call_tmp[735486])
  }
  { scopeless type
    unknown call_tmp[735491] "expr temp" "maybe param" "maybe type" "temp"
    (735494 'move' call_tmp[735491](466635 'query' r[267207] 1))
    (267224 call * 2 call_tmp[735491])
  }
  function chunkOrder[267534](arg r[267531]:range[64319](?), arg numChunks[267537]:integral[199](?), arg idx[267541]:integral[199](?), arg remPol[267546]:RemElems[266554] =
  Thru[266548]) : _unknown[51] "compiler added where"
  {
    unknown ret[537493] "RVV" "temp"
    unknown tmp[434156] "maybe param" "temp"
    unknown tmp[434177] "maybe param" "temp"
    unknown tmp[434198] "maybe param" "temp"
    unknown call_tmp[735498] "expr temp" "maybe param" "maybe type" "temp"
    (735501 'move' call_tmp[735498](267555 call size _mt[243] r[267531]))
    (434209 'move' tmp[434198](267559 call == call_tmp[735498] 0))
    unknown call_tmp[735503] "expr temp" "maybe param" "maybe type" "temp"
    (735506 'move' call_tmp[735503](434211 call _cond_invalid tmp[434198]))
    if call_tmp[735503]
    {
      (434214 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579395] "maybe param" "temp"
    unknown call_tmp[735508] "expr temp" "maybe param" "maybe type" "temp"
    (735511 'move' call_tmp[735508](434199 call isTrue tmp[434198]))
    (579400 'move' tmp[579395](579398 call _cond_test call_tmp[735508]))
    if tmp[579395]
    {
      (579405 'move' tmp[579394](579402 '_paramFoldLogical' tmp[579395] 1))
    }
    {
      unknown tmp[579407] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735513] "expr temp" "maybe param" "maybe type" "temp"
      (735516 'move' call_tmp[735513](267563 call <= numChunks[267537] 0))
      (579409 'move' tmp[579407](434203 call isTrue call_tmp[735513]))
      (579414 'move' tmp[579394](579411 '_paramFoldLogical' tmp[579395] tmp[579407]))
    }
    (434188 'move' tmp[434177] tmp[579394])
    unknown call_tmp[735518] "expr temp" "maybe param" "maybe type" "temp"
    (735521 'move' call_tmp[735518](434190 call _cond_invalid tmp[434177]))
    if call_tmp[735518]
    {
      (434193 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579422] "maybe param" "temp"
    unknown call_tmp[735523] "expr temp" "maybe param" "maybe type" "temp"
    (735526 'move' call_tmp[735523](434178 call isTrue tmp[434177]))
    (579427 'move' tmp[579422](579425 call _cond_test call_tmp[735523]))
    if tmp[579422]
    {
      (579432 'move' tmp[579421](579429 '_paramFoldLogical' tmp[579422] 1))
    }
    {
      unknown tmp[579434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735528] "expr temp" "maybe param" "maybe type" "temp"
      (735531 'move' call_tmp[735528](267569 call < idx[267541] 0))
      (579436 'move' tmp[579434](434182 call isTrue call_tmp[735528]))
      (579441 'move' tmp[579421](579438 '_paramFoldLogical' tmp[579422] tmp[579434]))
    }
    (434167 'move' tmp[434156] tmp[579421])
    unknown call_tmp[735533] "expr temp" "maybe param" "maybe type" "temp"
    (735536 'move' call_tmp[735533](434169 call _cond_invalid tmp[434156]))
    if call_tmp[735533]
    {
      (434172 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579449] "maybe param" "temp"
    unknown call_tmp[735538] "expr temp" "maybe param" "maybe type" "temp"
    (735541 'move' call_tmp[735538](434157 call isTrue tmp[434156]))
    (579454 'move' tmp[579449](579452 call _cond_test call_tmp[735538]))
    if tmp[579449]
    {
      (579459 'move' tmp[579448](579456 '_paramFoldLogical' tmp[579449] 1))
    }
    {
      unknown tmp[579461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735543] "expr temp" "maybe param" "maybe type" "temp"
      (735546 'move' call_tmp[735543](267575 call >= idx[267541] numChunks[267537]))
      (579463 'move' tmp[579461](434161 call isTrue call_tmp[735543]))
      (579468 'move' tmp[579448](579465 '_paramFoldLogical' tmp[579449] tmp[579461]))
    }
    unknown call_tmp[735548] "expr temp" "maybe param" "maybe type" "temp"
    (735551 'move' call_tmp[735548](267592 call _cond_test tmp[579448]))
    if call_tmp[735548]
    {
      unknown call_tmp[735553] "expr temp" "maybe param" "maybe type" "temp"
      (735556 'move' call_tmp[735553](466658 'query' r[267531] 1))
      unknown call_tmp[735558] "expr temp" "maybe param" "maybe type" "temp"
      (735561 'move' call_tmp[735558](267581 call _cast call_tmp[735553] 1))
      unknown call_tmp[735563] "expr temp" "maybe param" "maybe type" "temp"
      (735566 'move' call_tmp[735563](466661 'query' r[267531] 1))
      unknown call_tmp[735568] "expr temp" "maybe param" "maybe type" "temp"
      (735571 'move' call_tmp[735568](267585 call _cast call_tmp[735563] 0))
      unknown call_tmp[735573] "expr temp" "maybe param" "maybe type" "temp"
      (735576 'move' call_tmp[735573](267588 call _build_tuple call_tmp[735558] call_tmp[735568]))
      unknown call_tmp[735578] "expr temp" "maybe param" "maybe type" "temp"
      (735581 'move' call_tmp[735578](537500 'query' r[267531] 1))
      unknown call_tmp[735583] "expr temp" "maybe param" "maybe type" "temp"
      (735586 'move' call_tmp[735583](537498 call * 2 call_tmp[735578]))
      (537504 'move' ret[537493](537503 'coerce' call_tmp[735573] call_tmp[735583]))
      gotoReturn _end_chunkOrder[537491] _end_chunkOrder[537491]
    }
    unknown call_tmp[735590] "maybe param" "maybe type" "temp"
    (735593 'move' call_tmp[735590](267599 call size _mt[243] r[267531]))
    const nElems[267602] "dead at end of block" "const" "insert auto destroy"
    (548744 'init var' nElems[267602] call_tmp[735590])
    (267605 'end of statement')
    unknown call_tmp[735595] "expr temp" "maybe param" "maybe type" "temp"
    (735598 'move' call_tmp[735595](466664 'query' r[267531] 1))
    unknown call_tmp[735600] "expr temp" "maybe param" "maybe type" "temp"
    (735603 'move' call_tmp[735600](267610 call min numChunks[267537] nElems[267602]))
    unknown call_tmp[735605] "maybe param" "maybe type" "temp"
    (735608 'move' call_tmp[735605](267612 call _cast call_tmp[735595] call_tmp[735600]))
    const nChunks[267614] "dead at end of block" "const" "insert auto destroy"
    (548746 'init var' nChunks[267614] call_tmp[735605])
    (267617 'end of statement')
    unknown call_tmp[735610] "expr temp" "maybe param" "maybe type" "temp"
    (735613 'move' call_tmp[735610](466667 'query' r[267531] 1))
    unknown call_tmp[735615] "maybe param" "maybe type" "temp"
    (735618 'move' call_tmp[735615](267620 call _cast call_tmp[735610] idx[267541]))
    const i[267622] "dead at end of block" "const" "insert auto destroy"
    (548748 'init var' i[267622] call_tmp[735615])
    (267625 'end of statement' nElems[267602])
    {
      unknown tmp[267738] "expr temp" "maybe param" "maybe type" "temp"
      (267740 'move' tmp[267738] remPol[267546])
      unknown call_tmp[735620] "expr temp" "maybe param" "maybe type" "temp"
      (735623 'move' call_tmp[735620](267742 call == tmp[267738] Thru[266548]))
      unknown call_tmp[735625] "expr temp" "maybe param" "maybe type" "temp"
      (735628 'move' call_tmp[735625](267745 call _cond_test call_tmp[735620]))
      if call_tmp[735625]
      {
        unknown call_tmp[735630] "expr temp" "maybe param" "maybe type" "temp"
        (735633 'move' call_tmp[735630](267635 call chunkOrderThru nElems[267602] nChunks[267614] i[267622]))
        unknown call_tmp[735635] "expr temp" "maybe param" "maybe type" "temp"
        (735638 'move' call_tmp[735635](537511 'query' r[267531] 1))
        unknown call_tmp[735640] "expr temp" "maybe param" "maybe type" "temp"
        (735643 'move' call_tmp[735640](537509 call * 2 call_tmp[735635]))
        (537515 'move' ret[537493](537514 'coerce' call_tmp[735630] call_tmp[735640]))
        gotoReturn _end_chunkOrder[537491] _end_chunkOrder[537491]
        (489831 'end of statement' nElems[267602] nChunks[267614] i[267622])
      }
      {
        unknown call_tmp[735645] "expr temp" "maybe param" "maybe type" "temp"
        (735648 'move' call_tmp[735645](267748 call == tmp[267738] Pack[266550]))
        unknown call_tmp[735650] "expr temp" "maybe param" "maybe type" "temp"
        (735653 'move' call_tmp[735650](267751 call _cond_test call_tmp[735645]))
        if call_tmp[735650]
        {
          unknown call_tmp[735655] "maybe param" "maybe type" "temp"
          (735658 'move' call_tmp[735655](267645 call / nElems[267602] nChunks[267614]))
          unknown chunkSize[267647] "dead at end of block" "insert auto destroy"
          (548750 'init var' chunkSize[267647] call_tmp[735655])
          (267650 'end of statement' nElems[267602] nChunks[267614])
          unknown call_tmp[735660] "expr temp" "maybe param" "maybe type" "temp"
          (735663 'move' call_tmp[735660](267654 call * chunkSize[267647] nChunks[267614]))
          unknown call_tmp[735665] "expr temp" "maybe param" "maybe type" "temp"
          (735668 'move' call_tmp[735665](267657 call != call_tmp[735660] nElems[267602]))
          unknown call_tmp[735670] "expr temp" "maybe param" "maybe type" "temp"
          (735673 'move' call_tmp[735670](267664 call _cond_test call_tmp[735665]))
          if call_tmp[735670]
          {
            (267661 call += chunkSize[267647] 1)
            (489837 'end of statement' chunkSize[267647])
          }
          unknown call_tmp[735675] "expr temp" "maybe param" "maybe type" "temp"
          (735678 'move' call_tmp[735675](267674 call chunkOrderPack chunkSize[267647] nElems[267602] i[267622]))
          unknown call_tmp[735680] "expr temp" "maybe param" "maybe type" "temp"
          (735683 'move' call_tmp[735680](537522 'query' r[267531] 1))
          unknown call_tmp[735685] "expr temp" "maybe param" "maybe type" "temp"
          (735688 'move' call_tmp[735685](537520 call * 2 call_tmp[735680]))
          (537526 'move' ret[537493](537525 'coerce' call_tmp[735675] call_tmp[735685]))
          gotoReturn _end_chunkOrder[537491] _end_chunkOrder[537491]
          (489839 'end of statement' chunkSize[267647] nElems[267602] i[267622])
        }
        {
          unknown call_tmp[735690] "expr temp" "maybe param" "maybe type" "temp"
          (735693 'move' call_tmp[735690](267755 call == tmp[267738] Mod[266552]))
          unknown call_tmp[735695] "expr temp" "maybe param" "maybe type" "temp"
          (735698 'move' call_tmp[735695](267758 call _cond_test call_tmp[735690]))
          if call_tmp[735695]
          {
            unknown call_tmp[735700] "maybe param" "maybe type" "temp"
            (735703 'move' call_tmp[735700](267683 call / nElems[267602] nChunks[267614]))
            const chunkSize[267685] "dead at end of block" "const" "insert auto destroy"
            (548752 'init var' chunkSize[267685] call_tmp[735700])
            (267688 'end of statement')
            unknown call_tmp[735705] "expr temp" "maybe param" "maybe type" "temp"
            (735708 'move' call_tmp[735705](267693 call * chunkSize[267685] nChunks[267614]))
            unknown call_tmp[735710] "maybe param" "maybe type" "temp"
            (735713 'move' call_tmp[735710](267695 call - nElems[267602] call_tmp[735705]))
            const rem[267697] "dead at end of block" "const" "insert auto destroy"
            (548754 'init var' rem[267697] call_tmp[735710])
            (267700 'end of statement' nElems[267602] nChunks[267614] nElems[267602] chunkSize[267685] nChunks[267614])
            unknown call_tmp[735715] "expr temp" "maybe param" "maybe type" "temp"
            (735718 'move' call_tmp[735715](267708 call chunkOrderMod chunkSize[267685] rem[267697] nElems[267602] nChunks[267614] i[267622]))
            unknown call_tmp[735720] "expr temp" "maybe param" "maybe type" "temp"
            (735723 'move' call_tmp[735720](537533 'query' r[267531] 1))
            unknown call_tmp[735725] "expr temp" "maybe param" "maybe type" "temp"
            (735728 'move' call_tmp[735725](537531 call * 2 call_tmp[735720]))
            (537537 'move' ret[537493](537536 'coerce' call_tmp[735715] call_tmp[735725]))
            gotoReturn _end_chunkOrder[537491] _end_chunkOrder[537491]
            (489848 'end of statement' chunkSize[267685] rem[267697] nElems[267602] nChunks[267614] i[267622])
          }
          {
            (267732 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537491]
    (537495 return ret[537493])
  }
  where {
    unknown call_tmp[735730] "expr temp" "maybe param" "maybe type" "temp"
    (735733 'move' call_tmp[735730](466673 'query' r[267531] 2))
    unknown call_tmp[735735] "expr temp" "maybe param" "maybe type" "temp"
    (735738 'move' call_tmp[735735](466677 call == bounded[64208] call_tmp[735730]))
    (466681 call & 1 call_tmp[735735])
  }
  { scopeless type
    unknown call_tmp[735740] "expr temp" "maybe param" "maybe type" "temp"
    (735743 'move' call_tmp[735740](466670 'query' r[267531] 1))
    (267552 call * 2 call_tmp[735740])
  }
  function chunkOrderThru[267773](arg nElems[267770]:_any[178](?), arg nChunks[267776] :
  (466687 'typeof' nElems[267770]), arg i[267780] :
  (466689 'typeof' nElems[267770])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537543] "RVV" "temp"
    unknown call_tmp[735745] "maybe param" "maybe type" "temp"
    (735748 'move' call_tmp[735745](267790 call * nElems[267770] i[267780]))
    const m[267792] "dead at end of block" "const" "insert auto destroy"
    (548756 'init var' m[267792] call_tmp[735745])
    (267795 'end of statement')
    const start[267813] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579475] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579476] "maybe param" "temp"
    unknown call_tmp[735750] "expr temp" "maybe param" "maybe type" "temp"
    (735753 'move' call_tmp[735750](267799 call == i[267780] 0))
    (579481 'move' tmp[579476](579479 call _cond_test call_tmp[735750]))
    if tmp[579476]
    {
      unknown tmp[579483] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735755] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735758 'move' call_tmp[735755](466691 'typeof' nElems[267770]))
      (579485 'move' tmp[579483](267803 call _cast call_tmp[735755] 0))
      (579490 'move' tmp[579475](579487 '_paramFoldLogical' tmp[579476] tmp[579483]))
    }
    {
      unknown tmp[579492] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579494 'move' tmp[579492](267809 call divceil m[267792] nChunks[267776]))
      (579499 'move' tmp[579475](579496 '_paramFoldLogical' tmp[579476] tmp[579492]))
    }
    (548758 'init var' start[267813] tmp[579475])
    (267816 'end of statement')
    const end[267842] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579506] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579507] "maybe param" "temp"
    unknown call_tmp[735760] "expr temp" "maybe param" "maybe type" "temp"
    (735763 'move' call_tmp[735760](267820 call - nChunks[267776] 1))
    unknown call_tmp[735765] "expr temp" "maybe param" "maybe type" "temp"
    (735768 'move' call_tmp[735765](267822 call == i[267780] call_tmp[735760]))
    (579512 'move' tmp[579507](579510 call _cond_test call_tmp[735765]))
    if tmp[579507]
    {
      unknown tmp[579514] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579516 'move' tmp[579514](267826 call - nElems[267770] 1))
      (579521 'move' tmp[579506](579518 '_paramFoldLogical' tmp[579507] tmp[579514]))
    }
    {
      unknown tmp[579523] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735770] "expr temp" "maybe param" "maybe type" "temp"
      (735773 'move' call_tmp[735770](267831 call + m[267792] nElems[267770]))
      unknown call_tmp[735775] "expr temp" "maybe param" "maybe type" "temp"
      (735778 'move' call_tmp[735775](267835 call divceil call_tmp[735770] nChunks[267776]))
      (579525 'move' tmp[579523](267837 call - call_tmp[735775] 1))
      (579530 'move' tmp[579506](579527 '_paramFoldLogical' tmp[579507] tmp[579523]))
    }
    (548760 'init var' end[267842] tmp[579506])
    (267845 'end of statement' m[267792] m[267792])
    unknown call_tmp[735780] "expr temp" "maybe param" "maybe type" "temp"
    (735783 'move' call_tmp[735780](267849 call _build_tuple start[267813] end[267842]))
    unknown call_tmp[735785] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735788 'move' call_tmp[735785](537549 'typeof' nElems[267770]))
    unknown call_tmp[735790] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735793 'move' call_tmp[735790](537551 'typeof' nElems[267770]))
    unknown call_tmp[735795] "expr temp" "maybe param" "maybe type" "temp"
    (735798 'move' call_tmp[735795](537548 call _build_tuple call_tmp[735785] call_tmp[735790]))
    (537554 'move' ret[537543](537553 'coerce' call_tmp[735780] call_tmp[735795]))
    gotoReturn _end_chunkOrderThru[537541] _end_chunkOrderThru[537541]
    (489857 'end of statement' start[267813] end[267842])
    label _end_chunkOrderThru[537541]
    (537545 return ret[537543])
  }
  { scopeless type
    unknown call_tmp[735800] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735803 'move' call_tmp[735800](466693 'typeof' nElems[267770]))
    unknown call_tmp[735805] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735808 'move' call_tmp[735805](466695 'typeof' nElems[267770]))
    (267786 call _build_tuple call_tmp[735800] call_tmp[735805])
  }
  function chunkOrderPack[267863](arg chunkSize[267860]:_any[178](?), arg nElems[267866] :
  (466697 'typeof' chunkSize[267860]), arg i[267870] :
  (466699 'typeof' chunkSize[267860])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537560] "RVV" "temp"
    unknown call_tmp[735810] "maybe param" "maybe type" "temp"
    (735813 'move' call_tmp[735810](267880 call * chunkSize[267860] i[267870]))
    const start[267882] "dead at end of block" "const" "insert auto destroy"
    (548762 'init var' start[267882] call_tmp[735810])
    (267885 'end of statement')
    unknown call_tmp[735815] "expr temp" "maybe param" "maybe type" "temp"
    (735818 'move' call_tmp[735815](267889 call >= start[267882] nElems[267866]))
    unknown call_tmp[735820] "expr temp" "maybe param" "maybe type" "temp"
    (735823 'move' call_tmp[735820](267904 call _cond_test call_tmp[735815]))
    if call_tmp[735820]
    {
      unknown call_tmp[735825] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735828 'move' call_tmp[735825](466701 'typeof' chunkSize[267860]))
      unknown call_tmp[735830] "expr temp" "maybe param" "maybe type" "temp"
      (735833 'move' call_tmp[735830](267893 call _cast call_tmp[735825] 1))
      unknown call_tmp[735835] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735838 'move' call_tmp[735835](466703 'typeof' chunkSize[267860]))
      unknown call_tmp[735840] "expr temp" "maybe param" "maybe type" "temp"
      (735843 'move' call_tmp[735840](267897 call _cast call_tmp[735835] 0))
      unknown call_tmp[735845] "expr temp" "maybe param" "maybe type" "temp"
      (735848 'move' call_tmp[735845](267900 call _build_tuple call_tmp[735830] call_tmp[735840]))
      unknown call_tmp[735850] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735853 'move' call_tmp[735850](537566 'typeof' chunkSize[267860]))
      unknown call_tmp[735855] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735858 'move' call_tmp[735855](537568 'typeof' chunkSize[267860]))
      unknown call_tmp[735860] "expr temp" "maybe param" "maybe type" "temp"
      (735863 'move' call_tmp[735860](537565 call _build_tuple call_tmp[735850] call_tmp[735855]))
      (537571 'move' ret[537560](537570 'coerce' call_tmp[735845] call_tmp[735860]))
      gotoReturn _end_chunkOrderPack[537558] _end_chunkOrderPack[537558]
    }
    unknown call_tmp[735865] "expr temp" "maybe param" "maybe type" "temp"
    (735868 'move' call_tmp[735865](267911 call + start[267882] chunkSize[267860]))
    unknown call_tmp[735870] "maybe param" "maybe type" "temp"
    (735873 'move' call_tmp[735870](267914 call - call_tmp[735865] 1))
    unknown end[267916] "dead at end of block" "insert auto destroy"
    (548764 'init var' end[267916] call_tmp[735870])
    (267919 'end of statement' start[267882])
    unknown call_tmp[735875] "expr temp" "maybe param" "maybe type" "temp"
    (735878 'move' call_tmp[735875](267922 call >= end[267916] nElems[267866]))
    unknown call_tmp[735880] "expr temp" "maybe param" "maybe type" "temp"
    (735883 'move' call_tmp[735880](267932 call _cond_test call_tmp[735875]))
    if call_tmp[735880]
    {
      unknown call_tmp[735885] "expr temp" "maybe param" "maybe type" "temp"
      (735888 'move' call_tmp[735885](267927 call - nElems[267866] 1))
      (267929 call = end[267916] call_tmp[735885])
      (489862 'end of statement' end[267916])
    }
    unknown call_tmp[735890] "expr temp" "maybe param" "maybe type" "temp"
    (735893 'move' call_tmp[735890](267940 call _build_tuple start[267882] end[267916]))
    unknown call_tmp[735895] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735898 'move' call_tmp[735895](537577 'typeof' chunkSize[267860]))
    unknown call_tmp[735900] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735903 'move' call_tmp[735900](537579 'typeof' chunkSize[267860]))
    unknown call_tmp[735905] "expr temp" "maybe param" "maybe type" "temp"
    (735908 'move' call_tmp[735905](537576 call _build_tuple call_tmp[735895] call_tmp[735900]))
    (537582 'move' ret[537560](537581 'coerce' call_tmp[735890] call_tmp[735905]))
    gotoReturn _end_chunkOrderPack[537558] _end_chunkOrderPack[537558]
    (489864 'end of statement' start[267882] end[267916])
    label _end_chunkOrderPack[537558]
    (537562 return ret[537560])
  }
  { scopeless type
    unknown call_tmp[735910] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735913 'move' call_tmp[735910](466705 'typeof' chunkSize[267860]))
    unknown call_tmp[735915] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735918 'move' call_tmp[735915](466707 'typeof' chunkSize[267860]))
    (267876 call _build_tuple call_tmp[735910] call_tmp[735915])
  }
  function chunkOrderMod[267954](arg chunkSize[267951]:_any[178](?), arg rem[267957] :
  (466709 'typeof' chunkSize[267951]), arg nElems[267961] :
  (466711 'typeof' chunkSize[267951]), arg nChunks[267965] :
  (466713 'typeof' chunkSize[267951]), arg i[267969] :
  (466715 'typeof' chunkSize[267951])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537588] "RVV" "temp"
    unknown start[267977] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735920] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735923 'move' call_tmp[735920](466717 'typeof' chunkSize[267951]))
    (548766 'default init var' start[267977] call_tmp[735920])
    unknown end[267981] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548768] "maybe param" "maybe type" "temp"
    (548775 'move' type_tmp[548768](548773 'typeof' start[267977]))
    (548770 'init var split decl' end[267981] type_tmp[548768])
    (267986 'end of statement' start[267977])
    unknown call_tmp[735925] "expr temp" "maybe param" "maybe type" "temp"
    (735928 'move' call_tmp[735925](267990 call < i[267969] rem[267957]))
    unknown call_tmp[735930] "expr temp" "maybe param" "maybe type" "temp"
    (735933 'move' call_tmp[735930](268038 call _cond_test call_tmp[735925]))
    if call_tmp[735930]
    {
      unknown call_tmp[735935] "expr temp" "maybe param" "maybe type" "temp"
      (735938 'move' call_tmp[735935](267996 call + chunkSize[267951] 1))
      unknown call_tmp[735940] "expr temp" "maybe param" "maybe type" "temp"
      (735943 'move' call_tmp[735940](267998 call * i[267969] call_tmp[735935]))
      (268000 call = start[267977] call_tmp[735940])
      (489868 'end of statement' start[267977])
      unknown call_tmp[735945] "maybe param" "maybe type" "temp"
      (735948 'move' call_tmp[735945](268007 call + start[267977] chunkSize[267951]))
      (548777 'init var split init' end[267981] call_tmp[735945] type_tmp[548768])
      (489870 'end of statement' end[267981] start[267977])
    }
    {
      unknown call_tmp[735950] "expr temp" "maybe param" "maybe type" "temp"
      (735953 'move' call_tmp[735950](268016 call - nChunks[267965] i[267969]))
      unknown call_tmp[735955] "expr temp" "maybe param" "maybe type" "temp"
      (735958 'move' call_tmp[735955](268019 call * call_tmp[735950] chunkSize[267951]))
      unknown call_tmp[735960] "expr temp" "maybe param" "maybe type" "temp"
      (735963 'move' call_tmp[735960](268021 call - nElems[267961] call_tmp[735955]))
      (268023 call = start[267977] call_tmp[735960])
      (489873 'end of statement' start[267977])
      unknown call_tmp[735965] "expr temp" "maybe param" "maybe type" "temp"
      (735968 'move' call_tmp[735965](268030 call + start[267977] chunkSize[267951]))
      unknown call_tmp[735970] "maybe param" "maybe type" "temp"
      (735973 'move' call_tmp[735970](268033 call - call_tmp[735965] 1))
      (548780 'init var split init' end[267981] call_tmp[735970] type_tmp[548768])
      (489875 'end of statement' end[267981] start[267977])
    }
    unknown call_tmp[735975] "expr temp" "maybe param" "maybe type" "temp"
    (735978 'move' call_tmp[735975](268045 call _build_tuple start[267977] end[267981]))
    unknown call_tmp[735980] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735983 'move' call_tmp[735980](537594 'typeof' chunkSize[267951]))
    unknown call_tmp[735985] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735988 'move' call_tmp[735985](537596 'typeof' chunkSize[267951]))
    unknown call_tmp[735990] "expr temp" "maybe param" "maybe type" "temp"
    (735993 'move' call_tmp[735990](537593 call _build_tuple call_tmp[735980] call_tmp[735985]))
    (537599 'move' ret[537588](537598 'coerce' call_tmp[735975] call_tmp[735990]))
    gotoReturn _end_chunkOrderMod[537586] _end_chunkOrderMod[537586]
    (489878 'end of statement' start[267977] end[267981])
    label _end_chunkOrderMod[537586]
    (537590 return ret[537588])
  }
  { scopeless type
    unknown call_tmp[735995] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735998 'move' call_tmp[735995](466719 'typeof' chunkSize[267951]))
    unknown call_tmp[736000] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (736003 'move' call_tmp[736000](466721 'typeof' chunkSize[267951]))
    (267975 call _build_tuple call_tmp[735995] call_tmp[736000])
  }
  (355435 'used modules list'(353125 'use' ChapelStandard[20267])(266559 'use' RemElems[266554])(266562 'use' BoundedRangeType[64216]))
}