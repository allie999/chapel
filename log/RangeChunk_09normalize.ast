AST dump for RangeChunk after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416033]() : void[4] "insert line file info" "module init"
  {
    (537370 return _void[55])
  }
  type RemElems[266378] def Thru[266372]:RemElems[266378] def Pack[266374]:RemElems[266378] def Mod[266376]:RemElems[266378]
  function chunks[266401](arg r[266398]:range[64316](?), arg numChunks[266404]:integral[199](?), arg remPol[266409]:RemElems[266378] =
  Thru[266372]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537175] "RVV" "temp"
    {
      unknown _indexOfInterest[266473] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266474] "expr temp" "temp"
      unknown call_tmp[734665] "expr temp" "maybe param" "maybe type" "temp"
      (734668 'move' call_tmp[734665](266429 call chunksOrder r[266398] numChunks[266404] remPol[266409]))
      (266483 'move' _iterator[266474](266481 call _getIterator call_tmp[734665]))
      Defer
      {
        {
          (266514 call _freeIterator _iterator[266474])
        }
      }
      { scopeless type
        (266489 'move' _indexOfInterest[266473](266486 call iteratorIndex _iterator[266474]))
      }
      ForLoop[266475]
      {
        (266494 call _check_tuple_var_decl _indexOfInterest[266473] 2)
        (489511 'end of statement')
        unknown startOrder[266500] "index var" "insert auto destroy"
        (489512 'end of statement')
        (266502 'move' startOrder[266500](266498 call _indexOfInterest[266473] 0))
        (489513 'end of statement' startOrder[266500])
        unknown endOrder[266507] "index var" "insert auto destroy"
        (489515 'end of statement')
        (266509 'move' endOrder[266507](266505 call _indexOfInterest[266473] 1))
        (489516 'end of statement' endOrder[266507])
        {
          unknown call_tmp[734672] "maybe param" "maybe type" "temp"
          (734675 'move' call_tmp[734672](266436 call(266431 call (partial) orderToIndex _mt[243] r[266398]) startOrder[266500]))
          const start[266437] "dead at end of block" "const" "insert auto destroy"
          (548488 'init var' start[266437] call_tmp[734672])
          (266440 'end of statement')
          unknown call_tmp[734679] "maybe param" "maybe type" "temp"
          (734682 'move' call_tmp[734679](266448 call(266443 call (partial) orderToIndex _mt[243] r[266398]) endOrder[266507]))
          const end[266449] "dead at end of block" "const" "insert auto destroy"
          (548490 'init var' end[266449] call_tmp[734679])
          (266452 'end of statement' startOrder[266500] endOrder[266507])
          unknown yret[537179] "YVV" "temp"
          unknown tmp[579031] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579032] "maybe param" "temp"
          unknown call_tmp[734684] "expr temp" "maybe param" "maybe type" "temp"
          (734687 'move' call_tmp[734684](466356 'query' r[266398] 3))
          (579037 'move' tmp[579032](579035 call _cond_test call_tmp[734684]))
          if tmp[579032]
          {
            unknown tmp[579039] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734689] "expr temp" "maybe param" "maybe type" "temp"
            (734692 'move' call_tmp[734689](266456 call chpl_build_bounded_range start[266437] end[266449]))
            unknown call_tmp[734696] "expr temp" "maybe param" "maybe type" "temp"
            (734699 'move' call_tmp[734696](266459 call stride _mt[243] r[266398]))
            (579041 'move' tmp[579039](266462 call chpl_by call_tmp[734689] call_tmp[734696]))
            (579046 'move' tmp[579031](579043 '_paramFoldLogical' tmp[579032] tmp[579039]))
          }
          {
            unknown tmp[579048] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579050 'move' tmp[579048](266466 call chpl_build_bounded_range start[266437] end[266449]))
            (579055 'move' tmp[579031](579052 '_paramFoldLogical' tmp[579032] tmp[579048]))
          }
          unknown call_tmp[734701] "expr temp" "maybe param" "maybe type" "temp"
          (734704 'move' call_tmp[734701](537183 'query' r[266398] 1))
          unknown call_tmp[734706] "expr temp" "maybe param" "maybe type" "temp"
          (734709 'move' call_tmp[734706](537187 'query' r[266398] 3))
          unknown call_tmp[734711] "expr temp" "maybe param" "maybe type" "temp"
          (734714 'move' call_tmp[734711](537182 call range[64316](?) call_tmp[734701] bounded[64205] call_tmp[734706]))
          (537191 'move' yret[537179](537190 'coerce' tmp[579031] call_tmp[734711]))
          (537193 yield yret[537179])
          (489520 'end of statement' start[266437] end[266449] start[266437] end[266449])
        }
        label _continueLabel[266478]
        _indexOfInterest[266473]
        _iterator[266474]
      }
      label _breakLabel[266479]
    }
    (537177 return ret[537175])
  }
  where {
    unknown call_tmp[734716] "expr temp" "maybe param" "maybe type" "temp"
    (734719 'move' call_tmp[734716](466343 'query' r[266398] 2))
    unknown call_tmp[734721] "expr temp" "maybe param" "maybe type" "temp"
    (734724 'move' call_tmp[734721](466347 call == bounded[64205] call_tmp[734716]))
    (466351 call & 1 call_tmp[734721])
  }
  { scopeless type
    unknown call_tmp[734726] "expr temp" "maybe param" "maybe type" "temp"
    (734729 'move' call_tmp[734726](466340 'query' r[266398] 1))
    unknown call_tmp[734731] "expr temp" "maybe param" "maybe type" "temp"
    (734734 'move' call_tmp[734731](466359 'query' r[266398] 3))
    (266418 call range[64316](?) call_tmp[734726] bounded[64205] call_tmp[734731])
  }
  function chunk[266538](arg r[266535]:range[64316](?), arg numChunks[266541]:integral[199](?), arg idx[266545]:integral[199](?), arg remPol[266550]:RemElems[266378] =
  Thru[266372]) : _unknown[51] "compiler added where"
  {
    unknown ret[537197] "RVV" "temp"
    unknown call_tmp[734736] "maybe param" "maybe type" "temp"
    (734739 'move' call_tmp[734736](266571 call chunkOrder r[266535] numChunks[266541] idx[266545] remPol[266550]))
    const tmp[266572] "dead at end of block" "const" "insert auto destroy" "temp"
    (548492 'init var' tmp[266572] call_tmp[734736])
    (266579 call _check_tuple_var_decl tmp[266572] 2)
    (489525 'end of statement')
    unknown call_tmp[734741] "maybe param" "maybe type" "temp"
    (734744 'move' call_tmp[734741](266573 call tmp[266572] 0))
    const startOrder[266560] "dead at end of block" "const" "insert auto destroy"
    (548494 'init var' startOrder[266560] call_tmp[734741])
    unknown call_tmp[734746] "maybe param" "maybe type" "temp"
    (734749 'move' call_tmp[734746](266576 call tmp[266572] 1))
    const endOrder[266562] "dead at end of block" "const" "insert auto destroy"
    (548496 'init var' endOrder[266562] call_tmp[734746])
    (266584 'end of statement')
    unknown call_tmp[734753] "maybe param" "maybe type" "temp"
    (734756 'move' call_tmp[734753](266592 call(266587 call (partial) orderToIndex _mt[243] r[266535]) startOrder[266560]))
    const start[266593] "dead at end of block" "const" "insert auto destroy"
    (548498 'init var' start[266593] call_tmp[734753])
    (266596 'end of statement')
    unknown call_tmp[734760] "maybe param" "maybe type" "temp"
    (734763 'move' call_tmp[734760](266603 call(266598 call (partial) orderToIndex _mt[243] r[266535]) endOrder[266562]))
    const end[266604] "dead at end of block" "const" "insert auto destroy"
    (548500 'init var' end[266604] call_tmp[734760])
    (266607 'end of statement' startOrder[266560] endOrder[266562])
    unknown tmp[579062] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579063] "maybe param" "temp"
    unknown call_tmp[734765] "expr temp" "maybe param" "maybe type" "temp"
    (734768 'move' call_tmp[734765](466385 'query' r[266535] 3))
    (579068 'move' tmp[579063](579066 call _cond_test call_tmp[734765]))
    if tmp[579063]
    {
      unknown tmp[579070] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734770] "expr temp" "maybe param" "maybe type" "temp"
      (734773 'move' call_tmp[734770](266611 call chpl_build_bounded_range start[266593] end[266604]))
      unknown call_tmp[734777] "expr temp" "maybe param" "maybe type" "temp"
      (734780 'move' call_tmp[734777](266614 call stride _mt[243] r[266535]))
      (579072 'move' tmp[579070](266617 call chpl_by call_tmp[734770] call_tmp[734777]))
      (579077 'move' tmp[579062](579074 '_paramFoldLogical' tmp[579063] tmp[579070]))
    }
    {
      unknown tmp[579079] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579081 'move' tmp[579079](266621 call chpl_build_bounded_range start[266593] end[266604]))
      (579086 'move' tmp[579062](579083 '_paramFoldLogical' tmp[579063] tmp[579079]))
    }
    unknown call_tmp[734782] "expr temp" "maybe param" "maybe type" "temp"
    (734785 'move' call_tmp[734782](537203 'query' r[266535] 1))
    unknown call_tmp[734787] "expr temp" "maybe param" "maybe type" "temp"
    (734790 'move' call_tmp[734787](537207 'query' r[266535] 3))
    unknown call_tmp[734792] "expr temp" "maybe param" "maybe type" "temp"
    (734795 'move' call_tmp[734792](537202 call range[64316](?) call_tmp[734782] bounded[64205] call_tmp[734787]))
    (537211 'move' ret[537197](537210 'coerce' tmp[579062] call_tmp[734792]))
    gotoReturn _end_chunk[537195] _end_chunk[537195]
    (489528 'end of statement' start[266593] end[266604] start[266593] end[266604])
    label _end_chunk[537195]
    (537199 return ret[537197])
  }
  where {
    unknown call_tmp[734797] "expr temp" "maybe param" "maybe type" "temp"
    (734800 'move' call_tmp[734797](466372 'query' r[266535] 2))
    unknown call_tmp[734802] "expr temp" "maybe param" "maybe type" "temp"
    (734805 'move' call_tmp[734802](466376 call == bounded[64205] call_tmp[734797]))
    (466380 call & 1 call_tmp[734802])
  }
  { scopeless type
    unknown call_tmp[734807] "expr temp" "maybe param" "maybe type" "temp"
    (734810 'move' call_tmp[734807](466369 'query' r[266535] 1))
    unknown call_tmp[734812] "expr temp" "maybe param" "maybe type" "temp"
    (734815 'move' call_tmp[734812](466388 'query' r[266535] 3))
    (266559 call range[64316](?) call_tmp[734807] bounded[64205] call_tmp[734812])
  }
  function blockCyclicChunks[266648](arg r[266645]:range[64316](?), arg blockSize[266651]:integral[199](?), arg tid[266655]:integral[199](?), arg nTasks[266659]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537217] "RVV" "temp"
    unknown call_tmp[734817] "expr temp" "maybe param" "maybe type" "temp"
    (734820 'move' call_tmp[734817](266664 call >= tid[266655] nTasks[266659]))
    unknown call_tmp[734822] "expr temp" "maybe param" "maybe type" "temp"
    (734825 'move' call_tmp[734822](266706 call _cond_test call_tmp[734817]))
    if call_tmp[734822]
    {
      unknown call_tmp[734827] "expr temp" "maybe param" "maybe type" "temp"
      (734830 'move' call_tmp[734827](266701 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266704 call halt call_tmp[734827])
    }
    unknown call_tmp[734832] "expr temp" "maybe param" "maybe type" "temp"
    (734835 'move' call_tmp[734832](266714 call <= blockSize[266651] 0))
    unknown call_tmp[734837] "expr temp" "maybe param" "maybe type" "temp"
    (734840 'move' call_tmp[734837](266737 call _cond_test call_tmp[734832]))
    if call_tmp[734837]
    {
      (266735 call halt "blockSize must a positive number")
    }
    unknown call_tmp[734842] "expr temp" "maybe param" "maybe type" "temp"
    (734845 'move' call_tmp[734842](266744 call <= nTasks[266659] 0))
    unknown call_tmp[734847] "expr temp" "maybe param" "maybe type" "temp"
    (734850 'move' call_tmp[734847](266767 call _cond_test call_tmp[734842]))
    if call_tmp[734847]
    {
      (266765 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[734854] "maybe param" "maybe type" "temp"
    (734857 'move' call_tmp[734854](266773 call stride _mt[243] r[266645]))
    unknown rangeStride[266776] "dead at end of block" "insert auto destroy"
    (548502 'init var' rangeStride[266776] call_tmp[734854])
    (266779 'end of statement')
    unknown call_tmp[734859] "maybe param" "maybe type" "temp"
    (734862 'move' call_tmp[734859](266782 call * blockSize[266651] rangeStride[266776]))
    unknown blockStride[266784] "dead at end of block" "insert auto destroy"
    (548504 'init var' blockStride[266784] call_tmp[734859])
    (266787 'end of statement')
    unknown call_tmp[734866] "maybe param" "maybe type" "temp"
    (734869 'move' call_tmp[734866](266789 call low _mt[243] r[266645]))
    unknown low[266792] "dead at end of block" "insert auto destroy"
    (548506 'init var' low[266792] call_tmp[734866])
    (266795 'end of statement')
    unknown call_tmp[734873] "maybe param" "maybe type" "temp"
    (734876 'move' call_tmp[734873](266797 call high _mt[243] r[266645]))
    unknown high[266800] "dead at end of block" "insert auto destroy"
    (548508 'init var' high[266800] call_tmp[734873])
    (266803 'end of statement')
    unknown firstBlockStart[266825] "dead at end of block" "insert auto destroy"
    unknown tmp[579093] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579094] "maybe param" "temp"
    unknown call_tmp[734878] "expr temp" "maybe param" "maybe type" "temp"
    (734881 'move' call_tmp[734878](266806 call > rangeStride[266776] 0))
    (579099 'move' tmp[579094](579097 call _cond_test call_tmp[734878]))
    if tmp[579094]
    {
      unknown tmp[579101] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579103 'move' tmp[579101](266809 call low _mt[243] r[266645]))
      (579108 'move' tmp[579093](579105 '_paramFoldLogical' tmp[579094] tmp[579101]))
    }
    {
      unknown tmp[579110] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579112 'move' tmp[579110](266813 call high _mt[243] r[266645]))
      (579117 'move' tmp[579093](579114 '_paramFoldLogical' tmp[579094] tmp[579110]))
    }
    unknown call_tmp[734887] "expr temp" "maybe param" "maybe type" "temp"
    (734890 'move' call_tmp[734887](266821 call * blockStride[266784] tid[266655]))
    unknown call_tmp[734892] "maybe param" "maybe type" "temp"
    (734895 'move' call_tmp[734892](266823 call + tmp[579093] call_tmp[734887]))
    (548510 'init var' firstBlockStart[266825] call_tmp[734892])
    (266828 'end of statement')
    unknown tmp[433909] "maybe param" "temp"
    unknown call_tmp[734899] "expr temp" "maybe param" "maybe type" "temp"
    (734902 'move' call_tmp[734899](266831 call high _mt[243] r[266645]))
    (433920 'move' tmp[433909](266834 call > firstBlockStart[266825] call_tmp[734899]))
    unknown call_tmp[734904] "expr temp" "maybe param" "maybe type" "temp"
    (734907 'move' call_tmp[734904](433922 call _cond_invalid tmp[433909]))
    if call_tmp[734904]
    {
      (433925 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579124] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579125] "maybe param" "temp"
    unknown call_tmp[734909] "expr temp" "maybe param" "maybe type" "temp"
    (734912 'move' call_tmp[734909](433910 call isTrue tmp[433909]))
    (579130 'move' tmp[579125](579128 call _cond_test call_tmp[734909]))
    if tmp[579125]
    {
      (579135 'move' tmp[579124](579132 '_paramFoldLogical' tmp[579125] 1))
    }
    {
      unknown tmp[579137] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734916] "expr temp" "maybe param" "maybe type" "temp"
      (734919 'move' call_tmp[734916](266838 call low _mt[243] r[266645]))
      unknown call_tmp[734921] "expr temp" "maybe param" "maybe type" "temp"
      (734924 'move' call_tmp[734921](266841 call < firstBlockStart[266825] call_tmp[734916]))
      (579139 'move' tmp[579137](433914 call isTrue call_tmp[734921]))
      (579144 'move' tmp[579124](579141 '_paramFoldLogical' tmp[579125] tmp[579137]))
    }
    unknown call_tmp[734926] "expr temp" "maybe param" "maybe type" "temp"
    (734929 'move' call_tmp[734926](266847 call _cond_test tmp[579124]))
    if call_tmp[734926]
    {
      gotoReturn _end_blockCyclicChunks[537215] _end_blockCyclicChunks[537215]
    }
    unknown call_tmp[734931] "maybe param" "maybe type" "temp"
    (734934 'move' call_tmp[734931](266854 call * blockStride[266784] nTasks[266659]))
    unknown strideToNextBlock[266856] "dead at end of block" "insert auto destroy"
    (548512 'init var' strideToNextBlock[266856] call_tmp[734931])
    (266859 'end of statement' rangeStride[266776] rangeStride[266776] blockStride[266784] blockStride[266784])
    unknown call_tmp[734936] "expr temp" "maybe param" "maybe type" "temp"
    (734939 'move' call_tmp[734936](266862 call > rangeStride[266776] 0))
    unknown call_tmp[734941] "expr temp" "maybe param" "maybe type" "temp"
    (734944 'move' call_tmp[734941](267016 call _cond_test call_tmp[734936]))
    if call_tmp[734941]
    {
      {
        unknown _indexOfInterest[266897] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[266898] "expr temp" "temp"
        unknown call_tmp[734946] "expr temp" "maybe param" "maybe type" "temp"
        (734949 'move' call_tmp[734946](266916 call chpl_direct_range_iter firstBlockStart[266825] high[266800] strideToNextBlock[266856]))
        (266907 'move' _iterator[266898](266905 call _getIterator call_tmp[734946]))
        Defer
        {
          {
            (266932 call _freeIterator _iterator[266898])
          }
        }
        { scopeless type
          (266921 'move' _indexOfInterest[266897](266918 call iteratorIndex _iterator[266898]))
        }
        ForLoop[266899]
        {
          unknown blockStart[266925] "index var" "insert auto destroy"
          (489543 'end of statement')
          (266927 'move' blockStart[266925] _indexOfInterest[266897])
          (489544 'end of statement' blockStart[266925])
          {
            unknown call_tmp[734951] "expr temp" "maybe param" "maybe type" "temp"
            (734954 'move' call_tmp[734951](266877 call + blockStart[266925] blockStride[266784]))
            unknown call_tmp[734956] "expr temp" "maybe param" "maybe type" "temp"
            (734959 'move' call_tmp[734956](266880 call - call_tmp[734951] 1))
            unknown call_tmp[734961] "maybe param" "maybe type" "temp"
            (734964 'move' call_tmp[734961](266882 call min high[266800] call_tmp[734956]))
            unknown blockEnd[266883] "dead at end of block" "insert auto destroy"
            (548514 'init var' blockEnd[266883] call_tmp[734961])
            (266886 'end of statement' high[266800] blockStart[266925] blockStride[266784])
            unknown yret[537223] "YVV" "temp"
            unknown call_tmp[734966] "expr temp" "maybe param" "maybe type" "temp"
            (734969 'move' call_tmp[734966](266890 call chpl_build_bounded_range blockStart[266925] blockEnd[266883]))
            unknown call_tmp[734971] "expr temp" "maybe param" "maybe type" "temp"
            (734974 'move' call_tmp[734971](266893 call chpl_by call_tmp[734966] rangeStride[266776]))
            (537226 'move' yret[537223](537225 'deref' call_tmp[734971]))
            (537228 yield yret[537223])
            (489549 'end of statement' blockStart[266925] blockEnd[266883] rangeStride[266776])
          }
          label _continueLabel[266902]
          _indexOfInterest[266897]
          _iterator[266898]
        }
        label _breakLabel[266903]
      }
    }
    {
      {
        unknown _indexOfInterest[266973] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[266974] "expr temp" "temp"
        unknown call_tmp[734976] "expr temp" "maybe param" "maybe type" "temp"
        (734979 'move' call_tmp[734976](266992 call chpl_direct_range_iter low[266792] firstBlockStart[266825] strideToNextBlock[266856]))
        (266983 'move' _iterator[266974](266981 call _getIterator call_tmp[734976]))
        Defer
        {
          {
            (267008 call _freeIterator _iterator[266974])
          }
        }
        { scopeless type
          (266997 'move' _indexOfInterest[266973](266994 call iteratorIndex _iterator[266974]))
        }
        ForLoop[266975]
        {
          unknown blockEnd[267001] "index var" "insert auto destroy"
          (489554 'end of statement')
          (267003 'move' blockEnd[267001] _indexOfInterest[266973])
          (489555 'end of statement' blockEnd[267001])
          {
            unknown call_tmp[734981] "expr temp" "maybe param" "maybe type" "temp"
            (734984 'move' call_tmp[734981](266953 call + blockEnd[267001] blockStride[266784]))
            unknown call_tmp[734986] "expr temp" "maybe param" "maybe type" "temp"
            (734989 'move' call_tmp[734986](266956 call + call_tmp[734981] 1))
            unknown call_tmp[734991] "maybe param" "maybe type" "temp"
            (734994 'move' call_tmp[734991](266958 call max low[266792] call_tmp[734986]))
            unknown blockStart[266959] "dead at end of block" "insert auto destroy"
            (548516 'init var' blockStart[266959] call_tmp[734991])
            (266962 'end of statement' low[266792] blockEnd[267001] blockStride[266784])
            unknown yret[537230] "YVV" "temp"
            unknown call_tmp[734996] "expr temp" "maybe param" "maybe type" "temp"
            (734999 'move' call_tmp[734996](266966 call chpl_build_bounded_range blockStart[266959] blockEnd[267001]))
            unknown call_tmp[735001] "expr temp" "maybe param" "maybe type" "temp"
            (735004 'move' call_tmp[735001](266969 call chpl_by call_tmp[734996] rangeStride[266776]))
            (537233 'move' yret[537230](537232 'deref' call_tmp[735001]))
            (537235 yield yret[537230])
            (489560 'end of statement' blockStart[266959] blockEnd[267001] rangeStride[266776])
          }
          label _continueLabel[266978]
          _indexOfInterest[266973]
          _iterator[266974]
        }
        label _breakLabel[266979]
      }
    }
    label _end_blockCyclicChunks[537215]
    (537219 return ret[537217])
  }
  where {
    unknown call_tmp[735006] "expr temp" "maybe param" "maybe type" "temp"
    (735009 'move' call_tmp[735006](466397 'query' r[266645] c"boundedType"))
    unknown call_tmp[735011] "expr temp" "maybe param" "maybe type" "temp"
    (735014 'move' call_tmp[735011](466400 call == bounded[64205] call_tmp[735006]))
    (466404 call & 1 call_tmp[735011])
  }
  function chunksOrder[267034](arg r[267031]:range[64316](?), arg numChunks[267037]:integral[199](?), arg remPol[267042]:RemElems[266378] =
  Thru[266372]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537239] "RVV" "temp"
    unknown tmp[433930] "maybe param" "temp"
    unknown call_tmp[735018] "expr temp" "maybe param" "maybe type" "temp"
    (735021 'move' call_tmp[735018](267051 call size _mt[243] r[267031]))
    (433941 'move' tmp[433930](267055 call == call_tmp[735018] 0))
    unknown call_tmp[735023] "expr temp" "maybe param" "maybe type" "temp"
    (735026 'move' call_tmp[735023](433943 call _cond_invalid tmp[433930]))
    if call_tmp[735023]
    {
      (433946 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579151] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579152] "maybe param" "temp"
    unknown call_tmp[735028] "expr temp" "maybe param" "maybe type" "temp"
    (735031 'move' call_tmp[735028](433931 call isTrue tmp[433930]))
    (579157 'move' tmp[579152](579155 call _cond_test call_tmp[735028]))
    if tmp[579152]
    {
      (579162 'move' tmp[579151](579159 '_paramFoldLogical' tmp[579152] 1))
    }
    {
      unknown tmp[579164] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735033] "expr temp" "maybe param" "maybe type" "temp"
      (735036 'move' call_tmp[735033](267059 call <= numChunks[267037] 0))
      (579166 'move' tmp[579164](433935 call isTrue call_tmp[735033]))
      (579171 'move' tmp[579151](579168 '_paramFoldLogical' tmp[579152] tmp[579164]))
    }
    unknown call_tmp[735038] "expr temp" "maybe param" "maybe type" "temp"
    (735041 'move' call_tmp[735038](267065 call _cond_test tmp[579151]))
    if call_tmp[735038]
    {
      gotoReturn _end_chunksOrder[537237] _end_chunksOrder[537237]
    }
    unknown call_tmp[735045] "maybe param" "maybe type" "temp"
    (735048 'move' call_tmp[735045](267072 call size _mt[243] r[267031]))
    const nElems[267075] "dead at end of block" "const" "insert auto destroy"
    (548518 'init var' nElems[267075] call_tmp[735045])
    (267078 'end of statement')
    unknown call_tmp[735050] "expr temp" "maybe param" "maybe type" "temp"
    (735053 'move' call_tmp[735050](466421 'query' r[267031] 1))
    unknown call_tmp[735055] "expr temp" "maybe param" "maybe type" "temp"
    (735058 'move' call_tmp[735055](267083 call min numChunks[267037] nElems[267075]))
    unknown call_tmp[735060] "maybe param" "maybe type" "temp"
    (735063 'move' call_tmp[735060](267085 call _cast call_tmp[735050] call_tmp[735055]))
    unknown nChunks[267087] "dead at end of block" "insert auto destroy"
    (548520 'init var' nChunks[267087] call_tmp[735060])
    (267090 'end of statement')
    unknown chunkSize[267091] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735065] "expr temp" "maybe param" "maybe type" "temp"
    (735068 'move' call_tmp[735065](466424 'query' r[267031] 1))
    (548522 'default init var' chunkSize[267091] call_tmp[735065])
    unknown rem[267095] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735070] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735073 'move' call_tmp[735070](267099 'typeof' chunkSize[267091]))
    (548524 'default init var' rem[267095] call_tmp[735070])
    (267100 'end of statement' nElems[267075] chunkSize[267091])
    {
      unknown tmp[267167] "expr temp" "maybe param" "maybe type" "temp"
      (267169 'move' tmp[267167] remPol[267042])
      unknown call_tmp[735075] "expr temp" "maybe param" "maybe type" "temp"
      (735078 'move' call_tmp[735075](267171 call == tmp[267167] Pack[266374]))
      unknown call_tmp[735080] "expr temp" "maybe param" "maybe type" "temp"
      (735083 'move' call_tmp[735080](267174 call _cond_test call_tmp[735075]))
      if call_tmp[735080]
      {
        unknown call_tmp[735085] "expr temp" "maybe param" "maybe type" "temp"
        (735088 'move' call_tmp[735085](267108 call / nElems[267075] nChunks[267087]))
        (267110 call = chunkSize[267091] call_tmp[735085])
        (489568 'end of statement' chunkSize[267091] nElems[267075] nChunks[267087])
        unknown call_tmp[735090] "expr temp" "maybe param" "maybe type" "temp"
        (735093 'move' call_tmp[735090](267116 call * chunkSize[267091] nChunks[267087]))
        unknown call_tmp[735095] "expr temp" "maybe param" "maybe type" "temp"
        (735098 'move' call_tmp[735095](267119 call != call_tmp[735090] nElems[267075]))
        unknown call_tmp[735100] "expr temp" "maybe param" "maybe type" "temp"
        (735103 'move' call_tmp[735100](267136 call _cond_test call_tmp[735095]))
        if call_tmp[735100]
        {
          (267123 call += chunkSize[267091] 1)
          (489572 'end of statement' chunkSize[267091])
          unknown call_tmp[735105] "expr temp" "maybe param" "maybe type" "temp"
          (735108 'move' call_tmp[735105](267132 call divceil nElems[267075] chunkSize[267091]))
          (267133 call = nChunks[267087] call_tmp[735105])
          (489574 'end of statement' nChunks[267087] nElems[267075] chunkSize[267091])
        }
      }
      {
        unknown call_tmp[735110] "expr temp" "maybe param" "maybe type" "temp"
        (735113 'move' call_tmp[735110](267177 call == tmp[267167] Mod[266376]))
        unknown call_tmp[735115] "expr temp" "maybe param" "maybe type" "temp"
        (735118 'move' call_tmp[735115](267180 call _cond_test call_tmp[735110]))
        if call_tmp[735115]
        {
          unknown call_tmp[735120] "expr temp" "maybe param" "maybe type" "temp"
          (735123 'move' call_tmp[735120](267147 call / nElems[267075] nChunks[267087]))
          (267149 call = chunkSize[267091] call_tmp[735120])
          (489578 'end of statement' chunkSize[267091] nElems[267075] nChunks[267087])
          unknown call_tmp[735125] "expr temp" "maybe param" "maybe type" "temp"
          (735128 'move' call_tmp[735125](267157 call * chunkSize[267091] nChunks[267087]))
          unknown call_tmp[735130] "expr temp" "maybe param" "maybe type" "temp"
          (735133 'move' call_tmp[735130](267159 call - nElems[267075] call_tmp[735125]))
          (267161 call = rem[267095] call_tmp[735130])
          (489582 'end of statement' rem[267095] nElems[267075] chunkSize[267091] nChunks[267087])
        }
      }
    }
    {
      unknown _indexOfInterest[267303] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267304] "expr temp" "temp"
      unknown call_tmp[735135] "expr temp" "maybe param" "maybe type" "temp"
      (735138 'move' call_tmp[735135](267320 call chpl_direct_counted_range_iter 0 nChunks[267087]))
      (267313 'move' _iterator[267304](267311 call _getIterator call_tmp[735135]))
      Defer
      {
        {
          (267336 call _freeIterator _iterator[267304])
        }
      }
      { scopeless type
        (267325 'move' _indexOfInterest[267303](267322 call iteratorIndex _iterator[267304]))
      }
      ForLoop[267305]
      {
        unknown i[267329] "index var" "insert auto destroy"
        (489588 'end of statement')
        (267331 'move' i[267329] _indexOfInterest[267303])
        (489589 'end of statement' i[267329])
        {
          unknown chunk[267196] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735140] "expr temp" "maybe param" "maybe type" "temp"
          (735143 'move' call_tmp[735140](466427 'query' r[267031] 1))
          unknown call_tmp[735145] "expr temp" "maybe param" "maybe type" "temp"
          (735148 'move' call_tmp[735145](267194 call * 2 call_tmp[735140]))
          (548526 'default init var' chunk[267196] call_tmp[735145])
          (267199 'end of statement')
          {
            unknown tmp[267275] "expr temp" "maybe param" "maybe type" "temp"
            (267277 'move' tmp[267275] remPol[267042])
            unknown call_tmp[735150] "expr temp" "maybe param" "maybe type" "temp"
            (735153 'move' call_tmp[735150](267279 call == tmp[267275] Thru[266372]))
            unknown call_tmp[735155] "expr temp" "maybe param" "maybe type" "temp"
            (735158 'move' call_tmp[735155](267282 call _cond_test call_tmp[735150]))
            if call_tmp[735155]
            {
              unknown call_tmp[735160] "expr temp" "maybe param" "maybe type" "temp"
              (735163 'move' call_tmp[735160](267211 call chunkOrderThru nElems[267075] nChunks[267087] i[267329]))
              (267212 call = chunk[267196] call_tmp[735160])
              (489591 'end of statement' chunk[267196] nElems[267075] nChunks[267087] i[267329])
            }
            {
              unknown call_tmp[735165] "expr temp" "maybe param" "maybe type" "temp"
              (735168 'move' call_tmp[735165](267285 call == tmp[267275] Pack[266374]))
              unknown call_tmp[735170] "expr temp" "maybe param" "maybe type" "temp"
              (735173 'move' call_tmp[735170](267288 call _cond_test call_tmp[735165]))
              if call_tmp[735170]
              {
                unknown call_tmp[735175] "expr temp" "maybe param" "maybe type" "temp"
                (735178 'move' call_tmp[735175](267226 call chunkOrderPack chunkSize[267091] nElems[267075] i[267329]))
                (267227 call = chunk[267196] call_tmp[735175])
                (489596 'end of statement' chunk[267196] chunkSize[267091] nElems[267075] i[267329])
              }
              {
                unknown call_tmp[735180] "expr temp" "maybe param" "maybe type" "temp"
                (735183 'move' call_tmp[735180](267292 call == tmp[267275] Mod[266376]))
                unknown call_tmp[735185] "expr temp" "maybe param" "maybe type" "temp"
                (735188 'move' call_tmp[735185](267295 call _cond_test call_tmp[735180]))
                if call_tmp[735185]
                {
                  unknown call_tmp[735190] "expr temp" "maybe param" "maybe type" "temp"
                  (735193 'move' call_tmp[735190](267243 call chunkOrderMod chunkSize[267091] rem[267095] nElems[267075] nChunks[267087] i[267329]))
                  (267244 call = chunk[267196] call_tmp[735190])
                  (489601 'end of statement' chunk[267196] chunkSize[267091] rem[267095] nElems[267075] nChunks[267087] i[267329])
                }
                {
                  (267269 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537245] "YVV" "temp"
          unknown call_tmp[735195] "expr temp" "maybe param" "maybe type" "temp"
          (735198 'move' call_tmp[735195](537250 'query' r[267031] 1))
          unknown call_tmp[735200] "expr temp" "maybe param" "maybe type" "temp"
          (735203 'move' call_tmp[735200](537248 call * 2 call_tmp[735195]))
          (537254 'move' yret[537245](537253 'coerce' chunk[267196] call_tmp[735200]))
          (537256 yield yret[537245])
          (489609 'end of statement' chunk[267196])
        }
        label _continueLabel[267308]
        _indexOfInterest[267303]
        _iterator[267304]
      }
      label _breakLabel[267309]
    }
    label _end_chunksOrder[537237]
    (537241 return ret[537239])
  }
  where {
    unknown call_tmp[735205] "expr temp" "maybe param" "maybe type" "temp"
    (735208 'move' call_tmp[735205](466433 'query' r[267031] 2))
    unknown call_tmp[735210] "expr temp" "maybe param" "maybe type" "temp"
    (735213 'move' call_tmp[735210](466437 call == bounded[64205] call_tmp[735205]))
    (466441 call & 1 call_tmp[735210])
  }
  { scopeless type
    unknown call_tmp[735215] "expr temp" "maybe param" "maybe type" "temp"
    (735218 'move' call_tmp[735215](466430 'query' r[267031] 1))
    (267048 call * 2 call_tmp[735215])
  }
  function chunkOrder[267358](arg r[267355]:range[64316](?), arg numChunks[267361]:integral[199](?), arg idx[267365]:integral[199](?), arg remPol[267370]:RemElems[266378] =
  Thru[266372]) : _unknown[51] "compiler added where"
  {
    unknown ret[537260] "RVV" "temp"
    unknown tmp[433951] "maybe param" "temp"
    unknown tmp[433972] "maybe param" "temp"
    unknown tmp[433993] "maybe param" "temp"
    unknown call_tmp[735222] "expr temp" "maybe param" "maybe type" "temp"
    (735225 'move' call_tmp[735222](267379 call size _mt[243] r[267355]))
    (434004 'move' tmp[433993](267383 call == call_tmp[735222] 0))
    unknown call_tmp[735227] "expr temp" "maybe param" "maybe type" "temp"
    (735230 'move' call_tmp[735227](434006 call _cond_invalid tmp[433993]))
    if call_tmp[735227]
    {
      (434009 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579178] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579179] "maybe param" "temp"
    unknown call_tmp[735232] "expr temp" "maybe param" "maybe type" "temp"
    (735235 'move' call_tmp[735232](433994 call isTrue tmp[433993]))
    (579184 'move' tmp[579179](579182 call _cond_test call_tmp[735232]))
    if tmp[579179]
    {
      (579189 'move' tmp[579178](579186 '_paramFoldLogical' tmp[579179] 1))
    }
    {
      unknown tmp[579191] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735237] "expr temp" "maybe param" "maybe type" "temp"
      (735240 'move' call_tmp[735237](267387 call <= numChunks[267361] 0))
      (579193 'move' tmp[579191](433998 call isTrue call_tmp[735237]))
      (579198 'move' tmp[579178](579195 '_paramFoldLogical' tmp[579179] tmp[579191]))
    }
    (433983 'move' tmp[433972] tmp[579178])
    unknown call_tmp[735242] "expr temp" "maybe param" "maybe type" "temp"
    (735245 'move' call_tmp[735242](433985 call _cond_invalid tmp[433972]))
    if call_tmp[735242]
    {
      (433988 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579206] "maybe param" "temp"
    unknown call_tmp[735247] "expr temp" "maybe param" "maybe type" "temp"
    (735250 'move' call_tmp[735247](433973 call isTrue tmp[433972]))
    (579211 'move' tmp[579206](579209 call _cond_test call_tmp[735247]))
    if tmp[579206]
    {
      (579216 'move' tmp[579205](579213 '_paramFoldLogical' tmp[579206] 1))
    }
    {
      unknown tmp[579218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735252] "expr temp" "maybe param" "maybe type" "temp"
      (735255 'move' call_tmp[735252](267393 call < idx[267365] 0))
      (579220 'move' tmp[579218](433977 call isTrue call_tmp[735252]))
      (579225 'move' tmp[579205](579222 '_paramFoldLogical' tmp[579206] tmp[579218]))
    }
    (433962 'move' tmp[433951] tmp[579205])
    unknown call_tmp[735257] "expr temp" "maybe param" "maybe type" "temp"
    (735260 'move' call_tmp[735257](433964 call _cond_invalid tmp[433951]))
    if call_tmp[735257]
    {
      (433967 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579233] "maybe param" "temp"
    unknown call_tmp[735262] "expr temp" "maybe param" "maybe type" "temp"
    (735265 'move' call_tmp[735262](433952 call isTrue tmp[433951]))
    (579238 'move' tmp[579233](579236 call _cond_test call_tmp[735262]))
    if tmp[579233]
    {
      (579243 'move' tmp[579232](579240 '_paramFoldLogical' tmp[579233] 1))
    }
    {
      unknown tmp[579245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735267] "expr temp" "maybe param" "maybe type" "temp"
      (735270 'move' call_tmp[735267](267399 call >= idx[267365] numChunks[267361]))
      (579247 'move' tmp[579245](433956 call isTrue call_tmp[735267]))
      (579252 'move' tmp[579232](579249 '_paramFoldLogical' tmp[579233] tmp[579245]))
    }
    unknown call_tmp[735272] "expr temp" "maybe param" "maybe type" "temp"
    (735275 'move' call_tmp[735272](267416 call _cond_test tmp[579232]))
    if call_tmp[735272]
    {
      unknown call_tmp[735277] "expr temp" "maybe param" "maybe type" "temp"
      (735280 'move' call_tmp[735277](466453 'query' r[267355] 1))
      unknown call_tmp[735282] "expr temp" "maybe param" "maybe type" "temp"
      (735285 'move' call_tmp[735282](267405 call _cast call_tmp[735277] 1))
      unknown call_tmp[735287] "expr temp" "maybe param" "maybe type" "temp"
      (735290 'move' call_tmp[735287](466456 'query' r[267355] 1))
      unknown call_tmp[735292] "expr temp" "maybe param" "maybe type" "temp"
      (735295 'move' call_tmp[735292](267409 call _cast call_tmp[735287] 0))
      unknown call_tmp[735297] "expr temp" "maybe param" "maybe type" "temp"
      (735300 'move' call_tmp[735297](267412 call _build_tuple call_tmp[735282] call_tmp[735292]))
      unknown call_tmp[735302] "expr temp" "maybe param" "maybe type" "temp"
      (735305 'move' call_tmp[735302](537267 'query' r[267355] 1))
      unknown call_tmp[735307] "expr temp" "maybe param" "maybe type" "temp"
      (735310 'move' call_tmp[735307](537265 call * 2 call_tmp[735302]))
      (537271 'move' ret[537260](537270 'coerce' call_tmp[735297] call_tmp[735307]))
      gotoReturn _end_chunkOrder[537258] _end_chunkOrder[537258]
    }
    unknown call_tmp[735314] "maybe param" "maybe type" "temp"
    (735317 'move' call_tmp[735314](267423 call size _mt[243] r[267355]))
    const nElems[267426] "dead at end of block" "const" "insert auto destroy"
    (548528 'init var' nElems[267426] call_tmp[735314])
    (267429 'end of statement')
    unknown call_tmp[735319] "expr temp" "maybe param" "maybe type" "temp"
    (735322 'move' call_tmp[735319](466459 'query' r[267355] 1))
    unknown call_tmp[735324] "expr temp" "maybe param" "maybe type" "temp"
    (735327 'move' call_tmp[735324](267434 call min numChunks[267361] nElems[267426]))
    unknown call_tmp[735329] "maybe param" "maybe type" "temp"
    (735332 'move' call_tmp[735329](267436 call _cast call_tmp[735319] call_tmp[735324]))
    const nChunks[267438] "dead at end of block" "const" "insert auto destroy"
    (548530 'init var' nChunks[267438] call_tmp[735329])
    (267441 'end of statement')
    unknown call_tmp[735334] "expr temp" "maybe param" "maybe type" "temp"
    (735337 'move' call_tmp[735334](466462 'query' r[267355] 1))
    unknown call_tmp[735339] "maybe param" "maybe type" "temp"
    (735342 'move' call_tmp[735339](267444 call _cast call_tmp[735334] idx[267365]))
    const i[267446] "dead at end of block" "const" "insert auto destroy"
    (548532 'init var' i[267446] call_tmp[735339])
    (267449 'end of statement' nElems[267426])
    {
      unknown tmp[267562] "expr temp" "maybe param" "maybe type" "temp"
      (267564 'move' tmp[267562] remPol[267370])
      unknown call_tmp[735344] "expr temp" "maybe param" "maybe type" "temp"
      (735347 'move' call_tmp[735344](267566 call == tmp[267562] Thru[266372]))
      unknown call_tmp[735349] "expr temp" "maybe param" "maybe type" "temp"
      (735352 'move' call_tmp[735349](267569 call _cond_test call_tmp[735344]))
      if call_tmp[735349]
      {
        unknown call_tmp[735354] "expr temp" "maybe param" "maybe type" "temp"
        (735357 'move' call_tmp[735354](267459 call chunkOrderThru nElems[267426] nChunks[267438] i[267446]))
        unknown call_tmp[735359] "expr temp" "maybe param" "maybe type" "temp"
        (735362 'move' call_tmp[735359](537278 'query' r[267355] 1))
        unknown call_tmp[735364] "expr temp" "maybe param" "maybe type" "temp"
        (735367 'move' call_tmp[735364](537276 call * 2 call_tmp[735359]))
        (537282 'move' ret[537260](537281 'coerce' call_tmp[735354] call_tmp[735364]))
        gotoReturn _end_chunkOrder[537258] _end_chunkOrder[537258]
        (489616 'end of statement' nElems[267426] nChunks[267438] i[267446])
      }
      {
        unknown call_tmp[735369] "expr temp" "maybe param" "maybe type" "temp"
        (735372 'move' call_tmp[735369](267572 call == tmp[267562] Pack[266374]))
        unknown call_tmp[735374] "expr temp" "maybe param" "maybe type" "temp"
        (735377 'move' call_tmp[735374](267575 call _cond_test call_tmp[735369]))
        if call_tmp[735374]
        {
          unknown call_tmp[735379] "maybe param" "maybe type" "temp"
          (735382 'move' call_tmp[735379](267469 call / nElems[267426] nChunks[267438]))
          unknown chunkSize[267471] "dead at end of block" "insert auto destroy"
          (548534 'init var' chunkSize[267471] call_tmp[735379])
          (267474 'end of statement' nElems[267426] nChunks[267438])
          unknown call_tmp[735384] "expr temp" "maybe param" "maybe type" "temp"
          (735387 'move' call_tmp[735384](267478 call * chunkSize[267471] nChunks[267438]))
          unknown call_tmp[735389] "expr temp" "maybe param" "maybe type" "temp"
          (735392 'move' call_tmp[735389](267481 call != call_tmp[735384] nElems[267426]))
          unknown call_tmp[735394] "expr temp" "maybe param" "maybe type" "temp"
          (735397 'move' call_tmp[735394](267488 call _cond_test call_tmp[735389]))
          if call_tmp[735394]
          {
            (267485 call += chunkSize[267471] 1)
            (489622 'end of statement' chunkSize[267471])
          }
          unknown call_tmp[735399] "expr temp" "maybe param" "maybe type" "temp"
          (735402 'move' call_tmp[735399](267498 call chunkOrderPack chunkSize[267471] nElems[267426] i[267446]))
          unknown call_tmp[735404] "expr temp" "maybe param" "maybe type" "temp"
          (735407 'move' call_tmp[735404](537289 'query' r[267355] 1))
          unknown call_tmp[735409] "expr temp" "maybe param" "maybe type" "temp"
          (735412 'move' call_tmp[735409](537287 call * 2 call_tmp[735404]))
          (537293 'move' ret[537260](537292 'coerce' call_tmp[735399] call_tmp[735409]))
          gotoReturn _end_chunkOrder[537258] _end_chunkOrder[537258]
          (489624 'end of statement' chunkSize[267471] nElems[267426] i[267446])
        }
        {
          unknown call_tmp[735414] "expr temp" "maybe param" "maybe type" "temp"
          (735417 'move' call_tmp[735414](267579 call == tmp[267562] Mod[266376]))
          unknown call_tmp[735419] "expr temp" "maybe param" "maybe type" "temp"
          (735422 'move' call_tmp[735419](267582 call _cond_test call_tmp[735414]))
          if call_tmp[735419]
          {
            unknown call_tmp[735424] "maybe param" "maybe type" "temp"
            (735427 'move' call_tmp[735424](267507 call / nElems[267426] nChunks[267438]))
            const chunkSize[267509] "dead at end of block" "const" "insert auto destroy"
            (548536 'init var' chunkSize[267509] call_tmp[735424])
            (267512 'end of statement')
            unknown call_tmp[735429] "expr temp" "maybe param" "maybe type" "temp"
            (735432 'move' call_tmp[735429](267517 call * chunkSize[267509] nChunks[267438]))
            unknown call_tmp[735434] "maybe param" "maybe type" "temp"
            (735437 'move' call_tmp[735434](267519 call - nElems[267426] call_tmp[735429]))
            const rem[267521] "dead at end of block" "const" "insert auto destroy"
            (548538 'init var' rem[267521] call_tmp[735434])
            (267524 'end of statement' nElems[267426] nChunks[267438] nElems[267426] chunkSize[267509] nChunks[267438])
            unknown call_tmp[735439] "expr temp" "maybe param" "maybe type" "temp"
            (735442 'move' call_tmp[735439](267532 call chunkOrderMod chunkSize[267509] rem[267521] nElems[267426] nChunks[267438] i[267446]))
            unknown call_tmp[735444] "expr temp" "maybe param" "maybe type" "temp"
            (735447 'move' call_tmp[735444](537300 'query' r[267355] 1))
            unknown call_tmp[735449] "expr temp" "maybe param" "maybe type" "temp"
            (735452 'move' call_tmp[735449](537298 call * 2 call_tmp[735444]))
            (537304 'move' ret[537260](537303 'coerce' call_tmp[735439] call_tmp[735449]))
            gotoReturn _end_chunkOrder[537258] _end_chunkOrder[537258]
            (489633 'end of statement' chunkSize[267509] rem[267521] nElems[267426] nChunks[267438] i[267446])
          }
          {
            (267556 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537258]
    (537262 return ret[537260])
  }
  where {
    unknown call_tmp[735454] "expr temp" "maybe param" "maybe type" "temp"
    (735457 'move' call_tmp[735454](466468 'query' r[267355] 2))
    unknown call_tmp[735459] "expr temp" "maybe param" "maybe type" "temp"
    (735462 'move' call_tmp[735459](466472 call == bounded[64205] call_tmp[735454]))
    (466476 call & 1 call_tmp[735459])
  }
  { scopeless type
    unknown call_tmp[735464] "expr temp" "maybe param" "maybe type" "temp"
    (735467 'move' call_tmp[735464](466465 'query' r[267355] 1))
    (267376 call * 2 call_tmp[735464])
  }
  function chunkOrderThru[267597](arg nElems[267594]:_any[178](?), arg nChunks[267600] :
  (466482 'typeof' nElems[267594]), arg i[267604] :
  (466484 'typeof' nElems[267594])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537310] "RVV" "temp"
    unknown call_tmp[735469] "maybe param" "maybe type" "temp"
    (735472 'move' call_tmp[735469](267614 call * nElems[267594] i[267604]))
    const m[267616] "dead at end of block" "const" "insert auto destroy"
    (548540 'init var' m[267616] call_tmp[735469])
    (267619 'end of statement')
    const start[267637] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579260] "maybe param" "temp"
    unknown call_tmp[735474] "expr temp" "maybe param" "maybe type" "temp"
    (735477 'move' call_tmp[735474](267623 call == i[267604] 0))
    (579265 'move' tmp[579260](579263 call _cond_test call_tmp[735474]))
    if tmp[579260]
    {
      unknown tmp[579267] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735479] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735482 'move' call_tmp[735479](466486 'typeof' nElems[267594]))
      (579269 'move' tmp[579267](267627 call _cast call_tmp[735479] 0))
      (579274 'move' tmp[579259](579271 '_paramFoldLogical' tmp[579260] tmp[579267]))
    }
    {
      unknown tmp[579276] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579278 'move' tmp[579276](267633 call divceil m[267616] nChunks[267600]))
      (579283 'move' tmp[579259](579280 '_paramFoldLogical' tmp[579260] tmp[579276]))
    }
    (548542 'init var' start[267637] tmp[579259])
    (267640 'end of statement')
    const end[267666] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579290] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579291] "maybe param" "temp"
    unknown call_tmp[735484] "expr temp" "maybe param" "maybe type" "temp"
    (735487 'move' call_tmp[735484](267644 call - nChunks[267600] 1))
    unknown call_tmp[735489] "expr temp" "maybe param" "maybe type" "temp"
    (735492 'move' call_tmp[735489](267646 call == i[267604] call_tmp[735484]))
    (579296 'move' tmp[579291](579294 call _cond_test call_tmp[735489]))
    if tmp[579291]
    {
      unknown tmp[579298] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579300 'move' tmp[579298](267650 call - nElems[267594] 1))
      (579305 'move' tmp[579290](579302 '_paramFoldLogical' tmp[579291] tmp[579298]))
    }
    {
      unknown tmp[579307] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735494] "expr temp" "maybe param" "maybe type" "temp"
      (735497 'move' call_tmp[735494](267655 call + m[267616] nElems[267594]))
      unknown call_tmp[735499] "expr temp" "maybe param" "maybe type" "temp"
      (735502 'move' call_tmp[735499](267659 call divceil call_tmp[735494] nChunks[267600]))
      (579309 'move' tmp[579307](267661 call - call_tmp[735499] 1))
      (579314 'move' tmp[579290](579311 '_paramFoldLogical' tmp[579291] tmp[579307]))
    }
    (548544 'init var' end[267666] tmp[579290])
    (267669 'end of statement' m[267616] m[267616])
    unknown call_tmp[735504] "expr temp" "maybe param" "maybe type" "temp"
    (735507 'move' call_tmp[735504](267673 call _build_tuple start[267637] end[267666]))
    unknown call_tmp[735509] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735512 'move' call_tmp[735509](537316 'typeof' nElems[267594]))
    unknown call_tmp[735514] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735517 'move' call_tmp[735514](537318 'typeof' nElems[267594]))
    unknown call_tmp[735519] "expr temp" "maybe param" "maybe type" "temp"
    (735522 'move' call_tmp[735519](537315 call _build_tuple call_tmp[735509] call_tmp[735514]))
    (537321 'move' ret[537310](537320 'coerce' call_tmp[735504] call_tmp[735519]))
    gotoReturn _end_chunkOrderThru[537308] _end_chunkOrderThru[537308]
    (489642 'end of statement' start[267637] end[267666])
    label _end_chunkOrderThru[537308]
    (537312 return ret[537310])
  }
  { scopeless type
    unknown call_tmp[735524] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735527 'move' call_tmp[735524](466488 'typeof' nElems[267594]))
    unknown call_tmp[735529] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735532 'move' call_tmp[735529](466490 'typeof' nElems[267594]))
    (267610 call _build_tuple call_tmp[735524] call_tmp[735529])
  }
  function chunkOrderPack[267687](arg chunkSize[267684]:_any[178](?), arg nElems[267690] :
  (466492 'typeof' chunkSize[267684]), arg i[267694] :
  (466494 'typeof' chunkSize[267684])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537327] "RVV" "temp"
    unknown call_tmp[735534] "maybe param" "maybe type" "temp"
    (735537 'move' call_tmp[735534](267704 call * chunkSize[267684] i[267694]))
    const start[267706] "dead at end of block" "const" "insert auto destroy"
    (548546 'init var' start[267706] call_tmp[735534])
    (267709 'end of statement')
    unknown call_tmp[735539] "expr temp" "maybe param" "maybe type" "temp"
    (735542 'move' call_tmp[735539](267713 call >= start[267706] nElems[267690]))
    unknown call_tmp[735544] "expr temp" "maybe param" "maybe type" "temp"
    (735547 'move' call_tmp[735544](267728 call _cond_test call_tmp[735539]))
    if call_tmp[735544]
    {
      unknown call_tmp[735549] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735552 'move' call_tmp[735549](466496 'typeof' chunkSize[267684]))
      unknown call_tmp[735554] "expr temp" "maybe param" "maybe type" "temp"
      (735557 'move' call_tmp[735554](267717 call _cast call_tmp[735549] 1))
      unknown call_tmp[735559] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735562 'move' call_tmp[735559](466498 'typeof' chunkSize[267684]))
      unknown call_tmp[735564] "expr temp" "maybe param" "maybe type" "temp"
      (735567 'move' call_tmp[735564](267721 call _cast call_tmp[735559] 0))
      unknown call_tmp[735569] "expr temp" "maybe param" "maybe type" "temp"
      (735572 'move' call_tmp[735569](267724 call _build_tuple call_tmp[735554] call_tmp[735564]))
      unknown call_tmp[735574] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735577 'move' call_tmp[735574](537333 'typeof' chunkSize[267684]))
      unknown call_tmp[735579] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735582 'move' call_tmp[735579](537335 'typeof' chunkSize[267684]))
      unknown call_tmp[735584] "expr temp" "maybe param" "maybe type" "temp"
      (735587 'move' call_tmp[735584](537332 call _build_tuple call_tmp[735574] call_tmp[735579]))
      (537338 'move' ret[537327](537337 'coerce' call_tmp[735569] call_tmp[735584]))
      gotoReturn _end_chunkOrderPack[537325] _end_chunkOrderPack[537325]
    }
    unknown call_tmp[735589] "expr temp" "maybe param" "maybe type" "temp"
    (735592 'move' call_tmp[735589](267735 call + start[267706] chunkSize[267684]))
    unknown call_tmp[735594] "maybe param" "maybe type" "temp"
    (735597 'move' call_tmp[735594](267738 call - call_tmp[735589] 1))
    unknown end[267740] "dead at end of block" "insert auto destroy"
    (548548 'init var' end[267740] call_tmp[735594])
    (267743 'end of statement' start[267706])
    unknown call_tmp[735599] "expr temp" "maybe param" "maybe type" "temp"
    (735602 'move' call_tmp[735599](267746 call >= end[267740] nElems[267690]))
    unknown call_tmp[735604] "expr temp" "maybe param" "maybe type" "temp"
    (735607 'move' call_tmp[735604](267756 call _cond_test call_tmp[735599]))
    if call_tmp[735604]
    {
      unknown call_tmp[735609] "expr temp" "maybe param" "maybe type" "temp"
      (735612 'move' call_tmp[735609](267751 call - nElems[267690] 1))
      (267753 call = end[267740] call_tmp[735609])
      (489647 'end of statement' end[267740])
    }
    unknown call_tmp[735614] "expr temp" "maybe param" "maybe type" "temp"
    (735617 'move' call_tmp[735614](267764 call _build_tuple start[267706] end[267740]))
    unknown call_tmp[735619] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735622 'move' call_tmp[735619](537344 'typeof' chunkSize[267684]))
    unknown call_tmp[735624] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735627 'move' call_tmp[735624](537346 'typeof' chunkSize[267684]))
    unknown call_tmp[735629] "expr temp" "maybe param" "maybe type" "temp"
    (735632 'move' call_tmp[735629](537343 call _build_tuple call_tmp[735619] call_tmp[735624]))
    (537349 'move' ret[537327](537348 'coerce' call_tmp[735614] call_tmp[735629]))
    gotoReturn _end_chunkOrderPack[537325] _end_chunkOrderPack[537325]
    (489649 'end of statement' start[267706] end[267740])
    label _end_chunkOrderPack[537325]
    (537329 return ret[537327])
  }
  { scopeless type
    unknown call_tmp[735634] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735637 'move' call_tmp[735634](466500 'typeof' chunkSize[267684]))
    unknown call_tmp[735639] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735642 'move' call_tmp[735639](466502 'typeof' chunkSize[267684]))
    (267700 call _build_tuple call_tmp[735634] call_tmp[735639])
  }
  function chunkOrderMod[267778](arg chunkSize[267775]:_any[178](?), arg rem[267781] :
  (466504 'typeof' chunkSize[267775]), arg nElems[267785] :
  (466506 'typeof' chunkSize[267775]), arg nChunks[267789] :
  (466508 'typeof' chunkSize[267775]), arg i[267793] :
  (466510 'typeof' chunkSize[267775])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537355] "RVV" "temp"
    unknown start[267801] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735644] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735647 'move' call_tmp[735644](466512 'typeof' chunkSize[267775]))
    (548550 'default init var' start[267801] call_tmp[735644])
    unknown end[267805] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548552] "maybe param" "maybe type" "temp"
    (548559 'move' type_tmp[548552](548557 'typeof' start[267801]))
    (548554 'init var split decl' end[267805] type_tmp[548552])
    (267810 'end of statement' start[267801])
    unknown call_tmp[735649] "expr temp" "maybe param" "maybe type" "temp"
    (735652 'move' call_tmp[735649](267814 call < i[267793] rem[267781]))
    unknown call_tmp[735654] "expr temp" "maybe param" "maybe type" "temp"
    (735657 'move' call_tmp[735654](267862 call _cond_test call_tmp[735649]))
    if call_tmp[735654]
    {
      unknown call_tmp[735659] "expr temp" "maybe param" "maybe type" "temp"
      (735662 'move' call_tmp[735659](267820 call + chunkSize[267775] 1))
      unknown call_tmp[735664] "expr temp" "maybe param" "maybe type" "temp"
      (735667 'move' call_tmp[735664](267822 call * i[267793] call_tmp[735659]))
      (267824 call = start[267801] call_tmp[735664])
      (489653 'end of statement' start[267801])
      unknown call_tmp[735669] "maybe param" "maybe type" "temp"
      (735672 'move' call_tmp[735669](267831 call + start[267801] chunkSize[267775]))
      (548561 'init var split init' end[267805] call_tmp[735669] type_tmp[548552])
      (489655 'end of statement' end[267805] start[267801])
    }
    {
      unknown call_tmp[735674] "expr temp" "maybe param" "maybe type" "temp"
      (735677 'move' call_tmp[735674](267840 call - nChunks[267789] i[267793]))
      unknown call_tmp[735679] "expr temp" "maybe param" "maybe type" "temp"
      (735682 'move' call_tmp[735679](267843 call * call_tmp[735674] chunkSize[267775]))
      unknown call_tmp[735684] "expr temp" "maybe param" "maybe type" "temp"
      (735687 'move' call_tmp[735684](267845 call - nElems[267785] call_tmp[735679]))
      (267847 call = start[267801] call_tmp[735684])
      (489658 'end of statement' start[267801])
      unknown call_tmp[735689] "expr temp" "maybe param" "maybe type" "temp"
      (735692 'move' call_tmp[735689](267854 call + start[267801] chunkSize[267775]))
      unknown call_tmp[735694] "maybe param" "maybe type" "temp"
      (735697 'move' call_tmp[735694](267857 call - call_tmp[735689] 1))
      (548564 'init var split init' end[267805] call_tmp[735694] type_tmp[548552])
      (489660 'end of statement' end[267805] start[267801])
    }
    unknown call_tmp[735699] "expr temp" "maybe param" "maybe type" "temp"
    (735702 'move' call_tmp[735699](267869 call _build_tuple start[267801] end[267805]))
    unknown call_tmp[735704] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735707 'move' call_tmp[735704](537361 'typeof' chunkSize[267775]))
    unknown call_tmp[735709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735712 'move' call_tmp[735709](537363 'typeof' chunkSize[267775]))
    unknown call_tmp[735714] "expr temp" "maybe param" "maybe type" "temp"
    (735717 'move' call_tmp[735714](537360 call _build_tuple call_tmp[735704] call_tmp[735709]))
    (537366 'move' ret[537355](537365 'coerce' call_tmp[735699] call_tmp[735714]))
    gotoReturn _end_chunkOrderMod[537353] _end_chunkOrderMod[537353]
    (489663 'end of statement' start[267801] end[267805])
    label _end_chunkOrderMod[537353]
    (537357 return ret[537355])
  }
  { scopeless type
    unknown call_tmp[735719] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735722 'move' call_tmp[735719](466514 'typeof' chunkSize[267775]))
    unknown call_tmp[735724] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735727 'move' call_tmp[735724](466516 'typeof' chunkSize[267775]))
    (267799 call _build_tuple call_tmp[735719] call_tmp[735724])
  }
  (355236 'used modules list'(352928 'use' ChapelStandard[20264])(266383 'use' RemElems[266378])(266386 'use' BoundedRangeType[64213]))
}