AST dump for RangeChunk after pass normalize.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416180]() : void[4] "insert line file info" "module init"
  {
    (537525 return _void[55])
  }
  type RemElems[266383] def Thru[266377]:RemElems[266383] def Pack[266379]:RemElems[266383] def Mod[266381]:RemElems[266383]
  function chunks[266406](arg r[266403]:range[64316](?), arg numChunks[266409]:integral[199](?), arg remPol[266414]:RemElems[266383] =
  Thru[266377]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537330] "RVV" "temp"
    {
      unknown _indexOfInterest[266478] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266479] "expr temp" "temp"
      unknown call_tmp[734793] "expr temp" "maybe param" "maybe type" "temp"
      (734796 'move' call_tmp[734793](266434 call chunksOrder r[266403] numChunks[266409] remPol[266414]))
      (266488 'move' _iterator[266479](266486 call _getIterator call_tmp[734793]))
      Defer
      {
        {
          (266519 call _freeIterator _iterator[266479])
        }
      }
      { scopeless type
        (266494 'move' _indexOfInterest[266478](266491 call iteratorIndex _iterator[266479]))
      }
      ForLoop[266480]
      {
        (266499 call _check_tuple_var_decl _indexOfInterest[266478] 2)
        (489666 'end of statement')
        unknown startOrder[266505] "index var" "insert auto destroy"
        (489667 'end of statement')
        (266507 'move' startOrder[266505](266503 call _indexOfInterest[266478] 0))
        (489668 'end of statement' startOrder[266505])
        unknown endOrder[266512] "index var" "insert auto destroy"
        (489670 'end of statement')
        (266514 'move' endOrder[266512](266510 call _indexOfInterest[266478] 1))
        (489671 'end of statement' endOrder[266512])
        {
          unknown call_tmp[734800] "maybe param" "maybe type" "temp"
          (734803 'move' call_tmp[734800](266441 call(266436 call (partial) orderToIndex _mt[243] r[266403]) startOrder[266505]))
          const start[266442] "dead at end of block" "const" "insert auto destroy"
          (548626 'init var' start[266442] call_tmp[734800])
          (266445 'end of statement')
          unknown call_tmp[734807] "maybe param" "maybe type" "temp"
          (734810 'move' call_tmp[734807](266453 call(266448 call (partial) orderToIndex _mt[243] r[266403]) endOrder[266512]))
          const end[266454] "dead at end of block" "const" "insert auto destroy"
          (548628 'init var' end[266454] call_tmp[734807])
          (266457 'end of statement' startOrder[266505] endOrder[266512])
          unknown yret[537334] "YVV" "temp"
          unknown tmp[579169] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579170] "maybe param" "temp"
          unknown call_tmp[734812] "expr temp" "maybe param" "maybe type" "temp"
          (734815 'move' call_tmp[734812](466503 'query' r[266403] 3))
          (579175 'move' tmp[579170](579173 call _cond_test call_tmp[734812]))
          if tmp[579170]
          {
            unknown tmp[579177] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734817] "expr temp" "maybe param" "maybe type" "temp"
            (734820 'move' call_tmp[734817](266461 call chpl_build_bounded_range start[266442] end[266454]))
            unknown call_tmp[734824] "expr temp" "maybe param" "maybe type" "temp"
            (734827 'move' call_tmp[734824](266464 call stride _mt[243] r[266403]))
            (579179 'move' tmp[579177](266467 call chpl_by call_tmp[734817] call_tmp[734824]))
            (579184 'move' tmp[579169](579181 '_paramFoldLogical' tmp[579170] tmp[579177]))
          }
          {
            unknown tmp[579186] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579188 'move' tmp[579186](266471 call chpl_build_bounded_range start[266442] end[266454]))
            (579193 'move' tmp[579169](579190 '_paramFoldLogical' tmp[579170] tmp[579186]))
          }
          unknown call_tmp[734829] "expr temp" "maybe param" "maybe type" "temp"
          (734832 'move' call_tmp[734829](537338 'query' r[266403] 1))
          unknown call_tmp[734834] "expr temp" "maybe param" "maybe type" "temp"
          (734837 'move' call_tmp[734834](537342 'query' r[266403] 3))
          unknown call_tmp[734839] "expr temp" "maybe param" "maybe type" "temp"
          (734842 'move' call_tmp[734839](537337 call range[64316](?) call_tmp[734829] bounded[64205] call_tmp[734834]))
          (537346 'move' yret[537334](537345 'coerce' tmp[579169] call_tmp[734839]))
          (537348 yield yret[537334])
          (489675 'end of statement' start[266442] end[266454] start[266442] end[266454])
        }
        label _continueLabel[266483]
        _indexOfInterest[266478]
        _iterator[266479]
      }
      label _breakLabel[266484]
    }
    (537332 return ret[537330])
  }
  where {
    unknown call_tmp[734844] "expr temp" "maybe param" "maybe type" "temp"
    (734847 'move' call_tmp[734844](466490 'query' r[266403] 2))
    unknown call_tmp[734849] "expr temp" "maybe param" "maybe type" "temp"
    (734852 'move' call_tmp[734849](466494 call == bounded[64205] call_tmp[734844]))
    (466498 call & 1 call_tmp[734849])
  }
  { scopeless type
    unknown call_tmp[734854] "expr temp" "maybe param" "maybe type" "temp"
    (734857 'move' call_tmp[734854](466487 'query' r[266403] 1))
    unknown call_tmp[734859] "expr temp" "maybe param" "maybe type" "temp"
    (734862 'move' call_tmp[734859](466506 'query' r[266403] 3))
    (266423 call range[64316](?) call_tmp[734854] bounded[64205] call_tmp[734859])
  }
  function chunk[266543](arg r[266540]:range[64316](?), arg numChunks[266546]:integral[199](?), arg idx[266550]:integral[199](?), arg remPol[266555]:RemElems[266383] =
  Thru[266377]) : _unknown[51] "compiler added where"
  {
    unknown ret[537352] "RVV" "temp"
    unknown call_tmp[734864] "maybe param" "maybe type" "temp"
    (734867 'move' call_tmp[734864](266576 call chunkOrder r[266540] numChunks[266546] idx[266550] remPol[266555]))
    const tmp[266577] "dead at end of block" "const" "insert auto destroy" "temp"
    (548630 'init var' tmp[266577] call_tmp[734864])
    (266584 call _check_tuple_var_decl tmp[266577] 2)
    (489680 'end of statement')
    unknown call_tmp[734869] "maybe param" "maybe type" "temp"
    (734872 'move' call_tmp[734869](266578 call tmp[266577] 0))
    const startOrder[266565] "dead at end of block" "const" "insert auto destroy"
    (548632 'init var' startOrder[266565] call_tmp[734869])
    unknown call_tmp[734874] "maybe param" "maybe type" "temp"
    (734877 'move' call_tmp[734874](266581 call tmp[266577] 1))
    const endOrder[266567] "dead at end of block" "const" "insert auto destroy"
    (548634 'init var' endOrder[266567] call_tmp[734874])
    (266589 'end of statement')
    unknown call_tmp[734881] "maybe param" "maybe type" "temp"
    (734884 'move' call_tmp[734881](266597 call(266592 call (partial) orderToIndex _mt[243] r[266540]) startOrder[266565]))
    const start[266598] "dead at end of block" "const" "insert auto destroy"
    (548636 'init var' start[266598] call_tmp[734881])
    (266601 'end of statement')
    unknown call_tmp[734888] "maybe param" "maybe type" "temp"
    (734891 'move' call_tmp[734888](266608 call(266603 call (partial) orderToIndex _mt[243] r[266540]) endOrder[266567]))
    const end[266609] "dead at end of block" "const" "insert auto destroy"
    (548638 'init var' end[266609] call_tmp[734888])
    (266612 'end of statement' startOrder[266565] endOrder[266567])
    unknown tmp[579200] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579201] "maybe param" "temp"
    unknown call_tmp[734893] "expr temp" "maybe param" "maybe type" "temp"
    (734896 'move' call_tmp[734893](466532 'query' r[266540] 3))
    (579206 'move' tmp[579201](579204 call _cond_test call_tmp[734893]))
    if tmp[579201]
    {
      unknown tmp[579208] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734898] "expr temp" "maybe param" "maybe type" "temp"
      (734901 'move' call_tmp[734898](266616 call chpl_build_bounded_range start[266598] end[266609]))
      unknown call_tmp[734905] "expr temp" "maybe param" "maybe type" "temp"
      (734908 'move' call_tmp[734905](266619 call stride _mt[243] r[266540]))
      (579210 'move' tmp[579208](266622 call chpl_by call_tmp[734898] call_tmp[734905]))
      (579215 'move' tmp[579200](579212 '_paramFoldLogical' tmp[579201] tmp[579208]))
    }
    {
      unknown tmp[579217] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579219 'move' tmp[579217](266626 call chpl_build_bounded_range start[266598] end[266609]))
      (579224 'move' tmp[579200](579221 '_paramFoldLogical' tmp[579201] tmp[579217]))
    }
    unknown call_tmp[734910] "expr temp" "maybe param" "maybe type" "temp"
    (734913 'move' call_tmp[734910](537358 'query' r[266540] 1))
    unknown call_tmp[734915] "expr temp" "maybe param" "maybe type" "temp"
    (734918 'move' call_tmp[734915](537362 'query' r[266540] 3))
    unknown call_tmp[734920] "expr temp" "maybe param" "maybe type" "temp"
    (734923 'move' call_tmp[734920](537357 call range[64316](?) call_tmp[734910] bounded[64205] call_tmp[734915]))
    (537366 'move' ret[537352](537365 'coerce' tmp[579200] call_tmp[734920]))
    gotoReturn _end_chunk[537350] _end_chunk[537350]
    (489683 'end of statement' start[266598] end[266609] start[266598] end[266609])
    label _end_chunk[537350]
    (537354 return ret[537352])
  }
  where {
    unknown call_tmp[734925] "expr temp" "maybe param" "maybe type" "temp"
    (734928 'move' call_tmp[734925](466519 'query' r[266540] 2))
    unknown call_tmp[734930] "expr temp" "maybe param" "maybe type" "temp"
    (734933 'move' call_tmp[734930](466523 call == bounded[64205] call_tmp[734925]))
    (466527 call & 1 call_tmp[734930])
  }
  { scopeless type
    unknown call_tmp[734935] "expr temp" "maybe param" "maybe type" "temp"
    (734938 'move' call_tmp[734935](466516 'query' r[266540] 1))
    unknown call_tmp[734940] "expr temp" "maybe param" "maybe type" "temp"
    (734943 'move' call_tmp[734940](466535 'query' r[266540] 3))
    (266564 call range[64316](?) call_tmp[734935] bounded[64205] call_tmp[734940])
  }
  function blockCyclicChunks[266653](arg r[266650]:range[64316](?), arg blockSize[266656]:integral[199](?), arg tid[266660]:integral[199](?), arg nTasks[266664]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537372] "RVV" "temp"
    unknown call_tmp[734945] "expr temp" "maybe param" "maybe type" "temp"
    (734948 'move' call_tmp[734945](266669 call >= tid[266660] nTasks[266664]))
    unknown call_tmp[734950] "expr temp" "maybe param" "maybe type" "temp"
    (734953 'move' call_tmp[734950](266711 call _cond_test call_tmp[734945]))
    if call_tmp[734950]
    {
      unknown call_tmp[734955] "expr temp" "maybe param" "maybe type" "temp"
      (734958 'move' call_tmp[734955](266706 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266709 call halt call_tmp[734955])
    }
    unknown call_tmp[734960] "expr temp" "maybe param" "maybe type" "temp"
    (734963 'move' call_tmp[734960](266719 call <= blockSize[266656] 0))
    unknown call_tmp[734965] "expr temp" "maybe param" "maybe type" "temp"
    (734968 'move' call_tmp[734965](266742 call _cond_test call_tmp[734960]))
    if call_tmp[734965]
    {
      (266740 call halt "blockSize must a positive number")
    }
    unknown call_tmp[734970] "expr temp" "maybe param" "maybe type" "temp"
    (734973 'move' call_tmp[734970](266749 call <= nTasks[266664] 0))
    unknown call_tmp[734975] "expr temp" "maybe param" "maybe type" "temp"
    (734978 'move' call_tmp[734975](266772 call _cond_test call_tmp[734970]))
    if call_tmp[734975]
    {
      (266770 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[734982] "maybe param" "maybe type" "temp"
    (734985 'move' call_tmp[734982](266778 call stride _mt[243] r[266650]))
    unknown rangeStride[266781] "dead at end of block" "insert auto destroy"
    (548640 'init var' rangeStride[266781] call_tmp[734982])
    (266784 'end of statement')
    unknown call_tmp[734987] "maybe param" "maybe type" "temp"
    (734990 'move' call_tmp[734987](266787 call * blockSize[266656] rangeStride[266781]))
    unknown blockStride[266789] "dead at end of block" "insert auto destroy"
    (548642 'init var' blockStride[266789] call_tmp[734987])
    (266792 'end of statement')
    unknown call_tmp[734994] "maybe param" "maybe type" "temp"
    (734997 'move' call_tmp[734994](266794 call low _mt[243] r[266650]))
    unknown low[266797] "dead at end of block" "insert auto destroy"
    (548644 'init var' low[266797] call_tmp[734994])
    (266800 'end of statement')
    unknown call_tmp[735001] "maybe param" "maybe type" "temp"
    (735004 'move' call_tmp[735001](266802 call high _mt[243] r[266650]))
    unknown high[266805] "dead at end of block" "insert auto destroy"
    (548646 'init var' high[266805] call_tmp[735001])
    (266808 'end of statement')
    unknown firstBlockStart[266830] "dead at end of block" "insert auto destroy"
    unknown tmp[579231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579232] "maybe param" "temp"
    unknown call_tmp[735006] "expr temp" "maybe param" "maybe type" "temp"
    (735009 'move' call_tmp[735006](266811 call > rangeStride[266781] 0))
    (579237 'move' tmp[579232](579235 call _cond_test call_tmp[735006]))
    if tmp[579232]
    {
      unknown tmp[579239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579241 'move' tmp[579239](266814 call low _mt[243] r[266650]))
      (579246 'move' tmp[579231](579243 '_paramFoldLogical' tmp[579232] tmp[579239]))
    }
    {
      unknown tmp[579248] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579250 'move' tmp[579248](266818 call high _mt[243] r[266650]))
      (579255 'move' tmp[579231](579252 '_paramFoldLogical' tmp[579232] tmp[579248]))
    }
    unknown call_tmp[735015] "expr temp" "maybe param" "maybe type" "temp"
    (735018 'move' call_tmp[735015](266826 call * blockStride[266789] tid[266660]))
    unknown call_tmp[735020] "maybe param" "maybe type" "temp"
    (735023 'move' call_tmp[735020](266828 call + tmp[579231] call_tmp[735015]))
    (548648 'init var' firstBlockStart[266830] call_tmp[735020])
    (266833 'end of statement')
    unknown tmp[434056] "maybe param" "temp"
    unknown call_tmp[735027] "expr temp" "maybe param" "maybe type" "temp"
    (735030 'move' call_tmp[735027](266836 call high _mt[243] r[266650]))
    (434067 'move' tmp[434056](266839 call > firstBlockStart[266830] call_tmp[735027]))
    unknown call_tmp[735032] "expr temp" "maybe param" "maybe type" "temp"
    (735035 'move' call_tmp[735032](434069 call _cond_invalid tmp[434056]))
    if call_tmp[735032]
    {
      (434072 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579262] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579263] "maybe param" "temp"
    unknown call_tmp[735037] "expr temp" "maybe param" "maybe type" "temp"
    (735040 'move' call_tmp[735037](434057 call isTrue tmp[434056]))
    (579268 'move' tmp[579263](579266 call _cond_test call_tmp[735037]))
    if tmp[579263]
    {
      (579273 'move' tmp[579262](579270 '_paramFoldLogical' tmp[579263] 1))
    }
    {
      unknown tmp[579275] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735044] "expr temp" "maybe param" "maybe type" "temp"
      (735047 'move' call_tmp[735044](266843 call low _mt[243] r[266650]))
      unknown call_tmp[735049] "expr temp" "maybe param" "maybe type" "temp"
      (735052 'move' call_tmp[735049](266846 call < firstBlockStart[266830] call_tmp[735044]))
      (579277 'move' tmp[579275](434061 call isTrue call_tmp[735049]))
      (579282 'move' tmp[579262](579279 '_paramFoldLogical' tmp[579263] tmp[579275]))
    }
    unknown call_tmp[735054] "expr temp" "maybe param" "maybe type" "temp"
    (735057 'move' call_tmp[735054](266852 call _cond_test tmp[579262]))
    if call_tmp[735054]
    {
      gotoReturn _end_blockCyclicChunks[537370] _end_blockCyclicChunks[537370]
    }
    unknown call_tmp[735059] "maybe param" "maybe type" "temp"
    (735062 'move' call_tmp[735059](266859 call * blockStride[266789] nTasks[266664]))
    unknown strideToNextBlock[266861] "dead at end of block" "insert auto destroy"
    (548650 'init var' strideToNextBlock[266861] call_tmp[735059])
    (266864 'end of statement' rangeStride[266781] rangeStride[266781] blockStride[266789] blockStride[266789])
    unknown call_tmp[735064] "expr temp" "maybe param" "maybe type" "temp"
    (735067 'move' call_tmp[735064](266867 call > rangeStride[266781] 0))
    unknown call_tmp[735069] "expr temp" "maybe param" "maybe type" "temp"
    (735072 'move' call_tmp[735069](267021 call _cond_test call_tmp[735064]))
    if call_tmp[735069]
    {
      {
        unknown _indexOfInterest[266902] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[266903] "expr temp" "temp"
        unknown call_tmp[735074] "expr temp" "maybe param" "maybe type" "temp"
        (735077 'move' call_tmp[735074](266921 call chpl_direct_range_iter firstBlockStart[266830] high[266805] strideToNextBlock[266861]))
        (266912 'move' _iterator[266903](266910 call _getIterator call_tmp[735074]))
        Defer
        {
          {
            (266937 call _freeIterator _iterator[266903])
          }
        }
        { scopeless type
          (266926 'move' _indexOfInterest[266902](266923 call iteratorIndex _iterator[266903]))
        }
        ForLoop[266904]
        {
          unknown blockStart[266930] "index var" "insert auto destroy"
          (489698 'end of statement')
          (266932 'move' blockStart[266930] _indexOfInterest[266902])
          (489699 'end of statement' blockStart[266930])
          {
            unknown call_tmp[735079] "expr temp" "maybe param" "maybe type" "temp"
            (735082 'move' call_tmp[735079](266882 call + blockStart[266930] blockStride[266789]))
            unknown call_tmp[735084] "expr temp" "maybe param" "maybe type" "temp"
            (735087 'move' call_tmp[735084](266885 call - call_tmp[735079] 1))
            unknown call_tmp[735089] "maybe param" "maybe type" "temp"
            (735092 'move' call_tmp[735089](266887 call min high[266805] call_tmp[735084]))
            unknown blockEnd[266888] "dead at end of block" "insert auto destroy"
            (548652 'init var' blockEnd[266888] call_tmp[735089])
            (266891 'end of statement' high[266805] blockStart[266930] blockStride[266789])
            unknown yret[537378] "YVV" "temp"
            unknown call_tmp[735094] "expr temp" "maybe param" "maybe type" "temp"
            (735097 'move' call_tmp[735094](266895 call chpl_build_bounded_range blockStart[266930] blockEnd[266888]))
            unknown call_tmp[735099] "expr temp" "maybe param" "maybe type" "temp"
            (735102 'move' call_tmp[735099](266898 call chpl_by call_tmp[735094] rangeStride[266781]))
            (537381 'move' yret[537378](537380 'deref' call_tmp[735099]))
            (537383 yield yret[537378])
            (489704 'end of statement' blockStart[266930] blockEnd[266888] rangeStride[266781])
          }
          label _continueLabel[266907]
          _indexOfInterest[266902]
          _iterator[266903]
        }
        label _breakLabel[266908]
      }
    }
    {
      {
        unknown _indexOfInterest[266978] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[266979] "expr temp" "temp"
        unknown call_tmp[735104] "expr temp" "maybe param" "maybe type" "temp"
        (735107 'move' call_tmp[735104](266997 call chpl_direct_range_iter low[266797] firstBlockStart[266830] strideToNextBlock[266861]))
        (266988 'move' _iterator[266979](266986 call _getIterator call_tmp[735104]))
        Defer
        {
          {
            (267013 call _freeIterator _iterator[266979])
          }
        }
        { scopeless type
          (267002 'move' _indexOfInterest[266978](266999 call iteratorIndex _iterator[266979]))
        }
        ForLoop[266980]
        {
          unknown blockEnd[267006] "index var" "insert auto destroy"
          (489709 'end of statement')
          (267008 'move' blockEnd[267006] _indexOfInterest[266978])
          (489710 'end of statement' blockEnd[267006])
          {
            unknown call_tmp[735109] "expr temp" "maybe param" "maybe type" "temp"
            (735112 'move' call_tmp[735109](266958 call + blockEnd[267006] blockStride[266789]))
            unknown call_tmp[735114] "expr temp" "maybe param" "maybe type" "temp"
            (735117 'move' call_tmp[735114](266961 call + call_tmp[735109] 1))
            unknown call_tmp[735119] "maybe param" "maybe type" "temp"
            (735122 'move' call_tmp[735119](266963 call max low[266797] call_tmp[735114]))
            unknown blockStart[266964] "dead at end of block" "insert auto destroy"
            (548654 'init var' blockStart[266964] call_tmp[735119])
            (266967 'end of statement' low[266797] blockEnd[267006] blockStride[266789])
            unknown yret[537385] "YVV" "temp"
            unknown call_tmp[735124] "expr temp" "maybe param" "maybe type" "temp"
            (735127 'move' call_tmp[735124](266971 call chpl_build_bounded_range blockStart[266964] blockEnd[267006]))
            unknown call_tmp[735129] "expr temp" "maybe param" "maybe type" "temp"
            (735132 'move' call_tmp[735129](266974 call chpl_by call_tmp[735124] rangeStride[266781]))
            (537388 'move' yret[537385](537387 'deref' call_tmp[735129]))
            (537390 yield yret[537385])
            (489715 'end of statement' blockStart[266964] blockEnd[267006] rangeStride[266781])
          }
          label _continueLabel[266983]
          _indexOfInterest[266978]
          _iterator[266979]
        }
        label _breakLabel[266984]
      }
    }
    label _end_blockCyclicChunks[537370]
    (537374 return ret[537372])
  }
  where {
    unknown call_tmp[735134] "expr temp" "maybe param" "maybe type" "temp"
    (735137 'move' call_tmp[735134](466544 'query' r[266650] c"boundedType"))
    unknown call_tmp[735139] "expr temp" "maybe param" "maybe type" "temp"
    (735142 'move' call_tmp[735139](466547 call == bounded[64205] call_tmp[735134]))
    (466551 call & 1 call_tmp[735139])
  }
  function chunksOrder[267039](arg r[267036]:range[64316](?), arg numChunks[267042]:integral[199](?), arg remPol[267047]:RemElems[266383] =
  Thru[266377]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537394] "RVV" "temp"
    unknown tmp[434077] "maybe param" "temp"
    unknown call_tmp[735146] "expr temp" "maybe param" "maybe type" "temp"
    (735149 'move' call_tmp[735146](267056 call size _mt[243] r[267036]))
    (434088 'move' tmp[434077](267060 call == call_tmp[735146] 0))
    unknown call_tmp[735151] "expr temp" "maybe param" "maybe type" "temp"
    (735154 'move' call_tmp[735151](434090 call _cond_invalid tmp[434077]))
    if call_tmp[735151]
    {
      (434093 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579289] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579290] "maybe param" "temp"
    unknown call_tmp[735156] "expr temp" "maybe param" "maybe type" "temp"
    (735159 'move' call_tmp[735156](434078 call isTrue tmp[434077]))
    (579295 'move' tmp[579290](579293 call _cond_test call_tmp[735156]))
    if tmp[579290]
    {
      (579300 'move' tmp[579289](579297 '_paramFoldLogical' tmp[579290] 1))
    }
    {
      unknown tmp[579302] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735161] "expr temp" "maybe param" "maybe type" "temp"
      (735164 'move' call_tmp[735161](267064 call <= numChunks[267042] 0))
      (579304 'move' tmp[579302](434082 call isTrue call_tmp[735161]))
      (579309 'move' tmp[579289](579306 '_paramFoldLogical' tmp[579290] tmp[579302]))
    }
    unknown call_tmp[735166] "expr temp" "maybe param" "maybe type" "temp"
    (735169 'move' call_tmp[735166](267070 call _cond_test tmp[579289]))
    if call_tmp[735166]
    {
      gotoReturn _end_chunksOrder[537392] _end_chunksOrder[537392]
    }
    unknown call_tmp[735173] "maybe param" "maybe type" "temp"
    (735176 'move' call_tmp[735173](267077 call size _mt[243] r[267036]))
    const nElems[267080] "dead at end of block" "const" "insert auto destroy"
    (548656 'init var' nElems[267080] call_tmp[735173])
    (267083 'end of statement')
    unknown call_tmp[735178] "expr temp" "maybe param" "maybe type" "temp"
    (735181 'move' call_tmp[735178](466568 'query' r[267036] 1))
    unknown call_tmp[735183] "expr temp" "maybe param" "maybe type" "temp"
    (735186 'move' call_tmp[735183](267088 call min numChunks[267042] nElems[267080]))
    unknown call_tmp[735188] "maybe param" "maybe type" "temp"
    (735191 'move' call_tmp[735188](267090 call _cast call_tmp[735178] call_tmp[735183]))
    unknown nChunks[267092] "dead at end of block" "insert auto destroy"
    (548658 'init var' nChunks[267092] call_tmp[735188])
    (267095 'end of statement')
    unknown chunkSize[267096] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735193] "expr temp" "maybe param" "maybe type" "temp"
    (735196 'move' call_tmp[735193](466571 'query' r[267036] 1))
    (548660 'default init var' chunkSize[267096] call_tmp[735193])
    unknown rem[267100] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735198] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735201 'move' call_tmp[735198](267104 'typeof' chunkSize[267096]))
    (548662 'default init var' rem[267100] call_tmp[735198])
    (267105 'end of statement' nElems[267080] chunkSize[267096])
    {
      unknown tmp[267172] "expr temp" "maybe param" "maybe type" "temp"
      (267174 'move' tmp[267172] remPol[267047])
      unknown call_tmp[735203] "expr temp" "maybe param" "maybe type" "temp"
      (735206 'move' call_tmp[735203](267176 call == tmp[267172] Pack[266379]))
      unknown call_tmp[735208] "expr temp" "maybe param" "maybe type" "temp"
      (735211 'move' call_tmp[735208](267179 call _cond_test call_tmp[735203]))
      if call_tmp[735208]
      {
        unknown call_tmp[735213] "expr temp" "maybe param" "maybe type" "temp"
        (735216 'move' call_tmp[735213](267113 call / nElems[267080] nChunks[267092]))
        (267115 call = chunkSize[267096] call_tmp[735213])
        (489723 'end of statement' chunkSize[267096] nElems[267080] nChunks[267092])
        unknown call_tmp[735218] "expr temp" "maybe param" "maybe type" "temp"
        (735221 'move' call_tmp[735218](267121 call * chunkSize[267096] nChunks[267092]))
        unknown call_tmp[735223] "expr temp" "maybe param" "maybe type" "temp"
        (735226 'move' call_tmp[735223](267124 call != call_tmp[735218] nElems[267080]))
        unknown call_tmp[735228] "expr temp" "maybe param" "maybe type" "temp"
        (735231 'move' call_tmp[735228](267141 call _cond_test call_tmp[735223]))
        if call_tmp[735228]
        {
          (267128 call += chunkSize[267096] 1)
          (489727 'end of statement' chunkSize[267096])
          unknown call_tmp[735233] "expr temp" "maybe param" "maybe type" "temp"
          (735236 'move' call_tmp[735233](267137 call divceil nElems[267080] chunkSize[267096]))
          (267138 call = nChunks[267092] call_tmp[735233])
          (489729 'end of statement' nChunks[267092] nElems[267080] chunkSize[267096])
        }
      }
      {
        unknown call_tmp[735238] "expr temp" "maybe param" "maybe type" "temp"
        (735241 'move' call_tmp[735238](267182 call == tmp[267172] Mod[266381]))
        unknown call_tmp[735243] "expr temp" "maybe param" "maybe type" "temp"
        (735246 'move' call_tmp[735243](267185 call _cond_test call_tmp[735238]))
        if call_tmp[735243]
        {
          unknown call_tmp[735248] "expr temp" "maybe param" "maybe type" "temp"
          (735251 'move' call_tmp[735248](267152 call / nElems[267080] nChunks[267092]))
          (267154 call = chunkSize[267096] call_tmp[735248])
          (489733 'end of statement' chunkSize[267096] nElems[267080] nChunks[267092])
          unknown call_tmp[735253] "expr temp" "maybe param" "maybe type" "temp"
          (735256 'move' call_tmp[735253](267162 call * chunkSize[267096] nChunks[267092]))
          unknown call_tmp[735258] "expr temp" "maybe param" "maybe type" "temp"
          (735261 'move' call_tmp[735258](267164 call - nElems[267080] call_tmp[735253]))
          (267166 call = rem[267100] call_tmp[735258])
          (489737 'end of statement' rem[267100] nElems[267080] chunkSize[267096] nChunks[267092])
        }
      }
    }
    {
      unknown _indexOfInterest[267308] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267309] "expr temp" "temp"
      unknown call_tmp[735263] "expr temp" "maybe param" "maybe type" "temp"
      (735266 'move' call_tmp[735263](267325 call chpl_direct_counted_range_iter 0 nChunks[267092]))
      (267318 'move' _iterator[267309](267316 call _getIterator call_tmp[735263]))
      Defer
      {
        {
          (267341 call _freeIterator _iterator[267309])
        }
      }
      { scopeless type
        (267330 'move' _indexOfInterest[267308](267327 call iteratorIndex _iterator[267309]))
      }
      ForLoop[267310]
      {
        unknown i[267334] "index var" "insert auto destroy"
        (489743 'end of statement')
        (267336 'move' i[267334] _indexOfInterest[267308])
        (489744 'end of statement' i[267334])
        {
          unknown chunk[267201] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735268] "expr temp" "maybe param" "maybe type" "temp"
          (735271 'move' call_tmp[735268](466574 'query' r[267036] 1))
          unknown call_tmp[735273] "expr temp" "maybe param" "maybe type" "temp"
          (735276 'move' call_tmp[735273](267199 call * 2 call_tmp[735268]))
          (548664 'default init var' chunk[267201] call_tmp[735273])
          (267204 'end of statement')
          {
            unknown tmp[267280] "expr temp" "maybe param" "maybe type" "temp"
            (267282 'move' tmp[267280] remPol[267047])
            unknown call_tmp[735278] "expr temp" "maybe param" "maybe type" "temp"
            (735281 'move' call_tmp[735278](267284 call == tmp[267280] Thru[266377]))
            unknown call_tmp[735283] "expr temp" "maybe param" "maybe type" "temp"
            (735286 'move' call_tmp[735283](267287 call _cond_test call_tmp[735278]))
            if call_tmp[735283]
            {
              unknown call_tmp[735288] "expr temp" "maybe param" "maybe type" "temp"
              (735291 'move' call_tmp[735288](267216 call chunkOrderThru nElems[267080] nChunks[267092] i[267334]))
              (267217 call = chunk[267201] call_tmp[735288])
              (489746 'end of statement' chunk[267201] nElems[267080] nChunks[267092] i[267334])
            }
            {
              unknown call_tmp[735293] "expr temp" "maybe param" "maybe type" "temp"
              (735296 'move' call_tmp[735293](267290 call == tmp[267280] Pack[266379]))
              unknown call_tmp[735298] "expr temp" "maybe param" "maybe type" "temp"
              (735301 'move' call_tmp[735298](267293 call _cond_test call_tmp[735293]))
              if call_tmp[735298]
              {
                unknown call_tmp[735303] "expr temp" "maybe param" "maybe type" "temp"
                (735306 'move' call_tmp[735303](267231 call chunkOrderPack chunkSize[267096] nElems[267080] i[267334]))
                (267232 call = chunk[267201] call_tmp[735303])
                (489751 'end of statement' chunk[267201] chunkSize[267096] nElems[267080] i[267334])
              }
              {
                unknown call_tmp[735308] "expr temp" "maybe param" "maybe type" "temp"
                (735311 'move' call_tmp[735308](267297 call == tmp[267280] Mod[266381]))
                unknown call_tmp[735313] "expr temp" "maybe param" "maybe type" "temp"
                (735316 'move' call_tmp[735313](267300 call _cond_test call_tmp[735308]))
                if call_tmp[735313]
                {
                  unknown call_tmp[735318] "expr temp" "maybe param" "maybe type" "temp"
                  (735321 'move' call_tmp[735318](267248 call chunkOrderMod chunkSize[267096] rem[267100] nElems[267080] nChunks[267092] i[267334]))
                  (267249 call = chunk[267201] call_tmp[735318])
                  (489756 'end of statement' chunk[267201] chunkSize[267096] rem[267100] nElems[267080] nChunks[267092] i[267334])
                }
                {
                  (267274 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537400] "YVV" "temp"
          unknown call_tmp[735323] "expr temp" "maybe param" "maybe type" "temp"
          (735326 'move' call_tmp[735323](537405 'query' r[267036] 1))
          unknown call_tmp[735328] "expr temp" "maybe param" "maybe type" "temp"
          (735331 'move' call_tmp[735328](537403 call * 2 call_tmp[735323]))
          (537409 'move' yret[537400](537408 'coerce' chunk[267201] call_tmp[735328]))
          (537411 yield yret[537400])
          (489764 'end of statement' chunk[267201])
        }
        label _continueLabel[267313]
        _indexOfInterest[267308]
        _iterator[267309]
      }
      label _breakLabel[267314]
    }
    label _end_chunksOrder[537392]
    (537396 return ret[537394])
  }
  where {
    unknown call_tmp[735333] "expr temp" "maybe param" "maybe type" "temp"
    (735336 'move' call_tmp[735333](466580 'query' r[267036] 2))
    unknown call_tmp[735338] "expr temp" "maybe param" "maybe type" "temp"
    (735341 'move' call_tmp[735338](466584 call == bounded[64205] call_tmp[735333]))
    (466588 call & 1 call_tmp[735338])
  }
  { scopeless type
    unknown call_tmp[735343] "expr temp" "maybe param" "maybe type" "temp"
    (735346 'move' call_tmp[735343](466577 'query' r[267036] 1))
    (267053 call * 2 call_tmp[735343])
  }
  function chunkOrder[267363](arg r[267360]:range[64316](?), arg numChunks[267366]:integral[199](?), arg idx[267370]:integral[199](?), arg remPol[267375]:RemElems[266383] =
  Thru[266377]) : _unknown[51] "compiler added where"
  {
    unknown ret[537415] "RVV" "temp"
    unknown tmp[434098] "maybe param" "temp"
    unknown tmp[434119] "maybe param" "temp"
    unknown tmp[434140] "maybe param" "temp"
    unknown call_tmp[735350] "expr temp" "maybe param" "maybe type" "temp"
    (735353 'move' call_tmp[735350](267384 call size _mt[243] r[267360]))
    (434151 'move' tmp[434140](267388 call == call_tmp[735350] 0))
    unknown call_tmp[735355] "expr temp" "maybe param" "maybe type" "temp"
    (735358 'move' call_tmp[735355](434153 call _cond_invalid tmp[434140]))
    if call_tmp[735355]
    {
      (434156 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579316] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579317] "maybe param" "temp"
    unknown call_tmp[735360] "expr temp" "maybe param" "maybe type" "temp"
    (735363 'move' call_tmp[735360](434141 call isTrue tmp[434140]))
    (579322 'move' tmp[579317](579320 call _cond_test call_tmp[735360]))
    if tmp[579317]
    {
      (579327 'move' tmp[579316](579324 '_paramFoldLogical' tmp[579317] 1))
    }
    {
      unknown tmp[579329] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735365] "expr temp" "maybe param" "maybe type" "temp"
      (735368 'move' call_tmp[735365](267392 call <= numChunks[267366] 0))
      (579331 'move' tmp[579329](434145 call isTrue call_tmp[735365]))
      (579336 'move' tmp[579316](579333 '_paramFoldLogical' tmp[579317] tmp[579329]))
    }
    (434130 'move' tmp[434119] tmp[579316])
    unknown call_tmp[735370] "expr temp" "maybe param" "maybe type" "temp"
    (735373 'move' call_tmp[735370](434132 call _cond_invalid tmp[434119]))
    if call_tmp[735370]
    {
      (434135 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579343] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579344] "maybe param" "temp"
    unknown call_tmp[735375] "expr temp" "maybe param" "maybe type" "temp"
    (735378 'move' call_tmp[735375](434120 call isTrue tmp[434119]))
    (579349 'move' tmp[579344](579347 call _cond_test call_tmp[735375]))
    if tmp[579344]
    {
      (579354 'move' tmp[579343](579351 '_paramFoldLogical' tmp[579344] 1))
    }
    {
      unknown tmp[579356] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735380] "expr temp" "maybe param" "maybe type" "temp"
      (735383 'move' call_tmp[735380](267398 call < idx[267370] 0))
      (579358 'move' tmp[579356](434124 call isTrue call_tmp[735380]))
      (579363 'move' tmp[579343](579360 '_paramFoldLogical' tmp[579344] tmp[579356]))
    }
    (434109 'move' tmp[434098] tmp[579343])
    unknown call_tmp[735385] "expr temp" "maybe param" "maybe type" "temp"
    (735388 'move' call_tmp[735385](434111 call _cond_invalid tmp[434098]))
    if call_tmp[735385]
    {
      (434114 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579370] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579371] "maybe param" "temp"
    unknown call_tmp[735390] "expr temp" "maybe param" "maybe type" "temp"
    (735393 'move' call_tmp[735390](434099 call isTrue tmp[434098]))
    (579376 'move' tmp[579371](579374 call _cond_test call_tmp[735390]))
    if tmp[579371]
    {
      (579381 'move' tmp[579370](579378 '_paramFoldLogical' tmp[579371] 1))
    }
    {
      unknown tmp[579383] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735395] "expr temp" "maybe param" "maybe type" "temp"
      (735398 'move' call_tmp[735395](267404 call >= idx[267370] numChunks[267366]))
      (579385 'move' tmp[579383](434103 call isTrue call_tmp[735395]))
      (579390 'move' tmp[579370](579387 '_paramFoldLogical' tmp[579371] tmp[579383]))
    }
    unknown call_tmp[735400] "expr temp" "maybe param" "maybe type" "temp"
    (735403 'move' call_tmp[735400](267421 call _cond_test tmp[579370]))
    if call_tmp[735400]
    {
      unknown call_tmp[735405] "expr temp" "maybe param" "maybe type" "temp"
      (735408 'move' call_tmp[735405](466600 'query' r[267360] 1))
      unknown call_tmp[735410] "expr temp" "maybe param" "maybe type" "temp"
      (735413 'move' call_tmp[735410](267410 call _cast call_tmp[735405] 1))
      unknown call_tmp[735415] "expr temp" "maybe param" "maybe type" "temp"
      (735418 'move' call_tmp[735415](466603 'query' r[267360] 1))
      unknown call_tmp[735420] "expr temp" "maybe param" "maybe type" "temp"
      (735423 'move' call_tmp[735420](267414 call _cast call_tmp[735415] 0))
      unknown call_tmp[735425] "expr temp" "maybe param" "maybe type" "temp"
      (735428 'move' call_tmp[735425](267417 call _build_tuple call_tmp[735410] call_tmp[735420]))
      unknown call_tmp[735430] "expr temp" "maybe param" "maybe type" "temp"
      (735433 'move' call_tmp[735430](537422 'query' r[267360] 1))
      unknown call_tmp[735435] "expr temp" "maybe param" "maybe type" "temp"
      (735438 'move' call_tmp[735435](537420 call * 2 call_tmp[735430]))
      (537426 'move' ret[537415](537425 'coerce' call_tmp[735425] call_tmp[735435]))
      gotoReturn _end_chunkOrder[537413] _end_chunkOrder[537413]
    }
    unknown call_tmp[735442] "maybe param" "maybe type" "temp"
    (735445 'move' call_tmp[735442](267428 call size _mt[243] r[267360]))
    const nElems[267431] "dead at end of block" "const" "insert auto destroy"
    (548666 'init var' nElems[267431] call_tmp[735442])
    (267434 'end of statement')
    unknown call_tmp[735447] "expr temp" "maybe param" "maybe type" "temp"
    (735450 'move' call_tmp[735447](466606 'query' r[267360] 1))
    unknown call_tmp[735452] "expr temp" "maybe param" "maybe type" "temp"
    (735455 'move' call_tmp[735452](267439 call min numChunks[267366] nElems[267431]))
    unknown call_tmp[735457] "maybe param" "maybe type" "temp"
    (735460 'move' call_tmp[735457](267441 call _cast call_tmp[735447] call_tmp[735452]))
    const nChunks[267443] "dead at end of block" "const" "insert auto destroy"
    (548668 'init var' nChunks[267443] call_tmp[735457])
    (267446 'end of statement')
    unknown call_tmp[735462] "expr temp" "maybe param" "maybe type" "temp"
    (735465 'move' call_tmp[735462](466609 'query' r[267360] 1))
    unknown call_tmp[735467] "maybe param" "maybe type" "temp"
    (735470 'move' call_tmp[735467](267449 call _cast call_tmp[735462] idx[267370]))
    const i[267451] "dead at end of block" "const" "insert auto destroy"
    (548670 'init var' i[267451] call_tmp[735467])
    (267454 'end of statement' nElems[267431])
    {
      unknown tmp[267567] "expr temp" "maybe param" "maybe type" "temp"
      (267569 'move' tmp[267567] remPol[267375])
      unknown call_tmp[735472] "expr temp" "maybe param" "maybe type" "temp"
      (735475 'move' call_tmp[735472](267571 call == tmp[267567] Thru[266377]))
      unknown call_tmp[735477] "expr temp" "maybe param" "maybe type" "temp"
      (735480 'move' call_tmp[735477](267574 call _cond_test call_tmp[735472]))
      if call_tmp[735477]
      {
        unknown call_tmp[735482] "expr temp" "maybe param" "maybe type" "temp"
        (735485 'move' call_tmp[735482](267464 call chunkOrderThru nElems[267431] nChunks[267443] i[267451]))
        unknown call_tmp[735487] "expr temp" "maybe param" "maybe type" "temp"
        (735490 'move' call_tmp[735487](537433 'query' r[267360] 1))
        unknown call_tmp[735492] "expr temp" "maybe param" "maybe type" "temp"
        (735495 'move' call_tmp[735492](537431 call * 2 call_tmp[735487]))
        (537437 'move' ret[537415](537436 'coerce' call_tmp[735482] call_tmp[735492]))
        gotoReturn _end_chunkOrder[537413] _end_chunkOrder[537413]
        (489771 'end of statement' nElems[267431] nChunks[267443] i[267451])
      }
      {
        unknown call_tmp[735497] "expr temp" "maybe param" "maybe type" "temp"
        (735500 'move' call_tmp[735497](267577 call == tmp[267567] Pack[266379]))
        unknown call_tmp[735502] "expr temp" "maybe param" "maybe type" "temp"
        (735505 'move' call_tmp[735502](267580 call _cond_test call_tmp[735497]))
        if call_tmp[735502]
        {
          unknown call_tmp[735507] "maybe param" "maybe type" "temp"
          (735510 'move' call_tmp[735507](267474 call / nElems[267431] nChunks[267443]))
          unknown chunkSize[267476] "dead at end of block" "insert auto destroy"
          (548672 'init var' chunkSize[267476] call_tmp[735507])
          (267479 'end of statement' nElems[267431] nChunks[267443])
          unknown call_tmp[735512] "expr temp" "maybe param" "maybe type" "temp"
          (735515 'move' call_tmp[735512](267483 call * chunkSize[267476] nChunks[267443]))
          unknown call_tmp[735517] "expr temp" "maybe param" "maybe type" "temp"
          (735520 'move' call_tmp[735517](267486 call != call_tmp[735512] nElems[267431]))
          unknown call_tmp[735522] "expr temp" "maybe param" "maybe type" "temp"
          (735525 'move' call_tmp[735522](267493 call _cond_test call_tmp[735517]))
          if call_tmp[735522]
          {
            (267490 call += chunkSize[267476] 1)
            (489777 'end of statement' chunkSize[267476])
          }
          unknown call_tmp[735527] "expr temp" "maybe param" "maybe type" "temp"
          (735530 'move' call_tmp[735527](267503 call chunkOrderPack chunkSize[267476] nElems[267431] i[267451]))
          unknown call_tmp[735532] "expr temp" "maybe param" "maybe type" "temp"
          (735535 'move' call_tmp[735532](537444 'query' r[267360] 1))
          unknown call_tmp[735537] "expr temp" "maybe param" "maybe type" "temp"
          (735540 'move' call_tmp[735537](537442 call * 2 call_tmp[735532]))
          (537448 'move' ret[537415](537447 'coerce' call_tmp[735527] call_tmp[735537]))
          gotoReturn _end_chunkOrder[537413] _end_chunkOrder[537413]
          (489779 'end of statement' chunkSize[267476] nElems[267431] i[267451])
        }
        {
          unknown call_tmp[735542] "expr temp" "maybe param" "maybe type" "temp"
          (735545 'move' call_tmp[735542](267584 call == tmp[267567] Mod[266381]))
          unknown call_tmp[735547] "expr temp" "maybe param" "maybe type" "temp"
          (735550 'move' call_tmp[735547](267587 call _cond_test call_tmp[735542]))
          if call_tmp[735547]
          {
            unknown call_tmp[735552] "maybe param" "maybe type" "temp"
            (735555 'move' call_tmp[735552](267512 call / nElems[267431] nChunks[267443]))
            const chunkSize[267514] "dead at end of block" "const" "insert auto destroy"
            (548674 'init var' chunkSize[267514] call_tmp[735552])
            (267517 'end of statement')
            unknown call_tmp[735557] "expr temp" "maybe param" "maybe type" "temp"
            (735560 'move' call_tmp[735557](267522 call * chunkSize[267514] nChunks[267443]))
            unknown call_tmp[735562] "maybe param" "maybe type" "temp"
            (735565 'move' call_tmp[735562](267524 call - nElems[267431] call_tmp[735557]))
            const rem[267526] "dead at end of block" "const" "insert auto destroy"
            (548676 'init var' rem[267526] call_tmp[735562])
            (267529 'end of statement' nElems[267431] nChunks[267443] nElems[267431] chunkSize[267514] nChunks[267443])
            unknown call_tmp[735567] "expr temp" "maybe param" "maybe type" "temp"
            (735570 'move' call_tmp[735567](267537 call chunkOrderMod chunkSize[267514] rem[267526] nElems[267431] nChunks[267443] i[267451]))
            unknown call_tmp[735572] "expr temp" "maybe param" "maybe type" "temp"
            (735575 'move' call_tmp[735572](537455 'query' r[267360] 1))
            unknown call_tmp[735577] "expr temp" "maybe param" "maybe type" "temp"
            (735580 'move' call_tmp[735577](537453 call * 2 call_tmp[735572]))
            (537459 'move' ret[537415](537458 'coerce' call_tmp[735567] call_tmp[735577]))
            gotoReturn _end_chunkOrder[537413] _end_chunkOrder[537413]
            (489788 'end of statement' chunkSize[267514] rem[267526] nElems[267431] nChunks[267443] i[267451])
          }
          {
            (267561 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537413]
    (537417 return ret[537415])
  }
  where {
    unknown call_tmp[735582] "expr temp" "maybe param" "maybe type" "temp"
    (735585 'move' call_tmp[735582](466615 'query' r[267360] 2))
    unknown call_tmp[735587] "expr temp" "maybe param" "maybe type" "temp"
    (735590 'move' call_tmp[735587](466619 call == bounded[64205] call_tmp[735582]))
    (466623 call & 1 call_tmp[735587])
  }
  { scopeless type
    unknown call_tmp[735592] "expr temp" "maybe param" "maybe type" "temp"
    (735595 'move' call_tmp[735592](466612 'query' r[267360] 1))
    (267381 call * 2 call_tmp[735592])
  }
  function chunkOrderThru[267602](arg nElems[267599]:_any[178](?), arg nChunks[267605] :
  (466629 'typeof' nElems[267599]), arg i[267609] :
  (466631 'typeof' nElems[267599])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537465] "RVV" "temp"
    unknown call_tmp[735597] "maybe param" "maybe type" "temp"
    (735600 'move' call_tmp[735597](267619 call * nElems[267599] i[267609]))
    const m[267621] "dead at end of block" "const" "insert auto destroy"
    (548678 'init var' m[267621] call_tmp[735597])
    (267624 'end of statement')
    const start[267642] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579397] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579398] "maybe param" "temp"
    unknown call_tmp[735602] "expr temp" "maybe param" "maybe type" "temp"
    (735605 'move' call_tmp[735602](267628 call == i[267609] 0))
    (579403 'move' tmp[579398](579401 call _cond_test call_tmp[735602]))
    if tmp[579398]
    {
      unknown tmp[579405] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735607] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735610 'move' call_tmp[735607](466633 'typeof' nElems[267599]))
      (579407 'move' tmp[579405](267632 call _cast call_tmp[735607] 0))
      (579412 'move' tmp[579397](579409 '_paramFoldLogical' tmp[579398] tmp[579405]))
    }
    {
      unknown tmp[579414] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579416 'move' tmp[579414](267638 call divceil m[267621] nChunks[267605]))
      (579421 'move' tmp[579397](579418 '_paramFoldLogical' tmp[579398] tmp[579414]))
    }
    (548680 'init var' start[267642] tmp[579397])
    (267645 'end of statement')
    const end[267671] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579428] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579429] "maybe param" "temp"
    unknown call_tmp[735612] "expr temp" "maybe param" "maybe type" "temp"
    (735615 'move' call_tmp[735612](267649 call - nChunks[267605] 1))
    unknown call_tmp[735617] "expr temp" "maybe param" "maybe type" "temp"
    (735620 'move' call_tmp[735617](267651 call == i[267609] call_tmp[735612]))
    (579434 'move' tmp[579429](579432 call _cond_test call_tmp[735617]))
    if tmp[579429]
    {
      unknown tmp[579436] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579438 'move' tmp[579436](267655 call - nElems[267599] 1))
      (579443 'move' tmp[579428](579440 '_paramFoldLogical' tmp[579429] tmp[579436]))
    }
    {
      unknown tmp[579445] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735622] "expr temp" "maybe param" "maybe type" "temp"
      (735625 'move' call_tmp[735622](267660 call + m[267621] nElems[267599]))
      unknown call_tmp[735627] "expr temp" "maybe param" "maybe type" "temp"
      (735630 'move' call_tmp[735627](267664 call divceil call_tmp[735622] nChunks[267605]))
      (579447 'move' tmp[579445](267666 call - call_tmp[735627] 1))
      (579452 'move' tmp[579428](579449 '_paramFoldLogical' tmp[579429] tmp[579445]))
    }
    (548682 'init var' end[267671] tmp[579428])
    (267674 'end of statement' m[267621] m[267621])
    unknown call_tmp[735632] "expr temp" "maybe param" "maybe type" "temp"
    (735635 'move' call_tmp[735632](267678 call _build_tuple start[267642] end[267671]))
    unknown call_tmp[735637] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735640 'move' call_tmp[735637](537471 'typeof' nElems[267599]))
    unknown call_tmp[735642] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735645 'move' call_tmp[735642](537473 'typeof' nElems[267599]))
    unknown call_tmp[735647] "expr temp" "maybe param" "maybe type" "temp"
    (735650 'move' call_tmp[735647](537470 call _build_tuple call_tmp[735637] call_tmp[735642]))
    (537476 'move' ret[537465](537475 'coerce' call_tmp[735632] call_tmp[735647]))
    gotoReturn _end_chunkOrderThru[537463] _end_chunkOrderThru[537463]
    (489797 'end of statement' start[267642] end[267671])
    label _end_chunkOrderThru[537463]
    (537467 return ret[537465])
  }
  { scopeless type
    unknown call_tmp[735652] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735655 'move' call_tmp[735652](466635 'typeof' nElems[267599]))
    unknown call_tmp[735657] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735660 'move' call_tmp[735657](466637 'typeof' nElems[267599]))
    (267615 call _build_tuple call_tmp[735652] call_tmp[735657])
  }
  function chunkOrderPack[267692](arg chunkSize[267689]:_any[178](?), arg nElems[267695] :
  (466639 'typeof' chunkSize[267689]), arg i[267699] :
  (466641 'typeof' chunkSize[267689])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537482] "RVV" "temp"
    unknown call_tmp[735662] "maybe param" "maybe type" "temp"
    (735665 'move' call_tmp[735662](267709 call * chunkSize[267689] i[267699]))
    const start[267711] "dead at end of block" "const" "insert auto destroy"
    (548684 'init var' start[267711] call_tmp[735662])
    (267714 'end of statement')
    unknown call_tmp[735667] "expr temp" "maybe param" "maybe type" "temp"
    (735670 'move' call_tmp[735667](267718 call >= start[267711] nElems[267695]))
    unknown call_tmp[735672] "expr temp" "maybe param" "maybe type" "temp"
    (735675 'move' call_tmp[735672](267733 call _cond_test call_tmp[735667]))
    if call_tmp[735672]
    {
      unknown call_tmp[735677] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735680 'move' call_tmp[735677](466643 'typeof' chunkSize[267689]))
      unknown call_tmp[735682] "expr temp" "maybe param" "maybe type" "temp"
      (735685 'move' call_tmp[735682](267722 call _cast call_tmp[735677] 1))
      unknown call_tmp[735687] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735690 'move' call_tmp[735687](466645 'typeof' chunkSize[267689]))
      unknown call_tmp[735692] "expr temp" "maybe param" "maybe type" "temp"
      (735695 'move' call_tmp[735692](267726 call _cast call_tmp[735687] 0))
      unknown call_tmp[735697] "expr temp" "maybe param" "maybe type" "temp"
      (735700 'move' call_tmp[735697](267729 call _build_tuple call_tmp[735682] call_tmp[735692]))
      unknown call_tmp[735702] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735705 'move' call_tmp[735702](537488 'typeof' chunkSize[267689]))
      unknown call_tmp[735707] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735710 'move' call_tmp[735707](537490 'typeof' chunkSize[267689]))
      unknown call_tmp[735712] "expr temp" "maybe param" "maybe type" "temp"
      (735715 'move' call_tmp[735712](537487 call _build_tuple call_tmp[735702] call_tmp[735707]))
      (537493 'move' ret[537482](537492 'coerce' call_tmp[735697] call_tmp[735712]))
      gotoReturn _end_chunkOrderPack[537480] _end_chunkOrderPack[537480]
    }
    unknown call_tmp[735717] "expr temp" "maybe param" "maybe type" "temp"
    (735720 'move' call_tmp[735717](267740 call + start[267711] chunkSize[267689]))
    unknown call_tmp[735722] "maybe param" "maybe type" "temp"
    (735725 'move' call_tmp[735722](267743 call - call_tmp[735717] 1))
    unknown end[267745] "dead at end of block" "insert auto destroy"
    (548686 'init var' end[267745] call_tmp[735722])
    (267748 'end of statement' start[267711])
    unknown call_tmp[735727] "expr temp" "maybe param" "maybe type" "temp"
    (735730 'move' call_tmp[735727](267751 call >= end[267745] nElems[267695]))
    unknown call_tmp[735732] "expr temp" "maybe param" "maybe type" "temp"
    (735735 'move' call_tmp[735732](267761 call _cond_test call_tmp[735727]))
    if call_tmp[735732]
    {
      unknown call_tmp[735737] "expr temp" "maybe param" "maybe type" "temp"
      (735740 'move' call_tmp[735737](267756 call - nElems[267695] 1))
      (267758 call = end[267745] call_tmp[735737])
      (489802 'end of statement' end[267745])
    }
    unknown call_tmp[735742] "expr temp" "maybe param" "maybe type" "temp"
    (735745 'move' call_tmp[735742](267769 call _build_tuple start[267711] end[267745]))
    unknown call_tmp[735747] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735750 'move' call_tmp[735747](537499 'typeof' chunkSize[267689]))
    unknown call_tmp[735752] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735755 'move' call_tmp[735752](537501 'typeof' chunkSize[267689]))
    unknown call_tmp[735757] "expr temp" "maybe param" "maybe type" "temp"
    (735760 'move' call_tmp[735757](537498 call _build_tuple call_tmp[735747] call_tmp[735752]))
    (537504 'move' ret[537482](537503 'coerce' call_tmp[735742] call_tmp[735757]))
    gotoReturn _end_chunkOrderPack[537480] _end_chunkOrderPack[537480]
    (489804 'end of statement' start[267711] end[267745])
    label _end_chunkOrderPack[537480]
    (537484 return ret[537482])
  }
  { scopeless type
    unknown call_tmp[735762] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735765 'move' call_tmp[735762](466647 'typeof' chunkSize[267689]))
    unknown call_tmp[735767] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735770 'move' call_tmp[735767](466649 'typeof' chunkSize[267689]))
    (267705 call _build_tuple call_tmp[735762] call_tmp[735767])
  }
  function chunkOrderMod[267783](arg chunkSize[267780]:_any[178](?), arg rem[267786] :
  (466651 'typeof' chunkSize[267780]), arg nElems[267790] :
  (466653 'typeof' chunkSize[267780]), arg nChunks[267794] :
  (466655 'typeof' chunkSize[267780]), arg i[267798] :
  (466657 'typeof' chunkSize[267780])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537510] "RVV" "temp"
    unknown start[267806] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735772] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735775 'move' call_tmp[735772](466659 'typeof' chunkSize[267780]))
    (548688 'default init var' start[267806] call_tmp[735772])
    unknown end[267810] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548690] "maybe param" "maybe type" "temp"
    (548697 'move' type_tmp[548690](548695 'typeof' start[267806]))
    (548692 'init var split decl' end[267810] type_tmp[548690])
    (267815 'end of statement' start[267806])
    unknown call_tmp[735777] "expr temp" "maybe param" "maybe type" "temp"
    (735780 'move' call_tmp[735777](267819 call < i[267798] rem[267786]))
    unknown call_tmp[735782] "expr temp" "maybe param" "maybe type" "temp"
    (735785 'move' call_tmp[735782](267867 call _cond_test call_tmp[735777]))
    if call_tmp[735782]
    {
      unknown call_tmp[735787] "expr temp" "maybe param" "maybe type" "temp"
      (735790 'move' call_tmp[735787](267825 call + chunkSize[267780] 1))
      unknown call_tmp[735792] "expr temp" "maybe param" "maybe type" "temp"
      (735795 'move' call_tmp[735792](267827 call * i[267798] call_tmp[735787]))
      (267829 call = start[267806] call_tmp[735792])
      (489808 'end of statement' start[267806])
      unknown call_tmp[735797] "maybe param" "maybe type" "temp"
      (735800 'move' call_tmp[735797](267836 call + start[267806] chunkSize[267780]))
      (548699 'init var split init' end[267810] call_tmp[735797] type_tmp[548690])
      (489810 'end of statement' end[267810] start[267806])
    }
    {
      unknown call_tmp[735802] "expr temp" "maybe param" "maybe type" "temp"
      (735805 'move' call_tmp[735802](267845 call - nChunks[267794] i[267798]))
      unknown call_tmp[735807] "expr temp" "maybe param" "maybe type" "temp"
      (735810 'move' call_tmp[735807](267848 call * call_tmp[735802] chunkSize[267780]))
      unknown call_tmp[735812] "expr temp" "maybe param" "maybe type" "temp"
      (735815 'move' call_tmp[735812](267850 call - nElems[267790] call_tmp[735807]))
      (267852 call = start[267806] call_tmp[735812])
      (489813 'end of statement' start[267806])
      unknown call_tmp[735817] "expr temp" "maybe param" "maybe type" "temp"
      (735820 'move' call_tmp[735817](267859 call + start[267806] chunkSize[267780]))
      unknown call_tmp[735822] "maybe param" "maybe type" "temp"
      (735825 'move' call_tmp[735822](267862 call - call_tmp[735817] 1))
      (548702 'init var split init' end[267810] call_tmp[735822] type_tmp[548690])
      (489815 'end of statement' end[267810] start[267806])
    }
    unknown call_tmp[735827] "expr temp" "maybe param" "maybe type" "temp"
    (735830 'move' call_tmp[735827](267874 call _build_tuple start[267806] end[267810]))
    unknown call_tmp[735832] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735835 'move' call_tmp[735832](537516 'typeof' chunkSize[267780]))
    unknown call_tmp[735837] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735840 'move' call_tmp[735837](537518 'typeof' chunkSize[267780]))
    unknown call_tmp[735842] "expr temp" "maybe param" "maybe type" "temp"
    (735845 'move' call_tmp[735842](537515 call _build_tuple call_tmp[735832] call_tmp[735837]))
    (537521 'move' ret[537510](537520 'coerce' call_tmp[735827] call_tmp[735842]))
    gotoReturn _end_chunkOrderMod[537508] _end_chunkOrderMod[537508]
    (489818 'end of statement' start[267806] end[267810])
    label _end_chunkOrderMod[537508]
    (537512 return ret[537510])
  }
  { scopeless type
    unknown call_tmp[735847] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735850 'move' call_tmp[735847](466661 'typeof' chunkSize[267780]))
    unknown call_tmp[735852] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735855 'move' call_tmp[735852](466663 'typeof' chunkSize[267780]))
    (267804 call _build_tuple call_tmp[735847] call_tmp[735852])
  }
  (355381 'used modules list'(353073 'use' ChapelStandard[20264])(266388 'use' RemElems[266383])(266391 'use' BoundedRangeType[64213]))
}