AST dump for ChapelTuple after pass loopInvariantCodeMotion.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415986]() : void[4] "insert line file info" "module init" "resolved"
  {
    (509015 return _void[55])
  }
  function 57*int(64)[1210504].this[1211622](ref arg this[1211628]:57*int(64)[1210504], const in arg i[1211630]:int(64)[13]) ref : _ref(int(64))[936591] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "star tuple accessor"
  {
    const-val local__str_literal_779[2331549]:string[26] "temp"
    (2331550 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    const-val call_tmp[2079866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079868 'move' call_tmp[2079866](2079870 '<' i[1211630] 0))
    val tmp[1211699]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2079866]
    {
      (1211717 'move' tmp[1211699] 1)
    }
    {
      const-val call_tmp[2087961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087963 'move' call_tmp[2087961](2087965 '>' i[1211630] 56))
      (1211754 'move' tmp[1211699] call_tmp[2087961])
    }
    if tmp[1211699]
    {
      (1211770 call halt[1212271] "tuple access out of bounds: " i[1211630])
    }
    ref call_tmp[1211775]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1211777 'move' call_tmp[1211775](1211779 'get svec member' this[1211628] i[1211630]))
    (1211786 return call_tmp[1211775])
  }
  function 1*range(int(64),bounded,false)[1244715].this[1382675](ref arg this[1382681]:1*range(int(64),bounded,false)[1244715], const in arg i[1382683]:int(64)[13]) ref : _ref(range(int(64),bounded,false))[1026877] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val local__str_literal_779[2332141]:string[26] "temp"
    (2332142 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    const-val call_tmp[2079916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079918 'move' call_tmp[2079916](2079920 '<' i[1382683] 0))
    val tmp[1382752]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2079916]
    {
      (1382770 'move' tmp[1382752] 1)
    }
    {
      const-val call_tmp[2088321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2088323 'move' call_tmp[2088321](2088325 '>' i[1382683] 0))
      (1382807 'move' tmp[1382752] call_tmp[2088321])
    }
    if tmp[1382752]
    {
      (1382823 call halt[1212271] "tuple access out of bounds: " i[1382683])
    }
    ref call_tmp[1382828]:range(int(64),bounded,false)[1026833] "dead after last mention" "maybe param" "temp"
    (1382830 'move' call_tmp[1382828](1382832 'get svec member' this[1382681] i[1382683]))
    (1382839 return call_tmp[1382828])
  }
  function 1*range(int(64),bounded,false)[1244715].indices[1746061](const  ref arg this[1746067]:1*range(int(64),bounded,false)[1244715], ref arg _retArg[1814604]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1746093]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1805152]:range(int(64),bounded,false)[1026833] "temp"
    (1746098 call chpl_build_bounded_range[455175] 0 0 ret_tmp[1805152])
    (1805155 'move' call_tmp[1746093] ret_tmp[1805152])
    (1814606 '=' _retArg[1814604] call_tmp[1746093])
    (1814608 return _void[55])
  }
  type (c_ptr(uint(8)),int(64))[955227] val x0[955223]:c_ptr(uint(8))[937442] val x1[955225]:int(64)[13]
  type 1*c_string[959481] val x0[959479]:c_string[19]
  type (syserr,int(32),int(32))[964639] val x0[964633]:syserr[223603] val x1[964635]:int(32)[95] val x2[964637]:int(32)[95]
  type 2*int(32)[971697] val x0[971693]:int(32)[95] val x1[971695]:int(32)[95]
  type 6*string[985070] const-ref x0[985058]:string[26] const-ref x1[985060]:string[26] const-ref x2[985062]:string[26] const-ref x3[985064]:string[26] const-ref x4[985066]:string[26] const-ref x5[985068]:string[26]
  type 6*string[985236] val x0[985224]:string[26] val x1[985226]:string[26] val x2[985228]:string[26] val x3[985230]:string[26] val x4[985232]:string[26] val x5[985234]:string[26]
  type 2*int(64)[1040075] val x0[1040071]:int(64)[13] val x1[1040073]:int(64)[13]
  type (string,range(byteIndex,bounded,false),string,int(64))[1044420] const-ref x0[1044412]:string[26] val x1[1044414]:range(byteIndex,bounded,false)[1025811] const-ref x2[1044416]:string[26] val x3[1044418]:int(64)[13]
  type 1*byteIndex[1057100] const-ref x0[1057098]:byteIndex[28173]
  type (range(int(64),bounded,false),int(64))[1084943] val x0[1084939]:range(int(64),bounded,false)[1026833] val x1[1084941]:int(64)[13]
  type (_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] val x0[1108581]:_ic_these_range_int64_t_bounded_F[1096722] val x1[1108583]:_ic_chpl_bytes__ref_string[1108275]
  type (int(64),uint(8))[1111059] val x0[1111055]:int(64)[13] val x1[1111057]:uint(8)[100]
  type (string,range(int(64),bounded,false),string,int(64))[1114238] const-ref x0[1114230]:string[26] val x1[1114232]:range(int(64),bounded,false)[1026833] const-ref x2[1114234]:string[26] val x3[1114236]:int(64)[13]
  type (byteIndex,int(64))[1121252] const-ref x0[1121248]:byteIndex[28173] val x1[1121250]:int(64)[13]
  type (int(32),byteIndex,int(64))[1122161] val x0[1122155]:int(32)[95] const-ref x1[1122157]:byteIndex[28173] val x2[1122159]:int(64)[13]
  type (string,range(int(64),boundedLow,false),string,int(64))[1129062] const-ref x0[1129054]:string[26] val x1[1129056]:range(int(64),boundedLow,false)[1087584] const-ref x2[1129058]:string[26] val x3[1129060]:int(64)[13]
  type (string,range(byteIndex,boundedLow,false),string,int(64))[1147233] const-ref x0[1147225]:string[26] val x1[1147227]:range(byteIndex,boundedLow,false)[1143422] const-ref x2[1147229]:string[26] val x3[1147231]:int(64)[13]
  type (string,codepointIndex,string)[1158574] const-ref x0[1158568]:string[26] const-ref x1[1158570]:codepointIndex[28277] const-ref x2[1158572]:string[26]
  type (string,codepointIndex,string,int(64))[1176539] const-ref x0[1176531]:string[26] const-ref x1[1176533]:codepointIndex[28277] const-ref x2[1176535]:string[26] val x3[1176537]:int(64)[13]
  type (string,range(byteIndex,boundedHigh,false),string,int(64))[1191438] const-ref x0[1191430]:string[26] val x1[1191432]:range(byteIndex,boundedHigh,false)[1184938] const-ref x2[1191434]:string[26] val x3[1191436]:int(64)[13]
  type 57*int(64)[1210504] val x0[1210390]:int(64)[13] val x1[1210392]:int(64)[13] val x2[1210394]:int(64)[13] val x3[1210396]:int(64)[13] val x4[1210398]:int(64)[13] val x5[1210400]:int(64)[13] val x6[1210402]:int(64)[13] val x7[1210404]:int(64)[13] val x8[1210406]:int(64)[13] val x9[1210408]:int(64)[13] val x10[1210410]:int(64)[13] val x11[1210412]:int(64)[13] val x12[1210414]:int(64)[13] val x13[1210416]:int(64)[13] val x14[1210418]:int(64)[13] val x15[1210420]:int(64)[13] val x16[1210422]:int(64)[13] val x17[1210424]:int(64)[13] val x18[1210426]:int(64)[13] val x19[1210428]:int(64)[13] val x20[1210430]:int(64)[13] val x21[1210432]:int(64)[13] val x22[1210434]:int(64)[13] val x23[1210436]:int(64)[13] val x24[1210438]:int(64)[13] val x25[1210440]:int(64)[13] val x26[1210442]:int(64)[13] val x27[1210444]:int(64)[13] val x28[1210446]:int(64)[13] val x29[1210448]:int(64)[13] val x30[1210450]:int(64)[13] val x31[1210452]:int(64)[13] val x32[1210454]:int(64)[13] val x33[1210456]:int(64)[13] val x34[1210458]:int(64)[13] val x35[1210460]:int(64)[13] val x36[1210462]:int(64)[13] val x37[1210464]:int(64)[13] val x38[1210466]:int(64)[13] val x39[1210468]:int(64)[13] val x40[1210470]:int(64)[13] val x41[1210472]:int(64)[13] val x42[1210474]:int(64)[13] val x43[1210476]:int(64)[13] val x44[1210478]:int(64)[13] val x45[1210480]:int(64)[13] val x46[1210482]:int(64)[13] val x47[1210484]:int(64)[13] val x48[1210486]:int(64)[13] val x49[1210488]:int(64)[13] val x50[1210490]:int(64)[13] val x51[1210492]:int(64)[13] val x52[1210494]:int(64)[13] val x53[1210496]:int(64)[13] val x54[1210498]:int(64)[13] val x55[1210500]:int(64)[13] val x56[1210502]:int(64)[13]
  type (string,int(64))[1213680] const-ref x0[1213676]:string[26] val x1[1213678]:int(64)[13]
  type 1*range(int(64),bounded,false)[1244715] val x0[1244713]:range(int(64),bounded,false)[1026833]
  type 1*int(64)[1256544] val x0[1256542]:int(64)[13]
  type (bool,int(64))[1265151] val x0[1265147]:bool[10] val x1[1265149]:int(64)[13]
  type (string,int(64),string)[1273203] const-ref x0[1273197]:string[26] val x1[1273199]:int(64)[13] const-ref x2[1273201]:string[26]
  type (string,int(64),string,int(64),string)[1279716] const-ref x0[1279706]:string[26] val x1[1279708]:int(64)[13] const-ref x2[1279710]:string[26] val x3[1279712]:int(64)[13] const-ref x4[1279714]:string[26]
  type 4*string[1291856] const-ref x0[1291848]:string[26] const-ref x1[1291850]:string[26] const-ref x2[1291852]:string[26] const-ref x3[1291854]:string[26]
  type (string,string,int(64),string,range(int(64),bounded,false))[1338514] const-ref x0[1338504]:string[26] const-ref x1[1338506]:string[26] val x2[1338508]:int(64)[13] const-ref x3[1338510]:string[26] val x4[1338512]:range(int(64),bounded,false)[1026833]
  type (string,ioNewline)[1389119] const-ref x0[1389115]:string[26] const-ref x1[1389117]:ioNewline[238720]
  type (real(64),ioNewline)[1398991] val x0[1398987]:real(64)[16] const-ref x1[1398989]:ioNewline[238720]
  type (BaseArr,unmanaged BaseDom?)[1418084] val x0[1418080]:BaseArr[149584] val x1[1418082]:BaseDom[146767]
  type (unmanaged BaseDom?,unmanaged BaseDist?)[1418878] val x0[1418874]:BaseDom[146767] val x1[1418876]:BaseDist[145968]
}