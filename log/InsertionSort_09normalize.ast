AST dump for InsertionSort after pass normalize.
Module use list: ChapelStandard Sort ShallowCopy 

{
  function chpl__init_InsertionSort[416166]() : void[4] "insert line file info" "module init"
  {
    (537910 return _void[55])
  }
  function insertionSort[270129](arg Data[270126]:_array[133594](?), arg comparator[270134]:_any[178](?) :
  defaultComparator[267996] =
  defaultComparator[267996], arg lo[270143]:int(64)[13] =
  unknown call_tmp[737685] "expr temp" "maybe param" "maybe type" "temp", arg hi[270152]:int(64)[13] =
  unknown call_tmp[737694] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737703] "expr temp" "maybe param" "maybe type" "temp"
    (737706 'move' call_tmp[737703](466725 call eltType _mt[243] Data[270126]))
    (270160 call chpl_check_comparator comparator[270134] call_tmp[737703])
    (489937 'end of statement')
    unknown call_tmp[737710] "expr temp" "maybe param" "maybe type" "temp"
    (737713 'move' call_tmp[737710](466717 call _dom _mt[243] Data[270126]))
    unknown call_tmp[737717] "expr temp" "maybe param" "maybe type" "temp"
    (737720 'move' call_tmp[737717](270164 call rank _mt[243] call_tmp[737710]))
    unknown call_tmp[737722] "expr temp" "maybe param" "maybe type" "temp"
    (737725 'move' call_tmp[737722](270168 call != call_tmp[737717] 1))
    unknown call_tmp[737727] "expr temp" "maybe param" "maybe type" "temp"
    (737730 'move' call_tmp[737727](270192 call _cond_test call_tmp[737722]))
    if call_tmp[737727]
    {
      (270189 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270197] "dead at end of block" "const" "insert auto destroy"
    (548778 'init var' low[270197] lo[270143])
    const high[270201] "dead at end of block" "const" "insert auto destroy"
    (548780 'init var' high[270201] hi[270152])
    unknown call_tmp[737734] "expr temp" "maybe param" "maybe type" "temp"
    (737737 'move' call_tmp[737734](466721 call _dom _mt[243] Data[270126]))
    unknown call_tmp[737741] "expr temp" "maybe param" "maybe type" "temp"
    (737744 'move' call_tmp[737741](270206 call stride _mt[243] call_tmp[737734]))
    unknown call_tmp[737746] "maybe param" "maybe type" "temp"
    (737749 'move' call_tmp[737746](270210 call abs call_tmp[737741]))
    const stride[270211] "dead at end of block" "const" "insert auto destroy"
    (548782 'init var' stride[270211] call_tmp[737746])
    (270214 'end of statement')
    {
      unknown _indexOfInterest[270368] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270369] "expr temp" "temp"
      unknown call_tmp[737751] "expr temp" "maybe param" "maybe type" "temp"
      (737754 'move' call_tmp[737751](270387 call chpl_direct_range_iter low[270197] high[270201] stride[270211]))
      (270378 'move' _iterator[270369](270376 call _getIterator call_tmp[737751]))
      Defer
      {
        {
          (270403 call _freeIterator _iterator[270369])
        }
      }
      { scopeless type
        (270392 'move' _indexOfInterest[270368](270389 call iteratorIndex _iterator[270369]))
      }
      ForLoop[270370]
      {
        unknown i[270396] "index var" "insert auto destroy"
        (489940 'end of statement')
        (270398 'move' i[270396] _indexOfInterest[270368])
        (489941 'end of statement' i[270396])
        {
          unknown call_tmp[737756] "maybe param" "maybe type" "temp"
          (737759 'move' call_tmp[737756](270226 call Data[270126] i[270396]))
          unknown ithVal[270227] "dead at end of block" "insert auto destroy"
          (548784 'init var' ithVal[270227] call_tmp[737756])
          (270230 'end of statement')
          unknown inserted[270233] "dead at end of block" "insert auto destroy"
          (548786 'init var' inserted[270233] 0)
          (270236 'end of statement' i[270396])
          {
            unknown _indexOfInterest[270302] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270303] "expr temp" "temp"
            unknown call_tmp[737761] "expr temp" "maybe param" "maybe type" "temp"
            (737764 'move' call_tmp[737761](270326 call - i[270396] stride[270211]))
            unknown call_tmp[737766] "expr temp" "maybe param" "maybe type" "temp"
            (737769 'move' call_tmp[737766](270322 call - stride[270211]))
            unknown call_tmp[737771] "expr temp" "maybe param" "maybe type" "temp"
            (737774 'move' call_tmp[737771](270329 call chpl_direct_range_iter low[270197] call_tmp[737761] call_tmp[737766]))
            (270312 'move' _iterator[270303](270310 call _getIterator call_tmp[737771]))
            Defer
            {
              {
                (270345 call _freeIterator _iterator[270303])
              }
            }
            { scopeless type
              (270334 'move' _indexOfInterest[270302](270331 call iteratorIndex _iterator[270303]))
            }
            ForLoop[270304]
            {
              unknown j[270338] "index var" "insert auto destroy"
              (489945 'end of statement')
              (270340 'move' j[270338] _indexOfInterest[270302])
              (489946 'end of statement' j[270338])
              {
                unknown call_tmp[737776] "expr temp" "maybe param" "maybe type" "temp"
                (737779 'move' call_tmp[737776](270256 call Data[270126] j[270338]))
                unknown call_tmp[737781] "expr temp" "maybe param" "maybe type" "temp"
                (737784 'move' call_tmp[737781](270258 call chpl_compare ithVal[270227] call_tmp[737776] comparator[270134]))
                unknown call_tmp[737786] "expr temp" "maybe param" "maybe type" "temp"
                (737789 'move' call_tmp[737786](270260 call < call_tmp[737781] 0))
                unknown call_tmp[737791] "expr temp" "maybe param" "maybe type" "temp"
                (737794 'move' call_tmp[737791](270297 call _cond_test call_tmp[737786]))
                if call_tmp[737791]
                {
                  unknown call_tmp[737796] "expr temp" "maybe param" "maybe type" "temp"
                  (737799 'move' call_tmp[737796](270265 call + j[270338] stride[270211]))
                  unknown call_tmp[737801] "expr temp" "maybe param" "maybe type" "temp"
                  (737804 'move' call_tmp[737801](270268 call Data[270126] call_tmp[737796]))
                  unknown call_tmp[737806] "expr temp" "maybe param" "maybe type" "temp"
                  (737809 'move' call_tmp[737806](270272 call Data[270126] j[270338]))
                  (270273 call = call_tmp[737801] call_tmp[737806])
                  (489948 'end of statement' j[270338] stride[270211] j[270338])
                }
                {
                  unknown call_tmp[737811] "expr temp" "maybe param" "maybe type" "temp"
                  (737814 'move' call_tmp[737811](270280 call + j[270338] stride[270211]))
                  unknown call_tmp[737816] "expr temp" "maybe param" "maybe type" "temp"
                  (737819 'move' call_tmp[737816](270283 call Data[270126] call_tmp[737811]))
                  (270285 call = call_tmp[737816] ithVal[270227])
                  (489952 'end of statement' j[270338] stride[270211] ithVal[270227])
                  (270291 call = inserted[270233] 1)
                  (489956 'end of statement' inserted[270233])
                  break _breakLabel[270308] _breakLabel[270308]
                }
              }
              label _continueLabel[270307]
              _indexOfInterest[270302]
              _iterator[270303]
            }
            label _breakLabel[270308]
          }
          unknown call_tmp[737821] "expr temp" "maybe param" "maybe type" "temp"
          (737824 'move' call_tmp[737821](270353 call ! inserted[270233]))
          unknown call_tmp[737826] "expr temp" "maybe param" "maybe type" "temp"
          (737829 'move' call_tmp[737826](270364 call _cond_test call_tmp[737821]))
          if call_tmp[737826]
          {
            unknown call_tmp[737831] "expr temp" "maybe param" "maybe type" "temp"
            (737834 'move' call_tmp[737831](270358 call Data[270126] low[270197]))
            (270360 call = call_tmp[737831] ithVal[270227])
            (489958 'end of statement' low[270197] ithVal[270227])
          }
        }
        label _continueLabel[270373]
        _indexOfInterest[270368]
        _iterator[270369]
      }
      label _breakLabel[270374]
    }
    (537906 return _void[55])
  }
  function insertionSortMoveElts[270424](arg Data[270421]:_array[133594](?), arg comparator[270429]:_any[178](?) :
  defaultComparator[267996] =
  defaultComparator[267996], arg lo[270438]:int(64)[13] =
  unknown call_tmp[737838] "expr temp" "maybe param" "maybe type" "temp", arg hi[270447]:int(64)[13] =
  unknown call_tmp[737847] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737856] "expr temp" "maybe param" "maybe type" "temp"
    (737859 'move' call_tmp[737856](466747 call eltType _mt[243] Data[270421]))
    (270455 call chpl_check_comparator comparator[270429] call_tmp[737856])
    (489961 'end of statement')
    unknown call_tmp[737863] "expr temp" "maybe param" "maybe type" "temp"
    (737866 'move' call_tmp[737863](466739 call _dom _mt[243] Data[270421]))
    unknown call_tmp[737870] "expr temp" "maybe param" "maybe type" "temp"
    (737873 'move' call_tmp[737870](270459 call rank _mt[243] call_tmp[737863]))
    unknown call_tmp[737875] "expr temp" "maybe param" "maybe type" "temp"
    (737878 'move' call_tmp[737875](270463 call != call_tmp[737870] 1))
    unknown call_tmp[737880] "expr temp" "maybe param" "maybe type" "temp"
    (737883 'move' call_tmp[737880](270471 call _cond_test call_tmp[737875]))
    if call_tmp[737880]
    {
      (270468 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270476] "dead at end of block" "const" "insert auto destroy"
    (548788 'init var' low[270476] lo[270438])
    const high[270480] "dead at end of block" "const" "insert auto destroy"
    (548790 'init var' high[270480] hi[270447])
    unknown call_tmp[737887] "expr temp" "maybe param" "maybe type" "temp"
    (737890 'move' call_tmp[737887](466743 call _dom _mt[243] Data[270421]))
    unknown call_tmp[737894] "expr temp" "maybe param" "maybe type" "temp"
    (737897 'move' call_tmp[737894](270485 call stride _mt[243] call_tmp[737887]))
    unknown call_tmp[737899] "maybe param" "maybe type" "temp"
    (737902 'move' call_tmp[737899](270489 call abs call_tmp[737894]))
    const stride[270490] "dead at end of block" "const" "insert auto destroy"
    (548792 'init var' stride[270490] call_tmp[737899])
    (270493 'end of statement')
    {
      unknown _indexOfInterest[270669] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270670] "expr temp" "temp"
      unknown call_tmp[737904] "expr temp" "maybe param" "maybe type" "temp"
      (737907 'move' call_tmp[737904](270688 call chpl_direct_range_iter low[270476] high[270480] stride[270490]))
      (270679 'move' _iterator[270670](270677 call _getIterator call_tmp[737904]))
      Defer
      {
        {
          (270704 call _freeIterator _iterator[270670])
        }
      }
      { scopeless type
        (270693 'move' _indexOfInterest[270669](270690 call iteratorIndex _iterator[270670]))
      }
      ForLoop[270671]
      {
        unknown i[270697] "index var" "insert auto destroy"
        (489964 'end of statement')
        (270699 'move' i[270697] _indexOfInterest[270669])
        (489965 'end of statement' i[270697])
        {
          unknown call_tmp[737909] "expr temp" "maybe param" "maybe type" "temp"
          (737912 'move' call_tmp[737909](270511 call Data[270421] i[270697]))
          unknown call_tmp[737914] "maybe param" "maybe type" "temp"
          (737917 'move' call_tmp[737914](270513 call shallowCopyInit module=[255] ShallowCopy[277402] call_tmp[737909]))
          unknown ithVal[270514] "dead at end of block" "no auto destroy"
          (548794 'init var' ithVal[270514] call_tmp[737914])
          (270517 'end of statement')
          unknown inserted[270520] "dead at end of block" "insert auto destroy"
          (548796 'init var' inserted[270520] 0)
          (270523 'end of statement' i[270697])
          {
            unknown _indexOfInterest[270599] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270600] "expr temp" "temp"
            unknown call_tmp[737919] "expr temp" "maybe param" "maybe type" "temp"
            (737922 'move' call_tmp[737919](270623 call - i[270697] stride[270490]))
            unknown call_tmp[737924] "expr temp" "maybe param" "maybe type" "temp"
            (737927 'move' call_tmp[737924](270619 call - stride[270490]))
            unknown call_tmp[737929] "expr temp" "maybe param" "maybe type" "temp"
            (737932 'move' call_tmp[737929](270626 call chpl_direct_range_iter low[270476] call_tmp[737919] call_tmp[737924]))
            (270609 'move' _iterator[270600](270607 call _getIterator call_tmp[737929]))
            Defer
            {
              {
                (270642 call _freeIterator _iterator[270600])
              }
            }
            { scopeless type
              (270631 'move' _indexOfInterest[270599](270628 call iteratorIndex _iterator[270600]))
            }
            ForLoop[270601]
            {
              unknown j[270635] "index var" "insert auto destroy"
              (489969 'end of statement')
              (270637 'move' j[270635] _indexOfInterest[270599])
              (489970 'end of statement' j[270635])
              {
                unknown call_tmp[737934] "expr temp" "maybe param" "maybe type" "temp"
                (737937 'move' call_tmp[737934](270543 call Data[270421] j[270635]))
                unknown call_tmp[737939] "expr temp" "maybe param" "maybe type" "temp"
                (737942 'move' call_tmp[737939](270545 call chpl_compare ithVal[270514] call_tmp[737934] comparator[270429]))
                unknown call_tmp[737944] "expr temp" "maybe param" "maybe type" "temp"
                (737947 'move' call_tmp[737944](270547 call < call_tmp[737939] 0))
                unknown call_tmp[737949] "expr temp" "maybe param" "maybe type" "temp"
                (737952 'move' call_tmp[737949](270594 call _cond_test call_tmp[737944]))
                if call_tmp[737949]
                {
                  unknown call_tmp[737954] "expr temp" "maybe param" "maybe type" "temp"
                  (737957 'move' call_tmp[737954](270558 call + j[270635] stride[270490]))
                  unknown call_tmp[737959] "expr temp" "maybe param" "maybe type" "temp"
                  (737962 'move' call_tmp[737959](270561 call Data[270421] call_tmp[737954]))
                  unknown call_tmp[737964] "expr temp" "maybe param" "maybe type" "temp"
                  (737967 'move' call_tmp[737964](270566 call Data[270421] j[270635]))
                  (270567 call shallowCopy module=[255] ShallowCopy[277402] call_tmp[737959] call_tmp[737964])
                  (489972 'end of statement' j[270635] stride[270490] j[270635])
                  (364189 'referenced modules list' ShallowCopy[277402])
                }
                {
                  unknown call_tmp[737969] "expr temp" "maybe param" "maybe type" "temp"
                  (737972 'move' call_tmp[737969](270577 call + j[270635] stride[270490]))
                  unknown call_tmp[737974] "expr temp" "maybe param" "maybe type" "temp"
                  (737977 'move' call_tmp[737974](270580 call Data[270421] call_tmp[737969]))
                  (270583 call shallowCopy module=[255] ShallowCopy[277402] call_tmp[737974] ithVal[270514])
                  (489976 'end of statement' j[270635] stride[270490] ithVal[270514])
                  (270588 call = inserted[270520] 1)
                  (489980 'end of statement' inserted[270520])
                  break _breakLabel[270605] _breakLabel[270605]
                  (364195 'referenced modules list' ShallowCopy[277402])
                }
              }
              label _continueLabel[270604]
              _indexOfInterest[270599]
              _iterator[270600]
            }
            label _breakLabel[270605]
          }
          unknown call_tmp[737979] "expr temp" "maybe param" "maybe type" "temp"
          (737982 'move' call_tmp[737979](270650 call ! inserted[270520]))
          unknown call_tmp[737984] "expr temp" "maybe param" "maybe type" "temp"
          (737987 'move' call_tmp[737984](270665 call _cond_test call_tmp[737979]))
          if call_tmp[737984]
          {
            unknown call_tmp[737989] "expr temp" "maybe param" "maybe type" "temp"
            (737992 'move' call_tmp[737989](270659 call Data[270421] low[270476]))
            (270662 call shallowCopy module=[255] ShallowCopy[277402] call_tmp[737989] ithVal[270514])
            (489982 'end of statement' low[270476] ithVal[270514])
            (364201 'referenced modules list' ShallowCopy[277402])
          }
          (364183 'referenced modules list' ShallowCopy[277402])
        }
        label _continueLabel[270674]
        _indexOfInterest[270669]
        _iterator[270670]
      }
      label _breakLabel[270675]
    }
    (537908 return _void[55])
  }
  (355378 'used modules list'(353064 'use' ChapelStandard[20267])(270114 'use' Sort[267987]))
}