AST dump for InsertionSort after pass normalize.
Module use list: ChapelStandard Sort ShallowCopy 

{
  function chpl__init_InsertionSort[416128]() : void[4] "insert line file info" "module init"
  {
    (537869 return _void[55])
  }
  function insertionSort[270109](arg Data[270106]:_array[133588](?), arg comparator[270114]:_any[178](?) :
  defaultComparator[267977] =
  defaultComparator[267977], arg lo[270123]:int(64)[13] =
  unknown call_tmp[737666] "expr temp" "maybe param" "maybe type" "temp", arg hi[270132]:int(64)[13] =
  unknown call_tmp[737675] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737684] "expr temp" "maybe param" "maybe type" "temp"
    (737687 'move' call_tmp[737684](466687 call eltType _mt[243] Data[270106]))
    (270140 call chpl_check_comparator comparator[270114] call_tmp[737684])
    (489896 'end of statement')
    unknown call_tmp[737691] "expr temp" "maybe param" "maybe type" "temp"
    (737694 'move' call_tmp[737691](466679 call _dom _mt[243] Data[270106]))
    unknown call_tmp[737698] "expr temp" "maybe param" "maybe type" "temp"
    (737701 'move' call_tmp[737698](270144 call rank _mt[243] call_tmp[737691]))
    unknown call_tmp[737703] "expr temp" "maybe param" "maybe type" "temp"
    (737706 'move' call_tmp[737703](270148 call != call_tmp[737698] 1))
    unknown call_tmp[737708] "expr temp" "maybe param" "maybe type" "temp"
    (737711 'move' call_tmp[737708](270172 call _cond_test call_tmp[737703]))
    if call_tmp[737708]
    {
      (270169 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270177] "dead at end of block" "const" "insert auto destroy"
    (548739 'init var' low[270177] lo[270123])
    const high[270181] "dead at end of block" "const" "insert auto destroy"
    (548741 'init var' high[270181] hi[270132])
    unknown call_tmp[737715] "expr temp" "maybe param" "maybe type" "temp"
    (737718 'move' call_tmp[737715](466683 call _dom _mt[243] Data[270106]))
    unknown call_tmp[737722] "expr temp" "maybe param" "maybe type" "temp"
    (737725 'move' call_tmp[737722](270186 call stride _mt[243] call_tmp[737715]))
    unknown call_tmp[737727] "maybe param" "maybe type" "temp"
    (737730 'move' call_tmp[737727](270190 call abs call_tmp[737722]))
    const stride[270191] "dead at end of block" "const" "insert auto destroy"
    (548743 'init var' stride[270191] call_tmp[737727])
    (270194 'end of statement')
    {
      unknown _indexOfInterest[270348] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270349] "expr temp" "temp"
      unknown call_tmp[737732] "expr temp" "maybe param" "maybe type" "temp"
      (737735 'move' call_tmp[737732](270367 call chpl_direct_range_iter low[270177] high[270181] stride[270191]))
      (270358 'move' _iterator[270349](270356 call _getIterator call_tmp[737732]))
      Defer
      {
        {
          (270383 call _freeIterator _iterator[270349])
        }
      }
      { scopeless type
        (270372 'move' _indexOfInterest[270348](270369 call iteratorIndex _iterator[270349]))
      }
      ForLoop[270350]
      {
        unknown i[270376] "index var" "insert auto destroy"
        (489899 'end of statement')
        (270378 'move' i[270376] _indexOfInterest[270348])
        (489900 'end of statement' i[270376])
        {
          unknown call_tmp[737737] "maybe param" "maybe type" "temp"
          (737740 'move' call_tmp[737737](270206 call Data[270106] i[270376]))
          unknown ithVal[270207] "dead at end of block" "insert auto destroy"
          (548745 'init var' ithVal[270207] call_tmp[737737])
          (270210 'end of statement')
          unknown inserted[270213] "dead at end of block" "insert auto destroy"
          (548747 'init var' inserted[270213] 0)
          (270216 'end of statement' i[270376])
          {
            unknown _indexOfInterest[270282] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270283] "expr temp" "temp"
            unknown call_tmp[737742] "expr temp" "maybe param" "maybe type" "temp"
            (737745 'move' call_tmp[737742](270306 call - i[270376] stride[270191]))
            unknown call_tmp[737747] "expr temp" "maybe param" "maybe type" "temp"
            (737750 'move' call_tmp[737747](270302 call - stride[270191]))
            unknown call_tmp[737752] "expr temp" "maybe param" "maybe type" "temp"
            (737755 'move' call_tmp[737752](270309 call chpl_direct_range_iter low[270177] call_tmp[737742] call_tmp[737747]))
            (270292 'move' _iterator[270283](270290 call _getIterator call_tmp[737752]))
            Defer
            {
              {
                (270325 call _freeIterator _iterator[270283])
              }
            }
            { scopeless type
              (270314 'move' _indexOfInterest[270282](270311 call iteratorIndex _iterator[270283]))
            }
            ForLoop[270284]
            {
              unknown j[270318] "index var" "insert auto destroy"
              (489904 'end of statement')
              (270320 'move' j[270318] _indexOfInterest[270282])
              (489905 'end of statement' j[270318])
              {
                unknown call_tmp[737757] "expr temp" "maybe param" "maybe type" "temp"
                (737760 'move' call_tmp[737757](270236 call Data[270106] j[270318]))
                unknown call_tmp[737762] "expr temp" "maybe param" "maybe type" "temp"
                (737765 'move' call_tmp[737762](270238 call chpl_compare ithVal[270207] call_tmp[737757] comparator[270114]))
                unknown call_tmp[737767] "expr temp" "maybe param" "maybe type" "temp"
                (737770 'move' call_tmp[737767](270240 call < call_tmp[737762] 0))
                unknown call_tmp[737772] "expr temp" "maybe param" "maybe type" "temp"
                (737775 'move' call_tmp[737772](270277 call _cond_test call_tmp[737767]))
                if call_tmp[737772]
                {
                  unknown call_tmp[737777] "expr temp" "maybe param" "maybe type" "temp"
                  (737780 'move' call_tmp[737777](270245 call + j[270318] stride[270191]))
                  unknown call_tmp[737782] "expr temp" "maybe param" "maybe type" "temp"
                  (737785 'move' call_tmp[737782](270248 call Data[270106] call_tmp[737777]))
                  unknown call_tmp[737787] "expr temp" "maybe param" "maybe type" "temp"
                  (737790 'move' call_tmp[737787](270252 call Data[270106] j[270318]))
                  (270253 call = call_tmp[737782] call_tmp[737787])
                  (489907 'end of statement' j[270318] stride[270191] j[270318])
                }
                {
                  unknown call_tmp[737792] "expr temp" "maybe param" "maybe type" "temp"
                  (737795 'move' call_tmp[737792](270260 call + j[270318] stride[270191]))
                  unknown call_tmp[737797] "expr temp" "maybe param" "maybe type" "temp"
                  (737800 'move' call_tmp[737797](270263 call Data[270106] call_tmp[737792]))
                  (270265 call = call_tmp[737797] ithVal[270207])
                  (489911 'end of statement' j[270318] stride[270191] ithVal[270207])
                  (270271 call = inserted[270213] 1)
                  (489915 'end of statement' inserted[270213])
                  break _breakLabel[270288] _breakLabel[270288]
                }
              }
              label _continueLabel[270287]
              _indexOfInterest[270282]
              _iterator[270283]
            }
            label _breakLabel[270288]
          }
          unknown call_tmp[737802] "expr temp" "maybe param" "maybe type" "temp"
          (737805 'move' call_tmp[737802](270333 call ! inserted[270213]))
          unknown call_tmp[737807] "expr temp" "maybe param" "maybe type" "temp"
          (737810 'move' call_tmp[737807](270344 call _cond_test call_tmp[737802]))
          if call_tmp[737807]
          {
            unknown call_tmp[737812] "expr temp" "maybe param" "maybe type" "temp"
            (737815 'move' call_tmp[737812](270338 call Data[270106] low[270177]))
            (270340 call = call_tmp[737812] ithVal[270207])
            (489917 'end of statement' low[270177] ithVal[270207])
          }
        }
        label _continueLabel[270353]
        _indexOfInterest[270348]
        _iterator[270349]
      }
      label _breakLabel[270354]
    }
    (537865 return _void[55])
  }
  function insertionSortMoveElts[270404](arg Data[270401]:_array[133588](?), arg comparator[270409]:_any[178](?) :
  defaultComparator[267977] =
  defaultComparator[267977], arg lo[270418]:int(64)[13] =
  unknown call_tmp[737819] "expr temp" "maybe param" "maybe type" "temp", arg hi[270427]:int(64)[13] =
  unknown call_tmp[737828] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "no return value for void"
  {
    unknown call_tmp[737837] "expr temp" "maybe param" "maybe type" "temp"
    (737840 'move' call_tmp[737837](466709 call eltType _mt[243] Data[270401]))
    (270435 call chpl_check_comparator comparator[270409] call_tmp[737837])
    (489920 'end of statement')
    unknown call_tmp[737844] "expr temp" "maybe param" "maybe type" "temp"
    (737847 'move' call_tmp[737844](466701 call _dom _mt[243] Data[270401]))
    unknown call_tmp[737851] "expr temp" "maybe param" "maybe type" "temp"
    (737854 'move' call_tmp[737851](270439 call rank _mt[243] call_tmp[737844]))
    unknown call_tmp[737856] "expr temp" "maybe param" "maybe type" "temp"
    (737859 'move' call_tmp[737856](270443 call != call_tmp[737851] 1))
    unknown call_tmp[737861] "expr temp" "maybe param" "maybe type" "temp"
    (737864 'move' call_tmp[737861](270451 call _cond_test call_tmp[737856]))
    if call_tmp[737861]
    {
      (270448 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270456] "dead at end of block" "const" "insert auto destroy"
    (548749 'init var' low[270456] lo[270418])
    const high[270460] "dead at end of block" "const" "insert auto destroy"
    (548751 'init var' high[270460] hi[270427])
    unknown call_tmp[737868] "expr temp" "maybe param" "maybe type" "temp"
    (737871 'move' call_tmp[737868](466705 call _dom _mt[243] Data[270401]))
    unknown call_tmp[737875] "expr temp" "maybe param" "maybe type" "temp"
    (737878 'move' call_tmp[737875](270465 call stride _mt[243] call_tmp[737868]))
    unknown call_tmp[737880] "maybe param" "maybe type" "temp"
    (737883 'move' call_tmp[737880](270469 call abs call_tmp[737875]))
    const stride[270470] "dead at end of block" "const" "insert auto destroy"
    (548753 'init var' stride[270470] call_tmp[737880])
    (270473 'end of statement')
    {
      unknown _indexOfInterest[270649] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270650] "expr temp" "temp"
      unknown call_tmp[737885] "expr temp" "maybe param" "maybe type" "temp"
      (737888 'move' call_tmp[737885](270668 call chpl_direct_range_iter low[270456] high[270460] stride[270470]))
      (270659 'move' _iterator[270650](270657 call _getIterator call_tmp[737885]))
      Defer
      {
        {
          (270684 call _freeIterator _iterator[270650])
        }
      }
      { scopeless type
        (270673 'move' _indexOfInterest[270649](270670 call iteratorIndex _iterator[270650]))
      }
      ForLoop[270651]
      {
        unknown i[270677] "index var" "insert auto destroy"
        (489923 'end of statement')
        (270679 'move' i[270677] _indexOfInterest[270649])
        (489924 'end of statement' i[270677])
        {
          unknown call_tmp[737890] "expr temp" "maybe param" "maybe type" "temp"
          (737893 'move' call_tmp[737890](270491 call Data[270401] i[270677]))
          unknown call_tmp[737895] "maybe param" "maybe type" "temp"
          (737898 'move' call_tmp[737895](270493 call shallowCopyInit module=[255] ShallowCopy[277381] call_tmp[737890]))
          unknown ithVal[270494] "dead at end of block" "no auto destroy"
          (548755 'init var' ithVal[270494] call_tmp[737895])
          (270497 'end of statement')
          unknown inserted[270500] "dead at end of block" "insert auto destroy"
          (548757 'init var' inserted[270500] 0)
          (270503 'end of statement' i[270677])
          {
            unknown _indexOfInterest[270579] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270580] "expr temp" "temp"
            unknown call_tmp[737900] "expr temp" "maybe param" "maybe type" "temp"
            (737903 'move' call_tmp[737900](270603 call - i[270677] stride[270470]))
            unknown call_tmp[737905] "expr temp" "maybe param" "maybe type" "temp"
            (737908 'move' call_tmp[737905](270599 call - stride[270470]))
            unknown call_tmp[737910] "expr temp" "maybe param" "maybe type" "temp"
            (737913 'move' call_tmp[737910](270606 call chpl_direct_range_iter low[270456] call_tmp[737900] call_tmp[737905]))
            (270589 'move' _iterator[270580](270587 call _getIterator call_tmp[737910]))
            Defer
            {
              {
                (270622 call _freeIterator _iterator[270580])
              }
            }
            { scopeless type
              (270611 'move' _indexOfInterest[270579](270608 call iteratorIndex _iterator[270580]))
            }
            ForLoop[270581]
            {
              unknown j[270615] "index var" "insert auto destroy"
              (489928 'end of statement')
              (270617 'move' j[270615] _indexOfInterest[270579])
              (489929 'end of statement' j[270615])
              {
                unknown call_tmp[737915] "expr temp" "maybe param" "maybe type" "temp"
                (737918 'move' call_tmp[737915](270523 call Data[270401] j[270615]))
                unknown call_tmp[737920] "expr temp" "maybe param" "maybe type" "temp"
                (737923 'move' call_tmp[737920](270525 call chpl_compare ithVal[270494] call_tmp[737915] comparator[270409]))
                unknown call_tmp[737925] "expr temp" "maybe param" "maybe type" "temp"
                (737928 'move' call_tmp[737925](270527 call < call_tmp[737920] 0))
                unknown call_tmp[737930] "expr temp" "maybe param" "maybe type" "temp"
                (737933 'move' call_tmp[737930](270574 call _cond_test call_tmp[737925]))
                if call_tmp[737930]
                {
                  unknown call_tmp[737935] "expr temp" "maybe param" "maybe type" "temp"
                  (737938 'move' call_tmp[737935](270538 call + j[270615] stride[270470]))
                  unknown call_tmp[737940] "expr temp" "maybe param" "maybe type" "temp"
                  (737943 'move' call_tmp[737940](270541 call Data[270401] call_tmp[737935]))
                  unknown call_tmp[737945] "expr temp" "maybe param" "maybe type" "temp"
                  (737948 'move' call_tmp[737945](270546 call Data[270401] j[270615]))
                  (270547 call shallowCopy module=[255] ShallowCopy[277381] call_tmp[737940] call_tmp[737945])
                  (489931 'end of statement' j[270615] stride[270470] j[270615])
                  (364149 'referenced modules list' ShallowCopy[277381])
                }
                {
                  unknown call_tmp[737950] "expr temp" "maybe param" "maybe type" "temp"
                  (737953 'move' call_tmp[737950](270557 call + j[270615] stride[270470]))
                  unknown call_tmp[737955] "expr temp" "maybe param" "maybe type" "temp"
                  (737958 'move' call_tmp[737955](270560 call Data[270401] call_tmp[737950]))
                  (270563 call shallowCopy module=[255] ShallowCopy[277381] call_tmp[737955] ithVal[270494])
                  (489935 'end of statement' j[270615] stride[270470] ithVal[270494])
                  (270568 call = inserted[270500] 1)
                  (489939 'end of statement' inserted[270500])
                  break _breakLabel[270585] _breakLabel[270585]
                  (364155 'referenced modules list' ShallowCopy[277381])
                }
              }
              label _continueLabel[270584]
              _indexOfInterest[270579]
              _iterator[270580]
            }
            label _breakLabel[270585]
          }
          unknown call_tmp[737960] "expr temp" "maybe param" "maybe type" "temp"
          (737963 'move' call_tmp[737960](270630 call ! inserted[270500]))
          unknown call_tmp[737965] "expr temp" "maybe param" "maybe type" "temp"
          (737968 'move' call_tmp[737965](270645 call _cond_test call_tmp[737960]))
          if call_tmp[737965]
          {
            unknown call_tmp[737970] "expr temp" "maybe param" "maybe type" "temp"
            (737973 'move' call_tmp[737970](270639 call Data[270401] low[270456]))
            (270642 call shallowCopy module=[255] ShallowCopy[277381] call_tmp[737970] ithVal[270494])
            (489941 'end of statement' low[270456] ithVal[270494])
            (364161 'referenced modules list' ShallowCopy[277381])
          }
          (364143 'referenced modules list' ShallowCopy[277381])
        }
        label _continueLabel[270654]
        _indexOfInterest[270649]
        _iterator[270650]
      }
      label _breakLabel[270655]
    }
    (537867 return _void[55])
  }
  (355338 'used modules list'(353024 'use' ChapelStandard[20264])(270094 'use' Sort[267968]))
}