AST dump for ChapelHashing after pass createTaskFunctions.
Module use list: ChapelBase Reflection 

{
  function chpl__init_ChapelHashing[416039]() : void[4] "insert line file info" "module init"
  {
    (520911 return _void[55])
  }
  function chpl__defaultHashWrapper[155418](arg x[155416]:_any[178](?)) : _unknown[51]
  {
    unknown ret[520712] "RVV" "temp"
    unknown call_tmp[672307] "maybe param" "maybe type" "temp"
    (672310 'move' call_tmp[672307](155424 call chpl__defaultHash x[155416]))
    const hash[155425] "dead at end of block" "const" "insert auto destroy"
    (543990 'init var' hash[155425] call_tmp[672307])
    (155428 'end of statement')
    unknown call_tmp[672312] "expr temp" "maybe param" "maybe type" "temp"
    (672315 'move' call_tmp[672312](155434 call max int(64)[13]))
    unknown call_tmp[672317] "expr temp" "maybe param" "maybe type" "temp"
    (672320 'move' call_tmp[672317](155435 call & hash[155425] call_tmp[672312]))
    unknown call_tmp[672322] "expr temp" "maybe param" "maybe type" "temp"
    (672325 'move' call_tmp[672322](155438 call _cast int(64)[13] call_tmp[672317]))
    (520718 'move' ret[520712](520717 'coerce' call_tmp[672322] int(64)[13]))
    gotoReturn _end_chpl__defaultHashWrapper[520710] _end_chpl__defaultHashWrapper[520710]
    (482038 'end of statement' hash[155425])
    label _end_chpl__defaultHashWrapper[520710]
    (520714 return ret[520712])
  }
  { scopeless type
    int(64)[13]
  }
  function _gen_key[155451](arg i[155448]:uint(64)[115]) : _unknown[51]
  {
    unknown ret[520724] "RVV" "temp"
    unknown key[155455] "dead at end of block" "insert auto destroy"
    (543992 'init var' key[155455] i[155448])
    (155458 'end of statement')
    unknown call_tmp[672327] "expr temp" "maybe param" "maybe type" "temp"
    (672330 'move' call_tmp[672327](155462 call ~ key[155455]))
    unknown call_tmp[672332] "expr temp" "maybe param" "maybe type" "temp"
    (672335 'move' call_tmp[672332](155466 call << key[155455] 21))
    unknown call_tmp[672337] "expr temp" "maybe param" "maybe type" "temp"
    (672340 'move' call_tmp[672337](155468 call + call_tmp[672327] call_tmp[672332]))
    (155470 call = key[155455] call_tmp[672337])
    (482040 'end of statement' key[155455] key[155455] key[155455])
    unknown call_tmp[672342] "expr temp" "maybe param" "maybe type" "temp"
    (672345 'move' call_tmp[672342](155477 call >> key[155455] 24))
    unknown call_tmp[672347] "expr temp" "maybe param" "maybe type" "temp"
    (672350 'move' call_tmp[672347](155479 call ^ key[155455] call_tmp[672342]))
    (155481 call = key[155455] call_tmp[672347])
    (482044 'end of statement' key[155455] key[155455] key[155455])
    unknown call_tmp[672352] "expr temp" "maybe param" "maybe type" "temp"
    (672355 'move' call_tmp[672352](155488 call << key[155455] 3))
    unknown call_tmp[672357] "expr temp" "maybe param" "maybe type" "temp"
    (672360 'move' call_tmp[672357](155490 call + key[155455] call_tmp[672352]))
    unknown call_tmp[672362] "expr temp" "maybe param" "maybe type" "temp"
    (672365 'move' call_tmp[672362](155494 call << key[155455] 8))
    unknown call_tmp[672367] "expr temp" "maybe param" "maybe type" "temp"
    (672370 'move' call_tmp[672367](155496 call + call_tmp[672357] call_tmp[672362]))
    (155498 call = key[155455] call_tmp[672367])
    (482048 'end of statement' key[155455] key[155455] key[155455] key[155455])
    unknown call_tmp[672372] "expr temp" "maybe param" "maybe type" "temp"
    (672375 'move' call_tmp[672372](155505 call >> key[155455] 14))
    unknown call_tmp[672377] "expr temp" "maybe param" "maybe type" "temp"
    (672380 'move' call_tmp[672377](155507 call ^ key[155455] call_tmp[672372]))
    (155509 call = key[155455] call_tmp[672377])
    (482053 'end of statement' key[155455] key[155455] key[155455])
    unknown call_tmp[672382] "expr temp" "maybe param" "maybe type" "temp"
    (672385 'move' call_tmp[672382](155516 call << key[155455] 2))
    unknown call_tmp[672387] "expr temp" "maybe param" "maybe type" "temp"
    (672390 'move' call_tmp[672387](155518 call + key[155455] call_tmp[672382]))
    unknown call_tmp[672392] "expr temp" "maybe param" "maybe type" "temp"
    (672395 'move' call_tmp[672392](155522 call << key[155455] 4))
    unknown call_tmp[672397] "expr temp" "maybe param" "maybe type" "temp"
    (672400 'move' call_tmp[672397](155524 call + call_tmp[672387] call_tmp[672392]))
    (155526 call = key[155455] call_tmp[672397])
    (482057 'end of statement' key[155455] key[155455] key[155455] key[155455])
    unknown call_tmp[672402] "expr temp" "maybe param" "maybe type" "temp"
    (672405 'move' call_tmp[672402](155533 call >> key[155455] 28))
    unknown call_tmp[672407] "expr temp" "maybe param" "maybe type" "temp"
    (672410 'move' call_tmp[672407](155535 call ^ key[155455] call_tmp[672402]))
    (155537 call = key[155455] call_tmp[672407])
    (482062 'end of statement' key[155455] key[155455] key[155455])
    unknown call_tmp[672412] "expr temp" "maybe param" "maybe type" "temp"
    (672415 'move' call_tmp[672412](155544 call << key[155455] 31))
    unknown call_tmp[672417] "expr temp" "maybe param" "maybe type" "temp"
    (672420 'move' call_tmp[672417](155546 call + key[155455] call_tmp[672412]))
    (155548 call = key[155455] call_tmp[672417])
    (482066 'end of statement' key[155455] key[155455] key[155455])
    (520730 'move' ret[520724](520729 'coerce' key[155455] uint(64)[115]))
    gotoReturn _end__gen_key[520722] _end__gen_key[520722]
    (482070 'end of statement' key[155455])
    label _end__gen_key[520722]
    (520726 return ret[520724])
  }
  { scopeless type
    uint(64)[115]
  }
  function _gen_key[155563](arg i[155560]:int(64)[13]) : _unknown[51]
  {
    unknown ret[520736] "RVV" "temp"
    unknown call_tmp[672422] "expr temp" "maybe param" "maybe type" "temp"
    (672425 'move' call_tmp[672422](155569 call _cast uint(64)[115] i[155560]))
    unknown call_tmp[672427] "expr temp" "maybe param" "maybe type" "temp"
    (672430 'move' call_tmp[672427](155572 call _gen_key call_tmp[672422]))
    (520742 'move' ret[520736](520741 'coerce' call_tmp[672427] uint(64)[115]))
    (520738 return ret[520736])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHashCombine[155585](arg a[155582]:uint(64)[115], arg b[155588]:uint(64)[115], arg fieldnum[155592]:int(64)[13]) : _unknown[51] "inline"
  {
    unknown ret[520752] "RVV" "temp"
    function chpl_bitops_rotl_64[155605](arg x[155602] :
    (155601 call uint(64)[115] 64), arg n[155611] :
    (155610 call uint(64)[115] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[520746] "RVV" "temp"
      (520748 return ret[520746])
    }
    { scopeless type
      (155617 call uint(64)[115] 64)
    }
    unknown call_tmp[672432] "expr temp" "maybe param" "maybe type" "temp"
    (672435 'move' call_tmp[672432](155625 call + 17 fieldnum[155592]))
    unknown call_tmp[672437] "maybe param" "maybe type" "temp"
    (672440 'move' call_tmp[672437](155628 call _cast uint(64)[115] call_tmp[672432]))
    unknown n[155630] "dead at end of block" "insert auto destroy"
    (543994 'init var' n[155630] call_tmp[672437] uint(64)[115])
    (155633 'end of statement')
    unknown call_tmp[672442] "expr temp" "maybe param" "maybe type" "temp"
    (672445 'move' call_tmp[672442](155640 call chpl_bitops_rotl_64 b[155588] n[155630]))
    unknown call_tmp[672447] "expr temp" "maybe param" "maybe type" "temp"
    (672450 'move' call_tmp[672447](155641 call ^ a[155582] call_tmp[672442]))
    unknown call_tmp[672452] "expr temp" "maybe param" "maybe type" "temp"
    (672455 'move' call_tmp[672452](155644 call _gen_key call_tmp[672447]))
    (520758 'move' ret[520752](520757 'coerce' call_tmp[672452] uint(64)[115]))
    gotoReturn _end_chpl__defaultHashCombine[520750] _end_chpl__defaultHashCombine[520750]
    (482073 'end of statement' n[155630])
    label _end_chpl__defaultHashCombine[520750]
    (520754 return ret[520752])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155656](arg b[155653]:bool[10]) : _unknown[51] "inline"
  {
    unknown ret[520764] "RVV" "temp"
    unknown call_tmp[672457] "expr temp" "maybe param" "maybe type" "temp"
    (672460 'move' call_tmp[672457](155666 call _cond_test b[155653]))
    if call_tmp[672457]
    {
      (520770 'move' ret[520764](520769 'coerce' 0 uint(64)[115]))
      gotoReturn _end_chpl__defaultHash[520762] _end_chpl__defaultHash[520762]
    }
    {
      (520776 'move' ret[520764](520775 'coerce' 1 uint(64)[115]))
      gotoReturn _end_chpl__defaultHash[520762] _end_chpl__defaultHash[520762]
    }
    label _end_chpl__defaultHash[520762]
    (520766 return ret[520764])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155685](arg i[155682] :
  (155681 call int(64)[13] 64)) : _unknown[51] "inline"
  {
    unknown ret[520782] "RVV" "temp"
    unknown call_tmp[672462] "expr temp" "maybe param" "maybe type" "temp"
    (672465 'move' call_tmp[672462](155691 call _gen_key i[155682]))
    (520788 'move' ret[520782](520787 'coerce' call_tmp[672462] uint(64)[115]))
    (520784 return ret[520782])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155707](arg u[155704] :
  (155703 call uint(64)[115] 64)) : _unknown[51] "inline"
  {
    unknown ret[520792] "RVV" "temp"
    unknown call_tmp[672467] "expr temp" "maybe param" "maybe type" "temp"
    (672470 'move' call_tmp[672467](155713 call _gen_key u[155704]))
    (520798 'move' ret[520792](520797 'coerce' call_tmp[672467] uint(64)[115]))
    (520794 return ret[520792])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155724](arg e[155722]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[520802] "RVV" "temp"
    unknown call_tmp[672472] "expr temp" "maybe param" "maybe type" "temp"
    (672475 'move' call_tmp[672472](155734 call chpl__enumToOrder e[155722]))
    unknown call_tmp[672477] "expr temp" "maybe param" "maybe type" "temp"
    (672480 'move' call_tmp[672477](155736 call _gen_key call_tmp[672472]))
    (520807 'move' ret[520802](520806 'deref' call_tmp[672477]))
    (520804 return ret[520802])
  }
  where {
    (155729 call isEnum e[155722])
  }
  function chpl__defaultHash[155749](arg f[155746]:real(64)[16]) : _unknown[51] "inline"
  {
    unknown ret[520811] "RVV" "temp"
    unknown call_tmp[672482] "expr temp" "maybe param" "maybe type" "temp"
    (672485 'move' call_tmp[672482](155772 'real2int' f[155746]))
    unknown call_tmp[672487] "expr temp" "maybe param" "maybe type" "temp"
    (672490 'move' call_tmp[672487](155774 call _gen_key call_tmp[672482]))
    (520817 'move' ret[520811](520816 'coerce' call_tmp[672487] uint(64)[115]))
    (520813 return ret[520811])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155787](arg c[155784]:complex(128)[140]) : _unknown[51] "inline"
  {
    unknown ret[520821] "RVV" "temp"
    unknown call_tmp[672494] "expr temp" "maybe param" "maybe type" "temp"
    (672497 'move' call_tmp[672494](155794 call re _mt[243] c[155784]))
    unknown call_tmp[672499] "expr temp" "maybe param" "maybe type" "temp"
    (672502 'move' call_tmp[672499](155797 'real2int' call_tmp[672494]))
    unknown call_tmp[672506] "expr temp" "maybe param" "maybe type" "temp"
    (672509 'move' call_tmp[672506](155801 call im _mt[243] c[155784]))
    unknown call_tmp[672511] "expr temp" "maybe param" "maybe type" "temp"
    (672514 'move' call_tmp[672511](155804 'real2int' call_tmp[672506]))
    unknown call_tmp[672516] "expr temp" "maybe param" "maybe type" "temp"
    (672519 'move' call_tmp[672516](155805 call ^ call_tmp[672499] call_tmp[672511]))
    unknown call_tmp[672521] "expr temp" "maybe param" "maybe type" "temp"
    (672524 'move' call_tmp[672521](155808 call _gen_key call_tmp[672516]))
    (520827 'move' ret[520821](520826 'coerce' call_tmp[672521] uint(64)[115]))
    (520823 return ret[520821])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155821](arg a[155818]:imag(64)[130]) : _unknown[51] "inline"
  {
    unknown ret[520831] "RVV" "temp"
    unknown call_tmp[672526] "expr temp" "maybe param" "maybe type" "temp"
    (672529 'move' call_tmp[672526](155830 call _i2r a[155818]))
    unknown call_tmp[672531] "expr temp" "maybe param" "maybe type" "temp"
    (672534 'move' call_tmp[672531](155831 'real2int' call_tmp[672526]))
    unknown call_tmp[672536] "expr temp" "maybe param" "maybe type" "temp"
    (672539 'move' call_tmp[672536](155833 call _gen_key call_tmp[672531]))
    (520837 'move' ret[520831](520836 'coerce' call_tmp[672536] uint(64)[115]))
    (520833 return ret[520831])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155846](arg u[155843]:chpl_taskID_t[163]) : _unknown[51] "inline"
  {
    unknown ret[520841] "RVV" "temp"
    unknown call_tmp[672541] "expr temp" "maybe param" "maybe type" "temp"
    (672544 'move' call_tmp[672541](155854 call int(64)[13] 64))
    unknown call_tmp[672546] "expr temp" "maybe param" "maybe type" "temp"
    (672549 'move' call_tmp[672546](155855 call _cast call_tmp[672541] u[155843]))
    unknown call_tmp[672551] "expr temp" "maybe param" "maybe type" "temp"
    (672554 'move' call_tmp[672551](155858 call _gen_key call_tmp[672546]))
    (520847 'move' ret[520841](520846 'coerce' call_tmp[672551] uint(64)[115]))
    (520843 return ret[520841])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155873](arg l[155870]:_array[133594](?)) : _unknown[51] "inline"
  {
    unknown ret[520851] "RVV" "temp"
    unknown hash[155878] "dead at end of block" "insert auto destroy"
    (543996 'init var' hash[155878] 0 uint(64)[115])
    (155881 'end of statement')
    unknown i[155884] "dead at end of block" "insert auto destroy"
    (543998 'init var' i[155884] 1)
    (155887 'end of statement')
    {
      unknown _indexOfInterest[155909] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[155910] "expr temp" "temp"
      (155919 'move' _iterator[155910](155917 call _getIterator l[155870]))
      Defer
      {
        {
          (155935 call _freeIterator _iterator[155910])
        }
      }
      { scopeless type
        (155924 'move' _indexOfInterest[155909](155921 call iteratorIndex _iterator[155910]))
      }
      ForLoop[155911]
      {
        unknown obj[155928] "index var" "insert auto destroy"
        (482085 'end of statement')
        (155930 'move' obj[155928] _indexOfInterest[155909])
        (482086 'end of statement' obj[155928])
        {
          unknown call_tmp[672556] "expr temp" "maybe param" "maybe type" "temp"
          (672559 'move' call_tmp[672556](155895 call chpl__defaultHash obj[155928]))
          unknown call_tmp[672561] "expr temp" "maybe param" "maybe type" "temp"
          (672564 'move' call_tmp[672561](155899 call chpl__defaultHashCombine call_tmp[672556] hash[155878] i[155884]))
          (155900 call = hash[155878] call_tmp[672561])
          (482088 'end of statement' hash[155878] obj[155928] hash[155878] i[155884])
          (155906 call += i[155884] 1)
          (482093 'end of statement' i[155884])
        }
        label _continueLabel[155914]
        _indexOfInterest[155909]
        _iterator[155910]
      }
      label _breakLabel[155915]
    }
    (520857 'move' ret[520851](520856 'coerce' hash[155878] uint(64)[115]))
    gotoReturn _end_chpl__defaultHash[520849] _end_chpl__defaultHash[520849]
    (482095 'end of statement' hash[155878])
    label _end_chpl__defaultHash[520849]
    (520853 return ret[520851])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155956](arg o[155953]:borrowed object?[415380]) : _unknown[51] "inline"
  {
    unknown ret[520863] "RVV" "temp"
    unknown call_tmp[672566] "expr temp" "maybe param" "maybe type" "temp"
    (672569 'move' call_tmp[672566](155979 'object2int' o[155953]))
    unknown call_tmp[672571] "expr temp" "maybe param" "maybe type" "temp"
    (672574 'move' call_tmp[672571](155981 call _gen_key call_tmp[672566]))
    (520869 'move' ret[520863](520868 'coerce' call_tmp[672571] uint(64)[115]))
    (520865 return ret[520863])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[155994](arg l[155991]:locale[28]) : _unknown[51] "inline"
  {
    unknown ret[520873] "RVV" "temp"
    unknown call_tmp[672578] "expr temp" "maybe param" "maybe type" "temp"
    (672581 'move' call_tmp[672578](156001 call _value _mt[243] l[155991]))
    unknown call_tmp[672583] "expr temp" "maybe param" "maybe type" "temp"
    (672586 'move' call_tmp[672583](156004 'object2int' call_tmp[672578]))
    unknown call_tmp[672588] "expr temp" "maybe param" "maybe type" "temp"
    (672591 'move' call_tmp[672588](156006 call _gen_key call_tmp[672583]))
    (520879 'move' ret[520873](520878 'coerce' call_tmp[672588] uint(64)[115]))
    (520875 return ret[520873])
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__defaultHash[156019](arg r[156016]:range[64319](?)) : _unknown[51] "inline"
  {
    unknown ret[520883] "RVV" "temp"
    unknown ret[156027] "dead at end of block" "insert auto destroy"
    (544000 'default init var' ret[156027] uint(64)[115])
    (156030 'end of statement')
    {
      unknown i[156125] "dead at end of block" "insert auto destroy"
      (544002 'init var' i[156125] 0)
      (482099 'end of statement')
      unknown tmp[156126] "maybe param" "temp"
      unknown call_tmp[672593] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (672596 'move' call_tmp[672593](156034 'typeof' r[156016]))
      unknown call_tmp[672598] "expr temp" "maybe param" "maybe type" "temp"
      (672601 'move' call_tmp[672598](156036 call numImplementationFields call_tmp[672593]))
      (156138 'move' tmp[156126](156136 call chpl_compute_low_param_loop_bound 1 call_tmp[672598]))
      unknown tmp[156127] "maybe param" "temp"
      unknown call_tmp[672603] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (672606 'move' call_tmp[672603](156144 'typeof' r[156016]))
      unknown call_tmp[672608] "expr temp" "maybe param" "maybe type" "temp"
      (672611 'move' call_tmp[672608](156143 call numImplementationFields call_tmp[672603]))
      (156148 'move' tmp[156127](156146 call chpl_compute_high_param_loop_bound 1 call_tmp[672608]))
      unknown tmp[156128] "maybe param" "temp"
      (156151 'move' tmp[156128] 1)
      ParamForLoop[156153]
      { i[156125] tmp[156126] tmp[156127] tmp[156128]
        {
          unknown tmp[427636] "maybe param" "temp"
          unknown tmp[427657] "maybe param" "temp"
          unknown call_tmp[672613] "expr temp" "maybe param" "maybe type" "temp"
          (672616 'move' call_tmp[672613](156044 call getImplementationField r[156016] i[156125]))
          unknown call_tmp[672618] "expr temp" "maybe param" "maybe type" "temp"
          (672621 'move' call_tmp[672618](156046 call isParam call_tmp[672613]))
          (427668 'move' tmp[427657](156048 call == call_tmp[672618] 0))
          unknown call_tmp[672623] "expr temp" "maybe param" "maybe type" "temp"
          (672626 'move' call_tmp[672623](427670 call _cond_invalid tmp[427657]))
          if call_tmp[672623]
          {
            (427673 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[569459] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[569460] "maybe param" "temp"
          unknown call_tmp[672628] "expr temp" "maybe param" "maybe type" "temp"
          (672631 'move' call_tmp[672628](427658 call isTrue tmp[427657]))
          (569465 'move' tmp[569460](569463 call _cond_test call_tmp[672628]))
          if tmp[569460]
          {
            unknown tmp[569467] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[672633] "expr temp" "maybe param" "maybe type" "temp"
            (672636 'move' call_tmp[672633](156055 call getImplementationField r[156016] i[156125]))
            unknown call_tmp[672638] "expr temp" "maybe param" "maybe type" "temp"
            (672641 'move' call_tmp[672638](156057 call isType call_tmp[672633]))
            unknown call_tmp[672643] "expr temp" "maybe param" "maybe type" "temp"
            (672646 'move' call_tmp[672643](156059 call == call_tmp[672638] 0))
            (569469 'move' tmp[569467](427661 call isTrue call_tmp[672643]))
            (569474 'move' tmp[569459](569471 '_paramFoldLogical' tmp[569460] tmp[569467]))
          }
          {
            (569479 'move' tmp[569459](569476 '_paramFoldLogical' tmp[569460] 0))
          }
          (427647 'move' tmp[427636] tmp[569459])
          unknown call_tmp[672648] "expr temp" "maybe param" "maybe type" "temp"
          (672651 'move' call_tmp[672648](427649 call _cond_invalid tmp[427636]))
          if call_tmp[672648]
          {
            (427652 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[569486] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[569487] "maybe param" "temp"
          unknown call_tmp[672653] "expr temp" "maybe param" "maybe type" "temp"
          (672656 'move' call_tmp[672653](427637 call isTrue tmp[427636]))
          (569492 'move' tmp[569487](569490 call _cond_test call_tmp[672653]))
          if tmp[569487]
          {
            { scopeless type
              unknown call_type_tmp[492391] "expr temp" "maybe type" "temp" "type variable"
              unknown call_tmp[672658] "expr temp" "maybe param" "maybe type" "temp"
              (672661 'move' call_tmp[672658](156068 call getImplementationField r[156016] i[156125]))
              (492395 'move' call_type_tmp[492391](156069 'typeof' call_tmp[672658]))
            }
            unknown tmp[569494] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[672663] "expr temp" "maybe param" "maybe type" "temp"
            (672666 'move' call_tmp[672663](156071 call isNothingType call_type_tmp[492391]))
            unknown call_tmp[672668] "expr temp" "maybe param" "maybe type" "temp"
            (672671 'move' call_tmp[672668](156073 call == call_tmp[672663] 0))
            (569496 'move' tmp[569494](427640 call isTrue call_tmp[672668]))
            (569501 'move' tmp[569486](569498 '_paramFoldLogical' tmp[569487] tmp[569494]))
          }
          {
            (569506 'move' tmp[569486](569503 '_paramFoldLogical' tmp[569487] 0))
          }
          unknown call_tmp[672673] "expr temp" "maybe param" "maybe type" "temp"
          (672676 'move' call_tmp[672673](156120 call _cond_test tmp[569486]))
          if call_tmp[672673]
          {
            const field[156082] "dead at end of block" "const" "ref var"
            unknown call_tmp[672678] "expr temp" "maybe param" "maybe type" "temp"
            (672681 'move' call_tmp[672678](156081 call getImplementationField r[156016] i[156125]))
            (544005 'move' field[156082](544004 'addr of' call_tmp[672678]))
            (156085 'end of statement')
            unknown call_tmp[672683] "maybe param" "maybe type" "temp"
            (672686 'move' call_tmp[672683](156090 call chpl__defaultHash field[156082]))
            const fieldHash[156091] "dead at end of block" "const" "insert auto destroy"
            (544007 'init var' fieldHash[156091] call_tmp[672683])
            (156094 'end of statement' i[156125] field[156082])
            unknown call_tmp[672688] "expr temp" "maybe param" "maybe type" "temp"
            (672691 'move' call_tmp[672688](156097 call == i[156125] 1))
            unknown call_tmp[672693] "expr temp" "maybe param" "maybe type" "temp"
            (672696 'move' call_tmp[672693](156114 call _cond_test call_tmp[672688]))
            if call_tmp[672693]
            {
              (156101 call = ret[156027] fieldHash[156091])
              (482104 'end of statement' ret[156027] fieldHash[156091])
            }
            {
              unknown call_tmp[672698] "expr temp" "maybe param" "maybe type" "temp"
              (672701 'move' call_tmp[672698](156110 call chpl__defaultHashCombine fieldHash[156091] ret[156027] i[156125]))
              (156111 call = ret[156027] call_tmp[672698])
              (482107 'end of statement' ret[156027] fieldHash[156091] ret[156027] i[156125])
            }
          }
        }
      }
      label _unused_continueLabel[156130]
      label _breakLabel[156129]
    }
    (520889 'move' ret[520883](520888 'coerce' ret[156027] uint(64)[115]))
    gotoReturn _end_chpl__defaultHash[520881] _end_chpl__defaultHash[520881]
    (482112 'end of statement' ret[156027])
    label _end_chpl__defaultHash[520881]
    (520885 return ret[520883])
    (355186 'used modules list'(156023 'use' Reflection[224903]))
  }
  { scopeless type
    uint(64)[115]
  }
  function chpl__validDefaultAssocDomIdxType[156172](arg idxType[156170]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[520895] "RVV" "param" "temp"
    (520900 'move' ret[520895](520899 'deref' 0))
    (520897 return ret[520895])
  }
  function chpl__validDefaultAssocDomIdxType[156184](arg idxType[156182]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[520904] "RVV" "param" "temp"
    (520909 'move' ret[520904](520908 'deref' 1))
    (520906 return ret[520904])
  }
  where {
    unknown tmp[427678] "maybe param" "temp"
    unknown tmp[427699] "maybe param" "temp"
    unknown tmp[427720] "maybe param" "temp"
    unknown tmp[427741] "maybe param" "temp"
    unknown tmp[427762] "maybe param" "temp"
    unknown tmp[427783] "maybe param" "temp"
    unknown tmp[427804] "maybe param" "temp"
    unknown tmp[427825] "maybe param" "temp"
    unknown tmp[427846] "maybe param" "temp"
    unknown tmp[427867] "maybe param" "temp"
    unknown tmp[427888] "maybe param" "temp"
    unknown tmp[427909] "maybe param" "temp"
    unknown tmp[427930] "maybe param" "temp"
    (427941 'move' tmp[427930](156189 call isBoolType idxType[156182]))
    unknown call_tmp[672703] "expr temp" "maybe param" "maybe type" "temp"
    (672706 'move' call_tmp[672703](427943 call _cond_invalid tmp[427930]))
    if call_tmp[672703]
    {
      (427946 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569513] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569514] "maybe param" "temp"
    unknown call_tmp[672708] "expr temp" "maybe param" "maybe type" "temp"
    (672711 'move' call_tmp[672708](427931 call isTrue tmp[427930]))
    (569519 'move' tmp[569514](569517 call _cond_test call_tmp[672708]))
    if tmp[569514]
    {
      (569524 'move' tmp[569513](569521 '_paramFoldLogical' tmp[569514] 1))
    }
    {
      unknown tmp[569526] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672713] "expr temp" "maybe param" "maybe type" "temp"
      (672716 'move' call_tmp[672713](156193 call isIntType idxType[156182]))
      (569528 'move' tmp[569526](427935 call isTrue call_tmp[672713]))
      (569533 'move' tmp[569513](569530 '_paramFoldLogical' tmp[569514] tmp[569526]))
    }
    (427920 'move' tmp[427909] tmp[569513])
    unknown call_tmp[672718] "expr temp" "maybe param" "maybe type" "temp"
    (672721 'move' call_tmp[672718](427922 call _cond_invalid tmp[427909]))
    if call_tmp[672718]
    {
      (427925 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569540] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569541] "maybe param" "temp"
    unknown call_tmp[672723] "expr temp" "maybe param" "maybe type" "temp"
    (672726 'move' call_tmp[672723](427910 call isTrue tmp[427909]))
    (569546 'move' tmp[569541](569544 call _cond_test call_tmp[672723]))
    if tmp[569541]
    {
      (569551 'move' tmp[569540](569548 '_paramFoldLogical' tmp[569541] 1))
    }
    {
      unknown tmp[569553] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672728] "expr temp" "maybe param" "maybe type" "temp"
      (672731 'move' call_tmp[672728](156199 call isUintType idxType[156182]))
      (569555 'move' tmp[569553](427914 call isTrue call_tmp[672728]))
      (569560 'move' tmp[569540](569557 '_paramFoldLogical' tmp[569541] tmp[569553]))
    }
    (427899 'move' tmp[427888] tmp[569540])
    unknown call_tmp[672733] "expr temp" "maybe param" "maybe type" "temp"
    (672736 'move' call_tmp[672733](427901 call _cond_invalid tmp[427888]))
    if call_tmp[672733]
    {
      (427904 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569567] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569568] "maybe param" "temp"
    unknown call_tmp[672738] "expr temp" "maybe param" "maybe type" "temp"
    (672741 'move' call_tmp[672738](427889 call isTrue tmp[427888]))
    (569573 'move' tmp[569568](569571 call _cond_test call_tmp[672738]))
    if tmp[569568]
    {
      (569578 'move' tmp[569567](569575 '_paramFoldLogical' tmp[569568] 1))
    }
    {
      unknown tmp[569580] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672743] "expr temp" "maybe param" "maybe type" "temp"
      (672746 'move' call_tmp[672743](156205 call isRealType idxType[156182]))
      (569582 'move' tmp[569580](427893 call isTrue call_tmp[672743]))
      (569587 'move' tmp[569567](569584 '_paramFoldLogical' tmp[569568] tmp[569580]))
    }
    (427878 'move' tmp[427867] tmp[569567])
    unknown call_tmp[672748] "expr temp" "maybe param" "maybe type" "temp"
    (672751 'move' call_tmp[672748](427880 call _cond_invalid tmp[427867]))
    if call_tmp[672748]
    {
      (427883 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569594] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569595] "maybe param" "temp"
    unknown call_tmp[672753] "expr temp" "maybe param" "maybe type" "temp"
    (672756 'move' call_tmp[672753](427868 call isTrue tmp[427867]))
    (569600 'move' tmp[569595](569598 call _cond_test call_tmp[672753]))
    if tmp[569595]
    {
      (569605 'move' tmp[569594](569602 '_paramFoldLogical' tmp[569595] 1))
    }
    {
      unknown tmp[569607] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672758] "expr temp" "maybe param" "maybe type" "temp"
      (672761 'move' call_tmp[672758](156211 call isImagType idxType[156182]))
      (569609 'move' tmp[569607](427872 call isTrue call_tmp[672758]))
      (569614 'move' tmp[569594](569611 '_paramFoldLogical' tmp[569595] tmp[569607]))
    }
    (427857 'move' tmp[427846] tmp[569594])
    unknown call_tmp[672763] "expr temp" "maybe param" "maybe type" "temp"
    (672766 'move' call_tmp[672763](427859 call _cond_invalid tmp[427846]))
    if call_tmp[672763]
    {
      (427862 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569621] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569622] "maybe param" "temp"
    unknown call_tmp[672768] "expr temp" "maybe param" "maybe type" "temp"
    (672771 'move' call_tmp[672768](427847 call isTrue tmp[427846]))
    (569627 'move' tmp[569622](569625 call _cond_test call_tmp[672768]))
    if tmp[569622]
    {
      (569632 'move' tmp[569621](569629 '_paramFoldLogical' tmp[569622] 1))
    }
    {
      unknown tmp[569634] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672773] "expr temp" "maybe param" "maybe type" "temp"
      (672776 'move' call_tmp[672773](156217 call isComplexType idxType[156182]))
      (569636 'move' tmp[569634](427851 call isTrue call_tmp[672773]))
      (569641 'move' tmp[569621](569638 '_paramFoldLogical' tmp[569622] tmp[569634]))
    }
    (427836 'move' tmp[427825] tmp[569621])
    unknown call_tmp[672778] "expr temp" "maybe param" "maybe type" "temp"
    (672781 'move' call_tmp[672778](427838 call _cond_invalid tmp[427825]))
    if call_tmp[672778]
    {
      (427841 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569648] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569649] "maybe param" "temp"
    unknown call_tmp[672783] "expr temp" "maybe param" "maybe type" "temp"
    (672786 'move' call_tmp[672783](427826 call isTrue tmp[427825]))
    (569654 'move' tmp[569649](569652 call _cond_test call_tmp[672783]))
    if tmp[569649]
    {
      (569659 'move' tmp[569648](569656 '_paramFoldLogical' tmp[569649] 1))
    }
    {
      unknown tmp[569661] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672788] "expr temp" "maybe param" "maybe type" "temp"
      (672791 'move' call_tmp[672788](156222 call == idxType[156182] chpl_taskID_t[163]))
      (569663 'move' tmp[569661](427830 call isTrue call_tmp[672788]))
      (569668 'move' tmp[569648](569665 '_paramFoldLogical' tmp[569649] tmp[569661]))
    }
    (427815 'move' tmp[427804] tmp[569648])
    unknown call_tmp[672793] "expr temp" "maybe param" "maybe type" "temp"
    (672796 'move' call_tmp[672793](427817 call _cond_invalid tmp[427804]))
    if call_tmp[672793]
    {
      (427820 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569675] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569676] "maybe param" "temp"
    unknown call_tmp[672798] "expr temp" "maybe param" "maybe type" "temp"
    (672801 'move' call_tmp[672798](427805 call isTrue tmp[427804]))
    (569681 'move' tmp[569676](569679 call _cond_test call_tmp[672798]))
    if tmp[569676]
    {
      (569686 'move' tmp[569675](569683 '_paramFoldLogical' tmp[569676] 1))
    }
    {
      unknown tmp[569688] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672803] "expr temp" "maybe param" "maybe type" "temp"
      (672806 'move' call_tmp[672803](156228 call == idxType[156182] string[26]))
      (569690 'move' tmp[569688](427809 call isTrue call_tmp[672803]))
      (569695 'move' tmp[569675](569692 '_paramFoldLogical' tmp[569676] tmp[569688]))
    }
    (427794 'move' tmp[427783] tmp[569675])
    unknown call_tmp[672808] "expr temp" "maybe param" "maybe type" "temp"
    (672811 'move' call_tmp[672808](427796 call _cond_invalid tmp[427783]))
    if call_tmp[672808]
    {
      (427799 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569702] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569703] "maybe param" "temp"
    unknown call_tmp[672813] "expr temp" "maybe param" "maybe type" "temp"
    (672816 'move' call_tmp[672813](427784 call isTrue tmp[427783]))
    (569708 'move' tmp[569703](569706 call _cond_test call_tmp[672813]))
    if tmp[569703]
    {
      (569713 'move' tmp[569702](569710 '_paramFoldLogical' tmp[569703] 1))
    }
    {
      unknown tmp[569715] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672818] "expr temp" "maybe param" "maybe type" "temp"
      (672821 'move' call_tmp[672818](156234 call == idxType[156182] bytes[24]))
      (569717 'move' tmp[569715](427788 call isTrue call_tmp[672818]))
      (569722 'move' tmp[569702](569719 '_paramFoldLogical' tmp[569703] tmp[569715]))
    }
    (427773 'move' tmp[427762] tmp[569702])
    unknown call_tmp[672823] "expr temp" "maybe param" "maybe type" "temp"
    (672826 'move' call_tmp[672823](427775 call _cond_invalid tmp[427762]))
    if call_tmp[672823]
    {
      (427778 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569729] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569730] "maybe param" "temp"
    unknown call_tmp[672828] "expr temp" "maybe param" "maybe type" "temp"
    (672831 'move' call_tmp[672828](427763 call isTrue tmp[427762]))
    (569735 'move' tmp[569730](569733 call _cond_test call_tmp[672828]))
    if tmp[569730]
    {
      (569740 'move' tmp[569729](569737 '_paramFoldLogical' tmp[569730] 1))
    }
    {
      unknown tmp[569742] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672833] "expr temp" "maybe param" "maybe type" "temp"
      (672836 'move' call_tmp[672833](156240 call == idxType[156182] c_string[19]))
      (569744 'move' tmp[569742](427767 call isTrue call_tmp[672833]))
      (569749 'move' tmp[569729](569746 '_paramFoldLogical' tmp[569730] tmp[569742]))
    }
    (427752 'move' tmp[427741] tmp[569729])
    unknown call_tmp[672838] "expr temp" "maybe param" "maybe type" "temp"
    (672841 'move' call_tmp[672838](427754 call _cond_invalid tmp[427741]))
    if call_tmp[672838]
    {
      (427757 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569756] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569757] "maybe param" "temp"
    unknown call_tmp[672843] "expr temp" "maybe param" "maybe type" "temp"
    (672846 'move' call_tmp[672843](427742 call isTrue tmp[427741]))
    (569762 'move' tmp[569757](569760 call _cond_test call_tmp[672843]))
    if tmp[569757]
    {
      (569767 'move' tmp[569756](569764 '_paramFoldLogical' tmp[569757] 1))
    }
    {
      unknown tmp[569769] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672848] "expr temp" "maybe param" "maybe type" "temp"
      (672851 'move' call_tmp[672848](156247 call isClassType idxType[156182]))
      (569771 'move' tmp[569769](427746 call isTrue call_tmp[672848]))
      (569776 'move' tmp[569756](569773 '_paramFoldLogical' tmp[569757] tmp[569769]))
    }
    (427731 'move' tmp[427720] tmp[569756])
    unknown call_tmp[672853] "expr temp" "maybe param" "maybe type" "temp"
    (672856 'move' call_tmp[672853](427733 call _cond_invalid tmp[427720]))
    if call_tmp[672853]
    {
      (427736 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569783] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569784] "maybe param" "temp"
    unknown call_tmp[672858] "expr temp" "maybe param" "maybe type" "temp"
    (672861 'move' call_tmp[672858](427721 call isTrue tmp[427720]))
    (569789 'move' tmp[569784](569787 call _cond_test call_tmp[672858]))
    if tmp[569784]
    {
      (569794 'move' tmp[569783](569791 '_paramFoldLogical' tmp[569784] 1))
    }
    {
      unknown tmp[569796] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672863] "expr temp" "maybe param" "maybe type" "temp"
      (672866 'move' call_tmp[672863](156253 call isEnumType idxType[156182]))
      (569798 'move' tmp[569796](427725 call isTrue call_tmp[672863]))
      (569803 'move' tmp[569783](569800 '_paramFoldLogical' tmp[569784] tmp[569796]))
    }
    (427710 'move' tmp[427699] tmp[569783])
    unknown call_tmp[672868] "expr temp" "maybe param" "maybe type" "temp"
    (672871 'move' call_tmp[672868](427712 call _cond_invalid tmp[427699]))
    if call_tmp[672868]
    {
      (427715 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569810] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569811] "maybe param" "temp"
    unknown call_tmp[672873] "expr temp" "maybe param" "maybe type" "temp"
    (672876 'move' call_tmp[672873](427700 call isTrue tmp[427699]))
    (569816 'move' tmp[569811](569814 call _cond_test call_tmp[672873]))
    if tmp[569811]
    {
      (569821 'move' tmp[569810](569818 '_paramFoldLogical' tmp[569811] 1))
    }
    {
      unknown tmp[569823] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672878] "expr temp" "maybe param" "maybe type" "temp"
      (672881 'move' call_tmp[672878](156259 call isTupleType idxType[156182]))
      (569825 'move' tmp[569823](427704 call isTrue call_tmp[672878]))
      (569830 'move' tmp[569810](569827 '_paramFoldLogical' tmp[569811] tmp[569823]))
    }
    (427689 'move' tmp[427678] tmp[569810])
    unknown call_tmp[672883] "expr temp" "maybe param" "maybe type" "temp"
    (672886 'move' call_tmp[672883](427691 call _cond_invalid tmp[427678]))
    if call_tmp[672883]
    {
      (427694 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[569837] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[569838] "maybe param" "temp"
    unknown call_tmp[672888] "expr temp" "maybe param" "maybe type" "temp"
    (672891 'move' call_tmp[672888](427679 call isTrue tmp[427678]))
    (569843 'move' tmp[569838](569841 call _cond_test call_tmp[672888]))
    if tmp[569838]
    {
      (569848 'move' tmp[569837](569845 '_paramFoldLogical' tmp[569838] 1))
    }
    {
      unknown tmp[569850] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[672893] "expr temp" "maybe param" "maybe type" "temp"
      (672896 'move' call_tmp[672893](156265 call isRecordType idxType[156182]))
      (569852 'move' tmp[569850](427683 call isTrue call_tmp[672893]))
      (569857 'move' tmp[569837](569854 '_paramFoldLogical' tmp[569838] tmp[569850]))
    }
    (748401 call chpl_statementLevelSymbol tmp[569837])
  }
  (355184 'used modules list'(155411 'use' ChapelBase[307]))
}