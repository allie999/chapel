AST dump for MemConsistency after pass scopeResolve.
Module use list: HaltWrappers 

{
  type memory_order[186607]
  function _defaultOf[186616](arg t[186613] :
  memory_order[186607]) : _unknown[51] "inline" "last resort" "no doc"
  {
    function _defaultOfMemoryOrder[186620]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
    }
    { scopeless type
      memory_order[186607]
    }
    (186630 return(186629 call _defaultOfMemoryOrder))
  }
  function ==[186640](arg a[186637] :
  memory_order[186607], arg b[186643] :
  memory_order[186607]) : _unknown[51]
  {
    (186652 return(186651 '==' a[186637] b[186643]))
  }
  { scopeless type
    bool[10]
  }
  function !=[186664](arg a[186661] :
  memory_order[186607], arg b[186667] :
  memory_order[186607]) : _unknown[51]
  {
    (186676 return(186675 '!=' a[186661] b[186667]))
  }
  { scopeless type
    bool[10]
  }
  function =[186688](ref arg lhs[186685] :
  memory_order[186607], arg rhs[186691] :
  memory_order[186607]) : _unknown[51] "assignop" "no return value for void"
  {
    (186698 '=' lhs[186685] rhs[186691])
  }
  function memory_order[186607].writeThis[186708](arg _mt[186713]:_MT[238], arg this[186710]:memory_order[186607] :
  memory_order[186607], arg ch[186706]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    if(186916 call _cond_test(186717 call == this[186710] memory_order_relaxed[186926]))
    {
      (186737 call <~> ch[186706] "memory_order_relaxed")
    }
    {
      if(186910 call _cond_test(186742 call == this[186710] memory_order_consume[186931]))
      {
        (186762 call <~> ch[186706] "memory_order_consume")
      }
      {
        if(186904 call _cond_test(186767 call == this[186710] memory_order_acquire[186936]))
        {
          (186787 call <~> ch[186706] "memory_order_acquire")
        }
        {
          if(186898 call _cond_test(186792 call == this[186710] memory_order_release[186941]))
          {
            (186812 call <~> ch[186706] "memory_order_release")
          }
          {
            if(186892 call _cond_test(186817 call == this[186710] memory_order_acq_rel[186946]))
            {
              (186837 call <~> ch[186706] "memory_order_acq_rel")
            }
            {
              if(186886 call _cond_test(186842 call == this[186710] memory_order_seq_cst[186951]))
              {
                (186862 call <~> ch[186706] "memory_order_seq_cst")
              }
              {
                (186883 call <~> ch[186706] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
  }
  const memory_order_relaxed[186926] "const" "extern" memory_order[186607]
  (186929 'end of statement')
  const memory_order_consume[186931] "const" "extern" memory_order[186607]
  (186934 'end of statement')
  const memory_order_acquire[186936] "const" "extern" memory_order[186607]
  (186939 'end of statement')
  const memory_order_release[186941] "const" "extern" memory_order[186607]
  (186944 'end of statement')
  const memory_order_acq_rel[186946] "const" "extern" memory_order[186607]
  (186949 'end of statement')
  const memory_order_seq_cst[186951] "const" "extern" memory_order[186607]
  (186954 'end of statement')
  type memoryOrder[186966] def seqCst[186956]:memoryOrder[186966] def acqRel[186958]:memoryOrder[186966] def release[186960]:memoryOrder[186966] def acquire[186962]:memoryOrder[186966] def relaxed[186964]:memoryOrder[186966]
  function readableOrder[186975](param arg order[186972] :
  memoryOrder[186966]) param : _unknown[51]
  {
    if(187006 call _cond_test(186993 call ||(186982 call == order[186972] release[186960])(186991 call == order[186972] acqRel[186958])))
    {
      (186999 return acquire[186962])
    }
    {
      (187003 return order[186972])
    }
  }
  function c_memory_order[187019](param arg order[187016] :
  memoryOrder[186966]) : _unknown[51] "inline"
  {
    {
      unknown tmp[187112] "expr temp" "maybe param" "maybe type" "temp"
      (187114 'move' tmp[187112] order[187016])
      if(187119 call _cond_test(187116 call == tmp[187112] relaxed[186964]))
      {
        (187033 return memory_order_relaxed[186926])
      }
      {
        if(187125 call _cond_test(187122 call == tmp[187112] acquire[186962]))
        {
          (187044 return memory_order_acquire[186936])
        }
        {
          if(187132 call _cond_test(187129 call == tmp[187112] release[186960]))
          {
            (187055 return memory_order_release[186941])
          }
          {
            if(187139 call _cond_test(187136 call == tmp[187112] acqRel[186958]))
            {
              (187066 return memory_order_acq_rel[186946])
            }
            {
              if(187146 call _cond_test(187143 call == tmp[187112] seqCst[186956]))
              {
                (187077 return memory_order_seq_cst[186951])
              }
              {
                (187106 call exhaustiveSelectHalt module=[255] HaltWrappers[209998] "Invalid memoryOrder")
                (361862 'referenced modules list' HaltWrappers[209998])
              }
            }
          }
        }
      }
    }
    (355220 'used modules list'(187022 'import' HaltWrappers[209998]))
  }
  function chpl_rmem_consist_release[187155]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
  }
  function chpl_rmem_consist_acquire[187161]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
  }
  function chpl_rmem_consist_maybe_release[187171](arg order[187168] :
  memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
  }
  function chpl_rmem_consist_maybe_release[187181](param arg order[187178] :
  memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    (187189 call chpl_rmem_consist_maybe_release(187187 call c_memory_order order[187178]))
  }
  function chpl_rmem_consist_maybe_acquire[187200](arg order[187197] :
  memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
  }
  function chpl_rmem_consist_maybe_acquire[187210](param arg order[187207] :
  memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    (187218 call chpl_rmem_consist_maybe_acquire(187216 call c_memory_order order[187207]))
  }
  function chpl_rmem_consist_fence[187229](arg order[187226] :
  memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
  }
  function chpl_rmem_consist_fence[187239](param arg order[187236] :
  memoryOrder[186966]) : _unknown[51] "no return value for void"
  {
    (187247 call chpl_rmem_consist_fence(187245 call c_memory_order order[187236]))
  }
}