AST dump for LocaleModel after pass bulkCopyRecords.
Module use list: LocaleModelHelpFlat LocaleModelHelpMem IO 

{
  type _class_localson_fn[2051175] val _runtime_hdr[2051176]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051178]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2051180]:locale[28]
  function chpl__init_LocaleModel[416007]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1804912]:range(int(64),bounded,false)[1026833] "temp"
    (88779 call chpl_build_bounded_range[455175] 1 0 ret_tmp[1804912])
    (1804915 'move' call_tmp[632017] ret_tmp[1804912])
    const-val ret_tmp[1808563]:domain(1,int(64),false)[1252616] "temp"
    (88782 call chpl__buildDomainExpr[1244687] call_tmp[632017] ret_tmp[1808563])
    (1808566 'move' call_tmp[632022] ret_tmp[1808563])
    const-val call_tmp[632027]:_RuntimeTypeInfo[1253692] "dead at end of block" "maybe param" "temp"
    val default_arg_idxType[1253951]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632030 'move' call_tmp[632027](88775 call chpl__buildDomainRuntimeType[1246301] defaultDist[94053]))
    const-val ret_tmp[1810221]:domain(1,int(64),false)[1252616] "temp"
    (1287279 call chpl__coerceMove[1287285] call_tmp[632027] call_tmp[632022] ret_tmp[1810221])
    (1810224 'move' init_coerce_tmp[1253987] ret_tmp[1810221])
    (541680 'move' chpl_emptyLocaleSpace[88784] init_coerce_tmp[1253987])
    (2050429 '_private_broadcast' chpl_emptyLocaleSpace[88784])
    (632035 'move' call_tmp[632032](88791 call chpl__ensureDomainExpr[1253993] chpl_emptyLocaleSpace[88784]))
    (632040 'move' call_tmp[632037](88793 call chpl__buildArrayRuntimeType[1254012] call_tmp[632032]))
    (1297703 'move' _runtime_type_tmp_[1297698](1777948 '.v' call_tmp[632037] dom[1287264]))
    const-val ret_tmp[1810377]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1297696 call chpl__convertRuntimeTypeToValue[1297710] _runtime_type_tmp_[1297698] ret_tmp[1810377])
    (1810380 'move' chpl_emptyLocales[88795] ret_tmp[1810377])
    (2050431 '_private_broadcast' chpl_emptyLocales[88795])
    (513663 return _void[55])
  }
  function chpl__deinit_LocaleModel[89794]() : void[4] "resolved" "no return value for void"
  {
    {
      ref _indexOfInterest[89807]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89808]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
      (89817 'move' _iterator[89808](89815 call _getIterator[1298128] chpl_emptyLocales[88795]))
      {
        val ret[1873765]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1873767]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1873769]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
        val call_tmp[1873771]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1873880]:[domain(1,int(64),false)] locale[1287030] "temp"
        (1873885 'move' this[1873880](1873882 '.v' _iterator[89808] F0_this[1988349]))
        (1873773 'move' call_tmp[1873771](1873776 call _value[1287085] this[1873880]))
        const-val call_tmp[1873778]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1873780]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1873782 'move' coerce_tmp[1873780] call_tmp[1873771])
        const-val default_arg_tasksPerLocale[1873785]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873787 'move' default_arg_tasksPerLocale[1873785](1873790 call these_default_tasksPerLocale[1298398] call_tmp[1873771]))
        const-val default_arg_ignoreRunning[1873792]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873794 'move' default_arg_ignoreRunning[1873792](1873797 call these_default_ignoreRunning[1298429] coerce_tmp[1873780]))
        const-val default_arg_minIndicesPerTask[1873799]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873801 'move' default_arg_minIndicesPerTask[1873799](1873804 call these_default_minIndicesPerTask[1298460] coerce_tmp[1873780]))
        const-val ret_tmp[1873806]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
        (1873809 call these[1298282] coerce_tmp[1873780] default_arg_tasksPerLocale[1873785] default_arg_ignoreRunning[1873792] default_arg_minIndicesPerTask[1873799] ret_tmp[1873806])
        (1873815 'move' call_tmp[1873778] ret_tmp[1873806])
        (1873818 'move' _iterator[1873769](1873821 call _getIterator[1303720] call_tmp[1873778]))
        {
          val ret[1931136]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1931138]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1931140]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1931142]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
          const-val this[1931518]:[domain(1,int(64),false)] locale[1256505] "temp"
          (1931523 'move' this[1931518](1931520 '.v' _iterator[1873769] F0_this[1990457]))
          (1931144 'move' call_tmp[1931142](1931147 call dom[1258038] this[1931518]))
          const-val call_tmp[1931149]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1931151]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1931153 'move' coerce_tmp[1931151](1931155 'deref' call_tmp[1931142]))
          const-val ret_tmp[1931157]:_ir_chpl__serialViewIter[1303461] "temp"
          const-val this[1931525]:[domain(1,int(64),false)] locale[1256505] "temp"
          (1931530 'move' this[1931525](1931527 '.v' _iterator[1873769] F0_this[1990457]))
          (1931160 call chpl__serialViewIter[1298494] this[1931525] coerce_tmp[1931151] ret_tmp[1931157])
          (1931164 'move' call_tmp[1931149] ret_tmp[1931157])
          (1931167 'move' _iterator[1931140](1931170 call _getIterator[1303470] call_tmp[1931149]))
          {
            val ret[1931173]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
            val info[1931175]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
            val tmp[1931177]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[1931179]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[1931181]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1931183 'move' arr[1931181](1931185 '.v' _iterator[1931140] F0_arr[1992362]))
            (1931188 'move' tmp[1931179] arr[1931181])
            const-val arr[1931191]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1931193 'move' arr[1931191](1931195 '.v' _iterator[1931140] F0_arr[1992362]))
            (1931198 'move' tmp[1931177] arr[1931191])
            const-val arr[1931201]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1931203 'move' arr[1931201](1931205 '.v' _iterator[1931140] F0_arr[1992362]))
            (1931208 '=' info[1931175] arr[1931201])
            (1931211 'noop')
            const-val call_tmp[1931212]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1931214]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1931216]:domain(1,int(64),false)[1250953] "temp"
            (1931218 'move' viewDom[1931216](1931220 '.v' _iterator[1931140] F1_viewDom[1992366]))
            (1931223 'move' coerce_tmp[1931214] viewDom[1931216])
            const-val viewDom[1931226]:domain(1,int(64),false)[1250953] "temp"
            (1931228 'move' viewDom[1931226](1931230 '.v' _iterator[1931140] F1_viewDom[1992366]))
            (1931233 'move' call_tmp[1931212](1931236 call dsiLow[1300455] viewDom[1931226]))
            const-val call_tmp[1931238]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[1931240]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1931242 'move' arr[1931240](1931244 '.v' _iterator[1931140] F0_arr[1992362]))
            (1931247 'move' call_tmp[1931238](1931250 call getDataIndex[1300714] arr[1931240] call_tmp[1931212]))
            const-val first[1931253]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1931255 'move' first[1931253] call_tmp[1931238])
            const-val call_tmp[1931258]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1931260]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1931262]:domain(1,int(64),false)[1250953] "temp"
            (1931264 'move' viewDom[1931262](1931266 '.v' _iterator[1931140] F1_viewDom[1992366]))
            (1931269 'move' coerce_tmp[1931260] viewDom[1931262])
            (1931272 'move' call_tmp[1931258](1931275 call dsiLow[1300455] coerce_tmp[1931260]))
            const-val call_tmp[1931277]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1931279 'move' call_tmp[1931277](1931282 call chpl__idxToInt[1026935] call_tmp[1931258]))
            const-val call_tmp[1931284]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1931286 'move' call_tmp[1931284](1931289 call +[949685] call_tmp[1931277]))
            const-val call_tmp[1931291]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1931293]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1931295]:domain(1,int(64),false)[1250953] "temp"
            (1931297 'move' viewDom[1931295](1931299 '.v' _iterator[1931140] F1_viewDom[1992366]))
            (1931302 'move' coerce_tmp[1931293] viewDom[1931295])
            (1931305 'move' call_tmp[1931291](1931308 call chpl_intToIdx[1301884] coerce_tmp[1931293] call_tmp[1931284]))
            const-val call_tmp[1931311]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1931313 'move' call_tmp[1931311](1931316 call getDataIndex[1300714] info[1931175] call_tmp[1931291]))
            const-val second[1931319]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1931321 'move' second[1931319] call_tmp[1931311])
            const-val call_tmp[1931324]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1931326 'move' call_tmp[1931324](1931329 call -[440454] call_tmp[1931311] call_tmp[1931238]))
            const-val step[1931332]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1931334 'move' step[1931332] call_tmp[1931324])
            const-val call_tmp[1931337]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1931339]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1931341]:domain(1,int(64),false)[1250953] "temp"
            (1931343 'move' viewDom[1931341](1931345 '.v' _iterator[1931140] F1_viewDom[1992366]))
            (1931348 'move' coerce_tmp[1931339] viewDom[1931341])
            (1931351 'move' call_tmp[1931337](1931354 call dsiNumIndices[1263653] coerce_tmp[1931339]))
            const-val call_tmp[1931356]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1931358 'move' call_tmp[1931356](1931361 call -[962245] call_tmp[1931337]))
            const-val call_tmp[1931363]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1931365 'move' call_tmp[1931363](1931368 call *[441866] call_tmp[1931356] call_tmp[1931324]))
            const-val call_tmp[1931371]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1931373 'move' call_tmp[1931371](1931376 call +[439674] call_tmp[1931238] call_tmp[1931363]))
            const-val last[1931379]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1931381 'move' last[1931379] call_tmp[1931371])
            val _indexOfInterest[1931384]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1931386]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1931388]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1931390]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
            (1931393 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1931238] call_tmp[1931371] call_tmp[1931324] ret_tmp[1931390])
            (1931398 'move' call_tmp[1931388] ret_tmp[1931390])
            (1931401 'move' _iterator[1931386](1931404 call _getIterator[1303031] call_tmp[1931388]))
            {
              val ret[1960823]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
              val call_tmp[1960825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[1960990]:int(64)[13] "temp"
              (1960995 'move' stride[1960990](1960992 '.v' _iterator[1931386] F2_stride[1993906]))
              (1960828 call chpl_range_check_stride[1102852] stride[1960990])
              val call_tmp[1960830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1960832]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1960997]:int(64)[13] "temp"
              (1961002 'move' low[1960997](1960999 '.v' _iterator[1931386] F0_low[1993898]))
              (1960834 'move' default_arg_first[1960832](1960837 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1960997]))
              const-val default_arg_last[1960839]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1961004]:int(64)[13] "temp"
              (1961009 'move' high[1961004](1961006 '.v' _iterator[1931386] F1_high[1993902]))
              (1960841 'move' default_arg_last[1960839](1960844 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1961004]))
              const-val _return_tmp_[1960846]:bool[10] "dead after last mention" "temp"
              const-val low[1961011]:int(64)[13] "temp"
              (1961016 'move' low[1961011](1961013 '.v' _iterator[1931386] F0_low[1993898]))
              const-val high[1961018]:int(64)[13] "temp"
              (1961023 'move' high[1961018](1961020 '.v' _iterator[1931386] F1_high[1993902]))
              const-val stride[1961025]:int(64)[13] "temp"
              (1961030 'move' stride[1961025](1961027 '.v' _iterator[1931386] F2_stride[1993906]))
              (1960848 'move' _return_tmp_[1960846](1960851 call chpl_checkIfRangeIterWillOverflow[1096095] low[1961011] high[1961018] stride[1961025] default_arg_first[1960832] default_arg_last[1960839] 1))
              val i[1960858]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1960860]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1960862 'move' i[1960858] 0)
              CForLoop[1960865] hazard
              {
                const-val yret[1960885]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1960887 'move' yret[1960885] i[1960858])
                const-val _yieldedIndex[1960901]:int(64)[13] "temp"
                (1960988 'move' _yieldedIndex[1960901] i[1960858])
                {
                  const-val i[1960903]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1960905 'move' i[1960903] _yieldedIndex[1960901])
                  ref yret[1960908]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1960910]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1960912]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                  (1960914 'move' _this_tmp_[1960912](1960917 call theData[1303269] info[1931175]))
                  val coerce_tmp[1960919]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1960921 'move' coerce_tmp[1960919](1960923 'deref' _this_tmp_[1960912]))
                  (1960925 'move' call_tmp[1960910](1960928 call this[1303416] coerce_tmp[1960919] _yieldedIndex[1960901]))
                  ref _yieldedIndex[1960931]:_ref(locale)[948863] "temp"
                  (1960933 'move' _yieldedIndex[1960931] call_tmp[1960910])
                  {
                    ref elem[1960937]:_ref(locale)[948863] "index var" "insert auto destroy"
                    (1960939 'move' elem[1960937] _yieldedIndex[1960931])
                    ref yret[1960942]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[1960944]:_ref(locale)[948863] "temp"
                    (1960946 'move' _yieldedIndex[1960944] elem[1960937])
                    {
                      ref i[1960950]:_ref(locale)[948863] "index var" "insert auto destroy"
                      (1960952 'move' i[1960950] _yieldedIndex[1960944])
                      ref yret[1960955]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1960957]:_ref(locale)[948863] "temp"
                      (1960959 'move' _yieldedIndex[1960957] i[1960950])
                      {
                        ref l[1960963]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1960965 'move' l[1960963] _yieldedIndex[1960957])
                        {
                          ref call_tmp[1960969]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
                          (1960971 'move' call_tmp[1960969](1960974 call _instance[782774] l[1960963]))
                          val coerce_tmp[1960976]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1960978 'move' coerce_tmp[1960976](1960980 'deref' call_tmp[1960969]))
                          (1960983 call chpl__delete[983310] coerce_tmp[1960976])
                        }
                        label _continueLabel[1960985]
                      }
                    }
                  }
                }
                {
                  const-val low[1961032]:int(64)[13] "temp"
                  (1961037 'move' low[1961032](1961034 '.v' _iterator[1931386] F0_low[1993898]))
                  (1960867 '=' i[1960858] low[1961032])
                }
                {
                  const-val high[1961039]:int(64)[13] "temp"
                  (1961044 'move' high[1961039](1961041 '.v' _iterator[1931386] F1_high[1993902]))
                  (1960871 '<=' i[1960858] high[1961039])
                }
                {
                  val call_tmp[1960875]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1960877]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[1961046]:int(64)[13] "temp"
                  (1961051 'move' stride[1961046](1961048 '.v' _iterator[1931386] F2_stride[1993906]))
                  (1960879 'move' call_tmp[1960877] stride[1961046])
                  const-val stride[1961053]:int(64)[13] "temp"
                  (1961058 'move' stride[1961053](1961055 '.v' _iterator[1931386] F2_stride[1993906]))
                  (1960882 '+=' i[1960858] stride[1961053])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[1960897]
            }
            (1931467 call _freeIterator[1303204] _iterator[1931386])
            label _endchpl__serialViewIter[1931469]
          }
          (1931472 call _freeIterator[1303639] _iterator[1931140])
          label _endthese[1931474]
        }
        (1873847 call _freeIterator[1304244] _iterator[1873769])
        label _endthese[1873849]
      }
      label _breakLabel[89813]
      (1815237 call _freeIterator[1304995] _iterator[89808])
    }
    label _endchpl__deinit_LocaleModel[1824836]
    (1824844 call chpl__autoDestroy[1508195] call_tmp[632017])
    (1824841 call chpl__autoDestroy[1606482] chpl_emptyLocales[88795])
    (1824838 call chpl__autoDestroy[1530701] chpl_emptyLocaleSpace[88784])
    (513665 return _void[55])
  }
  function chpl_localeModel_sublocToExecutionSubloc[88746](const in arg full_subloc[88743]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513372]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513377 'move' ret[513372] full_subloc[88743])
    (513374 return ret[513372])
  }
  function chpl_localeModel_sublocMerge[88760](const in arg full_subloc[88757]:int(32)[95], const in arg execution_subloc[88763]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513381]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513386 'move' ret[513381] execution_subloc[88763])
    (513383 return ret[513381])
  }
  const-val chpl_emptyLocaleSpace[88784]:domain(1,int(64),false)[1252616] "dead at end of block" "const" "insert auto destroy"
  const-val chpl_emptyLocales[88795]:[domain(1,int(64),false)] locale[1287030] "dead at end of block" "const" "insert auto destroy" "unsafe"
  function LocaleModel[89195].init[88871](const in arg this[89201]:LocaleModel[89195], const  ref arg parent_loc[88868]:locale[28]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[632064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (632067 'move' call_tmp[632064] rootLocaleInitialized[310])
    if call_tmp[632064]
    {
      (88877 call halt[154111] "Cannot create additional LocaleModel instances")
    }
    val super_tmp[460308]:AbstractLocaleModel[91502] "dead after last mention" "temporary of super field" "temp"
    (460310 'move' super_tmp[460308](460307 '.v' this[89201] super[355682]))
    (88891 call init[91481] super_tmp[460308] parent_loc[88868])
    val tmp[460313]:AbstractLocaleModel[91502] "dead after last mention" "temp" "type variable"
    val call_tmp[632076]:AbstractLocaleModel[91502] "dead at end of block" "maybe param" "temp"
    (632079 'move' call_tmp[632076](460324 'cast' AbstractLocaleModel[91502] this[89201]))
    val chpl__thisAsParent[460321]:AbstractLocaleModel[91502] "dead at end of block" "insert auto destroy" "temp"
    (541686 'move' chpl__thisAsParent[460321](1351459 call chpl__initCopy[1351461] call_tmp[632076]))
    (460327 'setcid' chpl__thisAsParent[460321])
    const-val call_tmp[632081]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (632084 'move' call_tmp[632081](88896 'cast' int(64)[13] chpl_nodeID[208207]))
    val tmp[460329]:int(64)[13] "dead after last mention" "temp"
    (460332 'move' tmp[460329] call_tmp[632081])
    (460334 '.=' this[89201] _node_id[88803] tmp[460329])
    val tmp[460338]:string[26] "dead after last mention" "temp"
    (1351826 call init[30763] tmp[460338])
    (460343 '.=' this[89201] local_name[88808] tmp[460338])
    (460348 'setcid' this[89201])
    (88910 call setup[89183] this[89201])
    (513390 return _void[55])
  }
  function LocaleModel[89195].getChildCount[89027](const in arg this[89237]:LocaleModel[89195]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513470]:int(64)[13] "dead after last mention" "RVV" "temp"
    (513475 'move' ret[513470] 0)
    (513472 return ret[513470])
  }
  function LocaleModel[89195].getChild[89088](const in arg this[89245]:LocaleModel[89195], const in arg idx[89085]:int(64)[13], ref arg _retArg[1814780]:_ref(locale)[948863]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "unsafe" "virtual"
  {
    const-val ret[513493]:locale[28] "dead after last mention" "RVV" "temp"
    (89110 call halt[154111] "requesting a child from a flat LocaleModel locale")
    const-val tmp[89114]:locale[28] "dead at end of block" "insert auto destroy"
    (1735043 call init[90003] tmp[89114])
    (1735041 'move' ret[513493] tmp[89114])
    gotoReturn _end_getChild[513491] _end_getChild[513491]
    label _end_getChild[513491]
    (1814782 '=' _retArg[1814780] ret[513493])
    (1814784 return _void[55])
  }
  function LocaleModel[89195].setup[89183](const in arg this[89257]:LocaleModel[89195]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[632141]:_ref(string)[937958] "dead after last mention" "maybe param" "temp"
    (632144 'move' call_tmp[632141](377746 call local_name[781090] this[89257]))
    val _formal_tmp_out_local_name[1351486]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (89189 call helpSetupLocaleFlat[208865] this[89257] _formal_tmp_out_local_name[1351486])
    (1351488 call =[38272] call_tmp[632141] _formal_tmp_out_local_name[1351486])
    (1815223 call chpl__autoDestroy[1435320] _formal_tmp_out_local_name[1351486])
    (513526 return _void[55])
  }
  function LocaleModel[89195].local_name[781090](const in arg this[781094]:LocaleModel[89195]) ref : _ref(string)[937958] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781104]:_ref(string)[937958] "dead after last mention" "RVV" "temp"
    ref call_tmp[781111]:_ref(string)[937958] "dead after last mention" "maybe param" "temp"
    (781114 'move' call_tmp[781111](781098 '.' this[781094] local_name[88808]))
    (781109 'move' ret[781104] call_tmp[781111])
    (781106 return ret[781104])
  }
  function LocaleModel[89195].deinit[781116](const in arg this[781120]:LocaleModel[89195]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1788112]
    ref _field_destructor_tmp_[1788110]:_ref(string)[937958] "temp"
    (1788117 'move' _field_destructor_tmp_[1788110](1788114 '.' this[781120] local_name[88808]))
    (1788119 call deinit[30834] _field_destructor_tmp_[1788110])
    val _parent_destructor_tmp_[1788122]:AbstractLocaleModel[91502] "temp"
    (1788127 'move' _parent_destructor_tmp_[1788122](1788123 'cast' AbstractLocaleModel[91502] this[781120]))
    (1788129 call deinit[784060] _parent_destructor_tmp_[1788122])
    (781128 return _void[55])
  }
  function _new[1351837](const  ref arg parent_loc[1351846]:locale[28]) : LocaleModel[89195] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1779373]:LocaleModel[89195] "temp"
    val ret[1351879]:LocaleModel[89195] "dead after last mention" "RVV" "temp"
    val initTemp[1351839]:LocaleModel[89195] "dead after last mention" "temp"
    const-val call_tmp[1351886]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1351889 'move' call_tmp[1351886](1351898 'sizeof_bundle' LocaleModel[89195]))
    const-val cast_tmp[1351901]:c_void_ptr[149] "dead after last mention" "temp"
    (1351903 'move' cast_tmp[1351901](1351854 call chpl_here_alloc[187788] call_tmp[1351886] 64))
    (1351857 'move' initTemp[1351839](1351905 'cast' LocaleModel[89195] cast_tmp[1351901]))
    (1351859 'setcid' initTemp[1351839])
    (1351840 call init[88871] initTemp[1351839] parent_loc[1351846])
    val tmp[1351861]:LocaleModel[89195] "dead after last mention" "temp"
    (1351868 'move' tmp[1351861] initTemp[1351839])
    (1351884 'move' ret[1351879] tmp[1351861])
    (1351881 return ret[1351879])
  }
  type LocaleModel[89195] val super[355682]:AbstractLocaleModel[91502] "super class" const-val _node_id[88803]:int(64)[13] "const" val local_name[88808]:string[26]
  function RootLocale[89694].init[89297](const in arg this[89696]:RootLocale[89694]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[460350]:AbstractRootLocale[92012] "dead after last mention" "temporary of super field" "temp"
    (460352 'move' super_tmp[460350](460349 '.v' this[89696] super[355686]))
    (89305 call init[91544] super_tmp[460350] nilLocale[89942])
    val tmp[460355]:AbstractRootLocale[92012] "dead after last mention" "temp" "type variable"
    val call_tmp[632153]:AbstractRootLocale[92012] "dead at end of block" "maybe param" "temp"
    (632156 'move' call_tmp[632153](460366 'cast' AbstractRootLocale[92012] this[89696]))
    val chpl__thisAsParent[460363]:AbstractRootLocale[92012] "dead at end of block" "insert auto destroy" "temp"
    (541690 'move' chpl__thisAsParent[460363](1305203 call chpl__initCopy[986307] call_tmp[632153]))
    (460369 'setcid' chpl__thisAsParent[460363])
    ref call_tmp[632158]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (632161 'move' call_tmp[632158](377755 '.' this[89696] nPUsPhysAcc[90699]))
    (89310 call =[435365] call_tmp[632158] 0)
    ref call_tmp[632163]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (632166 'move' call_tmp[632163](377760 '.' this[89696] nPUsPhysAll[90704]))
    (89315 call =[435365] call_tmp[632163] 0)
    ref call_tmp[632168]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (632171 'move' call_tmp[632168](377765 '.' this[89696] nPUsLogAcc[90689]))
    (89320 call =[435365] call_tmp[632168] 0)
    ref call_tmp[632173]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (632176 'move' call_tmp[632173](377770 '.' this[89696] nPUsLogAll[90694]))
    (89325 call =[435365] call_tmp[632173] 0)
    ref call_tmp[632178]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (632181 'move' call_tmp[632178](377775 '.' this[89696] maxTaskPar[90746]))
    (89330 call =[435365] call_tmp[632178] 0)
    const-val call_tmp[632183]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632186 'move' call_tmp[632183](460378 call -[962245] numLocales[209892]))
    const-val call_tmp[632188]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804924]:range(int(64),bounded,false)[1026833] "temp"
    (460375 call chpl_build_bounded_range[455175] 0 call_tmp[632183] ret_tmp[1804924])
    (1804927 'move' call_tmp[632188] ret_tmp[1804924])
    const-val call_tmp[632193]:domain(1,int(64),false)[1252616] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1808569]:domain(1,int(64),false)[1252616] "temp"
    (460373 call chpl__buildDomainExpr[1244687] call_tmp[632188] ret_tmp[1808569])
    (1808572 'move' call_tmp[632193] ret_tmp[1808569])
    const-val call_tmp[632198]:_RuntimeTypeInfo[1253692] "dead after last mention" "maybe param" "temp"
    val default_arg_idxType[1305219]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632201 'move' call_tmp[632198](460384 call chpl__buildDomainRuntimeType[1246301] defaultDist[94053]))
    val tmp[460381]:domain(1,int(64),false)[1252616] "dead after last mention" "temp"
    const-val init_coerce_tmp[1305237]:domain(1,int(64),false)[1252616] "dead after last mention" "temp"
    const-val ret_tmp[1810227]:domain(1,int(64),false)[1252616] "temp"
    (1305247 call chpl__coerceMove[1287285] call_tmp[632198] call_tmp[632193] ret_tmp[1810227])
    (1810230 'move' init_coerce_tmp[1305237] ret_tmp[1810227])
    (460387 'move' tmp[460381] init_coerce_tmp[1305237])
    (460389 '.=' this[89696] myLocaleSpace[89280] tmp[460381])
    (1815226 call chpl__autoDestroy[1508195] call_tmp[632188])
    val tmp[460393]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "temp"
    ref call_tmp[632203]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "maybe param" "temp"
    (632206 'move' call_tmp[632203](460407 '.' this[89696] myLocaleSpace[89280]))
    ref call_tmp[632208]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "maybe param" "temp"
    (632211 'move' call_tmp[632208](460398 call chpl__ensureDomainExpr[1253993] call_tmp[632203]))
    const-val call_tmp[632213]:_RuntimeTypeInfo[1287263] "dead after last mention" "expr temp" "maybe param" "temp"
    (632216 'move' call_tmp[632213](460396 call chpl__buildArrayRuntimeType[1254012] call_tmp[632208]))
    const-val _runtime_type_tmp_[1305256]:domain(1,int(64),false)[1252616] "dead after last mention" "temp"
    (1305261 'move' _runtime_type_tmp_[1305256](1777952 '.v' call_tmp[632213] dom[1287264]))
    const-val ret_tmp[1810383]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1305254 call chpl__convertRuntimeTypeToValue[1297710] _runtime_type_tmp_[1305256] ret_tmp[1810383])
    (1810386 'move' tmp[460393] ret_tmp[1810383])
    (460403 '.=' this[89696] myLocales[89291] tmp[460393])
    (460410 'setcid' this[89696])
    (513528 return _void[55])
  }
  function RootLocale[89694].setup[89337](const in arg this[89700]:RootLocale[89694]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (89342 call helpSetupRootLocaleFlat[208417] this[89700])
    (513530 return _void[55])
  }
  function RootLocale[89694].getChildCount[89428](const in arg this[89724]:RootLocale[89694]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513572]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[632244]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (632247 'move' call_tmp[632244](89433 call myLocaleSpace[781156] this[89724]))
    const-val call_tmp[632251]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632254 'move' call_tmp[632251](89436 call size[1550359] call_tmp[632244]))
    (513577 'move' ret[513572] call_tmp[632251])
    (513574 return ret[513572])
  }
  function RootLocale[89694].getChild[89514](const in arg this[89736]:RootLocale[89694], const in arg idx[89511]:int(64)[13], ref arg _retArg[1814764]:_ref(locale)[948863]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513604]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[632272]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1735049]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "temp"
    (1735051 'move' _this_tmp_[1735049](89519 call myLocales[781182] this[89736]))
    (632275 'move' call_tmp[632272](1735057 call this[1347401] _this_tmp_[1735049] idx[89511]))
    (513609 'move' ret[513604](1814768 call chpl__initCopy[1435339] call_tmp[632272]))
    (1814766 '=' _retArg[1814764] ret[513604])
    (1814770 return _void[55])
  }
  function RootLocale[89694].getDefaultLocaleArray[89596](const in arg this[89748]:RootLocale[89694]) const ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "method" "primary method" "method overrides" "resolved"
  {
    ref ret[513636]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "RVV" "temp"
    ref call_tmp[632293]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "maybe param" "temp"
    (632296 'move' call_tmp[632293](377797 call myLocales[781182] this[89748]))
    (513641 'move' ret[513636] call_tmp[632293])
    (513638 return ret[513636])
  }
  function RootLocale[89694].localeIDtoLocale[89610](const in arg this[89752]:RootLocale[89694], const  ref arg id[89607]:chpl_localeID_t[209352], ref arg _retArg[1814772]:_ref(locale)[948863]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513645]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[632300]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (632303 'move' call_tmp[632300](89616 call chpl_rt_nodeFromLocaleID[209446] id[89607]))
    ref call_tmp[632305]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1735095]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "temp"
    (1735097 'move' _this_tmp_[1735095](377803 call myLocales[781182] this[89752]))
    const-val coerce_tmp[1736413]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1736419 'move' coerce_tmp[1736413](1736415 'cast' int(64)[13] call_tmp[632300]))
    const-val coerce_tmp[1736421]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1736427 'move' coerce_tmp[1736421](1736423 'cast' int(64)[13] call_tmp[632300]))
    (632308 'move' call_tmp[632305](1736409 call this[1347401] _this_tmp_[1735095] coerce_tmp[1736421]))
    (513650 'move' ret[513645](1814776 call chpl__initCopy[1435339] call_tmp[632305]))
    (1814774 '=' _retArg[1814772] ret[513645])
    (1814778 return _void[55])
  }
  function RootLocale[89694].deinit[89626](const in arg this[89756]:RootLocale[89694]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    {
      ref _indexOfInterest[89657]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89658]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead at end of block" "expr temp" "temp"
      ref call_tmp[632312]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead at end of block" "maybe param" "temp"
      (632315 'move' call_tmp[632312](377809 call myLocales[781182] this[89756]))
      (89667 'move' _iterator[89658](89665 call _getIterator[1298128] call_tmp[632312]))
      {
        val ret[1873635]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1873637]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1873639]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] "dead at end of block" "expr temp" "temp"
        val call_tmp[1873641]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1873757]:[domain(1,int(64),false)] locale[1287030] "temp"
        (1873762 'move' this[1873757](1873759 '.v' _iterator[89658] F0_this[1988349]))
        (1873643 'move' call_tmp[1873641](1873646 call _value[1287085] this[1873757]))
        const-val call_tmp[1873648]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1873650]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1873652 'move' coerce_tmp[1873650] call_tmp[1873641])
        const-val default_arg_tasksPerLocale[1873655]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873657 'move' default_arg_tasksPerLocale[1873655](1873660 call these_default_tasksPerLocale[1298398] call_tmp[1873641]))
        const-val default_arg_ignoreRunning[1873662]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873664 'move' default_arg_ignoreRunning[1873662](1873667 call these_default_ignoreRunning[1298429] coerce_tmp[1873650]))
        const-val default_arg_minIndicesPerTask[1873669]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1873671 'move' default_arg_minIndicesPerTask[1873669](1873674 call these_default_minIndicesPerTask[1298460] coerce_tmp[1873650]))
        const-val ret_tmp[1873676]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "temp"
        (1873679 call these[1298282] coerce_tmp[1873650] default_arg_tasksPerLocale[1873655] default_arg_ignoreRunning[1873662] default_arg_minIndicesPerTask[1873669] ret_tmp[1873676])
        (1873685 'move' call_tmp[1873648] ret_tmp[1873676])
        (1873688 'move' _iterator[1873639](1873691 call _getIterator[1303720] call_tmp[1873648]))
        {
          val ret[1930732]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303711] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1930734]:_ref(locale)[948863] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1930736]:_ic_chpl__serialViewIter[1303455] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1930738]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
          const-val this[1931121]:[domain(1,int(64),false)] locale[1256505] "temp"
          (1931126 'move' this[1931121](1931123 '.v' _iterator[1873639] F0_this[1990457]))
          (1930740 'move' call_tmp[1930738](1930743 call dom[1258038] this[1931121]))
          const-val call_tmp[1930745]:_ir_chpl__serialViewIter[1303461] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1930747]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1930749 'move' coerce_tmp[1930747](1930751 'deref' call_tmp[1930738]))
          const-val ret_tmp[1930753]:_ir_chpl__serialViewIter[1303461] "temp"
          const-val this[1931128]:[domain(1,int(64),false)] locale[1256505] "temp"
          (1931133 'move' this[1931128](1931130 '.v' _iterator[1873639] F0_this[1990457]))
          (1930756 call chpl__serialViewIter[1298494] this[1931128] coerce_tmp[1930747] ret_tmp[1930753])
          (1930760 'move' call_tmp[1930745] ret_tmp[1930753])
          (1930763 'move' _iterator[1930736](1930766 call _getIterator[1303470] call_tmp[1930745]))
          {
            val ret[1930769]:_ir_chpl__serialViewIter[1303461] "dead after last mention" "RVV" "temp"
            val info[1930771]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
            val tmp[1930773]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[1930775]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[1930777]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1930779 'move' arr[1930777](1930781 '.v' _iterator[1930736] F0_arr[1992362]))
            (1930784 'move' tmp[1930775] arr[1930777])
            const-val arr[1930787]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1930789 'move' arr[1930787](1930791 '.v' _iterator[1930736] F0_arr[1992362]))
            (1930794 'move' tmp[1930773] arr[1930787])
            const-val arr[1930797]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1930799 'move' arr[1930797](1930801 '.v' _iterator[1930736] F0_arr[1992362]))
            (1930804 '=' info[1930771] arr[1930797])
            (1930807 'noop')
            const-val call_tmp[1930808]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1930810]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1930812]:domain(1,int(64),false)[1250953] "temp"
            (1930814 'move' viewDom[1930812](1930816 '.v' _iterator[1930736] F1_viewDom[1992366]))
            (1930819 'move' coerce_tmp[1930810] viewDom[1930812])
            const-val viewDom[1930822]:domain(1,int(64),false)[1250953] "temp"
            (1930824 'move' viewDom[1930822](1930826 '.v' _iterator[1930736] F1_viewDom[1992366]))
            (1930829 'move' call_tmp[1930808](1930832 call dsiLow[1300455] viewDom[1930822]))
            const-val call_tmp[1930834]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[1930836]:[domain(1,int(64),false)] locale[1256505] "temp"
            (1930838 'move' arr[1930836](1930840 '.v' _iterator[1930736] F0_arr[1992362]))
            (1930843 'move' call_tmp[1930834](1930846 call getDataIndex[1300714] arr[1930836] call_tmp[1930808]))
            const-val first[1930849]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1930851 'move' first[1930849] call_tmp[1930834])
            const-val call_tmp[1930854]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1930856]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1930858]:domain(1,int(64),false)[1250953] "temp"
            (1930860 'move' viewDom[1930858](1930862 '.v' _iterator[1930736] F1_viewDom[1992366]))
            (1930865 'move' coerce_tmp[1930856] viewDom[1930858])
            (1930868 'move' call_tmp[1930854](1930871 call dsiLow[1300455] coerce_tmp[1930856]))
            const-val call_tmp[1930873]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930875 'move' call_tmp[1930873](1930878 call chpl__idxToInt[1026935] call_tmp[1930854]))
            const-val call_tmp[1930880]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930882 'move' call_tmp[1930880](1930885 call +[949685] call_tmp[1930873]))
            const-val call_tmp[1930887]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1930889]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1930891]:domain(1,int(64),false)[1250953] "temp"
            (1930893 'move' viewDom[1930891](1930895 '.v' _iterator[1930736] F1_viewDom[1992366]))
            (1930898 'move' coerce_tmp[1930889] viewDom[1930891])
            (1930901 'move' call_tmp[1930887](1930904 call chpl_intToIdx[1301884] coerce_tmp[1930889] call_tmp[1930880]))
            const-val call_tmp[1930907]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1930909 'move' call_tmp[1930907](1930912 call getDataIndex[1300714] info[1930771] call_tmp[1930887]))
            const-val second[1930915]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1930917 'move' second[1930915] call_tmp[1930907])
            const-val call_tmp[1930920]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1930922 'move' call_tmp[1930920](1930925 call -[440454] call_tmp[1930907] call_tmp[1930834]))
            const-val step[1930928]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1930930 'move' step[1930928] call_tmp[1930920])
            const-val call_tmp[1930933]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1930935]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1930937]:domain(1,int(64),false)[1250953] "temp"
            (1930939 'move' viewDom[1930937](1930941 '.v' _iterator[1930736] F1_viewDom[1992366]))
            (1930944 'move' coerce_tmp[1930935] viewDom[1930937])
            (1930947 'move' call_tmp[1930933](1930950 call dsiNumIndices[1263653] coerce_tmp[1930935]))
            const-val call_tmp[1930952]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930954 'move' call_tmp[1930952](1930957 call -[962245] call_tmp[1930933]))
            const-val call_tmp[1930959]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1930961 'move' call_tmp[1930959](1930964 call *[441866] call_tmp[1930952] call_tmp[1930920]))
            const-val call_tmp[1930967]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1930969 'move' call_tmp[1930967](1930972 call +[439674] call_tmp[1930834] call_tmp[1930959]))
            const-val last[1930975]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1930977 'move' last[1930975] call_tmp[1930967])
            val _indexOfInterest[1930980]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1930982]:_ic_chpl_direct_pos_stride_range_iter[1303016] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1930984]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1930986]:_ir_chpl_direct_pos_stride_range_iter[1303022] "temp"
            (1930989 call chpl_direct_pos_stride_range_iter[1301971] call_tmp[1930834] call_tmp[1930967] call_tmp[1930920] ret_tmp[1930986])
            (1930994 'move' call_tmp[1930984] ret_tmp[1930986])
            (1930997 'move' _iterator[1930982](1931000 call _getIterator[1303031] call_tmp[1930984]))
            {
              val ret[1960578]:_ir_chpl_direct_pos_stride_range_iter[1303022] "dead after last mention" "RVV" "temp"
              val call_tmp[1960580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[1960752]:int(64)[13] "temp"
              (1960757 'move' stride[1960752](1960754 '.v' _iterator[1930982] F2_stride[1993906]))
              (1960583 call chpl_range_check_stride[1102852] stride[1960752])
              val call_tmp[1960585]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1960587]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1960759]:int(64)[13] "temp"
              (1960764 'move' low[1960759](1960761 '.v' _iterator[1930982] F0_low[1993898]))
              (1960589 'move' default_arg_first[1960587](1960592 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1960759]))
              const-val default_arg_last[1960594]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1960766]:int(64)[13] "temp"
              (1960771 'move' high[1960766](1960768 '.v' _iterator[1930982] F1_high[1993902]))
              (1960596 'move' default_arg_last[1960594](1960599 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1960766]))
              const-val _return_tmp_[1960601]:bool[10] "dead after last mention" "temp"
              const-val low[1960773]:int(64)[13] "temp"
              (1960778 'move' low[1960773](1960775 '.v' _iterator[1930982] F0_low[1993898]))
              const-val high[1960780]:int(64)[13] "temp"
              (1960785 'move' high[1960780](1960782 '.v' _iterator[1930982] F1_high[1993902]))
              const-val stride[1960787]:int(64)[13] "temp"
              (1960792 'move' stride[1960787](1960789 '.v' _iterator[1930982] F2_stride[1993906]))
              (1960603 'move' _return_tmp_[1960601](1960606 call chpl_checkIfRangeIterWillOverflow[1096095] low[1960773] high[1960780] stride[1960787] default_arg_first[1960587] default_arg_last[1960594] 1))
              val i[1960613]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1960615]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1960617 'move' i[1960613] 0)
              CForLoop[1960620] hazard
              {
                const-val yret[1960640]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1960642 'move' yret[1960640] i[1960613])
                const-val _yieldedIndex[1960656]:int(64)[13] "temp"
                (1960750 'move' _yieldedIndex[1960656] i[1960613])
                {
                  const-val i[1960658]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1960660 'move' i[1960658] _yieldedIndex[1960656])
                  ref yret[1960663]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1960665]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1960667]:_ref(_ddata(locale))[1255422] "dead after last mention" "temp"
                  (1960669 'move' _this_tmp_[1960667](1960672 call theData[1303269] info[1930771]))
                  val coerce_tmp[1960674]:_ddata(locale)[1255413] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1960676 'move' coerce_tmp[1960674](1960678 'deref' _this_tmp_[1960667]))
                  (1960680 'move' call_tmp[1960665](1960683 call this[1303416] coerce_tmp[1960674] _yieldedIndex[1960656]))
                  ref _yieldedIndex[1960686]:_ref(locale)[948863] "temp"
                  (1960688 'move' _yieldedIndex[1960686] call_tmp[1960665])
                  {
                    ref elem[1960692]:_ref(locale)[948863] "index var" "insert auto destroy"
                    (1960694 'move' elem[1960692] _yieldedIndex[1960686])
                    ref yret[1960697]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[1960699]:_ref(locale)[948863] "temp"
                    (1960701 'move' _yieldedIndex[1960699] elem[1960692])
                    {
                      ref i[1960705]:_ref(locale)[948863] "index var" "insert auto destroy"
                      (1960707 'move' i[1960705] _yieldedIndex[1960699])
                      ref yret[1960710]:_ref(locale)[948863] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1960712]:_ref(locale)[948863] "temp"
                      (1960714 'move' _yieldedIndex[1960712] i[1960705])
                      {
                        ref loc[1960718]:_ref(locale)[948863] "index var" "insert auto destroy"
                        (1960720 'move' loc[1960718] _yieldedIndex[1960712])
                        {
                          const-val tmp[1960724]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                          const-val call_tmp[1960726]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1960728]:BaseLocale[91204] "dead after last mention" "temp"
                          (1960730 'move' _locale_tmp_[1960728](1960733 call _value[89984] loc[1960718]))
                          (1960735 'move' call_tmp[1960726](1960737 '_wide_get_locale' _locale_tmp_[1960728]))
                          (1960739 'move' tmp[1960724] call_tmp[1960726])
                          val rvfDerefTmp[2048836]:locale[28] "temp"
                          (2048840 'move' rvfDerefTmp[2048836](2048838 'deref' loc[1960718]))
                          val isdirect[2051159]:bool[10] "temp"
                          (2051164 'move' isdirect[2051159](2051161 call chpl_doDirectExecuteOn[187469] tmp[1960724]))
                          if isdirect[2051159]
                          {
                            (2051168 call on_fn[934586] rvfDerefTmp[2048836])
                          }
                          {
                            val _args_foron_fn[2051183]:_class_localson_fn[2051175] "temp"
                            (2051187 'move' _args_foron_fn[2051183](2051185 'stack allocate class' _class_localson_fn[2051175]))
                            (2051189 '.=' _args_foron_fn[2051183] _0_tmp[2051178] tmp[1960724])
                            (2051193 '.=' _args_foron_fn[2051183] _1_rvfDerefTmp[2051180] rvfDerefTmp[2048836])
                            val _args_vforon_fn[2051197]:c_void_ptr[149] "temp"
                            (2051201 'move' _args_vforon_fn[2051197](2051199 'cast_to_void_star' _args_foron_fn[2051183]))
                            val _args_sizeon_fn[2051203]:int(64)[13] "temp"
                            (2051207 'move' _args_sizeon_fn[2051203](2051205 'sizeof_bundle' _class_localson_fn[2051175]))
                            on(2051239 call wrapon_fn[2051209] tmp[1960724] _args_vforon_fn[2051197] _args_sizeon_fn[2051203] _args_foron_fn[2051183])
                          }
                          {
                          }
                        }
                        label _continueLabel[1960747]
                      }
                    }
                  }
                }
                {
                  const-val low[1960794]:int(64)[13] "temp"
                  (1960799 'move' low[1960794](1960796 '.v' _iterator[1930982] F0_low[1993898]))
                  (1960622 '=' i[1960613] low[1960794])
                }
                {
                  const-val high[1960801]:int(64)[13] "temp"
                  (1960806 'move' high[1960801](1960803 '.v' _iterator[1930982] F1_high[1993902]))
                  (1960626 '<=' i[1960613] high[1960801])
                }
                {
                  val call_tmp[1960630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1960632]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[1960808]:int(64)[13] "temp"
                  (1960813 'move' stride[1960808](1960810 '.v' _iterator[1930982] F2_stride[1993906]))
                  (1960634 'move' call_tmp[1960632] stride[1960808])
                  const-val stride[1960815]:int(64)[13] "temp"
                  (1960820 'move' stride[1960815](1960817 '.v' _iterator[1930982] F2_stride[1993906]))
                  (1960637 '+=' i[1960613] stride[1960815])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[1960652]
            }
            (1931063 call _freeIterator[1303204] _iterator[1930982])
            label _endchpl__serialViewIter[1931065]
          }
          (1931068 call _freeIterator[1303639] _iterator[1930736])
          label _endthese[1931070]
        }
        (1873717 call _freeIterator[1304244] _iterator[1873639])
        label _endthese[1873719]
      }
      label _breakLabel[89663]
      (1815232 call _freeIterator[1304995] _iterator[89658])
    }
    label _enddeinit[1787900]
    const-val _field_destructor_tmp_[1787898]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1787905 'move' _field_destructor_tmp_[1787898](1787902 '.v' this[89756] myLocales[89291]))
    (1787907 call chpl__autoDestroy[1606482] _field_destructor_tmp_[1787898])
    const-val _field_destructor_tmp_[1787910]:domain(1,int(64),false)[1252616] "temp"
    (1787915 'move' _field_destructor_tmp_[1787910](1787912 '.v' this[89756] myLocaleSpace[89280]))
    (1787917 call chpl__autoDestroy[1530701] _field_destructor_tmp_[1787910])
    val _parent_destructor_tmp_[1787920]:AbstractRootLocale[92012] "temp"
    (1787925 'move' _parent_destructor_tmp_[1787920](1787921 'cast' AbstractRootLocale[92012] this[89756]))
    (1787927 call deinit[784132] _parent_destructor_tmp_[1787920])
    (513652 return _void[55])
  }
  function RootLocale[89694].myLocaleSpace[781156](const in arg this[781160]:RootLocale[89694]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    ref ret[781170]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "RVV" "temp"
    ref call_tmp[781177]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "maybe param" "temp"
    (781180 'move' call_tmp[781177](781164 '.' this[781160] myLocaleSpace[89280]))
    (781175 'move' ret[781170] call_tmp[781177])
    (781172 return ret[781170])
  }
  function RootLocale[89694].myLocales[781182](const in arg this[781186]:RootLocale[89694]) ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781196]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "RVV" "temp"
    ref call_tmp[781203]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056] "dead after last mention" "maybe param" "temp"
    (781206 'move' call_tmp[781203](781190 '.' this[781186] myLocales[89291]))
    (781201 'move' ret[781196] call_tmp[781203])
    (781198 return ret[781196])
  }
  function _new[1305275]() : RootLocale[89694] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1779317]:RootLocale[89694] "temp"
    val ret[1305314]:RootLocale[89694] "dead after last mention" "RVV" "temp"
    val initTemp[1305277]:RootLocale[89694] "dead after last mention" "temp"
    const-val call_tmp[1305321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1305324 'move' call_tmp[1305321](1305333 'sizeof_bundle' RootLocale[89694]))
    const-val cast_tmp[1305336]:c_void_ptr[149] "dead after last mention" "temp"
    (1305338 'move' cast_tmp[1305336](1305289 call chpl_here_alloc[187788] call_tmp[1305321] 54))
    (1305292 'move' initTemp[1305277](1305340 'cast' RootLocale[89694] cast_tmp[1305336]))
    (1305294 'setcid' initTemp[1305277])
    (1305278 call init[89297] initTemp[1305277])
    val tmp[1305296]:RootLocale[89694] "dead after last mention" "temp"
    (1305303 'move' tmp[1305296] initTemp[1305277])
    (1305319 'move' ret[1305314] tmp[1305296])
    (1305316 return ret[1305314])
  }
  type RootLocale[89694] val super[355686]:AbstractRootLocale[92012] "super class" const myLocaleSpace[89280]:domain(1,int(64),false)[1252616] "const" val myLocales[89291]:[domain(1,int(64),false)] locale[1287030] "unsafe"
  const-val call_tmp[632017]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[632022]:domain(1,int(64),false)[1252616] "dead at end of block" "maybe param" "temp"
  const-val init_coerce_tmp[1253987]:domain(1,int(64),false)[1252616] "dead at end of block" "temp"
  ref call_tmp[632032]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead at end of block" "maybe param" "reference to a const" "temp"
  const-val call_tmp[632037]:_RuntimeTypeInfo[1287263] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val _runtime_type_tmp_[1297698]:domain(1,int(64),false)[1252616] "dead at end of block" "temp"
  function on_fn[934586](const in arg loc[1781219]:locale[28]) : void[4] "on" "resolved"
  {
    {
      (89633 call =[435212] rootLocaleInitialized[310] 0)
      ref call_tmp[632324]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2048843]:_ref(locale)[948863] "temp"
      (2048847 'move' rvfRerefTmp[2048843](2048844 'set reference' loc[1781219]))
      (632327 'move' call_tmp[632324](89638 call _instance[782774] rvfRerefTmp[2048843]))
      val coerce_tmp[1305174]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1305178 'move' coerce_tmp[1305174](1305176 'deref' call_tmp[632324]))
      (89642 call chpl__delete[983310] coerce_tmp[1305174])
    }
    (934593 return _void[55])
  }
  function wrapon_fn[2051209](const in arg dummy_locale_arg[2051211]:chpl_localeID_t[209352], in arg buf[2051213]:c_void_ptr[149], in arg buf_size[2051215]:int(64)[13], in arg c[2051217]:_class_localson_fn[2051175]) : void[4] "on block"
  {
    val _0_tmp[2051222]:chpl_localeID_t[209352] "temp"
    (2051227 'move' _0_tmp[2051222](2051224 '.v' c[2051217] _0_tmp[2051178]))
    val _1_rvfDerefTmp[2051229]:locale[28] "temp"
    (2051234 'move' _1_rvfDerefTmp[2051229](2051231 '.v' c[2051217] _1_rvfDerefTmp[2051180]))
    (2051220 call on_fn[934586] _1_rvfDerefTmp[2051229])
    (2051237 return _void[55])
  }
}