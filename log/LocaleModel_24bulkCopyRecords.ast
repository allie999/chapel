AST dump for LocaleModel after pass bulkCopyRecords.
Module use list: LocaleModelHelpFlat LocaleModelHelpMem IO 

{
  type _class_localson_fn[2034266] val _runtime_hdr[2034267]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034269]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2034271]:locale[28]
  function chpl__init_LocaleModel[415880]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1788415]:range(int(64),bounded,false)[1026725] "temp"
    (88776 call chpl_build_bounded_range[455048] 1 0 ret_tmp[1788415])
    (1788418 'move' call_tmp[631904] ret_tmp[1788415])
    const-val ret_tmp[1792060]:domain(1,int(64),false)[1252508] "temp"
    (88779 call chpl__buildDomainExpr[1244579] call_tmp[631904] ret_tmp[1792060])
    (1792063 'move' call_tmp[631909] ret_tmp[1792060])
    const-val call_tmp[631914]:_RuntimeTypeInfo[1253584] "dead at end of block" "maybe param" "temp"
    val default_arg_idxType[1253843]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (631917 'move' call_tmp[631914](88772 call chpl__buildDomainRuntimeType[1246193] defaultDist[94050]))
    const-val ret_tmp[1793694]:domain(1,int(64),false)[1252508] "temp"
    (1287171 call chpl__coerceMove[1287177] call_tmp[631914] call_tmp[631909] ret_tmp[1793694])
    (1793697 'move' init_coerce_tmp[1253879] ret_tmp[1793694])
    (541548 'move' chpl_emptyLocaleSpace[88781] init_coerce_tmp[1253879])
    (2033518 '_private_broadcast' chpl_emptyLocaleSpace[88781])
    (631922 'move' call_tmp[631919](88788 call chpl__ensureDomainExpr[1253885] chpl_emptyLocaleSpace[88781]))
    (631927 'move' call_tmp[631924](88790 call chpl__buildArrayRuntimeType[1253904] call_tmp[631919]))
    (1297595 'move' _runtime_type_tmp_[1297590](1762168 '.v' call_tmp[631924] dom[1287156]))
    const-val ret_tmp[1793850]:[domain(1,int(64),false)] locale[1286922] "temp"
    (1297588 call chpl__convertRuntimeTypeToValue[1297602] _runtime_type_tmp_[1297590] ret_tmp[1793850])
    (1793853 'move' chpl_emptyLocales[88792] ret_tmp[1793850])
    (2033520 '_private_broadcast' chpl_emptyLocales[88792])
    (513531 return _void[55])
  }
  function chpl__deinit_LocaleModel[89791]() : void[4] "resolved" "no return value for void"
  {
    {
      ref _indexOfInterest[89804]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89805]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304202] "dead at end of block" "expr temp" "temp"
      (89814 'move' _iterator[89805](89812 call _getIterator[1298020] chpl_emptyLocales[88792]))
      {
        val ret[1857030]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304208] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1857032]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1857034]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303597] "dead at end of block" "expr temp" "temp"
        val call_tmp[1857036]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1857145]:[domain(1,int(64),false)] locale[1286922] "temp"
        (1857150 'move' this[1857145](1857147 '.v' _iterator[89805] F0_this[1971614]))
        (1857038 'move' call_tmp[1857036](1857041 call _value[1286977] this[1857145]))
        const-val call_tmp[1857043]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1857045]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1857047 'move' coerce_tmp[1857045] call_tmp[1857036])
        const-val default_arg_tasksPerLocale[1857050]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857052 'move' default_arg_tasksPerLocale[1857050](1857055 call these_default_tasksPerLocale[1298290] call_tmp[1857036]))
        const-val default_arg_ignoreRunning[1857057]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857059 'move' default_arg_ignoreRunning[1857057](1857062 call these_default_ignoreRunning[1298321] coerce_tmp[1857045]))
        const-val default_arg_minIndicesPerTask[1857064]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1857066 'move' default_arg_minIndicesPerTask[1857064](1857069 call these_default_minIndicesPerTask[1298352] coerce_tmp[1857045]))
        const-val ret_tmp[1857071]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "temp"
        (1857074 call these[1298174] coerce_tmp[1857045] default_arg_tasksPerLocale[1857050] default_arg_ignoreRunning[1857057] default_arg_minIndicesPerTask[1857064] ret_tmp[1857071])
        (1857080 'move' call_tmp[1857043] ret_tmp[1857071])
        (1857083 'move' _iterator[1857034](1857086 call _getIterator[1303612] call_tmp[1857043]))
        {
          val ret[1914401]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1914403]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1914405]:_ic_chpl__serialViewIter[1303347] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1914407]:_ref(domain(1,int(64),false))[1250860] "dead at end of block" "maybe param" "temp"
          const-val this[1914783]:[domain(1,int(64),false)] locale[1256397] "temp"
          (1914788 'move' this[1914783](1914785 '.v' _iterator[1857034] F0_this[1973722]))
          (1914409 'move' call_tmp[1914407](1914412 call dom[1257930] this[1914783]))
          const-val call_tmp[1914414]:_ir_chpl__serialViewIter[1303353] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1914416]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1914418 'move' coerce_tmp[1914416](1914420 'deref' call_tmp[1914407]))
          const-val ret_tmp[1914422]:_ir_chpl__serialViewIter[1303353] "temp"
          const-val this[1914790]:[domain(1,int(64),false)] locale[1256397] "temp"
          (1914795 'move' this[1914790](1914792 '.v' _iterator[1857034] F0_this[1973722]))
          (1914425 call chpl__serialViewIter[1298386] this[1914790] coerce_tmp[1914416] ret_tmp[1914422])
          (1914429 'move' call_tmp[1914414] ret_tmp[1914422])
          (1914432 'move' _iterator[1914405](1914435 call _getIterator[1303362] call_tmp[1914414]))
          {
            val ret[1914438]:_ir_chpl__serialViewIter[1303353] "dead after last mention" "RVV" "temp"
            val info[1914440]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "insert auto destroy"
            val tmp[1914442]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[1914444]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[1914446]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914448 'move' arr[1914446](1914450 '.v' _iterator[1914405] F0_arr[1975627]))
            (1914453 'move' tmp[1914444] arr[1914446])
            const-val arr[1914456]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914458 'move' arr[1914456](1914460 '.v' _iterator[1914405] F0_arr[1975627]))
            (1914463 'move' tmp[1914442] arr[1914456])
            const-val arr[1914466]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914468 'move' arr[1914466](1914470 '.v' _iterator[1914405] F0_arr[1975627]))
            (1914473 '=' info[1914440] arr[1914466])
            (1914476 'noop')
            const-val call_tmp[1914477]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914479]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914481]:domain(1,int(64),false)[1250845] "temp"
            (1914483 'move' viewDom[1914481](1914485 '.v' _iterator[1914405] F1_viewDom[1975631]))
            (1914488 'move' coerce_tmp[1914479] viewDom[1914481])
            const-val viewDom[1914491]:domain(1,int(64),false)[1250845] "temp"
            (1914493 'move' viewDom[1914491](1914495 '.v' _iterator[1914405] F1_viewDom[1975631]))
            (1914498 'move' call_tmp[1914477](1914501 call dsiLow[1300347] viewDom[1914491]))
            const-val call_tmp[1914503]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[1914505]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914507 'move' arr[1914505](1914509 '.v' _iterator[1914405] F0_arr[1975627]))
            (1914512 'move' call_tmp[1914503](1914515 call getDataIndex[1300606] arr[1914505] call_tmp[1914477]))
            const-val first[1914518]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914520 'move' first[1914518] call_tmp[1914503])
            const-val call_tmp[1914523]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914525]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914527]:domain(1,int(64),false)[1250845] "temp"
            (1914529 'move' viewDom[1914527](1914531 '.v' _iterator[1914405] F1_viewDom[1975631]))
            (1914534 'move' coerce_tmp[1914525] viewDom[1914527])
            (1914537 'move' call_tmp[1914523](1914540 call dsiLow[1300347] coerce_tmp[1914525]))
            const-val call_tmp[1914542]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914544 'move' call_tmp[1914542](1914547 call chpl__idxToInt[1026827] call_tmp[1914523]))
            const-val call_tmp[1914549]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914551 'move' call_tmp[1914549](1914554 call +[949577] call_tmp[1914542]))
            const-val call_tmp[1914556]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914558]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914560]:domain(1,int(64),false)[1250845] "temp"
            (1914562 'move' viewDom[1914560](1914564 '.v' _iterator[1914405] F1_viewDom[1975631]))
            (1914567 'move' coerce_tmp[1914558] viewDom[1914560])
            (1914570 'move' call_tmp[1914556](1914573 call chpl_intToIdx[1301776] coerce_tmp[1914558] call_tmp[1914549]))
            const-val call_tmp[1914576]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914578 'move' call_tmp[1914576](1914581 call getDataIndex[1300606] info[1914440] call_tmp[1914556]))
            const-val second[1914584]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914586 'move' second[1914584] call_tmp[1914576])
            const-val call_tmp[1914589]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914591 'move' call_tmp[1914589](1914594 call -[440327] call_tmp[1914576] call_tmp[1914503]))
            const-val step[1914597]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914599 'move' step[1914597] call_tmp[1914589])
            const-val call_tmp[1914602]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914604]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914606]:domain(1,int(64),false)[1250845] "temp"
            (1914608 'move' viewDom[1914606](1914610 '.v' _iterator[1914405] F1_viewDom[1975631]))
            (1914613 'move' coerce_tmp[1914604] viewDom[1914606])
            (1914616 'move' call_tmp[1914602](1914619 call dsiNumIndices[1263545] coerce_tmp[1914604]))
            const-val call_tmp[1914621]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914623 'move' call_tmp[1914621](1914626 call -[962137] call_tmp[1914602]))
            const-val call_tmp[1914628]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914630 'move' call_tmp[1914628](1914633 call *[441739] call_tmp[1914621] call_tmp[1914589]))
            const-val call_tmp[1914636]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914638 'move' call_tmp[1914636](1914641 call +[439547] call_tmp[1914503] call_tmp[1914628]))
            const-val last[1914644]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914646 'move' last[1914644] call_tmp[1914636])
            val _indexOfInterest[1914649]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1914651]:_ic_chpl_direct_pos_stride_range_iter[1302908] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1914653]:_ir_chpl_direct_pos_stride_range_iter[1302914] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1914655]:_ir_chpl_direct_pos_stride_range_iter[1302914] "temp"
            (1914658 call chpl_direct_pos_stride_range_iter[1301863] call_tmp[1914503] call_tmp[1914636] call_tmp[1914589] ret_tmp[1914655])
            (1914663 'move' call_tmp[1914653] ret_tmp[1914655])
            (1914666 'move' _iterator[1914651](1914669 call _getIterator[1302923] call_tmp[1914653]))
            {
              val ret[1944088]:_ir_chpl_direct_pos_stride_range_iter[1302914] "dead after last mention" "RVV" "temp"
              val call_tmp[1944090]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[1944255]:int(64)[13] "temp"
              (1944260 'move' stride[1944255](1944257 '.v' _iterator[1914651] F2_stride[1977171]))
              (1944093 call chpl_range_check_stride[1102744] stride[1944255])
              val call_tmp[1944095]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1944097]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1944262]:int(64)[13] "temp"
              (1944267 'move' low[1944262](1944264 '.v' _iterator[1914651] F0_low[1977163]))
              (1944099 'move' default_arg_first[1944097](1944102 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1944262]))
              const-val default_arg_last[1944104]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1944269]:int(64)[13] "temp"
              (1944274 'move' high[1944269](1944271 '.v' _iterator[1914651] F1_high[1977167]))
              (1944106 'move' default_arg_last[1944104](1944109 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1944269]))
              const-val _return_tmp_[1944111]:bool[10] "dead after last mention" "temp"
              const-val low[1944276]:int(64)[13] "temp"
              (1944281 'move' low[1944276](1944278 '.v' _iterator[1914651] F0_low[1977163]))
              const-val high[1944283]:int(64)[13] "temp"
              (1944288 'move' high[1944283](1944285 '.v' _iterator[1914651] F1_high[1977167]))
              const-val stride[1944290]:int(64)[13] "temp"
              (1944295 'move' stride[1944290](1944292 '.v' _iterator[1914651] F2_stride[1977171]))
              (1944113 'move' _return_tmp_[1944111](1944116 call chpl_checkIfRangeIterWillOverflow[1095987] low[1944276] high[1944283] stride[1944290] default_arg_first[1944097] default_arg_last[1944104] 1))
              val i[1944123]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1944125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1944127 'move' i[1944123] 0)
              CForLoop[1944130] hazard
              {
                const-val yret[1944150]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1944152 'move' yret[1944150] i[1944123])
                const-val _yieldedIndex[1944166]:int(64)[13] "temp"
                (1944253 'move' _yieldedIndex[1944166] i[1944123])
                {
                  const-val i[1944168]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1944170 'move' i[1944168] _yieldedIndex[1944166])
                  ref yret[1944173]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1944175]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1944177]:_ref(_ddata(locale))[1255314] "dead after last mention" "temp"
                  (1944179 'move' _this_tmp_[1944177](1944182 call theData[1303161] info[1914440]))
                  val coerce_tmp[1944184]:_ddata(locale)[1255305] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1944186 'move' coerce_tmp[1944184](1944188 'deref' _this_tmp_[1944177]))
                  (1944190 'move' call_tmp[1944175](1944193 call this[1303308] coerce_tmp[1944184] _yieldedIndex[1944166]))
                  ref _yieldedIndex[1944196]:_ref(locale)[948755] "temp"
                  (1944198 'move' _yieldedIndex[1944196] call_tmp[1944175])
                  {
                    ref elem[1944202]:_ref(locale)[948755] "index var" "insert auto destroy"
                    (1944204 'move' elem[1944202] _yieldedIndex[1944196])
                    ref yret[1944207]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[1944209]:_ref(locale)[948755] "temp"
                    (1944211 'move' _yieldedIndex[1944209] elem[1944202])
                    {
                      ref i[1944215]:_ref(locale)[948755] "index var" "insert auto destroy"
                      (1944217 'move' i[1944215] _yieldedIndex[1944209])
                      ref yret[1944220]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1944222]:_ref(locale)[948755] "temp"
                      (1944224 'move' _yieldedIndex[1944222] i[1944215])
                      {
                        ref l[1944228]:_ref(locale)[948755] "index var" "insert auto destroy"
                        (1944230 'move' l[1944228] _yieldedIndex[1944222])
                        {
                          ref call_tmp[1944234]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
                          (1944236 'move' call_tmp[1944234](1944239 call _instance[782666] l[1944228]))
                          val coerce_tmp[1944241]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1944243 'move' coerce_tmp[1944241](1944245 'deref' call_tmp[1944234]))
                          (1944248 call chpl__delete[983202] coerce_tmp[1944241])
                        }
                        label _continueLabel[1944250]
                      }
                    }
                  }
                }
                {
                  const-val low[1944297]:int(64)[13] "temp"
                  (1944302 'move' low[1944297](1944299 '.v' _iterator[1914651] F0_low[1977163]))
                  (1944132 '=' i[1944123] low[1944297])
                }
                {
                  const-val high[1944304]:int(64)[13] "temp"
                  (1944309 'move' high[1944304](1944306 '.v' _iterator[1914651] F1_high[1977167]))
                  (1944136 '<=' i[1944123] high[1944304])
                }
                {
                  val call_tmp[1944140]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1944142]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[1944311]:int(64)[13] "temp"
                  (1944316 'move' stride[1944311](1944313 '.v' _iterator[1914651] F2_stride[1977171]))
                  (1944144 'move' call_tmp[1944142] stride[1944311])
                  const-val stride[1944318]:int(64)[13] "temp"
                  (1944323 'move' stride[1944318](1944320 '.v' _iterator[1914651] F2_stride[1977171]))
                  (1944147 '+=' i[1944123] stride[1944318])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[1944162]
            }
            (1914732 call _freeIterator[1303096] _iterator[1914651])
            label _endchpl__serialViewIter[1914734]
          }
          (1914737 call _freeIterator[1303531] _iterator[1914405])
          label _endthese[1914739]
        }
        (1857112 call _freeIterator[1304136] _iterator[1857034])
        label _endthese[1857114]
      }
      label _breakLabel[89810]
      (1798624 call _freeIterator[1304887] _iterator[89805])
    }
    label _endchpl__deinit_LocaleModel[1808100]
    (1808108 call chpl__autoDestroy[1567322] call_tmp[631904])
    (1808105 call chpl__autoDestroy[1619905] chpl_emptyLocales[88792])
    (1808102 call chpl__autoDestroy[1589828] chpl_emptyLocaleSpace[88781])
    (513533 return _void[55])
  }
  function chpl_localeModel_sublocToExecutionSubloc[88743](const in arg full_subloc[88740]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513240]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513245 'move' ret[513240] full_subloc[88740])
    (513242 return ret[513240])
  }
  function chpl_localeModel_sublocMerge[88757](const in arg full_subloc[88754]:int(32)[95], const in arg execution_subloc[88760]:int(32)[95]) : int(32)[95] "export" "local args" "resolved"
  {
    val ret[513249]:int(32)[95] "dead after last mention" "RVV" "temp"
    (513254 'move' ret[513249] execution_subloc[88760])
    (513251 return ret[513249])
  }
  const-val chpl_emptyLocaleSpace[88781]:domain(1,int(64),false)[1252508] "dead at end of block" "const" "insert auto destroy"
  const-val chpl_emptyLocales[88792]:[domain(1,int(64),false)] locale[1286922] "dead at end of block" "const" "insert auto destroy" "unsafe"
  function LocaleModel[89192].init[88868](const in arg this[89198]:LocaleModel[89192], const  ref arg parent_loc[88865]:locale[28]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[631951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (631954 'move' call_tmp[631951] rootLocaleInitialized[310])
    if call_tmp[631951]
    {
      (88874 call halt[154067] "Cannot create additional LocaleModel instances")
    }
    val super_tmp[460181]:AbstractLocaleModel[91499] "dead after last mention" "temporary of super field" "temp"
    (460183 'move' super_tmp[460181](460180 '.v' this[89198] super[355554]))
    (88888 call init[91478] super_tmp[460181] parent_loc[88865])
    val tmp[460186]:AbstractLocaleModel[91499] "dead after last mention" "temp" "type variable"
    val call_tmp[631963]:AbstractLocaleModel[91499] "dead at end of block" "maybe param" "temp"
    (631966 'move' call_tmp[631963](460197 'cast' AbstractLocaleModel[91499] this[89198]))
    val chpl__thisAsParent[460194]:AbstractLocaleModel[91499] "dead at end of block" "insert auto destroy" "temp"
    (541554 'move' chpl__thisAsParent[460194](1351351 call chpl__initCopy[1351353] call_tmp[631963]))
    (460200 'setcid' chpl__thisAsParent[460194])
    const-val call_tmp[631968]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (631971 'move' call_tmp[631968](88893 'cast' int(64)[13] chpl_nodeID[208152]))
    val tmp[460202]:int(64)[13] "dead after last mention" "temp"
    (460205 'move' tmp[460202] call_tmp[631968])
    (460207 '.=' this[89198] _node_id[88800] tmp[460202])
    val tmp[460211]:string[26] "dead after last mention" "temp"
    (1351718 call init[30760] tmp[460211])
    (460216 '.=' this[89198] local_name[88805] tmp[460211])
    (460221 'setcid' this[89198])
    (88907 call setup[89180] this[89198])
    (513258 return _void[55])
  }
  function LocaleModel[89192].getChildCount[89024](const in arg this[89234]:LocaleModel[89192]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513338]:int(64)[13] "dead after last mention" "RVV" "temp"
    (513343 'move' ret[513338] 0)
    (513340 return ret[513338])
  }
  function LocaleModel[89192].getChild[89085](const in arg this[89242]:LocaleModel[89192], const in arg idx[89082]:int(64)[13], ref arg _retArg[1798167]:_ref(locale)[948755]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "unsafe" "virtual"
  {
    const-val ret[513361]:locale[28] "dead after last mention" "RVV" "temp"
    (89107 call halt[154067] "requesting a child from a flat LocaleModel locale")
    const-val tmp[89111]:locale[28] "dead at end of block" "insert auto destroy"
    (1719297 call init[90000] tmp[89111])
    (1719295 'move' ret[513361] tmp[89111])
    gotoReturn _end_getChild[513359] _end_getChild[513359]
    label _end_getChild[513359]
    (1798169 '=' _retArg[1798167] ret[513361])
    (1798171 return _void[55])
  }
  function LocaleModel[89192].setup[89180](const in arg this[89254]:LocaleModel[89192]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[632028]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
    (632031 'move' call_tmp[632028](377618 call local_name[780982] this[89254]))
    val _formal_tmp_out_local_name[1351378]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (89186 call helpSetupLocaleFlat[208807] this[89254] _formal_tmp_out_local_name[1351378])
    (1351380 call =[38269] call_tmp[632028] _formal_tmp_out_local_name[1351378])
    (1798610 call chpl__autoDestroy[1494420] _formal_tmp_out_local_name[1351378])
    (513394 return _void[55])
  }
  function LocaleModel[89192].local_name[780982](const in arg this[780986]:LocaleModel[89192]) ref : _ref(string)[937850] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[780996]:_ref(string)[937850] "dead after last mention" "RVV" "temp"
    ref call_tmp[781003]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
    (781006 'move' call_tmp[781003](780990 '.' this[780986] local_name[88805]))
    (781001 'move' ret[780996] call_tmp[781003])
    (780998 return ret[780996])
  }
  function LocaleModel[89192].deinit[781008](const in arg this[781012]:LocaleModel[89192]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771679]
    ref _field_destructor_tmp_[1771677]:_ref(string)[937850] "temp"
    (1771684 'move' _field_destructor_tmp_[1771677](1771681 '.' this[781012] local_name[88805]))
    (1771686 call deinit[30831] _field_destructor_tmp_[1771677])
    val _parent_destructor_tmp_[1771689]:AbstractLocaleModel[91499] "temp"
    (1771694 'move' _parent_destructor_tmp_[1771689](1771690 'cast' AbstractLocaleModel[91499] this[781012]))
    (1771696 call deinit[783952] _parent_destructor_tmp_[1771689])
    (781020 return _void[55])
  }
  function _new[1351729](const  ref arg parent_loc[1351738]:locale[28]) : LocaleModel[89192] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1763584]:LocaleModel[89192] "temp"
    val ret[1351771]:LocaleModel[89192] "dead after last mention" "RVV" "temp"
    val initTemp[1351731]:LocaleModel[89192] "dead after last mention" "temp"
    const-val call_tmp[1351778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1351781 'move' call_tmp[1351778](1351790 'sizeof_bundle' LocaleModel[89192]))
    const-val cast_tmp[1351793]:c_void_ptr[149] "dead after last mention" "temp"
    (1351795 'move' cast_tmp[1351793](1351746 call chpl_here_alloc[187742] call_tmp[1351778] 64))
    (1351749 'move' initTemp[1351731](1351797 'cast' LocaleModel[89192] cast_tmp[1351793]))
    (1351751 'setcid' initTemp[1351731])
    (1351732 call init[88868] initTemp[1351731] parent_loc[1351738])
    val tmp[1351753]:LocaleModel[89192] "dead after last mention" "temp"
    (1351760 'move' tmp[1351753] initTemp[1351731])
    (1351776 'move' ret[1351771] tmp[1351753])
    (1351773 return ret[1351771])
  }
  type LocaleModel[89192] val super[355554]:AbstractLocaleModel[91499] "super class" const-val _node_id[88800]:int(64)[13] "const" val local_name[88805]:string[26]
  function RootLocale[89691].init[89294](const in arg this[89693]:RootLocale[89691]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[460223]:AbstractRootLocale[92009] "dead after last mention" "temporary of super field" "temp"
    (460225 'move' super_tmp[460223](460222 '.v' this[89693] super[355558]))
    (89302 call init[91541] super_tmp[460223] nilLocale[89939])
    val tmp[460228]:AbstractRootLocale[92009] "dead after last mention" "temp" "type variable"
    val call_tmp[632040]:AbstractRootLocale[92009] "dead at end of block" "maybe param" "temp"
    (632043 'move' call_tmp[632040](460239 'cast' AbstractRootLocale[92009] this[89693]))
    val chpl__thisAsParent[460236]:AbstractRootLocale[92009] "dead at end of block" "insert auto destroy" "temp"
    (541558 'move' chpl__thisAsParent[460236](1305095 call chpl__initCopy[986199] call_tmp[632040]))
    (460242 'setcid' chpl__thisAsParent[460236])
    ref call_tmp[632045]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (632048 'move' call_tmp[632045](377627 '.' this[89693] nPUsPhysAcc[90696]))
    (89307 call =[435238] call_tmp[632045] 0)
    ref call_tmp[632050]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (632053 'move' call_tmp[632050](377632 '.' this[89693] nPUsPhysAll[90701]))
    (89312 call =[435238] call_tmp[632050] 0)
    ref call_tmp[632055]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (632058 'move' call_tmp[632055](377637 '.' this[89693] nPUsLogAcc[90686]))
    (89317 call =[435238] call_tmp[632055] 0)
    ref call_tmp[632060]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (632063 'move' call_tmp[632060](377642 '.' this[89693] nPUsLogAll[90691]))
    (89322 call =[435238] call_tmp[632060] 0)
    ref call_tmp[632065]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (632068 'move' call_tmp[632065](377647 '.' this[89693] maxTaskPar[90743]))
    (89327 call =[435238] call_tmp[632065] 0)
    const-val call_tmp[632070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632073 'move' call_tmp[632070](460251 call -[962137] numLocales[209834]))
    const-val call_tmp[632075]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1788427]:range(int(64),bounded,false)[1026725] "temp"
    (460248 call chpl_build_bounded_range[455048] 0 call_tmp[632070] ret_tmp[1788427])
    (1788430 'move' call_tmp[632075] ret_tmp[1788427])
    const-val call_tmp[632080]:domain(1,int(64),false)[1252508] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1792066]:domain(1,int(64),false)[1252508] "temp"
    (460246 call chpl__buildDomainExpr[1244579] call_tmp[632075] ret_tmp[1792066])
    (1792069 'move' call_tmp[632080] ret_tmp[1792066])
    const-val call_tmp[632085]:_RuntimeTypeInfo[1253584] "dead after last mention" "maybe param" "temp"
    val default_arg_idxType[1305111]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp" "type variable"
    (632088 'move' call_tmp[632085](460257 call chpl__buildDomainRuntimeType[1246193] defaultDist[94050]))
    val tmp[460254]:domain(1,int(64),false)[1252508] "dead after last mention" "temp"
    const-val init_coerce_tmp[1305129]:domain(1,int(64),false)[1252508] "dead after last mention" "temp"
    const-val ret_tmp[1793700]:domain(1,int(64),false)[1252508] "temp"
    (1305139 call chpl__coerceMove[1287177] call_tmp[632085] call_tmp[632080] ret_tmp[1793700])
    (1793703 'move' init_coerce_tmp[1305129] ret_tmp[1793700])
    (460260 'move' tmp[460254] init_coerce_tmp[1305129])
    (460262 '.=' this[89693] myLocaleSpace[89277] tmp[460254])
    (1798613 call chpl__autoDestroy[1567322] call_tmp[632075])
    val tmp[460266]:[domain(1,int(64),false)] locale[1286922] "dead after last mention" "temp"
    ref call_tmp[632090]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead after last mention" "maybe param" "temp"
    (632093 'move' call_tmp[632090](460280 '.' this[89693] myLocaleSpace[89277]))
    ref call_tmp[632095]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead after last mention" "maybe param" "temp"
    (632098 'move' call_tmp[632095](460271 call chpl__ensureDomainExpr[1253885] call_tmp[632090]))
    const-val call_tmp[632100]:_RuntimeTypeInfo[1287155] "dead after last mention" "expr temp" "maybe param" "temp"
    (632103 'move' call_tmp[632100](460269 call chpl__buildArrayRuntimeType[1253904] call_tmp[632095]))
    const-val _runtime_type_tmp_[1305148]:domain(1,int(64),false)[1252508] "dead after last mention" "temp"
    (1305153 'move' _runtime_type_tmp_[1305148](1762172 '.v' call_tmp[632100] dom[1287156]))
    const-val ret_tmp[1793856]:[domain(1,int(64),false)] locale[1286922] "temp"
    (1305146 call chpl__convertRuntimeTypeToValue[1297602] _runtime_type_tmp_[1305148] ret_tmp[1793856])
    (1793859 'move' tmp[460266] ret_tmp[1793856])
    (460276 '.=' this[89693] myLocales[89288] tmp[460266])
    (460283 'setcid' this[89693])
    (513396 return _void[55])
  }
  function RootLocale[89691].setup[89334](const in arg this[89697]:RootLocale[89691]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (89339 call helpSetupRootLocaleFlat[208362] this[89697])
    (513398 return _void[55])
  }
  function RootLocale[89691].getChildCount[89425](const in arg this[89721]:RootLocale[89691]) : int(64)[13] "method" "primary method" "method overrides" "resolved" "virtual"
  {
    val ret[513440]:int(64)[13] "dead after last mention" "RVV" "temp"
    ref call_tmp[632131]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (632134 'move' call_tmp[632131](89430 call myLocaleSpace[781048] this[89721]))
    const-val call_tmp[632138]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (632141 'move' call_tmp[632138](89433 call size[1410596] call_tmp[632131]))
    (513445 'move' ret[513440] call_tmp[632138])
    (513442 return ret[513440])
  }
  function RootLocale[89691].getChild[89511](const in arg this[89733]:RootLocale[89691], const in arg idx[89508]:int(64)[13], ref arg _retArg[1798151]:_ref(locale)[948755]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513472]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[632159]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1719303]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "temp"
    (1719305 'move' _this_tmp_[1719303](89516 call myLocales[781074] this[89733]))
    (632162 'move' call_tmp[632159](1719311 call this[1347293] _this_tmp_[1719303] idx[89508]))
    (513477 'move' ret[513472](1798155 call chpl__initCopy[1494439] call_tmp[632159]))
    (1798153 '=' _retArg[1798151] ret[513472])
    (1798157 return _void[55])
  }
  function RootLocale[89691].getDefaultLocaleArray[89593](const in arg this[89745]:RootLocale[89691]) const ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "method" "primary method" "method overrides" "resolved"
  {
    ref ret[513504]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "RVV" "temp"
    ref call_tmp[632180]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "maybe param" "temp"
    (632183 'move' call_tmp[632180](377669 call myLocales[781074] this[89745]))
    (513509 'move' ret[513504] call_tmp[632180])
    (513506 return ret[513504])
  }
  function RootLocale[89691].localeIDtoLocale[89607](const in arg this[89749]:RootLocale[89691], const  ref arg id[89604]:chpl_localeID_t[209294], ref arg _retArg[1798159]:_ref(locale)[948755]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[513513]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[632187]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (632190 'move' call_tmp[632187](89613 call chpl_rt_nodeFromLocaleID[209388] id[89604]))
    ref call_tmp[632192]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1719349]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "temp"
    (1719351 'move' _this_tmp_[1719349](377675 call myLocales[781074] this[89749]))
    const-val coerce_tmp[1720667]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1720673 'move' coerce_tmp[1720667](1720669 'cast' int(64)[13] call_tmp[632187]))
    const-val coerce_tmp[1720675]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1720681 'move' coerce_tmp[1720675](1720677 'cast' int(64)[13] call_tmp[632187]))
    (632195 'move' call_tmp[632192](1720663 call this[1347293] _this_tmp_[1719349] coerce_tmp[1720675]))
    (513518 'move' ret[513513](1798163 call chpl__initCopy[1494439] call_tmp[632192]))
    (1798161 '=' _retArg[1798159] ret[513513])
    (1798165 return _void[55])
  }
  function RootLocale[89691].deinit[89623](const in arg this[89753]:RootLocale[89691]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    {
      ref _indexOfInterest[89654]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[89655]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304202] "dead at end of block" "expr temp" "temp"
      ref call_tmp[632199]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead at end of block" "maybe param" "temp"
      (632202 'move' call_tmp[632199](377681 call myLocales[781074] this[89753]))
      (89664 'move' _iterator[89655](89662 call _getIterator[1298020] call_tmp[632199]))
      {
        val ret[1856900]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304208] "dead after last mention" "RVV" "temp"
        ref _indexOfInterest[1856902]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1856904]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303597] "dead at end of block" "expr temp" "temp"
        val call_tmp[1856906]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1857022]:[domain(1,int(64),false)] locale[1286922] "temp"
        (1857027 'move' this[1857022](1857024 '.v' _iterator[89655] F0_this[1971614]))
        (1856908 'move' call_tmp[1856906](1856911 call _value[1286977] this[1857022]))
        const-val call_tmp[1856913]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1856915]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1856917 'move' coerce_tmp[1856915] call_tmp[1856906])
        const-val default_arg_tasksPerLocale[1856920]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1856922 'move' default_arg_tasksPerLocale[1856920](1856925 call these_default_tasksPerLocale[1298290] call_tmp[1856906]))
        const-val default_arg_ignoreRunning[1856927]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1856929 'move' default_arg_ignoreRunning[1856927](1856932 call these_default_ignoreRunning[1298321] coerce_tmp[1856915]))
        const-val default_arg_minIndicesPerTask[1856934]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1856936 'move' default_arg_minIndicesPerTask[1856934](1856939 call these_default_minIndicesPerTask[1298352] coerce_tmp[1856915]))
        const-val ret_tmp[1856941]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "temp"
        (1856944 call these[1298174] coerce_tmp[1856915] default_arg_tasksPerLocale[1856920] default_arg_ignoreRunning[1856927] default_arg_minIndicesPerTask[1856934] ret_tmp[1856941])
        (1856950 'move' call_tmp[1856913] ret_tmp[1856941])
        (1856953 'move' _iterator[1856904](1856956 call _getIterator[1303612] call_tmp[1856913]))
        {
          val ret[1913997]:_ir_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303603] "dead after last mention" "RVV" "temp"
          ref _indexOfInterest[1913999]:_ref(locale)[948755] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1914001]:_ic_chpl__serialViewIter[1303347] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1914003]:_ref(domain(1,int(64),false))[1250860] "dead at end of block" "maybe param" "temp"
          const-val this[1914386]:[domain(1,int(64),false)] locale[1256397] "temp"
          (1914391 'move' this[1914386](1914388 '.v' _iterator[1856904] F0_this[1973722]))
          (1914005 'move' call_tmp[1914003](1914008 call dom[1257930] this[1914386]))
          const-val call_tmp[1914010]:_ir_chpl__serialViewIter[1303353] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1914012]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1914014 'move' coerce_tmp[1914012](1914016 'deref' call_tmp[1914003]))
          const-val ret_tmp[1914018]:_ir_chpl__serialViewIter[1303353] "temp"
          const-val this[1914393]:[domain(1,int(64),false)] locale[1256397] "temp"
          (1914398 'move' this[1914393](1914395 '.v' _iterator[1856904] F0_this[1973722]))
          (1914021 call chpl__serialViewIter[1298386] this[1914393] coerce_tmp[1914012] ret_tmp[1914018])
          (1914025 'move' call_tmp[1914010] ret_tmp[1914018])
          (1914028 'move' _iterator[1914001](1914031 call _getIterator[1303362] call_tmp[1914010]))
          {
            val ret[1914034]:_ir_chpl__serialViewIter[1303353] "dead after last mention" "RVV" "temp"
            val info[1914036]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "insert auto destroy"
            val tmp[1914038]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "maybe param" "temp"
            val tmp[1914040]:[domain(1,int(64),false)] locale[1256397] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val arr[1914042]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914044 'move' arr[1914042](1914046 '.v' _iterator[1914001] F0_arr[1975627]))
            (1914049 'move' tmp[1914040] arr[1914042])
            const-val arr[1914052]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914054 'move' arr[1914052](1914056 '.v' _iterator[1914001] F0_arr[1975627]))
            (1914059 'move' tmp[1914038] arr[1914052])
            const-val arr[1914062]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914064 'move' arr[1914062](1914066 '.v' _iterator[1914001] F0_arr[1975627]))
            (1914069 '=' info[1914036] arr[1914062])
            (1914072 'noop')
            const-val call_tmp[1914073]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914075]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914077]:domain(1,int(64),false)[1250845] "temp"
            (1914079 'move' viewDom[1914077](1914081 '.v' _iterator[1914001] F1_viewDom[1975631]))
            (1914084 'move' coerce_tmp[1914075] viewDom[1914077])
            const-val viewDom[1914087]:domain(1,int(64),false)[1250845] "temp"
            (1914089 'move' viewDom[1914087](1914091 '.v' _iterator[1914001] F1_viewDom[1975631]))
            (1914094 'move' call_tmp[1914073](1914097 call dsiLow[1300347] viewDom[1914087]))
            const-val call_tmp[1914099]:int(64)[13] "dead at end of block" "maybe param" "temp"
            const-val arr[1914101]:[domain(1,int(64),false)] locale[1256397] "temp"
            (1914103 'move' arr[1914101](1914105 '.v' _iterator[1914001] F0_arr[1975627]))
            (1914108 'move' call_tmp[1914099](1914111 call getDataIndex[1300606] arr[1914101] call_tmp[1914073]))
            const-val first[1914114]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914116 'move' first[1914114] call_tmp[1914099])
            const-val call_tmp[1914119]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914121]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914123]:domain(1,int(64),false)[1250845] "temp"
            (1914125 'move' viewDom[1914123](1914127 '.v' _iterator[1914001] F1_viewDom[1975631]))
            (1914130 'move' coerce_tmp[1914121] viewDom[1914123])
            (1914133 'move' call_tmp[1914119](1914136 call dsiLow[1300347] coerce_tmp[1914121]))
            const-val call_tmp[1914138]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914140 'move' call_tmp[1914138](1914143 call chpl__idxToInt[1026827] call_tmp[1914119]))
            const-val call_tmp[1914145]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914147 'move' call_tmp[1914145](1914150 call +[949577] call_tmp[1914138]))
            const-val call_tmp[1914152]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914154]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914156]:domain(1,int(64),false)[1250845] "temp"
            (1914158 'move' viewDom[1914156](1914160 '.v' _iterator[1914001] F1_viewDom[1975631]))
            (1914163 'move' coerce_tmp[1914154] viewDom[1914156])
            (1914166 'move' call_tmp[1914152](1914169 call chpl_intToIdx[1301776] coerce_tmp[1914154] call_tmp[1914145]))
            const-val call_tmp[1914172]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914174 'move' call_tmp[1914172](1914177 call getDataIndex[1300606] info[1914036] call_tmp[1914152]))
            const-val second[1914180]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914182 'move' second[1914180] call_tmp[1914172])
            const-val call_tmp[1914185]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914187 'move' call_tmp[1914185](1914190 call -[440327] call_tmp[1914172] call_tmp[1914099]))
            const-val step[1914193]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914195 'move' step[1914193] call_tmp[1914185])
            const-val call_tmp[1914198]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            val coerce_tmp[1914200]:domain(1,int(64),false)[1250845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            const-val viewDom[1914202]:domain(1,int(64),false)[1250845] "temp"
            (1914204 'move' viewDom[1914202](1914206 '.v' _iterator[1914001] F1_viewDom[1975631]))
            (1914209 'move' coerce_tmp[1914200] viewDom[1914202])
            (1914212 'move' call_tmp[1914198](1914215 call dsiNumIndices[1263545] coerce_tmp[1914200]))
            const-val call_tmp[1914217]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914219 'move' call_tmp[1914217](1914222 call -[962137] call_tmp[1914198]))
            const-val call_tmp[1914224]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
            (1914226 'move' call_tmp[1914224](1914229 call *[441739] call_tmp[1914217] call_tmp[1914185]))
            const-val call_tmp[1914232]:int(64)[13] "dead at end of block" "maybe param" "temp"
            (1914234 'move' call_tmp[1914232](1914237 call +[439547] call_tmp[1914099] call_tmp[1914224]))
            const-val last[1914240]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            (1914242 'move' last[1914240] call_tmp[1914232])
            val _indexOfInterest[1914245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1914247]:_ic_chpl_direct_pos_stride_range_iter[1302908] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1914249]:_ir_chpl_direct_pos_stride_range_iter[1302914] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1914251]:_ir_chpl_direct_pos_stride_range_iter[1302914] "temp"
            (1914254 call chpl_direct_pos_stride_range_iter[1301863] call_tmp[1914099] call_tmp[1914232] call_tmp[1914185] ret_tmp[1914251])
            (1914259 'move' call_tmp[1914249] ret_tmp[1914251])
            (1914262 'move' _iterator[1914247](1914265 call _getIterator[1302923] call_tmp[1914249]))
            {
              val ret[1943843]:_ir_chpl_direct_pos_stride_range_iter[1302914] "dead after last mention" "RVV" "temp"
              val call_tmp[1943845]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val stride[1944017]:int(64)[13] "temp"
              (1944022 'move' stride[1944017](1944019 '.v' _iterator[1914247] F2_stride[1977171]))
              (1943848 call chpl_range_check_stride[1102744] stride[1944017])
              val call_tmp[1943850]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1943852]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1944024]:int(64)[13] "temp"
              (1944029 'move' low[1944024](1944026 '.v' _iterator[1914247] F0_low[1977163]))
              (1943854 'move' default_arg_first[1943852](1943857 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1944024]))
              const-val default_arg_last[1943859]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1944031]:int(64)[13] "temp"
              (1944036 'move' high[1944031](1944033 '.v' _iterator[1914247] F1_high[1977167]))
              (1943861 'move' default_arg_last[1943859](1943864 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1944031]))
              const-val _return_tmp_[1943866]:bool[10] "dead after last mention" "temp"
              const-val low[1944038]:int(64)[13] "temp"
              (1944043 'move' low[1944038](1944040 '.v' _iterator[1914247] F0_low[1977163]))
              const-val high[1944045]:int(64)[13] "temp"
              (1944050 'move' high[1944045](1944047 '.v' _iterator[1914247] F1_high[1977167]))
              const-val stride[1944052]:int(64)[13] "temp"
              (1944057 'move' stride[1944052](1944054 '.v' _iterator[1914247] F2_stride[1977171]))
              (1943868 'move' _return_tmp_[1943866](1943871 call chpl_checkIfRangeIterWillOverflow[1095987] low[1944038] high[1944045] stride[1944052] default_arg_first[1943852] default_arg_last[1943859] 1))
              val i[1943878]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1943880]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1943882 'move' i[1943878] 0)
              CForLoop[1943885] hazard
              {
                const-val yret[1943905]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1943907 'move' yret[1943905] i[1943878])
                const-val _yieldedIndex[1943921]:int(64)[13] "temp"
                (1944015 'move' _yieldedIndex[1943921] i[1943878])
                {
                  const-val i[1943923]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1943925 'move' i[1943923] _yieldedIndex[1943921])
                  ref yret[1943928]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1943930]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1943932]:_ref(_ddata(locale))[1255314] "dead after last mention" "temp"
                  (1943934 'move' _this_tmp_[1943932](1943937 call theData[1303161] info[1914036]))
                  val coerce_tmp[1943939]:_ddata(locale)[1255305] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1943941 'move' coerce_tmp[1943939](1943943 'deref' _this_tmp_[1943932]))
                  (1943945 'move' call_tmp[1943930](1943948 call this[1303308] coerce_tmp[1943939] _yieldedIndex[1943921]))
                  ref _yieldedIndex[1943951]:_ref(locale)[948755] "temp"
                  (1943953 'move' _yieldedIndex[1943951] call_tmp[1943930])
                  {
                    ref elem[1943957]:_ref(locale)[948755] "index var" "insert auto destroy"
                    (1943959 'move' elem[1943957] _yieldedIndex[1943951])
                    ref yret[1943962]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                    ref _yieldedIndex[1943964]:_ref(locale)[948755] "temp"
                    (1943966 'move' _yieldedIndex[1943964] elem[1943957])
                    {
                      ref i[1943970]:_ref(locale)[948755] "index var" "insert auto destroy"
                      (1943972 'move' i[1943970] _yieldedIndex[1943964])
                      ref yret[1943975]:_ref(locale)[948755] "dead after last mention" "YVV" "temp"
                      ref _yieldedIndex[1943977]:_ref(locale)[948755] "temp"
                      (1943979 'move' _yieldedIndex[1943977] i[1943970])
                      {
                        ref loc[1943983]:_ref(locale)[948755] "index var" "insert auto destroy"
                        (1943985 'move' loc[1943983] _yieldedIndex[1943977])
                        {
                          const-val tmp[1943989]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                          const-val call_tmp[1943991]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                          val _locale_tmp_[1943993]:BaseLocale[91201] "dead after last mention" "temp"
                          (1943995 'move' _locale_tmp_[1943993](1943998 call _value[89981] loc[1943983]))
                          (1944000 'move' call_tmp[1943991](1944002 '_wide_get_locale' _locale_tmp_[1943993]))
                          (1944004 'move' tmp[1943989] call_tmp[1943991])
                          val rvfDerefTmp[2032101]:locale[28] "temp"
                          (2032105 'move' rvfDerefTmp[2032101](2032103 'deref' loc[1943983]))
                          val isdirect[2034250]:bool[10] "temp"
                          (2034255 'move' isdirect[2034250](2034252 call chpl_doDirectExecuteOn[187423] tmp[1943989]))
                          if isdirect[2034250]
                          {
                            (2034259 call on_fn[934478] rvfDerefTmp[2032101])
                          }
                          {
                            val _args_foron_fn[2034274]:_class_localson_fn[2034266] "temp"
                            (2034278 'move' _args_foron_fn[2034274](2034276 'stack allocate class' _class_localson_fn[2034266]))
                            (2034280 '.=' _args_foron_fn[2034274] _0_tmp[2034269] tmp[1943989])
                            (2034284 '.=' _args_foron_fn[2034274] _1_rvfDerefTmp[2034271] rvfDerefTmp[2032101])
                            val _args_vforon_fn[2034288]:c_void_ptr[149] "temp"
                            (2034292 'move' _args_vforon_fn[2034288](2034290 'cast_to_void_star' _args_foron_fn[2034274]))
                            val _args_sizeon_fn[2034294]:int(64)[13] "temp"
                            (2034298 'move' _args_sizeon_fn[2034294](2034296 'sizeof_bundle' _class_localson_fn[2034266]))
                            on(2034330 call wrapon_fn[2034300] tmp[1943989] _args_vforon_fn[2034288] _args_sizeon_fn[2034294] _args_foron_fn[2034274])
                          }
                          {
                          }
                        }
                        label _continueLabel[1944012]
                      }
                    }
                  }
                }
                {
                  const-val low[1944059]:int(64)[13] "temp"
                  (1944064 'move' low[1944059](1944061 '.v' _iterator[1914247] F0_low[1977163]))
                  (1943887 '=' i[1943878] low[1944059])
                }
                {
                  const-val high[1944066]:int(64)[13] "temp"
                  (1944071 'move' high[1944066](1944068 '.v' _iterator[1914247] F1_high[1977167]))
                  (1943891 '<=' i[1943878] high[1944066])
                }
                {
                  val call_tmp[1943895]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1943897]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val stride[1944073]:int(64)[13] "temp"
                  (1944078 'move' stride[1944073](1944075 '.v' _iterator[1914247] F2_stride[1977171]))
                  (1943899 'move' call_tmp[1943897] stride[1944073])
                  const-val stride[1944080]:int(64)[13] "temp"
                  (1944085 'move' stride[1944080](1944082 '.v' _iterator[1914247] F2_stride[1977171]))
                  (1943902 '+=' i[1943878] stride[1944080])
                }
              }
              label _endchpl_direct_pos_stride_range_iter[1943917]
            }
            (1914328 call _freeIterator[1303096] _iterator[1914247])
            label _endchpl__serialViewIter[1914330]
          }
          (1914333 call _freeIterator[1303531] _iterator[1914001])
          label _endthese[1914335]
        }
        (1856982 call _freeIterator[1304136] _iterator[1856904])
        label _endthese[1856984]
      }
      label _breakLabel[89660]
      (1798619 call _freeIterator[1304887] _iterator[89655])
    }
    label _enddeinit[1771467]
    const-val _field_destructor_tmp_[1771465]:[domain(1,int(64),false)] locale[1286922] "temp"
    (1771472 'move' _field_destructor_tmp_[1771465](1771469 '.v' this[89753] myLocales[89288]))
    (1771474 call chpl__autoDestroy[1619905] _field_destructor_tmp_[1771465])
    const-val _field_destructor_tmp_[1771477]:domain(1,int(64),false)[1252508] "temp"
    (1771482 'move' _field_destructor_tmp_[1771477](1771479 '.v' this[89753] myLocaleSpace[89277]))
    (1771484 call chpl__autoDestroy[1589828] _field_destructor_tmp_[1771477])
    val _parent_destructor_tmp_[1771487]:AbstractRootLocale[92009] "temp"
    (1771492 'move' _parent_destructor_tmp_[1771487](1771488 'cast' AbstractRootLocale[92009] this[89753]))
    (1771494 call deinit[784024] _parent_destructor_tmp_[1771487])
    (513520 return _void[55])
  }
  function RootLocale[89691].myLocaleSpace[781048](const in arg this[781052]:RootLocale[89691]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to a const" "resolved"
  {
    ref ret[781062]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead after last mention" "RVV" "temp"
    ref call_tmp[781069]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead after last mention" "maybe param" "temp"
    (781072 'move' call_tmp[781069](781056 '.' this[781052] myLocaleSpace[89277]))
    (781067 'move' ret[781062] call_tmp[781069])
    (781064 return ret[781062])
  }
  function RootLocale[89691].myLocales[781074](const in arg this[781078]:RootLocale[89691]) ref : _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[781088]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "RVV" "temp"
    ref call_tmp[781095]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1286948] "dead after last mention" "maybe param" "temp"
    (781098 'move' call_tmp[781095](781082 '.' this[781078] myLocales[89288]))
    (781093 'move' ret[781088] call_tmp[781095])
    (781090 return ret[781088])
  }
  function _new[1305167]() : RootLocale[89691] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1763528]:RootLocale[89691] "temp"
    val ret[1305206]:RootLocale[89691] "dead after last mention" "RVV" "temp"
    val initTemp[1305169]:RootLocale[89691] "dead after last mention" "temp"
    const-val call_tmp[1305213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1305216 'move' call_tmp[1305213](1305225 'sizeof_bundle' RootLocale[89691]))
    const-val cast_tmp[1305228]:c_void_ptr[149] "dead after last mention" "temp"
    (1305230 'move' cast_tmp[1305228](1305181 call chpl_here_alloc[187742] call_tmp[1305213] 54))
    (1305184 'move' initTemp[1305169](1305232 'cast' RootLocale[89691] cast_tmp[1305228]))
    (1305186 'setcid' initTemp[1305169])
    (1305170 call init[89294] initTemp[1305169])
    val tmp[1305188]:RootLocale[89691] "dead after last mention" "temp"
    (1305195 'move' tmp[1305188] initTemp[1305169])
    (1305211 'move' ret[1305206] tmp[1305188])
    (1305208 return ret[1305206])
  }
  type RootLocale[89691] val super[355558]:AbstractRootLocale[92009] "super class" const myLocaleSpace[89277]:domain(1,int(64),false)[1252508] "const" val myLocales[89288]:[domain(1,int(64),false)] locale[1286922] "unsafe"
  const-val call_tmp[631904]:range(int(64),bounded,false)[1026725] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[631909]:domain(1,int(64),false)[1252508] "dead at end of block" "maybe param" "temp"
  const-val init_coerce_tmp[1253879]:domain(1,int(64),false)[1252508] "dead at end of block" "temp"
  ref call_tmp[631919]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252534] "dead at end of block" "maybe param" "reference to a const" "temp"
  const-val call_tmp[631924]:_RuntimeTypeInfo[1287155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val _runtime_type_tmp_[1297590]:domain(1,int(64),false)[1252508] "dead at end of block" "temp"
  function on_fn[934478](const in arg loc[1765418]:locale[28]) : void[4] "on" "resolved"
  {
    {
      (89630 call =[435085] rootLocaleInitialized[310] 0)
      ref call_tmp[632211]:_ref(BaseLocale)[982334] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032108]:_ref(locale)[948755] "temp"
      (2032112 'move' rvfRerefTmp[2032108](2032109 'set reference' loc[1765418]))
      (632214 'move' call_tmp[632211](89635 call _instance[782666] rvfRerefTmp[2032108]))
      val coerce_tmp[1305066]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1305070 'move' coerce_tmp[1305066](1305068 'deref' call_tmp[632211]))
      (89639 call chpl__delete[983202] coerce_tmp[1305066])
    }
    (934485 return _void[55])
  }
  function wrapon_fn[2034300](const in arg dummy_locale_arg[2034302]:chpl_localeID_t[209294], in arg buf[2034304]:c_void_ptr[149], in arg buf_size[2034306]:int(64)[13], in arg c[2034308]:_class_localson_fn[2034266]) : void[4] "on block"
  {
    val _0_tmp[2034313]:chpl_localeID_t[209294] "temp"
    (2034318 'move' _0_tmp[2034313](2034315 '.v' c[2034308] _0_tmp[2034269]))
    val _1_rvfDerefTmp[2034320]:locale[28] "temp"
    (2034325 'move' _1_rvfDerefTmp[2034320](2034322 '.v' c[2034308] _1_rvfDerefTmp[2034271]))
    (2034311 call on_fn[934478] _1_rvfDerefTmp[2034320])
    (2034328 return _void[55])
  }
}