AST dump for ChapelRange after pass optimizeOnClauses.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[415989]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (512162 return _void[55])
  }
  type BoundedRangeType[64216] def bounded[64208]:BoundedRangeType[64216] def boundedLow[64210]:BoundedRangeType[64216] def boundedHigh[64212]:BoundedRangeType[64216] def boundedNone[64214]:BoundedRangeType[64216]
  type range(byteIndex,bounded,false)[1025811] val _low[1025773]:int(64)[13] val _high[1025778]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143422] val _low[1143384]:int(64)[13] val _high[1143389]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184938] val _low[1184900]:int(64)[13] val _high[1184905]:int(64)[13]
  type range(int(64),bounded,false)[1026833] val _low[1026795]:int(64)[13] val _high[1026800]:int(64)[13]
  type range(int(64),boundedLow,false)[1087584] val _low[1087546]:int(64)[13] val _high[1087551]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187448] val _low[1187410]:int(64)[13] val _high[1187415]:int(64)[13]
  function range(int(64),bounded,false)[1026833].init[1026056](ref arg this[1026062]:range(int(64),bounded,false)[1026833], const in arg _low[1026083]:int(64)[13], const in arg _high[1026092]:int(64)[13], const in arg _stride[1026100]:int(64)[13], const in arg _alignment[1026109]:int(64)[13], const in arg _aligned[1026113]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026354 '.=' this[1026062] _low[1026795] _low[1026083])
    (1026386 '.=' this[1026062] _high[1026800] _high[1026092])
    const-val call_tmp[2081507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081509 'move' call_tmp[2081507](2081511 '==' _stride[1026100] 1))
    (1026669 call assert[210363] call_tmp[2081507])
    (1026672 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025811].init[1028727](ref arg this[1028733]:range(byteIndex,bounded,false)[1025811], const  ref arg _low[1028754]:byteIndex[28173], const  ref arg _high[1028763]:byteIndex[28173], const in arg _stride[1028771]:int(64)[13], const  ref arg _alignment[1028780]:byteIndex[28173], const in arg _aligned[1028784]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2222474]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385150]:int(64)[13] "temp"
    (2222476 'move' tmp[2385150](2222478 '.v' _low[1028754] _bindex[28094]))
    (2385153 'move' ret[2222474] tmp[2385150])
    (1028862 '.=' this[1028733] _low[1025773] ret[2222474])
    val ret[2222484]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385156]:int(64)[13] "temp"
    (2222486 'move' tmp[2385156](2222488 '.v' _high[1028763] _bindex[28094]))
    (2385159 'move' ret[2222484] tmp[2385156])
    (1028894 '.=' this[1028733] _high[1025778] ret[2222484])
    const-val call_tmp[2081522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081524 'move' call_tmp[2081522](2081526 '==' _stride[1028771] 1))
    (1029177 call assert[210363] call_tmp[2081522])
    (1029180 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087584]._local_init[2358499](ref arg this[2358501]:range(int(64),boundedLow,false)[1087584], const in arg _low[2358503]:int(64)[13], const in arg _high[2358505]:int(64)[13], const in arg _stride[2358507]:int(64)[13], const in arg _alignment[2358509]:int(64)[13], const in arg _aligned[2358511]:bool[10]) : void[4] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2358514 '.=' this[2358501] _low[1087546] _low[2358503])
    (2358518 '.=' this[2358501] _high[1087551] _high[2358505])
    const-val call_tmp[2358522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358524 'move' call_tmp[2358522](2358526 '==' _stride[2358507] 1))
    (2358530 call _local_assert[2362819] call_tmp[2358522])
    (2358532 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087584].init[1087031](ref arg this[1087037]:range(int(64),boundedLow,false)[1087584], const in arg _low[1087058]:int(64)[13], const in arg _high[1087067]:int(64)[13], const in arg _stride[1087075]:int(64)[13], const in arg _alignment[1087084]:int(64)[13], const in arg _aligned[1087088]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087157 '.=' this[1087037] _low[1087546] _low[1087058])
    (1087189 '.=' this[1087037] _high[1087551] _high[1087067])
    const-val call_tmp[2081637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081639 'move' call_tmp[2081637](2081641 '==' _stride[1087075] 1))
    (1087472 call assert[210363] call_tmp[2081637])
    (1087475 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143422].init[1142869](ref arg this[1142875]:range(byteIndex,boundedLow,false)[1143422], const  ref arg _low[1142896]:byteIndex[28173], const  ref arg _high[1142905]:byteIndex[28173], const in arg _stride[1142913]:int(64)[13], const  ref arg _alignment[1142922]:byteIndex[28173], const in arg _aligned[1142926]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2222530]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385162]:int(64)[13] "temp"
    (2222532 'move' tmp[2385162](2222534 '.v' _low[1142896] _bindex[28094]))
    (2385165 'move' ret[2222530] tmp[2385162])
    (1142995 '.=' this[1142875] _low[1143384] ret[2222530])
    val ret[2222540]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385168]:int(64)[13] "temp"
    (2222542 'move' tmp[2385168](2222544 '.v' _high[1142905] _bindex[28094]))
    (2385171 'move' ret[2222540] tmp[2385168])
    (1143027 '.=' this[1142875] _high[1143389] ret[2222540])
    const-val call_tmp[2081767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081769 'move' call_tmp[2081767](2081771 '==' _stride[1142913] 1))
    (1143310 call assert[210363] call_tmp[2081767])
    (1143313 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184938].init[1184385](ref arg this[1184391]:range(byteIndex,boundedHigh,false)[1184938], const  ref arg _low[1184412]:byteIndex[28173], const  ref arg _high[1184421]:byteIndex[28173], const in arg _stride[1184429]:int(64)[13], const  ref arg _alignment[1184438]:byteIndex[28173], const in arg _aligned[1184442]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2222602]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385180]:int(64)[13] "temp"
    (2222604 'move' tmp[2385180](2222606 '.v' _low[1184412] _bindex[28094]))
    (2385183 'move' ret[2222602] tmp[2385180])
    (1184511 '.=' this[1184391] _low[1184900] ret[2222602])
    val ret[2222612]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385186]:int(64)[13] "temp"
    (2222614 'move' tmp[2385186](2222616 '.v' _high[1184421] _bindex[28094]))
    (2385189 'move' ret[2222612] tmp[2385186])
    (1184543 '.=' this[1184391] _high[1184905] ret[2222612])
    const-val call_tmp[2081842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081844 'move' call_tmp[2081842](2081846 '==' _stride[1184429] 1))
    (1184826 call assert[210363] call_tmp[2081842])
    (1184829 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187448].init[1188732](ref arg this[1188738]:range(int(64),boundedHigh,false)[1187448], const in arg _low[1188759]:int(64)[13], const in arg _high[1188768]:int(64)[13], const in arg _stride[1188776]:int(64)[13], const in arg _alignment[1188785]:int(64)[13], const in arg _aligned[1188789]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188858 '.=' this[1188738] _low[1187410] _low[1188759])
    (1188890 '.=' this[1188738] _high[1187415] _high[1188768])
    const-val call_tmp[2081857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081859 'move' call_tmp[2081857](2081861 '==' _stride[1188776] 1))
    (1189173 call assert[210363] call_tmp[2081857])
    (1189176 return _void[55])
  }
  function range(int(64),bounded,false)[1026833]._local_init[2362850](ref arg this[2362852]:range(int(64),bounded,false)[1026833], const in arg _low[2362854]:int(64)[13], const in arg _high[2362856]:int(64)[13], const in arg _stride[2362858]:int(64)[13], const in arg _aligned[2362860]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2362863 '.=' this[2362852] _low[1026795] _low[2362854])
    (2362867 '.=' this[2362852] _high[1026800] _high[2362856])
    (2362871 return _void[55])
  }
  function range(int(64),bounded,false)[1026833].init[1091283](ref arg this[1091289]:range(int(64),bounded,false)[1026833], const in arg _low[1091310]:int(64)[13], const in arg _high[1091319]:int(64)[13], const in arg _stride[1091321]:int(64)[13], const in arg _aligned[1091325]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091955 '.=' this[1091289] _low[1026795] _low[1091310])
    (1091987 '.=' this[1091289] _high[1026800] _high[1091319])
    (1092153 return _void[55])
  }
  function range(int(64),bounded,false)[1026833]._local_init[2363022](ref arg this[2363024]:range(int(64),bounded,false)[1026833], const in arg _low[2363026]:int(64)[13], const in arg _high[2363028]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2363031 '.=' this[2363024] _low[1026795] _low[2363026])
    (2363035 '.=' this[2363024] _high[1026800] _high[2363028])
    (2363039 return _void[55])
  }
  function range(int(64),bounded,false)[1026833].init[1094494](ref arg this[1094500]:range(int(64),bounded,false)[1026833], const in arg _low[1094521]:int(64)[13], const in arg _high[1094530]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1095094 '.=' this[1094500] _low[1026795] _low[1094521])
    (1095126 '.=' this[1094500] _high[1026800] _high[1094530])
    (1095292 return _void[55])
  }
  function chpl_build_bounded_range[455175](const in arg low[455182]:int(64)[13], const in arg high[455188]:int(64)[13], ref arg _retArg[1805158]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616830]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026044]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "temp"
    (1026047 call init[1026056] initTemp[1026044] low[455182] high[455188] 1 0 0)
    (616833 'move' call_tmp[616830] initTemp[1026044])
    (1805160 '=' _retArg[1805158] call_tmp[616830])
    (1805162 return _void[55])
  }
  function _local_chpl_build_low_bounded_range[2355344](const in arg low[2355346]:int(64)[13], ref arg _retArg[2355348]:range(int(64),boundedLow,false)[1087584]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2355351]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2355353]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "delay instantiation" "temp"
    (2355356 call _local_init[2358499] initTemp[2355353] low[2355346] 0 1 0 0)
    (2355363 'move' call_tmp[2355351] initTemp[2355353])
    (2355366 '=' _retArg[2355348] call_tmp[2355351])
    (2355369 return _void[55])
  }
  function chpl_build_low_bounded_range[1086977](const in arg low[1086979]:int(64)[13], ref arg _retArg[1806952]:range(int(64),boundedLow,false)[1087584]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1087002]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087020]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "delay instantiation" "temp"
    (1087023 call init[1087031] initTemp[1087020] low[1086979] 0 1 0 0)
    (1087004 'move' call_tmp[1087002] initTemp[1087020])
    (1806954 '=' _retArg[1806952] call_tmp[1087002])
    (1806956 return _void[55])
  }
  function range(int(64),bounded,false)[1026833].alignment[1034270](const in arg this[1034276]:range(int(64),bounded,false)[1026833]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2222184]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385030]:int(64)[13] "temp"
    (2222186 'move' tmp[2385030](2222188 '.v' this[1034276] _low[1026795]))
    (2385033 'move' coerce_tmp[2222184] tmp[2385030])
    (1034398 return coerce_tmp[2222184])
  }
  function range(int(64),boundedLow,false)[1087584].alignment[1128139](const in arg this[1128145]:range(int(64),boundedLow,false)[1087584]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2231120]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386049]:int(64)[13] "temp"
    (2231122 'move' tmp[2386049](2231124 '.v' this[1128145] _low[1087546]))
    (2386052 'move' coerce_tmp[2231120] tmp[2386049])
    (1128267 return coerce_tmp[2231120])
  }
  function range(byteIndex,boundedLow,false)[1143422].alignment[1148257](const in arg this[1148263]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807905]:byteIndex[28173]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2231806]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386127]:int(64)[13] "temp"
    (2231808 'move' tmp[2386127](2231810 '.v' this[1148263] _low[1143384]))
    (2386130 'move' coerce_tmp[2231806] tmp[2386127])
    const-val ret[2231813]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2231815]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2231818 call init[28100] cpi[2231815])
    (2231820 '.=' cpi[2231815] _bindex[28094] coerce_tmp[2231806])
    (2231824 'move' ret[2231813] cpi[2231815])
    (1807907 '=' _retArg[1807905] ret[2231813])
    (1807909 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187448].alignment[1190613](const in arg this[1190619]:range(int(64),boundedHigh,false)[1187448]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190643 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184938].alignment[1192680](const in arg this[1192686]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808227]:byteIndex[28173]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2235542]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2235544]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2235547 call init[28100] cpi[2235544])
    (2235549 '.=' cpi[2235544] _bindex[28094] 0)
    (2235553 'move' ret[2235542] cpi[2235544])
    (1808229 '=' _retArg[1808227] ret[2235542])
    (1808231 return _void[55])
  }
  function range(int(64),bounded,false)[1026833]._local_size[2355439](const in arg this[2355441]:range(int(64),bounded,false)[1026833]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2355444]:string[26] "temp"
    (2355446 'move' local__str_literal_71[2355444] "Attempt to divide by zero")
    val ret[2355449]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2355451]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2397383]:int(64)[13] "temp"
    (2355453 'move' tmp[2397383](2355455 '.v' this[2355441] _high[1026800]))
    (2397386 'move' ret[2355451] tmp[2397383])
    val ret[2355458]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2397389]:int(64)[13] "temp"
    (2355460 'move' tmp[2397389](2355462 '.v' this[2355441] _low[1026795]))
    (2397392 'move' ret[2355458] tmp[2397389])
    const-val call_tmp[2355465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2355467 'move' call_tmp[2355465](2355469 '>' ret[2355458] ret[2355451]))
    if call_tmp[2355465]
    {
      (2355474 'move' ret[2355449] 0)
      gotoReturn _end_size[2355517] _end_size[2355517]
    }
    const-val call_tmp[2355480]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2355482 'move' call_tmp[2355480](2355484 '-' ret[2355451] ret[2355458]))
    const-val call_tmp[2355487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2355489 'move' call_tmp[2355487](2355491 '==' 1 0))
    if call_tmp[2355487]
    {
      (2355497 call _local_halt[2340806] local__str_literal_71[2355444])
    }
    const-val call_tmp[2355500]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2355502 'move' call_tmp[2355500](2355504 '/' call_tmp[2355480] 1))
    const-val call_tmp[2355507]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2355509 'move' call_tmp[2355507](2355511 '+' call_tmp[2355500] 1))
    (2355514 'move' ret[2355449] call_tmp[2355507])
    label _end_size[2355517]
    (2355519 return ret[2355449])
  }
  function range(int(64),bounded,false)[1026833].size[1035808](const in arg this[1035814]:range(int(64),bounded,false)[1026833]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2330644]:string[26] "temp"
    (2330645 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035821]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2223460]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385258]:int(64)[13] "temp"
    (2223462 'move' tmp[2385258](2223464 '.v' this[1035814] _high[1026800]))
    (2385261 'move' ret[2223460] tmp[2385258])
    val ret[2223492]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385264]:int(64)[13] "temp"
    (2223494 'move' tmp[2385264](2223496 '.v' this[1035814] _low[1026795]))
    (2385267 'move' ret[2223492] tmp[2385264])
    const-val call_tmp[2087806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087808 'move' call_tmp[2087806](2087810 '>' ret[2223492] ret[2223460]))
    if call_tmp[2087806]
    {
      (1035926 'move' ret[1035821] 0)
      gotoReturn _end_size[1036030] _end_size[1036030]
    }
    const-val call_tmp[2090695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2090697 'move' call_tmp[2090695](2090699 '-' ret[2223460] ret[2223492]))
    const-val call_tmp[2174511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174513 'move' call_tmp[2174511](2174515 '==' 1 0))
    if call_tmp[2174511]
    {
      (2174521 call halt[154111] "Attempt to divide by zero")
    }
    const-val call_tmp[2174524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174526 'move' call_tmp[2174524](2174528 '/' call_tmp[2090695] 1))
    const-val call_tmp[2084106]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084108 'move' call_tmp[2084106](2084110 '+' call_tmp[2174524] 1))
    (1036986 'move' ret[1035821] call_tmp[2084106])
    label _end_size[1036030]
    (1036032 return ret[1035821])
  }
  function ==[1041931](const in arg r1[1041933]:range(int(64),bounded,false)[1026833], const in arg r2[1041935]:range(int(64),bounded,false)[1026833]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1041960]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042069]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042071 'move' call_tmp[1042069](1042074 call size[1035808] r1[1041933]))
    const-val call_tmp[1042082]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042084 'move' call_tmp[1042082](1042087 call size[1035808] r2[1041935]))
    const-val call_tmp[2079199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079201 'move' call_tmp[2079199](2079203 '!=' call_tmp[1042069] call_tmp[1042082]))
    if call_tmp[2079199]
    {
      (1042113 'move' ret[1041960] 0)
      gotoReturn _end_==[1042430] _end_==[1042430]
    }
    const-val call_tmp[2081577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081579 'move' call_tmp[2081577](2081581 '==' call_tmp[1042069] 0))
    if call_tmp[2081577]
    {
      (1042138 'move' ret[1041960] 1)
      gotoReturn _end_==[1042430] _end_==[1042430]
    }
    val ret[2223635]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385294]:int(64)[13] "temp"
    (2223637 'move' tmp[2385294](2223639 '.v' r1[1041933] _low[1026795]))
    (2385297 'move' ret[2223635] tmp[2385294])
    val ret[2223645]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385300]:int(64)[13] "temp"
    (2223647 'move' tmp[2385300](2223649 '.v' r2[1041935] _low[1026795]))
    (2385303 'move' ret[2223645] tmp[2385300])
    const-val call_tmp[2079209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079211 'move' call_tmp[2079209](2079213 '!=' ret[2223635] ret[2223645]))
    if call_tmp[2079209]
    {
      (1042179 'move' ret[1041960] 0)
      gotoReturn _end_==[1042430] _end_==[1042430]
    }
    const-val call_tmp[2081592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081594 'move' call_tmp[2081592](2081596 '==' call_tmp[1042069] 1))
    if call_tmp[2081592]
    {
      (1042204 'move' ret[1041960] 1)
      gotoReturn _end_==[1042430] _end_==[1042430]
    }
    (1042253 'move' ret[1041960] 1)
    label _end_==[1042430]
    (1042432 return ret[1041960])
  }
  function !=[1746134](const in arg r1[1746136]:range(int(64),bounded,false)[1026833], const in arg r2[1746138]:range(int(64),bounded,false)[1026833]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1746150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1746152 'move' call_tmp[1746150](1746155 call ==[1041931] r1[1746136] r2[1746138]))
    const-val call_tmp[2078605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078607 'move' call_tmp[2078605](2078609 '!' call_tmp[1746150]))
    (1746169 return call_tmp[2078605])
  }
  function range(int(64),bounded,false)[1026833].safeCast[1297036](const in arg this[1297042]:range(int(64),bounded,false)[1026833], ref arg _retArg[1810371]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1297046]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    val tmp[1297071]:range(int(64),bounded,false)[1026833] "dead at end of block" "insert auto destroy"
    (1297445 call init[1026056] tmp[1297071] 1 0 1 0 0)
    const-val coerce_tmp[1297423]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2368781]:int(64)[13] "temp"
    (1297427 'move' tmp[2368781](2324813 '.v' this[1297042] _low[1026795]))
    (2368784 'move' coerce_tmp[1297423] tmp[2368781])
    (2324806 '.=' tmp[1297071] _low[1026795] coerce_tmp[1297423])
    const-val coerce_tmp[1297435]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2368787]:int(64)[13] "temp"
    (1297439 'move' tmp[2368787](2324827 '.v' this[1297042] _high[1026800]))
    (2368790 'move' coerce_tmp[1297435] tmp[2368787])
    (2324820 '.=' tmp[1297071] _high[1026800] coerce_tmp[1297435])
    (1297377 'move' ret[1297046] tmp[1297071])
    label _end_safeCast[1297385]
    (1810373 '=' _retArg[1810371] ret[1297046])
    (1810375 return _void[55])
  }
  function _cast[1027581](const in arg r[1027585]:range(int(64),bounded,false)[1026833], ref arg _retArg[1805958]:range(byteIndex,bounded,false)[1025811]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027587]:range(byteIndex,bounded,false)[1025811] "dead after last mention" "RVV" "temp"
    val tmp[1027597]:range(byteIndex,bounded,false)[1025811] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029770]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2222681]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222683]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222686 call init[28100] cpi[2222683])
    (2222688 '.=' cpi[2222683] _bindex[28094] 1)
    (2222692 'move' ret[2222681] cpi[2222683])
    (1805967 'move' default_arg__low[1029770] ret[2222681])
    const-val default_arg__high[1029822]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2222708]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222710]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222713 call init[28100] cpi[2222710])
    (2222715 '.=' cpi[2222710] _bindex[28094] 0)
    (2222719 'move' ret[2222708] cpi[2222710])
    (1805979 'move' default_arg__high[1029822] ret[2222708])
    const-val default_arg__alignment[1029895]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2222741]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222743]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222746 call init[28100] cpi[2222743])
    (2222748 '.=' cpi[2222743] _bindex[28094] 0)
    (2222752 'move' ret[2222741] cpi[2222743])
    (1805991 'move' default_arg__alignment[1029895] ret[2222741])
    (1028718 call init[1028727] tmp[1027597] default_arg__low[1029770] default_arg__high[1029822] 1 default_arg__alignment[1029895] 0)
    const-val coerce_tmp[2222164]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385024]:int(64)[13] "temp"
    (2222166 'move' tmp[2385024](2222168 '.v' r[1027585] _low[1026795]))
    (2385027 'move' coerce_tmp[2222164] tmp[2385024])
    (2321976 '.=' tmp[1027597] _low[1025773] coerce_tmp[2222164])
    const-val coerce_tmp[2222384]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385108]:int(64)[13] "temp"
    (2222386 'move' tmp[2385108](2222388 '.v' r[1027585] _high[1026800]))
    (2385111 'move' coerce_tmp[2222384] tmp[2385108])
    (2321983 '.=' tmp[1027597] _high[1025778] coerce_tmp[2222384])
    (1027856 'move' ret[1027587] tmp[1027597])
    label _end__cast[1027864]
    (1805960 '=' _retArg[1805958] ret[1027587])
    (1805962 return _void[55])
  }
  function _cast[1032502](const in arg r[1032506]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1806066]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032508]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    val tmp[1032518]:range(int(64),bounded,false)[1026833] "dead at end of block" "insert auto destroy"
    (1033062 call init[1026056] tmp[1032518] 1 0 1 0 0)
    const-val call_tmp[1032715]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2222855]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385198]:int(64)[13] "temp"
    (2222857 'move' tmp[2385198](2222859 '.v' r[1032506] _low[1025773]))
    (2385201 'move' coerce_tmp[2222855] tmp[2385198])
    const-val ret[2222862]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222864]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222867 call init[28100] cpi[2222864])
    (2222869 '.=' cpi[2222864] _bindex[28094] coerce_tmp[2222855])
    (2222873 'move' ret[2222862] cpi[2222864])
    (1806075 'move' call_tmp[1032715] ret[2222862])
    val ret[2087441]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376278]:int(64)[13] "temp"
    (2087443 'move' tmp[2376278](2087445 '.v' call_tmp[1032715] _bindex[28094]))
    (2376281 'move' ret[2087441] tmp[2376278])
    (2322061 '.=' tmp[1032518] _low[1026795] ret[2087441])
    const-val call_tmp[1032754]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2222963]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385210]:int(64)[13] "temp"
    (2222965 'move' tmp[2385210](2222967 '.v' r[1032506] _high[1025778]))
    (2385213 'move' coerce_tmp[2222963] tmp[2385210])
    const-val ret[2222970]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222972]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222975 call init[28100] cpi[2222972])
    (2222977 '.=' cpi[2222972] _bindex[28094] coerce_tmp[2222963])
    (2222981 'move' ret[2222970] cpi[2222972])
    (1806117 'move' call_tmp[1032754] ret[2222970])
    val ret[2087457]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376284]:int(64)[13] "temp"
    (2087459 'move' tmp[2376284](2087461 '.v' call_tmp[1032754] _bindex[28094]))
    (2376287 'move' ret[2087457] tmp[2376284])
    (2322070 '.=' tmp[1032518] _high[1026800] ret[2087457])
    (1032777 'move' ret[1032508] tmp[1032518])
    label _end__cast[1032785]
    (1806068 '=' _retArg[1806066] ret[1032508])
    (1806070 return _void[55])
  }
  function _cast[1145832](const in arg r[1145836]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807805]:range(int(64),boundedLow,false)[1087584]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145838]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "RVV" "temp"
    val tmp[1145848]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "insert auto destroy"
    (1146352 call init[1087031] tmp[1145848] 1 0 1 0 0)
    const-val call_tmp[1146045]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2231773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386121]:int(64)[13] "temp"
    (2231775 'move' tmp[2386121](2231777 '.v' r[1145836] _low[1143384]))
    (2386124 'move' coerce_tmp[2231773] tmp[2386121])
    const-val ret[2231780]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2231782]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2231785 call init[28100] cpi[2231782])
    (2231787 '.=' cpi[2231782] _bindex[28094] coerce_tmp[2231773])
    (2231791 'move' ret[2231780] cpi[2231782])
    (1807814 'move' call_tmp[1146045] ret[2231780])
    val ret[2087523]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376290]:int(64)[13] "temp"
    (2087525 'move' tmp[2376290](2087527 '.v' call_tmp[1146045] _bindex[28094]))
    (2376293 'move' ret[2087523] tmp[2376290])
    (2323349 '.=' tmp[1145848] _low[1087546] ret[2087523])
    const-val call_tmp[1146084]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2231917]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386139]:int(64)[13] "temp"
    (2231919 'move' tmp[2386139](2231921 '.v' r[1145836] _high[1143389]))
    (2386142 'move' coerce_tmp[2231917] tmp[2386139])
    const-val ret[2231924]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2231926]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2231929 call init[28100] cpi[2231926])
    (2231931 '.=' cpi[2231926] _bindex[28094] coerce_tmp[2231917])
    (2231935 'move' ret[2231924] cpi[2231926])
    (1807856 'move' call_tmp[1146084] ret[2231924])
    val ret[2087539]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376296]:int(64)[13] "temp"
    (2087541 'move' tmp[2376296](2087543 '.v' call_tmp[1146084] _bindex[28094]))
    (2376299 'move' ret[2087539] tmp[2376296])
    (2323358 '.=' tmp[1145848] _high[1087551] ret[2087539])
    (1146107 'move' ret[1145838] tmp[1145848])
    label _end__cast[1146115]
    (1807807 '=' _retArg[1807805] ret[1145838])
    (1807809 return _void[55])
  }
  function _cast[1187650](const in arg r[1187654]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808127]:range(int(64),boundedHigh,false)[1187448]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187656]:range(int(64),boundedHigh,false)[1187448] "dead after last mention" "RVV" "temp"
    val tmp[1187666]:range(int(64),boundedHigh,false)[1187448] "dead at end of block" "insert auto destroy"
    (1188723 call init[1188732] tmp[1187666] 1 0 1 0 0)
    const-val call_tmp[1187863]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2235577]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386702]:int(64)[13] "temp"
    (2235579 'move' tmp[2386702](2235581 '.v' r[1187654] _low[1184900]))
    (2386705 'move' coerce_tmp[2235577] tmp[2386702])
    const-val ret[2235584]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2235586]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2235589 call init[28100] cpi[2235586])
    (2235591 '.=' cpi[2235586] _bindex[28094] coerce_tmp[2235577])
    (2235595 'move' ret[2235584] cpi[2235586])
    (1808136 'move' call_tmp[1187863] ret[2235584])
    val ret[2087565]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376302]:int(64)[13] "temp"
    (2087567 'move' tmp[2376302](2087569 '.v' call_tmp[1187863] _bindex[28094]))
    (2376305 'move' ret[2087565] tmp[2376302])
    (2323690 '.=' tmp[1187666] _low[1187410] ret[2087565])
    const-val call_tmp[1187902]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2235707]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386708]:int(64)[13] "temp"
    (2235709 'move' tmp[2386708](2235711 '.v' r[1187654] _high[1184905]))
    (2386711 'move' coerce_tmp[2235707] tmp[2386708])
    const-val ret[2235714]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2235716]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2235719 call init[28100] cpi[2235716])
    (2235721 '.=' cpi[2235716] _bindex[28094] coerce_tmp[2235707])
    (2235725 'move' ret[2235714] cpi[2235716])
    (1808172 'move' call_tmp[1187902] ret[2235714])
    val ret[2087581]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2376308]:int(64)[13] "temp"
    (2087583 'move' tmp[2376308](2087585 '.v' call_tmp[1187902] _bindex[28094]))
    (2376311 'move' ret[2087581] tmp[2376308])
    (2323699 '.=' tmp[1187666] _high[1187415] ret[2087581])
    (1187925 'move' ret[1187656] tmp[1187666])
    label _end__cast[1187933]
    (1808129 '=' _retArg[1808127] ret[1187656])
    (1808131 return _void[55])
  }
  function range(int(64),bounded,false)[1026833].orderToIndex[1104059](const in arg this[1104065]:range(int(64),bounded,false)[1026833], const in arg ord[1104067]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2331068]:string[26] "temp"
    (2331069 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2331062]:string[26] "temp"
    (2331063 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2331056]:string[26] "temp"
    (2331057 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2331050]:string[26] "temp"
    (2331051 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val ret[2230231]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2386037]:int(64)[13] "temp"
    (2230233 'move' tmp[2386037](2230235 '.v' this[1104065] _low[1026795]))
    (2386040 'move' ret[2230231] tmp[2386037])
    val ret[2230238]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2386043]:int(64)[13] "temp"
    (2230240 'move' tmp[2386043](2230242 '.v' this[1104065] _high[1026800]))
    (2386046 'move' ret[2230238] tmp[2386043])
    const-val call_tmp[2230245]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230247 'move' call_tmp[2230245](2230249 '>' ret[2230231] ret[2230238]))
    val tmp[2230252]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2230245]
    {
      (2230256 'move' tmp[2230252] 0)
    }
    {
      (2230260 'move' tmp[2230252] 1)
    }
    const-val call_tmp[2078119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078121 'move' call_tmp[2078119](2078123 '!' tmp[2230252]))
    if call_tmp[2078119]
    {
      (1104123 call boundsCheckHalt[210185] "invoking orderToIndex on a range that has no first index")
    }
    const-val call_tmp[2079806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079808 'move' call_tmp[2079806](2079810 '<' ord[1104067] 0))
    if call_tmp[2079806]
    {
      const-val call_tmp[1104173]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806418]:string[26] "temp"
      (1104178 call _cast[1063172] ord[1104067] ret_tmp[1806418])
      (1806421 'move' call_tmp[1104173] ret_tmp[1806418])
      const-val call_tmp[1104181]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803428]:string[26] "temp"
      wide-ref tmp[2367806]:string[26] "temp"
      (2367810 'move' tmp[2367806](2367808 'set reference' call_tmp[1104173]))
      (1104186 call +[38345] "invoking orderToIndex on a negative integer: " tmp[2367806] ret_tmp[1803428])
      (1803431 'move' call_tmp[1104181] ret_tmp[1803428])
      (1104190 call boundsCheckHalt[210185] call_tmp[1104181])
      ref i_x[2094555]:string[26] "temp"
      (2094559 'move' i_x[2094555](2094557 'set reference' call_tmp[1104181]))
      wide-ref tmp[2377052]:string[26] "temp"
      (2377055 'move' tmp[2377052] i_x[2094555])
      (2094563 call deinit[30834] tmp[2377052])
      ref i_x[2094567]:string[26] "temp"
      (2094571 'move' i_x[2094567](2094569 'set reference' call_tmp[1104173]))
      wide-ref tmp[2377058]:string[26] "temp"
      (2377061 'move' tmp[2377058] i_x[2094567])
      (2094575 call deinit[30834] tmp[2377058])
    }
    const-val call_tmp[1104235]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104237 'move' call_tmp[1104235](1104240 call size[1035808] this[1104065]))
    const-val call_tmp[2092423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2092425 'move' call_tmp[2092423](2092427 '>=' ord[1104067] call_tmp[1104235]))
    if call_tmp[2092423]
    {
      const-val call_tmp[1104279]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806424]:string[26] "temp"
      (1104284 call _cast[1063172] ord[1104067] ret_tmp[1806424])
      (1806427 'move' call_tmp[1104279] ret_tmp[1806424])
      const-val call_tmp[1104287]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803434]:string[26] "temp"
      wide-ref tmp[2367813]:string[26] "temp"
      (2367817 'move' tmp[2367813](2367815 'set reference' call_tmp[1104279]))
      (1104292 call +[38345] "invoking orderToIndex on an integer " tmp[2367813] ret_tmp[1803434])
      (1803437 'move' call_tmp[1104287] ret_tmp[1803434])
      const-val call_tmp[1104295]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803440]:string[26] "temp"
      wide-ref tmp[2367820]:string[26] "temp"
      (2367824 'move' tmp[2367820](2367822 'set reference' " that is larger than the range's number of indices "))
      (1104300 call +[38345] call_tmp[1104287] tmp[2367820] ret_tmp[1803440])
      (1803443 'move' call_tmp[1104295] ret_tmp[1803440])
      const-val call_tmp[1104303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104305 'move' call_tmp[1104303](1104308 call size[1035808] this[1104065]))
      const-val call_tmp[1104311]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806430]:string[26] "temp"
      (1104316 call _cast[1063172] call_tmp[1104303] ret_tmp[1806430])
      (1806433 'move' call_tmp[1104311] ret_tmp[1806430])
      const-val call_tmp[1104319]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803446]:string[26] "temp"
      wide-ref tmp[2367827]:string[26] "temp"
      (2367831 'move' tmp[2367827](2367829 'set reference' call_tmp[1104311]))
      (1104324 call +[38345] call_tmp[1104295] tmp[2367827] ret_tmp[1803446])
      (1803449 'move' call_tmp[1104319] ret_tmp[1803446])
      (1104328 call boundsCheckHalt[210185] call_tmp[1104319])
      ref i_x[2094579]:string[26] "temp"
      (2094583 'move' i_x[2094579](2094581 'set reference' call_tmp[1104319]))
      wide-ref tmp[2377064]:string[26] "temp"
      (2377067 'move' tmp[2377064] i_x[2094579])
      (2094587 call deinit[30834] tmp[2377064])
      ref i_x[2094591]:string[26] "temp"
      (2094595 'move' i_x[2094591](2094593 'set reference' call_tmp[1104311]))
      wide-ref tmp[2377070]:string[26] "temp"
      (2377073 'move' tmp[2377070] i_x[2094591])
      (2094599 call deinit[30834] tmp[2377070])
      ref i_x[2094603]:string[26] "temp"
      (2094607 'move' i_x[2094603](2094605 'set reference' call_tmp[1104295]))
      wide-ref tmp[2377076]:string[26] "temp"
      (2377079 'move' tmp[2377076] i_x[2094603])
      (2094611 call deinit[30834] tmp[2377076])
      ref i_x[2094615]:string[26] "temp"
      (2094619 'move' i_x[2094615](2094617 'set reference' call_tmp[1104287]))
      wide-ref tmp[2377082]:string[26] "temp"
      (2377085 'move' tmp[2377082] i_x[2094615])
      (2094623 call deinit[30834] tmp[2377082])
      ref i_x[2094627]:string[26] "temp"
      (2094631 'move' i_x[2094627](2094629 'set reference' call_tmp[1104279]))
      wide-ref tmp[2377088]:string[26] "temp"
      (2377091 'move' tmp[2377088] i_x[2094627])
      (2094635 call deinit[30834] tmp[2377088])
    }
    val ret[2223623]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385288]:int(64)[13] "temp"
    (2223625 'move' tmp[2385288](2223627 '.v' this[1104065] _low[1026795]))
    (2385291 'move' ret[2223623] tmp[2385288])
    const-val call_tmp[1104350]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104352 'move' call_tmp[1104350](1104355 call chpl__addRangeStrides[1105046] ret[2223623] 1 ord[1104067]))
    (1104382 return call_tmp[1104350])
  }
  function range(int(64),bounded,false)[1026833].this[1037467](const in arg this[1037473]:range(int(64),bounded,false)[1026833], const in arg other[1037475]:range(int(64),bounded,false)[1026833], ref arg _retArg[1806156]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039957]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367325]:int(64)[13] "temp"
    (1039961 'move' tmp[2367325](2322094 '.v' this[1037473] _low[1026795]))
    (2367328 'move' coerce_tmp[1039957] tmp[2367325])
    (1038066 'noop')
    const-val coerce_tmp[1039970]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367331]:int(64)[13] "temp"
    (1039974 'move' tmp[2367331](2322104 '.v' this[1037473] _high[1026800]))
    (2367334 'move' coerce_tmp[1039970] tmp[2367331])
    (1038120 'noop')
    const-val coerce_tmp[1039987]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367337]:int(64)[13] "temp"
    (1039991 'move' tmp[2367337](2322114 '.v' other[1037475] _low[1026795]))
    (2367340 'move' coerce_tmp[1039987] tmp[2367337])
    (1038195 'noop')
    const-val coerce_tmp[1040000]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367343]:int(64)[13] "temp"
    (1040004 'move' tmp[2367343](2322124 '.v' other[1037475] _high[1026800]))
    (2367346 'move' coerce_tmp[1040000] tmp[2367343])
    (1038249 'noop')
    const-val ret_tmp[1806162]:2*int(64)[1040075] "temp"
    (2314699 'set svec member' ret_tmp[1806162] 0 1)
    (2314703 'set svec member' ret_tmp[1806162] 1 0)
    (1038436 'noop')
    (1038448 'noop')
    val tmp[2156189]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2156191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156193 'move' call_tmp[2156191](2156195 '>' coerce_tmp[1039957] coerce_tmp[1039987]))
    if call_tmp[2156191]
    {
      (2156200 'move' tmp[2156189] coerce_tmp[1039957])
    }
    {
      (2156204 'move' tmp[2156189] coerce_tmp[1039987])
    }
    val newlo[1039100]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039102 'move' newlo[1039100] tmp[2156189])
    val tmp[2116568]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2116570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116572 'move' call_tmp[2116570](2116574 '<' coerce_tmp[1039970] coerce_tmp[1040000]))
    if call_tmp[2116570]
    {
      (2116579 'move' tmp[2116568] coerce_tmp[1039970])
    }
    {
      (2116583 'move' tmp[2116568] coerce_tmp[1040000])
    }
    val newhi[1039130]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039132 'move' newhi[1039130] tmp[2116568])
    (2329363 'noop')
    const-val call_tmp[2078092]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078094 'move' call_tmp[2078092](2078096 '!' 0))
    val tmp[1039180]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2078092]
    {
      (1039271 'move' tmp[1039180] 1)
    }
    {
      (1039277 'move' tmp[1039180] 0)
    }
    const-val call_tmp[1039353]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041847]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "temp"
    (1041850 call init[1026056] initTemp[1041847] newlo[1039100] newhi[1039130] 1 0 tmp[1039180])
    (1039355 'move' call_tmp[1039353] initTemp[1041847])
    label _end_this[1039934]
    (1806158 '=' _retArg[1806156] call_tmp[1039353])
    (1806160 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087584].this[1138988](const in arg this[1138994]:range(int(64),boundedLow,false)[1087584], const in arg other[1138996]:range(int(64),bounded,false)[1026833], ref arg _retArg[1807653]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141478]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367933]:int(64)[13] "temp"
    (1141482 'move' tmp[2367933](2323281 '.v' this[1138994] _low[1087546]))
    (2367936 'move' coerce_tmp[1141478] tmp[2367933])
    (1139587 'noop')
    const-val coerce_tmp[1141491]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367939]:int(64)[13] "temp"
    (1141495 'move' tmp[2367939](2323291 '.v' other[1138996] _high[1026800]))
    (2367942 'move' coerce_tmp[1141491] tmp[2367939])
    (1139641 'noop')
    const-val coerce_tmp[1141508]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367945]:int(64)[13] "temp"
    (1141512 'move' tmp[2367945](2323301 '.v' other[1138996] _low[1026795]))
    (2367948 'move' coerce_tmp[1141508] tmp[2367945])
    (1139716 'noop')
    const-val coerce_tmp[1141521]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367951]:int(64)[13] "temp"
    (1141525 'move' tmp[2367951](2323311 '.v' other[1138996] _high[1026800]))
    (2367954 'move' coerce_tmp[1141521] tmp[2367951])
    (1139770 'noop')
    const-val ret_tmp[1806180]:2*int(64)[1040075] "temp"
    (2314713 'set svec member' ret_tmp[1806180] 0 1)
    (2314717 'set svec member' ret_tmp[1806180] 1 0)
    (1139957 'noop')
    (1139969 'noop')
    val tmp[2156211]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2156213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156215 'move' call_tmp[2156213](2156217 '>' coerce_tmp[1141478] coerce_tmp[1141508]))
    if call_tmp[2156213]
    {
      (2156222 'move' tmp[2156211] coerce_tmp[1141478])
    }
    {
      (2156226 'move' tmp[2156211] coerce_tmp[1141508])
    }
    val newlo[1140621]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140623 'move' newlo[1140621] tmp[2156211])
    val tmp[2116590]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2116592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116594 'move' call_tmp[2116592](2116596 '<' coerce_tmp[1141491] coerce_tmp[1141521]))
    if call_tmp[2116592]
    {
      (2116601 'move' tmp[2116590] coerce_tmp[1141491])
    }
    {
      (2116605 'move' tmp[2116590] coerce_tmp[1141521])
    }
    val newhi[1140651]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140653 'move' newhi[1140651] tmp[2116590])
    (2329364 'noop')
    const-val call_tmp[2078146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078148 'move' call_tmp[2078146](2078150 '!' 0))
    val tmp[1140701]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2078146]
    {
      (1140792 'move' tmp[1140701] 1)
    }
    {
      (1140798 'move' tmp[1140701] 0)
    }
    const-val call_tmp[1140874]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1141962]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "temp"
    (1141965 call init[1026056] initTemp[1141962] newlo[1140621] newhi[1140651] 1 0 tmp[1140701])
    (1140876 'move' call_tmp[1140874] initTemp[1141962])
    label _end_this[1141455]
    (1807655 '=' _retArg[1807653] call_tmp[1140874])
    (1807657 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187448].this[1200368](const in arg this[1200374]:range(int(64),boundedHigh,false)[1187448], const in arg other[1200376]:range(int(64),bounded,false)[1026833], ref arg _retArg[1808251]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202858]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2368299]:int(64)[13] "temp"
    (1202862 'move' tmp[2368299](2323764 '.v' other[1200376] _low[1026795]))
    (2368302 'move' coerce_tmp[1202858] tmp[2368299])
    (1200967 'noop')
    const-val coerce_tmp[1202871]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2368305]:int(64)[13] "temp"
    (1202875 'move' tmp[2368305](2323774 '.v' this[1200374] _high[1187415]))
    (2368308 'move' coerce_tmp[1202871] tmp[2368305])
    (1201021 'noop')
    const-val coerce_tmp[1202888]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2368311]:int(64)[13] "temp"
    (1202892 'move' tmp[2368311](2323784 '.v' other[1200376] _low[1026795]))
    (2368314 'move' coerce_tmp[1202888] tmp[2368311])
    (1201096 'noop')
    const-val coerce_tmp[1202901]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2368317]:int(64)[13] "temp"
    (1202905 'move' tmp[2368317](2323794 '.v' other[1200376] _high[1026800]))
    (2368320 'move' coerce_tmp[1202901] tmp[2368317])
    (1201150 'noop')
    const-val ret_tmp[1806186]:2*int(64)[1040075] "temp"
    (2314727 'set svec member' ret_tmp[1806186] 0 1)
    (2314731 'set svec member' ret_tmp[1806186] 1 0)
    (1201337 'noop')
    (1201349 'noop')
    val tmp[2156233]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2156235]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156237 'move' call_tmp[2156235](2156239 '>' coerce_tmp[1202858] coerce_tmp[1202888]))
    if call_tmp[2156235]
    {
      (2156244 'move' tmp[2156233] coerce_tmp[1202858])
    }
    {
      (2156248 'move' tmp[2156233] coerce_tmp[1202888])
    }
    val newlo[1202001]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202003 'move' newlo[1202001] tmp[2156233])
    val tmp[2116612]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2116614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116616 'move' call_tmp[2116614](2116618 '<' coerce_tmp[1202871] coerce_tmp[1202901]))
    if call_tmp[2116614]
    {
      (2116623 'move' tmp[2116612] coerce_tmp[1202871])
    }
    {
      (2116627 'move' tmp[2116612] coerce_tmp[1202901])
    }
    val newhi[1202031]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1202033 'move' newhi[1202031] tmp[2116612])
    (2329365 'noop')
    const-val call_tmp[2078173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078175 'move' call_tmp[2078173](2078177 '!' 0))
    val tmp[1202081]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2078173]
    {
      (1202172 'move' tmp[1202081] 1)
    }
    {
      (1202178 'move' tmp[1202081] 0)
    }
    const-val call_tmp[1202254]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203569]:range(int(64),bounded,false)[1026833] "dead at end of block" "delay instantiation" "temp"
    (1203572 call init[1026056] initTemp[1203569] newlo[1202001] newhi[1202031] 1 0 tmp[1202081])
    (1202256 'move' call_tmp[1202254] initTemp[1203569])
    label _end_this[1202835]
    (1808253 '=' _retArg[1808251] call_tmp[1202254])
    (1808255 return _void[55])
  }
  function _local_chpl_count_help[2358536](const in arg r[2358538]:range(int(64),boundedLow,false)[1087584], const in arg count[2358540]:int(64)[13], ref arg _retArg[2358542]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2358545]:string[26] "temp"
    (2358547 'move' local__str_literal_978[2358545] "With a negative count, the range must have a last index.")
    val ret[2358550]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2358552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358554 'move' call_tmp[2358552](2358556 '==' count[2358540] 0))
    if call_tmp[2358552]
    {
      const-val coerce_tmp[2358561]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2397800]:int(64)[13] "temp"
      (2358563 'move' tmp[2397800](2358565 '.v' r[2358538] _low[1087546]))
      (2397803 'move' coerce_tmp[2358561] tmp[2397800])
      const-val call_tmp[2358568]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2358570 'move' call_tmp[2358568](2358573 call _local_absSameType[2362839] 1))
      const-val coerce_tmp[2358575]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2397806]:int(64)[13] "temp"
      (2358577 'move' tmp[2397806](2358579 '.v' r[2358538] _low[1087546]))
      (2397809 'move' coerce_tmp[2358575] tmp[2397806])
      const-val call_tmp[2358582]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2358584 'move' call_tmp[2358582](2358586 '-' coerce_tmp[2358575] call_tmp[2358568]))
      const-val call_tmp[2358589]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2358591]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "temp"
      (2358594 call _local_init[2362850] initTemp[2358591] coerce_tmp[2358561] call_tmp[2358582] 1 1)
      (2358600 'move' call_tmp[2358589] initTemp[2358591])
      (2358603 'move' ret[2358550] call_tmp[2358589])
      gotoReturn _end_chpl_count_help[2358749] _end_chpl_count_help[2358749]
    }
    (2358609 'noop')
    const-val call_tmp[2358610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358612 'move' call_tmp[2358610](2358614 '!' 0))
    val tmp[2358616]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2358610]
    {
      const-val call_tmp[2358620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2358622 'move' call_tmp[2358620](2358624 '<' count[2358540] 0))
      (2358627 'move' tmp[2358616] call_tmp[2358620])
    }
    {
      (2358631 'move' tmp[2358616] 0)
    }
    if tmp[2358616]
    {
      (2358638 call _local_boundsCheckHalt[2342985] local__str_literal_978[2358545])
    }
    const-val call_tmp[2358641]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358643 'move' call_tmp[2358641](2358645 '*' count[2358540] 1))
    val tmp[2358648]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2358650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358652 'move' call_tmp[2358650](2358654 '>' call_tmp[2358641] 0))
    if call_tmp[2358650]
    {
      val tmp[2397812]:int(64)[13] "temp"
      (2358659 'move' tmp[2397812](2358661 '.v' r[2358538] _low[1087546]))
      (2397815 'move' tmp[2358648] tmp[2397812])
    }
    {
      const-val tmp[2358665]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2358667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2358669 'move' call_tmp[2358667](2358671 '+' call_tmp[2358641] 1))
      const-val coerce_tmp[2358674]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2397818]:int(64)[13] "temp"
      (2358676 'move' tmp[2397818](2358678 '.v' r[2358538] _high[1087551]))
      (2397821 'move' coerce_tmp[2358674] tmp[2397818])
      (2358681 'move' tmp[2358665](2358684 call _local_chpl__add[2362876] coerce_tmp[2358674] call_tmp[2358667]))
      (2358687 'move' tmp[2358648] tmp[2358665])
    }
    val tmp[2358691]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2358693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2358695 'move' call_tmp[2358693](2358697 '<' call_tmp[2358641] 0))
    if call_tmp[2358693]
    {
      val tmp[2397824]:int(64)[13] "temp"
      (2358702 'move' tmp[2397824](2358704 '.v' r[2358538] _high[1087551]))
      (2397827 'move' tmp[2358691] tmp[2397824])
    }
    {
      const-val tmp[2358708]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2358710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2358712 'move' call_tmp[2358710](2358714 '-' call_tmp[2358641] 1))
      const-val coerce_tmp[2358717]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2397830]:int(64)[13] "temp"
      (2358719 'move' tmp[2397830](2358721 '.v' r[2358538] _low[1087546]))
      (2397833 'move' coerce_tmp[2358717] tmp[2397830])
      (2358724 'move' tmp[2358708](2358727 call _local_chpl__add[2362876] coerce_tmp[2358717] call_tmp[2358710]))
      (2358730 'move' tmp[2358691] tmp[2358708])
    }
    const-val call_tmp[2358734]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2358736]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "temp"
    (2358739 call _local_init[2363022] initTemp[2358736] tmp[2358648] tmp[2358691])
    (2358743 'move' call_tmp[2358734] initTemp[2358736])
    (2358746 'move' ret[2358550] call_tmp[2358734])
    label _end_chpl_count_help[2358749]
    (2358751 '=' _retArg[2358542] ret[2358550])
    (2358754 return _void[55])
  }
  function chpl_count_help[1088335](const in arg r[1088337]:range(int(64),boundedLow,false)[1087584], const in arg count[1088339]:int(64)[13], ref arg _retArg[1807054]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2331038]:string[26] "temp"
    (2331039 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088341]:range(int(64),bounded,false)[1026833] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2081652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2081654 'move' call_tmp[2081652](2081656 '==' count[1088339] 0))
    if call_tmp[2081652]
    {
      const-val coerce_tmp[1090732]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2367746]:int(64)[13] "temp"
      (1090736 'move' tmp[2367746](2322505 '.v' r[1088337] _low[1087546]))
      (2367749 'move' coerce_tmp[1090732] tmp[2367746])
      const-val call_tmp[1088639]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088641 'move' call_tmp[1088639](1088644 call absSameType[1090861] 1))
      const-val coerce_tmp[1090965]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2367752]:int(64)[13] "temp"
      (1090969 'move' tmp[2367752](2322512 '.v' r[1088337] _low[1087546]))
      (2367755 'move' coerce_tmp[1090965] tmp[2367752])
      const-val call_tmp[2090705]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090707 'move' call_tmp[2090705](2090709 '-' coerce_tmp[1090965] call_tmp[1088639]))
      const-val call_tmp[1088702]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091260]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "temp"
      (1091263 call init[1091283] initTemp[1091260] coerce_tmp[1090732] call_tmp[2090705] 1 1)
      (1088704 'move' call_tmp[1088702] initTemp[1091260])
      (1088724 'move' ret[1088341] call_tmp[1088702])
      gotoReturn _end_chpl_count_help[1090307] _end_chpl_count_help[1090307]
    }
    (2229895 'noop')
    const-val call_tmp[2078110]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078112 'move' call_tmp[2078110](2078114 '!' 0))
    val tmp[1089147]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2078110]
    {
      const-val call_tmp[2079746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2079748 'move' call_tmp[2079746](2079750 '<' count[1088339] 0))
      (1089180 'move' tmp[1089147] call_tmp[2079746])
    }
    {
      (1089186 'move' tmp[1089147] 0)
    }
    if tmp[1089147]
    {
      (1089202 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[2229902]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229904 'move' call_tmp[2229902](2229906 '*' count[1088339] 1))
    val tmp[1089709]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2087821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087823 'move' call_tmp[2087821](2087825 '>' call_tmp[2229902] 0))
    if call_tmp[2087821]
    {
      val tmp[2367770]:int(64)[13] "temp"
      (1095336 'move' tmp[2367770](2322519 '.v' r[1088337] _low[1087546]))
      (2367773 'move' tmp[1089709] tmp[2367770])
    }
    {
      const-val tmp[1089742]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2084136]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2084138 'move' call_tmp[2084136](2084140 '+' call_tmp[2229902] 1))
      const-val coerce_tmp[1094339]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2367758]:int(64)[13] "temp"
      (1094343 'move' tmp[2367758](2322529 '.v' r[1088337] _high[1087551]))
      (2367761 'move' coerce_tmp[1094339] tmp[2367758])
      (1089776 'move' tmp[1089742](1089779 call chpl__add[1093391] coerce_tmp[1094339] call_tmp[2084136]))
      (1089783 'move' tmp[1089709] tmp[1089742])
    }
    val tmp[1089796]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2079776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079778 'move' call_tmp[2079776](2079780 '<' call_tmp[2229902] 0))
    if call_tmp[2079776]
    {
      val tmp[2367776]:int(64)[13] "temp"
      (1095338 'move' tmp[2367776](2322536 '.v' r[1088337] _high[1087551]))
      (2367779 'move' tmp[1089796] tmp[2367776])
    }
    {
      const-val tmp[1089829]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2107575]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2107577 'move' call_tmp[2107575](2107579 '-' call_tmp[2229902] 1))
      const-val coerce_tmp[1094392]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2367764]:int(64)[13] "temp"
      (1094396 'move' tmp[2367764](2322546 '.v' r[1088337] _low[1087546]))
      (2367767 'move' coerce_tmp[1094392] tmp[2367764])
      (1089863 'move' tmp[1089829](1089866 call chpl__add[1093391] coerce_tmp[1094392] call_tmp[2107575]))
      (1089870 'move' tmp[1089796] tmp[1089829])
    }
    const-val call_tmp[1090275]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094471]:range(int(64),bounded,false)[1026833] "dead after last mention" "delay instantiation" "temp"
    (1094474 call init[1094494] initTemp[1094471] tmp[1089709] tmp[1089796])
    (1090277 'move' call_tmp[1090275] initTemp[1094471])
    (1090297 'move' ret[1088341] call_tmp[1090275])
    label _end_chpl_count_help[1090307]
    (1807056 '=' _retArg[1807054] ret[1088341])
    (1807058 return _void[55])
  }
  function _local_#[2355373](const in arg r[2355375]:range(int(64),boundedLow,false)[1087584], const in arg count[2355377]:int(64)[13], ref arg _retArg[2355379]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2355382]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2355384]:range(int(64),bounded,false)[1026833] "temp"
    (2355387 call _local_chpl_count_help[2358536] r[2355375] count[2355377] ret_tmp[2355384])
    (2355391 'move' call_tmp[2355382] ret_tmp[2355384])
    (2355394 '=' _retArg[2355379] call_tmp[2355382])
    (2355397 return _void[55])
  }
  function #[1087944](const in arg r[1087946]:range(int(64),boundedLow,false)[1087584], const in arg count[1087959]:int(64)[13], ref arg _retArg[1807042]:range(int(64),bounded,false)[1026833]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088190]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807048]:range(int(64),bounded,false)[1026833] "temp"
    (1088195 call chpl_count_help[1088335] r[1087946] count[1087959] ret_tmp[1807048])
    (1807051 'move' call_tmp[1088190] ret_tmp[1807048])
    (1807044 '=' _retArg[1807042] call_tmp[1088190])
    (1807046 return _void[55])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2357465](const in arg low[2357467]:int(32)[95], const in arg high[2357469]:int(32)[95], const in arg stride[2357471]:int(64)[13], const in arg first[2357473]:int(32)[95], const in arg last[2357475]:int(32)[95], const in arg shouldHalt[2357477]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2357480]:string[26] "temp"
    (2357482 'move' local__str_literal_992[2357480] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2357485]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2357487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2357489 'move' call_tmp[2357487](2357491 '>' low[2357467] high[2357469]))
    if call_tmp[2357487]
    {
      (2357496 'move' ret[2357485] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2357655] _end_chpl_checkIfRangeIterWillOverflow[2357655]
    }
    val willOverFlow[2357502]:bool[10] "dead at end of block" "insert auto destroy"
    (2357504 'move' willOverFlow[2357502] 0)
    const-val coerce_tmp[2357507]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2357509 'move' coerce_tmp[2357507](2357511 'cast' int(32)[95] 0))
    const-val call_tmp[2357514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2357516 'move' call_tmp[2357514](2357518 '>' last[2357475] coerce_tmp[2357507]))
    val tmp[2357521]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2357514]
    {
      const-val call_tmp[2357525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2357527 'move' call_tmp[2357525](2357529 '>' stride[2357471] 0))
      (2357532 'move' tmp[2357521] call_tmp[2357525])
    }
    {
      (2357536 'move' tmp[2357521] 0)
    }
    if tmp[2357521]
    {
      const-val call_tmp[2357542]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2357544 'move' call_tmp[2357542](2357546 '-' 2147483647 last[2357475]))
      const-val coerce_tmp[2357549]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2357551 'move' coerce_tmp[2357549](2357553 'cast' int(64)[13] call_tmp[2357542]))
      const-val call_tmp[2357556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2357558 'move' call_tmp[2357556](2357560 '>' stride[2357471] coerce_tmp[2357549]))
      if call_tmp[2357556]
      {
        (2357565 '=' willOverFlow[2357502] 1)
      }
    }
    {
      const-val coerce_tmp[2357570]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2357572 'move' coerce_tmp[2357570](2357574 'cast' int(32)[95] 0))
      const-val call_tmp[2357577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2357579 'move' call_tmp[2357577](2357581 '<' last[2357475] coerce_tmp[2357570]))
      val tmp[2357584]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2357577]
      {
        const-val call_tmp[2357588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2357590 'move' call_tmp[2357588](2357592 '<' stride[2357471] 0))
        (2357595 'move' tmp[2357584] call_tmp[2357588])
      }
      {
        (2357599 'move' tmp[2357584] 0)
      }
      if tmp[2357584]
      {
        const-val call_tmp[2357605]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2357607 'move' call_tmp[2357605](2357609 '-' -2147483648 last[2357475]))
        const-val coerce_tmp[2357612]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2357614 'move' coerce_tmp[2357612](2357616 'cast' int(64)[13] call_tmp[2357605]))
        const-val call_tmp[2357619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2357621 'move' call_tmp[2357619](2357623 '<' stride[2357471] coerce_tmp[2357612]))
        if call_tmp[2357619]
        {
          (2357628 '=' willOverFlow[2357502] 1)
        }
      }
    }
    val tmp[2357634]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2357502]
    {
      (2357638 'move' tmp[2357634] shouldHalt[2357477])
    }
    {
      (2357642 'move' tmp[2357634] 0)
    }
    if tmp[2357634]
    {
      (2357649 call _local_boundsCheckHalt[2342985] local__str_literal_992[2357480])
    }
    (2357652 'move' ret[2357485] willOverFlow[2357502])
    label _end_chpl_checkIfRangeIterWillOverflow[2357655]
    (2357657 return ret[2357485])
  }
  function chpl_checkIfRangeIterWillOverflow[976369](const in arg low[976373]:int(32)[95], const in arg high[976375]:int(32)[95], const in arg stride[976377]:int(64)[13], const in arg first[976383]:int(32)[95], const in arg last[976389]:int(32)[95], const in arg shouldHalt[976395]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2330412]:string[26] "temp"
    (2330413 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976397]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2173817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173819 'move' call_tmp[2173817](2173821 '>' low[976373] high[976375]))
    if call_tmp[2173817]
    {
      (976428 'move' ret[976397] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976909] _end_chpl_checkIfRangeIterWillOverflow[976909]
    }
    val willOverFlow[976435]:bool[10] "dead at end of block" "insert auto destroy"
    (976437 'move' willOverFlow[976435] 0)
    const-val coerce_tmp[977017]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (977023 'move' coerce_tmp[977017](977019 'cast' int(32)[95] 0))
    const-val call_tmp[2173827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2173829 'move' call_tmp[2173827](2173831 '>' last[976389] coerce_tmp[977017]))
    val tmp[976478]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2173827]
    {
      const-val call_tmp[2087766]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087768 'move' call_tmp[2087766](2087770 '>' stride[976377] 0))
      (976511 'move' tmp[976478] call_tmp[2087766])
    }
    {
      (976517 'move' tmp[976478] 0)
    }
    if tmp[976478]
    {
      const-val call_tmp[2174121]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174123 'move' call_tmp[2174121](2174125 '-' 2147483647 last[976389]))
      const-val coerce_tmp[977177]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977183 'move' coerce_tmp[977177](977179 'cast' int(64)[13] call_tmp[2174121]))
      const-val call_tmp[2087776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087778 'move' call_tmp[2087776](2087780 '>' stride[976377] coerce_tmp[977177]))
      if call_tmp[2087776]
      {
        (2098110 '=' willOverFlow[976435] 1)
      }
    }
    {
      const-val coerce_tmp[977187]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977193 'move' coerce_tmp[977187](977189 'cast' int(32)[95] 0))
      const-val call_tmp[2173747]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2173749 'move' call_tmp[2173747](2173751 '<' last[976389] coerce_tmp[977187]))
      val tmp[976593]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2173747]
      {
        const-val call_tmp[2079726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2079728 'move' call_tmp[2079726](2079730 '<' stride[976377] 0))
        (976626 'move' tmp[976593] call_tmp[2079726])
      }
      {
        (976632 'move' tmp[976593] 0)
      }
      if tmp[976593]
      {
        const-val call_tmp[2174136]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2174138 'move' call_tmp[2174136](2174140 '-' -2147483648 last[976389]))
        const-val coerce_tmp[977805]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977811 'move' coerce_tmp[977805](977807 'cast' int(64)[13] call_tmp[2174136]))
        const-val call_tmp[2091726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2091728 'move' call_tmp[2091726](2091730 '<' stride[976377] coerce_tmp[977805]))
        if call_tmp[2091726]
        {
          (2098127 '=' willOverFlow[976435] 1)
        }
      }
    }
    val tmp[976847]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976435]
    {
      (976872 'move' tmp[976847] shouldHalt[976395])
    }
    {
      (976878 'move' tmp[976847] 0)
    }
    if tmp[976847]
    {
      (976896 call boundsCheckHalt[210185] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (976901 'move' ret[976397] willOverFlow[976435])
    label _end_chpl_checkIfRangeIterWillOverflow[976909]
    (976911 return ret[976397])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2340638](const in arg low[2340640]:int(64)[13], const in arg high[2340642]:int(64)[13], const in arg stride[2340644]:int(64)[13], const in arg first[2340646]:int(64)[13], const in arg last[2340648]:int(64)[13], const in arg shouldHalt[2340650]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2340653]:string[26] "temp"
    (2340655 'move' local__str_literal_992[2340653] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2340658]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2340660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340662 'move' call_tmp[2340660](2340664 '>' low[2340640] high[2340642]))
    if call_tmp[2340660]
    {
      (2340669 'move' ret[2340658] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2340800] _end_chpl_checkIfRangeIterWillOverflow[2340800]
    }
    val willOverFlow[2340675]:bool[10] "dead at end of block" "insert auto destroy"
    (2340677 'move' willOverFlow[2340675] 0)
    const-val call_tmp[2340680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340682 'move' call_tmp[2340680](2340684 '>' last[2340648] 0))
    val tmp[2340687]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2340680]
    {
      const-val call_tmp[2340691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2340693 'move' call_tmp[2340691](2340695 '>' stride[2340644] 0))
      (2340698 'move' tmp[2340687] call_tmp[2340691])
    }
    {
      (2340702 'move' tmp[2340687] 0)
    }
    if tmp[2340687]
    {
      const-val call_tmp[2340708]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2340710 'move' call_tmp[2340708](2340712 '-' 9223372036854775807 last[2340648]))
      const-val call_tmp[2340715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2340717 'move' call_tmp[2340715](2340719 '>' stride[2340644] call_tmp[2340708]))
      if call_tmp[2340715]
      {
        (2340724 '=' willOverFlow[2340675] 1)
      }
    }
    {
      const-val call_tmp[2340729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2340731 'move' call_tmp[2340729](2340733 '<' last[2340648] 0))
      val tmp[2340736]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2340729]
      {
        const-val call_tmp[2340740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2340742 'move' call_tmp[2340740](2340744 '<' stride[2340644] 0))
        (2340747 'move' tmp[2340736] call_tmp[2340740])
      }
      {
        (2340751 'move' tmp[2340736] 0)
      }
      if tmp[2340736]
      {
        const-val call_tmp[2340757]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2340759 'move' call_tmp[2340757](2340761 '-' -9223372036854775808 last[2340648]))
        const-val call_tmp[2340764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2340766 'move' call_tmp[2340764](2340768 '<' stride[2340644] call_tmp[2340757]))
        if call_tmp[2340764]
        {
          (2340773 '=' willOverFlow[2340675] 1)
        }
      }
    }
    val tmp[2340779]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2340675]
    {
      (2340783 'move' tmp[2340779] shouldHalt[2340650])
    }
    {
      (2340787 'move' tmp[2340779] 0)
    }
    if tmp[2340779]
    {
      (2340794 call _local_boundsCheckHalt[2342985] local__str_literal_992[2340653])
    }
    (2340797 'move' ret[2340658] willOverFlow[2340675])
    label _end_chpl_checkIfRangeIterWillOverflow[2340800]
    (2340802 return ret[2340658])
  }
  function chpl_checkIfRangeIterWillOverflow[1096095](const in arg low[1096099]:int(64)[13], const in arg high[1096101]:int(64)[13], const in arg stride[1096103]:int(64)[13], const in arg first[1096109]:int(64)[13], const in arg last[1096115]:int(64)[13], const in arg shouldHalt[1096121]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2331044]:string[26] "temp"
    (2331045 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096123]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2087871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087873 'move' call_tmp[2087871](2087875 '>' low[1096099] high[1096101]))
    if call_tmp[2087871]
    {
      (1096154 'move' ret[1096123] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096635] _end_chpl_checkIfRangeIterWillOverflow[1096635]
    }
    val willOverFlow[1096161]:bool[10] "dead at end of block" "insert auto destroy"
    (1096163 'move' willOverFlow[1096161] 0)
    const-val call_tmp[2087886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087888 'move' call_tmp[2087886](2087890 '>' last[1096115] 0))
    val tmp[1096204]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2087886]
    {
      const-val call_tmp[2087901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087903 'move' call_tmp[2087901](2087905 '>' stride[1096103] 0))
      (1096237 'move' tmp[1096204] call_tmp[2087901])
    }
    {
      (1096243 'move' tmp[1096204] 0)
    }
    if tmp[1096204]
    {
      const-val call_tmp[2181755]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181757 'move' call_tmp[2181755](2181759 '-' 9223372036854775807 last[1096115]))
      const-val call_tmp[2087911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087913 'move' call_tmp[2087911](2087915 '>' stride[1096103] call_tmp[2181755]))
      if call_tmp[2087911]
      {
        (2098183 '=' willOverFlow[1096161] 1)
      }
    }
    {
      const-val call_tmp[2079786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2079788 'move' call_tmp[2079786](2079790 '<' last[1096115] 0))
      val tmp[1096319]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2079786]
      {
        const-val call_tmp[2079796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2079798 'move' call_tmp[2079796](2079800 '<' stride[1096103] 0))
        (1096352 'move' tmp[1096319] call_tmp[2079796])
      }
      {
        (1096358 'move' tmp[1096319] 0)
      }
      if tmp[1096319]
      {
        const-val call_tmp[2181725]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2181727 'move' call_tmp[2181725](2181729 '-' -9223372036854775808 last[1096115]))
        const-val call_tmp[2091816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2091818 'move' call_tmp[2091816](2091820 '<' stride[1096103] call_tmp[2181725]))
        if call_tmp[2091816]
        {
          (2098200 '=' willOverFlow[1096161] 1)
        }
      }
    }
    val tmp[1096573]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096161]
    {
      (1096598 'move' tmp[1096573] shouldHalt[1096121])
    }
    {
      (1096604 'move' tmp[1096573] 0)
    }
    if tmp[1096573]
    {
      (1096622 call boundsCheckHalt[210185] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1096627 'move' ret[1096123] willOverFlow[1096161])
    label _end_chpl_checkIfRangeIterWillOverflow[1096635]
    (1096637 return ret[1096123])
  }
  function range(int(64),bounded,false)[1026833]._local_checkIfIterWillOverflow[2355888](const in arg this[2355890]:range(int(64),bounded,false)[1026833], const in arg shouldHalt[2355892]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2355895]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2397451]:int(64)[13] "temp"
    (2355897 'move' tmp[2397451](2355899 '.v' this[2355890] _low[1026795]))
    (2397454 'move' ret[2355895] tmp[2397451])
    val ret[2355902]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2397457]:int(64)[13] "temp"
    (2355904 'move' tmp[2397457](2355906 '.v' this[2355890] _high[1026800]))
    (2397460 'move' ret[2355902] tmp[2397457])
    const-val call_tmp[2355909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2355911]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2397463]:int(64)[13] "temp"
    (2355913 'move' tmp[2397463](2355915 '.v' this[2355890] _low[1026795]))
    (2397466 'move' coerce_tmp[2355911] tmp[2397463])
    const-val coerce_tmp[2355918]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2397469]:int(64)[13] "temp"
    (2355920 'move' tmp[2397469](2355922 '.v' this[2355890] _high[1026800]))
    (2397472 'move' coerce_tmp[2355918] tmp[2397469])
    (2355925 'move' call_tmp[2355909](2355928 call _local_chpl_checkIfRangeIterWillOverflow[2340638] coerce_tmp[2355911] coerce_tmp[2355918] 1 ret[2355895] ret[2355902] shouldHalt[2355892]))
    (2355935 return call_tmp[2355909])
  }
  function range(int(64),bounded,false)[1026833].checkIfIterWillOverflow[1095833](const in arg this[1095839]:range(int(64),bounded,false)[1026833], const in arg shouldHalt[1095845]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2223611]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385282]:int(64)[13] "temp"
    (2223613 'move' tmp[2385282](2223615 '.v' this[1095839] _low[1026795]))
    (2385285 'move' ret[2223611] tmp[2385282])
    val ret[2230014]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385977]:int(64)[13] "temp"
    (2230016 'move' tmp[2385977](2230018 '.v' this[1095839] _high[1026800]))
    (2385980 'move' ret[2230014] tmp[2385977])
    const-val call_tmp[1095903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1096639]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2367782]:int(64)[13] "temp"
    (1096643 'move' tmp[2367782](2322555 '.v' this[1095839] _low[1026795]))
    (2367785 'move' coerce_tmp[1096639] tmp[2367782])
    const-val coerce_tmp[1096645]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2367788]:int(64)[13] "temp"
    (1096649 'move' tmp[2367788](2322562 '.v' this[1095839] _high[1026800]))
    (2367791 'move' coerce_tmp[1096645] tmp[2367788])
    (1095905 'move' call_tmp[1095903](1095908 call chpl_checkIfRangeIterWillOverflow[1096095] coerce_tmp[1096639] coerce_tmp[1096645] 1 ret[2223611] ret[2230014] shouldHalt[1095845]))
    (1095920 return call_tmp[1095903])
  }
  type _ic_chpl_direct_counted_range_iter[1103809] val super[1103810]:object[22] "super class" val more[1103812]:int(64)[13] const-val F0_low[1976900]:int(64)[13] const-val F1_count[1976904]:int(64)[13] val F2__iterator[1976908]:_ic_chpl_direct_counted_range_iter_helper[1103559] const F3_tmp[1976910]:2*int(64)[1040075] val F4__iterator[1976912]:_ic_chpl_direct_param_stride_range_iter[1103305] val F5_i[1976914]:int(64)[13] const-val F6_low[1976916]:int(64)[13] val value[1976918]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1103559] val super[1103560]:object[22] "super class" val more[1103562]:int(64)[13] const-val F0_low[1981372]:int(64)[13] const-val F1_count[1981376]:int(64)[13] const F2_tmp[1981380]:2*int(64)[1040075] val F3__iterator[1981382]:_ic_chpl_direct_param_stride_range_iter[1103305] val F4_i[1981384]:int(64)[13] const-val F5_low[1981386]:int(64)[13] val value[1981388]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1103305] val super[1103306]:object[22] "super class" val more[1103308]:int(64)[13] const-val F0_low[1982870]:int(64)[13] const-val F1_high[1982874]:int(64)[13] val value[1982878]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096722].advance[1096748](const in arg this[1096750]:_ic_these_range_int64_t_bounded_F[1096722]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1981240]:int(64)[13]
    val tmp[2373733]:int(64)[13] "temp"
    (1981268 'move' tmp[2373733](1981265 '.v' this[1096750] more[1096725]))
    (2373736 'move' more[1981240] tmp[2373733])
    const-val tmp[1981243]:bool[10] "temp"
    (1981250 'move' tmp[1981243](1981247 '==' more[1981240] 2))
    if tmp[1981243]
    {
      gotoIterResume _jump_2[1981232] _jump_2[1981232]
    }
    const-val tmp[1981255]:bool[10] "temp"
    (1981260 'move' tmp[1981255](1981257 '==' more[1981240] -2))
    if tmp[1981255]
    {
      gotoIterResume _jump_break_2[1981234] _jump_break_2[1981234]
    }
    const-val tmp[1980761]:range(int(64),bounded,false)[1026833] "temp"
    val tmp[2373697]:range(int(64),bounded,false)[1026833] "temp"
    (1980766 'move' tmp[2373697](1980763 '.v' this[1096750] F0_this[1980749]))
    (2373700 'move' tmp[1980761] tmp[2373697])
    (1095649 call checkIfIterWillOverflow[1095833] tmp[1980761] 1)
    (1980770 '.=' this[1096750] F1_i[1980753] 0)
    ref tmp[1980774]:range(int(64),bounded,false)[1026833] "temp"
    (1980779 'move' tmp[1980774](1980776 '.' this[1096750] F0_this[1980749]))
    val tmp[1980781]:int(64)[13] "temp"
    val tmp[2367794]:int(64)[13] "temp"
    (1096699 'move' tmp[2367794](2322572 '.v' tmp[1980774] _low[1026795]))
    (2367797 'move' tmp[1980781] tmp[2367794])
    (1980783 '.=' this[1096750] F3_coerce_tmp[1980757] tmp[1980781])
    (1095675 'noop')
    ref tmp[1980794]:range(int(64),bounded,false)[1026833] "temp"
    (1980799 'move' tmp[1980794](1980796 '.' this[1096750] F0_this[1980749]))
    const-val coerce_tmp[1096705]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2367800]:int(64)[13] "temp"
    (1096709 'move' tmp[2367800](2322578 '.v' tmp[1980794] _high[1026800]))
    (2367803 'move' coerce_tmp[1096705] tmp[2367800])
    (1980803 '.=' this[1096750] F2_end[1980755] coerce_tmp[1096705])
    (1095689 'noop')
    CForLoop[1095693]
    {
      const-val tmp[1980820]:int(64)[13] "temp"
      val tmp[2373703]:int(64)[13] "temp"
      (1980825 'move' tmp[2373703](1980822 '.v' this[1096750] F1_i[1980753]))
      (2373706 'move' tmp[1980820] tmp[2373703])
      (1980809 '.=' this[1096750] value[1980759] tmp[1980820])
      (1981226 '.=' this[1096750] more[1096725] 2)
      gotoIterEnd _end[1981224] _end[1981224]
      label _jump_break_2[1981234]
      gotoReturn _endthese[1787426] _endthese[1787426]
      label _jump_2[1981232]
      {
        const-val tmp[1980840]:int(64)[13] "temp"
        val tmp[2373709]:int(64)[13] "temp"
        (1980845 'move' tmp[2373709](1980842 '.v' this[1096750] F3_coerce_tmp[1980757]))
        (2373712 'move' tmp[1980840] tmp[2373709])
        (1980836 '.=' this[1096750] F1_i[1980753] tmp[1980840])
      }
      {
        val tmp[1980847]:int(64)[13] "temp"
        val tmp[2373715]:int(64)[13] "temp"
        (1980852 'move' tmp[2373715](1980849 '.v' this[1096750] F1_i[1980753]))
        (2373718 'move' tmp[1980847] tmp[2373715])
        const tmp[1980854]:int(64)[13] "temp"
        val tmp[2373721]:int(64)[13] "temp"
        (1980859 'move' tmp[2373721](1980856 '.v' this[1096750] F2_end[1980755]))
        (2373724 'move' tmp[1980854] tmp[2373721])
        (1095702 '<=' tmp[1980847] tmp[1980854])
      }
      {
        val tmp[1980861]:int(64)[13] "temp"
        val tmp[2373727]:int(64)[13] "temp"
        (1980866 'move' tmp[2373727](1980863 '.v' this[1096750] F1_i[1980753]))
        (2373730 'move' tmp[1980861] tmp[2373727])
        (1095733 '+=' tmp[1980861] 1)
        (1980868 '.=' this[1096750] F1_i[1980753] tmp[1980861])
      }
    }
    label _endthese[1787426]
    (1981236 '.=' this[1096750] more[1096725] 0)
    label _end[1981224]
    (1981271 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096722] val super[1096723]:object[22] "super class" val more[1096725]:int(64)[13] const-val F0_this[1980749]:range(int(64),bounded,false)[1026833] val F1_i[1980753]:int(64)[13] const F2_end[1980755]:int(64)[13] val F3_coerce_tmp[1980757]:int(64)[13] val value[1980759]:int(64)[13]
  function _cast[1054377](const in arg x[1054381]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1806292]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2330668]:string[26] "temp"
    (2330669 'move' ".." "..")
    const-val ret[1054383]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054391]:string[26] "dead at end of block" "insert auto destroy"
    (1084727 call init[30763] ret[1054391])
    const-val call_tmp[1054415]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2222921]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385204]:int(64)[13] "temp"
    (2222923 'move' tmp[2385204](2222925 '.v' x[1054381] _low[1025773]))
    (2385207 'move' coerce_tmp[2222921] tmp[2385204])
    const-val ret[2222928]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2222930]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2222933 call init[28100] cpi[2222930])
    (2222935 '.=' cpi[2222930] _bindex[28094] coerce_tmp[2222921])
    (2222939 'move' ret[2222928] cpi[2222930])
    (1806087 'move' call_tmp[1054415] ret[2222928])
    const-val call_tmp[1054423]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806298]:string[26] "temp"
    (1054428 call _cast[1054660] call_tmp[1054415] ret_tmp[1806298])
    (1806301 'move' call_tmp[1054423] ret_tmp[1806298])
    (1054432 call +=[38800] ret[1054391] call_tmp[1054423])
    ref i_x[2094219]:string[26] "temp"
    (2094223 'move' i_x[2094219](2094221 'set reference' call_tmp[1054423]))
    wide-ref tmp[2376908]:string[26] "temp"
    (2376911 'move' tmp[2376908] i_x[2094219])
    (2094227 call deinit[30834] tmp[2376908])
    (1054439 call +=[38800] ret[1054391] "..")
    const-val call_tmp[1054462]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2222996]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385216]:int(64)[13] "temp"
    (2222998 'move' tmp[2385216](2223000 '.v' x[1054381] _high[1025778]))
    (2385219 'move' coerce_tmp[2222996] tmp[2385216])
    const-val ret[2223003]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2223005]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2223008 call init[28100] cpi[2223005])
    (2223010 '.=' cpi[2223005] _bindex[28094] coerce_tmp[2222996])
    (2223014 'move' ret[2223003] cpi[2223005])
    (1806123 'move' call_tmp[1054462] ret[2223003])
    const-val call_tmp[1054470]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806304]:string[26] "temp"
    (1054475 call _cast[1054660] call_tmp[1054462] ret_tmp[1806304])
    (1806307 'move' call_tmp[1054470] ret_tmp[1806304])
    (1054479 call +=[38800] ret[1054391] call_tmp[1054470])
    ref i_x[2094231]:string[26] "temp"
    (2094235 'move' i_x[2094231](2094233 'set reference' call_tmp[1054470]))
    wide-ref tmp[2376914]:string[26] "temp"
    (2376917 'move' tmp[2376914] i_x[2094231])
    (2094239 call deinit[30834] tmp[2376914])
    const-val alignCheckRange[1054541]:range(byteIndex,bounded,false)[1025811] "dead at end of block" "insert auto destroy"
    (1054543 'move' alignCheckRange[1054541] x[1054381])
    (1054551 call normalizeAlignment[1083625] alignCheckRange[1054541])
    (1054633 'move' ret[1054383] ret[1054391])
    label _end__cast[1054641]
    (1806294 '=' _retArg[1806292] ret[1054383])
    (1806296 return _void[55])
  }
  function _cast[1119456](const in arg x[1119460]:range(int(64),bounded,false)[1026833], ref arg _retArg[1807347]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2331159]:string[26] "temp"
    (2331160 'move' ".." "..")
    const-val ret[1119462]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119470]:string[26] "dead at end of block" "insert auto destroy"
    (1120763 call init[30763] ret[1119470])
    const-val coerce_tmp[2222194]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385036]:int(64)[13] "temp"
    (2222196 'move' tmp[2385036](2222198 '.v' x[1119460] _low[1026795]))
    (2385039 'move' coerce_tmp[2222194] tmp[2385036])
    const-val call_tmp[1119502]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806442]:string[26] "temp"
    (1119507 call _cast[1063172] coerce_tmp[2222194] ret_tmp[1806442])
    (1806445 'move' call_tmp[1119502] ret_tmp[1806442])
    (1119511 call +=[38800] ret[1119470] call_tmp[1119502])
    ref i_x[2094723]:string[26] "temp"
    (2094727 'move' i_x[2094723](2094725 'set reference' call_tmp[1119502]))
    wide-ref tmp[2377136]:string[26] "temp"
    (2377139 'move' tmp[2377136] i_x[2094723])
    (2094731 call deinit[30834] tmp[2377136])
    (1119518 call +=[38800] ret[1119470] "..")
    const-val coerce_tmp[2222404]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2385114]:int(64)[13] "temp"
    (2222406 'move' tmp[2385114](2222408 '.v' x[1119460] _high[1026800]))
    (2385117 'move' coerce_tmp[2222404] tmp[2385114])
    const-val call_tmp[1119549]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806448]:string[26] "temp"
    (1119554 call _cast[1063172] coerce_tmp[2222404] ret_tmp[1806448])
    (1806451 'move' call_tmp[1119549] ret_tmp[1806448])
    (1119558 call +=[38800] ret[1119470] call_tmp[1119549])
    ref i_x[2094735]:string[26] "temp"
    (2094739 'move' i_x[2094735](2094737 'set reference' call_tmp[1119549]))
    wide-ref tmp[2377142]:string[26] "temp"
    (2377145 'move' tmp[2377142] i_x[2094735])
    (2094743 call deinit[30834] tmp[2377142])
    const-val alignCheckRange[1119620]:range(int(64),bounded,false)[1026833] "dead at end of block" "insert auto destroy"
    (1119622 'move' alignCheckRange[1119620] x[1119460])
    (1119630 call normalizeAlignment[1119759] alignCheckRange[1119620])
    (1119712 'move' ret[1119462] ret[1119470])
    label _end__cast[1119720]
    (1807349 '=' _retArg[1807347] ret[1119462])
    (1807351 return _void[55])
  }
  function _cast[1135979](const in arg x[1135983]:range(int(64),boundedLow,false)[1087584], ref arg _retArg[1807635]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2331222]:string[26] "temp"
    (2331223 'move' " align " " align ")
    const-val local__str_literal_1075[2331216]:string[26] "temp"
    (2331217 'move' ".." "..")
    const-val ret[1135985]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1135993]:string[26] "dead at end of block" "insert auto destroy"
    (1138817 call init[30763] ret[1135993])
    const-val coerce_tmp[2231130]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386055]:int(64)[13] "temp"
    (2231132 'move' tmp[2386055](2231134 '.v' x[1135983] _low[1087546]))
    (2386058 'move' coerce_tmp[2231130] tmp[2386055])
    const-val call_tmp[1136025]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806460]:string[26] "temp"
    (1136030 call _cast[1063172] coerce_tmp[2231130] ret_tmp[1806460])
    (1806463 'move' call_tmp[1136025] ret_tmp[1806460])
    (1136034 call +=[38800] ret[1135993] call_tmp[1136025])
    ref i_x[2094795]:string[26] "temp"
    (2094799 'move' i_x[2094795](2094797 'set reference' call_tmp[1136025]))
    wide-ref tmp[2377172]:string[26] "temp"
    (2377175 'move' tmp[2377172] i_x[2094795])
    (2094803 call deinit[30834] tmp[2377172])
    (1136041 call +=[38800] ret[1135993] "..")
    const-val alignCheckRange[1136143]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "insert auto destroy"
    (1136145 'move' alignCheckRange[1136143] x[1135983])
    (1136153 call normalizeAlignment[1136279] alignCheckRange[1136143])
    val ret[2231506]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2386097]:int(64)[13] "temp"
    (2231508 'move' tmp[2386097](2231510 '.v' alignCheckRange[1136143] _low[1087546]))
    (2386100 'move' ret[2231506] tmp[2386097])
    const-val coerce_tmp[2231513]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386103]:int(64)[13] "temp"
    (2231515 'move' tmp[2386103](2231517 '.v' alignCheckRange[1136143] _low[1087546]))
    (2386106 'move' coerce_tmp[2231513] tmp[2386103])
    const-val call_tmp[2231520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2231522 'move' call_tmp[2231520](2231524 '==' ret[2231506] coerce_tmp[2231513]))
    const-val call_tmp[2078137]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078139 'move' call_tmp[2078137](2078141 '!' call_tmp[2231520]))
    if call_tmp[2078137]
    {
      const-val call_tmp[1136181]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136183 'move' call_tmp[1136181](1136186 call alignment[1128139] x[1135983]))
      const-val call_tmp[1136204]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136206 'move' call_tmp[1136204](1136209 call chpl__mod[1137435] call_tmp[1136181] 1))
      const-val call_tmp[1136212]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806466]:string[26] "temp"
      (1136217 call _cast[1063172] call_tmp[1136204] ret_tmp[1806466])
      (1806469 'move' call_tmp[1136212] ret_tmp[1806466])
      const-val call_tmp[1136220]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803464]:string[26] "temp"
      wide-ref tmp[2367926]:string[26] "temp"
      (2367930 'move' tmp[2367926](2367928 'set reference' call_tmp[1136212]))
      (1136225 call +[38345] " align " tmp[2367926] ret_tmp[1803464])
      (1803467 'move' call_tmp[1136220] ret_tmp[1803464])
      (1136229 call +=[38800] ret[1135993] call_tmp[1136220])
      ref i_x[2094807]:string[26] "temp"
      (2094811 'move' i_x[2094807](2094809 'set reference' call_tmp[1136220]))
      wide-ref tmp[2377178]:string[26] "temp"
      (2377181 'move' tmp[2377178] i_x[2094807])
      (2094815 call deinit[30834] tmp[2377178])
      ref i_x[2094819]:string[26] "temp"
      (2094823 'move' i_x[2094819](2094821 'set reference' call_tmp[1136212]))
      wide-ref tmp[2377184]:string[26] "temp"
      (2377187 'move' tmp[2377184] i_x[2094819])
      (2094827 call deinit[30834] tmp[2377184])
    }
    (1136235 'move' ret[1135985] ret[1135993])
    label _end__cast[1136243]
    (1807637 '=' _retArg[1807635] ret[1135985])
    (1807639 return _void[55])
  }
  function _cast[1154443](const in arg x[1154447]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807917]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2331270]:string[26] "temp"
    (2331271 'move' " align " " align ")
    const-val local__str_literal_1075[2331264]:string[26] "temp"
    (2331265 'move' ".." "..")
    const-val ret[1154449]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154457]:string[26] "dead at end of block" "insert auto destroy"
    (1156138 call init[30763] ret[1154457])
    const-val call_tmp[1154481]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2231839]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386133]:int(64)[13] "temp"
    (2231841 'move' tmp[2386133](2231843 '.v' x[1154447] _low[1143384]))
    (2386136 'move' coerce_tmp[2231839] tmp[2386133])
    const-val ret[2231846]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2231848]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2231851 call init[28100] cpi[2231848])
    (2231853 '.=' cpi[2231848] _bindex[28094] coerce_tmp[2231839])
    (2231857 'move' ret[2231846] cpi[2231848])
    (1807826 'move' call_tmp[1154481] ret[2231846])
    const-val call_tmp[1154489]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806310]:string[26] "temp"
    (1154494 call _cast[1054660] call_tmp[1154481] ret_tmp[1806310])
    (1806313 'move' call_tmp[1154489] ret_tmp[1806310])
    (1154498 call +=[38800] ret[1154457] call_tmp[1154489])
    ref i_x[2094879]:string[26] "temp"
    (2094883 'move' i_x[2094879](2094881 'set reference' call_tmp[1154489]))
    wide-ref tmp[2377214]:string[26] "temp"
    (2377217 'move' tmp[2377214] i_x[2094879])
    (2094887 call deinit[30834] tmp[2377214])
    (1154505 call +=[38800] ret[1154457] "..")
    const-val alignCheckRange[1154607]:range(byteIndex,boundedLow,false)[1143422] "dead at end of block" "insert auto destroy"
    (1154609 'move' alignCheckRange[1154607] x[1154447])
    (1154617 call normalizeAlignment[1154978] alignCheckRange[1154607])
    val ret[2232010]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2386145]:int(64)[13] "temp"
    (2232012 'move' tmp[2386145](2232014 '.v' alignCheckRange[1154607] _low[1143384]))
    (2386148 'move' ret[2232010] tmp[2386145])
    const-val coerce_tmp[2232017]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386151]:int(64)[13] "temp"
    (2232019 'move' tmp[2386151](2232021 '.v' alignCheckRange[1154607] _low[1143384]))
    (2386154 'move' coerce_tmp[2232017] tmp[2386151])
    const-val call_tmp[2232024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2232026 'move' call_tmp[2232024](2232028 '==' ret[2232010] coerce_tmp[2232017]))
    const-val call_tmp[2078164]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078166 'move' call_tmp[2078164](2078168 '!' call_tmp[2232024]))
    if call_tmp[2078164]
    {
      const-val call_tmp[1154645]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807899]:byteIndex[28173] "temp"
      (1154650 call alignment[1148257] x[1154447] ret_tmp[1807899])
      (1807902 'move' call_tmp[1154645] ret_tmp[1807899])
      val ret[2222592]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2385174]:int(64)[13] "temp"
      (2222594 'move' tmp[2385174](2222596 '.v' call_tmp[1154645] _bindex[28094]))
      (2385177 'move' ret[2222592] tmp[2385174])
      const-val call_tmp[1154668]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154670 'move' call_tmp[1154668](1154673 call chpl__mod[1137435] ret[2222592] 1))
      const-val call_tmp[1154676]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806478]:string[26] "temp"
      (1154681 call _cast[1063172] call_tmp[1154668] ret_tmp[1806478])
      (1806481 'move' call_tmp[1154676] ret_tmp[1806478])
      const-val call_tmp[1154684]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803476]:string[26] "temp"
      wide-ref tmp[2368000]:string[26] "temp"
      (2368004 'move' tmp[2368000](2368002 'set reference' call_tmp[1154676]))
      (1154689 call +[38345] " align " tmp[2368000] ret_tmp[1803476])
      (1803479 'move' call_tmp[1154684] ret_tmp[1803476])
      (1154693 call +=[38800] ret[1154457] call_tmp[1154684])
      ref i_x[2094891]:string[26] "temp"
      (2094895 'move' i_x[2094891](2094893 'set reference' call_tmp[1154684]))
      wide-ref tmp[2377220]:string[26] "temp"
      (2377223 'move' tmp[2377220] i_x[2094891])
      (2094899 call deinit[30834] tmp[2377220])
      ref i_x[2094903]:string[26] "temp"
      (2094907 'move' i_x[2094903](2094905 'set reference' call_tmp[1154676]))
      wide-ref tmp[2377226]:string[26] "temp"
      (2377229 'move' tmp[2377226] i_x[2094903])
      (2094911 call deinit[30834] tmp[2377226])
    }
    (1154699 'move' ret[1154449] ret[1154457])
    label _end__cast[1154707]
    (1807919 '=' _retArg[1807917] ret[1154449])
    (1807921 return _void[55])
  }
  function _cast[1198650](const in arg x[1198654]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808239]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2331500]:string[26] "temp"
    (2331501 'move' " align " " align ")
    const-val local__str_literal_1075[2331494]:string[26] "temp"
    (2331495 'move' ".." "..")
    const-val ret[1198656]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198664]:string[26] "dead at end of block" "insert auto destroy"
    (1200197 call init[30763] ret[1198664])
    (1198712 call +=[38800] ret[1198664] "..")
    const-val call_tmp[1198735]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2235740]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2386714]:int(64)[13] "temp"
    (2235742 'move' tmp[2386714](2235744 '.v' x[1198654] _high[1184905]))
    (2386717 'move' coerce_tmp[2235740] tmp[2386714])
    const-val ret[2235747]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2235749]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2235752 call init[28100] cpi[2235749])
    (2235754 '.=' cpi[2235749] _bindex[28094] coerce_tmp[2235740])
    (2235758 'move' ret[2235747] cpi[2235749])
    (1808178 'move' call_tmp[1198735] ret[2235747])
    const-val call_tmp[1198743]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806316]:string[26] "temp"
    (1198748 call _cast[1054660] call_tmp[1198735] ret_tmp[1806316])
    (1806319 'move' call_tmp[1198743] ret_tmp[1806316])
    (1198752 call +=[38800] ret[1198664] call_tmp[1198743])
    ref i_x[2095275]:string[26] "temp"
    (2095279 'move' i_x[2095275](2095277 'set reference' call_tmp[1198743]))
    wide-ref tmp[2377376]:string[26] "temp"
    (2377379 'move' tmp[2377376] i_x[2095275])
    (2095283 call deinit[30834] tmp[2377376])
    const-val alignCheckRange[1198814]:range(byteIndex,boundedHigh,false)[1184938] "dead at end of block" "insert auto destroy"
    (1198816 'move' alignCheckRange[1198814] x[1198654])
    (1198824 call normalizeAlignment[1199185] alignCheckRange[1198814])
    const-val call_tmp[1198852]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808221]:byteIndex[28173] "temp"
    (1198857 call alignment[1192680] x[1198654] ret_tmp[1808221])
    (1808224 'move' call_tmp[1198852] ret_tmp[1808221])
    val ret[2222664]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2385192]:int(64)[13] "temp"
    (2222666 'move' tmp[2385192](2222668 '.v' call_tmp[1198852] _bindex[28094]))
    (2385195 'move' ret[2222664] tmp[2385192])
    const-val call_tmp[1198875]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198877 'move' call_tmp[1198875](1198880 call chpl__mod[1137435] ret[2222664] 1))
    const-val call_tmp[1198883]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806490]:string[26] "temp"
    (1198888 call _cast[1063172] call_tmp[1198875] ret_tmp[1806490])
    (1806493 'move' call_tmp[1198883] ret_tmp[1806490])
    const-val call_tmp[1198891]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803524]:string[26] "temp"
    wide-ref tmp[2368292]:string[26] "temp"
    (2368296 'move' tmp[2368292](2368294 'set reference' call_tmp[1198883]))
    (1198896 call +[38345] " align " tmp[2368292] ret_tmp[1803524])
    (1803527 'move' call_tmp[1198891] ret_tmp[1803524])
    (1198900 call +=[38800] ret[1198664] call_tmp[1198891])
    ref i_x[2095287]:string[26] "temp"
    (2095291 'move' i_x[2095287](2095289 'set reference' call_tmp[1198891]))
    wide-ref tmp[2377382]:string[26] "temp"
    (2377385 'move' tmp[2377382] i_x[2095287])
    (2095295 call deinit[30834] tmp[2377382])
    ref i_x[2095299]:string[26] "temp"
    (2095303 'move' i_x[2095299](2095301 'set reference' call_tmp[1198883]))
    wide-ref tmp[2377388]:string[26] "temp"
    (2377391 'move' tmp[2377388] i_x[2095299])
    (2095307 call deinit[30834] tmp[2377388])
    (1198906 'move' ret[1198656] ret[1198664])
    label _end__cast[1198914]
    (1808241 '=' _retArg[1808239] ret[1198656])
    (1808243 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025811].normalizeAlignment[1083625](ref arg this[1083631]:range(byteIndex,bounded,false)[1025811]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083911 return _void[55])
  }
  function range(int(64),bounded,false)[1026833].normalizeAlignment[1119759](ref arg this[1119765]:range(int(64),bounded,false)[1026833]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120045 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087584].normalizeAlignment[1136279](ref arg this[1136285]:range(int(64),boundedLow,false)[1087584]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136565 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143422].normalizeAlignment[1154978](ref arg this[1154984]:range(byteIndex,boundedLow,false)[1143422]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155264 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184938].normalizeAlignment[1199185](ref arg this[1199191]:range(byteIndex,boundedHigh,false)[1184938]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199471 return _void[55])
  }
  function chpl__mod[1137435](const in arg dividend[1137437]:int(64)[13], const in arg modulus[1137439]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_76[2331228]:string[26] "temp"
    (2331229 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137441]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2174957]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2174959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174961 'move' call_tmp[2174959](2174963 '<' modulus[1137439] 0))
    if call_tmp[2174959]
    {
      const-val call_tmp[2174968]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2174970 'move' call_tmp[2174968](2174972 'u-' modulus[1137439]))
      (2174974 'move' tmp[2174957] call_tmp[2174968])
    }
    {
      (2174978 'move' tmp[2174957] modulus[1137439])
    }
    const-val call_tmp[2174594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174596 'move' call_tmp[2174594](2174598 '==' tmp[2174957] 0))
    if call_tmp[2174594]
    {
      (2174604 call halt[154111] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[2174607]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174609 'move' call_tmp[2174607](2174611 '%' dividend[1137437] tmp[2174957]))
    val tmp[1137488]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137490 'move' tmp[1137488] call_tmp[2174607])
    const-val call_tmp[2079826]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079828 'move' call_tmp[2079826](2079830 '<' call_tmp[2174607] 0))
    if call_tmp[2079826]
    {
      ref i_lhs[2137951]:int(64)[13] "temp"
      (2137955 'move' i_lhs[2137951](2137953 'set reference' tmp[1137488]))
      (2137958 '+=' i_lhs[2137951] tmp[2174957])
    }
    (1137537 'move' ret[1137441] tmp[1137488])
    label _end_chpl__mod[1137545]
    (1137547 return ret[1137441])
  }
  function _local_chpl__add[2362876](const in arg a[2362878]:int(64)[13], const in arg b[2362880]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[2362883]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2362885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2362887 'move' call_tmp[2362885](2362889 '>' a[2362878] 0))
    val tmp[2362892]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2362885]
    {
      const-val call_tmp[2362896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362898 'move' call_tmp[2362896](2362900 '>' b[2362880] 0))
      (2362903 'move' tmp[2362892] call_tmp[2362896])
    }
    {
      (2362907 'move' tmp[2362892] 0)
    }
    val tmp[2362911]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2362892]
    {
      const-val call_tmp[2362915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362917 'move' call_tmp[2362915](2362919 '-' 9223372036854775807 a[2362878]))
      const-val call_tmp[2362922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362924 'move' call_tmp[2362922](2362926 '>' b[2362880] call_tmp[2362915]))
      (2362929 'move' tmp[2362911] call_tmp[2362922])
    }
    {
      (2362933 'move' tmp[2362911] 0)
    }
    if tmp[2362911]
    {
      (2362939 'move' ret[2362883] 9223372036854775807)
      gotoReturn _end_chpl__add[2363015] _end_chpl__add[2363015]
    }
    const-val call_tmp[2362945]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2362947 'move' call_tmp[2362945](2362949 '<' a[2362878] 0))
    val tmp[2362952]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2362945]
    {
      const-val call_tmp[2362956]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362958 'move' call_tmp[2362956](2362960 '<' b[2362880] 0))
      (2362963 'move' tmp[2362952] call_tmp[2362956])
    }
    {
      (2362967 'move' tmp[2362952] 0)
    }
    val tmp[2362971]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2362952]
    {
      const-val call_tmp[2362975]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362977 'move' call_tmp[2362975](2362979 '-' -9223372036854775808 a[2362878]))
      const-val call_tmp[2362982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2362984 'move' call_tmp[2362982](2362986 '<' b[2362880] call_tmp[2362975]))
      (2362989 'move' tmp[2362971] call_tmp[2362982])
    }
    {
      (2362993 'move' tmp[2362971] 0)
    }
    if tmp[2362971]
    {
      (2362999 'move' ret[2362883] -9223372036854775808)
      gotoReturn _end_chpl__add[2363015] _end_chpl__add[2363015]
    }
    const-val call_tmp[2363005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2363007 'move' call_tmp[2363005](2363009 '+' a[2362878] b[2362880]))
    (2363012 'move' ret[2362883] call_tmp[2363005])
    label _end_chpl__add[2363015]
    (2363017 return ret[2362883])
  }
  function chpl__add[1093391](const in arg a[1093393]:int(64)[13], const in arg b[1093398]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1093402]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2087836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2087838 'move' call_tmp[2087836](2087840 '>' a[1093393] 0))
    val tmp[1093468]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2087836]
    {
      const-val call_tmp[2087851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087853 'move' call_tmp[2087851](2087855 '>' b[1093398] 0))
      (1093501 'move' tmp[1093468] call_tmp[2087851])
    }
    {
      (1093507 'move' tmp[1093468] 0)
    }
    val tmp[1093529]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093468]
    {
      const-val call_tmp[2181745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181747 'move' call_tmp[2181745](2181749 '-' 9223372036854775807 a[1093393]))
      const-val call_tmp[2087861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2087863 'move' call_tmp[2087861](2087865 '>' b[1093398] call_tmp[2181745]))
      (1093583 'move' tmp[1093529] call_tmp[2087861])
    }
    {
      (1093589 'move' tmp[1093529] 0)
    }
    if tmp[1093529]
    {
      (1093611 'move' ret[1093402] 9223372036854775807)
      gotoReturn _end_chpl__add[1094335] _end_chpl__add[1094335]
    }
    const-val call_tmp[2079756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079758 'move' call_tmp[2079756](2079760 '<' a[1093393] 0))
    val tmp[1093641]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2079756]
    {
      const-val call_tmp[2079766]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2079768 'move' call_tmp[2079766](2079770 '<' b[1093398] 0))
      (1093674 'move' tmp[1093641] call_tmp[2079766])
    }
    {
      (1093680 'move' tmp[1093641] 0)
    }
    val tmp[1093702]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093641]
    {
      const-val call_tmp[2181715]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181717 'move' call_tmp[2181715](2181719 '-' -9223372036854775808 a[1093393]))
      const-val call_tmp[2091806]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2091808 'move' call_tmp[2091806](2091810 '<' b[1093398] call_tmp[2181715]))
      (1093756 'move' tmp[1093702] call_tmp[2091806])
    }
    {
      (1093762 'move' tmp[1093702] 0)
    }
    if tmp[1093702]
    {
      (1093784 'move' ret[1093402] -9223372036854775808)
      gotoReturn _end_chpl__add[1094335] _end_chpl__add[1094335]
    }
    const-val call_tmp[2089474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2089476 'move' call_tmp[2089474](2089478 '+' a[1093393] b[1093398]))
    (1094331 'move' ret[1093402] call_tmp[2089474])
    label _end_chpl__add[1094335]
    (1094337 return ret[1093402])
  }
  function chpl__addRangeStrides[1105046](const in arg start[1105048]:int(64)[13], const in arg stride[1105050]:int(64)[13], const in arg count[1105052]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105516]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105518 'move' call_tmp[1105516](1105521 call mul[1105554] stride[1105050] count[1105052]))
    const-val call_tmp[1105524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105526 'move' call_tmp[1105524](1105529 call add[1105941] start[1105048] call_tmp[1105516]))
    (1105551 return call_tmp[1105524])
  }
  function _local_absSameType[2362839](const in arg str[2362841]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[2362844]
    (2362846 return 1)
  }
  function absSameType[1090861](const in arg str[1090863]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1090951]
    (1090953 return 1)
  }
  function mul[1105554](const in arg a[1105556]:int(64)[13], const in arg b[1105558]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2174446]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2174448 'move' call_tmp[2174446](2174450 '*' a[1105556] b[1105558]))
    (1105651 return call_tmp[2174446])
  }
  function add[1105941](const in arg a[1105943]:int(64)[13], const in arg b[1105945]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2089584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2089586 'move' call_tmp[2089584](2089588 '+' a[1105943] b[1105945]))
    (1106038 return call_tmp[2089584])
  }
}