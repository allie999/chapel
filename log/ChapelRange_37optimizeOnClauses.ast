AST dump for ChapelRange after pass optimizeOnClauses.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[416009]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (512185 return _void[55])
  }
  type BoundedRangeType[64213] def bounded[64205]:BoundedRangeType[64213] def boundedLow[64207]:BoundedRangeType[64213] def boundedHigh[64209]:BoundedRangeType[64213] def boundedNone[64211]:BoundedRangeType[64213]
  type range(byteIndex,bounded,false)[1022924] val _low[1022886]:int(64)[13] val _high[1022891]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1140337] val _low[1140299]:int(64)[13] val _high[1140304]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1181785] val _low[1181747]:int(64)[13] val _high[1181752]:int(64)[13]
  type range(int(64),bounded,false)[1023946] val _low[1023908]:int(64)[13] val _high[1023913]:int(64)[13]
  type range(int(64),boundedLow,false)[1084544] val _low[1084506]:int(64)[13] val _high[1084511]:int(64)[13]
  type range(int(64),boundedHigh,false)[1184295] val _low[1184257]:int(64)[13] val _high[1184262]:int(64)[13]
  function range(int(64),bounded,false)[1023946].init[1023169](ref arg this[1023175]:range(int(64),bounded,false)[1023946], const in arg _low[1023196]:int(64)[13], const in arg _high[1023205]:int(64)[13], const in arg _stride[1023213]:int(64)[13], const in arg _alignment[1023222]:int(64)[13], const in arg _aligned[1023226]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1023467 '.=' this[1023175] _low[1023908] _low[1023196])
    (1023499 '.=' this[1023175] _high[1023913] _high[1023205])
    const-val call_tmp[2046906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046908 'move' call_tmp[2046906](2046910 '==' _stride[1023213] 1))
    (1023782 call assert[210262] call_tmp[2046906])
    (1023785 return _void[55])
  }
  function range(byteIndex,bounded,false)[1022924].init[1025840](ref arg this[1025846]:range(byteIndex,bounded,false)[1022924], const  ref arg _low[1025867]:byteIndex[28170], const  ref arg _high[1025876]:byteIndex[28170], const in arg _stride[1025884]:int(64)[13], const  ref arg _alignment[1025893]:byteIndex[28170], const in arg _aligned[1025897]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2175627]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175629 'move' ret[2175627](2175631 '.v' _low[1025867] _bindex[28091]))
    (1025975 '.=' this[1025846] _low[1022886] ret[2175627])
    val ret[2175637]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175639 'move' ret[2175637](2175641 '.v' _high[1025876] _bindex[28091]))
    (1026007 '.=' this[1025846] _high[1022891] ret[2175637])
    const-val call_tmp[2046921]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046923 'move' call_tmp[2046921](2046925 '==' _stride[1025884] 1))
    (1026290 call assert[210262] call_tmp[2046921])
    (1026293 return _void[55])
  }
  function range(int(64),boundedLow,false)[1084544].init[1083991](ref arg this[1083997]:range(int(64),boundedLow,false)[1084544], const in arg _low[1084018]:int(64)[13], const in arg _high[1084027]:int(64)[13], const in arg _stride[1084035]:int(64)[13], const in arg _alignment[1084044]:int(64)[13], const in arg _aligned[1084048]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1084117 '.=' this[1083997] _low[1084506] _low[1084018])
    (1084149 '.=' this[1083997] _high[1084511] _high[1084027])
    const-val call_tmp[2047066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047068 'move' call_tmp[2047066](2047070 '==' _stride[1084035] 1))
    (1084432 call assert[210262] call_tmp[2047066])
    (1084435 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1140337].init[1139784](ref arg this[1139790]:range(byteIndex,boundedLow,false)[1140337], const  ref arg _low[1139811]:byteIndex[28170], const  ref arg _high[1139820]:byteIndex[28170], const in arg _stride[1139828]:int(64)[13], const  ref arg _alignment[1139837]:byteIndex[28170], const in arg _aligned[1139841]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2175683]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175685 'move' ret[2175683](2175687 '.v' _low[1139811] _bindex[28091]))
    (1139910 '.=' this[1139790] _low[1140299] ret[2175683])
    val ret[2175693]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175695 'move' ret[2175693](2175697 '.v' _high[1139820] _bindex[28091]))
    (1139942 '.=' this[1139790] _high[1140304] ret[2175693])
    const-val call_tmp[2047226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047228 'move' call_tmp[2047226](2047230 '==' _stride[1139828] 1))
    (1140225 call assert[210262] call_tmp[2047226])
    (1140228 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1181785].init[1181232](ref arg this[1181238]:range(byteIndex,boundedHigh,false)[1181785], const  ref arg _low[1181259]:byteIndex[28170], const  ref arg _high[1181268]:byteIndex[28170], const in arg _stride[1181276]:int(64)[13], const  ref arg _alignment[1181285]:byteIndex[28170], const in arg _aligned[1181289]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2175755]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175757 'move' ret[2175755](2175759 '.v' _low[1181259] _bindex[28091]))
    (1181358 '.=' this[1181238] _low[1181747] ret[2175755])
    val ret[2175765]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175767 'move' ret[2175765](2175769 '.v' _high[1181268] _bindex[28091]))
    (1181390 '.=' this[1181238] _high[1181752] ret[2175765])
    const-val call_tmp[2047361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047363 'move' call_tmp[2047361](2047365 '==' _stride[1181276] 1))
    (1181673 call assert[210262] call_tmp[2047361])
    (1181676 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1184295].init[1185579](ref arg this[1185585]:range(int(64),boundedHigh,false)[1184295], const in arg _low[1185606]:int(64)[13], const in arg _high[1185615]:int(64)[13], const in arg _stride[1185623]:int(64)[13], const in arg _alignment[1185632]:int(64)[13], const in arg _aligned[1185636]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1185705 '.=' this[1185585] _low[1184257] _low[1185606])
    (1185737 '.=' this[1185585] _high[1184262] _high[1185615])
    const-val call_tmp[2047376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047378 'move' call_tmp[2047376](2047380 '==' _stride[1185623] 1))
    (1186020 call assert[210262] call_tmp[2047376])
    (1186023 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].init[1088243](ref arg this[1088249]:range(int(64),bounded,false)[1023946], const in arg _low[1088270]:int(64)[13], const in arg _high[1088279]:int(64)[13], const in arg _stride[1088281]:int(64)[13], const in arg _aligned[1088285]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1088915 '.=' this[1088249] _low[1023908] _low[1088270])
    (1088947 '.=' this[1088249] _high[1023913] _high[1088279])
    (1089113 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].init[1091454](ref arg this[1091460]:range(int(64),bounded,false)[1023946], const in arg _low[1091481]:int(64)[13], const in arg _high[1091490]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1092054 '.=' this[1091460] _low[1023908] _low[1091481])
    (1092086 '.=' this[1091460] _high[1023913] _high[1091490])
    (1092252 return _void[55])
  }
  function chpl_build_bounded_range[455195](const in arg low[455202]:int(64)[13], const in arg high[455208]:int(64)[13], ref arg _retArg[1784320]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616855]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1023157]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "temp"
    (1023160 call init[1023169] initTemp[1023157] low[455202] high[455208] 1 0 0)
    (616858 'move' call_tmp[616855] initTemp[1023157])
    (1784322 '=' _retArg[1784320] call_tmp[616855])
    (1784324 return _void[55])
  }
  function chpl_build_low_bounded_range[1083937](const in arg low[1083939]:int(64)[13], ref arg _retArg[1786102]:range(int(64),boundedLow,false)[1084544]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1083962]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1083980]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "delay instantiation" "temp"
    (1083983 call init[1083991] initTemp[1083980] low[1083939] 0 1 0 0)
    (1083964 'move' call_tmp[1083962] initTemp[1083980])
    (1786104 '=' _retArg[1786102] call_tmp[1083962])
    (1786106 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].alignment[1031374](const in arg this[1031380]:range(int(64),bounded,false)[1023946]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2175337]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2175339 'move' coerce_tmp[2175337](2175341 '.v' this[1031380] _low[1023908]))
    (1031502 return coerce_tmp[2175337])
  }
  function range(int(64),boundedLow,false)[1084544].alignment[1125054](const in arg this[1125060]:range(int(64),boundedLow,false)[1084544]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2184754]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2184756 'move' coerce_tmp[2184754](2184758 '.v' this[1125060] _low[1084506]))
    (1125182 return coerce_tmp[2184754])
  }
  function range(byteIndex,boundedLow,false)[1140337].alignment[1145172](const in arg this[1145178]:range(byteIndex,boundedLow,false)[1140337], ref arg _retArg[1787049]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2185440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185442 'move' coerce_tmp[2185440](2185444 '.v' this[1145178] _low[1140299]))
    const-val ret[2185447]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2185449]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2185452 call init[28097] cpi[2185449])
    (2185454 '.=' cpi[2185449] _bindex[28091] coerce_tmp[2185440])
    (2185458 'move' ret[2185447] cpi[2185449])
    (1787051 '=' _retArg[1787049] ret[2185447])
    (1787053 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1184295].alignment[1187460](const in arg this[1187466]:range(int(64),boundedHigh,false)[1184295]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1187490 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1181785].alignment[1189527](const in arg this[1189533]:range(byteIndex,boundedHigh,false)[1181785], ref arg _retArg[1787371]:byteIndex[28170]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2190678]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2190680]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2190683 call init[28097] cpi[2190680])
    (2190685 '.=' cpi[2190680] _bindex[28091] 0)
    (2190689 'move' ret[2190678] cpi[2190680])
    (1787373 '=' _retArg[1787371] ret[2190678])
    (1787375 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].size[1032912](const in arg this[1032918]:range(int(64),bounded,false)[1023946]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2278237]:string[26] "temp"
    (2278238 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1032925]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2176613]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176615 'move' ret[2176613](2176617 '.v' this[1032918] _high[1023913]))
    val ret[2176645]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176647 'move' ret[2176645](2176649 '.v' this[1032918] _low[1023908]))
    const-val call_tmp[2042177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2042179 'move' call_tmp[2042177](2042181 '>' ret[2176645] ret[2176613]))
    if call_tmp[2042177]
    {
      (1033030 'move' ret[1032925] 0)
      gotoReturn _end_size[1033134] _end_size[1033134]
    }
    const-val call_tmp[2045051]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2045053 'move' call_tmp[2045051](2045055 '-' ret[2176613] ret[2176645]))
    const-val call_tmp[2126384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126386 'move' call_tmp[2126384](2126388 '==' 1 0))
    if call_tmp[2126384]
    {
      (2126394 call halt[154071] "Attempt to divide by zero")
    }
    const-val call_tmp[2126397]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126399 'move' call_tmp[2126397](2126401 '/' call_tmp[2045051] 1))
    const-val call_tmp[2038484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2038486 'move' call_tmp[2038484](2038488 '+' call_tmp[2126397] 1))
    (1034090 'move' ret[1032925] call_tmp[2038484])
    label _end_size[1033134]
    (1033136 return ret[1032925])
  }
  function ==[1039035](const in arg r1[1039037]:range(int(64),bounded,false)[1023946], const in arg r2[1039039]:range(int(64),bounded,false)[1023946]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1039064]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1039173]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1039175 'move' call_tmp[1039173](1039178 call size[1032912] r1[1039037]))
    const-val call_tmp[1039186]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1039188 'move' call_tmp[1039186](1039191 call size[1032912] r2[1039039]))
    const-val call_tmp[2035734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2035736 'move' call_tmp[2035734](2035738 '!=' call_tmp[1039173] call_tmp[1039186]))
    if call_tmp[2035734]
    {
      (1039217 'move' ret[1039064] 0)
      gotoReturn _end_==[1039534] _end_==[1039534]
    }
    const-val call_tmp[2046976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046978 'move' call_tmp[2046976](2046980 '==' call_tmp[1039173] 0))
    if call_tmp[2046976]
    {
      (1039242 'move' ret[1039064] 1)
      gotoReturn _end_==[1039534] _end_==[1039534]
    }
    val ret[2176788]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176790 'move' ret[2176788](2176792 '.v' r1[1039037] _low[1023908]))
    val ret[2176798]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176800 'move' ret[2176798](2176802 '.v' r2[1039039] _low[1023908]))
    const-val call_tmp[2035744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2035746 'move' call_tmp[2035744](2035748 '!=' ret[2176788] ret[2176798]))
    if call_tmp[2035744]
    {
      (1039283 'move' ret[1039064] 0)
      gotoReturn _end_==[1039534] _end_==[1039534]
    }
    const-val call_tmp[2046991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046993 'move' call_tmp[2046991](2046995 '==' call_tmp[1039173] 1))
    if call_tmp[2046991]
    {
      (1039308 'move' ret[1039064] 1)
      gotoReturn _end_==[1039534] _end_==[1039534]
    }
    (1039357 'move' ret[1039064] 1)
    label _end_==[1039534]
    (1039536 return ret[1039064])
  }
  function !=[1726405](const in arg r1[1726407]:range(int(64),bounded,false)[1023946], const in arg r2[1726409]:range(int(64),bounded,false)[1023946]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1726421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1726423 'move' call_tmp[1726421](1726426 call ==[1039035] r1[1726407] r2[1726409]))
    const-val call_tmp[2035192]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2035194 'move' call_tmp[2035192](2035196 '!' call_tmp[1726421]))
    (1726440 return call_tmp[2035192])
  }
  function range(int(64),bounded,false)[1023946].safeCast[1293372](const in arg this[1293378]:range(int(64),bounded,false)[1023946], ref arg _retArg[1789479]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1293382]:range(int(64),bounded,false)[1023946] "dead after last mention" "RVV" "temp"
    val tmp[1293407]:range(int(64),bounded,false)[1023946] "dead at end of block" "insert auto destroy"
    (1293781 call init[1023169] tmp[1293407] 1 0 1 0 0)
    const-val coerce_tmp[1293759]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1293763 'move' coerce_tmp[1293759](2273149 '.v' this[1293378] _low[1023908]))
    (2273142 '.=' tmp[1293407] _low[1023908] coerce_tmp[1293759])
    const-val coerce_tmp[1293771]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1293775 'move' coerce_tmp[1293771](2273163 '.v' this[1293378] _high[1023913]))
    (2273156 '.=' tmp[1293407] _high[1023913] coerce_tmp[1293771])
    (1293713 'move' ret[1293382] tmp[1293407])
    label _end_safeCast[1293721]
    (1789481 '=' _retArg[1789479] ret[1293382])
    (1789483 return _void[55])
  }
  function _cast[1024694](const in arg r[1024698]:range(int(64),bounded,false)[1023946], ref arg _retArg[1785114]:range(byteIndex,bounded,false)[1022924]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1024700]:range(byteIndex,bounded,false)[1022924] "dead after last mention" "RVV" "temp"
    val tmp[1024710]:range(byteIndex,bounded,false)[1022924] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1026883]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2175834]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2175836]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2175839 call init[28097] cpi[2175836])
    (2175841 '.=' cpi[2175836] _bindex[28091] 1)
    (2175845 'move' ret[2175834] cpi[2175836])
    (1785123 'move' default_arg__low[1026883] ret[2175834])
    const-val default_arg__high[1026935]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2175861]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2175863]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2175866 call init[28097] cpi[2175863])
    (2175868 '.=' cpi[2175863] _bindex[28091] 0)
    (2175872 'move' ret[2175861] cpi[2175863])
    (1785135 'move' default_arg__high[1026935] ret[2175861])
    const-val default_arg__alignment[1027008]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2175894]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2175896]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2175899 call init[28097] cpi[2175896])
    (2175901 '.=' cpi[2175896] _bindex[28091] 0)
    (2175905 'move' ret[2175894] cpi[2175896])
    (1785147 'move' default_arg__alignment[1027008] ret[2175894])
    (1025831 call init[1025840] tmp[1024710] default_arg__low[1026883] default_arg__high[1026935] 1 default_arg__alignment[1027008] 0)
    const-val coerce_tmp[2175317]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2175319 'move' coerce_tmp[2175317](2175321 '.v' r[1024698] _low[1023908]))
    (2270477 '.=' tmp[1024710] _low[1022886] coerce_tmp[2175317])
    const-val coerce_tmp[2175537]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2175539 'move' coerce_tmp[2175537](2175541 '.v' r[1024698] _high[1023913]))
    (2270484 '.=' tmp[1024710] _high[1022891] coerce_tmp[2175537])
    (1024969 'move' ret[1024700] tmp[1024710])
    label _end__cast[1024977]
    (1785116 '=' _retArg[1785114] ret[1024700])
    (1785118 return _void[55])
  }
  function _cast[1029606](const in arg r[1029610]:range(byteIndex,bounded,false)[1022924], ref arg _retArg[1785222]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1029612]:range(int(64),bounded,false)[1023946] "dead after last mention" "RVV" "temp"
    val tmp[1029622]:range(int(64),bounded,false)[1023946] "dead at end of block" "insert auto destroy"
    (1030166 call init[1023169] tmp[1029622] 1 0 1 0 0)
    const-val call_tmp[1029819]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2176008]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2176010 'move' coerce_tmp[2176008](2176012 '.v' r[1029610] _low[1022886]))
    const-val ret[2176015]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2176017]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2176020 call init[28097] cpi[2176017])
    (2176022 '.=' cpi[2176017] _bindex[28091] coerce_tmp[2176008])
    (2176026 'move' ret[2176015] cpi[2176017])
    (1785231 'move' call_tmp[1029819] ret[2176015])
    val ret[2041812]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041814 'move' ret[2041812](2041816 '.v' call_tmp[1029819] _bindex[28091]))
    (2270560 '.=' tmp[1029622] _low[1023908] ret[2041812])
    const-val call_tmp[1029858]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2176116]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2176118 'move' coerce_tmp[2176116](2176120 '.v' r[1029610] _high[1022891]))
    const-val ret[2176123]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2176125]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2176128 call init[28097] cpi[2176125])
    (2176130 '.=' cpi[2176125] _bindex[28091] coerce_tmp[2176116])
    (2176134 'move' ret[2176123] cpi[2176125])
    (1785273 'move' call_tmp[1029858] ret[2176123])
    val ret[2041828]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041830 'move' ret[2041828](2041832 '.v' call_tmp[1029858] _bindex[28091]))
    (2270569 '.=' tmp[1029622] _high[1023913] ret[2041828])
    (1029881 'move' ret[1029612] tmp[1029622])
    label _end__cast[1029889]
    (1785224 '=' _retArg[1785222] ret[1029612])
    (1785226 return _void[55])
  }
  function _cast[1142747](const in arg r[1142751]:range(byteIndex,boundedLow,false)[1140337], ref arg _retArg[1786949]:range(int(64),boundedLow,false)[1084544]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1142753]:range(int(64),boundedLow,false)[1084544] "dead after last mention" "RVV" "temp"
    val tmp[1142763]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "insert auto destroy"
    (1143267 call init[1083991] tmp[1142763] 1 0 1 0 0)
    const-val call_tmp[1142960]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2185407]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185409 'move' coerce_tmp[2185407](2185411 '.v' r[1142751] _low[1140299]))
    const-val ret[2185414]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2185416]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2185419 call init[28097] cpi[2185416])
    (2185421 '.=' cpi[2185416] _bindex[28091] coerce_tmp[2185407])
    (2185425 'move' ret[2185414] cpi[2185416])
    (1786958 'move' call_tmp[1142960] ret[2185414])
    val ret[2041894]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041896 'move' ret[2041894](2041898 '.v' call_tmp[1142960] _bindex[28091]))
    (2271779 '.=' tmp[1142763] _low[1084506] ret[2041894])
    const-val call_tmp[1142999]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2185551]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185553 'move' coerce_tmp[2185551](2185555 '.v' r[1142751] _high[1140304]))
    const-val ret[2185558]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2185560]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2185563 call init[28097] cpi[2185560])
    (2185565 '.=' cpi[2185560] _bindex[28091] coerce_tmp[2185551])
    (2185569 'move' ret[2185558] cpi[2185560])
    (1787000 'move' call_tmp[1142999] ret[2185558])
    val ret[2041910]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041912 'move' ret[2041910](2041914 '.v' call_tmp[1142999] _bindex[28091]))
    (2271788 '.=' tmp[1142763] _high[1084511] ret[2041910])
    (1143022 'move' ret[1142753] tmp[1142763])
    label _end__cast[1143030]
    (1786951 '=' _retArg[1786949] ret[1142753])
    (1786953 return _void[55])
  }
  function _cast[1184497](const in arg r[1184501]:range(byteIndex,boundedHigh,false)[1181785], ref arg _retArg[1787271]:range(int(64),boundedHigh,false)[1184295]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1184503]:range(int(64),boundedHigh,false)[1184295] "dead after last mention" "RVV" "temp"
    val tmp[1184513]:range(int(64),boundedHigh,false)[1184295] "dead at end of block" "insert auto destroy"
    (1185570 call init[1185579] tmp[1184513] 1 0 1 0 0)
    const-val call_tmp[1184710]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2190713]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2190715 'move' coerce_tmp[2190713](2190717 '.v' r[1184501] _low[1181747]))
    const-val ret[2190720]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2190722]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2190725 call init[28097] cpi[2190722])
    (2190727 '.=' cpi[2190722] _bindex[28091] coerce_tmp[2190713])
    (2190731 'move' ret[2190720] cpi[2190722])
    (1787280 'move' call_tmp[1184710] ret[2190720])
    val ret[2041936]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041938 'move' ret[2041936](2041940 '.v' call_tmp[1184710] _bindex[28091]))
    (2272079 '.=' tmp[1184513] _low[1184257] ret[2041936])
    const-val call_tmp[1184749]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2190843]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2190845 'move' coerce_tmp[2190843](2190847 '.v' r[1184501] _high[1181752]))
    const-val ret[2190850]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2190852]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2190855 call init[28097] cpi[2190852])
    (2190857 '.=' cpi[2190852] _bindex[28091] coerce_tmp[2190843])
    (2190861 'move' ret[2190850] cpi[2190852])
    (1787316 'move' call_tmp[1184749] ret[2190850])
    val ret[2041952]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2041954 'move' ret[2041952](2041956 '.v' call_tmp[1184749] _bindex[28091]))
    (2272088 '.=' tmp[1184513] _high[1184262] ret[2041952])
    (1184772 'move' ret[1184503] tmp[1184513])
    label _end__cast[1184780]
    (1787273 '=' _retArg[1787271] ret[1184503])
    (1787275 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].orderToIndex[1100997](const in arg this[1101003]:range(int(64),bounded,false)[1023946], const in arg ord[1101005]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2278640]:string[26] "temp"
    (2278641 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2278634]:string[26] "temp"
    (2278635 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2278628]:string[26] "temp"
    (2278629 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2278622]:string[26] "temp"
    (2278623 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val ret[2183865]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2183867 'move' ret[2183865](2183869 '.v' this[1101003] _low[1023908]))
    val ret[2183872]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2183874 'move' ret[2183872](2183876 '.v' this[1101003] _high[1023913]))
    const-val call_tmp[2183879]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2183881 'move' call_tmp[2183879](2183883 '>' ret[2183865] ret[2183872]))
    val tmp[2183886]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2183879]
    {
      (2183890 'move' tmp[2183886] 0)
    }
    {
      (2183894 'move' tmp[2183886] 1)
    }
    const-val call_tmp[2034724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034726 'move' call_tmp[2034724](2034728 '!' tmp[2183886]))
    if call_tmp[2034724]
    {
      (1101061 call boundsCheckHalt[210084] "invoking orderToIndex on a range that has no first index")
    }
    const-val call_tmp[2036166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036168 'move' call_tmp[2036166](2036170 '<' ord[1101005] 0))
    if call_tmp[2036166]
    {
      const-val call_tmp[1101111]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785574]:string[26] "temp"
      (1101116 call _cast[1060220] ord[1101005] ret_tmp[1785574])
      (1785577 'move' call_tmp[1101111] ret_tmp[1785574])
      const-val call_tmp[1101119]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782608]:string[26] "temp"
      (1101124 call +[38342] "invoking orderToIndex on a negative integer: " call_tmp[1101111] ret_tmp[1782608])
      (1782611 'move' call_tmp[1101119] ret_tmp[1782608])
      (1101128 call boundsCheckHalt[210084] call_tmp[1101119])
      ref i_x[2050828]:string[26] "temp"
      (2050832 'move' i_x[2050828](2050830 'set reference' call_tmp[1101119]))
      (2050836 call deinit[30831] i_x[2050828])
      ref i_x[2050840]:string[26] "temp"
      (2050844 'move' i_x[2050840](2050842 'set reference' call_tmp[1101111]))
      (2050848 call deinit[30831] i_x[2050840])
    }
    const-val call_tmp[1101173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1101175 'move' call_tmp[1101173](1101178 call size[1032912] this[1101003]))
    const-val call_tmp[2046779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2046781 'move' call_tmp[2046779](2046783 '>=' ord[1101005] call_tmp[1101173]))
    if call_tmp[2046779]
    {
      const-val call_tmp[1101217]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785580]:string[26] "temp"
      (1101222 call _cast[1060220] ord[1101005] ret_tmp[1785580])
      (1785583 'move' call_tmp[1101217] ret_tmp[1785580])
      const-val call_tmp[1101225]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782614]:string[26] "temp"
      (1101230 call +[38342] "invoking orderToIndex on an integer " call_tmp[1101217] ret_tmp[1782614])
      (1782617 'move' call_tmp[1101225] ret_tmp[1782614])
      const-val call_tmp[1101233]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782620]:string[26] "temp"
      (1101238 call +[38342] call_tmp[1101225] " that is larger than the range's number of indices " ret_tmp[1782620])
      (1782623 'move' call_tmp[1101233] ret_tmp[1782620])
      const-val call_tmp[1101241]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1101243 'move' call_tmp[1101241](1101246 call size[1032912] this[1101003]))
      const-val call_tmp[1101249]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785586]:string[26] "temp"
      (1101254 call _cast[1060220] call_tmp[1101241] ret_tmp[1785586])
      (1785589 'move' call_tmp[1101249] ret_tmp[1785586])
      const-val call_tmp[1101257]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782626]:string[26] "temp"
      (1101262 call +[38342] call_tmp[1101233] call_tmp[1101249] ret_tmp[1782626])
      (1782629 'move' call_tmp[1101257] ret_tmp[1782626])
      (1101266 call boundsCheckHalt[210084] call_tmp[1101257])
      ref i_x[2050852]:string[26] "temp"
      (2050856 'move' i_x[2050852](2050854 'set reference' call_tmp[1101257]))
      (2050860 call deinit[30831] i_x[2050852])
      ref i_x[2050864]:string[26] "temp"
      (2050868 'move' i_x[2050864](2050866 'set reference' call_tmp[1101249]))
      (2050872 call deinit[30831] i_x[2050864])
      ref i_x[2050876]:string[26] "temp"
      (2050880 'move' i_x[2050876](2050878 'set reference' call_tmp[1101233]))
      (2050884 call deinit[30831] i_x[2050876])
      ref i_x[2050888]:string[26] "temp"
      (2050892 'move' i_x[2050888](2050890 'set reference' call_tmp[1101225]))
      (2050896 call deinit[30831] i_x[2050888])
      ref i_x[2050900]:string[26] "temp"
      (2050904 'move' i_x[2050900](2050902 'set reference' call_tmp[1101217]))
      (2050908 call deinit[30831] i_x[2050900])
    }
    val ret[2176776]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176778 'move' ret[2176776](2176780 '.v' this[1101003] _low[1023908]))
    const-val call_tmp[1101288]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1101290 'move' call_tmp[1101288](1101293 call chpl__addRangeStrides[1101984] ret[2176776] 1 ord[1101005]))
    (1101320 return call_tmp[1101288])
  }
  function range(int(64),bounded,false)[1023946].this[1034571](const in arg this[1034577]:range(int(64),bounded,false)[1023946], const in arg other[1034579]:range(int(64),bounded,false)[1023946], ref arg _retArg[1785312]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1037061]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1037065 'move' coerce_tmp[1037061](2270593 '.v' this[1034577] _low[1023908]))
    (1035170 'noop')
    const-val coerce_tmp[1037074]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1037078 'move' coerce_tmp[1037074](2270603 '.v' this[1034577] _high[1023913]))
    (1035224 'noop')
    const-val coerce_tmp[1037091]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1037095 'move' coerce_tmp[1037091](2270613 '.v' other[1034579] _low[1023908]))
    (1035299 'noop')
    const-val coerce_tmp[1037104]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1037108 'move' coerce_tmp[1037104](2270623 '.v' other[1034579] _high[1023913]))
    (1035353 'noop')
    const-val ret_tmp[1785318]:2*int(64)[1037179] "temp"
    (2259244 'set svec member' ret_tmp[1785318] 0 1)
    (2259248 'set svec member' ret_tmp[1785318] 1 0)
    (1035540 'noop')
    (1035552 'noop')
    val tmp[2110538]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2110540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110542 'move' call_tmp[2110540](2110544 '>' coerce_tmp[1037061] coerce_tmp[1037091]))
    if call_tmp[2110540]
    {
      (2110549 'move' tmp[2110538] coerce_tmp[1037061])
    }
    {
      (2110553 'move' tmp[2110538] coerce_tmp[1037091])
    }
    val newlo[1036204]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1036206 'move' newlo[1036204] tmp[2110538])
    val tmp[2070156]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2070158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070160 'move' call_tmp[2070158](2070162 '<' coerce_tmp[1037074] coerce_tmp[1037104]))
    if call_tmp[2070158]
    {
      (2070167 'move' tmp[2070156] coerce_tmp[1037074])
    }
    {
      (2070171 'move' tmp[2070156] coerce_tmp[1037104])
    }
    val newhi[1036234]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1036236 'move' newhi[1036234] tmp[2070156])
    (2277031 'noop')
    const-val call_tmp[2034697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034699 'move' call_tmp[2034697](2034701 '!' 0))
    val tmp[1036284]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2034697]
    {
      (1036375 'move' tmp[1036284] 1)
    }
    {
      (1036381 'move' tmp[1036284] 0)
    }
    const-val call_tmp[1036457]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1038951]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "temp"
    (1038954 call init[1023169] initTemp[1038951] newlo[1036204] newhi[1036234] 1 0 tmp[1036284])
    (1036459 'move' call_tmp[1036457] initTemp[1038951])
    label _end_this[1037038]
    (1785314 '=' _retArg[1785312] call_tmp[1036457])
    (1785316 return _void[55])
  }
  function range(int(64),boundedLow,false)[1084544].this[1135903](const in arg this[1135909]:range(int(64),boundedLow,false)[1084544], const in arg other[1135911]:range(int(64),bounded,false)[1023946], ref arg _retArg[1786797]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1138393]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1138397 'move' coerce_tmp[1138393](2271711 '.v' this[1135909] _low[1084506]))
    (1136502 'noop')
    const-val coerce_tmp[1138406]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1138410 'move' coerce_tmp[1138406](2271721 '.v' other[1135911] _high[1023913]))
    (1136556 'noop')
    const-val coerce_tmp[1138423]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1138427 'move' coerce_tmp[1138423](2271731 '.v' other[1135911] _low[1023908]))
    (1136631 'noop')
    const-val coerce_tmp[1138436]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1138440 'move' coerce_tmp[1138436](2271741 '.v' other[1135911] _high[1023913]))
    (1136685 'noop')
    const-val ret_tmp[1785336]:2*int(64)[1037179] "temp"
    (2259258 'set svec member' ret_tmp[1785336] 0 1)
    (2259262 'set svec member' ret_tmp[1785336] 1 0)
    (1136872 'noop')
    (1136884 'noop')
    val tmp[2110560]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2110562]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110564 'move' call_tmp[2110562](2110566 '>' coerce_tmp[1138393] coerce_tmp[1138423]))
    if call_tmp[2110562]
    {
      (2110571 'move' tmp[2110560] coerce_tmp[1138393])
    }
    {
      (2110575 'move' tmp[2110560] coerce_tmp[1138423])
    }
    val newlo[1137536]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137538 'move' newlo[1137536] tmp[2110560])
    val tmp[2070178]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2070180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070182 'move' call_tmp[2070180](2070184 '<' coerce_tmp[1138406] coerce_tmp[1138436]))
    if call_tmp[2070180]
    {
      (2070189 'move' tmp[2070178] coerce_tmp[1138406])
    }
    {
      (2070193 'move' tmp[2070178] coerce_tmp[1138436])
    }
    val newhi[1137566]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137568 'move' newhi[1137566] tmp[2070178])
    (2277032 'noop')
    const-val call_tmp[2034751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034753 'move' call_tmp[2034751](2034755 '!' 0))
    val tmp[1137616]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2034751]
    {
      (1137707 'move' tmp[1137616] 1)
    }
    {
      (1137713 'move' tmp[1137616] 0)
    }
    const-val call_tmp[1137789]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1138877]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "temp"
    (1138880 call init[1023169] initTemp[1138877] newlo[1137536] newhi[1137566] 1 0 tmp[1137616])
    (1137791 'move' call_tmp[1137789] initTemp[1138877])
    label _end_this[1138370]
    (1786799 '=' _retArg[1786797] call_tmp[1137789])
    (1786801 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1184295].this[1197215](const in arg this[1197221]:range(int(64),boundedHigh,false)[1184295], const in arg other[1197223]:range(int(64),bounded,false)[1023946], ref arg _retArg[1787395]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1199705]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1199709 'move' coerce_tmp[1199705](2272152 '.v' other[1197223] _low[1023908]))
    (1197814 'noop')
    const-val coerce_tmp[1199718]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1199722 'move' coerce_tmp[1199718](2272162 '.v' this[1197221] _high[1184262]))
    (1197868 'noop')
    const-val coerce_tmp[1199735]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1199739 'move' coerce_tmp[1199735](2272172 '.v' other[1197223] _low[1023908]))
    (1197943 'noop')
    const-val coerce_tmp[1199748]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1199752 'move' coerce_tmp[1199748](2272182 '.v' other[1197223] _high[1023913]))
    (1197997 'noop')
    const-val ret_tmp[1785342]:2*int(64)[1037179] "temp"
    (2259272 'set svec member' ret_tmp[1785342] 0 1)
    (2259276 'set svec member' ret_tmp[1785342] 1 0)
    (1198184 'noop')
    (1198196 'noop')
    val tmp[2110582]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2110584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2110586 'move' call_tmp[2110584](2110588 '>' coerce_tmp[1199705] coerce_tmp[1199735]))
    if call_tmp[2110584]
    {
      (2110593 'move' tmp[2110582] coerce_tmp[1199705])
    }
    {
      (2110597 'move' tmp[2110582] coerce_tmp[1199735])
    }
    val newlo[1198848]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1198850 'move' newlo[1198848] tmp[2110582])
    val tmp[2070200]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2070202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070204 'move' call_tmp[2070202](2070206 '<' coerce_tmp[1199718] coerce_tmp[1199748]))
    if call_tmp[2070202]
    {
      (2070211 'move' tmp[2070200] coerce_tmp[1199718])
    }
    {
      (2070215 'move' tmp[2070200] coerce_tmp[1199748])
    }
    val newhi[1198878]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1198880 'move' newhi[1198878] tmp[2070200])
    (2277033 'noop')
    const-val call_tmp[2034778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034780 'move' call_tmp[2034778](2034782 '!' 0))
    val tmp[1198928]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2034778]
    {
      (1199019 'move' tmp[1198928] 1)
    }
    {
      (1199025 'move' tmp[1198928] 0)
    }
    const-val call_tmp[1199101]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1200416]:range(int(64),bounded,false)[1023946] "dead at end of block" "delay instantiation" "temp"
    (1200419 call init[1023169] initTemp[1200416] newlo[1198848] newhi[1198878] 1 0 tmp[1198928])
    (1199103 'move' call_tmp[1199101] initTemp[1200416])
    label _end_this[1199682]
    (1787397 '=' _retArg[1787395] call_tmp[1199101])
    (1787399 return _void[55])
  }
  function chpl_count_help[1085295](const in arg r[1085297]:range(int(64),boundedLow,false)[1084544], const in arg count[1085299]:int(64)[13], ref arg _retArg[1786198]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2278610]:string[26] "temp"
    (2278611 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1085301]:range(int(64),bounded,false)[1023946] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2047081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2047083 'move' call_tmp[2047081](2047085 '==' count[1085299] 0))
    if call_tmp[2047081]
    {
      const-val coerce_tmp[1087692]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1087696 'move' coerce_tmp[1087692](2271002 '.v' r[1085297] _low[1084506]))
      const-val call_tmp[1085599]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1085601 'move' call_tmp[1085599](1085604 call absSameType[1087821] 1))
      const-val coerce_tmp[1087925]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1087929 'move' coerce_tmp[1087925](2271009 '.v' r[1085297] _low[1084506]))
      const-val call_tmp[2045071]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2045073 'move' call_tmp[2045071](2045075 '-' coerce_tmp[1087925] call_tmp[1085599]))
      const-val call_tmp[1085662]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1088220]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "temp"
      (1088223 call init[1088243] initTemp[1088220] coerce_tmp[1087692] call_tmp[2045071] 1 1)
      (1085664 'move' call_tmp[1085662] initTemp[1088220])
      (1085684 'move' ret[1085301] call_tmp[1085662])
      gotoReturn _end_chpl_count_help[1087267] _end_chpl_count_help[1087267]
    }
    (2183539 'noop')
    const-val call_tmp[2034715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034717 'move' call_tmp[2034715](2034719 '!' 0))
    val tmp[1086107]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2034715]
    {
      const-val call_tmp[2036106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2036108 'move' call_tmp[2036106](2036110 '<' count[1085299] 0))
      (1086140 'move' tmp[1086107] call_tmp[2036106])
    }
    {
      (1086146 'move' tmp[1086107] 0)
    }
    if tmp[1086107]
    {
      (1086162 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[2183546]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2183548 'move' call_tmp[2183546](2183550 '*' count[1085299] 1))
    val tmp[1086669]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2042202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2042204 'move' call_tmp[2042202](2042206 '>' call_tmp[2183546] 0))
    if call_tmp[2042202]
    {
      (1092296 'move' tmp[1086669](2271016 '.v' r[1085297] _low[1084506]))
    }
    {
      const-val tmp[1086702]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2038524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2038526 'move' call_tmp[2038524](2038528 '+' call_tmp[2183546] 1))
      const-val coerce_tmp[1091299]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1091303 'move' coerce_tmp[1091299](2271026 '.v' r[1085297] _high[1084511]))
      (1086736 'move' tmp[1086702](1086739 call chpl__add[1090351] coerce_tmp[1091299] call_tmp[2038524]))
      (1086743 'move' tmp[1086669] tmp[1086702])
    }
    val tmp[1086756]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2036136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036138 'move' call_tmp[2036136](2036140 '<' call_tmp[2183546] 0))
    if call_tmp[2036136]
    {
      (1092298 'move' tmp[1086756](2271033 '.v' r[1085297] _high[1084511]))
    }
    {
      const-val tmp[1086789]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2063386]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2063388 'move' call_tmp[2063386](2063390 '-' call_tmp[2183546] 1))
      const-val coerce_tmp[1091352]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1091356 'move' coerce_tmp[1091352](2271043 '.v' r[1085297] _low[1084506]))
      (1086823 'move' tmp[1086789](1086826 call chpl__add[1090351] coerce_tmp[1091352] call_tmp[2063386]))
      (1086830 'move' tmp[1086756] tmp[1086789])
    }
    const-val call_tmp[1087235]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1091431]:range(int(64),bounded,false)[1023946] "dead after last mention" "delay instantiation" "temp"
    (1091434 call init[1091454] initTemp[1091431] tmp[1086669] tmp[1086756])
    (1087237 'move' call_tmp[1087235] initTemp[1091431])
    (1087257 'move' ret[1085301] call_tmp[1087235])
    label _end_chpl_count_help[1087267]
    (1786200 '=' _retArg[1786198] ret[1085301])
    (1786202 return _void[55])
  }
  function #[1084904](const in arg r[1084906]:range(int(64),boundedLow,false)[1084544], const in arg count[1084919]:int(64)[13], ref arg _retArg[1786186]:range(int(64),bounded,false)[1023946]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1085150]:range(int(64),bounded,false)[1023946] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1786192]:range(int(64),bounded,false)[1023946] "temp"
    (1085155 call chpl_count_help[1085295] r[1084906] count[1084919] ret_tmp[1786192])
    (1786195 'move' call_tmp[1085150] ret_tmp[1786192])
    (1786188 '=' _retArg[1786186] call_tmp[1085150])
    (1786190 return _void[55])
  }
  function chpl_checkIfRangeIterWillOverflow[972149](const in arg low[972153]:int(32)[95], const in arg high[972155]:int(32)[95], const in arg stride[972157]:int(64)[13], const in arg first[972163]:int(32)[95], const in arg last[972169]:int(32)[95], const in arg shouldHalt[972175]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2278019]:string[26] "temp"
    (2278020 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[972177]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2125700]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125702 'move' call_tmp[2125700](2125704 '>' low[972153] high[972155]))
    if call_tmp[2125700]
    {
      (972208 'move' ret[972177] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[972689] _end_chpl_checkIfRangeIterWillOverflow[972689]
    }
    val willOverFlow[972215]:bool[10] "dead at end of block" "insert auto destroy"
    (972217 'move' willOverFlow[972215] 0)
    const-val coerce_tmp[972797]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (972803 'move' coerce_tmp[972797](972799 'cast' int(32)[95] 0))
    const-val call_tmp[2125710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2125712 'move' call_tmp[2125710](2125714 '>' last[972169] coerce_tmp[972797]))
    val tmp[972258]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2125710]
    {
      const-val call_tmp[2042122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042124 'move' call_tmp[2042122](2042126 '>' stride[972157] 0))
      (972291 'move' tmp[972258] call_tmp[2042122])
    }
    {
      (972297 'move' tmp[972258] 0)
    }
    if tmp[972258]
    {
      const-val call_tmp[2126004]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2126006 'move' call_tmp[2126004](2126008 '-' 2147483647 last[972169]))
      const-val coerce_tmp[972957]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (972963 'move' coerce_tmp[972957](972959 'cast' int(64)[13] call_tmp[2126004]))
      const-val call_tmp[2042132]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042134 'move' call_tmp[2042132](2042136 '>' stride[972157] coerce_tmp[972957]))
      if call_tmp[2042132]
      {
        (2054254 '=' willOverFlow[972215] 1)
      }
    }
    {
      const-val coerce_tmp[972967]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (972973 'move' coerce_tmp[972967](972969 'cast' int(32)[95] 0))
      const-val call_tmp[2125630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2125632 'move' call_tmp[2125630](2125634 '<' last[972169] coerce_tmp[972967]))
      val tmp[972373]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2125630]
      {
        const-val call_tmp[2036086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2036088 'move' call_tmp[2036086](2036090 '<' stride[972157] 0))
        (972406 'move' tmp[972373] call_tmp[2036086])
      }
      {
        (972412 'move' tmp[972373] 0)
      }
      if tmp[972373]
      {
        const-val call_tmp[2126019]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2126021 'move' call_tmp[2126019](2126023 '-' -2147483648 last[972169]))
        const-val coerce_tmp[973585]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (973591 'move' coerce_tmp[973585](973587 'cast' int(64)[13] call_tmp[2126019]))
        const-val call_tmp[2046082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2046084 'move' call_tmp[2046082](2046086 '<' stride[972157] coerce_tmp[973585]))
        if call_tmp[2046082]
        {
          (2054271 '=' willOverFlow[972215] 1)
        }
      }
    }
    val tmp[972627]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[972215]
    {
      (972652 'move' tmp[972627] shouldHalt[972175])
    }
    {
      (972658 'move' tmp[972627] 0)
    }
    if tmp[972627]
    {
      (972676 call boundsCheckHalt[210084] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (972681 'move' ret[972177] willOverFlow[972215])
    label _end_chpl_checkIfRangeIterWillOverflow[972689]
    (972691 return ret[972177])
  }
  function chpl_checkIfRangeIterWillOverflow[1093055](const in arg low[1093059]:int(64)[13], const in arg high[1093061]:int(64)[13], const in arg stride[1093063]:int(64)[13], const in arg first[1093069]:int(64)[13], const in arg last[1093075]:int(64)[13], const in arg shouldHalt[1093081]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2278616]:string[26] "temp"
    (2278617 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1093083]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2042252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2042254 'move' call_tmp[2042252](2042256 '>' low[1093059] high[1093061]))
    if call_tmp[2042252]
    {
      (1093114 'move' ret[1093083] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1093595] _end_chpl_checkIfRangeIterWillOverflow[1093595]
    }
    val willOverFlow[1093121]:bool[10] "dead at end of block" "insert auto destroy"
    (1093123 'move' willOverFlow[1093121] 0)
    const-val call_tmp[2042267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2042269 'move' call_tmp[2042267](2042271 '>' last[1093075] 0))
    val tmp[1093164]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2042267]
    {
      const-val call_tmp[2042282]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042284 'move' call_tmp[2042282](2042286 '>' stride[1093063] 0))
      (1093197 'move' tmp[1093164] call_tmp[2042282])
    }
    {
      (1093203 'move' tmp[1093164] 0)
    }
    if tmp[1093164]
    {
      const-val call_tmp[2132479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2132481 'move' call_tmp[2132479](2132483 '-' 9223372036854775807 last[1093075]))
      const-val call_tmp[2042292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042294 'move' call_tmp[2042292](2042296 '>' stride[1093063] call_tmp[2132479]))
      if call_tmp[2042292]
      {
        (2054344 '=' willOverFlow[1093121] 1)
      }
    }
    {
      const-val call_tmp[2036146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2036148 'move' call_tmp[2036146](2036150 '<' last[1093075] 0))
      val tmp[1093279]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2036146]
      {
        const-val call_tmp[2036156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2036158 'move' call_tmp[2036156](2036160 '<' stride[1093063] 0))
        (1093312 'move' tmp[1093279] call_tmp[2036156])
      }
      {
        (1093318 'move' tmp[1093279] 0)
      }
      if tmp[1093279]
      {
        const-val call_tmp[2132449]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2132451 'move' call_tmp[2132449](2132453 '-' -9223372036854775808 last[1093075]))
        const-val call_tmp[2046172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2046174 'move' call_tmp[2046172](2046176 '<' stride[1093063] call_tmp[2132449]))
        if call_tmp[2046172]
        {
          (2054361 '=' willOverFlow[1093121] 1)
        }
      }
    }
    val tmp[1093533]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1093121]
    {
      (1093558 'move' tmp[1093533] shouldHalt[1093081])
    }
    {
      (1093564 'move' tmp[1093533] 0)
    }
    if tmp[1093533]
    {
      (1093582 call boundsCheckHalt[210084] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1093587 'move' ret[1093083] willOverFlow[1093121])
    label _end_chpl_checkIfRangeIterWillOverflow[1093595]
    (1093597 return ret[1093083])
  }
  function range(int(64),bounded,false)[1023946].checkIfIterWillOverflow[1092793](const in arg this[1092799]:range(int(64),bounded,false)[1023946], const in arg shouldHalt[1092805]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2176764]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2176766 'move' ret[2176764](2176768 '.v' this[1092799] _low[1023908]))
    val ret[2183658]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2183660 'move' ret[2183658](2183662 '.v' this[1092799] _high[1023913]))
    const-val call_tmp[1092863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1093599]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1093603 'move' coerce_tmp[1093599](2271052 '.v' this[1092799] _low[1023908]))
    const-val coerce_tmp[1093605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1093609 'move' coerce_tmp[1093605](2271059 '.v' this[1092799] _high[1023913]))
    (1092865 'move' call_tmp[1092863](1092868 call chpl_checkIfRangeIterWillOverflow[1093055] coerce_tmp[1093599] coerce_tmp[1093605] 1 ret[2176764] ret[2183658] shouldHalt[1092805]))
    (1092880 return call_tmp[1092863])
  }
  type _ic_chpl_direct_counted_range_iter[1100747] val super[1100748]:object[22] "super class" val more[1100750]:int(64)[13] const-val F0_low[1952071]:int(64)[13] const-val F1_count[1952075]:int(64)[13] val F2__iterator[1952079]:_ic_chpl_direct_counted_range_iter_helper[1100497] const F3_tmp[1952081]:2*int(64)[1037179] val F4__iterator[1952083]:_ic_chpl_direct_param_stride_range_iter[1100243] val F5_i[1952085]:int(64)[13] const-val F6_low[1952087]:int(64)[13] val value[1952089]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1100497] val super[1100498]:object[22] "super class" val more[1100500]:int(64)[13] const-val F0_low[1956543]:int(64)[13] const-val F1_count[1956547]:int(64)[13] const F2_tmp[1956551]:2*int(64)[1037179] val F3__iterator[1956553]:_ic_chpl_direct_param_stride_range_iter[1100243] val F4_i[1956555]:int(64)[13] const-val F5_low[1956557]:int(64)[13] val value[1956559]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1100243] val super[1100244]:object[22] "super class" val more[1100246]:int(64)[13] const-val F0_low[1958041]:int(64)[13] const-val F1_high[1958045]:int(64)[13] val value[1958049]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1093682].advance[1093708](const in arg this[1093710]:_ic_these_range_int64_t_bounded_F[1093682]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1956411]:int(64)[13]
    (1956439 'move' more[1956411](1956436 '.v' this[1093710] more[1093685]))
    const-val tmp[1956414]:bool[10] "temp"
    (1956421 'move' tmp[1956414](1956418 '==' more[1956411] 2))
    if tmp[1956414]
    {
      gotoIterResume _jump_2[1956403] _jump_2[1956403]
    }
    const-val tmp[1956426]:bool[10] "temp"
    (1956431 'move' tmp[1956426](1956428 '==' more[1956411] -2))
    if tmp[1956426]
    {
      gotoIterResume _jump_break_2[1956405] _jump_break_2[1956405]
    }
    const-val tmp[1955932]:range(int(64),bounded,false)[1023946] "temp"
    (1955937 'move' tmp[1955932](1955934 '.v' this[1093710] F0_this[1955920]))
    (1092609 call checkIfIterWillOverflow[1092793] tmp[1955932] 1)
    (1955941 '.=' this[1093710] F1_i[1955924] 0)
    ref tmp[1955945]:range(int(64),bounded,false)[1023946] "temp"
    (1955950 'move' tmp[1955945](1955947 '.' this[1093710] F0_this[1955920]))
    val tmp[1955952]:int(64)[13] "temp"
    (1093659 'move' tmp[1955952](2271069 '.v' tmp[1955945] _low[1023908]))
    (1955954 '.=' this[1093710] F3_coerce_tmp[1955928] tmp[1955952])
    (1092635 'noop')
    ref tmp[1955965]:range(int(64),bounded,false)[1023946] "temp"
    (1955970 'move' tmp[1955965](1955967 '.' this[1093710] F0_this[1955920]))
    const-val coerce_tmp[1093665]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1093669 'move' coerce_tmp[1093665](2271075 '.v' tmp[1955965] _high[1023913]))
    (1955974 '.=' this[1093710] F2_end[1955926] coerce_tmp[1093665])
    (1092649 'noop')
    CForLoop[1092653]
    {
      const-val tmp[1955991]:int(64)[13] "temp"
      (1955996 'move' tmp[1955991](1955993 '.v' this[1093710] F1_i[1955924]))
      (1955980 '.=' this[1093710] value[1955930] tmp[1955991])
      (1956397 '.=' this[1093710] more[1093685] 2)
      gotoIterEnd _end[1956395] _end[1956395]
      label _jump_break_2[1956405]
      gotoReturn _endthese[1766658] _endthese[1766658]
      label _jump_2[1956403]
      {
        const-val tmp[1956011]:int(64)[13] "temp"
        (1956016 'move' tmp[1956011](1956013 '.v' this[1093710] F3_coerce_tmp[1955928]))
        (1956007 '.=' this[1093710] F1_i[1955924] tmp[1956011])
      }
      {
        val tmp[1956018]:int(64)[13] "temp"
        (1956023 'move' tmp[1956018](1956020 '.v' this[1093710] F1_i[1955924]))
        const tmp[1956025]:int(64)[13] "temp"
        (1956030 'move' tmp[1956025](1956027 '.v' this[1093710] F2_end[1955926]))
        (1092662 '<=' tmp[1956018] tmp[1956025])
      }
      {
        val tmp[1956032]:int(64)[13] "temp"
        (1956037 'move' tmp[1956032](1956034 '.v' this[1093710] F1_i[1955924]))
        (1092693 '+=' tmp[1956032] 1)
        (1956039 '.=' this[1093710] F1_i[1955924] tmp[1956032])
      }
    }
    label _endthese[1766658]
    (1956407 '.=' this[1093710] more[1093685] 0)
    label _end[1956395]
    (1956442 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1093682] val super[1093683]:object[22] "super class" val more[1093685]:int(64)[13] const-val F0_this[1955920]:range(int(64),bounded,false)[1023946] val F1_i[1955924]:int(64)[13] const F2_end[1955926]:int(64)[13] val F3_coerce_tmp[1955928]:int(64)[13] val value[1955930]:int(64)[13]
  function _cast[1051497](const in arg x[1051501]:range(byteIndex,bounded,false)[1022924], ref arg _retArg[1785448]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2278255]:string[26] "temp"
    (2278256 'move' ".." "..")
    const-val ret[1051503]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1051511]:string[26] "dead at end of block" "insert auto destroy"
    (1081687 call init[30760] ret[1051511])
    const-val call_tmp[1051535]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2176074]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2176076 'move' coerce_tmp[2176074](2176078 '.v' x[1051501] _low[1022886]))
    const-val ret[2176081]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2176083]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2176086 call init[28097] cpi[2176083])
    (2176088 '.=' cpi[2176083] _bindex[28091] coerce_tmp[2176074])
    (2176092 'move' ret[2176081] cpi[2176083])
    (1785243 'move' call_tmp[1051535] ret[2176081])
    const-val call_tmp[1051543]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785454]:string[26] "temp"
    (1051548 call _cast[1051780] call_tmp[1051535] ret_tmp[1785454])
    (1785457 'move' call_tmp[1051543] ret_tmp[1785454])
    (1051552 call +=[38797] ret[1051511] call_tmp[1051543])
    ref i_x[2050468]:string[26] "temp"
    (2050472 'move' i_x[2050468](2050470 'set reference' call_tmp[1051543]))
    (2050476 call deinit[30831] i_x[2050468])
    (1051559 call +=[38797] ret[1051511] "..")
    const-val call_tmp[1051582]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2176149]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2176151 'move' coerce_tmp[2176149](2176153 '.v' x[1051501] _high[1022891]))
    const-val ret[2176156]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2176158]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2176161 call init[28097] cpi[2176158])
    (2176163 '.=' cpi[2176158] _bindex[28091] coerce_tmp[2176149])
    (2176167 'move' ret[2176156] cpi[2176158])
    (1785279 'move' call_tmp[1051582] ret[2176156])
    const-val call_tmp[1051590]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785460]:string[26] "temp"
    (1051595 call _cast[1051780] call_tmp[1051582] ret_tmp[1785460])
    (1785463 'move' call_tmp[1051590] ret_tmp[1785460])
    (1051599 call +=[38797] ret[1051511] call_tmp[1051590])
    ref i_x[2050480]:string[26] "temp"
    (2050484 'move' i_x[2050480](2050482 'set reference' call_tmp[1051590]))
    (2050488 call deinit[30831] i_x[2050480])
    const-val alignCheckRange[1051661]:range(byteIndex,bounded,false)[1022924] "dead at end of block" "insert auto destroy"
    (1051663 'move' alignCheckRange[1051661] x[1051501])
    (1051671 call normalizeAlignment[1080585] alignCheckRange[1051661])
    (1051753 'move' ret[1051503] ret[1051511])
    label _end__cast[1051761]
    (1785450 '=' _retArg[1785448] ret[1051503])
    (1785452 return _void[55])
  }
  function _cast[1116385](const in arg x[1116389]:range(int(64),bounded,false)[1023946], ref arg _retArg[1786491]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2278719]:string[26] "temp"
    (2278720 'move' ".." "..")
    const-val ret[1116391]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1116399]:string[26] "dead at end of block" "insert auto destroy"
    (1117692 call init[30760] ret[1116399])
    const-val coerce_tmp[2175347]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2175349 'move' coerce_tmp[2175347](2175351 '.v' x[1116389] _low[1023908]))
    const-val call_tmp[1116431]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785598]:string[26] "temp"
    (1116436 call _cast[1060220] coerce_tmp[2175347] ret_tmp[1785598])
    (1785601 'move' call_tmp[1116431] ret_tmp[1785598])
    (1116440 call +=[38797] ret[1116399] call_tmp[1116431])
    ref i_x[2050996]:string[26] "temp"
    (2051000 'move' i_x[2050996](2050998 'set reference' call_tmp[1116431]))
    (2051004 call deinit[30831] i_x[2050996])
    (1116447 call +=[38797] ret[1116399] "..")
    const-val coerce_tmp[2175557]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2175559 'move' coerce_tmp[2175557](2175561 '.v' x[1116389] _high[1023913]))
    const-val call_tmp[1116478]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785604]:string[26] "temp"
    (1116483 call _cast[1060220] coerce_tmp[2175557] ret_tmp[1785604])
    (1785607 'move' call_tmp[1116478] ret_tmp[1785604])
    (1116487 call +=[38797] ret[1116399] call_tmp[1116478])
    ref i_x[2051008]:string[26] "temp"
    (2051012 'move' i_x[2051008](2051010 'set reference' call_tmp[1116478]))
    (2051016 call deinit[30831] i_x[2051008])
    const-val alignCheckRange[1116549]:range(int(64),bounded,false)[1023946] "dead at end of block" "insert auto destroy"
    (1116551 'move' alignCheckRange[1116549] x[1116389])
    (1116559 call normalizeAlignment[1116688] alignCheckRange[1116549])
    (1116641 'move' ret[1116391] ret[1116399])
    label _end__cast[1116649]
    (1786493 '=' _retArg[1786491] ret[1116391])
    (1786495 return _void[55])
  }
  function _cast[1132894](const in arg x[1132898]:range(int(64),boundedLow,false)[1084544], ref arg _retArg[1786779]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2278776]:string[26] "temp"
    (2278777 'move' " align " " align ")
    const-val local__str_literal_1075[2278770]:string[26] "temp"
    (2278771 'move' ".." "..")
    const-val ret[1132900]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1132908]:string[26] "dead at end of block" "insert auto destroy"
    (1135732 call init[30760] ret[1132908])
    const-val coerce_tmp[2184764]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2184766 'move' coerce_tmp[2184764](2184768 '.v' x[1132898] _low[1084506]))
    const-val call_tmp[1132940]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785616]:string[26] "temp"
    (1132945 call _cast[1060220] coerce_tmp[2184764] ret_tmp[1785616])
    (1785619 'move' call_tmp[1132940] ret_tmp[1785616])
    (1132949 call +=[38797] ret[1132908] call_tmp[1132940])
    ref i_x[2051068]:string[26] "temp"
    (2051072 'move' i_x[2051068](2051070 'set reference' call_tmp[1132940]))
    (2051076 call deinit[30831] i_x[2051068])
    (1132956 call +=[38797] ret[1132908] "..")
    const-val alignCheckRange[1133058]:range(int(64),boundedLow,false)[1084544] "dead at end of block" "insert auto destroy"
    (1133060 'move' alignCheckRange[1133058] x[1132898])
    (1133068 call normalizeAlignment[1133194] alignCheckRange[1133058])
    val ret[2185140]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2185142 'move' ret[2185140](2185144 '.v' alignCheckRange[1133058] _low[1084506]))
    const-val coerce_tmp[2185147]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185149 'move' coerce_tmp[2185147](2185151 '.v' alignCheckRange[1133058] _low[1084506]))
    const-val call_tmp[2185154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2185156 'move' call_tmp[2185154](2185158 '==' ret[2185140] coerce_tmp[2185147]))
    const-val call_tmp[2034742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034744 'move' call_tmp[2034742](2034746 '!' call_tmp[2185154]))
    if call_tmp[2034742]
    {
      const-val call_tmp[1133096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1133098 'move' call_tmp[1133096](1133101 call alignment[1125054] x[1132898]))
      const-val call_tmp[1133119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1133121 'move' call_tmp[1133119](1133124 call chpl__mod[1134350] call_tmp[1133096] 1))
      const-val call_tmp[1133127]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785622]:string[26] "temp"
      (1133132 call _cast[1060220] call_tmp[1133119] ret_tmp[1785622])
      (1785625 'move' call_tmp[1133127] ret_tmp[1785622])
      const-val call_tmp[1133135]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782644]:string[26] "temp"
      (1133140 call +[38342] " align " call_tmp[1133127] ret_tmp[1782644])
      (1782647 'move' call_tmp[1133135] ret_tmp[1782644])
      (1133144 call +=[38797] ret[1132908] call_tmp[1133135])
      ref i_x[2051080]:string[26] "temp"
      (2051084 'move' i_x[2051080](2051082 'set reference' call_tmp[1133135]))
      (2051088 call deinit[30831] i_x[2051080])
      ref i_x[2051092]:string[26] "temp"
      (2051096 'move' i_x[2051092](2051094 'set reference' call_tmp[1133127]))
      (2051100 call deinit[30831] i_x[2051092])
    }
    (1133150 'move' ret[1132900] ret[1132908])
    label _end__cast[1133158]
    (1786781 '=' _retArg[1786779] ret[1132900])
    (1786783 return _void[55])
  }
  function _cast[1151358](const in arg x[1151362]:range(byteIndex,boundedLow,false)[1140337], ref arg _retArg[1787061]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2278818]:string[26] "temp"
    (2278819 'move' " align " " align ")
    const-val local__str_literal_1075[2278812]:string[26] "temp"
    (2278813 'move' ".." "..")
    const-val ret[1151364]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1151372]:string[26] "dead at end of block" "insert auto destroy"
    (1153053 call init[30760] ret[1151372])
    const-val call_tmp[1151396]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2185473]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185475 'move' coerce_tmp[2185473](2185477 '.v' x[1151362] _low[1140299]))
    const-val ret[2185480]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2185482]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2185485 call init[28097] cpi[2185482])
    (2185487 '.=' cpi[2185482] _bindex[28091] coerce_tmp[2185473])
    (2185491 'move' ret[2185480] cpi[2185482])
    (1786970 'move' call_tmp[1151396] ret[2185480])
    const-val call_tmp[1151404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785466]:string[26] "temp"
    (1151409 call _cast[1051780] call_tmp[1151396] ret_tmp[1785466])
    (1785469 'move' call_tmp[1151404] ret_tmp[1785466])
    (1151413 call +=[38797] ret[1151372] call_tmp[1151404])
    ref i_x[2051152]:string[26] "temp"
    (2051156 'move' i_x[2051152](2051154 'set reference' call_tmp[1151404]))
    (2051160 call deinit[30831] i_x[2051152])
    (1151420 call +=[38797] ret[1151372] "..")
    const-val alignCheckRange[1151522]:range(byteIndex,boundedLow,false)[1140337] "dead at end of block" "insert auto destroy"
    (1151524 'move' alignCheckRange[1151522] x[1151362])
    (1151532 call normalizeAlignment[1151893] alignCheckRange[1151522])
    val ret[2185644]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2185646 'move' ret[2185644](2185648 '.v' alignCheckRange[1151522] _low[1140299]))
    const-val coerce_tmp[2185651]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2185653 'move' coerce_tmp[2185651](2185655 '.v' alignCheckRange[1151522] _low[1140299]))
    const-val call_tmp[2185658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2185660 'move' call_tmp[2185658](2185662 '==' ret[2185644] coerce_tmp[2185651]))
    const-val call_tmp[2034769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2034771 'move' call_tmp[2034769](2034773 '!' call_tmp[2185658]))
    if call_tmp[2034769]
    {
      const-val call_tmp[1151560]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787043]:byteIndex[28170] "temp"
      (1151565 call alignment[1145172] x[1151362] ret_tmp[1787043])
      (1787046 'move' call_tmp[1151560] ret_tmp[1787043])
      val ret[2175745]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2175747 'move' ret[2175745](2175749 '.v' call_tmp[1151560] _bindex[28091]))
      const-val call_tmp[1151583]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1151585 'move' call_tmp[1151583](1151588 call chpl__mod[1134350] ret[2175745] 1))
      const-val call_tmp[1151591]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1785634]:string[26] "temp"
      (1151596 call _cast[1060220] call_tmp[1151583] ret_tmp[1785634])
      (1785637 'move' call_tmp[1151591] ret_tmp[1785634])
      const-val call_tmp[1151599]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782656]:string[26] "temp"
      (1151604 call +[38342] " align " call_tmp[1151591] ret_tmp[1782656])
      (1782659 'move' call_tmp[1151599] ret_tmp[1782656])
      (1151608 call +=[38797] ret[1151372] call_tmp[1151599])
      ref i_x[2051164]:string[26] "temp"
      (2051168 'move' i_x[2051164](2051166 'set reference' call_tmp[1151599]))
      (2051172 call deinit[30831] i_x[2051164])
      ref i_x[2051176]:string[26] "temp"
      (2051180 'move' i_x[2051176](2051178 'set reference' call_tmp[1151591]))
      (2051184 call deinit[30831] i_x[2051176])
    }
    (1151614 'move' ret[1151364] ret[1151372])
    label _end__cast[1151622]
    (1787063 '=' _retArg[1787061] ret[1151364])
    (1787065 return _void[55])
  }
  function _cast[1195497](const in arg x[1195501]:range(byteIndex,boundedHigh,false)[1181785], ref arg _retArg[1787383]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2279006]:string[26] "temp"
    (2279007 'move' " align " " align ")
    const-val local__str_literal_1075[2279000]:string[26] "temp"
    (2279001 'move' ".." "..")
    const-val ret[1195503]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1195511]:string[26] "dead at end of block" "insert auto destroy"
    (1197044 call init[30760] ret[1195511])
    (1195559 call +=[38797] ret[1195511] "..")
    const-val call_tmp[1195582]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2190876]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2190878 'move' coerce_tmp[2190876](2190880 '.v' x[1195501] _high[1181752]))
    const-val ret[2190883]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2190885]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2190888 call init[28097] cpi[2190885])
    (2190890 '.=' cpi[2190885] _bindex[28091] coerce_tmp[2190876])
    (2190894 'move' ret[2190883] cpi[2190885])
    (1787322 'move' call_tmp[1195582] ret[2190883])
    const-val call_tmp[1195590]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785472]:string[26] "temp"
    (1195595 call _cast[1051780] call_tmp[1195582] ret_tmp[1785472])
    (1785475 'move' call_tmp[1195590] ret_tmp[1785472])
    (1195599 call +=[38797] ret[1195511] call_tmp[1195590])
    ref i_x[2051548]:string[26] "temp"
    (2051552 'move' i_x[2051548](2051550 'set reference' call_tmp[1195590]))
    (2051556 call deinit[30831] i_x[2051548])
    const-val alignCheckRange[1195661]:range(byteIndex,boundedHigh,false)[1181785] "dead at end of block" "insert auto destroy"
    (1195663 'move' alignCheckRange[1195661] x[1195501])
    (1195671 call normalizeAlignment[1196032] alignCheckRange[1195661])
    const-val call_tmp[1195699]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787365]:byteIndex[28170] "temp"
    (1195704 call alignment[1189527] x[1195501] ret_tmp[1787365])
    (1787368 'move' call_tmp[1195699] ret_tmp[1787365])
    val ret[2175817]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2175819 'move' ret[2175817](2175821 '.v' call_tmp[1195699] _bindex[28091]))
    const-val call_tmp[1195722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1195724 'move' call_tmp[1195722](1195727 call chpl__mod[1134350] ret[2175817] 1))
    const-val call_tmp[1195730]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785646]:string[26] "temp"
    (1195735 call _cast[1060220] call_tmp[1195722] ret_tmp[1785646])
    (1785649 'move' call_tmp[1195730] ret_tmp[1785646])
    const-val call_tmp[1195738]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782704]:string[26] "temp"
    (1195743 call +[38342] " align " call_tmp[1195730] ret_tmp[1782704])
    (1782707 'move' call_tmp[1195738] ret_tmp[1782704])
    (1195747 call +=[38797] ret[1195511] call_tmp[1195738])
    ref i_x[2051560]:string[26] "temp"
    (2051564 'move' i_x[2051560](2051562 'set reference' call_tmp[1195738]))
    (2051568 call deinit[30831] i_x[2051560])
    ref i_x[2051572]:string[26] "temp"
    (2051576 'move' i_x[2051572](2051574 'set reference' call_tmp[1195730]))
    (2051580 call deinit[30831] i_x[2051572])
    (1195753 'move' ret[1195503] ret[1195511])
    label _end__cast[1195761]
    (1787385 '=' _retArg[1787383] ret[1195503])
    (1787387 return _void[55])
  }
  function range(byteIndex,bounded,false)[1022924].normalizeAlignment[1080585](ref arg this[1080591]:range(byteIndex,bounded,false)[1022924]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1080871 return _void[55])
  }
  function range(int(64),bounded,false)[1023946].normalizeAlignment[1116688](ref arg this[1116694]:range(int(64),bounded,false)[1023946]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1116974 return _void[55])
  }
  function range(int(64),boundedLow,false)[1084544].normalizeAlignment[1133194](ref arg this[1133200]:range(int(64),boundedLow,false)[1084544]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1133480 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1140337].normalizeAlignment[1151893](ref arg this[1151899]:range(byteIndex,boundedLow,false)[1140337]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1152179 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1181785].normalizeAlignment[1196032](ref arg this[1196038]:range(byteIndex,boundedHigh,false)[1181785]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1196318 return _void[55])
  }
  function chpl__mod[1134350](const in arg dividend[1134352]:int(64)[13], const in arg modulus[1134354]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_76[2278782]:string[26] "temp"
    (2278783 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1134356]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2126848]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2126850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126852 'move' call_tmp[2126850](2126854 '<' modulus[1134354] 0))
    if call_tmp[2126850]
    {
      const-val call_tmp[2126859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2126861 'move' call_tmp[2126859](2126863 'u-' modulus[1134354]))
      (2126865 'move' tmp[2126848] call_tmp[2126859])
    }
    {
      (2126869 'move' tmp[2126848] modulus[1134354])
    }
    const-val call_tmp[2126467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126469 'move' call_tmp[2126467](2126471 '==' tmp[2126848] 0))
    if call_tmp[2126467]
    {
      (2126477 call halt[154071] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[2126480]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126482 'move' call_tmp[2126480](2126484 '%' dividend[1134352] tmp[2126848]))
    val tmp[1134403]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1134405 'move' tmp[1134403] call_tmp[2126480])
    const-val call_tmp[2036186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036188 'move' call_tmp[2036186](2036190 '<' call_tmp[2126480] 0))
    if call_tmp[2036186]
    {
      ref i_lhs[2090268]:int(64)[13] "temp"
      (2090272 'move' i_lhs[2090268](2090270 'set reference' tmp[1134403]))
      (2090275 '+=' i_lhs[2090268] tmp[2126848])
    }
    (1134452 'move' ret[1134356] tmp[1134403])
    label _end_chpl__mod[1134460]
    (1134462 return ret[1134356])
  }
  function chpl__add[1090351](const in arg a[1090353]:int(64)[13], const in arg b[1090358]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1090362]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2042217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2042219 'move' call_tmp[2042217](2042221 '>' a[1090353] 0))
    val tmp[1090428]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2042217]
    {
      const-val call_tmp[2042232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042234 'move' call_tmp[2042232](2042236 '>' b[1090358] 0))
      (1090461 'move' tmp[1090428] call_tmp[2042232])
    }
    {
      (1090467 'move' tmp[1090428] 0)
    }
    val tmp[1090489]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1090428]
    {
      const-val call_tmp[2132469]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2132471 'move' call_tmp[2132469](2132473 '-' 9223372036854775807 a[1090353]))
      const-val call_tmp[2042242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2042244 'move' call_tmp[2042242](2042246 '>' b[1090358] call_tmp[2132469]))
      (1090543 'move' tmp[1090489] call_tmp[2042242])
    }
    {
      (1090549 'move' tmp[1090489] 0)
    }
    if tmp[1090489]
    {
      (1090571 'move' ret[1090362] 9223372036854775807)
      gotoReturn _end_chpl__add[1091295] _end_chpl__add[1091295]
    }
    const-val call_tmp[2036116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2036118 'move' call_tmp[2036116](2036120 '<' a[1090353] 0))
    val tmp[1090601]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2036116]
    {
      const-val call_tmp[2036126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2036128 'move' call_tmp[2036126](2036130 '<' b[1090358] 0))
      (1090634 'move' tmp[1090601] call_tmp[2036126])
    }
    {
      (1090640 'move' tmp[1090601] 0)
    }
    val tmp[1090662]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1090601]
    {
      const-val call_tmp[2132439]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2132441 'move' call_tmp[2132439](2132443 '-' -9223372036854775808 a[1090353]))
      const-val call_tmp[2046162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2046164 'move' call_tmp[2046162](2046166 '<' b[1090358] call_tmp[2132439]))
      (1090716 'move' tmp[1090662] call_tmp[2046162])
    }
    {
      (1090722 'move' tmp[1090662] 0)
    }
    if tmp[1090662]
    {
      (1090744 'move' ret[1090362] -9223372036854775808)
      gotoReturn _end_chpl__add[1091295] _end_chpl__add[1091295]
    }
    const-val call_tmp[2043840]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2043842 'move' call_tmp[2043840](2043844 '+' a[1090353] b[1090358]))
    (1091291 'move' ret[1090362] call_tmp[2043840])
    label _end_chpl__add[1091295]
    (1091297 return ret[1090362])
  }
  function chpl__addRangeStrides[1101984](const in arg start[1101986]:int(64)[13], const in arg stride[1101988]:int(64)[13], const in arg count[1101990]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1102454]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1102456 'move' call_tmp[1102454](1102459 call mul[1102492] stride[1101988] count[1101990]))
    const-val call_tmp[1102462]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1102464 'move' call_tmp[1102462](1102467 call add[1102879] start[1101986] call_tmp[1102454]))
    (1102489 return call_tmp[1102462])
  }
  function absSameType[1087821](const in arg str[1087823]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1087911]
    (1087913 return 1)
  }
  function mul[1102492](const in arg a[1102494]:int(64)[13], const in arg b[1102496]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2126319]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2126321 'move' call_tmp[2126319](2126323 '*' a[1102494] b[1102496]))
    (1102589 return call_tmp[2126319])
  }
  function add[1102879](const in arg a[1102881]:int(64)[13], const in arg b[1102883]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2043940]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2043942 'move' call_tmp[2043940](2043944 '+' a[1102881] b[1102883]))
    (1102976 return call_tmp[2043940])
  }
}