AST dump for LocaleTree after pass prune.
Module use list: ChapelLocale 

{
  type _class_localson_fn[2051729] val _runtime_hdr[2051730]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051732]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2051734]:BaseLocale[91204] val _2_rvfDerefTmp[2051736]:BaseLocale[91204]
  function chpl__init_LocaleTree[416031]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val ret_tmp[1811234]:locale[28] "temp"
    (1353775 call init_default_left[1353750] ret_tmp[1811234])
    (1811237 'move' default_arg_left[1353773] ret_tmp[1811234])
    const-val ret_tmp[1811246]:locale[28] "temp"
    (1353806 call init_default_right[1353781] ret_tmp[1811246])
    (1811249 'move' default_arg_right[1353804] ret_tmp[1811246])
    (1353741 call init[808465] chpl_localeTree[155232] default_arg_left[1353773] default_arg_right[1353804])
    (155403 call chpl_initLocaleTree[155238])
    (520703 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967779].left[808413](ref arg this[808417]:_ref(chpl_localeTreeRecord)[967779]) ref : _ref(locale)[948863] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808427]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    ref call_tmp[808434]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    (808437 'move' call_tmp[808434](808421 '.' this[808417] left[155217]))
    (808432 'move' ret[808427] call_tmp[808434])
    (808429 return ret[808427])
  }
  function _ref(chpl_localeTreeRecord)[967779].right[808439](ref arg this[808443]:_ref(chpl_localeTreeRecord)[967779]) ref : _ref(locale)[948863] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[808453]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    ref call_tmp[808460]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    (808463 'move' call_tmp[808460](808447 '.' this[808443] right[155221]))
    (808458 'move' ret[808453] call_tmp[808460])
    (808455 return ret[808453])
  }
  function _ref(chpl_localeTreeRecord)[967779].init[808465](ref arg this[808468]:_ref(chpl_localeTreeRecord)[967779], const  ref arg left[808471]:locale[28], const  ref arg right[808484]:locale[28]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_left[1353818]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353822 'move' _formal_tmp_left[1353818] left[808471])
    val _formal_tmp_right[1353819]:locale[28] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1353826 'move' _formal_tmp_right[1353819] right[808484])
    (808499 '.=' this[808468] left[155217] _formal_tmp_left[1353818])
    (808502 '.=' this[808468] right[155221] _formal_tmp_right[1353819])
    (808506 return _void[55])
  }
  function init_default_right[1353781](ref arg _retArg[1811252]:_ref(locale)[948863]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353783]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val right[1353788]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353799 call init[90003] right[1353788])
    (1353795 'move' ret[1353783] right[1353788])
    (1811254 '=' _retArg[1811252] ret[1353783])
    (1811256 return _void[55])
  }
  function init_default_left[1353750](ref arg _retArg[1811240]:_ref(locale)[948863]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[1353752]:locale[28] "dead after last mention" "RVV" "maybe param" "temp"
    const-val left[1353757]:locale[28] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (1353768 call init[90003] left[1353757])
    (1353764 'move' ret[1353752] left[1353757])
    (1811242 '=' _retArg[1811240] ret[1353752])
    (1811244 return _void[55])
  }
  function _ref(chpl_localeTreeRecord)[967779].deinit[808588](const  ref arg this[808592]:_ref(chpl_localeTreeRecord)[967779]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1788236]
    ref _field_destructor_tmp_[1788234]:_ref(locale)[948863] "temp"
    (1788241 'move' _field_destructor_tmp_[1788234](1788238 '.' this[808592] right[155221]))
    (1788243 call deinit[90188] _field_destructor_tmp_[1788234])
    ref _field_destructor_tmp_[1788246]:_ref(locale)[948863] "temp"
    (1788251 'move' _field_destructor_tmp_[1788246](1788248 '.' this[808592] left[155217]))
    (1788253 call deinit[90188] _field_destructor_tmp_[1788246])
    (808600 return _void[55])
  }
  type chpl_localeTreeRecord[155228] val left[155217]:locale[28] val right[155221]:locale[28]
  val chpl_localeTree[155232]:chpl_localeTreeRecord[155228] "dead at end of block" "insert auto destroy" "locale private"
  function chpl_initLocaleTree[155238]() : void[4] "resolved" "no return value for void"
  {
    {
      val _indexOfInterest[155365]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[155366]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] "dead at end of block" "expr temp" "temp"
      (155375 'move' _iterator[155366](155373 call _getIterator[1305979] LocaleSpace[113670]))
      {
        val ret[1874182]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314808] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1874184]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1874186]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306733] "dead at end of block" "expr temp" "temp"
        val call_tmp[1874188]:domain(1,int(64),false)[1250953] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val this[1874547]:domain(1,int(64),false)[1252616] "temp"
        (1874552 'move' this[1874547](1874549 '.v' _iterator[155366] F0_this[1994517]))
        (1874190 'move' call_tmp[1874188](1874193 call _value[1252857] this[1874547]))
        const-val call_tmp[1874195]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306739] "dead at end of block" "expr temp" "maybe param" "temp"
        val coerce_tmp[1874197]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1874199 'move' coerce_tmp[1874197] call_tmp[1874188])
        const-val default_arg_tasksPerLocale[1874202]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1874204 'move' default_arg_tasksPerLocale[1874202](1874207 call these_default_tasksPerLocale[1306543] call_tmp[1874188]))
        const-val default_arg_ignoreRunning[1874209]:bool[10] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1874211 'move' default_arg_ignoreRunning[1874209](1874214 call these_default_ignoreRunning[1306574] coerce_tmp[1874197]))
        const-val default_arg_minIndicesPerTask[1874216]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1874218 'move' default_arg_minIndicesPerTask[1874216](1874221 call these_default_minIndicesPerTask[1306605] coerce_tmp[1874197]))
        const-val default_arg_offset[1874223]:1*int(64)[1256544] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        const-val ret_tmp[1874225]:1*int(64)[1256544] "temp"
        (1874228 call these_default_offset[1306636] coerce_tmp[1874197] ret_tmp[1874225])
        (1874231 'move' default_arg_offset[1874223] ret_tmp[1874225])
        const-val ret_tmp[1874234]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306739] "temp"
        (1874237 call these[1306110] coerce_tmp[1874197] default_arg_tasksPerLocale[1874202] default_arg_ignoreRunning[1874209] default_arg_minIndicesPerTask[1874216] default_arg_offset[1874223] ret_tmp[1874234])
        (1874244 'move' call_tmp[1874195] ret_tmp[1874234])
        (1874247 'move' _iterator[1874186](1874250 call _getIterator[1306748] call_tmp[1874195]))
        {
          val ret[1931772]:_ir_these_DefaultRectangularDom_1_int64_t_F[1306739] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1931774]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1931776]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1931778]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
          ref _this_tmp_[1931780]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
          const-val this[1932219]:domain(1,int(64),false)[1250953] "temp"
          (1932224 'move' this[1932219](1932221 '.v' _iterator[1874186] F0_this[1995738]))
          (1931782 'move' _this_tmp_[1931780](1931785 call ranges[1251363] this[1932219]))
          (1931787 'move' call_tmp[1931778](1931789 '.' _this_tmp_[1931780] x0[1244713]))
          (1931792 'move' _iterator[1931776](1931795 call _getIterator[1095339] call_tmp[1931778]))
          {
            val ret[1931798]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1931800]:bool[10] "dead after last mention" "temp"
            const-val this[1931802]:range(int(64),bounded,false)[1026833] "temp"
            (1931804 'move' this[1931802](1931806 '.v' _iterator[1931776] F0_this[1980749]))
            (1931809 'move' _return_tmp_[1931800](1931812 call checkIfIterWillOverflow[1095833] this[1931802] 1))
            val i[1931815]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1931817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1931819 'move' i[1931815] 0)
            ref call_tmp[1931822]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1931824]:range(int(64),bounded,false)[1026833] "temp"
            (1931826 'move' this[1931824](1931828 '.v' _iterator[1931776] F0_this[1980749]))
            (1931831 'move' call_tmp[1931822](1931834 call _low[1028471] this[1931824]))
            const-val start[1931836]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1931838]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1931840 'move' coerce_tmp[1931838](1931842 'deref' call_tmp[1931822]))
            (1931844 '=' start[1931836] coerce_tmp[1931838])
            (1931847 'noop')
            ref call_tmp[1931848]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1931850]:range(int(64),bounded,false)[1026833] "temp"
            (1931852 'move' this[1931850](1931854 '.v' _iterator[1931776] F0_this[1980749]))
            (1931857 'move' call_tmp[1931848](1931860 call _high[1028679] this[1931850]))
            const end[1931862]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1931864]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1931866 'move' coerce_tmp[1931864](1931868 'deref' call_tmp[1931848]))
            (1931870 '=' end[1931862] coerce_tmp[1931864])
            (1931873 'noop')
            CForLoop[1931874] hazard
            {
              const-val yret[1931889]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1931891]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1931893]:range(int(64),bounded,false)[1026833] "temp"
              (1931895 'move' this[1931893](1931897 '.v' _iterator[1931776] F0_this[1980749]))
              (1931900 'move' call_tmp[1931891](1931903 call chpl_intToIdx[1028499] this[1931893] i[1931815]))
              (1931906 'move' yret[1931889] call_tmp[1931891])
              const-val _yieldedIndex[1931909]:int(64)[13] "temp"
              (1931911 'move' _yieldedIndex[1931909] call_tmp[1931891])
              {
                const-val i[1931915]:int(64)[13] "const" "index var" "insert auto destroy"
                (1931917 'move' i[1931915] _yieldedIndex[1931909])
                const-val yret[1931920]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1931922 'move' yret[1931920] _yieldedIndex[1931909])
                const-val _yieldedIndex[1931944]:int(64)[13] "temp"
                (1932217 'move' _yieldedIndex[1931944] _yieldedIndex[1931909])
                {
                  const-val i[1931946]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1931948 'move' i[1931946] _yieldedIndex[1931944])
                  const-val yret[1931951]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1931953 'move' yret[1931951] _yieldedIndex[1931944])
                  const-val _yieldedIndex[1931956]:int(64)[13] "temp"
                  (1931958 'move' _yieldedIndex[1931956] _yieldedIndex[1931944])
                  {
                    const i[1931962]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1931964 'move' i[1931962] _yieldedIndex[1931956])
                    {
                      val left[1931968]:BaseLocale[91204] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[1931970]:BaseLocale[91204] "dead at end of block" "temp"
                      (1931972 'move' init_coerce_tmp[1931970](1931974 'cast' BaseLocale[91204] nil[44]))
                      (1931977 'move' left[1931968] init_coerce_tmp[1931970])
                      val right[1931980]:BaseLocale[91204] "dead at end of block" "insert auto destroy"
                      val init_coerce_tmp[1931982]:BaseLocale[91204] "dead at end of block" "temp"
                      (1931984 'move' init_coerce_tmp[1931982](1931986 'cast' BaseLocale[91204] nil[44]))
                      (1931989 'move' right[1931980] init_coerce_tmp[1931982])
                      const-val call_tmp[1931992]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1931994 'move' call_tmp[1931992](1931997 call +[949685] i[1931962]))
                      const-val call_tmp[1931999]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1932001 'move' call_tmp[1931999](1932004 call *[942025] call_tmp[1931992]))
                      const-val call_tmp[1932006]:int(64)[13] "dead at end of block" "maybe param" "temp"
                      (1932008 'move' call_tmp[1932006](1932011 call -[962245] call_tmp[1931999]))
                      val child[1932013]:int(64)[13] "dead at end of block" "insert auto destroy"
                      (1932015 'move' child[1932013] call_tmp[1932006])
                      const-val call_tmp[1932018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1932020 'move' call_tmp[1932018](1932023 call <[437490] child[1932013] numLocales[209892]))
                      const-val call_tmp[1932026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1932028 'move' call_tmp[1932026] call_tmp[1932018])
                      if call_tmp[1932026]
                      {
                        val call_tmp[1932033]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        val _chpl_forward_tgt[1932035]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                        (1932037 'move' _chpl_forward_tgt[1932035](1932040 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                        val coerce_tmp[1932042]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1932044 'move' coerce_tmp[1932042] _chpl_forward_tgt[1932035])
                        val _virtual_method_tmp_[1932047]:int(32)[95] "temp"
                        (1932049 'move' _virtual_method_tmp_[1932047](1932051 'getcid' coerce_tmp[1932042]))
                        val ret_tmp[1932053]:locale[28] "temp"
                        (1932055 'virtual method call' getChild[91189] _virtual_method_tmp_[1932047] coerce_tmp[1932042] child[1932013] ret_tmp[1932053])
                        (1932061 'move' call_tmp[1932033] ret_tmp[1932053])
                        ref call_tmp[1932064]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
                        (1932066 'move' call_tmp[1932064](1932069 call _instance[782774] call_tmp[1932033]))
                        val coerce_tmp[1932071]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1932073 'move' coerce_tmp[1932071](1932075 'deref' call_tmp[1932064]))
                        (1932078 call =[986499] left[1931968] coerce_tmp[1932071])
                        (1932082 call chpl__autoDestroy[1435384] call_tmp[1932033])
                        (1932085 call +=[451353] child[1932013] 1)
                        const-val call_tmp[1932088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1932090 'move' call_tmp[1932088](1932093 call <[437490] child[1932013] numLocales[209892]))
                        const-val call_tmp[1932096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1932098 'move' call_tmp[1932096] call_tmp[1932088])
                        if call_tmp[1932096]
                        {
                          val call_tmp[1932103]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                          val _chpl_forward_tgt[1932105]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                          (1932107 'move' _chpl_forward_tgt[1932105](1932110 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                          val coerce_tmp[1932112]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1932114 'move' coerce_tmp[1932112] _chpl_forward_tgt[1932105])
                          val _virtual_method_tmp_[1932117]:int(32)[95] "temp"
                          (1932119 'move' _virtual_method_tmp_[1932117](1932121 'getcid' coerce_tmp[1932112]))
                          val ret_tmp[1932123]:locale[28] "temp"
                          (1932125 'virtual method call' getChild[91189] _virtual_method_tmp_[1932117] coerce_tmp[1932112] child[1932013] ret_tmp[1932123])
                          (1932131 'move' call_tmp[1932103] ret_tmp[1932123])
                          ref call_tmp[1932134]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
                          (1932136 'move' call_tmp[1932134](1932139 call _instance[782774] call_tmp[1932103]))
                          val coerce_tmp[1932141]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1932143 'move' coerce_tmp[1932141](1932145 'deref' call_tmp[1932134]))
                          (1932148 call =[986499] right[1931980] coerce_tmp[1932141])
                          (1932152 call chpl__autoDestroy[1435384] call_tmp[1932103])
                        }
                      }
                      const-val tmp[1932156]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                      const-val call_tmp[1932158]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                      val _chpl_forward_tgt[1932160]:BaseLocale[91204] "dead after last mention" "maybe ref" "maybe type" "temp"
                      (1932162 'move' _chpl_forward_tgt[1932160](1932165 call chpl_forwarding_expr3__value[89995] rootLocale[91514]))
                      val coerce_tmp[1932167]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1932169 'move' coerce_tmp[1932167] _chpl_forward_tgt[1932160])
                      val _virtual_method_tmp_[1932172]:int(32)[95] "temp"
                      (1932174 'move' _virtual_method_tmp_[1932172](1932176 'getcid' coerce_tmp[1932167]))
                      val ret_tmp[1932178]:locale[28] "temp"
                      (1932180 'virtual method call' getChild[91189] _virtual_method_tmp_[1932172] coerce_tmp[1932167] i[1931962] ret_tmp[1932178])
                      (1932186 'move' call_tmp[1932158] ret_tmp[1932178])
                      const-val call_tmp[1932189]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                      val _locale_tmp_[1932191]:BaseLocale[91204] "dead after last mention" "temp"
                      (1932193 'move' _locale_tmp_[1932191](1932196 call _value[89984] call_tmp[1932158]))
                      (1932198 'move' call_tmp[1932189](1932200 '_wide_get_locale' _locale_tmp_[1932191]))
                      (1932202 'move' tmp[1932156] call_tmp[1932189])
                      val rvfDerefTmp[2048857]:BaseLocale[91204] "concurrently accessed" "temp"
                      (2048860 'move' rvfDerefTmp[2048857] left[1931968])
                      val rvfDerefTmp[2048864]:BaseLocale[91204] "concurrently accessed" "temp"
                      (2048867 'move' rvfDerefTmp[2048864] right[1931980])
                      val isdirect[2051712]:bool[10] "temp"
                      (2051717 'move' isdirect[2051712](2051714 call chpl_doDirectExecuteOn[187469] tmp[1932156]))
                      if isdirect[2051712]
                      {
                        (2051721 call on_fn[935261] rvfDerefTmp[2048857] rvfDerefTmp[2048864])
                      }
                      {
                        val _args_foron_fn[2051739]:_class_localson_fn[2051729] "temp"
                        (2051743 'move' _args_foron_fn[2051739](2051741 'stack allocate class' _class_localson_fn[2051729]))
                        (2051745 '.=' _args_foron_fn[2051739] _0_tmp[2051732] tmp[1932156])
                        (2051749 '.=' _args_foron_fn[2051739] _1_rvfDerefTmp[2051734] rvfDerefTmp[2048857])
                        (2051753 '.=' _args_foron_fn[2051739] _2_rvfDerefTmp[2051736] rvfDerefTmp[2048864])
                        val _args_vforon_fn[2051757]:c_void_ptr[149] "temp"
                        (2051761 'move' _args_vforon_fn[2051757](2051759 'cast_to_void_star' _args_foron_fn[2051739]))
                        val _args_sizeon_fn[2051763]:int(64)[13] "temp"
                        (2051767 'move' _args_sizeon_fn[2051763](2051765 'sizeof_bundle' _class_localson_fn[2051729]))
                        on(2051807 call wrapon_fn[2051769] tmp[1932156] _args_vforon_fn[2051757] _args_sizeon_fn[2051763] _args_foron_fn[2051739])
                      }
                      (1932211 call chpl__autoDestroy[1435384] call_tmp[1932158])
                      {
                      }
                    }
                    label _continueLabel[1932214]
                  }
                }
              }
              {
                (1931876 '=' i[1931815] coerce_tmp[1931838])
              }
              {
                (1931880 '<=' i[1931815] end[1931862])
              }
              {
                val call_tmp[1931884]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1931886 '+=' i[1931815] 1)
              }
            }
            label _endthese[1931935]
          }
          (1931938 call _freeIterator[1102025] _iterator[1931776])
          label _endthese[1931940]
        }
        (1874279 call _freeIterator[1314736] _iterator[1874186])
        (1874282 call chpl__autoDestroy[1530942] default_arg_offset[1874223])
        label _endthese[1874284]
      }
      label _breakLabel[155371]
      (1815303 call _freeIterator[1315565] _iterator[155366])
    }
    (520701 return _void[55])
  }
  const-val default_arg_left[1353773]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  const-val default_arg_right[1353804]:locale[28] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
  function on_fn[935261](const in arg left[1781243]:BaseLocale[91204], const in arg right[1781245]:BaseLocale[91204]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[672265]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      (672268 'move' call_tmp[672265](155332 call left[808413] chpl_localeTree[155232]))
      ref call_tmp[672272]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
      (672275 'move' call_tmp[672272](155335 call _instance[782774] call_tmp[672265]))
      val tmp[1781931]:BaseLocale[91204] "temp"
      (1781934 'move' tmp[1781931] left[1781243])
      (155339 call =[986499] call_tmp[672272] tmp[1781931])
      ref call_tmp[672279]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      (672282 'move' call_tmp[672279](155344 call right[808439] chpl_localeTree[155232]))
      ref call_tmp[672286]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
      (672289 'move' call_tmp[672286](155347 call _instance[782774] call_tmp[672279]))
      val tmp[1781937]:BaseLocale[91204] "temp"
      (1781940 'move' tmp[1781937] right[1781245])
      (155351 call =[986499] call_tmp[672286] tmp[1781937])
    }
    (935268 return _void[55])
  }
  function chpl__deinit_LocaleTree[1824898]() : void[4] "resolved"
  {
    label _endchpl__deinit_LocaleTree[1824904]
    (1824906 call chpl__autoDestroy[1436813] chpl_localeTree[155232])
    (1824901 return _void[55])
  }
  function wrapon_fn[2051769](const in arg dummy_locale_arg[2051771]:chpl_localeID_t[209352], in arg buf[2051773]:c_void_ptr[149], in arg buf_size[2051775]:int(64)[13], in arg c[2051777]:_class_localson_fn[2051729]) : void[4] "on block"
  {
    val _0_tmp[2051782]:chpl_localeID_t[209352] "temp"
    (2051787 'move' _0_tmp[2051782](2051784 '.v' c[2051777] _0_tmp[2051732]))
    val _1_rvfDerefTmp[2051789]:BaseLocale[91204] "temp"
    (2051794 'move' _1_rvfDerefTmp[2051789](2051791 '.v' c[2051777] _1_rvfDerefTmp[2051734]))
    val _2_rvfDerefTmp[2051797]:BaseLocale[91204] "temp"
    (2051802 'move' _2_rvfDerefTmp[2051797](2051799 '.v' c[2051777] _2_rvfDerefTmp[2051736]))
    (2051780 call on_fn[935261] _1_rvfDerefTmp[2051789] _2_rvfDerefTmp[2051797])
    (2051805 return _void[55])
  }
}