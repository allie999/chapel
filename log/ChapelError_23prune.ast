AST dump for ChapelError after pass prune.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2198738] val _runtime_hdr[2198739]:chpl_comm_on_bundle_t[209359] val _0_tmp[2198741]:chpl_localeID_t[209352] ref _1_this[2198743]:chpl_TaskErrors[168348] val _2_err[2198745]:Error[167984]
  function chpl__init_ChapelError[416133]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522461 return _void[55])
  }
  function Error[167984].init[167942](const in arg this[167986]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462540]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462548 'move' super_tmp[462540](462541 '.v' this[167986] super[355807]))
    (462544 call init[749552] super_tmp[462540])
    val tmp[462475]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679528]:object[22] "dead at end of block" "maybe param" "temp"
    (679531 'move' call_tmp[679528](462486 'cast' object[22] this[167986]))
    val chpl__thisAsParent[462483]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544696 'move' chpl__thisAsParent[462483](965770 call chpl__initCopy[945460] call_tmp[679528]))
    (462489 'setcid' chpl__thisAsParent[462483])
    val tmp[462491]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[965773]:Error[167984] "dead after last mention" "temp"
    (965776 'move' init_coerce_tmp[965773](965788 'cast' Error[167984] nil[44]))
    (462494 'move' tmp[462491] init_coerce_tmp[965773])
    (462496 '.=' this[167986] _next[167912] tmp[462491])
    val tmp[462501]:int(64)[13] "dead after last mention" "temp"
    (965793 'move' tmp[462501] 0)
    (462506 '.=' this[167986] thrownLine[167917] tmp[462501])
    val tmp[462510]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679533]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (965796 'move' tmp[462510] 0)
    (462517 '.=' this[167986] thrownFileId[167925] tmp[462510])
    val tmp[462521]:string[26] "dead after last mention" "temp"
    (965798 call init[30763] tmp[462521])
    (462526 '.=' this[167986] _msg[167930] tmp[462521])
    val tmp[462531]:bool[10] "dead after last mention" "temp"
    (462534 'move' tmp[462531] 0)
    (462536 '.=' this[167986] _hasThrowInfo[167936] tmp[462531])
    (462551 'setcid' this[167986])
    (522210 return _void[55])
  }
  function Error[167984].init[167958](const in arg this[167990]:Error[167984], const  ref arg msg[167955]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462623]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462631 'move' super_tmp[462623](462624 '.v' this[167990] super[355807]))
    (462627 call init[749552] super_tmp[462623])
    val tmp[462557]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679543]:object[22] "dead at end of block" "maybe param" "temp"
    (679546 'move' call_tmp[679543](462568 'cast' object[22] this[167990]))
    val chpl__thisAsParent[462565]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544698 'move' chpl__thisAsParent[462565](1064256 call chpl__initCopy[945460] call_tmp[679543]))
    (462571 'setcid' chpl__thisAsParent[462565])
    val tmp[462574]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[1064259]:Error[167984] "dead after last mention" "temp"
    (1064262 'move' init_coerce_tmp[1064259](1064276 'cast' Error[167984] nil[44]))
    (462577 'move' tmp[462574] init_coerce_tmp[1064259])
    (462579 '.=' this[167990] _next[167912] tmp[462574])
    val tmp[462583]:int(64)[13] "dead after last mention" "temp"
    (1064281 'move' tmp[462583] 0)
    (462588 '.=' this[167990] thrownLine[167917] tmp[462583])
    val tmp[462592]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679548]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1064284 'move' tmp[462592] 0)
    (462599 '.=' this[167990] thrownFileId[167925] tmp[462592])
    val tmp[462603]:string[26] "dead after last mention" "temp"
    (462606 call init=[30774] tmp[462603] msg[167955])
    (462608 '.=' this[167990] _msg[167930] tmp[462603])
    val tmp[462614]:bool[10] "dead after last mention" "temp"
    (462617 'move' tmp[462614] 0)
    (462619 '.=' this[167990] _hasThrowInfo[167936] tmp[462614])
    (462634 'setcid' this[167990])
    (522212 return _void[55])
  }
  function Error[167984].message[167975](const in arg this[167994]:Error[167984], ref arg _retArg[1906918]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522216]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679555]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
    (679558 'move' call_tmp[679555](388568 call _msg[811883] this[167994]))
    (522221 'move' ret[522216](1906922 call chpl__initCopy[981537] call_tmp[679555]))
    (1906920 '=' _retArg[1906918] ret[522216])
    (1906924 return _void[55])
  }
  function Error[167984]._next[811805](const in arg this[811809]:Error[167984]) ref : _ref(Error)[941209] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811819]:_ref(Error)[941209] "dead after last mention" "RVV" "temp"
    ref call_tmp[811826]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
    (811829 'move' call_tmp[811826](811813 '.' this[811809] _next[167912]))
    (811824 'move' ret[811819] call_tmp[811826])
    (811821 return ret[811819])
  }
  function Error[167984].thrownLine[811831](const in arg this[811835]:Error[167984]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811845]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[811852]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (811855 'move' call_tmp[811852](811839 '.' this[811835] thrownLine[167917]))
    (811850 'move' ret[811845] call_tmp[811852])
    (811847 return ret[811845])
  }
  function Error[167984].thrownFileId[811857](const in arg this[811861]:Error[167984]) ref : _ref(int(32))[936815] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811871]:_ref(int(32))[936815] "dead after last mention" "RVV" "temp"
    ref call_tmp[811878]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
    (811881 'move' call_tmp[811878](811865 '.' this[811861] thrownFileId[167925]))
    (811876 'move' ret[811871] call_tmp[811878])
    (811873 return ret[811871])
  }
  function Error[167984]._msg[811883](const in arg this[811887]:Error[167984]) ref : _ref(string)[938128] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811897]:_ref(string)[938128] "dead after last mention" "RVV" "temp"
    ref call_tmp[811904]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
    (811907 'move' call_tmp[811904](811891 '.' this[811887] _msg[167930]))
    (811902 'move' ret[811897] call_tmp[811904])
    (811899 return ret[811897])
  }
  function Error[167984]._hasThrowInfo[811909](const in arg this[811913]:Error[167984]) ref : _ref(bool)[937388] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811923]:_ref(bool)[937388] "dead after last mention" "RVV" "temp"
    ref call_tmp[811930]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    (811933 'move' call_tmp[811930](811917 '.' this[811913] _hasThrowInfo[167936]))
    (811928 'move' ret[811923] call_tmp[811930])
    (811925 return ret[811923])
  }
  function Error[167984].deinit[811935](const in arg this[811939]:Error[167984]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890426]
    ref _field_destructor_tmp_[1890424]:_ref(string)[938128] "temp"
    (1890431 'move' _field_destructor_tmp_[1890424](1890428 '.' this[811939] _msg[167930]))
    (1890433 call deinit[30834] _field_destructor_tmp_[1890424])
    val _parent_destructor_tmp_[1890436]:object[22] "temp"
    (1890441 'move' _parent_destructor_tmp_[1890436](1890437 'cast' object[22] this[811939]))
    (1890443 call deinit[749568] _parent_destructor_tmp_[1890436])
    (811947 return _void[55])
  }
  type Error[167984] val super[355807]:object[22] "super class" val _next[167912]:Error[167984] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function NilThrownError[168029].message[168004](const in arg this[168031]:NilThrownError[168029], ref arg _retArg[1918932]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522225]:string[26] "dead after last mention" "RVV" "temp"
    (522230 'move' ret[522225](1918936 call chpl__initCopy[981537] "thrown error was nil"))
    (1918934 '=' _retArg[1918932] ret[522225])
    (1918938 return _void[55])
  }
  function NilThrownError[168029].init[811975](const in arg this[811978]:NilThrownError[168029]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811991]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (811993 'move' super_tmp[811991](811990 '.v' this[811978] super[355809]))
    (811988 call init[167942] super_tmp[811991])
    val tmp[811996]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[812034]:Error[167984] "dead at end of block" "maybe param" "temp"
    (812037 'move' call_tmp[812034](812007 'cast' Error[167984] this[811978]))
    val chpl__thisAsParent[812004]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (812025 'move' chpl__thisAsParent[812004](969729 call chpl__initCopy[965806] call_tmp[812034]))
    (812010 'setcid' chpl__thisAsParent[812004])
    (812012 'setcid' this[811978])
    (812023 return _void[55])
  }
  function NilThrownError[168029].deinit[812039](const in arg this[812043]:NilThrownError[168029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890451]
    val _parent_destructor_tmp_[1890446]:Error[167984] "temp"
    (1890453 'move' _parent_destructor_tmp_[1890446](1890447 'cast' Error[167984] this[812043]))
    (1890455 call deinit[811935] _parent_destructor_tmp_[1890446])
    (812051 return _void[55])
  }
  function _new[969738]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879556]:NilThrownError[168029] "temp"
    val ret[969777]:NilThrownError[168029] "dead after last mention" "RVV" "temp"
    val initTemp[969740]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969784]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969787 'move' call_tmp[969784](969796 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969799]:c_void_ptr[149] "dead after last mention" "temp"
    (969801 'move' cast_tmp[969799](969752 call chpl_here_alloc[187788] call_tmp[969784] 2))
    (969755 'move' initTemp[969740](969803 'cast' NilThrownError[168029] cast_tmp[969799]))
    (969757 'setcid' initTemp[969740])
    (969741 call init[811975] initTemp[969740])
    val tmp[969759]:NilThrownError[168029] "dead after last mention" "temp"
    (969766 'move' tmp[969759] initTemp[969740])
    (969782 'move' ret[969777] tmp[969759])
    (969779 return ret[969777])
  }
  type NilThrownError[168029] val super[355809]:Error[167984] "super class"
  function DecodeError[168140].message[168115](const in arg this[168142]:DecodeError[168140], ref arg _retArg[1918962]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522252]:string[26] "dead after last mention" "RVV" "temp"
    (522257 'move' ret[522252](1918966 call chpl__initCopy[981537] "Invalid UTF-8 character encountered."))
    (1918964 '=' _retArg[1918962] ret[522252])
    (1918968 return _void[55])
  }
  function DecodeError[168140].init[812287](const in arg this[812290]:DecodeError[168140]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812303]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (812305 'move' super_tmp[812303](812302 '.v' this[812290] super[355815]))
    (812300 call init[167942] super_tmp[812303])
    val tmp[812308]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[812346]:Error[167984] "dead at end of block" "maybe param" "temp"
    (812349 'move' call_tmp[812346](812319 'cast' Error[167984] this[812290]))
    val chpl__thisAsParent[812316]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (812337 'move' chpl__thisAsParent[812316](965804 call chpl__initCopy[965806] call_tmp[812346]))
    (812322 'setcid' chpl__thisAsParent[812316])
    (812324 'setcid' this[812290])
    (812335 return _void[55])
  }
  function DecodeError[168140].deinit[812351](const in arg this[812355]:DecodeError[168140]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890463]
    val _parent_destructor_tmp_[1890458]:Error[167984] "temp"
    (1890465 'move' _parent_destructor_tmp_[1890458](1890459 'cast' Error[167984] this[812355]))
    (1890467 call deinit[811935] _parent_destructor_tmp_[1890458])
    (812363 return _void[55])
  }
  function _new[965831]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879550]:DecodeError[168140] "temp"
    val ret[965867]:DecodeError[168140] "dead after last mention" "RVV" "temp"
    val initTemp[965833]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965877 'move' call_tmp[965874](965888 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965891]:c_void_ptr[149] "dead after last mention" "temp"
    (965893 'move' cast_tmp[965891](965845 call chpl_here_alloc[187788] call_tmp[965874] 1))
    (965848 'move' initTemp[965833](965895 'cast' DecodeError[168140] cast_tmp[965891]))
    (965850 'setcid' initTemp[965833])
    (965834 call init[812287] initTemp[965833])
    val tmp[965852]:DecodeError[168140] "dead after last mention" "temp"
    (965856 'move' tmp[965852] initTemp[965833])
    (965872 'move' ret[965867] tmp[965852])
    (965869 return ret[965867])
  }
  type DecodeError[168140] val super[355815]:Error[167984] "super class"
  function IllegalArgumentError[168246].init[168163](const in arg this[168252]:IllegalArgumentError[168246], const  ref arg info[168160]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462670]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462672 'move' super_tmp[462670](462669 '.v' this[168252] super[355817]))
    (168171 call init[167958] super_tmp[462670] info[168160])
    val tmp[462675]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679577]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679580 'move' call_tmp[679577](462686 'cast' Error[167984] this[168252]))
    val chpl__thisAsParent[462683]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544702 'move' chpl__thisAsParent[462683](1064287 call chpl__initCopy[965806] call_tmp[679577]))
    (462689 'setcid' chpl__thisAsParent[462683])
    (462691 'setcid' this[168252])
    (522261 return _void[55])
  }
  function IllegalArgumentError[168246].init[168182](const in arg this[168256]:IllegalArgumentError[168246], const  ref arg formal[168179]:string[26], const  ref arg info[168185]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[679582]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905548]:string[26] "temp"
    (168206 call +[38345] "illegal argument '" formal[168179] ret_tmp[1905548])
    (1905551 'move' call_tmp[679582] ret_tmp[1905548])
    const-val call_tmp[679587]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905554]:string[26] "temp"
    (168225 call +[38345] call_tmp[679582] "': " ret_tmp[1905554])
    (1905557 'move' call_tmp[679587] ret_tmp[1905554])
    const-val call_tmp[679592]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905560]:string[26] "temp"
    (168228 call +[38345] call_tmp[679587] info[168185] ret_tmp[1905560])
    (1905563 'move' call_tmp[679592] ret_tmp[1905560])
    const-val msg[168230]:string[26] "dead at end of block" "insert auto destroy"
    (544704 'move' msg[168230] call_tmp[679592])
    val super_tmp[462694]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462696 'move' super_tmp[462694](462693 '.v' this[168256] super[355817]))
    (168241 call init[167958] super_tmp[462694] msg[168230])
    val tmp[462699]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679604]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679607 'move' call_tmp[679604](462710 'cast' Error[167984] this[168256]))
    val chpl__thisAsParent[462707]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544706 'move' chpl__thisAsParent[462707](1073682 call chpl__initCopy[965806] call_tmp[679604]))
    (462713 'setcid' chpl__thisAsParent[462707])
    (462715 'setcid' this[168256])
    (1919523 call chpl__autoDestroy[1601673] msg[168230])
    (1919526 call chpl__autoDestroy[1601673] call_tmp[679587])
    (1919529 call chpl__autoDestroy[1601673] call_tmp[679582])
    (522263 return _void[55])
  }
  function IllegalArgumentError[168246].deinit[812391](const in arg this[812395]:IllegalArgumentError[168246]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1890475]
    val _parent_destructor_tmp_[1890470]:Error[167984] "temp"
    (1890477 'move' _parent_destructor_tmp_[1890470](1890471 'cast' Error[167984] this[812395]))
    (1890479 call deinit[811935] _parent_destructor_tmp_[1890470])
    (812403 return _void[55])
  }
  function _new[1064296](const  ref arg info[1064305]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879730]:IllegalArgumentError[168246] "temp"
    val ret[1064335]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1064298]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064342]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064345 'move' call_tmp[1064342](1064356 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064359]:c_void_ptr[149] "dead after last mention" "temp"
    (1064361 'move' cast_tmp[1064359](1064313 call chpl_here_alloc[187788] call_tmp[1064342] 26))
    (1064316 'move' initTemp[1064298](1064363 'cast' IllegalArgumentError[168246] cast_tmp[1064359]))
    (1064318 'setcid' initTemp[1064298])
    (1064299 call init[168163] initTemp[1064298] info[1064305])
    val tmp[1064320]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1064324 'move' tmp[1064320] initTemp[1064298])
    (1064340 'move' ret[1064335] tmp[1064320])
    (1064337 return ret[1064335])
  }
  function _new[1073691](const  ref arg formal[1073700]:string[26], const  ref arg info[1073703]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879740]:IllegalArgumentError[168246] "temp"
    val ret[1073731]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1073693]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073738]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073741 'move' call_tmp[1073738](1073752 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073755]:c_void_ptr[149] "dead after last mention" "temp"
    (1073757 'move' cast_tmp[1073755](1073709 call chpl_here_alloc[187788] call_tmp[1073738] 26))
    (1073712 'move' initTemp[1073693](1073759 'cast' IllegalArgumentError[168246] cast_tmp[1073755]))
    (1073714 'setcid' initTemp[1073693])
    (1073694 call init[168182] initTemp[1073693] formal[1073700] info[1073703])
    val tmp[1073716]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073720 'move' tmp[1073716] initTemp[1073693])
    (1073736 'move' ret[1073731] tmp[1073716])
    (1073733 return ret[1073731])
  }
  type IllegalArgumentError[168246] val super[355817]:Error[167984] "super class"
  function _ref(chpl_TaskErrors)[941129].append[168282](ref arg this[168350]:_ref(chpl_TaskErrors)[941129], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[168323]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[679609]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679612 'move' call_tmp[679609](168320 '_wide_get_locale' this[168350]))
    (168325 'move' tmp[168323] call_tmp[679609])
    val isdirect[2198721]:bool[10] "temp"
    (2198726 'move' isdirect[2198721](2198723 call chpl_doDirectExecuteOn[187469] tmp[168323]))
    if isdirect[2198721]
    {
      (2198730 call on_fn[935527] this[168350] err[168279])
    }
    {
      val _args_foron_fn[2198748]:_class_localson_fn[2198738] "temp"
      (2198752 'move' _args_foron_fn[2198748](2198750 'stack allocate class' _class_localson_fn[2198738]))
      (2198754 '.=' _args_foron_fn[2198748] _0_tmp[2198741] tmp[168323])
      ref tmp[2198758]:chpl_TaskErrors[168348] "temp"
      (2198762 'move' tmp[2198758](2198760 'set reference' this[168350]))
      (2198764 '.=' _args_foron_fn[2198748] _1_this[2198743] tmp[2198758])
      (2198768 '.=' _args_foron_fn[2198748] _2_err[2198745] err[168279])
      val _args_vforon_fn[2198772]:c_void_ptr[149] "temp"
      (2198776 'move' _args_vforon_fn[2198772](2198774 'cast_to_void_star' _args_foron_fn[2198748]))
      val _args_sizeon_fn[2198778]:int(64)[13] "temp"
      (2198782 'move' _args_sizeon_fn[2198778](2198780 'sizeof_bundle' _class_localson_fn[2198738]))
      on(2198822 call wrapon_fn[2198784] tmp[168323] _args_vforon_fn[2198772] _args_sizeon_fn[2198778] _args_foron_fn[2198748])
    }
    {
    }
    (522265 return _void[55])
  }
  function _ref(chpl_TaskErrors)[941129].empty[168336](const  ref arg this[168354]:_ref(chpl_TaskErrors)[941129]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522269]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679655]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
    (679658 'move' call_tmp[679655](388593 call _head[812405] this[168354]))
    const-val call_tmp[679660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235747]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235751 'move' coerce_tmp[1235747](1235749 'deref' call_tmp[679655]))
    val coerce_tmp[1235753]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235758 'move' coerce_tmp[1235753](1235755 'cast' object[22] coerce_tmp[1235747]))
    (679663 'move' call_tmp[679660](168340 call ==[1146] coerce_tmp[1235753] nil[44]))
    (522274 'move' ret[522269] call_tmp[679660])
    (522271 return ret[522269])
  }
  function _ref(chpl_TaskErrors)[941129]._head[812405](ref arg this[812409]:_ref(chpl_TaskErrors)[941129]) ref : _ref(Error)[941209] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812419]:_ref(Error)[941209] "dead after last mention" "RVV" "temp"
    ref call_tmp[812426]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
    (812429 'move' call_tmp[812426](812413 '.' this[812409] _head[168266]))
    (812424 'move' ret[812419] call_tmp[812426])
    (812421 return ret[812419])
  }
  function _ref(chpl_TaskErrors)[941129]._errorsLock[812431](ref arg this[812435]:_ref(chpl_TaskErrors)[941129]) ref : _ref(chpl_LocalSpinlock)[941260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812445]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "RVV" "temp"
    ref call_tmp[812452]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
    (812455 'move' call_tmp[812452](812439 '.' this[812435] _errorsLock[168271]))
    (812450 'move' ret[812445] call_tmp[812452])
    (812447 return ret[812445])
  }
  function _ref(chpl_TaskErrors)[941129].init[812457](ref arg this[812460]:_ref(chpl_TaskErrors)[941129], in arg _head[812463]:Error[167984], const  ref arg _errorsLock[812478]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945365]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945368 'move' _formal_tmp__errorsLock[945365] _errorsLock[812478])
    (812492 '.=' this[812460] _head[168266] _head[812463])
    (812495 '.=' this[812460] _errorsLock[168271] _formal_tmp__errorsLock[945365])
    (812499 return _void[55])
  }
  function init_default__errorsLock[941240](ref arg _retArg[1907814]:_ref(chpl_LocalSpinlock)[941260]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[941242]:chpl_LocalSpinlock[187432] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[941247]:chpl_LocalSpinlock[187432] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[945330]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1907820]:AtomicBool[45877] "temp"
    (945332 call init_default_l[945017] ret_tmp[1907820])
    (1907823 'move' default_arg_l[945330] ret_tmp[1907820])
    (945007 call init[820510] _errorsLock[941247] default_arg_l[945330])
    (945003 'move' ret[941242] _errorsLock[941247])
    (1907816 '=' _retArg[1907814] ret[941242])
    (1907818 return _void[55])
  }
  function init_default__head[941159]() : Error[167984] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[941161]:Error[167984] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[941166]:Error[167984] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[941170]:Error[167984] "dead after last mention" "temp"
    val _formal_type[941172]:Error[167984] "dead after last mention" "temp" "type variable"
    (941180 'move' tmp[941170](941228 'cast' Error[167984] nil[44]))
    (941183 'move' _head[941166] tmp[941170])
    (941225 'move' ret[941161] _head[941166])
    (941164 return ret[941161])
  }
  function _ref(chpl_TaskErrors)[941129].deinit[812566](const  ref arg this[812570]:_ref(chpl_TaskErrors)[941129]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1890484]
    ref _field_destructor_tmp_[1890482]:_ref(chpl_LocalSpinlock)[941260] "temp"
    (1890489 'move' _field_destructor_tmp_[1890482](1890486 '.' this[812570] _errorsLock[168271]))
    (1890491 call deinit[820583] _field_destructor_tmp_[1890482])
    (812578 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:Error[167984] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function TaskErrors[169702].init[168384](const in arg this[169704]:TaskErrors[169702], ref arg group[168381]:_ref(chpl_TaskErrors)[941129]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462761]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462769 'move' super_tmp[462761](462762 '.v' this[169704] super[355819]))
    (462765 call init[167942] super_tmp[462761])
    val tmp[462721]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679670]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679673 'move' call_tmp[679670](462732 'cast' Error[167984] this[169704]))
    val chpl__thisAsParent[462729]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544710 'move' chpl__thisAsParent[462729](1237384 call chpl__initCopy[965806] call_tmp[679670]))
    (462735 'setcid' chpl__thisAsParent[462729])
    ref call_tmp[679677]:_ref(Error)[941209] "dead at end of block" "maybe param" "temp"
    (679680 'move' call_tmp[679677](168392 call _head[812405] group[168381]))
    val head[168395]:Error[167984] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1237390]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1237394 'move' coerce_tmp[1237390](1237392 'deref' call_tmp[679677]))
    (1919532 '=' head[168395] coerce_tmp[1237390])
    (544712 'noop')
    ref call_tmp[679684]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
    (679687 'move' call_tmp[679684](168401 call _head[812405] group[168381]))
    (168405 call =[1237398] call_tmp[679684] nil[44])
    val tmp[462737]:int(64)[13] "dead after last mention" "temp"
    (1241156 'move' tmp[462737] 0)
    (462742 '.=' this[169704] nErrors[168363] tmp[462737])
    val tmp[462746]:c_ptr(owned Error?)[1235804] "dead after last mention" "temp"
    val call_tmp[679689]:owned Error?[966602] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679694]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1241161 'move' tmp[462746](1241159 'cast' c_ptr(owned Error?)[1235804] nil[44]))
    (462755 '.=' this[169704] errorsArray[168374] tmp[462746])
    (462760 'setcid' this[169704])
    val cur[168418]:Error[167984] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544714]:Error[167984] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168423]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544728 'move' n[168423] 0)
    (544725 'move' cur[168418](1237461 call chpl__initCopy[967563] head[168395]))
    {
      val tmp[168533]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1237464]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237469 'move' coerce_tmp[1237464](1237466 'cast' object[22] cur[168418]))
      (679702 'move' call_tmp[679699](168554 call !=[1485] coerce_tmp[1237464] nil[44]))
      (168557 'move' tmp[168533] call_tmp[679699])
      WhileDo[168538]
      {
        {
          val call_tmp[679704]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679707 'move' call_tmp[679704](168437 call postfix![967963] cur[168418]))
          ref call_tmp[679711]:_ref(Error)[941209] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237473]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237478 'move' coerce_tmp[1237473] call_tmp[679704])
          (679714 'move' call_tmp[679711](168439 call _next[811805] coerce_tmp[1237473]))
          val curnext[168442]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1237483]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1237487 'move' coerce_tmp[1237483](1237485 'deref' call_tmp[679711]))
          (1919535 '=' curnext[168442] coerce_tmp[1237483])
          (544730 'noop')
          val call_tmp[679716]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237666]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237671 'move' coerce_tmp[1237666] cur[168418])
          (679719 'move' call_tmp[679716](168454 call _cast[1237567] coerce_tmp[1237666]))
          val asTaskErr[168456]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544732 'move' asTaskErr[168456](1237794 call chpl__initCopy[1237685] call_tmp[679716]))
          const-val call_tmp[679721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1237797]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1237802 'move' coerce_tmp[1237797](1237799 'cast' object[22] asTaskErr[168456]))
          (679724 'move' call_tmp[679721](168462 call ==[1146] coerce_tmp[1237797] nil[44]))
          const-val call_tmp[679726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679729 'move' call_tmp[679726] call_tmp[679721])
          if call_tmp[679726]
          {
            (168466 call +=[451431] n[168423] 1)
          }
          {
            {
              ref _indexOfInterest[168489]:_ref(owned Error?)[966611] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168490]:_ic_these_TaskErrors[1238165] "dead at end of block" "expr temp" "temp"
              val call_tmp[679731]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679734 'move' call_tmp[679731] asTaskErr[168456])
              (168499 'move' _iterator[168490](168497 call _getIterator[1238121] call_tmp[679731]))
              {
                val ret[1988534]:_ir_these_TaskErrors[1238171] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1988536]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1988538]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1988540]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                const-val this[1988717]:TaskErrors[169702] "temp"
                (1988722 'move' this[1988717](1988719 '.v' _iterator[168490] F0_this[2103300]))
                (1988542 'move' call_tmp[1988540](1988545 call nErrors[814220] this[1988717]))
                const-val call_tmp[1988547]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1988549]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1988551 'move' coerce_tmp[1988549](1988553 'deref' call_tmp[1988540]))
                const-val ret_tmp[1988555]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                (1988558 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1988549] ret_tmp[1988555])
                (1988562 'move' call_tmp[1988547] ret_tmp[1988555])
                (1988565 'move' _iterator[1988538](1988568 call _getIterator[1103994] call_tmp[1988547]))
                {
                  val ret[2058088]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[2058090]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2058092]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2058094]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2058096]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                  const-val low[2058573]:int(64)[13] "temp"
                  (2058578 'move' low[2058573](2058575 '.v' _iterator[1988538] F0_low[2107536]))
                  const-val count[2058580]:int(64)[13] "temp"
                  (2058585 'move' count[2058580](2058582 '.v' _iterator[1988538] F1_count[2107540]))
                  (2058099 call chpl_direct_counted_range_iter_helper[1102287] low[2058573] count[2058580] ret_tmp[2058096])
                  (2058103 'move' call_tmp[2058094] ret_tmp[2058096])
                  (2058106 'move' _iterator[2058092](2058109 call _getIterator[1103744] call_tmp[2058094]))
                  {
                    val ret[2058112]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                    val call_tmp[2058114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[2058116]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2058118]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2058120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2058122]:int(64)[13] "temp"
                    (2058124 'move' count[2058122](2058126 '.v' _iterator[2058092] F1_count[2113698]))
                    (2058129 'move' call_tmp[2058120](2058132 call <[948587] count[2058122]))
                    (2058134 'move' tmp[2058118] call_tmp[2058120])
                    (2058137 'move' tmp[2058116] call_tmp[2058120])
                    const-val call_tmp[2058140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2058142 'move' call_tmp[2058140] call_tmp[2058120])
                    if call_tmp[2058120]
                    {
                      (2058148 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[2058151]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[2058153]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[2058155]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2058157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2058159]:int(64)[13] "temp"
                    (2058161 'move' count[2058159](2058163 '.v' _iterator[2058092] F1_count[2113698]))
                    (2058166 'move' call_tmp[2058157](2058169 call ==[435744] count[2058159] 0))
                    (2058172 'move' tmp[2058155] call_tmp[2058157])
                    if call_tmp[2058157]
                    {
                      const-val tmp[2058177]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2058179]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2058181]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2058183]:int(64)[13] "temp"
                      (2058185 'move' low[2058183](2058187 '.v' _iterator[2058092] F0_low[2113694]))
                      (2058190 'move' call_tmp[2058181](2058193 call _cast[956223] low[2058183]))
                      const-val call_tmp[2058195]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[2058197]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (2058199 'move' coerce_tmp[2058197](2058201 'cast' uint(64)[115] 1))
                      (2058204 'move' call_tmp[2058195](2058207 call -[962382] call_tmp[2058181]))
                      const-val call_tmp[2058209]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2058211 'move' call_tmp[2058209](2058214 call _cast[953732] call_tmp[2058195]))
                      const-val ret_tmp[2058216]:2*int(64)[1040245] "temp"
                      const-val low[2058218]:int(64)[13] "temp"
                      (2058220 'move' low[2058218](2058222 '.v' _iterator[2058092] F0_low[2113694]))
                      (2058226 call _build_tuple[1040203] low[2058218] call_tmp[2058209] ret_tmp[2058216])
                      (2058230 'move' tmp[2058177] ret_tmp[2058216])
                      (2058233 'move' tmp[2058153] tmp[2058177])
                    }
                    {
                      const-val tmp[2058237]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2058239]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2058241]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2058243]:int(64)[13] "temp"
                      (2058245 'move' count[2058243](2058247 '.v' _iterator[2058092] F1_count[2113698]))
                      (2058250 'move' call_tmp[2058241] count[2058243])
                      const-val call_tmp[2058253]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2058255]:int(64)[13] "temp"
                      (2058257 'move' count[2058255](2058259 '.v' _iterator[2058092] F1_count[2113698]))
                      (2058262 'move' call_tmp[2058253](2058265 call -[962415] count[2058255]))
                      const-val call_tmp[2058267]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2058269]:int(64)[13] "temp"
                      (2058271 'move' low[2058269](2058273 '.v' _iterator[2058092] F0_low[2113694]))
                      (2058276 'move' call_tmp[2058267](2058279 call +[439752] low[2058269] call_tmp[2058253]))
                      const-val ret_tmp[2058282]:2*int(64)[1040245] "temp"
                      const-val low[2058284]:int(64)[13] "temp"
                      (2058286 'move' low[2058284](2058288 '.v' _iterator[2058092] F0_low[2113694]))
                      (2058292 call _build_tuple[1040203] low[2058284] call_tmp[2058267] ret_tmp[2058282])
                      (2058296 'move' tmp[2058237] ret_tmp[2058282])
                      (2058299 'move' tmp[2058153] tmp[2058237])
                    }
                    (2058303 '=' tmp[2058151] tmp[2058153])
                    (2058306 'noop')
                    1
                    ref call_tmp[2058308]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2058310 'move' call_tmp[2058308](2058312 '.' tmp[2058151] x0[1040241]))
                    const-val start[2058315]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2058317]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2058319 'move' coerce_tmp[2058317](2058321 'deref' call_tmp[2058308]))
                    (2058323 '=' start[2058315] coerce_tmp[2058317])
                    (2058326 'noop')
                    ref call_tmp[2058327]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2058329 'move' call_tmp[2058327](2058331 '.' tmp[2058151] x1[1040243]))
                    const-val end[2058334]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2058336]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2058338 'move' coerce_tmp[2058336](2058340 'deref' call_tmp[2058327]))
                    (2058342 '=' end[2058334] coerce_tmp[2058336])
                    (2058345 'noop')
                    val _indexOfInterest[2058346]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[2058348]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[2058350]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[2058352]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                    (2058355 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2058317] coerce_tmp[2058336] ret_tmp[2058352])
                    (2058359 'move' call_tmp[2058350] ret_tmp[2058352])
                    (2058362 'move' _iterator[2058348](2058365 call _getIterator[1103490] call_tmp[2058350]))
                    {
                      val ret[2091242]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                      val call_tmp[2091244]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2091247 call chpl_range_check_stride[1103033])
                      val i[2091248]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[2091250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2091252 'move' i[2091248] 0)
                      val call_tmp[2091255]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[2091257]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[2091492]:int(64)[13] "temp"
                      (2091497 'move' low[2091492](2091494 '.v' _iterator[2058348] F0_low[2115192]))
                      (2091259 'move' default_arg_first[2091257](2091262 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2091492]))
                      const-val default_arg_last[2091264]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[2091499]:int(64)[13] "temp"
                      (2091504 'move' high[2091499](2091501 '.v' _iterator[2058348] F1_high[2115196]))
                      (2091266 'move' default_arg_last[2091264](2091269 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2091499]))
                      const-val _return_tmp_[2091271]:bool[10] "dead after last mention" "temp"
                      const-val low[2091506]:int(64)[13] "temp"
                      (2091511 'move' low[2091506](2091508 '.v' _iterator[2058348] F0_low[2115192]))
                      const-val high[2091513]:int(64)[13] "temp"
                      (2091518 'move' high[2091513](2091515 '.v' _iterator[2058348] F1_high[2115196]))
                      (2091273 'move' _return_tmp_[2091271](2091276 call chpl_checkIfRangeIterWillOverflow[1096265] low[2091506] high[2091513] 1 default_arg_first[2091257] default_arg_last[2091264] 1))
                      CForLoop[2091283]
                      {
                        const-val yret[2091298]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2091300 'move' yret[2091298] i[2091248])
                        const-val _yieldedIndex[2091314]:int(64)[13] "temp"
                        (2091490 'move' _yieldedIndex[2091314] i[2091248])
                        {
                          const-val i[2091316]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2091318 'move' i[2091316] _yieldedIndex[2091314])
                          const-val yret[2091321]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2091323 'move' yret[2091321] _yieldedIndex[2091314])
                          const-val _yieldedIndex[2091326]:int(64)[13] "temp"
                          (2091328 'move' _yieldedIndex[2091326] _yieldedIndex[2091314])
                          {
                            const-val i[2091332]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2091334 'move' i[2091332] _yieldedIndex[2091326])
                            const-val yret[2091337]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2091339 'move' yret[2091337] _yieldedIndex[2091326])
                            const-val _yieldedIndex[2091342]:int(64)[13] "temp"
                            (2091344 'move' _yieldedIndex[2091342] _yieldedIndex[2091326])
                            {
                              const-val i[2091348]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2091350 'move' i[2091348] _yieldedIndex[2091342])
                              ref call_tmp[2091353]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[2091355]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                              const-val this[2091357]:TaskErrors[169702] "temp"
                              (2091359 'move' this[2091357](2091361 '.v' _iterator[168490] F0_this[2103300]))
                              (2091364 'move' _this_tmp_[2091355](2091367 call errorsArray[814246] this[2091357]))
                              val coerce_tmp[2091369]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091371 'move' coerce_tmp[2091369](2091373 'deref' _this_tmp_[2091355]))
                              (2091375 'move' call_tmp[2091353](2091378 call this[1235942] coerce_tmp[2091369] _yieldedIndex[2091342]))
                              const-val call_tmp[2091381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[2091383]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091385 'move' coerce_tmp[2091383](2091388 call borrow[1236017] call_tmp[2091353]))
                              val coerce_tmp[2091390]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091392 'move' coerce_tmp[2091390](2091394 'cast' object[22] coerce_tmp[2091383]))
                              (2091397 'move' call_tmp[2091381](2091400 call !=[1485] coerce_tmp[2091390] nil[44]))
                              const-val call_tmp[2091403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2091405 'move' call_tmp[2091403] call_tmp[2091381])
                              if call_tmp[2091381]
                              {
                                ref yret[2091410]:_ref(owned Error?)[966611] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2091412]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2091414]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                                const-val this[2091416]:TaskErrors[169702] "temp"
                                (2091418 'move' this[2091416](2091420 '.v' _iterator[168490] F0_this[2103300]))
                                (2091423 'move' _this_tmp_[2091414](2091426 call errorsArray[814246] this[2091416]))
                                val coerce_tmp[2091428]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2091430 'move' coerce_tmp[2091428](2091432 'deref' _this_tmp_[2091414]))
                                (2091434 'move' call_tmp[2091412](2091437 call this[1235942] coerce_tmp[2091428] i[2091348]))
                                ref _yieldedIndex[2091440]:_ref(owned Error?)[966611] "temp"
                                (2091442 'move' _yieldedIndex[2091440] call_tmp[2091412])
                                {
                                  ref e[2091446]:_ref(owned Error?)[966611] "index var" "insert auto destroy"
                                  (2091448 'move' e[2091446] _yieldedIndex[2091440])
                                  {
                                    const-val call_tmp[2091452]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[2091454]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2091456 'move' coerce_tmp[2091454](2091459 call borrow[1236017] e[2091446]))
                                    val coerce_tmp[2091461]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2091463 'move' coerce_tmp[2091461](2091465 'cast' object[22] coerce_tmp[2091454]))
                                    (2091468 'move' call_tmp[2091452](2091471 call !=[1485] coerce_tmp[2091461] nil[44]))
                                    const-val call_tmp[2091474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2091476 'move' call_tmp[2091474] call_tmp[2091452])
                                    if call_tmp[2091474]
                                    {
                                      (2091482 call +=[451431] n[168423] 1)
                                    }
                                  }
                                  label _continueLabel[2091486]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[2091520]:int(64)[13] "temp"
                          (2091525 'move' low[2091520](2091522 '.v' _iterator[2058348] F0_low[2115192]))
                          (2091285 '=' i[2091248] low[2091520])
                        }
                        {
                          const-val high[2091527]:int(64)[13] "temp"
                          (2091532 'move' high[2091527](2091529 '.v' _iterator[2058348] F1_high[2115196]))
                          (2091289 '<=' i[2091248] high[2091527])
                        }
                        {
                          val call_tmp[2091293]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2091295 '+=' i[2091248] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[2091310]
                    }
                    (2058413 call _freeIterator[1103663] _iterator[2058348])
                    (2058416 call chpl__autoDestroy[1674803] tmp[2058151])
                    label _endchpl_direct_counted_range_iter_helper[2058418]
                  }
                  (2058421 call _freeIterator[1103913] _iterator[2058092])
                  label _endchpl_direct_counted_range_iter[2058423]
                }
                (1988666 call _freeIterator[1104163] _iterator[1988538])
                label _endthese[1988668]
              }
              label _breakLabel[168495]
              (1919544 call _freeIterator[1238422] _iterator[168490])
            }
          }
          (168530 call =[1232635] cur[168418] curnext[168442])
        }
        label _continueLabel[168536]
        const-val call_tmp[679746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1238507]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1238512 'move' coerce_tmp[1238507](1238509 'cast' object[22] cur[168418]))
        (679749 'move' call_tmp[679746](168544 call !=[1485] coerce_tmp[1238507] nil[44]))
        (168547 'move' tmp[168533] call_tmp[679746])
        tmp[168533]
      }
      label _breakLabel[168537]
    }
    ref call_tmp[679753]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (679756 'move' call_tmp[679753](388621 call nErrors[814220] this[169704]))
    (168562 call =[435443] call_tmp[679753] n[168423])
    ref call_tmp[679760]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "maybe param" "temp"
    (679763 'move' call_tmp[679760](388629 call errorsArray[814246] this[169704]))
    val call_tmp[679765]:owned Error?[966602] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679770]:c_ptr(owned Error?)[1235804] "dead after last mention" "expr temp" "maybe param" "temp"
    (679773 'move' call_tmp[679770](168573 call c_calloc[1238526] n[168423]))
    (168574 call =[1238851] call_tmp[679760] call_tmp[679770])
    val idx[168578]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544734 'move' idx[168578] 0)
    (168584 call =[1232635] cur[168418] head[168395])
    {
      val tmp[168729]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1238879]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1238884 'move' coerce_tmp[1238879](1238881 'cast' object[22] cur[168418]))
      (679778 'move' call_tmp[679775](168750 call !=[1485] coerce_tmp[1238879] nil[44]))
      (168753 'move' tmp[168729] call_tmp[679775])
      WhileDo[168734] hazard
      {
        {
          val call_tmp[679780]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679783 'move' call_tmp[679780](168592 call postfix![967963] cur[168418]))
          ref call_tmp[679787]:_ref(Error)[941209] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238888]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238893 'move' coerce_tmp[1238888] call_tmp[679780])
          (679790 'move' call_tmp[679787](168594 call _next[811805] coerce_tmp[1238888]))
          val curnext[168597]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1238898]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1238902 'move' coerce_tmp[1238898](1238900 'deref' call_tmp[679787]))
          (1919538 '=' curnext[168597] coerce_tmp[1238898])
          (544736 'noop')
          val call_tmp[679792]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
          (679795 'move' call_tmp[679792](168603 call postfix![967963] cur[168418]))
          ref call_tmp[679799]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1238906]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238911 'move' coerce_tmp[1238906] call_tmp[679792])
          (679802 'move' call_tmp[679799](168605 call _next[811805] coerce_tmp[1238906]))
          (168609 call =[1237398] call_tmp[679799] nil[44])
          val call_tmp[679804]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238915]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238920 'move' coerce_tmp[1238915] cur[168418])
          (679807 'move' call_tmp[679804](168619 call _cast[1237567] coerce_tmp[1238915]))
          val asTaskErr[168621]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544738 'move' asTaskErr[168621](1238923 call chpl__initCopy[1237685] call_tmp[679804]))
          const-val call_tmp[679809]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1238926]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238931 'move' coerce_tmp[1238926](1238928 'cast' object[22] asTaskErr[168621]))
          (679812 'move' call_tmp[679809](168627 call ==[1146] coerce_tmp[1238926] nil[44]))
          const-val call_tmp[679814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679817 'move' call_tmp[679814] call_tmp[679809])
          if call_tmp[679814]
          {
            ref call_tmp[679821]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1238935]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
            (1238937 'move' _this_tmp_[1238935](388645 call errorsArray[814246] this[169704]))
            val coerce_tmp[1238942]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1238946 'move' coerce_tmp[1238942](1238944 'deref' _this_tmp_[1238935]))
            (679824 'move' call_tmp[679821](168632 call this[1235942] coerce_tmp[1238942] idx[168578]))
            val call_tmp[679828]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
            (679831 'move' call_tmp[679828](168637 call postfix![967963] cur[168418]))
            (168640 call retain[1238964] call_tmp[679821] call_tmp[679828])
            (168645 call +=[451431] idx[168578] 1)
          }
          {
            {
              ref _indexOfInterest[168680]:_ref(owned Error?)[966611] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168681]:_ic_these_TaskErrors[1238165] "dead at end of block" "expr temp" "temp"
              val call_tmp[679833]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679836 'move' call_tmp[679833] asTaskErr[168621])
              const-val call_tmp[679840]:_ir_these_TaskErrors[1238171] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1239202]:TaskErrors[169702] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1239207 'move' coerce_tmp[1239202] call_tmp[679833])
              const-val ret_tmp[1906926]:_ir_these_TaskErrors[1238171] "temp"
              (168656 call these[168908] coerce_tmp[1239202] ret_tmp[1906926])
              (1906929 'move' call_tmp[679840] ret_tmp[1906926])
              (168690 'move' _iterator[168681](168688 call _getIterator[1238180] call_tmp[679840]))
              {
                val ret[1988739]:_ir_these_TaskErrors[1238171] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1988741]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1988743]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1988745]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
                const-val this[1988947]:TaskErrors[169702] "temp"
                (1988952 'move' this[1988947](1988949 '.v' _iterator[168681] F0_this[2103300]))
                (1988747 'move' call_tmp[1988745](1988750 call nErrors[814220] this[1988947]))
                const-val call_tmp[1988752]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1988754]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1988756 'move' coerce_tmp[1988754](1988758 'deref' call_tmp[1988745]))
                const-val ret_tmp[1988760]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
                (1988763 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1988754] ret_tmp[1988760])
                (1988767 'move' call_tmp[1988752] ret_tmp[1988760])
                (1988770 'move' _iterator[1988743](1988773 call _getIterator[1103994] call_tmp[1988752]))
                {
                  val ret[2058588]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[2058590]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[2058592]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[2058594]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[2058596]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
                  const-val low[2059098]:int(64)[13] "temp"
                  (2059103 'move' low[2059098](2059100 '.v' _iterator[1988743] F0_low[2107536]))
                  const-val count[2059105]:int(64)[13] "temp"
                  (2059110 'move' count[2059105](2059107 '.v' _iterator[1988743] F1_count[2107540]))
                  (2058599 call chpl_direct_counted_range_iter_helper[1102287] low[2059098] count[2059105] ret_tmp[2058596])
                  (2058603 'move' call_tmp[2058594] ret_tmp[2058596])
                  (2058606 'move' _iterator[2058592](2058609 call _getIterator[1103744] call_tmp[2058594]))
                  {
                    val ret[2058612]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                    val call_tmp[2058614]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[2058616]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[2058618]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[2058620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2058622]:int(64)[13] "temp"
                    (2058624 'move' count[2058622](2058626 '.v' _iterator[2058592] F1_count[2113698]))
                    (2058629 'move' call_tmp[2058620](2058632 call <[948587] count[2058622]))
                    (2058634 'move' tmp[2058618] call_tmp[2058620])
                    (2058637 'move' tmp[2058616] call_tmp[2058620])
                    const-val call_tmp[2058640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (2058642 'move' call_tmp[2058640] call_tmp[2058620])
                    if call_tmp[2058620]
                    {
                      (2058648 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[2058651]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[2058653]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[2058655]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[2058657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[2058659]:int(64)[13] "temp"
                    (2058661 'move' count[2058659](2058663 '.v' _iterator[2058592] F1_count[2113698]))
                    (2058666 'move' call_tmp[2058657](2058669 call ==[435744] count[2058659] 0))
                    (2058672 'move' tmp[2058655] call_tmp[2058657])
                    if call_tmp[2058657]
                    {
                      const-val tmp[2058677]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2058679]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2058681]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2058683]:int(64)[13] "temp"
                      (2058685 'move' low[2058683](2058687 '.v' _iterator[2058592] F0_low[2113694]))
                      (2058690 'move' call_tmp[2058681](2058693 call _cast[956223] low[2058683]))
                      const-val call_tmp[2058695]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[2058697]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (2058699 'move' coerce_tmp[2058697](2058701 'cast' uint(64)[115] 1))
                      (2058704 'move' call_tmp[2058695](2058707 call -[962382] call_tmp[2058681]))
                      const-val call_tmp[2058709]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (2058711 'move' call_tmp[2058709](2058714 call _cast[953732] call_tmp[2058695]))
                      const-val ret_tmp[2058716]:2*int(64)[1040245] "temp"
                      const-val low[2058718]:int(64)[13] "temp"
                      (2058720 'move' low[2058718](2058722 '.v' _iterator[2058592] F0_low[2113694]))
                      (2058726 call _build_tuple[1040203] low[2058718] call_tmp[2058709] ret_tmp[2058716])
                      (2058730 'move' tmp[2058677] ret_tmp[2058716])
                      (2058733 'move' tmp[2058653] tmp[2058677])
                    }
                    {
                      const-val tmp[2058737]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[2058739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[2058741]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2058743]:int(64)[13] "temp"
                      (2058745 'move' count[2058743](2058747 '.v' _iterator[2058592] F1_count[2113698]))
                      (2058750 'move' call_tmp[2058741] count[2058743])
                      const-val call_tmp[2058753]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[2058755]:int(64)[13] "temp"
                      (2058757 'move' count[2058755](2058759 '.v' _iterator[2058592] F1_count[2113698]))
                      (2058762 'move' call_tmp[2058753](2058765 call -[962415] count[2058755]))
                      const-val call_tmp[2058767]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[2058769]:int(64)[13] "temp"
                      (2058771 'move' low[2058769](2058773 '.v' _iterator[2058592] F0_low[2113694]))
                      (2058776 'move' call_tmp[2058767](2058779 call +[439752] low[2058769] call_tmp[2058753]))
                      const-val ret_tmp[2058782]:2*int(64)[1040245] "temp"
                      const-val low[2058784]:int(64)[13] "temp"
                      (2058786 'move' low[2058784](2058788 '.v' _iterator[2058592] F0_low[2113694]))
                      (2058792 call _build_tuple[1040203] low[2058784] call_tmp[2058767] ret_tmp[2058782])
                      (2058796 'move' tmp[2058737] ret_tmp[2058782])
                      (2058799 'move' tmp[2058653] tmp[2058737])
                    }
                    (2058803 '=' tmp[2058651] tmp[2058653])
                    (2058806 'noop')
                    1
                    ref call_tmp[2058808]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2058810 'move' call_tmp[2058808](2058812 '.' tmp[2058651] x0[1040241]))
                    const-val start[2058815]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2058817]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2058819 'move' coerce_tmp[2058817](2058821 'deref' call_tmp[2058808]))
                    (2058823 '=' start[2058815] coerce_tmp[2058817])
                    (2058826 'noop')
                    ref call_tmp[2058827]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (2058829 'move' call_tmp[2058827](2058831 '.' tmp[2058651] x1[1040243]))
                    const-val end[2058834]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[2058836]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (2058838 'move' coerce_tmp[2058836](2058840 'deref' call_tmp[2058827]))
                    (2058842 '=' end[2058834] coerce_tmp[2058836])
                    (2058845 'noop')
                    val _indexOfInterest[2058846]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[2058848]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[2058850]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[2058852]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                    (2058855 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2058817] coerce_tmp[2058836] ret_tmp[2058852])
                    (2058859 'move' call_tmp[2058850] ret_tmp[2058852])
                    (2058862 'move' _iterator[2058848](2058865 call _getIterator[1103490] call_tmp[2058850]))
                    {
                      val ret[2091535]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                      val call_tmp[2091537]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2091540 call chpl_range_check_stride[1103033])
                      val i[2091541]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[2091543]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2091545 'move' i[2091541] 0)
                      val call_tmp[2091548]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[2091550]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[2091810]:int(64)[13] "temp"
                      (2091815 'move' low[2091810](2091812 '.v' _iterator[2058848] F0_low[2115192]))
                      (2091552 'move' default_arg_first[2091550](2091555 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2091810]))
                      const-val default_arg_last[2091557]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[2091817]:int(64)[13] "temp"
                      (2091822 'move' high[2091817](2091819 '.v' _iterator[2058848] F1_high[2115196]))
                      (2091559 'move' default_arg_last[2091557](2091562 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2091817]))
                      const-val _return_tmp_[2091564]:bool[10] "dead after last mention" "temp"
                      const-val low[2091824]:int(64)[13] "temp"
                      (2091829 'move' low[2091824](2091826 '.v' _iterator[2058848] F0_low[2115192]))
                      const-val high[2091831]:int(64)[13] "temp"
                      (2091836 'move' high[2091831](2091833 '.v' _iterator[2058848] F1_high[2115196]))
                      (2091566 'move' _return_tmp_[2091564](2091569 call chpl_checkIfRangeIterWillOverflow[1096265] low[2091824] high[2091831] 1 default_arg_first[2091550] default_arg_last[2091557] 1))
                      CForLoop[2091576] hazard
                      {
                        const-val yret[2091591]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2091593 'move' yret[2091591] i[2091541])
                        const-val _yieldedIndex[2091607]:int(64)[13] "temp"
                        (2091808 'move' _yieldedIndex[2091607] i[2091541])
                        {
                          const-val i[2091609]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2091611 'move' i[2091609] _yieldedIndex[2091607])
                          const-val yret[2091614]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2091616 'move' yret[2091614] _yieldedIndex[2091607])
                          const-val _yieldedIndex[2091619]:int(64)[13] "temp"
                          (2091621 'move' _yieldedIndex[2091619] _yieldedIndex[2091607])
                          {
                            const-val i[2091625]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2091627 'move' i[2091625] _yieldedIndex[2091619])
                            const-val yret[2091630]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2091632 'move' yret[2091630] _yieldedIndex[2091619])
                            const-val _yieldedIndex[2091635]:int(64)[13] "temp"
                            (2091637 'move' _yieldedIndex[2091635] _yieldedIndex[2091619])
                            {
                              const-val i[2091641]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2091643 'move' i[2091641] _yieldedIndex[2091635])
                              ref call_tmp[2091646]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[2091648]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                              const-val this[2091650]:TaskErrors[169702] "temp"
                              (2091652 'move' this[2091650](2091654 '.v' _iterator[168681] F0_this[2103300]))
                              (2091657 'move' _this_tmp_[2091648](2091660 call errorsArray[814246] this[2091650]))
                              val coerce_tmp[2091662]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091664 'move' coerce_tmp[2091662](2091666 'deref' _this_tmp_[2091648]))
                              (2091668 'move' call_tmp[2091646](2091671 call this[1235942] coerce_tmp[2091662] _yieldedIndex[2091635]))
                              const-val call_tmp[2091674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[2091676]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091678 'move' coerce_tmp[2091676](2091681 call borrow[1236017] call_tmp[2091646]))
                              val coerce_tmp[2091683]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (2091685 'move' coerce_tmp[2091683](2091687 'cast' object[22] coerce_tmp[2091676]))
                              (2091690 'move' call_tmp[2091674](2091693 call !=[1485] coerce_tmp[2091683] nil[44]))
                              const-val call_tmp[2091696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2091698 'move' call_tmp[2091696] call_tmp[2091674])
                              if call_tmp[2091674]
                              {
                                ref yret[2091703]:_ref(owned Error?)[966611] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2091705]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2091707]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                                const-val this[2091709]:TaskErrors[169702] "temp"
                                (2091711 'move' this[2091709](2091713 '.v' _iterator[168681] F0_this[2103300]))
                                (2091716 'move' _this_tmp_[2091707](2091719 call errorsArray[814246] this[2091709]))
                                val coerce_tmp[2091721]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2091723 'move' coerce_tmp[2091721](2091725 'deref' _this_tmp_[2091707]))
                                (2091727 'move' call_tmp[2091705](2091730 call this[1235942] coerce_tmp[2091721] i[2091641]))
                                ref _yieldedIndex[2091733]:_ref(owned Error?)[966611] "temp"
                                (2091735 'move' _yieldedIndex[2091733] call_tmp[2091705])
                                {
                                  ref e[2091739]:_ref(owned Error?)[966611] "index var" "insert auto destroy"
                                  (2091741 'move' e[2091739] _yieldedIndex[2091733])
                                  {
                                    const-val call_tmp[2091745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[2091747]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2091749 'move' coerce_tmp[2091747](2091752 call borrow[1236017] e[2091739]))
                                    val coerce_tmp[2091754]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (2091756 'move' coerce_tmp[2091754](2091758 'cast' object[22] coerce_tmp[2091747]))
                                    (2091761 'move' call_tmp[2091745](2091764 call !=[1485] coerce_tmp[2091754] nil[44]))
                                    const-val call_tmp[2091767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2091769 'move' call_tmp[2091767] call_tmp[2091745])
                                    if call_tmp[2091767]
                                    {
                                      ref call_tmp[2091774]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[2091776]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                                      (2091778 'move' _this_tmp_[2091776](2091781 call errorsArray[814246] this[169704]))
                                      val coerce_tmp[2091783]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (2091785 'move' coerce_tmp[2091783](2091787 'deref' _this_tmp_[2091776]))
                                      (2091789 'move' call_tmp[2091774](2091792 call this[1235942] coerce_tmp[2091783] idx[168578]))
                                      (2091796 call =[1239246] call_tmp[2091774] e[2091739])
                                      (2091800 call +=[451431] idx[168578] 1)
                                    }
                                  }
                                  label _continueLabel[2091804]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[2091838]:int(64)[13] "temp"
                          (2091843 'move' low[2091838](2091840 '.v' _iterator[2058848] F0_low[2115192]))
                          (2091578 '=' i[2091541] low[2091838])
                        }
                        {
                          const-val high[2091845]:int(64)[13] "temp"
                          (2091850 'move' high[2091845](2091847 '.v' _iterator[2058848] F1_high[2115196]))
                          (2091582 '<=' i[2091541] high[2091845])
                        }
                        {
                          val call_tmp[2091586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (2091588 '+=' i[2091541] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[2091603]
                    }
                    (2058913 call _freeIterator[1103663] _iterator[2058848])
                    (2058916 call chpl__autoDestroy[1674803] tmp[2058651])
                    label _endchpl_direct_counted_range_iter_helper[2058918]
                  }
                  (2058921 call _freeIterator[1103913] _iterator[2058592])
                  label _endchpl_direct_counted_range_iter[2058923]
                }
                (1988871 call _freeIterator[1104163] _iterator[1988743])
                label _endthese[1988873]
              }
              label _breakLabel[168686]
              (1919549 call _freeIterator[1238422] _iterator[168681])
            }
            (168717 call chpl__delete[1240164] asTaskErr[168621])
          }
          (168726 call =[1232635] cur[168418] curnext[168597])
        }
        label _continueLabel[168732]
        const-val call_tmp[679862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1241147]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1241152 'move' coerce_tmp[1241147](1241149 'cast' object[22] cur[168418]))
        (679865 'move' call_tmp[679862](168740 call !=[1485] coerce_tmp[1241147] nil[44]))
        (168743 'move' tmp[168729] call_tmp[679862])
        tmp[168729]
      }
      label _breakLabel[168733]
    }
    (522276 return _void[55])
  }
  function TaskErrors[169702].init[168765](const in arg this[169708]:TaskErrors[169702], const in arg err[168762]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462816]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462824 'move' super_tmp[462816](462817 '.v' this[169708] super[355819]))
    (462820 call init[167942] super_tmp[462816])
    val tmp[462776]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679872]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679875 'move' call_tmp[679872](462787 'cast' Error[167984] this[169708]))
    val chpl__thisAsParent[462784]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544740 'move' chpl__thisAsParent[462784](1830045 call chpl__initCopy[965806] call_tmp[679872]))
    (462790 'setcid' chpl__thisAsParent[462784])
    val tmp[462792]:int(64)[13] "dead after last mention" "temp"
    (462795 'move' tmp[462792] 1)
    (462797 '.=' this[169708] nErrors[168363] tmp[462792])
    val call_tmp[679877]:owned Error?[966602] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679882]:c_ptr(owned Error?)[1235804] "dead after last mention" "maybe param" "temp"
    (679885 'move' call_tmp[679882](168781 call c_calloc[1238526] 1))
    val call_tmp[679887]:owned Error?[966602] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679892]:c_ptr(owned Error?)[1235804] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462801]:c_ptr(owned Error?)[1235804] "dead after last mention" "temp"
    (462808 'move' tmp[462801](1830074 call chpl__initCopy[1830076] call_tmp[679882]))
    (462810 '.=' this[169708] errorsArray[168374] tmp[462801])
    (462815 'setcid' this[169708])
    ref call_tmp[679899]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1830096]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1830101 'move' coerce_tmp[1830096] err[168762])
    (679902 'move' call_tmp[679899](168793 call _next[811805] coerce_tmp[1830096]))
    (168797 call =[1237398] call_tmp[679899] nil[44])
    ref call_tmp[679906]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1830106]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
    (1830108 'move' _this_tmp_[1830106](388681 call errorsArray[814246] this[169708]))
    val coerce_tmp[1830113]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1830117 'move' coerce_tmp[1830113](1830115 'deref' _this_tmp_[1830106]))
    (679909 'move' call_tmp[679906](168803 call this[1235942] coerce_tmp[1830113] 0))
    (168809 call retain[1238964] call_tmp[679906] err[168762])
    (522278 return _void[55])
  }
  function TaskErrors[169702].deinit[168832](const in arg this[169716]:TaskErrors[169702]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679935]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "maybe param" "temp"
    (679938 'move' call_tmp[679935](388697 call errorsArray[814246] this[169716]))
    const-val call_tmp[679940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235887]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235891 'move' coerce_tmp[1235887](1235889 'deref' call_tmp[679935]))
    (679943 'move' call_tmp[679940](168899 call _cond_test[1235855] coerce_tmp[1235887]))
    if call_tmp[679940]
    {
      {
        val _indexOfInterest[168853]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168854]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679947]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        (679950 'move' call_tmp[679947](388708 call nErrors[814220] this[169716]))
        const-val call_tmp[679952]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1235924]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1235928 'move' coerce_tmp[1235924](1235926 'deref' call_tmp[679947]))
        const-val ret_tmp[1907722]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (168870 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1235924] ret_tmp[1907722])
        (1907725 'move' call_tmp[679952] ret_tmp[1907722])
        (168863 'move' _iterator[168854](168861 call _getIterator[1103994] call_tmp[679952]))
        {
          val ret[1988969]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1988971]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1988973]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1988975]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1988977]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
          const-val low[1989059]:int(64)[13] "temp"
          (1989064 'move' low[1989059](1989061 '.v' _iterator[168854] F0_low[2107536]))
          const-val count[1989066]:int(64)[13] "temp"
          (1989071 'move' count[1989066](1989068 '.v' _iterator[168854] F1_count[2107540]))
          (1988980 call chpl_direct_counted_range_iter_helper[1102287] low[1989059] count[1989066] ret_tmp[1988977])
          (1988984 'move' call_tmp[1988975] ret_tmp[1988977])
          (1988987 'move' _iterator[1988973](1988990 call _getIterator[1103744] call_tmp[1988975]))
          {
            val ret[2059113]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
            val call_tmp[2059115]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2059117]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2059119]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2059121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2059510]:int(64)[13] "temp"
            (2059515 'move' count[2059510](2059512 '.v' _iterator[1988973] F1_count[2113698]))
            (2059123 'move' call_tmp[2059121](2059126 call <[948587] count[2059510]))
            (2059128 'move' tmp[2059119] call_tmp[2059121])
            (2059131 'move' tmp[2059117] call_tmp[2059121])
            const-val call_tmp[2059134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2059136 'move' call_tmp[2059134] call_tmp[2059121])
            if call_tmp[2059121]
            {
              (2059142 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2059145]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2059147]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2059149]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2059151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2059517]:int(64)[13] "temp"
            (2059522 'move' count[2059517](2059519 '.v' _iterator[1988973] F1_count[2113698]))
            (2059153 'move' call_tmp[2059151](2059156 call ==[435744] count[2059517] 0))
            (2059159 'move' tmp[2059149] call_tmp[2059151])
            if call_tmp[2059151]
            {
              const-val tmp[2059164]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2059166]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2059168]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2059524]:int(64)[13] "temp"
              (2059529 'move' low[2059524](2059526 '.v' _iterator[1988973] F0_low[2113694]))
              (2059170 'move' call_tmp[2059168](2059173 call _cast[956223] low[2059524]))
              const-val call_tmp[2059175]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2059177]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2059179 'move' coerce_tmp[2059177](2059181 'cast' uint(64)[115] 1))
              (2059184 'move' call_tmp[2059175](2059187 call -[962382] call_tmp[2059168]))
              const-val call_tmp[2059189]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2059191 'move' call_tmp[2059189](2059194 call _cast[953732] call_tmp[2059175]))
              const-val ret_tmp[2059196]:2*int(64)[1040245] "temp"
              const-val low[2059531]:int(64)[13] "temp"
              (2059536 'move' low[2059531](2059533 '.v' _iterator[1988973] F0_low[2113694]))
              (2059199 call _build_tuple[1040203] low[2059531] call_tmp[2059189] ret_tmp[2059196])
              (2059203 'move' tmp[2059164] ret_tmp[2059196])
              (2059206 'move' tmp[2059147] tmp[2059164])
            }
            {
              const-val tmp[2059210]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2059212]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2059214]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2059538]:int(64)[13] "temp"
              (2059543 'move' count[2059538](2059540 '.v' _iterator[1988973] F1_count[2113698]))
              (2059216 'move' call_tmp[2059214] count[2059538])
              const-val call_tmp[2059219]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2059545]:int(64)[13] "temp"
              (2059550 'move' count[2059545](2059547 '.v' _iterator[1988973] F1_count[2113698]))
              (2059221 'move' call_tmp[2059219](2059224 call -[962415] count[2059545]))
              const-val call_tmp[2059226]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2059552]:int(64)[13] "temp"
              (2059557 'move' low[2059552](2059554 '.v' _iterator[1988973] F0_low[2113694]))
              (2059228 'move' call_tmp[2059226](2059231 call +[439752] low[2059552] call_tmp[2059219]))
              const-val ret_tmp[2059234]:2*int(64)[1040245] "temp"
              const-val low[2059559]:int(64)[13] "temp"
              (2059564 'move' low[2059559](2059561 '.v' _iterator[1988973] F0_low[2113694]))
              (2059237 call _build_tuple[1040203] low[2059559] call_tmp[2059226] ret_tmp[2059234])
              (2059241 'move' tmp[2059210] ret_tmp[2059234])
              (2059244 'move' tmp[2059147] tmp[2059210])
            }
            (2059248 '=' tmp[2059145] tmp[2059147])
            (2059251 'noop')
            1
            ref call_tmp[2059253]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2059255 'move' call_tmp[2059253](2059257 '.' tmp[2059145] x0[1040241]))
            const-val start[2059260]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2059262]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2059264 'move' coerce_tmp[2059262](2059266 'deref' call_tmp[2059253]))
            (2059268 '=' start[2059260] coerce_tmp[2059262])
            (2059271 'noop')
            ref call_tmp[2059272]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2059274 'move' call_tmp[2059272](2059276 '.' tmp[2059145] x1[1040243]))
            const-val end[2059279]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2059281]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2059283 'move' coerce_tmp[2059281](2059285 'deref' call_tmp[2059272]))
            (2059287 '=' end[2059279] coerce_tmp[2059281])
            (2059290 'noop')
            val _indexOfInterest[2059291]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2059293]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2059295]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2059297]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2059300 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2059262] coerce_tmp[2059281] ret_tmp[2059297])
            (2059304 'move' call_tmp[2059295] ret_tmp[2059297])
            (2059307 'move' _iterator[2059293](2059310 call _getIterator[1103490] call_tmp[2059295]))
            {
              val ret[2059313]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
              val call_tmp[2059315]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2059318 call chpl_range_check_stride[1103033])
              val i[2059319]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2059321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2059323 'move' i[2059319] 0)
              val call_tmp[2059326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2059328]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2059330]:int(64)[13] "temp"
              (2059332 'move' low[2059330](2059334 '.v' _iterator[2059293] F0_low[2115192]))
              (2059337 'move' default_arg_first[2059328](2059340 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2059330]))
              const-val default_arg_last[2059342]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2059344]:int(64)[13] "temp"
              (2059346 'move' high[2059344](2059348 '.v' _iterator[2059293] F1_high[2115196]))
              (2059351 'move' default_arg_last[2059342](2059354 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2059344]))
              const-val _return_tmp_[2059356]:bool[10] "dead after last mention" "temp"
              const-val low[2059358]:int(64)[13] "temp"
              (2059360 'move' low[2059358](2059362 '.v' _iterator[2059293] F0_low[2115192]))
              const-val high[2059365]:int(64)[13] "temp"
              (2059367 'move' high[2059365](2059369 '.v' _iterator[2059293] F1_high[2115196]))
              (2059372 'move' _return_tmp_[2059356](2059375 call chpl_checkIfRangeIterWillOverflow[1096265] low[2059358] high[2059365] 1 default_arg_first[2059328] default_arg_last[2059342] 1))
              CForLoop[2059382] hazard
              {
                const-val yret[2059411]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2059413 'move' yret[2059411] i[2059319])
                const-val _yieldedIndex[2059416]:int(64)[13] "temp"
                (2059418 'move' _yieldedIndex[2059416] i[2059319])
                {
                  const-val i[2059422]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2059424 'move' i[2059422] _yieldedIndex[2059416])
                  const-val yret[2059427]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2059429 'move' yret[2059427] _yieldedIndex[2059416])
                  const-val _yieldedIndex[2059457]:int(64)[13] "temp"
                  (2059508 'move' _yieldedIndex[2059457] _yieldedIndex[2059416])
                  {
                    const-val i[2059459]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2059461 'move' i[2059459] _yieldedIndex[2059457])
                    const-val yret[2059464]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2059466 'move' yret[2059464] _yieldedIndex[2059457])
                    const-val _yieldedIndex[2059469]:int(64)[13] "temp"
                    (2059471 'move' _yieldedIndex[2059469] _yieldedIndex[2059457])
                    {
                      const-val i[2059475]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2059477 'move' i[2059475] _yieldedIndex[2059469])
                      {
                        ref call_tmp[2059481]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2059483]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                        (2059485 'move' _this_tmp_[2059483](2059488 call errorsArray[814246] this[169716]))
                        val coerce_tmp[2059490]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2059492 'move' coerce_tmp[2059490](2059494 'deref' _this_tmp_[2059483]))
                        (2059496 'move' call_tmp[2059481](2059499 call this[1235942] coerce_tmp[2059490] i[2059475]))
                        (2059503 call clear[1236236] call_tmp[2059481])
                      }
                      label _continueLabel[2059505]
                    }
                  }
                }
                {
                  const-val low[2059384]:int(64)[13] "temp"
                  (2059386 'move' low[2059384](2059388 '.v' _iterator[2059293] F0_low[2115192]))
                  (2059391 '=' i[2059319] low[2059384])
                }
                {
                  const-val high[2059395]:int(64)[13] "temp"
                  (2059397 'move' high[2059395](2059399 '.v' _iterator[2059293] F1_high[2115196]))
                  (2059402 '<=' i[2059319] high[2059395])
                }
                {
                  val call_tmp[2059406]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2059408 '+=' i[2059319] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[2059445]
            }
            (2059448 call _freeIterator[1103663] _iterator[2059293])
            (2059451 call chpl__autoDestroy[1674803] tmp[2059145])
            label _endchpl_direct_counted_range_iter_helper[2059453]
          }
          (1989016 call _freeIterator[1103913] _iterator[1988973])
          label _endchpl_direct_counted_range_iter[1989018]
        }
        label _breakLabel[168859]
        (1919554 call _freeIterator[1104163] _iterator[168854])
      }
      ref call_tmp[679968]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "maybe param" "temp"
      (679971 'move' call_tmp[679968](388713 call errorsArray[814246] this[169716]))
      val coerce_tmp[1237357]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237361 'move' coerce_tmp[1237357](1237359 'deref' call_tmp[679968]))
      const-val coerce_tmp[1237363]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237369 'move' coerce_tmp[1237363](1237365 'cast' c_void_ptr[149] coerce_tmp[1237357]))
      (168897 call c_free[207907] coerce_tmp[1237363])
    }
    label _enddeinit[1890179]
    val _parent_destructor_tmp_[1890174]:Error[167984] "temp"
    (1890181 'move' _parent_destructor_tmp_[1890174](1890175 'cast' Error[167984] this[169716]))
    (1890183 call deinit[811935] _parent_destructor_tmp_[1890174])
    (522282 return _void[55])
  }
  function TaskErrors[169702].these[168908](const in arg this[169720]:TaskErrors[169702], ref arg _retArg[1906956]:_ref(_ir_these_TaskErrors)[1238282]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[2103675]:_ir_these_TaskErrors[1238171] "temp"
    (2103677 '.=' _ir[2103675] F0_this[2103302] this[169720])
    (2103681 '=' _retArg[1906956] _ir[2103675])
    (2103684 return _void[55])
  }
  type _ic_these_TaskErrors[1238165] val super[1238166]:object[22] "super class" val more[1238168]:int(64)[13] const-val F0_this[2103300]:TaskErrors[169702] val F1__iterator[2103304]:_ic_chpl_direct_counted_range_iter[1103979] val F2__iterator[2103306]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F3_tmp[2103308]:2*int(64)[1040245] val F4__iterator[2103310]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2103312]:int(64)[13] ref value[2103314]:_ref(owned Error?)[966611]
  type _ir_these_TaskErrors[1238171] const-val F0_this[2103302]:TaskErrors[169702]
  function _getIterator[1238180](const  ref arg ir[1238182]:_ir_these_TaskErrors[1238171]) : _ic_these_TaskErrors[1238165] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1238289]:_ic_these_TaskErrors[1238165] "dead after last mention" "RVV" "temp"
    val _ic_[1238172]:_ic_these_TaskErrors[1238165] "dead after last mention" "temp"
    const-val call_tmp[1238296]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238299 'move' call_tmp[1238296](1238311 'sizeof_bundle' _ic_these_TaskErrors[1238165]))
    const-val cast_tmp[1238314]:c_void_ptr[149] "dead after last mention" "temp"
    (1238316 'move' cast_tmp[1238314](1238177 call chpl_here_alloc[187788] call_tmp[1238296] 40))
    (1238185 'move' _ic_[1238172](1238318 'cast' _ic_these_TaskErrors[1238165] cast_tmp[1238314]))
    (1238187 'setcid' _ic_[1238172])
    (1238294 'move' ret[1238289] _ic_[1238172])
    (2103687 '.=' ret[1238289] more[1238168] 1)
    const-val tmp[2103691]:TaskErrors[169702] "temp"
    (2103696 'move' tmp[2103691](2103692 '.v' ir[1238182] F0_this[2103302]))
    (2103698 '.=' ret[1238289] F0_this[2103300] tmp[2103691])
    (1238291 return ret[1238289])
  }
  function TaskErrors[169702].message[169077](const in arg this[169728]:TaskErrors[169702], ref arg _retArg[1918970]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522310]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544746 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1841140 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1841145 call init[30763] maxMsg[169092])
    val first[169099]:Error[167984] "dead at end of block" "insert auto destroy"
    (1841153 'move' first[169099](1841151 'cast' Error[167984] nil[44]))
    val last[169106]:Error[167984] "dead at end of block" "insert auto destroy"
    (1841158 'move' last[169106](1841156 'cast' Error[167984] nil[44]))
    {
      ref _indexOfInterest[169221]:_ref(owned Error?)[966611] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169222]:_ic_these_TaskErrors[1238165] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[680047]:_ir_these_TaskErrors[1238171] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1906932]:_ir_these_TaskErrors[1238171] "temp"
      (169113 call these[168908] this[169728] ret_tmp[1906932])
      (1906935 'move' call_tmp[680047] ret_tmp[1906932])
      (169231 'move' _iterator[169222](169229 call _getIterator[1238180] call_tmp[680047]))
      {
        val ret[1989243]:_ir_these_TaskErrors[1238171] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1989245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1989247]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1989249]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
        const-val this[1989666]:TaskErrors[169702] "temp"
        (1989671 'move' this[1989666](1989668 '.v' _iterator[169222] F0_this[2103300]))
        (1989251 'move' call_tmp[1989249](1989254 call nErrors[814220] this[1989666]))
        const-val call_tmp[1989256]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1989258]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1989260 'move' coerce_tmp[1989258](1989262 'deref' call_tmp[1989249]))
        const-val ret_tmp[1989264]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (1989267 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1989258] ret_tmp[1989264])
        (1989271 'move' call_tmp[1989256] ret_tmp[1989264])
        (1989274 'move' _iterator[1989247](1989277 call _getIterator[1103994] call_tmp[1989256]))
        {
          val ret[1989280]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1989282]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1989284]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1989286]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1989288]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
          const-val low[1989290]:int(64)[13] "temp"
          (1989292 'move' low[1989290](1989294 '.v' _iterator[1989247] F0_low[2107536]))
          const-val count[1989297]:int(64)[13] "temp"
          (1989299 'move' count[1989297](1989301 '.v' _iterator[1989247] F1_count[2107540]))
          (1989305 call chpl_direct_counted_range_iter_helper[1102287] low[1989290] count[1989297] ret_tmp[1989288])
          (1989309 'move' call_tmp[1989286] ret_tmp[1989288])
          (1989312 'move' _iterator[1989284](1989315 call _getIterator[1103744] call_tmp[1989286]))
          {
            val ret[2060091]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
            val call_tmp[2060093]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2060095]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2060097]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2060099]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2060775]:int(64)[13] "temp"
            (2060780 'move' count[2060775](2060777 '.v' _iterator[1989284] F1_count[2113698]))
            (2060101 'move' call_tmp[2060099](2060104 call <[948587] count[2060775]))
            (2060106 'move' tmp[2060097] call_tmp[2060099])
            (2060109 'move' tmp[2060095] call_tmp[2060099])
            const-val call_tmp[2060112]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2060114 'move' call_tmp[2060112] call_tmp[2060099])
            if call_tmp[2060099]
            {
              (2060120 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2060123]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2060125]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2060127]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2060129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2060782]:int(64)[13] "temp"
            (2060787 'move' count[2060782](2060784 '.v' _iterator[1989284] F1_count[2113698]))
            (2060131 'move' call_tmp[2060129](2060134 call ==[435744] count[2060782] 0))
            (2060137 'move' tmp[2060127] call_tmp[2060129])
            if call_tmp[2060129]
            {
              const-val tmp[2060142]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2060144]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2060146]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2060789]:int(64)[13] "temp"
              (2060794 'move' low[2060789](2060791 '.v' _iterator[1989284] F0_low[2113694]))
              (2060148 'move' call_tmp[2060146](2060151 call _cast[956223] low[2060789]))
              const-val call_tmp[2060153]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2060155]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2060157 'move' coerce_tmp[2060155](2060159 'cast' uint(64)[115] 1))
              (2060162 'move' call_tmp[2060153](2060165 call -[962382] call_tmp[2060146]))
              const-val call_tmp[2060167]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (2060169 'move' call_tmp[2060167](2060172 call _cast[953732] call_tmp[2060153]))
              const-val ret_tmp[2060174]:2*int(64)[1040245] "temp"
              const-val low[2060796]:int(64)[13] "temp"
              (2060801 'move' low[2060796](2060798 '.v' _iterator[1989284] F0_low[2113694]))
              (2060177 call _build_tuple[1040203] low[2060796] call_tmp[2060167] ret_tmp[2060174])
              (2060181 'move' tmp[2060142] ret_tmp[2060174])
              (2060184 'move' tmp[2060125] tmp[2060142])
            }
            {
              const-val tmp[2060188]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2060190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2060192]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2060803]:int(64)[13] "temp"
              (2060808 'move' count[2060803](2060805 '.v' _iterator[1989284] F1_count[2113698]))
              (2060194 'move' call_tmp[2060192] count[2060803])
              const-val call_tmp[2060197]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2060810]:int(64)[13] "temp"
              (2060815 'move' count[2060810](2060812 '.v' _iterator[1989284] F1_count[2113698]))
              (2060199 'move' call_tmp[2060197](2060202 call -[962415] count[2060810]))
              const-val call_tmp[2060204]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2060817]:int(64)[13] "temp"
              (2060822 'move' low[2060817](2060819 '.v' _iterator[1989284] F0_low[2113694]))
              (2060206 'move' call_tmp[2060204](2060209 call +[439752] low[2060817] call_tmp[2060197]))
              const-val ret_tmp[2060212]:2*int(64)[1040245] "temp"
              const-val low[2060824]:int(64)[13] "temp"
              (2060829 'move' low[2060824](2060826 '.v' _iterator[1989284] F0_low[2113694]))
              (2060215 call _build_tuple[1040203] low[2060824] call_tmp[2060204] ret_tmp[2060212])
              (2060219 'move' tmp[2060188] ret_tmp[2060212])
              (2060222 'move' tmp[2060125] tmp[2060188])
            }
            (2060226 '=' tmp[2060123] tmp[2060125])
            (2060229 'noop')
            1
            ref call_tmp[2060231]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2060233 'move' call_tmp[2060231](2060235 '.' tmp[2060123] x0[1040241]))
            const-val start[2060238]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2060240]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2060242 'move' coerce_tmp[2060240](2060244 'deref' call_tmp[2060231]))
            (2060246 '=' start[2060238] coerce_tmp[2060240])
            (2060249 'noop')
            ref call_tmp[2060250]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2060252 'move' call_tmp[2060250](2060254 '.' tmp[2060123] x1[1040243]))
            const-val end[2060257]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2060259]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2060261 'move' coerce_tmp[2060259](2060263 'deref' call_tmp[2060250]))
            (2060265 '=' end[2060257] coerce_tmp[2060259])
            (2060268 'noop')
            val _indexOfInterest[2060269]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2060271]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2060273]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2060275]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2060278 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2060240] coerce_tmp[2060259] ret_tmp[2060275])
            (2060282 'move' call_tmp[2060273] ret_tmp[2060275])
            (2060285 'move' _iterator[2060271](2060288 call _getIterator[1103490] call_tmp[2060273]))
            {
              val ret[2060291]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
              val call_tmp[2060293]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2060296 call chpl_range_check_stride[1103033])
              val i[2060297]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[2060299]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (2060301 'move' i[2060297] 0)
              val call_tmp[2060304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[2060306]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[2060308]:int(64)[13] "temp"
              (2060310 'move' low[2060308](2060312 '.v' _iterator[2060271] F0_low[2115192]))
              (2060315 'move' default_arg_first[2060306](2060318 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2060308]))
              const-val default_arg_last[2060320]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[2060322]:int(64)[13] "temp"
              (2060324 'move' high[2060322](2060326 '.v' _iterator[2060271] F1_high[2115196]))
              (2060329 'move' default_arg_last[2060320](2060332 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2060322]))
              const-val _return_tmp_[2060334]:bool[10] "dead after last mention" "temp"
              const-val low[2060336]:int(64)[13] "temp"
              (2060338 'move' low[2060336](2060340 '.v' _iterator[2060271] F0_low[2115192]))
              const-val high[2060343]:int(64)[13] "temp"
              (2060345 'move' high[2060343](2060347 '.v' _iterator[2060271] F1_high[2115196]))
              (2060350 'move' _return_tmp_[2060334](2060353 call chpl_checkIfRangeIterWillOverflow[1096265] low[2060336] high[2060343] 1 default_arg_first[2060306] default_arg_last[2060320] 1))
              CForLoop[2060360] hazard
              {
                const-val yret[2060389]:int(64)[13] "dead after last mention" "YVV" "temp"
                (2060391 'move' yret[2060389] i[2060297])
                const-val _yieldedIndex[2060394]:int(64)[13] "temp"
                (2060396 'move' _yieldedIndex[2060394] i[2060297])
                {
                  const-val i[2060400]:int(64)[13] "const" "index var" "insert auto destroy"
                  (2060402 'move' i[2060400] _yieldedIndex[2060394])
                  const-val yret[2060405]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2060407 'move' yret[2060405] _yieldedIndex[2060394])
                  const-val _yieldedIndex[2060435]:int(64)[13] "temp"
                  (2060773 'move' _yieldedIndex[2060435] _yieldedIndex[2060394])
                  {
                    const-val i[2060437]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2060439 'move' i[2060437] _yieldedIndex[2060435])
                    const-val yret[2060442]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2060444 'move' yret[2060442] _yieldedIndex[2060435])
                    const-val _yieldedIndex[2060447]:int(64)[13] "temp"
                    (2060449 'move' _yieldedIndex[2060447] _yieldedIndex[2060435])
                    {
                      const-val i[2060453]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2060455 'move' i[2060453] _yieldedIndex[2060447])
                      ref call_tmp[2060458]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[2060460]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                      const-val this[2060462]:TaskErrors[169702] "temp"
                      (2060464 'move' this[2060462](2060466 '.v' _iterator[169222] F0_this[2103300]))
                      (2060469 'move' _this_tmp_[2060460](2060472 call errorsArray[814246] this[2060462]))
                      val coerce_tmp[2060474]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2060476 'move' coerce_tmp[2060474](2060478 'deref' _this_tmp_[2060460]))
                      (2060480 'move' call_tmp[2060458](2060483 call this[1235942] coerce_tmp[2060474] _yieldedIndex[2060447]))
                      const-val call_tmp[2060486]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[2060488]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2060490 'move' coerce_tmp[2060488](2060493 call borrow[1236017] call_tmp[2060458]))
                      val coerce_tmp[2060495]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (2060497 'move' coerce_tmp[2060495](2060499 'cast' object[22] coerce_tmp[2060488]))
                      (2060502 'move' call_tmp[2060486](2060505 call !=[1485] coerce_tmp[2060495] nil[44]))
                      const-val call_tmp[2060508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (2060510 'move' call_tmp[2060508] call_tmp[2060486])
                      if call_tmp[2060486]
                      {
                        ref yret[2060515]:_ref(owned Error?)[966611] "dead after last mention" "YVV" "temp"
                        ref call_tmp[2060517]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2060519]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                        const-val this[2060521]:TaskErrors[169702] "temp"
                        (2060523 'move' this[2060521](2060525 '.v' _iterator[169222] F0_this[2103300]))
                        (2060528 'move' _this_tmp_[2060519](2060531 call errorsArray[814246] this[2060521]))
                        val coerce_tmp[2060533]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2060535 'move' coerce_tmp[2060533](2060537 'deref' _this_tmp_[2060519]))
                        (2060539 'move' call_tmp[2060517](2060542 call this[1235942] coerce_tmp[2060533] i[2060453]))
                        ref _yieldedIndex[2060545]:_ref(owned Error?)[966611] "temp"
                        (2060547 'move' _yieldedIndex[2060545] call_tmp[2060517])
                        {
                          ref err[2060551]:_ref(owned Error?)[966611] "index var" "insert auto destroy"
                          (2060553 'move' err[2060551] _yieldedIndex[2060545])
                          {
                            val call_tmp[2060557]:Error[167984] "dead at end of block" "maybe param" "temp"
                            (2060559 'move' call_tmp[2060557](2060562 call postfix![1840508] err[2060551]))
                            val e[2060564]:Error[167984] "dead at end of block" "insert auto destroy"
                            (2060566 'move' e[2060564](2060569 call chpl__initCopy[965806] call_tmp[2060557]))
                            const-val tmp[2060571]:bool[10] "dead after last mention" "maybe param" "temp"
                            (2060573 'move' tmp[2060571](2060576 call ==[38823] minMsg[169087] ""))
                            val tmp[2060579]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[2060581]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[2060583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2060585 'move' call_tmp[2060583] tmp[2060571])
                            (2060588 'move' tmp[2060581] call_tmp[2060583])
                            if tmp[2060581]
                            {
                              (2060593 'move' tmp[2060579] 1)
                            }
                            {
                              const-val tmp[2060597]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[2060599]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2060601]:int(32)[95] "temp"
                              (2060603 'move' _virtual_method_tmp_[2060601](2060605 'getcid' e[2060564]))
                              val ret_tmp[2060607]:string[26] "temp"
                              (2060609 'virtual method call' message[167975] _virtual_method_tmp_[2060601] e[2060564] ret_tmp[2060607])
                              (2060614 'move' call_tmp[2060599] ret_tmp[2060607])
                              const-val call_tmp[2060617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2060619 'move' call_tmp[2060617](2060622 call <[38873] call_tmp[2060599] minMsg[169087]))
                              (2060625 'move' tmp[2060597] call_tmp[2060617])
                              (2060628 'move' tmp[2060579] tmp[2060597])
                              (2060632 call chpl__autoDestroy[1601673] call_tmp[2060599])
                            }
                            const-val call_tmp[2060635]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2060637 'move' call_tmp[2060635] tmp[2060579])
                            if call_tmp[2060635]
                            {
                              const-val call_tmp[2060642]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2060644]:int(32)[95] "temp"
                              (2060646 'move' _virtual_method_tmp_[2060644](2060648 'getcid' e[2060564]))
                              val ret_tmp[2060650]:string[26] "temp"
                              (2060652 'virtual method call' message[167975] _virtual_method_tmp_[2060644] e[2060564] ret_tmp[2060650])
                              (2060657 'move' call_tmp[2060642] ret_tmp[2060650])
                              (2060661 call =[38272] minMsg[169087] call_tmp[2060642])
                              (2060665 call chpl__autoDestroy[1601673] call_tmp[2060642])
                            }
                            const-val tmp[2060668]:bool[10] "dead after last mention" "maybe param" "temp"
                            (2060670 'move' tmp[2060668](2060673 call ==[38823] maxMsg[169092] ""))
                            val tmp[2060676]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[2060678]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[2060680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2060682 'move' call_tmp[2060680] tmp[2060668])
                            (2060685 'move' tmp[2060678] call_tmp[2060680])
                            if tmp[2060678]
                            {
                              (2060690 'move' tmp[2060676] 1)
                            }
                            {
                              const-val tmp[2060694]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[2060696]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2060698]:int(32)[95] "temp"
                              (2060700 'move' _virtual_method_tmp_[2060698](2060702 'getcid' e[2060564]))
                              val ret_tmp[2060704]:string[26] "temp"
                              (2060706 'virtual method call' message[167975] _virtual_method_tmp_[2060698] e[2060564] ret_tmp[2060704])
                              (2060711 'move' call_tmp[2060696] ret_tmp[2060704])
                              const-val call_tmp[2060714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2060716 'move' call_tmp[2060714](2060719 call >[38897] call_tmp[2060696] maxMsg[169092]))
                              (2060722 'move' tmp[2060694] call_tmp[2060714])
                              (2060725 'move' tmp[2060676] tmp[2060694])
                              (2060729 call chpl__autoDestroy[1601673] call_tmp[2060696])
                            }
                            const-val call_tmp[2060732]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (2060734 'move' call_tmp[2060732] tmp[2060676])
                            if call_tmp[2060732]
                            {
                              const-val call_tmp[2060739]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2060741]:int(32)[95] "temp"
                              (2060743 'move' _virtual_method_tmp_[2060741](2060745 'getcid' e[2060564]))
                              val ret_tmp[2060747]:string[26] "temp"
                              (2060749 'virtual method call' message[167975] _virtual_method_tmp_[2060741] e[2060564] ret_tmp[2060747])
                              (2060754 'move' call_tmp[2060739] ret_tmp[2060747])
                              (2060758 call =[38272] maxMsg[169092] call_tmp[2060739])
                              (2060762 call chpl__autoDestroy[1601673] call_tmp[2060739])
                            }
                            (2060766 call +=[451431] n[169081] 1)
                          }
                          label _continueLabel[2060769]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[2060362]:int(64)[13] "temp"
                  (2060364 'move' low[2060362](2060366 '.v' _iterator[2060271] F0_low[2115192]))
                  (2060369 '=' i[2060297] low[2060362])
                }
                {
                  const-val high[2060373]:int(64)[13] "temp"
                  (2060375 'move' high[2060373](2060377 '.v' _iterator[2060271] F1_high[2115196]))
                  (2060380 '<=' i[2060297] high[2060373])
                }
                {
                  val call_tmp[2060384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2060386 '+=' i[2060297] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[2060423]
            }
            (2060426 call _freeIterator[1103663] _iterator[2060271])
            (2060429 call chpl__autoDestroy[1674803] tmp[2060123])
            label _endchpl_direct_counted_range_iter_helper[2060431]
          }
          (1989432 call _freeIterator[1103913] _iterator[1989284])
          label _endchpl_direct_counted_range_iter[1989434]
        }
        (1989437 call _freeIterator[1104163] _iterator[1989247])
        label _endthese[1989439]
      }
      label _breakLabel[169227]
      (1919584 call _freeIterator[1238422] _iterator[169222])
    }
    {
      {
        ref _indexOfInterest[169300]:_ref(owned Error?)[966611] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169301]:_ic_these_TaskErrors[1238165] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[680127]:_ir_these_TaskErrors[1238171] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1906938]:_ir_these_TaskErrors[1238171] "temp"
        (169258 call these[168908] this[169728] ret_tmp[1906938])
        (1906941 'move' call_tmp[680127] ret_tmp[1906938])
        (169310 'move' _iterator[169301](169308 call _getIterator[1238180] call_tmp[680127]))
        {
          val ret[1989688]:_ir_these_TaskErrors[1238171] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1989690]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1989692]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1989694]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
          const-val this[1989991]:TaskErrors[169702] "temp"
          (1989996 'move' this[1989991](1989993 '.v' _iterator[169301] F0_this[2103300]))
          (1989696 'move' call_tmp[1989694](1989699 call nErrors[814220] this[1989991]))
          const-val call_tmp[1989701]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1989703]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1989705 'move' coerce_tmp[1989703](1989707 'deref' call_tmp[1989694]))
          const-val ret_tmp[1989709]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
          (1989712 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1989703] ret_tmp[1989709])
          (1989716 'move' call_tmp[1989701] ret_tmp[1989709])
          (1989719 'move' _iterator[1989692](1989722 call _getIterator[1103994] call_tmp[1989701]))
          {
            val ret[1989725]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1989727]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1989729]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1989731]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1989733]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            const-val low[1989735]:int(64)[13] "temp"
            (1989737 'move' low[1989735](1989739 '.v' _iterator[1989692] F0_low[2107536]))
            const-val count[1989742]:int(64)[13] "temp"
            (1989744 'move' count[1989742](1989746 '.v' _iterator[1989692] F1_count[2107540]))
            (1989750 call chpl_direct_counted_range_iter_helper[1102287] low[1989735] count[1989742] ret_tmp[1989733])
            (1989754 'move' call_tmp[1989731] ret_tmp[1989733])
            (1989757 'move' _iterator[1989729](1989760 call _getIterator[1103744] call_tmp[1989731]))
            {
              val ret[2060832]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
              val call_tmp[2060834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[2060836]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[2060838]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[2060840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[2061396]:int(64)[13] "temp"
              (2061401 'move' count[2061396](2061398 '.v' _iterator[1989729] F1_count[2113698]))
              (2060842 'move' call_tmp[2060840](2060845 call <[948587] count[2061396]))
              (2060847 'move' tmp[2060838] call_tmp[2060840])
              (2060850 'move' tmp[2060836] call_tmp[2060840])
              const-val call_tmp[2060853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2060855 'move' call_tmp[2060853] call_tmp[2060840])
              if call_tmp[2060840]
              {
                (2060861 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
              }
              const-val tmp[2060864]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[2060866]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[2060868]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[2060870]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[2061403]:int(64)[13] "temp"
              (2061408 'move' count[2061403](2061405 '.v' _iterator[1989729] F1_count[2113698]))
              (2060872 'move' call_tmp[2060870](2060875 call ==[435744] count[2061403] 0))
              (2060878 'move' tmp[2060868] call_tmp[2060870])
              if call_tmp[2060870]
              {
                const-val tmp[2060883]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[2060885]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[2060887]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[2061410]:int(64)[13] "temp"
                (2061415 'move' low[2061410](2061412 '.v' _iterator[1989729] F0_low[2113694]))
                (2060889 'move' call_tmp[2060887](2060892 call _cast[956223] low[2061410]))
                const-val call_tmp[2060894]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[2060896]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2060898 'move' coerce_tmp[2060896](2060900 'cast' uint(64)[115] 1))
                (2060903 'move' call_tmp[2060894](2060906 call -[962382] call_tmp[2060887]))
                const-val call_tmp[2060908]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (2060910 'move' call_tmp[2060908](2060913 call _cast[953732] call_tmp[2060894]))
                const-val ret_tmp[2060915]:2*int(64)[1040245] "temp"
                const-val low[2061417]:int(64)[13] "temp"
                (2061422 'move' low[2061417](2061419 '.v' _iterator[1989729] F0_low[2113694]))
                (2060918 call _build_tuple[1040203] low[2061417] call_tmp[2060908] ret_tmp[2060915])
                (2060922 'move' tmp[2060883] ret_tmp[2060915])
                (2060925 'move' tmp[2060866] tmp[2060883])
              }
              {
                const-val tmp[2060929]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[2060931]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[2060933]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[2061424]:int(64)[13] "temp"
                (2061429 'move' count[2061424](2061426 '.v' _iterator[1989729] F1_count[2113698]))
                (2060935 'move' call_tmp[2060933] count[2061424])
                const-val call_tmp[2060938]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[2061431]:int(64)[13] "temp"
                (2061436 'move' count[2061431](2061433 '.v' _iterator[1989729] F1_count[2113698]))
                (2060940 'move' call_tmp[2060938](2060943 call -[962415] count[2061431]))
                const-val call_tmp[2060945]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[2061438]:int(64)[13] "temp"
                (2061443 'move' low[2061438](2061440 '.v' _iterator[1989729] F0_low[2113694]))
                (2060947 'move' call_tmp[2060945](2060950 call +[439752] low[2061438] call_tmp[2060938]))
                const-val ret_tmp[2060953]:2*int(64)[1040245] "temp"
                const-val low[2061445]:int(64)[13] "temp"
                (2061450 'move' low[2061445](2061447 '.v' _iterator[1989729] F0_low[2113694]))
                (2060956 call _build_tuple[1040203] low[2061445] call_tmp[2060945] ret_tmp[2060953])
                (2060960 'move' tmp[2060929] ret_tmp[2060953])
                (2060963 'move' tmp[2060866] tmp[2060929])
              }
              (2060967 '=' tmp[2060864] tmp[2060866])
              (2060970 'noop')
              1
              ref call_tmp[2060972]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
              (2060974 'move' call_tmp[2060972](2060976 '.' tmp[2060864] x0[1040241]))
              const-val start[2060979]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2060981]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (2060983 'move' coerce_tmp[2060981](2060985 'deref' call_tmp[2060972]))
              (2060987 '=' start[2060979] coerce_tmp[2060981])
              (2060990 'noop')
              ref call_tmp[2060991]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
              (2060993 'move' call_tmp[2060991](2060995 '.' tmp[2060864] x1[1040243]))
              const-val end[2060998]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[2061000]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (2061002 'move' coerce_tmp[2061000](2061004 'deref' call_tmp[2060991]))
              (2061006 '=' end[2060998] coerce_tmp[2061000])
              (2061009 'noop')
              val _indexOfInterest[2061010]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2061012]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2061014]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2061016]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
              (2061019 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2060981] coerce_tmp[2061000] ret_tmp[2061016])
              (2061023 'move' call_tmp[2061014] ret_tmp[2061016])
              (2061026 'move' _iterator[2061012](2061029 call _getIterator[1103490] call_tmp[2061014]))
              {
                val ret[2061032]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                val call_tmp[2061034]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2061037 call chpl_range_check_stride[1103033])
                val i[2061038]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[2061040]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2061042 'move' i[2061038] 0)
                val call_tmp[2061045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[2061047]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[2061049]:int(64)[13] "temp"
                (2061051 'move' low[2061049](2061053 '.v' _iterator[2061012] F0_low[2115192]))
                (2061056 'move' default_arg_first[2061047](2061059 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2061049]))
                const-val default_arg_last[2061061]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[2061063]:int(64)[13] "temp"
                (2061065 'move' high[2061063](2061067 '.v' _iterator[2061012] F1_high[2115196]))
                (2061070 'move' default_arg_last[2061061](2061073 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2061063]))
                const-val _return_tmp_[2061075]:bool[10] "dead after last mention" "temp"
                const-val low[2061077]:int(64)[13] "temp"
                (2061079 'move' low[2061077](2061081 '.v' _iterator[2061012] F0_low[2115192]))
                const-val high[2061084]:int(64)[13] "temp"
                (2061086 'move' high[2061084](2061088 '.v' _iterator[2061012] F1_high[2115196]))
                (2061091 'move' _return_tmp_[2061075](2061094 call chpl_checkIfRangeIterWillOverflow[1096265] low[2061077] high[2061084] 1 default_arg_first[2061047] default_arg_last[2061061] 1))
                CForLoop[2061101] hazard
                {
                  const-val yret[2061130]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (2061132 'move' yret[2061130] i[2061038])
                  const-val _yieldedIndex[2061135]:int(64)[13] "temp"
                  (2061137 'move' _yieldedIndex[2061135] i[2061038])
                  {
                    const-val i[2061141]:int(64)[13] "const" "index var" "insert auto destroy"
                    (2061143 'move' i[2061141] _yieldedIndex[2061135])
                    const-val yret[2061146]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2061148 'move' yret[2061146] _yieldedIndex[2061135])
                    const-val _yieldedIndex[2061176]:int(64)[13] "temp"
                    (2061394 'move' _yieldedIndex[2061176] _yieldedIndex[2061135])
                    {
                      const-val i[2061178]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2061180 'move' i[2061178] _yieldedIndex[2061176])
                      const-val yret[2061183]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2061185 'move' yret[2061183] _yieldedIndex[2061176])
                      const-val _yieldedIndex[2061188]:int(64)[13] "temp"
                      (2061190 'move' _yieldedIndex[2061188] _yieldedIndex[2061176])
                      {
                        const-val i[2061194]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2061196 'move' i[2061194] _yieldedIndex[2061188])
                        ref call_tmp[2061199]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[2061201]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                        const-val this[2061203]:TaskErrors[169702] "temp"
                        (2061205 'move' this[2061203](2061207 '.v' _iterator[169301] F0_this[2103300]))
                        (2061210 'move' _this_tmp_[2061201](2061213 call errorsArray[814246] this[2061203]))
                        val coerce_tmp[2061215]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2061217 'move' coerce_tmp[2061215](2061219 'deref' _this_tmp_[2061201]))
                        (2061221 'move' call_tmp[2061199](2061224 call this[1235942] coerce_tmp[2061215] _yieldedIndex[2061188]))
                        const-val call_tmp[2061227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[2061229]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2061231 'move' coerce_tmp[2061229](2061234 call borrow[1236017] call_tmp[2061199]))
                        val coerce_tmp[2061236]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (2061238 'move' coerce_tmp[2061236](2061240 'cast' object[22] coerce_tmp[2061229]))
                        (2061243 'move' call_tmp[2061227](2061246 call !=[1485] coerce_tmp[2061236] nil[44]))
                        const-val call_tmp[2061249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (2061251 'move' call_tmp[2061249] call_tmp[2061227])
                        if call_tmp[2061227]
                        {
                          ref yret[2061256]:_ref(owned Error?)[966611] "dead after last mention" "YVV" "temp"
                          ref call_tmp[2061258]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[2061260]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                          const-val this[2061262]:TaskErrors[169702] "temp"
                          (2061264 'move' this[2061262](2061266 '.v' _iterator[169301] F0_this[2103300]))
                          (2061269 'move' _this_tmp_[2061260](2061272 call errorsArray[814246] this[2061262]))
                          val coerce_tmp[2061274]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2061276 'move' coerce_tmp[2061274](2061278 'deref' _this_tmp_[2061260]))
                          (2061280 'move' call_tmp[2061258](2061283 call this[1235942] coerce_tmp[2061274] i[2061194]))
                          ref _yieldedIndex[2061286]:_ref(owned Error?)[966611] "temp"
                          (2061288 'move' _yieldedIndex[2061286] call_tmp[2061258])
                          {
                            ref err[2061292]:_ref(owned Error?)[966611] "index var" "insert auto destroy"
                            (2061294 'move' err[2061292] _yieldedIndex[2061286])
                            {
                              val call_tmp[2061298]:Error[167984] "dead at end of block" "maybe param" "temp"
                              (2061300 'move' call_tmp[2061298](2061303 call postfix![1840508] err[2061292]))
                              val e[2061305]:Error[167984] "dead at end of block" "insert auto destroy"
                              (2061307 'move' e[2061305](2061310 call chpl__initCopy[965806] call_tmp[2061298]))
                              const-val call_tmp[2061312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[2061314]:int(32)[95] "temp"
                              (2061316 'move' _virtual_method_tmp_[2061314](2061318 'getcid' e[2061305]))
                              val ret_tmp[2061320]:string[26] "temp"
                              (2061322 'virtual method call' message[167975] _virtual_method_tmp_[2061314] e[2061305] ret_tmp[2061320])
                              (2061327 'move' call_tmp[2061312] ret_tmp[2061320])
                              const-val call_tmp[2061330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2061332 'move' call_tmp[2061330](2061335 call ==[38823] call_tmp[2061312] minMsg[169087]))
                              const-val call_tmp[2061338]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2061340 'move' call_tmp[2061338] call_tmp[2061330])
                              if call_tmp[2061338]
                              {
                                const-val call_tmp[2061345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[2061347]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2061349 'move' coerce_tmp[2061347](2061351 'cast' object[22] first[169099]))
                                (2061354 'move' call_tmp[2061345](2061357 call ==[1146] coerce_tmp[2061347] nil[44]))
                                const-val call_tmp[2061360]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2061362 'move' call_tmp[2061360] call_tmp[2061345])
                                if call_tmp[2061360]
                                {
                                  val coerce_tmp[2061367]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (2061369 'move' coerce_tmp[2061367] e[2061305])
                                  (2061373 call =[1232607] first[169099] coerce_tmp[2061367])
                                }
                                val coerce_tmp[2061377]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2061379 'move' coerce_tmp[2061377] e[2061305])
                                (2061383 call =[1232607] last[169106] coerce_tmp[2061377])
                              }
                              (2061388 call chpl__autoDestroy[1601673] call_tmp[2061312])
                            }
                            label _continueLabel[2061390]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[2061103]:int(64)[13] "temp"
                    (2061105 'move' low[2061103](2061107 '.v' _iterator[2061012] F0_low[2115192]))
                    (2061110 '=' i[2061038] low[2061103])
                  }
                  {
                    const-val high[2061114]:int(64)[13] "temp"
                    (2061116 'move' high[2061114](2061118 '.v' _iterator[2061012] F1_high[2115196]))
                    (2061121 '<=' i[2061038] high[2061114])
                  }
                  {
                    val call_tmp[2061125]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (2061127 '+=' i[2061038] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[2061164]
              }
              (2061167 call _freeIterator[1103663] _iterator[2061012])
              (2061170 call chpl__autoDestroy[1674803] tmp[2060864])
              label _endchpl_direct_counted_range_iter_helper[2061172]
            }
            (1989877 call _freeIterator[1103913] _iterator[1989729])
            label _endchpl_direct_counted_range_iter[1989879]
          }
          (1989882 call _freeIterator[1104163] _iterator[1989692])
          label _endthese[1989884]
        }
        label _breakLabel[169306]
        (1919593 call _freeIterator[1238422] _iterator[169301])
      }
      const-val call_tmp[680164]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680167 'move' call_tmp[680164](169337 call !=[38847] minMsg[169087] maxMsg[169092]))
      const-val call_tmp[680169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680172 'move' call_tmp[680169] call_tmp[680164])
      if call_tmp[680169]
      {
        {
          ref _indexOfInterest[169370]:_ref(owned Error?)[966611] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169371]:_ic_these_TaskErrors[1238165] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[680176]:_ir_these_TaskErrors[1238171] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1906944]:_ir_these_TaskErrors[1238171] "temp"
          (169342 call these[168908] this[169728] ret_tmp[1906944])
          (1906947 'move' call_tmp[680176] ret_tmp[1906944])
          (169380 'move' _iterator[169371](169378 call _getIterator[1238180] call_tmp[680176]))
          {
            val ret[1990013]:_ir_these_TaskErrors[1238171] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1990015]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1990017]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1990019]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
            const-val this[1990284]:TaskErrors[169702] "temp"
            (1990289 'move' this[1990284](1990286 '.v' _iterator[169371] F0_this[2103300]))
            (1990021 'move' call_tmp[1990019](1990024 call nErrors[814220] this[1990284]))
            const-val call_tmp[1990026]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1990028]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1990030 'move' coerce_tmp[1990028](1990032 'deref' call_tmp[1990019]))
            const-val ret_tmp[1990034]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (1990037 call chpl_direct_counted_range_iter[458112] 0 coerce_tmp[1990028] ret_tmp[1990034])
            (1990041 'move' call_tmp[1990026] ret_tmp[1990034])
            (1990044 'move' _iterator[1990017](1990047 call _getIterator[1103994] call_tmp[1990026]))
            {
              val ret[1990050]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1990052]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1990054]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1990056]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1990058]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
              const-val low[1990060]:int(64)[13] "temp"
              (1990062 'move' low[1990060](1990064 '.v' _iterator[1990017] F0_low[2107536]))
              const-val count[1990067]:int(64)[13] "temp"
              (1990069 'move' count[1990067](1990071 '.v' _iterator[1990017] F1_count[2107540]))
              (1990075 call chpl_direct_counted_range_iter_helper[1102287] low[1990060] count[1990067] ret_tmp[1990058])
              (1990079 'move' call_tmp[1990056] ret_tmp[1990058])
              (1990082 'move' _iterator[1990054](1990085 call _getIterator[1103744] call_tmp[1990056]))
              {
                val ret[2061453]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
                val call_tmp[2061455]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2061457]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2061459]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2061461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2061985]:int(64)[13] "temp"
                (2061990 'move' count[2061985](2061987 '.v' _iterator[1990054] F1_count[2113698]))
                (2061463 'move' call_tmp[2061461](2061466 call <[948587] count[2061985]))
                (2061468 'move' tmp[2061459] call_tmp[2061461])
                (2061471 'move' tmp[2061457] call_tmp[2061461])
                const-val call_tmp[2061474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2061476 'move' call_tmp[2061474] call_tmp[2061461])
                if call_tmp[2061461]
                {
                  (2061482 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2061485]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2061487]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2061489]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2061491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2061992]:int(64)[13] "temp"
                (2061997 'move' count[2061992](2061994 '.v' _iterator[1990054] F1_count[2113698]))
                (2061493 'move' call_tmp[2061491](2061496 call ==[435744] count[2061992] 0))
                (2061499 'move' tmp[2061489] call_tmp[2061491])
                if call_tmp[2061491]
                {
                  const-val tmp[2061504]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2061506]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2061508]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2061999]:int(64)[13] "temp"
                  (2062004 'move' low[2061999](2062001 '.v' _iterator[1990054] F0_low[2113694]))
                  (2061510 'move' call_tmp[2061508](2061513 call _cast[956223] low[2061999]))
                  const-val call_tmp[2061515]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2061517]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2061519 'move' coerce_tmp[2061517](2061521 'cast' uint(64)[115] 1))
                  (2061524 'move' call_tmp[2061515](2061527 call -[962382] call_tmp[2061508]))
                  const-val call_tmp[2061529]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2061531 'move' call_tmp[2061529](2061534 call _cast[953732] call_tmp[2061515]))
                  const-val ret_tmp[2061536]:2*int(64)[1040245] "temp"
                  const-val low[2062006]:int(64)[13] "temp"
                  (2062011 'move' low[2062006](2062008 '.v' _iterator[1990054] F0_low[2113694]))
                  (2061539 call _build_tuple[1040203] low[2062006] call_tmp[2061529] ret_tmp[2061536])
                  (2061543 'move' tmp[2061504] ret_tmp[2061536])
                  (2061546 'move' tmp[2061487] tmp[2061504])
                }
                {
                  const-val tmp[2061550]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2061552]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2061554]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2062013]:int(64)[13] "temp"
                  (2062018 'move' count[2062013](2062015 '.v' _iterator[1990054] F1_count[2113698]))
                  (2061556 'move' call_tmp[2061554] count[2062013])
                  const-val call_tmp[2061559]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2062020]:int(64)[13] "temp"
                  (2062025 'move' count[2062020](2062022 '.v' _iterator[1990054] F1_count[2113698]))
                  (2061561 'move' call_tmp[2061559](2061564 call -[962415] count[2062020]))
                  const-val call_tmp[2061566]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2062027]:int(64)[13] "temp"
                  (2062032 'move' low[2062027](2062029 '.v' _iterator[1990054] F0_low[2113694]))
                  (2061568 'move' call_tmp[2061566](2061571 call +[439752] low[2062027] call_tmp[2061559]))
                  const-val ret_tmp[2061574]:2*int(64)[1040245] "temp"
                  const-val low[2062034]:int(64)[13] "temp"
                  (2062039 'move' low[2062034](2062036 '.v' _iterator[1990054] F0_low[2113694]))
                  (2061577 call _build_tuple[1040203] low[2062034] call_tmp[2061566] ret_tmp[2061574])
                  (2061581 'move' tmp[2061550] ret_tmp[2061574])
                  (2061584 'move' tmp[2061487] tmp[2061550])
                }
                (2061588 '=' tmp[2061485] tmp[2061487])
                (2061591 'noop')
                1
                ref call_tmp[2061593]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2061595 'move' call_tmp[2061593](2061597 '.' tmp[2061485] x0[1040241]))
                const-val start[2061600]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2061602]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2061604 'move' coerce_tmp[2061602](2061606 'deref' call_tmp[2061593]))
                (2061608 '=' start[2061600] coerce_tmp[2061602])
                (2061611 'noop')
                ref call_tmp[2061612]:_ref(int(64))[936761] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2061614 'move' call_tmp[2061612](2061616 '.' tmp[2061485] x1[1040243]))
                const-val end[2061619]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2061621]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2061623 'move' coerce_tmp[2061621](2061625 'deref' call_tmp[2061612]))
                (2061627 '=' end[2061619] coerce_tmp[2061621])
                (2061630 'noop')
                val _indexOfInterest[2061631]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2061633]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2061635]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2061637]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
                (2061640 call chpl_direct_param_stride_range_iter[1102713] coerce_tmp[2061602] coerce_tmp[2061621] ret_tmp[2061637])
                (2061644 'move' call_tmp[2061635] ret_tmp[2061637])
                (2061647 'move' _iterator[2061633](2061650 call _getIterator[1103490] call_tmp[2061635]))
                {
                  val ret[2061653]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
                  val call_tmp[2061655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2061658 call chpl_range_check_stride[1103033])
                  val i[2061659]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2061661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2061663 'move' i[2061659] 0)
                  val call_tmp[2061666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2061668]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2061670]:int(64)[13] "temp"
                  (2061672 'move' low[2061670](2061674 '.v' _iterator[2061633] F0_low[2115192]))
                  (2061677 'move' default_arg_first[2061668](2061680 call chpl_checkIfRangeIterWillOverflow_default_first[1103387] low[2061670]))
                  const-val default_arg_last[2061682]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2061684]:int(64)[13] "temp"
                  (2061686 'move' high[2061684](2061688 '.v' _iterator[2061633] F1_high[2115196]))
                  (2061691 'move' default_arg_last[2061682](2061694 call chpl_checkIfRangeIterWillOverflow_default_last[1103415] high[2061684]))
                  const-val _return_tmp_[2061696]:bool[10] "dead after last mention" "temp"
                  const-val low[2061698]:int(64)[13] "temp"
                  (2061700 'move' low[2061698](2061702 '.v' _iterator[2061633] F0_low[2115192]))
                  const-val high[2061705]:int(64)[13] "temp"
                  (2061707 'move' high[2061705](2061709 '.v' _iterator[2061633] F1_high[2115196]))
                  (2061712 'move' _return_tmp_[2061696](2061715 call chpl_checkIfRangeIterWillOverflow[1096265] low[2061698] high[2061705] 1 default_arg_first[2061668] default_arg_last[2061682] 1))
                  CForLoop[2061722] hazard
                  {
                    const-val yret[2061751]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2061753 'move' yret[2061751] i[2061659])
                    const-val _yieldedIndex[2061756]:int(64)[13] "temp"
                    (2061758 'move' _yieldedIndex[2061756] i[2061659])
                    {
                      const-val i[2061762]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2061764 'move' i[2061762] _yieldedIndex[2061756])
                      const-val yret[2061767]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2061769 'move' yret[2061767] _yieldedIndex[2061756])
                      const-val _yieldedIndex[2061797]:int(64)[13] "temp"
                      (2061983 'move' _yieldedIndex[2061797] _yieldedIndex[2061756])
                      {
                        const-val i[2061799]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2061801 'move' i[2061799] _yieldedIndex[2061797])
                        const-val yret[2061804]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2061806 'move' yret[2061804] _yieldedIndex[2061797])
                        const-val _yieldedIndex[2061809]:int(64)[13] "temp"
                        (2061811 'move' _yieldedIndex[2061809] _yieldedIndex[2061797])
                        {
                          const-val i[2061815]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2061817 'move' i[2061815] _yieldedIndex[2061809])
                          ref call_tmp[2061820]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[2061822]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                          const-val this[2061824]:TaskErrors[169702] "temp"
                          (2061826 'move' this[2061824](2061828 '.v' _iterator[169371] F0_this[2103300]))
                          (2061831 'move' _this_tmp_[2061822](2061834 call errorsArray[814246] this[2061824]))
                          val coerce_tmp[2061836]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2061838 'move' coerce_tmp[2061836](2061840 'deref' _this_tmp_[2061822]))
                          (2061842 'move' call_tmp[2061820](2061845 call this[1235942] coerce_tmp[2061836] _yieldedIndex[2061809]))
                          const-val call_tmp[2061848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[2061850]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2061852 'move' coerce_tmp[2061850](2061855 call borrow[1236017] call_tmp[2061820]))
                          val coerce_tmp[2061857]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (2061859 'move' coerce_tmp[2061857](2061861 'cast' object[22] coerce_tmp[2061850]))
                          (2061864 'move' call_tmp[2061848](2061867 call !=[1485] coerce_tmp[2061857] nil[44]))
                          const-val call_tmp[2061870]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (2061872 'move' call_tmp[2061870] call_tmp[2061848])
                          if call_tmp[2061848]
                          {
                            ref yret[2061877]:_ref(owned Error?)[966611] "dead after last mention" "YVV" "temp"
                            ref call_tmp[2061879]:_ref(owned Error?)[966611] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[2061881]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "temp"
                            const-val this[2061883]:TaskErrors[169702] "temp"
                            (2061885 'move' this[2061883](2061887 '.v' _iterator[169371] F0_this[2103300]))
                            (2061890 'move' _this_tmp_[2061881](2061893 call errorsArray[814246] this[2061883]))
                            val coerce_tmp[2061895]:c_ptr(owned Error?)[1235804] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (2061897 'move' coerce_tmp[2061895](2061899 'deref' _this_tmp_[2061881]))
                            (2061901 'move' call_tmp[2061879](2061904 call this[1235942] coerce_tmp[2061895] i[2061815]))
                            ref _yieldedIndex[2061907]:_ref(owned Error?)[966611] "temp"
                            (2061909 'move' _yieldedIndex[2061907] call_tmp[2061879])
                            {
                              ref err[2061913]:_ref(owned Error?)[966611] "index var" "insert auto destroy"
                              (2061915 'move' err[2061913] _yieldedIndex[2061907])
                              {
                                val call_tmp[2061919]:Error[167984] "dead at end of block" "maybe param" "temp"
                                (2061921 'move' call_tmp[2061919](2061924 call postfix![1840508] err[2061913]))
                                val e[2061926]:Error[167984] "dead at end of block" "insert auto destroy"
                                (2061928 'move' e[2061926](2061931 call chpl__initCopy[965806] call_tmp[2061919]))
                                const-val call_tmp[2061933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[2061935]:int(32)[95] "temp"
                                (2061937 'move' _virtual_method_tmp_[2061935](2061939 'getcid' e[2061926]))
                                val ret_tmp[2061941]:string[26] "temp"
                                (2061943 'virtual method call' message[167975] _virtual_method_tmp_[2061935] e[2061926] ret_tmp[2061941])
                                (2061948 'move' call_tmp[2061933] ret_tmp[2061941])
                                const-val call_tmp[2061951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2061953 'move' call_tmp[2061951](2061956 call ==[38823] call_tmp[2061933] maxMsg[169092]))
                                const-val call_tmp[2061959]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (2061961 'move' call_tmp[2061959] call_tmp[2061951])
                                if call_tmp[2061959]
                                {
                                  val coerce_tmp[2061966]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (2061968 'move' coerce_tmp[2061966] e[2061926])
                                  (2061972 call =[1232607] last[169106] coerce_tmp[2061966])
                                }
                                (2061977 call chpl__autoDestroy[1601673] call_tmp[2061933])
                              }
                              label _continueLabel[2061979]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2061724]:int(64)[13] "temp"
                      (2061726 'move' low[2061724](2061728 '.v' _iterator[2061633] F0_low[2115192]))
                      (2061731 '=' i[2061659] low[2061724])
                    }
                    {
                      const-val high[2061735]:int(64)[13] "temp"
                      (2061737 'move' high[2061735](2061739 '.v' _iterator[2061633] F1_high[2115196]))
                      (2061742 '<=' i[2061659] high[2061735])
                    }
                    {
                      val call_tmp[2061746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2061748 '+=' i[2061659] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2061785]
                }
                (2061788 call _freeIterator[1103663] _iterator[2061633])
                (2061791 call chpl__autoDestroy[1674803] tmp[2061485])
                label _endchpl_direct_counted_range_iter_helper[2061793]
              }
              (1990202 call _freeIterator[1103913] _iterator[1990054])
              label _endchpl_direct_counted_range_iter[1990204]
            }
            (1990207 call _freeIterator[1104163] _iterator[1990017])
            label _endthese[1990209]
          }
          label _breakLabel[169376]
          (1919602 call _freeIterator[1238422] _iterator[169371])
        }
      }
    }
    const-val call_tmp[680203]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908982]:string[26] "temp"
    (169411 call _cast[1063342] n[169081] ret_tmp[1908982])
    (1908985 'move' call_tmp[680203] ret_tmp[1908982])
    const-val call_tmp[680208]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905566]:string[26] "temp"
    (169430 call +[38345] call_tmp[680203] " errors: " ret_tmp[1905566])
    (1905569 'move' call_tmp[680208] ret_tmp[1905566])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544762 'move' ret[169432] call_tmp[680208])
    const-val tmp[428507]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428528]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1841077]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1841083 'move' coerce_tmp[1841077](1841079 'cast' object[22] first[169099]))
    (428539 'move' tmp[428528](169438 call !=[1485] coerce_tmp[1841077] nil[44]))
    val tmp[570622]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570623]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680221 'move' call_tmp[680218] tmp[428528])
    (570628 'move' tmp[570623] call_tmp[680218])
    if tmp[570623]
    {
      const-val tmp[570630]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1841089]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841095 'move' coerce_tmp[1841089](1841091 'cast' object[22] last[169106]))
      (680226 'move' call_tmp[680223](169442 call !=[1485] coerce_tmp[1841089] nil[44]))
      (570632 'move' tmp[570630] call_tmp[680223])
      (570637 'move' tmp[570622] tmp[570630])
    }
    {
      (570642 'move' tmp[570622] 0)
    }
    (428518 'move' tmp[428507] tmp[570622])
    val tmp[570649]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570650]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680233]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680236 'move' call_tmp[680233] tmp[428507])
    (570655 'move' tmp[570650] call_tmp[680233])
    if tmp[570650]
    {
      const-val tmp[570657]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680238]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1841101]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841107 'move' coerce_tmp[1841101](1841103 'cast' object[22] first[169099]))
      val coerce_tmp[1841109]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841115 'move' coerce_tmp[1841109](1841111 'cast' object[22] last[169106]))
      (680241 'move' call_tmp[680238](169448 call !=[1485] coerce_tmp[1841101] coerce_tmp[1841109]))
      (570659 'move' tmp[570657] call_tmp[680238])
      (570664 'move' tmp[570649] tmp[570657])
    }
    {
      (570669 'move' tmp[570649] 0)
    }
    const-val call_tmp[680243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680246 'move' call_tmp[680243] tmp[570649])
    if call_tmp[680243]
    {
      val call_tmp[680248]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680251 'move' call_tmp[680248](169455 call postfix![967972] first[169099]))
      const-val call_tmp[680253]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906972]:string[26] "temp"
      (169458 call chpl_describe_error[169835] call_tmp[680248] ret_tmp[1906972])
      (1906975 'move' call_tmp[680253] ret_tmp[1906972])
      const-val call_tmp[680258]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905572]:string[26] "temp"
      (169476 call +[38345] call_tmp[680253] " ... " ret_tmp[1905572])
      (1905575 'move' call_tmp[680258] ret_tmp[1905572])
      val call_tmp[680263]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680266 'move' call_tmp[680263](169480 call postfix![967972] last[169106]))
      const-val call_tmp[680268]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906978]:string[26] "temp"
      (169483 call chpl_describe_error[169835] call_tmp[680263] ret_tmp[1906978])
      (1906981 'move' call_tmp[680268] ret_tmp[1906978])
      const-val call_tmp[680273]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1905578]:string[26] "temp"
      (169484 call +[38345] call_tmp[680258] call_tmp[680268] ret_tmp[1905578])
      (1905581 'move' call_tmp[680273] ret_tmp[1905578])
      (169486 call +=[38800] ret[169432] call_tmp[680273])
      (1919605 call chpl__autoDestroy[1601673] call_tmp[680273])
      (1919608 call chpl__autoDestroy[1601673] call_tmp[680268])
      (1919611 call chpl__autoDestroy[1601673] call_tmp[680258])
      (1919614 call chpl__autoDestroy[1601673] call_tmp[680253])
    }
    {
      const-val call_tmp[680278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1841125]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1841131 'move' coerce_tmp[1841125](1841127 'cast' object[22] first[169099]))
      (680281 'move' call_tmp[680278](169491 call !=[1485] coerce_tmp[1841125] nil[44]))
      const-val call_tmp[680283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680286 'move' call_tmp[680283] call_tmp[680278])
      if call_tmp[680283]
      {
        val call_tmp[680288]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        (680291 'move' call_tmp[680288] first[169099])
        const-val call_tmp[680293]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906984]:string[26] "temp"
        (169499 call chpl_describe_error[169835] call_tmp[680288] ret_tmp[1906984])
        (1906987 'move' call_tmp[680293] ret_tmp[1906984])
        (169500 call +=[38800] ret[169432] call_tmp[680293])
        (1919618 call chpl__autoDestroy[1601673] call_tmp[680293])
      }
    }
    (1841138 'move' ret[522310] ret[169432])
    (1919621 call chpl__autoDestroy[1601673] call_tmp[680203])
    (1919624 call chpl__autoDestroy[1601673] maxMsg[169092])
    (1919627 call chpl__autoDestroy[1601673] minMsg[169087])
    gotoReturn _end_message[522308] _end_message[522308]
    label _end_message[522308]
    (1918972 '=' _retArg[1918970] ret[522310])
    (1918974 return _void[55])
  }
  function TaskErrors[169702].nErrors[814220](const in arg this[814224]:TaskErrors[169702]) ref : _ref(int(64))[936761] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814234]:_ref(int(64))[936761] "dead after last mention" "RVV" "temp"
    ref call_tmp[814241]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
    (814244 'move' call_tmp[814241](814228 '.' this[814224] nErrors[168363]))
    (814239 'move' ret[814234] call_tmp[814241])
    (814236 return ret[814234])
  }
  function TaskErrors[169702].errorsArray[814246](const in arg this[814250]:TaskErrors[169702]) ref : _ref(c_ptr(owned Error?))[1235813] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814260]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "RVV" "temp"
    ref call_tmp[814267]:_ref(c_ptr(owned Error?))[1235813] "dead after last mention" "maybe param" "temp"
    (814270 'move' call_tmp[814267](814254 '.' this[814250] errorsArray[168374]))
    (814265 'move' ret[814260] call_tmp[814267])
    (814262 return ret[814260])
  }
  function _new[1241169](ref arg group[1241178]:_ref(chpl_TaskErrors)[941129]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1879853]:TaskErrors[169702] "temp"
    val ret[1241208]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1241171]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241215]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241218 'move' call_tmp[1241215](1241229 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241232]:c_void_ptr[149] "dead after last mention" "temp"
    (1241234 'move' cast_tmp[1241232](1241186 call chpl_here_alloc[187788] call_tmp[1241215] 41))
    (1241189 'move' initTemp[1241171](1241236 'cast' TaskErrors[169702] cast_tmp[1241232]))
    (1241191 'setcid' initTemp[1241171])
    (1241172 call init[168384] initTemp[1241171] group[1241178])
    val tmp[1241193]:TaskErrors[169702] "dead after last mention" "temp"
    (1241197 'move' tmp[1241193] initTemp[1241171])
    (1241213 'move' ret[1241208] tmp[1241193])
    (1241210 return ret[1241208])
  }
  function _new[1830141](const in arg err[1830150]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1880360]:TaskErrors[169702] "temp"
    val ret[1830178]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1830143]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1830185]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1830188 'move' call_tmp[1830185](1830197 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1830200]:c_void_ptr[149] "dead after last mention" "temp"
    (1830202 'move' cast_tmp[1830200](1830156 call chpl_here_alloc[187788] call_tmp[1830185] 41))
    (1830159 'move' initTemp[1830143](1830204 'cast' TaskErrors[169702] cast_tmp[1830200]))
    (1830161 'setcid' initTemp[1830143])
    (1830144 call init[168765] initTemp[1830143] err[1830150])
    val tmp[1830163]:TaskErrors[169702] "dead after last mention" "temp"
    (1830167 'move' tmp[1830163] initTemp[1830143])
    (1830183 'move' ret[1830178] tmp[1830163])
    (1830180 return ret[1830178])
  }
  type TaskErrors[169702] val super[355819]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235804] "no doc"
  function chpl_error_type_name[169752](const in arg err[169749]:Error[167984], ref arg _retArg[1906966]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522355]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680344]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680347 'move' call_tmp[680344](169774 'getcid' err[169749]))
    const-val cid[169775]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544766 'move' cid[169775] call_tmp[680344])
    const-val call_tmp[680349]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680352 'move' call_tmp[680349](169800 'class name by id' cid[169775]))
    const-val nameC[169801]:c_string[19] "dead at end of block" "insert auto destroy"
    (544768 'move' nameC[169801](1829704 call chpl__initCopy[21698] call_tmp[680349]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544770]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1883568]:Error[167984] "error variable" "temp"
      (1883584 'move' error[1883568] nil[44])
      const-val call_tmp[680354]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1829720]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1829725 'move' default_arg_length[1829720](1829722 call createStringWithNewBuffer_default_length[964235] nameC[169801] error[1883568]))
      val errorExists[2221760]:bool[10] "temp"
      (2221765 'move' errorExists[2221760](2221762 '!=' error[1883568] nil[44]))
      if errorExists[2221760]
      {
        gotoErrorHandling handler[1883569] handler[1883569]
      }
      const-val ret_tmp[1904784]:string[26] "temp"
      (169814 call createStringWithNewBuffer[30413] nameC[169801] default_arg_length[1829720] strict[173692] error[1883568] ret_tmp[1904784])
      (1904787 'move' call_tmp[680354] ret_tmp[1904784])
      val errorExists[2221768]:bool[10] "temp"
      (2221773 'move' errorExists[2221768](2221770 '!=' error[1883568] nil[44]))
      if errorExists[2221768]
      {
        gotoErrorHandling handler[1883569] handler[1883569]
      }
      (544781 'move' nameS[169806] call_tmp[680354])
      label handler[1883569]
      const-val shouldHandleError[1883593]:bool[10] "temp"
      val errorExists[2221776]:bool[10] "temp"
      (2221781 'move' errorExists[2221776](2221778 '!=' error[1883568] nil[44]))
      (1883597 'move' shouldHandleError[1883593] errorExists[2221776])
      if shouldHandleError[1883593]
      {
        (1883590 call chpl_uncaught_error[170289] error[1883568])
      }
    }
    (1829739 'move' ret[522355] nameS[169806])
    gotoReturn _end_chpl_error_type_name[522353] _end_chpl_error_type_name[522353]
    label _end_chpl_error_type_name[522353]
    (1906968 '=' _retArg[1906966] ret[522355])
    (1906970 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:Error[167984], ref arg _retArg[1906996]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522367]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680359]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1906960]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1906960])
    (1906963 'move' call_tmp[680359] ret_tmp[1906960])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544784 'move' nameS[169842] call_tmp[680359])
    const-val call_tmp[680364]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905584]:string[26] "temp"
    (169849 call +[38345] nameS[169842] ": " ret_tmp[1905584])
    (1905587 'move' call_tmp[680364] ret_tmp[1905584])
    const-val call_tmp[680371]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1875787]:int(32)[95] "temp"
    (1875791 'move' _virtual_method_tmp_[1875787](1875789 'getcid' err[169832]))
    val ret_tmp[1906912]:string[26] "temp"
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1875787] err[169832] ret_tmp[1906912])
    (1906915 'move' call_tmp[680371] ret_tmp[1906912])
    const-val call_tmp[680376]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905590]:string[26] "temp"
    (169857 call +[38345] call_tmp[680364] call_tmp[680371] ret_tmp[1905590])
    (1905593 'move' call_tmp[680376] ret_tmp[1905590])
    const-val ret[169859]:string[26] "dead at end of block" "insert auto destroy"
    (544786 'move' ret[169859] call_tmp[680376])
    (1829746 'move' ret[522367] ret[169859])
    (1919630 call chpl__autoDestroy[1601673] call_tmp[680371])
    (1919633 call chpl__autoDestroy[1601673] call_tmp[680364])
    (1919636 call chpl__autoDestroy[1601673] nameS[169842])
    gotoReturn _end_chpl_describe_error[522365] _end_chpl_describe_error[522365]
    label _end_chpl_describe_error[522365]
    (1906998 '=' _retArg[1906996] ret[522367])
    (1907000 return _void[55])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:Error[167984]) : Error[167984] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522379]:Error[167984] "dead after last mention" "RVV" "temp"
    val fixErr[169885]:Error[167984] "dead at end of block" "insert auto destroy"
    (544788 'move' fixErr[169885](969672 call chpl__initCopy[967563] err[169874]))
    const-val call_tmp[680381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969675]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969680 'move' coerce_tmp[969675](969677 'cast' object[22] fixErr[169885]))
    (680384 'move' call_tmp[680381](169892 call ==[1146] coerce_tmp[969675] nil[44]))
    const-val call_tmp[680386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680389 'move' call_tmp[680386] call_tmp[680381])
    if call_tmp[680386]
    {
      val call_tmp[680391]:NilThrownError[168029] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[969790]:NilThrownError[168029] "dead after last mention" "temp"
      (969792 'move' new_temp[969790](969722 call _new[969738]))
      (680394 'move' call_tmp[680391] new_temp[969790])
      val coerce_tmp[969897]:NilThrownError[168029] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969903 'move' coerce_tmp[969897] call_tmp[680391])
      (169901 call =[969852] fixErr[169885] coerce_tmp[969897])
    }
    const-val call_tmp[680396]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680399 'move' call_tmp[680396](169927 '_get_user_line'))
    const-val line[169928]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544790 'move' line[169928] call_tmp[680396])
    const-val call_tmp[680401]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680404 'move' call_tmp[680401](169950 '_get_user_file'))
    const-val fileId[169951]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544792 'move' fileId[169951] call_tmp[680401])
    val call_tmp[680406]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680409 'move' call_tmp[680406](169956 call postfix![967963] fixErr[169885]))
    ref call_tmp[680413]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[969914]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969919 'move' coerce_tmp[969914] call_tmp[680406])
    (680416 'move' call_tmp[680413](169960 call _hasThrowInfo[811909] coerce_tmp[969914]))
    const-val call_tmp[680418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[969922]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969926 'move' coerce_tmp[969922](969924 'deref' call_tmp[680413]))
    (680421 'move' call_tmp[680418](169963 call ![7494] coerce_tmp[969922]))
    const-val call_tmp[680423]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680426 'move' call_tmp[680423] call_tmp[680418])
    if call_tmp[680423]
    {
      val call_tmp[680428]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680431 'move' call_tmp[680428](169966 call postfix![967963] fixErr[169885]))
      ref call_tmp[680435]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969930]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969935 'move' coerce_tmp[969930] call_tmp[680428])
      (680438 'move' call_tmp[680435](169968 call _hasThrowInfo[811909] coerce_tmp[969930]))
      (169972 call =[435290] call_tmp[680435] 1)
      val call_tmp[680440]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680443 'move' call_tmp[680440](169977 call postfix![967963] fixErr[169885]))
      ref call_tmp[680447]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969940]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969945 'move' coerce_tmp[969940] call_tmp[680440])
      (680450 'move' call_tmp[680447](169981 call thrownLine[811831] coerce_tmp[969940]))
      (169985 call =[435443] call_tmp[680447] line[169928])
      val call_tmp[680452]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680455 'move' call_tmp[680452](169989 call postfix![967963] fixErr[169885]))
      ref call_tmp[680459]:_ref(int(32))[936815] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969950]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969955 'move' coerce_tmp[969950] call_tmp[680452])
      (680462 'move' call_tmp[680459](169993 call thrownFileId[811857] coerce_tmp[969950]))
      (169997 call =[435422] call_tmp[680459] fileId[169951])
    }
    val call_tmp[680464]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680467 'move' call_tmp[680464](170007 call _to_nonnil[968202] fixErr[169885]))
    (969961 'move' ret[522379] call_tmp[680464])
    gotoReturn _end_chpl_do_fix_thrown_error[522377] _end_chpl_do_fix_thrown_error[522377]
    label _end_chpl_do_fix_thrown_error[522377]
    (522381 return ret[522379])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966647]) : Error[167984] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969642]:owned Error[966647] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969645 'move' _formal_tmp_err[969642] err[170046])
    val ret[522401]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680483]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680486 'move' call_tmp[680483](170059 call release[969387] _formal_tmp_err[969642]))
    val call_tmp[680488]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969663]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969669 'move' coerce_tmp[969663] call_tmp[680483])
    (680491 'move' call_tmp[680488](170061 call chpl_do_fix_thrown_error[169877] coerce_tmp[969663]))
    (969964 'move' ret[522401] call_tmp[680488])
    (1919639 call chpl__autoDestroy[1608774] _formal_tmp_err[969642])
    (522403 return ret[522401])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1829593]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1829598 'move' coerce_tmp[1829593](1829595 'cast' object[22] err[170260]))
    (680546 'move' call_tmp[680543](170267 call !=[1485] coerce_tmp[1829593] nil[44]))
    const-val call_tmp[680548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680551 'move' call_tmp[680548] call_tmp[680543])
    if call_tmp[680548]
    {
      (170271 call chpl__delete[1236372] err[170260])
    }
    (522422 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:Error[167984]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680553]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680556 'move' call_tmp[680553](170321 '_get_user_file'))
    const-val call_tmp[680558]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680561 'move' call_tmp[680558](170322 'chpl_lookupFilename' call_tmp[680553]))
    const-val myFileC[170323]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544798 'move' myFileC[170323](1829602 call chpl__initCopy[21698] call_tmp[680558]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544800]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1883601]:Error[167984] "error variable" "temp"
      (1883617 'move' error[1883601] nil[44])
      const-val call_tmp[680563]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1829618]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1829623 'move' default_arg_length[1829618](1829620 call createStringWithNewBuffer_default_length[964235] myFileC[170323] error[1883601]))
      val errorExists[2221784]:bool[10] "temp"
      (2221789 'move' errorExists[2221784](2221786 '!=' error[1883601] nil[44]))
      if errorExists[2221784]
      {
        gotoErrorHandling handler[1883602] handler[1883602]
      }
      const-val ret_tmp[1904790]:string[26] "temp"
      (170336 call createStringWithNewBuffer[30413] myFileC[170323] default_arg_length[1829618] strict[173692] error[1883601] ret_tmp[1904790])
      (1904793 'move' call_tmp[680563] ret_tmp[1904790])
      val errorExists[2221792]:bool[10] "temp"
      (2221797 'move' errorExists[2221792](2221794 '!=' error[1883601] nil[44]))
      if errorExists[2221792]
      {
        gotoErrorHandling handler[1883602] handler[1883602]
      }
      (544811 'move' myFileS[170328] call_tmp[680563])
      label handler[1883602]
      const-val shouldHandleError[1883626]:bool[10] "temp"
      val errorExists[2221800]:bool[10] "temp"
      (2221805 'move' errorExists[2221800](2221802 '!=' error[1883601] nil[44]))
      (1883630 'move' shouldHandleError[1883626] errorExists[2221800])
      if shouldHandleError[1883626]
      {
        (1883623 call chpl_uncaught_error[170289] error[1883601])
      }
    }
    const-val call_tmp[680568]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680571 'move' call_tmp[680568](170346 '_get_user_line'))
    const-val myLine[170347]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544814 'move' myLine[170347] call_tmp[680568])
    ref call_tmp[680575]:_ref(int(32))[936815] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1829636]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829641 'move' coerce_tmp[1829636] err[170286])
    (680578 'move' call_tmp[680575](170355 call thrownFileId[811857] coerce_tmp[1829636]))
    const-val call_tmp[680580]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680583 'move' call_tmp[680580](170358 'chpl_lookupFilename' call_tmp[680575]))
    const-val thrownFileC[170359]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544816 'move' thrownFileC[170359](1829644 call chpl__initCopy[21698] call_tmp[680580]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544818]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1883634]:Error[167984] "error variable" "temp"
      (1883650 'move' error[1883634] nil[44])
      const-val call_tmp[680585]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1829660]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1829665 'move' default_arg_length[1829660](1829662 call createStringWithNewBuffer_default_length[964235] thrownFileC[170359] error[1883634]))
      val errorExists[2221808]:bool[10] "temp"
      (2221813 'move' errorExists[2221808](2221810 '!=' error[1883634] nil[44]))
      if errorExists[2221808]
      {
        gotoErrorHandling handler[1883635] handler[1883635]
      }
      const-val ret_tmp[1904796]:string[26] "temp"
      (170372 call createStringWithNewBuffer[30413] thrownFileC[170359] default_arg_length[1829660] strict[173692] error[1883634] ret_tmp[1904796])
      (1904799 'move' call_tmp[680585] ret_tmp[1904796])
      val errorExists[2221816]:bool[10] "temp"
      (2221821 'move' errorExists[2221816](2221818 '!=' error[1883634] nil[44]))
      if errorExists[2221816]
      {
        gotoErrorHandling handler[1883635] handler[1883635]
      }
      (544829 'move' thrownFileS[170364] call_tmp[680585])
      label handler[1883635]
      const-val shouldHandleError[1883659]:bool[10] "temp"
      val errorExists[2221824]:bool[10] "temp"
      (2221829 'move' errorExists[2221824](2221826 '!=' error[1883634] nil[44]))
      (1883663 'move' shouldHandleError[1883659] errorExists[2221824])
      if shouldHandleError[1883659]
      {
        (1883656 call chpl_uncaught_error[170289] error[1883634])
      }
    }
    ref call_tmp[680592]:_ref(int(64))[936761] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1829678]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829683 'move' coerce_tmp[1829678] err[170286])
    (680595 'move' call_tmp[680592](170381 call thrownLine[811831] coerce_tmp[1829678]))
    const-val thrownLine[170384]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1829688]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1829692 'move' coerce_tmp[1829688](1829690 'deref' call_tmp[680592]))
    (1919642 '=' thrownLine[170384] coerce_tmp[1829688])
    (544832 'noop')
    const-val call_tmp[680597]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1829695]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1829700 'move' coerce_tmp[1829695] err[170286])
    const-val ret_tmp[1906990]:string[26] "temp"
    (170408 call chpl_describe_error[169835] coerce_tmp[1829695] ret_tmp[1906990])
    (1906993 'move' call_tmp[680597] ret_tmp[1906990])
    const-val call_tmp[680602]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905596]:string[26] "temp"
    (170409 call +[38345] "uncaught " call_tmp[680597] ret_tmp[1905596])
    (1905599 'move' call_tmp[680602] ret_tmp[1905596])
    const-val call_tmp[680607]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905602]:string[26] "temp"
    (170428 call +[38345] call_tmp[680602] "\n  " ret_tmp[1905602])
    (1905605 'move' call_tmp[680607] ret_tmp[1905602])
    const-val call_tmp[680612]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905608]:string[26] "temp"
    (170431 call +[38345] call_tmp[680607] thrownFileS[170364] ret_tmp[1905608])
    (1905611 'move' call_tmp[680612] ret_tmp[1905608])
    const-val call_tmp[680617]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905614]:string[26] "temp"
    (170434 call +[38345] call_tmp[680612] ":" ret_tmp[1905614])
    (1905617 'move' call_tmp[680617] ret_tmp[1905614])
    const-val call_tmp[680622]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908988]:string[26] "temp"
    (170438 call _cast[1063342] thrownLine[170384] ret_tmp[1908988])
    (1908991 'move' call_tmp[680622] ret_tmp[1908988])
    const-val call_tmp[680627]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905620]:string[26] "temp"
    (170440 call +[38345] call_tmp[680617] call_tmp[680622] ret_tmp[1905620])
    (1905623 'move' call_tmp[680627] ret_tmp[1905620])
    const-val call_tmp[680632]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905626]:string[26] "temp"
    (170459 call +[38345] call_tmp[680627] ": thrown here" ret_tmp[1905626])
    (1905629 'move' call_tmp[680632] ret_tmp[1905626])
    const-val call_tmp[680637]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905632]:string[26] "temp"
    (170462 call +[38345] call_tmp[680632] "\n  " ret_tmp[1905632])
    (1905635 'move' call_tmp[680637] ret_tmp[1905632])
    const-val call_tmp[680642]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905638]:string[26] "temp"
    (170465 call +[38345] call_tmp[680637] myFileS[170328] ret_tmp[1905638])
    (1905641 'move' call_tmp[680642] ret_tmp[1905638])
    const-val call_tmp[680647]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905644]:string[26] "temp"
    (170468 call +[38345] call_tmp[680642] ":" ret_tmp[1905644])
    (1905647 'move' call_tmp[680647] ret_tmp[1905644])
    const-val call_tmp[680652]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908994]:string[26] "temp"
    (170472 call _cast[1063342] myLine[170347] ret_tmp[1908994])
    (1908997 'move' call_tmp[680652] ret_tmp[1908994])
    const-val call_tmp[680657]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905650]:string[26] "temp"
    (170474 call +[38345] call_tmp[680647] call_tmp[680652] ret_tmp[1905650])
    (1905653 'move' call_tmp[680657] ret_tmp[1905650])
    const-val call_tmp[680662]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1905656]:string[26] "temp"
    (170493 call +[38345] call_tmp[680657] ": uncaught here" ret_tmp[1905656])
    (1905659 'move' call_tmp[680662] ret_tmp[1905656])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544834 'move' s[170495] call_tmp[680662])
    const-val call_tmp[680669]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680672 'move' call_tmp[680669](170505 call c_str[32935] s[170495]))
    (170507 call chpl_error_preformatted[1829762] call_tmp[680669])
    (1919645 call chpl__autoDestroy[1601673] s[170495])
    (1919648 call chpl__autoDestroy[1601673] call_tmp[680657])
    (1919651 call chpl__autoDestroy[1601673] call_tmp[680652])
    (1919654 call chpl__autoDestroy[1601673] call_tmp[680647])
    (1919657 call chpl__autoDestroy[1601673] call_tmp[680642])
    (1919660 call chpl__autoDestroy[1601673] call_tmp[680637])
    (1919663 call chpl__autoDestroy[1601673] call_tmp[680632])
    (1919666 call chpl__autoDestroy[1601673] call_tmp[680627])
    (1919669 call chpl__autoDestroy[1601673] call_tmp[680622])
    (1919672 call chpl__autoDestroy[1601673] call_tmp[680617])
    (1919675 call chpl__autoDestroy[1601673] call_tmp[680612])
    (1919678 call chpl__autoDestroy[1601673] call_tmp[680607])
    (1919681 call chpl__autoDestroy[1601673] call_tmp[680602])
    (1919684 call chpl__autoDestroy[1601673] call_tmp[680597])
    (1919687 call chpl__autoDestroy[1601673] thrownFileS[170364])
    (1919690 call chpl__autoDestroy[1601673] myFileS[170328])
    (522426 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:Error[167984]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522428 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522432]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680674]:TaskErrors[169702] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1829992]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1829997 'move' coerce_tmp[1829992] err[170532])
    (680677 'move' call_tmp[680674](170543 call _cast[1829850] coerce_tmp[1829992]))
    const-val call_tmp[680679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1830025]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1830030 'move' coerce_tmp[1830025](1830027 'cast' object[22] call_tmp[680674]))
    (680682 'move' call_tmp[680679](170548 call _cond_test[9881] coerce_tmp[1830025]))
    if call_tmp[680679]
    {
      (1830210 'move' ret[522432] err[170532])
      gotoReturn _end_chpl_forall_error[522430] _end_chpl_forall_error[522430]
    }
    val call_tmp[680684]:TaskErrors[169702] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1830191]:TaskErrors[169702] "dead after last mention" "temp"
    (1830193 'move' new_temp[1830191](1830037 call _new[1830141] err[170532]))
    (680687 'move' call_tmp[680684] new_temp[1830191])
    (522444 'move' ret[522432](1830212 'cast' Error[167984] call_tmp[680684]))
    label _end_chpl_forall_error[522430]
    (522434 return ret[522432])
  }
  function chpl_enum_cast_error[1072044](const in arg casted[1072046]:uint(8)[100], const  ref arg enumName[1072048]:string[26], ref arg error_out[1885908]:Error[167984]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1072054]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909320]:string[26] "temp"
    (1072059 call _cast[1072108] casted[1072046] ret_tmp[1909320])
    (1909323 'move' call_tmp[1072054] ret_tmp[1909320])
    const-val call_tmp[1072062]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905788]:string[26] "temp"
    (1072067 call +[38345] "bad cast from int '" call_tmp[1072054] ret_tmp[1905788])
    (1905791 'move' call_tmp[1072062] ret_tmp[1905788])
    const-val call_tmp[1072070]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905794]:string[26] "temp"
    (1072075 call +[38345] call_tmp[1072062] "' to enum '" ret_tmp[1905794])
    (1905797 'move' call_tmp[1072070] ret_tmp[1905794])
    const-val call_tmp[1072078]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1905800]:string[26] "temp"
    (1072083 call +[38345] call_tmp[1072070] enumName[1072048] ret_tmp[1905800])
    (1905803 'move' call_tmp[1072078] ret_tmp[1905800])
    const-val call_tmp[1072086]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073744]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073746 'move' new_temp[1073744](1073670 call _new[1073691] call_tmp[1072078] "'"))
    const-val initTemp[1073765]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
    (1073768 call init[1064398] initTemp[1073765] new_temp[1073744])
    (1072088 'move' call_tmp[1072086] initTemp[1073765])
    val call_tmp[1072096]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073782]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1909192]:owned Error[966647] "temp"
    (1073784 call _cast[1064919] call_tmp[1072086] ret_tmp[1909192])
    (1909195 'move' coerce_tmp[1073782] ret_tmp[1909192])
    const-val _formal_tmp_in_err[1073961]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073965 'move' _formal_tmp_in_err[1073961] coerce_tmp[1073782])
    (1072098 'move' call_tmp[1072096](1072101 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073961]))
    {
      val castedError[1885913]:Error[167984] "temp"
      (1885919 'move' castedError[1885913] call_tmp[1072096])
      (1885921 '=' error_out[1885908] castedError[1885913])
      (1921531 call chpl__autoDestroy[1601673] call_tmp[1072078])
      (1921534 call chpl__autoDestroy[1601673] call_tmp[1072070])
      (1921537 call chpl__autoDestroy[1601673] call_tmp[1072062])
      (1921540 call chpl__autoDestroy[1601673] call_tmp[1072054])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1885910] _endchpl_enum_cast_error[1885910]
    }
    (1921552 call chpl__autoDestroy[1601673] call_tmp[1072078])
    (1921549 call chpl__autoDestroy[1601673] call_tmp[1072070])
    (1921546 call chpl__autoDestroy[1601673] call_tmp[1072062])
    (1921543 call chpl__autoDestroy[1601673] call_tmp[1072054])
    label _endchpl_enum_cast_error[1885910]
    (1072105 return _void[55])
  }
  function on_fn[935527](ref arg this[1882168]:_ref(chpl_TaskErrors)[941129], const in arg err[1882170]:Error[167984]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[679616]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
      (679619 'move' call_tmp[679616](361512 call _errorsLock[812431] this[1882168]))
      (168290 call lock[187323] call_tmp[679616])
      ref call_tmp[679625]:_ref(Error)[941209] "dead at end of block" "maybe param" "temp"
      (679628 'move' call_tmp[679625](388581 call _head[812405] this[1882168]))
      val tmp[168294]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1232592]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1232596 'move' coerce_tmp[1232592](1232594 'deref' call_tmp[679625]))
      (1919979 '=' tmp[168294] coerce_tmp[1232592])
      (544708 'noop')
      ref call_tmp[679632]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1232599]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232604 'move' coerce_tmp[1232599] err[1882170])
      (679635 'move' call_tmp[679632](168301 call _next[811805] coerce_tmp[1232599]))
      (168305 call =[1232635] call_tmp[679632] tmp[168294])
      ref call_tmp[679639]:_ref(Error)[941209] "dead after last mention" "maybe param" "temp"
      (679642 'move' call_tmp[679639](388587 call _head[812405] this[1882168]))
      val coerce_tmp[1232672]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232678 'move' coerce_tmp[1232672] err[1882170])
      (168310 call =[1232635] call_tmp[679639] coerce_tmp[1232672])
      ref call_tmp[679646]:_ref(chpl_LocalSpinlock)[941260] "dead after last mention" "maybe param" "temp"
      (679649 'move' call_tmp[679646](361518 call _errorsLock[812431] this[1882168]))
      (168318 call unlock[187415] call_tmp[679646])
    }
    (935534 return _void[55])
  }
  function chpl_error_preformatted[1829762](const in arg c_string[1829764]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1829770 return _void[55])
  }
  function wrapon_fn[2198784](const in arg dummy_locale_arg[2198786]:chpl_localeID_t[209352], in arg buf[2198788]:c_void_ptr[149], in arg buf_size[2198790]:int(64)[13], in arg c[2198792]:_class_localson_fn[2198738]) : void[4] "on block"
  {
    val _0_tmp[2198797]:chpl_localeID_t[209352] "temp"
    (2198802 'move' _0_tmp[2198797](2198799 '.v' c[2198792] _0_tmp[2198741]))
    ref _1_this[2198804]:chpl_TaskErrors[168348] "temp"
    (2198809 'move' _1_this[2198804](2198806 '.v' c[2198792] _1_this[2198743]))
    val _2_err[2198812]:Error[167984] "temp"
    (2198817 'move' _2_err[2198812](2198814 '.v' c[2198792] _2_err[2198745]))
    (2198795 call on_fn[935527] _1_this[2198804] _2_err[2198812])
    (2198820 return _void[55])
  }
}