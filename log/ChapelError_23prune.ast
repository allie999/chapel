AST dump for ChapelError after pass prune.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2051829] val _runtime_hdr[2051830]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051832]:chpl_localeID_t[209352] ref _1_this[2051834]:chpl_TaskErrors[168348] val _2_err[2051836]:Error[167984]
  function chpl__init_ChapelError[416055]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522378 return _void[55])
  }
  function Error[167984].init[167942](const in arg this[167986]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462462]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462470 'move' super_tmp[462462](462463 '.v' this[167986] super[355736]))
    (462466 call init[749382] super_tmp[462462])
    val tmp[462397]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679425]:object[22] "dead at end of block" "maybe param" "temp"
    (679428 'move' call_tmp[679425](462408 'cast' object[22] this[167986]))
    val chpl__thisAsParent[462405]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544595 'move' chpl__thisAsParent[462405](965600 call chpl__initCopy[945290] call_tmp[679425]))
    (462411 'setcid' chpl__thisAsParent[462405])
    val tmp[462413]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[965603]:Error[167984] "dead after last mention" "temp"
    (965606 'move' init_coerce_tmp[965603](965618 'cast' Error[167984] nil[44]))
    (462416 'move' tmp[462413] init_coerce_tmp[965603])
    (462418 '.=' this[167986] _next[167912] tmp[462413])
    val tmp[462423]:int(64)[13] "dead after last mention" "temp"
    (965623 'move' tmp[462423] 0)
    (462428 '.=' this[167986] thrownLine[167917] tmp[462423])
    val tmp[462432]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679430]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (965626 'move' tmp[462432] 0)
    (462439 '.=' this[167986] thrownFileId[167925] tmp[462432])
    val tmp[462443]:string[26] "dead after last mention" "temp"
    (965628 call init[30763] tmp[462443])
    (462448 '.=' this[167986] _msg[167930] tmp[462443])
    val tmp[462453]:bool[10] "dead after last mention" "temp"
    (462456 'move' tmp[462453] 0)
    (462458 '.=' this[167986] _hasThrowInfo[167936] tmp[462453])
    (462473 'setcid' this[167986])
    (522127 return _void[55])
  }
  function Error[167984].init[167958](const in arg this[167990]:Error[167984], const  ref arg msg[167955]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462545]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462553 'move' super_tmp[462545](462546 '.v' this[167990] super[355736]))
    (462549 call init[749382] super_tmp[462545])
    val tmp[462479]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679440]:object[22] "dead at end of block" "maybe param" "temp"
    (679443 'move' call_tmp[679440](462490 'cast' object[22] this[167990]))
    val chpl__thisAsParent[462487]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544597 'move' chpl__thisAsParent[462487](1064086 call chpl__initCopy[945290] call_tmp[679440]))
    (462493 'setcid' chpl__thisAsParent[462487])
    val tmp[462496]:Error[167984] "dead after last mention" "temp"
    val init_coerce_tmp[1064089]:Error[167984] "dead after last mention" "temp"
    (1064092 'move' init_coerce_tmp[1064089](1064106 'cast' Error[167984] nil[44]))
    (462499 'move' tmp[462496] init_coerce_tmp[1064089])
    (462501 '.=' this[167990] _next[167912] tmp[462496])
    val tmp[462505]:int(64)[13] "dead after last mention" "temp"
    (1064111 'move' tmp[462505] 0)
    (462510 '.=' this[167990] thrownLine[167917] tmp[462505])
    val tmp[462514]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679445]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1064114 'move' tmp[462514] 0)
    (462521 '.=' this[167990] thrownFileId[167925] tmp[462514])
    val tmp[462525]:string[26] "dead after last mention" "temp"
    (462528 call init=[30774] tmp[462525] msg[167955])
    (462530 '.=' this[167990] _msg[167930] tmp[462525])
    val tmp[462536]:bool[10] "dead after last mention" "temp"
    (462539 'move' tmp[462536] 0)
    (462541 '.=' this[167990] _hasThrowInfo[167936] tmp[462536])
    (462556 'setcid' this[167990])
    (522129 return _void[55])
  }
  function Error[167984].message[167975](const in arg this[167994]:Error[167984], ref arg _retArg[1804450]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522133]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679452]:_ref(string)[937958] "dead after last mention" "maybe param" "temp"
    (679455 'move' call_tmp[679452](388497 call _msg[811713] this[167994]))
    (522138 'move' ret[522133](1804454 call chpl__initCopy[981367] call_tmp[679452]))
    (1804452 '=' _retArg[1804450] ret[522133])
    (1804456 return _void[55])
  }
  function Error[167984]._next[811635](const in arg this[811639]:Error[167984]) ref : _ref(Error)[941039] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811649]:_ref(Error)[941039] "dead after last mention" "RVV" "temp"
    ref call_tmp[811656]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
    (811659 'move' call_tmp[811656](811643 '.' this[811639] _next[167912]))
    (811654 'move' ret[811649] call_tmp[811656])
    (811651 return ret[811649])
  }
  function Error[167984].thrownLine[811661](const in arg this[811665]:Error[167984]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811675]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[811682]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (811685 'move' call_tmp[811682](811669 '.' this[811665] thrownLine[167917]))
    (811680 'move' ret[811675] call_tmp[811682])
    (811677 return ret[811675])
  }
  function Error[167984].thrownFileId[811687](const in arg this[811691]:Error[167984]) ref : _ref(int(32))[936645] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811701]:_ref(int(32))[936645] "dead after last mention" "RVV" "temp"
    ref call_tmp[811708]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (811711 'move' call_tmp[811708](811695 '.' this[811691] thrownFileId[167925]))
    (811706 'move' ret[811701] call_tmp[811708])
    (811703 return ret[811701])
  }
  function Error[167984]._msg[811713](const in arg this[811717]:Error[167984]) ref : _ref(string)[937958] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811727]:_ref(string)[937958] "dead after last mention" "RVV" "temp"
    ref call_tmp[811734]:_ref(string)[937958] "dead after last mention" "maybe param" "temp"
    (811737 'move' call_tmp[811734](811721 '.' this[811717] _msg[167930]))
    (811732 'move' ret[811727] call_tmp[811734])
    (811729 return ret[811727])
  }
  function Error[167984]._hasThrowInfo[811739](const in arg this[811743]:Error[167984]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811753]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[811760]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (811763 'move' call_tmp[811760](811747 '.' this[811743] _hasThrowInfo[167936]))
    (811758 'move' ret[811753] call_tmp[811760])
    (811755 return ret[811753])
  }
  function Error[167984].deinit[811765](const in arg this[811769]:Error[167984]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788258]
    ref _field_destructor_tmp_[1788256]:_ref(string)[937958] "temp"
    (1788263 'move' _field_destructor_tmp_[1788256](1788260 '.' this[811769] _msg[167930]))
    (1788265 call deinit[30834] _field_destructor_tmp_[1788256])
    val _parent_destructor_tmp_[1788268]:object[22] "temp"
    (1788273 'move' _parent_destructor_tmp_[1788268](1788269 'cast' object[22] this[811769]))
    (1788275 call deinit[749398] _parent_destructor_tmp_[1788268])
    (811777 return _void[55])
  }
  type Error[167984] val super[355736]:object[22] "super class" val _next[167912]:Error[167984] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function NilThrownError[168029].message[168004](const in arg this[168031]:NilThrownError[168029], ref arg _retArg[1814756]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522142]:string[26] "dead after last mention" "RVV" "temp"
    (522147 'move' ret[522142](1814760 call chpl__initCopy[981367] "thrown error was nil"))
    (1814758 '=' _retArg[1814756] ret[522142])
    (1814762 return _void[55])
  }
  function NilThrownError[168029].init[811805](const in arg this[811808]:NilThrownError[168029]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811821]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (811823 'move' super_tmp[811821](811820 '.v' this[811808] super[355738]))
    (811818 call init[167942] super_tmp[811821])
    val tmp[811826]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[811864]:Error[167984] "dead at end of block" "maybe param" "temp"
    (811867 'move' call_tmp[811864](811837 'cast' Error[167984] this[811808]))
    val chpl__thisAsParent[811834]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (811855 'move' chpl__thisAsParent[811834](969559 call chpl__initCopy[965636] call_tmp[811864]))
    (811840 'setcid' chpl__thisAsParent[811834])
    (811842 'setcid' this[811808])
    (811853 return _void[55])
  }
  function NilThrownError[168029].deinit[811869](const in arg this[811873]:NilThrownError[168029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1788283]
    val _parent_destructor_tmp_[1788278]:Error[167984] "temp"
    (1788285 'move' _parent_destructor_tmp_[1788278](1788279 'cast' Error[167984] this[811873]))
    (1788287 call deinit[811765] _parent_destructor_tmp_[1788278])
    (811881 return _void[55])
  }
  function _new[969568]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1778908]:NilThrownError[168029] "temp"
    val ret[969607]:NilThrownError[168029] "dead after last mention" "RVV" "temp"
    val initTemp[969570]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969614]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969617 'move' call_tmp[969614](969626 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969629]:c_void_ptr[149] "dead after last mention" "temp"
    (969631 'move' cast_tmp[969629](969582 call chpl_here_alloc[187788] call_tmp[969614] 2))
    (969585 'move' initTemp[969570](969633 'cast' NilThrownError[168029] cast_tmp[969629]))
    (969587 'setcid' initTemp[969570])
    (969571 call init[811805] initTemp[969570])
    val tmp[969589]:NilThrownError[168029] "dead after last mention" "temp"
    (969596 'move' tmp[969589] initTemp[969570])
    (969612 'move' ret[969607] tmp[969589])
    (969609 return ret[969607])
  }
  type NilThrownError[168029] val super[355738]:Error[167984] "super class"
  function DecodeError[168140].message[168115](const in arg this[168142]:DecodeError[168140], ref arg _retArg[1814786]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522169]:string[26] "dead after last mention" "RVV" "temp"
    (522174 'move' ret[522169](1814790 call chpl__initCopy[981367] "Invalid UTF-8 character encountered."))
    (1814788 '=' _retArg[1814786] ret[522169])
    (1814792 return _void[55])
  }
  function DecodeError[168140].init[812117](const in arg this[812120]:DecodeError[168140]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812133]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (812135 'move' super_tmp[812133](812132 '.v' this[812120] super[355744]))
    (812130 call init[167942] super_tmp[812133])
    val tmp[812138]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[812176]:Error[167984] "dead at end of block" "maybe param" "temp"
    (812179 'move' call_tmp[812176](812149 'cast' Error[167984] this[812120]))
    val chpl__thisAsParent[812146]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (812167 'move' chpl__thisAsParent[812146](965634 call chpl__initCopy[965636] call_tmp[812176]))
    (812152 'setcid' chpl__thisAsParent[812146])
    (812154 'setcid' this[812120])
    (812165 return _void[55])
  }
  function DecodeError[168140].deinit[812181](const in arg this[812185]:DecodeError[168140]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788295]
    val _parent_destructor_tmp_[1788290]:Error[167984] "temp"
    (1788297 'move' _parent_destructor_tmp_[1788290](1788291 'cast' Error[167984] this[812185]))
    (1788299 call deinit[811765] _parent_destructor_tmp_[1788290])
    (812193 return _void[55])
  }
  function _new[965661]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1778902]:DecodeError[168140] "temp"
    val ret[965697]:DecodeError[168140] "dead after last mention" "RVV" "temp"
    val initTemp[965663]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965707 'move' call_tmp[965704](965718 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965721]:c_void_ptr[149] "dead after last mention" "temp"
    (965723 'move' cast_tmp[965721](965675 call chpl_here_alloc[187788] call_tmp[965704] 1))
    (965678 'move' initTemp[965663](965725 'cast' DecodeError[168140] cast_tmp[965721]))
    (965680 'setcid' initTemp[965663])
    (965664 call init[812117] initTemp[965663])
    val tmp[965682]:DecodeError[168140] "dead after last mention" "temp"
    (965686 'move' tmp[965682] initTemp[965663])
    (965702 'move' ret[965697] tmp[965682])
    (965699 return ret[965697])
  }
  type DecodeError[168140] val super[355744]:Error[167984] "super class"
  function IllegalArgumentError[168246].init[168163](const in arg this[168252]:IllegalArgumentError[168246], const  ref arg info[168160]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462592]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462594 'move' super_tmp[462592](462591 '.v' this[168252] super[355746]))
    (168171 call init[167958] super_tmp[462592] info[168160])
    val tmp[462597]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679474]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679477 'move' call_tmp[679474](462608 'cast' Error[167984] this[168252]))
    val chpl__thisAsParent[462605]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544601 'move' chpl__thisAsParent[462605](1064117 call chpl__initCopy[965636] call_tmp[679474]))
    (462611 'setcid' chpl__thisAsParent[462605])
    (462613 'setcid' this[168252])
    (522178 return _void[55])
  }
  function IllegalArgumentError[168246].init[168182](const in arg this[168256]:IllegalArgumentError[168246], const  ref arg formal[168179]:string[26], const  ref arg info[168185]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679479]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803170]:string[26] "temp"
    (168206 call +[38345] "illegal argument '" formal[168179] ret_tmp[1803170])
    (1803173 'move' call_tmp[679479] ret_tmp[1803170])
    const-val call_tmp[679484]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803176]:string[26] "temp"
    (168225 call +[38345] call_tmp[679479] "': " ret_tmp[1803176])
    (1803179 'move' call_tmp[679484] ret_tmp[1803176])
    const-val call_tmp[679489]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803182]:string[26] "temp"
    (168228 call +[38345] call_tmp[679484] info[168185] ret_tmp[1803182])
    (1803185 'move' call_tmp[679489] ret_tmp[1803182])
    const-val msg[168230]:string[26] "dead at end of block" "insert auto destroy"
    (544603 'move' msg[168230] call_tmp[679489])
    val super_tmp[462616]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462618 'move' super_tmp[462616](462615 '.v' this[168256] super[355746]))
    (168241 call init[167958] super_tmp[462616] msg[168230])
    val tmp[462621]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679501]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679504 'move' call_tmp[679501](462632 'cast' Error[167984] this[168256]))
    val chpl__thisAsParent[462629]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544605 'move' chpl__thisAsParent[462629](1073512 call chpl__initCopy[965636] call_tmp[679501]))
    (462635 'setcid' chpl__thisAsParent[462629])
    (462637 'setcid' this[168256])
    (1815320 call chpl__autoDestroy[1435320] msg[168230])
    (1815323 call chpl__autoDestroy[1435320] call_tmp[679484])
    (1815326 call chpl__autoDestroy[1435320] call_tmp[679479])
    (522180 return _void[55])
  }
  function IllegalArgumentError[168246].deinit[812221](const in arg this[812225]:IllegalArgumentError[168246]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788307]
    val _parent_destructor_tmp_[1788302]:Error[167984] "temp"
    (1788309 'move' _parent_destructor_tmp_[1788302](1788303 'cast' Error[167984] this[812225]))
    (1788311 call deinit[811765] _parent_destructor_tmp_[1788302])
    (812233 return _void[55])
  }
  function _new[1064126](const  ref arg info[1064135]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1779082]:IllegalArgumentError[168246] "temp"
    val ret[1064165]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1064128]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064175 'move' call_tmp[1064172](1064186 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064189]:c_void_ptr[149] "dead after last mention" "temp"
    (1064191 'move' cast_tmp[1064189](1064143 call chpl_here_alloc[187788] call_tmp[1064172] 26))
    (1064146 'move' initTemp[1064128](1064193 'cast' IllegalArgumentError[168246] cast_tmp[1064189]))
    (1064148 'setcid' initTemp[1064128])
    (1064129 call init[168163] initTemp[1064128] info[1064135])
    val tmp[1064150]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1064154 'move' tmp[1064150] initTemp[1064128])
    (1064170 'move' ret[1064165] tmp[1064150])
    (1064167 return ret[1064165])
  }
  function _new[1073521](const  ref arg formal[1073530]:string[26], const  ref arg info[1073533]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1779092]:IllegalArgumentError[168246] "temp"
    val ret[1073561]:IllegalArgumentError[168246] "dead after last mention" "RVV" "temp"
    val initTemp[1073523]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073568]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073571 'move' call_tmp[1073568](1073582 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073585]:c_void_ptr[149] "dead after last mention" "temp"
    (1073587 'move' cast_tmp[1073585](1073539 call chpl_here_alloc[187788] call_tmp[1073568] 26))
    (1073542 'move' initTemp[1073523](1073589 'cast' IllegalArgumentError[168246] cast_tmp[1073585]))
    (1073544 'setcid' initTemp[1073523])
    (1073524 call init[168182] initTemp[1073523] formal[1073530] info[1073533])
    val tmp[1073546]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073550 'move' tmp[1073546] initTemp[1073523])
    (1073566 'move' ret[1073561] tmp[1073546])
    (1073563 return ret[1073561])
  }
  type IllegalArgumentError[168246] val super[355746]:Error[167984] "super class"
  function _ref(chpl_TaskErrors)[940959].append[168282](ref arg this[168350]:_ref(chpl_TaskErrors)[940959], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[168323]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[679506]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679509 'move' call_tmp[679506](168320 '_wide_get_locale' this[168350]))
    (168325 'move' tmp[168323] call_tmp[679506])
    val isdirect[2051812]:bool[10] "temp"
    (2051817 'move' isdirect[2051812](2051814 call chpl_doDirectExecuteOn[187469] tmp[168323]))
    if isdirect[2051812]
    {
      (2051821 call on_fn[935357] this[168350] err[168279])
    }
    {
      val _args_foron_fn[2051839]:_class_localson_fn[2051829] "temp"
      (2051843 'move' _args_foron_fn[2051839](2051841 'stack allocate class' _class_localson_fn[2051829]))
      (2051845 '.=' _args_foron_fn[2051839] _0_tmp[2051832] tmp[168323])
      ref tmp[2051849]:chpl_TaskErrors[168348] "temp"
      (2051853 'move' tmp[2051849](2051851 'set reference' this[168350]))
      (2051855 '.=' _args_foron_fn[2051839] _1_this[2051834] tmp[2051849])
      (2051859 '.=' _args_foron_fn[2051839] _2_err[2051836] err[168279])
      val _args_vforon_fn[2051863]:c_void_ptr[149] "temp"
      (2051867 'move' _args_vforon_fn[2051863](2051865 'cast_to_void_star' _args_foron_fn[2051839]))
      val _args_sizeon_fn[2051869]:int(64)[13] "temp"
      (2051873 'move' _args_sizeon_fn[2051869](2051871 'sizeof_bundle' _class_localson_fn[2051829]))
      on(2051913 call wrapon_fn[2051875] tmp[168323] _args_vforon_fn[2051863] _args_sizeon_fn[2051869] _args_foron_fn[2051839])
    }
    {
    }
    (522182 return _void[55])
  }
  function _ref(chpl_TaskErrors)[940959].empty[168336](const  ref arg this[168354]:_ref(chpl_TaskErrors)[940959]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522186]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679552]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
    (679555 'move' call_tmp[679552](388522 call _head[812235] this[168354]))
    const-val call_tmp[679557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235577]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235581 'move' coerce_tmp[1235577](1235579 'deref' call_tmp[679552]))
    val coerce_tmp[1235583]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235588 'move' coerce_tmp[1235583](1235585 'cast' object[22] coerce_tmp[1235577]))
    (679560 'move' call_tmp[679557](168340 call ==[1146] coerce_tmp[1235583] nil[44]))
    (522191 'move' ret[522186] call_tmp[679557])
    (522188 return ret[522186])
  }
  function _ref(chpl_TaskErrors)[940959]._head[812235](ref arg this[812239]:_ref(chpl_TaskErrors)[940959]) ref : _ref(Error)[941039] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812249]:_ref(Error)[941039] "dead after last mention" "RVV" "temp"
    ref call_tmp[812256]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
    (812259 'move' call_tmp[812256](812243 '.' this[812239] _head[168266]))
    (812254 'move' ret[812249] call_tmp[812256])
    (812251 return ret[812249])
  }
  function _ref(chpl_TaskErrors)[940959]._errorsLock[812261](ref arg this[812265]:_ref(chpl_TaskErrors)[940959]) ref : _ref(chpl_LocalSpinlock)[941090] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812275]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[812282]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
    (812285 'move' call_tmp[812282](812269 '.' this[812265] _errorsLock[168271]))
    (812280 'move' ret[812275] call_tmp[812282])
    (812277 return ret[812275])
  }
  function _ref(chpl_TaskErrors)[940959].init[812287](ref arg this[812290]:_ref(chpl_TaskErrors)[940959], in arg _head[812293]:Error[167984], const  ref arg _errorsLock[812308]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945195]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945198 'move' _formal_tmp__errorsLock[945195] _errorsLock[812308])
    (812322 '.=' this[812290] _head[168266] _head[812293])
    (812325 '.=' this[812290] _errorsLock[168271] _formal_tmp__errorsLock[945195])
    (812329 return _void[55])
  }
  function init_default__errorsLock[941070](ref arg _retArg[1805256]:_ref(chpl_LocalSpinlock)[941090]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[941072]:chpl_LocalSpinlock[187432] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[941077]:chpl_LocalSpinlock[187432] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[945160]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1805262]:AtomicBool[45877] "temp"
    (945162 call init_default_l[944847] ret_tmp[1805262])
    (1805265 'move' default_arg_l[945160] ret_tmp[1805262])
    (944837 call init[820340] _errorsLock[941077] default_arg_l[945160])
    (944833 'move' ret[941072] _errorsLock[941077])
    (1805258 '=' _retArg[1805256] ret[941072])
    (1805260 return _void[55])
  }
  function init_default__head[940989]() : Error[167984] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[940991]:Error[167984] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[940996]:Error[167984] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[941000]:Error[167984] "dead after last mention" "temp"
    val _formal_type[941002]:Error[167984] "dead after last mention" "temp" "type variable"
    (941010 'move' tmp[941000](941058 'cast' Error[167984] nil[44]))
    (941013 'move' _head[940996] tmp[941000])
    (941055 'move' ret[940991] _head[940996])
    (940994 return ret[940991])
  }
  function _ref(chpl_TaskErrors)[940959].deinit[812396](const  ref arg this[812400]:_ref(chpl_TaskErrors)[940959]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1788316]
    ref _field_destructor_tmp_[1788314]:_ref(chpl_LocalSpinlock)[941090] "temp"
    (1788321 'move' _field_destructor_tmp_[1788314](1788318 '.' this[812400] _errorsLock[168271]))
    (1788323 call deinit[820413] _field_destructor_tmp_[1788314])
    (812408 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:Error[167984] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function TaskErrors[169702].init[168384](const in arg this[169704]:TaskErrors[169702], ref arg group[168381]:_ref(chpl_TaskErrors)[940959]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462683]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462691 'move' super_tmp[462683](462684 '.v' this[169704] super[355748]))
    (462687 call init[167942] super_tmp[462683])
    val tmp[462643]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679567]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679570 'move' call_tmp[679567](462654 'cast' Error[167984] this[169704]))
    val chpl__thisAsParent[462651]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544609 'move' chpl__thisAsParent[462651](1237214 call chpl__initCopy[965636] call_tmp[679567]))
    (462657 'setcid' chpl__thisAsParent[462651])
    ref call_tmp[679574]:_ref(Error)[941039] "dead at end of block" "maybe param" "temp"
    (679577 'move' call_tmp[679574](168392 call _head[812235] group[168381]))
    val head[168395]:Error[167984] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1237220]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1237224 'move' coerce_tmp[1237220](1237222 'deref' call_tmp[679574]))
    (1815329 '=' head[168395] coerce_tmp[1237220])
    (544611 'noop')
    ref call_tmp[679581]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
    (679584 'move' call_tmp[679581](168401 call _head[812235] group[168381]))
    (168405 call =[1237228] call_tmp[679581] nil[44])
    val tmp[462659]:int(64)[13] "dead after last mention" "temp"
    (1240986 'move' tmp[462659] 0)
    (462664 '.=' this[169704] nErrors[168363] tmp[462659])
    val tmp[462668]:c_ptr(owned Error?)[1235634] "dead after last mention" "temp"
    val call_tmp[679586]:owned Error?[966432] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679591]:c_ptr(owned Error?)[1235634] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1240991 'move' tmp[462668](1240989 'cast' c_ptr(owned Error?)[1235634] nil[44]))
    (462677 '.=' this[169704] errorsArray[168374] tmp[462668])
    (462682 'setcid' this[169704])
    val cur[168418]:Error[167984] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544613]:Error[167984] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168423]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544627 'move' n[168423] 0)
    (544624 'move' cur[168418](1237291 call chpl__initCopy[967393] head[168395]))
    {
      val tmp[168533]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1237294]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237299 'move' coerce_tmp[1237294](1237296 'cast' object[22] cur[168418]))
      (679599 'move' call_tmp[679596](168554 call !=[1485] coerce_tmp[1237294] nil[44]))
      (168557 'move' tmp[168533] call_tmp[679596])
      WhileDo[168538]
      {
        {
          val call_tmp[679601]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679604 'move' call_tmp[679601](168437 call postfix![967793] cur[168418]))
          ref call_tmp[679608]:_ref(Error)[941039] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237303]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237308 'move' coerce_tmp[1237303] call_tmp[679601])
          (679611 'move' call_tmp[679608](168439 call _next[811635] coerce_tmp[1237303]))
          val curnext[168442]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1237313]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1237317 'move' coerce_tmp[1237313](1237315 'deref' call_tmp[679608]))
          (1815332 '=' curnext[168442] coerce_tmp[1237313])
          (544629 'noop')
          val call_tmp[679613]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1237496]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1237501 'move' coerce_tmp[1237496] cur[168418])
          (679616 'move' call_tmp[679613](168454 call _cast[1237397] coerce_tmp[1237496]))
          val asTaskErr[168456]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544631 'move' asTaskErr[168456](1237624 call chpl__initCopy[1237515] call_tmp[679613]))
          const-val call_tmp[679618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1237627]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1237632 'move' coerce_tmp[1237627](1237629 'cast' object[22] asTaskErr[168456]))
          (679621 'move' call_tmp[679618](168462 call ==[1146] coerce_tmp[1237627] nil[44]))
          const-val call_tmp[679623]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679626 'move' call_tmp[679623] call_tmp[679618])
          if call_tmp[679623]
          {
            (168466 call +=[451353] n[168423] 1)
          }
          {
            {
              ref _indexOfInterest[168489]:_ref(owned Error?)[966441] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168490]:_ic_these_TaskErrors[1237995] "dead at end of block" "expr temp" "temp"
              val call_tmp[679628]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679631 'move' call_tmp[679628] asTaskErr[168456])
              (168499 'move' _iterator[168490](168497 call _getIterator[1237951] call_tmp[679628]))
              {
                val ret[1874555]:_ir_these_TaskErrors[1238001] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1874557]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1874559]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1874561]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                const-val this[1874738]:TaskErrors[169702] "temp"
                (1874743 'move' this[1874738](1874740 '.v' _iterator[168490] F0_this[1972664]))
                (1874563 'move' call_tmp[1874561](1874566 call nErrors[814050] this[1874738]))
                const-val call_tmp[1874568]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1874570]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1874572 'move' coerce_tmp[1874570](1874574 'deref' call_tmp[1874561]))
                const-val ret_tmp[1874576]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                (1874579 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1874570] ret_tmp[1874576])
                (1874583 'move' call_tmp[1874568] ret_tmp[1874576])
                (1874586 'move' _iterator[1874559](1874589 call _getIterator[1103824] call_tmp[1874568]))
                {
                  val ret[1932227]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1932229]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1932231]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1932233]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1932235]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                  const-val low[1932712]:int(64)[13] "temp"
                  (1932717 'move' low[1932712](1932714 '.v' _iterator[1874559] F0_low[1976900]))
                  const-val count[1932719]:int(64)[13] "temp"
                  (1932724 'move' count[1932719](1932721 '.v' _iterator[1874559] F1_count[1976904]))
                  (1932238 call chpl_direct_counted_range_iter_helper[1102117] low[1932712] count[1932719] ret_tmp[1932235])
                  (1932242 'move' call_tmp[1932233] ret_tmp[1932235])
                  (1932245 'move' _iterator[1932231](1932248 call _getIterator[1103574] call_tmp[1932233]))
                  {
                    val ret[1932251]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                    val call_tmp[1932253]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1932255]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1932257]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1932259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1932261]:int(64)[13] "temp"
                    (1932263 'move' count[1932261](1932265 '.v' _iterator[1932231] F1_count[1981376]))
                    (1932268 'move' call_tmp[1932259](1932271 call <[948417] count[1932261]))
                    (1932273 'move' tmp[1932257] call_tmp[1932259])
                    (1932276 'move' tmp[1932255] call_tmp[1932259])
                    const-val call_tmp[1932279]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1932281 'move' call_tmp[1932279] call_tmp[1932259])
                    if call_tmp[1932259]
                    {
                      (1932287 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1932290]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1932292]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1932294]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1932296]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1932298]:int(64)[13] "temp"
                    (1932300 'move' count[1932298](1932302 '.v' _iterator[1932231] F1_count[1981376]))
                    (1932305 'move' call_tmp[1932296](1932308 call ==[435666] count[1932298] 0))
                    (1932311 'move' tmp[1932294] call_tmp[1932296])
                    if call_tmp[1932296]
                    {
                      const-val tmp[1932316]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1932318]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1932320]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1932322]:int(64)[13] "temp"
                      (1932324 'move' low[1932322](1932326 '.v' _iterator[1932231] F0_low[1981372]))
                      (1932329 'move' call_tmp[1932320](1932332 call _cast[956053] low[1932322]))
                      const-val call_tmp[1932334]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1932336]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1932338 'move' coerce_tmp[1932336](1932340 'cast' uint(64)[115] 1))
                      (1932343 'move' call_tmp[1932334](1932346 call -[962212] call_tmp[1932320]))
                      const-val call_tmp[1932348]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1932350 'move' call_tmp[1932348](1932353 call _cast[953562] call_tmp[1932334]))
                      const-val ret_tmp[1932355]:2*int(64)[1040075] "temp"
                      const-val low[1932357]:int(64)[13] "temp"
                      (1932359 'move' low[1932357](1932361 '.v' _iterator[1932231] F0_low[1981372]))
                      (1932365 call _build_tuple[1040033] low[1932357] call_tmp[1932348] ret_tmp[1932355])
                      (1932369 'move' tmp[1932316] ret_tmp[1932355])
                      (1932372 'move' tmp[1932292] tmp[1932316])
                    }
                    {
                      const-val tmp[1932376]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1932378]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1932380]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1932382]:int(64)[13] "temp"
                      (1932384 'move' count[1932382](1932386 '.v' _iterator[1932231] F1_count[1981376]))
                      (1932389 'move' call_tmp[1932380] count[1932382])
                      const-val call_tmp[1932392]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1932394]:int(64)[13] "temp"
                      (1932396 'move' count[1932394](1932398 '.v' _iterator[1932231] F1_count[1981376]))
                      (1932401 'move' call_tmp[1932392](1932404 call -[962245] count[1932394]))
                      const-val call_tmp[1932406]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1932408]:int(64)[13] "temp"
                      (1932410 'move' low[1932408](1932412 '.v' _iterator[1932231] F0_low[1981372]))
                      (1932415 'move' call_tmp[1932406](1932418 call +[439674] low[1932408] call_tmp[1932392]))
                      const-val ret_tmp[1932421]:2*int(64)[1040075] "temp"
                      const-val low[1932423]:int(64)[13] "temp"
                      (1932425 'move' low[1932423](1932427 '.v' _iterator[1932231] F0_low[1981372]))
                      (1932431 call _build_tuple[1040033] low[1932423] call_tmp[1932406] ret_tmp[1932421])
                      (1932435 'move' tmp[1932376] ret_tmp[1932421])
                      (1932438 'move' tmp[1932292] tmp[1932376])
                    }
                    (1932442 '=' tmp[1932290] tmp[1932292])
                    (1932445 'noop')
                    1
                    ref call_tmp[1932447]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1932449 'move' call_tmp[1932447](1932451 '.' tmp[1932290] x0[1040071]))
                    const-val start[1932454]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1932456]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1932458 'move' coerce_tmp[1932456](1932460 'deref' call_tmp[1932447]))
                    (1932462 '=' start[1932454] coerce_tmp[1932456])
                    (1932465 'noop')
                    ref call_tmp[1932466]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1932468 'move' call_tmp[1932466](1932470 '.' tmp[1932290] x1[1040073]))
                    const-val end[1932473]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1932475]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1932477 'move' coerce_tmp[1932475](1932479 'deref' call_tmp[1932466]))
                    (1932481 '=' end[1932473] coerce_tmp[1932475])
                    (1932484 'noop')
                    val _indexOfInterest[1932485]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1932487]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1932489]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1932491]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                    (1932494 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1932456] coerce_tmp[1932475] ret_tmp[1932491])
                    (1932498 'move' call_tmp[1932489] ret_tmp[1932491])
                    (1932501 'move' _iterator[1932487](1932504 call _getIterator[1103320] call_tmp[1932489]))
                    {
                      val ret[1961061]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                      val call_tmp[1961063]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1961066 call chpl_range_check_stride[1102863])
                      val i[1961067]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1961069]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1961071 'move' i[1961067] 0)
                      val call_tmp[1961074]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1961076]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1961311]:int(64)[13] "temp"
                      (1961316 'move' low[1961311](1961313 '.v' _iterator[1932487] F0_low[1982870]))
                      (1961078 'move' default_arg_first[1961076](1961081 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1961311]))
                      const-val default_arg_last[1961083]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1961318]:int(64)[13] "temp"
                      (1961323 'move' high[1961318](1961320 '.v' _iterator[1932487] F1_high[1982874]))
                      (1961085 'move' default_arg_last[1961083](1961088 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1961318]))
                      const-val _return_tmp_[1961090]:bool[10] "dead after last mention" "temp"
                      const-val low[1961325]:int(64)[13] "temp"
                      (1961330 'move' low[1961325](1961327 '.v' _iterator[1932487] F0_low[1982870]))
                      const-val high[1961332]:int(64)[13] "temp"
                      (1961337 'move' high[1961332](1961334 '.v' _iterator[1932487] F1_high[1982874]))
                      (1961092 'move' _return_tmp_[1961090](1961095 call chpl_checkIfRangeIterWillOverflow[1096095] low[1961325] high[1961332] 1 default_arg_first[1961076] default_arg_last[1961083] 1))
                      CForLoop[1961102]
                      {
                        const-val yret[1961117]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1961119 'move' yret[1961117] i[1961067])
                        const-val _yieldedIndex[1961133]:int(64)[13] "temp"
                        (1961309 'move' _yieldedIndex[1961133] i[1961067])
                        {
                          const-val i[1961135]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1961137 'move' i[1961135] _yieldedIndex[1961133])
                          const-val yret[1961140]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1961142 'move' yret[1961140] _yieldedIndex[1961133])
                          const-val _yieldedIndex[1961145]:int(64)[13] "temp"
                          (1961147 'move' _yieldedIndex[1961145] _yieldedIndex[1961133])
                          {
                            const-val i[1961151]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1961153 'move' i[1961151] _yieldedIndex[1961145])
                            const-val yret[1961156]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1961158 'move' yret[1961156] _yieldedIndex[1961145])
                            const-val _yieldedIndex[1961161]:int(64)[13] "temp"
                            (1961163 'move' _yieldedIndex[1961161] _yieldedIndex[1961145])
                            {
                              const-val i[1961167]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1961169 'move' i[1961167] _yieldedIndex[1961161])
                              ref call_tmp[1961172]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1961174]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                              const-val this[1961176]:TaskErrors[169702] "temp"
                              (1961178 'move' this[1961176](1961180 '.v' _iterator[168490] F0_this[1972664]))
                              (1961183 'move' _this_tmp_[1961174](1961186 call errorsArray[814076] this[1961176]))
                              val coerce_tmp[1961188]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961190 'move' coerce_tmp[1961188](1961192 'deref' _this_tmp_[1961174]))
                              (1961194 'move' call_tmp[1961172](1961197 call this[1235772] coerce_tmp[1961188] _yieldedIndex[1961161]))
                              const-val call_tmp[1961200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1961202]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961204 'move' coerce_tmp[1961202](1961207 call borrow[1235847] call_tmp[1961172]))
                              val coerce_tmp[1961209]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961211 'move' coerce_tmp[1961209](1961213 'cast' object[22] coerce_tmp[1961202]))
                              (1961216 'move' call_tmp[1961200](1961219 call !=[1485] coerce_tmp[1961209] nil[44]))
                              const-val call_tmp[1961222]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1961224 'move' call_tmp[1961222] call_tmp[1961200])
                              if call_tmp[1961200]
                              {
                                ref yret[1961229]:_ref(owned Error?)[966441] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1961231]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1961233]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                                const-val this[1961235]:TaskErrors[169702] "temp"
                                (1961237 'move' this[1961235](1961239 '.v' _iterator[168490] F0_this[1972664]))
                                (1961242 'move' _this_tmp_[1961233](1961245 call errorsArray[814076] this[1961235]))
                                val coerce_tmp[1961247]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1961249 'move' coerce_tmp[1961247](1961251 'deref' _this_tmp_[1961233]))
                                (1961253 'move' call_tmp[1961231](1961256 call this[1235772] coerce_tmp[1961247] i[1961167]))
                                ref _yieldedIndex[1961259]:_ref(owned Error?)[966441] "temp"
                                (1961261 'move' _yieldedIndex[1961259] call_tmp[1961231])
                                {
                                  ref e[1961265]:_ref(owned Error?)[966441] "index var" "insert auto destroy"
                                  (1961267 'move' e[1961265] _yieldedIndex[1961259])
                                  {
                                    const-val call_tmp[1961271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1961273]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1961275 'move' coerce_tmp[1961273](1961278 call borrow[1235847] e[1961265]))
                                    val coerce_tmp[1961280]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1961282 'move' coerce_tmp[1961280](1961284 'cast' object[22] coerce_tmp[1961273]))
                                    (1961287 'move' call_tmp[1961271](1961290 call !=[1485] coerce_tmp[1961280] nil[44]))
                                    const-val call_tmp[1961293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1961295 'move' call_tmp[1961293] call_tmp[1961271])
                                    if call_tmp[1961293]
                                    {
                                      (1961301 call +=[451353] n[168423] 1)
                                    }
                                  }
                                  label _continueLabel[1961305]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1961339]:int(64)[13] "temp"
                          (1961344 'move' low[1961339](1961341 '.v' _iterator[1932487] F0_low[1982870]))
                          (1961104 '=' i[1961067] low[1961339])
                        }
                        {
                          const-val high[1961346]:int(64)[13] "temp"
                          (1961351 'move' high[1961346](1961348 '.v' _iterator[1932487] F1_high[1982874]))
                          (1961108 '<=' i[1961067] high[1961346])
                        }
                        {
                          val call_tmp[1961112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1961114 '+=' i[1961067] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1961129]
                    }
                    (1932552 call _freeIterator[1103493] _iterator[1932487])
                    (1932555 call chpl__autoDestroy[1508492] tmp[1932290])
                    label _endchpl_direct_counted_range_iter_helper[1932557]
                  }
                  (1932560 call _freeIterator[1103743] _iterator[1932231])
                  label _endchpl_direct_counted_range_iter[1932562]
                }
                (1874687 call _freeIterator[1103993] _iterator[1874559])
                label _endthese[1874689]
              }
              label _breakLabel[168495]
              (1815341 call _freeIterator[1238252] _iterator[168490])
            }
          }
          (168530 call =[1232465] cur[168418] curnext[168442])
        }
        label _continueLabel[168536]
        const-val call_tmp[679643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1238337]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1238342 'move' coerce_tmp[1238337](1238339 'cast' object[22] cur[168418]))
        (679646 'move' call_tmp[679643](168544 call !=[1485] coerce_tmp[1238337] nil[44]))
        (168547 'move' tmp[168533] call_tmp[679643])
        tmp[168533]
      }
      label _breakLabel[168537]
    }
    ref call_tmp[679650]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (679653 'move' call_tmp[679650](388550 call nErrors[814050] this[169704]))
    (168562 call =[435365] call_tmp[679650] n[168423])
    ref call_tmp[679657]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "maybe param" "temp"
    (679660 'move' call_tmp[679657](388558 call errorsArray[814076] this[169704]))
    val call_tmp[679662]:owned Error?[966432] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679667]:c_ptr(owned Error?)[1235634] "dead after last mention" "expr temp" "maybe param" "temp"
    (679670 'move' call_tmp[679667](168573 call c_calloc[1238356] n[168423]))
    (168574 call =[1238681] call_tmp[679657] call_tmp[679667])
    val idx[168578]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544633 'move' idx[168578] 0)
    (168584 call =[1232465] cur[168418] head[168395])
    {
      val tmp[168729]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1238709]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1238714 'move' coerce_tmp[1238709](1238711 'cast' object[22] cur[168418]))
      (679675 'move' call_tmp[679672](168750 call !=[1485] coerce_tmp[1238709] nil[44]))
      (168753 'move' tmp[168729] call_tmp[679672])
      WhileDo[168734] hazard
      {
        {
          val call_tmp[679677]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (679680 'move' call_tmp[679677](168592 call postfix![967793] cur[168418]))
          ref call_tmp[679684]:_ref(Error)[941039] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238718]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238723 'move' coerce_tmp[1238718] call_tmp[679677])
          (679687 'move' call_tmp[679684](168594 call _next[811635] coerce_tmp[1238718]))
          val curnext[168597]:Error[167984] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1238728]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1238732 'move' coerce_tmp[1238728](1238730 'deref' call_tmp[679684]))
          (1815335 '=' curnext[168597] coerce_tmp[1238728])
          (544635 'noop')
          val call_tmp[679689]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
          (679692 'move' call_tmp[679689](168603 call postfix![967793] cur[168418]))
          ref call_tmp[679696]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1238736]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238741 'move' coerce_tmp[1238736] call_tmp[679689])
          (679699 'move' call_tmp[679696](168605 call _next[811635] coerce_tmp[1238736]))
          (168609 call =[1237228] call_tmp[679696] nil[44])
          val call_tmp[679701]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1238745]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1238750 'move' coerce_tmp[1238745] cur[168418])
          (679704 'move' call_tmp[679701](168619 call _cast[1237397] coerce_tmp[1238745]))
          val asTaskErr[168621]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
          (544637 'move' asTaskErr[168621](1238753 call chpl__initCopy[1237515] call_tmp[679701]))
          const-val call_tmp[679706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1238756]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1238761 'move' coerce_tmp[1238756](1238758 'cast' object[22] asTaskErr[168621]))
          (679709 'move' call_tmp[679706](168627 call ==[1146] coerce_tmp[1238756] nil[44]))
          const-val call_tmp[679711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679714 'move' call_tmp[679711] call_tmp[679706])
          if call_tmp[679711]
          {
            ref call_tmp[679718]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1238765]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
            (1238767 'move' _this_tmp_[1238765](388574 call errorsArray[814076] this[169704]))
            val coerce_tmp[1238772]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1238776 'move' coerce_tmp[1238772](1238774 'deref' _this_tmp_[1238765]))
            (679721 'move' call_tmp[679718](168632 call this[1235772] coerce_tmp[1238772] idx[168578]))
            val call_tmp[679725]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
            (679728 'move' call_tmp[679725](168637 call postfix![967793] cur[168418]))
            (168640 call retain[1238794] call_tmp[679718] call_tmp[679725])
            (168645 call +=[451353] idx[168578] 1)
          }
          {
            {
              ref _indexOfInterest[168680]:_ref(owned Error?)[966441] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168681]:_ic_these_TaskErrors[1237995] "dead at end of block" "expr temp" "temp"
              val call_tmp[679730]:TaskErrors[169702] "dead at end of block" "expr temp" "maybe param" "temp"
              (679733 'move' call_tmp[679730] asTaskErr[168621])
              const-val call_tmp[679737]:_ir_these_TaskErrors[1238001] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1239032]:TaskErrors[169702] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1239037 'move' coerce_tmp[1239032] call_tmp[679730])
              const-val ret_tmp[1804458]:_ir_these_TaskErrors[1238001] "temp"
              (168656 call these[168908] coerce_tmp[1239032] ret_tmp[1804458])
              (1804461 'move' call_tmp[679737] ret_tmp[1804458])
              (168690 'move' _iterator[168681](168688 call _getIterator[1238010] call_tmp[679737]))
              {
                val ret[1874760]:_ir_these_TaskErrors[1238001] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1874762]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1874764]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1874766]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                const-val this[1874968]:TaskErrors[169702] "temp"
                (1874973 'move' this[1874968](1874970 '.v' _iterator[168681] F0_this[1972664]))
                (1874768 'move' call_tmp[1874766](1874771 call nErrors[814050] this[1874968]))
                const-val call_tmp[1874773]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1874775]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1874777 'move' coerce_tmp[1874775](1874779 'deref' call_tmp[1874766]))
                const-val ret_tmp[1874781]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                (1874784 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1874775] ret_tmp[1874781])
                (1874788 'move' call_tmp[1874773] ret_tmp[1874781])
                (1874791 'move' _iterator[1874764](1874794 call _getIterator[1103824] call_tmp[1874773]))
                {
                  val ret[1932727]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1932729]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1932731]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1932733]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1932735]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                  const-val low[1933237]:int(64)[13] "temp"
                  (1933242 'move' low[1933237](1933239 '.v' _iterator[1874764] F0_low[1976900]))
                  const-val count[1933244]:int(64)[13] "temp"
                  (1933249 'move' count[1933244](1933246 '.v' _iterator[1874764] F1_count[1976904]))
                  (1932738 call chpl_direct_counted_range_iter_helper[1102117] low[1933237] count[1933244] ret_tmp[1932735])
                  (1932742 'move' call_tmp[1932733] ret_tmp[1932735])
                  (1932745 'move' _iterator[1932731](1932748 call _getIterator[1103574] call_tmp[1932733]))
                  {
                    val ret[1932751]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                    val call_tmp[1932753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1932755]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1932757]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1932759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1932761]:int(64)[13] "temp"
                    (1932763 'move' count[1932761](1932765 '.v' _iterator[1932731] F1_count[1981376]))
                    (1932768 'move' call_tmp[1932759](1932771 call <[948417] count[1932761]))
                    (1932773 'move' tmp[1932757] call_tmp[1932759])
                    (1932776 'move' tmp[1932755] call_tmp[1932759])
                    const-val call_tmp[1932779]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1932781 'move' call_tmp[1932779] call_tmp[1932759])
                    if call_tmp[1932759]
                    {
                      (1932787 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1932790]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1932792]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1932794]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1932796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1932798]:int(64)[13] "temp"
                    (1932800 'move' count[1932798](1932802 '.v' _iterator[1932731] F1_count[1981376]))
                    (1932805 'move' call_tmp[1932796](1932808 call ==[435666] count[1932798] 0))
                    (1932811 'move' tmp[1932794] call_tmp[1932796])
                    if call_tmp[1932796]
                    {
                      const-val tmp[1932816]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1932818]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1932820]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1932822]:int(64)[13] "temp"
                      (1932824 'move' low[1932822](1932826 '.v' _iterator[1932731] F0_low[1981372]))
                      (1932829 'move' call_tmp[1932820](1932832 call _cast[956053] low[1932822]))
                      const-val call_tmp[1932834]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1932836]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1932838 'move' coerce_tmp[1932836](1932840 'cast' uint(64)[115] 1))
                      (1932843 'move' call_tmp[1932834](1932846 call -[962212] call_tmp[1932820]))
                      const-val call_tmp[1932848]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1932850 'move' call_tmp[1932848](1932853 call _cast[953562] call_tmp[1932834]))
                      const-val ret_tmp[1932855]:2*int(64)[1040075] "temp"
                      const-val low[1932857]:int(64)[13] "temp"
                      (1932859 'move' low[1932857](1932861 '.v' _iterator[1932731] F0_low[1981372]))
                      (1932865 call _build_tuple[1040033] low[1932857] call_tmp[1932848] ret_tmp[1932855])
                      (1932869 'move' tmp[1932816] ret_tmp[1932855])
                      (1932872 'move' tmp[1932792] tmp[1932816])
                    }
                    {
                      const-val tmp[1932876]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1932878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1932880]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1932882]:int(64)[13] "temp"
                      (1932884 'move' count[1932882](1932886 '.v' _iterator[1932731] F1_count[1981376]))
                      (1932889 'move' call_tmp[1932880] count[1932882])
                      const-val call_tmp[1932892]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1932894]:int(64)[13] "temp"
                      (1932896 'move' count[1932894](1932898 '.v' _iterator[1932731] F1_count[1981376]))
                      (1932901 'move' call_tmp[1932892](1932904 call -[962245] count[1932894]))
                      const-val call_tmp[1932906]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1932908]:int(64)[13] "temp"
                      (1932910 'move' low[1932908](1932912 '.v' _iterator[1932731] F0_low[1981372]))
                      (1932915 'move' call_tmp[1932906](1932918 call +[439674] low[1932908] call_tmp[1932892]))
                      const-val ret_tmp[1932921]:2*int(64)[1040075] "temp"
                      const-val low[1932923]:int(64)[13] "temp"
                      (1932925 'move' low[1932923](1932927 '.v' _iterator[1932731] F0_low[1981372]))
                      (1932931 call _build_tuple[1040033] low[1932923] call_tmp[1932906] ret_tmp[1932921])
                      (1932935 'move' tmp[1932876] ret_tmp[1932921])
                      (1932938 'move' tmp[1932792] tmp[1932876])
                    }
                    (1932942 '=' tmp[1932790] tmp[1932792])
                    (1932945 'noop')
                    1
                    ref call_tmp[1932947]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1932949 'move' call_tmp[1932947](1932951 '.' tmp[1932790] x0[1040071]))
                    const-val start[1932954]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1932956]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1932958 'move' coerce_tmp[1932956](1932960 'deref' call_tmp[1932947]))
                    (1932962 '=' start[1932954] coerce_tmp[1932956])
                    (1932965 'noop')
                    ref call_tmp[1932966]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1932968 'move' call_tmp[1932966](1932970 '.' tmp[1932790] x1[1040073]))
                    const-val end[1932973]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1932975]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1932977 'move' coerce_tmp[1932975](1932979 'deref' call_tmp[1932966]))
                    (1932981 '=' end[1932973] coerce_tmp[1932975])
                    (1932984 'noop')
                    val _indexOfInterest[1932985]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1932987]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1932989]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1932991]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                    (1932994 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1932956] coerce_tmp[1932975] ret_tmp[1932991])
                    (1932998 'move' call_tmp[1932989] ret_tmp[1932991])
                    (1933001 'move' _iterator[1932987](1933004 call _getIterator[1103320] call_tmp[1932989]))
                    {
                      val ret[1961354]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                      val call_tmp[1961356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1961359 call chpl_range_check_stride[1102863])
                      val i[1961360]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1961362]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1961364 'move' i[1961360] 0)
                      val call_tmp[1961367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1961369]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1961629]:int(64)[13] "temp"
                      (1961634 'move' low[1961629](1961631 '.v' _iterator[1932987] F0_low[1982870]))
                      (1961371 'move' default_arg_first[1961369](1961374 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1961629]))
                      const-val default_arg_last[1961376]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1961636]:int(64)[13] "temp"
                      (1961641 'move' high[1961636](1961638 '.v' _iterator[1932987] F1_high[1982874]))
                      (1961378 'move' default_arg_last[1961376](1961381 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1961636]))
                      const-val _return_tmp_[1961383]:bool[10] "dead after last mention" "temp"
                      const-val low[1961643]:int(64)[13] "temp"
                      (1961648 'move' low[1961643](1961645 '.v' _iterator[1932987] F0_low[1982870]))
                      const-val high[1961650]:int(64)[13] "temp"
                      (1961655 'move' high[1961650](1961652 '.v' _iterator[1932987] F1_high[1982874]))
                      (1961385 'move' _return_tmp_[1961383](1961388 call chpl_checkIfRangeIterWillOverflow[1096095] low[1961643] high[1961650] 1 default_arg_first[1961369] default_arg_last[1961376] 1))
                      CForLoop[1961395] hazard
                      {
                        const-val yret[1961410]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1961412 'move' yret[1961410] i[1961360])
                        const-val _yieldedIndex[1961426]:int(64)[13] "temp"
                        (1961627 'move' _yieldedIndex[1961426] i[1961360])
                        {
                          const-val i[1961428]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1961430 'move' i[1961428] _yieldedIndex[1961426])
                          const-val yret[1961433]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1961435 'move' yret[1961433] _yieldedIndex[1961426])
                          const-val _yieldedIndex[1961438]:int(64)[13] "temp"
                          (1961440 'move' _yieldedIndex[1961438] _yieldedIndex[1961426])
                          {
                            const-val i[1961444]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1961446 'move' i[1961444] _yieldedIndex[1961438])
                            const-val yret[1961449]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1961451 'move' yret[1961449] _yieldedIndex[1961438])
                            const-val _yieldedIndex[1961454]:int(64)[13] "temp"
                            (1961456 'move' _yieldedIndex[1961454] _yieldedIndex[1961438])
                            {
                              const-val i[1961460]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1961462 'move' i[1961460] _yieldedIndex[1961454])
                              ref call_tmp[1961465]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1961467]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                              const-val this[1961469]:TaskErrors[169702] "temp"
                              (1961471 'move' this[1961469](1961473 '.v' _iterator[168681] F0_this[1972664]))
                              (1961476 'move' _this_tmp_[1961467](1961479 call errorsArray[814076] this[1961469]))
                              val coerce_tmp[1961481]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961483 'move' coerce_tmp[1961481](1961485 'deref' _this_tmp_[1961467]))
                              (1961487 'move' call_tmp[1961465](1961490 call this[1235772] coerce_tmp[1961481] _yieldedIndex[1961454]))
                              const-val call_tmp[1961493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1961495]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961497 'move' coerce_tmp[1961495](1961500 call borrow[1235847] call_tmp[1961465]))
                              val coerce_tmp[1961502]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1961504 'move' coerce_tmp[1961502](1961506 'cast' object[22] coerce_tmp[1961495]))
                              (1961509 'move' call_tmp[1961493](1961512 call !=[1485] coerce_tmp[1961502] nil[44]))
                              const-val call_tmp[1961515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1961517 'move' call_tmp[1961515] call_tmp[1961493])
                              if call_tmp[1961493]
                              {
                                ref yret[1961522]:_ref(owned Error?)[966441] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1961524]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1961526]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                                const-val this[1961528]:TaskErrors[169702] "temp"
                                (1961530 'move' this[1961528](1961532 '.v' _iterator[168681] F0_this[1972664]))
                                (1961535 'move' _this_tmp_[1961526](1961538 call errorsArray[814076] this[1961528]))
                                val coerce_tmp[1961540]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1961542 'move' coerce_tmp[1961540](1961544 'deref' _this_tmp_[1961526]))
                                (1961546 'move' call_tmp[1961524](1961549 call this[1235772] coerce_tmp[1961540] i[1961460]))
                                ref _yieldedIndex[1961552]:_ref(owned Error?)[966441] "temp"
                                (1961554 'move' _yieldedIndex[1961552] call_tmp[1961524])
                                {
                                  ref e[1961558]:_ref(owned Error?)[966441] "index var" "insert auto destroy"
                                  (1961560 'move' e[1961558] _yieldedIndex[1961552])
                                  {
                                    const-val call_tmp[1961564]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1961566]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1961568 'move' coerce_tmp[1961566](1961571 call borrow[1235847] e[1961558]))
                                    val coerce_tmp[1961573]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1961575 'move' coerce_tmp[1961573](1961577 'cast' object[22] coerce_tmp[1961566]))
                                    (1961580 'move' call_tmp[1961564](1961583 call !=[1485] coerce_tmp[1961573] nil[44]))
                                    const-val call_tmp[1961586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1961588 'move' call_tmp[1961586] call_tmp[1961564])
                                    if call_tmp[1961586]
                                    {
                                      ref call_tmp[1961593]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1961595]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                                      (1961597 'move' _this_tmp_[1961595](1961600 call errorsArray[814076] this[169704]))
                                      val coerce_tmp[1961602]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1961604 'move' coerce_tmp[1961602](1961606 'deref' _this_tmp_[1961595]))
                                      (1961608 'move' call_tmp[1961593](1961611 call this[1235772] coerce_tmp[1961602] idx[168578]))
                                      (1961615 call =[1239076] call_tmp[1961593] e[1961558])
                                      (1961619 call +=[451353] idx[168578] 1)
                                    }
                                  }
                                  label _continueLabel[1961623]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1961657]:int(64)[13] "temp"
                          (1961662 'move' low[1961657](1961659 '.v' _iterator[1932987] F0_low[1982870]))
                          (1961397 '=' i[1961360] low[1961657])
                        }
                        {
                          const-val high[1961664]:int(64)[13] "temp"
                          (1961669 'move' high[1961664](1961666 '.v' _iterator[1932987] F1_high[1982874]))
                          (1961401 '<=' i[1961360] high[1961664])
                        }
                        {
                          val call_tmp[1961405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1961407 '+=' i[1961360] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1961422]
                    }
                    (1933052 call _freeIterator[1103493] _iterator[1932987])
                    (1933055 call chpl__autoDestroy[1508492] tmp[1932790])
                    label _endchpl_direct_counted_range_iter_helper[1933057]
                  }
                  (1933060 call _freeIterator[1103743] _iterator[1932731])
                  label _endchpl_direct_counted_range_iter[1933062]
                }
                (1874892 call _freeIterator[1103993] _iterator[1874764])
                label _endthese[1874894]
              }
              label _breakLabel[168686]
              (1815346 call _freeIterator[1238252] _iterator[168681])
            }
            (168717 call chpl__delete[1239994] asTaskErr[168621])
          }
          (168726 call =[1232465] cur[168418] curnext[168597])
        }
        label _continueLabel[168732]
        const-val call_tmp[679759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1240977]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1240982 'move' coerce_tmp[1240977](1240979 'cast' object[22] cur[168418]))
        (679762 'move' call_tmp[679759](168740 call !=[1485] coerce_tmp[1240977] nil[44]))
        (168743 'move' tmp[168729] call_tmp[679759])
        tmp[168729]
      }
      label _breakLabel[168733]
    }
    (522193 return _void[55])
  }
  function TaskErrors[169702].init[168765](const in arg this[169708]:TaskErrors[169702], const in arg err[168762]:Error[167984]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462738]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (462746 'move' super_tmp[462738](462739 '.v' this[169708] super[355748]))
    (462742 call init[167942] super_tmp[462738])
    val tmp[462698]:Error[167984] "dead after last mention" "temp" "type variable"
    val call_tmp[679769]:Error[167984] "dead at end of block" "maybe param" "temp"
    (679772 'move' call_tmp[679769](462709 'cast' Error[167984] this[169708]))
    val chpl__thisAsParent[462706]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
    (544639 'move' chpl__thisAsParent[462706](1734555 call chpl__initCopy[965636] call_tmp[679769]))
    (462712 'setcid' chpl__thisAsParent[462706])
    val tmp[462714]:int(64)[13] "dead after last mention" "temp"
    (462717 'move' tmp[462714] 1)
    (462719 '.=' this[169708] nErrors[168363] tmp[462714])
    val call_tmp[679774]:owned Error?[966432] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679779]:c_ptr(owned Error?)[1235634] "dead after last mention" "maybe param" "temp"
    (679782 'move' call_tmp[679779](168781 call c_calloc[1238356] 1))
    val call_tmp[679784]:owned Error?[966432] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679789]:c_ptr(owned Error?)[1235634] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462723]:c_ptr(owned Error?)[1235634] "dead after last mention" "temp"
    (462730 'move' tmp[462723](1734584 call chpl__initCopy[1734586] call_tmp[679779]))
    (462732 '.=' this[169708] errorsArray[168374] tmp[462723])
    (462737 'setcid' this[169708])
    ref call_tmp[679796]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1734606]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734611 'move' coerce_tmp[1734606] err[168762])
    (679799 'move' call_tmp[679796](168793 call _next[811635] coerce_tmp[1734606]))
    (168797 call =[1237228] call_tmp[679796] nil[44])
    ref call_tmp[679803]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1734616]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
    (1734618 'move' _this_tmp_[1734616](388610 call errorsArray[814076] this[169708]))
    val coerce_tmp[1734623]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734627 'move' coerce_tmp[1734623](1734625 'deref' _this_tmp_[1734616]))
    (679806 'move' call_tmp[679803](168803 call this[1235772] coerce_tmp[1734623] 0))
    (168809 call retain[1238794] call_tmp[679803] err[168762])
    (522195 return _void[55])
  }
  function TaskErrors[169702].deinit[168832](const in arg this[169716]:TaskErrors[169702]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679832]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "maybe param" "temp"
    (679835 'move' call_tmp[679832](388626 call errorsArray[814076] this[169716]))
    const-val call_tmp[679837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1235717]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235721 'move' coerce_tmp[1235717](1235719 'deref' call_tmp[679832]))
    (679840 'move' call_tmp[679837](168899 call _cond_test[1235685] coerce_tmp[1235717]))
    if call_tmp[679837]
    {
      {
        val _indexOfInterest[168853]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168854]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679844]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
        (679847 'move' call_tmp[679844](388637 call nErrors[814050] this[169716]))
        const-val call_tmp[679849]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1235754]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1235758 'move' coerce_tmp[1235754](1235756 'deref' call_tmp[679844]))
        const-val ret_tmp[1805180]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
        (168870 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1235754] ret_tmp[1805180])
        (1805183 'move' call_tmp[679849] ret_tmp[1805180])
        (168863 'move' _iterator[168854](168861 call _getIterator[1103824] call_tmp[679849]))
        {
          val ret[1874990]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1874992]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1874994]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1874996]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1874998]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
          const-val low[1875080]:int(64)[13] "temp"
          (1875085 'move' low[1875080](1875082 '.v' _iterator[168854] F0_low[1976900]))
          const-val count[1875087]:int(64)[13] "temp"
          (1875092 'move' count[1875087](1875089 '.v' _iterator[168854] F1_count[1976904]))
          (1875001 call chpl_direct_counted_range_iter_helper[1102117] low[1875080] count[1875087] ret_tmp[1874998])
          (1875005 'move' call_tmp[1874996] ret_tmp[1874998])
          (1875008 'move' _iterator[1874994](1875011 call _getIterator[1103574] call_tmp[1874996]))
          {
            val ret[1933252]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
            val call_tmp[1933254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1933256]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1933258]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1933260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1933649]:int(64)[13] "temp"
            (1933654 'move' count[1933649](1933651 '.v' _iterator[1874994] F1_count[1981376]))
            (1933262 'move' call_tmp[1933260](1933265 call <[948417] count[1933649]))
            (1933267 'move' tmp[1933258] call_tmp[1933260])
            (1933270 'move' tmp[1933256] call_tmp[1933260])
            const-val call_tmp[1933273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1933275 'move' call_tmp[1933273] call_tmp[1933260])
            if call_tmp[1933260]
            {
              (1933281 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1933284]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1933286]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1933288]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1933290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1933656]:int(64)[13] "temp"
            (1933661 'move' count[1933656](1933658 '.v' _iterator[1874994] F1_count[1981376]))
            (1933292 'move' call_tmp[1933290](1933295 call ==[435666] count[1933656] 0))
            (1933298 'move' tmp[1933288] call_tmp[1933290])
            if call_tmp[1933290]
            {
              const-val tmp[1933303]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1933305]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1933307]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1933663]:int(64)[13] "temp"
              (1933668 'move' low[1933663](1933665 '.v' _iterator[1874994] F0_low[1981372]))
              (1933309 'move' call_tmp[1933307](1933312 call _cast[956053] low[1933663]))
              const-val call_tmp[1933314]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1933316]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1933318 'move' coerce_tmp[1933316](1933320 'cast' uint(64)[115] 1))
              (1933323 'move' call_tmp[1933314](1933326 call -[962212] call_tmp[1933307]))
              const-val call_tmp[1933328]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1933330 'move' call_tmp[1933328](1933333 call _cast[953562] call_tmp[1933314]))
              const-val ret_tmp[1933335]:2*int(64)[1040075] "temp"
              const-val low[1933670]:int(64)[13] "temp"
              (1933675 'move' low[1933670](1933672 '.v' _iterator[1874994] F0_low[1981372]))
              (1933338 call _build_tuple[1040033] low[1933670] call_tmp[1933328] ret_tmp[1933335])
              (1933342 'move' tmp[1933303] ret_tmp[1933335])
              (1933345 'move' tmp[1933286] tmp[1933303])
            }
            {
              const-val tmp[1933349]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1933351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1933353]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1933677]:int(64)[13] "temp"
              (1933682 'move' count[1933677](1933679 '.v' _iterator[1874994] F1_count[1981376]))
              (1933355 'move' call_tmp[1933353] count[1933677])
              const-val call_tmp[1933358]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1933684]:int(64)[13] "temp"
              (1933689 'move' count[1933684](1933686 '.v' _iterator[1874994] F1_count[1981376]))
              (1933360 'move' call_tmp[1933358](1933363 call -[962245] count[1933684]))
              const-val call_tmp[1933365]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1933691]:int(64)[13] "temp"
              (1933696 'move' low[1933691](1933693 '.v' _iterator[1874994] F0_low[1981372]))
              (1933367 'move' call_tmp[1933365](1933370 call +[439674] low[1933691] call_tmp[1933358]))
              const-val ret_tmp[1933373]:2*int(64)[1040075] "temp"
              const-val low[1933698]:int(64)[13] "temp"
              (1933703 'move' low[1933698](1933700 '.v' _iterator[1874994] F0_low[1981372]))
              (1933376 call _build_tuple[1040033] low[1933698] call_tmp[1933365] ret_tmp[1933373])
              (1933380 'move' tmp[1933349] ret_tmp[1933373])
              (1933383 'move' tmp[1933286] tmp[1933349])
            }
            (1933387 '=' tmp[1933284] tmp[1933286])
            (1933390 'noop')
            1
            ref call_tmp[1933392]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1933394 'move' call_tmp[1933392](1933396 '.' tmp[1933284] x0[1040071]))
            const-val start[1933399]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1933401]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1933403 'move' coerce_tmp[1933401](1933405 'deref' call_tmp[1933392]))
            (1933407 '=' start[1933399] coerce_tmp[1933401])
            (1933410 'noop')
            ref call_tmp[1933411]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1933413 'move' call_tmp[1933411](1933415 '.' tmp[1933284] x1[1040073]))
            const-val end[1933418]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1933420]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1933422 'move' coerce_tmp[1933420](1933424 'deref' call_tmp[1933411]))
            (1933426 '=' end[1933418] coerce_tmp[1933420])
            (1933429 'noop')
            val _indexOfInterest[1933430]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1933432]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1933434]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1933436]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
            (1933439 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1933401] coerce_tmp[1933420] ret_tmp[1933436])
            (1933443 'move' call_tmp[1933434] ret_tmp[1933436])
            (1933446 'move' _iterator[1933432](1933449 call _getIterator[1103320] call_tmp[1933434]))
            {
              val ret[1933452]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
              val call_tmp[1933454]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1933457 call chpl_range_check_stride[1102863])
              val i[1933458]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1933460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1933462 'move' i[1933458] 0)
              val call_tmp[1933465]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1933467]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1933469]:int(64)[13] "temp"
              (1933471 'move' low[1933469](1933473 '.v' _iterator[1933432] F0_low[1982870]))
              (1933476 'move' default_arg_first[1933467](1933479 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1933469]))
              const-val default_arg_last[1933481]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1933483]:int(64)[13] "temp"
              (1933485 'move' high[1933483](1933487 '.v' _iterator[1933432] F1_high[1982874]))
              (1933490 'move' default_arg_last[1933481](1933493 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1933483]))
              const-val _return_tmp_[1933495]:bool[10] "dead after last mention" "temp"
              const-val low[1933497]:int(64)[13] "temp"
              (1933499 'move' low[1933497](1933501 '.v' _iterator[1933432] F0_low[1982870]))
              const-val high[1933504]:int(64)[13] "temp"
              (1933506 'move' high[1933504](1933508 '.v' _iterator[1933432] F1_high[1982874]))
              (1933511 'move' _return_tmp_[1933495](1933514 call chpl_checkIfRangeIterWillOverflow[1096095] low[1933497] high[1933504] 1 default_arg_first[1933467] default_arg_last[1933481] 1))
              CForLoop[1933521] hazard
              {
                const-val yret[1933550]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1933552 'move' yret[1933550] i[1933458])
                const-val _yieldedIndex[1933555]:int(64)[13] "temp"
                (1933557 'move' _yieldedIndex[1933555] i[1933458])
                {
                  const-val i[1933561]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1933563 'move' i[1933561] _yieldedIndex[1933555])
                  const-val yret[1933566]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1933568 'move' yret[1933566] _yieldedIndex[1933555])
                  const-val _yieldedIndex[1933596]:int(64)[13] "temp"
                  (1933647 'move' _yieldedIndex[1933596] _yieldedIndex[1933555])
                  {
                    const-val i[1933598]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1933600 'move' i[1933598] _yieldedIndex[1933596])
                    const-val yret[1933603]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1933605 'move' yret[1933603] _yieldedIndex[1933596])
                    const-val _yieldedIndex[1933608]:int(64)[13] "temp"
                    (1933610 'move' _yieldedIndex[1933608] _yieldedIndex[1933596])
                    {
                      const-val i[1933614]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1933616 'move' i[1933614] _yieldedIndex[1933608])
                      {
                        ref call_tmp[1933620]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1933622]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                        (1933624 'move' _this_tmp_[1933622](1933627 call errorsArray[814076] this[169716]))
                        val coerce_tmp[1933629]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1933631 'move' coerce_tmp[1933629](1933633 'deref' _this_tmp_[1933622]))
                        (1933635 'move' call_tmp[1933620](1933638 call this[1235772] coerce_tmp[1933629] i[1933614]))
                        (1933642 call clear[1236066] call_tmp[1933620])
                      }
                      label _continueLabel[1933644]
                    }
                  }
                }
                {
                  const-val low[1933523]:int(64)[13] "temp"
                  (1933525 'move' low[1933523](1933527 '.v' _iterator[1933432] F0_low[1982870]))
                  (1933530 '=' i[1933458] low[1933523])
                }
                {
                  const-val high[1933534]:int(64)[13] "temp"
                  (1933536 'move' high[1933534](1933538 '.v' _iterator[1933432] F1_high[1982874]))
                  (1933541 '<=' i[1933458] high[1933534])
                }
                {
                  val call_tmp[1933545]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1933547 '+=' i[1933458] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1933584]
            }
            (1933587 call _freeIterator[1103493] _iterator[1933432])
            (1933590 call chpl__autoDestroy[1508492] tmp[1933284])
            label _endchpl_direct_counted_range_iter_helper[1933592]
          }
          (1875037 call _freeIterator[1103743] _iterator[1874994])
          label _endchpl_direct_counted_range_iter[1875039]
        }
        label _breakLabel[168859]
        (1815351 call _freeIterator[1103993] _iterator[168854])
      }
      ref call_tmp[679865]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "maybe param" "temp"
      (679868 'move' call_tmp[679865](388642 call errorsArray[814076] this[169716]))
      val coerce_tmp[1237187]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237191 'move' coerce_tmp[1237187](1237189 'deref' call_tmp[679865]))
      const-val coerce_tmp[1237193]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237199 'move' coerce_tmp[1237193](1237195 'cast' c_void_ptr[149] coerce_tmp[1237187]))
      (168897 call c_free[207907] coerce_tmp[1237193])
    }
    label _enddeinit[1788011]
    val _parent_destructor_tmp_[1788006]:Error[167984] "temp"
    (1788013 'move' _parent_destructor_tmp_[1788006](1788007 'cast' Error[167984] this[169716]))
    (1788015 call deinit[811765] _parent_destructor_tmp_[1788006])
    (522199 return _void[55])
  }
  function TaskErrors[169702].these[168908](const in arg this[169720]:TaskErrors[169702], ref arg _retArg[1804488]:_ref(_ir_these_TaskErrors)[1238112]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1973039]:_ir_these_TaskErrors[1238001] "temp"
    (1973041 '.=' _ir[1973039] F0_this[1972666] this[169720])
    (1973045 '=' _retArg[1804488] _ir[1973039])
    (1973048 return _void[55])
  }
  type _ic_these_TaskErrors[1237995] val super[1237996]:object[22] "super class" val more[1237998]:int(64)[13] const-val F0_this[1972664]:TaskErrors[169702] val F1__iterator[1972668]:_ic_chpl_direct_counted_range_iter[1103809] val F2__iterator[1972670]:_ic_chpl_direct_counted_range_iter_helper[1103559] const F3_tmp[1972672]:2*int(64)[1040075] val F4__iterator[1972674]:_ic_chpl_direct_param_stride_range_iter[1103305] val F5_i[1972676]:int(64)[13] ref value[1972678]:_ref(owned Error?)[966441]
  type _ir_these_TaskErrors[1238001] const-val F0_this[1972666]:TaskErrors[169702]
  function _getIterator[1238010](const  ref arg ir[1238012]:_ir_these_TaskErrors[1238001]) : _ic_these_TaskErrors[1237995] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1238119]:_ic_these_TaskErrors[1237995] "dead after last mention" "RVV" "temp"
    val _ic_[1238002]:_ic_these_TaskErrors[1237995] "dead after last mention" "temp"
    const-val call_tmp[1238126]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238129 'move' call_tmp[1238126](1238141 'sizeof_bundle' _ic_these_TaskErrors[1237995]))
    const-val cast_tmp[1238144]:c_void_ptr[149] "dead after last mention" "temp"
    (1238146 'move' cast_tmp[1238144](1238007 call chpl_here_alloc[187788] call_tmp[1238126] 40))
    (1238015 'move' _ic_[1238002](1238148 'cast' _ic_these_TaskErrors[1237995] cast_tmp[1238144]))
    (1238017 'setcid' _ic_[1238002])
    (1238124 'move' ret[1238119] _ic_[1238002])
    (1973051 '.=' ret[1238119] more[1237998] 1)
    const-val tmp[1973055]:TaskErrors[169702] "temp"
    (1973060 'move' tmp[1973055](1973056 '.v' ir[1238012] F0_this[1972666]))
    (1973062 '.=' ret[1238119] F0_this[1972664] tmp[1973055])
    (1238121 return ret[1238119])
  }
  function TaskErrors[169702].message[169077](const in arg this[169728]:TaskErrors[169702], ref arg _retArg[1814794]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522227]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544645 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1744530 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1744535 call init[30763] maxMsg[169092])
    val first[169099]:Error[167984] "dead at end of block" "insert auto destroy"
    (1744543 'move' first[169099](1744541 'cast' Error[167984] nil[44]))
    val last[169106]:Error[167984] "dead at end of block" "insert auto destroy"
    (1744548 'move' last[169106](1744546 'cast' Error[167984] nil[44]))
    {
      ref _indexOfInterest[169221]:_ref(owned Error?)[966441] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169222]:_ic_these_TaskErrors[1237995] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[679944]:_ir_these_TaskErrors[1238001] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1804464]:_ir_these_TaskErrors[1238001] "temp"
      (169113 call these[168908] this[169728] ret_tmp[1804464])
      (1804467 'move' call_tmp[679944] ret_tmp[1804464])
      (169231 'move' _iterator[169222](169229 call _getIterator[1238010] call_tmp[679944]))
      {
        val ret[1875264]:_ir_these_TaskErrors[1238001] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1875266]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1875268]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1875270]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
        const-val this[1875687]:TaskErrors[169702] "temp"
        (1875692 'move' this[1875687](1875689 '.v' _iterator[169222] F0_this[1972664]))
        (1875272 'move' call_tmp[1875270](1875275 call nErrors[814050] this[1875687]))
        const-val call_tmp[1875277]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1875279]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1875281 'move' coerce_tmp[1875279](1875283 'deref' call_tmp[1875270]))
        const-val ret_tmp[1875285]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
        (1875288 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1875279] ret_tmp[1875285])
        (1875292 'move' call_tmp[1875277] ret_tmp[1875285])
        (1875295 'move' _iterator[1875268](1875298 call _getIterator[1103824] call_tmp[1875277]))
        {
          val ret[1875301]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1875303]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1875305]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1875307]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1875309]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
          const-val low[1875311]:int(64)[13] "temp"
          (1875313 'move' low[1875311](1875315 '.v' _iterator[1875268] F0_low[1976900]))
          const-val count[1875318]:int(64)[13] "temp"
          (1875320 'move' count[1875318](1875322 '.v' _iterator[1875268] F1_count[1976904]))
          (1875326 call chpl_direct_counted_range_iter_helper[1102117] low[1875311] count[1875318] ret_tmp[1875309])
          (1875330 'move' call_tmp[1875307] ret_tmp[1875309])
          (1875333 'move' _iterator[1875305](1875336 call _getIterator[1103574] call_tmp[1875307]))
          {
            val ret[1934230]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
            val call_tmp[1934232]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1934234]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1934236]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1934238]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1934914]:int(64)[13] "temp"
            (1934919 'move' count[1934914](1934916 '.v' _iterator[1875305] F1_count[1981376]))
            (1934240 'move' call_tmp[1934238](1934243 call <[948417] count[1934914]))
            (1934245 'move' tmp[1934236] call_tmp[1934238])
            (1934248 'move' tmp[1934234] call_tmp[1934238])
            const-val call_tmp[1934251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1934253 'move' call_tmp[1934251] call_tmp[1934238])
            if call_tmp[1934238]
            {
              (1934259 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1934262]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1934264]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1934266]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1934268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1934921]:int(64)[13] "temp"
            (1934926 'move' count[1934921](1934923 '.v' _iterator[1875305] F1_count[1981376]))
            (1934270 'move' call_tmp[1934268](1934273 call ==[435666] count[1934921] 0))
            (1934276 'move' tmp[1934266] call_tmp[1934268])
            if call_tmp[1934268]
            {
              const-val tmp[1934281]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1934283]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1934285]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1934928]:int(64)[13] "temp"
              (1934933 'move' low[1934928](1934930 '.v' _iterator[1875305] F0_low[1981372]))
              (1934287 'move' call_tmp[1934285](1934290 call _cast[956053] low[1934928]))
              const-val call_tmp[1934292]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1934294]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1934296 'move' coerce_tmp[1934294](1934298 'cast' uint(64)[115] 1))
              (1934301 'move' call_tmp[1934292](1934304 call -[962212] call_tmp[1934285]))
              const-val call_tmp[1934306]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1934308 'move' call_tmp[1934306](1934311 call _cast[953562] call_tmp[1934292]))
              const-val ret_tmp[1934313]:2*int(64)[1040075] "temp"
              const-val low[1934935]:int(64)[13] "temp"
              (1934940 'move' low[1934935](1934937 '.v' _iterator[1875305] F0_low[1981372]))
              (1934316 call _build_tuple[1040033] low[1934935] call_tmp[1934306] ret_tmp[1934313])
              (1934320 'move' tmp[1934281] ret_tmp[1934313])
              (1934323 'move' tmp[1934264] tmp[1934281])
            }
            {
              const-val tmp[1934327]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1934329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1934331]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1934942]:int(64)[13] "temp"
              (1934947 'move' count[1934942](1934944 '.v' _iterator[1875305] F1_count[1981376]))
              (1934333 'move' call_tmp[1934331] count[1934942])
              const-val call_tmp[1934336]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1934949]:int(64)[13] "temp"
              (1934954 'move' count[1934949](1934951 '.v' _iterator[1875305] F1_count[1981376]))
              (1934338 'move' call_tmp[1934336](1934341 call -[962245] count[1934949]))
              const-val call_tmp[1934343]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1934956]:int(64)[13] "temp"
              (1934961 'move' low[1934956](1934958 '.v' _iterator[1875305] F0_low[1981372]))
              (1934345 'move' call_tmp[1934343](1934348 call +[439674] low[1934956] call_tmp[1934336]))
              const-val ret_tmp[1934351]:2*int(64)[1040075] "temp"
              const-val low[1934963]:int(64)[13] "temp"
              (1934968 'move' low[1934963](1934965 '.v' _iterator[1875305] F0_low[1981372]))
              (1934354 call _build_tuple[1040033] low[1934963] call_tmp[1934343] ret_tmp[1934351])
              (1934358 'move' tmp[1934327] ret_tmp[1934351])
              (1934361 'move' tmp[1934264] tmp[1934327])
            }
            (1934365 '=' tmp[1934262] tmp[1934264])
            (1934368 'noop')
            1
            ref call_tmp[1934370]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1934372 'move' call_tmp[1934370](1934374 '.' tmp[1934262] x0[1040071]))
            const-val start[1934377]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1934379]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1934381 'move' coerce_tmp[1934379](1934383 'deref' call_tmp[1934370]))
            (1934385 '=' start[1934377] coerce_tmp[1934379])
            (1934388 'noop')
            ref call_tmp[1934389]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1934391 'move' call_tmp[1934389](1934393 '.' tmp[1934262] x1[1040073]))
            const-val end[1934396]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1934398]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1934400 'move' coerce_tmp[1934398](1934402 'deref' call_tmp[1934389]))
            (1934404 '=' end[1934396] coerce_tmp[1934398])
            (1934407 'noop')
            val _indexOfInterest[1934408]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1934410]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1934412]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1934414]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
            (1934417 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1934379] coerce_tmp[1934398] ret_tmp[1934414])
            (1934421 'move' call_tmp[1934412] ret_tmp[1934414])
            (1934424 'move' _iterator[1934410](1934427 call _getIterator[1103320] call_tmp[1934412]))
            {
              val ret[1934430]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
              val call_tmp[1934432]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1934435 call chpl_range_check_stride[1102863])
              val i[1934436]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1934438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1934440 'move' i[1934436] 0)
              val call_tmp[1934443]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1934445]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1934447]:int(64)[13] "temp"
              (1934449 'move' low[1934447](1934451 '.v' _iterator[1934410] F0_low[1982870]))
              (1934454 'move' default_arg_first[1934445](1934457 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1934447]))
              const-val default_arg_last[1934459]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1934461]:int(64)[13] "temp"
              (1934463 'move' high[1934461](1934465 '.v' _iterator[1934410] F1_high[1982874]))
              (1934468 'move' default_arg_last[1934459](1934471 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1934461]))
              const-val _return_tmp_[1934473]:bool[10] "dead after last mention" "temp"
              const-val low[1934475]:int(64)[13] "temp"
              (1934477 'move' low[1934475](1934479 '.v' _iterator[1934410] F0_low[1982870]))
              const-val high[1934482]:int(64)[13] "temp"
              (1934484 'move' high[1934482](1934486 '.v' _iterator[1934410] F1_high[1982874]))
              (1934489 'move' _return_tmp_[1934473](1934492 call chpl_checkIfRangeIterWillOverflow[1096095] low[1934475] high[1934482] 1 default_arg_first[1934445] default_arg_last[1934459] 1))
              CForLoop[1934499] hazard
              {
                const-val yret[1934528]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1934530 'move' yret[1934528] i[1934436])
                const-val _yieldedIndex[1934533]:int(64)[13] "temp"
                (1934535 'move' _yieldedIndex[1934533] i[1934436])
                {
                  const-val i[1934539]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1934541 'move' i[1934539] _yieldedIndex[1934533])
                  const-val yret[1934544]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1934546 'move' yret[1934544] _yieldedIndex[1934533])
                  const-val _yieldedIndex[1934574]:int(64)[13] "temp"
                  (1934912 'move' _yieldedIndex[1934574] _yieldedIndex[1934533])
                  {
                    const-val i[1934576]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1934578 'move' i[1934576] _yieldedIndex[1934574])
                    const-val yret[1934581]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1934583 'move' yret[1934581] _yieldedIndex[1934574])
                    const-val _yieldedIndex[1934586]:int(64)[13] "temp"
                    (1934588 'move' _yieldedIndex[1934586] _yieldedIndex[1934574])
                    {
                      const-val i[1934592]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1934594 'move' i[1934592] _yieldedIndex[1934586])
                      ref call_tmp[1934597]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1934599]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                      const-val this[1934601]:TaskErrors[169702] "temp"
                      (1934603 'move' this[1934601](1934605 '.v' _iterator[169222] F0_this[1972664]))
                      (1934608 'move' _this_tmp_[1934599](1934611 call errorsArray[814076] this[1934601]))
                      val coerce_tmp[1934613]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1934615 'move' coerce_tmp[1934613](1934617 'deref' _this_tmp_[1934599]))
                      (1934619 'move' call_tmp[1934597](1934622 call this[1235772] coerce_tmp[1934613] _yieldedIndex[1934586]))
                      const-val call_tmp[1934625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[1934627]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1934629 'move' coerce_tmp[1934627](1934632 call borrow[1235847] call_tmp[1934597]))
                      val coerce_tmp[1934634]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1934636 'move' coerce_tmp[1934634](1934638 'cast' object[22] coerce_tmp[1934627]))
                      (1934641 'move' call_tmp[1934625](1934644 call !=[1485] coerce_tmp[1934634] nil[44]))
                      const-val call_tmp[1934647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1934649 'move' call_tmp[1934647] call_tmp[1934625])
                      if call_tmp[1934625]
                      {
                        ref yret[1934654]:_ref(owned Error?)[966441] "dead after last mention" "YVV" "temp"
                        ref call_tmp[1934656]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1934658]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                        const-val this[1934660]:TaskErrors[169702] "temp"
                        (1934662 'move' this[1934660](1934664 '.v' _iterator[169222] F0_this[1972664]))
                        (1934667 'move' _this_tmp_[1934658](1934670 call errorsArray[814076] this[1934660]))
                        val coerce_tmp[1934672]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1934674 'move' coerce_tmp[1934672](1934676 'deref' _this_tmp_[1934658]))
                        (1934678 'move' call_tmp[1934656](1934681 call this[1235772] coerce_tmp[1934672] i[1934592]))
                        ref _yieldedIndex[1934684]:_ref(owned Error?)[966441] "temp"
                        (1934686 'move' _yieldedIndex[1934684] call_tmp[1934656])
                        {
                          ref err[1934690]:_ref(owned Error?)[966441] "index var" "insert auto destroy"
                          (1934692 'move' err[1934690] _yieldedIndex[1934684])
                          {
                            val call_tmp[1934696]:Error[167984] "dead at end of block" "maybe param" "temp"
                            (1934698 'move' call_tmp[1934696](1934701 call postfix![1743898] err[1934690]))
                            val e[1934703]:Error[167984] "dead at end of block" "insert auto destroy"
                            (1934705 'move' e[1934703](1934708 call chpl__initCopy[965636] call_tmp[1934696]))
                            const-val tmp[1934710]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1934712 'move' tmp[1934710](1934715 call ==[38823] minMsg[169087] ""))
                            val tmp[1934718]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1934720]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1934722]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1934724 'move' call_tmp[1934722] tmp[1934710])
                            (1934727 'move' tmp[1934720] call_tmp[1934722])
                            if tmp[1934720]
                            {
                              (1934732 'move' tmp[1934718] 1)
                            }
                            {
                              const-val tmp[1934736]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1934738]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1934740]:int(32)[95] "temp"
                              (1934742 'move' _virtual_method_tmp_[1934740](1934744 'getcid' e[1934703]))
                              val ret_tmp[1934746]:string[26] "temp"
                              (1934748 'virtual method call' message[167975] _virtual_method_tmp_[1934740] e[1934703] ret_tmp[1934746])
                              (1934753 'move' call_tmp[1934738] ret_tmp[1934746])
                              const-val call_tmp[1934756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1934758 'move' call_tmp[1934756](1934761 call <[38873] call_tmp[1934738] minMsg[169087]))
                              (1934764 'move' tmp[1934736] call_tmp[1934756])
                              (1934767 'move' tmp[1934718] tmp[1934736])
                              (1934771 call chpl__autoDestroy[1435320] call_tmp[1934738])
                            }
                            const-val call_tmp[1934774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1934776 'move' call_tmp[1934774] tmp[1934718])
                            if call_tmp[1934774]
                            {
                              const-val call_tmp[1934781]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1934783]:int(32)[95] "temp"
                              (1934785 'move' _virtual_method_tmp_[1934783](1934787 'getcid' e[1934703]))
                              val ret_tmp[1934789]:string[26] "temp"
                              (1934791 'virtual method call' message[167975] _virtual_method_tmp_[1934783] e[1934703] ret_tmp[1934789])
                              (1934796 'move' call_tmp[1934781] ret_tmp[1934789])
                              (1934800 call =[38272] minMsg[169087] call_tmp[1934781])
                              (1934804 call chpl__autoDestroy[1435320] call_tmp[1934781])
                            }
                            const-val tmp[1934807]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1934809 'move' tmp[1934807](1934812 call ==[38823] maxMsg[169092] ""))
                            val tmp[1934815]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1934817]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1934819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1934821 'move' call_tmp[1934819] tmp[1934807])
                            (1934824 'move' tmp[1934817] call_tmp[1934819])
                            if tmp[1934817]
                            {
                              (1934829 'move' tmp[1934815] 1)
                            }
                            {
                              const-val tmp[1934833]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1934835]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1934837]:int(32)[95] "temp"
                              (1934839 'move' _virtual_method_tmp_[1934837](1934841 'getcid' e[1934703]))
                              val ret_tmp[1934843]:string[26] "temp"
                              (1934845 'virtual method call' message[167975] _virtual_method_tmp_[1934837] e[1934703] ret_tmp[1934843])
                              (1934850 'move' call_tmp[1934835] ret_tmp[1934843])
                              const-val call_tmp[1934853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1934855 'move' call_tmp[1934853](1934858 call >[38897] call_tmp[1934835] maxMsg[169092]))
                              (1934861 'move' tmp[1934833] call_tmp[1934853])
                              (1934864 'move' tmp[1934815] tmp[1934833])
                              (1934868 call chpl__autoDestroy[1435320] call_tmp[1934835])
                            }
                            const-val call_tmp[1934871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1934873 'move' call_tmp[1934871] tmp[1934815])
                            if call_tmp[1934871]
                            {
                              const-val call_tmp[1934878]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1934880]:int(32)[95] "temp"
                              (1934882 'move' _virtual_method_tmp_[1934880](1934884 'getcid' e[1934703]))
                              val ret_tmp[1934886]:string[26] "temp"
                              (1934888 'virtual method call' message[167975] _virtual_method_tmp_[1934880] e[1934703] ret_tmp[1934886])
                              (1934893 'move' call_tmp[1934878] ret_tmp[1934886])
                              (1934897 call =[38272] maxMsg[169092] call_tmp[1934878])
                              (1934901 call chpl__autoDestroy[1435320] call_tmp[1934878])
                            }
                            (1934905 call +=[451353] n[169081] 1)
                          }
                          label _continueLabel[1934908]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[1934501]:int(64)[13] "temp"
                  (1934503 'move' low[1934501](1934505 '.v' _iterator[1934410] F0_low[1982870]))
                  (1934508 '=' i[1934436] low[1934501])
                }
                {
                  const-val high[1934512]:int(64)[13] "temp"
                  (1934514 'move' high[1934512](1934516 '.v' _iterator[1934410] F1_high[1982874]))
                  (1934519 '<=' i[1934436] high[1934512])
                }
                {
                  val call_tmp[1934523]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1934525 '+=' i[1934436] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1934562]
            }
            (1934565 call _freeIterator[1103493] _iterator[1934410])
            (1934568 call chpl__autoDestroy[1508492] tmp[1934262])
            label _endchpl_direct_counted_range_iter_helper[1934570]
          }
          (1875453 call _freeIterator[1103743] _iterator[1875305])
          label _endchpl_direct_counted_range_iter[1875455]
        }
        (1875458 call _freeIterator[1103993] _iterator[1875268])
        label _endthese[1875460]
      }
      label _breakLabel[169227]
      (1815381 call _freeIterator[1238252] _iterator[169222])
    }
    {
      {
        ref _indexOfInterest[169300]:_ref(owned Error?)[966441] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169301]:_ic_these_TaskErrors[1237995] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[680024]:_ir_these_TaskErrors[1238001] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1804470]:_ir_these_TaskErrors[1238001] "temp"
        (169258 call these[168908] this[169728] ret_tmp[1804470])
        (1804473 'move' call_tmp[680024] ret_tmp[1804470])
        (169310 'move' _iterator[169301](169308 call _getIterator[1238010] call_tmp[680024]))
        {
          val ret[1875709]:_ir_these_TaskErrors[1238001] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1875711]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1875713]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1875715]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
          const-val this[1876012]:TaskErrors[169702] "temp"
          (1876017 'move' this[1876012](1876014 '.v' _iterator[169301] F0_this[1972664]))
          (1875717 'move' call_tmp[1875715](1875720 call nErrors[814050] this[1876012]))
          const-val call_tmp[1875722]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1875724]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1875726 'move' coerce_tmp[1875724](1875728 'deref' call_tmp[1875715]))
          const-val ret_tmp[1875730]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
          (1875733 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1875724] ret_tmp[1875730])
          (1875737 'move' call_tmp[1875722] ret_tmp[1875730])
          (1875740 'move' _iterator[1875713](1875743 call _getIterator[1103824] call_tmp[1875722]))
          {
            val ret[1875746]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1875748]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1875750]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1875752]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1875754]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
            const-val low[1875756]:int(64)[13] "temp"
            (1875758 'move' low[1875756](1875760 '.v' _iterator[1875713] F0_low[1976900]))
            const-val count[1875763]:int(64)[13] "temp"
            (1875765 'move' count[1875763](1875767 '.v' _iterator[1875713] F1_count[1976904]))
            (1875771 call chpl_direct_counted_range_iter_helper[1102117] low[1875756] count[1875763] ret_tmp[1875754])
            (1875775 'move' call_tmp[1875752] ret_tmp[1875754])
            (1875778 'move' _iterator[1875750](1875781 call _getIterator[1103574] call_tmp[1875752]))
            {
              val ret[1934971]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
              val call_tmp[1934973]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[1934975]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[1934977]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[1934979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1935535]:int(64)[13] "temp"
              (1935540 'move' count[1935535](1935537 '.v' _iterator[1875750] F1_count[1981376]))
              (1934981 'move' call_tmp[1934979](1934984 call <[948417] count[1935535]))
              (1934986 'move' tmp[1934977] call_tmp[1934979])
              (1934989 'move' tmp[1934975] call_tmp[1934979])
              const-val call_tmp[1934992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1934994 'move' call_tmp[1934992] call_tmp[1934979])
              if call_tmp[1934979]
              {
                (1935000 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
              }
              const-val tmp[1935003]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[1935005]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[1935007]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1935009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1935542]:int(64)[13] "temp"
              (1935547 'move' count[1935542](1935544 '.v' _iterator[1875750] F1_count[1981376]))
              (1935011 'move' call_tmp[1935009](1935014 call ==[435666] count[1935542] 0))
              (1935017 'move' tmp[1935007] call_tmp[1935009])
              if call_tmp[1935009]
              {
                const-val tmp[1935022]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1935024]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1935026]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1935549]:int(64)[13] "temp"
                (1935554 'move' low[1935549](1935551 '.v' _iterator[1875750] F0_low[1981372]))
                (1935028 'move' call_tmp[1935026](1935031 call _cast[956053] low[1935549]))
                const-val call_tmp[1935033]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1935035]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1935037 'move' coerce_tmp[1935035](1935039 'cast' uint(64)[115] 1))
                (1935042 'move' call_tmp[1935033](1935045 call -[962212] call_tmp[1935026]))
                const-val call_tmp[1935047]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1935049 'move' call_tmp[1935047](1935052 call _cast[953562] call_tmp[1935033]))
                const-val ret_tmp[1935054]:2*int(64)[1040075] "temp"
                const-val low[1935556]:int(64)[13] "temp"
                (1935561 'move' low[1935556](1935558 '.v' _iterator[1875750] F0_low[1981372]))
                (1935057 call _build_tuple[1040033] low[1935556] call_tmp[1935047] ret_tmp[1935054])
                (1935061 'move' tmp[1935022] ret_tmp[1935054])
                (1935064 'move' tmp[1935005] tmp[1935022])
              }
              {
                const-val tmp[1935068]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1935070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1935072]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1935563]:int(64)[13] "temp"
                (1935568 'move' count[1935563](1935565 '.v' _iterator[1875750] F1_count[1981376]))
                (1935074 'move' call_tmp[1935072] count[1935563])
                const-val call_tmp[1935077]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1935570]:int(64)[13] "temp"
                (1935575 'move' count[1935570](1935572 '.v' _iterator[1875750] F1_count[1981376]))
                (1935079 'move' call_tmp[1935077](1935082 call -[962245] count[1935570]))
                const-val call_tmp[1935084]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1935577]:int(64)[13] "temp"
                (1935582 'move' low[1935577](1935579 '.v' _iterator[1875750] F0_low[1981372]))
                (1935086 'move' call_tmp[1935084](1935089 call +[439674] low[1935577] call_tmp[1935077]))
                const-val ret_tmp[1935092]:2*int(64)[1040075] "temp"
                const-val low[1935584]:int(64)[13] "temp"
                (1935589 'move' low[1935584](1935586 '.v' _iterator[1875750] F0_low[1981372]))
                (1935095 call _build_tuple[1040033] low[1935584] call_tmp[1935084] ret_tmp[1935092])
                (1935099 'move' tmp[1935068] ret_tmp[1935092])
                (1935102 'move' tmp[1935005] tmp[1935068])
              }
              (1935106 '=' tmp[1935003] tmp[1935005])
              (1935109 'noop')
              1
              ref call_tmp[1935111]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1935113 'move' call_tmp[1935111](1935115 '.' tmp[1935003] x0[1040071]))
              const-val start[1935118]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1935120]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1935122 'move' coerce_tmp[1935120](1935124 'deref' call_tmp[1935111]))
              (1935126 '=' start[1935118] coerce_tmp[1935120])
              (1935129 'noop')
              ref call_tmp[1935130]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1935132 'move' call_tmp[1935130](1935134 '.' tmp[1935003] x1[1040073]))
              const-val end[1935137]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1935139]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1935141 'move' coerce_tmp[1935139](1935143 'deref' call_tmp[1935130]))
              (1935145 '=' end[1935137] coerce_tmp[1935139])
              (1935148 'noop')
              val _indexOfInterest[1935149]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1935151]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1935153]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1935155]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
              (1935158 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1935120] coerce_tmp[1935139] ret_tmp[1935155])
              (1935162 'move' call_tmp[1935153] ret_tmp[1935155])
              (1935165 'move' _iterator[1935151](1935168 call _getIterator[1103320] call_tmp[1935153]))
              {
                val ret[1935171]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                val call_tmp[1935173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1935176 call chpl_range_check_stride[1102863])
                val i[1935177]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1935179]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1935181 'move' i[1935177] 0)
                val call_tmp[1935184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1935186]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1935188]:int(64)[13] "temp"
                (1935190 'move' low[1935188](1935192 '.v' _iterator[1935151] F0_low[1982870]))
                (1935195 'move' default_arg_first[1935186](1935198 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1935188]))
                const-val default_arg_last[1935200]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1935202]:int(64)[13] "temp"
                (1935204 'move' high[1935202](1935206 '.v' _iterator[1935151] F1_high[1982874]))
                (1935209 'move' default_arg_last[1935200](1935212 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1935202]))
                const-val _return_tmp_[1935214]:bool[10] "dead after last mention" "temp"
                const-val low[1935216]:int(64)[13] "temp"
                (1935218 'move' low[1935216](1935220 '.v' _iterator[1935151] F0_low[1982870]))
                const-val high[1935223]:int(64)[13] "temp"
                (1935225 'move' high[1935223](1935227 '.v' _iterator[1935151] F1_high[1982874]))
                (1935230 'move' _return_tmp_[1935214](1935233 call chpl_checkIfRangeIterWillOverflow[1096095] low[1935216] high[1935223] 1 default_arg_first[1935186] default_arg_last[1935200] 1))
                CForLoop[1935240] hazard
                {
                  const-val yret[1935269]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1935271 'move' yret[1935269] i[1935177])
                  const-val _yieldedIndex[1935274]:int(64)[13] "temp"
                  (1935276 'move' _yieldedIndex[1935274] i[1935177])
                  {
                    const-val i[1935280]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1935282 'move' i[1935280] _yieldedIndex[1935274])
                    const-val yret[1935285]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1935287 'move' yret[1935285] _yieldedIndex[1935274])
                    const-val _yieldedIndex[1935315]:int(64)[13] "temp"
                    (1935533 'move' _yieldedIndex[1935315] _yieldedIndex[1935274])
                    {
                      const-val i[1935317]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1935319 'move' i[1935317] _yieldedIndex[1935315])
                      const-val yret[1935322]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1935324 'move' yret[1935322] _yieldedIndex[1935315])
                      const-val _yieldedIndex[1935327]:int(64)[13] "temp"
                      (1935329 'move' _yieldedIndex[1935327] _yieldedIndex[1935315])
                      {
                        const-val i[1935333]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1935335 'move' i[1935333] _yieldedIndex[1935327])
                        ref call_tmp[1935338]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1935340]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                        const-val this[1935342]:TaskErrors[169702] "temp"
                        (1935344 'move' this[1935342](1935346 '.v' _iterator[169301] F0_this[1972664]))
                        (1935349 'move' _this_tmp_[1935340](1935352 call errorsArray[814076] this[1935342]))
                        val coerce_tmp[1935354]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1935356 'move' coerce_tmp[1935354](1935358 'deref' _this_tmp_[1935340]))
                        (1935360 'move' call_tmp[1935338](1935363 call this[1235772] coerce_tmp[1935354] _yieldedIndex[1935327]))
                        const-val call_tmp[1935366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[1935368]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1935370 'move' coerce_tmp[1935368](1935373 call borrow[1235847] call_tmp[1935338]))
                        val coerce_tmp[1935375]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1935377 'move' coerce_tmp[1935375](1935379 'cast' object[22] coerce_tmp[1935368]))
                        (1935382 'move' call_tmp[1935366](1935385 call !=[1485] coerce_tmp[1935375] nil[44]))
                        const-val call_tmp[1935388]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1935390 'move' call_tmp[1935388] call_tmp[1935366])
                        if call_tmp[1935366]
                        {
                          ref yret[1935395]:_ref(owned Error?)[966441] "dead after last mention" "YVV" "temp"
                          ref call_tmp[1935397]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1935399]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                          const-val this[1935401]:TaskErrors[169702] "temp"
                          (1935403 'move' this[1935401](1935405 '.v' _iterator[169301] F0_this[1972664]))
                          (1935408 'move' _this_tmp_[1935399](1935411 call errorsArray[814076] this[1935401]))
                          val coerce_tmp[1935413]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1935415 'move' coerce_tmp[1935413](1935417 'deref' _this_tmp_[1935399]))
                          (1935419 'move' call_tmp[1935397](1935422 call this[1235772] coerce_tmp[1935413] i[1935333]))
                          ref _yieldedIndex[1935425]:_ref(owned Error?)[966441] "temp"
                          (1935427 'move' _yieldedIndex[1935425] call_tmp[1935397])
                          {
                            ref err[1935431]:_ref(owned Error?)[966441] "index var" "insert auto destroy"
                            (1935433 'move' err[1935431] _yieldedIndex[1935425])
                            {
                              val call_tmp[1935437]:Error[167984] "dead at end of block" "maybe param" "temp"
                              (1935439 'move' call_tmp[1935437](1935442 call postfix![1743898] err[1935431]))
                              val e[1935444]:Error[167984] "dead at end of block" "insert auto destroy"
                              (1935446 'move' e[1935444](1935449 call chpl__initCopy[965636] call_tmp[1935437]))
                              const-val call_tmp[1935451]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1935453]:int(32)[95] "temp"
                              (1935455 'move' _virtual_method_tmp_[1935453](1935457 'getcid' e[1935444]))
                              val ret_tmp[1935459]:string[26] "temp"
                              (1935461 'virtual method call' message[167975] _virtual_method_tmp_[1935453] e[1935444] ret_tmp[1935459])
                              (1935466 'move' call_tmp[1935451] ret_tmp[1935459])
                              const-val call_tmp[1935469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1935471 'move' call_tmp[1935469](1935474 call ==[38823] call_tmp[1935451] minMsg[169087]))
                              const-val call_tmp[1935477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1935479 'move' call_tmp[1935477] call_tmp[1935469])
                              if call_tmp[1935477]
                              {
                                const-val call_tmp[1935484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[1935486]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1935488 'move' coerce_tmp[1935486](1935490 'cast' object[22] first[169099]))
                                (1935493 'move' call_tmp[1935484](1935496 call ==[1146] coerce_tmp[1935486] nil[44]))
                                const-val call_tmp[1935499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1935501 'move' call_tmp[1935499] call_tmp[1935484])
                                if call_tmp[1935499]
                                {
                                  val coerce_tmp[1935506]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1935508 'move' coerce_tmp[1935506] e[1935444])
                                  (1935512 call =[1232437] first[169099] coerce_tmp[1935506])
                                }
                                val coerce_tmp[1935516]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1935518 'move' coerce_tmp[1935516] e[1935444])
                                (1935522 call =[1232437] last[169106] coerce_tmp[1935516])
                              }
                              (1935527 call chpl__autoDestroy[1435320] call_tmp[1935451])
                            }
                            label _continueLabel[1935529]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[1935242]:int(64)[13] "temp"
                    (1935244 'move' low[1935242](1935246 '.v' _iterator[1935151] F0_low[1982870]))
                    (1935249 '=' i[1935177] low[1935242])
                  }
                  {
                    const-val high[1935253]:int(64)[13] "temp"
                    (1935255 'move' high[1935253](1935257 '.v' _iterator[1935151] F1_high[1982874]))
                    (1935260 '<=' i[1935177] high[1935253])
                  }
                  {
                    val call_tmp[1935264]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1935266 '+=' i[1935177] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1935303]
              }
              (1935306 call _freeIterator[1103493] _iterator[1935151])
              (1935309 call chpl__autoDestroy[1508492] tmp[1935003])
              label _endchpl_direct_counted_range_iter_helper[1935311]
            }
            (1875898 call _freeIterator[1103743] _iterator[1875750])
            label _endchpl_direct_counted_range_iter[1875900]
          }
          (1875903 call _freeIterator[1103993] _iterator[1875713])
          label _endthese[1875905]
        }
        label _breakLabel[169306]
        (1815390 call _freeIterator[1238252] _iterator[169301])
      }
      const-val call_tmp[680061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680064 'move' call_tmp[680061](169337 call !=[38847] minMsg[169087] maxMsg[169092]))
      const-val call_tmp[680066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680069 'move' call_tmp[680066] call_tmp[680061])
      if call_tmp[680066]
      {
        {
          ref _indexOfInterest[169370]:_ref(owned Error?)[966441] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169371]:_ic_these_TaskErrors[1237995] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[680073]:_ir_these_TaskErrors[1238001] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1804476]:_ir_these_TaskErrors[1238001] "temp"
          (169342 call these[168908] this[169728] ret_tmp[1804476])
          (1804479 'move' call_tmp[680073] ret_tmp[1804476])
          (169380 'move' _iterator[169371](169378 call _getIterator[1238010] call_tmp[680073]))
          {
            val ret[1876034]:_ir_these_TaskErrors[1238001] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1876036]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1876038]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1876040]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
            const-val this[1876305]:TaskErrors[169702] "temp"
            (1876310 'move' this[1876305](1876307 '.v' _iterator[169371] F0_this[1972664]))
            (1876042 'move' call_tmp[1876040](1876045 call nErrors[814050] this[1876305]))
            const-val call_tmp[1876047]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1876049]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1876051 'move' coerce_tmp[1876049](1876053 'deref' call_tmp[1876040]))
            const-val ret_tmp[1876055]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
            (1876058 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1876049] ret_tmp[1876055])
            (1876062 'move' call_tmp[1876047] ret_tmp[1876055])
            (1876065 'move' _iterator[1876038](1876068 call _getIterator[1103824] call_tmp[1876047]))
            {
              val ret[1876071]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1876073]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1876075]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1876077]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1876079]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
              const-val low[1876081]:int(64)[13] "temp"
              (1876083 'move' low[1876081](1876085 '.v' _iterator[1876038] F0_low[1976900]))
              const-val count[1876088]:int(64)[13] "temp"
              (1876090 'move' count[1876088](1876092 '.v' _iterator[1876038] F1_count[1976904]))
              (1876096 call chpl_direct_counted_range_iter_helper[1102117] low[1876081] count[1876088] ret_tmp[1876079])
              (1876100 'move' call_tmp[1876077] ret_tmp[1876079])
              (1876103 'move' _iterator[1876075](1876106 call _getIterator[1103574] call_tmp[1876077]))
              {
                val ret[1935592]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                val call_tmp[1935594]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1935596]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1935598]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1935600]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1936124]:int(64)[13] "temp"
                (1936129 'move' count[1936124](1936126 '.v' _iterator[1876075] F1_count[1981376]))
                (1935602 'move' call_tmp[1935600](1935605 call <[948417] count[1936124]))
                (1935607 'move' tmp[1935598] call_tmp[1935600])
                (1935610 'move' tmp[1935596] call_tmp[1935600])
                const-val call_tmp[1935613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1935615 'move' call_tmp[1935613] call_tmp[1935600])
                if call_tmp[1935600]
                {
                  (1935621 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1935624]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1935626]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1935628]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1935630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1936131]:int(64)[13] "temp"
                (1936136 'move' count[1936131](1936133 '.v' _iterator[1876075] F1_count[1981376]))
                (1935632 'move' call_tmp[1935630](1935635 call ==[435666] count[1936131] 0))
                (1935638 'move' tmp[1935628] call_tmp[1935630])
                if call_tmp[1935630]
                {
                  const-val tmp[1935643]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1935645]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1935647]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1936138]:int(64)[13] "temp"
                  (1936143 'move' low[1936138](1936140 '.v' _iterator[1876075] F0_low[1981372]))
                  (1935649 'move' call_tmp[1935647](1935652 call _cast[956053] low[1936138]))
                  const-val call_tmp[1935654]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1935656]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1935658 'move' coerce_tmp[1935656](1935660 'cast' uint(64)[115] 1))
                  (1935663 'move' call_tmp[1935654](1935666 call -[962212] call_tmp[1935647]))
                  const-val call_tmp[1935668]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1935670 'move' call_tmp[1935668](1935673 call _cast[953562] call_tmp[1935654]))
                  const-val ret_tmp[1935675]:2*int(64)[1040075] "temp"
                  const-val low[1936145]:int(64)[13] "temp"
                  (1936150 'move' low[1936145](1936147 '.v' _iterator[1876075] F0_low[1981372]))
                  (1935678 call _build_tuple[1040033] low[1936145] call_tmp[1935668] ret_tmp[1935675])
                  (1935682 'move' tmp[1935643] ret_tmp[1935675])
                  (1935685 'move' tmp[1935626] tmp[1935643])
                }
                {
                  const-val tmp[1935689]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1935691]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1935693]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1936152]:int(64)[13] "temp"
                  (1936157 'move' count[1936152](1936154 '.v' _iterator[1876075] F1_count[1981376]))
                  (1935695 'move' call_tmp[1935693] count[1936152])
                  const-val call_tmp[1935698]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1936159]:int(64)[13] "temp"
                  (1936164 'move' count[1936159](1936161 '.v' _iterator[1876075] F1_count[1981376]))
                  (1935700 'move' call_tmp[1935698](1935703 call -[962245] count[1936159]))
                  const-val call_tmp[1935705]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1936166]:int(64)[13] "temp"
                  (1936171 'move' low[1936166](1936168 '.v' _iterator[1876075] F0_low[1981372]))
                  (1935707 'move' call_tmp[1935705](1935710 call +[439674] low[1936166] call_tmp[1935698]))
                  const-val ret_tmp[1935713]:2*int(64)[1040075] "temp"
                  const-val low[1936173]:int(64)[13] "temp"
                  (1936178 'move' low[1936173](1936175 '.v' _iterator[1876075] F0_low[1981372]))
                  (1935716 call _build_tuple[1040033] low[1936173] call_tmp[1935705] ret_tmp[1935713])
                  (1935720 'move' tmp[1935689] ret_tmp[1935713])
                  (1935723 'move' tmp[1935626] tmp[1935689])
                }
                (1935727 '=' tmp[1935624] tmp[1935626])
                (1935730 'noop')
                1
                ref call_tmp[1935732]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1935734 'move' call_tmp[1935732](1935736 '.' tmp[1935624] x0[1040071]))
                const-val start[1935739]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1935741]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1935743 'move' coerce_tmp[1935741](1935745 'deref' call_tmp[1935732]))
                (1935747 '=' start[1935739] coerce_tmp[1935741])
                (1935750 'noop')
                ref call_tmp[1935751]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1935753 'move' call_tmp[1935751](1935755 '.' tmp[1935624] x1[1040073]))
                const-val end[1935758]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1935760]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1935762 'move' coerce_tmp[1935760](1935764 'deref' call_tmp[1935751]))
                (1935766 '=' end[1935758] coerce_tmp[1935760])
                (1935769 'noop')
                val _indexOfInterest[1935770]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1935772]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1935774]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1935776]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                (1935779 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1935741] coerce_tmp[1935760] ret_tmp[1935776])
                (1935783 'move' call_tmp[1935774] ret_tmp[1935776])
                (1935786 'move' _iterator[1935772](1935789 call _getIterator[1103320] call_tmp[1935774]))
                {
                  val ret[1935792]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                  val call_tmp[1935794]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1935797 call chpl_range_check_stride[1102863])
                  val i[1935798]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1935800]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1935802 'move' i[1935798] 0)
                  val call_tmp[1935805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1935807]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1935809]:int(64)[13] "temp"
                  (1935811 'move' low[1935809](1935813 '.v' _iterator[1935772] F0_low[1982870]))
                  (1935816 'move' default_arg_first[1935807](1935819 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1935809]))
                  const-val default_arg_last[1935821]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1935823]:int(64)[13] "temp"
                  (1935825 'move' high[1935823](1935827 '.v' _iterator[1935772] F1_high[1982874]))
                  (1935830 'move' default_arg_last[1935821](1935833 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1935823]))
                  const-val _return_tmp_[1935835]:bool[10] "dead after last mention" "temp"
                  const-val low[1935837]:int(64)[13] "temp"
                  (1935839 'move' low[1935837](1935841 '.v' _iterator[1935772] F0_low[1982870]))
                  const-val high[1935844]:int(64)[13] "temp"
                  (1935846 'move' high[1935844](1935848 '.v' _iterator[1935772] F1_high[1982874]))
                  (1935851 'move' _return_tmp_[1935835](1935854 call chpl_checkIfRangeIterWillOverflow[1096095] low[1935837] high[1935844] 1 default_arg_first[1935807] default_arg_last[1935821] 1))
                  CForLoop[1935861] hazard
                  {
                    const-val yret[1935890]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1935892 'move' yret[1935890] i[1935798])
                    const-val _yieldedIndex[1935895]:int(64)[13] "temp"
                    (1935897 'move' _yieldedIndex[1935895] i[1935798])
                    {
                      const-val i[1935901]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1935903 'move' i[1935901] _yieldedIndex[1935895])
                      const-val yret[1935906]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1935908 'move' yret[1935906] _yieldedIndex[1935895])
                      const-val _yieldedIndex[1935936]:int(64)[13] "temp"
                      (1936122 'move' _yieldedIndex[1935936] _yieldedIndex[1935895])
                      {
                        const-val i[1935938]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1935940 'move' i[1935938] _yieldedIndex[1935936])
                        const-val yret[1935943]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1935945 'move' yret[1935943] _yieldedIndex[1935936])
                        const-val _yieldedIndex[1935948]:int(64)[13] "temp"
                        (1935950 'move' _yieldedIndex[1935948] _yieldedIndex[1935936])
                        {
                          const-val i[1935954]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1935956 'move' i[1935954] _yieldedIndex[1935948])
                          ref call_tmp[1935959]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1935961]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                          const-val this[1935963]:TaskErrors[169702] "temp"
                          (1935965 'move' this[1935963](1935967 '.v' _iterator[169371] F0_this[1972664]))
                          (1935970 'move' _this_tmp_[1935961](1935973 call errorsArray[814076] this[1935963]))
                          val coerce_tmp[1935975]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1935977 'move' coerce_tmp[1935975](1935979 'deref' _this_tmp_[1935961]))
                          (1935981 'move' call_tmp[1935959](1935984 call this[1235772] coerce_tmp[1935975] _yieldedIndex[1935948]))
                          const-val call_tmp[1935987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[1935989]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1935991 'move' coerce_tmp[1935989](1935994 call borrow[1235847] call_tmp[1935959]))
                          val coerce_tmp[1935996]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1935998 'move' coerce_tmp[1935996](1936000 'cast' object[22] coerce_tmp[1935989]))
                          (1936003 'move' call_tmp[1935987](1936006 call !=[1485] coerce_tmp[1935996] nil[44]))
                          const-val call_tmp[1936009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1936011 'move' call_tmp[1936009] call_tmp[1935987])
                          if call_tmp[1935987]
                          {
                            ref yret[1936016]:_ref(owned Error?)[966441] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1936018]:_ref(owned Error?)[966441] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1936020]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "temp"
                            const-val this[1936022]:TaskErrors[169702] "temp"
                            (1936024 'move' this[1936022](1936026 '.v' _iterator[169371] F0_this[1972664]))
                            (1936029 'move' _this_tmp_[1936020](1936032 call errorsArray[814076] this[1936022]))
                            val coerce_tmp[1936034]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1936036 'move' coerce_tmp[1936034](1936038 'deref' _this_tmp_[1936020]))
                            (1936040 'move' call_tmp[1936018](1936043 call this[1235772] coerce_tmp[1936034] i[1935954]))
                            ref _yieldedIndex[1936046]:_ref(owned Error?)[966441] "temp"
                            (1936048 'move' _yieldedIndex[1936046] call_tmp[1936018])
                            {
                              ref err[1936052]:_ref(owned Error?)[966441] "index var" "insert auto destroy"
                              (1936054 'move' err[1936052] _yieldedIndex[1936046])
                              {
                                val call_tmp[1936058]:Error[167984] "dead at end of block" "maybe param" "temp"
                                (1936060 'move' call_tmp[1936058](1936063 call postfix![1743898] err[1936052]))
                                val e[1936065]:Error[167984] "dead at end of block" "insert auto destroy"
                                (1936067 'move' e[1936065](1936070 call chpl__initCopy[965636] call_tmp[1936058]))
                                const-val call_tmp[1936072]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[1936074]:int(32)[95] "temp"
                                (1936076 'move' _virtual_method_tmp_[1936074](1936078 'getcid' e[1936065]))
                                val ret_tmp[1936080]:string[26] "temp"
                                (1936082 'virtual method call' message[167975] _virtual_method_tmp_[1936074] e[1936065] ret_tmp[1936080])
                                (1936087 'move' call_tmp[1936072] ret_tmp[1936080])
                                const-val call_tmp[1936090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1936092 'move' call_tmp[1936090](1936095 call ==[38823] call_tmp[1936072] maxMsg[169092]))
                                const-val call_tmp[1936098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1936100 'move' call_tmp[1936098] call_tmp[1936090])
                                if call_tmp[1936098]
                                {
                                  val coerce_tmp[1936105]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1936107 'move' coerce_tmp[1936105] e[1936065])
                                  (1936111 call =[1232437] last[169106] coerce_tmp[1936105])
                                }
                                (1936116 call chpl__autoDestroy[1435320] call_tmp[1936072])
                              }
                              label _continueLabel[1936118]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1935863]:int(64)[13] "temp"
                      (1935865 'move' low[1935863](1935867 '.v' _iterator[1935772] F0_low[1982870]))
                      (1935870 '=' i[1935798] low[1935863])
                    }
                    {
                      const-val high[1935874]:int(64)[13] "temp"
                      (1935876 'move' high[1935874](1935878 '.v' _iterator[1935772] F1_high[1982874]))
                      (1935881 '<=' i[1935798] high[1935874])
                    }
                    {
                      val call_tmp[1935885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1935887 '+=' i[1935798] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1935924]
                }
                (1935927 call _freeIterator[1103493] _iterator[1935772])
                (1935930 call chpl__autoDestroy[1508492] tmp[1935624])
                label _endchpl_direct_counted_range_iter_helper[1935932]
              }
              (1876223 call _freeIterator[1103743] _iterator[1876075])
              label _endchpl_direct_counted_range_iter[1876225]
            }
            (1876228 call _freeIterator[1103993] _iterator[1876038])
            label _endthese[1876230]
          }
          label _breakLabel[169376]
          (1815399 call _freeIterator[1238252] _iterator[169371])
        }
      }
    }
    const-val call_tmp[680100]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806382]:string[26] "temp"
    (169411 call _cast[1063172] n[169081] ret_tmp[1806382])
    (1806385 'move' call_tmp[680100] ret_tmp[1806382])
    const-val call_tmp[680105]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803188]:string[26] "temp"
    (169430 call +[38345] call_tmp[680100] " errors: " ret_tmp[1803188])
    (1803191 'move' call_tmp[680105] ret_tmp[1803188])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544661 'move' ret[169432] call_tmp[680105])
    const-val tmp[428429]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428450]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1744467]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744473 'move' coerce_tmp[1744467](1744469 'cast' object[22] first[169099]))
    (428461 'move' tmp[428450](169438 call !=[1485] coerce_tmp[1744467] nil[44]))
    val tmp[570519]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570520]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680118 'move' call_tmp[680115] tmp[428450])
    (570525 'move' tmp[570520] call_tmp[680115])
    if tmp[570520]
    {
      const-val tmp[570527]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1744479]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744485 'move' coerce_tmp[1744479](1744481 'cast' object[22] last[169106]))
      (680123 'move' call_tmp[680120](169442 call !=[1485] coerce_tmp[1744479] nil[44]))
      (570529 'move' tmp[570527] call_tmp[680120])
      (570534 'move' tmp[570519] tmp[570527])
    }
    {
      (570539 'move' tmp[570519] 0)
    }
    (428440 'move' tmp[428429] tmp[570519])
    val tmp[570546]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570547]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680130]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680133 'move' call_tmp[680130] tmp[428429])
    (570552 'move' tmp[570547] call_tmp[680130])
    if tmp[570547]
    {
      const-val tmp[570554]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1744491]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744497 'move' coerce_tmp[1744491](1744493 'cast' object[22] first[169099]))
      val coerce_tmp[1744499]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744505 'move' coerce_tmp[1744499](1744501 'cast' object[22] last[169106]))
      (680138 'move' call_tmp[680135](169448 call !=[1485] coerce_tmp[1744491] coerce_tmp[1744499]))
      (570556 'move' tmp[570554] call_tmp[680135])
      (570561 'move' tmp[570546] tmp[570554])
    }
    {
      (570566 'move' tmp[570546] 0)
    }
    const-val call_tmp[680140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680143 'move' call_tmp[680140] tmp[570546])
    if call_tmp[680140]
    {
      val call_tmp[680145]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680148 'move' call_tmp[680145](169455 call postfix![967802] first[169099]))
      const-val call_tmp[680150]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804504]:string[26] "temp"
      (169458 call chpl_describe_error[169835] call_tmp[680145] ret_tmp[1804504])
      (1804507 'move' call_tmp[680150] ret_tmp[1804504])
      const-val call_tmp[680155]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803194]:string[26] "temp"
      (169476 call +[38345] call_tmp[680150] " ... " ret_tmp[1803194])
      (1803197 'move' call_tmp[680155] ret_tmp[1803194])
      val call_tmp[680160]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680163 'move' call_tmp[680160](169480 call postfix![967802] last[169106]))
      const-val call_tmp[680165]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804510]:string[26] "temp"
      (169483 call chpl_describe_error[169835] call_tmp[680160] ret_tmp[1804510])
      (1804513 'move' call_tmp[680165] ret_tmp[1804510])
      const-val call_tmp[680170]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803200]:string[26] "temp"
      (169484 call +[38345] call_tmp[680155] call_tmp[680165] ret_tmp[1803200])
      (1803203 'move' call_tmp[680170] ret_tmp[1803200])
      (169486 call +=[38800] ret[169432] call_tmp[680170])
      (1815402 call chpl__autoDestroy[1435320] call_tmp[680170])
      (1815405 call chpl__autoDestroy[1435320] call_tmp[680165])
      (1815408 call chpl__autoDestroy[1435320] call_tmp[680155])
      (1815411 call chpl__autoDestroy[1435320] call_tmp[680150])
    }
    {
      const-val call_tmp[680175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1744515]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744521 'move' coerce_tmp[1744515](1744517 'cast' object[22] first[169099]))
      (680178 'move' call_tmp[680175](169491 call !=[1485] coerce_tmp[1744515] nil[44]))
      const-val call_tmp[680180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680183 'move' call_tmp[680180] call_tmp[680175])
      if call_tmp[680180]
      {
        val call_tmp[680185]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
        (680188 'move' call_tmp[680185] first[169099])
        const-val call_tmp[680190]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1804516]:string[26] "temp"
        (169499 call chpl_describe_error[169835] call_tmp[680185] ret_tmp[1804516])
        (1804519 'move' call_tmp[680190] ret_tmp[1804516])
        (169500 call +=[38800] ret[169432] call_tmp[680190])
        (1815415 call chpl__autoDestroy[1435320] call_tmp[680190])
      }
    }
    (1744528 'move' ret[522227] ret[169432])
    (1815418 call chpl__autoDestroy[1435320] call_tmp[680100])
    (1815421 call chpl__autoDestroy[1435320] maxMsg[169092])
    (1815424 call chpl__autoDestroy[1435320] minMsg[169087])
    gotoReturn _end_message[522225] _end_message[522225]
    label _end_message[522225]
    (1814796 '=' _retArg[1814794] ret[522227])
    (1814798 return _void[55])
  }
  function TaskErrors[169702].nErrors[814050](const in arg this[814054]:TaskErrors[169702]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814064]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[814071]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (814074 'move' call_tmp[814071](814058 '.' this[814054] nErrors[168363]))
    (814069 'move' ret[814064] call_tmp[814071])
    (814066 return ret[814064])
  }
  function TaskErrors[169702].errorsArray[814076](const in arg this[814080]:TaskErrors[169702]) ref : _ref(c_ptr(owned Error?))[1235643] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814090]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "RVV" "temp"
    ref call_tmp[814097]:_ref(c_ptr(owned Error?))[1235643] "dead after last mention" "maybe param" "temp"
    (814100 'move' call_tmp[814097](814084 '.' this[814080] errorsArray[168374]))
    (814095 'move' ret[814090] call_tmp[814097])
    (814092 return ret[814090])
  }
  function _new[1240999](ref arg group[1241008]:_ref(chpl_TaskErrors)[940959]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1779205]:TaskErrors[169702] "temp"
    val ret[1241038]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1241001]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241048 'move' call_tmp[1241045](1241059 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241062]:c_void_ptr[149] "dead after last mention" "temp"
    (1241064 'move' cast_tmp[1241062](1241016 call chpl_here_alloc[187788] call_tmp[1241045] 41))
    (1241019 'move' initTemp[1241001](1241066 'cast' TaskErrors[169702] cast_tmp[1241062]))
    (1241021 'setcid' initTemp[1241001])
    (1241002 call init[168384] initTemp[1241001] group[1241008])
    val tmp[1241023]:TaskErrors[169702] "dead after last mention" "temp"
    (1241027 'move' tmp[1241023] initTemp[1241001])
    (1241043 'move' ret[1241038] tmp[1241023])
    (1241040 return ret[1241038])
  }
  function _new[1734651](const in arg err[1734660]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1779632]:TaskErrors[169702] "temp"
    val ret[1734688]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val initTemp[1734653]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1734695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1734698 'move' call_tmp[1734695](1734707 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1734710]:c_void_ptr[149] "dead after last mention" "temp"
    (1734712 'move' cast_tmp[1734710](1734666 call chpl_here_alloc[187788] call_tmp[1734695] 41))
    (1734669 'move' initTemp[1734653](1734714 'cast' TaskErrors[169702] cast_tmp[1734710]))
    (1734671 'setcid' initTemp[1734653])
    (1734654 call init[168765] initTemp[1734653] err[1734660])
    val tmp[1734673]:TaskErrors[169702] "dead after last mention" "temp"
    (1734677 'move' tmp[1734673] initTemp[1734653])
    (1734693 'move' ret[1734688] tmp[1734673])
    (1734690 return ret[1734688])
  }
  type TaskErrors[169702] val super[355748]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235634] "no doc"
  function chpl_error_type_name[169752](const in arg err[169749]:Error[167984], ref arg _retArg[1804498]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522272]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680241]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680244 'move' call_tmp[680241](169774 'getcid' err[169749]))
    const-val cid[169775]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544665 'move' cid[169775] call_tmp[680241])
    const-val call_tmp[680246]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680249 'move' call_tmp[680246](169800 'class name by id' cid[169775]))
    const-val nameC[169801]:c_string[19] "dead at end of block" "insert auto destroy"
    (544667 'move' nameC[169801](1734214 call chpl__initCopy[21698] call_tmp[680246]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544669]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1782426]:Error[167984] "error variable" "temp"
      (1782442 'move' error[1782426] nil[44])
      const-val call_tmp[680251]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1734230]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1734235 'move' default_arg_length[1734230](1734232 call createStringWithNewBuffer_default_length[964065] nameC[169801] error[1782426]))
      val errorExists[2072209]:bool[10] "temp"
      (2072214 'move' errorExists[2072209](2072211 '!=' error[1782426] nil[44]))
      if errorExists[2072209]
      {
        gotoErrorHandling handler[1782427] handler[1782427]
      }
      const-val ret_tmp[1802412]:string[26] "temp"
      (169814 call createStringWithNewBuffer[30413] nameC[169801] default_arg_length[1734230] strict[173692] error[1782426] ret_tmp[1802412])
      (1802415 'move' call_tmp[680251] ret_tmp[1802412])
      val errorExists[2072217]:bool[10] "temp"
      (2072222 'move' errorExists[2072217](2072219 '!=' error[1782426] nil[44]))
      if errorExists[2072217]
      {
        gotoErrorHandling handler[1782427] handler[1782427]
      }
      (544680 'move' nameS[169806] call_tmp[680251])
      label handler[1782427]
      const-val shouldHandleError[1782451]:bool[10] "temp"
      val errorExists[2072225]:bool[10] "temp"
      (2072230 'move' errorExists[2072225](2072227 '!=' error[1782426] nil[44]))
      (1782455 'move' shouldHandleError[1782451] errorExists[2072225])
      if shouldHandleError[1782451]
      {
        (1782448 call chpl_uncaught_error[170289] error[1782426])
      }
    }
    (1734249 'move' ret[522272] nameS[169806])
    gotoReturn _end_chpl_error_type_name[522270] _end_chpl_error_type_name[522270]
    label _end_chpl_error_type_name[522270]
    (1804500 '=' _retArg[1804498] ret[522272])
    (1804502 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:Error[167984], ref arg _retArg[1804528]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522284]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680256]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1804492]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1804492])
    (1804495 'move' call_tmp[680256] ret_tmp[1804492])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544683 'move' nameS[169842] call_tmp[680256])
    const-val call_tmp[680261]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803206]:string[26] "temp"
    (169849 call +[38345] nameS[169842] ": " ret_tmp[1803206])
    (1803209 'move' call_tmp[680261] ret_tmp[1803206])
    const-val call_tmp[680268]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1775300]:int(32)[95] "temp"
    (1775304 'move' _virtual_method_tmp_[1775300](1775302 'getcid' err[169832]))
    val ret_tmp[1804444]:string[26] "temp"
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1775300] err[169832] ret_tmp[1804444])
    (1804447 'move' call_tmp[680268] ret_tmp[1804444])
    const-val call_tmp[680273]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803212]:string[26] "temp"
    (169857 call +[38345] call_tmp[680261] call_tmp[680268] ret_tmp[1803212])
    (1803215 'move' call_tmp[680273] ret_tmp[1803212])
    const-val ret[169859]:string[26] "dead at end of block" "insert auto destroy"
    (544685 'move' ret[169859] call_tmp[680273])
    (1734256 'move' ret[522284] ret[169859])
    (1815427 call chpl__autoDestroy[1435320] call_tmp[680268])
    (1815430 call chpl__autoDestroy[1435320] call_tmp[680261])
    (1815433 call chpl__autoDestroy[1435320] nameS[169842])
    gotoReturn _end_chpl_describe_error[522282] _end_chpl_describe_error[522282]
    label _end_chpl_describe_error[522282]
    (1804530 '=' _retArg[1804528] ret[522284])
    (1804532 return _void[55])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:Error[167984]) : Error[167984] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522296]:Error[167984] "dead after last mention" "RVV" "temp"
    val fixErr[169885]:Error[167984] "dead at end of block" "insert auto destroy"
    (544687 'move' fixErr[169885](969502 call chpl__initCopy[967393] err[169874]))
    const-val call_tmp[680278]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969505]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969510 'move' coerce_tmp[969505](969507 'cast' object[22] fixErr[169885]))
    (680281 'move' call_tmp[680278](169892 call ==[1146] coerce_tmp[969505] nil[44]))
    const-val call_tmp[680283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680286 'move' call_tmp[680283] call_tmp[680278])
    if call_tmp[680283]
    {
      val call_tmp[680288]:NilThrownError[168029] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[969620]:NilThrownError[168029] "dead after last mention" "temp"
      (969622 'move' new_temp[969620](969552 call _new[969568]))
      (680291 'move' call_tmp[680288] new_temp[969620])
      val coerce_tmp[969727]:NilThrownError[168029] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969733 'move' coerce_tmp[969727] call_tmp[680288])
      (169901 call =[969682] fixErr[169885] coerce_tmp[969727])
    }
    const-val call_tmp[680293]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680296 'move' call_tmp[680293](169927 '_get_user_line'))
    const-val line[169928]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544689 'move' line[169928] call_tmp[680293])
    const-val call_tmp[680298]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680301 'move' call_tmp[680298](169950 '_get_user_file'))
    const-val fileId[169951]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544691 'move' fileId[169951] call_tmp[680298])
    val call_tmp[680303]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680306 'move' call_tmp[680303](169956 call postfix![967793] fixErr[169885]))
    ref call_tmp[680310]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[969744]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969749 'move' coerce_tmp[969744] call_tmp[680303])
    (680313 'move' call_tmp[680310](169960 call _hasThrowInfo[811739] coerce_tmp[969744]))
    const-val call_tmp[680315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[969752]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969756 'move' coerce_tmp[969752](969754 'deref' call_tmp[680310]))
    (680318 'move' call_tmp[680315](169963 call ![7494] coerce_tmp[969752]))
    const-val call_tmp[680320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680323 'move' call_tmp[680320] call_tmp[680315])
    if call_tmp[680320]
    {
      val call_tmp[680325]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680328 'move' call_tmp[680325](169966 call postfix![967793] fixErr[169885]))
      ref call_tmp[680332]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969760]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969765 'move' coerce_tmp[969760] call_tmp[680325])
      (680335 'move' call_tmp[680332](169968 call _hasThrowInfo[811739] coerce_tmp[969760]))
      (169972 call =[435212] call_tmp[680332] 1)
      val call_tmp[680337]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680340 'move' call_tmp[680337](169977 call postfix![967793] fixErr[169885]))
      ref call_tmp[680344]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969770]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969775 'move' coerce_tmp[969770] call_tmp[680337])
      (680347 'move' call_tmp[680344](169981 call thrownLine[811661] coerce_tmp[969770]))
      (169985 call =[435365] call_tmp[680344] line[169928])
      val call_tmp[680349]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (680352 'move' call_tmp[680349](169989 call postfix![967793] fixErr[169885]))
      ref call_tmp[680356]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[969780]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969785 'move' coerce_tmp[969780] call_tmp[680349])
      (680359 'move' call_tmp[680356](169993 call thrownFileId[811687] coerce_tmp[969780]))
      (169997 call =[435344] call_tmp[680356] fileId[169951])
    }
    val call_tmp[680361]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680364 'move' call_tmp[680361](170007 call _to_nonnil[968032] fixErr[169885]))
    (969791 'move' ret[522296] call_tmp[680361])
    gotoReturn _end_chpl_do_fix_thrown_error[522294] _end_chpl_do_fix_thrown_error[522294]
    label _end_chpl_do_fix_thrown_error[522294]
    (522298 return ret[522296])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966477]) : Error[167984] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969472]:owned Error[966477] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969475 'move' _formal_tmp_err[969472] err[170046])
    val ret[522318]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680380]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680383 'move' call_tmp[680380](170059 call release[969217] _formal_tmp_err[969472]))
    val call_tmp[680385]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[969493]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969499 'move' coerce_tmp[969493] call_tmp[680380])
    (680388 'move' call_tmp[680385](170061 call chpl_do_fix_thrown_error[169877] coerce_tmp[969493]))
    (969794 'move' ret[522318] call_tmp[680385])
    (1815436 call chpl__autoDestroy[1442451] _formal_tmp_err[969472])
    (522320 return ret[522318])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1734103]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734108 'move' coerce_tmp[1734103](1734105 'cast' object[22] err[170260]))
    (680443 'move' call_tmp[680440](170267 call !=[1485] coerce_tmp[1734103] nil[44]))
    const-val call_tmp[680445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680448 'move' call_tmp[680445] call_tmp[680440])
    if call_tmp[680445]
    {
      (170271 call chpl__delete[1236202] err[170260])
    }
    (522339 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:Error[167984]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680450]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680453 'move' call_tmp[680450](170321 '_get_user_file'))
    const-val call_tmp[680455]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680458 'move' call_tmp[680455](170322 'chpl_lookupFilename' call_tmp[680450]))
    const-val myFileC[170323]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544697 'move' myFileC[170323](1734112 call chpl__initCopy[21698] call_tmp[680455]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544699]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1782459]:Error[167984] "error variable" "temp"
      (1782475 'move' error[1782459] nil[44])
      const-val call_tmp[680460]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1734128]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1734133 'move' default_arg_length[1734128](1734130 call createStringWithNewBuffer_default_length[964065] myFileC[170323] error[1782459]))
      val errorExists[2072233]:bool[10] "temp"
      (2072238 'move' errorExists[2072233](2072235 '!=' error[1782459] nil[44]))
      if errorExists[2072233]
      {
        gotoErrorHandling handler[1782460] handler[1782460]
      }
      const-val ret_tmp[1802418]:string[26] "temp"
      (170336 call createStringWithNewBuffer[30413] myFileC[170323] default_arg_length[1734128] strict[173692] error[1782459] ret_tmp[1802418])
      (1802421 'move' call_tmp[680460] ret_tmp[1802418])
      val errorExists[2072241]:bool[10] "temp"
      (2072246 'move' errorExists[2072241](2072243 '!=' error[1782459] nil[44]))
      if errorExists[2072241]
      {
        gotoErrorHandling handler[1782460] handler[1782460]
      }
      (544710 'move' myFileS[170328] call_tmp[680460])
      label handler[1782460]
      const-val shouldHandleError[1782484]:bool[10] "temp"
      val errorExists[2072249]:bool[10] "temp"
      (2072254 'move' errorExists[2072249](2072251 '!=' error[1782459] nil[44]))
      (1782488 'move' shouldHandleError[1782484] errorExists[2072249])
      if shouldHandleError[1782484]
      {
        (1782481 call chpl_uncaught_error[170289] error[1782459])
      }
    }
    const-val call_tmp[680465]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680468 'move' call_tmp[680465](170346 '_get_user_line'))
    const-val myLine[170347]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544713 'move' myLine[170347] call_tmp[680465])
    ref call_tmp[680472]:_ref(int(32))[936645] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1734146]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1734151 'move' coerce_tmp[1734146] err[170286])
    (680475 'move' call_tmp[680472](170355 call thrownFileId[811687] coerce_tmp[1734146]))
    const-val call_tmp[680477]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680480 'move' call_tmp[680477](170358 'chpl_lookupFilename' call_tmp[680472]))
    const-val thrownFileC[170359]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544715 'move' thrownFileC[170359](1734154 call chpl__initCopy[21698] call_tmp[680477]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544717]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1782492]:Error[167984] "error variable" "temp"
      (1782508 'move' error[1782492] nil[44])
      const-val call_tmp[680482]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1734170]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1734175 'move' default_arg_length[1734170](1734172 call createStringWithNewBuffer_default_length[964065] thrownFileC[170359] error[1782492]))
      val errorExists[2072257]:bool[10] "temp"
      (2072262 'move' errorExists[2072257](2072259 '!=' error[1782492] nil[44]))
      if errorExists[2072257]
      {
        gotoErrorHandling handler[1782493] handler[1782493]
      }
      const-val ret_tmp[1802424]:string[26] "temp"
      (170372 call createStringWithNewBuffer[30413] thrownFileC[170359] default_arg_length[1734170] strict[173692] error[1782492] ret_tmp[1802424])
      (1802427 'move' call_tmp[680482] ret_tmp[1802424])
      val errorExists[2072265]:bool[10] "temp"
      (2072270 'move' errorExists[2072265](2072267 '!=' error[1782492] nil[44]))
      if errorExists[2072265]
      {
        gotoErrorHandling handler[1782493] handler[1782493]
      }
      (544728 'move' thrownFileS[170364] call_tmp[680482])
      label handler[1782493]
      const-val shouldHandleError[1782517]:bool[10] "temp"
      val errorExists[2072273]:bool[10] "temp"
      (2072278 'move' errorExists[2072273](2072275 '!=' error[1782492] nil[44]))
      (1782521 'move' shouldHandleError[1782517] errorExists[2072273])
      if shouldHandleError[1782517]
      {
        (1782514 call chpl_uncaught_error[170289] error[1782492])
      }
    }
    ref call_tmp[680489]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1734188]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1734193 'move' coerce_tmp[1734188] err[170286])
    (680492 'move' call_tmp[680489](170381 call thrownLine[811661] coerce_tmp[1734188]))
    const-val thrownLine[170384]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1734198]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1734202 'move' coerce_tmp[1734198](1734200 'deref' call_tmp[680489]))
    (1815439 '=' thrownLine[170384] coerce_tmp[1734198])
    (544731 'noop')
    const-val call_tmp[680494]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1734205]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1734210 'move' coerce_tmp[1734205] err[170286])
    const-val ret_tmp[1804522]:string[26] "temp"
    (170408 call chpl_describe_error[169835] coerce_tmp[1734205] ret_tmp[1804522])
    (1804525 'move' call_tmp[680494] ret_tmp[1804522])
    const-val call_tmp[680499]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803218]:string[26] "temp"
    (170409 call +[38345] "uncaught " call_tmp[680494] ret_tmp[1803218])
    (1803221 'move' call_tmp[680499] ret_tmp[1803218])
    const-val call_tmp[680504]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803224]:string[26] "temp"
    (170428 call +[38345] call_tmp[680499] "\n  " ret_tmp[1803224])
    (1803227 'move' call_tmp[680504] ret_tmp[1803224])
    const-val call_tmp[680509]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803230]:string[26] "temp"
    (170431 call +[38345] call_tmp[680504] thrownFileS[170364] ret_tmp[1803230])
    (1803233 'move' call_tmp[680509] ret_tmp[1803230])
    const-val call_tmp[680514]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803236]:string[26] "temp"
    (170434 call +[38345] call_tmp[680509] ":" ret_tmp[1803236])
    (1803239 'move' call_tmp[680514] ret_tmp[1803236])
    const-val call_tmp[680519]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806388]:string[26] "temp"
    (170438 call _cast[1063172] thrownLine[170384] ret_tmp[1806388])
    (1806391 'move' call_tmp[680519] ret_tmp[1806388])
    const-val call_tmp[680524]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803242]:string[26] "temp"
    (170440 call +[38345] call_tmp[680514] call_tmp[680519] ret_tmp[1803242])
    (1803245 'move' call_tmp[680524] ret_tmp[1803242])
    const-val call_tmp[680529]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803248]:string[26] "temp"
    (170459 call +[38345] call_tmp[680524] ": thrown here" ret_tmp[1803248])
    (1803251 'move' call_tmp[680529] ret_tmp[1803248])
    const-val call_tmp[680534]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803254]:string[26] "temp"
    (170462 call +[38345] call_tmp[680529] "\n  " ret_tmp[1803254])
    (1803257 'move' call_tmp[680534] ret_tmp[1803254])
    const-val call_tmp[680539]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803260]:string[26] "temp"
    (170465 call +[38345] call_tmp[680534] myFileS[170328] ret_tmp[1803260])
    (1803263 'move' call_tmp[680539] ret_tmp[1803260])
    const-val call_tmp[680544]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803266]:string[26] "temp"
    (170468 call +[38345] call_tmp[680539] ":" ret_tmp[1803266])
    (1803269 'move' call_tmp[680544] ret_tmp[1803266])
    const-val call_tmp[680549]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806394]:string[26] "temp"
    (170472 call _cast[1063172] myLine[170347] ret_tmp[1806394])
    (1806397 'move' call_tmp[680549] ret_tmp[1806394])
    const-val call_tmp[680554]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803272]:string[26] "temp"
    (170474 call +[38345] call_tmp[680544] call_tmp[680549] ret_tmp[1803272])
    (1803275 'move' call_tmp[680554] ret_tmp[1803272])
    const-val call_tmp[680559]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803278]:string[26] "temp"
    (170493 call +[38345] call_tmp[680554] ": uncaught here" ret_tmp[1803278])
    (1803281 'move' call_tmp[680559] ret_tmp[1803278])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544733 'move' s[170495] call_tmp[680559])
    const-val call_tmp[680566]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680569 'move' call_tmp[680566](170505 call c_str[32935] s[170495]))
    (170507 call chpl_error_preformatted[1734272] call_tmp[680566])
    (1815442 call chpl__autoDestroy[1435320] s[170495])
    (1815445 call chpl__autoDestroy[1435320] call_tmp[680554])
    (1815448 call chpl__autoDestroy[1435320] call_tmp[680549])
    (1815451 call chpl__autoDestroy[1435320] call_tmp[680544])
    (1815454 call chpl__autoDestroy[1435320] call_tmp[680539])
    (1815457 call chpl__autoDestroy[1435320] call_tmp[680534])
    (1815460 call chpl__autoDestroy[1435320] call_tmp[680529])
    (1815463 call chpl__autoDestroy[1435320] call_tmp[680524])
    (1815466 call chpl__autoDestroy[1435320] call_tmp[680519])
    (1815469 call chpl__autoDestroy[1435320] call_tmp[680514])
    (1815472 call chpl__autoDestroy[1435320] call_tmp[680509])
    (1815475 call chpl__autoDestroy[1435320] call_tmp[680504])
    (1815478 call chpl__autoDestroy[1435320] call_tmp[680499])
    (1815481 call chpl__autoDestroy[1435320] call_tmp[680494])
    (1815484 call chpl__autoDestroy[1435320] thrownFileS[170364])
    (1815487 call chpl__autoDestroy[1435320] myFileS[170328])
    (522343 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:Error[167984]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522345 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522349]:Error[167984] "dead after last mention" "RVV" "temp"
    val call_tmp[680571]:TaskErrors[169702] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1734502]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734507 'move' coerce_tmp[1734502] err[170532])
    (680574 'move' call_tmp[680571](170543 call _cast[1734360] coerce_tmp[1734502]))
    const-val call_tmp[680576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1734535]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734540 'move' coerce_tmp[1734535](1734537 'cast' object[22] call_tmp[680571]))
    (680579 'move' call_tmp[680576](170548 call _cond_test[9881] coerce_tmp[1734535]))
    if call_tmp[680576]
    {
      (1734720 'move' ret[522349] err[170532])
      gotoReturn _end_chpl_forall_error[522347] _end_chpl_forall_error[522347]
    }
    val call_tmp[680581]:TaskErrors[169702] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1734701]:TaskErrors[169702] "dead after last mention" "temp"
    (1734703 'move' new_temp[1734701](1734547 call _new[1734651] err[170532]))
    (680584 'move' call_tmp[680581] new_temp[1734701])
    (522361 'move' ret[522349](1734722 'cast' Error[167984] call_tmp[680581]))
    label _end_chpl_forall_error[522347]
    (522351 return ret[522349])
  }
  function chpl_enum_cast_error[1071874](const in arg casted[1071876]:uint(8)[100], const  ref arg enumName[1071878]:string[26], ref arg error_out[1784766]:Error[167984]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1071884]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806708]:string[26] "temp"
    (1071889 call _cast[1071938] casted[1071876] ret_tmp[1806708])
    (1806711 'move' call_tmp[1071884] ret_tmp[1806708])
    const-val call_tmp[1071892]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803410]:string[26] "temp"
    (1071897 call +[38345] "bad cast from int '" call_tmp[1071884] ret_tmp[1803410])
    (1803413 'move' call_tmp[1071892] ret_tmp[1803410])
    const-val call_tmp[1071900]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803416]:string[26] "temp"
    (1071905 call +[38345] call_tmp[1071892] "' to enum '" ret_tmp[1803416])
    (1803419 'move' call_tmp[1071900] ret_tmp[1803416])
    const-val call_tmp[1071908]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803422]:string[26] "temp"
    (1071913 call +[38345] call_tmp[1071900] enumName[1071878] ret_tmp[1803422])
    (1803425 'move' call_tmp[1071908] ret_tmp[1803422])
    const-val call_tmp[1071916]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073574]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073576 'move' new_temp[1073574](1073500 call _new[1073521] call_tmp[1071908] "'"))
    const-val initTemp[1073595]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "temp"
    (1073598 call init[1064228] initTemp[1073595] new_temp[1073574])
    (1071918 'move' call_tmp[1071916] initTemp[1073595])
    val call_tmp[1071926]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073612]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1806592]:owned Error[966477] "temp"
    (1073614 call _cast[1064749] call_tmp[1071916] ret_tmp[1806592])
    (1806595 'move' coerce_tmp[1073612] ret_tmp[1806592])
    const-val _formal_tmp_in_err[1073791]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073795 'move' _formal_tmp_in_err[1073791] coerce_tmp[1073612])
    (1071928 'move' call_tmp[1071926](1071931 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073791]))
    {
      val castedError[1784771]:Error[167984] "temp"
      (1784777 'move' castedError[1784771] call_tmp[1071926])
      (1784779 '=' error_out[1784766] castedError[1784771])
      (1817313 call chpl__autoDestroy[1435320] call_tmp[1071908])
      (1817316 call chpl__autoDestroy[1435320] call_tmp[1071900])
      (1817319 call chpl__autoDestroy[1435320] call_tmp[1071892])
      (1817322 call chpl__autoDestroy[1435320] call_tmp[1071884])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1784768] _endchpl_enum_cast_error[1784768]
    }
    (1817334 call chpl__autoDestroy[1435320] call_tmp[1071908])
    (1817331 call chpl__autoDestroy[1435320] call_tmp[1071900])
    (1817328 call chpl__autoDestroy[1435320] call_tmp[1071892])
    (1817325 call chpl__autoDestroy[1435320] call_tmp[1071884])
    label _endchpl_enum_cast_error[1784768]
    (1071935 return _void[55])
  }
  function on_fn[935357](ref arg this[1781247]:_ref(chpl_TaskErrors)[940959], const in arg err[1781249]:Error[167984]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[679513]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
      (679516 'move' call_tmp[679513](361441 call _errorsLock[812261] this[1781247]))
      (168290 call lock[187323] call_tmp[679513])
      ref call_tmp[679522]:_ref(Error)[941039] "dead at end of block" "maybe param" "temp"
      (679525 'move' call_tmp[679522](388510 call _head[812235] this[1781247]))
      val tmp[168294]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1232422]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1232426 'move' coerce_tmp[1232422](1232424 'deref' call_tmp[679522]))
      (1815767 '=' tmp[168294] coerce_tmp[1232422])
      (544607 'noop')
      ref call_tmp[679529]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1232429]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232434 'move' coerce_tmp[1232429] err[1781249])
      (679532 'move' call_tmp[679529](168301 call _next[811635] coerce_tmp[1232429]))
      (168305 call =[1232465] call_tmp[679529] tmp[168294])
      ref call_tmp[679536]:_ref(Error)[941039] "dead after last mention" "maybe param" "temp"
      (679539 'move' call_tmp[679536](388516 call _head[812235] this[1781247]))
      val coerce_tmp[1232502]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1232508 'move' coerce_tmp[1232502] err[1781249])
      (168310 call =[1232465] call_tmp[679536] coerce_tmp[1232502])
      ref call_tmp[679543]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
      (679546 'move' call_tmp[679543](361447 call _errorsLock[812261] this[1781247]))
      (168318 call unlock[187415] call_tmp[679543])
    }
    (935364 return _void[55])
  }
  function chpl_error_preformatted[1734272](const in arg c_string[1734274]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1734280 return _void[55])
  }
  function wrapon_fn[2051875](const in arg dummy_locale_arg[2051877]:chpl_localeID_t[209352], in arg buf[2051879]:c_void_ptr[149], in arg buf_size[2051881]:int(64)[13], in arg c[2051883]:_class_localson_fn[2051829]) : void[4] "on block"
  {
    val _0_tmp[2051888]:chpl_localeID_t[209352] "temp"
    (2051893 'move' _0_tmp[2051888](2051890 '.v' c[2051883] _0_tmp[2051832]))
    ref _1_this[2051895]:chpl_TaskErrors[168348] "temp"
    (2051900 'move' _1_this[2051895](2051897 '.v' c[2051883] _1_this[2051834]))
    val _2_err[2051903]:Error[167984] "temp"
    (2051908 'move' _2_err[2051903](2051905 '.v' c[2051883] _2_err[2051836]))
    (2051886 call on_fn[935357] _1_this[2051895] _2_err[2051903])
    (2051911 return _void[55])
  }
}