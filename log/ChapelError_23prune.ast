AST dump for ChapelError after pass prune.
Module use list: ChapelStandard ChapelLocks 

{
  function chpl__init_ChapelError[416075]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522401 return _void[55])
  }
  function Error[167942].init[167900](const in arg this[167944]:Error[167942]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462482]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462490 'move' super_tmp[462482](462483 '.v' this[167944] super[355753]))
    (462486 call init[749402] super_tmp[462482])
    val tmp[462417]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679450]:object[22] "dead at end of block" "maybe param" "temp"
    (679453 'move' call_tmp[679450](462428 'cast' object[22] this[167944]))
    val chpl__thisAsParent[462425]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544618 'move' chpl__thisAsParent[462425](961380 call chpl__initCopy[943200] call_tmp[679450]))
    (462431 'setcid' chpl__thisAsParent[462425])
    val tmp[462433]:Error[167942] "dead after last mention" "temp"
    val init_coerce_tmp[961383]:Error[167942] "dead after last mention" "temp"
    (961386 'move' init_coerce_tmp[961383](961398 'cast' Error[167942] nil[44]))
    (462436 'move' tmp[462433] init_coerce_tmp[961383])
    (462438 '.=' this[167944] _next[167870] tmp[462433])
    val tmp[462443]:int(64)[13] "dead after last mention" "temp"
    (961403 'move' tmp[462443] 0)
    (462448 '.=' this[167944] thrownLine[167875] tmp[462443])
    val tmp[462452]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679455]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (961406 'move' tmp[462452] 0)
    (462459 '.=' this[167944] thrownFileId[167883] tmp[462452])
    val tmp[462463]:string[26] "dead after last mention" "temp"
    (961408 call init[30760] tmp[462463])
    (462468 '.=' this[167944] _msg[167888] tmp[462463])
    val tmp[462473]:bool[10] "dead after last mention" "temp"
    (462476 'move' tmp[462473] 0)
    (462478 '.=' this[167944] _hasThrowInfo[167894] tmp[462473])
    (462493 'setcid' this[167944])
    (522150 return _void[55])
  }
  function Error[167942].init[167916](const in arg this[167948]:Error[167942], const  ref arg msg[167913]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462565]:object[22] "dead after last mention" "temporary of super field" "temp"
    (462573 'move' super_tmp[462565](462566 '.v' this[167948] super[355753]))
    (462569 call init[749402] super_tmp[462565])
    val tmp[462499]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[679465]:object[22] "dead at end of block" "maybe param" "temp"
    (679468 'move' call_tmp[679465](462510 'cast' object[22] this[167948]))
    val chpl__thisAsParent[462507]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (544620 'move' chpl__thisAsParent[462507](1061134 call chpl__initCopy[943200] call_tmp[679465]))
    (462513 'setcid' chpl__thisAsParent[462507])
    val tmp[462516]:Error[167942] "dead after last mention" "temp"
    val init_coerce_tmp[1061137]:Error[167942] "dead after last mention" "temp"
    (1061140 'move' init_coerce_tmp[1061137](1061154 'cast' Error[167942] nil[44]))
    (462519 'move' tmp[462516] init_coerce_tmp[1061137])
    (462521 '.=' this[167948] _next[167870] tmp[462516])
    val tmp[462525]:int(64)[13] "dead after last mention" "temp"
    (1061159 'move' tmp[462525] 0)
    (462530 '.=' this[167948] thrownLine[167875] tmp[462525])
    val tmp[462534]:int(32)[95] "dead after last mention" "temp"
    val call_tmp[679470]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1061162 'move' tmp[462534] 0)
    (462541 '.=' this[167948] thrownFileId[167883] tmp[462534])
    val tmp[462545]:string[26] "dead after last mention" "temp"
    (462548 call init=[30771] tmp[462545] msg[167913])
    (462550 '.=' this[167948] _msg[167888] tmp[462545])
    val tmp[462556]:bool[10] "dead after last mention" "temp"
    (462559 'move' tmp[462556] 0)
    (462561 '.=' this[167948] _hasThrowInfo[167894] tmp[462556])
    (462576 'setcid' this[167948])
    (522152 return _void[55])
  }
  function Error[167942].message[167933](const in arg this[167952]:Error[167942], ref arg _retArg[1783612]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    const-val ret[522156]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[679477]:_ref(string)[935902] "dead after last mention" "maybe param" "temp"
    (679480 'move' call_tmp[679477](388514 call _msg[811733] this[167952]))
    (522161 'move' ret[522156](1783616 call chpl__initCopy[978441] call_tmp[679477]))
    (1783614 '=' _retArg[1783612] ret[522156])
    (1783618 return _void[55])
  }
  function Error[167942]._next[811655](const in arg this[811659]:Error[167942]) ref : _ref(Error)[938950] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811669]:_ref(Error)[938950] "dead after last mention" "RVV" "temp"
    ref call_tmp[811676]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
    (811679 'move' call_tmp[811676](811663 '.' this[811659] _next[167870]))
    (811674 'move' ret[811669] call_tmp[811676])
    (811671 return ret[811669])
  }
  function Error[167942].thrownLine[811681](const in arg this[811685]:Error[167942]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811695]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[811702]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (811705 'move' call_tmp[811702](811689 '.' this[811685] thrownLine[167875]))
    (811700 'move' ret[811695] call_tmp[811702])
    (811697 return ret[811695])
  }
  function Error[167942].thrownFileId[811707](const in arg this[811711]:Error[167942]) ref : _ref(int(32))[934589] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811721]:_ref(int(32))[934589] "dead after last mention" "RVV" "temp"
    ref call_tmp[811728]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
    (811731 'move' call_tmp[811728](811715 '.' this[811711] thrownFileId[167883]))
    (811726 'move' ret[811721] call_tmp[811728])
    (811723 return ret[811721])
  }
  function Error[167942]._msg[811733](const in arg this[811737]:Error[167942]) ref : _ref(string)[935902] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[811747]:_ref(string)[935902] "dead after last mention" "RVV" "temp"
    ref call_tmp[811754]:_ref(string)[935902] "dead after last mention" "maybe param" "temp"
    (811757 'move' call_tmp[811754](811741 '.' this[811737] _msg[167888]))
    (811752 'move' ret[811747] call_tmp[811754])
    (811749 return ret[811747])
  }
  function Error[167942]._hasThrowInfo[811759](const in arg this[811763]:Error[167942]) ref : _ref(bool)[935162] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[811773]:_ref(bool)[935162] "dead after last mention" "RVV" "temp"
    ref call_tmp[811780]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    (811783 'move' call_tmp[811780](811767 '.' this[811763] _hasThrowInfo[167894]))
    (811778 'move' ret[811773] call_tmp[811780])
    (811775 return ret[811773])
  }
  function Error[167942].deinit[811785](const in arg this[811789]:Error[167942]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1767476]
    ref _field_destructor_tmp_[1767474]:_ref(string)[935902] "temp"
    (1767481 'move' _field_destructor_tmp_[1767474](1767478 '.' this[811789] _msg[167888]))
    (1767483 call deinit[30831] _field_destructor_tmp_[1767474])
    val _parent_destructor_tmp_[1767486]:object[22] "temp"
    (1767491 'move' _parent_destructor_tmp_[1767486](1767487 'cast' object[22] this[811789]))
    (1767493 call deinit[749418] _parent_destructor_tmp_[1767486])
    (811797 return _void[55])
  }
  type Error[167942] val super[355753]:object[22] "super class" val _next[167870]:Error[167942] "no doc" val thrownLine[167875]:int(64)[13] "no doc" val thrownFileId[167883]:int(32)[95] "no doc" val _msg[167888]:string[26] "no doc" val _hasThrowInfo[167894]:bool[10] "no doc"
  function NilThrownError[167987].message[167962](const in arg this[167989]:NilThrownError[167987], ref arg _retArg[1793766]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522165]:string[26] "dead after last mention" "RVV" "temp"
    (522170 'move' ret[522165](1793770 call chpl__initCopy[978441] "thrown error was nil"))
    (1793768 '=' _retArg[1793766] ret[522165])
    (1793772 return _void[55])
  }
  function NilThrownError[167987].init[811825](const in arg this[811828]:NilThrownError[167987]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[811841]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (811843 'move' super_tmp[811841](811840 '.v' this[811828] super[355755]))
    (811838 call init[167900] super_tmp[811841])
    val tmp[811846]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[811884]:Error[167942] "dead at end of block" "maybe param" "temp"
    (811887 'move' call_tmp[811884](811857 'cast' Error[167942] this[811828]))
    val chpl__thisAsParent[811854]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (811875 'move' chpl__thisAsParent[811854](965339 call chpl__initCopy[961416] call_tmp[811884]))
    (811860 'setcid' chpl__thisAsParent[811854])
    (811862 'setcid' this[811828])
    (811873 return _void[55])
  }
  function NilThrownError[167987].deinit[811889](const in arg this[811893]:NilThrownError[167987]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1767501]
    val _parent_destructor_tmp_[1767496]:Error[167942] "temp"
    (1767503 'move' _parent_destructor_tmp_[1767496](1767497 'cast' Error[167942] this[811893]))
    (1767505 call deinit[811785] _parent_destructor_tmp_[1767496])
    (811901 return _void[55])
  }
  function _new[965348]() : NilThrownError[167987] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1759635]:NilThrownError[167987] "temp"
    val ret[965387]:NilThrownError[167987] "dead after last mention" "RVV" "temp"
    val initTemp[965350]:NilThrownError[167987] "dead after last mention" "temp"
    const-val call_tmp[965394]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965397 'move' call_tmp[965394](965406 'sizeof_bundle' NilThrownError[167987]))
    const-val cast_tmp[965409]:c_void_ptr[149] "dead after last mention" "temp"
    (965411 'move' cast_tmp[965409](965362 call chpl_here_alloc[187754] call_tmp[965394] 2))
    (965365 'move' initTemp[965350](965413 'cast' NilThrownError[167987] cast_tmp[965409]))
    (965367 'setcid' initTemp[965350])
    (965351 call init[811825] initTemp[965350])
    val tmp[965369]:NilThrownError[167987] "dead after last mention" "temp"
    (965376 'move' tmp[965369] initTemp[965350])
    (965392 'move' ret[965387] tmp[965369])
    (965389 return ret[965387])
  }
  type NilThrownError[167987] val super[355755]:Error[167942] "super class"
  function DecodeError[168098].message[168073](const in arg this[168100]:DecodeError[168098], ref arg _retArg[1793802]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val ret[522192]:string[26] "dead after last mention" "RVV" "temp"
    (522197 'move' ret[522192](1793806 call chpl__initCopy[978441] "Invalid UTF-8 character encountered."))
    (1793804 '=' _retArg[1793802] ret[522192])
    (1793808 return _void[55])
  }
  function DecodeError[168098].init[812137](const in arg this[812140]:DecodeError[168098]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val super_tmp[812153]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (812155 'move' super_tmp[812153](812152 '.v' this[812140] super[355761]))
    (812150 call init[167900] super_tmp[812153])
    val tmp[812158]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[812196]:Error[167942] "dead at end of block" "maybe param" "temp"
    (812199 'move' call_tmp[812196](812169 'cast' Error[167942] this[812140]))
    val chpl__thisAsParent[812166]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (812187 'move' chpl__thisAsParent[812166](961414 call chpl__initCopy[961416] call_tmp[812196]))
    (812172 'setcid' chpl__thisAsParent[812166])
    (812174 'setcid' this[812140])
    (812185 return _void[55])
  }
  function DecodeError[168098].deinit[812201](const in arg this[812205]:DecodeError[168098]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1767513]
    val _parent_destructor_tmp_[1767508]:Error[167942] "temp"
    (1767515 'move' _parent_destructor_tmp_[1767508](1767509 'cast' Error[167942] this[812205]))
    (1767517 call deinit[811785] _parent_destructor_tmp_[1767508])
    (812213 return _void[55])
  }
  function _new[961441]() : DecodeError[168098] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_type_tmp_[1759629]:DecodeError[168098] "temp"
    val ret[961477]:DecodeError[168098] "dead after last mention" "RVV" "temp"
    val initTemp[961443]:DecodeError[168098] "dead after last mention" "temp"
    const-val call_tmp[961484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (961487 'move' call_tmp[961484](961498 'sizeof_bundle' DecodeError[168098]))
    const-val cast_tmp[961501]:c_void_ptr[149] "dead after last mention" "temp"
    (961503 'move' cast_tmp[961501](961455 call chpl_here_alloc[187754] call_tmp[961484] 1))
    (961458 'move' initTemp[961443](961505 'cast' DecodeError[168098] cast_tmp[961501]))
    (961460 'setcid' initTemp[961443])
    (961444 call init[812137] initTemp[961443])
    val tmp[961462]:DecodeError[168098] "dead after last mention" "temp"
    (961466 'move' tmp[961462] initTemp[961443])
    (961482 'move' ret[961477] tmp[961462])
    (961479 return ret[961477])
  }
  type DecodeError[168098] val super[355761]:Error[167942] "super class"
  function IllegalArgumentError[168204].init[168121](const in arg this[168210]:IllegalArgumentError[168204], const  ref arg info[168118]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val super_tmp[462612]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (462614 'move' super_tmp[462612](462611 '.v' this[168210] super[355763]))
    (168129 call init[167916] super_tmp[462612] info[168118])
    val tmp[462617]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[679499]:Error[167942] "dead at end of block" "maybe param" "temp"
    (679502 'move' call_tmp[679499](462628 'cast' Error[167942] this[168210]))
    val chpl__thisAsParent[462625]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (544624 'move' chpl__thisAsParent[462625](1061165 call chpl__initCopy[961416] call_tmp[679499]))
    (462631 'setcid' chpl__thisAsParent[462625])
    (462633 'setcid' this[168210])
    (522201 return _void[55])
  }
  function IllegalArgumentError[168204].init[168140](const in arg this[168214]:IllegalArgumentError[168204], const  ref arg formal[168137]:string[26], const  ref arg info[168143]:string[26]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679504]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782350]:string[26] "temp"
    (168164 call +[38342] "illegal argument '" formal[168137] ret_tmp[1782350])
    (1782353 'move' call_tmp[679504] ret_tmp[1782350])
    const-val call_tmp[679509]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782356]:string[26] "temp"
    (168183 call +[38342] call_tmp[679504] "': " ret_tmp[1782356])
    (1782359 'move' call_tmp[679509] ret_tmp[1782356])
    const-val call_tmp[679514]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782362]:string[26] "temp"
    (168186 call +[38342] call_tmp[679509] info[168143] ret_tmp[1782362])
    (1782365 'move' call_tmp[679514] ret_tmp[1782362])
    const-val msg[168188]:string[26] "dead at end of block" "insert auto destroy"
    (544626 'move' msg[168188] call_tmp[679514])
    val super_tmp[462636]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (462638 'move' super_tmp[462636](462635 '.v' this[168214] super[355763]))
    (168199 call init[167916] super_tmp[462636] msg[168188])
    val tmp[462641]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[679526]:Error[167942] "dead at end of block" "maybe param" "temp"
    (679529 'move' call_tmp[679526](462652 'cast' Error[167942] this[168214]))
    val chpl__thisAsParent[462649]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (544628 'move' chpl__thisAsParent[462649](1070535 call chpl__initCopy[961416] call_tmp[679526]))
    (462655 'setcid' chpl__thisAsParent[462649])
    (462657 'setcid' this[168214])
    (1794341 call chpl__autoDestroy[1399678] msg[168188])
    (1794344 call chpl__autoDestroy[1399678] call_tmp[679509])
    (1794347 call chpl__autoDestroy[1399678] call_tmp[679504])
    (522203 return _void[55])
  }
  function IllegalArgumentError[168204].deinit[812241](const in arg this[812245]:IllegalArgumentError[168204]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1767525]
    val _parent_destructor_tmp_[1767520]:Error[167942] "temp"
    (1767527 'move' _parent_destructor_tmp_[1767520](1767521 'cast' Error[167942] this[812245]))
    (1767529 call deinit[811785] _parent_destructor_tmp_[1767520])
    (812253 return _void[55])
  }
  function _new[1061174](const  ref arg info[1061183]:string[26]) : IllegalArgumentError[168204] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1759813]:IllegalArgumentError[168204] "temp"
    val ret[1061213]:IllegalArgumentError[168204] "dead after last mention" "RVV" "temp"
    val initTemp[1061176]:IllegalArgumentError[168204] "dead after last mention" "temp"
    const-val call_tmp[1061220]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1061223 'move' call_tmp[1061220](1061234 'sizeof_bundle' IllegalArgumentError[168204]))
    const-val cast_tmp[1061237]:c_void_ptr[149] "dead after last mention" "temp"
    (1061239 'move' cast_tmp[1061237](1061191 call chpl_here_alloc[187754] call_tmp[1061220] 26))
    (1061194 'move' initTemp[1061176](1061241 'cast' IllegalArgumentError[168204] cast_tmp[1061237]))
    (1061196 'setcid' initTemp[1061176])
    (1061177 call init[168121] initTemp[1061176] info[1061183])
    val tmp[1061198]:IllegalArgumentError[168204] "dead after last mention" "temp"
    (1061202 'move' tmp[1061198] initTemp[1061176])
    (1061218 'move' ret[1061213] tmp[1061198])
    (1061215 return ret[1061213])
  }
  function _new[1070544](const  ref arg formal[1070553]:string[26], const  ref arg info[1070556]:string[26]) : IllegalArgumentError[168204] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1759823]:IllegalArgumentError[168204] "temp"
    val ret[1070584]:IllegalArgumentError[168204] "dead after last mention" "RVV" "temp"
    val initTemp[1070546]:IllegalArgumentError[168204] "dead after last mention" "temp"
    const-val call_tmp[1070591]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1070594 'move' call_tmp[1070591](1070605 'sizeof_bundle' IllegalArgumentError[168204]))
    const-val cast_tmp[1070608]:c_void_ptr[149] "dead after last mention" "temp"
    (1070610 'move' cast_tmp[1070608](1070562 call chpl_here_alloc[187754] call_tmp[1070591] 26))
    (1070565 'move' initTemp[1070546](1070612 'cast' IllegalArgumentError[168204] cast_tmp[1070608]))
    (1070567 'setcid' initTemp[1070546])
    (1070547 call init[168140] initTemp[1070546] formal[1070553] info[1070556])
    val tmp[1070569]:IllegalArgumentError[168204] "dead after last mention" "temp"
    (1070573 'move' tmp[1070569] initTemp[1070546])
    (1070589 'move' ret[1070584] tmp[1070569])
    (1070586 return ret[1070584])
  }
  type IllegalArgumentError[168204] val super[355763]:Error[167942] "super class"
  function _ref(chpl_TaskErrors)[938870].append[168240](ref arg this[168308]:_ref(chpl_TaskErrors)[938870], const in arg err[168237]:Error[167942]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    {
      const-val tmp[168281]:chpl_localeID_t[209306] "dead after last mention" "const" "temp"
      const-val call_tmp[679531]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "maybe param" "temp"
      (679534 'move' call_tmp[679531](168278 '_wide_get_locale' this[168308]))
      (168282 'move' tmp[168281] call_tmp[679531])
      {
        ref call_tmp[679538]:_ref(chpl_LocalSpinlock)[939001] "dead after last mention" "maybe param" "temp"
        (679541 'move' call_tmp[679538](361458 call _errorsLock[812281] this[168308]))
        (168248 call lock[187289] call_tmp[679538])
        ref call_tmp[679547]:_ref(Error)[938950] "dead at end of block" "maybe param" "temp"
        (679550 'move' call_tmp[679547](388527 call _head[812255] this[168308]))
        val tmp[168252]:Error[167942] "dead at end of block" "insert auto destroy"
        val coerce_tmp[1229214]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1229218 'move' coerce_tmp[1229214](1229216 'deref' call_tmp[679547]))
        (1794350 '=' tmp[168252] coerce_tmp[1229214])
        (544630 'noop')
        ref call_tmp[679554]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1229221]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1229226 'move' coerce_tmp[1229221] err[168237])
        (679557 'move' call_tmp[679554](168259 call _next[811655] coerce_tmp[1229221]))
        (168263 call =[1229257] call_tmp[679554] tmp[168252])
        ref call_tmp[679561]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
        (679564 'move' call_tmp[679561](388533 call _head[812255] this[168308]))
        val coerce_tmp[1229294]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1229300 'move' coerce_tmp[1229294] err[168237])
        (168268 call =[1229257] call_tmp[679561] coerce_tmp[1229294])
        ref call_tmp[679568]:_ref(chpl_LocalSpinlock)[939001] "dead after last mention" "maybe param" "temp"
        (679571 'move' call_tmp[679568](361464 call _errorsLock[812281] this[168308]))
        (168276 call unlock[187381] call_tmp[679568])
      }
    }
    (522205 return _void[55])
  }
  function _ref(chpl_TaskErrors)[938870].empty[168294](const  ref arg this[168312]:_ref(chpl_TaskErrors)[938870]) : bool[10] "method" "primary method" "resolved"
  {
    val ret[522209]:bool[10] "dead after last mention" "RVV" "temp"
    ref call_tmp[679577]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
    (679580 'move' call_tmp[679577](388539 call _head[812255] this[168312]))
    const-val call_tmp[679582]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1232308]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232312 'move' coerce_tmp[1232308](1232310 'deref' call_tmp[679577]))
    val coerce_tmp[1232314]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232319 'move' coerce_tmp[1232314](1232316 'cast' object[22] coerce_tmp[1232308]))
    (679585 'move' call_tmp[679582](168298 call ==[1146] coerce_tmp[1232314] nil[44]))
    (522214 'move' ret[522209] call_tmp[679582])
    (522211 return ret[522209])
  }
  function _ref(chpl_TaskErrors)[938870]._head[812255](ref arg this[812259]:_ref(chpl_TaskErrors)[938870]) ref : _ref(Error)[938950] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812269]:_ref(Error)[938950] "dead after last mention" "RVV" "temp"
    ref call_tmp[812276]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
    (812279 'move' call_tmp[812276](812263 '.' this[812259] _head[168224]))
    (812274 'move' ret[812269] call_tmp[812276])
    (812271 return ret[812269])
  }
  function _ref(chpl_TaskErrors)[938870]._errorsLock[812281](ref arg this[812285]:_ref(chpl_TaskErrors)[938870]) ref : _ref(chpl_LocalSpinlock)[939001] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[812295]:_ref(chpl_LocalSpinlock)[939001] "dead after last mention" "RVV" "temp"
    ref call_tmp[812302]:_ref(chpl_LocalSpinlock)[939001] "dead after last mention" "maybe param" "temp"
    (812305 'move' call_tmp[812302](812289 '.' this[812285] _errorsLock[168229]))
    (812300 'move' ret[812295] call_tmp[812302])
    (812297 return ret[812295])
  }
  function _ref(chpl_TaskErrors)[938870].init[812307](ref arg this[812310]:_ref(chpl_TaskErrors)[938870], in arg _head[812313]:Error[167942], const  ref arg _errorsLock[812328]:chpl_LocalSpinlock[187398]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[943105]:chpl_LocalSpinlock[187398] "dead at end of block" "no auto destroy" "no copy" "temp"
    (943108 'move' _formal_tmp__errorsLock[943105] _errorsLock[812328])
    (812342 '.=' this[812310] _head[168224] _head[812313])
    (812345 '.=' this[812310] _errorsLock[168229] _formal_tmp__errorsLock[943105])
    (812349 return _void[55])
  }
  function init_default__errorsLock[938981](ref arg _retArg[1784418]:_ref(chpl_LocalSpinlock)[939001]) : void[4] "compiler generated" "default actual function" "fn returns via _retArg" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    const-val ret[938983]:chpl_LocalSpinlock[187398] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _errorsLock[938988]:chpl_LocalSpinlock[187398] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val default_arg_l[943070]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1784424]:AtomicBool[45874] "temp"
    (943072 call init_default_l[942757] ret_tmp[1784424])
    (1784427 'move' default_arg_l[943070] ret_tmp[1784424])
    (942747 call init[820360] _errorsLock[938988] default_arg_l[943070])
    (942743 'move' ret[938983] _errorsLock[938988])
    (1784420 '=' _retArg[1784418] ret[938983])
    (1784422 return _void[55])
  }
  function init_default__head[938900]() : Error[167942] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[938902]:Error[167942] "dead after last mention" "RVV" "maybe param" "temp"
    val _head[938907]:Error[167942] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val tmp[938911]:Error[167942] "dead after last mention" "temp"
    val _formal_type[938913]:Error[167942] "dead after last mention" "temp" "type variable"
    (938921 'move' tmp[938911](938969 'cast' Error[167942] nil[44]))
    (938924 'move' _head[938907] tmp[938911])
    (938966 'move' ret[938902] _head[938907])
    (938905 return ret[938902])
  }
  function _ref(chpl_TaskErrors)[938870].deinit[812416](const  ref arg this[812420]:_ref(chpl_TaskErrors)[938870]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    label _enddeinit[1767534]
    ref _field_destructor_tmp_[1767532]:_ref(chpl_LocalSpinlock)[939001] "temp"
    (1767539 'move' _field_destructor_tmp_[1767532](1767536 '.' this[812420] _errorsLock[168229]))
    (1767541 call deinit[820433] _field_destructor_tmp_[1767532])
    (812428 return _void[55])
  }
  type chpl_TaskErrors[168306] val _head[168224]:Error[167942] val _errorsLock[168229]:chpl_LocalSpinlock[187398]
  function TaskErrors[169660].init[168342](const in arg this[169662]:TaskErrors[169660], ref arg group[168339]:_ref(chpl_TaskErrors)[938870]) : void[4] "inline" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val super_tmp[462703]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (462711 'move' super_tmp[462703](462704 '.v' this[169662] super[355765]))
    (462707 call init[167900] super_tmp[462703])
    val tmp[462663]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[679592]:Error[167942] "dead at end of block" "maybe param" "temp"
    (679595 'move' call_tmp[679592](462674 'cast' Error[167942] this[169662]))
    val chpl__thisAsParent[462671]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (544632 'move' chpl__thisAsParent[462671](1233936 call chpl__initCopy[961416] call_tmp[679592]))
    (462677 'setcid' chpl__thisAsParent[462671])
    ref call_tmp[679599]:_ref(Error)[938950] "dead at end of block" "maybe param" "temp"
    (679602 'move' call_tmp[679599](168350 call _head[812255] group[168339]))
    val head[168353]:Error[167942] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1233942]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1233946 'move' coerce_tmp[1233942](1233944 'deref' call_tmp[679599]))
    (1794353 '=' head[168353] coerce_tmp[1233942])
    (544634 'noop')
    ref call_tmp[679606]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
    (679609 'move' call_tmp[679606](168359 call _head[812255] group[168339]))
    (168363 call =[1233950] call_tmp[679606] nil[44])
    val tmp[462679]:int(64)[13] "dead after last mention" "temp"
    (1237699 'move' tmp[462679] 0)
    (462684 '.=' this[169662] nErrors[168321] tmp[462679])
    val tmp[462688]:c_ptr(owned Error?)[1232365] "dead after last mention" "temp"
    val call_tmp[679611]:owned Error?[962212] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679616]:c_ptr(owned Error?)[1232365] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1237704 'move' tmp[462688](1237702 'cast' c_ptr(owned Error?)[1232365] nil[44]))
    (462697 '.=' this[169662] errorsArray[168332] tmp[462688])
    (462702 'setcid' this[169662])
    val cur[168376]:Error[167942] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544636]:Error[167942] "dead after last mention" "maybe param" "temp" "type variable"
    val n[168381]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544650 'move' n[168381] 0)
    (544647 'move' cur[168376](1234013 call chpl__initCopy[963173] head[168353]))
    {
      val tmp[168491]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1234016]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1234021 'move' coerce_tmp[1234016](1234018 'cast' object[22] cur[168376]))
      (679624 'move' call_tmp[679621](168512 call !=[1485] coerce_tmp[1234016] nil[44]))
      (168515 'move' tmp[168491] call_tmp[679621])
      WhileDo[168496]
      {
        {
          val call_tmp[679626]:Error[167942] "dead at end of block" "expr temp" "maybe param" "temp"
          (679629 'move' call_tmp[679626](168395 call postfix![963573] cur[168376]))
          ref call_tmp[679633]:_ref(Error)[938950] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1234025]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1234030 'move' coerce_tmp[1234025] call_tmp[679626])
          (679636 'move' call_tmp[679633](168397 call _next[811655] coerce_tmp[1234025]))
          val curnext[168400]:Error[167942] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1234035]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1234039 'move' coerce_tmp[1234035](1234037 'deref' call_tmp[679633]))
          (1794356 '=' curnext[168400] coerce_tmp[1234035])
          (544652 'noop')
          val call_tmp[679638]:TaskErrors[169660] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1234218]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1234223 'move' coerce_tmp[1234218] cur[168376])
          (679641 'move' call_tmp[679638](168412 call _cast[1234119] coerce_tmp[1234218]))
          val asTaskErr[168414]:TaskErrors[169660] "dead at end of block" "insert auto destroy"
          (544654 'move' asTaskErr[168414](1234346 call chpl__initCopy[1234237] call_tmp[679638]))
          const-val call_tmp[679643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1234349]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1234354 'move' coerce_tmp[1234349](1234351 'cast' object[22] asTaskErr[168414]))
          (679646 'move' call_tmp[679643](168420 call ==[1146] coerce_tmp[1234349] nil[44]))
          const-val call_tmp[679648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679651 'move' call_tmp[679648] call_tmp[679643])
          if call_tmp[679648]
          {
            (168424 call +=[451373] n[168381] 1)
          }
          {
            {
              ref _indexOfInterest[168447]:_ref(owned Error?)[962221] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168448]:_ic_these_TaskErrors[1234717] "dead at end of block" "expr temp" "temp"
              val call_tmp[679653]:TaskErrors[169660] "dead at end of block" "expr temp" "maybe param" "temp"
              (679656 'move' call_tmp[679653] asTaskErr[168414])
              (168457 'move' _iterator[168448](168455 call _getIterator[1234673] call_tmp[679653]))
              {
                val ret[1850623]:_ir_these_TaskErrors[1234723] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1850625]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1850627]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1850629]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                const-val this[1850806]:TaskErrors[169660] "temp"
                (1850811 'move' this[1850806](1850808 '.v' _iterator[168448] F0_this[1947835]))
                (1850631 'move' call_tmp[1850629](1850634 call nErrors[814070] this[1850806]))
                const-val call_tmp[1850636]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1850638]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1850640 'move' coerce_tmp[1850638](1850642 'deref' call_tmp[1850629]))
                const-val ret_tmp[1850644]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                (1850647 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1850638] ret_tmp[1850644])
                (1850651 'move' call_tmp[1850636] ret_tmp[1850644])
                (1850654 'move' _iterator[1850627](1850657 call _getIterator[1100762] call_tmp[1850636]))
                {
                  val ret[1907093]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1907095]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1907097]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1907099]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1907101]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                  const-val low[1907578]:int(64)[13] "temp"
                  (1907583 'move' low[1907578](1907580 '.v' _iterator[1850627] F0_low[1952071]))
                  const-val count[1907585]:int(64)[13] "temp"
                  (1907590 'move' count[1907585](1907587 '.v' _iterator[1850627] F1_count[1952075]))
                  (1907104 call chpl_direct_counted_range_iter_helper[1099055] low[1907578] count[1907585] ret_tmp[1907101])
                  (1907108 'move' call_tmp[1907099] ret_tmp[1907101])
                  (1907111 'move' _iterator[1907097](1907114 call _getIterator[1100512] call_tmp[1907099]))
                  {
                    val ret[1907117]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                    val call_tmp[1907119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1907121]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1907123]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1907125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1907127]:int(64)[13] "temp"
                    (1907129 'move' count[1907127](1907131 '.v' _iterator[1907097] F1_count[1956547]))
                    (1907134 'move' call_tmp[1907125](1907137 call <[946327] count[1907127]))
                    (1907139 'move' tmp[1907123] call_tmp[1907125])
                    (1907142 'move' tmp[1907121] call_tmp[1907125])
                    const-val call_tmp[1907145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1907147 'move' call_tmp[1907145] call_tmp[1907125])
                    if call_tmp[1907125]
                    {
                      (1907153 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1907156]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1907158]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1907160]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1907162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1907164]:int(64)[13] "temp"
                    (1907166 'move' count[1907164](1907168 '.v' _iterator[1907097] F1_count[1956547]))
                    (1907171 'move' call_tmp[1907162](1907174 call ==[435686] count[1907164] 0))
                    (1907177 'move' tmp[1907160] call_tmp[1907162])
                    if call_tmp[1907162]
                    {
                      const-val tmp[1907182]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1907184]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1907186]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1907188]:int(64)[13] "temp"
                      (1907190 'move' low[1907188](1907192 '.v' _iterator[1907097] F0_low[1956543]))
                      (1907195 'move' call_tmp[1907186](1907198 call _cast[974684] low[1907188]))
                      const-val call_tmp[1907200]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1907202]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1907204 'move' coerce_tmp[1907202](1907206 'cast' uint(64)[115] 1))
                      (1907209 'move' call_tmp[1907200](1907212 call -[957077] call_tmp[1907186]))
                      const-val call_tmp[1907214]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1907216 'move' call_tmp[1907214](1907219 call _cast[951465] call_tmp[1907200]))
                      const-val ret_tmp[1907221]:2*int(64)[1037179] "temp"
                      const-val low[1907223]:int(64)[13] "temp"
                      (1907225 'move' low[1907223](1907227 '.v' _iterator[1907097] F0_low[1956543]))
                      (1907231 call _build_tuple[1037137] low[1907223] call_tmp[1907214] ret_tmp[1907221])
                      (1907235 'move' tmp[1907182] ret_tmp[1907221])
                      (1907238 'move' tmp[1907158] tmp[1907182])
                    }
                    {
                      const-val tmp[1907242]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1907244]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1907246]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1907248]:int(64)[13] "temp"
                      (1907250 'move' count[1907248](1907252 '.v' _iterator[1907097] F1_count[1956547]))
                      (1907255 'move' call_tmp[1907246] count[1907248])
                      const-val call_tmp[1907258]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1907260]:int(64)[13] "temp"
                      (1907262 'move' count[1907260](1907264 '.v' _iterator[1907097] F1_count[1956547]))
                      (1907267 'move' call_tmp[1907258](1907270 call -[957110] count[1907260]))
                      const-val call_tmp[1907272]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1907274]:int(64)[13] "temp"
                      (1907276 'move' low[1907274](1907278 '.v' _iterator[1907097] F0_low[1956543]))
                      (1907281 'move' call_tmp[1907272](1907284 call +[439694] low[1907274] call_tmp[1907258]))
                      const-val ret_tmp[1907287]:2*int(64)[1037179] "temp"
                      const-val low[1907289]:int(64)[13] "temp"
                      (1907291 'move' low[1907289](1907293 '.v' _iterator[1907097] F0_low[1956543]))
                      (1907297 call _build_tuple[1037137] low[1907289] call_tmp[1907272] ret_tmp[1907287])
                      (1907301 'move' tmp[1907242] ret_tmp[1907287])
                      (1907304 'move' tmp[1907158] tmp[1907242])
                    }
                    (1907308 '=' tmp[1907156] tmp[1907158])
                    (1907311 'noop')
                    1
                    ref call_tmp[1907313]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1907315 'move' call_tmp[1907313](1907317 '.' tmp[1907156] x0[1037175]))
                    const-val start[1907320]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1907322]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1907324 'move' coerce_tmp[1907322](1907326 'deref' call_tmp[1907313]))
                    (1907328 '=' start[1907320] coerce_tmp[1907322])
                    (1907331 'noop')
                    ref call_tmp[1907332]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1907334 'move' call_tmp[1907332](1907336 '.' tmp[1907156] x1[1037177]))
                    const-val end[1907339]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1907341]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1907343 'move' coerce_tmp[1907341](1907345 'deref' call_tmp[1907332]))
                    (1907347 '=' end[1907339] coerce_tmp[1907341])
                    (1907350 'noop')
                    val _indexOfInterest[1907351]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1907353]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1907355]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1907357]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                    (1907360 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1907322] coerce_tmp[1907341] ret_tmp[1907357])
                    (1907364 'move' call_tmp[1907355] ret_tmp[1907357])
                    (1907367 'move' _iterator[1907353](1907370 call _getIterator[1100258] call_tmp[1907355]))
                    {
                      val ret[1936052]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                      val call_tmp[1936054]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1936057 call chpl_range_check_stride[1099801])
                      val i[1936058]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1936060]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1936062 'move' i[1936058] 0)
                      val call_tmp[1936065]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1936067]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1936302]:int(64)[13] "temp"
                      (1936307 'move' low[1936302](1936304 '.v' _iterator[1907353] F0_low[1958041]))
                      (1936069 'move' default_arg_first[1936067](1936072 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1936302]))
                      const-val default_arg_last[1936074]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1936309]:int(64)[13] "temp"
                      (1936314 'move' high[1936309](1936311 '.v' _iterator[1907353] F1_high[1958045]))
                      (1936076 'move' default_arg_last[1936074](1936079 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1936309]))
                      const-val _return_tmp_[1936081]:bool[10] "dead after last mention" "temp"
                      const-val low[1936316]:int(64)[13] "temp"
                      (1936321 'move' low[1936316](1936318 '.v' _iterator[1907353] F0_low[1958041]))
                      const-val high[1936323]:int(64)[13] "temp"
                      (1936328 'move' high[1936323](1936325 '.v' _iterator[1907353] F1_high[1958045]))
                      (1936083 'move' _return_tmp_[1936081](1936086 call chpl_checkIfRangeIterWillOverflow[1093055] low[1936316] high[1936323] 1 default_arg_first[1936067] default_arg_last[1936074] 1))
                      CForLoop[1936093]
                      {
                        const-val yret[1936108]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1936110 'move' yret[1936108] i[1936058])
                        const-val _yieldedIndex[1936124]:int(64)[13] "temp"
                        (1936300 'move' _yieldedIndex[1936124] i[1936058])
                        {
                          const-val i[1936126]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1936128 'move' i[1936126] _yieldedIndex[1936124])
                          const-val yret[1936131]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1936133 'move' yret[1936131] _yieldedIndex[1936124])
                          const-val _yieldedIndex[1936136]:int(64)[13] "temp"
                          (1936138 'move' _yieldedIndex[1936136] _yieldedIndex[1936124])
                          {
                            const-val i[1936142]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1936144 'move' i[1936142] _yieldedIndex[1936136])
                            const-val yret[1936147]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1936149 'move' yret[1936147] _yieldedIndex[1936136])
                            const-val _yieldedIndex[1936152]:int(64)[13] "temp"
                            (1936154 'move' _yieldedIndex[1936152] _yieldedIndex[1936136])
                            {
                              const-val i[1936158]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1936160 'move' i[1936158] _yieldedIndex[1936152])
                              ref call_tmp[1936163]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1936165]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                              const-val this[1936167]:TaskErrors[169660] "temp"
                              (1936169 'move' this[1936167](1936171 '.v' _iterator[168448] F0_this[1947835]))
                              (1936174 'move' _this_tmp_[1936165](1936177 call errorsArray[814096] this[1936167]))
                              val coerce_tmp[1936179]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936181 'move' coerce_tmp[1936179](1936183 'deref' _this_tmp_[1936165]))
                              (1936185 'move' call_tmp[1936163](1936188 call this[1232503] coerce_tmp[1936179] _yieldedIndex[1936152]))
                              const-val call_tmp[1936191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1936193]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936195 'move' coerce_tmp[1936193](1936198 call borrow[1232578] call_tmp[1936163]))
                              val coerce_tmp[1936200]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936202 'move' coerce_tmp[1936200](1936204 'cast' object[22] coerce_tmp[1936193]))
                              (1936207 'move' call_tmp[1936191](1936210 call !=[1485] coerce_tmp[1936200] nil[44]))
                              const-val call_tmp[1936213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1936215 'move' call_tmp[1936213] call_tmp[1936191])
                              if call_tmp[1936191]
                              {
                                ref yret[1936220]:_ref(owned Error?)[962221] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1936222]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1936224]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                                const-val this[1936226]:TaskErrors[169660] "temp"
                                (1936228 'move' this[1936226](1936230 '.v' _iterator[168448] F0_this[1947835]))
                                (1936233 'move' _this_tmp_[1936224](1936236 call errorsArray[814096] this[1936226]))
                                val coerce_tmp[1936238]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1936240 'move' coerce_tmp[1936238](1936242 'deref' _this_tmp_[1936224]))
                                (1936244 'move' call_tmp[1936222](1936247 call this[1232503] coerce_tmp[1936238] i[1936158]))
                                ref _yieldedIndex[1936250]:_ref(owned Error?)[962221] "temp"
                                (1936252 'move' _yieldedIndex[1936250] call_tmp[1936222])
                                {
                                  ref e[1936256]:_ref(owned Error?)[962221] "index var" "insert auto destroy"
                                  (1936258 'move' e[1936256] _yieldedIndex[1936250])
                                  {
                                    const-val call_tmp[1936262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1936264]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936266 'move' coerce_tmp[1936264](1936269 call borrow[1232578] e[1936256]))
                                    val coerce_tmp[1936271]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936273 'move' coerce_tmp[1936271](1936275 'cast' object[22] coerce_tmp[1936264]))
                                    (1936278 'move' call_tmp[1936262](1936281 call !=[1485] coerce_tmp[1936271] nil[44]))
                                    const-val call_tmp[1936284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1936286 'move' call_tmp[1936284] call_tmp[1936262])
                                    if call_tmp[1936284]
                                    {
                                      (1936292 call +=[451373] n[168381] 1)
                                    }
                                  }
                                  label _continueLabel[1936296]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1936330]:int(64)[13] "temp"
                          (1936335 'move' low[1936330](1936332 '.v' _iterator[1907353] F0_low[1958041]))
                          (1936095 '=' i[1936058] low[1936330])
                        }
                        {
                          const-val high[1936337]:int(64)[13] "temp"
                          (1936342 'move' high[1936337](1936339 '.v' _iterator[1907353] F1_high[1958045]))
                          (1936099 '<=' i[1936058] high[1936337])
                        }
                        {
                          val call_tmp[1936103]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1936105 '+=' i[1936058] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1936120]
                    }
                    (1907418 call _freeIterator[1100431] _iterator[1907353])
                    (1907421 call chpl__autoDestroy[1472606] tmp[1907156])
                    label _endchpl_direct_counted_range_iter_helper[1907423]
                  }
                  (1907426 call _freeIterator[1100681] _iterator[1907097])
                  label _endchpl_direct_counted_range_iter[1907428]
                }
                (1850755 call _freeIterator[1100931] _iterator[1850627])
                label _endthese[1850757]
              }
              label _breakLabel[168453]
              (1794365 call _freeIterator[1234974] _iterator[168448])
            }
          }
          (168488 call =[1229257] cur[168376] curnext[168400])
        }
        label _continueLabel[168494]
        const-val call_tmp[679668]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1235059]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1235064 'move' coerce_tmp[1235059](1235061 'cast' object[22] cur[168376]))
        (679671 'move' call_tmp[679668](168502 call !=[1485] coerce_tmp[1235059] nil[44]))
        (168505 'move' tmp[168491] call_tmp[679668])
        tmp[168491]
      }
      label _breakLabel[168495]
    }
    ref call_tmp[679675]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (679678 'move' call_tmp[679675](388567 call nErrors[814070] this[169662]))
    (168520 call =[435385] call_tmp[679675] n[168381])
    ref call_tmp[679682]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "maybe param" "temp"
    (679685 'move' call_tmp[679682](388575 call errorsArray[814096] this[169662]))
    val call_tmp[679687]:owned Error?[962212] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679692]:c_ptr(owned Error?)[1232365] "dead after last mention" "expr temp" "maybe param" "temp"
    (679695 'move' call_tmp[679692](168531 call c_calloc[1235078] n[168381]))
    (168532 call =[1235403] call_tmp[679682] call_tmp[679692])
    val idx[168536]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544656 'move' idx[168536] 0)
    (168542 call =[1229257] cur[168376] head[168353])
    {
      val tmp[168687]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[679697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1235431]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1235436 'move' coerce_tmp[1235431](1235433 'cast' object[22] cur[168376]))
      (679700 'move' call_tmp[679697](168708 call !=[1485] coerce_tmp[1235431] nil[44]))
      (168711 'move' tmp[168687] call_tmp[679697])
      WhileDo[168692] hazard
      {
        {
          val call_tmp[679702]:Error[167942] "dead at end of block" "expr temp" "maybe param" "temp"
          (679705 'move' call_tmp[679702](168550 call postfix![963573] cur[168376]))
          ref call_tmp[679709]:_ref(Error)[938950] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1235440]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1235445 'move' coerce_tmp[1235440] call_tmp[679702])
          (679712 'move' call_tmp[679709](168552 call _next[811655] coerce_tmp[1235440]))
          val curnext[168555]:Error[167942] "dead at end of block" "insert auto destroy"
          val coerce_tmp[1235450]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (1235454 'move' coerce_tmp[1235450](1235452 'deref' call_tmp[679709]))
          (1794359 '=' curnext[168555] coerce_tmp[1235450])
          (544658 'noop')
          val call_tmp[679714]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
          (679717 'move' call_tmp[679714](168561 call postfix![963573] cur[168376]))
          ref call_tmp[679721]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1235458]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1235463 'move' coerce_tmp[1235458] call_tmp[679714])
          (679724 'move' call_tmp[679721](168563 call _next[811655] coerce_tmp[1235458]))
          (168567 call =[1233950] call_tmp[679721] nil[44])
          val call_tmp[679726]:TaskErrors[169660] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[1235467]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1235472 'move' coerce_tmp[1235467] cur[168376])
          (679729 'move' call_tmp[679726](168577 call _cast[1234119] coerce_tmp[1235467]))
          val asTaskErr[168579]:TaskErrors[169660] "dead at end of block" "insert auto destroy"
          (544660 'move' asTaskErr[168579](1235475 call chpl__initCopy[1234237] call_tmp[679726]))
          const-val call_tmp[679731]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1235478]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1235483 'move' coerce_tmp[1235478](1235480 'cast' object[22] asTaskErr[168579]))
          (679734 'move' call_tmp[679731](168585 call ==[1146] coerce_tmp[1235478] nil[44]))
          const-val call_tmp[679736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (679739 'move' call_tmp[679736] call_tmp[679731])
          if call_tmp[679736]
          {
            ref call_tmp[679743]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
            ref _this_tmp_[1235487]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
            (1235489 'move' _this_tmp_[1235487](388591 call errorsArray[814096] this[169662]))
            val coerce_tmp[1235494]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (1235498 'move' coerce_tmp[1235494](1235496 'deref' _this_tmp_[1235487]))
            (679746 'move' call_tmp[679743](168590 call this[1232503] coerce_tmp[1235494] idx[168536]))
            val call_tmp[679750]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
            (679753 'move' call_tmp[679750](168595 call postfix![963573] cur[168376]))
            (168598 call retain[1235516] call_tmp[679743] call_tmp[679750])
            (168603 call +=[451373] idx[168536] 1)
          }
          {
            {
              ref _indexOfInterest[168638]:_ref(owned Error?)[962221] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[168639]:_ic_these_TaskErrors[1234717] "dead at end of block" "expr temp" "temp"
              val call_tmp[679755]:TaskErrors[169660] "dead at end of block" "expr temp" "maybe param" "temp"
              (679758 'move' call_tmp[679755] asTaskErr[168579])
              const-val call_tmp[679762]:_ir_these_TaskErrors[1234723] "dead at end of block" "maybe param" "temp"
              val coerce_tmp[1235754]:TaskErrors[169660] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1235759 'move' coerce_tmp[1235754] call_tmp[679755])
              const-val ret_tmp[1783620]:_ir_these_TaskErrors[1234723] "temp"
              (168614 call these[168866] coerce_tmp[1235754] ret_tmp[1783620])
              (1783623 'move' call_tmp[679762] ret_tmp[1783620])
              (168648 'move' _iterator[168639](168646 call _getIterator[1234732] call_tmp[679762]))
              {
                val ret[1850828]:_ir_these_TaskErrors[1234723] "dead at end of block" "RVV" "temp"
                val _indexOfInterest[1850830]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1850832]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1850834]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
                const-val this[1851036]:TaskErrors[169660] "temp"
                (1851041 'move' this[1851036](1851038 '.v' _iterator[168639] F0_this[1947835]))
                (1850836 'move' call_tmp[1850834](1850839 call nErrors[814070] this[1851036]))
                const-val call_tmp[1850841]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1850843]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1850845 'move' coerce_tmp[1850843](1850847 'deref' call_tmp[1850834]))
                const-val ret_tmp[1850849]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
                (1850852 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1850843] ret_tmp[1850849])
                (1850856 'move' call_tmp[1850841] ret_tmp[1850849])
                (1850859 'move' _iterator[1850832](1850862 call _getIterator[1100762] call_tmp[1850841]))
                {
                  val ret[1907593]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
                  val _indexOfInterest[1907595]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                  val _iterator[1907597]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
                  const-val call_tmp[1907599]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val ret_tmp[1907601]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
                  const-val low[1908103]:int(64)[13] "temp"
                  (1908108 'move' low[1908103](1908105 '.v' _iterator[1850832] F0_low[1952071]))
                  const-val count[1908110]:int(64)[13] "temp"
                  (1908115 'move' count[1908110](1908112 '.v' _iterator[1850832] F1_count[1952075]))
                  (1907604 call chpl_direct_counted_range_iter_helper[1099055] low[1908103] count[1908110] ret_tmp[1907601])
                  (1907608 'move' call_tmp[1907599] ret_tmp[1907601])
                  (1907611 'move' _iterator[1907597](1907614 call _getIterator[1100512] call_tmp[1907599]))
                  {
                    val ret[1907617]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                    val call_tmp[1907619]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    const-val tmp[1907621]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val tmp[1907623]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    const-val call_tmp[1907625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1907627]:int(64)[13] "temp"
                    (1907629 'move' count[1907627](1907631 '.v' _iterator[1907597] F1_count[1956547]))
                    (1907634 'move' call_tmp[1907625](1907637 call <[946327] count[1907627]))
                    (1907639 'move' tmp[1907623] call_tmp[1907625])
                    (1907642 'move' tmp[1907621] call_tmp[1907625])
                    const-val call_tmp[1907645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1907647 'move' call_tmp[1907645] call_tmp[1907625])
                    if call_tmp[1907625]
                    {
                      (1907653 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                    }
                    const-val tmp[1907656]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1907658]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1907660]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1907662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val count[1907664]:int(64)[13] "temp"
                    (1907666 'move' count[1907664](1907668 '.v' _iterator[1907597] F1_count[1956547]))
                    (1907671 'move' call_tmp[1907662](1907674 call ==[435686] count[1907664] 0))
                    (1907677 'move' tmp[1907660] call_tmp[1907662])
                    if call_tmp[1907662]
                    {
                      const-val tmp[1907682]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1907684]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1907686]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1907688]:int(64)[13] "temp"
                      (1907690 'move' low[1907688](1907692 '.v' _iterator[1907597] F0_low[1956543]))
                      (1907695 'move' call_tmp[1907686](1907698 call _cast[974684] low[1907688]))
                      const-val call_tmp[1907700]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val coerce_tmp[1907702]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                      (1907704 'move' coerce_tmp[1907702](1907706 'cast' uint(64)[115] 1))
                      (1907709 'move' call_tmp[1907700](1907712 call -[957077] call_tmp[1907686]))
                      const-val call_tmp[1907714]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      (1907716 'move' call_tmp[1907714](1907719 call _cast[951465] call_tmp[1907700]))
                      const-val ret_tmp[1907721]:2*int(64)[1037179] "temp"
                      const-val low[1907723]:int(64)[13] "temp"
                      (1907725 'move' low[1907723](1907727 '.v' _iterator[1907597] F0_low[1956543]))
                      (1907731 call _build_tuple[1037137] low[1907723] call_tmp[1907714] ret_tmp[1907721])
                      (1907735 'move' tmp[1907682] ret_tmp[1907721])
                      (1907738 'move' tmp[1907658] tmp[1907682])
                    }
                    {
                      const-val tmp[1907742]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      val call_tmp[1907744]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val call_tmp[1907746]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1907748]:int(64)[13] "temp"
                      (1907750 'move' count[1907748](1907752 '.v' _iterator[1907597] F1_count[1956547]))
                      (1907755 'move' call_tmp[1907746] count[1907748])
                      const-val call_tmp[1907758]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val count[1907760]:int(64)[13] "temp"
                      (1907762 'move' count[1907760](1907764 '.v' _iterator[1907597] F1_count[1956547]))
                      (1907767 'move' call_tmp[1907758](1907770 call -[957110] count[1907760]))
                      const-val call_tmp[1907772]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val low[1907774]:int(64)[13] "temp"
                      (1907776 'move' low[1907774](1907778 '.v' _iterator[1907597] F0_low[1956543]))
                      (1907781 'move' call_tmp[1907772](1907784 call +[439694] low[1907774] call_tmp[1907758]))
                      const-val ret_tmp[1907787]:2*int(64)[1037179] "temp"
                      const-val low[1907789]:int(64)[13] "temp"
                      (1907791 'move' low[1907789](1907793 '.v' _iterator[1907597] F0_low[1956543]))
                      (1907797 call _build_tuple[1037137] low[1907789] call_tmp[1907772] ret_tmp[1907787])
                      (1907801 'move' tmp[1907742] ret_tmp[1907787])
                      (1907804 'move' tmp[1907658] tmp[1907742])
                    }
                    (1907808 '=' tmp[1907656] tmp[1907658])
                    (1907811 'noop')
                    1
                    ref call_tmp[1907813]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1907815 'move' call_tmp[1907813](1907817 '.' tmp[1907656] x0[1037175]))
                    const-val start[1907820]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1907822]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1907824 'move' coerce_tmp[1907822](1907826 'deref' call_tmp[1907813]))
                    (1907828 '=' start[1907820] coerce_tmp[1907822])
                    (1907831 'noop')
                    ref call_tmp[1907832]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1907834 'move' call_tmp[1907832](1907836 '.' tmp[1907656] x1[1037177]))
                    const-val end[1907839]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1907841]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1907843 'move' coerce_tmp[1907841](1907845 'deref' call_tmp[1907832]))
                    (1907847 '=' end[1907839] coerce_tmp[1907841])
                    (1907850 'noop')
                    val _indexOfInterest[1907851]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1907853]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1907855]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1907857]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                    (1907860 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1907822] coerce_tmp[1907841] ret_tmp[1907857])
                    (1907864 'move' call_tmp[1907855] ret_tmp[1907857])
                    (1907867 'move' _iterator[1907853](1907870 call _getIterator[1100258] call_tmp[1907855]))
                    {
                      val ret[1936345]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                      val call_tmp[1936347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1936350 call chpl_range_check_stride[1099801])
                      val i[1936351]:int(64)[13] "dead at end of block" "insert auto destroy"
                      val call_tmp[1936353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1936355 'move' i[1936351] 0)
                      val call_tmp[1936358]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      const-val default_arg_first[1936360]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val low[1936620]:int(64)[13] "temp"
                      (1936625 'move' low[1936620](1936622 '.v' _iterator[1907853] F0_low[1958041]))
                      (1936362 'move' default_arg_first[1936360](1936365 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1936620]))
                      const-val default_arg_last[1936367]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                      const-val high[1936627]:int(64)[13] "temp"
                      (1936632 'move' high[1936627](1936629 '.v' _iterator[1907853] F1_high[1958045]))
                      (1936369 'move' default_arg_last[1936367](1936372 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1936627]))
                      const-val _return_tmp_[1936374]:bool[10] "dead after last mention" "temp"
                      const-val low[1936634]:int(64)[13] "temp"
                      (1936639 'move' low[1936634](1936636 '.v' _iterator[1907853] F0_low[1958041]))
                      const-val high[1936641]:int(64)[13] "temp"
                      (1936646 'move' high[1936641](1936643 '.v' _iterator[1907853] F1_high[1958045]))
                      (1936376 'move' _return_tmp_[1936374](1936379 call chpl_checkIfRangeIterWillOverflow[1093055] low[1936634] high[1936641] 1 default_arg_first[1936360] default_arg_last[1936367] 1))
                      CForLoop[1936386] hazard
                      {
                        const-val yret[1936401]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1936403 'move' yret[1936401] i[1936351])
                        const-val _yieldedIndex[1936417]:int(64)[13] "temp"
                        (1936618 'move' _yieldedIndex[1936417] i[1936351])
                        {
                          const-val i[1936419]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1936421 'move' i[1936419] _yieldedIndex[1936417])
                          const-val yret[1936424]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1936426 'move' yret[1936424] _yieldedIndex[1936417])
                          const-val _yieldedIndex[1936429]:int(64)[13] "temp"
                          (1936431 'move' _yieldedIndex[1936429] _yieldedIndex[1936417])
                          {
                            const-val i[1936435]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1936437 'move' i[1936435] _yieldedIndex[1936429])
                            const-val yret[1936440]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1936442 'move' yret[1936440] _yieldedIndex[1936429])
                            const-val _yieldedIndex[1936445]:int(64)[13] "temp"
                            (1936447 'move' _yieldedIndex[1936445] _yieldedIndex[1936429])
                            {
                              const-val i[1936451]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1936453 'move' i[1936451] _yieldedIndex[1936445])
                              ref call_tmp[1936456]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                              ref _this_tmp_[1936458]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                              const-val this[1936460]:TaskErrors[169660] "temp"
                              (1936462 'move' this[1936460](1936464 '.v' _iterator[168639] F0_this[1947835]))
                              (1936467 'move' _this_tmp_[1936458](1936470 call errorsArray[814096] this[1936460]))
                              val coerce_tmp[1936472]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936474 'move' coerce_tmp[1936472](1936476 'deref' _this_tmp_[1936458]))
                              (1936478 'move' call_tmp[1936456](1936481 call this[1232503] coerce_tmp[1936472] _yieldedIndex[1936445]))
                              const-val call_tmp[1936484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              val coerce_tmp[1936486]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936488 'move' coerce_tmp[1936486](1936491 call borrow[1232578] call_tmp[1936456]))
                              val coerce_tmp[1936493]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                              (1936495 'move' coerce_tmp[1936493](1936497 'cast' object[22] coerce_tmp[1936486]))
                              (1936500 'move' call_tmp[1936484](1936503 call !=[1485] coerce_tmp[1936493] nil[44]))
                              const-val call_tmp[1936506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1936508 'move' call_tmp[1936506] call_tmp[1936484])
                              if call_tmp[1936484]
                              {
                                ref yret[1936513]:_ref(owned Error?)[962221] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1936515]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1936517]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                                const-val this[1936519]:TaskErrors[169660] "temp"
                                (1936521 'move' this[1936519](1936523 '.v' _iterator[168639] F0_this[1947835]))
                                (1936526 'move' _this_tmp_[1936517](1936529 call errorsArray[814096] this[1936519]))
                                val coerce_tmp[1936531]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1936533 'move' coerce_tmp[1936531](1936535 'deref' _this_tmp_[1936517]))
                                (1936537 'move' call_tmp[1936515](1936540 call this[1232503] coerce_tmp[1936531] i[1936451]))
                                ref _yieldedIndex[1936543]:_ref(owned Error?)[962221] "temp"
                                (1936545 'move' _yieldedIndex[1936543] call_tmp[1936515])
                                {
                                  ref e[1936549]:_ref(owned Error?)[962221] "index var" "insert auto destroy"
                                  (1936551 'move' e[1936549] _yieldedIndex[1936543])
                                  {
                                    const-val call_tmp[1936555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    val coerce_tmp[1936557]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936559 'move' coerce_tmp[1936557](1936562 call borrow[1232578] e[1936549]))
                                    val coerce_tmp[1936564]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936566 'move' coerce_tmp[1936564](1936568 'cast' object[22] coerce_tmp[1936557]))
                                    (1936571 'move' call_tmp[1936555](1936574 call !=[1485] coerce_tmp[1936564] nil[44]))
                                    const-val call_tmp[1936577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1936579 'move' call_tmp[1936577] call_tmp[1936555])
                                    if call_tmp[1936577]
                                    {
                                      ref call_tmp[1936584]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                                      ref _this_tmp_[1936586]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                                      (1936588 'move' _this_tmp_[1936586](1936591 call errorsArray[814096] this[169662]))
                                      val coerce_tmp[1936593]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                      (1936595 'move' coerce_tmp[1936593](1936597 'deref' _this_tmp_[1936586]))
                                      (1936599 'move' call_tmp[1936584](1936602 call this[1232503] coerce_tmp[1936593] idx[168536]))
                                      (1936606 call =[1235798] call_tmp[1936584] e[1936549])
                                      (1936610 call +=[451373] idx[168536] 1)
                                    }
                                  }
                                  label _continueLabel[1936614]
                                }
                              }
                            }
                          }
                        }
                        {
                          const-val low[1936648]:int(64)[13] "temp"
                          (1936653 'move' low[1936648](1936650 '.v' _iterator[1907853] F0_low[1958041]))
                          (1936388 '=' i[1936351] low[1936648])
                        }
                        {
                          const-val high[1936655]:int(64)[13] "temp"
                          (1936660 'move' high[1936655](1936657 '.v' _iterator[1907853] F1_high[1958045]))
                          (1936392 '<=' i[1936351] high[1936655])
                        }
                        {
                          val call_tmp[1936396]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1936398 '+=' i[1936351] 1)
                        }
                      }
                      label _endchpl_direct_param_stride_range_iter[1936413]
                    }
                    (1907918 call _freeIterator[1100431] _iterator[1907853])
                    (1907921 call chpl__autoDestroy[1472606] tmp[1907656])
                    label _endchpl_direct_counted_range_iter_helper[1907923]
                  }
                  (1907926 call _freeIterator[1100681] _iterator[1907597])
                  label _endchpl_direct_counted_range_iter[1907928]
                }
                (1850960 call _freeIterator[1100931] _iterator[1850832])
                label _endthese[1850962]
              }
              label _breakLabel[168644]
              (1794370 call _freeIterator[1234974] _iterator[168639])
            }
            (168675 call chpl__delete[1236716] asTaskErr[168579])
          }
          (168684 call =[1229257] cur[168376] curnext[168555])
        }
        label _continueLabel[168690]
        const-val call_tmp[679784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1237690]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1237695 'move' coerce_tmp[1237690](1237692 'cast' object[22] cur[168376]))
        (679787 'move' call_tmp[679784](168698 call !=[1485] coerce_tmp[1237690] nil[44]))
        (168701 'move' tmp[168687] call_tmp[679784])
        tmp[168687]
      }
      label _breakLabel[168691]
    }
    (522216 return _void[55])
  }
  function TaskErrors[169660].init[168723](const in arg this[169666]:TaskErrors[169660], const in arg err[168720]:Error[167942]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[462758]:Error[167942] "dead after last mention" "temporary of super field" "temp"
    (462766 'move' super_tmp[462758](462759 '.v' this[169666] super[355765]))
    (462762 call init[167900] super_tmp[462758])
    val tmp[462718]:Error[167942] "dead after last mention" "temp" "type variable"
    val call_tmp[679794]:Error[167942] "dead at end of block" "maybe param" "temp"
    (679797 'move' call_tmp[679794](462729 'cast' Error[167942] this[169666]))
    val chpl__thisAsParent[462726]:Error[167942] "dead at end of block" "insert auto destroy" "temp"
    (544662 'move' chpl__thisAsParent[462726](1714866 call chpl__initCopy[961416] call_tmp[679794]))
    (462732 'setcid' chpl__thisAsParent[462726])
    val tmp[462734]:int(64)[13] "dead after last mention" "temp"
    (462737 'move' tmp[462734] 1)
    (462739 '.=' this[169666] nErrors[168321] tmp[462734])
    val call_tmp[679799]:owned Error?[962212] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679804]:c_ptr(owned Error?)[1232365] "dead after last mention" "maybe param" "temp"
    (679807 'move' call_tmp[679804](168739 call c_calloc[1235078] 1))
    val call_tmp[679809]:owned Error?[962212] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[679814]:c_ptr(owned Error?)[1232365] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[462743]:c_ptr(owned Error?)[1232365] "dead after last mention" "temp"
    (462750 'move' tmp[462743](1714895 call chpl__initCopy[1714897] call_tmp[679804]))
    (462752 '.=' this[169666] errorsArray[168332] tmp[462743])
    (462757 'setcid' this[169666])
    ref call_tmp[679821]:_ref(Error)[938950] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1714917]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1714922 'move' coerce_tmp[1714917] err[168720])
    (679824 'move' call_tmp[679821](168751 call _next[811655] coerce_tmp[1714917]))
    (168755 call =[1233950] call_tmp[679821] nil[44])
    ref call_tmp[679828]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
    ref _this_tmp_[1714927]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
    (1714929 'move' _this_tmp_[1714927](388627 call errorsArray[814096] this[169666]))
    val coerce_tmp[1714934]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1714938 'move' coerce_tmp[1714934](1714936 'deref' _this_tmp_[1714927]))
    (679831 'move' call_tmp[679828](168761 call this[1232503] coerce_tmp[1714934] 0))
    (168767 call retain[1235516] call_tmp[679828] err[168720])
    (522218 return _void[55])
  }
  function TaskErrors[169660].deinit[168790](const in arg this[169674]:TaskErrors[169660]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[679857]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "maybe param" "temp"
    (679860 'move' call_tmp[679857](388643 call errorsArray[814096] this[169674]))
    const-val call_tmp[679862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1232448]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232452 'move' coerce_tmp[1232448](1232450 'deref' call_tmp[679857]))
    (679865 'move' call_tmp[679862](168857 call _cond_test[1232416] coerce_tmp[1232448]))
    if call_tmp[679862]
    {
      {
        val _indexOfInterest[168811]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[168812]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
        ref call_tmp[679869]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
        (679872 'move' call_tmp[679869](388654 call nErrors[814070] this[169674]))
        const-val call_tmp[679874]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1232485]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1232489 'move' coerce_tmp[1232485](1232487 'deref' call_tmp[679869]))
        const-val ret_tmp[1784342]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
        (168828 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1232485] ret_tmp[1784342])
        (1784345 'move' call_tmp[679874] ret_tmp[1784342])
        (168821 'move' _iterator[168812](168819 call _getIterator[1100762] call_tmp[679874]))
        {
          val ret[1851058]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1851060]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1851062]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1851064]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1851066]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
          const-val low[1851148]:int(64)[13] "temp"
          (1851153 'move' low[1851148](1851150 '.v' _iterator[168812] F0_low[1952071]))
          const-val count[1851155]:int(64)[13] "temp"
          (1851160 'move' count[1851155](1851157 '.v' _iterator[168812] F1_count[1952075]))
          (1851069 call chpl_direct_counted_range_iter_helper[1099055] low[1851148] count[1851155] ret_tmp[1851066])
          (1851073 'move' call_tmp[1851064] ret_tmp[1851066])
          (1851076 'move' _iterator[1851062](1851079 call _getIterator[1100512] call_tmp[1851064]))
          {
            val ret[1908118]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
            val call_tmp[1908120]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1908122]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1908124]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1908126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1908515]:int(64)[13] "temp"
            (1908520 'move' count[1908515](1908517 '.v' _iterator[1851062] F1_count[1956547]))
            (1908128 'move' call_tmp[1908126](1908131 call <[946327] count[1908515]))
            (1908133 'move' tmp[1908124] call_tmp[1908126])
            (1908136 'move' tmp[1908122] call_tmp[1908126])
            const-val call_tmp[1908139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1908141 'move' call_tmp[1908139] call_tmp[1908126])
            if call_tmp[1908126]
            {
              (1908147 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1908150]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1908152]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1908154]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1908156]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1908522]:int(64)[13] "temp"
            (1908527 'move' count[1908522](1908524 '.v' _iterator[1851062] F1_count[1956547]))
            (1908158 'move' call_tmp[1908156](1908161 call ==[435686] count[1908522] 0))
            (1908164 'move' tmp[1908154] call_tmp[1908156])
            if call_tmp[1908156]
            {
              const-val tmp[1908169]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1908171]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1908173]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1908529]:int(64)[13] "temp"
              (1908534 'move' low[1908529](1908531 '.v' _iterator[1851062] F0_low[1956543]))
              (1908175 'move' call_tmp[1908173](1908178 call _cast[974684] low[1908529]))
              const-val call_tmp[1908180]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1908182]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1908184 'move' coerce_tmp[1908182](1908186 'cast' uint(64)[115] 1))
              (1908189 'move' call_tmp[1908180](1908192 call -[957077] call_tmp[1908173]))
              const-val call_tmp[1908194]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1908196 'move' call_tmp[1908194](1908199 call _cast[951465] call_tmp[1908180]))
              const-val ret_tmp[1908201]:2*int(64)[1037179] "temp"
              const-val low[1908536]:int(64)[13] "temp"
              (1908541 'move' low[1908536](1908538 '.v' _iterator[1851062] F0_low[1956543]))
              (1908204 call _build_tuple[1037137] low[1908536] call_tmp[1908194] ret_tmp[1908201])
              (1908208 'move' tmp[1908169] ret_tmp[1908201])
              (1908211 'move' tmp[1908152] tmp[1908169])
            }
            {
              const-val tmp[1908215]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1908217]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1908219]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1908543]:int(64)[13] "temp"
              (1908548 'move' count[1908543](1908545 '.v' _iterator[1851062] F1_count[1956547]))
              (1908221 'move' call_tmp[1908219] count[1908543])
              const-val call_tmp[1908224]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1908550]:int(64)[13] "temp"
              (1908555 'move' count[1908550](1908552 '.v' _iterator[1851062] F1_count[1956547]))
              (1908226 'move' call_tmp[1908224](1908229 call -[957110] count[1908550]))
              const-val call_tmp[1908231]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1908557]:int(64)[13] "temp"
              (1908562 'move' low[1908557](1908559 '.v' _iterator[1851062] F0_low[1956543]))
              (1908233 'move' call_tmp[1908231](1908236 call +[439694] low[1908557] call_tmp[1908224]))
              const-val ret_tmp[1908239]:2*int(64)[1037179] "temp"
              const-val low[1908564]:int(64)[13] "temp"
              (1908569 'move' low[1908564](1908566 '.v' _iterator[1851062] F0_low[1956543]))
              (1908242 call _build_tuple[1037137] low[1908564] call_tmp[1908231] ret_tmp[1908239])
              (1908246 'move' tmp[1908215] ret_tmp[1908239])
              (1908249 'move' tmp[1908152] tmp[1908215])
            }
            (1908253 '=' tmp[1908150] tmp[1908152])
            (1908256 'noop')
            1
            ref call_tmp[1908258]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1908260 'move' call_tmp[1908258](1908262 '.' tmp[1908150] x0[1037175]))
            const-val start[1908265]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1908267]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1908269 'move' coerce_tmp[1908267](1908271 'deref' call_tmp[1908258]))
            (1908273 '=' start[1908265] coerce_tmp[1908267])
            (1908276 'noop')
            ref call_tmp[1908277]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1908279 'move' call_tmp[1908277](1908281 '.' tmp[1908150] x1[1037177]))
            const-val end[1908284]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1908286]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1908288 'move' coerce_tmp[1908286](1908290 'deref' call_tmp[1908277]))
            (1908292 '=' end[1908284] coerce_tmp[1908286])
            (1908295 'noop')
            val _indexOfInterest[1908296]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1908298]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1908300]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1908302]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
            (1908305 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1908267] coerce_tmp[1908286] ret_tmp[1908302])
            (1908309 'move' call_tmp[1908300] ret_tmp[1908302])
            (1908312 'move' _iterator[1908298](1908315 call _getIterator[1100258] call_tmp[1908300]))
            {
              val ret[1908318]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
              val call_tmp[1908320]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1908323 call chpl_range_check_stride[1099801])
              val i[1908324]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1908326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1908328 'move' i[1908324] 0)
              val call_tmp[1908331]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1908333]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1908335]:int(64)[13] "temp"
              (1908337 'move' low[1908335](1908339 '.v' _iterator[1908298] F0_low[1958041]))
              (1908342 'move' default_arg_first[1908333](1908345 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1908335]))
              const-val default_arg_last[1908347]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1908349]:int(64)[13] "temp"
              (1908351 'move' high[1908349](1908353 '.v' _iterator[1908298] F1_high[1958045]))
              (1908356 'move' default_arg_last[1908347](1908359 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1908349]))
              const-val _return_tmp_[1908361]:bool[10] "dead after last mention" "temp"
              const-val low[1908363]:int(64)[13] "temp"
              (1908365 'move' low[1908363](1908367 '.v' _iterator[1908298] F0_low[1958041]))
              const-val high[1908370]:int(64)[13] "temp"
              (1908372 'move' high[1908370](1908374 '.v' _iterator[1908298] F1_high[1958045]))
              (1908377 'move' _return_tmp_[1908361](1908380 call chpl_checkIfRangeIterWillOverflow[1093055] low[1908363] high[1908370] 1 default_arg_first[1908333] default_arg_last[1908347] 1))
              CForLoop[1908387] hazard
              {
                const-val yret[1908416]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1908418 'move' yret[1908416] i[1908324])
                const-val _yieldedIndex[1908421]:int(64)[13] "temp"
                (1908423 'move' _yieldedIndex[1908421] i[1908324])
                {
                  const-val i[1908427]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1908429 'move' i[1908427] _yieldedIndex[1908421])
                  const-val yret[1908432]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1908434 'move' yret[1908432] _yieldedIndex[1908421])
                  const-val _yieldedIndex[1908462]:int(64)[13] "temp"
                  (1908513 'move' _yieldedIndex[1908462] _yieldedIndex[1908421])
                  {
                    const-val i[1908464]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1908466 'move' i[1908464] _yieldedIndex[1908462])
                    const-val yret[1908469]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1908471 'move' yret[1908469] _yieldedIndex[1908462])
                    const-val _yieldedIndex[1908474]:int(64)[13] "temp"
                    (1908476 'move' _yieldedIndex[1908474] _yieldedIndex[1908462])
                    {
                      const-val i[1908480]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1908482 'move' i[1908480] _yieldedIndex[1908474])
                      {
                        ref call_tmp[1908486]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1908488]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                        (1908490 'move' _this_tmp_[1908488](1908493 call errorsArray[814096] this[169674]))
                        val coerce_tmp[1908495]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1908497 'move' coerce_tmp[1908495](1908499 'deref' _this_tmp_[1908488]))
                        (1908501 'move' call_tmp[1908486](1908504 call this[1232503] coerce_tmp[1908495] i[1908480]))
                        (1908508 call clear[1232797] call_tmp[1908486])
                      }
                      label _continueLabel[1908510]
                    }
                  }
                }
                {
                  const-val low[1908389]:int(64)[13] "temp"
                  (1908391 'move' low[1908389](1908393 '.v' _iterator[1908298] F0_low[1958041]))
                  (1908396 '=' i[1908324] low[1908389])
                }
                {
                  const-val high[1908400]:int(64)[13] "temp"
                  (1908402 'move' high[1908400](1908404 '.v' _iterator[1908298] F1_high[1958045]))
                  (1908407 '<=' i[1908324] high[1908400])
                }
                {
                  val call_tmp[1908411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1908413 '+=' i[1908324] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1908450]
            }
            (1908453 call _freeIterator[1100431] _iterator[1908298])
            (1908456 call chpl__autoDestroy[1472606] tmp[1908150])
            label _endchpl_direct_counted_range_iter_helper[1908458]
          }
          (1851105 call _freeIterator[1100681] _iterator[1851062])
          label _endchpl_direct_counted_range_iter[1851107]
        }
        label _breakLabel[168817]
        (1794375 call _freeIterator[1100931] _iterator[168812])
      }
      ref call_tmp[679890]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "maybe param" "temp"
      (679893 'move' call_tmp[679890](388659 call errorsArray[814096] this[169674]))
      val coerce_tmp[1233909]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1233913 'move' coerce_tmp[1233909](1233911 'deref' call_tmp[679890]))
      const-val coerce_tmp[1233915]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1233921 'move' coerce_tmp[1233915](1233917 'cast' c_void_ptr[149] coerce_tmp[1233909]))
      (168855 call c_free[207864] coerce_tmp[1233915])
    }
    label _enddeinit[1767229]
    val _parent_destructor_tmp_[1767224]:Error[167942] "temp"
    (1767231 'move' _parent_destructor_tmp_[1767224](1767225 'cast' Error[167942] this[169674]))
    (1767233 call deinit[811785] _parent_destructor_tmp_[1767224])
    (522222 return _void[55])
  }
  function TaskErrors[169660].these[168866](const in arg this[169678]:TaskErrors[169660], ref arg _retArg[1783650]:_ref(_ir_these_TaskErrors)[1234834]) : void[4] "fn returns via _retArg" "inline" "iterator fn" "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1948210]:_ir_these_TaskErrors[1234723] "temp"
    (1948212 '.=' _ir[1948210] F0_this[1947837] this[169678])
    (1948216 '=' _retArg[1783650] _ir[1948210])
    (1948219 return _void[55])
  }
  type _ic_these_TaskErrors[1234717] val super[1234718]:object[22] "super class" val more[1234720]:int(64)[13] const-val F0_this[1947835]:TaskErrors[169660] val F1__iterator[1947839]:_ic_chpl_direct_counted_range_iter[1100747] val F2__iterator[1947841]:_ic_chpl_direct_counted_range_iter_helper[1100497] const F3_tmp[1947843]:2*int(64)[1037179] val F4__iterator[1947845]:_ic_chpl_direct_param_stride_range_iter[1100243] val F5_i[1947847]:int(64)[13] ref value[1947849]:_ref(owned Error?)[962221]
  type _ir_these_TaskErrors[1234723] const-val F0_this[1947837]:TaskErrors[169660]
  function _getIterator[1234732](const  ref arg ir[1234734]:_ir_these_TaskErrors[1234723]) : _ic_these_TaskErrors[1234717] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1234841]:_ic_these_TaskErrors[1234717] "dead after last mention" "RVV" "temp"
    val _ic_[1234724]:_ic_these_TaskErrors[1234717] "dead after last mention" "temp"
    const-val call_tmp[1234848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1234851 'move' call_tmp[1234848](1234863 'sizeof_bundle' _ic_these_TaskErrors[1234717]))
    const-val cast_tmp[1234866]:c_void_ptr[149] "dead after last mention" "temp"
    (1234868 'move' cast_tmp[1234866](1234729 call chpl_here_alloc[187754] call_tmp[1234848] 40))
    (1234737 'move' _ic_[1234724](1234870 'cast' _ic_these_TaskErrors[1234717] cast_tmp[1234866]))
    (1234739 'setcid' _ic_[1234724])
    (1234846 'move' ret[1234841] _ic_[1234724])
    (1948222 '.=' ret[1234841] more[1234720] 1)
    const-val tmp[1948226]:TaskErrors[169660] "temp"
    (1948231 'move' tmp[1948226](1948227 '.v' ir[1234734] F0_this[1947837]))
    (1948233 '.=' ret[1234841] F0_this[1947835] tmp[1948226])
    (1234843 return ret[1234841])
  }
  function TaskErrors[169660].message[169035](const in arg this[169686]:TaskErrors[169660], ref arg _retArg[1793810]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522250]:string[26] "dead after last mention" "RVV" "temp"
    val n[169039]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544668 'move' n[169039] 0)
    val minMsg[169045]:string[26] "dead at end of block" "insert auto destroy"
    (1724801 call init[30760] minMsg[169045])
    val maxMsg[169050]:string[26] "dead at end of block" "insert auto destroy"
    (1724806 call init[30760] maxMsg[169050])
    val first[169057]:Error[167942] "dead at end of block" "insert auto destroy"
    (1724814 'move' first[169057](1724812 'cast' Error[167942] nil[44]))
    val last[169064]:Error[167942] "dead at end of block" "insert auto destroy"
    (1724819 'move' last[169064](1724817 'cast' Error[167942] nil[44]))
    {
      ref _indexOfInterest[169179]:_ref(owned Error?)[962221] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[169180]:_ic_these_TaskErrors[1234717] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[679969]:_ir_these_TaskErrors[1234723] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1783626]:_ir_these_TaskErrors[1234723] "temp"
      (169071 call these[168866] this[169686] ret_tmp[1783626])
      (1783629 'move' call_tmp[679969] ret_tmp[1783626])
      (169189 'move' _iterator[169180](169187 call _getIterator[1234732] call_tmp[679969]))
      {
        val ret[1851332]:_ir_these_TaskErrors[1234723] "dead at end of block" "RVV" "temp"
        val _indexOfInterest[1851334]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1851336]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1851338]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
        const-val this[1851755]:TaskErrors[169660] "temp"
        (1851760 'move' this[1851755](1851757 '.v' _iterator[169180] F0_this[1947835]))
        (1851340 'move' call_tmp[1851338](1851343 call nErrors[814070] this[1851755]))
        const-val call_tmp[1851345]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1851347]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1851349 'move' coerce_tmp[1851347](1851351 'deref' call_tmp[1851338]))
        const-val ret_tmp[1851353]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
        (1851356 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1851347] ret_tmp[1851353])
        (1851360 'move' call_tmp[1851345] ret_tmp[1851353])
        (1851363 'move' _iterator[1851336](1851366 call _getIterator[1100762] call_tmp[1851345]))
        {
          val ret[1851369]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1851371]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1851373]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[1851375]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val ret_tmp[1851377]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
          const-val low[1851379]:int(64)[13] "temp"
          (1851381 'move' low[1851379](1851383 '.v' _iterator[1851336] F0_low[1952071]))
          const-val count[1851386]:int(64)[13] "temp"
          (1851388 'move' count[1851386](1851390 '.v' _iterator[1851336] F1_count[1952075]))
          (1851394 call chpl_direct_counted_range_iter_helper[1099055] low[1851379] count[1851386] ret_tmp[1851377])
          (1851398 'move' call_tmp[1851375] ret_tmp[1851377])
          (1851401 'move' _iterator[1851373](1851404 call _getIterator[1100512] call_tmp[1851375]))
          {
            val ret[1909096]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
            val call_tmp[1909098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[1909100]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[1909102]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[1909104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1909780]:int(64)[13] "temp"
            (1909785 'move' count[1909780](1909782 '.v' _iterator[1851373] F1_count[1956547]))
            (1909106 'move' call_tmp[1909104](1909109 call <[946327] count[1909780]))
            (1909111 'move' tmp[1909102] call_tmp[1909104])
            (1909114 'move' tmp[1909100] call_tmp[1909104])
            const-val call_tmp[1909117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1909119 'move' call_tmp[1909117] call_tmp[1909104])
            if call_tmp[1909104]
            {
              (1909125 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
            }
            const-val tmp[1909128]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[1909130]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[1909132]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[1909134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[1909787]:int(64)[13] "temp"
            (1909792 'move' count[1909787](1909789 '.v' _iterator[1851373] F1_count[1956547]))
            (1909136 'move' call_tmp[1909134](1909139 call ==[435686] count[1909787] 0))
            (1909142 'move' tmp[1909132] call_tmp[1909134])
            if call_tmp[1909134]
            {
              const-val tmp[1909147]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1909149]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1909151]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1909794]:int(64)[13] "temp"
              (1909799 'move' low[1909794](1909796 '.v' _iterator[1851373] F0_low[1956543]))
              (1909153 'move' call_tmp[1909151](1909156 call _cast[974684] low[1909794]))
              const-val call_tmp[1909158]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1909160]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (1909162 'move' coerce_tmp[1909160](1909164 'cast' uint(64)[115] 1))
              (1909167 'move' call_tmp[1909158](1909170 call -[957077] call_tmp[1909151]))
              const-val call_tmp[1909172]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              (1909174 'move' call_tmp[1909172](1909177 call _cast[951465] call_tmp[1909158]))
              const-val ret_tmp[1909179]:2*int(64)[1037179] "temp"
              const-val low[1909801]:int(64)[13] "temp"
              (1909806 'move' low[1909801](1909803 '.v' _iterator[1851373] F0_low[1956543]))
              (1909182 call _build_tuple[1037137] low[1909801] call_tmp[1909172] ret_tmp[1909179])
              (1909186 'move' tmp[1909147] ret_tmp[1909179])
              (1909189 'move' tmp[1909130] tmp[1909147])
            }
            {
              const-val tmp[1909193]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[1909195]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[1909197]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1909808]:int(64)[13] "temp"
              (1909813 'move' count[1909808](1909810 '.v' _iterator[1851373] F1_count[1956547]))
              (1909199 'move' call_tmp[1909197] count[1909808])
              const-val call_tmp[1909202]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[1909815]:int(64)[13] "temp"
              (1909820 'move' count[1909815](1909817 '.v' _iterator[1851373] F1_count[1956547]))
              (1909204 'move' call_tmp[1909202](1909207 call -[957110] count[1909815]))
              const-val call_tmp[1909209]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[1909822]:int(64)[13] "temp"
              (1909827 'move' low[1909822](1909824 '.v' _iterator[1851373] F0_low[1956543]))
              (1909211 'move' call_tmp[1909209](1909214 call +[439694] low[1909822] call_tmp[1909202]))
              const-val ret_tmp[1909217]:2*int(64)[1037179] "temp"
              const-val low[1909829]:int(64)[13] "temp"
              (1909834 'move' low[1909829](1909831 '.v' _iterator[1851373] F0_low[1956543]))
              (1909220 call _build_tuple[1037137] low[1909829] call_tmp[1909209] ret_tmp[1909217])
              (1909224 'move' tmp[1909193] ret_tmp[1909217])
              (1909227 'move' tmp[1909130] tmp[1909193])
            }
            (1909231 '=' tmp[1909128] tmp[1909130])
            (1909234 'noop')
            1
            ref call_tmp[1909236]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1909238 'move' call_tmp[1909236](1909240 '.' tmp[1909128] x0[1037175]))
            const-val start[1909243]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1909245]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1909247 'move' coerce_tmp[1909245](1909249 'deref' call_tmp[1909236]))
            (1909251 '=' start[1909243] coerce_tmp[1909245])
            (1909254 'noop')
            ref call_tmp[1909255]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
            (1909257 'move' call_tmp[1909255](1909259 '.' tmp[1909128] x1[1037177]))
            const-val end[1909262]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1909264]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1909266 'move' coerce_tmp[1909264](1909268 'deref' call_tmp[1909255]))
            (1909270 '=' end[1909262] coerce_tmp[1909264])
            (1909273 'noop')
            val _indexOfInterest[1909274]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1909276]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1909278]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1909280]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
            (1909283 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1909245] coerce_tmp[1909264] ret_tmp[1909280])
            (1909287 'move' call_tmp[1909278] ret_tmp[1909280])
            (1909290 'move' _iterator[1909276](1909293 call _getIterator[1100258] call_tmp[1909278]))
            {
              val ret[1909296]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
              val call_tmp[1909298]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1909301 call chpl_range_check_stride[1099801])
              val i[1909302]:int(64)[13] "dead at end of block" "insert auto destroy"
              val call_tmp[1909304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              (1909306 'move' i[1909302] 0)
              val call_tmp[1909309]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val default_arg_first[1909311]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val low[1909313]:int(64)[13] "temp"
              (1909315 'move' low[1909313](1909317 '.v' _iterator[1909276] F0_low[1958041]))
              (1909320 'move' default_arg_first[1909311](1909323 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1909313]))
              const-val default_arg_last[1909325]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
              const-val high[1909327]:int(64)[13] "temp"
              (1909329 'move' high[1909327](1909331 '.v' _iterator[1909276] F1_high[1958045]))
              (1909334 'move' default_arg_last[1909325](1909337 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1909327]))
              const-val _return_tmp_[1909339]:bool[10] "dead after last mention" "temp"
              const-val low[1909341]:int(64)[13] "temp"
              (1909343 'move' low[1909341](1909345 '.v' _iterator[1909276] F0_low[1958041]))
              const-val high[1909348]:int(64)[13] "temp"
              (1909350 'move' high[1909348](1909352 '.v' _iterator[1909276] F1_high[1958045]))
              (1909355 'move' _return_tmp_[1909339](1909358 call chpl_checkIfRangeIterWillOverflow[1093055] low[1909341] high[1909348] 1 default_arg_first[1909311] default_arg_last[1909325] 1))
              CForLoop[1909365] hazard
              {
                const-val yret[1909394]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1909396 'move' yret[1909394] i[1909302])
                const-val _yieldedIndex[1909399]:int(64)[13] "temp"
                (1909401 'move' _yieldedIndex[1909399] i[1909302])
                {
                  const-val i[1909405]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1909407 'move' i[1909405] _yieldedIndex[1909399])
                  const-val yret[1909410]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1909412 'move' yret[1909410] _yieldedIndex[1909399])
                  const-val _yieldedIndex[1909440]:int(64)[13] "temp"
                  (1909778 'move' _yieldedIndex[1909440] _yieldedIndex[1909399])
                  {
                    const-val i[1909442]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1909444 'move' i[1909442] _yieldedIndex[1909440])
                    const-val yret[1909447]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1909449 'move' yret[1909447] _yieldedIndex[1909440])
                    const-val _yieldedIndex[1909452]:int(64)[13] "temp"
                    (1909454 'move' _yieldedIndex[1909452] _yieldedIndex[1909440])
                    {
                      const-val i[1909458]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1909460 'move' i[1909458] _yieldedIndex[1909452])
                      ref call_tmp[1909463]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                      ref _this_tmp_[1909465]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                      const-val this[1909467]:TaskErrors[169660] "temp"
                      (1909469 'move' this[1909467](1909471 '.v' _iterator[169180] F0_this[1947835]))
                      (1909474 'move' _this_tmp_[1909465](1909477 call errorsArray[814096] this[1909467]))
                      val coerce_tmp[1909479]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1909481 'move' coerce_tmp[1909479](1909483 'deref' _this_tmp_[1909465]))
                      (1909485 'move' call_tmp[1909463](1909488 call this[1232503] coerce_tmp[1909479] _yieldedIndex[1909452]))
                      const-val call_tmp[1909491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      val coerce_tmp[1909493]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1909495 'move' coerce_tmp[1909493](1909498 call borrow[1232578] call_tmp[1909463]))
                      val coerce_tmp[1909500]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                      (1909502 'move' coerce_tmp[1909500](1909504 'cast' object[22] coerce_tmp[1909493]))
                      (1909507 'move' call_tmp[1909491](1909510 call !=[1485] coerce_tmp[1909500] nil[44]))
                      const-val call_tmp[1909513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1909515 'move' call_tmp[1909513] call_tmp[1909491])
                      if call_tmp[1909491]
                      {
                        ref yret[1909520]:_ref(owned Error?)[962221] "dead after last mention" "YVV" "temp"
                        ref call_tmp[1909522]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1909524]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                        const-val this[1909526]:TaskErrors[169660] "temp"
                        (1909528 'move' this[1909526](1909530 '.v' _iterator[169180] F0_this[1947835]))
                        (1909533 'move' _this_tmp_[1909524](1909536 call errorsArray[814096] this[1909526]))
                        val coerce_tmp[1909538]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1909540 'move' coerce_tmp[1909538](1909542 'deref' _this_tmp_[1909524]))
                        (1909544 'move' call_tmp[1909522](1909547 call this[1232503] coerce_tmp[1909538] i[1909458]))
                        ref _yieldedIndex[1909550]:_ref(owned Error?)[962221] "temp"
                        (1909552 'move' _yieldedIndex[1909550] call_tmp[1909522])
                        {
                          ref err[1909556]:_ref(owned Error?)[962221] "index var" "insert auto destroy"
                          (1909558 'move' err[1909556] _yieldedIndex[1909550])
                          {
                            val call_tmp[1909562]:Error[167942] "dead at end of block" "maybe param" "temp"
                            (1909564 'move' call_tmp[1909562](1909567 call postfix![1724169] err[1909556]))
                            val e[1909569]:Error[167942] "dead at end of block" "insert auto destroy"
                            (1909571 'move' e[1909569](1909574 call chpl__initCopy[961416] call_tmp[1909562]))
                            const-val tmp[1909576]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1909578 'move' tmp[1909576](1909581 call ==[38820] minMsg[169045] ""))
                            val tmp[1909584]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1909586]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1909588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1909590 'move' call_tmp[1909588] tmp[1909576])
                            (1909593 'move' tmp[1909586] call_tmp[1909588])
                            if tmp[1909586]
                            {
                              (1909598 'move' tmp[1909584] 1)
                            }
                            {
                              const-val tmp[1909602]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1909604]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1909606]:int(32)[95] "temp"
                              (1909608 'move' _virtual_method_tmp_[1909606](1909610 'getcid' e[1909569]))
                              val ret_tmp[1909612]:string[26] "temp"
                              (1909614 'virtual method call' message[167933] _virtual_method_tmp_[1909606] e[1909569] ret_tmp[1909612])
                              (1909619 'move' call_tmp[1909604] ret_tmp[1909612])
                              const-val call_tmp[1909622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1909624 'move' call_tmp[1909622](1909627 call <[38870] call_tmp[1909604] minMsg[169045]))
                              (1909630 'move' tmp[1909602] call_tmp[1909622])
                              (1909633 'move' tmp[1909584] tmp[1909602])
                              (1909637 call chpl__autoDestroy[1399678] call_tmp[1909604])
                            }
                            const-val call_tmp[1909640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1909642 'move' call_tmp[1909640] tmp[1909584])
                            if call_tmp[1909640]
                            {
                              const-val call_tmp[1909647]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1909649]:int(32)[95] "temp"
                              (1909651 'move' _virtual_method_tmp_[1909649](1909653 'getcid' e[1909569]))
                              val ret_tmp[1909655]:string[26] "temp"
                              (1909657 'virtual method call' message[167933] _virtual_method_tmp_[1909649] e[1909569] ret_tmp[1909655])
                              (1909662 'move' call_tmp[1909647] ret_tmp[1909655])
                              (1909666 call =[38269] minMsg[169045] call_tmp[1909647])
                              (1909670 call chpl__autoDestroy[1399678] call_tmp[1909647])
                            }
                            const-val tmp[1909673]:bool[10] "dead after last mention" "maybe param" "temp"
                            (1909675 'move' tmp[1909673](1909678 call ==[38820] maxMsg[169050] ""))
                            val tmp[1909681]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                            const-val tmp[1909683]:bool[10] "dead after last mention" "maybe param" "temp"
                            const-val call_tmp[1909685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1909687 'move' call_tmp[1909685] tmp[1909673])
                            (1909690 'move' tmp[1909683] call_tmp[1909685])
                            if tmp[1909683]
                            {
                              (1909695 'move' tmp[1909681] 1)
                            }
                            {
                              const-val tmp[1909699]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                              const-val call_tmp[1909701]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1909703]:int(32)[95] "temp"
                              (1909705 'move' _virtual_method_tmp_[1909703](1909707 'getcid' e[1909569]))
                              val ret_tmp[1909709]:string[26] "temp"
                              (1909711 'virtual method call' message[167933] _virtual_method_tmp_[1909703] e[1909569] ret_tmp[1909709])
                              (1909716 'move' call_tmp[1909701] ret_tmp[1909709])
                              const-val call_tmp[1909719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1909721 'move' call_tmp[1909719](1909724 call >[38894] call_tmp[1909701] maxMsg[169050]))
                              (1909727 'move' tmp[1909699] call_tmp[1909719])
                              (1909730 'move' tmp[1909681] tmp[1909699])
                              (1909734 call chpl__autoDestroy[1399678] call_tmp[1909701])
                            }
                            const-val call_tmp[1909737]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                            (1909739 'move' call_tmp[1909737] tmp[1909681])
                            if call_tmp[1909737]
                            {
                              const-val call_tmp[1909744]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1909746]:int(32)[95] "temp"
                              (1909748 'move' _virtual_method_tmp_[1909746](1909750 'getcid' e[1909569]))
                              val ret_tmp[1909752]:string[26] "temp"
                              (1909754 'virtual method call' message[167933] _virtual_method_tmp_[1909746] e[1909569] ret_tmp[1909752])
                              (1909759 'move' call_tmp[1909744] ret_tmp[1909752])
                              (1909763 call =[38269] maxMsg[169050] call_tmp[1909744])
                              (1909767 call chpl__autoDestroy[1399678] call_tmp[1909744])
                            }
                            (1909771 call +=[451373] n[169039] 1)
                          }
                          label _continueLabel[1909774]
                        }
                      }
                    }
                  }
                }
                {
                  const-val low[1909367]:int(64)[13] "temp"
                  (1909369 'move' low[1909367](1909371 '.v' _iterator[1909276] F0_low[1958041]))
                  (1909374 '=' i[1909302] low[1909367])
                }
                {
                  const-val high[1909378]:int(64)[13] "temp"
                  (1909380 'move' high[1909378](1909382 '.v' _iterator[1909276] F1_high[1958045]))
                  (1909385 '<=' i[1909302] high[1909378])
                }
                {
                  val call_tmp[1909389]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1909391 '+=' i[1909302] 1)
                }
              }
              label _endchpl_direct_param_stride_range_iter[1909428]
            }
            (1909431 call _freeIterator[1100431] _iterator[1909276])
            (1909434 call chpl__autoDestroy[1472606] tmp[1909128])
            label _endchpl_direct_counted_range_iter_helper[1909436]
          }
          (1851521 call _freeIterator[1100681] _iterator[1851373])
          label _endchpl_direct_counted_range_iter[1851523]
        }
        (1851526 call _freeIterator[1100931] _iterator[1851336])
        label _endthese[1851528]
      }
      label _breakLabel[169185]
      (1794405 call _freeIterator[1234974] _iterator[169180])
    }
    {
      {
        ref _indexOfInterest[169258]:_ref(owned Error?)[962221] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[169259]:_ic_these_TaskErrors[1234717] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[680049]:_ir_these_TaskErrors[1234723] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1783632]:_ir_these_TaskErrors[1234723] "temp"
        (169216 call these[168866] this[169686] ret_tmp[1783632])
        (1783635 'move' call_tmp[680049] ret_tmp[1783632])
        (169268 'move' _iterator[169259](169266 call _getIterator[1234732] call_tmp[680049]))
        {
          val ret[1851777]:_ir_these_TaskErrors[1234723] "dead at end of block" "RVV" "temp"
          val _indexOfInterest[1851779]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1851781]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1851783]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
          const-val this[1852080]:TaskErrors[169660] "temp"
          (1852085 'move' this[1852080](1852082 '.v' _iterator[169259] F0_this[1947835]))
          (1851785 'move' call_tmp[1851783](1851788 call nErrors[814070] this[1852080]))
          const-val call_tmp[1851790]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1851792]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1851794 'move' coerce_tmp[1851792](1851796 'deref' call_tmp[1851783]))
          const-val ret_tmp[1851798]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
          (1851801 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1851792] ret_tmp[1851798])
          (1851805 'move' call_tmp[1851790] ret_tmp[1851798])
          (1851808 'move' _iterator[1851781](1851811 call _getIterator[1100762] call_tmp[1851790]))
          {
            val ret[1851814]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1851816]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1851818]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1851820]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1851822]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
            const-val low[1851824]:int(64)[13] "temp"
            (1851826 'move' low[1851824](1851828 '.v' _iterator[1851781] F0_low[1952071]))
            const-val count[1851831]:int(64)[13] "temp"
            (1851833 'move' count[1851831](1851835 '.v' _iterator[1851781] F1_count[1952075]))
            (1851839 call chpl_direct_counted_range_iter_helper[1099055] low[1851824] count[1851831] ret_tmp[1851822])
            (1851843 'move' call_tmp[1851820] ret_tmp[1851822])
            (1851846 'move' _iterator[1851818](1851849 call _getIterator[1100512] call_tmp[1851820]))
            {
              val ret[1909837]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
              val call_tmp[1909839]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val tmp[1909841]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[1909843]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              const-val call_tmp[1909845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1910401]:int(64)[13] "temp"
              (1910406 'move' count[1910401](1910403 '.v' _iterator[1851818] F1_count[1956547]))
              (1909847 'move' call_tmp[1909845](1909850 call <[946327] count[1910401]))
              (1909852 'move' tmp[1909843] call_tmp[1909845])
              (1909855 'move' tmp[1909841] call_tmp[1909845])
              const-val call_tmp[1909858]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1909860 'move' call_tmp[1909858] call_tmp[1909845])
              if call_tmp[1909845]
              {
                (1909866 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
              }
              const-val tmp[1909869]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
              val tmp[1909871]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
              const-val tmp[1909873]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[1909875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val count[1910408]:int(64)[13] "temp"
              (1910413 'move' count[1910408](1910410 '.v' _iterator[1851818] F1_count[1956547]))
              (1909877 'move' call_tmp[1909875](1909880 call ==[435686] count[1910408] 0))
              (1909883 'move' tmp[1909873] call_tmp[1909875])
              if call_tmp[1909875]
              {
                const-val tmp[1909888]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1909890]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1909892]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1910415]:int(64)[13] "temp"
                (1910420 'move' low[1910415](1910417 '.v' _iterator[1851818] F0_low[1956543]))
                (1909894 'move' call_tmp[1909892](1909897 call _cast[974684] low[1910415]))
                const-val call_tmp[1909899]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1909901]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1909903 'move' coerce_tmp[1909901](1909905 'cast' uint(64)[115] 1))
                (1909908 'move' call_tmp[1909899](1909911 call -[957077] call_tmp[1909892]))
                const-val call_tmp[1909913]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                (1909915 'move' call_tmp[1909913](1909918 call _cast[951465] call_tmp[1909899]))
                const-val ret_tmp[1909920]:2*int(64)[1037179] "temp"
                const-val low[1910422]:int(64)[13] "temp"
                (1910427 'move' low[1910422](1910424 '.v' _iterator[1851818] F0_low[1956543]))
                (1909923 call _build_tuple[1037137] low[1910422] call_tmp[1909913] ret_tmp[1909920])
                (1909927 'move' tmp[1909888] ret_tmp[1909920])
                (1909930 'move' tmp[1909871] tmp[1909888])
              }
              {
                const-val tmp[1909934]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                val call_tmp[1909936]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val call_tmp[1909938]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1910429]:int(64)[13] "temp"
                (1910434 'move' count[1910429](1910431 '.v' _iterator[1851818] F1_count[1956547]))
                (1909940 'move' call_tmp[1909938] count[1910429])
                const-val call_tmp[1909943]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val count[1910436]:int(64)[13] "temp"
                (1910441 'move' count[1910436](1910438 '.v' _iterator[1851818] F1_count[1956547]))
                (1909945 'move' call_tmp[1909943](1909948 call -[957110] count[1910436]))
                const-val call_tmp[1909950]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val low[1910443]:int(64)[13] "temp"
                (1910448 'move' low[1910443](1910445 '.v' _iterator[1851818] F0_low[1956543]))
                (1909952 'move' call_tmp[1909950](1909955 call +[439694] low[1910443] call_tmp[1909943]))
                const-val ret_tmp[1909958]:2*int(64)[1037179] "temp"
                const-val low[1910450]:int(64)[13] "temp"
                (1910455 'move' low[1910450](1910452 '.v' _iterator[1851818] F0_low[1956543]))
                (1909961 call _build_tuple[1037137] low[1910450] call_tmp[1909950] ret_tmp[1909958])
                (1909965 'move' tmp[1909934] ret_tmp[1909958])
                (1909968 'move' tmp[1909871] tmp[1909934])
              }
              (1909972 '=' tmp[1909869] tmp[1909871])
              (1909975 'noop')
              1
              ref call_tmp[1909977]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1909979 'move' call_tmp[1909977](1909981 '.' tmp[1909869] x0[1037175]))
              const-val start[1909984]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1909986]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1909988 'move' coerce_tmp[1909986](1909990 'deref' call_tmp[1909977]))
              (1909992 '=' start[1909984] coerce_tmp[1909986])
              (1909995 'noop')
              ref call_tmp[1909996]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
              (1909998 'move' call_tmp[1909996](1910000 '.' tmp[1909869] x1[1037177]))
              const-val end[1910003]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
              const-val coerce_tmp[1910005]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
              (1910007 'move' coerce_tmp[1910005](1910009 'deref' call_tmp[1909996]))
              (1910011 '=' end[1910003] coerce_tmp[1910005])
              (1910014 'noop')
              val _indexOfInterest[1910015]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1910017]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1910019]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1910021]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
              (1910024 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1909986] coerce_tmp[1910005] ret_tmp[1910021])
              (1910028 'move' call_tmp[1910019] ret_tmp[1910021])
              (1910031 'move' _iterator[1910017](1910034 call _getIterator[1100258] call_tmp[1910019]))
              {
                val ret[1910037]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                val call_tmp[1910039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1910042 call chpl_range_check_stride[1099801])
                val i[1910043]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1910045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1910047 'move' i[1910043] 0)
                val call_tmp[1910050]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1910052]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1910054]:int(64)[13] "temp"
                (1910056 'move' low[1910054](1910058 '.v' _iterator[1910017] F0_low[1958041]))
                (1910061 'move' default_arg_first[1910052](1910064 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1910054]))
                const-val default_arg_last[1910066]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1910068]:int(64)[13] "temp"
                (1910070 'move' high[1910068](1910072 '.v' _iterator[1910017] F1_high[1958045]))
                (1910075 'move' default_arg_last[1910066](1910078 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1910068]))
                const-val _return_tmp_[1910080]:bool[10] "dead after last mention" "temp"
                const-val low[1910082]:int(64)[13] "temp"
                (1910084 'move' low[1910082](1910086 '.v' _iterator[1910017] F0_low[1958041]))
                const-val high[1910089]:int(64)[13] "temp"
                (1910091 'move' high[1910089](1910093 '.v' _iterator[1910017] F1_high[1958045]))
                (1910096 'move' _return_tmp_[1910080](1910099 call chpl_checkIfRangeIterWillOverflow[1093055] low[1910082] high[1910089] 1 default_arg_first[1910052] default_arg_last[1910066] 1))
                CForLoop[1910106] hazard
                {
                  const-val yret[1910135]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1910137 'move' yret[1910135] i[1910043])
                  const-val _yieldedIndex[1910140]:int(64)[13] "temp"
                  (1910142 'move' _yieldedIndex[1910140] i[1910043])
                  {
                    const-val i[1910146]:int(64)[13] "const" "index var" "insert auto destroy"
                    (1910148 'move' i[1910146] _yieldedIndex[1910140])
                    const-val yret[1910151]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1910153 'move' yret[1910151] _yieldedIndex[1910140])
                    const-val _yieldedIndex[1910181]:int(64)[13] "temp"
                    (1910399 'move' _yieldedIndex[1910181] _yieldedIndex[1910140])
                    {
                      const-val i[1910183]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1910185 'move' i[1910183] _yieldedIndex[1910181])
                      const-val yret[1910188]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1910190 'move' yret[1910188] _yieldedIndex[1910181])
                      const-val _yieldedIndex[1910193]:int(64)[13] "temp"
                      (1910195 'move' _yieldedIndex[1910193] _yieldedIndex[1910181])
                      {
                        const-val i[1910199]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1910201 'move' i[1910199] _yieldedIndex[1910193])
                        ref call_tmp[1910204]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                        ref _this_tmp_[1910206]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                        const-val this[1910208]:TaskErrors[169660] "temp"
                        (1910210 'move' this[1910208](1910212 '.v' _iterator[169259] F0_this[1947835]))
                        (1910215 'move' _this_tmp_[1910206](1910218 call errorsArray[814096] this[1910208]))
                        val coerce_tmp[1910220]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1910222 'move' coerce_tmp[1910220](1910224 'deref' _this_tmp_[1910206]))
                        (1910226 'move' call_tmp[1910204](1910229 call this[1232503] coerce_tmp[1910220] _yieldedIndex[1910193]))
                        const-val call_tmp[1910232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        val coerce_tmp[1910234]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1910236 'move' coerce_tmp[1910234](1910239 call borrow[1232578] call_tmp[1910204]))
                        val coerce_tmp[1910241]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1910243 'move' coerce_tmp[1910241](1910245 'cast' object[22] coerce_tmp[1910234]))
                        (1910248 'move' call_tmp[1910232](1910251 call !=[1485] coerce_tmp[1910241] nil[44]))
                        const-val call_tmp[1910254]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1910256 'move' call_tmp[1910254] call_tmp[1910232])
                        if call_tmp[1910232]
                        {
                          ref yret[1910261]:_ref(owned Error?)[962221] "dead after last mention" "YVV" "temp"
                          ref call_tmp[1910263]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1910265]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                          const-val this[1910267]:TaskErrors[169660] "temp"
                          (1910269 'move' this[1910267](1910271 '.v' _iterator[169259] F0_this[1947835]))
                          (1910274 'move' _this_tmp_[1910265](1910277 call errorsArray[814096] this[1910267]))
                          val coerce_tmp[1910279]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1910281 'move' coerce_tmp[1910279](1910283 'deref' _this_tmp_[1910265]))
                          (1910285 'move' call_tmp[1910263](1910288 call this[1232503] coerce_tmp[1910279] i[1910199]))
                          ref _yieldedIndex[1910291]:_ref(owned Error?)[962221] "temp"
                          (1910293 'move' _yieldedIndex[1910291] call_tmp[1910263])
                          {
                            ref err[1910297]:_ref(owned Error?)[962221] "index var" "insert auto destroy"
                            (1910299 'move' err[1910297] _yieldedIndex[1910291])
                            {
                              val call_tmp[1910303]:Error[167942] "dead at end of block" "maybe param" "temp"
                              (1910305 'move' call_tmp[1910303](1910308 call postfix![1724169] err[1910297]))
                              val e[1910310]:Error[167942] "dead at end of block" "insert auto destroy"
                              (1910312 'move' e[1910310](1910315 call chpl__initCopy[961416] call_tmp[1910303]))
                              const-val call_tmp[1910317]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                              val _virtual_method_tmp_[1910319]:int(32)[95] "temp"
                              (1910321 'move' _virtual_method_tmp_[1910319](1910323 'getcid' e[1910310]))
                              val ret_tmp[1910325]:string[26] "temp"
                              (1910327 'virtual method call' message[167933] _virtual_method_tmp_[1910319] e[1910310] ret_tmp[1910325])
                              (1910332 'move' call_tmp[1910317] ret_tmp[1910325])
                              const-val call_tmp[1910335]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1910337 'move' call_tmp[1910335](1910340 call ==[38820] call_tmp[1910317] minMsg[169045]))
                              const-val call_tmp[1910343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1910345 'move' call_tmp[1910343] call_tmp[1910335])
                              if call_tmp[1910343]
                              {
                                const-val call_tmp[1910350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                val coerce_tmp[1910352]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1910354 'move' coerce_tmp[1910352](1910356 'cast' object[22] first[169057]))
                                (1910359 'move' call_tmp[1910350](1910362 call ==[1146] coerce_tmp[1910352] nil[44]))
                                const-val call_tmp[1910365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1910367 'move' call_tmp[1910365] call_tmp[1910350])
                                if call_tmp[1910365]
                                {
                                  val coerce_tmp[1910372]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1910374 'move' coerce_tmp[1910372] e[1910310])
                                  (1910378 call =[1229229] first[169057] coerce_tmp[1910372])
                                }
                                val coerce_tmp[1910382]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1910384 'move' coerce_tmp[1910382] e[1910310])
                                (1910388 call =[1229229] last[169064] coerce_tmp[1910382])
                              }
                              (1910393 call chpl__autoDestroy[1399678] call_tmp[1910317])
                            }
                            label _continueLabel[1910395]
                          }
                        }
                      }
                    }
                  }
                  {
                    const-val low[1910108]:int(64)[13] "temp"
                    (1910110 'move' low[1910108](1910112 '.v' _iterator[1910017] F0_low[1958041]))
                    (1910115 '=' i[1910043] low[1910108])
                  }
                  {
                    const-val high[1910119]:int(64)[13] "temp"
                    (1910121 'move' high[1910119](1910123 '.v' _iterator[1910017] F1_high[1958045]))
                    (1910126 '<=' i[1910043] high[1910119])
                  }
                  {
                    val call_tmp[1910130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1910132 '+=' i[1910043] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1910169]
              }
              (1910172 call _freeIterator[1100431] _iterator[1910017])
              (1910175 call chpl__autoDestroy[1472606] tmp[1909869])
              label _endchpl_direct_counted_range_iter_helper[1910177]
            }
            (1851966 call _freeIterator[1100681] _iterator[1851818])
            label _endchpl_direct_counted_range_iter[1851968]
          }
          (1851971 call _freeIterator[1100931] _iterator[1851781])
          label _endthese[1851973]
        }
        label _breakLabel[169264]
        (1794414 call _freeIterator[1234974] _iterator[169259])
      }
      const-val call_tmp[680086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680089 'move' call_tmp[680086](169295 call !=[38844] minMsg[169045] maxMsg[169050]))
      const-val call_tmp[680091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680094 'move' call_tmp[680091] call_tmp[680086])
      if call_tmp[680091]
      {
        {
          ref _indexOfInterest[169328]:_ref(owned Error?)[962221] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[169329]:_ic_these_TaskErrors[1234717] "dead at end of block" "expr temp" "temp"
          const-val call_tmp[680098]:_ir_these_TaskErrors[1234723] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1783638]:_ir_these_TaskErrors[1234723] "temp"
          (169300 call these[168866] this[169686] ret_tmp[1783638])
          (1783641 'move' call_tmp[680098] ret_tmp[1783638])
          (169338 'move' _iterator[169329](169336 call _getIterator[1234732] call_tmp[680098]))
          {
            val ret[1852102]:_ir_these_TaskErrors[1234723] "dead at end of block" "RVV" "temp"
            val _indexOfInterest[1852104]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1852106]:_ic_chpl_direct_counted_range_iter[1100747] "dead at end of block" "expr temp" "temp"
            ref call_tmp[1852108]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
            const-val this[1852373]:TaskErrors[169660] "temp"
            (1852378 'move' this[1852373](1852375 '.v' _iterator[169329] F0_this[1947835]))
            (1852110 'move' call_tmp[1852108](1852113 call nErrors[814070] this[1852373]))
            const-val call_tmp[1852115]:_ir_chpl_direct_counted_range_iter[1100753] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[1852117]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (1852119 'move' coerce_tmp[1852117](1852121 'deref' call_tmp[1852108]))
            const-val ret_tmp[1852123]:_ir_chpl_direct_counted_range_iter[1100753] "temp"
            (1852126 call chpl_direct_counted_range_iter[458054] 0 coerce_tmp[1852117] ret_tmp[1852123])
            (1852130 'move' call_tmp[1852115] ret_tmp[1852123])
            (1852133 'move' _iterator[1852106](1852136 call _getIterator[1100762] call_tmp[1852115]))
            {
              val ret[1852139]:_ir_chpl_direct_counted_range_iter[1100753] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1852141]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1852143]:_ic_chpl_direct_counted_range_iter_helper[1100497] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1852145]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1852147]:_ir_chpl_direct_counted_range_iter_helper[1100503] "temp"
              const-val low[1852149]:int(64)[13] "temp"
              (1852151 'move' low[1852149](1852153 '.v' _iterator[1852106] F0_low[1952071]))
              const-val count[1852156]:int(64)[13] "temp"
              (1852158 'move' count[1852156](1852160 '.v' _iterator[1852106] F1_count[1952075]))
              (1852164 call chpl_direct_counted_range_iter_helper[1099055] low[1852149] count[1852156] ret_tmp[1852147])
              (1852168 'move' call_tmp[1852145] ret_tmp[1852147])
              (1852171 'move' _iterator[1852143](1852174 call _getIterator[1100512] call_tmp[1852145]))
              {
                val ret[1910458]:_ir_chpl_direct_counted_range_iter_helper[1100503] "dead after last mention" "RVV" "temp"
                val call_tmp[1910460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1910462]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1910464]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1910466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1910990]:int(64)[13] "temp"
                (1910995 'move' count[1910990](1910992 '.v' _iterator[1852143] F1_count[1956547]))
                (1910468 'move' call_tmp[1910466](1910471 call <[946327] count[1910990]))
                (1910473 'move' tmp[1910464] call_tmp[1910466])
                (1910476 'move' tmp[1910462] call_tmp[1910466])
                const-val call_tmp[1910479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1910481 'move' call_tmp[1910479] call_tmp[1910466])
                if call_tmp[1910466]
                {
                  (1910487 call boundsCheckHalt[210084] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1910490]:2*int(64)[1037179] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1910492]:2*int(64)[1037179] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1910494]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1910496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1910997]:int(64)[13] "temp"
                (1911002 'move' count[1910997](1910999 '.v' _iterator[1852143] F1_count[1956547]))
                (1910498 'move' call_tmp[1910496](1910501 call ==[435686] count[1910997] 0))
                (1910504 'move' tmp[1910494] call_tmp[1910496])
                if call_tmp[1910496]
                {
                  const-val tmp[1910509]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1910511]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1910513]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1911004]:int(64)[13] "temp"
                  (1911009 'move' low[1911004](1911006 '.v' _iterator[1852143] F0_low[1956543]))
                  (1910515 'move' call_tmp[1910513](1910518 call _cast[974684] low[1911004]))
                  const-val call_tmp[1910520]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1910522]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1910524 'move' coerce_tmp[1910522](1910526 'cast' uint(64)[115] 1))
                  (1910529 'move' call_tmp[1910520](1910532 call -[957077] call_tmp[1910513]))
                  const-val call_tmp[1910534]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1910536 'move' call_tmp[1910534](1910539 call _cast[951465] call_tmp[1910520]))
                  const-val ret_tmp[1910541]:2*int(64)[1037179] "temp"
                  const-val low[1911011]:int(64)[13] "temp"
                  (1911016 'move' low[1911011](1911013 '.v' _iterator[1852143] F0_low[1956543]))
                  (1910544 call _build_tuple[1037137] low[1911011] call_tmp[1910534] ret_tmp[1910541])
                  (1910548 'move' tmp[1910509] ret_tmp[1910541])
                  (1910551 'move' tmp[1910492] tmp[1910509])
                }
                {
                  const-val tmp[1910555]:2*int(64)[1037179] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1910557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1910559]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1911018]:int(64)[13] "temp"
                  (1911023 'move' count[1911018](1911020 '.v' _iterator[1852143] F1_count[1956547]))
                  (1910561 'move' call_tmp[1910559] count[1911018])
                  const-val call_tmp[1910564]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1911025]:int(64)[13] "temp"
                  (1911030 'move' count[1911025](1911027 '.v' _iterator[1852143] F1_count[1956547]))
                  (1910566 'move' call_tmp[1910564](1910569 call -[957110] count[1911025]))
                  const-val call_tmp[1910571]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1911032]:int(64)[13] "temp"
                  (1911037 'move' low[1911032](1911034 '.v' _iterator[1852143] F0_low[1956543]))
                  (1910573 'move' call_tmp[1910571](1910576 call +[439694] low[1911032] call_tmp[1910564]))
                  const-val ret_tmp[1910579]:2*int(64)[1037179] "temp"
                  const-val low[1911039]:int(64)[13] "temp"
                  (1911044 'move' low[1911039](1911041 '.v' _iterator[1852143] F0_low[1956543]))
                  (1910582 call _build_tuple[1037137] low[1911039] call_tmp[1910571] ret_tmp[1910579])
                  (1910586 'move' tmp[1910555] ret_tmp[1910579])
                  (1910589 'move' tmp[1910492] tmp[1910555])
                }
                (1910593 '=' tmp[1910490] tmp[1910492])
                (1910596 'noop')
                1
                ref call_tmp[1910598]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1910600 'move' call_tmp[1910598](1910602 '.' tmp[1910490] x0[1037175]))
                const-val start[1910605]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1910607]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1910609 'move' coerce_tmp[1910607](1910611 'deref' call_tmp[1910598]))
                (1910613 '=' start[1910605] coerce_tmp[1910607])
                (1910616 'noop')
                ref call_tmp[1910617]:_ref(int(64))[934535] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1910619 'move' call_tmp[1910617](1910621 '.' tmp[1910490] x1[1037177]))
                const-val end[1910624]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1910626]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1910628 'move' coerce_tmp[1910626](1910630 'deref' call_tmp[1910617]))
                (1910632 '=' end[1910624] coerce_tmp[1910626])
                (1910635 'noop')
                val _indexOfInterest[1910636]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1910638]:_ic_chpl_direct_param_stride_range_iter[1100243] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1910640]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1910642]:_ir_chpl_direct_param_stride_range_iter[1100249] "temp"
                (1910645 call chpl_direct_param_stride_range_iter[1099481] coerce_tmp[1910607] coerce_tmp[1910626] ret_tmp[1910642])
                (1910649 'move' call_tmp[1910640] ret_tmp[1910642])
                (1910652 'move' _iterator[1910638](1910655 call _getIterator[1100258] call_tmp[1910640]))
                {
                  val ret[1910658]:_ir_chpl_direct_param_stride_range_iter[1100249] "dead after last mention" "RVV" "temp"
                  val call_tmp[1910660]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1910663 call chpl_range_check_stride[1099801])
                  val i[1910664]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1910666]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1910668 'move' i[1910664] 0)
                  val call_tmp[1910671]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1910673]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1910675]:int(64)[13] "temp"
                  (1910677 'move' low[1910675](1910679 '.v' _iterator[1910638] F0_low[1958041]))
                  (1910682 'move' default_arg_first[1910673](1910685 call chpl_checkIfRangeIterWillOverflow_default_first[1100155] low[1910675]))
                  const-val default_arg_last[1910687]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1910689]:int(64)[13] "temp"
                  (1910691 'move' high[1910689](1910693 '.v' _iterator[1910638] F1_high[1958045]))
                  (1910696 'move' default_arg_last[1910687](1910699 call chpl_checkIfRangeIterWillOverflow_default_last[1100183] high[1910689]))
                  const-val _return_tmp_[1910701]:bool[10] "dead after last mention" "temp"
                  const-val low[1910703]:int(64)[13] "temp"
                  (1910705 'move' low[1910703](1910707 '.v' _iterator[1910638] F0_low[1958041]))
                  const-val high[1910710]:int(64)[13] "temp"
                  (1910712 'move' high[1910710](1910714 '.v' _iterator[1910638] F1_high[1958045]))
                  (1910717 'move' _return_tmp_[1910701](1910720 call chpl_checkIfRangeIterWillOverflow[1093055] low[1910703] high[1910710] 1 default_arg_first[1910673] default_arg_last[1910687] 1))
                  CForLoop[1910727] hazard
                  {
                    const-val yret[1910756]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1910758 'move' yret[1910756] i[1910664])
                    const-val _yieldedIndex[1910761]:int(64)[13] "temp"
                    (1910763 'move' _yieldedIndex[1910761] i[1910664])
                    {
                      const-val i[1910767]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1910769 'move' i[1910767] _yieldedIndex[1910761])
                      const-val yret[1910772]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1910774 'move' yret[1910772] _yieldedIndex[1910761])
                      const-val _yieldedIndex[1910802]:int(64)[13] "temp"
                      (1910988 'move' _yieldedIndex[1910802] _yieldedIndex[1910761])
                      {
                        const-val i[1910804]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1910806 'move' i[1910804] _yieldedIndex[1910802])
                        const-val yret[1910809]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1910811 'move' yret[1910809] _yieldedIndex[1910802])
                        const-val _yieldedIndex[1910814]:int(64)[13] "temp"
                        (1910816 'move' _yieldedIndex[1910814] _yieldedIndex[1910802])
                        {
                          const-val i[1910820]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1910822 'move' i[1910820] _yieldedIndex[1910814])
                          ref call_tmp[1910825]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                          ref _this_tmp_[1910827]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                          const-val this[1910829]:TaskErrors[169660] "temp"
                          (1910831 'move' this[1910829](1910833 '.v' _iterator[169329] F0_this[1947835]))
                          (1910836 'move' _this_tmp_[1910827](1910839 call errorsArray[814096] this[1910829]))
                          val coerce_tmp[1910841]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1910843 'move' coerce_tmp[1910841](1910845 'deref' _this_tmp_[1910827]))
                          (1910847 'move' call_tmp[1910825](1910850 call this[1232503] coerce_tmp[1910841] _yieldedIndex[1910814]))
                          const-val call_tmp[1910853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          val coerce_tmp[1910855]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1910857 'move' coerce_tmp[1910855](1910860 call borrow[1232578] call_tmp[1910825]))
                          val coerce_tmp[1910862]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                          (1910864 'move' coerce_tmp[1910862](1910866 'cast' object[22] coerce_tmp[1910855]))
                          (1910869 'move' call_tmp[1910853](1910872 call !=[1485] coerce_tmp[1910862] nil[44]))
                          const-val call_tmp[1910875]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                          (1910877 'move' call_tmp[1910875] call_tmp[1910853])
                          if call_tmp[1910853]
                          {
                            ref yret[1910882]:_ref(owned Error?)[962221] "dead after last mention" "YVV" "temp"
                            ref call_tmp[1910884]:_ref(owned Error?)[962221] "dead after last mention" "maybe param" "temp"
                            ref _this_tmp_[1910886]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "temp"
                            const-val this[1910888]:TaskErrors[169660] "temp"
                            (1910890 'move' this[1910888](1910892 '.v' _iterator[169329] F0_this[1947835]))
                            (1910895 'move' _this_tmp_[1910886](1910898 call errorsArray[814096] this[1910888]))
                            val coerce_tmp[1910900]:c_ptr(owned Error?)[1232365] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                            (1910902 'move' coerce_tmp[1910900](1910904 'deref' _this_tmp_[1910886]))
                            (1910906 'move' call_tmp[1910884](1910909 call this[1232503] coerce_tmp[1910900] i[1910820]))
                            ref _yieldedIndex[1910912]:_ref(owned Error?)[962221] "temp"
                            (1910914 'move' _yieldedIndex[1910912] call_tmp[1910884])
                            {
                              ref err[1910918]:_ref(owned Error?)[962221] "index var" "insert auto destroy"
                              (1910920 'move' err[1910918] _yieldedIndex[1910912])
                              {
                                val call_tmp[1910924]:Error[167942] "dead at end of block" "maybe param" "temp"
                                (1910926 'move' call_tmp[1910924](1910929 call postfix![1724169] err[1910918]))
                                val e[1910931]:Error[167942] "dead at end of block" "insert auto destroy"
                                (1910933 'move' e[1910931](1910936 call chpl__initCopy[961416] call_tmp[1910924]))
                                const-val call_tmp[1910938]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                                val _virtual_method_tmp_[1910940]:int(32)[95] "temp"
                                (1910942 'move' _virtual_method_tmp_[1910940](1910944 'getcid' e[1910931]))
                                val ret_tmp[1910946]:string[26] "temp"
                                (1910948 'virtual method call' message[167933] _virtual_method_tmp_[1910940] e[1910931] ret_tmp[1910946])
                                (1910953 'move' call_tmp[1910938] ret_tmp[1910946])
                                const-val call_tmp[1910956]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1910958 'move' call_tmp[1910956](1910961 call ==[38820] call_tmp[1910938] maxMsg[169050]))
                                const-val call_tmp[1910964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                (1910966 'move' call_tmp[1910964] call_tmp[1910956])
                                if call_tmp[1910964]
                                {
                                  val coerce_tmp[1910971]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                  (1910973 'move' coerce_tmp[1910971] e[1910931])
                                  (1910977 call =[1229229] last[169064] coerce_tmp[1910971])
                                }
                                (1910982 call chpl__autoDestroy[1399678] call_tmp[1910938])
                              }
                              label _continueLabel[1910984]
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1910729]:int(64)[13] "temp"
                      (1910731 'move' low[1910729](1910733 '.v' _iterator[1910638] F0_low[1958041]))
                      (1910736 '=' i[1910664] low[1910729])
                    }
                    {
                      const-val high[1910740]:int(64)[13] "temp"
                      (1910742 'move' high[1910740](1910744 '.v' _iterator[1910638] F1_high[1958045]))
                      (1910747 '<=' i[1910664] high[1910740])
                    }
                    {
                      val call_tmp[1910751]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1910753 '+=' i[1910664] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1910790]
                }
                (1910793 call _freeIterator[1100431] _iterator[1910638])
                (1910796 call chpl__autoDestroy[1472606] tmp[1910490])
                label _endchpl_direct_counted_range_iter_helper[1910798]
              }
              (1852291 call _freeIterator[1100681] _iterator[1852143])
              label _endchpl_direct_counted_range_iter[1852293]
            }
            (1852296 call _freeIterator[1100931] _iterator[1852106])
            label _endthese[1852298]
          }
          label _breakLabel[169334]
          (1794423 call _freeIterator[1234974] _iterator[169329])
        }
      }
    }
    const-val call_tmp[680125]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785538]:string[26] "temp"
    (169369 call _cast[1060220] n[169039] ret_tmp[1785538])
    (1785541 'move' call_tmp[680125] ret_tmp[1785538])
    const-val call_tmp[680130]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782368]:string[26] "temp"
    (169388 call +[38342] call_tmp[680125] " errors: " ret_tmp[1782368])
    (1782371 'move' call_tmp[680130] ret_tmp[1782368])
    val ret[169390]:string[26] "dead at end of block" "insert auto destroy"
    (544684 'move' ret[169390] call_tmp[680130])
    const-val tmp[428449]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val tmp[428470]:bool[10] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1724738]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1724744 'move' coerce_tmp[1724738](1724740 'cast' object[22] first[169057]))
    (428481 'move' tmp[428470](169396 call !=[1485] coerce_tmp[1724738] nil[44]))
    val tmp[570544]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570545]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680143 'move' call_tmp[680140] tmp[428470])
    (570550 'move' tmp[570545] call_tmp[680140])
    if tmp[570545]
    {
      const-val tmp[570552]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1724750]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1724756 'move' coerce_tmp[1724750](1724752 'cast' object[22] last[169064]))
      (680148 'move' call_tmp[680145](169400 call !=[1485] coerce_tmp[1724750] nil[44]))
      (570554 'move' tmp[570552] call_tmp[680145])
      (570559 'move' tmp[570544] tmp[570552])
    }
    {
      (570564 'move' tmp[570544] 0)
    }
    (428460 'move' tmp[428449] tmp[570544])
    val tmp[570571]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[570572]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[680155]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680158 'move' call_tmp[680155] tmp[428449])
    (570577 'move' tmp[570572] call_tmp[680155])
    if tmp[570572]
    {
      const-val tmp[570579]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[680160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1724762]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1724768 'move' coerce_tmp[1724762](1724764 'cast' object[22] first[169057]))
      val coerce_tmp[1724770]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1724776 'move' coerce_tmp[1724770](1724772 'cast' object[22] last[169064]))
      (680163 'move' call_tmp[680160](169406 call !=[1485] coerce_tmp[1724762] coerce_tmp[1724770]))
      (570581 'move' tmp[570579] call_tmp[680160])
      (570586 'move' tmp[570571] tmp[570579])
    }
    {
      (570591 'move' tmp[570571] 0)
    }
    const-val call_tmp[680165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680168 'move' call_tmp[680165] tmp[570571])
    if call_tmp[680165]
    {
      val call_tmp[680170]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (680173 'move' call_tmp[680170](169413 call postfix![963582] first[169057]))
      const-val call_tmp[680175]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783666]:string[26] "temp"
      (169416 call chpl_describe_error[169793] call_tmp[680170] ret_tmp[1783666])
      (1783669 'move' call_tmp[680175] ret_tmp[1783666])
      const-val call_tmp[680180]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782374]:string[26] "temp"
      (169434 call +[38342] call_tmp[680175] " ... " ret_tmp[1782374])
      (1782377 'move' call_tmp[680180] ret_tmp[1782374])
      val call_tmp[680185]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (680188 'move' call_tmp[680185](169438 call postfix![963582] last[169064]))
      const-val call_tmp[680190]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1783672]:string[26] "temp"
      (169441 call chpl_describe_error[169793] call_tmp[680185] ret_tmp[1783672])
      (1783675 'move' call_tmp[680190] ret_tmp[1783672])
      const-val call_tmp[680195]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1782380]:string[26] "temp"
      (169442 call +[38342] call_tmp[680180] call_tmp[680190] ret_tmp[1782380])
      (1782383 'move' call_tmp[680195] ret_tmp[1782380])
      (169444 call +=[38797] ret[169390] call_tmp[680195])
      (1794426 call chpl__autoDestroy[1399678] call_tmp[680195])
      (1794429 call chpl__autoDestroy[1399678] call_tmp[680190])
      (1794432 call chpl__autoDestroy[1399678] call_tmp[680180])
      (1794435 call chpl__autoDestroy[1399678] call_tmp[680175])
    }
    {
      const-val call_tmp[680200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1724786]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1724792 'move' coerce_tmp[1724786](1724788 'cast' object[22] first[169057]))
      (680203 'move' call_tmp[680200](169449 call !=[1485] coerce_tmp[1724786] nil[44]))
      const-val call_tmp[680205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (680208 'move' call_tmp[680205] call_tmp[680200])
      if call_tmp[680205]
      {
        val call_tmp[680210]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
        (680213 'move' call_tmp[680210] first[169057])
        const-val call_tmp[680215]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1783678]:string[26] "temp"
        (169457 call chpl_describe_error[169793] call_tmp[680210] ret_tmp[1783678])
        (1783681 'move' call_tmp[680215] ret_tmp[1783678])
        (169458 call +=[38797] ret[169390] call_tmp[680215])
        (1794439 call chpl__autoDestroy[1399678] call_tmp[680215])
      }
    }
    (1724799 'move' ret[522250] ret[169390])
    (1794442 call chpl__autoDestroy[1399678] call_tmp[680125])
    (1794445 call chpl__autoDestroy[1399678] maxMsg[169050])
    (1794448 call chpl__autoDestroy[1399678] minMsg[169045])
    gotoReturn _end_message[522248] _end_message[522248]
    label _end_message[522248]
    (1793812 '=' _retArg[1793810] ret[522250])
    (1793814 return _void[55])
  }
  function TaskErrors[169660].nErrors[814070](const in arg this[814074]:TaskErrors[169660]) ref : _ref(int(64))[934535] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814084]:_ref(int(64))[934535] "dead after last mention" "RVV" "temp"
    ref call_tmp[814091]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
    (814094 'move' call_tmp[814091](814078 '.' this[814074] nErrors[168321]))
    (814089 'move' ret[814084] call_tmp[814091])
    (814086 return ret[814084])
  }
  function TaskErrors[169660].errorsArray[814096](const in arg this[814100]:TaskErrors[169660]) ref : _ref(c_ptr(owned Error?))[1232374] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved" "fn synchronization free"
  {
    ref ret[814110]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "RVV" "temp"
    ref call_tmp[814117]:_ref(c_ptr(owned Error?))[1232374] "dead after last mention" "maybe param" "temp"
    (814120 'move' call_tmp[814117](814104 '.' this[814100] errorsArray[168332]))
    (814115 'move' ret[814110] call_tmp[814117])
    (814112 return ret[814110])
  }
  function _new[1237712](ref arg group[1237721]:_ref(chpl_TaskErrors)[938870]) : TaskErrors[169660] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1759936]:TaskErrors[169660] "temp"
    val ret[1237751]:TaskErrors[169660] "dead after last mention" "RVV" "temp"
    val initTemp[1237714]:TaskErrors[169660] "dead after last mention" "temp"
    const-val call_tmp[1237758]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1237761 'move' call_tmp[1237758](1237772 'sizeof_bundle' TaskErrors[169660]))
    const-val cast_tmp[1237775]:c_void_ptr[149] "dead after last mention" "temp"
    (1237777 'move' cast_tmp[1237775](1237729 call chpl_here_alloc[187754] call_tmp[1237758] 41))
    (1237732 'move' initTemp[1237714](1237779 'cast' TaskErrors[169660] cast_tmp[1237775]))
    (1237734 'setcid' initTemp[1237714])
    (1237715 call init[168342] initTemp[1237714] group[1237721])
    val tmp[1237736]:TaskErrors[169660] "dead after last mention" "temp"
    (1237740 'move' tmp[1237736] initTemp[1237714])
    (1237756 'move' ret[1237751] tmp[1237736])
    (1237753 return ret[1237751])
  }
  function _new[1714962](const in arg err[1714971]:Error[167942]) : TaskErrors[169660] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val _formal_type_tmp_[1760363]:TaskErrors[169660] "temp"
    val ret[1714999]:TaskErrors[169660] "dead after last mention" "RVV" "temp"
    val initTemp[1714964]:TaskErrors[169660] "dead after last mention" "temp"
    const-val call_tmp[1715006]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1715009 'move' call_tmp[1715006](1715018 'sizeof_bundle' TaskErrors[169660]))
    const-val cast_tmp[1715021]:c_void_ptr[149] "dead after last mention" "temp"
    (1715023 'move' cast_tmp[1715021](1714977 call chpl_here_alloc[187754] call_tmp[1715006] 41))
    (1714980 'move' initTemp[1714964](1715025 'cast' TaskErrors[169660] cast_tmp[1715021]))
    (1714982 'setcid' initTemp[1714964])
    (1714965 call init[168723] initTemp[1714964] err[1714971])
    val tmp[1714984]:TaskErrors[169660] "dead after last mention" "temp"
    (1714988 'move' tmp[1714984] initTemp[1714964])
    (1715004 'move' ret[1714999] tmp[1714984])
    (1715001 return ret[1714999])
  }
  type TaskErrors[169660] val super[355765]:Error[167942] "super class" val nErrors[168321]:int(64)[13] "no doc" val errorsArray[168332]:c_ptr(owned Error?)[1232365] "no doc"
  function chpl_error_type_name[169710](const in arg err[169707]:Error[167942], ref arg _retArg[1783660]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522295]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680266]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680269 'move' call_tmp[680266](169732 'getcid' err[169707]))
    const-val cid[169733]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544688 'move' cid[169733] call_tmp[680266])
    const-val call_tmp[680271]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680274 'move' call_tmp[680271](169758 'class name by id' cid[169733]))
    const-val nameC[169759]:c_string[19] "dead at end of block" "insert auto destroy"
    (544690 'move' nameC[169759](1714525 call chpl__initCopy[21695] call_tmp[680271]))
    const-val nameS[169764]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544692]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1762170]:Error[167942] "error variable" "temp"
      (1762186 'move' error[1762170] nil[44])
      const-val call_tmp[680276]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1714541]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1714546 'move' default_arg_length[1714541](1714543 call createStringWithNewBuffer_default_length[958930] nameC[169759] error[1762170]))
      val errorExists[2029167]:bool[10] "temp"
      (2029172 'move' errorExists[2029167](2029169 '!=' error[1762170] nil[44]))
      if errorExists[2029167]
      {
        gotoErrorHandling handler[1762171] handler[1762171]
      }
      const-val ret_tmp[1781592]:string[26] "temp"
      (169772 call createStringWithNewBuffer[30410] nameC[169759] default_arg_length[1714541] strict[173658] error[1762170] ret_tmp[1781592])
      (1781595 'move' call_tmp[680276] ret_tmp[1781592])
      val errorExists[2029175]:bool[10] "temp"
      (2029180 'move' errorExists[2029175](2029177 '!=' error[1762170] nil[44]))
      if errorExists[2029175]
      {
        gotoErrorHandling handler[1762171] handler[1762171]
      }
      (544703 'move' nameS[169764] call_tmp[680276])
      label handler[1762171]
      const-val shouldHandleError[1762195]:bool[10] "temp"
      val errorExists[2029183]:bool[10] "temp"
      (2029188 'move' errorExists[2029183](2029185 '!=' error[1762170] nil[44]))
      (1762199 'move' shouldHandleError[1762195] errorExists[2029183])
      if shouldHandleError[1762195]
      {
        (1762192 call chpl_uncaught_error[170247] error[1762170])
      }
    }
    (1714560 'move' ret[522295] nameS[169764])
    gotoReturn _end_chpl_error_type_name[522293] _end_chpl_error_type_name[522293]
    label _end_chpl_error_type_name[522293]
    (1783662 '=' _retArg[1783660] ret[522295])
    (1783664 return _void[55])
  }
  function chpl_describe_error[169793](const in arg err[169790]:Error[167942], ref arg _retArg[1783690]:_ref(string)[935902]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val ret[522307]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[680281]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1783654]:string[26] "temp"
    (169799 call chpl_error_type_name[169710] err[169790] ret_tmp[1783654])
    (1783657 'move' call_tmp[680281] ret_tmp[1783654])
    const-val nameS[169800]:string[26] "dead at end of block" "insert auto destroy"
    (544706 'move' nameS[169800] call_tmp[680281])
    const-val call_tmp[680286]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782386]:string[26] "temp"
    (169807 call +[38342] nameS[169800] ": " ret_tmp[1782386])
    (1782389 'move' call_tmp[680286] ret_tmp[1782386])
    const-val call_tmp[680293]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1756048]:int(32)[95] "temp"
    (1756052 'move' _virtual_method_tmp_[1756048](1756050 'getcid' err[169790]))
    val ret_tmp[1783606]:string[26] "temp"
    (169814 'virtual method call' message[167933] _virtual_method_tmp_[1756048] err[169790] ret_tmp[1783606])
    (1783609 'move' call_tmp[680293] ret_tmp[1783606])
    const-val call_tmp[680298]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782392]:string[26] "temp"
    (169815 call +[38342] call_tmp[680286] call_tmp[680293] ret_tmp[1782392])
    (1782395 'move' call_tmp[680298] ret_tmp[1782392])
    const-val ret[169817]:string[26] "dead at end of block" "insert auto destroy"
    (544708 'move' ret[169817] call_tmp[680298])
    (1714567 'move' ret[522307] ret[169817])
    (1794451 call chpl__autoDestroy[1399678] call_tmp[680293])
    (1794454 call chpl__autoDestroy[1399678] call_tmp[680286])
    (1794457 call chpl__autoDestroy[1399678] nameS[169800])
    gotoReturn _end_chpl_describe_error[522305] _end_chpl_describe_error[522305]
    label _end_chpl_describe_error[522305]
    (1783692 '=' _retArg[1783690] ret[522307])
    (1783694 return _void[55])
  }
  function chpl_do_fix_thrown_error[169835](const in arg err[169832]:Error[167942]) : Error[167942] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val ret[522319]:Error[167942] "dead after last mention" "RVV" "temp"
    val fixErr[169843]:Error[167942] "dead at end of block" "insert auto destroy"
    (544710 'move' fixErr[169843](965282 call chpl__initCopy[963173] err[169832]))
    const-val call_tmp[680303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[965285]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (965290 'move' coerce_tmp[965285](965287 'cast' object[22] fixErr[169843]))
    (680306 'move' call_tmp[680303](169850 call ==[1146] coerce_tmp[965285] nil[44]))
    const-val call_tmp[680308]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680311 'move' call_tmp[680308] call_tmp[680303])
    if call_tmp[680308]
    {
      val call_tmp[680313]:NilThrownError[167987] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
      val new_temp[965400]:NilThrownError[167987] "dead after last mention" "temp"
      (965402 'move' new_temp[965400](965332 call _new[965348]))
      (680316 'move' call_tmp[680313] new_temp[965400])
      val coerce_tmp[965507]:NilThrownError[167987] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (965513 'move' coerce_tmp[965507] call_tmp[680313])
      (169859 call =[965462] fixErr[169843] coerce_tmp[965507])
    }
    const-val call_tmp[680318]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680321 'move' call_tmp[680318](169885 '_get_user_line'))
    const-val line[169886]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544712 'move' line[169886] call_tmp[680318])
    const-val call_tmp[680323]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680326 'move' call_tmp[680323](169908 '_get_user_file'))
    const-val fileId[169909]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
    (544714 'move' fileId[169909] call_tmp[680323])
    val call_tmp[680328]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
    (680331 'move' call_tmp[680328](169914 call postfix![963573] fixErr[169843]))
    ref call_tmp[680335]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[965524]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (965529 'move' coerce_tmp[965524] call_tmp[680328])
    (680338 'move' call_tmp[680335](169918 call _hasThrowInfo[811759] coerce_tmp[965524]))
    const-val call_tmp[680340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[965532]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (965536 'move' coerce_tmp[965532](965534 'deref' call_tmp[680335]))
    (680343 'move' call_tmp[680340](169921 call ![7494] coerce_tmp[965532]))
    const-val call_tmp[680345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680348 'move' call_tmp[680345] call_tmp[680340])
    if call_tmp[680345]
    {
      val call_tmp[680350]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (680353 'move' call_tmp[680350](169924 call postfix![963573] fixErr[169843]))
      ref call_tmp[680357]:_ref(bool)[935162] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[965540]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (965545 'move' coerce_tmp[965540] call_tmp[680350])
      (680360 'move' call_tmp[680357](169926 call _hasThrowInfo[811759] coerce_tmp[965540]))
      (169930 call =[435232] call_tmp[680357] 1)
      val call_tmp[680362]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (680365 'move' call_tmp[680362](169935 call postfix![963573] fixErr[169843]))
      ref call_tmp[680369]:_ref(int(64))[934535] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[965550]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (965555 'move' coerce_tmp[965550] call_tmp[680362])
      (680372 'move' call_tmp[680369](169939 call thrownLine[811681] coerce_tmp[965550]))
      (169943 call =[435385] call_tmp[680369] line[169886])
      val call_tmp[680374]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
      (680377 'move' call_tmp[680374](169947 call postfix![963573] fixErr[169843]))
      ref call_tmp[680381]:_ref(int(32))[934589] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[965560]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (965565 'move' coerce_tmp[965560] call_tmp[680374])
      (680384 'move' call_tmp[680381](169951 call thrownFileId[811707] coerce_tmp[965560]))
      (169955 call =[435364] call_tmp[680381] fileId[169909])
    }
    val call_tmp[680386]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
    (680389 'move' call_tmp[680386](169965 call _to_nonnil[963812] fixErr[169843]))
    (965571 'move' ret[522319] call_tmp[680386])
    gotoReturn _end_chpl_do_fix_thrown_error[522317] _end_chpl_do_fix_thrown_error[522317]
    label _end_chpl_do_fix_thrown_error[522317]
    (522321 return ret[522319])
  }
  function chpl_fix_thrown_error[170007](const  ref arg err[170004]:owned Error[962257]) : Error[167942] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[965252]:owned Error[962257] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (965255 'move' _formal_tmp_err[965252] err[170004])
    val ret[522341]:Error[167942] "dead after last mention" "RVV" "temp"
    val call_tmp[680405]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
    (680408 'move' call_tmp[680405](170017 call release[964997] _formal_tmp_err[965252]))
    val call_tmp[680410]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[965273]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (965279 'move' coerce_tmp[965273] call_tmp[680405])
    (680413 'move' call_tmp[680410](170019 call chpl_do_fix_thrown_error[169835] coerce_tmp[965273]))
    (965574 'move' ret[522341] call_tmp[680410])
    (1794460 call chpl__autoDestroy[1406772] _formal_tmp_err[965252])
    (522343 return ret[522341])
  }
  function chpl_delete_error[170221](const in arg err[170218]:Error[167942]) : void[4] "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[680465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1714414]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1714419 'move' coerce_tmp[1714414](1714416 'cast' object[22] err[170218]))
    (680468 'move' call_tmp[680465](170225 call !=[1485] coerce_tmp[1714414] nil[44]))
    const-val call_tmp[680470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (680473 'move' call_tmp[680470] call_tmp[680465])
    if call_tmp[680470]
    {
      (170229 call chpl__delete[1232933] err[170218])
    }
    (522362 return _void[55])
  }
  function chpl_uncaught_error[170247](const in arg err[170244]:Error[167942]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680475]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680478 'move' call_tmp[680475](170279 '_get_user_file'))
    const-val call_tmp[680480]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680483 'move' call_tmp[680480](170280 'chpl_lookupFilename' call_tmp[680475]))
    const-val myFileC[170281]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544720 'move' myFileC[170281](1714423 call chpl__initCopy[21695] call_tmp[680480]))
    const-val myFileS[170286]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544722]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1762203]:Error[167942] "error variable" "temp"
      (1762219 'move' error[1762203] nil[44])
      const-val call_tmp[680485]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1714439]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1714444 'move' default_arg_length[1714439](1714441 call createStringWithNewBuffer_default_length[958930] myFileC[170281] error[1762203]))
      val errorExists[2029191]:bool[10] "temp"
      (2029196 'move' errorExists[2029191](2029193 '!=' error[1762203] nil[44]))
      if errorExists[2029191]
      {
        gotoErrorHandling handler[1762204] handler[1762204]
      }
      const-val ret_tmp[1781598]:string[26] "temp"
      (170294 call createStringWithNewBuffer[30410] myFileC[170281] default_arg_length[1714439] strict[173658] error[1762203] ret_tmp[1781598])
      (1781601 'move' call_tmp[680485] ret_tmp[1781598])
      val errorExists[2029199]:bool[10] "temp"
      (2029204 'move' errorExists[2029199](2029201 '!=' error[1762203] nil[44]))
      if errorExists[2029199]
      {
        gotoErrorHandling handler[1762204] handler[1762204]
      }
      (544733 'move' myFileS[170286] call_tmp[680485])
      label handler[1762204]
      const-val shouldHandleError[1762228]:bool[10] "temp"
      val errorExists[2029207]:bool[10] "temp"
      (2029212 'move' errorExists[2029207](2029209 '!=' error[1762203] nil[44]))
      (1762232 'move' shouldHandleError[1762228] errorExists[2029207])
      if shouldHandleError[1762228]
      {
        (1762225 call chpl_uncaught_error[170247] error[1762203])
      }
    }
    const-val call_tmp[680490]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680493 'move' call_tmp[680490](170304 '_get_user_line'))
    const-val myLine[170305]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (544736 'move' myLine[170305] call_tmp[680490])
    ref call_tmp[680497]:_ref(int(32))[934589] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1714457]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1714462 'move' coerce_tmp[1714457] err[170244])
    (680500 'move' call_tmp[680497](170313 call thrownFileId[811707] coerce_tmp[1714457]))
    const-val call_tmp[680502]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680505 'move' call_tmp[680502](170316 'chpl_lookupFilename' call_tmp[680497]))
    const-val thrownFileC[170317]:c_string[19] "dead at end of block" "const" "insert auto destroy"
    (544738 'move' thrownFileC[170317](1714465 call chpl__initCopy[21695] call_tmp[680502]))
    const-val thrownFileS[170322]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544740]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    {
      val error[1762236]:Error[167942] "error variable" "temp"
      (1762252 'move' error[1762236] nil[44])
      const-val call_tmp[680507]:string[26] "dead at end of block" "maybe param" "temp"
      const-val default_arg_length[1714481]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      (1714486 'move' default_arg_length[1714481](1714483 call createStringWithNewBuffer_default_length[958930] thrownFileC[170317] error[1762236]))
      val errorExists[2029215]:bool[10] "temp"
      (2029220 'move' errorExists[2029215](2029217 '!=' error[1762236] nil[44]))
      if errorExists[2029215]
      {
        gotoErrorHandling handler[1762237] handler[1762237]
      }
      const-val ret_tmp[1781604]:string[26] "temp"
      (170330 call createStringWithNewBuffer[30410] thrownFileC[170317] default_arg_length[1714481] strict[173658] error[1762236] ret_tmp[1781604])
      (1781607 'move' call_tmp[680507] ret_tmp[1781604])
      val errorExists[2029223]:bool[10] "temp"
      (2029228 'move' errorExists[2029223](2029225 '!=' error[1762236] nil[44]))
      if errorExists[2029223]
      {
        gotoErrorHandling handler[1762237] handler[1762237]
      }
      (544751 'move' thrownFileS[170322] call_tmp[680507])
      label handler[1762237]
      const-val shouldHandleError[1762261]:bool[10] "temp"
      val errorExists[2029231]:bool[10] "temp"
      (2029236 'move' errorExists[2029231](2029233 '!=' error[1762236] nil[44]))
      (1762265 'move' shouldHandleError[1762261] errorExists[2029231])
      if shouldHandleError[1762261]
      {
        (1762258 call chpl_uncaught_error[170247] error[1762236])
      }
    }
    ref call_tmp[680514]:_ref(int(64))[934535] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1714499]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1714504 'move' coerce_tmp[1714499] err[170244])
    (680517 'move' call_tmp[680514](170339 call thrownLine[811681] coerce_tmp[1714499]))
    const-val thrownLine[170342]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1714509]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1714513 'move' coerce_tmp[1714509](1714511 'deref' call_tmp[680514]))
    (1794463 '=' thrownLine[170342] coerce_tmp[1714509])
    (544754 'noop')
    const-val call_tmp[680519]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1714516]:Error[167942] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1714521 'move' coerce_tmp[1714516] err[170244])
    const-val ret_tmp[1783684]:string[26] "temp"
    (170366 call chpl_describe_error[169793] coerce_tmp[1714516] ret_tmp[1783684])
    (1783687 'move' call_tmp[680519] ret_tmp[1783684])
    const-val call_tmp[680524]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782398]:string[26] "temp"
    (170367 call +[38342] "uncaught " call_tmp[680519] ret_tmp[1782398])
    (1782401 'move' call_tmp[680524] ret_tmp[1782398])
    const-val call_tmp[680529]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782404]:string[26] "temp"
    (170386 call +[38342] call_tmp[680524] "\n  " ret_tmp[1782404])
    (1782407 'move' call_tmp[680529] ret_tmp[1782404])
    const-val call_tmp[680534]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782410]:string[26] "temp"
    (170389 call +[38342] call_tmp[680529] thrownFileS[170322] ret_tmp[1782410])
    (1782413 'move' call_tmp[680534] ret_tmp[1782410])
    const-val call_tmp[680539]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782416]:string[26] "temp"
    (170392 call +[38342] call_tmp[680534] ":" ret_tmp[1782416])
    (1782419 'move' call_tmp[680539] ret_tmp[1782416])
    const-val call_tmp[680544]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785544]:string[26] "temp"
    (170396 call _cast[1060220] thrownLine[170342] ret_tmp[1785544])
    (1785547 'move' call_tmp[680544] ret_tmp[1785544])
    const-val call_tmp[680549]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782422]:string[26] "temp"
    (170398 call +[38342] call_tmp[680539] call_tmp[680544] ret_tmp[1782422])
    (1782425 'move' call_tmp[680549] ret_tmp[1782422])
    const-val call_tmp[680554]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782428]:string[26] "temp"
    (170417 call +[38342] call_tmp[680549] ": thrown here" ret_tmp[1782428])
    (1782431 'move' call_tmp[680554] ret_tmp[1782428])
    const-val call_tmp[680559]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782434]:string[26] "temp"
    (170420 call +[38342] call_tmp[680554] "\n  " ret_tmp[1782434])
    (1782437 'move' call_tmp[680559] ret_tmp[1782434])
    const-val call_tmp[680564]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782440]:string[26] "temp"
    (170423 call +[38342] call_tmp[680559] myFileS[170286] ret_tmp[1782440])
    (1782443 'move' call_tmp[680564] ret_tmp[1782440])
    const-val call_tmp[680569]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782446]:string[26] "temp"
    (170426 call +[38342] call_tmp[680564] ":" ret_tmp[1782446])
    (1782449 'move' call_tmp[680569] ret_tmp[1782446])
    const-val call_tmp[680574]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785550]:string[26] "temp"
    (170430 call _cast[1060220] myLine[170305] ret_tmp[1785550])
    (1785553 'move' call_tmp[680574] ret_tmp[1785550])
    const-val call_tmp[680579]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782452]:string[26] "temp"
    (170432 call +[38342] call_tmp[680569] call_tmp[680574] ret_tmp[1782452])
    (1782455 'move' call_tmp[680579] ret_tmp[1782452])
    const-val call_tmp[680584]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1782458]:string[26] "temp"
    (170451 call +[38342] call_tmp[680579] ": uncaught here" ret_tmp[1782458])
    (1782461 'move' call_tmp[680584] ret_tmp[1782458])
    const-val s[170453]:string[26] "dead at end of block" "insert auto destroy"
    (544756 'move' s[170453] call_tmp[680584])
    const-val call_tmp[680591]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (680594 'move' call_tmp[680591](170463 call c_str[32932] s[170453]))
    (170465 call chpl_error_preformatted[1714583] call_tmp[680591])
    (1794466 call chpl__autoDestroy[1399678] s[170453])
    (1794469 call chpl__autoDestroy[1399678] call_tmp[680579])
    (1794472 call chpl__autoDestroy[1399678] call_tmp[680574])
    (1794475 call chpl__autoDestroy[1399678] call_tmp[680569])
    (1794478 call chpl__autoDestroy[1399678] call_tmp[680564])
    (1794481 call chpl__autoDestroy[1399678] call_tmp[680559])
    (1794484 call chpl__autoDestroy[1399678] call_tmp[680554])
    (1794487 call chpl__autoDestroy[1399678] call_tmp[680549])
    (1794490 call chpl__autoDestroy[1399678] call_tmp[680544])
    (1794493 call chpl__autoDestroy[1399678] call_tmp[680539])
    (1794496 call chpl__autoDestroy[1399678] call_tmp[680534])
    (1794499 call chpl__autoDestroy[1399678] call_tmp[680529])
    (1794502 call chpl__autoDestroy[1399678] call_tmp[680524])
    (1794505 call chpl__autoDestroy[1399678] call_tmp[680519])
    (1794508 call chpl__autoDestroy[1399678] thrownFileS[170322])
    (1794511 call chpl__autoDestroy[1399678] myFileS[170286])
    (522366 return _void[55])
  }
  function chpl_propagate_error[170476](const in arg err[170473]:Error[167942]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170481 call chpl_uncaught_error[170247] err[170473])
    (522368 return _void[55])
  }
  function chpl_forall_error[170493](const in arg err[170490]:Error[167942]) : Error[167942] "no doc" "resolved"
  {
    val ret[522372]:Error[167942] "dead after last mention" "RVV" "temp"
    val call_tmp[680596]:TaskErrors[169660] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1714813]:Error[167942] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1714818 'move' coerce_tmp[1714813] err[170490])
    (680599 'move' call_tmp[680596](170501 call _cast[1714671] coerce_tmp[1714813]))
    const-val call_tmp[680601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1714846]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1714851 'move' coerce_tmp[1714846](1714848 'cast' object[22] call_tmp[680596]))
    (680604 'move' call_tmp[680601](170506 call _cond_test[9881] coerce_tmp[1714846]))
    if call_tmp[680601]
    {
      (1715031 'move' ret[522372] err[170490])
      gotoReturn _end_chpl_forall_error[522370] _end_chpl_forall_error[522370]
    }
    val call_tmp[680606]:TaskErrors[169660] "dead after last mention" "insert auto destroy" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1715012]:TaskErrors[169660] "dead after last mention" "temp"
    (1715014 'move' new_temp[1715012](1714858 call _new[1714962] err[170490]))
    (680609 'move' call_tmp[680606] new_temp[1715012])
    (522384 'move' ret[522372](1715033 'cast' Error[167942] call_tmp[680606]))
    label _end_chpl_forall_error[522370]
    (522374 return ret[522372])
  }
  function chpl_enum_cast_error[1068897](const in arg casted[1068899]:uint(8)[100], const  ref arg enumName[1068901]:string[26], ref arg error_out[1764358]:Error[167942]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1068907]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1785864]:string[26] "temp"
    (1068912 call _cast[1068961] casted[1068899] ret_tmp[1785864])
    (1785867 'move' call_tmp[1068907] ret_tmp[1785864])
    const-val call_tmp[1068915]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782590]:string[26] "temp"
    (1068920 call +[38342] "bad cast from int '" call_tmp[1068907] ret_tmp[1782590])
    (1782593 'move' call_tmp[1068915] ret_tmp[1782590])
    const-val call_tmp[1068923]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782596]:string[26] "temp"
    (1068928 call +[38342] call_tmp[1068915] "' to enum '" ret_tmp[1782596])
    (1782599 'move' call_tmp[1068923] ret_tmp[1782596])
    const-val call_tmp[1068931]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1782602]:string[26] "temp"
    (1068936 call +[38342] call_tmp[1068923] enumName[1068901] ret_tmp[1782602])
    (1782605 'move' call_tmp[1068931] ret_tmp[1782602])
    const-val call_tmp[1068939]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1070597]:IllegalArgumentError[168204] "dead after last mention" "temp"
    (1070599 'move' new_temp[1070597](1070523 call _new[1070544] call_tmp[1068931] "'"))
    const-val initTemp[1070618]:owned IllegalArgumentError[1061625] "dead after last mention" "delay instantiation" "temp"
    (1070621 call init[1061276] initTemp[1070618] new_temp[1070597])
    (1068941 'move' call_tmp[1068939] initTemp[1070618])
    val call_tmp[1068949]:Error[167942] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1070635]:owned Error[962257] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1785748]:owned Error[962257] "temp"
    (1070637 call _cast[1061797] call_tmp[1068939] ret_tmp[1785748])
    (1785751 'move' coerce_tmp[1070635] ret_tmp[1785748])
    const-val _formal_tmp_in_err[1070814]:owned Error[962257] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1070818 'move' _formal_tmp_in_err[1070814] coerce_tmp[1070635])
    (1068951 'move' call_tmp[1068949](1068954 call chpl_fix_thrown_error[170007] _formal_tmp_in_err[1070814]))
    {
      val castedError[1764363]:Error[167942] "temp"
      (1764369 'move' castedError[1764363] call_tmp[1068949])
      (1764371 '=' error_out[1764358] castedError[1764363])
      (1796341 call chpl__autoDestroy[1399678] call_tmp[1068931])
      (1796344 call chpl__autoDestroy[1399678] call_tmp[1068923])
      (1796347 call chpl__autoDestroy[1399678] call_tmp[1068915])
      (1796350 call chpl__autoDestroy[1399678] call_tmp[1068907])
      gotoErrorHandlingReturn _endchpl_enum_cast_error[1764360] _endchpl_enum_cast_error[1764360]
    }
    (1796362 call chpl__autoDestroy[1399678] call_tmp[1068931])
    (1796359 call chpl__autoDestroy[1399678] call_tmp[1068923])
    (1796356 call chpl__autoDestroy[1399678] call_tmp[1068915])
    (1796353 call chpl__autoDestroy[1399678] call_tmp[1068907])
    label _endchpl_enum_cast_error[1764360]
    (1068958 return _void[55])
  }
  function chpl_error_preformatted[1714583](const in arg c_string[1714585]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1714591 return _void[55])
  }
}