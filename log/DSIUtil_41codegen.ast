AST dump for DSIUtil after pass codegen.
Module use list: ChapelStandard 

{
  function chpl__init_DSIUtil[416110](const in arg _ln[2476730]:int(64)[13], in arg _fn[2476732]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_DSIUtil_p[2452266]
    {
      goto _exit_chpl__init_DSIUtil[2452303] _exit_chpl__init_DSIUtil[2452303]
    }
    ref refIndentLevel[2452289]:_ref(int(32))[936626] "temp"
    (2452287 call printModuleInit[20426] c"%*s\n" c"DSIUtil" 7 _ln[2476730] _fn[2476732])
    (2452293 'move' refIndentLevel[2452289](2452292 'addr of' moduleInitLevel[20416]))
    (2452296 '+=' refIndentLevel[2452289] 1)
    (2452272 'move' chpl__init_DSIUtil_p[2452266] 1)
    (2452299 '-=' refIndentLevel[2452289] 1)
    label _exit_chpl__init_DSIUtil[2452303]
    (533602 return _void[55])
  }
  function createTuple[1306205](const in arg val[1306211]:int(64)[13], ref arg _retArg[1837249]:_ref(1*int(64))[1256595]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val ret[1306213]:1*int(64)[1256525] "dead after last mention" "RVV" "temp"
    (2353798 'set svec member' ret[1306213] 0 val[1306211])
    (1837251 '=' _retArg[1837249] ret[1306213])
    (1837253 return _void[55])
  }
  function _computeChunkStuff[1366948](const in arg maxTasks[1366950]:int(64)[13], const in arg ignoreRunning[1366952]:bool[10], const in arg minSize[1366954]:int(64)[13], const  wide-ref arg ranges[1366956]:__wide__ref__tuple_1_star_range_int64_t_bounded_F[2382811], ref arg _retArg[1838091]:_ref(2*int(64))[1040129], const in arg _ln[2462754]:int(64)[13], in arg _fn[2462756]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1366969]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    val numElems[1367013]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367015 'move' numElems[1367013] 1)
    const-val call_tmp[1367595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1367624]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1367628 'move' coerce_tmp[1367624](2372634 'get svec member value' ranges[1366956] 0))
    (1367597 'move' call_tmp[1367595](1367600 call size[1035789] coerce_tmp[1367624] _ln[2462754] _fn[2462756]))
    ref i_lhs[2213354]:_ref(uint(64))[936601] "temp"
    (2213358 'move' i_lhs[2213354](2213356 'set reference' numElems[1367013]))
    (2213361 '*=' i_lhs[2213354](2116806 'cast' uint(64)[115] call_tmp[1367595] _ln[2462754] _fn[2462756]))
    const-val call_tmp[1367105]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1367107 'move' call_tmp[1367105](1367110 call _computeNumChunks[1367644] maxTasks[1366950] ignoreRunning[1366952] minSize[1366954] numElems[1367013] _ln[2462754] _fn[2462756]))
    val numChunks[1367115]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367117 'move' numChunks[1367115] call_tmp[1367105])
    if(2118512 '==' call_tmp[1367105] 0)
    {
      const-val ret_tmp[1832881]:2*int(64)[1040056] "temp"
      (2364410 'set svec member' ret_tmp[1832881] 0 0)
      (2364414 'set svec member' ret_tmp[1832881] 1 -1)
      (1368914 'move' ret[1366969] ret_tmp[1832881])
      gotoReturn _end__computeChunkStuff[1367530] _end__computeChunkStuff[1367530]
    }
    (1367178 call assert[210345](2124711 '>' call_tmp[1367105] 0) _ln[2462754] _fn[2462756])
    val parDim[1367189]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367191 'move' parDim[1367189] -1)
    val maxDim[1367202]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367204 'move' maxDim[1367202] -1)
    val maxElems[1367215]:uint(64)[115] "dead at end of block" "insert auto destroy"
    (1367217 'move' maxElems[1367215] 0)
    const-val _ic__F1_high[2349139]:int(64)[13] "temp"
    (2185443 'move' _ic__F1_high[2349139] 0)
    val i[1923749]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1923753 'move' i[1923749] 0)
    (1923805 call chpl_checkIfRangeIterWillOverflow[1096076] 0 0 1 0 0 1 _ln[2462754] _fn[2462756])
    CForLoop[1923812]
    {
      wide-ref call_tmp[1923889]:__wide__ref_range_int64_t_bounded_F[2382449] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1923891 'move' call_tmp[1923889](1923894 call this[1368641] ranges[1366956] i[1923749] _ln[2462754] _fn[2462756]))
      const-val call_tmp[1923897]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1923899]:range(int(64),bounded,false)[1026814] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1923901 'move' coerce_tmp[1923899] call_tmp[1923889])
      (1923906 'move' call_tmp[1923897](1923909 call size[1035789] coerce_tmp[1923899] _ln[2462754] _fn[2462756]))
      const-val call_tmp[2117002]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2117004 'move' call_tmp[2117002](2117006 'cast' uint(64)[115] call_tmp[1923897] _ln[2462754] _fn[2462756]))
      if(2212163 '>=' call_tmp[2117002](2117016 'cast' uint(64)[115] numChunks[1367115] _ln[2462754] _fn[2462756]))
      {
        (2122551 '=' parDim[1367189] i[1923749])
        break _breakLabel[1367374] _breakLabel[1367374]
      }
      if(2212298 '>' call_tmp[2117002] maxElems[1367215])
      {
        (2212051 '=' maxElems[1367215] call_tmp[2117002])
        (2122563 '=' maxDim[1367202] i[1923749])
      }
      {
        (1923821 '=' i[1923749] 0)
      }
      {
        (1923832 '<=' i[1923749] _ic__F1_high[2349139])
      }
      {
        (1923838 '+=' i[1923749] 1)
      }
    }
    label _breakLabel[1367374]
    if(2118527 '==' parDim[1367189] -1)
    {
      (2121775 '=' parDim[1367189] maxDim[1367202])
      if(2212233 '<' maxElems[1367215](2116856 'cast' uint(64)[115] numChunks[1367115] _ln[2462754] _fn[2462756]))
      {
        (2121787 '=' numChunks[1367115](2182150 'cast' int(64)[13] maxElems[1367215] _ln[2462754] _fn[2462756]))
      }
    }
    const-val ret_tmp[1832887]:2*int(64)[1040056] "temp"
    (2364424 'set svec member' ret_tmp[1832887] 0 numChunks[1367115])
    (2364428 'set svec member' ret_tmp[1832887] 1 parDim[1367189])
    (1368917 'move' ret[1366969] ret_tmp[1832887])
    label _end__computeChunkStuff[1367530]
    (1838093 '=' _retArg[1838091] ret[1366969])
    (1838099 return _void[55])
  }
  function _local__computeNumChunks[2405996](const in arg maxTasks[2405998]:int(64)[13], const in arg ignoreRunning[2406000]:bool[10], const in arg minSize[2406002]:int(64)[13], const in arg numElems[2406004]:int(64)[13], const in arg _ln[2467320]:int(64)[13], in arg _fn[2467322]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    val ret[2406007]:int(64)[13] "dead after last mention" "RVV" "temp"
    if(2406013 '<=' numElems[2406004] 0)
    {
      (2406018 'move' ret[2406007] 0)
      gotoReturn _end__computeNumChunks[2406270] _end__computeNumChunks[2406270]
    }
    const-val call_tmp[2406024]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406026 'move' call_tmp[2406024](2406028 'cast' uint(64)[115] numElems[2406004] _ln[2467320] _fn[2467322]))
    const-val unumElems[2406031]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (2406033 'move' unumElems[2406031] call_tmp[2406024])
    val numChunks[2406036]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2406038 'move' numChunks[2406036] maxTasks[2405998])
    if(2406045 '!' ignoreRunning[2406000])
    {
      const-val call_tmp[2406049]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2406051]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2406053]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2406055 'move' call_tmp[2406053](2406058 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2406061 'move' call_tmp[2406051] call_tmp[2406053])
      const-val call_tmp[2406064]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2406066]:locale[28] "temp"
      wide-ref tmp[2447386]:__wide__ref_chpl_localeID_t[2381718] "temp"
      (2447390 'move' tmp[2447386](2447388 'set reference' call_tmp[2406051]))
      (2406069 call _local_chpl_localeID_to_locale[2405760] tmp[2447386] ret_tmp[2406066] _ln[2467320] _fn[2467322])
      (2406072 'move' call_tmp[2406064] ret_tmp[2406066])
      (2406075 'move' call_tmp[2406049] call_tmp[2406064])
      const-val call_tmp[2406078]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (2406080 'move' call_tmp[2406078](2406083 call _local_runningTasks[2410444] call_tmp[2406049] _ln[2467320] _fn[2467322]))
      const-val call_tmp[2406085]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2406087 'move' call_tmp[2406085](2406089 '-' call_tmp[2406078] 1))
      val tmp[2406092]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2406098 '<' call_tmp[2406085] maxTasks[2405998])
      {
        (2406110 'move' tmp[2406092](2498186 'cast' int(64)[13](2406107 '-' maxTasks[2405998] call_tmp[2406085])))
      }
      {
        (2406114 'move' tmp[2406092] 1)
      }
      (2406118 '=' numChunks[2406036] tmp[2406092])
      ref i_x[2406121]:_ref(locale)[948844] "temp"
      (2406123 'move' i_x[2406121](2406125 'set reference' call_tmp[2406049]))
      wide-ref tmp[2447393]:__wide__ref_locale[2381843] "temp"
      (2447396 'move' tmp[2447393] i_x[2406121])
      (2406128 call _local_deinit[2405987] tmp[2447393])
    }
    if(2406135 '>' minSize[2406002] 0)
    {
      val tmp[2406140]:bool[10] "dead after last mention" "temp"
      val tmp[2406163]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2406160 '<' call_tmp[2406024](2406153 'cast' uint(64)[115](2498188 'cast' int(64)[13](2406146 '*' minSize[2406002] numChunks[2406036])) _ln[2467320] _fn[2467322]))
      {
        (2406174 'move' tmp[2406163](2406171 '>' numChunks[2406036] 1))
      }
      {
        (2406178 'move' tmp[2406163] 0)
      }
      (2406182 'move' tmp[2406140] tmp[2406163])
      WhileDo[2406185]
      {
        ref i_lhs[2406187]:_ref(int(64))[936572] "temp"
        (2406189 'move' i_lhs[2406187](2406191 'set reference' numChunks[2406036]))
        (2406193 '-=' i_lhs[2406187] 1)
        val tmp[2406217]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2406214 '<' unumElems[2406031](2406207 'cast' uint(64)[115](2498190 'cast' int(64)[13](2406200 '*' minSize[2406002] numChunks[2406036])) _ln[2467320] _fn[2467322]))
        {
          (2406228 'move' tmp[2406217](2406225 '>' numChunks[2406036] 1))
        }
        {
          (2406232 'move' tmp[2406217] 0)
        }
        (2406236 'move' tmp[2406140] tmp[2406217])
        tmp[2406140]
      }
    }
    if(2406251 '>'(2406244 'cast' uint(64)[115] numChunks[2406036] _ln[2467320] _fn[2467322]) unumElems[2406031])
    {
      (2406263 '=' numChunks[2406036](2406260 'cast' int(64)[13] unumElems[2406031] _ln[2467320] _fn[2467322]))
    }
    (2406267 'move' ret[2406007] numChunks[2406036])
    label _end__computeNumChunks[2406270]
    (2406272 return ret[2406007])
  }
  function _computeNumChunks[1225955](const in arg maxTasks[1225957]:int(64)[13], const in arg ignoreRunning[1225959]:bool[10], const in arg minSize[1225961]:int(64)[13], const in arg numElems[1225963]:int(64)[13], const in arg _ln[2462694]:int(64)[13], in arg _fn[2462696]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1225967]:int(64)[13] "dead after last mention" "RVV" "temp"
    if(2170917 '<=' numElems[1225963] 0)
    {
      (1225998 'move' ret[1225967] 0)
      gotoReturn _end__computeNumChunks[1226399] _end__computeNumChunks[1226399]
    }
    const-val call_tmp[2116522]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2116524 'move' call_tmp[2116522](2116526 'cast' uint(64)[115] numElems[1225963] _ln[2462694] _fn[2462696]))
    const-val unumElems[1226020]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1226022 'move' unumElems[1226020] call_tmp[2116522])
    val numChunks[1226034]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1226036 'move' numChunks[1226034] maxTasks[1225957])
    if(2114324 '!' ignoreRunning[1225959])
    {
      const-val call_tmp[1226057]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2167891]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2167893]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2167895 'move' call_tmp[2167893](2167898 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2167901 'move' call_tmp[2167891] call_tmp[2167893])
      const-val call_tmp[2167904]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2167906]:locale[28] "temp"
      wide-ref tmp[2428986]:__wide__ref_chpl_localeID_t[2381718] "temp"
      (2428990 'move' tmp[2428986](2428988 'set reference' call_tmp[2167891]))
      (2167909 call chpl_localeID_to_locale[92849] tmp[2428986] ret_tmp[2167906] _ln[2462694] _fn[2462696])
      (2167912 'move' call_tmp[2167904] ret_tmp[2167906])
      (1830574 'move' call_tmp[1226057] call_tmp[2167904])
      const-val call_tmp[1226063]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1226065 'move' call_tmp[1226063](1226071 call runningTasks[93122] call_tmp[1226057] _ln[2462694] _fn[2462696]))
      const-val call_tmp[2144440]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144442 'move' call_tmp[2144440](2144444 '-' call_tmp[1226063] 1))
      val tmp[1226086]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2128476 '<' call_tmp[2144440] maxTasks[1225957])
      {
        (1226121 'move' tmp[1226086](2497868 'cast' int(64)[13](2127355 '-' maxTasks[1225957] call_tmp[2144440])))
      }
      {
        (1226127 'move' tmp[1226086] 1)
      }
      (2121407 '=' numChunks[1226034] tmp[1226086])
      ref i_x[2264435]:_ref(locale)[948844] "temp"
      (2264439 'move' i_x[2264435](2264437 'set reference' call_tmp[1226057]))
      wide-ref tmp[2434158]:__wide__ref_locale[2381843] "temp"
      (2434161 'move' tmp[2434158] i_x[2264435])
      (2264443 call deinit[90185] tmp[2434158])
    }
    if(2124426 '>' minSize[1225961] 0)
    {
      val tmp[1226159]:bool[10] "dead after last mention" "temp"
      val tmp[1226198]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2212193 '<' call_tmp[2116522](2116536 'cast' uint(64)[115](2497870 'cast' int(64)[13](2212612 '*' minSize[1225961] numChunks[1226034])) _ln[2462694] _fn[2462696]))
      {
        (1226231 'move' tmp[1226198](2124441 '>' numChunks[1226034] 1))
      }
      {
        (1226237 'move' tmp[1226198] 0)
      }
      (1226243 'move' tmp[1226159] tmp[1226198])
      WhileDo[1226248]
      {
        ref i_lhs[2213275]:_ref(int(64))[936572] "temp"
        (2213279 'move' i_lhs[2213275](2213277 'set reference' numChunks[1226034]))
        (2213287 '-=' i_lhs[2213275] 1)
        val tmp[1226296]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2212203 '<' unumElems[1226020](2116546 'cast' uint(64)[115](2497872 'cast' int(64)[13](2212622 '*' minSize[1225961] numChunks[1226034])) _ln[2462694] _fn[2462696]))
        {
          (1226329 'move' tmp[1226296](2124456 '>' numChunks[1226034] 1))
        }
        {
          (1226335 'move' tmp[1226296] 0)
        }
        (1226341 'move' tmp[1226159] tmp[1226296])
        tmp[1226159]
      }
    }
    if(2212278 '>'(2116556 'cast' uint(64)[115] numChunks[1226034] _ln[2462694] _fn[2462696]) unumElems[1226020])
    {
      (2121419 '=' numChunks[1226034](2182090 'cast' int(64)[13] unumElems[1226020] _ln[2462694] _fn[2462696]))
    }
    (1227894 'move' ret[1225967] numChunks[1226034])
    label _end__computeNumChunks[1226399]
    (1226401 return ret[1225967])
  }
  function _computeNumChunks[1367644](const in arg maxTasks[1367646]:int(64)[13], const in arg ignoreRunning[1367648]:bool[10], const in arg minSize[1367650]:int(64)[13], const in arg numElems[1367652]:uint(64)[115], const in arg _ln[2462760]:int(64)[13], in arg _fn[2462762]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1367656]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2117669]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2117667 '!'(2117660 '<' 0 0))
    {
      (2117687 'move' tmp[2117669](2117684 '<=' numElems[1367652](2117677 'cast' uint(64)[115] 0 _ln[2462760] _fn[2462762])))
    }
    {
      (2117691 'move' tmp[2117669] 0)
    }
    if tmp[2117669]
    {
      (1367687 'move' ret[1367656] 0)
      gotoReturn _end__computeNumChunks[1368088] _end__computeNumChunks[1368088]
    }
    const-val unumElems[1367709]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1367711 'move' unumElems[1367709] numElems[1367652])
    val numChunks[1367723]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1367725 'move' numChunks[1367723] maxTasks[1367646])
    if(2114531 '!' ignoreRunning[1367648])
    {
      const-val call_tmp[1367746]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168143]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168145]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2168147 'move' call_tmp[2168145](2168150 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2168153 'move' call_tmp[2168143] call_tmp[2168145])
      const-val call_tmp[2168156]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2168158]:locale[28] "temp"
      wide-ref tmp[2429035]:__wide__ref_chpl_localeID_t[2381718] "temp"
      (2429039 'move' tmp[2429035](2429037 'set reference' call_tmp[2168143]))
      (2168161 call chpl_localeID_to_locale[92849] tmp[2429035] ret_tmp[2168158] _ln[2462760] _fn[2462762])
      (2168164 'move' call_tmp[2168156] ret_tmp[2168158])
      (1830634 'move' call_tmp[1367746] call_tmp[2168156])
      const-val call_tmp[1367752]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1367754 'move' call_tmp[1367752](1367760 call runningTasks[93122] call_tmp[1367746] _ln[2462760] _fn[2462762]))
      const-val call_tmp[2144570]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144572 'move' call_tmp[2144570](2144574 '-' call_tmp[1367752] 1))
      val tmp[1367775]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2128496 '<' call_tmp[2144570] maxTasks[1367646])
      {
        (1367810 'move' tmp[1367775](2497988 'cast' int(64)[13](2127365 '-' maxTasks[1367646] call_tmp[2144570])))
      }
      {
        (1367816 'move' tmp[1367775] 1)
      }
      (2121751 '=' numChunks[1367723] tmp[1367775])
      ref i_x[2264519]:_ref(locale)[948844] "temp"
      (2264523 'move' i_x[2264519](2264521 'set reference' call_tmp[1367746]))
      wide-ref tmp[2434200]:__wide__ref_locale[2381843] "temp"
      (2434203 'move' tmp[2434200] i_x[2264519])
      (2264527 call deinit[90185] tmp[2434200])
    }
    if(2124666 '>' minSize[1367650] 0)
    {
      val tmp[1367848]:bool[10] "dead after last mention" "temp"
      val tmp[1367887]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2212213 '<' numElems[1367652](2116826 'cast' uint(64)[115](2497990 'cast' int(64)[13](2212762 '*' minSize[1367650] numChunks[1367723])) _ln[2462760] _fn[2462762]))
      {
        (1367920 'move' tmp[1367887](2124681 '>' numChunks[1367723] 1))
      }
      {
        (1367926 'move' tmp[1367887] 0)
      }
      (1367932 'move' tmp[1367848] tmp[1367887])
      WhileDo[1367937]
      {
        ref i_lhs[2213303]:_ref(int(64))[936572] "temp"
        (2213307 'move' i_lhs[2213303](2213305 'set reference' numChunks[1367723]))
        (2213315 '-=' i_lhs[2213303] 1)
        val tmp[1367985]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if(2212223 '<' unumElems[1367709](2116836 'cast' uint(64)[115](2497992 'cast' int(64)[13](2212772 '*' minSize[1367650] numChunks[1367723])) _ln[2462760] _fn[2462762]))
        {
          (1368018 'move' tmp[1367985](2124696 '>' numChunks[1367723] 1))
        }
        {
          (1368024 'move' tmp[1367985] 0)
        }
        (1368030 'move' tmp[1367848] tmp[1367985])
        tmp[1367848]
      }
    }
    if(2212288 '>'(2116846 'cast' uint(64)[115] numChunks[1367723] _ln[2462760] _fn[2462762]) unumElems[1367709])
    {
      (2121763 '=' numChunks[1367723](2182140 'cast' int(64)[13] unumElems[1367709] _ln[2462760] _fn[2462762]))
    }
    (1368149 'move' ret[1367656] numChunks[1367723])
    label _end__computeNumChunks[1368088]
    (1368090 return ret[1367656])
  }
  function _computeNumChunks[1262322](const in arg numElems[1262324]:int(64)[13], const in arg _ln[2463590]:int(64)[13], in arg _fn[2463592]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_dataParMinGranularity[2379099]:int(64)[13] "temp"
    (2379100 'move' local_dataParMinGranularity[2379099] dataParMinGranularity[93293])
    const-val local_dataParIgnoreRunningTasks[2379093]:bool[10] "temp"
    (2379094 'move' local_dataParIgnoreRunningTasks[2379093] dataParIgnoreRunningTasks[93287])
    const-val local__str_literal_129[2379086]:string[26] "temp"
    (2379087 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_dataParTasksPerLocale[2379080]:int(64)[13] "temp"
    (2379081 'move' local_dataParTasksPerLocale[2379080] dataParTasksPerLocale[93281])
    val tmp[1262338]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2118397 '==' local_dataParTasksPerLocale[2379080] 0)
    {
      const-val call_tmp[1262359]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168035]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2168037]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2168039 'move' call_tmp[2168037](2168042 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2168045 'move' call_tmp[2168035] call_tmp[2168037])
      const-val call_tmp[2168048]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2168050]:locale[28] "temp"
      wide-ref tmp[2429014]:__wide__ref_chpl_localeID_t[2381718] "temp"
      (2429018 'move' tmp[2429014](2429016 'set reference' call_tmp[2168035]))
      (2168053 call chpl_localeID_to_locale[92849] tmp[2429014] ret_tmp[2168050] _ln[2463590] _fn[2463592])
      (2168056 'move' call_tmp[2168048] ret_tmp[2168050])
      (1830598 'move' call_tmp[1262359] call_tmp[2168048])
      val coerce_tmp[2169009]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169011 'move' coerce_tmp[2169009](2169013 '.v' call_tmp[1262359] _instance[89975]))
      val coerce_tmp[2169016]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169018 'move' coerce_tmp[2169016](2169020 'cast' object[22] coerce_tmp[2169009] _ln[2463590] _fn[2463592]))
      val tmp[2429184]:__wide_object[2381018] "temp"
      (2429187 'move' tmp[2429184] nil[44])
      if(2169027 'ptr_eq' coerce_tmp[2169016] tmp[2429184])
      {
        (2169033 call nilCheckHalt[210151] "argument to ! is nil" _ln[2463590] _fn[2463592])
      }
      val coerce_tmp[2169036]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2169038 'move' coerce_tmp[2169036] coerce_tmp[2169009])
      val tmp[2429190]:int(64)[13] "temp"
      (2455511 '_check_nil' coerce_tmp[2169036] _ln[2463590] _fn[2463592])
      (2169041 'move' tmp[2429190](2169043 '.v' coerce_tmp[2169036] maxTaskPar[90743]))
      (1262371 'move' tmp[1262338] tmp[2429190])
      ref i_x[2264483]:_ref(locale)[948844] "temp"
      (2264487 'move' i_x[2264483](2264485 'set reference' call_tmp[1262359]))
      wide-ref tmp[2434182]:__wide__ref_locale[2381843] "temp"
      (2434185 'move' tmp[2434182] i_x[2264483])
      (2264491 call deinit[90185] tmp[2434182])
    }
    {
      (1262377 'move' tmp[1262338] local_dataParTasksPerLocale[2379080])
    }
    const-val call_tmp[1262399]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1262401 'move' call_tmp[1262399](1262404 call _computeNumChunks[1225955] tmp[1262338] local_dataParIgnoreRunningTasks[2379093] local_dataParMinGranularity[2379099] numElems[1262324] _ln[2463590] _fn[2463592]))
    (1262429 return call_tmp[1262399])
  }
  function _local_intCeilXDivByY[2413050](const in arg x[2413052]:uint(64)[115], const in arg y[2413054]:uint(64)[115], const in arg _ln[2467836]:int(64)[13], in arg _fn[2467838]:int(32)[95]) : uint(64)[115] "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val local__str_literal_71[2413057]:string[26] "temp"
    (2413059 'move' local__str_literal_71[2413057] "Attempt to divide by zero")
    const-val call_tmp[2413062]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2413064 'move' call_tmp[2413062](2413066 '-' x[2413052] 1))
    val tmp[2413082]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2413080 '!'(2413073 '<' 0 0))
    {
      (2413100 'move' tmp[2413082](2413097 '==' y[2413054](2413090 'cast' uint(64)[115] 0 _ln[2467836] _fn[2467838])))
    }
    {
      (2413104 'move' tmp[2413082] 0)
    }
    if tmp[2413082]
    {
      (2413111 call _local_halt[2388583] local__str_literal_71[2413057] _ln[2467836] _fn[2467838])
    }
    const-val call_tmp[2413114]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2413116 'move' call_tmp[2413114](2413118 '/' call_tmp[2413062] y[2413054]))
    const-val call_tmp[2413121]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2413123 'move' call_tmp[2413121](2413125 '+' 1 call_tmp[2413114]))
    (2413128 return call_tmp[2413121])
  }
  function intCeilXDivByY[1229809](const in arg x[1229811]:uint(64)[115], const in arg y[1229813]:uint(64)[115], const in arg _ln[2464310]:int(64)[13], in arg _fn[2464312]:int(32)[95]) : uint(64)[115] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_71[2379002]:string[26] "temp"
    (2379003 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    const-val call_tmp[2181776]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2181778 'move' call_tmp[2181776](2181780 '-' x[1229811] 1))
    val tmp[2212984]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2212982 '!'(2212975 '<' 0 0))
    {
      (2213002 'move' tmp[2212984](2212999 '==' y[1229813](2212992 'cast' uint(64)[115] 0 _ln[2464310] _fn[2464312])))
    }
    {
      (2213006 'move' tmp[2212984] 0)
    }
    if tmp[2212984]
    {
      (2213013 call halt[154067] "Attempt to divide by zero" _ln[2464310] _fn[2464312])
    }
    const-val call_tmp[2213016]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213018 'move' call_tmp[2213016](2213020 '/' call_tmp[2181776] y[1229813]))
    const-val call_tmp[2269337]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269339 'move' call_tmp[2269337](2269341 '+' 1 call_tmp[2213016]))
    (1229853 return call_tmp[2269337])
  }
  function _local__computeBlock[2410924](const in arg numelems[2410926]:int(64)[13], const in arg numblocks[2410928]:int(64)[13], const in arg blocknum[2410930]:int(64)[13], const in arg wayhi[2410932]:int(64)[13], const in arg waylo[2410934]:int(64)[13], const in arg lo[2410936]:int(64)[13], ref arg _retArg[2410938]:_ref(2*int(64))[1040129], const in arg _ln[2467616]:int(64)[13], in arg _fn[2467618]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    val ret[2410941]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    if(2410947 '==' numelems[2410926] 0)
    {
      const-val ret_tmp[2410952]:2*int(64)[1040056] "temp"
      (2410954 'set svec member' ret_tmp[2410952] 0 1)
      (2410958 'set svec member' ret_tmp[2410952] 1 0)
      (2410962 'move' ret[2410941] ret_tmp[2410952])
      gotoReturn _end__computeBlock[2411140] _end__computeBlock[2411140]
    }
    val tmp[2410968]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2410974 '==' blocknum[2410930] 0)
    {
      (2410979 'move' tmp[2410968] waylo[2410934])
    }
    {
      const-val call_tmp[2411011]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (2411013 'move' call_tmp[2411011](2411016 call _local_intCeilXDivByY[2413050](2498224 'cast' uint(64)[115](2411001 '*'(2410987 'cast' uint(64)[115] numelems[2410926] _ln[2467616] _fn[2467618])(2410994 'cast' uint(64)[115] blocknum[2410930] _ln[2467616] _fn[2467618])))(2411008 'cast' uint(64)[115] numblocks[2410928] _ln[2467616] _fn[2467618]) _ln[2467616] _fn[2467618]))
      (2411033 'move' tmp[2410968](2498226 'cast' int(64)[13](2411030 '+' lo[2410936](2411023 'cast' int(64)[13] call_tmp[2411011] _ln[2467616] _fn[2467618]))))
    }
    val tmp[2411037]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2411050 '==' blocknum[2410930](2498228 'cast' int(64)[13](2411043 '-' numblocks[2410928] 1)))
    {
      (2411055 'move' tmp[2411037] wayhi[2410932])
    }
    {
      const-val call_tmp[2411094]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (2411096 'move' call_tmp[2411094](2411099 call _local_intCeilXDivByY[2413050](2498232 'cast' uint(64)[115](2411084 '*'(2411063 'cast' uint(64)[115] numelems[2410926] _ln[2467616] _fn[2467618])(2411077 'cast' uint(64)[115](2498230 'cast' int(64)[13](2411070 '+' blocknum[2410930] 1)) _ln[2467616] _fn[2467618])))(2411091 'cast' uint(64)[115] numblocks[2410928] _ln[2467616] _fn[2467618]) _ln[2467616] _fn[2467618]))
      (2411123 'move' tmp[2411037](2498236 'cast' int(64)[13](2411120 '-'(2498234 'cast' int(64)[13](2411113 '+' lo[2410936](2411106 'cast' int(64)[13] call_tmp[2411094] _ln[2467616] _fn[2467618]))) 1)))
    }
    const-val ret_tmp[2411127]:2*int(64)[1040056] "temp"
    (2411129 'set svec member' ret_tmp[2411127] 0 tmp[2410968])
    (2411133 'set svec member' ret_tmp[2411127] 1 tmp[2411037])
    (2411137 'move' ret[2410941] ret_tmp[2411127])
    label _end__computeBlock[2411140]
    (2411142 '=' _retArg[2410938] ret[2410941])
    (2411145 return _void[55])
  }
  function _computeBlock[1229336](const in arg numelems[1229338]:int(64)[13], const in arg numblocks[1229340]:int(64)[13], const in arg blocknum[1229342]:int(64)[13], const in arg wayhi[1229344]:int(64)[13], const in arg waylo[1229368]:int(64)[13], const in arg lo[1229392]:int(64)[13], ref arg _retArg[1835044]:_ref(2*int(64))[1040129], const in arg _ln[2462706]:int(64)[13], in arg _fn[2462708]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1229394]:2*int(64)[1040056] "dead after last mention" "RVV" "temp"
    if(2118297 '==' numelems[1229338] 0)
    {
      const-val ret_tmp[1832857]:2*int(64)[1040056] "temp"
      (2364382 'set svec member' ret_tmp[1832857] 0 1)
      (2364386 'set svec member' ret_tmp[1832857] 1 0)
      (1229463 'move' ret[1229394] ret_tmp[1832857])
      gotoReturn _end__computeBlock[1229709] _end__computeBlock[1229709]
    }
    val tmp[1229472]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2118312 '==' blocknum[1229342] 0)
    {
      (1229491 'move' tmp[1229472] waylo[1229368])
    }
    {
      const-val call_tmp[1229537]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229539 'move' call_tmp[1229537](1229542 call intCeilXDivByY[1229809](2497874 'cast' uint(64)[115](2191198 '*'(2116566 'cast' uint(64)[115] numelems[1229338] _ln[2462706] _fn[2462708])(2116576 'cast' uint(64)[115] blocknum[1229342] _ln[2462706] _fn[2462708])))(2116586 'cast' uint(64)[115] numblocks[1229340] _ln[2462706] _fn[2462708]) _ln[2462706] _fn[2462708]))
      (1229559 'move' tmp[1229472](2497876 'cast' int(64)[13](2126024 '+' lo[1229392](2182100 'cast' int(64)[13] call_tmp[1229537] _ln[2462706] _fn[2462708]))))
    }
    val tmp[1229571]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2118322 '==' blocknum[1229342](2497884 'cast' int(64)[13](2144464 '-' numblocks[1229340] 1)))
    {
      (1229598 'move' tmp[1229571] wayhi[1229344])
    }
    {
      const-val call_tmp[1229652]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
      (1229654 'move' call_tmp[1229652](1229657 call intCeilXDivByY[1229809](2497878 'cast' uint(64)[115](2191208 '*'(2116606 'cast' uint(64)[115] numelems[1229338] _ln[2462706] _fn[2462708])(2116616 'cast' uint(64)[115](2497882 'cast' int(64)[13](2120591 '+' blocknum[1229342] 1)) _ln[2462706] _fn[2462708])))(2116626 'cast' uint(64)[115] numblocks[1229340] _ln[2462706] _fn[2462708]) _ln[2462706] _fn[2462708]))
      (1229682 'move' tmp[1229571](2497880 'cast' int(64)[13](2144474 '-'(2497886 'cast' int(64)[13](2126034 '+' lo[1229392](2182110 'cast' int(64)[13] call_tmp[1229652] _ln[2462706] _fn[2462708]))) 1)))
    }
    const-val ret_tmp[1832863]:2*int(64)[1040056] "temp"
    (2364396 'set svec member' ret_tmp[1832863] 0 tmp[1229472])
    (2364400 'set svec member' ret_tmp[1832863] 1 tmp[1229571])
    (1229700 'move' ret[1229394] ret_tmp[1832863])
    label _end__computeBlock[1229709]
    (1835046 '=' _retArg[1835044] ret[1229394])
    (1835048 return _void[55])
  }
}