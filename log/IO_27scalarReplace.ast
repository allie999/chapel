AST dump for IO after pass scalarReplace.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2099532] val _runtime_hdr[2099533]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099535]:chpl_localeID_t[209294] ref _1_this[2099537]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2099271] val _runtime_hdr[2099272]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099274]:chpl_localeID_t[209294] ref _1_this[2099276]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2099095] val _runtime_hdr[2099096]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099098]:chpl_localeID_t[209294] ref _1_this[2099100]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2097304] val _runtime_hdr[2097305]:chpl_comm_on_bundle_t[209301] val _0_tmp[2097307]:chpl_localeID_t[209294] ref _1_this[2097309]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2095274] val _runtime_hdr[2095275]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095277]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2095279]:channel(true,dynamic,true)[1021825] ref _2_args[2095281]:(int(64),ioNewline)[1433256] val _3_rvfDerefTmp[2095283]:locale[28] ref _4_error[2095285]:Error[167938] "error variable"
  type _class_localson_fn[2095132] val _runtime_hdr[2095133]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095135]:chpl_localeID_t[209294] ref _1_this[2095137]:channel(true,dynamic,false)[1060947] val _2_x[2095139]:real(64)[16] val _3_rvfDerefTmp[2095141]:locale[28] ref _4_error[2095143]:Error[167938] "error variable"
  type _class_localson_fn[2094990] val _runtime_hdr[2094991]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094993]:chpl_localeID_t[209294] ref _1_this[2094995]:channel(true,dynamic,false)[1060947] val _2_rvfDerefTmp[2094997]:ioLiteral[238753] val _3_rvfDerefTmp[2094999]:locale[28] ref _4_error[2095001]:Error[167938] "error variable"
  type _class_localson_fn[2094828] val _runtime_hdr[2094829]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094831]:chpl_localeID_t[209294] ref _1_this[2094833]:channel(true,dynamic,false)[1060947] val _2_x[2094835]:_ddata(real(64))[1357916] val _3_len[2094837]:int(64)[13] ref _4_err[2094839]:syserr[223584] ref _5_error[2094841]:Error[167938] "error variable"
  type _class_localson_fn[2094713] val _runtime_hdr[2094714]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094716]:chpl_localeID_t[209294] ref _1_this[2094718]:channel(true,dynamic,false)[1060947] ref _2_ret[2094720]:uint(8)[100]
  type _class_localson_fn[2094587] val _runtime_hdr[2094588]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094590]:chpl_localeID_t[209294] ref _1_this[2094592]:channel(true,dynamic,false)[1060947] val _2_element[2094594]:int(64)[13] ref _3_ret[2094596]:int(64)[13]
  type _class_localson_fn[2094500] val _runtime_hdr[2094501]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094503]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094505]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2094355] val _runtime_hdr[2094356]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094358]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094360]:channel(true,dynamic,true)[1021825] ref _2_path[2094362]:string[26] ref _3_offset[2094364]:int(64)[13] ref _4_error[2094366]:Error[167938] "error variable"
  type _class_localson_fn[2094247] val _runtime_hdr[2094248]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094250]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094252]:channel(true,dynamic,true)[1021825] ref _2_err[2094254]:syserr[223584]
  type _class_localson_fn[2094107] val _runtime_hdr[2094108]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094110]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094112]:channel(true,dynamic,true)[1021825] ref _2_args[2094114]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] val _3_rvfDerefTmp[2094116]:locale[28] ref _4_error[2094118]:Error[167938] "error variable"
  type _class_localson_fn[2091285] val _runtime_hdr[2091286]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091288]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091290]:channel(true,dynamic,false)[1060947] ref _2_args[2091292]:(string,codepointIndex,string,int(64))[1176520] val _3_rvfDerefTmp[2091294]:locale[28] ref _4_error[2091296]:Error[167938] "error variable"
  type _class_localson_fn[2091143] val _runtime_hdr[2091144]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091146]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091148]:channel(true,dynamic,false)[1060947] ref _2_args[2091150]:(string,codepointIndex,string)[1158555] val _3_rvfDerefTmp[2091152]:locale[28] ref _4_error[2091154]:Error[167938] "error variable"
  type _class_localson_fn[2090853] val _runtime_hdr[2090854]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090856]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090858]:channel(false,dynamic,false)[1080682] ref _2_path[2090860]:string[26] ref _3_offset[2090862]:int(64)[13] ref _4_error[2090864]:Error[167938] "error variable"
  type _class_localson_fn[2090745] val _runtime_hdr[2090746]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090748]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090750]:channel(false,dynamic,false)[1080682] ref _2_err[2090752]:syserr[223584]
  type _class_localson_fn[2090653] val _runtime_hdr[2090654]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090656]:chpl_localeID_t[209294] ref _1_lhs[2090658]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090568] val _runtime_hdr[2090569]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090571]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090573]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090387] val _runtime_hdr[2090388]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090390]:chpl_localeID_t[209294] val _1_end[2090392]:int(64)[13] val _2_hints[2090394]:int(32)[95] val _3_rvfDerefTmp[2090396]:iostyle[231844] ref _4_this[2090398]:channel(false,dynamic,false)[1080682] val _5_start[2090400]:int(64)[13] val _6_rvfDerefTmp[2090402]:file[235580] ref _7__formal_tmp_error[2090404]:syserr[223584]
  type _class_localson_fn[2090180] val _runtime_hdr[2090181]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090183]:chpl_localeID_t[209294] val _1_start[2090185]:int(64)[13] ref _2_ret[2090187]:channel(false,dynamic,false)[1080682] val _3_rvfDerefTmp[2090189]:iostyle[231844] val _4_end[2090191]:int(64)[13] val _5_rvfDerefTmp[2090193]:file[235580] ref _6_err[2090195]:syserr[223584] val _7_hints[2090197]:int(32)[95] ref _8_error[2090199]:Error[167938] "error variable"
  type _class_localson_fn[2090068] val _runtime_hdr[2090069]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090071]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090073]:channel(true,dynamic,false)[1060947] ref _2_ret[2090075]:int(64)[13]
  type _class_localson_fn[2089928] val _runtime_hdr[2089929]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089931]:chpl_localeID_t[209294] ref _1_this[2089933]:channel(true,dynamic,false)[1060947] val _2_x[2089935]:int(64)[13] val _3_rvfDerefTmp[2089937]:locale[28] ref _4_error[2089939]:Error[167938] "error variable"
  type _class_localson_fn[2089786] val _runtime_hdr[2089787]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089789]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089791]:channel(true,dynamic,false)[1060947] ref _2_args[2089793]:1*byteIndex[1057081] val _3_rvfDerefTmp[2089795]:locale[28] ref _4_error[2089797]:Error[167938] "error variable"
  type _class_localson_fn[2089632] val _runtime_hdr[2089633]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089635]:chpl_localeID_t[209294] ref _1_this[2089637]:channel(true,dynamic,false)[1060947] ref _2_path[2089639]:string[26] ref _3_offset[2089641]:int(64)[13] ref _4_error[2089643]:Error[167938] "error variable"
  type _class_localson_fn[2089524] val _runtime_hdr[2089525]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089527]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089529]:channel(true,dynamic,false)[1060947] ref _2_err[2089531]:syserr[223584]
  type _class_localson_fn[2089432] val _runtime_hdr[2089433]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089435]:chpl_localeID_t[209294] ref _1_lhs[2089437]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089347] val _runtime_hdr[2089348]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089350]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089352]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089166] val _runtime_hdr[2089167]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089169]:chpl_localeID_t[209294] ref _1__formal_tmp_error[2089171]:syserr[223584] val _2_end[2089173]:int(64)[13] val _3_hints[2089175]:int(32)[95] val _4_rvfDerefTmp[2089177]:iostyle[231844] ref _5_this[2089179]:channel(true,dynamic,false)[1060947] val _6_start[2089181]:int(64)[13] val _7_rvfDerefTmp[2089183]:file[235580]
  type _class_localson_fn[2088959] val _runtime_hdr[2088960]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088962]:chpl_localeID_t[209294] val _1_start[2088964]:int(64)[13] ref _2_ret[2088966]:channel(true,dynamic,false)[1060947] val _3_end[2088968]:int(64)[13] val _4_rvfDerefTmp[2088970]:iostyle[231844] val _5_rvfDerefTmp[2088972]:file[235580] ref _6_err[2088974]:syserr[223584] val _7_hints[2088976]:int(32)[95] ref _8_error[2088978]:Error[167938] "error variable"
  type _class_localson_fn[2088719] val _runtime_hdr[2088720]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088722]:chpl_localeID_t[209294] ref _1_lhs[2088724]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088634] val _runtime_hdr[2088635]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088637]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088639]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088453] val _runtime_hdr[2088454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088456]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088458]:file[235580] ref _2__formal_tmp_error[2088460]:syserr[223584] val _3_end[2088462]:int(64)[13] ref _4_this[2088464]:channel(true,dynamic,true)[1021825] val _5_hints[2088466]:int(32)[95] val _6_rvfDerefTmp[2088468]:iostyle[231844] val _7_start[2088470]:int(64)[13]
  type _class_localson_fn[2088246] val _runtime_hdr[2088247]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088249]:chpl_localeID_t[209294] val _1_end[2088251]:int(64)[13] val _2_rvfDerefTmp[2088253]:iostyle[231844] val _3_rvfDerefTmp[2088255]:file[235580] ref _4_ret[2088257]:channel(true,dynamic,true)[1021825] val _5_hints[2088259]:int(32)[95] val _6_start[2088261]:int(64)[13] ref _7_err[2088263]:syserr[223584] ref _8_error[2088265]:Error[167938] "error variable"
  type _class_localson_fn[2088036] val _runtime_hdr[2088037]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088039]:chpl_localeID_t[209294] ref _1_lhs[2088041]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087951] val _runtime_hdr[2087952]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087954]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087956]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087770] val _runtime_hdr[2087771]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087773]:chpl_localeID_t[209294] ref _1_this[2087775]:channel(false,dynamic,true)[985627] val _2_hints[2087777]:int(32)[95] val _3_rvfDerefTmp[2087779]:iostyle[231844] val _4_end[2087781]:int(64)[13] val _5_start[2087783]:int(64)[13] val _6_rvfDerefTmp[2087785]:file[235580] ref _7__formal_tmp_error[2087787]:syserr[223584]
  type _class_localson_fn[2087563] val _runtime_hdr[2087564]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087566]:chpl_localeID_t[209294] ref _1_err[2087568]:syserr[223584] val _2_start[2087570]:int(64)[13] val _3_end[2087572]:int(64)[13] val _4_rvfDerefTmp[2087574]:iostyle[231844] val _5_rvfDerefTmp[2087576]:file[235580] ref _6_ret[2087578]:channel(false,dynamic,true)[985627] val _7_hints[2087580]:int(32)[95] ref _8_error[2087582]:Error[167938] "error variable"
  type _class_localson_fn[2087214] val _runtime_hdr[2087215]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087217]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087219]:file[235580] ref _2_err[2087221]:syserr[223584] ref _3_ret[2087223]:string[26] ref _4_error[2087225]:Error[167938] "error variable"
  type _class_localson_fn[2087106] val _runtime_hdr[2087107]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087109]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087111]:file[235580] ref _2_err[2087113]:syserr[223584]
  type _class_localson_fn[2086980] val _runtime_hdr[2086981]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086983]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2086985]:file[235580] ref _2_ret[2086987]:iostyle[231844] ref _3_error[2086989]:Error[167938] "error variable"
  type _class_localson_fn[2086887] val _runtime_hdr[2086888]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086890]:chpl_localeID_t[209294] ref _1_this[2086892]:file[235580]
  function chpl__init_IO[416113]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546810 'move' IOHINT_NONE[231411] 0)
    (2085055 '_private_broadcast' IOHINT_NONE[231411])
    (546812 'move' IOHINT_RANDOM[231416] QIO_HINT_RANDOM[231363])
    (2085057 '_private_broadcast' IOHINT_RANDOM[231416])
    (546814 'move' IOHINT_SEQUENTIAL[231421] QIO_HINT_SEQUENTIAL[231368])
    (2085059 '_private_broadcast' IOHINT_SEQUENTIAL[231421])
    (546816 'move' IOHINT_CACHED[231426] QIO_HINT_CACHED[231383])
    (2085061 '_private_broadcast' IOHINT_CACHED[231426])
    (546818 'move' IOHINT_PARALLEL[231431] QIO_HINT_PARALLEL[231388])
    (2085063 '_private_broadcast' IOHINT_PARALLEL[231431])
    const-val ret_tmp[1832185]:6*string[985051] "temp"
    val inlineImm[2220691]:string[26] "temp"
    (2220694 'move' inlineImm[2220691] "a")
    ref i__e0_x[2220696]:string[26] "temp"
    (2220700 'move' i__e0_x[2220696](2220698 'set reference' inlineImm[2220691]))
    val inlineImm[2220702]:string[26] "temp"
    (2220705 'move' inlineImm[2220702] "b")
    ref i__e1_x[2220707]:string[26] "temp"
    (2220711 'move' i__e1_x[2220707](2220709 'set reference' inlineImm[2220702]))
    val inlineImm[2220713]:string[26] "temp"
    (2220716 'move' inlineImm[2220713] "c")
    ref i__e2_x[2220718]:string[26] "temp"
    (2220722 'move' i__e2_x[2220718](2220720 'set reference' inlineImm[2220713]))
    val inlineImm[2220724]:string[26] "temp"
    (2220727 'move' inlineImm[2220724] "d")
    ref i__e3_x[2220729]:string[26] "temp"
    (2220733 'move' i__e3_x[2220729](2220731 'set reference' inlineImm[2220724]))
    val inlineImm[2220735]:string[26] "temp"
    (2220738 'move' inlineImm[2220735] "e")
    ref i__e4_x[2220740]:string[26] "temp"
    (2220744 'move' i__e4_x[2220740](2220742 'set reference' inlineImm[2220735]))
    val inlineImm[2220746]:string[26] "temp"
    (2220749 'move' inlineImm[2220746] "f")
    ref i__e5_x[2220751]:string[26] "temp"
    (2220755 'move' i__e5_x[2220751](2220753 'set reference' inlineImm[2220746]))
    const-ref this_x0[2344288]:string[26]
    const-ref this_x1[2344290]:string[26]
    const-ref this_x2[2344292]:string[26]
    const-ref this_x3[2344294]:string[26]
    const-ref this_x4[2344296]:string[26]
    const-ref this_x5[2344298]:string[26]
    (2220766 'move' this_x0[2344288] i__e0_x[2220696])
    (2220770 'move' this_x1[2344290] i__e1_x[2220707])
    (2220774 'move' this_x2[2344292] i__e2_x[2220718])
    (2220778 'move' this_x3[2344294] i__e3_x[2220729])
    (2220782 'move' this_x4[2344296] i__e4_x[2220740])
    (2220786 'move' this_x5[2344298] i__e5_x[2220751])
    (2344308 '.=' ret_tmp[1832185] x0[985039] this_x0[2344288])
    (2344312 '.=' ret_tmp[1832185] x1[985041] this_x1[2344290])
    (2344316 '.=' ret_tmp[1832185] x2[985043] this_x2[2344292])
    (2344320 '.=' ret_tmp[1832185] x3[985045] this_x3[2344294])
    (2344324 '.=' ret_tmp[1832185] x4[985047] this_x4[2344296])
    (2344328 '.=' ret_tmp[1832185] x5[985049] this_x5[2344298])
    (1832188 'move' call_tmp[721866] ret_tmp[1832185])
    val tmp[2085330]:6*string[985217] "temp"
    val ret[2220802]:6*string[985217] "dead after last mention" "RVV" "temp"
    val retv_x0[2344330]:string[26]
    val retv_x1[2344332]:string[26]
    val retv_x2[2344334]:string[26]
    val retv_x3[2344336]:string[26]
    val retv_x4[2344338]:string[26]
    val retv_x5[2344340]:string[26]
    const-ref read_x0[2220806]:string[26]
    (2220808 'move' read_x0[2220806](2220810 '.v' call_tmp[721866] x0[985039]))
    val ret[2220813]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220815]:string[26] "dead after last mention" "temp"
    (2220818 call init=[30771] tmp[2220815] read_x0[2220806])
    (2220821 'move' ret[2220813] tmp[2220815])
    (2220824 'move' retv_x0[2344330] ret[2220813])
    const-ref read_x1[2220828]:string[26]
    (2220830 'move' read_x1[2220828](2220832 '.v' call_tmp[721866] x1[985041]))
    val ret[2220835]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220837]:string[26] "dead after last mention" "temp"
    (2220840 call init=[30771] tmp[2220837] read_x1[2220828])
    (2220843 'move' ret[2220835] tmp[2220837])
    (2220846 'move' retv_x1[2344332] ret[2220835])
    const-ref read_x2[2220850]:string[26]
    (2220852 'move' read_x2[2220850](2220854 '.v' call_tmp[721866] x2[985043]))
    val ret[2220857]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220859]:string[26] "dead after last mention" "temp"
    (2220862 call init=[30771] tmp[2220859] read_x2[2220850])
    (2220865 'move' ret[2220857] tmp[2220859])
    (2220868 'move' retv_x2[2344334] ret[2220857])
    const-ref read_x3[2220872]:string[26]
    (2220874 'move' read_x3[2220872](2220876 '.v' call_tmp[721866] x3[985045]))
    val ret[2220879]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220881]:string[26] "dead after last mention" "temp"
    (2220884 call init=[30771] tmp[2220881] read_x3[2220872])
    (2220887 'move' ret[2220879] tmp[2220881])
    (2220890 'move' retv_x3[2344336] ret[2220879])
    const-ref read_x4[2220894]:string[26]
    (2220896 'move' read_x4[2220894](2220898 '.v' call_tmp[721866] x4[985047]))
    val ret[2220901]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220903]:string[26] "dead after last mention" "temp"
    (2220906 call init=[30771] tmp[2220903] read_x4[2220894])
    (2220909 'move' ret[2220901] tmp[2220903])
    (2220912 'move' retv_x4[2344338] ret[2220901])
    const-ref read_x5[2220916]:string[26]
    (2220918 'move' read_x5[2220916](2220920 '.v' call_tmp[721866] x5[985049]))
    val ret[2220923]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220925]:string[26] "dead after last mention" "temp"
    (2220928 call init=[30771] tmp[2220925] read_x5[2220916])
    (2220931 'move' ret[2220923] tmp[2220925])
    (2220934 'move' retv_x5[2344340] ret[2220923])
    (2344350 '.=' ret[2220802] x0[985205] retv_x0[2344330])
    (2344354 '.=' ret[2220802] x1[985207] retv_x1[2344332])
    (2344358 '.=' ret[2220802] x2[985209] retv_x2[2344334])
    (2344362 '.=' ret[2220802] x3[985211] retv_x3[2344336])
    (2344366 '.=' ret[2220802] x4[985213] retv_x4[2344338])
    (2344370 '.=' ret[2220802] x5[985215] retv_x5[2344340])
    (2085332 'move' tmp[2085330] ret[2220802])
    (2085335 '.=' _arg_to_proto_names[246561] value[2085328] tmp[2085330])
    val type_tmp[547538]:channel(false,dynamic,true)[985627] "dead after last mention" "maybe param" "temp" "type variable"
    const-val coerce_tmp[985694]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985700 'move' coerce_tmp[985694](985696 'cast' int(32)[95] 0))
    const-val default_arg_hints[985736]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808697]:Error[167938] "error variable" "temp"
    (1808699 'move' error[1808697] nil[44])
    ref i_error_out[2221010]:Error[167938] "temp"
    (2221014 'move' i_error_out[2221010](2221012 'set reference' error[1808697]))
    val ret[2221017]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2221019]:int(32)[95] "dead after last mention" "temp"
    (2221021 'move' tmp[2221019] IOHINT_NONE[231411])
    (2221024 'move' ret[2221017] tmp[2221019])
    (985741 'move' default_arg_hints[985736] ret[2221017])
    val errorExists[2108176]:bool[10] "temp"
    (2108181 'move' errorExists[2108176](2108178 '!=' error[1808697] nil[44]))
    if errorExists[2108176]
    {
      (1808702 call chpl_propagate_error[170472] error[1808697])
    }
    const-val default_arg_style[985793]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808710]:Error[167938] "error variable" "temp"
    (1808712 'move' error[1808710] nil[44])
    ref i_error_out[2221031]:Error[167938] "temp"
    (2221035 'move' i_error_out[2221031](2221033 'set reference' error[1808710]))
    val ret[2221038]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2221040]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2221042 'move' style[2221040](2221045 call defaultIOStyle[235295]))
    (2221046 'move' ret[2221038] style[2221040])
    (985798 'move' default_arg_style[985793] ret[2221038])
    val errorExists[2108184]:bool[10] "temp"
    (2108189 'move' errorExists[2108184](2108186 '!=' error[1808710] nil[44]))
    if errorExists[2108184]
    {
      (1808715 call chpl_propagate_error[170472] error[1808710])
    }
    val error[1808723]:Error[167938] "error variable" "temp"
    (1808725 'move' error[1808723] nil[44])
    const-val ret_tmp[1831469]:file[235580] "temp"
    (250216 call openfd[237271] coerce_tmp[985694] default_arg_hints[985736] default_arg_style[985793] error[1808723] ret_tmp[1831469])
    (1831472 'move' call_tmp[723997] ret_tmp[1831469])
    val errorExists[2108192]:bool[10] "temp"
    (2108197 'move' errorExists[2108192](2108194 '!=' error[1808723] nil[44]))
    if errorExists[2108192]
    {
      (1808728 call chpl_propagate_error[170472] error[1808723])
    }
    val error[1808736]:Error[167938] "error variable" "temp"
    (1808738 'move' error[1808736] nil[44])
    ref i_this[2226818]:file[235580] "temp"
    (2226822 'move' i_this[2226818](2226820 'set reference' call_tmp[723997]))
    ref i_error_out[2226824]:Error[167938] "temp"
    (2226828 'move' i_error_out[2226824](2226826 'set reference' error[1808736]))
    val ret[2226831]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2226833 'move' ret[2226831] 0)
    (1016904 'move' default_arg_start[1016897] ret[2226831])
    val errorExists[2108200]:bool[10] "temp"
    (2108205 'move' errorExists[2108200](2108202 '!=' error[1808736] nil[44]))
    if errorExists[2108200]
    {
      (1808741 call chpl_propagate_error[170472] error[1808736])
    }
    val error[1808749]:Error[167938] "error variable" "temp"
    (1808751 'move' error[1808749] nil[44])
    ref i_this[2226840]:file[235580] "temp"
    (2226844 'move' i_this[2226840](2226842 'set reference' call_tmp[723997]))
    ref i_error_out[2226846]:Error[167938] "temp"
    (2226850 'move' i_error_out[2226846](2226848 'set reference' error[1808749]))
    val ret[2226853]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2226855 'move' ret[2226853] 9223372036854775807)
    (1016968 'move' default_arg_end[1016961] ret[2226853])
    val errorExists[2108208]:bool[10] "temp"
    (2108213 'move' errorExists[2108208](2108210 '!=' error[1808749] nil[44]))
    if errorExists[2108208]
    {
      (1808754 call chpl_propagate_error[170472] error[1808749])
    }
    val error[1808762]:Error[167938] "error variable" "temp"
    (1808764 'move' error[1808762] nil[44])
    ref i_this[2226862]:file[235580] "temp"
    (2226866 'move' i_this[2226862](2226864 'set reference' call_tmp[723997]))
    ref i_error_out[2226868]:Error[167938] "temp"
    (2226872 'move' i_error_out[2226868](2226870 'set reference' error[1808762]))
    val ret[2226875]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2226877]:int(32)[95] "dead after last mention" "temp"
    (2226879 'move' tmp[2226877] IOHINT_NONE[231411])
    (2226882 'move' ret[2226875] tmp[2226877])
    (1017016 'move' default_arg_hints[1017009] ret[2226875])
    val errorExists[2108216]:bool[10] "temp"
    (2108221 'move' errorExists[2108216](2108218 '!=' error[1808762] nil[44]))
    if errorExists[2108216]
    {
      (1808767 call chpl_propagate_error[170472] error[1808762])
    }
    val error[1808775]:Error[167938] "error variable" "temp"
    (1808777 'move' error[1808775] nil[44])
    ref i_this[2226889]:file[235580] "temp"
    (2226893 'move' i_this[2226889](2226891 'set reference' call_tmp[723997]))
    ref i_error_out[2226895]:Error[167938] "temp"
    (2226899 'move' i_error_out[2226895](2226897 'set reference' error[1808775]))
    val ret[2226902]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2226904]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2226906]:Error[167938] "error variable" "temp"
    (2226908 'move' error[2226906] nil[44])
    (2226911 'move' style[2226904](2226914 call _style[235960] i_this[2226889] error[2226906]))
    val errorExists[2226917]:bool[10] "temp"
    (2226919 'move' errorExists[2226917](2226921 '!=' error[2226906] nil[44]))
    if errorExists[2226917]
    {
      (2226926 '=' i_error_out[2226895] error[2226906])
      gotoErrorHandlingReturn _endreader_default_style[2226935] _endreader_default_style[2226935]
    }
    (2226932 'move' ret[2226902] style[2226904])
    label _endreader_default_style[2226935]
    (1017594 'move' default_arg_style[1017587] ret[2226902])
    val errorExists[2108224]:bool[10] "temp"
    (2108229 'move' errorExists[2108224](2108226 '!=' error[1808775] nil[44]))
    if errorExists[2108224]
    {
      (1808780 call chpl_propagate_error[170472] error[1808775])
    }
    val error[1808788]:Error[167938] "error variable" "temp"
    (1808790 'move' error[1808788] nil[44])
    const-val ret_tmp[1832521]:channel(false,dynamic,true)[985627] "temp"
    (250221 call reader[1016561] call_tmp[723997] default_arg_start[1016897] default_arg_end[1016961] default_arg_hints[1017009] default_arg_style[1017587] error[1808788] ret_tmp[1832521])
    (1832524 'move' call_tmp[724004] ret_tmp[1832521])
    val errorExists[2108232]:bool[10] "temp"
    (2108237 'move' errorExists[2108232](2108234 '!=' error[1808788] nil[44]))
    if errorExists[2108232]
    {
      (1808793 call chpl_propagate_error[170472] error[1808788])
    }
    (547550 'move' stdin[250208] call_tmp[724004])
    (2085065 '_private_broadcast' stdin[250208])
    val type_tmp[547553]:channel(true,dynamic,true)[1021825] "dead after last mention" "maybe param" "temp" "type variable"
    (724012 'move' call_tmp[724009](250243 call chpl_cstdout[223558]))
    const-val default_arg_hints[1021885]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808801]:Error[167938] "error variable" "temp"
    (1808803 'move' error[1808801] nil[44])
    ref i_error_out[2227696]:Error[167938] "temp"
    (2227700 'move' i_error_out[2227696](2227698 'set reference' error[1808801]))
    val ret[2227703]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2227705]:int(32)[95] "dead after last mention" "temp"
    (2227707 'move' tmp[2227705] IOHINT_NONE[231411])
    (2227710 'move' ret[2227703] tmp[2227705])
    (1021890 'move' default_arg_hints[1021885] ret[2227703])
    val errorExists[2108240]:bool[10] "temp"
    (2108245 'move' errorExists[2108240](2108242 '!=' error[1808801] nil[44]))
    if errorExists[2108240]
    {
      (1808806 call chpl_propagate_error[170472] error[1808801])
    }
    const-val default_arg_style[1021914]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808814]:Error[167938] "error variable" "temp"
    (1808816 'move' error[1808814] nil[44])
    ref i_error_out[2227738]:Error[167938] "temp"
    (2227742 'move' i_error_out[2227738](2227740 'set reference' error[1808814]))
    val ret[2227745]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227747]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2227749 'move' style[2227747](2227752 call defaultIOStyle[235295]))
    (2227753 'move' ret[2227745] style[2227747])
    (1021919 'move' default_arg_style[1021914] ret[2227745])
    val errorExists[2108248]:bool[10] "temp"
    (2108253 'move' errorExists[2108248](2108250 '!=' error[1808814] nil[44]))
    if errorExists[2108248]
    {
      (1808819 call chpl_propagate_error[170472] error[1808814])
    }
    val error[1808827]:Error[167938] "error variable" "temp"
    (1808829 'move' error[1808827] nil[44])
    const-val ret_tmp[1831483]:file[235580] "temp"
    (250245 call openfp[237400] call_tmp[724009] default_arg_hints[1021885] default_arg_style[1021914] error[1808827] ret_tmp[1831483])
    (1831486 'move' call_tmp[724014] ret_tmp[1831483])
    val errorExists[2108256]:bool[10] "temp"
    (2108261 'move' errorExists[2108256](2108258 '!=' error[1808827] nil[44]))
    if errorExists[2108256]
    {
      (1808832 call chpl_propagate_error[170472] error[1808827])
    }
    val error[1808840]:Error[167938] "error variable" "temp"
    (1808842 'move' error[1808840] nil[44])
    ref i_this[2227782]:file[235580] "temp"
    (2227786 'move' i_this[2227782](2227784 'set reference' call_tmp[724014]))
    ref i_error_out[2227788]:Error[167938] "temp"
    (2227792 'move' i_error_out[2227788](2227790 'set reference' error[1808840]))
    val ret[2227795]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2227797 'move' ret[2227795] 0)
    (1022479 'move' default_arg_start[1022472] ret[2227795])
    val errorExists[2108264]:bool[10] "temp"
    (2108269 'move' errorExists[2108264](2108266 '!=' error[1808840] nil[44]))
    if errorExists[2108264]
    {
      (1808845 call chpl_propagate_error[170472] error[1808840])
    }
    val error[1808853]:Error[167938] "error variable" "temp"
    (1808855 'move' error[1808853] nil[44])
    ref i_this[2227826]:file[235580] "temp"
    (2227830 'move' i_this[2227826](2227828 'set reference' call_tmp[724014]))
    ref i_error_out[2227832]:Error[167938] "temp"
    (2227836 'move' i_error_out[2227832](2227834 'set reference' error[1808853]))
    val ret[2227839]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2227841 'move' ret[2227839] 9223372036854775807)
    (1022543 'move' default_arg_end[1022536] ret[2227839])
    val errorExists[2108272]:bool[10] "temp"
    (2108277 'move' errorExists[2108272](2108274 '!=' error[1808853] nil[44]))
    if errorExists[2108272]
    {
      (1808858 call chpl_propagate_error[170472] error[1808853])
    }
    val error[1808866]:Error[167938] "error variable" "temp"
    (1808868 'move' error[1808866] nil[44])
    ref i_this[2227870]:file[235580] "temp"
    (2227874 'move' i_this[2227870](2227872 'set reference' call_tmp[724014]))
    ref i_error_out[2227876]:Error[167938] "temp"
    (2227880 'move' i_error_out[2227876](2227878 'set reference' error[1808866]))
    val ret[2227883]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2227885]:int(32)[95] "dead after last mention" "temp"
    (2227887 'move' tmp[2227885](2227889 'cast' int(32)[95] 0))
    (2227892 'move' ret[2227883] tmp[2227885])
    (1022594 'move' default_arg_hints[1022587] ret[2227883])
    val errorExists[2108280]:bool[10] "temp"
    (2108285 'move' errorExists[2108280](2108282 '!=' error[1808866] nil[44]))
    if errorExists[2108280]
    {
      (1808871 call chpl_propagate_error[170472] error[1808866])
    }
    val error[1808879]:Error[167938] "error variable" "temp"
    (1808881 'move' error[1808879] nil[44])
    ref i_this[2227928]:file[235580] "temp"
    (2227932 'move' i_this[2227928](2227930 'set reference' call_tmp[724014]))
    ref i_error_out[2227934]:Error[167938] "temp"
    (2227938 'move' i_error_out[2227934](2227936 'set reference' error[1808879]))
    val ret[2227941]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227943]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2227945]:Error[167938] "error variable" "temp"
    (2227947 'move' error[2227945] nil[44])
    (2227950 'move' style[2227943](2227953 call _style[235960] i_this[2227928] error[2227945]))
    val errorExists[2227956]:bool[10] "temp"
    (2227958 'move' errorExists[2227956](2227960 '!=' error[2227945] nil[44]))
    if errorExists[2227956]
    {
      (2227965 '=' i_error_out[2227934] error[2227945])
      gotoErrorHandlingReturn _endwriter_default_style[2227974] _endwriter_default_style[2227974]
    }
    (2227971 'move' ret[2227941] style[2227943])
    label _endwriter_default_style[2227974]
    (1022631 'move' default_arg_style[1022624] ret[2227941])
    val errorExists[2108288]:bool[10] "temp"
    (2108293 'move' errorExists[2108288](2108290 '!=' error[1808879] nil[44]))
    if errorExists[2108288]
    {
      (1808884 call chpl_propagate_error[170472] error[1808879])
    }
    val error[1808892]:Error[167938] "error variable" "temp"
    (1808894 'move' error[1808892] nil[44])
    const-val ret_tmp[1832581]:channel(true,dynamic,true)[1021825] "temp"
    (250250 call writer[1022136] call_tmp[724014] default_arg_start[1022472] default_arg_end[1022536] default_arg_hints[1022587] default_arg_style[1022624] error[1808892] ret_tmp[1832581])
    (1832584 'move' call_tmp[724021] ret_tmp[1832581])
    val errorExists[2108296]:bool[10] "temp"
    (2108301 'move' errorExists[2108296](2108298 '!=' error[1808892] nil[44]))
    if errorExists[2108296]
    {
      (1808897 call chpl_propagate_error[170472] error[1808892])
    }
    (547565 'move' stdout[250235] call_tmp[724021])
    (2085067 '_private_broadcast' stdout[250235])
    val type_tmp[547568]:channel(true,dynamic,true)[1021825] "dead after last mention" "maybe param" "temp" "type variable"
    (724029 'move' call_tmp[724026](250272 call chpl_cstderr[223566]))
    const-val default_arg_hints[1023857]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808905]:Error[167938] "error variable" "temp"
    (1808907 'move' error[1808905] nil[44])
    ref i_error_out[2227717]:Error[167938] "temp"
    (2227721 'move' i_error_out[2227717](2227719 'set reference' error[1808905]))
    val ret[2227724]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2227726]:int(32)[95] "dead after last mention" "temp"
    (2227728 'move' tmp[2227726] IOHINT_NONE[231411])
    (2227731 'move' ret[2227724] tmp[2227726])
    (1023862 'move' default_arg_hints[1023857] ret[2227724])
    val errorExists[2108304]:bool[10] "temp"
    (2108309 'move' errorExists[2108304](2108306 '!=' error[1808905] nil[44]))
    if errorExists[2108304]
    {
      (1808910 call chpl_propagate_error[170472] error[1808905])
    }
    const-val default_arg_style[1023866]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808918]:Error[167938] "error variable" "temp"
    (1808920 'move' error[1808918] nil[44])
    ref i_error_out[2227760]:Error[167938] "temp"
    (2227764 'move' i_error_out[2227760](2227762 'set reference' error[1808918]))
    val ret[2227767]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227769]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2227771 'move' style[2227769](2227774 call defaultIOStyle[235295]))
    (2227775 'move' ret[2227767] style[2227769])
    (1023871 'move' default_arg_style[1023866] ret[2227767])
    val errorExists[2108312]:bool[10] "temp"
    (2108317 'move' errorExists[2108312](2108314 '!=' error[1808918] nil[44]))
    if errorExists[2108312]
    {
      (1808923 call chpl_propagate_error[170472] error[1808918])
    }
    val error[1808931]:Error[167938] "error variable" "temp"
    (1808933 'move' error[1808931] nil[44])
    const-val ret_tmp[1831489]:file[235580] "temp"
    (250274 call openfp[237400] call_tmp[724026] default_arg_hints[1023857] default_arg_style[1023866] error[1808931] ret_tmp[1831489])
    (1831492 'move' call_tmp[724031] ret_tmp[1831489])
    val errorExists[2108320]:bool[10] "temp"
    (2108325 'move' errorExists[2108320](2108322 '!=' error[1808931] nil[44]))
    if errorExists[2108320]
    {
      (1808936 call chpl_propagate_error[170472] error[1808931])
    }
    val error[1808944]:Error[167938] "error variable" "temp"
    (1808946 'move' error[1808944] nil[44])
    ref i_this[2227804]:file[235580] "temp"
    (2227808 'move' i_this[2227804](2227806 'set reference' call_tmp[724031]))
    ref i_error_out[2227810]:Error[167938] "temp"
    (2227814 'move' i_error_out[2227810](2227812 'set reference' error[1808944]))
    val ret[2227817]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2227819 'move' ret[2227817] 0)
    (1023915 'move' default_arg_start[1023908] ret[2227817])
    val errorExists[2108328]:bool[10] "temp"
    (2108333 'move' errorExists[2108328](2108330 '!=' error[1808944] nil[44]))
    if errorExists[2108328]
    {
      (1808949 call chpl_propagate_error[170472] error[1808944])
    }
    val error[1808957]:Error[167938] "error variable" "temp"
    (1808959 'move' error[1808957] nil[44])
    ref i_this[2227848]:file[235580] "temp"
    (2227852 'move' i_this[2227848](2227850 'set reference' call_tmp[724031]))
    ref i_error_out[2227854]:Error[167938] "temp"
    (2227858 'move' i_error_out[2227854](2227856 'set reference' error[1808957]))
    val ret[2227861]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2227863 'move' ret[2227861] 9223372036854775807)
    (1023926 'move' default_arg_end[1023919] ret[2227861])
    val errorExists[2108336]:bool[10] "temp"
    (2108341 'move' errorExists[2108336](2108338 '!=' error[1808957] nil[44]))
    if errorExists[2108336]
    {
      (1808962 call chpl_propagate_error[170472] error[1808957])
    }
    val error[1808970]:Error[167938] "error variable" "temp"
    (1808972 'move' error[1808970] nil[44])
    ref i_this[2227899]:file[235580] "temp"
    (2227903 'move' i_this[2227899](2227901 'set reference' call_tmp[724031]))
    ref i_error_out[2227905]:Error[167938] "temp"
    (2227909 'move' i_error_out[2227905](2227907 'set reference' error[1808970]))
    val ret[2227912]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2227914]:int(32)[95] "dead after last mention" "temp"
    (2227916 'move' tmp[2227914](2227918 'cast' int(32)[95] 0))
    (2227921 'move' ret[2227912] tmp[2227914])
    (1023937 'move' default_arg_hints[1023930] ret[2227912])
    val errorExists[2108344]:bool[10] "temp"
    (2108349 'move' errorExists[2108344](2108346 '!=' error[1808970] nil[44]))
    if errorExists[2108344]
    {
      (1808975 call chpl_propagate_error[170472] error[1808970])
    }
    val error[1808983]:Error[167938] "error variable" "temp"
    (1808985 'move' error[1808983] nil[44])
    ref i_this[2227978]:file[235580] "temp"
    (2227982 'move' i_this[2227978](2227980 'set reference' call_tmp[724031]))
    ref i_error_out[2227984]:Error[167938] "temp"
    (2227988 'move' i_error_out[2227984](2227986 'set reference' error[1808983]))
    val ret[2227991]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227993]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2227995]:Error[167938] "error variable" "temp"
    (2227997 'move' error[2227995] nil[44])
    (2228000 'move' style[2227993](2228003 call _style[235960] i_this[2227978] error[2227995]))
    val errorExists[2228006]:bool[10] "temp"
    (2228008 'move' errorExists[2228006](2228010 '!=' error[2227995] nil[44]))
    if errorExists[2228006]
    {
      (2228015 '=' i_error_out[2227984] error[2227995])
      gotoErrorHandlingReturn _endwriter_default_style[2228024] _endwriter_default_style[2228024]
    }
    (2228021 'move' ret[2227991] style[2227993])
    label _endwriter_default_style[2228024]
    (1023948 'move' default_arg_style[1023941] ret[2227991])
    val errorExists[2108352]:bool[10] "temp"
    (2108357 'move' errorExists[2108352](2108354 '!=' error[1808983] nil[44]))
    if errorExists[2108352]
    {
      (1808988 call chpl_propagate_error[170472] error[1808983])
    }
    val error[1808996]:Error[167938] "error variable" "temp"
    (1808998 'move' error[1808996] nil[44])
    const-val ret_tmp[1832587]:channel(true,dynamic,true)[1021825] "temp"
    (250279 call writer[1022136] call_tmp[724031] default_arg_start[1023908] default_arg_end[1023919] default_arg_hints[1023930] default_arg_style[1023941] error[1808996] ret_tmp[1832587])
    (1832590 'move' call_tmp[724038] ret_tmp[1832587])
    val errorExists[2108360]:bool[10] "temp"
    (2108365 'move' errorExists[2108360](2108362 '!=' error[1808996] nil[44]))
    if errorExists[2108360]
    {
      (1809001 call chpl_propagate_error[170472] error[1808996])
    }
    (547580 'move' stderr[250264] call_tmp[724038])
    (2085069 '_private_broadcast' stderr[250264])
    (536188 return _void[55])
  }
  def module FormattedIO[251268]  
  type iomode[230915] def r[230904]:iomode[230915] 1 def cw[230907]:iomode[230915] 2 def rw[230910]:iomode[230915] 3 def cwr[230913]:iomode[230915] 4
  type iokind[230931] def dynamic[230920]:iokind[230931] 0 def native[230923]:iokind[230931] 1 def big[230926]:iokind[230931] 2 def little[230929]:iokind[230931] 3
  type iostringstyle[231014] def len1b_data[230978]:iostringstyle[231014] -1 def len2b_data[230983]:iostringstyle[231014] -2 def len4b_data[230988]:iostringstyle[231014] -4 def len8b_data[230993]:iostringstyle[231014] -8 def lenVb_data[230998]:iostringstyle[231014] -10 def data_toeof[231005]:iostringstyle[231014] -65280 def data_null[231012]:iostringstyle[231014] -256
  type iostringformat[231036] def word[231019]:iostringformat[231036] 0 def basic[231022]:iostringformat[231036] 1 def chpl[231025]:iostringformat[231036] 2 def json[231028]:iostringformat[231036] 3 def toend[231031]:iostringformat[231036] 4 def toeof[231034]:iostringformat[231036] 5
  const QIO_FDFLAG_UNK[231298]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231303]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231308]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231313]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231318]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231323]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231328]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231333]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231338]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231343]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231348]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231353]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231358]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231363]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231368]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231373]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231378]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231383]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231388]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231393]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231398]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231403]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231411]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231416]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231421]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231426]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231431]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  type qio_file_ptr_t[231439]
  const-val QIO_FILE_PTR_NULL[231442]:qio_file_ptr_t[231439] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qio_channel_ptr_t[231465]
  const-val QIO_CHANNEL_PTR_NULL[231468]:qio_channel_ptr_t[231465] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231476]
  const-val QBUFFER_PTR_NULL[231479]:qbuffer_ptr_t[231476] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231494]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231502]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231510]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231518]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231526]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231534]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  type iostyle[231844] val binary[231544]:uint(8)[100] val byteorder[231562]:uint(8)[100] val str_style[231582]:int(64)[13] val min_width_columns[231591]:uint(32)[110] val max_width_columns[231606]:uint(32)[110] val max_width_characters[231621]:uint(32)[110] val max_width_bytes[231636]:uint(32)[110] val string_start[231642]:uint(8)[100] val string_end[231648]:uint(8)[100] val string_format[231668]:uint(8)[100] val bytes_prefix[231674]:uint(8)[100] val base[231683]:uint(8)[100] val point_char[231689]:uint(8)[100] val exponent_char[231697]:uint(8)[100] val other_exponent_char[231703]:uint(8)[100] val positive_char[231709]:uint(8)[100] val negative_char[231715]:uint(8)[100] val i_char[231723]:uint(8)[100] val prefix_base[231732]:uint(8)[100] val pad_char[231738]:uint(8)[100] val showplus[231747]:uint(8)[100] val uppercase[231756]:uint(8)[100] val leftjustify[231765]:uint(8)[100] val showpoint[231774]:uint(8)[100] val showpointzero[231783]:uint(8)[100] val precision[231794]:int(32)[95] val realfmt[231803]:uint(8)[100] val complex_style[231812]:uint(8)[100] val array_style[231821]:uint(8)[100] val aggregate_style[231830]:uint(8)[100] val tuple_style[231839]:uint(8)[100]
  function QioPluginFile[232010].setupChannel[231856](const in arg this[232012]:QioPluginFile[232010], ref arg pluginChannel[231853]:QioPluginChannel[232093], const in arg start[231862]:int(64)[13], const in arg end[231869]:int(64)[13], const in arg qioChannelPtr[231873]:qio_channel_ptr_t[231465]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1456483]:QioPluginChannel[232093] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1456508 'move' _formal_tmp_pluginChannel[1456483](1456506 'cast' QioPluginChannel[232093] nil[44]))
    val ret[533653]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207700]:syserr[223584] "temp"
    (2207704 'move' i_ret[2207700](2207702 'set reference' ret[533653]))
    const-val call_tmp[2207707]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207709 'move' call_tmp[2207707](2207712 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207714 '=' i_ret[2207700] call_tmp[2207707])
    label _endsetupChannel[1456493]
    (1842427 '=' pluginChannel[231853] _formal_tmp_pluginChannel[1456483])
    (533655 return ret[533653])
  }
  function QioPluginFile[232010].filelength[231893](const in arg this[232016]:QioPluginFile[232010], ref arg length[231890]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1458120]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458143 'move' _formal_tmp_length[1458120] 0)
    val ret[533663]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207776]:syserr[223584] "temp"
    (2207780 'move' i_ret[2207776](2207778 'set reference' ret[533663]))
    const-val call_tmp[2207783]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207785 'move' call_tmp[2207783](2207788 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207790 '=' i_ret[2207776] call_tmp[2207783])
    label _endfilelength[1458130]
    (1842430 '=' length[231890] _formal_tmp_length[1458120])
    (533665 return ret[533663])
  }
  function QioPluginFile[232010].getpath[231909](const in arg this[232020]:QioPluginFile[232010], ref arg path[231906]:c_string[19], ref arg len[231915]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1458178]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458213 'move' _formal_tmp_path[1458178](1458211 'cast' c_string[19] nil[44]))
    const-val _formal_tmp_len[1458179]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458216 'move' _formal_tmp_len[1458179] 0)
    val ret[533673]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207795]:syserr[223584] "temp"
    (2207799 'move' i_ret[2207795](2207797 'set reference' ret[533673]))
    const-val call_tmp[2207802]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207804 'move' call_tmp[2207802](2207807 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207809 '=' i_ret[2207795] call_tmp[2207802])
    label _endgetpath[1458189]
    (1842433 '=' path[231906] _formal_tmp_path[1458178])
    (1842436 '=' len[231915] _formal_tmp_len[1458179])
    (533675 return ret[533673])
  }
  function QioPluginFile[232010].fsync[231928](const in arg this[232024]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533683]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207814]:syserr[223584] "temp"
    (2207818 'move' i_ret[2207814](2207816 'set reference' ret[533683]))
    const-val call_tmp[2207821]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207823 'move' call_tmp[2207821](2207826 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207828 '=' i_ret[2207814] call_tmp[2207821])
    (533685 return ret[533683])
  }
  function QioPluginFile[232010].getChunk[231947](const in arg this[232028]:QioPluginFile[232010], ref arg length[231944]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1458270]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458293 'move' _formal_tmp_length[1458270] 0)
    val ret[533693]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207833]:syserr[223584] "temp"
    (2207837 'move' i_ret[2207833](2207835 'set reference' ret[533693]))
    const-val call_tmp[2207840]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207842 'move' call_tmp[2207840](2207845 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207847 '=' i_ret[2207833] call_tmp[2207840])
    label _endgetChunk[1458280]
    (1842439 '=' length[231944] _formal_tmp_length[1458270])
    (533695 return ret[533693])
  }
  function QioPluginFile[232010].getLocalesForRegion[231966](const in arg this[232032]:QioPluginFile[232010], const in arg start[231963]:int(64)[13], const in arg end[231972]:int(64)[13], ref arg localeNames[231979]:c_ptr(c_string)[1458305], ref arg nLocales[231986]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1458357]:c_ptr(c_string)[1458305] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458382 'move' _formal_tmp_localeNames[1458357](1458380 'cast' c_ptr(c_string)[1458305] nil[44]))
    val ret[533703]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207852]:syserr[223584] "temp"
    (2207856 'move' i_ret[2207852](2207854 'set reference' ret[533703]))
    const-val call_tmp[2207859]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207861 'move' call_tmp[2207859](2207864 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207866 '=' i_ret[2207852] call_tmp[2207859])
    label _endgetLocalesForRegion[1458367]
    (1842442 '=' localeNames[231979] _formal_tmp_localeNames[1458357])
    (533705 return ret[533703])
  }
  function QioPluginFile[232010].close[231999](const in arg this[232036]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533713]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207871]:syserr[223584] "temp"
    (2207875 'move' i_ret[2207871](2207873 'set reference' ret[533713]))
    const-val call_tmp[2207878]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207880 'move' call_tmp[2207878](2207883 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207885 '=' i_ret[2207871] call_tmp[2207878])
    (533715 return ret[533713])
  }
  function QioPluginFile[232010].deinit[879961](const in arg this[879965]:QioPluginFile[232010]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814966]
    (879973 return _void[55])
  }
  type QioPluginFile[232010] val super[355724]:object[22] "super class"
  function QioPluginChannel[232093].readAtLeast[232051](const in arg this[232095]:QioPluginChannel[232093], const in arg amt[232048]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533723]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207719]:syserr[223584] "temp"
    (2207723 'move' i_ret[2207719](2207721 'set reference' ret[533723]))
    const-val call_tmp[2207726]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207728 'move' call_tmp[2207726](2207731 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207733 '=' i_ret[2207719] call_tmp[2207726])
    (533725 return ret[533723])
  }
  function QioPluginChannel[232093].write[232070](const in arg this[232099]:QioPluginChannel[232093], const in arg amt[232067]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533733]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207738]:syserr[223584] "temp"
    (2207742 'move' i_ret[2207738](2207740 'set reference' ret[533733]))
    const-val call_tmp[2207745]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207747 'move' call_tmp[2207745](2207750 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207752 '=' i_ret[2207738] call_tmp[2207745])
    (533735 return ret[533733])
  }
  function QioPluginChannel[232093].close[232082](const in arg this[232103]:QioPluginChannel[232093]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533743]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    ref i_ret[2207757]:syserr[223584] "temp"
    (2207761 'move' i_ret[2207757](2207759 'set reference' ret[533743]))
    const-val call_tmp[2207764]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207766 'move' call_tmp[2207764](2207769 call qio_int_to_err[223634] ENOSYS[224684]))
    (2207771 '=' i_ret[2207757] call_tmp[2207764])
    (533745 return ret[533743])
  }
  function QioPluginChannel[232093].deinit[880097](const in arg this[880101]:QioPluginChannel[232093]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814978]
    (880109 return _void[55])
  }
  type QioPluginChannel[232093] val super[355726]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232114](const in arg file[232111]:c_void_ptr[149], ref arg plugin_ch[232117]:c_void_ptr[149], const in arg start[232124]:int(64)[13], const in arg end[232131]:int(64)[13], const in arg qio_ch[232135]:qio_channel_ptr_t[231465]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533753]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715106]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2326955]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326957 'move' call_tmp[2326955](2326959 'cast' QioPluginFile[232010] file[232111]))
    (715109 'move' call_tmp[715106] call_tmp[2326955])
    val call_tmp[715111]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327068]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327070 'move' coerce_tmp[2327068](2327072 'cast' object[22] call_tmp[715106]))
    const-val call_tmp[2327075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327077 'move' call_tmp[2327075](2327079 'ptr_eq' coerce_tmp[2327068] nil[44]))
    if call_tmp[2327075]
    {
      (2327085 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715114 'move' call_tmp[715111] call_tmp[715106])
    val f[232147]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546853 'move' f[232147] call_tmp[715111])
    val pluginChannel[232156]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1456460]:QioPluginChannel[232093] "dead at end of block" "temp"
    (1456463 'move' init_coerce_tmp[1456460](1456628 'cast' QioPluginChannel[232093] nil[44]))
    (546855 'move' pluginChannel[232156] init_coerce_tmp[1456460])
    const-val call_tmp[715118]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1456468]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1456473 'move' coerce_tmp[1456468] f[232147])
    val _formal_tmp_out_pluginChannel[1456475]:QioPluginChannel[232093] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715121 'move' call_tmp[715118](232171 call setupChannel[231856] coerce_tmp[1456468] _formal_tmp_out_pluginChannel[1456475] start[232124] end[232131] qio_ch[232135]))
    ref i_a[2327228]:QioPluginChannel[232093] "temp"
    (2327232 'move' i_a[2327228](2327230 'set reference' pluginChannel[232156]))
    (2327235 '=' i_a[2327228] _formal_tmp_out_pluginChannel[1456475])
    const-val ret[232172]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546857 'move' ret[232172] call_tmp[715118])
    const-val call_tmp[715123]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2327241]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327243 'move' call_tmp[2327241](2327245 'cast' c_void_ptr[149] pluginChannel[232156]))
    (715126 'move' call_tmp[715123] call_tmp[2327241])
    (2115910 '=' plugin_ch[232117] call_tmp[715123])
    (1456633 'move' ret[533753] ret[232172])
    label _end_chpl_qio_setup_plugin_channel[533751]
    (533755 return ret[533753])
  }
  function chpl_qio_read_atleast[232196](const in arg ch_plugin[232193]:c_void_ptr[149], const in arg amt[232202]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533765]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715128]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2327251]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327253 'move' call_tmp[2327251](2327255 'cast' QioPluginChannel[232093] ch_plugin[232193]))
    (715131 'move' call_tmp[715128] call_tmp[2327251])
    val call_tmp[715133]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327324]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327326 'move' coerce_tmp[2327324](2327328 'cast' object[22] call_tmp[715128]))
    const-val call_tmp[2327331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327333 'move' call_tmp[2327331](2327335 'ptr_eq' coerce_tmp[2327324] nil[44]))
    if call_tmp[2327331]
    {
      (2327341 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715136 'move' call_tmp[715133] call_tmp[715128])
    val c[232213]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546859 'move' c[232213] call_tmp[715133])
    const-val call_tmp[715140]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1456971]:QioPluginChannel[232093] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1456976 'move' coerce_tmp[1456971] c[232213])
    (715143 'move' call_tmp[715140](232226 call readAtLeast[232051] coerce_tmp[1456971] amt[232202]))
    (533770 'move' ret[533765] call_tmp[715140])
    label _end_chpl_qio_read_atleast[533763]
    (533767 return ret[533765])
  }
  function chpl_qio_write[232237](const in arg ch_plugin[232234]:c_void_ptr[149], const in arg amt[232243]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533776]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715145]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2327261]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327263 'move' call_tmp[2327261](2327265 'cast' QioPluginChannel[232093] ch_plugin[232234]))
    (715148 'move' call_tmp[715145] call_tmp[2327261])
    val call_tmp[715150]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327347]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327349 'move' coerce_tmp[2327347](2327351 'cast' object[22] call_tmp[715145]))
    const-val call_tmp[2327354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327356 'move' call_tmp[2327354](2327358 'ptr_eq' coerce_tmp[2327347] nil[44]))
    if call_tmp[2327354]
    {
      (2327364 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715153 'move' call_tmp[715150] call_tmp[715145])
    val c[232254]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546861 'move' c[232254] call_tmp[715150])
    const-val call_tmp[715157]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1456994]:QioPluginChannel[232093] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1456999 'move' coerce_tmp[1456994] c[232254])
    (715160 'move' call_tmp[715157](232265 call write[232070] coerce_tmp[1456994] amt[232243]))
    (533781 'move' ret[533776] call_tmp[715157])
    label _end_chpl_qio_write[533774]
    (533778 return ret[533776])
  }
  function chpl_qio_channel_close[232276](const in arg ch[232273]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533787]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715162]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2327271]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327273 'move' call_tmp[2327271](2327275 'cast' QioPluginChannel[232093] ch[232273]))
    (715165 'move' call_tmp[715162] call_tmp[2327271])
    val call_tmp[715167]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327370]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327372 'move' coerce_tmp[2327370](2327374 'cast' object[22] call_tmp[715162]))
    const-val call_tmp[2327377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327379 'move' call_tmp[2327377](2327381 'ptr_eq' coerce_tmp[2327370] nil[44]))
    if call_tmp[2327377]
    {
      (2327387 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715170 'move' call_tmp[715167] call_tmp[715162])
    val c[232287]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546863 'move' c[232287] call_tmp[715167])
    const-val call_tmp[715174]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1457016]:QioPluginChannel[232093] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1457021 'move' coerce_tmp[1457016] c[232287])
    (715177 'move' call_tmp[715174](232299 call close[232082] coerce_tmp[1457016]))
    const-val err[232300]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546865 'move' err[232300] call_tmp[715174])
    val coerce_tmp[2327393]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327395 'move' coerce_tmp[2327393](2327397 'cast' object[22] c[232287]))
    const-val call_tmp[2327400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327402 'move' call_tmp[2327400](2327404 'ptr_neq' coerce_tmp[2327393] nil[44]))
    if call_tmp[2327400]
    {
      val call_tmp[2327409]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327411 'move' call_tmp[2327409] c[232287])
      const-val tmp[2327414]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      const-val call_tmp[2327416]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327418 'move' call_tmp[2327416](2327420 '_wide_get_locale' c[232287]))
      (2327422 'move' tmp[2327414] call_tmp[2327416])
      val isdirect[2327425]:bool[10] "temp"
      (2327427 'move' isdirect[2327425](2327430 call chpl_doDirectExecuteOn[187423] call_tmp[2327416]))
      if isdirect[2327425]
      {
        (2327435 call on_fn[1457295] c[232287])
      }
      {
        val _args_foron_fn[2327438]:_class_localson_fn[2096691] "temp"
        (2327440 'move' _args_foron_fn[2327438](2327442 'stack allocate class' _class_localson_fn[2096691]))
        (2327444 '.=' _args_foron_fn[2327438] _0_tmp[2096694] tmp[2327414])
        (2327448 '.=' _args_foron_fn[2327438] _1_arg[2096696] c[232287])
        val _args_vforon_fn[2327452]:c_void_ptr[149] "temp"
        (2327454 'move' _args_vforon_fn[2327452](2327456 'cast_to_void_star' _args_foron_fn[2327438]))
        val _args_sizeon_fn[2327458]:int(64)[13] "temp"
        (2327460 'move' _args_sizeon_fn[2327458](2327462 'sizeof_bundle' _class_localson_fn[2096691]))
        on(2327465 call wrapon_fn[2096725] tmp[2327414] _args_vforon_fn[2327452] _args_sizeon_fn[2327458] _args_foron_fn[2327438])
      }
    }
    (1458096 'move' ret[533787] err[232300])
    label _end_chpl_qio_channel_close[533785]
    (533789 return ret[533787])
  }
  function chpl_qio_filelength[232321](const in arg file[232318]:c_void_ptr[149], ref arg length[232327]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533799]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715179]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2326965]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326967 'move' call_tmp[2326965](2326969 'cast' QioPluginFile[232010] file[232318]))
    (715182 'move' call_tmp[715179] call_tmp[2326965])
    val call_tmp[715184]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327091]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327093 'move' coerce_tmp[2327091](2327095 'cast' object[22] call_tmp[715179]))
    const-val call_tmp[2327098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327100 'move' call_tmp[2327098](2327102 'ptr_eq' coerce_tmp[2327091] nil[44]))
    if call_tmp[2327098]
    {
      (2327108 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715187 'move' call_tmp[715184] call_tmp[715179])
    val f[232339]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546867 'move' f[232339] call_tmp[715184])
    const-val call_tmp[715191]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458105]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458110 'move' coerce_tmp[1458105] f[232339])
    val _formal_tmp_out_length[1458112]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715194 'move' call_tmp[715191](232352 call filelength[231893] coerce_tmp[1458105] _formal_tmp_out_length[1458112]))
    (2121930 '=' length[232327] _formal_tmp_out_length[1458112])
    (1458147 'move' ret[533799] call_tmp[715191])
    label _end_chpl_qio_filelength[533797]
    (533801 return ret[533799])
  }
  function chpl_qio_getpath[232364](const in arg file[232361]:c_void_ptr[149], ref arg str[232367]:c_string[19], ref arg len[232374]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533811]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715196]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2326975]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326977 'move' call_tmp[2326975](2326979 'cast' QioPluginFile[232010] file[232361]))
    (715199 'move' call_tmp[715196] call_tmp[2326975])
    val call_tmp[715201]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327114]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327116 'move' coerce_tmp[2327114](2327118 'cast' object[22] call_tmp[715196]))
    const-val call_tmp[2327121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327123 'move' call_tmp[2327121](2327125 'ptr_eq' coerce_tmp[2327114] nil[44]))
    if call_tmp[2327121]
    {
      (2327131 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715204 'move' call_tmp[715201] call_tmp[715196])
    val f[232386]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546869 'move' f[232386] call_tmp[715201])
    const-val call_tmp[715208]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458156]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458161 'move' coerce_tmp[1458156] f[232386])
    val _formal_tmp_out_path[1458163]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1458170]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715211 'move' call_tmp[715208](232400 call getpath[231909] coerce_tmp[1458156] _formal_tmp_out_path[1458163] _formal_tmp_out_len[1458170]))
    (2119839 '=' str[232367] _formal_tmp_out_path[1458163])
    (2121936 '=' len[232374] _formal_tmp_out_len[1458170])
    (1458221 'move' ret[533811] call_tmp[715208])
    label _end_chpl_qio_getpath[533809]
    (533813 return ret[533811])
  }
  function chpl_qio_fsync[232412](const in arg file[232409]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533823]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715213]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2326985]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326987 'move' call_tmp[2326985](2326989 'cast' QioPluginFile[232010] file[232409]))
    (715216 'move' call_tmp[715213] call_tmp[2326985])
    val call_tmp[715218]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327137]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327139 'move' coerce_tmp[2327137](2327141 'cast' object[22] call_tmp[715213]))
    const-val call_tmp[2327144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327146 'move' call_tmp[2327144](2327148 'ptr_eq' coerce_tmp[2327137] nil[44]))
    if call_tmp[2327144]
    {
      (2327154 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715221 'move' call_tmp[715218] call_tmp[715213])
    val f[232423]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546871 'move' f[232423] call_tmp[715218])
    const-val call_tmp[715225]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458228]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458233 'move' coerce_tmp[1458228] f[232423])
    (715228 'move' call_tmp[715225](232435 call fsync[231928] coerce_tmp[1458228]))
    (1458246 'move' ret[533823] call_tmp[715225])
    label _end_chpl_qio_fsync[533821]
    (533825 return ret[533823])
  }
  function chpl_qio_get_chunk[232447](const in arg file[232444]:c_void_ptr[149], ref arg length[232453]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533835]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715230]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2326995]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326997 'move' call_tmp[2326995](2326999 'cast' QioPluginFile[232010] file[232444]))
    (715233 'move' call_tmp[715230] call_tmp[2326995])
    val call_tmp[715235]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327160]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327162 'move' coerce_tmp[2327160](2327164 'cast' object[22] call_tmp[715230]))
    const-val call_tmp[2327167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327169 'move' call_tmp[2327167](2327171 'ptr_eq' coerce_tmp[2327160] nil[44]))
    if call_tmp[2327167]
    {
      (2327177 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715238 'move' call_tmp[715235] call_tmp[715230])
    val f[232465]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546873 'move' f[232465] call_tmp[715235])
    const-val call_tmp[715242]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458255]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458260 'move' coerce_tmp[1458255] f[232465])
    val _formal_tmp_out_length[1458262]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715245 'move' call_tmp[715242](232478 call getChunk[231947] coerce_tmp[1458255] _formal_tmp_out_length[1458262]))
    (2121942 '=' length[232453] _formal_tmp_out_length[1458262])
    (1458297 'move' ret[533835] call_tmp[715242])
    label _end_chpl_qio_get_chunk[533833]
    (533837 return ret[533835])
  }
  function chpl_qio_get_locales_for_region[232490](const in arg file[232487]:c_void_ptr[149], const in arg start[232496]:int(64)[13], const in arg end[232503]:int(64)[13], ref arg localeNames[232507]:c_void_ptr[149], const  ref arg nLocales[232514]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533847]:syserr[223584] "dead after last mention" "RVV" "temp"
    val strPtr[232522]:c_ptr(c_string)[1458305] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[715247]:c_ptr(c_string)[1458305] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[715252]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2327005]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327007 'move' call_tmp[2327005](2327009 'cast' QioPluginFile[232010] file[232487]))
    (715255 'move' call_tmp[715252] call_tmp[2327005])
    val call_tmp[715257]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327183]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327185 'move' coerce_tmp[2327183](2327187 'cast' object[22] call_tmp[715252]))
    const-val call_tmp[2327190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327192 'move' call_tmp[2327190](2327194 'ptr_eq' coerce_tmp[2327183] nil[44]))
    if call_tmp[2327190]
    {
      (2327200 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715260 'move' call_tmp[715257] call_tmp[715252])
    val f[232535]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546877 'move' f[232535] call_tmp[715257])
    const-val call_tmp[715264]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1458342]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1458347 'move' coerce_tmp[1458342] f[232535])
    val _formal_tmp_out_localeNames[1458349]:c_ptr(c_string)[1458305] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715267 'move' call_tmp[715264](232550 call getLocalesForRegion[231966] coerce_tmp[1458342] start[232496] end[232503] _formal_tmp_out_localeNames[1458349] nLocales[232514]))
    (1842445 '=' strPtr[232522] _formal_tmp_out_localeNames[1458349])
    (1458416 'noop')
    const-val ret[232551]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546879 'move' ret[232551] call_tmp[715264])
    const-val call_tmp[715269]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715272 'move' call_tmp[715269](232558 'cast' c_void_ptr[149] strPtr[232522]))
    (2115916 '=' localeNames[232507] call_tmp[715269])
    (1458441 'move' ret[533847] ret[232551])
    label _end_chpl_qio_get_locales_for_region[533845]
    (533849 return ret[533847])
  }
  function chpl_qio_file_close[232575](const in arg file[232572]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533859]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715274]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    val call_tmp[2327015]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327017 'move' call_tmp[2327015](2327019 'cast' QioPluginFile[232010] file[232572]))
    (715277 'move' call_tmp[715274] call_tmp[2327015])
    val call_tmp[715279]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[2327206]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327208 'move' coerce_tmp[2327206](2327210 'cast' object[22] call_tmp[715274]))
    const-val call_tmp[2327213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327215 'move' call_tmp[2327213](2327217 'ptr_eq' coerce_tmp[2327206] nil[44]))
    if call_tmp[2327213]
    {
      (2327223 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715282 'move' call_tmp[715279] call_tmp[715274])
    val f[232586]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546881 'move' f[232586] call_tmp[715279])
    const-val call_tmp[715286]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1458448]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1458453 'move' coerce_tmp[1458448] f[232586])
    (715289 'move' call_tmp[715286](232596 call close[231999] coerce_tmp[1458448]))
    const-val err[232597]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546883 'move' err[232597] call_tmp[715286])
    val coerce_tmp[2327475]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327477 'move' coerce_tmp[2327475](2327479 'cast' object[22] f[232586]))
    const-val call_tmp[2327482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327484 'move' call_tmp[2327482](2327486 'ptr_neq' coerce_tmp[2327475] nil[44]))
    if call_tmp[2327482]
    {
      val call_tmp[2327491]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327493 'move' call_tmp[2327491] f[232586])
      const-val tmp[2327496]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      const-val call_tmp[2327498]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327500 'move' call_tmp[2327498](2327502 '_wide_get_locale' f[232586]))
      (2327504 'move' tmp[2327496] call_tmp[2327498])
      val isdirect[2327507]:bool[10] "temp"
      (2327509 'move' isdirect[2327507](2327512 call chpl_doDirectExecuteOn[187423] call_tmp[2327498]))
      if isdirect[2327507]
      {
        (2327517 call on_fn[1458727] f[232586])
      }
      {
        val _args_foron_fn[2327520]:_class_localson_fn[2096776] "temp"
        (2327522 'move' _args_foron_fn[2327520](2327524 'stack allocate class' _class_localson_fn[2096776]))
        (2327526 '.=' _args_foron_fn[2327520] _0_tmp[2096779] tmp[2327496])
        (2327530 '.=' _args_foron_fn[2327520] _1_arg[2096781] f[232586])
        val _args_vforon_fn[2327534]:c_void_ptr[149] "temp"
        (2327536 'move' _args_vforon_fn[2327534](2327538 'cast_to_void_star' _args_foron_fn[2327520]))
        val _args_sizeon_fn[2327540]:int(64)[13] "temp"
        (2327542 'move' _args_sizeon_fn[2327540](2327544 'sizeof_bundle' _class_localson_fn[2096776]))
        on(2327547 call wrapon_fn[2096810] tmp[2327496] _args_vforon_fn[2327534] _args_sizeon_fn[2327540] _args_foron_fn[2327520])
      }
    }
    (1459528 'move' ret[533859] err[232597])
    label _end_chpl_qio_file_close[533857]
    (533861 return ret[533859])
  }
  function qio_style_init_default[232618](ref arg s[232615]:iostyle[231844]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533869 return _void[55])
  }
  function qio_file_release[232638](const in arg f[232635]:qio_file_ptr_t[231439]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533873 return _void[55])
  }
  function qio_file_init[232648](ref arg file_out[232645]:qio_file_ptr_t[231439], const in arg fp[232651]:_file[155], const in arg fd[232655]:int(32)[95], const in arg iohints[232659]:int(32)[95], const  ref arg style[232663]:iostyle[231844], const in arg usefilestar[232667]:int(32)[95]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533877]:syserr[223584] "RVV" "temp"
    (533879 return ret[533877])
  }
  function qio_file_open_mem[232728](ref arg file_out[232725]:qio_file_ptr_t[231439], const in arg buf[232731]:qbuffer_ptr_t[231476], const  ref arg style[232735]:iostyle[231844]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533895]:syserr[223584] "RVV" "temp"
    (533897 return ret[533895])
  }
  function qio_file_close[232748](const in arg f[232745]:qio_file_ptr_t[231439]) : syserr[223584] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533901]:syserr[223584] "RVV" "temp"
    (533903 return ret[533901])
  }
  function qio_file_isopen[232782](const in arg f[232779]:qio_file_ptr_t[231439]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533915]:bool[10] "RVV" "temp"
    (533917 return ret[533915])
  }
  function qio_file_get_style[232821](const in arg f[232818]:qio_file_ptr_t[231439], ref arg style[232824]:iostyle[231844]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533931 return _void[55])
  }
  function qio_channel_create[232878](ref arg ch[232875]:qio_channel_ptr_t[231465], const in arg file[232881]:qio_file_ptr_t[231439], const in arg hints[232885]:int(32)[95], const in arg readable[232889]:int(32)[95], const in arg writeable[232893]:int(32)[95], const in arg start[232900]:int(64)[13], const in arg end[232907]:int(64)[13], const  ref arg style[232911]:iostyle[231844]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533953]:syserr[223584] "RVV" "temp"
    (533955 return ret[533953])
  }
  function qio_channel_path_offset[232924](const in arg threadsafe[232921]:int(32)[95], const in arg ch[232927]:qio_channel_ptr_t[231465], ref arg path[232931]:c_string[19], ref arg offset[232938]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533959]:syserr[223584] "RVV" "temp"
    (533961 return ret[533959])
  }
  function qio_channel_retain[232951](const in arg ch[232948]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533963 return _void[55])
  }
  function qio_channel_release[232961](const in arg ch[232958]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533965 return _void[55])
  }
  function qio_channel_lock[233007](const in arg ch[233004]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533979]:syserr[223584] "RVV" "temp"
    (533981 return ret[533979])
  }
  function qio_channel_unlock[233019](const in arg ch[233016]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533983 return _void[55])
  }
  function qio_channel_binary[233057](const in arg ch[233054]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533991]:uint(8)[100] "RVV" "temp"
    (533993 return ret[533991])
  }
  function qio_channel_byteorder[233072](const in arg ch[233069]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533997]:uint(8)[100] "RVV" "temp"
    (533999 return ret[533997])
  }
  function qio_channel_str_style[233087](const in arg ch[233084]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534003]:int(64)[13] "RVV" "temp"
    (534005 return ret[534003])
  }
  function qio_channel_style_element[233102](const in arg ch[233099]:qio_channel_ptr_t[231465], const in arg element[233108]:int(64)[13]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534009]:int(64)[13] "RVV" "temp"
    (534011 return ret[534009])
  }
  function qio_channel_close[233140](const in arg threadsafe[233137]:int(32)[95], const in arg ch[233143]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534021]:syserr[223584] "RVV" "temp"
    (534023 return ret[534021])
  }
  function qio_channel_read_amt[1083283](const in arg threadsafe[1083287]:int(32)[95], const in arg ch[1083289]:qio_channel_ptr_t[231465], const in arg ptr[1083291]:c_ptr(uint(8))[937423], const in arg len[1083295]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083299]:syserr[223584] "RVV" "temp"
    (1083307 return ret[1083299])
  }
  function qio_channel_write_amt[1407983](const in arg threadsafe[1407987]:int(32)[95], const in arg ch[1407989]:qio_channel_ptr_t[231465], const in arg ptr[1407991]:_ddata(real(64))[1357916], const in arg len[1407995]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "no doc" "private" "resolved" "no return value for void"
  {
    val ret[1407999]:syserr[223584] "RVV" "temp"
    (1408007 return ret[1407999])
  }
  function qio_channel_offset_unlocked[233382](const in arg ch[233379]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534087]:int(64)[13] "RVV" "temp"
    (534089 return ret[534087])
  }
  function qio_file_path_for_fd[233647](const in arg fd[233644]:int(32)[95], ref arg path[233650]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534157]:syserr[223584] "RVV" "temp"
    (534159 return ret[534157])
  }
  function qio_file_path_for_fp[233663](const in arg fp[233660]:_file[155], ref arg path[233666]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534163]:syserr[223584] "RVV" "temp"
    (534165 return ret[534163])
  }
  function qio_file_path[233679](const in arg f[233676]:qio_file_ptr_t[231439], ref arg path[233682]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534169]:syserr[223584] "RVV" "temp"
    (534171 return ret[534169])
  }
  function qio_shortest_path[233695](const in arg fl[233692]:qio_file_ptr_t[231439], ref arg path_out[233698]:c_string[19], const in arg path_in[233702]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534175]:syserr[223584] "RVV" "temp"
    (534177 return ret[534175])
  }
  function qio_channel_write_int64[234050](const in arg threadsafe[234047]:int(32)[95], const in arg byteorder[234053]:int(32)[95], const in arg ch[234057]:qio_channel_ptr_t[231465], const in arg x[234064]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534259]:syserr[223584] "RVV" "temp"
    (534261 return ret[534259])
  }
  function qio_channel_write_float64[234266](const in arg threadsafe[234263]:int(32)[95], const in arg byteorder[234269]:int(32)[95], const in arg ch[234273]:qio_channel_ptr_t[231465], const in arg x[234280]:real(64)[16]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534307]:syserr[223584] "RVV" "temp"
    (534309 return ret[534307])
  }
  function qio_channel_write_string[234389](const in arg threadsafe[234386]:int(32)[95], const in arg byteorder[234392]:int(32)[95], const in arg str_style[234399]:int(64)[13], const in arg ch[234403]:qio_channel_ptr_t[231465], const in arg s[234407]:c_string[19], const in arg len[234411]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534331]:syserr[223584] "RVV" "temp"
    (534333 return ret[534331])
  }
  function qio_channel_print_int[1079525](const in arg threadsafe[1079529]:int(32)[95], const in arg ch[1079531]:qio_channel_ptr_t[231465], const  ref arg ptr[1079533]:int(64)[13], const in arg len[1079537]:uint(64)[115], const in arg issigned[1079541]:int(32)[95]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079545]:syserr[223584] "RVV" "temp"
    (1079553 return ret[1079545])
  }
  function qio_channel_print_float[1428545](const in arg threadsafe[1428549]:int(32)[95], const in arg ch[1428551]:qio_channel_ptr_t[231465], const  ref arg ptr[1428553]:real(64)[16], const in arg len[1428557]:uint(64)[115]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1428561]:syserr[223584] "RVV" "temp"
    (1428569 return ret[1428561])
  }
  function qio_channel_write_newline[234735](const in arg threadsafe[234732]:int(32)[95], const in arg ch[234738]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534421]:syserr[223584] "RVV" "temp"
    (534423 return ret[534421])
  }
  function qio_channel_print_string[234837](const in arg threadsafe[234834]:int(32)[95], const in arg ch[234840]:qio_channel_ptr_t[231465], const in arg ptr[234844]:c_string[19], const in arg len[234848]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534445]:syserr[223584] "RVV" "temp"
    (534447 return ret[534445])
  }
  function qio_channel_print_literal[234917](const in arg threadsafe[234914]:int(32)[95], const in arg ch[234920]:qio_channel_ptr_t[231465], const in arg match[234924]:c_string[19], const in arg len[234928]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534463]:syserr[223584] "RVV" "temp"
    (534465 return ret[534463])
  }
  const QIO_CONV_UNK[235060]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235065]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235070]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235075]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235080]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235085]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235090]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235095]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235100]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235105]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235110]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235115]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235120]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235125]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235130]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235135]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235140]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235145]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235150]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235155]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235160]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235165]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235170]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235175]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235180]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235185]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235190]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235195]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235200]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235205]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235210]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235295]() : iostyle[231844] "resolved"
  {
    val ret[534517]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235299]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (235307 call qio_style_init_default[232618] ret[235299])
    (985787 'move' ret[534517] ret[235299])
    label _end_defaultIOStyle[534515]
    (534519 return ret[534517])
  }
  val iohints[235556]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function file[235580].init[235574](ref arg this[235582]:file[235580]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[715391]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830517]:locale[28] "temp"
    ref i__retArg[2167560]:locale[28] "temp"
    (2167564 'move' i__retArg[2167560](2167562 'set reference' ret_tmp[1830517]))
    const-val call_tmp[2167567]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167569]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167571 'move' call_tmp[2167569](2167574 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167577 'move' call_tmp[2167567] call_tmp[2167569])
    const-val call_tmp[2167580]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167582]:locale[28] "temp"
    (2167585 call chpl_localeID_to_locale[92849] call_tmp[2167567] ret_tmp[2167582])
    (2167588 'move' call_tmp[2167580] ret_tmp[2167582])
    (2167591 '=' i__retArg[2167560] call_tmp[2167580])
    (1830520 'move' call_tmp[715391] ret_tmp[1830517])
    val tmp[465254]:locale[28] "dead after last mention" "temp"
    (465257 'move' tmp[465254] call_tmp[715391])
    (465259 '.=' this[235582] home[235562] tmp[465254])
    val tmp[465264]:qio_file_ptr_t[231439] "dead after last mention" "temp"
    (465267 'move' tmp[465264] QIO_FILE_PTR_NULL[231442])
    (465269 '.=' this[235582] _file_internal[235568] tmp[465264])
    (534575 return _void[55])
  }
  type file[235580] val home[235562]:locale[28] "no doc" val _file_internal[235568]:qio_file_ptr_t[231439] "no doc"
  function file[235580].checkAssumingLocal[235768](const  ref arg this[235770]:file[235580], ref arg error_out[1808254]:Error[167938]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[715499]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216523]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216525 'move' call_tmp[2216523](2216527 '.' this[235770] _file_internal[235568]))
    (715502 'move' call_tmp[715499] call_tmp[2216523])
    const-val call_tmp[715504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017098]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017102 'move' coerce_tmp[1017098](1017100 'deref' call_tmp[715499]))
    const-val call_tmp[2226940]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226942 'move' call_tmp[2226940](2226944 'cast' c_void_ptr[149] coerce_tmp[1017098]))
    const-val call_tmp[2226947]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226949 'move' call_tmp[2226947](2226951 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226956 'move' call_tmp[2226954](2226958 'ptr_eq' call_tmp[2226940] call_tmp[2226947]))
    (715507 'move' call_tmp[715504] call_tmp[2226954])
    const-val call_tmp[715509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715512 'move' call_tmp[715509] call_tmp[715504])
    if call_tmp[715509]
    {
      const-val call_tmp[715516]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017164 'move' coerce_tmp[1017158](1017160 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832533]:owned SystemError[1000238] "temp"
      (235802 call fromSyserr[1017113] coerce_tmp[1017158] "Operation attempted on an invalid file" ret_tmp[1832533])
      (1832536 'move' call_tmp[715516] ret_tmp[1832533])
      val call_tmp[715521]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017173]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832461]:owned Error[966458] "temp"
      ref i_x[2225864]:owned SystemError[1000238] "temp"
      (2225868 'move' i_x[2225864](2225866 'set reference' call_tmp[715516]))
      ref i__retArg[2225870]:owned Error[966458] "temp"
      (2225874 'move' i__retArg[2225870](2225872 'set reference' ret_tmp[1832461]))
      val _formal_tmp_x[2225877]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2225879 'move' _formal_tmp_x[2225877] i_x[2225864])
      const-val ret[2225882]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2225884]:owned SystemError[1000238] "temp"
      (2225886 'move' i_this[2225884](2225888 'set reference' _formal_tmp_x[2225877]))
      val coerce_tmp[2225890]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2225892 'move' coerce_tmp[2225890](2225894 '.v' i_this[2225884] chpl_p[1000233]))
      val call_tmp[2225897]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2225899 'move' call_tmp[2225897](2225901 'cast' Error[167938] coerce_tmp[2225890]))
      val castPtr[2225904]:Error[167938] "dead at end of block" "insert auto destroy"
      (2225906 'move' castPtr[2225904] call_tmp[2225897])
      ref i_this[2225909]:owned SystemError[1000238] "temp"
      (2225911 'move' i_this[2225909](2225913 'set reference' _formal_tmp_x[2225877]))
      val tmp[2225915]:SystemError[264845] "temp"
      (2225917 'move' tmp[2225915](2225919 'cast' SystemError[264845] nil[44]))
      (2225922 '.=' i_this[2225909] chpl_p[1000233] tmp[2225915])
      val coerce_tmp[2225926]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2225928 'move' coerce_tmp[2225926](2225930 'cast' object[22] call_tmp[2225897]))
      const-val call_tmp[2225933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2225935 'move' call_tmp[2225933](2225937 'ptr_eq' coerce_tmp[2225926] nil[44]))
      if call_tmp[2225933]
      {
        (2225943 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2225946]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2225948]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2225951 call init[968094] initTemp[2225948] castPtr[2225904])
      (2225954 'move' call_tmp[2225946] initTemp[2225948])
      (2225957 'move' ret[2225882] call_tmp[2225946])
      (2225961 call chpl__autoDestroy[1516200] _formal_tmp_x[2225877])
      (2225965 '=' i__retArg[2225870] ret[2225882])
      (1832464 'move' coerce_tmp[1017173] ret_tmp[1832461])
      const-val _formal_tmp_in_err[1017352]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017356 'move' _formal_tmp_in_err[1017352] coerce_tmp[1017173])
      (715524 'move' call_tmp[715521](468115 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017352]))
      val castedError[1808259]:Error[167938] "temp"
      (1808265 'move' castedError[1808259] call_tmp[715521])
      (1808267 '=' error_out[1808254] castedError[1808259])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
    }
    const-ref call_tmp[715528]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216533]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216535 'move' call_tmp[2216533](2216537 '.' this[235770] _file_internal[235568]))
    (715531 'move' call_tmp[715528] call_tmp[2216533])
    const-val call_tmp[715533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017362]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017366 'move' coerce_tmp[1017362](1017364 'deref' call_tmp[715528]))
    (715536 'move' call_tmp[715533](235814 call qio_file_isopen[232782] coerce_tmp[1017362]))
    const-val call_tmp[715538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2114122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114124 'move' call_tmp[2114122](2114126 '!' call_tmp[715533]))
    (715541 'move' call_tmp[715538] call_tmp[2114122])
    const-val call_tmp[715543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715546 'move' call_tmp[715543] call_tmp[715538])
    if call_tmp[715543]
    {
      const-val call_tmp[715550]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017372]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017378 'move' coerce_tmp[1017372](1017374 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832539]:owned SystemError[1000238] "temp"
      (235840 call fromSyserr[1017113] coerce_tmp[1017372] "Operation attempted on closed file" ret_tmp[1832539])
      (1832542 'move' call_tmp[715550] ret_tmp[1832539])
      val call_tmp[715555]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017381]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832467]:owned Error[966458] "temp"
      ref i_x[2225970]:owned SystemError[1000238] "temp"
      (2225974 'move' i_x[2225970](2225972 'set reference' call_tmp[715550]))
      ref i__retArg[2225976]:owned Error[966458] "temp"
      (2225980 'move' i__retArg[2225976](2225978 'set reference' ret_tmp[1832467]))
      val _formal_tmp_x[2225983]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2225985 'move' _formal_tmp_x[2225983] i_x[2225970])
      const-val ret[2225988]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2225990]:owned SystemError[1000238] "temp"
      (2225992 'move' i_this[2225990](2225994 'set reference' _formal_tmp_x[2225983]))
      val coerce_tmp[2225996]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2225998 'move' coerce_tmp[2225996](2226000 '.v' i_this[2225990] chpl_p[1000233]))
      val call_tmp[2226003]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226005 'move' call_tmp[2226003](2226007 'cast' Error[167938] coerce_tmp[2225996]))
      val castPtr[2226010]:Error[167938] "dead at end of block" "insert auto destroy"
      (2226012 'move' castPtr[2226010] call_tmp[2226003])
      ref i_this[2226015]:owned SystemError[1000238] "temp"
      (2226017 'move' i_this[2226015](2226019 'set reference' _formal_tmp_x[2225983]))
      val tmp[2226021]:SystemError[264845] "temp"
      (2226023 'move' tmp[2226021](2226025 'cast' SystemError[264845] nil[44]))
      (2226028 '.=' i_this[2226015] chpl_p[1000233] tmp[2226021])
      val coerce_tmp[2226032]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226034 'move' coerce_tmp[2226032](2226036 'cast' object[22] call_tmp[2226003]))
      const-val call_tmp[2226039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226041 'move' call_tmp[2226039](2226043 'ptr_eq' coerce_tmp[2226032] nil[44]))
      if call_tmp[2226039]
      {
        (2226049 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226052]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226054]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2226057 call init[968094] initTemp[2226054] castPtr[2226010])
      (2226060 'move' call_tmp[2226052] initTemp[2226054])
      (2226063 'move' ret[2225988] call_tmp[2226052])
      (2226067 call chpl__autoDestroy[1516200] _formal_tmp_x[2225983])
      (2226071 '=' i__retArg[2225976] ret[2225988])
      (1832470 'move' coerce_tmp[1017381] ret_tmp[1832467])
      const-val _formal_tmp_in_err[1017560]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017564 'move' _formal_tmp_in_err[1017560] coerce_tmp[1017381])
      (715558 'move' call_tmp[715555](468117 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017560]))
      val castedError[1808272]:Error[167938] "temp"
      (1808278 'move' castedError[1808272] call_tmp[715555])
      (1808280 '=' error_out[1808254] castedError[1808272])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
    }
    label _endcheckAssumingLocal[1808256]
    (534583 return _void[55])
  }
  function file[235580].deinit[235891](ref arg this[235893]:file[235580]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[235919]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[715576]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216295]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216297 'move' call_tmp[2216295](2216299 '.' this[235893] home[235562]))
    (715579 'move' call_tmp[715576] call_tmp[2216295])
    const-val call_tmp[715581]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[985663]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165047]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165049 'move' coerce_tmp[2165047](2165051 '.v' call_tmp[715576] _instance[89975]))
    val coerce_tmp[2165054]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165056 'move' coerce_tmp[2165054](2165058 'cast' object[22] coerce_tmp[2165047]))
    const-val call_tmp[2165061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165063 'move' call_tmp[2165061](2165065 'ptr_eq' coerce_tmp[2165054] nil[44]))
    if call_tmp[2165061]
    {
      (2165071 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (985668 'move' _locale_tmp_[985663] coerce_tmp[2165047])
    (715584 'move' call_tmp[715581](235916 '_wide_get_locale' _locale_tmp_[985663]))
    (235921 'move' tmp[235919] call_tmp[715581])
    val isdirect[2086871]:bool[10] "temp"
    (2086876 'move' isdirect[2086871](2086873 call chpl_doDirectExecuteOn[187423] tmp[235919]))
    if isdirect[2086871]
    {
      (2086880 call on_fn[935597] this[235893])
    }
    {
      val _args_foron_fn[2086895]:_class_localson_fn[2086887] "temp"
      (2086899 'move' _args_foron_fn[2086895](2086897 'stack allocate class' _class_localson_fn[2086887]))
      (2086901 '.=' _args_foron_fn[2086895] _0_tmp[2086890] tmp[235919])
      ref tmp[2086905]:file[235580] "temp"
      (2086909 'move' tmp[2086905](2086907 'set reference' this[235893]))
      (2086911 '.=' _args_foron_fn[2086895] _1_this[2086892] tmp[2086905])
      val _args_vforon_fn[2086915]:c_void_ptr[149] "temp"
      (2086919 'move' _args_vforon_fn[2086915](2086917 'cast_to_void_star' _args_foron_fn[2086895]))
      val _args_sizeon_fn[2086921]:int(64)[13] "temp"
      (2086925 'move' _args_sizeon_fn[2086921](2086923 'sizeof_bundle' _class_localson_fn[2086887]))
      on(2086957 call wrapon_fn[2086927] tmp[235919] _args_vforon_fn[2086915] _args_sizeon_fn[2086921] _args_foron_fn[2086895])
    }
    label _enddeinit[1814579]
    const-ref _field_destructor_tmp_[1814577]:locale[28] "temp"
    (1814584 'move' _field_destructor_tmp_[1814577](1814581 '.' this[235893] home[235562]))
    (1814586 call deinit[90185] _field_destructor_tmp_[1814577])
    (534587 return _void[55])
  }
  function file[235580]._style[235960](const  ref arg this[235962]:file[235580], ref arg error_out[1808284]:Error[167938]) : iostyle[231844] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534601]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235969]:iostyle[231844] "dead at end of block" "insert auto destroy"
    const-val tmp[236007]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[715614]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216321]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216323 'move' call_tmp[2216321](2216325 '.' this[235962] home[235562]))
    (715617 'move' call_tmp[715614] call_tmp[2216321])
    const-val call_tmp[715619]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017044]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165077]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165079 'move' coerce_tmp[2165077](2165081 '.v' call_tmp[715614] _instance[89975]))
    val coerce_tmp[2165084]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165086 'move' coerce_tmp[2165084](2165088 'cast' object[22] coerce_tmp[2165077]))
    const-val call_tmp[2165091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165093 'move' call_tmp[2165091](2165095 'ptr_eq' coerce_tmp[2165084] nil[44]))
    if call_tmp[2165091]
    {
      (2165101 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1017049 'move' _locale_tmp_[1017044] coerce_tmp[2165077])
    (715622 'move' call_tmp[715619](236004 '_wide_get_locale' _locale_tmp_[1017044]))
    (236009 'move' tmp[236007] call_tmp[715619])
    val error[1808287]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1808289 'move' error[1808287] nil[44])
    val rvfDerefTmp[2083413]:file[235580] "temp"
    (2083417 'move' rvfDerefTmp[2083413](2083415 'deref' this[235962]))
    val isdirect[2086962]:bool[10] "temp"
    (2086967 'move' isdirect[2086962](2086964 call chpl_doDirectExecuteOn[187423] tmp[236007]))
    if isdirect[2086962]
    {
      (2086971 call on_fn[935606] rvfDerefTmp[2083413] ret[235969] error[1808287])
    }
    {
      val _args_foron_fn[2086992]:_class_localson_fn[2086980] "temp"
      (2086996 'move' _args_foron_fn[2086992](2086994 'stack allocate class' _class_localson_fn[2086980]))
      (2086998 '.=' _args_foron_fn[2086992] _0_tmp[2086983] tmp[236007])
      (2087002 '.=' _args_foron_fn[2086992] _1_rvfDerefTmp[2086985] rvfDerefTmp[2083413])
      ref tmp[2087006]:iostyle[231844] "temp"
      (2087010 'move' tmp[2087006](2087008 'set reference' ret[235969]))
      (2087012 '.=' _args_foron_fn[2086992] _2_ret[2086987] tmp[2087006])
      ref tmp[2087016]:Error[167938] "temp"
      (2087020 'move' tmp[2087016](2087018 'set reference' error[1808287]))
      (2087022 '.=' _args_foron_fn[2086992] _3_error[2086989] tmp[2087016])
      val _args_vforon_fn[2087026]:c_void_ptr[149] "temp"
      (2087030 'move' _args_vforon_fn[2087026](2087028 'cast_to_void_star' _args_foron_fn[2086992]))
      val _args_sizeon_fn[2087032]:int(64)[13] "temp"
      (2087036 'move' _args_sizeon_fn[2087032](2087034 'sizeof_bundle' _class_localson_fn[2086980]))
      on(2087084 call wrapon_fn[2087038] tmp[236007] _args_vforon_fn[2087026] _args_sizeon_fn[2087032] _args_foron_fn[2086992])
    }
    val errorExists[2107968]:bool[10] "temp"
    (2107973 'move' errorExists[2107968](2107970 '!=' error[1808287] nil[44]))
    if errorExists[2107968]
    {
      (1808293 '=' error_out[1808284] error[1808287])
      gotoErrorHandlingReturn _end__style[534599] _end__style[534599]
    }
    (1017581 'move' ret[534601] ret[235969])
    label _end__style[534599]
    (534603 return ret[534601])
  }
  function file[235580].close[236024](const  ref arg this[236026]:file[235580], ref arg error_out[1808301]:Error[167938]) : void[4] throws "method" "resolved" "no return value for void"
  {
    const-ref call_tmp[715635]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216575]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216577 'move' call_tmp[2216575](2216579 '.' this[236026] _file_internal[235568]))
    (715638 'move' call_tmp[715635] call_tmp[2216575])
    const-val call_tmp[715640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060608]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060612 'move' coerce_tmp[1060608](1060610 'deref' call_tmp[715635]))
    const-val call_tmp[2226964]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226966 'move' call_tmp[2226964](2226968 'cast' c_void_ptr[149] coerce_tmp[1060608]))
    const-val call_tmp[2226971]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226973 'move' call_tmp[2226971](2226975 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226980 'move' call_tmp[2226978](2226982 'ptr_eq' call_tmp[2226964] call_tmp[2226971]))
    (715643 'move' call_tmp[715640] call_tmp[2226978])
    const-val call_tmp[715645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715648 'move' call_tmp[715645] call_tmp[715640])
    if call_tmp[715645]
    {
      const-val call_tmp[715652]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060617]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060623 'move' coerce_tmp[1060617](1060619 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832545]:owned SystemError[1000238] "temp"
      (236042 call fromSyserr[1017113] coerce_tmp[1060617] "Operation attempted on an invalid file" ret_tmp[1832545])
      (1832548 'move' call_tmp[715652] ret_tmp[1832545])
      val call_tmp[715657]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060626]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832479]:owned Error[966458] "temp"
      ref i_x[2226182]:owned SystemError[1000238] "temp"
      (2226186 'move' i_x[2226182](2226184 'set reference' call_tmp[715652]))
      ref i__retArg[2226188]:owned Error[966458] "temp"
      (2226192 'move' i__retArg[2226188](2226190 'set reference' ret_tmp[1832479]))
      val _formal_tmp_x[2226195]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226197 'move' _formal_tmp_x[2226195] i_x[2226182])
      const-val ret[2226200]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226202]:owned SystemError[1000238] "temp"
      (2226204 'move' i_this[2226202](2226206 'set reference' _formal_tmp_x[2226195]))
      val coerce_tmp[2226208]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226210 'move' coerce_tmp[2226208](2226212 '.v' i_this[2226202] chpl_p[1000233]))
      val call_tmp[2226215]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226217 'move' call_tmp[2226215](2226219 'cast' Error[167938] coerce_tmp[2226208]))
      val castPtr[2226222]:Error[167938] "dead at end of block" "insert auto destroy"
      (2226224 'move' castPtr[2226222] call_tmp[2226215])
      ref i_this[2226227]:owned SystemError[1000238] "temp"
      (2226229 'move' i_this[2226227](2226231 'set reference' _formal_tmp_x[2226195]))
      val tmp[2226233]:SystemError[264845] "temp"
      (2226235 'move' tmp[2226233](2226237 'cast' SystemError[264845] nil[44]))
      (2226240 '.=' i_this[2226227] chpl_p[1000233] tmp[2226233])
      val coerce_tmp[2226244]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226246 'move' coerce_tmp[2226244](2226248 'cast' object[22] call_tmp[2226215]))
      const-val call_tmp[2226251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226253 'move' call_tmp[2226251](2226255 'ptr_eq' coerce_tmp[2226244] nil[44]))
      if call_tmp[2226251]
      {
        (2226261 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226264]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226266]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2226269 call init[968094] initTemp[2226266] castPtr[2226222])
      (2226272 'move' call_tmp[2226264] initTemp[2226266])
      (2226275 'move' ret[2226200] call_tmp[2226264])
      (2226279 call chpl__autoDestroy[1516200] _formal_tmp_x[2226195])
      (2226283 '=' i__retArg[2226188] ret[2226200])
      (1832482 'move' coerce_tmp[1060626] ret_tmp[1832479])
      const-val _formal_tmp_in_err[1060805]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060809 'move' _formal_tmp_in_err[1060805] coerce_tmp[1060626])
      (715660 'move' call_tmp[715657](468119 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1060805]))
      val castedError[1808306]:Error[167938] "temp"
      (1808312 'move' castedError[1808306] call_tmp[715657])
      (1808314 '=' error_out[1808301] castedError[1808306])
      gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
    }
    const-val call_tmp[715662]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715665 'move' call_tmp[715662] 0)
    val err[236053]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1060815]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207320]:syserr[223584] "temp"
    (2207324 'move' i_ret[2207320](2207322 'set reference' init_coerce_tmp[1060815]))
    const-val call_tmp[2207327]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207329 'move' call_tmp[2207327](2207332 call qio_int_to_err[223634] call_tmp[715662]))
    (2207334 '=' i_ret[2207320] call_tmp[2207327])
    (547000 'move' err[236053] init_coerce_tmp[1060815])
    const-val tmp[236073]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[715669]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216413]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216415 'move' call_tmp[2216413](2216417 '.' this[236026] home[235562]))
    (715672 'move' call_tmp[715669] call_tmp[2216413])
    const-val call_tmp[715674]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1060822]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165377]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165379 'move' coerce_tmp[2165377](2165381 '.v' call_tmp[715669] _instance[89975]))
    val coerce_tmp[2165384]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165386 'move' coerce_tmp[2165384](2165388 'cast' object[22] coerce_tmp[2165377]))
    const-val call_tmp[2165391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165393 'move' call_tmp[2165391](2165395 'ptr_eq' coerce_tmp[2165384] nil[44]))
    if call_tmp[2165391]
    {
      (2165401 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1060827 'move' _locale_tmp_[1060822] coerce_tmp[2165377])
    (715677 'move' call_tmp[715674](236070 '_wide_get_locale' _locale_tmp_[1060822]))
    (236075 'move' tmp[236073] call_tmp[715674])
    val rvfDerefTmp[2083434]:file[235580] "temp"
    (2083438 'move' rvfDerefTmp[2083434](2083436 'deref' this[236026]))
    val isdirect[2087089]:bool[10] "temp"
    (2087094 'move' isdirect[2087089](2087091 call chpl_doDirectExecuteOn[187423] tmp[236073]))
    if isdirect[2087089]
    {
      (2087098 call on_fn[935615] rvfDerefTmp[2083434] err[236053])
    }
    {
      val _args_foron_fn[2087116]:_class_localson_fn[2087106] "temp"
      (2087120 'move' _args_foron_fn[2087116](2087118 'stack allocate class' _class_localson_fn[2087106]))
      (2087122 '.=' _args_foron_fn[2087116] _0_tmp[2087109] tmp[236073])
      (2087126 '.=' _args_foron_fn[2087116] _1_rvfDerefTmp[2087111] rvfDerefTmp[2083434])
      ref tmp[2087130]:syserr[223584] "temp"
      (2087134 'move' tmp[2087130](2087132 'set reference' err[236053]))
      (2087136 '.=' _args_foron_fn[2087116] _2_err[2087113] tmp[2087130])
      val _args_vforon_fn[2087140]:c_void_ptr[149] "temp"
      (2087144 'move' _args_vforon_fn[2087140](2087142 'cast_to_void_star' _args_foron_fn[2087116]))
      val _args_sizeon_fn[2087146]:int(64)[13] "temp"
      (2087150 'move' _args_sizeon_fn[2087146](2087148 'sizeof_bundle' _class_localson_fn[2087106]))
      on(2087190 call wrapon_fn[2087152] tmp[236073] _args_vforon_fn[2087140] _args_sizeon_fn[2087146] _args_foron_fn[2087116])
    }
    const-val call_tmp[715691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206790]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206792 'move' call_tmp[2206790](2206795 call qio_err_iserr[223646] err[236053]))
    const-val call_tmp[2206797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206799 'move' call_tmp[2206797](2206801 '!=' call_tmp[2206790] 0))
    (715694 'move' call_tmp[715691] call_tmp[2206797])
    if call_tmp[715691]
    {
      val error[1808318]:Error[167938] "error variable" "temp"
      (1808327 'move' error[1808318] nil[44])
      const-val call_tmp[715698]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831431]:string[26] "temp"
      (236109 call tryGetPath[236364] this[236026] ret_tmp[1831431])
      (1831434 'move' call_tmp[715698] ret_tmp[1831431])
      (236110 call ioerror[266250] err[236053] "in file.close" call_tmp[715698] error[1808318])
      val errorExists[2107976]:bool[10] "temp"
      (2107981 'move' errorExists[2107976](2107978 '!=' error[1808318] nil[44]))
      if errorExists[2107976]
      {
        ref i_x[2130009]:string[26] "temp"
        (2130013 'move' i_x[2130009](2130011 'set reference' call_tmp[715698]))
        (2130017 call deinit[30831] i_x[2130009])
        gotoErrorHandling handler[1808319] handler[1808319]
      }
      ref i_x[2130021]:string[26] "temp"
      (2130025 'move' i_x[2130021](2130023 'set reference' call_tmp[715698]))
      (2130029 call deinit[30831] i_x[2130021])
      label handler[1808319]
      const-val shouldHandleError[1808338]:bool[10] "temp"
      val errorExists[2107984]:bool[10] "temp"
      (2107989 'move' errorExists[2107984](2107986 '!=' error[1808318] nil[44]))
      (1808342 'move' shouldHandleError[1808338] errorExists[2107984])
      if shouldHandleError[1808338]
      {
        (1808334 '=' error_out[1808301] error[1808318])
        gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
      }
    }
    label _endclose[1808303]
    (534611 return _void[55])
  }
  function file[235580].path[236212](const  ref arg this[236214]:file[235580], ref arg error_out[1808346]:Error[167938], ref arg _retArg[1831425]:string[26]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534617]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236221]:string[26] "dead at end of block" "insert auto destroy"
    (1021681 call init[30760] ret[236221])
    const-val call_tmp[715746]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715749 'move' call_tmp[715746] 0)
    val err[236228]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1019098]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207263]:syserr[223584] "temp"
    (2207267 'move' i_ret[2207263](2207265 'set reference' init_coerce_tmp[1019098]))
    const-val call_tmp[2207270]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207272 'move' call_tmp[2207270](2207275 call qio_int_to_err[223634] call_tmp[715746]))
    (2207277 '=' i_ret[2207263] call_tmp[2207270])
    (547006 'move' err[236228] init_coerce_tmp[1019098])
    const-val tmp[236317]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[715753]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216351]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216353 'move' call_tmp[2216351](2216355 '.' this[236214] home[235562]))
    (715756 'move' call_tmp[715753] call_tmp[2216351])
    const-val call_tmp[715758]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019105]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165227]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165229 'move' coerce_tmp[2165227](2165231 '.v' call_tmp[715753] _instance[89975]))
    val coerce_tmp[2165234]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165236 'move' coerce_tmp[2165234](2165238 'cast' object[22] coerce_tmp[2165227]))
    const-val call_tmp[2165241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165243 'move' call_tmp[2165241](2165245 'ptr_eq' coerce_tmp[2165234] nil[44]))
    if call_tmp[2165241]
    {
      (2165251 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1019110 'move' _locale_tmp_[1019105] coerce_tmp[2165227])
    (715761 'move' call_tmp[715758](236314 '_wide_get_locale' _locale_tmp_[1019105]))
    (236319 'move' tmp[236317] call_tmp[715758])
    val error[1808349]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1808351 'move' error[1808349] nil[44])
    val rvfDerefTmp[2083448]:file[235580] "temp"
    (2083452 'move' rvfDerefTmp[2083448](2083450 'deref' this[236214]))
    val isdirect[2087195]:bool[10] "temp"
    (2087200 'move' isdirect[2087195](2087197 call chpl_doDirectExecuteOn[187423] tmp[236317]))
    if isdirect[2087195]
    {
      (2087204 call on_fn[935633] rvfDerefTmp[2083448] err[236228] ret[236221] error[1808349])
    }
    {
      val _args_foron_fn[2087228]:_class_localson_fn[2087214] "temp"
      (2087232 'move' _args_foron_fn[2087228](2087230 'stack allocate class' _class_localson_fn[2087214]))
      (2087234 '.=' _args_foron_fn[2087228] _0_tmp[2087217] tmp[236317])
      (2087238 '.=' _args_foron_fn[2087228] _1_rvfDerefTmp[2087219] rvfDerefTmp[2083448])
      ref tmp[2087242]:syserr[223584] "temp"
      (2087246 'move' tmp[2087242](2087244 'set reference' err[236228]))
      (2087248 '.=' _args_foron_fn[2087228] _2_err[2087221] tmp[2087242])
      ref tmp[2087252]:string[26] "temp"
      (2087256 'move' tmp[2087252](2087254 'set reference' ret[236221]))
      (2087258 '.=' _args_foron_fn[2087228] _3_ret[2087223] tmp[2087252])
      ref tmp[2087262]:Error[167938] "temp"
      (2087266 'move' tmp[2087262](2087264 'set reference' error[1808349]))
      (2087268 '.=' _args_foron_fn[2087228] _4_error[2087225] tmp[2087262])
      val _args_vforon_fn[2087272]:c_void_ptr[149] "temp"
      (2087276 'move' _args_vforon_fn[2087272](2087274 'cast_to_void_star' _args_foron_fn[2087228]))
      val _args_sizeon_fn[2087278]:int(64)[13] "temp"
      (2087282 'move' _args_sizeon_fn[2087278](2087280 'sizeof_bundle' _class_localson_fn[2087214]))
      on(2087338 call wrapon_fn[2087284] tmp[236317] _args_vforon_fn[2087272] _args_sizeon_fn[2087278] _args_foron_fn[2087228])
    }
    val errorExists[2107992]:bool[10] "temp"
    (2107997 'move' errorExists[2107992](2107994 '!=' error[1808349] nil[44]))
    if errorExists[2107992]
    {
      (1808355 '=' error_out[1808346] error[1808349])
      ref i_x[2130033]:string[26] "temp"
      (2130037 'move' i_x[2130033](2130035 'set reference' ret[236221]))
      (2130041 call deinit[30831] i_x[2130033])
      gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
    }
    const-val call_tmp[715814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206688]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206690 'move' call_tmp[2206688](2206693 call qio_err_iserr[223646] err[236228]))
    const-val call_tmp[2206695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206697 'move' call_tmp[2206695](2206699 '!=' call_tmp[2206688] 0))
    (715817 'move' call_tmp[715814] call_tmp[2206695])
    if call_tmp[715814]
    {
      val error[1808363]:Error[167938] "error variable" "temp"
      (1808372 'move' error[1808363] nil[44])
      (236346 call ioerror[266311] err[236228] "in file.path" error[1808363])
      val errorExists[2108000]:bool[10] "temp"
      (2108005 'move' errorExists[2108000](2108002 '!=' error[1808363] nil[44]))
      if errorExists[2108000]
      {
        gotoErrorHandling handler[1808364] handler[1808364]
      }
      label handler[1808364]
      const-val shouldHandleError[1808383]:bool[10] "temp"
      val errorExists[2108008]:bool[10] "temp"
      (2108013 'move' errorExists[2108008](2108010 '!=' error[1808363] nil[44]))
      (1808387 'move' shouldHandleError[1808383] errorExists[2108008])
      if shouldHandleError[1808383]
      {
        (1808379 '=' error_out[1808346] error[1808363])
        ref i_x[2130045]:string[26] "temp"
        (2130049 'move' i_x[2130045](2130047 'set reference' ret[236221]))
        (2130053 call deinit[30831] i_x[2130045])
        gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
      }
    }
    (1021679 'move' ret[534617] ret[236221])
    label _end_path[534615]
    (1831427 '=' _retArg[1831425] ret[534617])
    (1831429 return _void[55])
  }
  function file[235580].tryGetPath[236364](const  ref arg this[236366]:file[235580], ref arg _retArg[1831461]:string[26]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534629]:string[26] "dead after last mention" "RVV" "temp"
    val error[1808391]:Error[167938] "error variable" "temp"
    (1808400 'move' error[1808391] nil[44])
    const-val call_tmp[715821]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831419]:string[26] "temp"
    (236375 call path[236212] this[236366] error[1808391] ret_tmp[1831419])
    (1831422 'move' call_tmp[715821] ret_tmp[1831419])
    val errorExists[2108016]:bool[10] "temp"
    (2108021 'move' errorExists[2108016](2108018 '!=' error[1808391] nil[44]))
    if errorExists[2108016]
    {
      gotoErrorHandling handler[1808392] handler[1808392]
    }
    (1021713 'move' ret[534629] call_tmp[715821])
    gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
    label handler[1808392]
    const-val shouldHandleError[1808407]:bool[10] "temp"
    val errorExists[2108024]:bool[10] "temp"
    (2108029 'move' errorExists[2108024](2108026 '!=' error[1808391] nil[44]))
    (1808411 'move' shouldHandleError[1808407] errorExists[2108024])
    if shouldHandleError[1808407]
    {
      val call_tmp[715826]:Error[167938] "dead at end of block" "maybe param" "temp"
      (715829 'move' call_tmp[715826] error[1808391])
      val tmp[354527]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
      (547012 'move' tmp[354527] call_tmp[715826])
      val call_tmp[715831]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
      (715834 'move' call_tmp[715831] tmp[354527])
      const-val call_tmp[715836]:owned Error[966458] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[1021693]:owned Error[966458] "dead at end of block" "delay instantiation" "temp"
      (1021696 call init[968094] initTemp[1021693] call_tmp[715831])
      (715839 'move' call_tmp[715836] initTemp[1021693])
      const-val chpl_anon_error[354533]:owned Error[966458] "dead at end of block" "delay instantiation" "insert auto destroy"
      (547014 'move' chpl_anon_error[354533] call_tmp[715836])
      val inlineImm[2204210]:string[26] "temp"
      (2204213 'move' inlineImm[2204210] "unknown")
      ref i_x[2204215]:string[26] "temp"
      (2204219 'move' i_x[2204215](2204217 'set reference' inlineImm[2204210]))
      val ret[2204222]:string[26] "dead after last mention" "RVV" "temp"
      const-val tmp[2204224]:string[26] "dead after last mention" "temp"
      (2204227 call init=[30771] tmp[2204224] i_x[2204215])
      (2204230 'move' ret[2204222] tmp[2204224])
      (534641 'move' ret[534629] ret[2204222])
      (1842463 call chpl__autoDestroy[1468631] chpl_anon_error[354533])
      gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
      (1842467 call chpl__autoDestroy[1468631] chpl_anon_error[354533])
    }
    label _end_tryGetPath[534627]
    (1831463 '=' _retArg[1831461] ret[534629])
    (1831467 return _void[55])
  }
  function openfd[237271](const in arg fd[237268]:int(32)[95], const in arg hints[237275]:int(32)[95], const  ref arg style[237283]:iostyle[231844], ref arg error_out[1808415]:Error[167938], ref arg _retArg[1831475]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534728]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237289]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547050 'move' local_style[237289] style[237283])
    val ret[237295]:file[235580] "dead at end of block" "insert auto destroy"
    (1016521 call init[235574] ret[237295])
    ref call_tmp[716120]:locale[28] "dead after last mention" "maybe param" "temp"
    ref i_this[2216304]:file[235580] "temp"
    (2216308 'move' i_this[2216304](2216306 'set reference' ret[237295]))
    ref call_tmp[2216311]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216313 'move' call_tmp[2216311](2216315 '.' i_this[2216304] home[235562]))
    (716123 'move' call_tmp[716120] call_tmp[2216311])
    const-val call_tmp[716125]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830499]:locale[28] "temp"
    ref i__retArg[2167452]:locale[28] "temp"
    (2167456 'move' i__retArg[2167452](2167454 'set reference' ret_tmp[1830499]))
    const-val call_tmp[2167459]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167461]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167463 'move' call_tmp[2167461](2167466 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167469 'move' call_tmp[2167459] call_tmp[2167461])
    const-val call_tmp[2167472]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167474]:locale[28] "temp"
    (2167477 call chpl_localeID_to_locale[92849] call_tmp[2167459] ret_tmp[2167474])
    (2167480 'move' call_tmp[2167472] ret_tmp[2167474])
    (2167483 '=' i__retArg[2167452] call_tmp[2167472])
    (1830502 'move' call_tmp[716125] ret_tmp[1830499])
    (237304 call =[90631] call_tmp[716120] call_tmp[716125])
    ref i_x[2264207]:locale[28] "temp"
    (2264211 'move' i_x[2264207](2264209 'set reference' call_tmp[716125]))
    (2264215 call deinit[90185] i_x[2264207])
    ref call_tmp[716132]:qio_file_ptr_t[231439] "dead at end of block" "maybe param" "temp"
    ref i_this[2216506]:file[235580] "temp"
    (2216510 'move' i_this[2216506](2216508 'set reference' ret[237295]))
    ref call_tmp[2216513]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216515 'move' call_tmp[2216513](2216517 '.' i_this[2216506] _file_internal[235568]))
    (716135 'move' call_tmp[716132] call_tmp[2216513])
    const-val call_tmp[716137]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716140 'move' call_tmp[716137](237315 call chpl_cnullfile[223574]))
    const-val call_tmp[716142]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986524]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986530 'move' coerce_tmp[986524](986526 'cast' int(32)[95] 0))
    (716145 'move' call_tmp[716142](237320 call qio_file_init[232648] call_tmp[716132] call_tmp[716137] fd[237268] hints[237275] local_style[237289] coerce_tmp[986524]))
    const-val err[237321]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547054 'move' err[237321] call_tmp[716142])
    const-val call_tmp[716147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206620]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206622 'move' call_tmp[2206620](2206625 call qio_err_iserr[223646] err[237321]))
    const-val call_tmp[2206627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206629 'move' call_tmp[2206627](2206631 '!=' call_tmp[2206620] 0))
    (716150 'move' call_tmp[716147] call_tmp[2206627])
    if call_tmp[716147]
    {
      val path_cs[237327]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016559 'move' path_cs[237327](1016557 'cast' c_string[19] nil[44]))
      const-val call_tmp[716152]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716155 'move' call_tmp[716152](237336 call qio_file_path_for_fd[233647] fd[237268] path_cs[237327]))
      const-val path_err[237337]:syserr[223584] "dead at end of block" "insert auto destroy"
      (547058 'move' path_err[237337] call_tmp[716152])
      const-val path[237355]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576721]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576722]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[2206637]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206639 'move' call_tmp[2206637](2206642 call qio_err_iserr[223646] path_err[237337]))
      const-val call_tmp[2206644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206646 'move' call_tmp[2206644](2206648 '!=' call_tmp[2206637] 0))
      (576727 'move' tmp[576722] call_tmp[2206644])
      if tmp[576722]
      {
        val inlineImm[2204235]:string[26] "temp"
        (2204238 'move' inlineImm[2204235] "unknown")
        ref i_x[2204240]:string[26] "temp"
        (2204244 'move' i_x[2204240](2204242 'set reference' inlineImm[2204235]))
        val ret[2204247]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2204249]:string[26] "dead after last mention" "temp"
        (2204252 call init=[30771] tmp[2204249] i_x[2204240])
        (2204255 'move' ret[2204247] tmp[2204249])
        (576732 'move' tmp[576721] ret[2204247])
      }
      {
        const-val tmp[576734]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[986557]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1808418]:Error[167938] "error variable" "temp"
        (1808420 'move' error[1808418] nil[44])
        ref i_error_out[2203504]:Error[167938] "temp"
        (2203508 'move' i_error_out[2203504](2203506 'set reference' error[1808418]))
        val ret[2203511]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
        const-val call_tmp[2203513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2203515 'move' call_tmp[2203513](2203517 'string_length_bytes' path_cs[237327]))
        (2203519 'move' ret[2203511] call_tmp[2203513])
        (986562 'move' default_arg_length[986557] ret[2203511])
        val errorExists[2108032]:bool[10] "temp"
        (2108037 'move' errorExists[2108032](2108034 '!=' error[1808418] nil[44]))
        if errorExists[2108032]
        {
          (1808424 '=' error_out[1808415] error[1808418])
          ref i_x[2327689]:file[235580] "temp"
          (2327693 'move' i_x[2327689](2327691 'set reference' ret[237295]))
          (2327697 call deinit[235891] i_x[2327689])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        val error[1808433]:Error[167938] "error variable" "temp"
        (1808435 'move' error[1808433] nil[44])
        const-val ret_tmp[1829045]:string[26] "temp"
        ref i_error_out[2141284]:Error[167938] "temp"
        (2141288 'move' i_error_out[2141284](2141286 'set reference' error[1808433]))
        ref i__retArg[2141290]:string[26] "temp"
        (2141294 'move' i__retArg[2141290](2141292 'set reference' ret_tmp[1829045]))
        const-val ret[2141297]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2141299]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        (2141301 'move' call_tmp[2141299](2141303 'cast' c_ptr(uint(8))[937423] path_cs[237327]))
        const-val call_tmp[2141306]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141308]:Error[167938] "error variable" "temp"
        (2141310 'move' error[2141308] nil[44])
        const-val ret[2141313]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2141315]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141317]:Error[167938] "error variable" "temp"
        (2141319 'move' error[2141317] nil[44])
        const-val ret_tmp[2141322]:string[26] "temp"
        (2141325 call decodeByteBuffer[173892] call_tmp[2141299] default_arg_length[986557] replace[173648] error[2141317] ret_tmp[2141322])
        (2141331 'move' call_tmp[2141315] ret_tmp[2141322])
        val errorExists[2141334]:bool[10] "temp"
        (2141336 'move' errorExists[2141334](2141338 '!=' error[2141317] nil[44]))
        if errorExists[2141334]
        {
          (2141343 '=' error[2141308] error[2141317])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141352] _endcreateStringWithNewBuffer[2141352]
        }
        (2141349 'move' ret[2141313] call_tmp[2141315])
        label _endcreateStringWithNewBuffer[2141352]
        (2141354 'move' call_tmp[2141306] ret[2141313])
        val errorExists[2141357]:bool[10] "temp"
        (2141359 'move' errorExists[2141357](2141361 '!=' error[2141308] nil[44]))
        if errorExists[2141357]
        {
          (2141366 '=' i_error_out[2141284] error[2141308])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141375] _endcreateStringWithNewBuffer[2141375]
        }
        (2141372 'move' ret[2141297] call_tmp[2141306])
        label _endcreateStringWithNewBuffer[2141375]
        (2141377 '=' i__retArg[2141290] ret[2141297])
        (1829048 'move' tmp[576734] ret_tmp[1829045])
        val errorExists[2108040]:bool[10] "temp"
        (2108045 'move' errorExists[2108040](2108042 '!=' error[1808433] nil[44]))
        if errorExists[2108040]
        {
          (1808439 '=' error_out[1808415] error[1808433])
          ref i_x[2327701]:file[235580] "temp"
          (2327705 'move' i_x[2327701](2327703 'set reference' ret[237295]))
          (2327709 call deinit[235891] i_x[2327701])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        (576741 'move' tmp[576721] tmp[576734])
      }
      (547060 'move' path[237355] tmp[576721])
      val error[1808447]:Error[167938] "error variable" "temp"
      (1808456 'move' error[1808447] nil[44])
      (237380 call ioerror[266250] err[237321] "in openfd" path[237355] error[1808447])
      val errorExists[2108048]:bool[10] "temp"
      (2108053 'move' errorExists[2108048](2108050 '!=' error[1808447] nil[44]))
      if errorExists[2108048]
      {
        gotoErrorHandling handler[1808448] handler[1808448]
      }
      label handler[1808448]
      const-val shouldHandleError[1808467]:bool[10] "temp"
      val errorExists[2108056]:bool[10] "temp"
      (2108061 'move' errorExists[2108056](2108058 '!=' error[1808447] nil[44]))
      (1808471 'move' shouldHandleError[1808467] errorExists[2108056])
      if shouldHandleError[1808467]
      {
        (1808463 '=' error_out[1808415] error[1808447])
        ref i_x[2130057]:string[26] "temp"
        (2130061 'move' i_x[2130057](2130059 'set reference' path[237355]))
        (2130065 call deinit[30831] i_x[2130057])
        ref i_x[2327713]:file[235580] "temp"
        (2327717 'move' i_x[2327713](2327715 'set reference' ret[237295]))
        (2327721 call deinit[235891] i_x[2327713])
        gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
      }
      ref i_x[2130069]:string[26] "temp"
      (2130073 'move' i_x[2130069](2130071 'set reference' path[237355]))
      (2130077 call deinit[30831] i_x[2130069])
    }
    (1016519 'move' ret[534728] ret[237295])
    label _end_openfd[534726]
    (1831477 '=' _retArg[1831475] ret[534728])
    (1831481 return _void[55])
  }
  function openfp[237400](const in arg fp[237397]:_file[155], const in arg hints[237404]:int(32)[95], const  ref arg style[237412]:iostyle[231844], ref arg error_out[1808475]:Error[167938], ref arg _retArg[1831495]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534740]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237418]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547062 'move' local_style[237418] style[237412])
    val ret[237424]:file[235580] "dead at end of block" "insert auto destroy"
    (1022126 call init[235574] ret[237424])
    ref call_tmp[716159]:locale[28] "dead after last mention" "maybe param" "temp"
    ref i_this[2216360]:file[235580] "temp"
    (2216364 'move' i_this[2216360](2216362 'set reference' ret[237424]))
    ref call_tmp[2216367]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216369 'move' call_tmp[2216367](2216371 '.' i_this[2216360] home[235562]))
    (716162 'move' call_tmp[716159] call_tmp[2216367])
    const-val call_tmp[716164]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830505]:locale[28] "temp"
    ref i__retArg[2167488]:locale[28] "temp"
    (2167492 'move' i__retArg[2167488](2167490 'set reference' ret_tmp[1830505]))
    const-val call_tmp[2167495]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167497]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167499 'move' call_tmp[2167497](2167502 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167505 'move' call_tmp[2167495] call_tmp[2167497])
    const-val call_tmp[2167508]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167510]:locale[28] "temp"
    (2167513 call chpl_localeID_to_locale[92849] call_tmp[2167495] ret_tmp[2167510])
    (2167516 'move' call_tmp[2167508] ret_tmp[2167510])
    (2167519 '=' i__retArg[2167488] call_tmp[2167508])
    (1830508 'move' call_tmp[716164] ret_tmp[1830505])
    (237433 call =[90631] call_tmp[716159] call_tmp[716164])
    ref i_x[2264219]:locale[28] "temp"
    (2264223 'move' i_x[2264219](2264221 'set reference' call_tmp[716164]))
    (2264227 call deinit[90185] i_x[2264219])
    ref call_tmp[716171]:qio_file_ptr_t[231439] "dead at end of block" "maybe param" "temp"
    ref i_this[2216542]:file[235580] "temp"
    (2216546 'move' i_this[2216542](2216544 'set reference' ret[237424]))
    ref call_tmp[2216549]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216551 'move' call_tmp[2216549](2216553 '.' i_this[2216542] _file_internal[235568]))
    (716174 'move' call_tmp[716171] call_tmp[2216549])
    const-val call_tmp[716181]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022081]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022087 'move' coerce_tmp[1022081](1022083 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022089]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022095 'move' coerce_tmp[1022089](1022091 'cast' int(32)[95] 1))
    (716184 'move' call_tmp[716181](237449 call qio_file_init[232648] call_tmp[716171] fp[237397] coerce_tmp[1022081] hints[237404] local_style[237418] coerce_tmp[1022089]))
    const-val err[237450]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547066 'move' err[237450] call_tmp[716181])
    const-val call_tmp[716186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206722]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206724 'move' call_tmp[2206722](2206727 call qio_err_iserr[223646] err[237450]))
    const-val call_tmp[2206729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206731 'move' call_tmp[2206729](2206733 '!=' call_tmp[2206722] 0))
    (716189 'move' call_tmp[716186] call_tmp[2206729])
    if call_tmp[716186]
    {
      val path_cs[237456]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022134 'move' path_cs[237456](1022132 'cast' c_string[19] nil[44]))
      const-val call_tmp[716191]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716194 'move' call_tmp[716191](237465 call qio_file_path_for_fp[233663] fp[237397] path_cs[237456]))
      const-val path_err[237466]:syserr[223584] "dead at end of block" "insert auto destroy"
      (547070 'move' path_err[237466] call_tmp[716191])
      const-val path[237484]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576748]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576749]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[2206739]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206741 'move' call_tmp[2206739](2206744 call qio_err_iserr[223646] path_err[237466]))
      const-val call_tmp[2206746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206748 'move' call_tmp[2206746](2206750 '!=' call_tmp[2206739] 0))
      (576754 'move' tmp[576749] call_tmp[2206746])
      if tmp[576749]
      {
        val inlineImm[2204260]:string[26] "temp"
        (2204263 'move' inlineImm[2204260] "unknown")
        ref i_x[2204265]:string[26] "temp"
        (2204269 'move' i_x[2204265](2204267 'set reference' inlineImm[2204260]))
        val ret[2204272]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2204274]:string[26] "dead after last mention" "temp"
        (2204277 call init=[30771] tmp[2204274] i_x[2204265])
        (2204280 'move' ret[2204272] tmp[2204274])
        (576759 'move' tmp[576748] ret[2204272])
      }
      {
        const-val tmp[576761]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[1022112]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1808478]:Error[167938] "error variable" "temp"
        (1808480 'move' error[1808478] nil[44])
        ref i_error_out[2203526]:Error[167938] "temp"
        (2203530 'move' i_error_out[2203526](2203528 'set reference' error[1808478]))
        val ret[2203533]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
        const-val call_tmp[2203535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2203537 'move' call_tmp[2203535](2203539 'string_length_bytes' path_cs[237456]))
        (2203541 'move' ret[2203533] call_tmp[2203535])
        (1022117 'move' default_arg_length[1022112] ret[2203533])
        val errorExists[2108064]:bool[10] "temp"
        (2108069 'move' errorExists[2108064](2108066 '!=' error[1808478] nil[44]))
        if errorExists[2108064]
        {
          (1808484 '=' error_out[1808475] error[1808478])
          ref i_x[2327725]:file[235580] "temp"
          (2327729 'move' i_x[2327725](2327727 'set reference' ret[237424]))
          (2327733 call deinit[235891] i_x[2327725])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        val error[1808493]:Error[167938] "error variable" "temp"
        (1808495 'move' error[1808493] nil[44])
        const-val ret_tmp[1829051]:string[26] "temp"
        ref i_error_out[2141382]:Error[167938] "temp"
        (2141386 'move' i_error_out[2141382](2141384 'set reference' error[1808493]))
        ref i__retArg[2141388]:string[26] "temp"
        (2141392 'move' i__retArg[2141388](2141390 'set reference' ret_tmp[1829051]))
        const-val ret[2141395]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2141397]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        (2141399 'move' call_tmp[2141397](2141401 'cast' c_ptr(uint(8))[937423] path_cs[237456]))
        const-val call_tmp[2141404]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141406]:Error[167938] "error variable" "temp"
        (2141408 'move' error[2141406] nil[44])
        const-val ret[2141411]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2141413]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141415]:Error[167938] "error variable" "temp"
        (2141417 'move' error[2141415] nil[44])
        const-val ret_tmp[2141420]:string[26] "temp"
        (2141423 call decodeByteBuffer[173892] call_tmp[2141397] default_arg_length[1022112] replace[173648] error[2141415] ret_tmp[2141420])
        (2141429 'move' call_tmp[2141413] ret_tmp[2141420])
        val errorExists[2141432]:bool[10] "temp"
        (2141434 'move' errorExists[2141432](2141436 '!=' error[2141415] nil[44]))
        if errorExists[2141432]
        {
          (2141441 '=' error[2141406] error[2141415])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141450] _endcreateStringWithNewBuffer[2141450]
        }
        (2141447 'move' ret[2141411] call_tmp[2141413])
        label _endcreateStringWithNewBuffer[2141450]
        (2141452 'move' call_tmp[2141404] ret[2141411])
        val errorExists[2141455]:bool[10] "temp"
        (2141457 'move' errorExists[2141455](2141459 '!=' error[2141406] nil[44]))
        if errorExists[2141455]
        {
          (2141464 '=' i_error_out[2141382] error[2141406])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141473] _endcreateStringWithNewBuffer[2141473]
        }
        (2141470 'move' ret[2141395] call_tmp[2141404])
        label _endcreateStringWithNewBuffer[2141473]
        (2141475 '=' i__retArg[2141388] ret[2141395])
        (1829054 'move' tmp[576761] ret_tmp[1829051])
        val errorExists[2108072]:bool[10] "temp"
        (2108077 'move' errorExists[2108072](2108074 '!=' error[1808493] nil[44]))
        if errorExists[2108072]
        {
          (1808499 '=' error_out[1808475] error[1808493])
          ref i_x[2327737]:file[235580] "temp"
          (2327741 'move' i_x[2327737](2327739 'set reference' ret[237424]))
          (2327745 call deinit[235891] i_x[2327737])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        (576768 'move' tmp[576748] tmp[576761])
      }
      (547072 'move' path[237484] tmp[576748])
      ref i_cs[2120002]:c_string[19] "temp"
      (2120006 'move' i_cs[2120002](2120004 'set reference' path_cs[237456]))
      const-val call_tmp[2120009]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120011 'move' call_tmp[2120009](2120013 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120016]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120018 'move' call_tmp[2120016](2120020 'cast' c_string[19] call_tmp[2120009]))
      const-val coerce_tmp[2120023]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120025 'move' coerce_tmp[2120023](2120027 'deref' i_cs[2120002]))
      const-val call_tmp[2120029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120031 'move' call_tmp[2120029](2120033 'string_compare' coerce_tmp[2120023] call_tmp[2120016]))
      const-val call_tmp[2120036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120038 'move' call_tmp[2120036](2120040 '!=' call_tmp[2120029] 0))
      if call_tmp[2120036]
      {
        (2120046 call chpl_rt_free_c_string[22714] i_cs[2120002])
      }
      val error[1808507]:Error[167938] "error variable" "temp"
      (1808516 'move' error[1808507] nil[44])
      (237514 call ioerror[266250] err[237450] "in openfp" path[237484] error[1808507])
      val errorExists[2108080]:bool[10] "temp"
      (2108085 'move' errorExists[2108080](2108082 '!=' error[1808507] nil[44]))
      if errorExists[2108080]
      {
        gotoErrorHandling handler[1808508] handler[1808508]
      }
      label handler[1808508]
      const-val shouldHandleError[1808527]:bool[10] "temp"
      val errorExists[2108088]:bool[10] "temp"
      (2108093 'move' errorExists[2108088](2108090 '!=' error[1808507] nil[44]))
      (1808531 'move' shouldHandleError[1808527] errorExists[2108088])
      if shouldHandleError[1808527]
      {
        (1808523 '=' error_out[1808475] error[1808507])
        ref i_x[2130081]:string[26] "temp"
        (2130085 'move' i_x[2130081](2130083 'set reference' path[237484]))
        (2130089 call deinit[30831] i_x[2130081])
        ref i_x[2327749]:file[235580] "temp"
        (2327753 'move' i_x[2327749](2327751 'set reference' ret[237424]))
        (2327757 call deinit[235891] i_x[2327749])
        gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
      }
      ref i_x[2130093]:string[26] "temp"
      (2130097 'move' i_x[2130093](2130095 'set reference' path[237484]))
      (2130101 call deinit[30831] i_x[2130093])
    }
    (1022124 'move' ret[534740] ret[237424])
    label _end_openfp[534738]
    (1831497 '=' _retArg[1831495] ret[534740])
    (1831501 return _void[55])
  }
  function openmem[237625](const  ref arg style[237621]:iostyle[231844], ref arg error_out[1808535]:Error[167938], ref arg _retArg[1831521]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534764]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237629]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547080 'move' local_style[237629] style[237621])
    val ret[237635]:file[235580] "dead at end of block" "insert auto destroy"
    (1060601 call init[235574] ret[237635])
    ref call_tmp[716227]:locale[28] "dead after last mention" "maybe param" "temp"
    ref i_this[2216396]:file[235580] "temp"
    (2216400 'move' i_this[2216396](2216398 'set reference' ret[237635]))
    ref call_tmp[2216403]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216405 'move' call_tmp[2216403](2216407 '.' i_this[2216396] home[235562]))
    (716230 'move' call_tmp[716227] call_tmp[2216403])
    const-val call_tmp[716232]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830511]:locale[28] "temp"
    ref i__retArg[2167524]:locale[28] "temp"
    (2167528 'move' i__retArg[2167524](2167526 'set reference' ret_tmp[1830511]))
    const-val call_tmp[2167531]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167533]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167535 'move' call_tmp[2167533](2167538 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167541 'move' call_tmp[2167531] call_tmp[2167533])
    const-val call_tmp[2167544]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167546]:locale[28] "temp"
    (2167549 call chpl_localeID_to_locale[92849] call_tmp[2167531] ret_tmp[2167546])
    (2167552 'move' call_tmp[2167544] ret_tmp[2167546])
    (2167555 '=' i__retArg[2167524] call_tmp[2167544])
    (1830514 'move' call_tmp[716232] ret_tmp[1830511])
    (237644 call =[90631] call_tmp[716227] call_tmp[716232])
    ref i_x[2264231]:locale[28] "temp"
    (2264235 'move' i_x[2264231](2264233 'set reference' call_tmp[716232]))
    (2264239 call deinit[90185] i_x[2264231])
    ref call_tmp[716239]:qio_file_ptr_t[231439] "dead at end of block" "maybe param" "temp"
    ref i_this[2216558]:file[235580] "temp"
    (2216562 'move' i_this[2216558](2216560 'set reference' ret[237635]))
    ref call_tmp[2216565]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216567 'move' call_tmp[2216565](2216569 '.' i_this[2216558] _file_internal[235568]))
    (716242 'move' call_tmp[716239] call_tmp[2216565])
    const-val call_tmp[716244]:syserr[223584] "dead at end of block" "maybe param" "temp"
    (716247 'move' call_tmp[716244](237655 call qio_file_open_mem[232728] call_tmp[716239] QBUFFER_PTR_NULL[231479] local_style[237629]))
    const-val err[237656]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547084 'move' err[237656] call_tmp[716244])
    const-val call_tmp[716249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206773]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206775 'move' call_tmp[2206773](2206778 call qio_err_iserr[223646] err[237656]))
    const-val call_tmp[2206780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206782 'move' call_tmp[2206780](2206784 '!=' call_tmp[2206773] 0))
    (716252 'move' call_tmp[716249] call_tmp[2206780])
    if call_tmp[716249]
    {
      val error[1808537]:Error[167938] "error variable" "temp"
      (1808546 'move' error[1808537] nil[44])
      (237681 call ioerror[266311] err[237656] "in openmem" error[1808537])
      val errorExists[2108096]:bool[10] "temp"
      (2108101 'move' errorExists[2108096](2108098 '!=' error[1808537] nil[44]))
      if errorExists[2108096]
      {
        gotoErrorHandling handler[1808538] handler[1808538]
      }
      label handler[1808538]
      const-val shouldHandleError[1808557]:bool[10] "temp"
      val errorExists[2108104]:bool[10] "temp"
      (2108109 'move' errorExists[2108104](2108106 '!=' error[1808537] nil[44]))
      (1808561 'move' shouldHandleError[1808557] errorExists[2108104])
      if shouldHandleError[1808557]
      {
        (1808553 '=' error_out[1808535] error[1808537])
        ref i_x[2327761]:file[235580] "temp"
        (2327765 'move' i_x[2327761](2327763 'set reference' ret[237635]))
        (2327769 call deinit[235891] i_x[2327761])
        gotoErrorHandlingReturn _end_openmem[534762] _end_openmem[534762]
      }
    }
    (1060599 'move' ret[534764] ret[237635])
    label _end_openmem[534762]
    (1831523 '=' _retArg[1831521] ret[534764])
    (1831525 return _void[55])
  }
  type channel(false,dynamic,true)[985627] val home[985615]:locale[28] "no doc" val _channel_internal[985620]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[985624]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080682] val home[1080670]:locale[28] "no doc" val _channel_internal[1080675]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1080679]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021825] val home[1021813]:locale[28] "no doc" val _channel_internal[1021818]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1021822]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060947] val home[1060935]:locale[28] "no doc" val _channel_internal[1060940]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1060944]:locale[28] "no doc"
  function =[1018439](ref arg lhs[1018441]:channel(false,dynamic,true)[985627], const  ref arg rhs[1018443]:channel(false,dynamic,true)[985627]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1018642]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1018644]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2226992]:locale[28] "dead after last mention" "maybe param" "temp"
    (2226994 'move' call_tmp[2226992](2226996 '.' rhs[1018443] home[985615]))
    (1018646 'move' call_tmp[1018644] call_tmp[2226992])
    const-val call_tmp[1018652]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019044]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165167]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165169 'move' coerce_tmp[2165167](2165171 '.v' call_tmp[1018644] _instance[89975]))
    val coerce_tmp[2165174]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165176 'move' coerce_tmp[2165174](2165178 'cast' object[22] coerce_tmp[2165167]))
    const-val call_tmp[2165181]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165183 'move' call_tmp[2165181](2165185 'ptr_eq' coerce_tmp[2165174] nil[44]))
    if call_tmp[2165181]
    {
      (2165191 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1019049 'move' _locale_tmp_[1019044] coerce_tmp[2165167])
    (1018654 'move' call_tmp[1018652](1018656 '_wide_get_locale' _locale_tmp_[1019044]))
    (1018658 'move' tmp[1018642] call_tmp[1018652])
    val rvfDerefTmp[2083539]:channel(false,dynamic,true)[985627] "temp"
    (2083543 'move' rvfDerefTmp[2083539](2083541 'deref' rhs[1018443]))
    val isdirect[2087935]:bool[10] "temp"
    (2087940 'move' isdirect[2087935](2087937 call chpl_doDirectExecuteOn[187423] tmp[1018642]))
    if isdirect[2087935]
    {
      (2087944 call on_fn[1018665] rvfDerefTmp[2083539])
    }
    {
      val _args_foron_fn[2087959]:_class_localson_fn[2087951] "temp"
      (2087963 'move' _args_foron_fn[2087959](2087961 'stack allocate class' _class_localson_fn[2087951]))
      (2087965 '.=' _args_foron_fn[2087959] _0_tmp[2087954] tmp[1018642])
      (2087969 '.=' _args_foron_fn[2087959] _1_rvfDerefTmp[2087956] rvfDerefTmp[2083539])
      val _args_vforon_fn[2087973]:c_void_ptr[149] "temp"
      (2087977 'move' _args_vforon_fn[2087973](2087975 'cast_to_void_star' _args_foron_fn[2087959]))
      val _args_sizeon_fn[2087979]:int(64)[13] "temp"
      (2087983 'move' _args_sizeon_fn[2087979](2087981 'sizeof_bundle' _class_localson_fn[2087951]))
      on(2088015 call wrapon_fn[2087985] tmp[1018642] _args_vforon_fn[2087973] _args_sizeon_fn[2087979] _args_foron_fn[2087959])
    }
    const-val tmp[1018686]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1018688]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227002]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227004 'move' call_tmp[2227002](2227006 '.' lhs[1018441] home[985615]))
    (1018690 'move' call_tmp[1018688] call_tmp[2227002])
    const-val call_tmp[1018696]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019063]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165197]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165199 'move' coerce_tmp[2165197](2165201 '.v' call_tmp[1018688] _instance[89975]))
    val coerce_tmp[2165204]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165206 'move' coerce_tmp[2165204](2165208 'cast' object[22] coerce_tmp[2165197]))
    const-val call_tmp[2165211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165213 'move' call_tmp[2165211](2165215 'ptr_eq' coerce_tmp[2165204] nil[44]))
    if call_tmp[2165211]
    {
      (2165221 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1019068 'move' _locale_tmp_[1019063] coerce_tmp[2165197])
    (1018698 'move' call_tmp[1018696](1018700 '_wide_get_locale' _locale_tmp_[1019063]))
    (1018702 'move' tmp[1018686] call_tmp[1018696])
    val isdirect[2088020]:bool[10] "temp"
    (2088025 'move' isdirect[2088020](2088022 call chpl_doDirectExecuteOn[187423] tmp[1018686]))
    if isdirect[2088020]
    {
      (2088029 call on_fn[1018709] lhs[1018441])
    }
    {
      val _args_foron_fn[2088044]:_class_localson_fn[2088036] "temp"
      (2088048 'move' _args_foron_fn[2088044](2088046 'stack allocate class' _class_localson_fn[2088036]))
      (2088050 '.=' _args_foron_fn[2088044] _0_tmp[2088039] tmp[1018686])
      ref tmp[2088054]:channel(false,dynamic,true)[985627] "temp"
      (2088058 'move' tmp[2088054](2088056 'set reference' lhs[1018441]))
      (2088060 '.=' _args_foron_fn[2088044] _1_lhs[2088041] tmp[2088054])
      val _args_vforon_fn[2088064]:c_void_ptr[149] "temp"
      (2088068 'move' _args_vforon_fn[2088064](2088066 'cast_to_void_star' _args_foron_fn[2088044]))
      val _args_sizeon_fn[2088070]:int(64)[13] "temp"
      (2088074 'move' _args_sizeon_fn[2088070](2088072 'sizeof_bundle' _class_localson_fn[2088036]))
      on(2088106 call wrapon_fn[2088076] tmp[1018686] _args_vforon_fn[2088064] _args_sizeon_fn[2088070] _args_foron_fn[2088044])
    }
    ref call_tmp[1018730]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227012]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227014 'move' call_tmp[2227012](2227016 '.' lhs[1018441] home[985615]))
    (1018732 'move' call_tmp[1018730] call_tmp[2227012])
    const-ref call_tmp[1018738]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2227022]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227024 'move' call_tmp[2227022](2227026 '.' rhs[1018443] home[985615]))
    (1018740 'move' call_tmp[1018738] call_tmp[2227022])
    (1018747 call =[90631] call_tmp[1018730] call_tmp[1018738])
    ref call_tmp[1018751]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227116]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227118 'move' call_tmp[2227116](2227120 '.' lhs[1018441] _channel_internal[985620]))
    (1018753 'move' call_tmp[1018751] call_tmp[2227116])
    const-ref call_tmp[1018759]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2227126]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227128 'move' call_tmp[2227126](2227130 '.' rhs[1018443] _channel_internal[985620]))
    (1018761 'move' call_tmp[1018759] call_tmp[2227126])
    const-val coerce_tmp[1019086]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019090 'move' coerce_tmp[1019086](1019088 'deref' call_tmp[1018759]))
    (2216185 '=' call_tmp[1018751] coerce_tmp[1019086])
    (1018771 return _void[55])
  }
  function =[1023147](ref arg lhs[1023149]:channel(true,dynamic,true)[1021825], const  ref arg rhs[1023151]:channel(true,dynamic,true)[1021825]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1023350]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1023352]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2228033]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228035 'move' call_tmp[2228033](2228037 '.' rhs[1023151] home[1021813]))
    (1023354 'move' call_tmp[1023352] call_tmp[2228033])
    const-val call_tmp[1023360]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023752]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165317]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165319 'move' coerce_tmp[2165317](2165321 '.v' call_tmp[1023352] _instance[89975]))
    val coerce_tmp[2165324]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165326 'move' coerce_tmp[2165324](2165328 'cast' object[22] coerce_tmp[2165317]))
    const-val call_tmp[2165331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165333 'move' call_tmp[2165331](2165335 'ptr_eq' coerce_tmp[2165324] nil[44]))
    if call_tmp[2165331]
    {
      (2165341 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1023757 'move' _locale_tmp_[1023752] coerce_tmp[2165317])
    (1023362 'move' call_tmp[1023360](1023364 '_wide_get_locale' _locale_tmp_[1023752]))
    (1023366 'move' tmp[1023350] call_tmp[1023360])
    val rvfDerefTmp[2083616]:channel(true,dynamic,true)[1021825] "temp"
    (2083620 'move' rvfDerefTmp[2083616](2083618 'deref' rhs[1023151]))
    val isdirect[2088618]:bool[10] "temp"
    (2088623 'move' isdirect[2088618](2088620 call chpl_doDirectExecuteOn[187423] tmp[1023350]))
    if isdirect[2088618]
    {
      (2088627 call on_fn[1023373] rvfDerefTmp[2083616])
    }
    {
      val _args_foron_fn[2088642]:_class_localson_fn[2088634] "temp"
      (2088646 'move' _args_foron_fn[2088642](2088644 'stack allocate class' _class_localson_fn[2088634]))
      (2088648 '.=' _args_foron_fn[2088642] _0_tmp[2088637] tmp[1023350])
      (2088652 '.=' _args_foron_fn[2088642] _1_rvfDerefTmp[2088639] rvfDerefTmp[2083616])
      val _args_vforon_fn[2088656]:c_void_ptr[149] "temp"
      (2088660 'move' _args_vforon_fn[2088656](2088658 'cast_to_void_star' _args_foron_fn[2088642]))
      val _args_sizeon_fn[2088662]:int(64)[13] "temp"
      (2088666 'move' _args_sizeon_fn[2088662](2088664 'sizeof_bundle' _class_localson_fn[2088634]))
      on(2088698 call wrapon_fn[2088668] tmp[1023350] _args_vforon_fn[2088656] _args_sizeon_fn[2088662] _args_foron_fn[2088642])
    }
    const-val tmp[1023394]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1023396]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228043]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228045 'move' call_tmp[2228043](2228047 '.' lhs[1023149] home[1021813]))
    (1023398 'move' call_tmp[1023396] call_tmp[2228043])
    const-val call_tmp[1023404]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023771]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165347]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165349 'move' coerce_tmp[2165347](2165351 '.v' call_tmp[1023396] _instance[89975]))
    val coerce_tmp[2165354]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165356 'move' coerce_tmp[2165354](2165358 'cast' object[22] coerce_tmp[2165347]))
    const-val call_tmp[2165361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165363 'move' call_tmp[2165361](2165365 'ptr_eq' coerce_tmp[2165354] nil[44]))
    if call_tmp[2165361]
    {
      (2165371 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1023776 'move' _locale_tmp_[1023771] coerce_tmp[2165347])
    (1023406 'move' call_tmp[1023404](1023408 '_wide_get_locale' _locale_tmp_[1023771]))
    (1023410 'move' tmp[1023394] call_tmp[1023404])
    val isdirect[2088703]:bool[10] "temp"
    (2088708 'move' isdirect[2088703](2088705 call chpl_doDirectExecuteOn[187423] tmp[1023394]))
    if isdirect[2088703]
    {
      (2088712 call on_fn[1023417] lhs[1023149])
    }
    {
      val _args_foron_fn[2088727]:_class_localson_fn[2088719] "temp"
      (2088731 'move' _args_foron_fn[2088727](2088729 'stack allocate class' _class_localson_fn[2088719]))
      (2088733 '.=' _args_foron_fn[2088727] _0_tmp[2088722] tmp[1023394])
      ref tmp[2088737]:channel(true,dynamic,true)[1021825] "temp"
      (2088741 'move' tmp[2088737](2088739 'set reference' lhs[1023149]))
      (2088743 '.=' _args_foron_fn[2088727] _1_lhs[2088724] tmp[2088737])
      val _args_vforon_fn[2088747]:c_void_ptr[149] "temp"
      (2088751 'move' _args_vforon_fn[2088747](2088749 'cast_to_void_star' _args_foron_fn[2088727]))
      val _args_sizeon_fn[2088753]:int(64)[13] "temp"
      (2088757 'move' _args_sizeon_fn[2088753](2088755 'sizeof_bundle' _class_localson_fn[2088719]))
      on(2088789 call wrapon_fn[2088759] tmp[1023394] _args_vforon_fn[2088747] _args_sizeon_fn[2088753] _args_foron_fn[2088727])
    }
    ref call_tmp[1023438]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228053]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228055 'move' call_tmp[2228053](2228057 '.' lhs[1023149] home[1021813]))
    (1023440 'move' call_tmp[1023438] call_tmp[2228053])
    const-ref call_tmp[1023446]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2228063]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228065 'move' call_tmp[2228063](2228067 '.' rhs[1023151] home[1021813]))
    (1023448 'move' call_tmp[1023446] call_tmp[2228063])
    (1023455 call =[90631] call_tmp[1023438] call_tmp[1023446])
    ref call_tmp[1023459]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228147]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228149 'move' call_tmp[2228147](2228151 '.' lhs[1023149] _channel_internal[1021818]))
    (1023461 'move' call_tmp[1023459] call_tmp[2228147])
    const-ref call_tmp[1023467]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2228157]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228159 'move' call_tmp[2228157](2228161 '.' rhs[1023151] _channel_internal[1021818]))
    (1023469 'move' call_tmp[1023467] call_tmp[2228157])
    const-val coerce_tmp[1023794]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023798 'move' coerce_tmp[1023794](1023796 'deref' call_tmp[1023467]))
    (2216191 '=' call_tmp[1023459] coerce_tmp[1023794])
    (1023479 return _void[55])
  }
  function =[1061860](ref arg lhs[1061862]:channel(true,dynamic,false)[1060947], const  ref arg rhs[1061864]:channel(true,dynamic,false)[1060947]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1062063]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1062065]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2263434]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263436 'move' call_tmp[2263434](2263438 '.' rhs[1061864] home[1060935]))
    (1062067 'move' call_tmp[1062065] call_tmp[2263434])
    const-val call_tmp[1062073]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062274]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165467]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165469 'move' coerce_tmp[2165467](2165471 '.v' call_tmp[1062065] _instance[89975]))
    val coerce_tmp[2165474]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165476 'move' coerce_tmp[2165474](2165478 'cast' object[22] coerce_tmp[2165467]))
    const-val call_tmp[2165481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165483 'move' call_tmp[2165481](2165485 'ptr_eq' coerce_tmp[2165474] nil[44]))
    if call_tmp[2165481]
    {
      (2165491 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062279 'move' _locale_tmp_[1062274] coerce_tmp[2165467])
    (1062075 'move' call_tmp[1062073](1062077 '_wide_get_locale' _locale_tmp_[1062274]))
    (1062079 'move' tmp[1062063] call_tmp[1062073])
    val rvfDerefTmp[2083724]:channel(true,dynamic,false)[1060947] "temp"
    (2083728 'move' rvfDerefTmp[2083724](2083726 'deref' rhs[1061864]))
    val isdirect[2089331]:bool[10] "temp"
    (2089336 'move' isdirect[2089331](2089333 call chpl_doDirectExecuteOn[187423] tmp[1062063]))
    if isdirect[2089331]
    {
      (2089340 call on_fn[1062086] rvfDerefTmp[2083724])
    }
    {
      val _args_foron_fn[2089355]:_class_localson_fn[2089347] "temp"
      (2089359 'move' _args_foron_fn[2089355](2089357 'stack allocate class' _class_localson_fn[2089347]))
      (2089361 '.=' _args_foron_fn[2089355] _0_tmp[2089350] tmp[1062063])
      (2089365 '.=' _args_foron_fn[2089355] _1_rvfDerefTmp[2089352] rvfDerefTmp[2083724])
      val _args_vforon_fn[2089369]:c_void_ptr[149] "temp"
      (2089373 'move' _args_vforon_fn[2089369](2089371 'cast_to_void_star' _args_foron_fn[2089355]))
      val _args_sizeon_fn[2089375]:int(64)[13] "temp"
      (2089379 'move' _args_sizeon_fn[2089375](2089377 'sizeof_bundle' _class_localson_fn[2089347]))
      on(2089411 call wrapon_fn[2089381] tmp[1062063] _args_vforon_fn[2089369] _args_sizeon_fn[2089375] _args_foron_fn[2089355])
    }
    const-val tmp[1062107]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1062109]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263444]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263446 'move' call_tmp[2263444](2263448 '.' lhs[1061862] home[1060935]))
    (1062111 'move' call_tmp[1062109] call_tmp[2263444])
    const-val call_tmp[1062117]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062293]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165497]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165499 'move' coerce_tmp[2165497](2165501 '.v' call_tmp[1062109] _instance[89975]))
    val coerce_tmp[2165504]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165506 'move' coerce_tmp[2165504](2165508 'cast' object[22] coerce_tmp[2165497]))
    const-val call_tmp[2165511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165513 'move' call_tmp[2165511](2165515 'ptr_eq' coerce_tmp[2165504] nil[44]))
    if call_tmp[2165511]
    {
      (2165521 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062298 'move' _locale_tmp_[1062293] coerce_tmp[2165497])
    (1062119 'move' call_tmp[1062117](1062121 '_wide_get_locale' _locale_tmp_[1062293]))
    (1062123 'move' tmp[1062107] call_tmp[1062117])
    val isdirect[2089416]:bool[10] "temp"
    (2089421 'move' isdirect[2089416](2089418 call chpl_doDirectExecuteOn[187423] tmp[1062107]))
    if isdirect[2089416]
    {
      (2089425 call on_fn[1062130] lhs[1061862])
    }
    {
      val _args_foron_fn[2089440]:_class_localson_fn[2089432] "temp"
      (2089444 'move' _args_foron_fn[2089440](2089442 'stack allocate class' _class_localson_fn[2089432]))
      (2089446 '.=' _args_foron_fn[2089440] _0_tmp[2089435] tmp[1062107])
      ref tmp[2089450]:channel(true,dynamic,false)[1060947] "temp"
      (2089454 'move' tmp[2089450](2089452 'set reference' lhs[1061862]))
      (2089456 '.=' _args_foron_fn[2089440] _1_lhs[2089437] tmp[2089450])
      val _args_vforon_fn[2089460]:c_void_ptr[149] "temp"
      (2089464 'move' _args_vforon_fn[2089460](2089462 'cast_to_void_star' _args_foron_fn[2089440]))
      val _args_sizeon_fn[2089466]:int(64)[13] "temp"
      (2089470 'move' _args_sizeon_fn[2089466](2089468 'sizeof_bundle' _class_localson_fn[2089432]))
      on(2089502 call wrapon_fn[2089472] tmp[1062107] _args_vforon_fn[2089460] _args_sizeon_fn[2089466] _args_foron_fn[2089440])
    }
    ref call_tmp[1062151]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263454]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263456 'move' call_tmp[2263454](2263458 '.' lhs[1061862] home[1060935]))
    (1062153 'move' call_tmp[1062151] call_tmp[2263454])
    const-ref call_tmp[1062159]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2263464]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263466 'move' call_tmp[2263464](2263468 '.' rhs[1061864] home[1060935]))
    (1062161 'move' call_tmp[1062159] call_tmp[2263464])
    (1062168 call =[90631] call_tmp[1062151] call_tmp[1062159])
    ref call_tmp[1062172]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263618]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263620 'move' call_tmp[2263618](2263622 '.' lhs[1061862] _channel_internal[1060940]))
    (1062174 'move' call_tmp[1062172] call_tmp[2263618])
    const-ref call_tmp[1062180]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2263628]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263630 'move' call_tmp[2263628](2263632 '.' rhs[1061864] _channel_internal[1060940]))
    (1062182 'move' call_tmp[1062180] call_tmp[2263628])
    const-val coerce_tmp[1062316]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062320 'move' coerce_tmp[1062316](1062318 'deref' call_tmp[1062180]))
    (2216197 '=' call_tmp[1062172] coerce_tmp[1062316])
    (1062192 return _void[55])
  }
  function =[1081592](ref arg lhs[1081594]:channel(false,dynamic,false)[1080682], const  ref arg rhs[1081596]:channel(false,dynamic,false)[1080682]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1081795]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1081797]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2269939]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269941 'move' call_tmp[2269939](2269943 '.' rhs[1081596] home[1080670]))
    (1081799 'move' call_tmp[1081797] call_tmp[2269939])
    const-val call_tmp[1081805]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082006]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165737]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165739 'move' coerce_tmp[2165737](2165741 '.v' call_tmp[1081797] _instance[89975]))
    val coerce_tmp[2165744]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165746 'move' coerce_tmp[2165744](2165748 'cast' object[22] coerce_tmp[2165737]))
    const-val call_tmp[2165751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165753 'move' call_tmp[2165751](2165755 'ptr_eq' coerce_tmp[2165744] nil[44]))
    if call_tmp[2165751]
    {
      (2165761 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082011 'move' _locale_tmp_[1082006] coerce_tmp[2165737])
    (1081807 'move' call_tmp[1081805](1081809 '_wide_get_locale' _locale_tmp_[1082006]))
    (1081811 'move' tmp[1081795] call_tmp[1081805])
    val rvfDerefTmp[2083902]:channel(false,dynamic,false)[1080682] "temp"
    (2083906 'move' rvfDerefTmp[2083902](2083904 'deref' rhs[1081596]))
    val isdirect[2090552]:bool[10] "temp"
    (2090557 'move' isdirect[2090552](2090554 call chpl_doDirectExecuteOn[187423] tmp[1081795]))
    if isdirect[2090552]
    {
      (2090561 call on_fn[1081818] rvfDerefTmp[2083902])
    }
    {
      val _args_foron_fn[2090576]:_class_localson_fn[2090568] "temp"
      (2090580 'move' _args_foron_fn[2090576](2090578 'stack allocate class' _class_localson_fn[2090568]))
      (2090582 '.=' _args_foron_fn[2090576] _0_tmp[2090571] tmp[1081795])
      (2090586 '.=' _args_foron_fn[2090576] _1_rvfDerefTmp[2090573] rvfDerefTmp[2083902])
      val _args_vforon_fn[2090590]:c_void_ptr[149] "temp"
      (2090594 'move' _args_vforon_fn[2090590](2090592 'cast_to_void_star' _args_foron_fn[2090576]))
      val _args_sizeon_fn[2090596]:int(64)[13] "temp"
      (2090600 'move' _args_sizeon_fn[2090596](2090598 'sizeof_bundle' _class_localson_fn[2090568]))
      on(2090632 call wrapon_fn[2090602] tmp[1081795] _args_vforon_fn[2090590] _args_sizeon_fn[2090596] _args_foron_fn[2090576])
    }
    const-val tmp[1081839]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1081841]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2269949]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269951 'move' call_tmp[2269949](2269953 '.' lhs[1081594] home[1080670]))
    (1081843 'move' call_tmp[1081841] call_tmp[2269949])
    const-val call_tmp[1081849]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082025]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165767]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165769 'move' coerce_tmp[2165767](2165771 '.v' call_tmp[1081841] _instance[89975]))
    val coerce_tmp[2165774]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165776 'move' coerce_tmp[2165774](2165778 'cast' object[22] coerce_tmp[2165767]))
    const-val call_tmp[2165781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165783 'move' call_tmp[2165781](2165785 'ptr_eq' coerce_tmp[2165774] nil[44]))
    if call_tmp[2165781]
    {
      (2165791 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082030 'move' _locale_tmp_[1082025] coerce_tmp[2165767])
    (1081851 'move' call_tmp[1081849](1081853 '_wide_get_locale' _locale_tmp_[1082025]))
    (1081855 'move' tmp[1081839] call_tmp[1081849])
    val isdirect[2090637]:bool[10] "temp"
    (2090642 'move' isdirect[2090637](2090639 call chpl_doDirectExecuteOn[187423] tmp[1081839]))
    if isdirect[2090637]
    {
      (2090646 call on_fn[1081862] lhs[1081594])
    }
    {
      val _args_foron_fn[2090661]:_class_localson_fn[2090653] "temp"
      (2090665 'move' _args_foron_fn[2090661](2090663 'stack allocate class' _class_localson_fn[2090653]))
      (2090667 '.=' _args_foron_fn[2090661] _0_tmp[2090656] tmp[1081839])
      ref tmp[2090671]:channel(false,dynamic,false)[1080682] "temp"
      (2090675 'move' tmp[2090671](2090673 'set reference' lhs[1081594]))
      (2090677 '.=' _args_foron_fn[2090661] _1_lhs[2090658] tmp[2090671])
      val _args_vforon_fn[2090681]:c_void_ptr[149] "temp"
      (2090685 'move' _args_vforon_fn[2090681](2090683 'cast_to_void_star' _args_foron_fn[2090661]))
      val _args_sizeon_fn[2090687]:int(64)[13] "temp"
      (2090691 'move' _args_sizeon_fn[2090687](2090689 'sizeof_bundle' _class_localson_fn[2090653]))
      on(2090723 call wrapon_fn[2090693] tmp[1081839] _args_vforon_fn[2090681] _args_sizeon_fn[2090687] _args_foron_fn[2090661])
    }
    ref call_tmp[1081883]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2269959]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269961 'move' call_tmp[2269959](2269963 '.' lhs[1081594] home[1080670]))
    (1081885 'move' call_tmp[1081883] call_tmp[2269959])
    const-ref call_tmp[1081891]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2269969]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269971 'move' call_tmp[2269969](2269973 '.' rhs[1081596] home[1080670]))
    (1081893 'move' call_tmp[1081891] call_tmp[2269969])
    (1081900 call =[90631] call_tmp[1081883] call_tmp[1081891])
    ref call_tmp[1081904]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270033]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270035 'move' call_tmp[2270033](2270037 '.' lhs[1081594] _channel_internal[1080675]))
    (1081906 'move' call_tmp[1081904] call_tmp[2270033])
    const-ref call_tmp[1081912]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2270043]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270045 'move' call_tmp[2270043](2270047 '.' rhs[1081596] _channel_internal[1080675]))
    (1081914 'move' call_tmp[1081912] call_tmp[2270043])
    const-val coerce_tmp[1082048]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082052 'move' coerce_tmp[1082048](1082050 'deref' call_tmp[1081912]))
    (2216203 '=' call_tmp[1081904] coerce_tmp[1082048])
    (1081924 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017871](ref arg this[1017877]:channel(false,dynamic,true)[985627]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1017931]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830523]:locale[28] "temp"
    ref i__retArg[2167596]:locale[28] "temp"
    (2167600 'move' i__retArg[2167596](2167598 'set reference' ret_tmp[1830523]))
    const-val call_tmp[2167603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167605]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167607 'move' call_tmp[2167605](2167610 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167613 'move' call_tmp[2167603] call_tmp[2167605])
    const-val call_tmp[2167616]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167618]:locale[28] "temp"
    (2167621 call chpl_localeID_to_locale[92849] call_tmp[2167603] ret_tmp[2167618])
    (2167624 'move' call_tmp[2167616] ret_tmp[2167618])
    (2167627 '=' i__retArg[2167596] call_tmp[2167616])
    (1830526 'move' call_tmp[1017931] ret_tmp[1830523])
    val tmp[1017937]:locale[28] "dead after last mention" "temp"
    (1017939 'move' tmp[1017937] call_tmp[1017931])
    (1017943 '.=' this[1017877] home[985615] tmp[1017937])
    val tmp[1017948]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1017950 'move' tmp[1017948] QIO_CHANNEL_PTR_NULL[231468])
    (1017954 '.=' this[1017877] _channel_internal[985620] tmp[1017948])
    val tmp[1017959]:locale[28] "dead after last mention" "temp"
    (1017961 call init=[90167] tmp[1017959] nilLocale[89939])
    (1017964 '.=' this[1017877] _readWriteThisFromLocale[985624] tmp[1017959])
    (1017969 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022907](ref arg this[1022913]:channel(true,dynamic,true)[1021825]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1022967]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830529]:locale[28] "temp"
    ref i__retArg[2167632]:locale[28] "temp"
    (2167636 'move' i__retArg[2167632](2167634 'set reference' ret_tmp[1830529]))
    const-val call_tmp[2167639]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167641]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167643 'move' call_tmp[2167641](2167646 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167649 'move' call_tmp[2167639] call_tmp[2167641])
    const-val call_tmp[2167652]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167654]:locale[28] "temp"
    (2167657 call chpl_localeID_to_locale[92849] call_tmp[2167639] ret_tmp[2167654])
    (2167660 'move' call_tmp[2167652] ret_tmp[2167654])
    (2167663 '=' i__retArg[2167632] call_tmp[2167652])
    (1830532 'move' call_tmp[1022967] ret_tmp[1830529])
    val tmp[1022973]:locale[28] "dead after last mention" "temp"
    (1022975 'move' tmp[1022973] call_tmp[1022967])
    (1022979 '.=' this[1022913] home[1021813] tmp[1022973])
    val tmp[1022984]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1022986 'move' tmp[1022984] QIO_CHANNEL_PTR_NULL[231468])
    (1022990 '.=' this[1022913] _channel_internal[1021818] tmp[1022984])
    val tmp[1022995]:locale[28] "dead after last mention" "temp"
    (1022997 call init=[90167] tmp[1022995] nilLocale[89939])
    (1023000 '.=' this[1022913] _readWriteThisFromLocale[1021822] tmp[1022995])
    (1023005 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061620](ref arg this[1061626]:channel(true,dynamic,false)[1060947]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1061680]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830535]:locale[28] "temp"
    ref i__retArg[2167668]:locale[28] "temp"
    (2167672 'move' i__retArg[2167668](2167670 'set reference' ret_tmp[1830535]))
    const-val call_tmp[2167675]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167677]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167679 'move' call_tmp[2167677](2167682 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167685 'move' call_tmp[2167675] call_tmp[2167677])
    const-val call_tmp[2167688]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167690]:locale[28] "temp"
    (2167693 call chpl_localeID_to_locale[92849] call_tmp[2167675] ret_tmp[2167690])
    (2167696 'move' call_tmp[2167688] ret_tmp[2167690])
    (2167699 '=' i__retArg[2167668] call_tmp[2167688])
    (1830538 'move' call_tmp[1061680] ret_tmp[1830535])
    val tmp[1061686]:locale[28] "dead after last mention" "temp"
    (1061688 'move' tmp[1061686] call_tmp[1061680])
    (1061692 '.=' this[1061626] home[1060935] tmp[1061686])
    val tmp[1061697]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1061699 'move' tmp[1061697] QIO_CHANNEL_PTR_NULL[231468])
    (1061703 '.=' this[1061626] _channel_internal[1060940] tmp[1061697])
    val tmp[1061708]:locale[28] "dead after last mention" "temp"
    (1061710 call init=[90167] tmp[1061708] nilLocale[89939])
    (1061713 '.=' this[1061626] _readWriteThisFromLocale[1060944] tmp[1061708])
    (1061718 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081352](ref arg this[1081358]:channel(false,dynamic,false)[1080682]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1081412]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830553]:locale[28] "temp"
    ref i__retArg[2167776]:locale[28] "temp"
    (2167780 'move' i__retArg[2167776](2167778 'set reference' ret_tmp[1830553]))
    const-val call_tmp[2167783]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167785]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167787 'move' call_tmp[2167785](2167790 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167793 'move' call_tmp[2167783] call_tmp[2167785])
    const-val call_tmp[2167796]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167798]:locale[28] "temp"
    (2167801 call chpl_localeID_to_locale[92849] call_tmp[2167783] ret_tmp[2167798])
    (2167804 'move' call_tmp[2167796] ret_tmp[2167798])
    (2167807 '=' i__retArg[2167776] call_tmp[2167796])
    (1830556 'move' call_tmp[1081412] ret_tmp[1830553])
    val tmp[1081418]:locale[28] "dead after last mention" "temp"
    (1081420 'move' tmp[1081418] call_tmp[1081412])
    (1081424 '.=' this[1081358] home[1080670] tmp[1081418])
    val tmp[1081429]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1081431 'move' tmp[1081429] QIO_CHANNEL_PTR_NULL[231468])
    (1081435 '.=' this[1081358] _channel_internal[1080675] tmp[1081429])
    val tmp[1081440]:locale[28] "dead after last mention" "temp"
    (1081442 call init=[90167] tmp[1081440] nilLocale[89939])
    (1081445 '.=' this[1081358] _readWriteThisFromLocale[1080679] tmp[1081440])
    (1081450 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1068388](ref arg this[1068394]:channel(true,dynamic,false)[1060947], const  ref arg home[1068402]:locale[28], const in arg _channel_internal[1068404]:qio_channel_ptr_t[231465], const  ref arg _readWriteThisFromLocale[1068406]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068454]:locale[28] "dead after last mention" "temp"
    (1068456 call init=[90167] tmp[1068454] home[1068402])
    (1068460 '.=' this[1068394] home[1060935] tmp[1068454])
    val tmp[1068465]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1068467 'move' tmp[1068465] _channel_internal[1068404])
    (1068471 '.=' this[1068394] _channel_internal[1060940] tmp[1068465])
    val tmp[1068476]:locale[28] "dead after last mention" "temp"
    (1068478 call init=[90167] tmp[1068476] _readWriteThisFromLocale[1068406])
    (1068481 '.=' this[1068394] _readWriteThisFromLocale[1060944] tmp[1068476])
    (1068486 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017647](ref arg this[1017653]:channel(false,dynamic,true)[985627], const  ref arg f[1017661]:file[235580], ref arg error[1017663]:syserr[223584], const in arg hints[1017667]:int(32)[95], const in arg start[1017673]:int(64)[13], const in arg end[1017679]:int(64)[13], const in arg local_style[1017681]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1017858]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017697 call init[1017871] this[1017653])
    const-val tmp[1017702]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1017704]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2216341]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216343 'move' call_tmp[2216341](2216345 '.' f[1017661] home[235562]))
    (1017706 'move' call_tmp[1017704] call_tmp[2216341])
    const-val call_tmp[1017712]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018014]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165137]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165139 'move' coerce_tmp[2165137](2165141 '.v' call_tmp[1017704] _instance[89975]))
    val coerce_tmp[2165144]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165146 'move' coerce_tmp[2165144](2165148 'cast' object[22] coerce_tmp[2165137]))
    const-val call_tmp[2165151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165153 'move' call_tmp[2165151](2165155 'ptr_eq' coerce_tmp[2165144] nil[44]))
    if call_tmp[2165151]
    {
      (2165161 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1018019 'move' _locale_tmp_[1018014] coerce_tmp[2165137])
    (1017714 'move' call_tmp[1017712](1017716 '_wide_get_locale' _locale_tmp_[1018014]))
    (1017718 'move' tmp[1017702] call_tmp[1017712])
    val rvfDerefTmp[2083505]:iostyle[231844] "temp"
    (2083508 'move' rvfDerefTmp[2083505] local_style[1017681])
    val rvfDerefTmp[2083518]:file[235580] "temp"
    (2083522 'move' rvfDerefTmp[2083518](2083520 'deref' f[1017661]))
    val isdirect[2087748]:bool[10] "temp"
    (2087753 'move' isdirect[2087748](2087750 call chpl_doDirectExecuteOn[187423] tmp[1017702]))
    if isdirect[2087748]
    {
      (2087757 call on_fn[1017725] this[1017653] hints[1017667] rvfDerefTmp[2083505] end[1017679] start[1017673] rvfDerefTmp[2083518] _formal_tmp_error[1017858])
    }
    {
      val _args_foron_fn[2087790]:_class_localson_fn[2087770] "temp"
      (2087794 'move' _args_foron_fn[2087790](2087792 'stack allocate class' _class_localson_fn[2087770]))
      (2087796 '.=' _args_foron_fn[2087790] _0_tmp[2087773] tmp[1017702])
      ref tmp[2087800]:channel(false,dynamic,true)[985627] "temp"
      (2087804 'move' tmp[2087800](2087802 'set reference' this[1017653]))
      (2087806 '.=' _args_foron_fn[2087790] _1_this[2087775] tmp[2087800])
      (2087810 '.=' _args_foron_fn[2087790] _2_hints[2087777] hints[1017667])
      (2087814 '.=' _args_foron_fn[2087790] _3_rvfDerefTmp[2087779] rvfDerefTmp[2083505])
      (2087818 '.=' _args_foron_fn[2087790] _4_end[2087781] end[1017679])
      (2087822 '.=' _args_foron_fn[2087790] _5_start[2087783] start[1017673])
      (2087826 '.=' _args_foron_fn[2087790] _6_rvfDerefTmp[2087785] rvfDerefTmp[2083518])
      ref tmp[2087830]:syserr[223584] "temp"
      (2087834 'move' tmp[2087830](2087832 'set reference' _formal_tmp_error[1017858]))
      (2087836 '.=' _args_foron_fn[2087790] _7__formal_tmp_error[2087787] tmp[2087830])
      val _args_vforon_fn[2087840]:c_void_ptr[149] "temp"
      (2087844 'move' _args_vforon_fn[2087840](2087842 'cast_to_void_star' _args_foron_fn[2087790]))
      val _args_sizeon_fn[2087846]:int(64)[13] "temp"
      (2087850 'move' _args_sizeon_fn[2087846](2087848 'sizeof_bundle' _class_localson_fn[2087770]))
      on(2087930 call wrapon_fn[2087852] tmp[1017702] _args_vforon_fn[2087840] _args_sizeon_fn[2087846] _args_foron_fn[2087790])
    }
    label _endinit[1017868]
    (1842798 '=' error[1017663] _formal_tmp_error[1017858])
    (1017855 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022683](ref arg this[1022689]:channel(true,dynamic,true)[1021825], const  ref arg f[1022697]:file[235580], ref arg error[1022699]:syserr[223584], const in arg hints[1022703]:int(32)[95], const in arg start[1022709]:int(64)[13], const in arg end[1022715]:int(64)[13], const in arg local_style[1022717]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1022894]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022733 call init[1022907] this[1022689])
    const-val tmp[1022738]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1022740]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2216387]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216389 'move' call_tmp[2216387](2216391 '.' f[1022697] home[235562]))
    (1022742 'move' call_tmp[1022740] call_tmp[2216387])
    const-val call_tmp[1022748]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023032]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165287]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165289 'move' coerce_tmp[2165287](2165291 '.v' call_tmp[1022740] _instance[89975]))
    val coerce_tmp[2165294]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165296 'move' coerce_tmp[2165294](2165298 'cast' object[22] coerce_tmp[2165287]))
    const-val call_tmp[2165301]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165303 'move' call_tmp[2165301](2165305 'ptr_eq' coerce_tmp[2165294] nil[44]))
    if call_tmp[2165301]
    {
      (2165311 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1023037 'move' _locale_tmp_[1023032] coerce_tmp[2165287])
    (1022750 'move' call_tmp[1022748](1022752 '_wide_get_locale' _locale_tmp_[1023032]))
    (1022754 'move' tmp[1022738] call_tmp[1022748])
    val rvfDerefTmp[2083582]:file[235580] "temp"
    (2083586 'move' rvfDerefTmp[2083582](2083584 'deref' f[1022697]))
    val rvfDerefTmp[2083603]:iostyle[231844] "temp"
    (2083606 'move' rvfDerefTmp[2083603] local_style[1022717])
    val isdirect[2088431]:bool[10] "temp"
    (2088436 'move' isdirect[2088431](2088433 call chpl_doDirectExecuteOn[187423] tmp[1022738]))
    if isdirect[2088431]
    {
      (2088440 call on_fn[1022761] rvfDerefTmp[2083582] _formal_tmp_error[1022894] end[1022715] this[1022689] hints[1022703] rvfDerefTmp[2083603] start[1022709])
    }
    {
      val _args_foron_fn[2088473]:_class_localson_fn[2088453] "temp"
      (2088477 'move' _args_foron_fn[2088473](2088475 'stack allocate class' _class_localson_fn[2088453]))
      (2088479 '.=' _args_foron_fn[2088473] _0_tmp[2088456] tmp[1022738])
      (2088483 '.=' _args_foron_fn[2088473] _1_rvfDerefTmp[2088458] rvfDerefTmp[2083582])
      ref tmp[2088487]:syserr[223584] "temp"
      (2088491 'move' tmp[2088487](2088489 'set reference' _formal_tmp_error[1022894]))
      (2088493 '.=' _args_foron_fn[2088473] _2__formal_tmp_error[2088460] tmp[2088487])
      (2088497 '.=' _args_foron_fn[2088473] _3_end[2088462] end[1022715])
      ref tmp[2088501]:channel(true,dynamic,true)[1021825] "temp"
      (2088505 'move' tmp[2088501](2088503 'set reference' this[1022689]))
      (2088507 '.=' _args_foron_fn[2088473] _4_this[2088464] tmp[2088501])
      (2088511 '.=' _args_foron_fn[2088473] _5_hints[2088466] hints[1022703])
      (2088515 '.=' _args_foron_fn[2088473] _6_rvfDerefTmp[2088468] rvfDerefTmp[2083603])
      (2088519 '.=' _args_foron_fn[2088473] _7_start[2088470] start[1022709])
      val _args_vforon_fn[2088523]:c_void_ptr[149] "temp"
      (2088527 'move' _args_vforon_fn[2088523](2088525 'cast_to_void_star' _args_foron_fn[2088473]))
      val _args_sizeon_fn[2088529]:int(64)[13] "temp"
      (2088533 'move' _args_sizeon_fn[2088529](2088531 'sizeof_bundle' _class_localson_fn[2088453]))
      on(2088613 call wrapon_fn[2088535] tmp[1022738] _args_vforon_fn[2088523] _args_sizeon_fn[2088529] _args_foron_fn[2088473])
    }
    label _endinit[1022904]
    (1842821 '=' error[1022699] _formal_tmp_error[1022894])
    (1022891 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061396](ref arg this[1061402]:channel(true,dynamic,false)[1060947], const  ref arg f[1061410]:file[235580], ref arg error[1061412]:syserr[223584], const in arg hints[1061416]:int(32)[95], const in arg start[1061422]:int(64)[13], const in arg end[1061428]:int(64)[13], const in arg local_style[1061430]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061607]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061446 call init[1061620] this[1061402])
    const-val tmp[1061451]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1061453]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2216433]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216435 'move' call_tmp[2216433](2216437 '.' f[1061410] home[235562]))
    (1061455 'move' call_tmp[1061453] call_tmp[2216433])
    const-val call_tmp[1061461]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061745]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165437]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165439 'move' coerce_tmp[2165437](2165441 '.v' call_tmp[1061453] _instance[89975]))
    val coerce_tmp[2165444]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165446 'move' coerce_tmp[2165444](2165448 'cast' object[22] coerce_tmp[2165437]))
    const-val call_tmp[2165451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165453 'move' call_tmp[2165451](2165455 'ptr_eq' coerce_tmp[2165444] nil[44]))
    if call_tmp[2165451]
    {
      (2165461 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1061750 'move' _locale_tmp_[1061745] coerce_tmp[2165437])
    (1061463 'move' call_tmp[1061461](1061465 '_wide_get_locale' _locale_tmp_[1061745]))
    (1061467 'move' tmp[1061451] call_tmp[1061461])
    val rvfDerefTmp[2083690]:iostyle[231844] "temp"
    (2083693 'move' rvfDerefTmp[2083690] local_style[1061430])
    val rvfDerefTmp[2083703]:file[235580] "temp"
    (2083707 'move' rvfDerefTmp[2083703](2083705 'deref' f[1061410]))
    val isdirect[2089144]:bool[10] "temp"
    (2089149 'move' isdirect[2089144](2089146 call chpl_doDirectExecuteOn[187423] tmp[1061451]))
    if isdirect[2089144]
    {
      (2089153 call on_fn[1061474] _formal_tmp_error[1061607] end[1061428] hints[1061416] rvfDerefTmp[2083690] this[1061402] start[1061422] rvfDerefTmp[2083703])
    }
    {
      val _args_foron_fn[2089186]:_class_localson_fn[2089166] "temp"
      (2089190 'move' _args_foron_fn[2089186](2089188 'stack allocate class' _class_localson_fn[2089166]))
      (2089192 '.=' _args_foron_fn[2089186] _0_tmp[2089169] tmp[1061451])
      ref tmp[2089196]:syserr[223584] "temp"
      (2089200 'move' tmp[2089196](2089198 'set reference' _formal_tmp_error[1061607]))
      (2089202 '.=' _args_foron_fn[2089186] _1__formal_tmp_error[2089171] tmp[2089196])
      (2089206 '.=' _args_foron_fn[2089186] _2_end[2089173] end[1061428])
      (2089210 '.=' _args_foron_fn[2089186] _3_hints[2089175] hints[1061416])
      (2089214 '.=' _args_foron_fn[2089186] _4_rvfDerefTmp[2089177] rvfDerefTmp[2083690])
      ref tmp[2089218]:channel(true,dynamic,false)[1060947] "temp"
      (2089222 'move' tmp[2089218](2089220 'set reference' this[1061402]))
      (2089224 '.=' _args_foron_fn[2089186] _5_this[2089179] tmp[2089218])
      (2089228 '.=' _args_foron_fn[2089186] _6_start[2089181] start[1061422])
      (2089232 '.=' _args_foron_fn[2089186] _7_rvfDerefTmp[2089183] rvfDerefTmp[2083703])
      val _args_vforon_fn[2089236]:c_void_ptr[149] "temp"
      (2089240 'move' _args_vforon_fn[2089236](2089238 'cast_to_void_star' _args_foron_fn[2089186]))
      val _args_sizeon_fn[2089242]:int(64)[13] "temp"
      (2089246 'move' _args_sizeon_fn[2089242](2089244 'sizeof_bundle' _class_localson_fn[2089166]))
      on(2089326 call wrapon_fn[2089248] tmp[1061451] _args_vforon_fn[2089236] _args_sizeon_fn[2089242] _args_foron_fn[2089186])
    }
    label _endinit[1061617]
    (1844046 '=' error[1061412] _formal_tmp_error[1061607])
    (1061604 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081128](ref arg this[1081134]:channel(false,dynamic,false)[1080682], const  ref arg f[1081142]:file[235580], ref arg error[1081144]:syserr[223584], const in arg hints[1081148]:int(32)[95], const in arg start[1081154]:int(64)[13], const in arg end[1081160]:int(64)[13], const in arg local_style[1081162]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081339]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081178 call init[1081352] this[1081134])
    const-val tmp[1081183]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1081185]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref call_tmp[2216453]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216455 'move' call_tmp[2216453](2216457 '.' f[1081142] home[235562]))
    (1081187 'move' call_tmp[1081185] call_tmp[2216453])
    const-val call_tmp[1081193]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081477]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165707]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165709 'move' coerce_tmp[2165707](2165711 '.v' call_tmp[1081185] _instance[89975]))
    val coerce_tmp[2165714]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165716 'move' coerce_tmp[2165714](2165718 'cast' object[22] coerce_tmp[2165707]))
    const-val call_tmp[2165721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165723 'move' call_tmp[2165721](2165725 'ptr_eq' coerce_tmp[2165714] nil[44]))
    if call_tmp[2165721]
    {
      (2165731 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1081482 'move' _locale_tmp_[1081477] coerce_tmp[2165707])
    (1081195 'move' call_tmp[1081193](1081197 '_wide_get_locale' _locale_tmp_[1081477]))
    (1081199 'move' tmp[1081183] call_tmp[1081193])
    val rvfDerefTmp[2083868]:iostyle[231844] "temp"
    (2083871 'move' rvfDerefTmp[2083868] local_style[1081162])
    val rvfDerefTmp[2083881]:file[235580] "temp"
    (2083885 'move' rvfDerefTmp[2083881](2083883 'deref' f[1081142]))
    val isdirect[2090365]:bool[10] "temp"
    (2090370 'move' isdirect[2090365](2090367 call chpl_doDirectExecuteOn[187423] tmp[1081183]))
    if isdirect[2090365]
    {
      (2090374 call on_fn[1081206] end[1081160] hints[1081148] rvfDerefTmp[2083868] this[1081134] start[1081154] rvfDerefTmp[2083881] _formal_tmp_error[1081339])
    }
    {
      val _args_foron_fn[2090407]:_class_localson_fn[2090387] "temp"
      (2090411 'move' _args_foron_fn[2090407](2090409 'stack allocate class' _class_localson_fn[2090387]))
      (2090413 '.=' _args_foron_fn[2090407] _0_tmp[2090390] tmp[1081183])
      (2090417 '.=' _args_foron_fn[2090407] _1_end[2090392] end[1081160])
      (2090421 '.=' _args_foron_fn[2090407] _2_hints[2090394] hints[1081148])
      (2090425 '.=' _args_foron_fn[2090407] _3_rvfDerefTmp[2090396] rvfDerefTmp[2083868])
      ref tmp[2090429]:channel(false,dynamic,false)[1080682] "temp"
      (2090433 'move' tmp[2090429](2090431 'set reference' this[1081134]))
      (2090435 '.=' _args_foron_fn[2090407] _4_this[2090398] tmp[2090429])
      (2090439 '.=' _args_foron_fn[2090407] _5_start[2090400] start[1081154])
      (2090443 '.=' _args_foron_fn[2090407] _6_rvfDerefTmp[2090402] rvfDerefTmp[2083881])
      ref tmp[2090447]:syserr[223584] "temp"
      (2090451 'move' tmp[2090447](2090449 'set reference' _formal_tmp_error[1081339]))
      (2090453 '.=' _args_foron_fn[2090407] _7__formal_tmp_error[2090404] tmp[2090447])
      val _args_vforon_fn[2090457]:c_void_ptr[149] "temp"
      (2090461 'move' _args_vforon_fn[2090457](2090459 'cast_to_void_star' _args_foron_fn[2090407]))
      val _args_sizeon_fn[2090463]:int(64)[13] "temp"
      (2090467 'move' _args_sizeon_fn[2090463](2090465 'sizeof_bundle' _class_localson_fn[2090387]))
      on(2090547 call wrapon_fn[2090469] tmp[1081183] _args_vforon_fn[2090457] _args_sizeon_fn[2090463] _args_foron_fn[2090407])
    }
    label _endinit[1081349]
    (1844207 '=' error[1081144] _formal_tmp_error[1081339])
    (1081336 return _void[55])
  }
  function channel(false,dynamic,true)[985627].deinit[1471060](ref arg this[1471066]:channel(false,dynamic,true)[985627]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1471072]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1471074]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227032]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227034 'move' call_tmp[2227032](2227036 '.' this[1471066] home[985615]))
    (1471076 'move' call_tmp[1471074] call_tmp[2227032])
    const-val call_tmp[1471082]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1471133]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166373]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166375 'move' coerce_tmp[2166373](2166377 '.v' call_tmp[1471074] _instance[89975]))
    val coerce_tmp[2166380]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166382 'move' coerce_tmp[2166380](2166384 'cast' object[22] coerce_tmp[2166373]))
    const-val call_tmp[2166387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166389 'move' call_tmp[2166387](2166391 'ptr_eq' coerce_tmp[2166380] nil[44]))
    if call_tmp[2166387]
    {
      (2166397 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1471138 'move' _locale_tmp_[1471133] coerce_tmp[2166373])
    (1471084 'move' call_tmp[1471082](1471086 '_wide_get_locale' _locale_tmp_[1471133]))
    (1471088 'move' tmp[1471072] call_tmp[1471082])
    val isdirect[2097288]:bool[10] "temp"
    (2097293 'move' isdirect[2097288](2097290 call chpl_doDirectExecuteOn[187423] tmp[1471072]))
    if isdirect[2097288]
    {
      (2097297 call on_fn[1471095] this[1471066])
    }
    {
      val _args_foron_fn[2097312]:_class_localson_fn[2097304] "temp"
      (2097316 'move' _args_foron_fn[2097312](2097314 'stack allocate class' _class_localson_fn[2097304]))
      (2097318 '.=' _args_foron_fn[2097312] _0_tmp[2097307] tmp[1471072])
      ref tmp[2097322]:channel(false,dynamic,true)[985627] "temp"
      (2097326 'move' tmp[2097322](2097324 'set reference' this[1471066]))
      (2097328 '.=' _args_foron_fn[2097312] _1_this[2097309] tmp[2097322])
      val _args_vforon_fn[2097332]:c_void_ptr[149] "temp"
      (2097336 'move' _args_vforon_fn[2097332](2097334 'cast_to_void_star' _args_foron_fn[2097312]))
      val _args_sizeon_fn[2097338]:int(64)[13] "temp"
      (2097342 'move' _args_sizeon_fn[2097338](2097340 'sizeof_bundle' _class_localson_fn[2097304]))
      on(2097374 call wrapon_fn[2097344] tmp[1471072] _args_vforon_fn[2097332] _args_sizeon_fn[2097338] _args_foron_fn[2097312])
    }
    label _enddeinit[1815895]
    const-ref _field_destructor_tmp_[1815893]:locale[28] "temp"
    (1815900 'move' _field_destructor_tmp_[1815893](1815897 '.' this[1471066] _readWriteThisFromLocale[985624]))
    (1815902 call deinit[90185] _field_destructor_tmp_[1815893])
    const-ref _field_destructor_tmp_[1815905]:locale[28] "temp"
    (1815910 'move' _field_destructor_tmp_[1815905](1815907 '.' this[1471066] home[985615]))
    (1815912 call deinit[90185] _field_destructor_tmp_[1815905])
    (1471129 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].deinit[1534039](ref arg this[1534045]:channel(true,dynamic,true)[1021825]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1534051]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1534053]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228123]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228125 'move' call_tmp[2228123](2228127 '.' this[1534045] home[1021813]))
    (1534055 'move' call_tmp[1534053] call_tmp[2228123])
    const-val call_tmp[1534061]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1534112]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166403]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166405 'move' coerce_tmp[2166403](2166407 '.v' call_tmp[1534053] _instance[89975]))
    val coerce_tmp[2166410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166412 'move' coerce_tmp[2166410](2166414 'cast' object[22] coerce_tmp[2166403]))
    const-val call_tmp[2166417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166419 'move' call_tmp[2166417](2166421 'ptr_eq' coerce_tmp[2166410] nil[44]))
    if call_tmp[2166417]
    {
      (2166427 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1534117 'move' _locale_tmp_[1534112] coerce_tmp[2166403])
    (1534063 'move' call_tmp[1534061](1534065 '_wide_get_locale' _locale_tmp_[1534112]))
    (1534067 'move' tmp[1534051] call_tmp[1534061])
    val isdirect[2099079]:bool[10] "temp"
    (2099084 'move' isdirect[2099079](2099081 call chpl_doDirectExecuteOn[187423] tmp[1534051]))
    if isdirect[2099079]
    {
      (2099088 call on_fn[1534074] this[1534045])
    }
    {
      val _args_foron_fn[2099103]:_class_localson_fn[2099095] "temp"
      (2099107 'move' _args_foron_fn[2099103](2099105 'stack allocate class' _class_localson_fn[2099095]))
      (2099109 '.=' _args_foron_fn[2099103] _0_tmp[2099098] tmp[1534051])
      ref tmp[2099113]:channel(true,dynamic,true)[1021825] "temp"
      (2099117 'move' tmp[2099113](2099115 'set reference' this[1534045]))
      (2099119 '.=' _args_foron_fn[2099103] _1_this[2099100] tmp[2099113])
      val _args_vforon_fn[2099123]:c_void_ptr[149] "temp"
      (2099127 'move' _args_vforon_fn[2099123](2099125 'cast_to_void_star' _args_foron_fn[2099103]))
      val _args_sizeon_fn[2099129]:int(64)[13] "temp"
      (2099133 'move' _args_sizeon_fn[2099129](2099131 'sizeof_bundle' _class_localson_fn[2099095]))
      on(2099165 call wrapon_fn[2099135] tmp[1534051] _args_vforon_fn[2099123] _args_sizeon_fn[2099129] _args_foron_fn[2099103])
    }
    label _enddeinit[1815917]
    const-ref _field_destructor_tmp_[1815915]:locale[28] "temp"
    (1815922 'move' _field_destructor_tmp_[1815915](1815919 '.' this[1534045] _readWriteThisFromLocale[1021822]))
    (1815924 call deinit[90185] _field_destructor_tmp_[1815915])
    const-ref _field_destructor_tmp_[1815927]:locale[28] "temp"
    (1815932 'move' _field_destructor_tmp_[1815927](1815929 '.' this[1534045] home[1021813]))
    (1815934 call deinit[90185] _field_destructor_tmp_[1815927])
    (1534108 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].deinit[1536215](ref arg this[1536221]:channel(true,dynamic,false)[1060947]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1536227]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1536229]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263594]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263596 'move' call_tmp[2263594](2263598 '.' this[1536221] home[1060935]))
    (1536231 'move' call_tmp[1536229] call_tmp[2263594])
    const-val call_tmp[1536237]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1536288]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166433]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166435 'move' coerce_tmp[2166433](2166437 '.v' call_tmp[1536229] _instance[89975]))
    val coerce_tmp[2166440]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166442 'move' coerce_tmp[2166440](2166444 'cast' object[22] coerce_tmp[2166433]))
    const-val call_tmp[2166447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166449 'move' call_tmp[2166447](2166451 'ptr_eq' coerce_tmp[2166440] nil[44]))
    if call_tmp[2166447]
    {
      (2166457 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1536293 'move' _locale_tmp_[1536288] coerce_tmp[2166433])
    (1536239 'move' call_tmp[1536237](1536241 '_wide_get_locale' _locale_tmp_[1536288]))
    (1536243 'move' tmp[1536227] call_tmp[1536237])
    val isdirect[2099255]:bool[10] "temp"
    (2099260 'move' isdirect[2099255](2099257 call chpl_doDirectExecuteOn[187423] tmp[1536227]))
    if isdirect[2099255]
    {
      (2099264 call on_fn[1536250] this[1536221])
    }
    {
      val _args_foron_fn[2099279]:_class_localson_fn[2099271] "temp"
      (2099283 'move' _args_foron_fn[2099279](2099281 'stack allocate class' _class_localson_fn[2099271]))
      (2099285 '.=' _args_foron_fn[2099279] _0_tmp[2099274] tmp[1536227])
      ref tmp[2099289]:channel(true,dynamic,false)[1060947] "temp"
      (2099293 'move' tmp[2099289](2099291 'set reference' this[1536221]))
      (2099295 '.=' _args_foron_fn[2099279] _1_this[2099276] tmp[2099289])
      val _args_vforon_fn[2099299]:c_void_ptr[149] "temp"
      (2099303 'move' _args_vforon_fn[2099299](2099301 'cast_to_void_star' _args_foron_fn[2099279]))
      val _args_sizeon_fn[2099305]:int(64)[13] "temp"
      (2099309 'move' _args_sizeon_fn[2099305](2099307 'sizeof_bundle' _class_localson_fn[2099271]))
      on(2099341 call wrapon_fn[2099311] tmp[1536227] _args_vforon_fn[2099299] _args_sizeon_fn[2099305] _args_foron_fn[2099279])
    }
    label _enddeinit[1815951]
    const-ref _field_destructor_tmp_[1815949]:locale[28] "temp"
    (1815956 'move' _field_destructor_tmp_[1815949](1815953 '.' this[1536221] _readWriteThisFromLocale[1060944]))
    (1815958 call deinit[90185] _field_destructor_tmp_[1815949])
    const-ref _field_destructor_tmp_[1815961]:locale[28] "temp"
    (1815966 'move' _field_destructor_tmp_[1815961](1815963 '.' this[1536221] home[1060935]))
    (1815968 call deinit[90185] _field_destructor_tmp_[1815961])
    (1536284 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].deinit[1540469](ref arg this[1540475]:channel(false,dynamic,false)[1080682]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1540481]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1540483]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270009]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270011 'move' call_tmp[2270009](2270013 '.' this[1540475] home[1080670]))
    (1540485 'move' call_tmp[1540483] call_tmp[2270009])
    const-val call_tmp[1540491]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1540542]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166463]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166465 'move' coerce_tmp[2166463](2166467 '.v' call_tmp[1540483] _instance[89975]))
    val coerce_tmp[2166470]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166472 'move' coerce_tmp[2166470](2166474 'cast' object[22] coerce_tmp[2166463]))
    const-val call_tmp[2166477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166479 'move' call_tmp[2166477](2166481 'ptr_eq' coerce_tmp[2166470] nil[44]))
    if call_tmp[2166477]
    {
      (2166487 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1540547 'move' _locale_tmp_[1540542] coerce_tmp[2166463])
    (1540493 'move' call_tmp[1540491](1540495 '_wide_get_locale' _locale_tmp_[1540542]))
    (1540497 'move' tmp[1540481] call_tmp[1540491])
    val isdirect[2099516]:bool[10] "temp"
    (2099521 'move' isdirect[2099516](2099518 call chpl_doDirectExecuteOn[187423] tmp[1540481]))
    if isdirect[2099516]
    {
      (2099525 call on_fn[1540504] this[1540475])
    }
    {
      val _args_foron_fn[2099540]:_class_localson_fn[2099532] "temp"
      (2099544 'move' _args_foron_fn[2099540](2099542 'stack allocate class' _class_localson_fn[2099532]))
      (2099546 '.=' _args_foron_fn[2099540] _0_tmp[2099535] tmp[1540481])
      ref tmp[2099550]:channel(false,dynamic,false)[1080682] "temp"
      (2099554 'move' tmp[2099550](2099552 'set reference' this[1540475]))
      (2099556 '.=' _args_foron_fn[2099540] _1_this[2099537] tmp[2099550])
      val _args_vforon_fn[2099560]:c_void_ptr[149] "temp"
      (2099564 'move' _args_vforon_fn[2099560](2099562 'cast_to_void_star' _args_foron_fn[2099540]))
      val _args_sizeon_fn[2099566]:int(64)[13] "temp"
      (2099570 'move' _args_sizeon_fn[2099566](2099568 'sizeof_bundle' _class_localson_fn[2099532]))
      on(2099602 call wrapon_fn[2099572] tmp[1540481] _args_vforon_fn[2099560] _args_sizeon_fn[2099566] _args_foron_fn[2099540])
    }
    label _enddeinit[1815973]
    const-ref _field_destructor_tmp_[1815971]:locale[28] "temp"
    (1815978 'move' _field_destructor_tmp_[1815971](1815975 '.' this[1540475] _readWriteThisFromLocale[1080679]))
    (1815980 call deinit[90185] _field_destructor_tmp_[1815971])
    const-ref _field_destructor_tmp_[1815983]:locale[28] "temp"
    (1815988 'move' _field_destructor_tmp_[1815983](1815985 '.' this[1540475] home[1080670]))
    (1815990 call deinit[90185] _field_destructor_tmp_[1815983])
    (1540538 return _void[55])
  }
  function ioNewline[238701].init[893669](ref arg this[893672]:ioNewline[238701], in arg skipWhitespaceOnly[893675]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893691 '.=' this[893672] skipWhitespaceOnly[238682] skipWhitespaceOnly[893675])
    (893695 return _void[55])
  }
  type ioNewline[238701] val skipWhitespaceOnly[238682]:bool[10]
  function ioLiteral[238753].init[894798](ref arg this[894801]:ioLiteral[238753], const  ref arg val[894804]:string[26], in arg ignoreWhiteSpace[894817]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_val[1408295]:string[26] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1408298 'move' _formal_tmp_val[1408295] val[894804])
    (894833 '.=' this[894801] val[238728] _formal_tmp_val[1408295])
    (894836 '.=' this[894801] ignoreWhiteSpace[238734] ignoreWhiteSpace[894817])
    (894840 return _void[55])
  }
  type ioLiteral[238753] val val[238728]:string[26] val ignoreWhiteSpace[238734]:bool[10]
  function channel(true,dynamic,false)[1060947]._ch_ioerror[1062865](const  ref arg this[1062871]:channel(true,dynamic,false)[1060947], const in arg error[1062873]:syserr[223584], const  ref arg msg[1062875]:string[26], ref arg error_out[1809879]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1062881]:string[26] "dead at end of block" "insert auto destroy"
    (1062883 'move' path[1062881] "unknown")
    val call_tmp[1062895]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1062902]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062904 'move' offset[1062902] -1)
    const-val tmp[1062909]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1062911]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263484]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263486 'move' call_tmp[2263484](2263488 '.' this[1062871] home[1060935]))
    (1062913 'move' call_tmp[1062911] call_tmp[2263484])
    const-val call_tmp[1062919]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1063071]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165557]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165559 'move' coerce_tmp[2165557](2165561 '.v' call_tmp[1062911] _instance[89975]))
    val coerce_tmp[2165564]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165566 'move' coerce_tmp[2165564](2165568 'cast' object[22] coerce_tmp[2165557]))
    const-val call_tmp[2165571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165573 'move' call_tmp[2165571](2165575 'ptr_eq' coerce_tmp[2165564] nil[44]))
    if call_tmp[2165571]
    {
      (2165581 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1063076 'move' _locale_tmp_[1063071] coerce_tmp[2165557])
    (1062921 'move' call_tmp[1062919](1062923 '_wide_get_locale' _locale_tmp_[1063071]))
    (1062925 'move' tmp[1062909] call_tmp[1062919])
    val error[1809884]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809886 'move' error[1809884] nil[44])
    val isdirect[2089613]:bool[10] "temp"
    (2089618 'move' isdirect[2089613](2089615 call chpl_doDirectExecuteOn[187423] tmp[1062909]))
    if isdirect[2089613]
    {
      (2089622 call on_fn[1062932] this[1062871] path[1062881] offset[1062902] error[1809884])
    }
    {
      val _args_foron_fn[2089646]:_class_localson_fn[2089632] "temp"
      (2089650 'move' _args_foron_fn[2089646](2089648 'stack allocate class' _class_localson_fn[2089632]))
      (2089652 '.=' _args_foron_fn[2089646] _0_tmp[2089635] tmp[1062909])
      ref tmp[2089656]:channel(true,dynamic,false)[1060947] "temp"
      (2089660 'move' tmp[2089656](2089658 'set reference' this[1062871]))
      (2089662 '.=' _args_foron_fn[2089646] _1_this[2089637] tmp[2089656])
      ref tmp[2089666]:string[26] "temp"
      (2089670 'move' tmp[2089666](2089668 'set reference' path[1062881]))
      (2089672 '.=' _args_foron_fn[2089646] _2_path[2089639] tmp[2089666])
      ref tmp[2089676]:int(64)[13] "temp"
      (2089680 'move' tmp[2089676](2089678 'set reference' offset[1062902]))
      (2089682 '.=' _args_foron_fn[2089646] _3_offset[2089641] tmp[2089676])
      ref tmp[2089686]:Error[167938] "temp"
      (2089690 'move' tmp[2089686](2089688 'set reference' error[1809884]))
      (2089692 '.=' _args_foron_fn[2089646] _4_error[2089643] tmp[2089686])
      val _args_vforon_fn[2089696]:c_void_ptr[149] "temp"
      (2089700 'move' _args_vforon_fn[2089696](2089698 'cast_to_void_star' _args_foron_fn[2089646]))
      val _args_sizeon_fn[2089702]:int(64)[13] "temp"
      (2089706 'move' _args_sizeon_fn[2089702](2089704 'sizeof_bundle' _class_localson_fn[2089632]))
      on(2089762 call wrapon_fn[2089708] tmp[1062909] _args_vforon_fn[2089696] _args_sizeon_fn[2089702] _args_foron_fn[2089646])
    }
    val errorExists[2108784]:bool[10] "temp"
    (2108789 'move' errorExists[2108784](2108786 '!=' error[1809884] nil[44]))
    if errorExists[2108784]
    {
      (1809890 '=' error_out[1809879] error[1809884])
      ref i_x[2130873]:string[26] "temp"
      (2130877 'move' i_x[2130873](2130875 'set reference' path[1062881]))
      (2130881 call deinit[30831] i_x[2130873])
      gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
    }
    val error[1809898]:Error[167938] "error variable" "temp"
    (1809907 'move' error[1809898] nil[44])
    (1063055 call ioerror[266141] error[1062873] msg[1062875] path[1062881] offset[1062902] error[1809898])
    val errorExists[2108792]:bool[10] "temp"
    (2108797 'move' errorExists[2108792](2108794 '!=' error[1809898] nil[44]))
    if errorExists[2108792]
    {
      gotoErrorHandling handler[1809899] handler[1809899]
    }
    label handler[1809899]
    const-val shouldHandleError[1809918]:bool[10] "temp"
    val errorExists[2108800]:bool[10] "temp"
    (2108805 'move' errorExists[2108800](2108802 '!=' error[1809898] nil[44]))
    (1809922 'move' shouldHandleError[1809918] errorExists[2108800])
    if shouldHandleError[1809918]
    {
      (1809914 '=' error_out[1809879] error[1809898])
      ref i_x[2130885]:string[26] "temp"
      (2130889 'move' i_x[2130885](2130887 'set reference' path[1062881]))
      (2130893 call deinit[30831] i_x[2130885])
      gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
    }
    ref i_x[2130897]:string[26] "temp"
    (2130901 'move' i_x[2130897](2130899 'set reference' path[1062881]))
    (2130905 call deinit[30831] i_x[2130897])
    label _end_ch_ioerror[1809881]
    (1063064 return _void[55])
  }
  function channel(false,dynamic,false)[1080682]._ch_ioerror[1082549](const  ref arg this[1082555]:channel(false,dynamic,false)[1080682], const in arg error[1082557]:syserr[223584], const  ref arg msg[1082559]:string[26], ref arg error_out[1810675]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082565]:string[26] "dead at end of block" "insert auto destroy"
    (1082567 'move' path[1082565] "unknown")
    val call_tmp[1082579]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1082586]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082588 'move' offset[1082586] -1)
    const-val tmp[1082593]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1082595]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2269989]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269991 'move' call_tmp[2269989](2269993 '.' this[1082555] home[1080670]))
    (1082597 'move' call_tmp[1082595] call_tmp[2269989])
    const-val call_tmp[1082603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082755]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165827]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165829 'move' coerce_tmp[2165827](2165831 '.v' call_tmp[1082595] _instance[89975]))
    val coerce_tmp[2165834]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165836 'move' coerce_tmp[2165834](2165838 'cast' object[22] coerce_tmp[2165827]))
    const-val call_tmp[2165841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165843 'move' call_tmp[2165841](2165845 'ptr_eq' coerce_tmp[2165834] nil[44]))
    if call_tmp[2165841]
    {
      (2165851 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082760 'move' _locale_tmp_[1082755] coerce_tmp[2165827])
    (1082605 'move' call_tmp[1082603](1082607 '_wide_get_locale' _locale_tmp_[1082755]))
    (1082609 'move' tmp[1082593] call_tmp[1082603])
    val error[1810680]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810682 'move' error[1810680] nil[44])
    val rvfDerefTmp[2083930]:channel(false,dynamic,false)[1080682] "temp"
    (2083934 'move' rvfDerefTmp[2083930](2083932 'deref' this[1082555]))
    val isdirect[2090834]:bool[10] "temp"
    (2090839 'move' isdirect[2090834](2090836 call chpl_doDirectExecuteOn[187423] tmp[1082593]))
    if isdirect[2090834]
    {
      (2090843 call on_fn[1082616] rvfDerefTmp[2083930] path[1082565] offset[1082586] error[1810680])
    }
    {
      val _args_foron_fn[2090867]:_class_localson_fn[2090853] "temp"
      (2090871 'move' _args_foron_fn[2090867](2090869 'stack allocate class' _class_localson_fn[2090853]))
      (2090873 '.=' _args_foron_fn[2090867] _0_tmp[2090856] tmp[1082593])
      (2090877 '.=' _args_foron_fn[2090867] _1_rvfDerefTmp[2090858] rvfDerefTmp[2083930])
      ref tmp[2090881]:string[26] "temp"
      (2090885 'move' tmp[2090881](2090883 'set reference' path[1082565]))
      (2090887 '.=' _args_foron_fn[2090867] _2_path[2090860] tmp[2090881])
      ref tmp[2090891]:int(64)[13] "temp"
      (2090895 'move' tmp[2090891](2090893 'set reference' offset[1082586]))
      (2090897 '.=' _args_foron_fn[2090867] _3_offset[2090862] tmp[2090891])
      ref tmp[2090901]:Error[167938] "temp"
      (2090905 'move' tmp[2090901](2090903 'set reference' error[1810680]))
      (2090907 '.=' _args_foron_fn[2090867] _4_error[2090864] tmp[2090901])
      val _args_vforon_fn[2090911]:c_void_ptr[149] "temp"
      (2090915 'move' _args_vforon_fn[2090911](2090913 'cast_to_void_star' _args_foron_fn[2090867]))
      val _args_sizeon_fn[2090917]:int(64)[13] "temp"
      (2090921 'move' _args_sizeon_fn[2090917](2090919 'sizeof_bundle' _class_localson_fn[2090853]))
      on(2090977 call wrapon_fn[2090923] tmp[1082593] _args_vforon_fn[2090911] _args_sizeon_fn[2090917] _args_foron_fn[2090867])
    }
    val errorExists[2109144]:bool[10] "temp"
    (2109149 'move' errorExists[2109144](2109146 '!=' error[1810680] nil[44]))
    if errorExists[2109144]
    {
      (1810686 '=' error_out[1810675] error[1810680])
      ref i_x[2131113]:string[26] "temp"
      (2131117 'move' i_x[2131113](2131115 'set reference' path[1082565]))
      (2131121 call deinit[30831] i_x[2131113])
      gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
    }
    val error[1810694]:Error[167938] "error variable" "temp"
    (1810703 'move' error[1810694] nil[44])
    (1082739 call ioerror[266141] error[1082557] msg[1082559] path[1082565] offset[1082586] error[1810694])
    val errorExists[2109152]:bool[10] "temp"
    (2109157 'move' errorExists[2109152](2109154 '!=' error[1810694] nil[44]))
    if errorExists[2109152]
    {
      gotoErrorHandling handler[1810695] handler[1810695]
    }
    label handler[1810695]
    const-val shouldHandleError[1810714]:bool[10] "temp"
    val errorExists[2109160]:bool[10] "temp"
    (2109165 'move' errorExists[2109160](2109162 '!=' error[1810694] nil[44]))
    (1810718 'move' shouldHandleError[1810714] errorExists[2109160])
    if shouldHandleError[1810714]
    {
      (1810710 '=' error_out[1810675] error[1810694])
      ref i_x[2131125]:string[26] "temp"
      (2131129 'move' i_x[2131125](2131127 'set reference' path[1082565]))
      (2131133 call deinit[30831] i_x[2131125])
      gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
    }
    ref i_x[2131137]:string[26] "temp"
    (2131141 'move' i_x[2131137](2131139 'set reference' path[1082565]))
    (2131145 call deinit[30831] i_x[2131137])
    label _end_ch_ioerror[1810677]
    (1082748 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._ch_ioerror[1393261](const  ref arg this[1393267]:channel(true,dynamic,true)[1021825], const in arg error[1393269]:syserr[223584], const  ref arg msg[1393271]:string[26], ref arg error_out[1812507]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1393277]:string[26] "dead at end of block" "insert auto destroy"
    (1393279 'move' path[1393277] "unknown")
    val call_tmp[1393291]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1393298]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1393300 'move' offset[1393298] -1)
    const-val tmp[1393305]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1393307]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228093]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228095 'move' call_tmp[2228093](2228097 '.' this[1393267] home[1021813]))
    (1393309 'move' call_tmp[1393307] call_tmp[2228093])
    const-val call_tmp[1393315]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1393467]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166073]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166075 'move' coerce_tmp[2166073](2166077 '.v' call_tmp[1393307] _instance[89975]))
    val coerce_tmp[2166080]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166082 'move' coerce_tmp[2166080](2166084 'cast' object[22] coerce_tmp[2166073]))
    const-val call_tmp[2166087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166089 'move' call_tmp[2166087](2166091 'ptr_eq' coerce_tmp[2166080] nil[44]))
    if call_tmp[2166087]
    {
      (2166097 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1393472 'move' _locale_tmp_[1393467] coerce_tmp[2166073])
    (1393317 'move' call_tmp[1393315](1393319 '_wide_get_locale' _locale_tmp_[1393467]))
    (1393321 'move' tmp[1393305] call_tmp[1393315])
    val error[1812512]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1812514 'move' error[1812512] nil[44])
    val rvfDerefTmp[2084359]:channel(true,dynamic,true)[1021825] "temp"
    (2084363 'move' rvfDerefTmp[2084359](2084361 'deref' this[1393267]))
    val isdirect[2094336]:bool[10] "temp"
    (2094341 'move' isdirect[2094336](2094338 call chpl_doDirectExecuteOn[187423] tmp[1393305]))
    if isdirect[2094336]
    {
      (2094345 call on_fn[1393328] rvfDerefTmp[2084359] path[1393277] offset[1393298] error[1812512])
    }
    {
      val _args_foron_fn[2094369]:_class_localson_fn[2094355] "temp"
      (2094373 'move' _args_foron_fn[2094369](2094371 'stack allocate class' _class_localson_fn[2094355]))
      (2094375 '.=' _args_foron_fn[2094369] _0_tmp[2094358] tmp[1393305])
      (2094379 '.=' _args_foron_fn[2094369] _1_rvfDerefTmp[2094360] rvfDerefTmp[2084359])
      ref tmp[2094383]:string[26] "temp"
      (2094387 'move' tmp[2094383](2094385 'set reference' path[1393277]))
      (2094389 '.=' _args_foron_fn[2094369] _2_path[2094362] tmp[2094383])
      ref tmp[2094393]:int(64)[13] "temp"
      (2094397 'move' tmp[2094393](2094395 'set reference' offset[1393298]))
      (2094399 '.=' _args_foron_fn[2094369] _3_offset[2094364] tmp[2094393])
      ref tmp[2094403]:Error[167938] "temp"
      (2094407 'move' tmp[2094403](2094405 'set reference' error[1812512]))
      (2094409 '.=' _args_foron_fn[2094369] _4_error[2094366] tmp[2094403])
      val _args_vforon_fn[2094413]:c_void_ptr[149] "temp"
      (2094417 'move' _args_vforon_fn[2094413](2094415 'cast_to_void_star' _args_foron_fn[2094369]))
      val _args_sizeon_fn[2094419]:int(64)[13] "temp"
      (2094423 'move' _args_sizeon_fn[2094419](2094421 'sizeof_bundle' _class_localson_fn[2094355]))
      on(2094479 call wrapon_fn[2094425] tmp[1393305] _args_vforon_fn[2094413] _args_sizeon_fn[2094419] _args_foron_fn[2094369])
    }
    val errorExists[2110080]:bool[10] "temp"
    (2110085 'move' errorExists[2110080](2110082 '!=' error[1812512] nil[44]))
    if errorExists[2110080]
    {
      (1812518 '=' error_out[1812507] error[1812512])
      ref i_x[2132781]:string[26] "temp"
      (2132785 'move' i_x[2132781](2132783 'set reference' path[1393277]))
      (2132789 call deinit[30831] i_x[2132781])
      gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
    }
    val error[1812526]:Error[167938] "error variable" "temp"
    (1812535 'move' error[1812526] nil[44])
    (1393451 call ioerror[266141] error[1393269] msg[1393271] path[1393277] offset[1393298] error[1812526])
    val errorExists[2110088]:bool[10] "temp"
    (2110093 'move' errorExists[2110088](2110090 '!=' error[1812526] nil[44]))
    if errorExists[2110088]
    {
      gotoErrorHandling handler[1812527] handler[1812527]
    }
    label handler[1812527]
    const-val shouldHandleError[1812546]:bool[10] "temp"
    val errorExists[2110096]:bool[10] "temp"
    (2110101 'move' errorExists[2110096](2110098 '!=' error[1812526] nil[44]))
    (1812550 'move' shouldHandleError[1812546] errorExists[2110096])
    if shouldHandleError[1812546]
    {
      (1812542 '=' error_out[1812507] error[1812526])
      ref i_x[2132793]:string[26] "temp"
      (2132797 'move' i_x[2132793](2132795 'set reference' path[1393277]))
      (2132801 call deinit[30831] i_x[2132793])
      gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
    }
    ref i_x[2132805]:string[26] "temp"
    (2132809 'move' i_x[2132805](2132807 'set reference' path[1393277]))
    (2132813 call deinit[30831] i_x[2132805])
    label _end_ch_ioerror[1812509]
    (1393460 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].offset[1080148](const  ref arg this[1080154]:channel(true,dynamic,false)[1060947]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080160]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080169]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1080171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080299 'move' ret[1080169] 0)
    const-val tmp[1080182]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1080184]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263514]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263516 'move' call_tmp[2263514](2263518 '.' this[1080154] home[1060935]))
    (1080186 'move' call_tmp[1080184] call_tmp[2263514])
    const-val call_tmp[1080192]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1080272]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165647]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165649 'move' coerce_tmp[2165647](2165651 '.v' call_tmp[1080184] _instance[89975]))
    val coerce_tmp[2165654]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165656 'move' coerce_tmp[2165654](2165658 'cast' object[22] coerce_tmp[2165647]))
    const-val call_tmp[2165661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165663 'move' call_tmp[2165661](2165665 'ptr_eq' coerce_tmp[2165654] nil[44]))
    if call_tmp[2165661]
    {
      (2165671 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1080277 'move' _locale_tmp_[1080272] coerce_tmp[2165647])
    (1080194 'move' call_tmp[1080192](1080196 '_wide_get_locale' _locale_tmp_[1080272]))
    (1080198 'move' tmp[1080182] call_tmp[1080192])
    val rvfDerefTmp[2083811]:channel(true,dynamic,false)[1060947] "temp"
    (2083815 'move' rvfDerefTmp[2083811](2083813 'deref' this[1080154]))
    val isdirect[2090051]:bool[10] "temp"
    (2090056 'move' isdirect[2090051](2090053 call chpl_doDirectExecuteOn[187423] tmp[1080182]))
    if isdirect[2090051]
    {
      (2090060 call on_fn[1080205] rvfDerefTmp[2083811] ret[1080169])
    }
    {
      val _args_foron_fn[2090078]:_class_localson_fn[2090068] "temp"
      (2090082 'move' _args_foron_fn[2090078](2090080 'stack allocate class' _class_localson_fn[2090068]))
      (2090084 '.=' _args_foron_fn[2090078] _0_tmp[2090071] tmp[1080182])
      (2090088 '.=' _args_foron_fn[2090078] _1_rvfDerefTmp[2090073] rvfDerefTmp[2083811])
      ref tmp[2090092]:int(64)[13] "temp"
      (2090096 'move' tmp[2090092](2090094 'set reference' ret[1080169]))
      (2090098 '.=' _args_foron_fn[2090078] _2_ret[2090075] tmp[2090092])
      val _args_vforon_fn[2090102]:c_void_ptr[149] "temp"
      (2090106 'move' _args_vforon_fn[2090102](2090104 'cast_to_void_star' _args_foron_fn[2090078]))
      val _args_sizeon_fn[2090108]:int(64)[13] "temp"
      (2090112 'move' _args_sizeon_fn[2090108](2090110 'sizeof_bundle' _class_localson_fn[2090068]))
      on(2090152 call wrapon_fn[2090114] tmp[1080182] _args_vforon_fn[2090102] _args_sizeon_fn[2090108] _args_foron_fn[2090078])
    }
    val call_tmp[1080248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080296 'move' ret[1080160] ret[1080169])
    label _end_offset[1080264]
    (1080266 return ret[1080160])
  }
  function file[235580].reader[1016561](const  ref arg this[1016567]:file[235580], const in arg start[1016587]:int(64)[13], const in arg end[1016604]:int(64)[13], const in arg hints[1016610]:int(32)[95], const  ref arg style[1016617]:iostyle[231844], ref arg error_out[1809179]:Error[167938], ref arg _retArg[1832527]:channel(false,dynamic,true)[985627]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016625]:channel(false,dynamic,true)[985627] "dead after last mention" "RVV" "temp"
    val ret[1016644]:channel(false,dynamic,true)[985627] "dead at end of block" "insert auto destroy"
    val call_tmp[1016646]:channel(false,dynamic,true)[985627] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021741 call init[1017871] ret[1016644])
    const-val call_tmp[1016659]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1016661 'move' call_tmp[1016659] 0)
    val err[1016665]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1017612]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207282]:syserr[223584] "temp"
    (2207286 'move' i_ret[2207282](2207284 'set reference' init_coerce_tmp[1017612]))
    const-val call_tmp[2207289]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207291 'move' call_tmp[2207289](2207294 call qio_int_to_err[223634] call_tmp[1016659]))
    (2207296 '=' i_ret[2207282] call_tmp[2207289])
    (1016667 'move' err[1016665] init_coerce_tmp[1017612])
    const-val tmp[1016672]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1016674]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216331]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216333 'move' call_tmp[2216331](2216335 '.' this[1016567] home[235562]))
    (1016676 'move' call_tmp[1016674] call_tmp[2216331])
    const-val call_tmp[1016682]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017619]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165107]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165109 'move' coerce_tmp[2165107](2165111 '.v' call_tmp[1016674] _instance[89975]))
    val coerce_tmp[2165114]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165116 'move' coerce_tmp[2165114](2165118 'cast' object[22] coerce_tmp[2165107]))
    const-val call_tmp[2165121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165123 'move' call_tmp[2165121](2165125 'ptr_eq' coerce_tmp[2165114] nil[44]))
    if call_tmp[2165121]
    {
      (2165131 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1017624 'move' _locale_tmp_[1017619] coerce_tmp[2165107])
    (1016684 'move' call_tmp[1016682](1016686 '_wide_get_locale' _locale_tmp_[1017619]))
    (1016688 'move' tmp[1016672] call_tmp[1016682])
    val error[1809182]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809184 'move' error[1809182] nil[44])
    val rvfDerefTmp[2083476]:iostyle[231844] "temp"
    (2083480 'move' rvfDerefTmp[2083476](2083478 'deref' style[1016617]))
    val rvfDerefTmp[2083484]:file[235580] "temp"
    (2083488 'move' rvfDerefTmp[2083484](2083486 'deref' this[1016567]))
    val isdirect[2087540]:bool[10] "temp"
    (2087545 'move' isdirect[2087540](2087542 call chpl_doDirectExecuteOn[187423] tmp[1016672]))
    if isdirect[2087540]
    {
      (2087549 call on_fn[1016695] err[1016665] start[1016587] end[1016604] rvfDerefTmp[2083476] rvfDerefTmp[2083484] ret[1016644] hints[1016610] error[1809182])
    }
    {
      val _args_foron_fn[2087585]:_class_localson_fn[2087563] "temp"
      (2087589 'move' _args_foron_fn[2087585](2087587 'stack allocate class' _class_localson_fn[2087563]))
      (2087591 '.=' _args_foron_fn[2087585] _0_tmp[2087566] tmp[1016672])
      ref tmp[2087595]:syserr[223584] "temp"
      (2087599 'move' tmp[2087595](2087597 'set reference' err[1016665]))
      (2087601 '.=' _args_foron_fn[2087585] _1_err[2087568] tmp[2087595])
      (2087605 '.=' _args_foron_fn[2087585] _2_start[2087570] start[1016587])
      (2087609 '.=' _args_foron_fn[2087585] _3_end[2087572] end[1016604])
      (2087613 '.=' _args_foron_fn[2087585] _4_rvfDerefTmp[2087574] rvfDerefTmp[2083476])
      (2087617 '.=' _args_foron_fn[2087585] _5_rvfDerefTmp[2087576] rvfDerefTmp[2083484])
      ref tmp[2087621]:channel(false,dynamic,true)[985627] "temp"
      (2087625 'move' tmp[2087621](2087623 'set reference' ret[1016644]))
      (2087627 '.=' _args_foron_fn[2087585] _6_ret[2087578] tmp[2087621])
      (2087631 '.=' _args_foron_fn[2087585] _7_hints[2087580] hints[1016610])
      ref tmp[2087635]:Error[167938] "temp"
      (2087639 'move' tmp[2087635](2087637 'set reference' error[1809182]))
      (2087641 '.=' _args_foron_fn[2087585] _8_error[2087582] tmp[2087635])
      val _args_vforon_fn[2087645]:c_void_ptr[149] "temp"
      (2087649 'move' _args_vforon_fn[2087645](2087647 'cast_to_void_star' _args_foron_fn[2087585]))
      val _args_sizeon_fn[2087651]:int(64)[13] "temp"
      (2087655 'move' _args_sizeon_fn[2087651](2087653 'sizeof_bundle' _class_localson_fn[2087563]))
      on(2087743 call wrapon_fn[2087657] tmp[1016672] _args_vforon_fn[2087645] _args_sizeon_fn[2087651] _args_foron_fn[2087585])
    }
    val errorExists[2108448]:bool[10] "temp"
    (2108453 'move' errorExists[2108448](2108450 '!=' error[1809182] nil[44]))
    if errorExists[2108448]
    {
      (1809188 '=' error_out[1809179] error[1809182])
      ref i_x[2328940]:channel(false,dynamic,true)[985627] "temp"
      (2328944 'move' i_x[2328940](2328942 'set reference' ret[1016644]))
      (2328948 call deinit[1471060] i_x[2328940])
      gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
    }
    const-val call_tmp[1016734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206671]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206673 'move' call_tmp[2206671](2206676 call qio_err_iserr[223646] err[1016665]))
    const-val call_tmp[2206678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206680 'move' call_tmp[2206678](2206682 '!=' call_tmp[2206671] 0))
    (1016736 'move' call_tmp[1016734] call_tmp[2206678])
    if call_tmp[1016734]
    {
      val error[1809196]:Error[167938] "error variable" "temp"
      (1809205 'move' error[1809196] nil[44])
      const-val call_tmp[1016744]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831437]:string[26] "temp"
      (1016752 call tryGetPath[236364] this[1016567] ret_tmp[1831437])
      (1831440 'move' call_tmp[1016744] ret_tmp[1831437])
      (1016754 call ioerror[266250] err[1016665] "in file.reader" call_tmp[1016744] error[1809196])
      val errorExists[2108456]:bool[10] "temp"
      (2108461 'move' errorExists[2108456](2108458 '!=' error[1809196] nil[44]))
      if errorExists[2108456]
      {
        ref i_x[2130429]:string[26] "temp"
        (2130433 'move' i_x[2130429](2130431 'set reference' call_tmp[1016744]))
        (2130437 call deinit[30831] i_x[2130429])
        gotoErrorHandling handler[1809197] handler[1809197]
      }
      ref i_x[2130441]:string[26] "temp"
      (2130445 'move' i_x[2130441](2130443 'set reference' call_tmp[1016744]))
      (2130449 call deinit[30831] i_x[2130441])
      label handler[1809197]
      const-val shouldHandleError[1809216]:bool[10] "temp"
      val errorExists[2108464]:bool[10] "temp"
      (2108469 'move' errorExists[2108464](2108466 '!=' error[1809196] nil[44]))
      (1809220 'move' shouldHandleError[1809216] errorExists[2108464])
      if shouldHandleError[1809216]
      {
        (1809212 '=' error_out[1809179] error[1809196])
        ref i_x[2328952]:channel(false,dynamic,true)[985627] "temp"
        (2328956 'move' i_x[2328952](2328954 'set reference' ret[1016644]))
        (2328960 call deinit[1471060] i_x[2328952])
        gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
      }
    }
    val call_tmp[1016762]:channel(false,dynamic,true)[985627] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021737 'move' ret[1016625] ret[1016644])
    label _end_reader[1016780]
    (1832529 '=' _retArg[1832527] ret[1016625])
    (1832531 return _void[55])
  }
  function file[235580].reader[1080588](const  ref arg this[1080594]:file[235580], const in arg start[1080614]:int(64)[13], const in arg end[1080631]:int(64)[13], const in arg hints[1080637]:int(32)[95], const  ref arg style[1080644]:iostyle[231844], ref arg error_out[1810522]:Error[167938], ref arg _retArg[1833443]:channel(false,dynamic,false)[1080682]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080652]:channel(false,dynamic,false)[1080682] "dead after last mention" "RVV" "temp"
    val ret[1080706]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    val call_tmp[1080708]:channel(false,dynamic,false)[1080682] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082083 call init[1081352] ret[1080706])
    const-val call_tmp[1080721]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1080723 'move' call_tmp[1080721] 0)
    val err[1080727]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1081093]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207434]:syserr[223584] "temp"
    (2207438 'move' i_ret[2207434](2207436 'set reference' init_coerce_tmp[1081093]))
    const-val call_tmp[2207441]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207443 'move' call_tmp[2207441](2207446 call qio_int_to_err[223634] call_tmp[1080721]))
    (2207448 '=' i_ret[2207434] call_tmp[2207441])
    (1080729 'move' err[1080727] init_coerce_tmp[1081093])
    const-val tmp[1080734]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1080736]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216443]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216445 'move' call_tmp[2216443](2216447 '.' this[1080594] home[235562]))
    (1080738 'move' call_tmp[1080736] call_tmp[2216443])
    const-val call_tmp[1080744]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081100]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165677]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165679 'move' coerce_tmp[2165677](2165681 '.v' call_tmp[1080736] _instance[89975]))
    val coerce_tmp[2165684]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165686 'move' coerce_tmp[2165684](2165688 'cast' object[22] coerce_tmp[2165677]))
    const-val call_tmp[2165691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165693 'move' call_tmp[2165691](2165695 'ptr_eq' coerce_tmp[2165684] nil[44]))
    if call_tmp[2165691]
    {
      (2165701 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1081105 'move' _locale_tmp_[1081100] coerce_tmp[2165677])
    (1080746 'move' call_tmp[1080744](1080748 '_wide_get_locale' _locale_tmp_[1081100]))
    (1080750 'move' tmp[1080734] call_tmp[1080744])
    val error[1810525]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810527 'move' error[1810525] nil[44])
    val rvfDerefTmp[2083839]:iostyle[231844] "temp"
    (2083843 'move' rvfDerefTmp[2083839](2083841 'deref' style[1080644]))
    val rvfDerefTmp[2083847]:file[235580] "temp"
    (2083851 'move' rvfDerefTmp[2083847](2083849 'deref' this[1080594]))
    val isdirect[2090157]:bool[10] "temp"
    (2090162 'move' isdirect[2090157](2090159 call chpl_doDirectExecuteOn[187423] tmp[1080734]))
    if isdirect[2090157]
    {
      (2090166 call on_fn[1080757] start[1080614] ret[1080706] rvfDerefTmp[2083839] end[1080631] rvfDerefTmp[2083847] err[1080727] hints[1080637] error[1810525])
    }
    {
      val _args_foron_fn[2090202]:_class_localson_fn[2090180] "temp"
      (2090206 'move' _args_foron_fn[2090202](2090204 'stack allocate class' _class_localson_fn[2090180]))
      (2090208 '.=' _args_foron_fn[2090202] _0_tmp[2090183] tmp[1080734])
      (2090212 '.=' _args_foron_fn[2090202] _1_start[2090185] start[1080614])
      ref tmp[2090216]:channel(false,dynamic,false)[1080682] "temp"
      (2090220 'move' tmp[2090216](2090218 'set reference' ret[1080706]))
      (2090222 '.=' _args_foron_fn[2090202] _2_ret[2090187] tmp[2090216])
      (2090226 '.=' _args_foron_fn[2090202] _3_rvfDerefTmp[2090189] rvfDerefTmp[2083839])
      (2090230 '.=' _args_foron_fn[2090202] _4_end[2090191] end[1080631])
      (2090234 '.=' _args_foron_fn[2090202] _5_rvfDerefTmp[2090193] rvfDerefTmp[2083847])
      ref tmp[2090238]:syserr[223584] "temp"
      (2090242 'move' tmp[2090238](2090240 'set reference' err[1080727]))
      (2090244 '.=' _args_foron_fn[2090202] _6_err[2090195] tmp[2090238])
      (2090248 '.=' _args_foron_fn[2090202] _7_hints[2090197] hints[1080637])
      ref tmp[2090252]:Error[167938] "temp"
      (2090256 'move' tmp[2090252](2090254 'set reference' error[1810525]))
      (2090258 '.=' _args_foron_fn[2090202] _8_error[2090199] tmp[2090252])
      val _args_vforon_fn[2090262]:c_void_ptr[149] "temp"
      (2090266 'move' _args_vforon_fn[2090262](2090264 'cast_to_void_star' _args_foron_fn[2090202]))
      val _args_sizeon_fn[2090268]:int(64)[13] "temp"
      (2090272 'move' _args_sizeon_fn[2090268](2090270 'sizeof_bundle' _class_localson_fn[2090180]))
      on(2090360 call wrapon_fn[2090274] tmp[1080734] _args_vforon_fn[2090262] _args_sizeon_fn[2090268] _args_foron_fn[2090202])
    }
    val errorExists[2109080]:bool[10] "temp"
    (2109085 'move' errorExists[2109080](2109082 '!=' error[1810525] nil[44]))
    if errorExists[2109080]
    {
      (1810531 '=' error_out[1810522] error[1810525])
      ref i_x[2331620]:channel(false,dynamic,false)[1080682] "temp"
      (2331624 'move' i_x[2331620](2331622 'set reference' ret[1080706]))
      (2331628 call deinit[1540469] i_x[2331620])
      gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
    }
    const-val call_tmp[1080796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206875]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206877 'move' call_tmp[2206875](2206880 call qio_err_iserr[223646] err[1080727]))
    const-val call_tmp[2206882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206884 'move' call_tmp[2206882](2206886 '!=' call_tmp[2206875] 0))
    (1080798 'move' call_tmp[1080796] call_tmp[2206882])
    if call_tmp[1080796]
    {
      val error[1810539]:Error[167938] "error variable" "temp"
      (1810548 'move' error[1810539] nil[44])
      const-val call_tmp[1080806]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831455]:string[26] "temp"
      (1080814 call tryGetPath[236364] this[1080594] ret_tmp[1831455])
      (1831458 'move' call_tmp[1080806] ret_tmp[1831455])
      (1080816 call ioerror[266250] err[1080727] "in file.reader" call_tmp[1080806] error[1810539])
      val errorExists[2109088]:bool[10] "temp"
      (2109093 'move' errorExists[2109088](2109090 '!=' error[1810539] nil[44]))
      if errorExists[2109088]
      {
        ref i_x[2131089]:string[26] "temp"
        (2131093 'move' i_x[2131089](2131091 'set reference' call_tmp[1080806]))
        (2131097 call deinit[30831] i_x[2131089])
        gotoErrorHandling handler[1810540] handler[1810540]
      }
      ref i_x[2131101]:string[26] "temp"
      (2131105 'move' i_x[2131101](2131103 'set reference' call_tmp[1080806]))
      (2131109 call deinit[30831] i_x[2131101])
      label handler[1810540]
      const-val shouldHandleError[1810559]:bool[10] "temp"
      val errorExists[2109096]:bool[10] "temp"
      (2109101 'move' errorExists[2109096](2109098 '!=' error[1810539] nil[44]))
      (1810563 'move' shouldHandleError[1810559] errorExists[2109096])
      if shouldHandleError[1810559]
      {
        (1810555 '=' error_out[1810522] error[1810539])
        ref i_x[2331632]:channel(false,dynamic,false)[1080682] "temp"
        (2331636 'move' i_x[2331632](2331634 'set reference' ret[1080706]))
        (2331640 call deinit[1540469] i_x[2331632])
        gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
      }
    }
    val call_tmp[1080824]:channel(false,dynamic,false)[1080682] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082079 'move' ret[1080652] ret[1080706])
    label _end_reader[1080842]
    (1833445 '=' _retArg[1833443] ret[1080652])
    (1833447 return _void[55])
  }
  function file[235580].writer[1022136](const  ref arg this[1022142]:file[235580], const in arg start[1022162]:int(64)[13], const in arg end[1022179]:int(64)[13], const in arg hints[1022185]:int(32)[95], const  ref arg style[1022192]:iostyle[231844], ref arg error_out[1809295]:Error[167938], ref arg _retArg[1832593]:channel(true,dynamic,true)[1021825]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022200]:channel(true,dynamic,true)[1021825] "dead after last mention" "RVV" "temp"
    val ret[1022219]:channel(true,dynamic,true)[1021825] "dead at end of block" "insert auto destroy"
    val call_tmp[1022221]:channel(true,dynamic,true)[1021825] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023829 call init[1022907] ret[1022219])
    const-val call_tmp[1022234]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1022236 'move' call_tmp[1022234] 0)
    val err[1022240]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1022648]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207301]:syserr[223584] "temp"
    (2207305 'move' i_ret[2207301](2207303 'set reference' init_coerce_tmp[1022648]))
    const-val call_tmp[2207308]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207310 'move' call_tmp[2207308](2207313 call qio_int_to_err[223634] call_tmp[1022234]))
    (2207315 '=' i_ret[2207301] call_tmp[2207308])
    (1022242 'move' err[1022240] init_coerce_tmp[1022648])
    const-val tmp[1022247]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1022249]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216377]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216379 'move' call_tmp[2216377](2216381 '.' this[1022142] home[235562]))
    (1022251 'move' call_tmp[1022249] call_tmp[2216377])
    const-val call_tmp[1022257]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022655]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165257]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165259 'move' coerce_tmp[2165257](2165261 '.v' call_tmp[1022249] _instance[89975]))
    val coerce_tmp[2165264]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165266 'move' coerce_tmp[2165264](2165268 'cast' object[22] coerce_tmp[2165257]))
    const-val call_tmp[2165271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165273 'move' call_tmp[2165271](2165275 'ptr_eq' coerce_tmp[2165264] nil[44]))
    if call_tmp[2165271]
    {
      (2165281 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1022660 'move' _locale_tmp_[1022655] coerce_tmp[2165257])
    (1022259 'move' call_tmp[1022257](1022261 '_wide_get_locale' _locale_tmp_[1022655]))
    (1022263 'move' tmp[1022247] call_tmp[1022257])
    val error[1809298]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809300 'move' error[1809298] nil[44])
    val rvfDerefTmp[2083553]:iostyle[231844] "temp"
    (2083557 'move' rvfDerefTmp[2083553](2083555 'deref' style[1022192]))
    val rvfDerefTmp[2083561]:file[235580] "temp"
    (2083565 'move' rvfDerefTmp[2083561](2083563 'deref' this[1022142]))
    val isdirect[2088223]:bool[10] "temp"
    (2088228 'move' isdirect[2088223](2088225 call chpl_doDirectExecuteOn[187423] tmp[1022247]))
    if isdirect[2088223]
    {
      (2088232 call on_fn[1022270] end[1022179] rvfDerefTmp[2083553] rvfDerefTmp[2083561] ret[1022219] hints[1022185] start[1022162] err[1022240] error[1809298])
    }
    {
      val _args_foron_fn[2088268]:_class_localson_fn[2088246] "temp"
      (2088272 'move' _args_foron_fn[2088268](2088270 'stack allocate class' _class_localson_fn[2088246]))
      (2088274 '.=' _args_foron_fn[2088268] _0_tmp[2088249] tmp[1022247])
      (2088278 '.=' _args_foron_fn[2088268] _1_end[2088251] end[1022179])
      (2088282 '.=' _args_foron_fn[2088268] _2_rvfDerefTmp[2088253] rvfDerefTmp[2083553])
      (2088286 '.=' _args_foron_fn[2088268] _3_rvfDerefTmp[2088255] rvfDerefTmp[2083561])
      ref tmp[2088290]:channel(true,dynamic,true)[1021825] "temp"
      (2088294 'move' tmp[2088290](2088292 'set reference' ret[1022219]))
      (2088296 '.=' _args_foron_fn[2088268] _4_ret[2088257] tmp[2088290])
      (2088300 '.=' _args_foron_fn[2088268] _5_hints[2088259] hints[1022185])
      (2088304 '.=' _args_foron_fn[2088268] _6_start[2088261] start[1022162])
      ref tmp[2088308]:syserr[223584] "temp"
      (2088312 'move' tmp[2088308](2088310 'set reference' err[1022240]))
      (2088314 '.=' _args_foron_fn[2088268] _7_err[2088263] tmp[2088308])
      ref tmp[2088318]:Error[167938] "temp"
      (2088322 'move' tmp[2088318](2088320 'set reference' error[1809298]))
      (2088324 '.=' _args_foron_fn[2088268] _8_error[2088265] tmp[2088318])
      val _args_vforon_fn[2088328]:c_void_ptr[149] "temp"
      (2088332 'move' _args_vforon_fn[2088328](2088330 'cast_to_void_star' _args_foron_fn[2088268]))
      val _args_sizeon_fn[2088334]:int(64)[13] "temp"
      (2088338 'move' _args_sizeon_fn[2088334](2088336 'sizeof_bundle' _class_localson_fn[2088246]))
      on(2088426 call wrapon_fn[2088340] tmp[1022247] _args_vforon_fn[2088328] _args_sizeon_fn[2088334] _args_foron_fn[2088268])
    }
    val errorExists[2108496]:bool[10] "temp"
    (2108501 'move' errorExists[2108496](2108498 '!=' error[1809298] nil[44]))
    if errorExists[2108496]
    {
      (1809304 '=' error_out[1809295] error[1809298])
      ref i_x[2331383]:channel(true,dynamic,true)[1021825] "temp"
      (2331387 'move' i_x[2331383](2331385 'set reference' ret[1022219]))
      (2331391 call deinit[1534039] i_x[2331383])
      gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
    }
    const-val call_tmp[1022309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206756]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206758 'move' call_tmp[2206756](2206761 call qio_err_iserr[223646] err[1022240]))
    const-val call_tmp[2206763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206765 'move' call_tmp[2206763](2206767 '!=' call_tmp[2206756] 0))
    (1022311 'move' call_tmp[1022309] call_tmp[2206763])
    if call_tmp[1022309]
    {
      val error[1809312]:Error[167938] "error variable" "temp"
      (1809321 'move' error[1809312] nil[44])
      const-val call_tmp[1022319]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831443]:string[26] "temp"
      (1022327 call tryGetPath[236364] this[1022142] ret_tmp[1831443])
      (1831446 'move' call_tmp[1022319] ret_tmp[1831443])
      (1022329 call ioerror[266250] err[1022240] "in file.writer" call_tmp[1022319] error[1809312])
      val errorExists[2108504]:bool[10] "temp"
      (2108509 'move' errorExists[2108504](2108506 '!=' error[1809312] nil[44]))
      if errorExists[2108504]
      {
        ref i_x[2130453]:string[26] "temp"
        (2130457 'move' i_x[2130453](2130455 'set reference' call_tmp[1022319]))
        (2130461 call deinit[30831] i_x[2130453])
        gotoErrorHandling handler[1809313] handler[1809313]
      }
      ref i_x[2130465]:string[26] "temp"
      (2130469 'move' i_x[2130465](2130467 'set reference' call_tmp[1022319]))
      (2130473 call deinit[30831] i_x[2130465])
      label handler[1809313]
      const-val shouldHandleError[1809332]:bool[10] "temp"
      val errorExists[2108512]:bool[10] "temp"
      (2108517 'move' errorExists[2108512](2108514 '!=' error[1809312] nil[44]))
      (1809336 'move' shouldHandleError[1809332] errorExists[2108512])
      if shouldHandleError[1809332]
      {
        (1809328 '=' error_out[1809295] error[1809312])
        ref i_x[2331395]:channel(true,dynamic,true)[1021825] "temp"
        (2331399 'move' i_x[2331395](2331397 'set reference' ret[1022219]))
        (2331403 call deinit[1534039] i_x[2331395])
        gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
      }
    }
    val call_tmp[1022337]:channel(true,dynamic,true)[1021825] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023825 'move' ret[1022200] ret[1022219])
    label _end_writer[1022355]
    (1832595 '=' _retArg[1832593] ret[1022200])
    (1832597 return _void[55])
  }
  function file[235580].writer[1060853](const  ref arg this[1060859]:file[235580], const in arg start[1060879]:int(64)[13], const in arg end[1060896]:int(64)[13], const in arg hints[1060902]:int(32)[95], const  ref arg style[1060909]:iostyle[231844], ref arg error_out[1809726]:Error[167938], ref arg _retArg[1833041]:channel(true,dynamic,false)[1060947]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1060917]:channel(true,dynamic,false)[1060947] "dead after last mention" "RVV" "temp"
    val ret[1060971]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    val call_tmp[1060973]:channel(true,dynamic,false)[1060947] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062351 call init[1061620] ret[1060971])
    const-val call_tmp[1060986]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1060988 'move' call_tmp[1060986] 0)
    val err[1060992]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061361]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207339]:syserr[223584] "temp"
    (2207343 'move' i_ret[2207339](2207341 'set reference' init_coerce_tmp[1061361]))
    const-val call_tmp[2207346]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207348 'move' call_tmp[2207346](2207351 call qio_int_to_err[223634] call_tmp[1060986]))
    (2207353 '=' i_ret[2207339] call_tmp[2207346])
    (1060994 'move' err[1060992] init_coerce_tmp[1061361])
    const-val tmp[1060999]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1061001]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216423]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216425 'move' call_tmp[2216423](2216427 '.' this[1060859] home[235562]))
    (1061003 'move' call_tmp[1061001] call_tmp[2216423])
    const-val call_tmp[1061009]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061368]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165407]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165409 'move' coerce_tmp[2165407](2165411 '.v' call_tmp[1061001] _instance[89975]))
    val coerce_tmp[2165414]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165416 'move' coerce_tmp[2165414](2165418 'cast' object[22] coerce_tmp[2165407]))
    const-val call_tmp[2165421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165423 'move' call_tmp[2165421](2165425 'ptr_eq' coerce_tmp[2165414] nil[44]))
    if call_tmp[2165421]
    {
      (2165431 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1061373 'move' _locale_tmp_[1061368] coerce_tmp[2165407])
    (1061011 'move' call_tmp[1061009](1061013 '_wide_get_locale' _locale_tmp_[1061368]))
    (1061015 'move' tmp[1060999] call_tmp[1061009])
    val error[1809729]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809731 'move' error[1809729] nil[44])
    val rvfDerefTmp[2083661]:iostyle[231844] "temp"
    (2083665 'move' rvfDerefTmp[2083661](2083663 'deref' style[1060909]))
    val rvfDerefTmp[2083669]:file[235580] "temp"
    (2083673 'move' rvfDerefTmp[2083669](2083671 'deref' this[1060859]))
    val isdirect[2088936]:bool[10] "temp"
    (2088941 'move' isdirect[2088936](2088938 call chpl_doDirectExecuteOn[187423] tmp[1060999]))
    if isdirect[2088936]
    {
      (2088945 call on_fn[1061022] start[1060879] ret[1060971] end[1060896] rvfDerefTmp[2083661] rvfDerefTmp[2083669] err[1060992] hints[1060902] error[1809729])
    }
    {
      val _args_foron_fn[2088981]:_class_localson_fn[2088959] "temp"
      (2088985 'move' _args_foron_fn[2088981](2088983 'stack allocate class' _class_localson_fn[2088959]))
      (2088987 '.=' _args_foron_fn[2088981] _0_tmp[2088962] tmp[1060999])
      (2088991 '.=' _args_foron_fn[2088981] _1_start[2088964] start[1060879])
      ref tmp[2088995]:channel(true,dynamic,false)[1060947] "temp"
      (2088999 'move' tmp[2088995](2088997 'set reference' ret[1060971]))
      (2089001 '.=' _args_foron_fn[2088981] _2_ret[2088966] tmp[2088995])
      (2089005 '.=' _args_foron_fn[2088981] _3_end[2088968] end[1060896])
      (2089009 '.=' _args_foron_fn[2088981] _4_rvfDerefTmp[2088970] rvfDerefTmp[2083661])
      (2089013 '.=' _args_foron_fn[2088981] _5_rvfDerefTmp[2088972] rvfDerefTmp[2083669])
      ref tmp[2089017]:syserr[223584] "temp"
      (2089021 'move' tmp[2089017](2089019 'set reference' err[1060992]))
      (2089023 '.=' _args_foron_fn[2088981] _6_err[2088974] tmp[2089017])
      (2089027 '.=' _args_foron_fn[2088981] _7_hints[2088976] hints[1060902])
      ref tmp[2089031]:Error[167938] "temp"
      (2089035 'move' tmp[2089031](2089033 'set reference' error[1809729]))
      (2089037 '.=' _args_foron_fn[2088981] _8_error[2088978] tmp[2089031])
      val _args_vforon_fn[2089041]:c_void_ptr[149] "temp"
      (2089045 'move' _args_vforon_fn[2089041](2089043 'cast_to_void_star' _args_foron_fn[2088981]))
      val _args_sizeon_fn[2089047]:int(64)[13] "temp"
      (2089051 'move' _args_sizeon_fn[2089047](2089049 'sizeof_bundle' _class_localson_fn[2088959]))
      on(2089139 call wrapon_fn[2089053] tmp[1060999] _args_vforon_fn[2089041] _args_sizeon_fn[2089047] _args_foron_fn[2088981])
    }
    val errorExists[2108720]:bool[10] "temp"
    (2108725 'move' errorExists[2108720](2108722 '!=' error[1809729] nil[44]))
    if errorExists[2108720]
    {
      (1809735 '=' error_out[1809726] error[1809729])
      ref i_x[2268154]:channel(true,dynamic,false)[1060947] "temp"
      (2268158 'move' i_x[2268154](2268156 'set reference' ret[1060971]))
      (2268162 call deinit[1536215] i_x[2268154])
      gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
    }
    const-val call_tmp[1061061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206807]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206809 'move' call_tmp[2206807](2206812 call qio_err_iserr[223646] err[1060992]))
    const-val call_tmp[2206814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206816 'move' call_tmp[2206814](2206818 '!=' call_tmp[2206807] 0))
    (1061063 'move' call_tmp[1061061] call_tmp[2206814])
    if call_tmp[1061061]
    {
      val error[1809743]:Error[167938] "error variable" "temp"
      (1809752 'move' error[1809743] nil[44])
      const-val call_tmp[1061071]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831449]:string[26] "temp"
      (1061079 call tryGetPath[236364] this[1060859] ret_tmp[1831449])
      (1831452 'move' call_tmp[1061071] ret_tmp[1831449])
      (1061081 call ioerror[266250] err[1060992] "in file.writer" call_tmp[1061071] error[1809743])
      val errorExists[2108728]:bool[10] "temp"
      (2108733 'move' errorExists[2108728](2108730 '!=' error[1809743] nil[44]))
      if errorExists[2108728]
      {
        ref i_x[2130849]:string[26] "temp"
        (2130853 'move' i_x[2130849](2130851 'set reference' call_tmp[1061071]))
        (2130857 call deinit[30831] i_x[2130849])
        gotoErrorHandling handler[1809744] handler[1809744]
      }
      ref i_x[2130861]:string[26] "temp"
      (2130865 'move' i_x[2130861](2130863 'set reference' call_tmp[1061071]))
      (2130869 call deinit[30831] i_x[2130861])
      label handler[1809744]
      const-val shouldHandleError[1809763]:bool[10] "temp"
      val errorExists[2108736]:bool[10] "temp"
      (2108741 'move' errorExists[2108736](2108738 '!=' error[1809743] nil[44]))
      (1809767 'move' shouldHandleError[1809763] errorExists[2108736])
      if shouldHandleError[1809763]
      {
        (1809759 '=' error_out[1809726] error[1809743])
        ref i_x[2268166]:channel(true,dynamic,false)[1060947] "temp"
        (2268170 'move' i_x[2268166](2268168 'set reference' ret[1060971]))
        (2268174 call deinit[1536215] i_x[2268166])
        gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
      }
    }
    val call_tmp[1061089]:channel(true,dynamic,false)[1060947] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062347 'move' ret[1060917] ret[1060971])
    label _end_writer[1061107]
    (1833043 '=' _retArg[1833041] ret[1060917])
    (1833045 return _void[55])
  }
  function _write_text_internal[1078760](const in arg _channel_internal[1078762]:qio_channel_ptr_t[231465], const in arg x[1078764]:int(64)[13]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1078778]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1078788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1078888]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1078910]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1078923]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1078936]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1079555]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079561 'move' coerce_tmp[1079555](1079557 'cast' int(32)[95] 0))
    const-val coerce_tmp[1079563]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079569 'move' coerce_tmp[1079563](1079565 'cast' uint(64)[115] 8))
    const-val coerce_tmp[1079571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079577 'move' coerce_tmp[1079571](1079573 'cast' int(32)[95] 1))
    (1078938 'move' call_tmp[1078936](1078941 call qio_channel_print_int[1079525] coerce_tmp[1079555] _channel_internal[1078762] x[1078764] coerce_tmp[1079563] coerce_tmp[1079571]))
    (1079581 'move' ret[1078778] call_tmp[1078936])
    label _end__write_text_internal[1079508]
    (1079510 return ret[1078778])
  }
  function _write_text_internal[1172844](const in arg _channel_internal[1172846]:qio_channel_ptr_t[231465], const  ref arg x[1172848]:string[26]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1172862]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1172872]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1172972]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1173039]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1173092]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1173145]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1173231]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1173254]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829545]:string[26] "temp"
    ref i__retArg[2148384]:string[26] "temp"
    (2148388 'move' i__retArg[2148384](2148386 'set reference' ret_tmp[1829545]))
    val ret[2148391]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2148393]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2148395 'move' coerce_tmp[2148393](2148397 '.v' x[1172848] locale_id[30754]))
    const-val call_tmp[2148400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2148402 'move' call_tmp[2148400](2148404 '==' coerce_tmp[2148393] chpl_nodeID[208152]))
    if call_tmp[2148400]
    {
      const-val ret[2148409]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2148411]:string[26] "dead at end of block" "insert auto destroy"
      (2148414 call init[30760] ret[2148411])
      const-val coerce_tmp[2148416]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2148418 'move' coerce_tmp[2148416](2148420 '.v' x[1172848] cachedNumCodepoints[30731]))
      (2148423 '.=' ret[2148411] cachedNumCodepoints[30731] coerce_tmp[2148416])
      (2148428 call initWithBorrowedBuffer[948874] ret[2148411] x[1172848])
      (2148431 'move' ret[2148409] ret[2148411])
      (2148434 'move' ret[2148391] ret[2148409])
      gotoReturn _end_localize[2148452] _end_localize[2148452]
    }
    {
      const-val x[2148440]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2148443 call init=[30771] x[2148440] x[1172848])
      (2148446 'move' ret[2148391] x[2148440])
      gotoReturn _end_localize[2148452] _end_localize[2148452]
    }
    label _end_localize[2148452]
    (2148454 '=' i__retArg[2148384] ret[2148391])
    (1829548 'move' call_tmp[1173254] ret_tmp[1829545])
    const local_x[1173263]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1173265 'move' local_x[1173263] call_tmp[1173254])
    const-ref call_tmp[1173269]:bool[10] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref i_this[2214168]:string[26] "temp"
    (2214172 'move' i_this[2214168](2214170 'set reference' local_x[1173263]))
    ref call_tmp[2214175]:bool[10] "dead after last mention" "maybe param" "temp"
    (2214177 'move' call_tmp[2214175](2214179 '.' i_this[2214168] hasEscapes[30749]))
    (1173271 'move' call_tmp[1173269] call_tmp[2214175])
    const-val call_tmp[1173277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1173622]:bool[10] "dead after last mention" "const" "temp"
    (1173624 'move' tmp[1173622](1173626 'deref' call_tmp[1173269]))
    (1173279 'move' call_tmp[1173277] tmp[1173622])
    if call_tmp[1173277]
    {
      ref i_ret[2207529]:syserr[223584] "temp"
      (2207533 'move' i_ret[2207529](2207531 'set reference' ret[1172862]))
      const-val call_tmp[2207536]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2207538 'move' call_tmp[2207536](2207541 call qio_int_to_err[223634] EILSEQ[224444]))
      (2207543 '=' i_ret[2207529] call_tmp[2207536])
      ref i_x[2131653]:string[26] "temp"
      (2131657 'move' i_x[2131653](2131655 'set reference' local_x[1173263]))
      (2131661 call deinit[30831] i_x[2131653])
      gotoReturn _end__write_text_internal[1173592] _end__write_text_internal[1173592]
    }
    const-val call_tmp[1173294]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    ref i_this[2151390]:string[26] "temp"
    (2151394 'move' i_this[2151390](2151392 'set reference' local_x[1173263]))
    const-val coerce_tmp[2151397]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2151399 'move' coerce_tmp[2151397](2151401 '.v' i_this[2151390] locale_id[30754]))
    const-val call_tmp[2151404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2151406 'move' call_tmp[2151404](2151408 '!=' coerce_tmp[2151397] chpl_nodeID[208152]))
    if call_tmp[2151404]
    {
      (2151414 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2151417]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2151419 'move' coerce_tmp[2151417](2151421 '.v' i_this[2151390] buff[30737]))
    const-val call_tmp[2151424]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2151426 'move' call_tmp[2151424](2151428 'cast' c_string[19] coerce_tmp[2151417]))
    (1173296 'move' call_tmp[1173294] call_tmp[2151424])
    const-val call_tmp[1173303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    ref i_this[2143311]:string[26] "temp"
    (2143315 'move' i_this[2143311](2143313 'set reference' local_x[1173263]))
    val ret[2143318]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2143320 'move' ret[2143318](2143322 '.v' i_this[2143311] buffLen[30719]))
    (1173305 'move' call_tmp[1173303] ret[2143318])
    const-val call_tmp[1173311]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173313 'move' call_tmp[1173311] call_tmp[1173303])
    const-val call_tmp[1173319]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1173631]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1173637 'move' coerce_tmp[1173631](1173633 'cast' int(32)[95] 0))
    (1173321 'move' call_tmp[1173319](1173324 call qio_channel_print_string[234837] coerce_tmp[1173631] _channel_internal[1172846] call_tmp[1173294] call_tmp[1173311]))
    (1173650 'move' ret[1172862] call_tmp[1173319])
    ref i_x[2131665]:string[26] "temp"
    (2131669 'move' i_x[2131665](2131667 'set reference' local_x[1173263]))
    (2131673 call deinit[30831] i_x[2131665])
    label _end__write_text_internal[1173592]
    (1173594 return ret[1172862])
  }
  function _write_text_internal[1427778](const in arg _channel_internal[1427780]:qio_channel_ptr_t[231465], const in arg x[1427782]:real(64)[16]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1427796]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1427806]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1427906]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1427973]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1427995]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1428008]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1428571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1428577 'move' coerce_tmp[1428571](1428573 'cast' int(32)[95] 0))
    const-val coerce_tmp[1428579]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1428585 'move' coerce_tmp[1428579](1428581 'cast' uint(64)[115] 8))
    (1428010 'move' call_tmp[1428008](1428013 call qio_channel_print_float[1428545] coerce_tmp[1428571] _channel_internal[1427780] x[1427782] coerce_tmp[1428579]))
    (1428589 'move' ret[1427796] call_tmp[1428008])
    label _end__write_text_internal[1428526]
    (1428528 return ret[1427796])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1079612](const  ref arg this[1079618]:channel(true,dynamic,false)[1060947], const in arg x[1079622]:int(64)[13], ref arg _retArg[1833403]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079626]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079638]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204363]:string[26] "temp"
    (2204366 'move' inlineImm[2204363] "while ")
    ref i_x[2204368]:string[26] "temp"
    (2204372 'move' i_x[2204368](2204370 'set reference' inlineImm[2204363]))
    val ret[2204375]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204377]:string[26] "dead after last mention" "temp"
    (2204380 call init=[30771] tmp[2204377] i_x[2204368])
    (2204383 'move' ret[2204375] tmp[2204377])
    (1079640 'move' result[1079638] ret[2204375])
    (1079677 call +=[38797] result[1079638] "writing ")
    val call_tmp[1079682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079697 call +=[38797] result[1079638] "int(64)")
    val tmp[1079703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079831 'move' ret[1079626] result[1079638])
    label _end__constructIoErrorMsg[1079807]
    (1833405 '=' _retArg[1833403] ret[1079626])
    (1833409 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1079905](const  ref arg this[1079911]:channel(true,dynamic,false)[1060947], const  ref arg x[1079915]:byteIndex[28170], ref arg _retArg[1833417]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079919]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079931]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204388]:string[26] "temp"
    (2204391 'move' inlineImm[2204388] "while ")
    ref i_x[2204393]:string[26] "temp"
    (2204397 'move' i_x[2204393](2204395 'set reference' inlineImm[2204388]))
    val ret[2204400]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204402]:string[26] "dead after last mention" "temp"
    (2204405 call init=[30771] tmp[2204402] i_x[2204393])
    (2204408 'move' ret[2204400] tmp[2204402])
    (1079933 'move' result[1079931] ret[2204400])
    (1079970 call +=[38797] result[1079931] "writing ")
    val call_tmp[1079975]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079990 call +=[38797] result[1079931] "byteIndex")
    val tmp[1079996]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080138 'move' ret[1079919] result[1079931])
    label _end__constructIoErrorMsg[1080100]
    (1833419 '=' _retArg[1833417] ret[1079919])
    (1833423 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1173679](const  ref arg this[1173685]:channel(true,dynamic,false)[1060947], const  ref arg x[1173689]:string[26], ref arg _retArg[1834636]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173693]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173705]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204513]:string[26] "temp"
    (2204516 'move' inlineImm[2204513] "while ")
    ref i_x[2204518]:string[26] "temp"
    (2204522 'move' i_x[2204518](2204520 'set reference' inlineImm[2204513]))
    val ret[2204525]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204527]:string[26] "dead after last mention" "temp"
    (2204530 call init=[30771] tmp[2204527] i_x[2204518])
    (2204533 'move' ret[2204525] tmp[2204527])
    (1173707 'move' result[1173705] ret[2204525])
    (1173744 call +=[38797] result[1173705] "writing ")
    val call_tmp[1173749]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173764 call +=[38797] result[1173705] "string")
    val tmp[1173770]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173898 'move' ret[1173693] result[1173705])
    label _end__constructIoErrorMsg[1173874]
    (1834638 '=' _retArg[1834636] ret[1173693])
    (1834642 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1175397](const  ref arg this[1175403]:channel(true,dynamic,false)[1060947], const  ref arg x[1175407]:codepointIndex[28274], ref arg _retArg[1834650]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175411]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175423]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204538]:string[26] "temp"
    (2204541 'move' inlineImm[2204538] "while ")
    ref i_x[2204543]:string[26] "temp"
    (2204547 'move' i_x[2204543](2204545 'set reference' inlineImm[2204538]))
    val ret[2204550]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204552]:string[26] "dead after last mention" "temp"
    (2204555 call init=[30771] tmp[2204552] i_x[2204543])
    (2204558 'move' ret[2204550] tmp[2204552])
    (1175425 'move' result[1175423] ret[2204550])
    (1175462 call +=[38797] result[1175423] "writing ")
    val call_tmp[1175467]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175482 call +=[38797] result[1175423] "codepointIndex")
    val tmp[1175488]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175632 'move' ret[1175411] result[1175423])
    label _end__constructIoErrorMsg[1175592]
    (1834652 '=' _retArg[1834650] ret[1175411])
    (1834656 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1411634](const  ref arg this[1411640]:channel(true,dynamic,false)[1060947], const  ref arg x[1411644]:ioLiteral[238753], ref arg _retArg[1838382]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1411648]:string[26] "dead after last mention" "RVV" "temp"
    val result[1411660]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204738]:string[26] "temp"
    (2204741 'move' inlineImm[2204738] "while ")
    ref i_x[2204743]:string[26] "temp"
    (2204747 'move' i_x[2204743](2204745 'set reference' inlineImm[2204738]))
    val ret[2204750]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204752]:string[26] "dead after last mention" "temp"
    (2204755 call init=[30771] tmp[2204752] i_x[2204743])
    (2204758 'move' ret[2204750] tmp[2204752])
    (1411662 'move' result[1411660] ret[2204750])
    (1411699 call +=[38797] result[1411660] "writing ")
    val call_tmp[1411704]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1411719 call +=[38797] result[1411660] "ioLiteral")
    val tmp[1411725]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1411788]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831527]:string[26] "temp"
    ref i__retArg[2208012]:string[26] "temp"
    (2208016 'move' i__retArg[2208012](2208014 'set reference' ret_tmp[1831527]))
    ref call_tmp[2208019]:string[26] "dead after last mention" "maybe param" "temp"
    (2208021 'move' call_tmp[2208019](2208023 '.' x[1411644] val[238728]))
    val ret[2208026]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2208028]:string[26] "dead after last mention" "temp"
    (2208031 call init=[30771] tmp[2208028] call_tmp[2208019])
    (2208034 'move' ret[2208026] tmp[2208028])
    (2208037 '=' i__retArg[2208012] ret[2208026])
    (1831530 'move' call_tmp[1411788] ret_tmp[1831527])
    const-val call_tmp[1411796]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830319]:string[26] "temp"
    (1411801 call +[38342] " \"" call_tmp[1411788] ret_tmp[1830319])
    (1830322 'move' call_tmp[1411796] ret_tmp[1830319])
    const-val call_tmp[1411804]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830325]:string[26] "temp"
    (1411809 call +[38342] call_tmp[1411796] "\"" ret_tmp[1830325])
    (1830328 'move' call_tmp[1411804] ret_tmp[1830325])
    (1411813 call +=[38797] result[1411660] call_tmp[1411804])
    ref i_x[2132949]:string[26] "temp"
    (2132953 'move' i_x[2132949](2132951 'set reference' call_tmp[1411804]))
    (2132957 call deinit[30831] i_x[2132949])
    ref i_x[2132961]:string[26] "temp"
    (2132965 'move' i_x[2132961](2132963 'set reference' call_tmp[1411796]))
    (2132969 call deinit[30831] i_x[2132961])
    ref i_x[2132973]:string[26] "temp"
    (2132977 'move' i_x[2132973](2132975 'set reference' call_tmp[1411788]))
    (2132981 call deinit[30831] i_x[2132973])
    (1411923 'move' ret[1411648] result[1411660])
    label _end__constructIoErrorMsg[1411829]
    (1838384 '=' _retArg[1838382] ret[1411648])
    (1838388 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1428618](const  ref arg this[1428624]:channel(true,dynamic,false)[1060947], const in arg x[1428628]:real(64)[16], ref arg _retArg[1838436]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1428632]:string[26] "dead after last mention" "RVV" "temp"
    val result[1428644]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204763]:string[26] "temp"
    (2204766 'move' inlineImm[2204763] "while ")
    ref i_x[2204768]:string[26] "temp"
    (2204772 'move' i_x[2204768](2204770 'set reference' inlineImm[2204763]))
    val ret[2204775]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204777]:string[26] "dead after last mention" "temp"
    (2204780 call init=[30771] tmp[2204777] i_x[2204768])
    (2204783 'move' ret[2204775] tmp[2204777])
    (1428646 'move' result[1428644] ret[2204775])
    (1428683 call +=[38797] result[1428644] "writing ")
    val call_tmp[1428688]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1428703 call +=[38797] result[1428644] "real(64)")
    val tmp[1428709]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1428853 'move' ret[1428632] result[1428644])
    label _end__constructIoErrorMsg[1428813]
    (1838438 '=' _retArg[1838436] ret[1428632])
    (1838442 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1429191](const  ref arg this[1429197]:channel(true,dynamic,true)[1021825], const  ref arg x[1429201]:[domain(1,int(64),false)] real(64)[1365840], ref arg _retArg[1838450]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1429205]:string[26] "dead after last mention" "RVV" "temp"
    val result[1429217]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204788]:string[26] "temp"
    (2204791 'move' inlineImm[2204788] "while ")
    ref i_x[2204793]:string[26] "temp"
    (2204797 'move' i_x[2204793](2204795 'set reference' inlineImm[2204788]))
    val ret[2204800]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204802]:string[26] "dead after last mention" "temp"
    (2204805 call init=[30771] tmp[2204802] i_x[2204793])
    (2204808 'move' ret[2204800] tmp[2204802])
    (1429219 'move' result[1429217] ret[2204800])
    (1429256 call +=[38797] result[1429217] "writing ")
    const-val call_tmp[1429261]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429263 'move' call_tmp[1429261](1429395 call chpl__convertValueToRuntimeType[1393963] x[1429201]))
    (1429276 call +=[38797] result[1429217] "[domain(1,int(64),false)] real(64)")
    const-val tmp[1429282]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429284 'move' tmp[1429282](1429416 call chpl__convertValueToRuntimeType[1393963] x[1429201]))
    (1429432 'move' ret[1429205] result[1429217])
    label _end__constructIoErrorMsg[1429386]
    (1838452 '=' _retArg[1838450] ret[1429205])
    (1838456 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1432375](const  ref arg this[1432381]:channel(true,dynamic,true)[1021825], const  ref arg x[1432385]:ioNewline[238701], ref arg _retArg[1838464]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1432389]:string[26] "dead after last mention" "RVV" "temp"
    val result[1432401]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204813]:string[26] "temp"
    (2204816 'move' inlineImm[2204813] "while ")
    ref i_x[2204818]:string[26] "temp"
    (2204822 'move' i_x[2204818](2204820 'set reference' inlineImm[2204813]))
    val ret[2204825]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204827]:string[26] "dead after last mention" "temp"
    (2204830 call init=[30771] tmp[2204827] i_x[2204818])
    (2204833 'move' ret[2204825] tmp[2204827])
    (1432403 'move' result[1432401] ret[2204825])
    (1432440 call +=[38797] result[1432401] "writing ")
    val call_tmp[1432445]:ioNewline[238701] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1432460 call +=[38797] result[1432401] "ioNewline")
    val tmp[1432466]:ioNewline[238701] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1432498 call +=[38797] result[1432401] " newline")
    (1432655 'move' ret[1432389] result[1432401])
    label _end__constructIoErrorMsg[1432570]
    (1838466 '=' _retArg[1838464] ret[1432389])
    (1838470 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1433585](const  ref arg this[1433591]:channel(true,dynamic,true)[1021825], const in arg x[1433595]:int(64)[13], ref arg _retArg[1838490]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1433599]:string[26] "dead after last mention" "RVV" "temp"
    val result[1433611]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204838]:string[26] "temp"
    (2204841 'move' inlineImm[2204838] "while ")
    ref i_x[2204843]:string[26] "temp"
    (2204847 'move' i_x[2204843](2204845 'set reference' inlineImm[2204838]))
    val ret[2204850]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204852]:string[26] "dead after last mention" "temp"
    (2204855 call init=[30771] tmp[2204852] i_x[2204843])
    (2204858 'move' ret[2204850] tmp[2204852])
    (1433613 'move' result[1433611] ret[2204850])
    (1433650 call +=[38797] result[1433611] "writing ")
    val call_tmp[1433655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1433670 call +=[38797] result[1433611] "int(64)")
    val tmp[1433676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1433804 'move' ret[1433599] result[1433611])
    label _end__constructIoErrorMsg[1433780]
    (1838492 '=' _retArg[1838490] ret[1433599])
    (1838496 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1067012](const  ref arg this[1067018]:channel(true,dynamic,false)[1060947], const  ref arg x[1067022]:byteIndex[28170], const  ref arg loc[1067024]:locale[28], ref arg error_out[1810116]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1067034]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263658]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263660 'move' call_tmp[2263658](2263662 '.' this[1067018] _channel_internal[1060940]))
    (1067036 'move' call_tmp[1067034] call_tmp[2263658])
    const-val call_tmp[1067042]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1068361]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068365 'move' coerce_tmp[1068361](1068363 'deref' call_tmp[1067034]))
    val error[1810121]:Error[167938] "error variable" "temp"
    (1810123 'move' error[1810121] nil[44])
    ref i_error_out[2268496]:Error[167938] "temp"
    (2268500 'move' i_error_out[2268496](2268498 'set reference' error[1810121]))
    val ret[2268503]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2268505]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2268507]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2268509]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2268511 'move' call_tmp[2268509](2268514 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2268517 'move' call_tmp[2268507] call_tmp[2268509])
    const-val call_tmp[2268520]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2268522]:locale[28] "temp"
    (2268525 call chpl_localeID_to_locale[92849] call_tmp[2268507] ret_tmp[2268522])
    (2268528 'move' call_tmp[2268520] ret_tmp[2268522])
    (2268531 'move' call_tmp[2268505] call_tmp[2268520])
    const-val call_tmp[2268534]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2268536]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2268539 call init[1068388] initTemp[2268536] call_tmp[2268505] coerce_tmp[1068361] loc[1067024])
    (2268544 'move' call_tmp[2268534] initTemp[2268536])
    val writer[2268547]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2268549 'move' writer[2268547] call_tmp[2268534])
    const-val err[2268552]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2268554]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268556 'move' call_tmp[2268554](2268559 call qio_int_to_err[223634] 0))
    (2268561 'move' err[2268552] call_tmp[2268554])
    val error[2268564]:Error[167938] "error variable" "temp"
    (2268566 'move' error[2268564] nil[44])
    (2268570 call writeThis[1068620] x[1067022] writer[2268547] error[2268564])
    val errorExists[2268574]:bool[10] "temp"
    (2268576 'move' errorExists[2268574](2268578 '!=' error[2268564] nil[44]))
    if errorExists[2268574]
    {
      gotoErrorHandling handler[2268586] handler[2268586]
    }
    label handler[2268586]
    val errorExists[2268588]:bool[10] "temp"
    (2268590 'move' errorExists[2268588](2268592 '!=' error[2268564] nil[44]))
    if errorExists[2268588]
    {
      (2268597 '=' i_error_out[2268496] error[2268564])
      (2268600 '.=' writer[2268547] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2268604]:channel(true,dynamic,false)[1060947] "temp"
      (2268606 'move' i_x[2268604](2268608 'set reference' writer[2268547]))
      (2268611 call deinit[1536215] i_x[2268604])
      ref i_x[2268613]:locale[28] "temp"
      (2268615 'move' i_x[2268613](2268617 'set reference' call_tmp[2268505]))
      (2268620 call deinit[90185] i_x[2268613])
      gotoErrorHandlingReturn _end__write_one_internal[2268650] _end__write_one_internal[2268650]
    }
    (2268625 'move' ret[2268503] err[2268552])
    (2268628 '.=' writer[2268547] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2268632]:channel(true,dynamic,false)[1060947] "temp"
    (2268634 'move' i_x[2268632](2268636 'set reference' writer[2268547]))
    (2268639 call deinit[1536215] i_x[2268632])
    ref i_x[2268641]:locale[28] "temp"
    (2268643 'move' i_x[2268641](2268645 'set reference' call_tmp[2268505]))
    (2268648 call deinit[90185] i_x[2268641])
    label _end__write_one_internal[2268650]
    (1067044 'move' call_tmp[1067042] ret[2268503])
    val errorExists[2108888]:bool[10] "temp"
    (2108893 'move' errorExists[2108888](2108890 '!=' error[1810121] nil[44]))
    if errorExists[2108888]
    {
      (1810127 '=' error_out[1810116] error[1810121])
      gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
    }
    const-val err[1067052]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1067054 'move' err[1067052] call_tmp[1067042])
    const-val call_tmp[1067058]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067060 'move' call_tmp[1067058] 0)
    const-val call_tmp[1067064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206316]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206318 'move' call_tmp[2206316](2206321 call qio_err_to_int[223616] err[1067052]))
    const-val call_tmp[2206323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206325 'move' call_tmp[2206323](2206327 '==' call_tmp[2206316] call_tmp[1067058]))
    const-val call_tmp[2206330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206332 'move' call_tmp[2206330](2206334 '!' call_tmp[2206323]))
    (1067066 'move' call_tmp[1067064] call_tmp[2206330])
    const-val call_tmp[1067072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067074 'move' call_tmp[1067072] call_tmp[1067064])
    if call_tmp[1067072]
    {
      const-val call_tmp[1067081]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833411]:string[26] "temp"
      (1067089 call _constructIoErrorMsg[1079905] this[1067018] x[1067022] ret_tmp[1833411])
      (1833414 'move' call_tmp[1067081] ret_tmp[1833411])
      val msg[1067092]:string[26] "dead at end of block" "insert auto destroy"
      (1067094 'move' msg[1067092] call_tmp[1067081])
      const-val call_tmp[1067098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206083]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206085 'move' call_tmp[2206083](2206088 call qio_err_to_int[223616] err[1067052]))
      const-val call_tmp[2206090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206092 'move' call_tmp[2206090](2206094 '==' call_tmp[2206083] EILSEQ[224444]))
      (1067100 'move' call_tmp[1067098] call_tmp[2206090])
      const-val call_tmp[1067106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067108 'move' call_tmp[1067106] call_tmp[1067098])
      if call_tmp[1067106]
      {
        const-val call_tmp[1067123]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830007]:string[26] "temp"
        (1067128 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067092] ret_tmp[1830007])
        (1830010 'move' call_tmp[1067123] ret_tmp[1830007])
        (1067132 call =[38269] msg[1067092] call_tmp[1067123])
        ref i_x[2130921]:string[26] "temp"
        (2130925 'move' i_x[2130921](2130923 'set reference' call_tmp[1067123]))
        (2130929 call deinit[30831] i_x[2130921])
      }
      val error[1810135]:Error[167938] "error variable" "temp"
      (1810144 'move' error[1810135] nil[44])
      (1067144 call _ch_ioerror[1062865] this[1067018] err[1067052] msg[1067092] error[1810135])
      val errorExists[2108896]:bool[10] "temp"
      (2108901 'move' errorExists[2108896](2108898 '!=' error[1810135] nil[44]))
      if errorExists[2108896]
      {
        gotoErrorHandling handler[1810136] handler[1810136]
      }
      label handler[1810136]
      const-val shouldHandleError[1810155]:bool[10] "temp"
      val errorExists[2108904]:bool[10] "temp"
      (2108909 'move' errorExists[2108904](2108906 '!=' error[1810135] nil[44]))
      (1810159 'move' shouldHandleError[1810155] errorExists[2108904])
      if shouldHandleError[1810155]
      {
        (1810151 '=' error_out[1810116] error[1810135])
        ref i_x[2130933]:string[26] "temp"
        (2130937 'move' i_x[2130933](2130935 'set reference' msg[1067092]))
        (2130941 call deinit[30831] i_x[2130933])
        gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
      }
      ref i_x[2130945]:string[26] "temp"
      (2130949 'move' i_x[2130945](2130947 'set reference' msg[1067092]))
      (2130953 call deinit[30831] i_x[2130945])
    }
    label _end_writeOne[1810118]
    (1067152 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1068937](const  ref arg this[1068943]:channel(true,dynamic,false)[1060947], const in arg x[1068947]:int(64)[13], const  ref arg loc[1068949]:locale[28], ref arg error_out[1810353]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1068959]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263668]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263670 'move' call_tmp[2263668](2263672 '.' this[1068943] _channel_internal[1060940]))
    (1068961 'move' call_tmp[1068959] call_tmp[2263668])
    const-val call_tmp[1068967]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070205]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070209 'move' coerce_tmp[1070205](1070207 'deref' call_tmp[1068959]))
    val error[1810358]:Error[167938] "error variable" "temp"
    (1810360 'move' error[1810358] nil[44])
    ref i_error_out[2268964]:Error[167938] "temp"
    (2268968 'move' i_error_out[2268964](2268966 'set reference' error[1810358]))
    val ret[2268971]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2268973]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2268975]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268977 'move' call_tmp[2268975](2268980 call qio_int_to_err[223634] 0))
    (2268982 'move' e[2268973] call_tmp[2268975])
    const-val call_tmp[2268985]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2268987 'move' call_tmp[2268985](2268990 call qio_channel_binary[233057] coerce_tmp[1070205]))
    const-val call_tmp[2268992]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2268994 'move' call_tmp[2268992](2268997 call qio_channel_byteorder[233072] coerce_tmp[1070205]))
    const-val byteorder[2268999]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (2269001 'move' byteorder[2268999] call_tmp[2268992])
    const-val coerce_tmp[2269004]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269006 'move' coerce_tmp[2269004](2269008 'cast' int(64)[13] call_tmp[2268985]))
    const-val call_tmp[2269011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269013 'move' call_tmp[2269011](2269015 '!=' coerce_tmp[2269004] 0))
    if call_tmp[2269011]
    {
      const-val tmp[2269020]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2269022]:Error[167938] "error variable" "temp"
      (2269024 'move' error[2269022] nil[44])
      (2269027 'move' tmp[2269020](2269030 call _cast[1070308] byteorder[2268999] error[2269022]))
      val errorExists[2269033]:bool[10] "temp"
      (2269035 'move' errorExists[2269033](2269037 '!=' error[2269022] nil[44]))
      if errorExists[2269033]
      {
        (2269042 '=' i_error_out[2268964] error[2269022])
        gotoErrorHandlingReturn _end__write_one_internal[2269146] _end__write_one_internal[2269146]
      }
      const-val call_tmp[2269048]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269050 'move' call_tmp[2269048](2269052 '==' tmp[2269020] big[230926]))
      if call_tmp[2269048]
      {
        const-val call_tmp[2269057]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2269059]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269061 'move' coerce_tmp[2269059](2269063 'cast' int(32)[95] 0))
        (2269066 'move' call_tmp[2269057](2269069 call qio_channel_write_int64[234050] coerce_tmp[2269059] 2 coerce_tmp[1070205] x[1068947]))
        (2269074 '=' e[2268973] call_tmp[2269057])
      }
      {
        const-val call_tmp[2269078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269080 'move' call_tmp[2269078](2269082 '==' tmp[2269020] little[230929]))
        if call_tmp[2269078]
        {
          const-val call_tmp[2269087]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269089]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269091 'move' coerce_tmp[2269089](2269093 'cast' int(32)[95] 0))
          (2269096 'move' call_tmp[2269087](2269099 call qio_channel_write_int64[234050] coerce_tmp[2269089] 3 coerce_tmp[1070205] x[1068947]))
          (2269104 '=' e[2268973] call_tmp[2269087])
        }
        {
          const-val call_tmp[2269108]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269110]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269112 'move' coerce_tmp[2269110](2269114 'cast' int(32)[95] 0))
          (2269117 'move' call_tmp[2269108](2269120 call qio_channel_write_int64[234050] coerce_tmp[2269110] 1 coerce_tmp[1070205] x[1068947]))
          (2269125 '=' e[2268973] call_tmp[2269108])
        }
      }
    }
    {
      const-val call_tmp[2269131]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269133 'move' call_tmp[2269131](2269136 call _write_text_internal[1078760] coerce_tmp[1070205] x[1068947]))
      (2269139 '=' e[2268973] call_tmp[2269131])
    }
    (2269143 'move' ret[2268971] e[2268973])
    label _end__write_one_internal[2269146]
    (1068969 'move' call_tmp[1068967] ret[2268971])
    val errorExists[2109008]:bool[10] "temp"
    (2109013 'move' errorExists[2109008](2109010 '!=' error[1810358] nil[44]))
    if errorExists[2109008]
    {
      (1810364 '=' error_out[1810353] error[1810358])
      gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
    }
    const-val err[1068977]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1068979 'move' err[1068977] call_tmp[1068967])
    const-val call_tmp[1068983]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068985 'move' call_tmp[1068983] 0)
    const-val call_tmp[1068989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206293]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206295 'move' call_tmp[2206293](2206298 call qio_err_to_int[223616] err[1068977]))
    const-val call_tmp[2206300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206302 'move' call_tmp[2206300](2206304 '==' call_tmp[2206293] call_tmp[1068983]))
    const-val call_tmp[2206307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206309 'move' call_tmp[2206307](2206311 '!' call_tmp[2206300]))
    (1068991 'move' call_tmp[1068989] call_tmp[2206307])
    const-val call_tmp[1068997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068999 'move' call_tmp[1068997] call_tmp[1068989])
    if call_tmp[1068997]
    {
      const-val call_tmp[1069006]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833397]:string[26] "temp"
      (1069014 call _constructIoErrorMsg[1079612] this[1068943] x[1068947] ret_tmp[1833397])
      (1833400 'move' call_tmp[1069006] ret_tmp[1833397])
      val msg[1069017]:string[26] "dead at end of block" "insert auto destroy"
      (1069019 'move' msg[1069017] call_tmp[1069006])
      const-val call_tmp[1069023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206066]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206068 'move' call_tmp[2206066](2206071 call qio_err_to_int[223616] err[1068977]))
      const-val call_tmp[2206073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206075 'move' call_tmp[2206073](2206077 '==' call_tmp[2206066] EILSEQ[224444]))
      (1069025 'move' call_tmp[1069023] call_tmp[2206073])
      const-val call_tmp[1069031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069033 'move' call_tmp[1069031] call_tmp[1069023])
      if call_tmp[1069031]
      {
        const-val call_tmp[1069048]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830013]:string[26] "temp"
        (1069053 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069017] ret_tmp[1830013])
        (1830016 'move' call_tmp[1069048] ret_tmp[1830013])
        (1069057 call =[38269] msg[1069017] call_tmp[1069048])
        ref i_x[2130957]:string[26] "temp"
        (2130961 'move' i_x[2130957](2130959 'set reference' call_tmp[1069048]))
        (2130965 call deinit[30831] i_x[2130957])
      }
      val error[1810372]:Error[167938] "error variable" "temp"
      (1810381 'move' error[1810372] nil[44])
      (1069069 call _ch_ioerror[1062865] this[1068943] err[1068977] msg[1069017] error[1810372])
      val errorExists[2109016]:bool[10] "temp"
      (2109021 'move' errorExists[2109016](2109018 '!=' error[1810372] nil[44]))
      if errorExists[2109016]
      {
        gotoErrorHandling handler[1810373] handler[1810373]
      }
      label handler[1810373]
      const-val shouldHandleError[1810392]:bool[10] "temp"
      val errorExists[2109024]:bool[10] "temp"
      (2109029 'move' errorExists[2109024](2109026 '!=' error[1810372] nil[44]))
      (1810396 'move' shouldHandleError[1810392] errorExists[2109024])
      if shouldHandleError[1810392]
      {
        (1810388 '=' error_out[1810353] error[1810372])
        ref i_x[2130969]:string[26] "temp"
        (2130973 'move' i_x[2130969](2130971 'set reference' msg[1069017]))
        (2130977 call deinit[30831] i_x[2130969])
        gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
      }
      ref i_x[2130981]:string[26] "temp"
      (2130985 'move' i_x[2130981](2130983 'set reference' msg[1069017]))
      (2130989 call deinit[30831] i_x[2130981])
    }
    label _end_writeOne[1810355]
    (1069077 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1165160](const  ref arg this[1165166]:channel(true,dynamic,false)[1060947], const  ref arg x[1165170]:string[26], const  ref arg loc[1165172]:locale[28], ref arg error_out[1811151]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1165182]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263678]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263680 'move' call_tmp[2263678](2263682 '.' this[1165166] _channel_internal[1060940]))
    (1165184 'move' call_tmp[1165182] call_tmp[2263678])
    const-val call_tmp[1165190]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1168030]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168034 'move' coerce_tmp[1168030](1168032 'deref' call_tmp[1165182]))
    val error[1811156]:Error[167938] "error variable" "temp"
    (1811158 'move' error[1811156] nil[44])
    ref i_error_out[2273758]:Error[167938] "temp"
    (2273762 'move' i_error_out[2273758](2273760 'set reference' error[1811156]))
    val ret[2273765]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2273767]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2273769]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2273771 'move' call_tmp[2273769](2273774 call qio_int_to_err[223634] 0))
    (2273776 'move' e[2273767] call_tmp[2273769])
    const-val call_tmp[2273779]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2273781 'move' call_tmp[2273779](2273784 call qio_channel_binary[233057] coerce_tmp[1168030]))
    const-val call_tmp[2273786]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2273788 'move' call_tmp[2273786](2273791 call qio_channel_byteorder[233072] coerce_tmp[1168030]))
    const-val byteorder[2273793]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (2273795 'move' byteorder[2273793] call_tmp[2273786])
    const-val coerce_tmp[2273798]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2273800 'move' coerce_tmp[2273798](2273802 'cast' int(64)[13] call_tmp[2273779]))
    const-val call_tmp[2273805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2273807 'move' call_tmp[2273805](2273809 '!=' coerce_tmp[2273798] 0))
    if call_tmp[2273805]
    {
      const-val tmp[2273814]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2273816]:Error[167938] "error variable" "temp"
      (2273818 'move' error[2273816] nil[44])
      (2273821 'move' tmp[2273814](2273824 call _cast[1070308] byteorder[2273793] error[2273816]))
      val errorExists[2273827]:bool[10] "temp"
      (2273829 'move' errorExists[2273827](2273831 '!=' error[2273816] nil[44]))
      if errorExists[2273827]
      {
        (2273836 '=' i_error_out[2273758] error[2273816])
        gotoErrorHandlingReturn _end__write_one_internal[2274435] _end__write_one_internal[2274435]
      }
      const-val call_tmp[2273842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2273844 'move' call_tmp[2273842](2273846 '==' tmp[2273814] big[230926]))
      if call_tmp[2273842]
      {
        val ret[2273851]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2273853]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2273855]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2273857 'move' coerce_tmp[2273855](2273859 '.v' x[1165170] locale_id[30754]))
        const-val call_tmp[2273862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273864 'move' call_tmp[2273862](2273866 '==' coerce_tmp[2273855] chpl_nodeID[208152]))
        if call_tmp[2273862]
        {
          const-val ret[2273871]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2273873]:string[26] "dead at end of block" "insert auto destroy"
          (2273876 call init[30760] ret[2273873])
          const-val coerce_tmp[2273878]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2273880 'move' coerce_tmp[2273878](2273882 '.v' x[1165170] cachedNumCodepoints[30731]))
          (2273885 '.=' ret[2273873] cachedNumCodepoints[30731] coerce_tmp[2273878])
          (2273890 call initWithBorrowedBuffer[948874] ret[2273873] x[1165170])
          (2273893 'move' ret[2273871] ret[2273873])
          (2273896 'move' ret[2273853] ret[2273871])
          gotoReturn _end_localize[2273914] _end_localize[2273914]
        }
        {
          const-val x[2273902]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2273905 call init=[30771] x[2273902] x[1165170])
          (2273908 'move' ret[2273853] x[2273902])
          gotoReturn _end_localize[2273914] _end_localize[2273914]
        }
        label _end_localize[2273914]
        val local_x[2273916]:string[26] "dead at end of block" "insert auto destroy"
        (2273918 'move' local_x[2273916] ret[2273853])
        const-val tmp[2273921]:bool[10] "dead after last mention" "const" "temp"
        (2273923 'move' tmp[2273921](2273925 '.v' local_x[2273916] hasEscapes[30749]))
        if tmp[2273921]
        {
          const-val call_tmp[2273930]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          (2273932 'move' call_tmp[2273930](2273935 call qio_int_to_err[223634] EILSEQ[224444]))
          (2273937 '=' ret[2273851] call_tmp[2273930])
          ref i_x[2273940]:string[26] "temp"
          (2273942 'move' i_x[2273940](2273944 'set reference' local_x[2273916]))
          (2273947 call deinit[30831] i_x[2273940])
          gotoReturn _end__write_binary_internal[2274031] _end__write_binary_internal[2274031]
        }
        const-val call_tmp[2273952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273954 'move' call_tmp[2273952](2273957 call qio_channel_str_style[233087] coerce_tmp[1168030]))
        const-val coerce_tmp[2273959]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2273961 'move' coerce_tmp[2273959](2273963 '.v' local_x[2273916] locale_id[30754]))
        const-val call_tmp[2273966]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273968 'move' call_tmp[2273966](2273970 '!=' coerce_tmp[2273959] chpl_nodeID[208152]))
        if call_tmp[2273966]
        {
          (2273976 call halt[154067] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2273979]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2273981 'move' coerce_tmp[2273979](2273983 '.v' local_x[2273916] buff[30737]))
        const-val call_tmp[2273986]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273988 'move' call_tmp[2273986](2273990 'cast' c_string[19] coerce_tmp[2273979]))
        val ret[2273993]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2273995 'move' ret[2273993](2273997 '.v' local_x[2273916] buffLen[30719]))
        const-val call_tmp[2274000]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2274002]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2274004 'move' coerce_tmp[2274002](2274006 'cast' int(32)[95] 0))
        (2274009 'move' call_tmp[2274000](2274012 call qio_channel_write_string[234389] coerce_tmp[2274002] 2 call_tmp[2273952] coerce_tmp[1168030] call_tmp[2273986] ret[2273993]))
        (2274019 'move' ret[2273851] call_tmp[2274000])
        ref i_x[2274022]:string[26] "temp"
        (2274024 'move' i_x[2274022](2274026 'set reference' local_x[2273916]))
        (2274029 call deinit[30831] i_x[2274022])
        label _end__write_binary_internal[2274031]
        (2274033 '=' e[2273767] ret[2273851])
      }
      {
        const-val call_tmp[2274037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2274039 'move' call_tmp[2274037](2274041 '==' tmp[2273814] little[230929]))
        if call_tmp[2274037]
        {
          val ret[2274046]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2274048]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2274050]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274052 'move' coerce_tmp[2274050](2274054 '.v' x[1165170] locale_id[30754]))
          const-val call_tmp[2274057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274059 'move' call_tmp[2274057](2274061 '==' coerce_tmp[2274050] chpl_nodeID[208152]))
          if call_tmp[2274057]
          {
            const-val ret[2274066]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2274068]:string[26] "dead at end of block" "insert auto destroy"
            (2274071 call init[30760] ret[2274068])
            const-val coerce_tmp[2274073]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2274075 'move' coerce_tmp[2274073](2274077 '.v' x[1165170] cachedNumCodepoints[30731]))
            (2274080 '.=' ret[2274068] cachedNumCodepoints[30731] coerce_tmp[2274073])
            (2274085 call initWithBorrowedBuffer[948874] ret[2274068] x[1165170])
            (2274088 'move' ret[2274066] ret[2274068])
            (2274091 'move' ret[2274048] ret[2274066])
            gotoReturn _end_localize[2274109] _end_localize[2274109]
          }
          {
            const-val x[2274097]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2274100 call init=[30771] x[2274097] x[1165170])
            (2274103 'move' ret[2274048] x[2274097])
            gotoReturn _end_localize[2274109] _end_localize[2274109]
          }
          label _end_localize[2274109]
          val local_x[2274111]:string[26] "dead at end of block" "insert auto destroy"
          (2274113 'move' local_x[2274111] ret[2274048])
          const-val tmp[2274116]:bool[10] "dead after last mention" "const" "temp"
          (2274118 'move' tmp[2274116](2274120 '.v' local_x[2274111] hasEscapes[30749]))
          if tmp[2274116]
          {
            const-val call_tmp[2274125]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
            (2274127 'move' call_tmp[2274125](2274130 call qio_int_to_err[223634] EILSEQ[224444]))
            (2274132 '=' ret[2274046] call_tmp[2274125])
            ref i_x[2274135]:string[26] "temp"
            (2274137 'move' i_x[2274135](2274139 'set reference' local_x[2274111]))
            (2274142 call deinit[30831] i_x[2274135])
            gotoReturn _end__write_binary_internal[2274226] _end__write_binary_internal[2274226]
          }
          const-val call_tmp[2274147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274149 'move' call_tmp[2274147](2274152 call qio_channel_str_style[233087] coerce_tmp[1168030]))
          const-val coerce_tmp[2274154]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274156 'move' coerce_tmp[2274154](2274158 '.v' local_x[2274111] locale_id[30754]))
          const-val call_tmp[2274161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274163 'move' call_tmp[2274161](2274165 '!=' coerce_tmp[2274154] chpl_nodeID[208152]))
          if call_tmp[2274161]
          {
            (2274171 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2274174]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274176 'move' coerce_tmp[2274174](2274178 '.v' local_x[2274111] buff[30737]))
          const-val call_tmp[2274181]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274183 'move' call_tmp[2274181](2274185 'cast' c_string[19] coerce_tmp[2274174]))
          val ret[2274188]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2274190 'move' ret[2274188](2274192 '.v' local_x[2274111] buffLen[30719]))
          const-val call_tmp[2274195]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2274197]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274199 'move' coerce_tmp[2274197](2274201 'cast' int(32)[95] 0))
          (2274204 'move' call_tmp[2274195](2274207 call qio_channel_write_string[234389] coerce_tmp[2274197] 3 call_tmp[2274147] coerce_tmp[1168030] call_tmp[2274181] ret[2274188]))
          (2274214 'move' ret[2274046] call_tmp[2274195])
          ref i_x[2274217]:string[26] "temp"
          (2274219 'move' i_x[2274217](2274221 'set reference' local_x[2274111]))
          (2274224 call deinit[30831] i_x[2274217])
          label _end__write_binary_internal[2274226]
          (2274228 '=' e[2273767] ret[2274046])
        }
        {
          val ret[2274232]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2274234]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2274236]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274238 'move' coerce_tmp[2274236](2274240 '.v' x[1165170] locale_id[30754]))
          const-val call_tmp[2274243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274245 'move' call_tmp[2274243](2274247 '==' coerce_tmp[2274236] chpl_nodeID[208152]))
          if call_tmp[2274243]
          {
            const-val ret[2274252]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2274254]:string[26] "dead at end of block" "insert auto destroy"
            (2274257 call init[30760] ret[2274254])
            const-val coerce_tmp[2274259]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2274261 'move' coerce_tmp[2274259](2274263 '.v' x[1165170] cachedNumCodepoints[30731]))
            (2274266 '.=' ret[2274254] cachedNumCodepoints[30731] coerce_tmp[2274259])
            (2274271 call initWithBorrowedBuffer[948874] ret[2274254] x[1165170])
            (2274274 'move' ret[2274252] ret[2274254])
            (2274277 'move' ret[2274234] ret[2274252])
            gotoReturn _end_localize[2274295] _end_localize[2274295]
          }
          {
            const-val x[2274283]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2274286 call init=[30771] x[2274283] x[1165170])
            (2274289 'move' ret[2274234] x[2274283])
            gotoReturn _end_localize[2274295] _end_localize[2274295]
          }
          label _end_localize[2274295]
          val local_x[2274297]:string[26] "dead at end of block" "insert auto destroy"
          (2274299 'move' local_x[2274297] ret[2274234])
          const-val tmp[2274302]:bool[10] "dead after last mention" "const" "temp"
          (2274304 'move' tmp[2274302](2274306 '.v' local_x[2274297] hasEscapes[30749]))
          if tmp[2274302]
          {
            const-val call_tmp[2274311]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
            (2274313 'move' call_tmp[2274311](2274316 call qio_int_to_err[223634] EILSEQ[224444]))
            (2274318 '=' ret[2274232] call_tmp[2274311])
            ref i_x[2274321]:string[26] "temp"
            (2274323 'move' i_x[2274321](2274325 'set reference' local_x[2274297]))
            (2274328 call deinit[30831] i_x[2274321])
            gotoReturn _end__write_binary_internal[2274412] _end__write_binary_internal[2274412]
          }
          const-val call_tmp[2274333]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274335 'move' call_tmp[2274333](2274338 call qio_channel_str_style[233087] coerce_tmp[1168030]))
          const-val coerce_tmp[2274340]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274342 'move' coerce_tmp[2274340](2274344 '.v' local_x[2274297] locale_id[30754]))
          const-val call_tmp[2274347]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274349 'move' call_tmp[2274347](2274351 '!=' coerce_tmp[2274340] chpl_nodeID[208152]))
          if call_tmp[2274347]
          {
            (2274357 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2274360]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274362 'move' coerce_tmp[2274360](2274364 '.v' local_x[2274297] buff[30737]))
          const-val call_tmp[2274367]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274369 'move' call_tmp[2274367](2274371 'cast' c_string[19] coerce_tmp[2274360]))
          val ret[2274374]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2274376 'move' ret[2274374](2274378 '.v' local_x[2274297] buffLen[30719]))
          const-val call_tmp[2274381]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2274383]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274385 'move' coerce_tmp[2274383](2274387 'cast' int(32)[95] 0))
          (2274390 'move' call_tmp[2274381](2274393 call qio_channel_write_string[234389] coerce_tmp[2274383] 1 call_tmp[2274333] coerce_tmp[1168030] call_tmp[2274367] ret[2274374]))
          (2274400 'move' ret[2274232] call_tmp[2274381])
          ref i_x[2274403]:string[26] "temp"
          (2274405 'move' i_x[2274403](2274407 'set reference' local_x[2274297]))
          (2274410 call deinit[30831] i_x[2274403])
          label _end__write_binary_internal[2274412]
          (2274414 '=' e[2273767] ret[2274232])
        }
      }
    }
    {
      const-val call_tmp[2274420]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2274422 'move' call_tmp[2274420](2274425 call _write_text_internal[1172844] coerce_tmp[1168030] x[1165170]))
      (2274428 '=' e[2273767] call_tmp[2274420])
    }
    (2274432 'move' ret[2273765] e[2273767])
    label _end__write_one_internal[2274435]
    (1165192 'move' call_tmp[1165190] ret[2273765])
    val errorExists[2109400]:bool[10] "temp"
    (2109405 'move' errorExists[2109400](2109402 '!=' error[1811156] nil[44]))
    if errorExists[2109400]
    {
      (1811162 '=' error_out[1811151] error[1811156])
      gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
    }
    const-val err[1165200]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1165202 'move' err[1165200] call_tmp[1165190])
    const-val call_tmp[1165206]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165208 'move' call_tmp[1165206] 0)
    const-val call_tmp[1165212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206339]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206341 'move' call_tmp[2206339](2206344 call qio_err_to_int[223616] err[1165200]))
    const-val call_tmp[2206346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206348 'move' call_tmp[2206346](2206350 '==' call_tmp[2206339] call_tmp[1165206]))
    const-val call_tmp[2206353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206355 'move' call_tmp[2206353](2206357 '!' call_tmp[2206346]))
    (1165214 'move' call_tmp[1165212] call_tmp[2206353])
    const-val call_tmp[1165220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165222 'move' call_tmp[1165220] call_tmp[1165212])
    if call_tmp[1165220]
    {
      const-val call_tmp[1165229]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834630]:string[26] "temp"
      (1165237 call _constructIoErrorMsg[1173679] this[1165166] x[1165170] ret_tmp[1834630])
      (1834633 'move' call_tmp[1165229] ret_tmp[1834630])
      val msg[1165240]:string[26] "dead at end of block" "insert auto destroy"
      (1165242 'move' msg[1165240] call_tmp[1165229])
      const-val call_tmp[1165246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206100]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206102 'move' call_tmp[2206100](2206105 call qio_err_to_int[223616] err[1165200]))
      const-val call_tmp[2206107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206109 'move' call_tmp[2206107](2206111 '==' call_tmp[2206100] EILSEQ[224444]))
      (1165248 'move' call_tmp[1165246] call_tmp[2206107])
      const-val call_tmp[1165254]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165256 'move' call_tmp[1165254] call_tmp[1165246])
      if call_tmp[1165254]
      {
        const-val call_tmp[1165271]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830097]:string[26] "temp"
        (1165276 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165240] ret_tmp[1830097])
        (1830100 'move' call_tmp[1165271] ret_tmp[1830097])
        (1165280 call =[38269] msg[1165240] call_tmp[1165271])
        ref i_x[2131545]:string[26] "temp"
        (2131549 'move' i_x[2131545](2131547 'set reference' call_tmp[1165271]))
        (2131553 call deinit[30831] i_x[2131545])
      }
      val error[1811170]:Error[167938] "error variable" "temp"
      (1811179 'move' error[1811170] nil[44])
      (1165292 call _ch_ioerror[1062865] this[1165166] err[1165200] msg[1165240] error[1811170])
      val errorExists[2109408]:bool[10] "temp"
      (2109413 'move' errorExists[2109408](2109410 '!=' error[1811170] nil[44]))
      if errorExists[2109408]
      {
        gotoErrorHandling handler[1811171] handler[1811171]
      }
      label handler[1811171]
      const-val shouldHandleError[1811190]:bool[10] "temp"
      val errorExists[2109416]:bool[10] "temp"
      (2109421 'move' errorExists[2109416](2109418 '!=' error[1811170] nil[44]))
      (1811194 'move' shouldHandleError[1811190] errorExists[2109416])
      if shouldHandleError[1811190]
      {
        (1811186 '=' error_out[1811151] error[1811170])
        ref i_x[2131557]:string[26] "temp"
        (2131561 'move' i_x[2131557](2131559 'set reference' msg[1165240]))
        (2131565 call deinit[30831] i_x[2131557])
        gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
      }
      ref i_x[2131569]:string[26] "temp"
      (2131573 'move' i_x[2131569](2131571 'set reference' msg[1165240]))
      (2131577 call deinit[30831] i_x[2131569])
    }
    label _end_writeOne[1811153]
    (1165300 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1173913](const  ref arg this[1173919]:channel(true,dynamic,false)[1060947], const  ref arg x[1173923]:codepointIndex[28274], const  ref arg loc[1173925]:locale[28], ref arg error_out[1811215]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1173935]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263688]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263690 'move' call_tmp[2263688](2263692 '.' this[1173919] _channel_internal[1060940]))
    (1173937 'move' call_tmp[1173935] call_tmp[2263688])
    const-val call_tmp[1173943]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1175210]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175214 'move' coerce_tmp[1175210](1175212 'deref' call_tmp[1173935]))
    val error[1811220]:Error[167938] "error variable" "temp"
    (1811222 'move' error[1811220] nil[44])
    ref i_error_out[2274457]:Error[167938] "temp"
    (2274461 'move' i_error_out[2274457](2274459 'set reference' error[1811220]))
    val ret[2274464]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2274466]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2274468]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2274470]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2274472 'move' call_tmp[2274470](2274475 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2274478 'move' call_tmp[2274468] call_tmp[2274470])
    const-val call_tmp[2274481]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2274483]:locale[28] "temp"
    (2274486 call chpl_localeID_to_locale[92849] call_tmp[2274468] ret_tmp[2274483])
    (2274489 'move' call_tmp[2274481] ret_tmp[2274483])
    (2274492 'move' call_tmp[2274466] call_tmp[2274481])
    const-val call_tmp[2274495]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2274497]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2274500 call init[1068388] initTemp[2274497] call_tmp[2274466] coerce_tmp[1175210] loc[1173925])
    (2274505 'move' call_tmp[2274495] initTemp[2274497])
    val writer[2274508]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2274510 'move' writer[2274508] call_tmp[2274495])
    const-val err[2274513]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2274515]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2274517 'move' call_tmp[2274515](2274520 call qio_int_to_err[223634] 0))
    (2274522 'move' err[2274513] call_tmp[2274515])
    val error[2274525]:Error[167938] "error variable" "temp"
    (2274527 'move' error[2274525] nil[44])
    (2274531 call writeThis[1175345] x[1173923] writer[2274508] error[2274525])
    val errorExists[2274535]:bool[10] "temp"
    (2274537 'move' errorExists[2274535](2274539 '!=' error[2274525] nil[44]))
    if errorExists[2274535]
    {
      gotoErrorHandling handler[2274547] handler[2274547]
    }
    label handler[2274547]
    val errorExists[2274549]:bool[10] "temp"
    (2274551 'move' errorExists[2274549](2274553 '!=' error[2274525] nil[44]))
    if errorExists[2274549]
    {
      (2274558 '=' i_error_out[2274457] error[2274525])
      (2274561 '.=' writer[2274508] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2274565]:channel(true,dynamic,false)[1060947] "temp"
      (2274567 'move' i_x[2274565](2274569 'set reference' writer[2274508]))
      (2274572 call deinit[1536215] i_x[2274565])
      ref i_x[2274574]:locale[28] "temp"
      (2274576 'move' i_x[2274574](2274578 'set reference' call_tmp[2274466]))
      (2274581 call deinit[90185] i_x[2274574])
      gotoErrorHandlingReturn _end__write_one_internal[2274611] _end__write_one_internal[2274611]
    }
    (2274586 'move' ret[2274464] err[2274513])
    (2274589 '.=' writer[2274508] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2274593]:channel(true,dynamic,false)[1060947] "temp"
    (2274595 'move' i_x[2274593](2274597 'set reference' writer[2274508]))
    (2274600 call deinit[1536215] i_x[2274593])
    ref i_x[2274602]:locale[28] "temp"
    (2274604 'move' i_x[2274602](2274606 'set reference' call_tmp[2274466]))
    (2274609 call deinit[90185] i_x[2274602])
    label _end__write_one_internal[2274611]
    (1173945 'move' call_tmp[1173943] ret[2274464])
    val errorExists[2109432]:bool[10] "temp"
    (2109437 'move' errorExists[2109432](2109434 '!=' error[1811220] nil[44]))
    if errorExists[2109432]
    {
      (1811226 '=' error_out[1811215] error[1811220])
      gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
    }
    const-val err[1173953]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1173955 'move' err[1173953] call_tmp[1173943])
    const-val call_tmp[1173959]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173961 'move' call_tmp[1173959] 0)
    const-val call_tmp[1173965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206362]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206364 'move' call_tmp[2206362](2206367 call qio_err_to_int[223616] err[1173953]))
    const-val call_tmp[2206369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206371 'move' call_tmp[2206369](2206373 '==' call_tmp[2206362] call_tmp[1173959]))
    const-val call_tmp[2206376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206378 'move' call_tmp[2206376](2206380 '!' call_tmp[2206369]))
    (1173967 'move' call_tmp[1173965] call_tmp[2206376])
    const-val call_tmp[1173973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173975 'move' call_tmp[1173973] call_tmp[1173965])
    if call_tmp[1173973]
    {
      const-val call_tmp[1173982]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834644]:string[26] "temp"
      (1173990 call _constructIoErrorMsg[1175397] this[1173919] x[1173923] ret_tmp[1834644])
      (1834647 'move' call_tmp[1173982] ret_tmp[1834644])
      val msg[1173993]:string[26] "dead at end of block" "insert auto destroy"
      (1173995 'move' msg[1173993] call_tmp[1173982])
      const-val call_tmp[1173999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206117]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206119 'move' call_tmp[2206117](2206122 call qio_err_to_int[223616] err[1173953]))
      const-val call_tmp[2206124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206126 'move' call_tmp[2206124](2206128 '==' call_tmp[2206117] EILSEQ[224444]))
      (1174001 'move' call_tmp[1173999] call_tmp[2206124])
      const-val call_tmp[1174007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174009 'move' call_tmp[1174007] call_tmp[1173999])
      if call_tmp[1174007]
      {
        const-val call_tmp[1174024]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830103]:string[26] "temp"
        (1174029 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1173993] ret_tmp[1830103])
        (1830106 'move' call_tmp[1174024] ret_tmp[1830103])
        (1174033 call =[38269] msg[1173993] call_tmp[1174024])
        ref i_x[2131677]:string[26] "temp"
        (2131681 'move' i_x[2131677](2131679 'set reference' call_tmp[1174024]))
        (2131685 call deinit[30831] i_x[2131677])
      }
      val error[1811234]:Error[167938] "error variable" "temp"
      (1811243 'move' error[1811234] nil[44])
      (1174045 call _ch_ioerror[1062865] this[1173919] err[1173953] msg[1173993] error[1811234])
      val errorExists[2109440]:bool[10] "temp"
      (2109445 'move' errorExists[2109440](2109442 '!=' error[1811234] nil[44]))
      if errorExists[2109440]
      {
        gotoErrorHandling handler[1811235] handler[1811235]
      }
      label handler[1811235]
      const-val shouldHandleError[1811254]:bool[10] "temp"
      val errorExists[2109448]:bool[10] "temp"
      (2109453 'move' errorExists[2109448](2109450 '!=' error[1811234] nil[44]))
      (1811258 'move' shouldHandleError[1811254] errorExists[2109448])
      if shouldHandleError[1811254]
      {
        (1811250 '=' error_out[1811215] error[1811234])
        ref i_x[2131689]:string[26] "temp"
        (2131693 'move' i_x[2131689](2131691 'set reference' msg[1173993]))
        (2131697 call deinit[30831] i_x[2131689])
        gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
      }
      ref i_x[2131701]:string[26] "temp"
      (2131705 'move' i_x[2131701](2131703 'set reference' msg[1173993]))
      (2131709 call deinit[30831] i_x[2131701])
    }
    label _end_writeOne[1811217]
    (1174053 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1393788](const  ref arg this[1393794]:channel(true,dynamic,true)[1021825], const  ref arg x[1393798]:[domain(1,int(64),false)] real(64)[1365840], const  ref arg loc[1393800]:locale[28], ref arg error_out[1812588]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1393810]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2228177]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228179 'move' call_tmp[2228177](2228181 '.' this[1393794] _channel_internal[1021818]))
    (1393812 'move' call_tmp[1393810] call_tmp[2228177])
    const-val call_tmp[1393818]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1396717]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1396721 'move' coerce_tmp[1396717](1396719 'deref' call_tmp[1393810]))
    val error[1812593]:Error[167938] "error variable" "temp"
    (1812595 'move' error[1812593] nil[44])
    ref i_error_out[2320737]:Error[167938] "temp"
    (2320741 'move' i_error_out[2320737](2320739 'set reference' error[1812593]))
    val ret[2320744]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2320746]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2320748]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2320750]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2320752 'move' call_tmp[2320750](2320755 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2320758 'move' call_tmp[2320748] call_tmp[2320750])
    const-val call_tmp[2320761]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2320763]:locale[28] "temp"
    (2320766 call chpl_localeID_to_locale[92849] call_tmp[2320748] ret_tmp[2320763])
    (2320769 'move' call_tmp[2320761] ret_tmp[2320763])
    (2320772 'move' call_tmp[2320746] call_tmp[2320761])
    const-val call_tmp[2320775]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2320777]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2320780 call init[1068388] initTemp[2320777] call_tmp[2320746] coerce_tmp[1396717] loc[1393800])
    (2320785 'move' call_tmp[2320775] initTemp[2320777])
    val writer[2320788]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2320790 'move' writer[2320788] call_tmp[2320775])
    const-val err[2320793]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2320795]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320797 'move' call_tmp[2320795](2320800 call qio_int_to_err[223634] 0))
    (2320802 'move' err[2320793] call_tmp[2320795])
    val error[2320805]:Error[167938] "error variable" "temp"
    (2320807 'move' error[2320805] nil[44])
    (2320811 call writeThis[1396898] x[1393798] writer[2320788] error[2320805])
    val errorExists[2320815]:bool[10] "temp"
    (2320817 'move' errorExists[2320815](2320819 '!=' error[2320805] nil[44]))
    if errorExists[2320815]
    {
      gotoErrorHandling handler[2320827] handler[2320827]
    }
    label handler[2320827]
    val errorExists[2320829]:bool[10] "temp"
    (2320831 'move' errorExists[2320829](2320833 '!=' error[2320805] nil[44]))
    if errorExists[2320829]
    {
      (2320838 '=' i_error_out[2320737] error[2320805])
      (2320841 '.=' writer[2320788] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2320845]:channel(true,dynamic,false)[1060947] "temp"
      (2320847 'move' i_x[2320845](2320849 'set reference' writer[2320788]))
      (2320852 call deinit[1536215] i_x[2320845])
      ref i_x[2320854]:locale[28] "temp"
      (2320856 'move' i_x[2320854](2320858 'set reference' call_tmp[2320746]))
      (2320861 call deinit[90185] i_x[2320854])
      gotoErrorHandlingReturn _end__write_one_internal[2320891] _end__write_one_internal[2320891]
    }
    (2320866 'move' ret[2320744] err[2320793])
    (2320869 '.=' writer[2320788] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2320873]:channel(true,dynamic,false)[1060947] "temp"
    (2320875 'move' i_x[2320873](2320877 'set reference' writer[2320788]))
    (2320880 call deinit[1536215] i_x[2320873])
    ref i_x[2320882]:locale[28] "temp"
    (2320884 'move' i_x[2320882](2320886 'set reference' call_tmp[2320746]))
    (2320889 call deinit[90185] i_x[2320882])
    label _end__write_one_internal[2320891]
    (1393820 'move' call_tmp[1393818] ret[2320744])
    val errorExists[2110120]:bool[10] "temp"
    (2110125 'move' errorExists[2110120](2110122 '!=' error[1812593] nil[44]))
    if errorExists[2110120]
    {
      (1812599 '=' error_out[1812588] error[1812593])
      gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
    }
    const-val err[1393828]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1393830 'move' err[1393828] call_tmp[1393818])
    const-val call_tmp[1393834]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393836 'move' call_tmp[1393834] 0)
    const-val call_tmp[1393840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206431]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206433 'move' call_tmp[2206431](2206436 call qio_err_to_int[223616] err[1393828]))
    const-val call_tmp[2206438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206440 'move' call_tmp[2206438](2206442 '==' call_tmp[2206431] call_tmp[1393834]))
    const-val call_tmp[2206445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206447 'move' call_tmp[2206445](2206449 '!' call_tmp[2206438]))
    (1393842 'move' call_tmp[1393840] call_tmp[2206445])
    const-val call_tmp[1393848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393850 'move' call_tmp[1393848] call_tmp[1393840])
    if call_tmp[1393848]
    {
      const-val call_tmp[1393857]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838444]:string[26] "temp"
      (1393865 call _constructIoErrorMsg[1429191] this[1393794] x[1393798] ret_tmp[1838444])
      (1838447 'move' call_tmp[1393857] ret_tmp[1838444])
      val msg[1393868]:string[26] "dead at end of block" "insert auto destroy"
      (1393870 'move' msg[1393868] call_tmp[1393857])
      const-val call_tmp[1393874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206168]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206170 'move' call_tmp[2206168](2206173 call qio_err_to_int[223616] err[1393828]))
      const-val call_tmp[2206175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206177 'move' call_tmp[2206175](2206179 '==' call_tmp[2206168] EILSEQ[224444]))
      (1393876 'move' call_tmp[1393874] call_tmp[2206175])
      const-val call_tmp[1393882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1393884 'move' call_tmp[1393882] call_tmp[1393874])
      if call_tmp[1393882]
      {
        const-val call_tmp[1393899]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830301]:string[26] "temp"
        (1393904 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1393868] ret_tmp[1830301])
        (1830304 'move' call_tmp[1393899] ret_tmp[1830301])
        (1393908 call =[38269] msg[1393868] call_tmp[1393899])
        ref i_x[2132829]:string[26] "temp"
        (2132833 'move' i_x[2132829](2132831 'set reference' call_tmp[1393899]))
        (2132837 call deinit[30831] i_x[2132829])
      }
      val error[1812607]:Error[167938] "error variable" "temp"
      (1812616 'move' error[1812607] nil[44])
      (1393920 call _ch_ioerror[1393261] this[1393794] err[1393828] msg[1393868] error[1812607])
      val errorExists[2110128]:bool[10] "temp"
      (2110133 'move' errorExists[2110128](2110130 '!=' error[1812607] nil[44]))
      if errorExists[2110128]
      {
        gotoErrorHandling handler[1812608] handler[1812608]
      }
      label handler[1812608]
      const-val shouldHandleError[1812627]:bool[10] "temp"
      val errorExists[2110136]:bool[10] "temp"
      (2110141 'move' errorExists[2110136](2110138 '!=' error[1812607] nil[44]))
      (1812631 'move' shouldHandleError[1812627] errorExists[2110136])
      if shouldHandleError[1812627]
      {
        (1812623 '=' error_out[1812588] error[1812607])
        ref i_x[2132841]:string[26] "temp"
        (2132845 'move' i_x[2132841](2132843 'set reference' msg[1393868]))
        (2132849 call deinit[30831] i_x[2132841])
        gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
      }
      ref i_x[2132853]:string[26] "temp"
      (2132857 'move' i_x[2132853](2132855 'set reference' msg[1393868]))
      (2132861 call deinit[30831] i_x[2132853])
    }
    label _end_writeOne[1812590]
    (1393928 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1408673](const  ref arg this[1408679]:channel(true,dynamic,false)[1060947], const  ref arg x[1408683]:ioLiteral[238753], const  ref arg loc[1408685]:locale[28], ref arg error_out[1813269]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1408695]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263698]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263700 'move' call_tmp[2263698](2263702 '.' this[1408679] _channel_internal[1060940]))
    (1408697 'move' call_tmp[1408695] call_tmp[2263698])
    const-val call_tmp[1408703]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1411546]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1411550 'move' coerce_tmp[1411546](1411548 'deref' call_tmp[1408695]))
    val error[1813274]:Error[167938] "error variable" "temp"
    (1813276 'move' error[1813274] nil[44])
    ref i_error_out[2321964]:Error[167938] "temp"
    (2321968 'move' i_error_out[2321964](2321966 'set reference' error[1813274]))
    val ret[2321971]:syserr[223584] "dead after last mention" "RVV" "temp"
    (2321974 call qio_int_to_err[223634] 0)
    ref call_tmp[2321976]:string[26] "dead after last mention" "maybe param" "temp"
    (2321978 'move' call_tmp[2321976](2321980 '.' x[1408683] val[238728]))
    const-val call_tmp[2321983]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret[2321985]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2321987]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2321989 'move' coerce_tmp[2321987](2321991 '.v' call_tmp[2321976] locale_id[30754]))
    const-val call_tmp[2321994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2321996 'move' call_tmp[2321994](2321998 '==' coerce_tmp[2321987] chpl_nodeID[208152]))
    if call_tmp[2321994]
    {
      const-val ret[2322003]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2322005]:string[26] "dead at end of block" "insert auto destroy"
      (2322008 call init[30760] ret[2322005])
      const-val coerce_tmp[2322010]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2322012 'move' coerce_tmp[2322010](2322014 '.v' call_tmp[2321976] cachedNumCodepoints[30731]))
      (2322017 '.=' ret[2322005] cachedNumCodepoints[30731] coerce_tmp[2322010])
      (2322022 call initWithBorrowedBuffer[948874] ret[2322005] call_tmp[2321976])
      (2322025 'move' ret[2322003] ret[2322005])
      (2322028 'move' ret[2321985] ret[2322003])
      gotoReturn _end_localize[2322046] _end_localize[2322046]
    }
    {
      const-val x[2322034]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2322037 call init=[30771] x[2322034] call_tmp[2321976])
      (2322040 'move' ret[2321985] x[2322034])
      gotoReturn _end_localize[2322046] _end_localize[2322046]
    }
    label _end_localize[2322046]
    (2322048 'move' call_tmp[2321983] ret[2321985])
    const-val coerce_tmp[2322051]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2322053 'move' coerce_tmp[2322051](2322055 '.v' call_tmp[2321983] locale_id[30754]))
    const-val call_tmp[2322058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322060 'move' call_tmp[2322058](2322062 '!=' coerce_tmp[2322051] chpl_nodeID[208152]))
    if call_tmp[2322058]
    {
      (2322068 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2322071]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2322073 'move' coerce_tmp[2322071](2322075 '.v' call_tmp[2321983] buff[30737]))
    const-val call_tmp[2322078]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322080 'move' call_tmp[2322078](2322082 'cast' c_string[19] coerce_tmp[2322071]))
    ref call_tmp[2322085]:string[26] "dead after last mention" "maybe param" "temp"
    (2322087 'move' call_tmp[2322085](2322089 '.' x[1408683] val[238728]))
    val ret[2322092]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2322094 'move' ret[2322092](2322096 '.v' call_tmp[2322085] buffLen[30719]))
    const-val call_tmp[2322099]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2322101]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2322103 'move' coerce_tmp[2322101](2322105 'cast' int(32)[95] 0))
    (2322108 'move' call_tmp[2322099](2322111 call qio_channel_print_literal[234917] coerce_tmp[2322101] coerce_tmp[1411546] call_tmp[2322078] ret[2322092]))
    (2322116 'move' ret[2321971] call_tmp[2322099])
    ref i_x[2322119]:string[26] "temp"
    (2322121 'move' i_x[2322119](2322123 'set reference' call_tmp[2321983]))
    (2322126 call deinit[30831] i_x[2322119])
    (1408705 'move' call_tmp[1408703] ret[2321971])
    val errorExists[2110400]:bool[10] "temp"
    (2110405 'move' errorExists[2110400](2110402 '!=' error[1813274] nil[44]))
    if errorExists[2110400]
    {
      (1813280 '=' error_out[1813269] error[1813274])
      gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
    }
    const-val err[1408713]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1408715 'move' err[1408713] call_tmp[1408703])
    const-val call_tmp[1408719]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408721 'move' call_tmp[1408719] 0)
    const-val call_tmp[1408725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206385]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206387 'move' call_tmp[2206385](2206390 call qio_err_to_int[223616] err[1408713]))
    const-val call_tmp[2206392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206394 'move' call_tmp[2206392](2206396 '==' call_tmp[2206385] call_tmp[1408719]))
    const-val call_tmp[2206399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206401 'move' call_tmp[2206399](2206403 '!' call_tmp[2206392]))
    (1408727 'move' call_tmp[1408725] call_tmp[2206399])
    const-val call_tmp[1408733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408735 'move' call_tmp[1408733] call_tmp[1408725])
    if call_tmp[1408733]
    {
      const-val call_tmp[1408742]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838376]:string[26] "temp"
      (1408750 call _constructIoErrorMsg[1411634] this[1408679] x[1408683] ret_tmp[1838376])
      (1838379 'move' call_tmp[1408742] ret_tmp[1838376])
      val msg[1408753]:string[26] "dead at end of block" "insert auto destroy"
      (1408755 'move' msg[1408753] call_tmp[1408742])
      const-val call_tmp[1408759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206134]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206136 'move' call_tmp[2206134](2206139 call qio_err_to_int[223616] err[1408713]))
      const-val call_tmp[2206141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206143 'move' call_tmp[2206141](2206145 '==' call_tmp[2206134] EILSEQ[224444]))
      (1408761 'move' call_tmp[1408759] call_tmp[2206141])
      const-val call_tmp[1408767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1408769 'move' call_tmp[1408767] call_tmp[1408759])
      if call_tmp[1408767]
      {
        const-val call_tmp[1408784]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830313]:string[26] "temp"
        (1408789 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1408753] ret_tmp[1830313])
        (1830316 'move' call_tmp[1408784] ret_tmp[1830313])
        (1408793 call =[38269] msg[1408753] call_tmp[1408784])
        ref i_x[2132901]:string[26] "temp"
        (2132905 'move' i_x[2132901](2132903 'set reference' call_tmp[1408784]))
        (2132909 call deinit[30831] i_x[2132901])
      }
      val error[1813288]:Error[167938] "error variable" "temp"
      (1813297 'move' error[1813288] nil[44])
      (1408805 call _ch_ioerror[1062865] this[1408679] err[1408713] msg[1408753] error[1813288])
      val errorExists[2110408]:bool[10] "temp"
      (2110413 'move' errorExists[2110408](2110410 '!=' error[1813288] nil[44]))
      if errorExists[2110408]
      {
        gotoErrorHandling handler[1813289] handler[1813289]
      }
      label handler[1813289]
      const-val shouldHandleError[1813308]:bool[10] "temp"
      val errorExists[2110416]:bool[10] "temp"
      (2110421 'move' errorExists[2110416](2110418 '!=' error[1813288] nil[44]))
      (1813312 'move' shouldHandleError[1813308] errorExists[2110416])
      if shouldHandleError[1813308]
      {
        (1813304 '=' error_out[1813269] error[1813288])
        ref i_x[2132913]:string[26] "temp"
        (2132917 'move' i_x[2132913](2132915 'set reference' msg[1408753]))
        (2132921 call deinit[30831] i_x[2132913])
        gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
      }
      ref i_x[2132925]:string[26] "temp"
      (2132929 'move' i_x[2132925](2132927 'set reference' msg[1408753]))
      (2132933 call deinit[30831] i_x[2132925])
    }
    label _end_writeOne[1813271]
    (1408813 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1421879](const  ref arg this[1421885]:channel(true,dynamic,false)[1060947], const in arg x[1421889]:real(64)[16], const  ref arg loc[1421891]:locale[28], ref arg error_out[1813459]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1421901]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2263708]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263710 'move' call_tmp[2263708](2263712 '.' this[1421885] _channel_internal[1060940]))
    (1421903 'move' call_tmp[1421901] call_tmp[2263708])
    const-val call_tmp[1421909]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1422988]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1422992 'move' coerce_tmp[1422988](1422990 'deref' call_tmp[1421901]))
    val error[1813464]:Error[167938] "error variable" "temp"
    (1813466 'move' error[1813464] nil[44])
    ref i_error_out[2324244]:Error[167938] "temp"
    (2324248 'move' i_error_out[2324244](2324246 'set reference' error[1813464]))
    val ret[2324251]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2324253]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2324255]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324257 'move' call_tmp[2324255](2324260 call qio_int_to_err[223634] 0))
    (2324262 'move' e[2324253] call_tmp[2324255])
    const-val call_tmp[2324265]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2324267 'move' call_tmp[2324265](2324270 call qio_channel_binary[233057] coerce_tmp[1422988]))
    const-val call_tmp[2324272]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2324274 'move' call_tmp[2324272](2324277 call qio_channel_byteorder[233072] coerce_tmp[1422988]))
    const-val byteorder[2324279]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (2324281 'move' byteorder[2324279] call_tmp[2324272])
    const-val coerce_tmp[2324284]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324286 'move' coerce_tmp[2324284](2324288 'cast' int(64)[13] call_tmp[2324265]))
    const-val call_tmp[2324291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324293 'move' call_tmp[2324291](2324295 '!=' coerce_tmp[2324284] 0))
    if call_tmp[2324291]
    {
      const-val tmp[2324300]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2324302]:Error[167938] "error variable" "temp"
      (2324304 'move' error[2324302] nil[44])
      (2324307 'move' tmp[2324300](2324310 call _cast[1070308] byteorder[2324279] error[2324302]))
      val errorExists[2324313]:bool[10] "temp"
      (2324315 'move' errorExists[2324313](2324317 '!=' error[2324302] nil[44]))
      if errorExists[2324313]
      {
        (2324322 '=' i_error_out[2324244] error[2324302])
        gotoErrorHandlingReturn _end__write_one_internal[2324426] _end__write_one_internal[2324426]
      }
      const-val call_tmp[2324328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2324330 'move' call_tmp[2324328](2324332 '==' tmp[2324300] big[230926]))
      if call_tmp[2324328]
      {
        const-val call_tmp[2324337]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2324339]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2324341 'move' coerce_tmp[2324339](2324343 'cast' int(32)[95] 0))
        (2324346 'move' call_tmp[2324337](2324349 call qio_channel_write_float64[234266] coerce_tmp[2324339] 2 coerce_tmp[1422988] x[1421889]))
        (2324354 '=' e[2324253] call_tmp[2324337])
      }
      {
        const-val call_tmp[2324358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2324360 'move' call_tmp[2324358](2324362 '==' tmp[2324300] little[230929]))
        if call_tmp[2324358]
        {
          const-val call_tmp[2324367]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2324369]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2324371 'move' coerce_tmp[2324369](2324373 'cast' int(32)[95] 0))
          (2324376 'move' call_tmp[2324367](2324379 call qio_channel_write_float64[234266] coerce_tmp[2324369] 3 coerce_tmp[1422988] x[1421889]))
          (2324384 '=' e[2324253] call_tmp[2324367])
        }
        {
          const-val call_tmp[2324388]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2324390]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2324392 'move' coerce_tmp[2324390](2324394 'cast' int(32)[95] 0))
          (2324397 'move' call_tmp[2324388](2324400 call qio_channel_write_float64[234266] coerce_tmp[2324390] 1 coerce_tmp[1422988] x[1421889]))
          (2324405 '=' e[2324253] call_tmp[2324388])
        }
      }
    }
    {
      const-val call_tmp[2324411]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2324413 'move' call_tmp[2324411](2324416 call _write_text_internal[1427778] coerce_tmp[1422988] x[1421889]))
      (2324419 '=' e[2324253] call_tmp[2324411])
    }
    (2324423 'move' ret[2324251] e[2324253])
    label _end__write_one_internal[2324426]
    (1421911 'move' call_tmp[1421909] ret[2324251])
    val errorExists[2110496]:bool[10] "temp"
    (2110501 'move' errorExists[2110496](2110498 '!=' error[1813464] nil[44]))
    if errorExists[2110496]
    {
      (1813470 '=' error_out[1813459] error[1813464])
      gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
    }
    const-val err[1421919]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1421921 'move' err[1421919] call_tmp[1421909])
    const-val call_tmp[1421925]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421927 'move' call_tmp[1421925] 0)
    const-val call_tmp[1421931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206408]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206410 'move' call_tmp[2206408](2206413 call qio_err_to_int[223616] err[1421919]))
    const-val call_tmp[2206415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206417 'move' call_tmp[2206415](2206419 '==' call_tmp[2206408] call_tmp[1421925]))
    const-val call_tmp[2206422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206424 'move' call_tmp[2206422](2206426 '!' call_tmp[2206415]))
    (1421933 'move' call_tmp[1421931] call_tmp[2206422])
    const-val call_tmp[1421939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421941 'move' call_tmp[1421939] call_tmp[1421931])
    if call_tmp[1421939]
    {
      const-val call_tmp[1421948]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838430]:string[26] "temp"
      (1421956 call _constructIoErrorMsg[1428618] this[1421885] x[1421889] ret_tmp[1838430])
      (1838433 'move' call_tmp[1421948] ret_tmp[1838430])
      val msg[1421959]:string[26] "dead at end of block" "insert auto destroy"
      (1421961 'move' msg[1421959] call_tmp[1421948])
      const-val call_tmp[1421965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206151]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206153 'move' call_tmp[2206151](2206156 call qio_err_to_int[223616] err[1421919]))
      const-val call_tmp[2206158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206160 'move' call_tmp[2206158](2206162 '==' call_tmp[2206151] EILSEQ[224444]))
      (1421967 'move' call_tmp[1421965] call_tmp[2206158])
      const-val call_tmp[1421973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1421975 'move' call_tmp[1421973] call_tmp[1421965])
      if call_tmp[1421973]
      {
        const-val call_tmp[1421990]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830331]:string[26] "temp"
        (1421995 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1421959] ret_tmp[1830331])
        (1830334 'move' call_tmp[1421990] ret_tmp[1830331])
        (1421999 call =[38269] msg[1421959] call_tmp[1421990])
        ref i_x[2132985]:string[26] "temp"
        (2132989 'move' i_x[2132985](2132987 'set reference' call_tmp[1421990]))
        (2132993 call deinit[30831] i_x[2132985])
      }
      val error[1813478]:Error[167938] "error variable" "temp"
      (1813487 'move' error[1813478] nil[44])
      (1422011 call _ch_ioerror[1062865] this[1421885] err[1421919] msg[1421959] error[1813478])
      val errorExists[2110504]:bool[10] "temp"
      (2110509 'move' errorExists[2110504](2110506 '!=' error[1813478] nil[44]))
      if errorExists[2110504]
      {
        gotoErrorHandling handler[1813479] handler[1813479]
      }
      label handler[1813479]
      const-val shouldHandleError[1813498]:bool[10] "temp"
      val errorExists[2110512]:bool[10] "temp"
      (2110517 'move' errorExists[2110512](2110514 '!=' error[1813478] nil[44]))
      (1813502 'move' shouldHandleError[1813498] errorExists[2110512])
      if shouldHandleError[1813498]
      {
        (1813494 '=' error_out[1813459] error[1813478])
        ref i_x[2132997]:string[26] "temp"
        (2133001 'move' i_x[2132997](2132999 'set reference' msg[1421959]))
        (2133005 call deinit[30831] i_x[2132997])
        gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
      }
      ref i_x[2133009]:string[26] "temp"
      (2133013 'move' i_x[2133009](2133011 'set reference' msg[1421959]))
      (2133017 call deinit[30831] i_x[2133009])
    }
    label _end_writeOne[1813461]
    (1422019 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1429447](const  ref arg this[1429453]:channel(true,dynamic,true)[1021825], const  ref arg x[1429457]:ioNewline[238701], const  ref arg loc[1429459]:locale[28], ref arg error_out[1813523]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1429469]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2228187]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228189 'move' call_tmp[2228187](2228191 '.' this[1429453] _channel_internal[1021818]))
    (1429471 'move' call_tmp[1429469] call_tmp[2228187])
    const-val call_tmp[1429477]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1432319]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1432323 'move' coerce_tmp[1432319](1432321 'deref' call_tmp[1429469]))
    val error[1813528]:Error[167938] "error variable" "temp"
    (1813530 'move' error[1813528] nil[44])
    ref i_error_out[2324441]:Error[167938] "temp"
    (2324445 'move' i_error_out[2324441](2324443 'set reference' error[1813528]))
    val ret[2324448]:syserr[223584] "dead after last mention" "RVV" "temp"
    (2324451 call qio_int_to_err[223634] 0)
    const-val call_tmp[2324453]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2324455]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324457 'move' coerce_tmp[2324455](2324459 'cast' int(32)[95] 0))
    (2324462 'move' call_tmp[2324453](2324465 call qio_channel_write_newline[234735] coerce_tmp[2324455] coerce_tmp[1432319]))
    (2324468 'move' ret[2324448] call_tmp[2324453])
    (1429479 'move' call_tmp[1429477] ret[2324448])
    val errorExists[2110528]:bool[10] "temp"
    (2110533 'move' errorExists[2110528](2110530 '!=' error[1813528] nil[44]))
    if errorExists[2110528]
    {
      (1813534 '=' error_out[1813523] error[1813528])
      gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
    }
    const-val err[1429487]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1429489 'move' err[1429487] call_tmp[1429477])
    const-val call_tmp[1429493]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429495 'move' call_tmp[1429493] 0)
    const-val call_tmp[1429499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206454]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206456 'move' call_tmp[2206454](2206459 call qio_err_to_int[223616] err[1429487]))
    const-val call_tmp[2206461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206463 'move' call_tmp[2206461](2206465 '==' call_tmp[2206454] call_tmp[1429493]))
    const-val call_tmp[2206468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206470 'move' call_tmp[2206468](2206472 '!' call_tmp[2206461]))
    (1429501 'move' call_tmp[1429499] call_tmp[2206468])
    const-val call_tmp[1429507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429509 'move' call_tmp[1429507] call_tmp[1429499])
    if call_tmp[1429507]
    {
      const-val call_tmp[1429516]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838458]:string[26] "temp"
      (1429524 call _constructIoErrorMsg[1432375] this[1429453] x[1429457] ret_tmp[1838458])
      (1838461 'move' call_tmp[1429516] ret_tmp[1838458])
      val msg[1429527]:string[26] "dead at end of block" "insert auto destroy"
      (1429529 'move' msg[1429527] call_tmp[1429516])
      const-val call_tmp[1429533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206185]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206187 'move' call_tmp[2206185](2206190 call qio_err_to_int[223616] err[1429487]))
      const-val call_tmp[2206192]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206194 'move' call_tmp[2206192](2206196 '==' call_tmp[2206185] EILSEQ[224444]))
      (1429535 'move' call_tmp[1429533] call_tmp[2206192])
      const-val call_tmp[1429541]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1429543 'move' call_tmp[1429541] call_tmp[1429533])
      if call_tmp[1429541]
      {
        const-val call_tmp[1429558]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830337]:string[26] "temp"
        (1429563 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1429527] ret_tmp[1830337])
        (1830340 'move' call_tmp[1429558] ret_tmp[1830337])
        (1429567 call =[38269] msg[1429527] call_tmp[1429558])
        ref i_x[2133021]:string[26] "temp"
        (2133025 'move' i_x[2133021](2133023 'set reference' call_tmp[1429558]))
        (2133029 call deinit[30831] i_x[2133021])
      }
      val error[1813542]:Error[167938] "error variable" "temp"
      (1813551 'move' error[1813542] nil[44])
      (1429579 call _ch_ioerror[1393261] this[1429453] err[1429487] msg[1429527] error[1813542])
      val errorExists[2110536]:bool[10] "temp"
      (2110541 'move' errorExists[2110536](2110538 '!=' error[1813542] nil[44]))
      if errorExists[2110536]
      {
        gotoErrorHandling handler[1813543] handler[1813543]
      }
      label handler[1813543]
      const-val shouldHandleError[1813562]:bool[10] "temp"
      val errorExists[2110544]:bool[10] "temp"
      (2110549 'move' errorExists[2110544](2110546 '!=' error[1813542] nil[44]))
      (1813566 'move' shouldHandleError[1813562] errorExists[2110544])
      if shouldHandleError[1813562]
      {
        (1813558 '=' error_out[1813523] error[1813542])
        ref i_x[2133033]:string[26] "temp"
        (2133037 'move' i_x[2133033](2133035 'set reference' msg[1429527]))
        (2133041 call deinit[30831] i_x[2133033])
        gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
      }
      ref i_x[2133045]:string[26] "temp"
      (2133049 'move' i_x[2133045](2133047 'set reference' msg[1429527]))
      (2133053 call deinit[30831] i_x[2133045])
    }
    label _end_writeOne[1813525]
    (1429587 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1433423](const  ref arg this[1433429]:channel(true,dynamic,true)[1021825], const in arg x[1433433]:int(64)[13], const  ref arg loc[1433435]:locale[28], ref arg error_out[1813724]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-ref call_tmp[1433445]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2228197]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228199 'move' call_tmp[2228197](2228201 '.' this[1433429] _channel_internal[1021818]))
    (1433447 'move' call_tmp[1433445] call_tmp[2228197])
    const-val call_tmp[1433453]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1433573]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1433577 'move' coerce_tmp[1433573](1433575 'deref' call_tmp[1433445]))
    val error[1813729]:Error[167938] "error variable" "temp"
    (1813731 'move' error[1813729] nil[44])
    ref i_error_out[2269150]:Error[167938] "temp"
    (2269154 'move' i_error_out[2269150](2269152 'set reference' error[1813729]))
    val ret[2269157]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2269159]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2269161]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269163 'move' call_tmp[2269161](2269166 call qio_int_to_err[223634] 0))
    (2269168 'move' e[2269159] call_tmp[2269161])
    const-val call_tmp[2269171]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2269173 'move' call_tmp[2269171](2269176 call qio_channel_binary[233057] coerce_tmp[1433573]))
    const-val call_tmp[2269178]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2269180 'move' call_tmp[2269178](2269183 call qio_channel_byteorder[233072] coerce_tmp[1433573]))
    const-val byteorder[2269185]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (2269187 'move' byteorder[2269185] call_tmp[2269178])
    const-val coerce_tmp[2269190]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269192 'move' coerce_tmp[2269190](2269194 'cast' int(64)[13] call_tmp[2269171]))
    const-val call_tmp[2269197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269199 'move' call_tmp[2269197](2269201 '!=' coerce_tmp[2269190] 0))
    if call_tmp[2269197]
    {
      const-val tmp[2269206]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2269208]:Error[167938] "error variable" "temp"
      (2269210 'move' error[2269208] nil[44])
      (2269213 'move' tmp[2269206](2269216 call _cast[1070308] byteorder[2269185] error[2269208]))
      val errorExists[2269219]:bool[10] "temp"
      (2269221 'move' errorExists[2269219](2269223 '!=' error[2269208] nil[44]))
      if errorExists[2269219]
      {
        (2269228 '=' i_error_out[2269150] error[2269208])
        gotoErrorHandlingReturn _end__write_one_internal[2269332] _end__write_one_internal[2269332]
      }
      const-val call_tmp[2269234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269236 'move' call_tmp[2269234](2269238 '==' tmp[2269206] big[230926]))
      if call_tmp[2269234]
      {
        const-val call_tmp[2269243]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2269245]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269247 'move' coerce_tmp[2269245](2269249 'cast' int(32)[95] 0))
        (2269252 'move' call_tmp[2269243](2269255 call qio_channel_write_int64[234050] coerce_tmp[2269245] 2 coerce_tmp[1433573] x[1433433]))
        (2269260 '=' e[2269159] call_tmp[2269243])
      }
      {
        const-val call_tmp[2269264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269266 'move' call_tmp[2269264](2269268 '==' tmp[2269206] little[230929]))
        if call_tmp[2269264]
        {
          const-val call_tmp[2269273]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269275]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269277 'move' coerce_tmp[2269275](2269279 'cast' int(32)[95] 0))
          (2269282 'move' call_tmp[2269273](2269285 call qio_channel_write_int64[234050] coerce_tmp[2269275] 3 coerce_tmp[1433573] x[1433433]))
          (2269290 '=' e[2269159] call_tmp[2269273])
        }
        {
          const-val call_tmp[2269294]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269296]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269298 'move' coerce_tmp[2269296](2269300 'cast' int(32)[95] 0))
          (2269303 'move' call_tmp[2269294](2269306 call qio_channel_write_int64[234050] coerce_tmp[2269296] 1 coerce_tmp[1433573] x[1433433]))
          (2269311 '=' e[2269159] call_tmp[2269294])
        }
      }
    }
    {
      const-val call_tmp[2269317]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269319 'move' call_tmp[2269317](2269322 call _write_text_internal[1078760] coerce_tmp[1433573] x[1433433]))
      (2269325 '=' e[2269159] call_tmp[2269317])
    }
    (2269329 'move' ret[2269157] e[2269159])
    label _end__write_one_internal[2269332]
    (1433455 'move' call_tmp[1433453] ret[2269157])
    val errorExists[2110632]:bool[10] "temp"
    (2110637 'move' errorExists[2110632](2110634 '!=' error[1813729] nil[44]))
    if errorExists[2110632]
    {
      (1813735 '=' error_out[1813724] error[1813729])
      gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
    }
    const-val err[1433463]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1433465 'move' err[1433463] call_tmp[1433453])
    const-val call_tmp[1433469]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433471 'move' call_tmp[1433469] 0)
    const-val call_tmp[1433475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206477]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206479 'move' call_tmp[2206477](2206482 call qio_err_to_int[223616] err[1433463]))
    const-val call_tmp[2206484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206486 'move' call_tmp[2206484](2206488 '==' call_tmp[2206477] call_tmp[1433469]))
    const-val call_tmp[2206491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206493 'move' call_tmp[2206491](2206495 '!' call_tmp[2206484]))
    (1433477 'move' call_tmp[1433475] call_tmp[2206491])
    const-val call_tmp[1433483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433485 'move' call_tmp[1433483] call_tmp[1433475])
    if call_tmp[1433483]
    {
      const-val call_tmp[1433492]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838484]:string[26] "temp"
      (1433500 call _constructIoErrorMsg[1433585] this[1433429] x[1433433] ret_tmp[1838484])
      (1838487 'move' call_tmp[1433492] ret_tmp[1838484])
      val msg[1433503]:string[26] "dead at end of block" "insert auto destroy"
      (1433505 'move' msg[1433503] call_tmp[1433492])
      const-val call_tmp[1433509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2206202]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206204 'move' call_tmp[2206202](2206207 call qio_err_to_int[223616] err[1433463]))
      const-val call_tmp[2206209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206211 'move' call_tmp[2206209](2206213 '==' call_tmp[2206202] EILSEQ[224444]))
      (1433511 'move' call_tmp[1433509] call_tmp[2206209])
      const-val call_tmp[1433517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433519 'move' call_tmp[1433517] call_tmp[1433509])
      if call_tmp[1433517]
      {
        const-val call_tmp[1433534]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830343]:string[26] "temp"
        (1433539 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1433503] ret_tmp[1830343])
        (1830346 'move' call_tmp[1433534] ret_tmp[1830343])
        (1433543 call =[38269] msg[1433503] call_tmp[1433534])
        ref i_x[2133057]:string[26] "temp"
        (2133061 'move' i_x[2133057](2133059 'set reference' call_tmp[1433534]))
        (2133065 call deinit[30831] i_x[2133057])
      }
      val error[1813743]:Error[167938] "error variable" "temp"
      (1813752 'move' error[1813743] nil[44])
      (1433555 call _ch_ioerror[1393261] this[1433429] err[1433463] msg[1433503] error[1813743])
      val errorExists[2110640]:bool[10] "temp"
      (2110645 'move' errorExists[2110640](2110642 '!=' error[1813743] nil[44]))
      if errorExists[2110640]
      {
        gotoErrorHandling handler[1813744] handler[1813744]
      }
      label handler[1813744]
      const-val shouldHandleError[1813763]:bool[10] "temp"
      val errorExists[2110648]:bool[10] "temp"
      (2110653 'move' errorExists[2110648](2110650 '!=' error[1813743] nil[44]))
      (1813767 'move' shouldHandleError[1813763] errorExists[2110648])
      if shouldHandleError[1813763]
      {
        (1813759 '=' error_out[1813724] error[1813743])
        ref i_x[2133069]:string[26] "temp"
        (2133073 'move' i_x[2133069](2133071 'set reference' msg[1433503]))
        (2133077 call deinit[30831] i_x[2133069])
        gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
      }
      ref i_x[2133081]:string[26] "temp"
      (2133085 'move' i_x[2133081](2133083 'set reference' msg[1433503]))
      (2133089 call deinit[30831] i_x[2133081])
    }
    label _end_writeOne[1813726]
    (1433563 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1068786](const  ref arg this[1068792]:channel(true,dynamic,false)[1060947], const in arg x[1068794]:int(64)[13], ref arg error_out[1810276]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1068830]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833335]:locale[28] "temp"
    ref i__retArg[2265138]:locale[28] "temp"
    (2265142 'move' i__retArg[2265138](2265140 'set reference' ret_tmp[1833335]))
    const-val ret[2265145]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265147]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265149 'move' call_tmp[2265147](2265151 '.' this[1068792] _readWriteThisFromLocale[1060944]))
    val ret[2265154]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265156]:locale[28] "dead after last mention" "temp"
    (2265159 call init=[90167] tmp[2265156] call_tmp[2265147])
    (2265162 'move' ret[2265154] tmp[2265156])
    val ret[2265165]:locale[28] "dead at end of block" "insert auto destroy"
    (2265167 'move' ret[2265165] ret[2265154])
    const-val call_tmp[2265170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265172 'move' call_tmp[2265170](2265175 call ==[782781] ret[2265165] nilLocale[89939]))
    if call_tmp[2265170]
    {
      const-val call_tmp[2265180]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265182]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265184]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265186 'move' call_tmp[2265184](2265189 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265192 'move' call_tmp[2265182] call_tmp[2265184])
      const-val call_tmp[2265195]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265197]:locale[28] "temp"
      (2265200 call chpl_localeID_to_locale[92849] call_tmp[2265182] ret_tmp[2265197])
      (2265203 'move' call_tmp[2265195] ret_tmp[2265197])
      (2265206 'move' call_tmp[2265180] call_tmp[2265195])
      (2265210 call =[90631] ret[2265165] call_tmp[2265180])
      ref i_x[2265213]:locale[28] "temp"
      (2265215 'move' i_x[2265213](2265217 'set reference' call_tmp[2265180]))
      (2265220 call deinit[90185] i_x[2265213])
    }
    (2265223 'move' ret[2265145] ret[2265165])
    (2265228 '=' i__retArg[2265138] ret[2265145])
    (1833338 'move' call_tmp[1068830] ret_tmp[1833335])
    const-val origLocale[1068839]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068841 'move' origLocale[1068839] call_tmp[1068830])
    const-val tmp[1068845]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1068847]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263504]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263506 'move' call_tmp[2263504](2263508 '.' this[1068792] home[1060935]))
    (1068849 'move' call_tmp[1068847] call_tmp[2263504])
    const-val call_tmp[1068855]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1068923]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165617]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165619 'move' coerce_tmp[2165617](2165621 '.v' call_tmp[1068847] _instance[89975]))
    val coerce_tmp[2165624]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165626 'move' coerce_tmp[2165624](2165628 'cast' object[22] coerce_tmp[2165617]))
    const-val call_tmp[2165631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165633 'move' call_tmp[2165631](2165635 'ptr_eq' coerce_tmp[2165624] nil[44]))
    if call_tmp[2165631]
    {
      (2165641 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1068928 'move' _locale_tmp_[1068923] coerce_tmp[2165617])
    (1068857 'move' call_tmp[1068855](1068859 '_wide_get_locale' _locale_tmp_[1068923]))
    (1068861 'move' tmp[1068845] call_tmp[1068855])
    val error[1810281]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810283 'move' error[1810281] nil[44])
    val rvfDerefTmp[2083799]:locale[28] "temp"
    (2083802 'move' rvfDerefTmp[2083799] origLocale[1068839])
    val isdirect[2089909]:bool[10] "temp"
    (2089914 'move' isdirect[2089909](2089911 call chpl_doDirectExecuteOn[187423] tmp[1068845]))
    if isdirect[2089909]
    {
      (2089918 call on_fn[1068868] this[1068792] x[1068794] rvfDerefTmp[2083799] error[1810281])
    }
    {
      val _args_foron_fn[2089942]:_class_localson_fn[2089928] "temp"
      (2089946 'move' _args_foron_fn[2089942](2089944 'stack allocate class' _class_localson_fn[2089928]))
      (2089948 '.=' _args_foron_fn[2089942] _0_tmp[2089931] tmp[1068845])
      ref tmp[2089952]:channel(true,dynamic,false)[1060947] "temp"
      (2089956 'move' tmp[2089952](2089954 'set reference' this[1068792]))
      (2089958 '.=' _args_foron_fn[2089942] _1_this[2089933] tmp[2089952])
      (2089962 '.=' _args_foron_fn[2089942] _2_x[2089935] x[1068794])
      (2089966 '.=' _args_foron_fn[2089942] _3_rvfDerefTmp[2089937] rvfDerefTmp[2083799])
      ref tmp[2089970]:Error[167938] "temp"
      (2089974 'move' tmp[2089970](2089972 'set reference' error[1810281]))
      (2089976 '.=' _args_foron_fn[2089942] _4_error[2089939] tmp[2089970])
      val _args_vforon_fn[2089980]:c_void_ptr[149] "temp"
      (2089984 'move' _args_vforon_fn[2089980](2089982 'cast_to_void_star' _args_foron_fn[2089942]))
      val _args_sizeon_fn[2089986]:int(64)[13] "temp"
      (2089990 'move' _args_sizeon_fn[2089986](2089988 'sizeof_bundle' _class_localson_fn[2089928]))
      on(2090046 call wrapon_fn[2089992] tmp[1068845] _args_vforon_fn[2089980] _args_sizeon_fn[2089986] _args_foron_fn[2089942])
    }
    val errorExists[2108968]:bool[10] "temp"
    (2108973 'move' errorExists[2108968](2108970 '!=' error[1810281] nil[44]))
    if errorExists[2108968]
    {
      (1810287 '=' error_out[1810276] error[1810281])
      ref i_x[2264315]:locale[28] "temp"
      (2264319 'move' i_x[2264315](2264317 'set reference' origLocale[1068839]))
      (2264323 call deinit[90185] i_x[2264315])
      gotoErrorHandlingReturn _endwriteIt[1810278] _endwriteIt[1810278]
    }
    ref i_x[2264327]:locale[28] "temp"
    (2264331 'move' i_x[2264327](2264329 'set reference' origLocale[1068839]))
    (2264335 call deinit[90185] i_x[2264327])
    label _endwriteIt[1810278]
    (1068912 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1408522](const  ref arg this[1408528]:channel(true,dynamic,false)[1060947], const  ref arg x[1408530]:ioLiteral[238753], ref arg error_out[1813192]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1408566]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833353]:locale[28] "temp"
    ref i__retArg[2265423]:locale[28] "temp"
    (2265427 'move' i__retArg[2265423](2265425 'set reference' ret_tmp[1833353]))
    const-val ret[2265430]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265432]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265434 'move' call_tmp[2265432](2265436 '.' this[1408528] _readWriteThisFromLocale[1060944]))
    val ret[2265439]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265441]:locale[28] "dead after last mention" "temp"
    (2265444 call init=[90167] tmp[2265441] call_tmp[2265432])
    (2265447 'move' ret[2265439] tmp[2265441])
    val ret[2265450]:locale[28] "dead at end of block" "insert auto destroy"
    (2265452 'move' ret[2265450] ret[2265439])
    const-val call_tmp[2265455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265457 'move' call_tmp[2265455](2265460 call ==[782781] ret[2265450] nilLocale[89939]))
    if call_tmp[2265455]
    {
      const-val call_tmp[2265465]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265467]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265469]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265471 'move' call_tmp[2265469](2265474 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265477 'move' call_tmp[2265467] call_tmp[2265469])
      const-val call_tmp[2265480]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265482]:locale[28] "temp"
      (2265485 call chpl_localeID_to_locale[92849] call_tmp[2265467] ret_tmp[2265482])
      (2265488 'move' call_tmp[2265480] ret_tmp[2265482])
      (2265491 'move' call_tmp[2265465] call_tmp[2265480])
      (2265495 call =[90631] ret[2265450] call_tmp[2265465])
      ref i_x[2265498]:locale[28] "temp"
      (2265500 'move' i_x[2265498](2265502 'set reference' call_tmp[2265465]))
      (2265505 call deinit[90185] i_x[2265498])
    }
    (2265508 'move' ret[2265430] ret[2265450])
    (2265513 '=' i__retArg[2265423] ret[2265430])
    (1833356 'move' call_tmp[1408566] ret_tmp[1833353])
    const-val origLocale[1408575]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1408577 'move' origLocale[1408575] call_tmp[1408566])
    const-val tmp[1408581]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1408583]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263574]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263576 'move' call_tmp[2263574](2263578 '.' this[1408528] home[1060935]))
    (1408585 'move' call_tmp[1408583] call_tmp[2263574])
    const-val call_tmp[1408591]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1408659]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166223]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166225 'move' coerce_tmp[2166223](2166227 '.v' call_tmp[1408583] _instance[89975]))
    val coerce_tmp[2166230]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166232 'move' coerce_tmp[2166230](2166234 'cast' object[22] coerce_tmp[2166223]))
    const-val call_tmp[2166237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166239 'move' call_tmp[2166237](2166241 'ptr_eq' coerce_tmp[2166230] nil[44]))
    if call_tmp[2166237]
    {
      (2166247 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1408664 'move' _locale_tmp_[1408659] coerce_tmp[2166223])
    (1408593 'move' call_tmp[1408591](1408595 '_wide_get_locale' _locale_tmp_[1408659]))
    (1408597 'move' tmp[1408581] call_tmp[1408591])
    val error[1813197]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813199 'move' error[1813197] nil[44])
    val rvfDerefTmp[2084387]:ioLiteral[238753] "temp"
    (2084391 'move' rvfDerefTmp[2084387](2084389 'deref' x[1408530]))
    val rvfDerefTmp[2084401]:locale[28] "temp"
    (2084404 'move' rvfDerefTmp[2084401] origLocale[1408575])
    val isdirect[2094971]:bool[10] "temp"
    (2094976 'move' isdirect[2094971](2094973 call chpl_doDirectExecuteOn[187423] tmp[1408581]))
    if isdirect[2094971]
    {
      (2094980 call on_fn[1408604] this[1408528] rvfDerefTmp[2084387] rvfDerefTmp[2084401] error[1813197])
    }
    {
      val _args_foron_fn[2095004]:_class_localson_fn[2094990] "temp"
      (2095008 'move' _args_foron_fn[2095004](2095006 'stack allocate class' _class_localson_fn[2094990]))
      (2095010 '.=' _args_foron_fn[2095004] _0_tmp[2094993] tmp[1408581])
      ref tmp[2095014]:channel(true,dynamic,false)[1060947] "temp"
      (2095018 'move' tmp[2095014](2095016 'set reference' this[1408528]))
      (2095020 '.=' _args_foron_fn[2095004] _1_this[2094995] tmp[2095014])
      (2095024 '.=' _args_foron_fn[2095004] _2_rvfDerefTmp[2094997] rvfDerefTmp[2084387])
      (2095028 '.=' _args_foron_fn[2095004] _3_rvfDerefTmp[2094999] rvfDerefTmp[2084401])
      ref tmp[2095032]:Error[167938] "temp"
      (2095036 'move' tmp[2095032](2095034 'set reference' error[1813197]))
      (2095038 '.=' _args_foron_fn[2095004] _4_error[2095001] tmp[2095032])
      val _args_vforon_fn[2095042]:c_void_ptr[149] "temp"
      (2095046 'move' _args_vforon_fn[2095042](2095044 'cast_to_void_star' _args_foron_fn[2095004]))
      val _args_sizeon_fn[2095048]:int(64)[13] "temp"
      (2095052 'move' _args_sizeon_fn[2095048](2095050 'sizeof_bundle' _class_localson_fn[2094990]))
      on(2095108 call wrapon_fn[2095054] tmp[1408581] _args_vforon_fn[2095042] _args_sizeon_fn[2095048] _args_foron_fn[2095004])
    }
    val errorExists[2110360]:bool[10] "temp"
    (2110365 'move' errorExists[2110360](2110362 '!=' error[1813197] nil[44]))
    if errorExists[2110360]
    {
      (1813203 '=' error_out[1813192] error[1813197])
      ref i_x[2264591]:locale[28] "temp"
      (2264595 'move' i_x[2264591](2264593 'set reference' origLocale[1408575]))
      (2264599 call deinit[90185] i_x[2264591])
      gotoErrorHandlingReturn _endwriteIt[1813194] _endwriteIt[1813194]
    }
    ref i_x[2264603]:locale[28] "temp"
    (2264607 'move' i_x[2264603](2264605 'set reference' origLocale[1408575]))
    (2264611 call deinit[90185] i_x[2264603])
    label _endwriteIt[1813194]
    (1408648 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1421728](const  ref arg this[1421734]:channel(true,dynamic,false)[1060947], const in arg x[1421736]:real(64)[16], ref arg error_out[1813382]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1421772]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833359]:locale[28] "temp"
    ref i__retArg[2265518]:locale[28] "temp"
    (2265522 'move' i__retArg[2265518](2265520 'set reference' ret_tmp[1833359]))
    const-val ret[2265525]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265527]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265529 'move' call_tmp[2265527](2265531 '.' this[1421734] _readWriteThisFromLocale[1060944]))
    val ret[2265534]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265536]:locale[28] "dead after last mention" "temp"
    (2265539 call init=[90167] tmp[2265536] call_tmp[2265527])
    (2265542 'move' ret[2265534] tmp[2265536])
    val ret[2265545]:locale[28] "dead at end of block" "insert auto destroy"
    (2265547 'move' ret[2265545] ret[2265534])
    const-val call_tmp[2265550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265552 'move' call_tmp[2265550](2265555 call ==[782781] ret[2265545] nilLocale[89939]))
    if call_tmp[2265550]
    {
      const-val call_tmp[2265560]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265562]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265564]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265566 'move' call_tmp[2265564](2265569 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265572 'move' call_tmp[2265562] call_tmp[2265564])
      const-val call_tmp[2265575]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265577]:locale[28] "temp"
      (2265580 call chpl_localeID_to_locale[92849] call_tmp[2265562] ret_tmp[2265577])
      (2265583 'move' call_tmp[2265575] ret_tmp[2265577])
      (2265586 'move' call_tmp[2265560] call_tmp[2265575])
      (2265590 call =[90631] ret[2265545] call_tmp[2265560])
      ref i_x[2265593]:locale[28] "temp"
      (2265595 'move' i_x[2265593](2265597 'set reference' call_tmp[2265560]))
      (2265600 call deinit[90185] i_x[2265593])
    }
    (2265603 'move' ret[2265525] ret[2265545])
    (2265608 '=' i__retArg[2265518] ret[2265525])
    (1833362 'move' call_tmp[1421772] ret_tmp[1833359])
    const-val origLocale[1421781]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1421783 'move' origLocale[1421781] call_tmp[1421772])
    const-val tmp[1421787]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1421789]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263584]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263586 'move' call_tmp[2263584](2263588 '.' this[1421734] home[1060935]))
    (1421791 'move' call_tmp[1421789] call_tmp[2263584])
    const-val call_tmp[1421797]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1421865]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166253]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166255 'move' coerce_tmp[2166253](2166257 '.v' call_tmp[1421789] _instance[89975]))
    val coerce_tmp[2166260]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166262 'move' coerce_tmp[2166260](2166264 'cast' object[22] coerce_tmp[2166253]))
    const-val call_tmp[2166267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166269 'move' call_tmp[2166267](2166271 'ptr_eq' coerce_tmp[2166260] nil[44]))
    if call_tmp[2166267]
    {
      (2166277 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1421870 'move' _locale_tmp_[1421865] coerce_tmp[2166253])
    (1421799 'move' call_tmp[1421797](1421801 '_wide_get_locale' _locale_tmp_[1421865]))
    (1421803 'move' tmp[1421787] call_tmp[1421797])
    val error[1813387]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813389 'move' error[1813387] nil[44])
    val rvfDerefTmp[2084413]:locale[28] "temp"
    (2084416 'move' rvfDerefTmp[2084413] origLocale[1421781])
    val isdirect[2095113]:bool[10] "temp"
    (2095118 'move' isdirect[2095113](2095115 call chpl_doDirectExecuteOn[187423] tmp[1421787]))
    if isdirect[2095113]
    {
      (2095122 call on_fn[1421810] this[1421734] x[1421736] rvfDerefTmp[2084413] error[1813387])
    }
    {
      val _args_foron_fn[2095146]:_class_localson_fn[2095132] "temp"
      (2095150 'move' _args_foron_fn[2095146](2095148 'stack allocate class' _class_localson_fn[2095132]))
      (2095152 '.=' _args_foron_fn[2095146] _0_tmp[2095135] tmp[1421787])
      ref tmp[2095156]:channel(true,dynamic,false)[1060947] "temp"
      (2095160 'move' tmp[2095156](2095158 'set reference' this[1421734]))
      (2095162 '.=' _args_foron_fn[2095146] _1_this[2095137] tmp[2095156])
      (2095166 '.=' _args_foron_fn[2095146] _2_x[2095139] x[1421736])
      (2095170 '.=' _args_foron_fn[2095146] _3_rvfDerefTmp[2095141] rvfDerefTmp[2084413])
      ref tmp[2095174]:Error[167938] "temp"
      (2095178 'move' tmp[2095174](2095176 'set reference' error[1813387]))
      (2095180 '.=' _args_foron_fn[2095146] _4_error[2095143] tmp[2095174])
      val _args_vforon_fn[2095184]:c_void_ptr[149] "temp"
      (2095188 'move' _args_vforon_fn[2095184](2095186 'cast_to_void_star' _args_foron_fn[2095146]))
      val _args_sizeon_fn[2095190]:int(64)[13] "temp"
      (2095194 'move' _args_sizeon_fn[2095190](2095192 'sizeof_bundle' _class_localson_fn[2095132]))
      on(2095250 call wrapon_fn[2095196] tmp[1421787] _args_vforon_fn[2095184] _args_sizeon_fn[2095190] _args_foron_fn[2095146])
    }
    val errorExists[2110456]:bool[10] "temp"
    (2110461 'move' errorExists[2110456](2110458 '!=' error[1813387] nil[44]))
    if errorExists[2110456]
    {
      (1813393 '=' error_out[1813382] error[1813387])
      ref i_x[2264615]:locale[28] "temp"
      (2264619 'move' i_x[2264615](2264617 'set reference' origLocale[1421781]))
      (2264623 call deinit[90185] i_x[2264615])
      gotoErrorHandlingReturn _endwriteIt[1813384] _endwriteIt[1813384]
    }
    ref i_x[2264627]:locale[28] "temp"
    (2264631 'move' i_x[2264627](2264629 'set reference' origLocale[1421781]))
    (2264635 call deinit[90185] i_x[2264627])
    label _endwriteIt[1813384]
    (1421854 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].binary[1401775](const  ref arg this[1401781]:channel(true,dynamic,false)[1060947]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1401785]:bool[10] "dead after last mention" "RVV" "temp"
    val ret[1401793]:uint(8)[100] "dead at end of block" "insert auto destroy"
    val call_tmp[1401795]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1401917 'move' ret[1401793] 0)
    const-val tmp[1401806]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1401808]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263554]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263556 'move' call_tmp[2263554](2263558 '.' this[1401781] home[1060935]))
    (1401810 'move' call_tmp[1401808] call_tmp[2263554])
    const-val call_tmp[1401816]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1401885]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166163]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166165 'move' coerce_tmp[2166163](2166167 '.v' call_tmp[1401808] _instance[89975]))
    val coerce_tmp[2166170]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166172 'move' coerce_tmp[2166170](2166174 'cast' object[22] coerce_tmp[2166163]))
    const-val call_tmp[2166177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166179 'move' call_tmp[2166177](2166181 'ptr_eq' coerce_tmp[2166170] nil[44]))
    if call_tmp[2166177]
    {
      (2166187 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1401890 'move' _locale_tmp_[1401885] coerce_tmp[2166163])
    (1401818 'move' call_tmp[1401816](1401820 '_wide_get_locale' _locale_tmp_[1401885]))
    (1401822 'move' tmp[1401806] call_tmp[1401816])
    val isdirect[2094696]:bool[10] "temp"
    (2094701 'move' isdirect[2094696](2094698 call chpl_doDirectExecuteOn[187423] tmp[1401806]))
    if isdirect[2094696]
    {
      (2094705 call on_fn[1401829] this[1401781] ret[1401793])
    }
    {
      val _args_foron_fn[2094723]:_class_localson_fn[2094713] "temp"
      (2094727 'move' _args_foron_fn[2094723](2094725 'stack allocate class' _class_localson_fn[2094713]))
      (2094729 '.=' _args_foron_fn[2094723] _0_tmp[2094716] tmp[1401806])
      ref tmp[2094733]:channel(true,dynamic,false)[1060947] "temp"
      (2094737 'move' tmp[2094733](2094735 'set reference' this[1401781]))
      (2094739 '.=' _args_foron_fn[2094723] _1_this[2094718] tmp[2094733])
      ref tmp[2094743]:uint(8)[100] "temp"
      (2094747 'move' tmp[2094743](2094745 'set reference' ret[1401793]))
      (2094749 '.=' _args_foron_fn[2094723] _2_ret[2094720] tmp[2094743])
      val _args_vforon_fn[2094753]:c_void_ptr[149] "temp"
      (2094757 'move' _args_vforon_fn[2094753](2094755 'cast_to_void_star' _args_foron_fn[2094723]))
      val _args_sizeon_fn[2094759]:int(64)[13] "temp"
      (2094763 'move' _args_sizeon_fn[2094759](2094761 'sizeof_bundle' _class_localson_fn[2094713]))
      on(2094803 call wrapon_fn[2094765] tmp[1401806] _args_vforon_fn[2094753] _args_sizeon_fn[2094759] _args_foron_fn[2094723])
    }
    const-val call_tmp[1401860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1401904]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1401910 'move' coerce_tmp[1401904](1401906 'cast' uint(8)[100] 0))
    const-val call_tmp[2199079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2199081 'move' call_tmp[2199079](2199083 '!=' ret[1401793] coerce_tmp[1401904]))
    (1401862 'move' call_tmp[1401860] call_tmp[2199079])
    (1401914 'move' ret[1401785] call_tmp[1401860])
    label _end_binary[1401877]
    (1401879 return ret[1401785])
  }
  function channel(true,dynamic,false)[1060947].styleElement[1400739](const  ref arg this[1400745]:channel(true,dynamic,false)[1060947], const in arg element[1400747]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1400751]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1400759]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1400761 'move' ret[1400759] 0)
    const-val tmp[1400766]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1400768]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263544]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263546 'move' call_tmp[2263544](2263548 '.' this[1400745] home[1060935]))
    (1400770 'move' call_tmp[1400768] call_tmp[2263544])
    const-val call_tmp[1400776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1400836]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166133]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166135 'move' coerce_tmp[2166133](2166137 '.v' call_tmp[1400768] _instance[89975]))
    val coerce_tmp[2166140]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166142 'move' coerce_tmp[2166140](2166144 'cast' object[22] coerce_tmp[2166133]))
    const-val call_tmp[2166147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166149 'move' call_tmp[2166147](2166151 'ptr_eq' coerce_tmp[2166140] nil[44]))
    if call_tmp[2166147]
    {
      (2166157 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1400841 'move' _locale_tmp_[1400836] coerce_tmp[2166133])
    (1400778 'move' call_tmp[1400776](1400780 '_wide_get_locale' _locale_tmp_[1400836]))
    (1400782 'move' tmp[1400766] call_tmp[1400776])
    val isdirect[2094569]:bool[10] "temp"
    (2094574 'move' isdirect[2094569](2094571 call chpl_doDirectExecuteOn[187423] tmp[1400766]))
    if isdirect[2094569]
    {
      (2094578 call on_fn[1400789] this[1400745] element[1400747] ret[1400759])
    }
    {
      val _args_foron_fn[2094599]:_class_localson_fn[2094587] "temp"
      (2094603 'move' _args_foron_fn[2094599](2094601 'stack allocate class' _class_localson_fn[2094587]))
      (2094605 '.=' _args_foron_fn[2094599] _0_tmp[2094590] tmp[1400766])
      ref tmp[2094609]:channel(true,dynamic,false)[1060947] "temp"
      (2094613 'move' tmp[2094609](2094611 'set reference' this[1400745]))
      (2094615 '.=' _args_foron_fn[2094599] _1_this[2094592] tmp[2094609])
      (2094619 '.=' _args_foron_fn[2094599] _2_element[2094594] element[1400747])
      ref tmp[2094623]:int(64)[13] "temp"
      (2094627 'move' tmp[2094623](2094625 'set reference' ret[1400759]))
      (2094629 '.=' _args_foron_fn[2094599] _3_ret[2094596] tmp[2094623])
      val _args_vforon_fn[2094633]:c_void_ptr[149] "temp"
      (2094637 'move' _args_vforon_fn[2094633](2094635 'cast_to_void_star' _args_foron_fn[2094599]))
      val _args_sizeon_fn[2094639]:int(64)[13] "temp"
      (2094643 'move' _args_sizeon_fn[2094639](2094641 'sizeof_bundle' _class_localson_fn[2094587]))
      on(2094691 call wrapon_fn[2094645] tmp[1400766] _args_vforon_fn[2094633] _args_sizeon_fn[2094639] _args_foron_fn[2094599])
    }
    (1400858 'move' ret[1400751] ret[1400759])
    label _end_styleElement[1400830]
    (1400832 return ret[1400751])
  }
  function channel(true,dynamic,false)[1060947].writeBytes[1407802](const  ref arg this[1407808]:channel(true,dynamic,false)[1060947], const in arg x[1407810]:_ddata(real(64))[1357916], const in arg len[1407814]:int(64)[13], ref arg error_out[1813049]:Error[167938]) : bool[10] throws "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1407818]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1407828]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1407830 'move' call_tmp[1407828] 0)
    val err[1407834]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1407942]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207605]:syserr[223584] "temp"
    (2207609 'move' i_ret[2207605](2207607 'set reference' init_coerce_tmp[1407942]))
    const-val call_tmp[2207612]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207614 'move' call_tmp[2207612](2207617 call qio_int_to_err[223634] call_tmp[1407828]))
    (2207619 '=' i_ret[2207605] call_tmp[2207612])
    (1407836 'move' err[1407834] init_coerce_tmp[1407942])
    const-val tmp[1407841]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1407843]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263564]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263566 'move' call_tmp[2263564](2263568 '.' this[1407808] home[1060935]))
    (1407845 'move' call_tmp[1407843] call_tmp[2263564])
    const-val call_tmp[1407851]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1407949]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2166193]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166195 'move' coerce_tmp[2166193](2166197 '.v' call_tmp[1407843] _instance[89975]))
    val coerce_tmp[2166200]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166202 'move' coerce_tmp[2166200](2166204 'cast' object[22] coerce_tmp[2166193]))
    const-val call_tmp[2166207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2166209 'move' call_tmp[2166207](2166211 'ptr_eq' coerce_tmp[2166200] nil[44]))
    if call_tmp[2166207]
    {
      (2166217 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1407954 'move' _locale_tmp_[1407949] coerce_tmp[2166193])
    (1407853 'move' call_tmp[1407851](1407855 '_wide_get_locale' _locale_tmp_[1407949]))
    (1407857 'move' tmp[1407841] call_tmp[1407851])
    val error[1813054]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813056 'move' error[1813054] nil[44])
    val isdirect[2094808]:bool[10] "temp"
    (2094813 'move' isdirect[2094808](2094810 call chpl_doDirectExecuteOn[187423] tmp[1407841]))
    if isdirect[2094808]
    {
      (2094817 call on_fn[1407864] this[1407808] x[1407810] len[1407814] err[1407834] error[1813054])
    }
    {
      val _args_foron_fn[2094844]:_class_localson_fn[2094828] "temp"
      (2094848 'move' _args_foron_fn[2094844](2094846 'stack allocate class' _class_localson_fn[2094828]))
      (2094850 '.=' _args_foron_fn[2094844] _0_tmp[2094831] tmp[1407841])
      ref tmp[2094854]:channel(true,dynamic,false)[1060947] "temp"
      (2094858 'move' tmp[2094854](2094856 'set reference' this[1407808]))
      (2094860 '.=' _args_foron_fn[2094844] _1_this[2094833] tmp[2094854])
      (2094864 '.=' _args_foron_fn[2094844] _2_x[2094835] x[1407810])
      (2094868 '.=' _args_foron_fn[2094844] _3_len[2094837] len[1407814])
      ref tmp[2094872]:syserr[223584] "temp"
      (2094876 'move' tmp[2094872](2094874 'set reference' err[1407834]))
      (2094878 '.=' _args_foron_fn[2094844] _4_err[2094839] tmp[2094872])
      ref tmp[2094882]:Error[167938] "temp"
      (2094886 'move' tmp[2094882](2094884 'set reference' error[1813054]))
      (2094888 '.=' _args_foron_fn[2094844] _5_error[2094841] tmp[2094882])
      val _args_vforon_fn[2094892]:c_void_ptr[149] "temp"
      (2094896 'move' _args_vforon_fn[2094892](2094894 'cast_to_void_star' _args_foron_fn[2094844]))
      val _args_sizeon_fn[2094898]:int(64)[13] "temp"
      (2094902 'move' _args_sizeon_fn[2094898](2094900 'sizeof_bundle' _class_localson_fn[2094828]))
      on(2094966 call wrapon_fn[2094904] tmp[1407841] _args_vforon_fn[2094892] _args_sizeon_fn[2094898] _args_foron_fn[2094844])
    }
    val errorExists[2110288]:bool[10] "temp"
    (2110293 'move' errorExists[2110288](2110290 '!=' error[1813054] nil[44]))
    if errorExists[2110288]
    {
      (1813060 '=' error_out[1813049] error[1813054])
      gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
    }
    const-val call_tmp[1407912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206943]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206945 'move' call_tmp[2206943](2206948 call qio_err_iserr[223646] err[1407834]))
    const-val call_tmp[2206950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206952 'move' call_tmp[2206950](2206954 '!=' call_tmp[2206943] 0))
    (1407914 'move' call_tmp[1407912] call_tmp[2206950])
    if call_tmp[1407912]
    {
      val error[1813068]:Error[167938] "error variable" "temp"
      (1813077 'move' error[1813068] nil[44])
      (1407926 call _ch_ioerror[1062865] this[1407808] err[1407834] "in channel.writeBytes()" error[1813068])
      val errorExists[2110296]:bool[10] "temp"
      (2110301 'move' errorExists[2110296](2110298 '!=' error[1813068] nil[44]))
      if errorExists[2110296]
      {
        gotoErrorHandling handler[1813069] handler[1813069]
      }
      label handler[1813069]
      const-val shouldHandleError[1813088]:bool[10] "temp"
      val errorExists[2110304]:bool[10] "temp"
      (2110309 'move' errorExists[2110304](2110306 '!=' error[1813068] nil[44]))
      (1813092 'move' shouldHandleError[1813088] errorExists[2110304])
      if shouldHandleError[1813088]
      {
        (1813084 '=' error_out[1813049] error[1813068])
        gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
      }
    }
    (1407933 'move' ret[1407818] 1)
    label _endwriteBytes[1813051]
    (1407938 return ret[1407818])
  }
  function stringify[958787](const in arg _e0_args[958789]:c_string[19], ref arg _retArg[1832047]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val args_x0[2365444]:c_string[19]
    val ret_tmp_x0[2365453]:c_string[19] "temp"
    val this_x0[2365461]:c_string[19]
    (2219109 'move' this_x0[2365461] _e0_args[958789])
    (2365459 'move' ret_tmp_x0[2365453] this_x0[2365461])
    (2365450 'move' args_x0[2365444] ret_tmp_x0[2365453])
    const-val ret[958793]:string[26] "dead after last mention" "RVV" "temp"
    val str[958825]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204299]:string[26] "temp"
    (2204302 'move' inlineImm[2204299] "")
    ref i_x[2204304]:string[26] "temp"
    (2204308 'move' i_x[2204304](2204306 'set reference' inlineImm[2204299]))
    val ret[2204311]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204313]:string[26] "dead after last mention" "temp"
    (2204316 call init=[30771] tmp[2204313] i_x[2204304])
    (2204319 'move' ret[2204311] tmp[2204313])
    (958827 'move' str[958825] ret[2204311])
    const-val i[958832]:int(64)[13] "dead at end of block" "insert auto destroy"
    (958834 'move' i[958832] 0)
    val error[1809115]:Error[167938] "error variable" "temp"
    (1809131 'move' error[1809115] nil[44])
    const-ref call_tmp[963704]:c_string[19] "dead after last mention" "maybe param" "temp"
    (963706 'move' call_tmp[963704](2365452 'set reference' args_x0[2365444]))
    const-val call_tmp[963711]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[964039]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (964043 'move' coerce_tmp[964039](964041 'deref' call_tmp[963704]))
    const-val default_arg_length[964070]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[2203724]:Error[167938] "temp"
    (2203728 'move' i_error_out[2203724](2203726 'set reference' error[1809115]))
    val ret[2203731]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val call_tmp[2203733]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2203735 'move' call_tmp[2203733](2203737 'string_length_bytes' coerce_tmp[964039]))
    (2203739 'move' ret[2203731] call_tmp[2203733])
    (964075 'move' default_arg_length[964070] ret[2203731])
    val errorExists[2108424]:bool[10] "temp"
    (2108429 'move' errorExists[2108424](2108426 '!=' error[1809115] nil[44]))
    if errorExists[2108424]
    {
      gotoErrorHandling handler[1809116] handler[1809116]
    }
    const-val ret_tmp[1829057]:string[26] "temp"
    ref i_error_out[2141480]:Error[167938] "temp"
    (2141484 'move' i_error_out[2141480](2141482 'set reference' error[1809115]))
    ref i__retArg[2141486]:string[26] "temp"
    (2141490 'move' i__retArg[2141486](2141488 'set reference' ret_tmp[1829057]))
    const-val ret[2141493]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2141495]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2141497 'move' call_tmp[2141495](2141499 'cast' c_ptr(uint(8))[937423] coerce_tmp[964039]))
    const-val call_tmp[2141502]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2141504]:Error[167938] "error variable" "temp"
    (2141506 'move' error[2141504] nil[44])
    const-val ret[2141509]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2141511]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2141513]:Error[167938] "error variable" "temp"
    (2141515 'move' error[2141513] nil[44])
    const-val ret_tmp[2141518]:string[26] "temp"
    (2141521 call decodeByteBuffer[173892] call_tmp[2141495] default_arg_length[964070] replace[173648] error[2141513] ret_tmp[2141518])
    (2141527 'move' call_tmp[2141511] ret_tmp[2141518])
    val errorExists[2141530]:bool[10] "temp"
    (2141532 'move' errorExists[2141530](2141534 '!=' error[2141513] nil[44]))
    if errorExists[2141530]
    {
      (2141539 '=' error[2141504] error[2141513])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141548] _endcreateStringWithNewBuffer[2141548]
    }
    (2141545 'move' ret[2141509] call_tmp[2141511])
    label _endcreateStringWithNewBuffer[2141548]
    (2141550 'move' call_tmp[2141502] ret[2141509])
    val errorExists[2141553]:bool[10] "temp"
    (2141555 'move' errorExists[2141553](2141557 '!=' error[2141504] nil[44]))
    if errorExists[2141553]
    {
      (2141562 '=' i_error_out[2141480] error[2141504])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141571] _endcreateStringWithNewBuffer[2141571]
    }
    (2141568 'move' ret[2141493] call_tmp[2141502])
    label _endcreateStringWithNewBuffer[2141571]
    (2141573 '=' i__retArg[2141486] ret[2141493])
    (1829060 'move' call_tmp[963711] ret_tmp[1829057])
    val errorExists[2108432]:bool[10] "temp"
    (2108437 'move' errorExists[2108432](2108434 '!=' error[1809115] nil[44]))
    if errorExists[2108432]
    {
      gotoErrorHandling handler[1809116] handler[1809116]
    }
    (963721 call +=[38797] str[958825] call_tmp[963711])
    ref i_x[2130417]:string[26] "temp"
    (2130421 'move' i_x[2130417](2130419 'set reference' call_tmp[963711]))
    (2130425 call deinit[30831] i_x[2130417])
    label handler[1809116]
    const-val shouldHandleError[1809140]:bool[10] "temp"
    val errorExists[2108440]:bool[10] "temp"
    (2108445 'move' errorExists[2108440](2108442 '!=' error[1809115] nil[44]))
    (1809144 'move' shouldHandleError[1809140] errorExists[2108440])
    if shouldHandleError[1809140]
    {
      (1809137 call chpl_uncaught_error[170243] error[1809115])
    }
    (980860 'move' ret[958793] str[958825])
    gotoReturn _end_stringify[959450] _end_stringify[959450]
    label _end_stringify[959450]
    (1832049 '=' _retArg[1832047] ret[958793])
    (1832053 return _void[55])
  }
  function stringify[1056406](const  ref arg _e0_args[1056408]:byteIndex[28170], ref arg _retArg[1832999]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2347610]:byteIndex[28170]
    const-ref ret_tmp_x0[2347618]:byteIndex[28170] "temp"
    const-ref this_x0[2347626]:byteIndex[28170]
    (2262964 'move' this_x0[2347626] _e0_args[1056408])
    (2347624 'move' ret_tmp_x0[2347618] this_x0[2347626])
    (2347616 'move' args_x0[2347610] ret_tmp_x0[2347618])
    const-val ret[1056412]:string[26] "dead after last mention" "RVV" "temp"
    val error[1809520]:Error[167938] "error variable" "temp"
    (1809705 'move' error[1809520] nil[44])
    const-val call_tmp[1056857]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1060579]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[2262994]:Error[167938] "temp"
    (2262998 'move' i_error_out[2262994](2262996 'set reference' error[1809520]))
    val ret[2263001]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263003]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263005 'move' style[2263003](2263008 call defaultIOStyle[235295]))
    (2263009 'move' ret[2263001] style[2263003])
    (1060583 'move' default_arg_style[1060579] ret[2263001])
    val errorExists[2108592]:bool[10] "temp"
    (2108597 'move' errorExists[2108592](2108594 '!=' error[1809520] nil[44]))
    if errorExists[2108592]
    {
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1831503]:file[235580] "temp"
    (1056862 call openmem[237625] default_arg_style[1060579] error[1809520] ret_tmp[1831503])
    (1831506 'move' call_tmp[1056857] ret_tmp[1831503])
    val errorExists[2108600]:bool[10] "temp"
    (2108605 'move' errorExists[2108600](2108602 '!=' error[1809520] nil[44]))
    if errorExists[2108600]
    {
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val f[1056863]:file[235580] "dead at end of block" "insert auto destroy"
    (1056865 'move' f[1056863] call_tmp[1056857])
    const-val call_tmp[1056880]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1061189]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263060]:file[235580] "temp"
    (2263064 'move' i_this[2263060](2263062 'set reference' f[1056863]))
    ref i_error_out[2263066]:Error[167938] "temp"
    (2263070 'move' i_error_out[2263066](2263068 'set reference' error[1809520]))
    val ret[2263073]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263075 'move' ret[2263073] 0)
    (1061195 'move' default_arg_start[1061189] ret[2263073])
    val errorExists[2108608]:bool[10] "temp"
    (2108613 'move' errorExists[2108608](2108610 '!=' error[1809520] nil[44]))
    if errorExists[2108608]
    {
      val error[1843090]:Error[167938] "error variable" "temp"
      (1843092 'move' error[1843090] nil[44])
      (1843096 call close[236024] f[1056863] error[1843090])
      val errorExists[2110712]:bool[10] "temp"
      (2110717 'move' errorExists[2110712](2110714 '!=' error[1843090] nil[44]))
      if errorExists[2110712]
      {
        gotoErrorHandling handler[1843107] handler[1843107]
      }
      label handler[1843107]
      const-val shouldHandleError[1843109]:bool[10] "temp"
      val errorExists[2110720]:bool[10] "temp"
      (2110725 'move' errorExists[2110720](2110722 '!=' error[1843090] nil[44]))
      (1843111 'move' shouldHandleError[1843109] errorExists[2110720])
      if shouldHandleError[1843109]
      {
        (1843118 call chpl_uncaught_error[170243] error[1843090])
      }
      ref i_x[2327773]:file[235580] "temp"
      (2327777 'move' i_x[2327773](2327775 'set reference' f[1056863]))
      (2327781 call deinit[235891] i_x[2327773])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_end[1061252]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263126]:file[235580] "temp"
    (2263130 'move' i_this[2263126](2263128 'set reference' f[1056863]))
    ref i_error_out[2263132]:Error[167938] "temp"
    (2263136 'move' i_error_out[2263132](2263134 'set reference' error[1809520]))
    val ret[2263139]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263141 'move' ret[2263139] 9223372036854775807)
    (1061258 'move' default_arg_end[1061252] ret[2263139])
    val errorExists[2108616]:bool[10] "temp"
    (2108621 'move' errorExists[2108616](2108618 '!=' error[1809520] nil[44]))
    if errorExists[2108616]
    {
      val error[1843126]:Error[167938] "error variable" "temp"
      (1843128 'move' error[1843126] nil[44])
      (1843132 call close[236024] f[1056863] error[1843126])
      val errorExists[2110728]:bool[10] "temp"
      (2110733 'move' errorExists[2110728](2110730 '!=' error[1843126] nil[44]))
      if errorExists[2110728]
      {
        gotoErrorHandling handler[1843143] handler[1843143]
      }
      label handler[1843143]
      const-val shouldHandleError[1843145]:bool[10] "temp"
      val errorExists[2110736]:bool[10] "temp"
      (2110741 'move' errorExists[2110736](2110738 '!=' error[1843126] nil[44]))
      (1843147 'move' shouldHandleError[1843145] errorExists[2110736])
      if shouldHandleError[1843145]
      {
        (1843154 call chpl_uncaught_error[170243] error[1843126])
      }
      ref i_x[2327785]:file[235580] "temp"
      (2327789 'move' i_x[2327785](2327787 'set reference' f[1056863]))
      (2327793 call deinit[235891] i_x[2327785])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_hints[1061302]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263192]:file[235580] "temp"
    (2263196 'move' i_this[2263192](2263194 'set reference' f[1056863]))
    ref i_error_out[2263198]:Error[167938] "temp"
    (2263202 'move' i_error_out[2263198](2263200 'set reference' error[1809520]))
    val ret[2263205]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2263207]:int(32)[95] "dead after last mention" "temp"
    (2263209 'move' tmp[2263207](2263211 'cast' int(32)[95] 0))
    (2263214 'move' ret[2263205] tmp[2263207])
    (1061308 'move' default_arg_hints[1061302] ret[2263205])
    val errorExists[2108624]:bool[10] "temp"
    (2108629 'move' errorExists[2108624](2108626 '!=' error[1809520] nil[44]))
    if errorExists[2108624]
    {
      val error[1843162]:Error[167938] "error variable" "temp"
      (1843164 'move' error[1843162] nil[44])
      (1843168 call close[236024] f[1056863] error[1843162])
      val errorExists[2110744]:bool[10] "temp"
      (2110749 'move' errorExists[2110744](2110746 '!=' error[1843162] nil[44]))
      if errorExists[2110744]
      {
        gotoErrorHandling handler[1843179] handler[1843179]
      }
      label handler[1843179]
      const-val shouldHandleError[1843181]:bool[10] "temp"
      val errorExists[2110752]:bool[10] "temp"
      (2110757 'move' errorExists[2110752](2110754 '!=' error[1843162] nil[44]))
      (1843183 'move' shouldHandleError[1843181] errorExists[2110752])
      if shouldHandleError[1843181]
      {
        (1843190 call chpl_uncaught_error[170243] error[1843162])
      }
      ref i_x[2327797]:file[235580] "temp"
      (2327801 'move' i_x[2327797](2327799 'set reference' f[1056863]))
      (2327805 call deinit[235891] i_x[2327797])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_style[1061338]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263279]:file[235580] "temp"
    (2263283 'move' i_this[2263279](2263281 'set reference' f[1056863]))
    ref i_error_out[2263285]:Error[167938] "temp"
    (2263289 'move' i_error_out[2263285](2263287 'set reference' error[1809520]))
    val ret[2263292]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263294]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263296]:Error[167938] "error variable" "temp"
    (2263298 'move' error[2263296] nil[44])
    (2263301 'move' style[2263294](2263304 call _style[235960] i_this[2263279] error[2263296]))
    val errorExists[2263307]:bool[10] "temp"
    (2263309 'move' errorExists[2263307](2263311 '!=' error[2263296] nil[44]))
    if errorExists[2263307]
    {
      (2263316 '=' i_error_out[2263285] error[2263296])
      gotoErrorHandlingReturn _endwriter_default_style[2263325] _endwriter_default_style[2263325]
    }
    (2263322 'move' ret[2263292] style[2263294])
    label _endwriter_default_style[2263325]
    (1061344 'move' default_arg_style[1061338] ret[2263292])
    val errorExists[2108632]:bool[10] "temp"
    (2108637 'move' errorExists[2108632](2108634 '!=' error[1809520] nil[44]))
    if errorExists[2108632]
    {
      val error[1843198]:Error[167938] "error variable" "temp"
      (1843200 'move' error[1843198] nil[44])
      (1843204 call close[236024] f[1056863] error[1843198])
      val errorExists[2110760]:bool[10] "temp"
      (2110765 'move' errorExists[2110760](2110762 '!=' error[1843198] nil[44]))
      if errorExists[2110760]
      {
        gotoErrorHandling handler[1843215] handler[1843215]
      }
      label handler[1843215]
      const-val shouldHandleError[1843217]:bool[10] "temp"
      val errorExists[2110768]:bool[10] "temp"
      (2110773 'move' errorExists[2110768](2110770 '!=' error[1843198] nil[44]))
      (1843219 'move' shouldHandleError[1843217] errorExists[2110768])
      if shouldHandleError[1843217]
      {
        (1843226 call chpl_uncaught_error[170243] error[1843198])
      }
      ref i_x[2327809]:file[235580] "temp"
      (2327813 'move' i_x[2327809](2327811 'set reference' f[1056863]))
      (2327817 call deinit[235891] i_x[2327809])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1833023]:channel(true,dynamic,false)[1060947] "temp"
    (1056888 call writer[1060853] f[1056863] default_arg_start[1061189] default_arg_end[1061252] default_arg_hints[1061302] default_arg_style[1061338] error[1809520] ret_tmp[1833023])
    (1833026 'move' call_tmp[1056880] ret_tmp[1833023])
    val errorExists[2108640]:bool[10] "temp"
    (2108645 'move' errorExists[2108640](2108642 '!=' error[1809520] nil[44]))
    if errorExists[2108640]
    {
      val error[1843234]:Error[167938] "error variable" "temp"
      (1843236 'move' error[1843234] nil[44])
      (1843240 call close[236024] f[1056863] error[1843234])
      val errorExists[2110776]:bool[10] "temp"
      (2110781 'move' errorExists[2110776](2110778 '!=' error[1843234] nil[44]))
      if errorExists[2110776]
      {
        gotoErrorHandling handler[1843251] handler[1843251]
      }
      label handler[1843251]
      const-val shouldHandleError[1843253]:bool[10] "temp"
      val errorExists[2110784]:bool[10] "temp"
      (2110789 'move' errorExists[2110784](2110786 '!=' error[1843234] nil[44]))
      (1843255 'move' shouldHandleError[1843253] errorExists[2110784])
      if shouldHandleError[1843253]
      {
        (1843262 call chpl_uncaught_error[170243] error[1843234])
      }
      ref i_x[2327821]:file[235580] "temp"
      (2327825 'move' i_x[2327821](2327823 'set reference' f[1056863]))
      (2327829 call deinit[235891] i_x[2327821])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val w[1056891]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1056893 'move' w[1056891] call_tmp[1056880])
    const-ref _tuple_expand_tmp_0[1065730]:byteIndex[28170] "dead after last mention" "temp"
    (1065736 'move' _tuple_expand_tmp_0[1065730] args_x0[2347610])
    const-val _return_tmp_[1800572]:bool[10] "dead after last mention" "temp"
    ref i_this[2265655]:channel(true,dynamic,false)[1060947] "temp"
    (2265659 'move' i_this[2265655](2265657 'set reference' w[1056891]))
    ref i_error_out[2265661]:Error[167938] "temp"
    (2265665 'move' i_error_out[2265661](2265663 'set reference' error[1809520]))
    const-val args[2265668]:1*byteIndex[1057081] "insert auto destroy"
    const-ref this_x0[2347630]:byteIndex[28170]
    (2265672 'move' this_x0[2347630] _tuple_expand_tmp_0[1065730])
    (2347635 '.=' args[2265668] x0[1057079] this_x0[2347630])
    val ret[2265679]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2265681]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265683]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265685 'move' call_tmp[2265683](2265687 '.' i_this[2265655] _readWriteThisFromLocale[1060944]))
    val ret[2265690]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265692]:locale[28] "dead after last mention" "temp"
    (2265695 call init=[90167] tmp[2265692] call_tmp[2265683])
    (2265698 'move' ret[2265690] tmp[2265692])
    val ret[2265701]:locale[28] "dead at end of block" "insert auto destroy"
    (2265703 'move' ret[2265701] ret[2265690])
    const-val call_tmp[2265706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265708 'move' call_tmp[2265706](2265711 call ==[782781] ret[2265701] nilLocale[89939]))
    if call_tmp[2265706]
    {
      const-val call_tmp[2265716]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265718]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265720]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265722 'move' call_tmp[2265720](2265725 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265728 'move' call_tmp[2265718] call_tmp[2265720])
      const-val call_tmp[2265731]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265733]:locale[28] "temp"
      (2265736 call chpl_localeID_to_locale[92849] call_tmp[2265718] ret_tmp[2265733])
      (2265739 'move' call_tmp[2265731] ret_tmp[2265733])
      (2265742 'move' call_tmp[2265716] call_tmp[2265731])
      (2265746 call =[90631] ret[2265701] call_tmp[2265716])
      ref i_x[2265749]:locale[28] "temp"
      (2265751 'move' i_x[2265749](2265753 'set reference' call_tmp[2265716]))
      (2265756 call deinit[90185] i_x[2265749])
    }
    (2265759 'move' ret[2265681] ret[2265701])
    const-val origLocale[2265762]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2265764 'move' origLocale[2265762] ret[2265681])
    const-val tmp[2265767]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2265769]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265771 'move' call_tmp[2265769](2265773 '.' i_this[2265655] home[1060935]))
    const-val call_tmp[2265776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2265778]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265780 'move' coerce_tmp[2265778](2265782 '.v' call_tmp[2265769] _instance[89975]))
    val coerce_tmp[2265785]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265787 'move' coerce_tmp[2265785](2265789 'cast' object[22] coerce_tmp[2265778]))
    const-val call_tmp[2265792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265794 'move' call_tmp[2265792](2265796 'ptr_eq' coerce_tmp[2265785] nil[44]))
    if call_tmp[2265792]
    {
      (2265802 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2265805 'move' call_tmp[2265776](2265807 '_wide_get_locale' coerce_tmp[2265778]))
    (2265809 'move' tmp[2265767] call_tmp[2265776])
    val error[2265812]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2265814 'move' error[2265812] nil[44])
    val rvfDerefTmp[2265817]:channel(true,dynamic,false)[1060947] "temp"
    (2265819 'move' rvfDerefTmp[2265817](2265821 'deref' i_this[2265655]))
    val rvfDerefTmp[2265823]:locale[28] "temp"
    (2265825 'move' rvfDerefTmp[2265823] origLocale[2265762])
    val isdirect[2265828]:bool[10] "temp"
    (2265830 'move' isdirect[2265828](2265833 call chpl_doDirectExecuteOn[187423] call_tmp[2265776]))
    if isdirect[2265828]
    {
      (2265838 call on_fn[1066089] rvfDerefTmp[2265817] args[2265668] rvfDerefTmp[2265823] error[2265812])
    }
    {
      val _args_foron_fn[2265844]:_class_localson_fn[2089786] "temp"
      (2265846 'move' _args_foron_fn[2265844](2265848 'stack allocate class' _class_localson_fn[2089786]))
      (2265850 '.=' _args_foron_fn[2265844] _0_tmp[2089789] tmp[2265767])
      (2265854 '.=' _args_foron_fn[2265844] _1_rvfDerefTmp[2089791] rvfDerefTmp[2265817])
      ref tmp[2265858]:1*byteIndex[1057081] "temp"
      (2265860 'move' tmp[2265858](2265862 'set reference' args[2265668]))
      (2265864 '.=' _args_foron_fn[2265844] _2_args[2089793] tmp[2265858])
      (2265868 '.=' _args_foron_fn[2265844] _3_rvfDerefTmp[2089795] rvfDerefTmp[2265823])
      ref tmp[2265872]:Error[167938] "temp"
      (2265874 'move' tmp[2265872](2265876 'set reference' error[2265812]))
      (2265878 '.=' _args_foron_fn[2265844] _4_error[2089797] tmp[2265872])
      val _args_vforon_fn[2265882]:c_void_ptr[149] "temp"
      (2265884 'move' _args_vforon_fn[2265882](2265886 'cast_to_void_star' _args_foron_fn[2265844]))
      val _args_sizeon_fn[2265888]:int(64)[13] "temp"
      (2265890 'move' _args_sizeon_fn[2265888](2265892 'sizeof_bundle' _class_localson_fn[2089786]))
      on(2265895 call wrapon_fn[2089850] tmp[2265767] _args_vforon_fn[2265882] _args_sizeon_fn[2265888] _args_foron_fn[2265844])
    }
    val errorExists[2265901]:bool[10] "temp"
    (2265903 'move' errorExists[2265901](2265905 '!=' error[2265812] nil[44]))
    if errorExists[2265901]
    {
      (2265910 '=' i_error_out[2265661] error[2265812])
      ref i_x[2265913]:locale[28] "temp"
      (2265915 'move' i_x[2265913](2265917 'set reference' origLocale[2265762]))
      (2265920 call deinit[90185] i_x[2265913])
      gotoErrorHandlingReturn _endwrite[2265937] _endwrite[2265937]
    }
    (2265925 'move' ret[2265679] 1)
    ref i_x[2265928]:locale[28] "temp"
    (2265930 'move' i_x[2265928](2265932 'set reference' origLocale[2265762]))
    (2265935 call deinit[90185] i_x[2265928])
    label _endwrite[2265937]
    (1800574 'move' _return_tmp_[1800572] ret[2265679])
    val errorExists[2108648]:bool[10] "temp"
    (2108653 'move' errorExists[2108648](2108650 '!=' error[1809520] nil[44]))
    if errorExists[2108648]
    {
      val error[1843270]:Error[167938] "error variable" "temp"
      (1843272 'move' error[1843270] nil[44])
      (1843276 call close[1062362] w[1056891] error[1843270])
      val errorExists[2110792]:bool[10] "temp"
      (2110797 'move' errorExists[2110792](2110794 '!=' error[1843270] nil[44]))
      if errorExists[2110792]
      {
        gotoErrorHandling handler[1843287] handler[1843287]
      }
      label handler[1843287]
      const-val shouldHandleError[1843289]:bool[10] "temp"
      val errorExists[2110800]:bool[10] "temp"
      (2110805 'move' errorExists[2110800](2110802 '!=' error[1843270] nil[44]))
      (1843291 'move' shouldHandleError[1843289] errorExists[2110800])
      if shouldHandleError[1843289]
      {
        (1843298 call chpl_uncaught_error[170243] error[1843270])
      }
      ref i_x[2268046]:channel(true,dynamic,false)[1060947] "temp"
      (2268050 'move' i_x[2268046](2268048 'set reference' w[1056891]))
      (2268054 call deinit[1536215] i_x[2268046])
      val error[1843306]:Error[167938] "error variable" "temp"
      (1843308 'move' error[1843306] nil[44])
      (1843312 call close[236024] f[1056863] error[1843306])
      val errorExists[2110808]:bool[10] "temp"
      (2110813 'move' errorExists[2110808](2110810 '!=' error[1843306] nil[44]))
      if errorExists[2110808]
      {
        gotoErrorHandling handler[1843323] handler[1843323]
      }
      label handler[1843323]
      const-val shouldHandleError[1843325]:bool[10] "temp"
      val errorExists[2110816]:bool[10] "temp"
      (2110821 'move' errorExists[2110816](2110818 '!=' error[1843306] nil[44]))
      (1843327 'move' shouldHandleError[1843325] errorExists[2110816])
      if shouldHandleError[1843325]
      {
        (1843334 call chpl_uncaught_error[170243] error[1843306])
      }
      ref i_x[2327833]:file[235580] "temp"
      (2327837 'move' i_x[2327833](2327835 'set reference' f[1056863]))
      (2327841 call deinit[235891] i_x[2327833])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val call_tmp[1056917]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1056919 'move' call_tmp[1056917](1056925 call offset[1080148] w[1056891]))
    const-val offset[1056926]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1056928 'move' offset[1056926] call_tmp[1056917])
    val call_tmp[1056932]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1056939]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120709 'move' call_tmp[2120707](2120711 '+' offset[1056926] 1))
    (1056941 'move' call_tmp[1056939] call_tmp[2120707])
    val call_tmp[1056947]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
    val ret[2269377]:c_ptr(uint(8))[937423] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2269379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269381 'move' call_tmp[2269379](2269383 '<' call_tmp[1056939] 0))
    if call_tmp[2269379]
    {
      (2269389 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269392]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269394 'move' call_tmp[2269392](2269396 'cast' uint(64)[115] call_tmp[1056939]))
    const-val call_tmp[2269399]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269401 'move' call_tmp[2269399](2269404 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269406]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269408 'move' call_tmp[2269406](2269410 '*' call_tmp[2269392] call_tmp[2269399]))
    const-val call_tmp[2269413]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269415 'move' call_tmp[2269413](2269418 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269419]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269421 'move' call_tmp[2269419](2269424 call chpl_here_alloc[1080490] call_tmp[2269406] call_tmp[2269413]))
    val call_tmp[2269427]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269429 'move' call_tmp[2269427](2269431 'cast' c_ptr(uint(8))[937423] call_tmp[2269419]))
    (2269434 'move' ret[2269377] call_tmp[2269427])
    (1056949 'move' call_tmp[1056947] ret[2269377])
    val buf[1056955]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1056957 'move' buf[1056955] call_tmp[1056947])
    const-val call_tmp[1056961]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1080924]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269571]:file[235580] "temp"
    (2269575 'move' i_this[2269571](2269573 'set reference' f[1056863]))
    ref i_error_out[2269577]:Error[167938] "temp"
    (2269581 'move' i_error_out[2269577](2269579 'set reference' error[1809520]))
    val ret[2269584]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269586 'move' ret[2269584] 0)
    (1080930 'move' default_arg_start[1080924] ret[2269584])
    val errorExists[2108656]:bool[10] "temp"
    (2108661 'move' errorExists[2108656](2108658 '!=' error[1809520] nil[44]))
    if errorExists[2108656]
    {
      val error[1843342]:Error[167938] "error variable" "temp"
      (1843344 'move' error[1843342] nil[44])
      (1843348 call close[1062362] w[1056891] error[1843342])
      val errorExists[2110824]:bool[10] "temp"
      (2110829 'move' errorExists[2110824](2110826 '!=' error[1843342] nil[44]))
      if errorExists[2110824]
      {
        gotoErrorHandling handler[1843359] handler[1843359]
      }
      label handler[1843359]
      const-val shouldHandleError[1843361]:bool[10] "temp"
      val errorExists[2110832]:bool[10] "temp"
      (2110837 'move' errorExists[2110832](2110834 '!=' error[1843342] nil[44]))
      (1843363 'move' shouldHandleError[1843361] errorExists[2110832])
      if shouldHandleError[1843361]
      {
        (1843370 call chpl_uncaught_error[170243] error[1843342])
      }
      ref i_x[2268058]:channel(true,dynamic,false)[1060947] "temp"
      (2268062 'move' i_x[2268058](2268060 'set reference' w[1056891]))
      (2268066 call deinit[1536215] i_x[2268058])
      val error[1843378]:Error[167938] "error variable" "temp"
      (1843380 'move' error[1843378] nil[44])
      (1843384 call close[236024] f[1056863] error[1843378])
      val errorExists[2110840]:bool[10] "temp"
      (2110845 'move' errorExists[2110840](2110842 '!=' error[1843378] nil[44]))
      if errorExists[2110840]
      {
        gotoErrorHandling handler[1843395] handler[1843395]
      }
      label handler[1843395]
      const-val shouldHandleError[1843397]:bool[10] "temp"
      val errorExists[2110848]:bool[10] "temp"
      (2110853 'move' errorExists[2110848](2110850 '!=' error[1843378] nil[44]))
      (1843399 'move' shouldHandleError[1843397] errorExists[2110848])
      if shouldHandleError[1843397]
      {
        (1843406 call chpl_uncaught_error[170243] error[1843378])
      }
      ref i_x[2327845]:file[235580] "temp"
      (2327849 'move' i_x[2327845](2327847 'set reference' f[1056863]))
      (2327853 call deinit[235891] i_x[2327845])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_end[1080987]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269637]:file[235580] "temp"
    (2269641 'move' i_this[2269637](2269639 'set reference' f[1056863]))
    ref i_error_out[2269643]:Error[167938] "temp"
    (2269647 'move' i_error_out[2269643](2269645 'set reference' error[1809520]))
    val ret[2269650]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269652 'move' ret[2269650] 9223372036854775807)
    (1080993 'move' default_arg_end[1080987] ret[2269650])
    val errorExists[2108664]:bool[10] "temp"
    (2108669 'move' errorExists[2108664](2108666 '!=' error[1809520] nil[44]))
    if errorExists[2108664]
    {
      val error[1843414]:Error[167938] "error variable" "temp"
      (1843416 'move' error[1843414] nil[44])
      (1843420 call close[1062362] w[1056891] error[1843414])
      val errorExists[2110856]:bool[10] "temp"
      (2110861 'move' errorExists[2110856](2110858 '!=' error[1843414] nil[44]))
      if errorExists[2110856]
      {
        gotoErrorHandling handler[1843431] handler[1843431]
      }
      label handler[1843431]
      const-val shouldHandleError[1843433]:bool[10] "temp"
      val errorExists[2110864]:bool[10] "temp"
      (2110869 'move' errorExists[2110864](2110866 '!=' error[1843414] nil[44]))
      (1843435 'move' shouldHandleError[1843433] errorExists[2110864])
      if shouldHandleError[1843433]
      {
        (1843442 call chpl_uncaught_error[170243] error[1843414])
      }
      ref i_x[2268070]:channel(true,dynamic,false)[1060947] "temp"
      (2268074 'move' i_x[2268070](2268072 'set reference' w[1056891]))
      (2268078 call deinit[1536215] i_x[2268070])
      val error[1843450]:Error[167938] "error variable" "temp"
      (1843452 'move' error[1843450] nil[44])
      (1843456 call close[236024] f[1056863] error[1843450])
      val errorExists[2110872]:bool[10] "temp"
      (2110877 'move' errorExists[2110872](2110874 '!=' error[1843450] nil[44]))
      if errorExists[2110872]
      {
        gotoErrorHandling handler[1843467] handler[1843467]
      }
      label handler[1843467]
      const-val shouldHandleError[1843469]:bool[10] "temp"
      val errorExists[2110880]:bool[10] "temp"
      (2110885 'move' errorExists[2110880](2110882 '!=' error[1843450] nil[44]))
      (1843471 'move' shouldHandleError[1843469] errorExists[2110880])
      if shouldHandleError[1843469]
      {
        (1843478 call chpl_uncaught_error[170243] error[1843450])
      }
      ref i_x[2327857]:file[235580] "temp"
      (2327861 'move' i_x[2327857](2327859 'set reference' f[1056863]))
      (2327865 call deinit[235891] i_x[2327857])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_hints[1081034]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269703]:file[235580] "temp"
    (2269707 'move' i_this[2269703](2269705 'set reference' f[1056863]))
    ref i_error_out[2269709]:Error[167938] "temp"
    (2269713 'move' i_error_out[2269709](2269711 'set reference' error[1809520]))
    val ret[2269716]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2269718]:int(32)[95] "dead after last mention" "temp"
    (2269720 'move' tmp[2269718] IOHINT_NONE[231411])
    (2269723 'move' ret[2269716] tmp[2269718])
    (1081040 'move' default_arg_hints[1081034] ret[2269716])
    val errorExists[2108672]:bool[10] "temp"
    (2108677 'move' errorExists[2108672](2108674 '!=' error[1809520] nil[44]))
    if errorExists[2108672]
    {
      val error[1843486]:Error[167938] "error variable" "temp"
      (1843488 'move' error[1843486] nil[44])
      (1843492 call close[1062362] w[1056891] error[1843486])
      val errorExists[2110888]:bool[10] "temp"
      (2110893 'move' errorExists[2110888](2110890 '!=' error[1843486] nil[44]))
      if errorExists[2110888]
      {
        gotoErrorHandling handler[1843503] handler[1843503]
      }
      label handler[1843503]
      const-val shouldHandleError[1843505]:bool[10] "temp"
      val errorExists[2110896]:bool[10] "temp"
      (2110901 'move' errorExists[2110896](2110898 '!=' error[1843486] nil[44]))
      (1843507 'move' shouldHandleError[1843505] errorExists[2110896])
      if shouldHandleError[1843505]
      {
        (1843514 call chpl_uncaught_error[170243] error[1843486])
      }
      ref i_x[2268082]:channel(true,dynamic,false)[1060947] "temp"
      (2268086 'move' i_x[2268082](2268084 'set reference' w[1056891]))
      (2268090 call deinit[1536215] i_x[2268082])
      val error[1843522]:Error[167938] "error variable" "temp"
      (1843524 'move' error[1843522] nil[44])
      (1843528 call close[236024] f[1056863] error[1843522])
      val errorExists[2110904]:bool[10] "temp"
      (2110909 'move' errorExists[2110904](2110906 '!=' error[1843522] nil[44]))
      if errorExists[2110904]
      {
        gotoErrorHandling handler[1843539] handler[1843539]
      }
      label handler[1843539]
      const-val shouldHandleError[1843541]:bool[10] "temp"
      val errorExists[2110912]:bool[10] "temp"
      (2110917 'move' errorExists[2110912](2110914 '!=' error[1843522] nil[44]))
      (1843543 'move' shouldHandleError[1843541] errorExists[2110912])
      if shouldHandleError[1843541]
      {
        (1843550 call chpl_uncaught_error[170243] error[1843522])
      }
      ref i_x[2327869]:file[235580] "temp"
      (2327873 'move' i_x[2327869](2327871 'set reference' f[1056863]))
      (2327877 call deinit[235891] i_x[2327869])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_style[1081070]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269784]:file[235580] "temp"
    (2269788 'move' i_this[2269784](2269786 'set reference' f[1056863]))
    ref i_error_out[2269790]:Error[167938] "temp"
    (2269794 'move' i_error_out[2269790](2269792 'set reference' error[1809520]))
    val ret[2269797]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269799]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269801]:Error[167938] "error variable" "temp"
    (2269803 'move' error[2269801] nil[44])
    (2269806 'move' style[2269799](2269809 call _style[235960] i_this[2269784] error[2269801]))
    val errorExists[2269812]:bool[10] "temp"
    (2269814 'move' errorExists[2269812](2269816 '!=' error[2269801] nil[44]))
    if errorExists[2269812]
    {
      (2269821 '=' i_error_out[2269790] error[2269801])
      gotoErrorHandlingReturn _endreader_default_style[2269830] _endreader_default_style[2269830]
    }
    (2269827 'move' ret[2269797] style[2269799])
    label _endreader_default_style[2269830]
    (1081076 'move' default_arg_style[1081070] ret[2269797])
    val errorExists[2108680]:bool[10] "temp"
    (2108685 'move' errorExists[2108680](2108682 '!=' error[1809520] nil[44]))
    if errorExists[2108680]
    {
      val error[1843558]:Error[167938] "error variable" "temp"
      (1843560 'move' error[1843558] nil[44])
      (1843564 call close[1062362] w[1056891] error[1843558])
      val errorExists[2110920]:bool[10] "temp"
      (2110925 'move' errorExists[2110920](2110922 '!=' error[1843558] nil[44]))
      if errorExists[2110920]
      {
        gotoErrorHandling handler[1843575] handler[1843575]
      }
      label handler[1843575]
      const-val shouldHandleError[1843577]:bool[10] "temp"
      val errorExists[2110928]:bool[10] "temp"
      (2110933 'move' errorExists[2110928](2110930 '!=' error[1843558] nil[44]))
      (1843579 'move' shouldHandleError[1843577] errorExists[2110928])
      if shouldHandleError[1843577]
      {
        (1843586 call chpl_uncaught_error[170243] error[1843558])
      }
      ref i_x[2268094]:channel(true,dynamic,false)[1060947] "temp"
      (2268098 'move' i_x[2268094](2268096 'set reference' w[1056891]))
      (2268102 call deinit[1536215] i_x[2268094])
      val error[1843594]:Error[167938] "error variable" "temp"
      (1843596 'move' error[1843594] nil[44])
      (1843600 call close[236024] f[1056863] error[1843594])
      val errorExists[2110936]:bool[10] "temp"
      (2110941 'move' errorExists[2110936](2110938 '!=' error[1843594] nil[44]))
      if errorExists[2110936]
      {
        gotoErrorHandling handler[1843611] handler[1843611]
      }
      label handler[1843611]
      const-val shouldHandleError[1843613]:bool[10] "temp"
      val errorExists[2110944]:bool[10] "temp"
      (2110949 'move' errorExists[2110944](2110946 '!=' error[1843594] nil[44]))
      (1843615 'move' shouldHandleError[1843613] errorExists[2110944])
      if shouldHandleError[1843613]
      {
        (1843622 call chpl_uncaught_error[170243] error[1843594])
      }
      ref i_x[2327881]:file[235580] "temp"
      (2327885 'move' i_x[2327881](2327883 'set reference' f[1056863]))
      (2327889 call deinit[235891] i_x[2327881])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1833425]:channel(false,dynamic,false)[1080682] "temp"
    (1056969 call reader[1080588] f[1056863] default_arg_start[1080924] default_arg_end[1080987] default_arg_hints[1081034] default_arg_style[1081070] error[1809520] ret_tmp[1833425])
    (1833428 'move' call_tmp[1056961] ret_tmp[1833425])
    val errorExists[2108688]:bool[10] "temp"
    (2108693 'move' errorExists[2108688](2108690 '!=' error[1809520] nil[44]))
    if errorExists[2108688]
    {
      val error[1843630]:Error[167938] "error variable" "temp"
      (1843632 'move' error[1843630] nil[44])
      (1843636 call close[1062362] w[1056891] error[1843630])
      val errorExists[2110952]:bool[10] "temp"
      (2110957 'move' errorExists[2110952](2110954 '!=' error[1843630] nil[44]))
      if errorExists[2110952]
      {
        gotoErrorHandling handler[1843647] handler[1843647]
      }
      label handler[1843647]
      const-val shouldHandleError[1843649]:bool[10] "temp"
      val errorExists[2110960]:bool[10] "temp"
      (2110965 'move' errorExists[2110960](2110962 '!=' error[1843630] nil[44]))
      (1843651 'move' shouldHandleError[1843649] errorExists[2110960])
      if shouldHandleError[1843649]
      {
        (1843658 call chpl_uncaught_error[170243] error[1843630])
      }
      ref i_x[2268106]:channel(true,dynamic,false)[1060947] "temp"
      (2268110 'move' i_x[2268106](2268108 'set reference' w[1056891]))
      (2268114 call deinit[1536215] i_x[2268106])
      val error[1843666]:Error[167938] "error variable" "temp"
      (1843668 'move' error[1843666] nil[44])
      (1843672 call close[236024] f[1056863] error[1843666])
      val errorExists[2110968]:bool[10] "temp"
      (2110973 'move' errorExists[2110968](2110970 '!=' error[1843666] nil[44]))
      if errorExists[2110968]
      {
        gotoErrorHandling handler[1843683] handler[1843683]
      }
      label handler[1843683]
      const-val shouldHandleError[1843685]:bool[10] "temp"
      val errorExists[2110976]:bool[10] "temp"
      (2110981 'move' errorExists[2110976](2110978 '!=' error[1843666] nil[44]))
      (1843687 'move' shouldHandleError[1843685] errorExists[2110976])
      if shouldHandleError[1843685]
      {
        (1843694 call chpl_uncaught_error[170243] error[1843666])
      }
      ref i_x[2327893]:file[235580] "temp"
      (2327897 'move' i_x[2327893](2327895 'set reference' f[1056863]))
      (2327901 call deinit[235891] i_x[2327893])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val r[1056972]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1056974 'move' r[1056972] call_tmp[1056961])
    const-val call_tmp[1056989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1056991 'move' call_tmp[1056989] offset[1056926])
    (1057001 call readBytes[1082839] r[1056972] buf[1056955] call_tmp[1056989] error[1809520])
    val errorExists[2108696]:bool[10] "temp"
    (2108701 'move' errorExists[2108696](2108698 '!=' error[1809520] nil[44]))
    if errorExists[2108696]
    {
      val error[1843702]:Error[167938] "error variable" "temp"
      (1843704 'move' error[1843702] nil[44])
      (1843708 call close[1082094] r[1056972] error[1843702])
      val errorExists[2110984]:bool[10] "temp"
      (2110989 'move' errorExists[2110984](2110986 '!=' error[1843702] nil[44]))
      if errorExists[2110984]
      {
        gotoErrorHandling handler[1843719] handler[1843719]
      }
      label handler[1843719]
      const-val shouldHandleError[1843721]:bool[10] "temp"
      val errorExists[2110992]:bool[10] "temp"
      (2110997 'move' errorExists[2110992](2110994 '!=' error[1843702] nil[44]))
      (1843723 'move' shouldHandleError[1843721] errorExists[2110992])
      if shouldHandleError[1843721]
      {
        (1843730 call chpl_uncaught_error[170243] error[1843702])
      }
      ref i_x[2331584]:channel(false,dynamic,false)[1080682] "temp"
      (2331588 'move' i_x[2331584](2331586 'set reference' r[1056972]))
      (2331592 call deinit[1540469] i_x[2331584])
      val error[1843738]:Error[167938] "error variable" "temp"
      (1843740 'move' error[1843738] nil[44])
      (1843744 call close[1062362] w[1056891] error[1843738])
      val errorExists[2111000]:bool[10] "temp"
      (2111005 'move' errorExists[2111000](2111002 '!=' error[1843738] nil[44]))
      if errorExists[2111000]
      {
        gotoErrorHandling handler[1843755] handler[1843755]
      }
      label handler[1843755]
      const-val shouldHandleError[1843757]:bool[10] "temp"
      val errorExists[2111008]:bool[10] "temp"
      (2111013 'move' errorExists[2111008](2111010 '!=' error[1843738] nil[44]))
      (1843759 'move' shouldHandleError[1843757] errorExists[2111008])
      if shouldHandleError[1843757]
      {
        (1843766 call chpl_uncaught_error[170243] error[1843738])
      }
      ref i_x[2268118]:channel(true,dynamic,false)[1060947] "temp"
      (2268122 'move' i_x[2268118](2268120 'set reference' w[1056891]))
      (2268126 call deinit[1536215] i_x[2268118])
      val error[1843774]:Error[167938] "error variable" "temp"
      (1843776 'move' error[1843774] nil[44])
      (1843780 call close[236024] f[1056863] error[1843774])
      val errorExists[2111016]:bool[10] "temp"
      (2111021 'move' errorExists[2111016](2111018 '!=' error[1843774] nil[44]))
      if errorExists[2111016]
      {
        gotoErrorHandling handler[1843791] handler[1843791]
      }
      label handler[1843791]
      const-val shouldHandleError[1843793]:bool[10] "temp"
      val errorExists[2111024]:bool[10] "temp"
      (2111029 'move' errorExists[2111024](2111026 '!=' error[1843774] nil[44]))
      (1843795 'move' shouldHandleError[1843793] errorExists[2111024])
      if shouldHandleError[1843793]
      {
        (1843802 call chpl_uncaught_error[170243] error[1843774])
      }
      ref i_x[2327905]:file[235580] "temp"
      (2327909 'move' i_x[2327905](2327907 'set reference' f[1056863]))
      (2327913 call deinit[235891] i_x[2327905])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    ref call_tmp[1057008]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2195324]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195326 'move' call_tmp[2195324](2195328 'array_get' buf[1056955] offset[1056926]))
    (1057010 'move' call_tmp[1057008] call_tmp[2195324])
    const-val coerce_tmp[1083332]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083338 'move' coerce_tmp[1083332](1083334 'cast' uint(8)[100] 0))
    (2195810 '=' call_tmp[1057008] coerce_tmp[1083332])
    const-val call_tmp[1057022]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120719 'move' call_tmp[2120717](2120721 '+' offset[1056926] 1))
    (1057024 'move' call_tmp[1057022] call_tmp[2120717])
    const-val call_tmp[1057030]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829117]:string[26] "temp"
    ref i_error_out[2140615]:Error[167938] "temp"
    (2140619 'move' i_error_out[2140615](2140617 'set reference' error[1809520]))
    ref i__retArg[2140621]:string[26] "temp"
    (2140625 'move' i__retArg[2140621](2140623 'set reference' ret_tmp[1829117]))
    const-val ret[2140628]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140630]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140632]:Error[167938] "error variable" "temp"
    (2140634 'move' error[2140632] nil[44])
    const-val ret_tmp[2140637]:string[26] "temp"
    (2140640 call decodeByteBuffer[173892] buf[1056955] offset[1056926] replace[173648] error[2140632] ret_tmp[2140637])
    (2140646 'move' call_tmp[2140630] ret_tmp[2140637])
    val errorExists[2140649]:bool[10] "temp"
    (2140651 'move' errorExists[2140649](2140653 '!=' error[2140632] nil[44]))
    if errorExists[2140649]
    {
      (2140658 '=' i_error_out[2140615] error[2140632])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140667] _endcreateStringWithNewBuffer[2140667]
    }
    (2140664 'move' ret[2140628] call_tmp[2140630])
    label _endcreateStringWithNewBuffer[2140667]
    (2140669 '=' i__retArg[2140621] ret[2140628])
    (1829120 'move' call_tmp[1057030] ret_tmp[1829117])
    val errorExists[2108704]:bool[10] "temp"
    (2108709 'move' errorExists[2108704](2108706 '!=' error[1809520] nil[44]))
    if errorExists[2108704]
    {
      val error[1843810]:Error[167938] "error variable" "temp"
      (1843812 'move' error[1843810] nil[44])
      (1843816 call close[1082094] r[1056972] error[1843810])
      val errorExists[2111032]:bool[10] "temp"
      (2111037 'move' errorExists[2111032](2111034 '!=' error[1843810] nil[44]))
      if errorExists[2111032]
      {
        gotoErrorHandling handler[1843827] handler[1843827]
      }
      label handler[1843827]
      const-val shouldHandleError[1843829]:bool[10] "temp"
      val errorExists[2111040]:bool[10] "temp"
      (2111045 'move' errorExists[2111040](2111042 '!=' error[1843810] nil[44]))
      (1843831 'move' shouldHandleError[1843829] errorExists[2111040])
      if shouldHandleError[1843829]
      {
        (1843838 call chpl_uncaught_error[170243] error[1843810])
      }
      ref i_x[2331596]:channel(false,dynamic,false)[1080682] "temp"
      (2331600 'move' i_x[2331596](2331598 'set reference' r[1056972]))
      (2331604 call deinit[1540469] i_x[2331596])
      val error[1843846]:Error[167938] "error variable" "temp"
      (1843848 'move' error[1843846] nil[44])
      (1843852 call close[1062362] w[1056891] error[1843846])
      val errorExists[2111048]:bool[10] "temp"
      (2111053 'move' errorExists[2111048](2111050 '!=' error[1843846] nil[44]))
      if errorExists[2111048]
      {
        gotoErrorHandling handler[1843863] handler[1843863]
      }
      label handler[1843863]
      const-val shouldHandleError[1843865]:bool[10] "temp"
      val errorExists[2111056]:bool[10] "temp"
      (2111061 'move' errorExists[2111056](2111058 '!=' error[1843846] nil[44]))
      (1843867 'move' shouldHandleError[1843865] errorExists[2111056])
      if shouldHandleError[1843865]
      {
        (1843874 call chpl_uncaught_error[170243] error[1843846])
      }
      ref i_x[2268130]:channel(true,dynamic,false)[1060947] "temp"
      (2268134 'move' i_x[2268130](2268132 'set reference' w[1056891]))
      (2268138 call deinit[1536215] i_x[2268130])
      val error[1843882]:Error[167938] "error variable" "temp"
      (1843884 'move' error[1843882] nil[44])
      (1843888 call close[236024] f[1056863] error[1843882])
      val errorExists[2111064]:bool[10] "temp"
      (2111069 'move' errorExists[2111064](2111066 '!=' error[1843882] nil[44]))
      if errorExists[2111064]
      {
        gotoErrorHandling handler[1843899] handler[1843899]
      }
      label handler[1843899]
      const-val shouldHandleError[1843901]:bool[10] "temp"
      val errorExists[2111072]:bool[10] "temp"
      (2111077 'move' errorExists[2111072](2111074 '!=' error[1843882] nil[44]))
      (1843903 'move' shouldHandleError[1843901] errorExists[2111072])
      if shouldHandleError[1843901]
      {
        (1843910 call chpl_uncaught_error[170243] error[1843882])
      }
      ref i_x[2327917]:file[235580] "temp"
      (2327921 'move' i_x[2327917](2327919 'set reference' f[1056863]))
      (2327925 call deinit[235891] i_x[2327917])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret[1057040]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1057042 'move' ret[1057040] call_tmp[1057030])
    const-val coerce_tmp[1083343]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083349 'move' coerce_tmp[1083343](1083345 'cast' c_void_ptr[149] buf[1056955]))
    (2203414 call chpl_here_free[188081] coerce_tmp[1083343])
    (1083354 'move' ret[1056412] ret[1057040])
    val error[1843918]:Error[167938] "error variable" "temp"
    (1843920 'move' error[1843918] nil[44])
    (1843924 call close[1082094] r[1056972] error[1843918])
    val errorExists[2111080]:bool[10] "temp"
    (2111085 'move' errorExists[2111080](2111082 '!=' error[1843918] nil[44]))
    if errorExists[2111080]
    {
      gotoErrorHandling handler[1843935] handler[1843935]
    }
    label handler[1843935]
    const-val shouldHandleError[1843937]:bool[10] "temp"
    val errorExists[2111088]:bool[10] "temp"
    (2111093 'move' errorExists[2111088](2111090 '!=' error[1843918] nil[44]))
    (1843939 'move' shouldHandleError[1843937] errorExists[2111088])
    if shouldHandleError[1843937]
    {
      (1843946 call chpl_uncaught_error[170243] error[1843918])
    }
    ref i_x[2331608]:channel(false,dynamic,false)[1080682] "temp"
    (2331612 'move' i_x[2331608](2331610 'set reference' r[1056972]))
    (2331616 call deinit[1540469] i_x[2331608])
    val error[1843954]:Error[167938] "error variable" "temp"
    (1843956 'move' error[1843954] nil[44])
    (1843960 call close[1062362] w[1056891] error[1843954])
    val errorExists[2111096]:bool[10] "temp"
    (2111101 'move' errorExists[2111096](2111098 '!=' error[1843954] nil[44]))
    if errorExists[2111096]
    {
      gotoErrorHandling handler[1843971] handler[1843971]
    }
    label handler[1843971]
    const-val shouldHandleError[1843973]:bool[10] "temp"
    val errorExists[2111104]:bool[10] "temp"
    (2111109 'move' errorExists[2111104](2111106 '!=' error[1843954] nil[44]))
    (1843975 'move' shouldHandleError[1843973] errorExists[2111104])
    if shouldHandleError[1843973]
    {
      (1843982 call chpl_uncaught_error[170243] error[1843954])
    }
    ref i_x[2268142]:channel(true,dynamic,false)[1060947] "temp"
    (2268146 'move' i_x[2268142](2268144 'set reference' w[1056891]))
    (2268150 call deinit[1536215] i_x[2268142])
    val error[1843990]:Error[167938] "error variable" "temp"
    (1843992 'move' error[1843990] nil[44])
    (1843996 call close[236024] f[1056863] error[1843990])
    val errorExists[2111112]:bool[10] "temp"
    (2111117 'move' errorExists[2111112](2111114 '!=' error[1843990] nil[44]))
    if errorExists[2111112]
    {
      gotoErrorHandling handler[1844007] handler[1844007]
    }
    label handler[1844007]
    const-val shouldHandleError[1844009]:bool[10] "temp"
    val errorExists[2111120]:bool[10] "temp"
    (2111125 'move' errorExists[2111120](2111122 '!=' error[1843990] nil[44]))
    (1844011 'move' shouldHandleError[1844009] errorExists[2111120])
    if shouldHandleError[1844009]
    {
      (1844018 call chpl_uncaught_error[170243] error[1843990])
    }
    ref i_x[2327929]:file[235580] "temp"
    (2327933 'move' i_x[2327929](2327931 'set reference' f[1056863]))
    (2327937 call deinit[235891] i_x[2327929])
    gotoReturn _end_stringify[1057069] _end_stringify[1057069]
    label handler[1809521]
    const-val shouldHandleError[1809714]:bool[10] "temp"
    val errorExists[2108712]:bool[10] "temp"
    (2108717 'move' errorExists[2108712](2108714 '!=' error[1809520] nil[44]))
    (1809718 'move' shouldHandleError[1809714] errorExists[2108712])
    if shouldHandleError[1809714]
    {
      (1809711 call chpl_uncaught_error[170243] error[1809520])
    }
    label _end_stringify[1057069]
    (1833001 '=' _retArg[1832999] ret[1056412])
    (1833003 return _void[55])
  }
  function stringify[1043702](const  ref arg _e0_args[1043704]:string[26], const in arg _e1_args[1043706]:range(byteIndex,bounded,false)[1025792], const  ref arg _e2_args[1043708]:string[26], const in arg _e3_args[1043710]:int(64)[13], ref arg _retArg[1832917]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2344373]:string[26]
    val args_x1[2344375]:range(byteIndex,bounded,false)[1025792]
    const-ref args_x2[2344377]:string[26]
    val args_x3[2344379]:int(64)[13]
    const-ref ret_tmp_x0[2344407]:string[26] "temp"
    val ret_tmp_x1[2344409]:range(byteIndex,bounded,false)[1025792] "temp"
    const-ref ret_tmp_x2[2344411]:string[26] "temp"
    val ret_tmp_x3[2344413]:int(64)[13] "temp"
    const-ref this_x0[2344439]:string[26]
    val this_x1[2344441]:range(byteIndex,bounded,false)[1025792]
    const-ref this_x2[2344443]:string[26]
    val this_x3[2344445]:int(64)[13]
    (2262929 'move' this_x0[2344439] _e0_args[1043704])
    (2262933 'move' this_x1[2344441] _e1_args[1043706])
    (2262937 'move' this_x2[2344443] _e2_args[1043708])
    (2262941 'move' this_x3[2344445] _e3_args[1043710])
    (2344419 'move' ret_tmp_x0[2344407] this_x0[2344439])
    (2344424 'move' ret_tmp_x1[2344409] this_x1[2344441])
    (2344429 'move' ret_tmp_x2[2344411] this_x2[2344443])
    (2344434 'move' ret_tmp_x3[2344413] this_x3[2344445])
    (2344385 'move' args_x0[2344373] ret_tmp_x0[2344407])
    (2344390 'move' args_x1[2344375] ret_tmp_x1[2344409])
    (2344395 'move' args_x2[2344377] ret_tmp_x2[2344411])
    (2344400 'move' args_x3[2344379] ret_tmp_x3[2344413])
    const-val ret[1043714]:string[26] "dead after last mention" "RVV" "temp"
    val str[1043755]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204338]:string[26] "temp"
    (2204341 'move' inlineImm[2204338] "")
    ref i_x[2204343]:string[26] "temp"
    (2204347 'move' i_x[2204343](2204345 'set reference' inlineImm[2204338]))
    val ret[2204350]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204352]:string[26] "dead after last mention" "temp"
    (2204355 call init=[30771] tmp[2204352] i_x[2204343])
    (2204358 'move' ret[2204350] tmp[2204352])
    (1043757 'move' str[1043755] ret[2204350])
    const-val i[1043762]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1043764 'move' i[1043762] 0)
    const-ref call_tmp[1052880]:string[26] "dead after last mention" "maybe param" "temp"
    (1052882 'move' call_tmp[1052880] args_x0[2344373])
    (1052888 call +=[38797] str[1043755] call_tmp[1052880])
    const-ref call_tmp[1053456]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "maybe param" "temp"
    (1053458 'move' call_tmp[1053456](2344403 'set reference' args_x1[2344375]))
    const-val call_tmp[1053463]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1054626]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1054630 'move' coerce_tmp[1054626] call_tmp[1053456])
    const-val ret_tmp[1832951]:string[26] "temp"
    (1053468 call _cast[1054358] coerce_tmp[1054626] ret_tmp[1832951])
    (1832954 'move' call_tmp[1053463] ret_tmp[1832951])
    (1053472 call +=[38797] str[1043755] call_tmp[1053463])
    ref i_x[2130801]:string[26] "temp"
    (2130805 'move' i_x[2130801](2130803 'set reference' call_tmp[1053463]))
    (2130809 call deinit[30831] i_x[2130801])
    const-ref call_tmp[1053570]:string[26] "dead after last mention" "maybe param" "temp"
    (1053572 'move' call_tmp[1053570] args_x2[2344377])
    (1053578 call +=[38797] str[1043755] call_tmp[1053570])
    const-ref call_tmp[1054146]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1054148 'move' call_tmp[1054146](2344406 'set reference' args_x3[2344379]))
    const-val call_tmp[1054153]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1084854]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1084858 'move' coerce_tmp[1084854](1084856 'deref' call_tmp[1054146]))
    const-val ret_tmp[1833077]:string[26] "temp"
    (1054158 call _cast[1063153] coerce_tmp[1084854] ret_tmp[1833077])
    (1833080 'move' call_tmp[1054153] ret_tmp[1833077])
    (1054162 call +=[38797] str[1043755] call_tmp[1054153])
    ref i_x[2130813]:string[26] "temp"
    (2130817 'move' i_x[2130813](2130815 'set reference' call_tmp[1054153]))
    (2130821 call deinit[30831] i_x[2130813])
    (1084863 'move' ret[1043714] str[1043755])
    gotoReturn _end_stringify[1044380] _end_stringify[1044380]
    label _end_stringify[1044380]
    (1832919 '=' _retArg[1832917] ret[1043714])
    (1832925 return _void[55])
  }
  function stringify[1113520](const  ref arg _e0_args[1113522]:string[26], const in arg _e1_args[1113524]:range(int(64),bounded,false)[1026814], const  ref arg _e2_args[1113526]:string[26], const in arg _e3_args[1113528]:int(64)[13], ref arg _retArg[1833990]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2345590]:string[26]
    val args_x1[2345592]:range(int(64),bounded,false)[1026814]
    const-ref args_x2[2345594]:string[26]
    val args_x3[2345596]:int(64)[13]
    const-ref ret_tmp_x0[2345624]:string[26] "temp"
    val ret_tmp_x1[2345626]:range(int(64),bounded,false)[1026814] "temp"
    const-ref ret_tmp_x2[2345628]:string[26] "temp"
    val ret_tmp_x3[2345630]:int(64)[13] "temp"
    const-ref this_x0[2345656]:string[26]
    val this_x1[2345658]:range(int(64),bounded,false)[1026814]
    const-ref this_x2[2345660]:string[26]
    val this_x3[2345662]:int(64)[13]
    (2271063 'move' this_x0[2345656] _e0_args[1113522])
    (2271067 'move' this_x1[2345658] _e1_args[1113524])
    (2271071 'move' this_x2[2345660] _e2_args[1113526])
    (2271075 'move' this_x3[2345662] _e3_args[1113528])
    (2345636 'move' ret_tmp_x0[2345624] this_x0[2345656])
    (2345641 'move' ret_tmp_x1[2345626] this_x1[2345658])
    (2345646 'move' ret_tmp_x2[2345628] this_x2[2345660])
    (2345651 'move' ret_tmp_x3[2345630] this_x3[2345662])
    (2345602 'move' args_x0[2345590] ret_tmp_x0[2345624])
    (2345607 'move' args_x1[2345592] ret_tmp_x1[2345626])
    (2345612 'move' args_x2[2345594] ret_tmp_x2[2345628])
    (2345617 'move' args_x3[2345596] ret_tmp_x3[2345630])
    const-val ret[1113532]:string[26] "dead after last mention" "RVV" "temp"
    val str[1113573]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204438]:string[26] "temp"
    (2204441 'move' inlineImm[2204438] "")
    ref i_x[2204443]:string[26] "temp"
    (2204447 'move' i_x[2204443](2204445 'set reference' inlineImm[2204438]))
    val ret[2204450]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204452]:string[26] "dead after last mention" "temp"
    (2204455 call init=[30771] tmp[2204452] i_x[2204443])
    (2204458 'move' ret[2204450] tmp[2204452])
    (1113575 'move' str[1113573] ret[2204450])
    const-val i[1113580]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1113582 'move' i[1113580] 0)
    const-ref call_tmp[1117959]:string[26] "dead after last mention" "maybe param" "temp"
    (1117961 'move' call_tmp[1117959] args_x0[2345590])
    (1117967 call +=[38797] str[1113573] call_tmp[1117959])
    const-ref call_tmp[1118535]:range(int(64),bounded,false)[1026814] "dead after last mention" "maybe param" "temp"
    (1118537 'move' call_tmp[1118535](2345620 'set reference' args_x1[2345592]))
    const-val call_tmp[1118542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1119705]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1119709 'move' coerce_tmp[1119705] call_tmp[1118535])
    const-val ret_tmp[1834012]:string[26] "temp"
    (1118547 call _cast[1119437] coerce_tmp[1119705] ret_tmp[1834012])
    (1834015 'move' call_tmp[1118542] ret_tmp[1834012])
    (1118551 call +=[38797] str[1113573] call_tmp[1118542])
    ref i_x[2131305]:string[26] "temp"
    (2131309 'move' i_x[2131305](2131307 'set reference' call_tmp[1118542]))
    (2131313 call deinit[30831] i_x[2131305])
    const-ref call_tmp[1118649]:string[26] "dead after last mention" "maybe param" "temp"
    (1118651 'move' call_tmp[1118649] args_x2[2345594])
    (1118657 call +=[38797] str[1113573] call_tmp[1118649])
    const-ref call_tmp[1119225]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1119227 'move' call_tmp[1119225](2345623 'set reference' args_x3[2345596]))
    const-val call_tmp[1119232]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1120890]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1120894 'move' coerce_tmp[1120890](1120892 'deref' call_tmp[1119225]))
    const-val ret_tmp[1833101]:string[26] "temp"
    (1119237 call _cast[1063153] coerce_tmp[1120890] ret_tmp[1833101])
    (1833104 'move' call_tmp[1119232] ret_tmp[1833101])
    (1119241 call +=[38797] str[1113573] call_tmp[1119232])
    ref i_x[2131317]:string[26] "temp"
    (2131321 'move' i_x[2131317](2131319 'set reference' call_tmp[1119232]))
    (2131325 call deinit[30831] i_x[2131317])
    (1120899 'move' ret[1113532] str[1113573])
    gotoReturn _end_stringify[1114198] _end_stringify[1114198]
    label _end_stringify[1114198]
    (1833992 '=' _retArg[1833990] ret[1113532])
    (1833998 return _void[55])
  }
  function stringify[1128344](const  ref arg _e0_args[1128346]:string[26], const in arg _e1_args[1128348]:range(int(64),boundedLow,false)[1087565], const  ref arg _e2_args[1128350]:string[26], const in arg _e3_args[1128352]:int(64)[13], ref arg _retArg[1834284]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346038]:string[26]
    val args_x1[2346040]:range(int(64),boundedLow,false)[1087565]
    const-ref args_x2[2346042]:string[26]
    val args_x3[2346044]:int(64)[13]
    const-ref ret_tmp_x0[2346072]:string[26] "temp"
    val ret_tmp_x1[2346074]:range(int(64),boundedLow,false)[1087565] "temp"
    const-ref ret_tmp_x2[2346076]:string[26] "temp"
    val ret_tmp_x3[2346078]:int(64)[13] "temp"
    const-ref this_x0[2346104]:string[26]
    val this_x1[2346106]:range(int(64),boundedLow,false)[1087565]
    const-ref this_x2[2346108]:string[26]
    val this_x3[2346110]:int(64)[13]
    (2272171 'move' this_x0[2346104] _e0_args[1128346])
    (2272175 'move' this_x1[2346106] _e1_args[1128348])
    (2272179 'move' this_x2[2346108] _e2_args[1128350])
    (2272183 'move' this_x3[2346110] _e3_args[1128352])
    (2346084 'move' ret_tmp_x0[2346072] this_x0[2346104])
    (2346089 'move' ret_tmp_x1[2346074] this_x1[2346106])
    (2346094 'move' ret_tmp_x2[2346076] this_x2[2346108])
    (2346099 'move' ret_tmp_x3[2346078] this_x3[2346110])
    (2346050 'move' args_x0[2346038] ret_tmp_x0[2346072])
    (2346055 'move' args_x1[2346040] ret_tmp_x1[2346074])
    (2346060 'move' args_x2[2346042] ret_tmp_x2[2346076])
    (2346065 'move' args_x3[2346044] ret_tmp_x3[2346078])
    const-val ret[1128356]:string[26] "dead after last mention" "RVV" "temp"
    val str[1128397]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204463]:string[26] "temp"
    (2204466 'move' inlineImm[2204463] "")
    ref i_x[2204468]:string[26] "temp"
    (2204472 'move' i_x[2204468](2204470 'set reference' inlineImm[2204463]))
    val ret[2204475]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204477]:string[26] "dead after last mention" "temp"
    (2204480 call init=[30771] tmp[2204477] i_x[2204468])
    (2204483 'move' ret[2204475] tmp[2204477])
    (1128399 'move' str[1128397] ret[2204475])
    const-val i[1128404]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1128406 'move' i[1128404] 0)
    const-ref call_tmp[1134482]:string[26] "dead after last mention" "maybe param" "temp"
    (1134484 'move' call_tmp[1134482] args_x0[2346038])
    (1134490 call +=[38797] str[1128397] call_tmp[1134482])
    const-ref call_tmp[1135058]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "maybe param" "temp"
    (1135060 'move' call_tmp[1135058](2346068 'set reference' args_x1[2346040]))
    const-val call_tmp[1135065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1136228]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1136232 'move' coerce_tmp[1136228] call_tmp[1135058])
    const-val ret_tmp[1834306]:string[26] "temp"
    (1135070 call _cast[1135960] coerce_tmp[1136228] ret_tmp[1834306])
    (1834309 'move' call_tmp[1135065] ret_tmp[1834306])
    (1135074 call +=[38797] str[1128397] call_tmp[1135065])
    ref i_x[2131377]:string[26] "temp"
    (2131381 'move' i_x[2131377](2131379 'set reference' call_tmp[1135065]))
    (2131385 call deinit[30831] i_x[2131377])
    const-ref call_tmp[1135172]:string[26] "dead after last mention" "maybe param" "temp"
    (1135174 'move' call_tmp[1135172] args_x2[2346042])
    (1135180 call +=[38797] str[1128397] call_tmp[1135172])
    const-ref call_tmp[1135748]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1135750 'move' call_tmp[1135748](2346071 'set reference' args_x3[2346044]))
    const-val call_tmp[1135755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1138944]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1138948 'move' coerce_tmp[1138944](1138946 'deref' call_tmp[1135748]))
    const-val ret_tmp[1833119]:string[26] "temp"
    (1135760 call _cast[1063153] coerce_tmp[1138944] ret_tmp[1833119])
    (1833122 'move' call_tmp[1135755] ret_tmp[1833119])
    (1135764 call +=[38797] str[1128397] call_tmp[1135755])
    ref i_x[2131389]:string[26] "temp"
    (2131393 'move' i_x[2131389](2131391 'set reference' call_tmp[1135755]))
    (2131397 call deinit[30831] i_x[2131389])
    (1138953 'move' ret[1128356] str[1128397])
    gotoReturn _end_stringify[1129022] _end_stringify[1129022]
    label _end_stringify[1129022]
    (1834286 '=' _retArg[1834284] ret[1128356])
    (1834292 return _void[55])
  }
  function stringify[1146515](const  ref arg _e0_args[1146517]:string[26], const in arg _e1_args[1146519]:range(byteIndex,boundedLow,false)[1143403], const  ref arg _e2_args[1146521]:string[26], const in arg _e3_args[1146523]:int(64)[13], ref arg _retArg[1834548]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346121]:string[26]
    val args_x1[2346123]:range(byteIndex,boundedLow,false)[1143403]
    const-ref args_x2[2346125]:string[26]
    val args_x3[2346127]:int(64)[13]
    const-ref ret_tmp_x0[2346155]:string[26] "temp"
    val ret_tmp_x1[2346157]:range(byteIndex,boundedLow,false)[1143403] "temp"
    const-ref ret_tmp_x2[2346159]:string[26] "temp"
    val ret_tmp_x3[2346161]:int(64)[13] "temp"
    const-ref this_x0[2346187]:string[26]
    val this_x1[2346189]:range(byteIndex,boundedLow,false)[1143403]
    const-ref this_x2[2346191]:string[26]
    val this_x3[2346193]:int(64)[13]
    (2272690 'move' this_x0[2346187] _e0_args[1146517])
    (2272694 'move' this_x1[2346189] _e1_args[1146519])
    (2272698 'move' this_x2[2346191] _e2_args[1146521])
    (2272702 'move' this_x3[2346193] _e3_args[1146523])
    (2346167 'move' ret_tmp_x0[2346155] this_x0[2346187])
    (2346172 'move' ret_tmp_x1[2346157] this_x1[2346189])
    (2346177 'move' ret_tmp_x2[2346159] this_x2[2346191])
    (2346182 'move' ret_tmp_x3[2346161] this_x3[2346193])
    (2346133 'move' args_x0[2346121] ret_tmp_x0[2346155])
    (2346138 'move' args_x1[2346123] ret_tmp_x1[2346157])
    (2346143 'move' args_x2[2346125] ret_tmp_x2[2346159])
    (2346148 'move' args_x3[2346127] ret_tmp_x3[2346161])
    const-val ret[1146527]:string[26] "dead after last mention" "RVV" "temp"
    val str[1146568]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204488]:string[26] "temp"
    (2204491 'move' inlineImm[2204488] "")
    ref i_x[2204493]:string[26] "temp"
    (2204497 'move' i_x[2204493](2204495 'set reference' inlineImm[2204488]))
    val ret[2204500]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204502]:string[26] "dead after last mention" "temp"
    (2204505 call init=[30771] tmp[2204502] i_x[2204493])
    (2204508 'move' ret[2204500] tmp[2204502])
    (1146570 'move' str[1146568] ret[2204500])
    const-val i[1146575]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1146577 'move' i[1146575] 0)
    const-ref call_tmp[1152946]:string[26] "dead after last mention" "maybe param" "temp"
    (1152948 'move' call_tmp[1152946] args_x0[2346121])
    (1152954 call +=[38797] str[1146568] call_tmp[1152946])
    const-ref call_tmp[1153522]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "maybe param" "temp"
    (1153524 'move' call_tmp[1153522](2346151 'set reference' args_x1[2346123]))
    const-val call_tmp[1153529]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1154692]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1154696 'move' coerce_tmp[1154692] call_tmp[1153522])
    const-val ret_tmp[1834588]:string[26] "temp"
    (1153534 call _cast[1154424] coerce_tmp[1154692] ret_tmp[1834588])
    (1834591 'move' call_tmp[1153529] ret_tmp[1834588])
    (1153538 call +=[38797] str[1146568] call_tmp[1153529])
    ref i_x[2131461]:string[26] "temp"
    (2131465 'move' i_x[2131461](2131463 'set reference' call_tmp[1153529]))
    (2131469 call deinit[30831] i_x[2131461])
    const-ref call_tmp[1153636]:string[26] "dead after last mention" "maybe param" "temp"
    (1153638 'move' call_tmp[1153636] args_x2[2346125])
    (1153644 call +=[38797] str[1146568] call_tmp[1153636])
    const-ref call_tmp[1154212]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1154214 'move' call_tmp[1154212](2346154 'set reference' args_x3[2346127]))
    const-val call_tmp[1154219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1156265]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156269 'move' coerce_tmp[1156265](1156267 'deref' call_tmp[1154212]))
    const-val ret_tmp[1833137]:string[26] "temp"
    (1154224 call _cast[1063153] coerce_tmp[1156265] ret_tmp[1833137])
    (1833140 'move' call_tmp[1154219] ret_tmp[1833137])
    (1154228 call +=[38797] str[1146568] call_tmp[1154219])
    ref i_x[2131473]:string[26] "temp"
    (2131477 'move' i_x[2131473](2131475 'set reference' call_tmp[1154219]))
    (2131481 call deinit[30831] i_x[2131473])
    (1156274 'move' ret[1146527] str[1146568])
    gotoReturn _end_stringify[1147193] _end_stringify[1147193]
    label _end_stringify[1147193]
    (1834550 '=' _retArg[1834548] ret[1146527])
    (1834556 return _void[55])
  }
  function stringify[1175821](const  ref arg _e0_args[1175823]:string[26], const  ref arg _e1_args[1175825]:codepointIndex[28274], const  ref arg _e2_args[1175827]:string[26], const in arg _e3_args[1175829]:int(64)[13], ref arg _retArg[1834664]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346334]:string[26]
    const-ref args_x1[2346336]:codepointIndex[28274]
    const-ref args_x2[2346338]:string[26]
    val args_x3[2346340]:int(64)[13]
    const-ref ret_tmp_x0[2346367]:string[26] "temp"
    const-ref ret_tmp_x1[2346369]:codepointIndex[28274] "temp"
    const-ref ret_tmp_x2[2346371]:string[26] "temp"
    val ret_tmp_x3[2346373]:int(64)[13] "temp"
    const-ref this_x0[2346399]:string[26]
    const-ref this_x1[2346401]:codepointIndex[28274]
    const-ref this_x2[2346403]:string[26]
    val this_x3[2346405]:int(64)[13]
    (2274624 'move' this_x0[2346399] _e0_args[1175823])
    (2274628 'move' this_x1[2346401] _e1_args[1175825])
    (2274632 'move' this_x2[2346403] _e2_args[1175827])
    (2274636 'move' this_x3[2346405] _e3_args[1175829])
    (2346379 'move' ret_tmp_x0[2346367] this_x0[2346399])
    (2346384 'move' ret_tmp_x1[2346369] this_x1[2346401])
    (2346389 'move' ret_tmp_x2[2346371] this_x2[2346403])
    (2346394 'move' ret_tmp_x3[2346373] this_x3[2346405])
    (2346346 'move' args_x0[2346334] ret_tmp_x0[2346367])
    (2346351 'move' args_x1[2346336] ret_tmp_x1[2346369])
    (2346356 'move' args_x2[2346338] ret_tmp_x2[2346371])
    (2346361 'move' args_x3[2346340] ret_tmp_x3[2346373])
    const-val ret[1175833]:string[26] "dead after last mention" "RVV" "temp"
    val error[1811311]:Error[167938] "error variable" "temp"
    (1811496 'move' error[1811311] nil[44])
    const-val call_tmp[1176287]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1179625]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[2263038]:Error[167938] "temp"
    (2263042 'move' i_error_out[2263038](2263040 'set reference' error[1811311]))
    val ret[2263045]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263047]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263049 'move' style[2263047](2263052 call defaultIOStyle[235295]))
    (2263053 'move' ret[2263045] style[2263047])
    (1179629 'move' default_arg_style[1179625] ret[2263045])
    val errorExists[2109480]:bool[10] "temp"
    (2109485 'move' errorExists[2109480](2109482 '!=' error[1811311] nil[44]))
    if errorExists[2109480]
    {
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1831515]:file[235580] "temp"
    (1176292 call openmem[237625] default_arg_style[1179625] error[1811311] ret_tmp[1831515])
    (1831518 'move' call_tmp[1176287] ret_tmp[1831515])
    val errorExists[2109488]:bool[10] "temp"
    (2109493 'move' errorExists[2109488](2109490 '!=' error[1811311] nil[44]))
    if errorExists[2109488]
    {
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val f[1176293]:file[235580] "dead at end of block" "insert auto destroy"
    (1176295 'move' f[1176293] call_tmp[1176287])
    const-val call_tmp[1176310]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1179654]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263104]:file[235580] "temp"
    (2263108 'move' i_this[2263104](2263106 'set reference' f[1176293]))
    ref i_error_out[2263110]:Error[167938] "temp"
    (2263114 'move' i_error_out[2263110](2263112 'set reference' error[1811311]))
    val ret[2263117]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263119 'move' ret[2263117] 0)
    (1179660 'move' default_arg_start[1179654] ret[2263117])
    val errorExists[2109496]:bool[10] "temp"
    (2109501 'move' errorExists[2109496](2109498 '!=' error[1811311] nil[44]))
    if errorExists[2109496]
    {
      val error[1845952]:Error[167938] "error variable" "temp"
      (1845954 'move' error[1845952] nil[44])
      (1845958 call close[236024] f[1176293] error[1845952])
      val errorExists[2111544]:bool[10] "temp"
      (2111549 'move' errorExists[2111544](2111546 '!=' error[1845952] nil[44]))
      if errorExists[2111544]
      {
        gotoErrorHandling handler[1845969] handler[1845969]
      }
      label handler[1845969]
      const-val shouldHandleError[1845971]:bool[10] "temp"
      val errorExists[2111552]:bool[10] "temp"
      (2111557 'move' errorExists[2111552](2111554 '!=' error[1845952] nil[44]))
      (1845973 'move' shouldHandleError[1845971] errorExists[2111552])
      if shouldHandleError[1845971]
      {
        (1845980 call chpl_uncaught_error[170243] error[1845952])
      }
      ref i_x[2328109]:file[235580] "temp"
      (2328113 'move' i_x[2328109](2328111 'set reference' f[1176293]))
      (2328117 call deinit[235891] i_x[2328109])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_end[1179664]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263170]:file[235580] "temp"
    (2263174 'move' i_this[2263170](2263172 'set reference' f[1176293]))
    ref i_error_out[2263176]:Error[167938] "temp"
    (2263180 'move' i_error_out[2263176](2263178 'set reference' error[1811311]))
    val ret[2263183]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263185 'move' ret[2263183] 9223372036854775807)
    (1179670 'move' default_arg_end[1179664] ret[2263183])
    val errorExists[2109504]:bool[10] "temp"
    (2109509 'move' errorExists[2109504](2109506 '!=' error[1811311] nil[44]))
    if errorExists[2109504]
    {
      val error[1845988]:Error[167938] "error variable" "temp"
      (1845990 'move' error[1845988] nil[44])
      (1845994 call close[236024] f[1176293] error[1845988])
      val errorExists[2111560]:bool[10] "temp"
      (2111565 'move' errorExists[2111560](2111562 '!=' error[1845988] nil[44]))
      if errorExists[2111560]
      {
        gotoErrorHandling handler[1846005] handler[1846005]
      }
      label handler[1846005]
      const-val shouldHandleError[1846007]:bool[10] "temp"
      val errorExists[2111568]:bool[10] "temp"
      (2111573 'move' errorExists[2111568](2111570 '!=' error[1845988] nil[44]))
      (1846009 'move' shouldHandleError[1846007] errorExists[2111568])
      if shouldHandleError[1846007]
      {
        (1846016 call chpl_uncaught_error[170243] error[1845988])
      }
      ref i_x[2328121]:file[235580] "temp"
      (2328125 'move' i_x[2328121](2328123 'set reference' f[1176293]))
      (2328129 call deinit[235891] i_x[2328121])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_hints[1179674]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263250]:file[235580] "temp"
    (2263254 'move' i_this[2263250](2263252 'set reference' f[1176293]))
    ref i_error_out[2263256]:Error[167938] "temp"
    (2263260 'move' i_error_out[2263256](2263258 'set reference' error[1811311]))
    val ret[2263263]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2263265]:int(32)[95] "dead after last mention" "temp"
    (2263267 'move' tmp[2263265](2263269 'cast' int(32)[95] 0))
    (2263272 'move' ret[2263263] tmp[2263265])
    (1179680 'move' default_arg_hints[1179674] ret[2263263])
    val errorExists[2109512]:bool[10] "temp"
    (2109517 'move' errorExists[2109512](2109514 '!=' error[1811311] nil[44]))
    if errorExists[2109512]
    {
      val error[1846024]:Error[167938] "error variable" "temp"
      (1846026 'move' error[1846024] nil[44])
      (1846030 call close[236024] f[1176293] error[1846024])
      val errorExists[2111576]:bool[10] "temp"
      (2111581 'move' errorExists[2111576](2111578 '!=' error[1846024] nil[44]))
      if errorExists[2111576]
      {
        gotoErrorHandling handler[1846041] handler[1846041]
      }
      label handler[1846041]
      const-val shouldHandleError[1846043]:bool[10] "temp"
      val errorExists[2111584]:bool[10] "temp"
      (2111589 'move' errorExists[2111584](2111586 '!=' error[1846024] nil[44]))
      (1846045 'move' shouldHandleError[1846043] errorExists[2111584])
      if shouldHandleError[1846043]
      {
        (1846052 call chpl_uncaught_error[170243] error[1846024])
      }
      ref i_x[2328133]:file[235580] "temp"
      (2328137 'move' i_x[2328133](2328135 'set reference' f[1176293]))
      (2328141 call deinit[235891] i_x[2328133])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_style[1179684]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263379]:file[235580] "temp"
    (2263383 'move' i_this[2263379](2263381 'set reference' f[1176293]))
    ref i_error_out[2263385]:Error[167938] "temp"
    (2263389 'move' i_error_out[2263385](2263387 'set reference' error[1811311]))
    val ret[2263392]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263394]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263396]:Error[167938] "error variable" "temp"
    (2263398 'move' error[2263396] nil[44])
    (2263401 'move' style[2263394](2263404 call _style[235960] i_this[2263379] error[2263396]))
    val errorExists[2263407]:bool[10] "temp"
    (2263409 'move' errorExists[2263407](2263411 '!=' error[2263396] nil[44]))
    if errorExists[2263407]
    {
      (2263416 '=' i_error_out[2263385] error[2263396])
      gotoErrorHandlingReturn _endwriter_default_style[2263425] _endwriter_default_style[2263425]
    }
    (2263422 'move' ret[2263392] style[2263394])
    label _endwriter_default_style[2263425]
    (1179690 'move' default_arg_style[1179684] ret[2263392])
    val errorExists[2109520]:bool[10] "temp"
    (2109525 'move' errorExists[2109520](2109522 '!=' error[1811311] nil[44]))
    if errorExists[2109520]
    {
      val error[1846060]:Error[167938] "error variable" "temp"
      (1846062 'move' error[1846060] nil[44])
      (1846066 call close[236024] f[1176293] error[1846060])
      val errorExists[2111592]:bool[10] "temp"
      (2111597 'move' errorExists[2111592](2111594 '!=' error[1846060] nil[44]))
      if errorExists[2111592]
      {
        gotoErrorHandling handler[1846077] handler[1846077]
      }
      label handler[1846077]
      const-val shouldHandleError[1846079]:bool[10] "temp"
      val errorExists[2111600]:bool[10] "temp"
      (2111605 'move' errorExists[2111600](2111602 '!=' error[1846060] nil[44]))
      (1846081 'move' shouldHandleError[1846079] errorExists[2111600])
      if shouldHandleError[1846079]
      {
        (1846088 call chpl_uncaught_error[170243] error[1846060])
      }
      ref i_x[2328145]:file[235580] "temp"
      (2328149 'move' i_x[2328145](2328147 'set reference' f[1176293]))
      (2328153 call deinit[235891] i_x[2328145])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1833035]:channel(true,dynamic,false)[1060947] "temp"
    (1176318 call writer[1060853] f[1176293] default_arg_start[1179654] default_arg_end[1179664] default_arg_hints[1179674] default_arg_style[1179684] error[1811311] ret_tmp[1833035])
    (1833038 'move' call_tmp[1176310] ret_tmp[1833035])
    val errorExists[2109528]:bool[10] "temp"
    (2109533 'move' errorExists[2109528](2109530 '!=' error[1811311] nil[44]))
    if errorExists[2109528]
    {
      val error[1846096]:Error[167938] "error variable" "temp"
      (1846098 'move' error[1846096] nil[44])
      (1846102 call close[236024] f[1176293] error[1846096])
      val errorExists[2111608]:bool[10] "temp"
      (2111613 'move' errorExists[2111608](2111610 '!=' error[1846096] nil[44]))
      if errorExists[2111608]
      {
        gotoErrorHandling handler[1846113] handler[1846113]
      }
      label handler[1846113]
      const-val shouldHandleError[1846115]:bool[10] "temp"
      val errorExists[2111616]:bool[10] "temp"
      (2111621 'move' errorExists[2111616](2111618 '!=' error[1846096] nil[44]))
      (1846117 'move' shouldHandleError[1846115] errorExists[2111616])
      if shouldHandleError[1846115]
      {
        (1846124 call chpl_uncaught_error[170243] error[1846096])
      }
      ref i_x[2328157]:file[235580] "temp"
      (2328161 'move' i_x[2328157](2328159 'set reference' f[1176293]))
      (2328165 call deinit[235891] i_x[2328157])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val w[1176321]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1176323 'move' w[1176321] call_tmp[1176310])
    const-ref _tuple_expand_tmp_0[1179696]:string[26] "dead after last mention" "temp"
    (1179702 'move' _tuple_expand_tmp_0[1179696] args_x0[2346334])
    const-ref _tuple_expand_tmp_1[1179704]:codepointIndex[28274] "dead after last mention" "temp"
    (1179710 'move' _tuple_expand_tmp_1[1179704] args_x1[2346336])
    const-ref _tuple_expand_tmp_2[1179712]:string[26] "dead after last mention" "temp"
    (1179718 'move' _tuple_expand_tmp_2[1179712] args_x2[2346338])
    const-ref _tuple_expand_tmp_3[1179720]:int(64)[13] "dead after last mention" "temp"
    (1179726 'move' _tuple_expand_tmp_3[1179720](2346366 'set reference' args_x3[2346340]))
    const-val coerce_tmp[1180500]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180504 'move' coerce_tmp[1180500](1180502 'deref' _tuple_expand_tmp_3[1179720]))
    const-val _return_tmp_[1800596]:bool[10] "dead after last mention" "temp"
    ref i_this[2274720]:channel(true,dynamic,false)[1060947] "temp"
    (2274724 'move' i_this[2274720](2274722 'set reference' w[1176321]))
    ref i_error_out[2274726]:Error[167938] "temp"
    (2274730 'move' i_error_out[2274726](2274728 'set reference' error[1811311]))
    const-val args[2274733]:(string,codepointIndex,string,int(64))[1176520] "insert auto destroy"
    const-ref this_x0[2346415]:string[26]
    const-ref this_x1[2346417]:codepointIndex[28274]
    const-ref this_x2[2346419]:string[26]
    val this_x3[2346421]:int(64)[13]
    (2274737 'move' this_x0[2346415] _tuple_expand_tmp_0[1179696])
    (2274741 'move' this_x1[2346417] _tuple_expand_tmp_1[1179704])
    (2274745 'move' this_x2[2346419] _tuple_expand_tmp_2[1179712])
    (2274749 'move' this_x3[2346421] coerce_tmp[1180500])
    (2346429 '.=' args[2274733] x0[1176512] this_x0[2346415])
    (2346433 '.=' args[2274733] x1[1176514] this_x1[2346417])
    (2346437 '.=' args[2274733] x2[1176516] this_x2[2346419])
    (2346441 '.=' args[2274733] x3[1176518] this_x3[2346421])
    val ret[2274756]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2274758]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2274760]:locale[28] "dead after last mention" "maybe param" "temp"
    (2274762 'move' call_tmp[2274760](2274764 '.' i_this[2274720] _readWriteThisFromLocale[1060944]))
    val ret[2274767]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2274769]:locale[28] "dead after last mention" "temp"
    (2274772 call init=[90167] tmp[2274769] call_tmp[2274760])
    (2274775 'move' ret[2274767] tmp[2274769])
    val ret[2274778]:locale[28] "dead at end of block" "insert auto destroy"
    (2274780 'move' ret[2274778] ret[2274767])
    const-val call_tmp[2274783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2274785 'move' call_tmp[2274783](2274788 call ==[782781] ret[2274778] nilLocale[89939]))
    if call_tmp[2274783]
    {
      const-val call_tmp[2274793]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2274795]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2274797]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2274799 'move' call_tmp[2274797](2274802 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2274805 'move' call_tmp[2274795] call_tmp[2274797])
      const-val call_tmp[2274808]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2274810]:locale[28] "temp"
      (2274813 call chpl_localeID_to_locale[92849] call_tmp[2274795] ret_tmp[2274810])
      (2274816 'move' call_tmp[2274808] ret_tmp[2274810])
      (2274819 'move' call_tmp[2274793] call_tmp[2274808])
      (2274823 call =[90631] ret[2274778] call_tmp[2274793])
      ref i_x[2274826]:locale[28] "temp"
      (2274828 'move' i_x[2274826](2274830 'set reference' call_tmp[2274793]))
      (2274833 call deinit[90185] i_x[2274826])
    }
    (2274836 'move' ret[2274758] ret[2274778])
    const-val origLocale[2274839]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2274841 'move' origLocale[2274839] ret[2274758])
    const-val tmp[2274844]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2274846]:locale[28] "dead after last mention" "maybe param" "temp"
    (2274848 'move' call_tmp[2274846](2274850 '.' i_this[2274720] home[1060935]))
    const-val call_tmp[2274853]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2274855]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2274857 'move' coerce_tmp[2274855](2274859 '.v' call_tmp[2274846] _instance[89975]))
    val coerce_tmp[2274862]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2274864 'move' coerce_tmp[2274862](2274866 'cast' object[22] coerce_tmp[2274855]))
    const-val call_tmp[2274869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2274871 'move' call_tmp[2274869](2274873 'ptr_eq' coerce_tmp[2274862] nil[44]))
    if call_tmp[2274869]
    {
      (2274879 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2274882 'move' call_tmp[2274853](2274884 '_wide_get_locale' coerce_tmp[2274855]))
    (2274886 'move' tmp[2274844] call_tmp[2274853])
    val error[2274889]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2274891 'move' error[2274889] nil[44])
    val rvfDerefTmp[2274894]:channel(true,dynamic,false)[1060947] "temp"
    (2274896 'move' rvfDerefTmp[2274894](2274898 'deref' i_this[2274720]))
    val rvfDerefTmp[2274900]:locale[28] "temp"
    (2274902 'move' rvfDerefTmp[2274900] origLocale[2274839])
    val isdirect[2274905]:bool[10] "temp"
    (2274907 'move' isdirect[2274905](2274910 call chpl_doDirectExecuteOn[187423] call_tmp[2274853]))
    if isdirect[2274905]
    {
      (2274915 call on_fn[1180386] rvfDerefTmp[2274894] args[2274733] rvfDerefTmp[2274900] error[2274889])
    }
    {
      val _args_foron_fn[2274921]:_class_localson_fn[2091285] "temp"
      (2274923 'move' _args_foron_fn[2274921](2274925 'stack allocate class' _class_localson_fn[2091285]))
      (2274927 '.=' _args_foron_fn[2274921] _0_tmp[2091288] tmp[2274844])
      (2274931 '.=' _args_foron_fn[2274921] _1_rvfDerefTmp[2091290] rvfDerefTmp[2274894])
      ref tmp[2274935]:(string,codepointIndex,string,int(64))[1176520] "temp"
      (2274937 'move' tmp[2274935](2274939 'set reference' args[2274733]))
      (2274941 '.=' _args_foron_fn[2274921] _2_args[2091292] tmp[2274935])
      (2274945 '.=' _args_foron_fn[2274921] _3_rvfDerefTmp[2091294] rvfDerefTmp[2274900])
      ref tmp[2274949]:Error[167938] "temp"
      (2274951 'move' tmp[2274949](2274953 'set reference' error[2274889]))
      (2274955 '.=' _args_foron_fn[2274921] _4_error[2091296] tmp[2274949])
      val _args_vforon_fn[2274959]:c_void_ptr[149] "temp"
      (2274961 'move' _args_vforon_fn[2274959](2274963 'cast_to_void_star' _args_foron_fn[2274921]))
      val _args_sizeon_fn[2274965]:int(64)[13] "temp"
      (2274967 'move' _args_sizeon_fn[2274965](2274969 'sizeof_bundle' _class_localson_fn[2091285]))
      on(2274972 call wrapon_fn[2091349] tmp[2274844] _args_vforon_fn[2274959] _args_sizeon_fn[2274965] _args_foron_fn[2274921])
    }
    val errorExists[2274978]:bool[10] "temp"
    (2274980 'move' errorExists[2274978](2274982 '!=' error[2274889] nil[44]))
    if errorExists[2274978]
    {
      (2274987 '=' i_error_out[2274726] error[2274889])
      ref i_x[2274990]:locale[28] "temp"
      (2274992 'move' i_x[2274990](2274994 'set reference' origLocale[2274839]))
      (2274997 call deinit[90185] i_x[2274990])
      gotoErrorHandlingReturn _endwrite[2275014] _endwrite[2275014]
    }
    (2275002 'move' ret[2274756] 1)
    ref i_x[2275005]:locale[28] "temp"
    (2275007 'move' i_x[2275005](2275009 'set reference' origLocale[2274839]))
    (2275012 call deinit[90185] i_x[2275005])
    label _endwrite[2275014]
    (1800598 'move' _return_tmp_[1800596] ret[2274756])
    val errorExists[2109536]:bool[10] "temp"
    (2109541 'move' errorExists[2109536](2109538 '!=' error[1811311] nil[44]))
    if errorExists[2109536]
    {
      val error[1846132]:Error[167938] "error variable" "temp"
      (1846134 'move' error[1846132] nil[44])
      (1846138 call close[1062362] w[1176321] error[1846132])
      val errorExists[2111624]:bool[10] "temp"
      (2111629 'move' errorExists[2111624](2111626 '!=' error[1846132] nil[44]))
      if errorExists[2111624]
      {
        gotoErrorHandling handler[1846149] handler[1846149]
      }
      label handler[1846149]
      const-val shouldHandleError[1846151]:bool[10] "temp"
      val errorExists[2111632]:bool[10] "temp"
      (2111637 'move' errorExists[2111632](2111634 '!=' error[1846132] nil[44]))
      (1846153 'move' shouldHandleError[1846151] errorExists[2111632])
      if shouldHandleError[1846151]
      {
        (1846160 call chpl_uncaught_error[170243] error[1846132])
      }
      ref i_x[2268346]:channel(true,dynamic,false)[1060947] "temp"
      (2268350 'move' i_x[2268346](2268348 'set reference' w[1176321]))
      (2268354 call deinit[1536215] i_x[2268346])
      val error[1846168]:Error[167938] "error variable" "temp"
      (1846170 'move' error[1846168] nil[44])
      (1846174 call close[236024] f[1176293] error[1846168])
      val errorExists[2111640]:bool[10] "temp"
      (2111645 'move' errorExists[2111640](2111642 '!=' error[1846168] nil[44]))
      if errorExists[2111640]
      {
        gotoErrorHandling handler[1846185] handler[1846185]
      }
      label handler[1846185]
      const-val shouldHandleError[1846187]:bool[10] "temp"
      val errorExists[2111648]:bool[10] "temp"
      (2111653 'move' errorExists[2111648](2111650 '!=' error[1846168] nil[44]))
      (1846189 'move' shouldHandleError[1846187] errorExists[2111648])
      if shouldHandleError[1846187]
      {
        (1846196 call chpl_uncaught_error[170243] error[1846168])
      }
      ref i_x[2328169]:file[235580] "temp"
      (2328173 'move' i_x[2328169](2328171 'set reference' f[1176293]))
      (2328177 call deinit[235891] i_x[2328169])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val call_tmp[1176347]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1176349 'move' call_tmp[1176347](1176355 call offset[1080148] w[1176321]))
    const-val offset[1176356]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1176358 'move' offset[1176356] call_tmp[1176347])
    val call_tmp[1176362]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1176369]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120749 'move' call_tmp[2120747](2120751 '+' offset[1176356] 1))
    (1176371 'move' call_tmp[1176369] call_tmp[2120747])
    val call_tmp[1176377]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
    val ret[2269507]:c_ptr(uint(8))[937423] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2269509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269511 'move' call_tmp[2269509](2269513 '<' call_tmp[1176369] 0))
    if call_tmp[2269509]
    {
      (2269519 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269522]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269524 'move' call_tmp[2269522](2269526 'cast' uint(64)[115] call_tmp[1176369]))
    const-val call_tmp[2269529]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269531 'move' call_tmp[2269529](2269534 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269536]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269538 'move' call_tmp[2269536](2269540 '*' call_tmp[2269522] call_tmp[2269529]))
    const-val call_tmp[2269543]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269545 'move' call_tmp[2269543](2269548 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269549]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269551 'move' call_tmp[2269549](2269554 call chpl_here_alloc[1080490] call_tmp[2269536] call_tmp[2269543]))
    val call_tmp[2269557]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269559 'move' call_tmp[2269557](2269561 'cast' c_ptr(uint(8))[937423] call_tmp[2269549]))
    (2269564 'move' ret[2269507] call_tmp[2269557])
    (1176379 'move' call_tmp[1176377] ret[2269507])
    val buf[1176385]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1176387 'move' buf[1176385] call_tmp[1176377])
    const-val call_tmp[1176391]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1180737]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269615]:file[235580] "temp"
    (2269619 'move' i_this[2269615](2269617 'set reference' f[1176293]))
    ref i_error_out[2269621]:Error[167938] "temp"
    (2269625 'move' i_error_out[2269621](2269623 'set reference' error[1811311]))
    val ret[2269628]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269630 'move' ret[2269628] 0)
    (1180743 'move' default_arg_start[1180737] ret[2269628])
    val errorExists[2109544]:bool[10] "temp"
    (2109549 'move' errorExists[2109544](2109546 '!=' error[1811311] nil[44]))
    if errorExists[2109544]
    {
      val error[1846204]:Error[167938] "error variable" "temp"
      (1846206 'move' error[1846204] nil[44])
      (1846210 call close[1062362] w[1176321] error[1846204])
      val errorExists[2111656]:bool[10] "temp"
      (2111661 'move' errorExists[2111656](2111658 '!=' error[1846204] nil[44]))
      if errorExists[2111656]
      {
        gotoErrorHandling handler[1846221] handler[1846221]
      }
      label handler[1846221]
      const-val shouldHandleError[1846223]:bool[10] "temp"
      val errorExists[2111664]:bool[10] "temp"
      (2111669 'move' errorExists[2111664](2111666 '!=' error[1846204] nil[44]))
      (1846225 'move' shouldHandleError[1846223] errorExists[2111664])
      if shouldHandleError[1846223]
      {
        (1846232 call chpl_uncaught_error[170243] error[1846204])
      }
      ref i_x[2268358]:channel(true,dynamic,false)[1060947] "temp"
      (2268362 'move' i_x[2268358](2268360 'set reference' w[1176321]))
      (2268366 call deinit[1536215] i_x[2268358])
      val error[1846240]:Error[167938] "error variable" "temp"
      (1846242 'move' error[1846240] nil[44])
      (1846246 call close[236024] f[1176293] error[1846240])
      val errorExists[2111672]:bool[10] "temp"
      (2111677 'move' errorExists[2111672](2111674 '!=' error[1846240] nil[44]))
      if errorExists[2111672]
      {
        gotoErrorHandling handler[1846257] handler[1846257]
      }
      label handler[1846257]
      const-val shouldHandleError[1846259]:bool[10] "temp"
      val errorExists[2111680]:bool[10] "temp"
      (2111685 'move' errorExists[2111680](2111682 '!=' error[1846240] nil[44]))
      (1846261 'move' shouldHandleError[1846259] errorExists[2111680])
      if shouldHandleError[1846259]
      {
        (1846268 call chpl_uncaught_error[170243] error[1846240])
      }
      ref i_x[2328181]:file[235580] "temp"
      (2328185 'move' i_x[2328181](2328183 'set reference' f[1176293]))
      (2328189 call deinit[235891] i_x[2328181])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_end[1180747]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269681]:file[235580] "temp"
    (2269685 'move' i_this[2269681](2269683 'set reference' f[1176293]))
    ref i_error_out[2269687]:Error[167938] "temp"
    (2269691 'move' i_error_out[2269687](2269689 'set reference' error[1811311]))
    val ret[2269694]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269696 'move' ret[2269694] 9223372036854775807)
    (1180753 'move' default_arg_end[1180747] ret[2269694])
    val errorExists[2109552]:bool[10] "temp"
    (2109557 'move' errorExists[2109552](2109554 '!=' error[1811311] nil[44]))
    if errorExists[2109552]
    {
      val error[1846276]:Error[167938] "error variable" "temp"
      (1846278 'move' error[1846276] nil[44])
      (1846282 call close[1062362] w[1176321] error[1846276])
      val errorExists[2111688]:bool[10] "temp"
      (2111693 'move' errorExists[2111688](2111690 '!=' error[1846276] nil[44]))
      if errorExists[2111688]
      {
        gotoErrorHandling handler[1846293] handler[1846293]
      }
      label handler[1846293]
      const-val shouldHandleError[1846295]:bool[10] "temp"
      val errorExists[2111696]:bool[10] "temp"
      (2111701 'move' errorExists[2111696](2111698 '!=' error[1846276] nil[44]))
      (1846297 'move' shouldHandleError[1846295] errorExists[2111696])
      if shouldHandleError[1846295]
      {
        (1846304 call chpl_uncaught_error[170243] error[1846276])
      }
      ref i_x[2268370]:channel(true,dynamic,false)[1060947] "temp"
      (2268374 'move' i_x[2268370](2268372 'set reference' w[1176321]))
      (2268378 call deinit[1536215] i_x[2268370])
      val error[1846312]:Error[167938] "error variable" "temp"
      (1846314 'move' error[1846312] nil[44])
      (1846318 call close[236024] f[1176293] error[1846312])
      val errorExists[2111704]:bool[10] "temp"
      (2111709 'move' errorExists[2111704](2111706 '!=' error[1846312] nil[44]))
      if errorExists[2111704]
      {
        gotoErrorHandling handler[1846329] handler[1846329]
      }
      label handler[1846329]
      const-val shouldHandleError[1846331]:bool[10] "temp"
      val errorExists[2111712]:bool[10] "temp"
      (2111717 'move' errorExists[2111712](2111714 '!=' error[1846312] nil[44]))
      (1846333 'move' shouldHandleError[1846331] errorExists[2111712])
      if shouldHandleError[1846331]
      {
        (1846340 call chpl_uncaught_error[170243] error[1846312])
      }
      ref i_x[2328193]:file[235580] "temp"
      (2328197 'move' i_x[2328193](2328195 'set reference' f[1176293]))
      (2328201 call deinit[235891] i_x[2328193])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_hints[1180757]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269757]:file[235580] "temp"
    (2269761 'move' i_this[2269757](2269759 'set reference' f[1176293]))
    ref i_error_out[2269763]:Error[167938] "temp"
    (2269767 'move' i_error_out[2269763](2269765 'set reference' error[1811311]))
    val ret[2269770]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2269772]:int(32)[95] "dead after last mention" "temp"
    (2269774 'move' tmp[2269772] IOHINT_NONE[231411])
    (2269777 'move' ret[2269770] tmp[2269772])
    (1180763 'move' default_arg_hints[1180757] ret[2269770])
    val errorExists[2109560]:bool[10] "temp"
    (2109565 'move' errorExists[2109560](2109562 '!=' error[1811311] nil[44]))
    if errorExists[2109560]
    {
      val error[1846348]:Error[167938] "error variable" "temp"
      (1846350 'move' error[1846348] nil[44])
      (1846354 call close[1062362] w[1176321] error[1846348])
      val errorExists[2111720]:bool[10] "temp"
      (2111725 'move' errorExists[2111720](2111722 '!=' error[1846348] nil[44]))
      if errorExists[2111720]
      {
        gotoErrorHandling handler[1846365] handler[1846365]
      }
      label handler[1846365]
      const-val shouldHandleError[1846367]:bool[10] "temp"
      val errorExists[2111728]:bool[10] "temp"
      (2111733 'move' errorExists[2111728](2111730 '!=' error[1846348] nil[44]))
      (1846369 'move' shouldHandleError[1846367] errorExists[2111728])
      if shouldHandleError[1846367]
      {
        (1846376 call chpl_uncaught_error[170243] error[1846348])
      }
      ref i_x[2268382]:channel(true,dynamic,false)[1060947] "temp"
      (2268386 'move' i_x[2268382](2268384 'set reference' w[1176321]))
      (2268390 call deinit[1536215] i_x[2268382])
      val error[1846384]:Error[167938] "error variable" "temp"
      (1846386 'move' error[1846384] nil[44])
      (1846390 call close[236024] f[1176293] error[1846384])
      val errorExists[2111736]:bool[10] "temp"
      (2111741 'move' errorExists[2111736](2111738 '!=' error[1846384] nil[44]))
      if errorExists[2111736]
      {
        gotoErrorHandling handler[1846401] handler[1846401]
      }
      label handler[1846401]
      const-val shouldHandleError[1846403]:bool[10] "temp"
      val errorExists[2111744]:bool[10] "temp"
      (2111749 'move' errorExists[2111744](2111746 '!=' error[1846384] nil[44]))
      (1846405 'move' shouldHandleError[1846403] errorExists[2111744])
      if shouldHandleError[1846403]
      {
        (1846412 call chpl_uncaught_error[170243] error[1846384])
      }
      ref i_x[2328205]:file[235580] "temp"
      (2328209 'move' i_x[2328205](2328207 'set reference' f[1176293]))
      (2328213 call deinit[235891] i_x[2328205])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_style[1180767]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269884]:file[235580] "temp"
    (2269888 'move' i_this[2269884](2269886 'set reference' f[1176293]))
    ref i_error_out[2269890]:Error[167938] "temp"
    (2269894 'move' i_error_out[2269890](2269892 'set reference' error[1811311]))
    val ret[2269897]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269899]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269901]:Error[167938] "error variable" "temp"
    (2269903 'move' error[2269901] nil[44])
    (2269906 'move' style[2269899](2269909 call _style[235960] i_this[2269884] error[2269901]))
    val errorExists[2269912]:bool[10] "temp"
    (2269914 'move' errorExists[2269912](2269916 '!=' error[2269901] nil[44]))
    if errorExists[2269912]
    {
      (2269921 '=' i_error_out[2269890] error[2269901])
      gotoErrorHandlingReturn _endreader_default_style[2269930] _endreader_default_style[2269930]
    }
    (2269927 'move' ret[2269897] style[2269899])
    label _endreader_default_style[2269930]
    (1180773 'move' default_arg_style[1180767] ret[2269897])
    val errorExists[2109568]:bool[10] "temp"
    (2109573 'move' errorExists[2109568](2109570 '!=' error[1811311] nil[44]))
    if errorExists[2109568]
    {
      val error[1846420]:Error[167938] "error variable" "temp"
      (1846422 'move' error[1846420] nil[44])
      (1846426 call close[1062362] w[1176321] error[1846420])
      val errorExists[2111752]:bool[10] "temp"
      (2111757 'move' errorExists[2111752](2111754 '!=' error[1846420] nil[44]))
      if errorExists[2111752]
      {
        gotoErrorHandling handler[1846437] handler[1846437]
      }
      label handler[1846437]
      const-val shouldHandleError[1846439]:bool[10] "temp"
      val errorExists[2111760]:bool[10] "temp"
      (2111765 'move' errorExists[2111760](2111762 '!=' error[1846420] nil[44]))
      (1846441 'move' shouldHandleError[1846439] errorExists[2111760])
      if shouldHandleError[1846439]
      {
        (1846448 call chpl_uncaught_error[170243] error[1846420])
      }
      ref i_x[2268394]:channel(true,dynamic,false)[1060947] "temp"
      (2268398 'move' i_x[2268394](2268396 'set reference' w[1176321]))
      (2268402 call deinit[1536215] i_x[2268394])
      val error[1846456]:Error[167938] "error variable" "temp"
      (1846458 'move' error[1846456] nil[44])
      (1846462 call close[236024] f[1176293] error[1846456])
      val errorExists[2111768]:bool[10] "temp"
      (2111773 'move' errorExists[2111768](2111770 '!=' error[1846456] nil[44]))
      if errorExists[2111768]
      {
        gotoErrorHandling handler[1846473] handler[1846473]
      }
      label handler[1846473]
      const-val shouldHandleError[1846475]:bool[10] "temp"
      val errorExists[2111776]:bool[10] "temp"
      (2111781 'move' errorExists[2111776](2111778 '!=' error[1846456] nil[44]))
      (1846477 'move' shouldHandleError[1846475] errorExists[2111776])
      if shouldHandleError[1846475]
      {
        (1846484 call chpl_uncaught_error[170243] error[1846456])
      }
      ref i_x[2328217]:file[235580] "temp"
      (2328221 'move' i_x[2328217](2328219 'set reference' f[1176293]))
      (2328225 call deinit[235891] i_x[2328217])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1833437]:channel(false,dynamic,false)[1080682] "temp"
    (1176399 call reader[1080588] f[1176293] default_arg_start[1180737] default_arg_end[1180747] default_arg_hints[1180757] default_arg_style[1180767] error[1811311] ret_tmp[1833437])
    (1833440 'move' call_tmp[1176391] ret_tmp[1833437])
    val errorExists[2109576]:bool[10] "temp"
    (2109581 'move' errorExists[2109576](2109578 '!=' error[1811311] nil[44]))
    if errorExists[2109576]
    {
      val error[1846492]:Error[167938] "error variable" "temp"
      (1846494 'move' error[1846492] nil[44])
      (1846498 call close[1062362] w[1176321] error[1846492])
      val errorExists[2111784]:bool[10] "temp"
      (2111789 'move' errorExists[2111784](2111786 '!=' error[1846492] nil[44]))
      if errorExists[2111784]
      {
        gotoErrorHandling handler[1846509] handler[1846509]
      }
      label handler[1846509]
      const-val shouldHandleError[1846511]:bool[10] "temp"
      val errorExists[2111792]:bool[10] "temp"
      (2111797 'move' errorExists[2111792](2111794 '!=' error[1846492] nil[44]))
      (1846513 'move' shouldHandleError[1846511] errorExists[2111792])
      if shouldHandleError[1846511]
      {
        (1846520 call chpl_uncaught_error[170243] error[1846492])
      }
      ref i_x[2268406]:channel(true,dynamic,false)[1060947] "temp"
      (2268410 'move' i_x[2268406](2268408 'set reference' w[1176321]))
      (2268414 call deinit[1536215] i_x[2268406])
      val error[1846528]:Error[167938] "error variable" "temp"
      (1846530 'move' error[1846528] nil[44])
      (1846534 call close[236024] f[1176293] error[1846528])
      val errorExists[2111800]:bool[10] "temp"
      (2111805 'move' errorExists[2111800](2111802 '!=' error[1846528] nil[44]))
      if errorExists[2111800]
      {
        gotoErrorHandling handler[1846545] handler[1846545]
      }
      label handler[1846545]
      const-val shouldHandleError[1846547]:bool[10] "temp"
      val errorExists[2111808]:bool[10] "temp"
      (2111813 'move' errorExists[2111808](2111810 '!=' error[1846528] nil[44]))
      (1846549 'move' shouldHandleError[1846547] errorExists[2111808])
      if shouldHandleError[1846547]
      {
        (1846556 call chpl_uncaught_error[170243] error[1846528])
      }
      ref i_x[2328229]:file[235580] "temp"
      (2328233 'move' i_x[2328229](2328231 'set reference' f[1176293]))
      (2328237 call deinit[235891] i_x[2328229])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val r[1176402]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1176404 'move' r[1176402] call_tmp[1176391])
    const-val call_tmp[1176419]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1176421 'move' call_tmp[1176419] offset[1176356])
    (1176431 call readBytes[1082839] r[1176402] buf[1176385] call_tmp[1176419] error[1811311])
    val errorExists[2109584]:bool[10] "temp"
    (2109589 'move' errorExists[2109584](2109586 '!=' error[1811311] nil[44]))
    if errorExists[2109584]
    {
      val error[1846564]:Error[167938] "error variable" "temp"
      (1846566 'move' error[1846564] nil[44])
      (1846570 call close[1082094] r[1176402] error[1846564])
      val errorExists[2111816]:bool[10] "temp"
      (2111821 'move' errorExists[2111816](2111818 '!=' error[1846564] nil[44]))
      if errorExists[2111816]
      {
        gotoErrorHandling handler[1846581] handler[1846581]
      }
      label handler[1846581]
      const-val shouldHandleError[1846583]:bool[10] "temp"
      val errorExists[2111824]:bool[10] "temp"
      (2111829 'move' errorExists[2111824](2111826 '!=' error[1846564] nil[44]))
      (1846585 'move' shouldHandleError[1846583] errorExists[2111824])
      if shouldHandleError[1846583]
      {
        (1846592 call chpl_uncaught_error[170243] error[1846564])
      }
      ref i_x[2331692]:channel(false,dynamic,false)[1080682] "temp"
      (2331696 'move' i_x[2331692](2331694 'set reference' r[1176402]))
      (2331700 call deinit[1540469] i_x[2331692])
      val error[1846600]:Error[167938] "error variable" "temp"
      (1846602 'move' error[1846600] nil[44])
      (1846606 call close[1062362] w[1176321] error[1846600])
      val errorExists[2111832]:bool[10] "temp"
      (2111837 'move' errorExists[2111832](2111834 '!=' error[1846600] nil[44]))
      if errorExists[2111832]
      {
        gotoErrorHandling handler[1846617] handler[1846617]
      }
      label handler[1846617]
      const-val shouldHandleError[1846619]:bool[10] "temp"
      val errorExists[2111840]:bool[10] "temp"
      (2111845 'move' errorExists[2111840](2111842 '!=' error[1846600] nil[44]))
      (1846621 'move' shouldHandleError[1846619] errorExists[2111840])
      if shouldHandleError[1846619]
      {
        (1846628 call chpl_uncaught_error[170243] error[1846600])
      }
      ref i_x[2268418]:channel(true,dynamic,false)[1060947] "temp"
      (2268422 'move' i_x[2268418](2268420 'set reference' w[1176321]))
      (2268426 call deinit[1536215] i_x[2268418])
      val error[1846636]:Error[167938] "error variable" "temp"
      (1846638 'move' error[1846636] nil[44])
      (1846642 call close[236024] f[1176293] error[1846636])
      val errorExists[2111848]:bool[10] "temp"
      (2111853 'move' errorExists[2111848](2111850 '!=' error[1846636] nil[44]))
      if errorExists[2111848]
      {
        gotoErrorHandling handler[1846653] handler[1846653]
      }
      label handler[1846653]
      const-val shouldHandleError[1846655]:bool[10] "temp"
      val errorExists[2111856]:bool[10] "temp"
      (2111861 'move' errorExists[2111856](2111858 '!=' error[1846636] nil[44]))
      (1846657 'move' shouldHandleError[1846655] errorExists[2111856])
      if shouldHandleError[1846655]
      {
        (1846664 call chpl_uncaught_error[170243] error[1846636])
      }
      ref i_x[2328241]:file[235580] "temp"
      (2328245 'move' i_x[2328241](2328243 'set reference' f[1176293]))
      (2328249 call deinit[235891] i_x[2328241])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    ref call_tmp[1176438]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2195344]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195346 'move' call_tmp[2195344](2195348 'array_get' buf[1176385] offset[1176356]))
    (1176440 'move' call_tmp[1176438] call_tmp[2195344])
    const-val coerce_tmp[1180783]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180789 'move' coerce_tmp[1180783](1180785 'cast' uint(8)[100] 0))
    (2195822 '=' call_tmp[1176438] coerce_tmp[1180783])
    const-val call_tmp[1176452]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120757]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120759 'move' call_tmp[2120757](2120761 '+' offset[1176356] 1))
    (1176454 'move' call_tmp[1176452] call_tmp[2120757])
    const-val call_tmp[1176460]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829129]:string[26] "temp"
    ref i_error_out[2140733]:Error[167938] "temp"
    (2140737 'move' i_error_out[2140733](2140735 'set reference' error[1811311]))
    ref i__retArg[2140739]:string[26] "temp"
    (2140743 'move' i__retArg[2140739](2140741 'set reference' ret_tmp[1829129]))
    const-val ret[2140746]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140748]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140750]:Error[167938] "error variable" "temp"
    (2140752 'move' error[2140750] nil[44])
    const-val ret_tmp[2140755]:string[26] "temp"
    (2140758 call decodeByteBuffer[173892] buf[1176385] offset[1176356] replace[173648] error[2140750] ret_tmp[2140755])
    (2140764 'move' call_tmp[2140748] ret_tmp[2140755])
    val errorExists[2140767]:bool[10] "temp"
    (2140769 'move' errorExists[2140767](2140771 '!=' error[2140750] nil[44]))
    if errorExists[2140767]
    {
      (2140776 '=' i_error_out[2140733] error[2140750])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140785] _endcreateStringWithNewBuffer[2140785]
    }
    (2140782 'move' ret[2140746] call_tmp[2140748])
    label _endcreateStringWithNewBuffer[2140785]
    (2140787 '=' i__retArg[2140739] ret[2140746])
    (1829132 'move' call_tmp[1176460] ret_tmp[1829129])
    val errorExists[2109592]:bool[10] "temp"
    (2109597 'move' errorExists[2109592](2109594 '!=' error[1811311] nil[44]))
    if errorExists[2109592]
    {
      val error[1846672]:Error[167938] "error variable" "temp"
      (1846674 'move' error[1846672] nil[44])
      (1846678 call close[1082094] r[1176402] error[1846672])
      val errorExists[2111864]:bool[10] "temp"
      (2111869 'move' errorExists[2111864](2111866 '!=' error[1846672] nil[44]))
      if errorExists[2111864]
      {
        gotoErrorHandling handler[1846689] handler[1846689]
      }
      label handler[1846689]
      const-val shouldHandleError[1846691]:bool[10] "temp"
      val errorExists[2111872]:bool[10] "temp"
      (2111877 'move' errorExists[2111872](2111874 '!=' error[1846672] nil[44]))
      (1846693 'move' shouldHandleError[1846691] errorExists[2111872])
      if shouldHandleError[1846691]
      {
        (1846700 call chpl_uncaught_error[170243] error[1846672])
      }
      ref i_x[2331704]:channel(false,dynamic,false)[1080682] "temp"
      (2331708 'move' i_x[2331704](2331706 'set reference' r[1176402]))
      (2331712 call deinit[1540469] i_x[2331704])
      val error[1846708]:Error[167938] "error variable" "temp"
      (1846710 'move' error[1846708] nil[44])
      (1846714 call close[1062362] w[1176321] error[1846708])
      val errorExists[2111880]:bool[10] "temp"
      (2111885 'move' errorExists[2111880](2111882 '!=' error[1846708] nil[44]))
      if errorExists[2111880]
      {
        gotoErrorHandling handler[1846725] handler[1846725]
      }
      label handler[1846725]
      const-val shouldHandleError[1846727]:bool[10] "temp"
      val errorExists[2111888]:bool[10] "temp"
      (2111893 'move' errorExists[2111888](2111890 '!=' error[1846708] nil[44]))
      (1846729 'move' shouldHandleError[1846727] errorExists[2111888])
      if shouldHandleError[1846727]
      {
        (1846736 call chpl_uncaught_error[170243] error[1846708])
      }
      ref i_x[2268430]:channel(true,dynamic,false)[1060947] "temp"
      (2268434 'move' i_x[2268430](2268432 'set reference' w[1176321]))
      (2268438 call deinit[1536215] i_x[2268430])
      val error[1846744]:Error[167938] "error variable" "temp"
      (1846746 'move' error[1846744] nil[44])
      (1846750 call close[236024] f[1176293] error[1846744])
      val errorExists[2111896]:bool[10] "temp"
      (2111901 'move' errorExists[2111896](2111898 '!=' error[1846744] nil[44]))
      if errorExists[2111896]
      {
        gotoErrorHandling handler[1846761] handler[1846761]
      }
      label handler[1846761]
      const-val shouldHandleError[1846763]:bool[10] "temp"
      val errorExists[2111904]:bool[10] "temp"
      (2111909 'move' errorExists[2111904](2111906 '!=' error[1846744] nil[44]))
      (1846765 'move' shouldHandleError[1846763] errorExists[2111904])
      if shouldHandleError[1846763]
      {
        (1846772 call chpl_uncaught_error[170243] error[1846744])
      }
      ref i_x[2328253]:file[235580] "temp"
      (2328257 'move' i_x[2328253](2328255 'set reference' f[1176293]))
      (2328261 call deinit[235891] i_x[2328253])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret[1176470]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1176472 'move' ret[1176470] call_tmp[1176460])
    const-val coerce_tmp[1180794]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180800 'move' coerce_tmp[1180794](1180796 'cast' c_void_ptr[149] buf[1176385]))
    (2203426 call chpl_here_free[188081] coerce_tmp[1180794])
    (1180804 'move' ret[1175833] ret[1176470])
    val error[1846780]:Error[167938] "error variable" "temp"
    (1846782 'move' error[1846780] nil[44])
    (1846786 call close[1082094] r[1176402] error[1846780])
    val errorExists[2111912]:bool[10] "temp"
    (2111917 'move' errorExists[2111912](2111914 '!=' error[1846780] nil[44]))
    if errorExists[2111912]
    {
      gotoErrorHandling handler[1846797] handler[1846797]
    }
    label handler[1846797]
    const-val shouldHandleError[1846799]:bool[10] "temp"
    val errorExists[2111920]:bool[10] "temp"
    (2111925 'move' errorExists[2111920](2111922 '!=' error[1846780] nil[44]))
    (1846801 'move' shouldHandleError[1846799] errorExists[2111920])
    if shouldHandleError[1846799]
    {
      (1846808 call chpl_uncaught_error[170243] error[1846780])
    }
    ref i_x[2331716]:channel(false,dynamic,false)[1080682] "temp"
    (2331720 'move' i_x[2331716](2331718 'set reference' r[1176402]))
    (2331724 call deinit[1540469] i_x[2331716])
    val error[1846816]:Error[167938] "error variable" "temp"
    (1846818 'move' error[1846816] nil[44])
    (1846822 call close[1062362] w[1176321] error[1846816])
    val errorExists[2111928]:bool[10] "temp"
    (2111933 'move' errorExists[2111928](2111930 '!=' error[1846816] nil[44]))
    if errorExists[2111928]
    {
      gotoErrorHandling handler[1846833] handler[1846833]
    }
    label handler[1846833]
    const-val shouldHandleError[1846835]:bool[10] "temp"
    val errorExists[2111936]:bool[10] "temp"
    (2111941 'move' errorExists[2111936](2111938 '!=' error[1846816] nil[44]))
    (1846837 'move' shouldHandleError[1846835] errorExists[2111936])
    if shouldHandleError[1846835]
    {
      (1846844 call chpl_uncaught_error[170243] error[1846816])
    }
    ref i_x[2268442]:channel(true,dynamic,false)[1060947] "temp"
    (2268446 'move' i_x[2268442](2268444 'set reference' w[1176321]))
    (2268450 call deinit[1536215] i_x[2268442])
    val error[1846852]:Error[167938] "error variable" "temp"
    (1846854 'move' error[1846852] nil[44])
    (1846858 call close[236024] f[1176293] error[1846852])
    val errorExists[2111944]:bool[10] "temp"
    (2111949 'move' errorExists[2111944](2111946 '!=' error[1846852] nil[44]))
    if errorExists[2111944]
    {
      gotoErrorHandling handler[1846869] handler[1846869]
    }
    label handler[1846869]
    const-val shouldHandleError[1846871]:bool[10] "temp"
    val errorExists[2111952]:bool[10] "temp"
    (2111957 'move' errorExists[2111952](2111954 '!=' error[1846852] nil[44]))
    (1846873 'move' shouldHandleError[1846871] errorExists[2111952])
    if shouldHandleError[1846871]
    {
      (1846880 call chpl_uncaught_error[170243] error[1846852])
    }
    ref i_x[2328265]:file[235580] "temp"
    (2328269 'move' i_x[2328265](2328267 'set reference' f[1176293]))
    (2328273 call deinit[235891] i_x[2328265])
    gotoReturn _end_stringify[1176499] _end_stringify[1176499]
    label handler[1811312]
    const-val shouldHandleError[1811505]:bool[10] "temp"
    val errorExists[2109600]:bool[10] "temp"
    (2109605 'move' errorExists[2109600](2109602 '!=' error[1811311] nil[44]))
    (1811509 'move' shouldHandleError[1811505] errorExists[2109600])
    if shouldHandleError[1811505]
    {
      (1811502 call chpl_uncaught_error[170243] error[1811311])
    }
    label _end_stringify[1176499]
    (1834666 '=' _retArg[1834664] ret[1175833])
    (1834668 return _void[55])
  }
  function stringify[1190720](const  ref arg _e0_args[1190722]:string[26], const in arg _e1_args[1190724]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg _e2_args[1190726]:string[26], const in arg _e3_args[1190728]:int(64)[13], ref arg _retArg[1834870]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346444]:string[26]
    val args_x1[2346446]:range(byteIndex,boundedHigh,false)[1184919]
    const-ref args_x2[2346448]:string[26]
    val args_x3[2346450]:int(64)[13]
    const-ref ret_tmp_x0[2346478]:string[26] "temp"
    val ret_tmp_x1[2346480]:range(byteIndex,boundedHigh,false)[1184919] "temp"
    const-ref ret_tmp_x2[2346482]:string[26] "temp"
    val ret_tmp_x3[2346484]:int(64)[13] "temp"
    const-ref this_x0[2346510]:string[26]
    val this_x1[2346512]:range(byteIndex,boundedHigh,false)[1184919]
    const-ref this_x2[2346514]:string[26]
    val this_x3[2346516]:int(64)[13]
    (2275981 'move' this_x0[2346510] _e0_args[1190722])
    (2275985 'move' this_x1[2346512] _e1_args[1190724])
    (2275989 'move' this_x2[2346514] _e2_args[1190726])
    (2275993 'move' this_x3[2346516] _e3_args[1190728])
    (2346490 'move' ret_tmp_x0[2346478] this_x0[2346510])
    (2346495 'move' ret_tmp_x1[2346480] this_x1[2346512])
    (2346500 'move' ret_tmp_x2[2346482] this_x2[2346514])
    (2346505 'move' ret_tmp_x3[2346484] this_x3[2346516])
    (2346456 'move' args_x0[2346444] ret_tmp_x0[2346478])
    (2346461 'move' args_x1[2346446] ret_tmp_x1[2346480])
    (2346466 'move' args_x2[2346448] ret_tmp_x2[2346482])
    (2346471 'move' args_x3[2346450] ret_tmp_x3[2346484])
    const-val ret[1190732]:string[26] "dead after last mention" "RVV" "temp"
    val str[1190773]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204563]:string[26] "temp"
    (2204566 'move' inlineImm[2204563] "")
    ref i_x[2204568]:string[26] "temp"
    (2204572 'move' i_x[2204568](2204570 'set reference' inlineImm[2204563]))
    val ret[2204575]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204577]:string[26] "dead after last mention" "temp"
    (2204580 call init=[30771] tmp[2204577] i_x[2204568])
    (2204583 'move' ret[2204575] tmp[2204577])
    (1190775 'move' str[1190773] ret[2204575])
    const-val i[1190780]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1190782 'move' i[1190780] 0)
    const-ref call_tmp[1197153]:string[26] "dead after last mention" "maybe param" "temp"
    (1197155 'move' call_tmp[1197153] args_x0[2346444])
    (1197161 call +=[38797] str[1190773] call_tmp[1197153])
    const-ref call_tmp[1197729]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "maybe param" "temp"
    (1197731 'move' call_tmp[1197729](2346474 'set reference' args_x1[2346446]))
    const-val call_tmp[1197736]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1198899]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1198903 'move' coerce_tmp[1198899] call_tmp[1197729])
    const-val ret_tmp[1834910]:string[26] "temp"
    (1197741 call _cast[1198631] coerce_tmp[1198899] ret_tmp[1834910])
    (1834913 'move' call_tmp[1197736] ret_tmp[1834910])
    (1197745 call +=[38797] str[1190773] call_tmp[1197736])
    ref i_x[2131857]:string[26] "temp"
    (2131861 'move' i_x[2131857](2131859 'set reference' call_tmp[1197736]))
    (2131865 call deinit[30831] i_x[2131857])
    const-ref call_tmp[1197843]:string[26] "dead after last mention" "maybe param" "temp"
    (1197845 'move' call_tmp[1197843] args_x2[2346448])
    (1197851 call +=[38797] str[1190773] call_tmp[1197843])
    const-ref call_tmp[1198419]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1198421 'move' call_tmp[1198419](2346477 'set reference' args_x3[2346450]))
    const-val call_tmp[1198426]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1200324]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1200328 'move' coerce_tmp[1200324](1200326 'deref' call_tmp[1198419]))
    const-val ret_tmp[1833149]:string[26] "temp"
    (1198431 call _cast[1063153] coerce_tmp[1200324] ret_tmp[1833149])
    (1833152 'move' call_tmp[1198426] ret_tmp[1833149])
    (1198435 call +=[38797] str[1190773] call_tmp[1198426])
    ref i_x[2131869]:string[26] "temp"
    (2131873 'move' i_x[2131869](2131871 'set reference' call_tmp[1198426]))
    (2131877 call deinit[30831] i_x[2131869])
    (1200333 'move' ret[1190732] str[1190773])
    gotoReturn _end_stringify[1191398] _end_stringify[1191398]
    label _end_stringify[1191398]
    (1834872 '=' _retArg[1834870] ret[1190732])
    (1834878 return _void[55])
  }
  function stringify[1291138](const  ref arg _e0_args[1291140]:string[26], const  ref arg _e1_args[1291142]:string[26], const  ref arg _e2_args[1291144]:string[26], const  ref arg _e3_args[1291146]:string[26], ref arg _retArg[1837026]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2347091]:string[26]
    const-ref args_x1[2347093]:string[26]
    const-ref args_x2[2347095]:string[26]
    const-ref args_x3[2347097]:string[26]
    const-ref ret_tmp_x0[2347123]:string[26] "temp"
    const-ref ret_tmp_x1[2347125]:string[26] "temp"
    const-ref ret_tmp_x2[2347127]:string[26] "temp"
    const-ref ret_tmp_x3[2347129]:string[26] "temp"
    const-ref this_x0[2347155]:string[26]
    const-ref this_x1[2347157]:string[26]
    const-ref this_x2[2347159]:string[26]
    const-ref this_x3[2347161]:string[26]
    (2297204 'move' this_x0[2347155] _e0_args[1291140])
    (2297208 'move' this_x1[2347157] _e1_args[1291142])
    (2297212 'move' this_x2[2347159] _e2_args[1291144])
    (2297216 'move' this_x3[2347161] _e3_args[1291146])
    (2347135 'move' ret_tmp_x0[2347123] this_x0[2347155])
    (2347140 'move' ret_tmp_x1[2347125] this_x1[2347157])
    (2347145 'move' ret_tmp_x2[2347127] this_x2[2347159])
    (2347150 'move' ret_tmp_x3[2347129] this_x3[2347161])
    (2347103 'move' args_x0[2347091] ret_tmp_x0[2347123])
    (2347108 'move' args_x1[2347093] ret_tmp_x1[2347125])
    (2347113 'move' args_x2[2347095] ret_tmp_x2[2347127])
    (2347118 'move' args_x3[2347097] ret_tmp_x3[2347129])
    const-val ret[1291150]:string[26] "dead after last mention" "RVV" "temp"
    val str[1291191]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204663]:string[26] "temp"
    (2204666 'move' inlineImm[2204663] "")
    ref i_x[2204668]:string[26] "temp"
    (2204672 'move' i_x[2204668](2204670 'set reference' inlineImm[2204663]))
    val ret[2204675]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204677]:string[26] "dead after last mention" "temp"
    (2204680 call init=[30771] tmp[2204677] i_x[2204668])
    (2204683 'move' ret[2204675] tmp[2204677])
    (1291193 'move' str[1291191] ret[2204675])
    const-val i[1291198]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1291200 'move' i[1291198] 0)
    const-ref call_tmp[1294999]:string[26] "dead after last mention" "maybe param" "temp"
    (1295001 'move' call_tmp[1294999] args_x0[2347091])
    (1295007 call +=[38797] str[1291191] call_tmp[1294999])
    const-ref call_tmp[1295344]:string[26] "dead after last mention" "maybe param" "temp"
    (1295346 'move' call_tmp[1295344] args_x1[2347093])
    (1295352 call +=[38797] str[1291191] call_tmp[1295344])
    const-ref call_tmp[1295689]:string[26] "dead after last mention" "maybe param" "temp"
    (1295691 'move' call_tmp[1295689] args_x2[2347095])
    (1295697 call +=[38797] str[1291191] call_tmp[1295689])
    const-ref call_tmp[1296034]:string[26] "dead after last mention" "maybe param" "temp"
    (1296036 'move' call_tmp[1296034] args_x3[2347097])
    (1296042 call +=[38797] str[1291191] call_tmp[1296034])
    (1296481 'move' ret[1291150] str[1291191])
    gotoReturn _end_stringify[1291816] _end_stringify[1291816]
    label _end_stringify[1291816]
    (1837028 '=' _retArg[1837026] ret[1291150])
    (1837032 return _void[55])
  }
  function stringify[1157864](const  ref arg _e0_args[1157866]:string[26], const  ref arg _e1_args[1157868]:codepointIndex[28274], const  ref arg _e2_args[1157870]:string[26], ref arg _retArg[1834606]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346252]:string[26]
    const-ref args_x1[2346254]:codepointIndex[28274]
    const-ref args_x2[2346256]:string[26]
    const-ref ret_tmp_x0[2346276]:string[26] "temp"
    const-ref ret_tmp_x1[2346278]:codepointIndex[28274] "temp"
    const-ref ret_tmp_x2[2346280]:string[26] "temp"
    const-ref this_x0[2346300]:string[26]
    const-ref this_x1[2346302]:codepointIndex[28274]
    const-ref this_x2[2346304]:string[26]
    (2272777 'move' this_x0[2346300] _e0_args[1157866])
    (2272781 'move' this_x1[2346302] _e1_args[1157868])
    (2272785 'move' this_x2[2346304] _e2_args[1157870])
    (2346286 'move' ret_tmp_x0[2346276] this_x0[2346300])
    (2346291 'move' ret_tmp_x1[2346278] this_x1[2346302])
    (2346296 'move' ret_tmp_x2[2346280] this_x2[2346304])
    (2346262 'move' args_x0[2346252] ret_tmp_x0[2346276])
    (2346267 'move' args_x1[2346254] ret_tmp_x1[2346278])
    (2346272 'move' args_x2[2346256] ret_tmp_x2[2346280])
    const-val ret[1157874]:string[26] "dead after last mention" "RVV" "temp"
    val error[1810814]:Error[167938] "error variable" "temp"
    (1810999 'move' error[1810814] nil[44])
    const-val call_tmp[1158325]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1164179]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_error_out[2263016]:Error[167938] "temp"
    (2263020 'move' i_error_out[2263016](2263018 'set reference' error[1810814]))
    val ret[2263023]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263025]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263027 'move' style[2263025](2263030 call defaultIOStyle[235295]))
    (2263031 'move' ret[2263023] style[2263025])
    (1164183 'move' default_arg_style[1164179] ret[2263023])
    val errorExists[2109200]:bool[10] "temp"
    (2109205 'move' errorExists[2109200](2109202 '!=' error[1810814] nil[44]))
    if errorExists[2109200]
    {
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1831509]:file[235580] "temp"
    (1158330 call openmem[237625] default_arg_style[1164179] error[1810814] ret_tmp[1831509])
    (1831512 'move' call_tmp[1158325] ret_tmp[1831509])
    val errorExists[2109208]:bool[10] "temp"
    (2109213 'move' errorExists[2109208](2109210 '!=' error[1810814] nil[44]))
    if errorExists[2109208]
    {
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val f[1158331]:file[235580] "dead at end of block" "insert auto destroy"
    (1158333 'move' f[1158331] call_tmp[1158325])
    const-val call_tmp[1158348]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1164208]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263082]:file[235580] "temp"
    (2263086 'move' i_this[2263082](2263084 'set reference' f[1158331]))
    ref i_error_out[2263088]:Error[167938] "temp"
    (2263092 'move' i_error_out[2263088](2263090 'set reference' error[1810814]))
    val ret[2263095]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263097 'move' ret[2263095] 0)
    (1164214 'move' default_arg_start[1164208] ret[2263095])
    val errorExists[2109216]:bool[10] "temp"
    (2109221 'move' errorExists[2109216](2109218 '!=' error[1810814] nil[44]))
    if errorExists[2109216]
    {
      val error[1844889]:Error[167938] "error variable" "temp"
      (1844891 'move' error[1844889] nil[44])
      (1844895 call close[236024] f[1158331] error[1844889])
      val errorExists[2111128]:bool[10] "temp"
      (2111133 'move' errorExists[2111128](2111130 '!=' error[1844889] nil[44]))
      if errorExists[2111128]
      {
        gotoErrorHandling handler[1844906] handler[1844906]
      }
      label handler[1844906]
      const-val shouldHandleError[1844908]:bool[10] "temp"
      val errorExists[2111136]:bool[10] "temp"
      (2111141 'move' errorExists[2111136](2111138 '!=' error[1844889] nil[44]))
      (1844910 'move' shouldHandleError[1844908] errorExists[2111136])
      if shouldHandleError[1844908]
      {
        (1844917 call chpl_uncaught_error[170243] error[1844889])
      }
      ref i_x[2327941]:file[235580] "temp"
      (2327945 'move' i_x[2327941](2327943 'set reference' f[1158331]))
      (2327949 call deinit[235891] i_x[2327941])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_end[1164218]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263148]:file[235580] "temp"
    (2263152 'move' i_this[2263148](2263150 'set reference' f[1158331]))
    ref i_error_out[2263154]:Error[167938] "temp"
    (2263158 'move' i_error_out[2263154](2263156 'set reference' error[1810814]))
    val ret[2263161]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2263163 'move' ret[2263161] 9223372036854775807)
    (1164224 'move' default_arg_end[1164218] ret[2263161])
    val errorExists[2109224]:bool[10] "temp"
    (2109229 'move' errorExists[2109224](2109226 '!=' error[1810814] nil[44]))
    if errorExists[2109224]
    {
      val error[1844925]:Error[167938] "error variable" "temp"
      (1844927 'move' error[1844925] nil[44])
      (1844931 call close[236024] f[1158331] error[1844925])
      val errorExists[2111144]:bool[10] "temp"
      (2111149 'move' errorExists[2111144](2111146 '!=' error[1844925] nil[44]))
      if errorExists[2111144]
      {
        gotoErrorHandling handler[1844942] handler[1844942]
      }
      label handler[1844942]
      const-val shouldHandleError[1844944]:bool[10] "temp"
      val errorExists[2111152]:bool[10] "temp"
      (2111157 'move' errorExists[2111152](2111154 '!=' error[1844925] nil[44]))
      (1844946 'move' shouldHandleError[1844944] errorExists[2111152])
      if shouldHandleError[1844944]
      {
        (1844953 call chpl_uncaught_error[170243] error[1844925])
      }
      ref i_x[2327953]:file[235580] "temp"
      (2327957 'move' i_x[2327953](2327955 'set reference' f[1158331]))
      (2327961 call deinit[235891] i_x[2327953])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_hints[1164228]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263221]:file[235580] "temp"
    (2263225 'move' i_this[2263221](2263223 'set reference' f[1158331]))
    ref i_error_out[2263227]:Error[167938] "temp"
    (2263231 'move' i_error_out[2263227](2263229 'set reference' error[1810814]))
    val ret[2263234]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2263236]:int(32)[95] "dead after last mention" "temp"
    (2263238 'move' tmp[2263236](2263240 'cast' int(32)[95] 0))
    (2263243 'move' ret[2263234] tmp[2263236])
    (1164234 'move' default_arg_hints[1164228] ret[2263234])
    val errorExists[2109232]:bool[10] "temp"
    (2109237 'move' errorExists[2109232](2109234 '!=' error[1810814] nil[44]))
    if errorExists[2109232]
    {
      val error[1844961]:Error[167938] "error variable" "temp"
      (1844963 'move' error[1844961] nil[44])
      (1844967 call close[236024] f[1158331] error[1844961])
      val errorExists[2111160]:bool[10] "temp"
      (2111165 'move' errorExists[2111160](2111162 '!=' error[1844961] nil[44]))
      if errorExists[2111160]
      {
        gotoErrorHandling handler[1844978] handler[1844978]
      }
      label handler[1844978]
      const-val shouldHandleError[1844980]:bool[10] "temp"
      val errorExists[2111168]:bool[10] "temp"
      (2111173 'move' errorExists[2111168](2111170 '!=' error[1844961] nil[44]))
      (1844982 'move' shouldHandleError[1844980] errorExists[2111168])
      if shouldHandleError[1844980]
      {
        (1844989 call chpl_uncaught_error[170243] error[1844961])
      }
      ref i_x[2327965]:file[235580] "temp"
      (2327969 'move' i_x[2327965](2327967 'set reference' f[1158331]))
      (2327973 call deinit[235891] i_x[2327965])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_style[1164238]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263329]:file[235580] "temp"
    (2263333 'move' i_this[2263329](2263331 'set reference' f[1158331]))
    ref i_error_out[2263335]:Error[167938] "temp"
    (2263339 'move' i_error_out[2263335](2263337 'set reference' error[1810814]))
    val ret[2263342]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263344]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263346]:Error[167938] "error variable" "temp"
    (2263348 'move' error[2263346] nil[44])
    (2263351 'move' style[2263344](2263354 call _style[235960] i_this[2263329] error[2263346]))
    val errorExists[2263357]:bool[10] "temp"
    (2263359 'move' errorExists[2263357](2263361 '!=' error[2263346] nil[44]))
    if errorExists[2263357]
    {
      (2263366 '=' i_error_out[2263335] error[2263346])
      gotoErrorHandlingReturn _endwriter_default_style[2263375] _endwriter_default_style[2263375]
    }
    (2263372 'move' ret[2263342] style[2263344])
    label _endwriter_default_style[2263375]
    (1164244 'move' default_arg_style[1164238] ret[2263342])
    val errorExists[2109240]:bool[10] "temp"
    (2109245 'move' errorExists[2109240](2109242 '!=' error[1810814] nil[44]))
    if errorExists[2109240]
    {
      val error[1844997]:Error[167938] "error variable" "temp"
      (1844999 'move' error[1844997] nil[44])
      (1845003 call close[236024] f[1158331] error[1844997])
      val errorExists[2111176]:bool[10] "temp"
      (2111181 'move' errorExists[2111176](2111178 '!=' error[1844997] nil[44]))
      if errorExists[2111176]
      {
        gotoErrorHandling handler[1845014] handler[1845014]
      }
      label handler[1845014]
      const-val shouldHandleError[1845016]:bool[10] "temp"
      val errorExists[2111184]:bool[10] "temp"
      (2111189 'move' errorExists[2111184](2111186 '!=' error[1844997] nil[44]))
      (1845018 'move' shouldHandleError[1845016] errorExists[2111184])
      if shouldHandleError[1845016]
      {
        (1845025 call chpl_uncaught_error[170243] error[1844997])
      }
      ref i_x[2327977]:file[235580] "temp"
      (2327981 'move' i_x[2327977](2327979 'set reference' f[1158331]))
      (2327985 call deinit[235891] i_x[2327977])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1833029]:channel(true,dynamic,false)[1060947] "temp"
    (1158356 call writer[1060853] f[1158331] default_arg_start[1164208] default_arg_end[1164218] default_arg_hints[1164228] default_arg_style[1164238] error[1810814] ret_tmp[1833029])
    (1833032 'move' call_tmp[1158348] ret_tmp[1833029])
    val errorExists[2109248]:bool[10] "temp"
    (2109253 'move' errorExists[2109248](2109250 '!=' error[1810814] nil[44]))
    if errorExists[2109248]
    {
      val error[1845033]:Error[167938] "error variable" "temp"
      (1845035 'move' error[1845033] nil[44])
      (1845039 call close[236024] f[1158331] error[1845033])
      val errorExists[2111192]:bool[10] "temp"
      (2111197 'move' errorExists[2111192](2111194 '!=' error[1845033] nil[44]))
      if errorExists[2111192]
      {
        gotoErrorHandling handler[1845050] handler[1845050]
      }
      label handler[1845050]
      const-val shouldHandleError[1845052]:bool[10] "temp"
      val errorExists[2111200]:bool[10] "temp"
      (2111205 'move' errorExists[2111200](2111202 '!=' error[1845033] nil[44]))
      (1845054 'move' shouldHandleError[1845052] errorExists[2111200])
      if shouldHandleError[1845052]
      {
        (1845061 call chpl_uncaught_error[170243] error[1845033])
      }
      ref i_x[2327989]:file[235580] "temp"
      (2327993 'move' i_x[2327989](2327991 'set reference' f[1158331]))
      (2327997 call deinit[235891] i_x[2327989])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val w[1158359]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1158361 'move' w[1158359] call_tmp[1158348])
    const-ref _tuple_expand_tmp_0[1164250]:string[26] "dead after last mention" "temp"
    (1164256 'move' _tuple_expand_tmp_0[1164250] args_x0[2346252])
    const-ref _tuple_expand_tmp_1[1164258]:codepointIndex[28274] "dead after last mention" "temp"
    (1164264 'move' _tuple_expand_tmp_1[1164258] args_x1[2346254])
    const-ref _tuple_expand_tmp_2[1164266]:string[26] "dead after last mention" "temp"
    (1164272 'move' _tuple_expand_tmp_2[1164266] args_x2[2346256])
    const-val _return_tmp_[1800588]:bool[10] "dead after last mention" "temp"
    ref i_this[2272865]:channel(true,dynamic,false)[1060947] "temp"
    (2272869 'move' i_this[2272865](2272867 'set reference' w[1158359]))
    ref i_error_out[2272871]:Error[167938] "temp"
    (2272875 'move' i_error_out[2272871](2272873 'set reference' error[1810814]))
    const-val args[2272878]:(string,codepointIndex,string)[1158555] "insert auto destroy"
    const-ref this_x0[2346312]:string[26]
    const-ref this_x1[2346314]:codepointIndex[28274]
    const-ref this_x2[2346316]:string[26]
    (2272882 'move' this_x0[2346312] _tuple_expand_tmp_0[1164250])
    (2272886 'move' this_x1[2346314] _tuple_expand_tmp_1[1164258])
    (2272890 'move' this_x2[2346316] _tuple_expand_tmp_2[1164266])
    (2346323 '.=' args[2272878] x0[1158549] this_x0[2346312])
    (2346327 '.=' args[2272878] x1[1158551] this_x1[2346314])
    (2346331 '.=' args[2272878] x2[1158553] this_x2[2346316])
    val ret[2272897]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2272899]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2272901]:locale[28] "dead after last mention" "maybe param" "temp"
    (2272903 'move' call_tmp[2272901](2272905 '.' i_this[2272865] _readWriteThisFromLocale[1060944]))
    val ret[2272908]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2272910]:locale[28] "dead after last mention" "temp"
    (2272913 call init=[90167] tmp[2272910] call_tmp[2272901])
    (2272916 'move' ret[2272908] tmp[2272910])
    val ret[2272919]:locale[28] "dead at end of block" "insert auto destroy"
    (2272921 'move' ret[2272919] ret[2272908])
    const-val call_tmp[2272924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2272926 'move' call_tmp[2272924](2272929 call ==[782781] ret[2272919] nilLocale[89939]))
    if call_tmp[2272924]
    {
      const-val call_tmp[2272934]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2272936]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2272938]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2272940 'move' call_tmp[2272938](2272943 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2272946 'move' call_tmp[2272936] call_tmp[2272938])
      const-val call_tmp[2272949]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2272951]:locale[28] "temp"
      (2272954 call chpl_localeID_to_locale[92849] call_tmp[2272936] ret_tmp[2272951])
      (2272957 'move' call_tmp[2272949] ret_tmp[2272951])
      (2272960 'move' call_tmp[2272934] call_tmp[2272949])
      (2272964 call =[90631] ret[2272919] call_tmp[2272934])
      ref i_x[2272967]:locale[28] "temp"
      (2272969 'move' i_x[2272967](2272971 'set reference' call_tmp[2272934]))
      (2272974 call deinit[90185] i_x[2272967])
    }
    (2272977 'move' ret[2272899] ret[2272919])
    const-val origLocale[2272980]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2272982 'move' origLocale[2272980] ret[2272899])
    const-val tmp[2272985]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2272987]:locale[28] "dead after last mention" "maybe param" "temp"
    (2272989 'move' call_tmp[2272987](2272991 '.' i_this[2272865] home[1060935]))
    const-val call_tmp[2272994]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2272996]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272998 'move' coerce_tmp[2272996](2273000 '.v' call_tmp[2272987] _instance[89975]))
    val coerce_tmp[2273003]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2273005 'move' coerce_tmp[2273003](2273007 'cast' object[22] coerce_tmp[2272996]))
    const-val call_tmp[2273010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2273012 'move' call_tmp[2273010](2273014 'ptr_eq' coerce_tmp[2273003] nil[44]))
    if call_tmp[2273010]
    {
      (2273020 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2273023 'move' call_tmp[2272994](2273025 '_wide_get_locale' coerce_tmp[2272996]))
    (2273027 'move' tmp[2272985] call_tmp[2272994])
    val error[2273030]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2273032 'move' error[2273030] nil[44])
    val rvfDerefTmp[2273035]:channel(true,dynamic,false)[1060947] "temp"
    (2273037 'move' rvfDerefTmp[2273035](2273039 'deref' i_this[2272865]))
    val rvfDerefTmp[2273041]:locale[28] "temp"
    (2273043 'move' rvfDerefTmp[2273041] origLocale[2272980])
    val isdirect[2273046]:bool[10] "temp"
    (2273048 'move' isdirect[2273046](2273051 call chpl_doDirectExecuteOn[187423] call_tmp[2272994]))
    if isdirect[2273046]
    {
      (2273056 call on_fn[1164907] rvfDerefTmp[2273035] args[2272878] rvfDerefTmp[2273041] error[2273030])
    }
    {
      val _args_foron_fn[2273062]:_class_localson_fn[2091143] "temp"
      (2273064 'move' _args_foron_fn[2273062](2273066 'stack allocate class' _class_localson_fn[2091143]))
      (2273068 '.=' _args_foron_fn[2273062] _0_tmp[2091146] tmp[2272985])
      (2273072 '.=' _args_foron_fn[2273062] _1_rvfDerefTmp[2091148] rvfDerefTmp[2273035])
      ref tmp[2273076]:(string,codepointIndex,string)[1158555] "temp"
      (2273078 'move' tmp[2273076](2273080 'set reference' args[2272878]))
      (2273082 '.=' _args_foron_fn[2273062] _2_args[2091150] tmp[2273076])
      (2273086 '.=' _args_foron_fn[2273062] _3_rvfDerefTmp[2091152] rvfDerefTmp[2273041])
      ref tmp[2273090]:Error[167938] "temp"
      (2273092 'move' tmp[2273090](2273094 'set reference' error[2273030]))
      (2273096 '.=' _args_foron_fn[2273062] _4_error[2091154] tmp[2273090])
      val _args_vforon_fn[2273100]:c_void_ptr[149] "temp"
      (2273102 'move' _args_vforon_fn[2273100](2273104 'cast_to_void_star' _args_foron_fn[2273062]))
      val _args_sizeon_fn[2273106]:int(64)[13] "temp"
      (2273108 'move' _args_sizeon_fn[2273106](2273110 'sizeof_bundle' _class_localson_fn[2091143]))
      on(2273113 call wrapon_fn[2091207] tmp[2272985] _args_vforon_fn[2273100] _args_sizeon_fn[2273106] _args_foron_fn[2273062])
    }
    val errorExists[2273119]:bool[10] "temp"
    (2273121 'move' errorExists[2273119](2273123 '!=' error[2273030] nil[44]))
    if errorExists[2273119]
    {
      (2273128 '=' i_error_out[2272871] error[2273030])
      ref i_x[2273131]:locale[28] "temp"
      (2273133 'move' i_x[2273131](2273135 'set reference' origLocale[2272980]))
      (2273138 call deinit[90185] i_x[2273131])
      gotoErrorHandlingReturn _endwrite[2273155] _endwrite[2273155]
    }
    (2273143 'move' ret[2272897] 1)
    ref i_x[2273146]:locale[28] "temp"
    (2273148 'move' i_x[2273146](2273150 'set reference' origLocale[2272980]))
    (2273153 call deinit[90185] i_x[2273146])
    label _endwrite[2273155]
    (1800590 'move' _return_tmp_[1800588] ret[2272897])
    val errorExists[2109256]:bool[10] "temp"
    (2109261 'move' errorExists[2109256](2109258 '!=' error[1810814] nil[44]))
    if errorExists[2109256]
    {
      val error[1845069]:Error[167938] "error variable" "temp"
      (1845071 'move' error[1845069] nil[44])
      (1845075 call close[1062362] w[1158359] error[1845069])
      val errorExists[2111208]:bool[10] "temp"
      (2111213 'move' errorExists[2111208](2111210 '!=' error[1845069] nil[44]))
      if errorExists[2111208]
      {
        gotoErrorHandling handler[1845086] handler[1845086]
      }
      label handler[1845086]
      const-val shouldHandleError[1845088]:bool[10] "temp"
      val errorExists[2111216]:bool[10] "temp"
      (2111221 'move' errorExists[2111216](2111218 '!=' error[1845069] nil[44]))
      (1845090 'move' shouldHandleError[1845088] errorExists[2111216])
      if shouldHandleError[1845088]
      {
        (1845097 call chpl_uncaught_error[170243] error[1845069])
      }
      ref i_x[2268214]:channel(true,dynamic,false)[1060947] "temp"
      (2268218 'move' i_x[2268214](2268216 'set reference' w[1158359]))
      (2268222 call deinit[1536215] i_x[2268214])
      val error[1845105]:Error[167938] "error variable" "temp"
      (1845107 'move' error[1845105] nil[44])
      (1845111 call close[236024] f[1158331] error[1845105])
      val errorExists[2111224]:bool[10] "temp"
      (2111229 'move' errorExists[2111224](2111226 '!=' error[1845105] nil[44]))
      if errorExists[2111224]
      {
        gotoErrorHandling handler[1845122] handler[1845122]
      }
      label handler[1845122]
      const-val shouldHandleError[1845124]:bool[10] "temp"
      val errorExists[2111232]:bool[10] "temp"
      (2111237 'move' errorExists[2111232](2111234 '!=' error[1845105] nil[44]))
      (1845126 'move' shouldHandleError[1845124] errorExists[2111232])
      if shouldHandleError[1845124]
      {
        (1845133 call chpl_uncaught_error[170243] error[1845105])
      }
      ref i_x[2328001]:file[235580] "temp"
      (2328005 'move' i_x[2328001](2328003 'set reference' f[1158331]))
      (2328009 call deinit[235891] i_x[2328001])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val call_tmp[1158385]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1158387 'move' call_tmp[1158385](1158393 call offset[1080148] w[1158359]))
    const-val offset[1158394]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1158396 'move' offset[1158394] call_tmp[1158385])
    val call_tmp[1158400]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1158407]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120727]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120729 'move' call_tmp[2120727](2120731 '+' offset[1158394] 1))
    (1158409 'move' call_tmp[1158407] call_tmp[2120727])
    val call_tmp[1158415]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
    val ret[2269442]:c_ptr(uint(8))[937423] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2269444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269446 'move' call_tmp[2269444](2269448 '<' call_tmp[1158407] 0))
    if call_tmp[2269444]
    {
      (2269454 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269457]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269459 'move' call_tmp[2269457](2269461 'cast' uint(64)[115] call_tmp[1158407]))
    const-val call_tmp[2269464]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269466 'move' call_tmp[2269464](2269469 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269471]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269473 'move' call_tmp[2269471](2269475 '*' call_tmp[2269457] call_tmp[2269464]))
    const-val call_tmp[2269478]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269480 'move' call_tmp[2269478](2269483 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269484]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269486 'move' call_tmp[2269484](2269489 call chpl_here_alloc[1080490] call_tmp[2269471] call_tmp[2269478]))
    val call_tmp[2269492]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269494 'move' call_tmp[2269492](2269496 'cast' c_ptr(uint(8))[937423] call_tmp[2269484]))
    (2269499 'move' ret[2269442] call_tmp[2269492])
    (1158417 'move' call_tmp[1158415] ret[2269442])
    val buf[1158423]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1158425 'move' buf[1158423] call_tmp[1158415])
    const-val call_tmp[1158429]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    const-val default_arg_start[1175677]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269593]:file[235580] "temp"
    (2269597 'move' i_this[2269593](2269595 'set reference' f[1158331]))
    ref i_error_out[2269599]:Error[167938] "temp"
    (2269603 'move' i_error_out[2269599](2269601 'set reference' error[1810814]))
    val ret[2269606]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269608 'move' ret[2269606] 0)
    (1175683 'move' default_arg_start[1175677] ret[2269606])
    val errorExists[2109264]:bool[10] "temp"
    (2109269 'move' errorExists[2109264](2109266 '!=' error[1810814] nil[44]))
    if errorExists[2109264]
    {
      val error[1845141]:Error[167938] "error variable" "temp"
      (1845143 'move' error[1845141] nil[44])
      (1845147 call close[1062362] w[1158359] error[1845141])
      val errorExists[2111240]:bool[10] "temp"
      (2111245 'move' errorExists[2111240](2111242 '!=' error[1845141] nil[44]))
      if errorExists[2111240]
      {
        gotoErrorHandling handler[1845158] handler[1845158]
      }
      label handler[1845158]
      const-val shouldHandleError[1845160]:bool[10] "temp"
      val errorExists[2111248]:bool[10] "temp"
      (2111253 'move' errorExists[2111248](2111250 '!=' error[1845141] nil[44]))
      (1845162 'move' shouldHandleError[1845160] errorExists[2111248])
      if shouldHandleError[1845160]
      {
        (1845169 call chpl_uncaught_error[170243] error[1845141])
      }
      ref i_x[2268226]:channel(true,dynamic,false)[1060947] "temp"
      (2268230 'move' i_x[2268226](2268228 'set reference' w[1158359]))
      (2268234 call deinit[1536215] i_x[2268226])
      val error[1845177]:Error[167938] "error variable" "temp"
      (1845179 'move' error[1845177] nil[44])
      (1845183 call close[236024] f[1158331] error[1845177])
      val errorExists[2111256]:bool[10] "temp"
      (2111261 'move' errorExists[2111256](2111258 '!=' error[1845177] nil[44]))
      if errorExists[2111256]
      {
        gotoErrorHandling handler[1845194] handler[1845194]
      }
      label handler[1845194]
      const-val shouldHandleError[1845196]:bool[10] "temp"
      val errorExists[2111264]:bool[10] "temp"
      (2111269 'move' errorExists[2111264](2111266 '!=' error[1845177] nil[44]))
      (1845198 'move' shouldHandleError[1845196] errorExists[2111264])
      if shouldHandleError[1845196]
      {
        (1845205 call chpl_uncaught_error[170243] error[1845177])
      }
      ref i_x[2328013]:file[235580] "temp"
      (2328017 'move' i_x[2328013](2328015 'set reference' f[1158331]))
      (2328021 call deinit[235891] i_x[2328013])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_end[1175687]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269659]:file[235580] "temp"
    (2269663 'move' i_this[2269659](2269661 'set reference' f[1158331]))
    ref i_error_out[2269665]:Error[167938] "temp"
    (2269669 'move' i_error_out[2269665](2269667 'set reference' error[1810814]))
    val ret[2269672]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    (2269674 'move' ret[2269672] 9223372036854775807)
    (1175693 'move' default_arg_end[1175687] ret[2269672])
    val errorExists[2109272]:bool[10] "temp"
    (2109277 'move' errorExists[2109272](2109274 '!=' error[1810814] nil[44]))
    if errorExists[2109272]
    {
      val error[1845213]:Error[167938] "error variable" "temp"
      (1845215 'move' error[1845213] nil[44])
      (1845219 call close[1062362] w[1158359] error[1845213])
      val errorExists[2111272]:bool[10] "temp"
      (2111277 'move' errorExists[2111272](2111274 '!=' error[1845213] nil[44]))
      if errorExists[2111272]
      {
        gotoErrorHandling handler[1845230] handler[1845230]
      }
      label handler[1845230]
      const-val shouldHandleError[1845232]:bool[10] "temp"
      val errorExists[2111280]:bool[10] "temp"
      (2111285 'move' errorExists[2111280](2111282 '!=' error[1845213] nil[44]))
      (1845234 'move' shouldHandleError[1845232] errorExists[2111280])
      if shouldHandleError[1845232]
      {
        (1845241 call chpl_uncaught_error[170243] error[1845213])
      }
      ref i_x[2268238]:channel(true,dynamic,false)[1060947] "temp"
      (2268242 'move' i_x[2268238](2268240 'set reference' w[1158359]))
      (2268246 call deinit[1536215] i_x[2268238])
      val error[1845249]:Error[167938] "error variable" "temp"
      (1845251 'move' error[1845249] nil[44])
      (1845255 call close[236024] f[1158331] error[1845249])
      val errorExists[2111288]:bool[10] "temp"
      (2111293 'move' errorExists[2111288](2111290 '!=' error[1845249] nil[44]))
      if errorExists[2111288]
      {
        gotoErrorHandling handler[1845266] handler[1845266]
      }
      label handler[1845266]
      const-val shouldHandleError[1845268]:bool[10] "temp"
      val errorExists[2111296]:bool[10] "temp"
      (2111301 'move' errorExists[2111296](2111298 '!=' error[1845249] nil[44]))
      (1845270 'move' shouldHandleError[1845268] errorExists[2111296])
      if shouldHandleError[1845268]
      {
        (1845277 call chpl_uncaught_error[170243] error[1845249])
      }
      ref i_x[2328025]:file[235580] "temp"
      (2328029 'move' i_x[2328025](2328027 'set reference' f[1158331]))
      (2328033 call deinit[235891] i_x[2328025])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_hints[1175697]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269730]:file[235580] "temp"
    (2269734 'move' i_this[2269730](2269732 'set reference' f[1158331]))
    ref i_error_out[2269736]:Error[167938] "temp"
    (2269740 'move' i_error_out[2269736](2269738 'set reference' error[1810814]))
    val ret[2269743]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val tmp[2269745]:int(32)[95] "dead after last mention" "temp"
    (2269747 'move' tmp[2269745] IOHINT_NONE[231411])
    (2269750 'move' ret[2269743] tmp[2269745])
    (1175703 'move' default_arg_hints[1175697] ret[2269743])
    val errorExists[2109280]:bool[10] "temp"
    (2109285 'move' errorExists[2109280](2109282 '!=' error[1810814] nil[44]))
    if errorExists[2109280]
    {
      val error[1845285]:Error[167938] "error variable" "temp"
      (1845287 'move' error[1845285] nil[44])
      (1845291 call close[1062362] w[1158359] error[1845285])
      val errorExists[2111304]:bool[10] "temp"
      (2111309 'move' errorExists[2111304](2111306 '!=' error[1845285] nil[44]))
      if errorExists[2111304]
      {
        gotoErrorHandling handler[1845302] handler[1845302]
      }
      label handler[1845302]
      const-val shouldHandleError[1845304]:bool[10] "temp"
      val errorExists[2111312]:bool[10] "temp"
      (2111317 'move' errorExists[2111312](2111314 '!=' error[1845285] nil[44]))
      (1845306 'move' shouldHandleError[1845304] errorExists[2111312])
      if shouldHandleError[1845304]
      {
        (1845313 call chpl_uncaught_error[170243] error[1845285])
      }
      ref i_x[2268250]:channel(true,dynamic,false)[1060947] "temp"
      (2268254 'move' i_x[2268250](2268252 'set reference' w[1158359]))
      (2268258 call deinit[1536215] i_x[2268250])
      val error[1845321]:Error[167938] "error variable" "temp"
      (1845323 'move' error[1845321] nil[44])
      (1845327 call close[236024] f[1158331] error[1845321])
      val errorExists[2111320]:bool[10] "temp"
      (2111325 'move' errorExists[2111320](2111322 '!=' error[1845321] nil[44]))
      if errorExists[2111320]
      {
        gotoErrorHandling handler[1845338] handler[1845338]
      }
      label handler[1845338]
      const-val shouldHandleError[1845340]:bool[10] "temp"
      val errorExists[2111328]:bool[10] "temp"
      (2111333 'move' errorExists[2111328](2111330 '!=' error[1845321] nil[44]))
      (1845342 'move' shouldHandleError[1845340] errorExists[2111328])
      if shouldHandleError[1845340]
      {
        (1845349 call chpl_uncaught_error[170243] error[1845321])
      }
      ref i_x[2328037]:file[235580] "temp"
      (2328041 'move' i_x[2328037](2328039 'set reference' f[1158331]))
      (2328045 call deinit[235891] i_x[2328037])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_style[1175707]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269834]:file[235580] "temp"
    (2269838 'move' i_this[2269834](2269836 'set reference' f[1158331]))
    ref i_error_out[2269840]:Error[167938] "temp"
    (2269844 'move' i_error_out[2269840](2269842 'set reference' error[1810814]))
    val ret[2269847]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269849]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269851]:Error[167938] "error variable" "temp"
    (2269853 'move' error[2269851] nil[44])
    (2269856 'move' style[2269849](2269859 call _style[235960] i_this[2269834] error[2269851]))
    val errorExists[2269862]:bool[10] "temp"
    (2269864 'move' errorExists[2269862](2269866 '!=' error[2269851] nil[44]))
    if errorExists[2269862]
    {
      (2269871 '=' i_error_out[2269840] error[2269851])
      gotoErrorHandlingReturn _endreader_default_style[2269880] _endreader_default_style[2269880]
    }
    (2269877 'move' ret[2269847] style[2269849])
    label _endreader_default_style[2269880]
    (1175713 'move' default_arg_style[1175707] ret[2269847])
    val errorExists[2109288]:bool[10] "temp"
    (2109293 'move' errorExists[2109288](2109290 '!=' error[1810814] nil[44]))
    if errorExists[2109288]
    {
      val error[1845357]:Error[167938] "error variable" "temp"
      (1845359 'move' error[1845357] nil[44])
      (1845363 call close[1062362] w[1158359] error[1845357])
      val errorExists[2111336]:bool[10] "temp"
      (2111341 'move' errorExists[2111336](2111338 '!=' error[1845357] nil[44]))
      if errorExists[2111336]
      {
        gotoErrorHandling handler[1845374] handler[1845374]
      }
      label handler[1845374]
      const-val shouldHandleError[1845376]:bool[10] "temp"
      val errorExists[2111344]:bool[10] "temp"
      (2111349 'move' errorExists[2111344](2111346 '!=' error[1845357] nil[44]))
      (1845378 'move' shouldHandleError[1845376] errorExists[2111344])
      if shouldHandleError[1845376]
      {
        (1845385 call chpl_uncaught_error[170243] error[1845357])
      }
      ref i_x[2268262]:channel(true,dynamic,false)[1060947] "temp"
      (2268266 'move' i_x[2268262](2268264 'set reference' w[1158359]))
      (2268270 call deinit[1536215] i_x[2268262])
      val error[1845393]:Error[167938] "error variable" "temp"
      (1845395 'move' error[1845393] nil[44])
      (1845399 call close[236024] f[1158331] error[1845393])
      val errorExists[2111352]:bool[10] "temp"
      (2111357 'move' errorExists[2111352](2111354 '!=' error[1845393] nil[44]))
      if errorExists[2111352]
      {
        gotoErrorHandling handler[1845410] handler[1845410]
      }
      label handler[1845410]
      const-val shouldHandleError[1845412]:bool[10] "temp"
      val errorExists[2111360]:bool[10] "temp"
      (2111365 'move' errorExists[2111360](2111362 '!=' error[1845393] nil[44]))
      (1845414 'move' shouldHandleError[1845412] errorExists[2111360])
      if shouldHandleError[1845412]
      {
        (1845421 call chpl_uncaught_error[170243] error[1845393])
      }
      ref i_x[2328049]:file[235580] "temp"
      (2328053 'move' i_x[2328049](2328051 'set reference' f[1158331]))
      (2328057 call deinit[235891] i_x[2328049])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1833431]:channel(false,dynamic,false)[1080682] "temp"
    (1158437 call reader[1080588] f[1158331] default_arg_start[1175677] default_arg_end[1175687] default_arg_hints[1175697] default_arg_style[1175707] error[1810814] ret_tmp[1833431])
    (1833434 'move' call_tmp[1158429] ret_tmp[1833431])
    val errorExists[2109296]:bool[10] "temp"
    (2109301 'move' errorExists[2109296](2109298 '!=' error[1810814] nil[44]))
    if errorExists[2109296]
    {
      val error[1845429]:Error[167938] "error variable" "temp"
      (1845431 'move' error[1845429] nil[44])
      (1845435 call close[1062362] w[1158359] error[1845429])
      val errorExists[2111368]:bool[10] "temp"
      (2111373 'move' errorExists[2111368](2111370 '!=' error[1845429] nil[44]))
      if errorExists[2111368]
      {
        gotoErrorHandling handler[1845446] handler[1845446]
      }
      label handler[1845446]
      const-val shouldHandleError[1845448]:bool[10] "temp"
      val errorExists[2111376]:bool[10] "temp"
      (2111381 'move' errorExists[2111376](2111378 '!=' error[1845429] nil[44]))
      (1845450 'move' shouldHandleError[1845448] errorExists[2111376])
      if shouldHandleError[1845448]
      {
        (1845457 call chpl_uncaught_error[170243] error[1845429])
      }
      ref i_x[2268274]:channel(true,dynamic,false)[1060947] "temp"
      (2268278 'move' i_x[2268274](2268276 'set reference' w[1158359]))
      (2268282 call deinit[1536215] i_x[2268274])
      val error[1845465]:Error[167938] "error variable" "temp"
      (1845467 'move' error[1845465] nil[44])
      (1845471 call close[236024] f[1158331] error[1845465])
      val errorExists[2111384]:bool[10] "temp"
      (2111389 'move' errorExists[2111384](2111386 '!=' error[1845465] nil[44]))
      if errorExists[2111384]
      {
        gotoErrorHandling handler[1845482] handler[1845482]
      }
      label handler[1845482]
      const-val shouldHandleError[1845484]:bool[10] "temp"
      val errorExists[2111392]:bool[10] "temp"
      (2111397 'move' errorExists[2111392](2111394 '!=' error[1845465] nil[44]))
      (1845486 'move' shouldHandleError[1845484] errorExists[2111392])
      if shouldHandleError[1845484]
      {
        (1845493 call chpl_uncaught_error[170243] error[1845465])
      }
      ref i_x[2328061]:file[235580] "temp"
      (2328065 'move' i_x[2328061](2328063 'set reference' f[1158331]))
      (2328069 call deinit[235891] i_x[2328061])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val r[1158440]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1158442 'move' r[1158440] call_tmp[1158429])
    const-val call_tmp[1158457]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1158459 'move' call_tmp[1158457] offset[1158394])
    (1158469 call readBytes[1082839] r[1158440] buf[1158423] call_tmp[1158457] error[1810814])
    val errorExists[2109304]:bool[10] "temp"
    (2109309 'move' errorExists[2109304](2109306 '!=' error[1810814] nil[44]))
    if errorExists[2109304]
    {
      val error[1845501]:Error[167938] "error variable" "temp"
      (1845503 'move' error[1845501] nil[44])
      (1845507 call close[1082094] r[1158440] error[1845501])
      val errorExists[2111400]:bool[10] "temp"
      (2111405 'move' errorExists[2111400](2111402 '!=' error[1845501] nil[44]))
      if errorExists[2111400]
      {
        gotoErrorHandling handler[1845518] handler[1845518]
      }
      label handler[1845518]
      const-val shouldHandleError[1845520]:bool[10] "temp"
      val errorExists[2111408]:bool[10] "temp"
      (2111413 'move' errorExists[2111408](2111410 '!=' error[1845501] nil[44]))
      (1845522 'move' shouldHandleError[1845520] errorExists[2111408])
      if shouldHandleError[1845520]
      {
        (1845529 call chpl_uncaught_error[170243] error[1845501])
      }
      ref i_x[2331656]:channel(false,dynamic,false)[1080682] "temp"
      (2331660 'move' i_x[2331656](2331658 'set reference' r[1158440]))
      (2331664 call deinit[1540469] i_x[2331656])
      val error[1845537]:Error[167938] "error variable" "temp"
      (1845539 'move' error[1845537] nil[44])
      (1845543 call close[1062362] w[1158359] error[1845537])
      val errorExists[2111416]:bool[10] "temp"
      (2111421 'move' errorExists[2111416](2111418 '!=' error[1845537] nil[44]))
      if errorExists[2111416]
      {
        gotoErrorHandling handler[1845554] handler[1845554]
      }
      label handler[1845554]
      const-val shouldHandleError[1845556]:bool[10] "temp"
      val errorExists[2111424]:bool[10] "temp"
      (2111429 'move' errorExists[2111424](2111426 '!=' error[1845537] nil[44]))
      (1845558 'move' shouldHandleError[1845556] errorExists[2111424])
      if shouldHandleError[1845556]
      {
        (1845565 call chpl_uncaught_error[170243] error[1845537])
      }
      ref i_x[2268286]:channel(true,dynamic,false)[1060947] "temp"
      (2268290 'move' i_x[2268286](2268288 'set reference' w[1158359]))
      (2268294 call deinit[1536215] i_x[2268286])
      val error[1845573]:Error[167938] "error variable" "temp"
      (1845575 'move' error[1845573] nil[44])
      (1845579 call close[236024] f[1158331] error[1845573])
      val errorExists[2111432]:bool[10] "temp"
      (2111437 'move' errorExists[2111432](2111434 '!=' error[1845573] nil[44]))
      if errorExists[2111432]
      {
        gotoErrorHandling handler[1845590] handler[1845590]
      }
      label handler[1845590]
      const-val shouldHandleError[1845592]:bool[10] "temp"
      val errorExists[2111440]:bool[10] "temp"
      (2111445 'move' errorExists[2111440](2111442 '!=' error[1845573] nil[44]))
      (1845594 'move' shouldHandleError[1845592] errorExists[2111440])
      if shouldHandleError[1845592]
      {
        (1845601 call chpl_uncaught_error[170243] error[1845573])
      }
      ref i_x[2328073]:file[235580] "temp"
      (2328077 'move' i_x[2328073](2328075 'set reference' f[1158331]))
      (2328081 call deinit[235891] i_x[2328073])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    ref call_tmp[1158476]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2195334]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195336 'move' call_tmp[2195334](2195338 'array_get' buf[1158423] offset[1158394]))
    (1158478 'move' call_tmp[1158476] call_tmp[2195334])
    const-val coerce_tmp[1175723]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175729 'move' coerce_tmp[1175723](1175725 'cast' uint(8)[100] 0))
    (2195816 '=' call_tmp[1158476] coerce_tmp[1175723])
    const-val call_tmp[1158490]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2120737]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120739 'move' call_tmp[2120737](2120741 '+' offset[1158394] 1))
    (1158492 'move' call_tmp[1158490] call_tmp[2120737])
    const-val call_tmp[1158498]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1829123]:string[26] "temp"
    ref i_error_out[2140674]:Error[167938] "temp"
    (2140678 'move' i_error_out[2140674](2140676 'set reference' error[1810814]))
    ref i__retArg[2140680]:string[26] "temp"
    (2140684 'move' i__retArg[2140680](2140682 'set reference' ret_tmp[1829123]))
    const-val ret[2140687]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140689]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140691]:Error[167938] "error variable" "temp"
    (2140693 'move' error[2140691] nil[44])
    const-val ret_tmp[2140696]:string[26] "temp"
    (2140699 call decodeByteBuffer[173892] buf[1158423] offset[1158394] replace[173648] error[2140691] ret_tmp[2140696])
    (2140705 'move' call_tmp[2140689] ret_tmp[2140696])
    val errorExists[2140708]:bool[10] "temp"
    (2140710 'move' errorExists[2140708](2140712 '!=' error[2140691] nil[44]))
    if errorExists[2140708]
    {
      (2140717 '=' i_error_out[2140674] error[2140691])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140726] _endcreateStringWithNewBuffer[2140726]
    }
    (2140723 'move' ret[2140687] call_tmp[2140689])
    label _endcreateStringWithNewBuffer[2140726]
    (2140728 '=' i__retArg[2140680] ret[2140687])
    (1829126 'move' call_tmp[1158498] ret_tmp[1829123])
    val errorExists[2109312]:bool[10] "temp"
    (2109317 'move' errorExists[2109312](2109314 '!=' error[1810814] nil[44]))
    if errorExists[2109312]
    {
      val error[1845609]:Error[167938] "error variable" "temp"
      (1845611 'move' error[1845609] nil[44])
      (1845615 call close[1082094] r[1158440] error[1845609])
      val errorExists[2111448]:bool[10] "temp"
      (2111453 'move' errorExists[2111448](2111450 '!=' error[1845609] nil[44]))
      if errorExists[2111448]
      {
        gotoErrorHandling handler[1845626] handler[1845626]
      }
      label handler[1845626]
      const-val shouldHandleError[1845628]:bool[10] "temp"
      val errorExists[2111456]:bool[10] "temp"
      (2111461 'move' errorExists[2111456](2111458 '!=' error[1845609] nil[44]))
      (1845630 'move' shouldHandleError[1845628] errorExists[2111456])
      if shouldHandleError[1845628]
      {
        (1845637 call chpl_uncaught_error[170243] error[1845609])
      }
      ref i_x[2331668]:channel(false,dynamic,false)[1080682] "temp"
      (2331672 'move' i_x[2331668](2331670 'set reference' r[1158440]))
      (2331676 call deinit[1540469] i_x[2331668])
      val error[1845645]:Error[167938] "error variable" "temp"
      (1845647 'move' error[1845645] nil[44])
      (1845651 call close[1062362] w[1158359] error[1845645])
      val errorExists[2111464]:bool[10] "temp"
      (2111469 'move' errorExists[2111464](2111466 '!=' error[1845645] nil[44]))
      if errorExists[2111464]
      {
        gotoErrorHandling handler[1845662] handler[1845662]
      }
      label handler[1845662]
      const-val shouldHandleError[1845664]:bool[10] "temp"
      val errorExists[2111472]:bool[10] "temp"
      (2111477 'move' errorExists[2111472](2111474 '!=' error[1845645] nil[44]))
      (1845666 'move' shouldHandleError[1845664] errorExists[2111472])
      if shouldHandleError[1845664]
      {
        (1845673 call chpl_uncaught_error[170243] error[1845645])
      }
      ref i_x[2268298]:channel(true,dynamic,false)[1060947] "temp"
      (2268302 'move' i_x[2268298](2268300 'set reference' w[1158359]))
      (2268306 call deinit[1536215] i_x[2268298])
      val error[1845681]:Error[167938] "error variable" "temp"
      (1845683 'move' error[1845681] nil[44])
      (1845687 call close[236024] f[1158331] error[1845681])
      val errorExists[2111480]:bool[10] "temp"
      (2111485 'move' errorExists[2111480](2111482 '!=' error[1845681] nil[44]))
      if errorExists[2111480]
      {
        gotoErrorHandling handler[1845698] handler[1845698]
      }
      label handler[1845698]
      const-val shouldHandleError[1845700]:bool[10] "temp"
      val errorExists[2111488]:bool[10] "temp"
      (2111493 'move' errorExists[2111488](2111490 '!=' error[1845681] nil[44]))
      (1845702 'move' shouldHandleError[1845700] errorExists[2111488])
      if shouldHandleError[1845700]
      {
        (1845709 call chpl_uncaught_error[170243] error[1845681])
      }
      ref i_x[2328085]:file[235580] "temp"
      (2328089 'move' i_x[2328085](2328087 'set reference' f[1158331]))
      (2328093 call deinit[235891] i_x[2328085])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret[1158508]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1158510 'move' ret[1158508] call_tmp[1158498])
    const-val coerce_tmp[1175734]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175740 'move' coerce_tmp[1175734](1175736 'cast' c_void_ptr[149] buf[1158423]))
    (2203420 call chpl_here_free[188081] coerce_tmp[1175734])
    (1175744 'move' ret[1157874] ret[1158508])
    val error[1845717]:Error[167938] "error variable" "temp"
    (1845719 'move' error[1845717] nil[44])
    (1845723 call close[1082094] r[1158440] error[1845717])
    val errorExists[2111496]:bool[10] "temp"
    (2111501 'move' errorExists[2111496](2111498 '!=' error[1845717] nil[44]))
    if errorExists[2111496]
    {
      gotoErrorHandling handler[1845734] handler[1845734]
    }
    label handler[1845734]
    const-val shouldHandleError[1845736]:bool[10] "temp"
    val errorExists[2111504]:bool[10] "temp"
    (2111509 'move' errorExists[2111504](2111506 '!=' error[1845717] nil[44]))
    (1845738 'move' shouldHandleError[1845736] errorExists[2111504])
    if shouldHandleError[1845736]
    {
      (1845745 call chpl_uncaught_error[170243] error[1845717])
    }
    ref i_x[2331680]:channel(false,dynamic,false)[1080682] "temp"
    (2331684 'move' i_x[2331680](2331682 'set reference' r[1158440]))
    (2331688 call deinit[1540469] i_x[2331680])
    val error[1845753]:Error[167938] "error variable" "temp"
    (1845755 'move' error[1845753] nil[44])
    (1845759 call close[1062362] w[1158359] error[1845753])
    val errorExists[2111512]:bool[10] "temp"
    (2111517 'move' errorExists[2111512](2111514 '!=' error[1845753] nil[44]))
    if errorExists[2111512]
    {
      gotoErrorHandling handler[1845770] handler[1845770]
    }
    label handler[1845770]
    const-val shouldHandleError[1845772]:bool[10] "temp"
    val errorExists[2111520]:bool[10] "temp"
    (2111525 'move' errorExists[2111520](2111522 '!=' error[1845753] nil[44]))
    (1845774 'move' shouldHandleError[1845772] errorExists[2111520])
    if shouldHandleError[1845772]
    {
      (1845781 call chpl_uncaught_error[170243] error[1845753])
    }
    ref i_x[2268310]:channel(true,dynamic,false)[1060947] "temp"
    (2268314 'move' i_x[2268310](2268312 'set reference' w[1158359]))
    (2268318 call deinit[1536215] i_x[2268310])
    val error[1845789]:Error[167938] "error variable" "temp"
    (1845791 'move' error[1845789] nil[44])
    (1845795 call close[236024] f[1158331] error[1845789])
    val errorExists[2111528]:bool[10] "temp"
    (2111533 'move' errorExists[2111528](2111530 '!=' error[1845789] nil[44]))
    if errorExists[2111528]
    {
      gotoErrorHandling handler[1845806] handler[1845806]
    }
    label handler[1845806]
    const-val shouldHandleError[1845808]:bool[10] "temp"
    val errorExists[2111536]:bool[10] "temp"
    (2111541 'move' errorExists[2111536](2111538 '!=' error[1845789] nil[44]))
    (1845810 'move' shouldHandleError[1845808] errorExists[2111536])
    if shouldHandleError[1845808]
    {
      (1845817 call chpl_uncaught_error[170243] error[1845789])
    }
    ref i_x[2328097]:file[235580] "temp"
    (2328101 'move' i_x[2328097](2328099 'set reference' f[1158331]))
    (2328105 call deinit[235891] i_x[2328097])
    gotoReturn _end_stringify[1158537] _end_stringify[1158537]
    label handler[1810815]
    const-val shouldHandleError[1811008]:bool[10] "temp"
    val errorExists[2109320]:bool[10] "temp"
    (2109325 'move' errorExists[2109320](2109322 '!=' error[1810814] nil[44]))
    (1811012 'move' shouldHandleError[1811008] errorExists[2109320])
    if shouldHandleError[1811008]
    {
      (1811005 call chpl_uncaught_error[170243] error[1810814])
    }
    label _end_stringify[1158537]
    (1834608 '=' _retArg[1834606] ret[1157874])
    (1834610 return _void[55])
  }
  function stringify[1272493](const  ref arg _e0_args[1272495]:string[26], const in arg _e1_args[1272497]:int(64)[13], const  ref arg _e2_args[1272499]:string[26], ref arg _retArg[1836870]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346926]:string[26]
    val args_x1[2346928]:int(64)[13]
    const-ref args_x2[2346930]:string[26]
    const-ref ret_tmp_x0[2346951]:string[26] "temp"
    val ret_tmp_x1[2346953]:int(64)[13] "temp"
    const-ref ret_tmp_x2[2346955]:string[26] "temp"
    const-ref this_x0[2346975]:string[26]
    val this_x1[2346977]:int(64)[13]
    const-ref this_x2[2346979]:string[26]
    (2296451 'move' this_x0[2346975] _e0_args[1272495])
    (2296455 'move' this_x1[2346977] _e1_args[1272497])
    (2296459 'move' this_x2[2346979] _e2_args[1272499])
    (2346961 'move' ret_tmp_x0[2346951] this_x0[2346975])
    (2346966 'move' ret_tmp_x1[2346953] this_x1[2346977])
    (2346971 'move' ret_tmp_x2[2346955] this_x2[2346979])
    (2346936 'move' args_x0[2346926] ret_tmp_x0[2346951])
    (2346941 'move' args_x1[2346928] ret_tmp_x1[2346953])
    (2346946 'move' args_x2[2346930] ret_tmp_x2[2346955])
    const-val ret[1272503]:string[26] "dead after last mention" "RVV" "temp"
    val str[1272541]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204613]:string[26] "temp"
    (2204616 'move' inlineImm[2204613] "")
    ref i_x[2204618]:string[26] "temp"
    (2204622 'move' i_x[2204618](2204620 'set reference' inlineImm[2204613]))
    val ret[2204625]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204627]:string[26] "dead after last mention" "temp"
    (2204630 call init=[30771] tmp[2204627] i_x[2204618])
    (2204633 'move' ret[2204625] tmp[2204627])
    (1272543 'move' str[1272541] ret[2204625])
    const-val i[1272548]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1272550 'move' i[1272548] 0)
    const-ref call_tmp[1276256]:string[26] "dead after last mention" "maybe param" "temp"
    (1276258 'move' call_tmp[1276256] args_x0[2346926])
    (1276264 call +=[38797] str[1272541] call_tmp[1276256])
    const-ref call_tmp[1276832]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1276834 'move' call_tmp[1276832](2346949 'set reference' args_x1[2346928]))
    const-val call_tmp[1276839]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1277396]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1277400 'move' coerce_tmp[1277396](1277398 'deref' call_tmp[1276832]))
    const-val ret_tmp[1833191]:string[26] "temp"
    (1276844 call _cast[1063153] coerce_tmp[1277396] ret_tmp[1833191])
    (1833194 'move' call_tmp[1276839] ret_tmp[1833191])
    (1276848 call +=[38797] str[1272541] call_tmp[1276839])
    ref i_x[2132349]:string[26] "temp"
    (2132353 'move' i_x[2132349](2132351 'set reference' call_tmp[1276839]))
    (2132357 call deinit[30831] i_x[2132349])
    const-ref call_tmp[1276946]:string[26] "dead after last mention" "maybe param" "temp"
    (1276948 'move' call_tmp[1276946] args_x2[2346930])
    (1276954 call +=[38797] str[1272541] call_tmp[1276946])
    (1277439 'move' ret[1272503] str[1272541])
    gotoReturn _end_stringify[1273166] _end_stringify[1273166]
    label _end_stringify[1273166]
    (1836872 '=' _retArg[1836870] ret[1272503])
    (1836876 return _void[55])
  }
  function stringify[1402793](const  ref arg _e0_args[1402795]:string[26], const  ref arg _e1_args[1402797]:string[26], const  ref arg _e2_args[1402799]:string[26], ref arg _retArg[1838356]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2347275]:string[26]
    const-ref args_x1[2347277]:string[26]
    const-ref args_x2[2347279]:string[26]
    const-ref ret_tmp_x0[2347299]:string[26] "temp"
    const-ref ret_tmp_x1[2347301]:string[26] "temp"
    const-ref ret_tmp_x2[2347303]:string[26] "temp"
    const-ref this_x0[2347323]:string[26]
    const-ref this_x1[2347325]:string[26]
    const-ref this_x2[2347327]:string[26]
    (2320924 'move' this_x0[2347323] _e0_args[1402795])
    (2320928 'move' this_x1[2347325] _e1_args[1402797])
    (2320932 'move' this_x2[2347327] _e2_args[1402799])
    (2347309 'move' ret_tmp_x0[2347299] this_x0[2347323])
    (2347314 'move' ret_tmp_x1[2347301] this_x1[2347325])
    (2347319 'move' ret_tmp_x2[2347303] this_x2[2347327])
    (2347285 'move' args_x0[2347275] ret_tmp_x0[2347299])
    (2347290 'move' args_x1[2347277] ret_tmp_x1[2347301])
    (2347295 'move' args_x2[2347279] ret_tmp_x2[2347303])
    const-val ret[1402803]:string[26] "dead after last mention" "RVV" "temp"
    val str[1402841]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204713]:string[26] "temp"
    (2204716 'move' inlineImm[2204713] "")
    ref i_x[2204718]:string[26] "temp"
    (2204722 'move' i_x[2204718](2204720 'set reference' inlineImm[2204713]))
    val ret[2204725]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204727]:string[26] "dead after last mention" "temp"
    (2204730 call init=[30771] tmp[2204727] i_x[2204718])
    (2204733 'move' ret[2204725] tmp[2204727])
    (1402843 'move' str[1402841] ret[2204725])
    const-val i[1402848]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1402850 'move' i[1402848] 0)
    const-ref call_tmp[1406566]:string[26] "dead after last mention" "maybe param" "temp"
    (1406568 'move' call_tmp[1406566] args_x0[2347275])
    (1406574 call +=[38797] str[1402841] call_tmp[1406566])
    const-ref call_tmp[1406911]:string[26] "dead after last mention" "maybe param" "temp"
    (1406913 'move' call_tmp[1406911] args_x1[2347277])
    (1406919 call +=[38797] str[1402841] call_tmp[1406911])
    const-ref call_tmp[1407256]:string[26] "dead after last mention" "maybe param" "temp"
    (1407258 'move' call_tmp[1407256] args_x2[2347279])
    (1407264 call +=[38797] str[1402841] call_tmp[1407256])
    (1407669 'move' ret[1402803] str[1402841])
    gotoReturn _end_stringify[1403466] _end_stringify[1403466]
    label _end_stringify[1403466]
    (1838358 '=' _retArg[1838356] ret[1402803])
    (1838362 return _void[55])
  }
  function stringify[1212978](const  ref arg _e0_args[1212980]:string[26], const in arg _e1_args[1212982]:int(64)[13], ref arg _retArg[1834994]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346527]:string[26]
    val args_x1[2346529]:int(64)[13]
    const-ref ret_tmp_x0[2346544]:string[26] "temp"
    val ret_tmp_x1[2346546]:int(64)[13] "temp"
    const-ref this_x0[2346560]:string[26]
    val this_x1[2346562]:int(64)[13]
    (2276352 'move' this_x0[2346560] _e0_args[1212980])
    (2276356 'move' this_x1[2346562] _e1_args[1212982])
    (2346552 'move' ret_tmp_x0[2346544] this_x0[2346560])
    (2346557 'move' ret_tmp_x1[2346546] this_x1[2346562])
    (2346535 'move' args_x0[2346527] ret_tmp_x0[2346544])
    (2346540 'move' args_x1[2346529] ret_tmp_x1[2346546])
    const-val ret[1212986]:string[26] "dead after last mention" "RVV" "temp"
    val str[1213021]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204588]:string[26] "temp"
    (2204591 'move' inlineImm[2204588] "")
    ref i_x[2204593]:string[26] "temp"
    (2204597 'move' i_x[2204593](2204595 'set reference' inlineImm[2204588]))
    val ret[2204600]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204602]:string[26] "dead after last mention" "temp"
    (2204605 call init=[30771] tmp[2204602] i_x[2204593])
    (2204608 'move' ret[2204600] tmp[2204602])
    (1213023 'move' str[1213021] ret[2204600])
    const-val i[1213028]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1213030 'move' i[1213028] 0)
    const-ref call_tmp[1216653]:string[26] "dead after last mention" "maybe param" "temp"
    (1216655 'move' call_tmp[1216653] args_x0[2346527])
    (1216661 call +=[38797] str[1213021] call_tmp[1216653])
    const-ref call_tmp[1217229]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1217231 'move' call_tmp[1217229](2346543 'set reference' args_x1[2346529]))
    const-val call_tmp[1217236]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1217448]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1217452 'move' coerce_tmp[1217448](1217450 'deref' call_tmp[1217229]))
    const-val ret_tmp[1833161]:string[26] "temp"
    (1217241 call _cast[1063153] coerce_tmp[1217448] ret_tmp[1833161])
    (1833164 'move' call_tmp[1217236] ret_tmp[1833161])
    (1217245 call +=[38797] str[1213021] call_tmp[1217236])
    ref i_x[2132085]:string[26] "temp"
    (2132089 'move' i_x[2132085](2132087 'set reference' call_tmp[1217236]))
    (2132093 call deinit[30831] i_x[2132085])
    (1217457 'move' ret[1212986] str[1213021])
    gotoReturn _end_stringify[1213646] _end_stringify[1213646]
    label _end_stringify[1213646]
    (1834996 '=' _retArg[1834994] ret[1212986])
    (1835000 return _void[55])
  }
  function stringify[1278990](const  ref arg _e0_args[1278992]:string[26], const in arg _e1_args[1278994]:int(64)[13], const  ref arg _e2_args[1278996]:string[26], const in arg _e3_args[1278998]:int(64)[13], const  ref arg _e4_args[1279000]:string[26], ref arg _retArg[1836896]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2346988]:string[26]
    val args_x1[2346990]:int(64)[13]
    const-ref args_x2[2346992]:string[26]
    val args_x3[2346994]:int(64)[13]
    const-ref args_x4[2346996]:string[26]
    const-ref ret_tmp_x0[2347030]:string[26] "temp"
    val ret_tmp_x1[2347032]:int(64)[13] "temp"
    const-ref ret_tmp_x2[2347034]:string[26] "temp"
    val ret_tmp_x3[2347036]:int(64)[13] "temp"
    const-ref ret_tmp_x4[2347038]:string[26] "temp"
    const-ref this_x0[2347070]:string[26]
    val this_x1[2347072]:int(64)[13]
    const-ref this_x2[2347074]:string[26]
    val this_x3[2347076]:int(64)[13]
    const-ref this_x4[2347078]:string[26]
    (2296567 'move' this_x0[2347070] _e0_args[1278992])
    (2296571 'move' this_x1[2347072] _e1_args[1278994])
    (2296575 'move' this_x2[2347074] _e2_args[1278996])
    (2296579 'move' this_x3[2347076] _e3_args[1278998])
    (2296583 'move' this_x4[2347078] _e4_args[1279000])
    (2347044 'move' ret_tmp_x0[2347030] this_x0[2347070])
    (2347049 'move' ret_tmp_x1[2347032] this_x1[2347072])
    (2347054 'move' ret_tmp_x2[2347034] this_x2[2347074])
    (2347059 'move' ret_tmp_x3[2347036] this_x3[2347076])
    (2347064 'move' ret_tmp_x4[2347038] this_x4[2347078])
    (2347002 'move' args_x0[2346988] ret_tmp_x0[2347030])
    (2347007 'move' args_x1[2346990] ret_tmp_x1[2347032])
    (2347012 'move' args_x2[2346992] ret_tmp_x2[2347034])
    (2347017 'move' args_x3[2346994] ret_tmp_x3[2347036])
    (2347022 'move' args_x4[2346996] ret_tmp_x4[2347038])
    const-val ret[1279004]:string[26] "dead after last mention" "RVV" "temp"
    val str[1279048]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204638]:string[26] "temp"
    (2204641 'move' inlineImm[2204638] "")
    ref i_x[2204643]:string[26] "temp"
    (2204647 'move' i_x[2204643](2204645 'set reference' inlineImm[2204638]))
    val ret[2204650]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204652]:string[26] "dead after last mention" "temp"
    (2204655 call init=[30771] tmp[2204652] i_x[2204643])
    (2204658 'move' ret[2204650] tmp[2204652])
    (1279050 'move' str[1279048] ret[2204650])
    const-val i[1279055]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1279057 'move' i[1279055] 0)
    const-ref call_tmp[1283571]:string[26] "dead after last mention" "maybe param" "temp"
    (1283573 'move' call_tmp[1283571] args_x0[2346988])
    (1283579 call +=[38797] str[1279048] call_tmp[1283571])
    const-ref call_tmp[1284147]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1284149 'move' call_tmp[1284147](2347025 'set reference' args_x1[2346990]))
    const-val call_tmp[1284154]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1285401]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1285405 'move' coerce_tmp[1285401](1285403 'deref' call_tmp[1284147]))
    const-val ret_tmp[1833197]:string[26] "temp"
    (1284159 call _cast[1063153] coerce_tmp[1285401] ret_tmp[1833197])
    (1833200 'move' call_tmp[1284154] ret_tmp[1833197])
    (1284163 call +=[38797] str[1279048] call_tmp[1284154])
    ref i_x[2132385]:string[26] "temp"
    (2132389 'move' i_x[2132385](2132387 'set reference' call_tmp[1284154]))
    (2132393 call deinit[30831] i_x[2132385])
    const-ref call_tmp[1284261]:string[26] "dead after last mention" "maybe param" "temp"
    (1284263 'move' call_tmp[1284261] args_x2[2346992])
    (1284269 call +=[38797] str[1279048] call_tmp[1284261])
    const-ref call_tmp[1284837]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1284839 'move' call_tmp[1284837](2347028 'set reference' args_x3[2346994]))
    const-val call_tmp[1284844]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1285549]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1285553 'move' coerce_tmp[1285549](1285551 'deref' call_tmp[1284837]))
    const-val ret_tmp[1833203]:string[26] "temp"
    (1284849 call _cast[1063153] coerce_tmp[1285549] ret_tmp[1833203])
    (1833206 'move' call_tmp[1284844] ret_tmp[1833203])
    (1284853 call +=[38797] str[1279048] call_tmp[1284844])
    ref i_x[2132397]:string[26] "temp"
    (2132401 'move' i_x[2132397](2132399 'set reference' call_tmp[1284844]))
    (2132405 call deinit[30831] i_x[2132397])
    const-ref call_tmp[1284951]:string[26] "dead after last mention" "maybe param" "temp"
    (1284953 'move' call_tmp[1284951] args_x4[2346996])
    (1284959 call +=[38797] str[1279048] call_tmp[1284951])
    (1285592 'move' ret[1279004] str[1279048])
    gotoReturn _end_stringify[1279673] _end_stringify[1279673]
    label _end_stringify[1279673]
    (1836898 '=' _retArg[1836896] ret[1279004])
    (1836902 return _void[55])
  }
  function stringify[1337788](const  ref arg _e0_args[1337790]:string[26], const  ref arg _e1_args[1337792]:string[26], const in arg _e2_args[1337794]:int(64)[13], const  ref arg _e3_args[1337796]:string[26], const in arg _e4_args[1337798]:range(int(64),bounded,false)[1026814], ref arg _retArg[1837603]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-ref args_x0[2347172]:string[26]
    const-ref args_x1[2347174]:string[26]
    val args_x2[2347176]:int(64)[13]
    const-ref args_x3[2347178]:string[26]
    val args_x4[2347180]:range(int(64),bounded,false)[1026814]
    const-ref ret_tmp_x0[2347214]:string[26] "temp"
    const-ref ret_tmp_x1[2347216]:string[26] "temp"
    val ret_tmp_x2[2347218]:int(64)[13] "temp"
    const-ref ret_tmp_x3[2347220]:string[26] "temp"
    val ret_tmp_x4[2347222]:range(int(64),bounded,false)[1026814] "temp"
    const-ref this_x0[2347254]:string[26]
    const-ref this_x1[2347256]:string[26]
    val this_x2[2347258]:int(64)[13]
    const-ref this_x3[2347260]:string[26]
    val this_x4[2347262]:range(int(64),bounded,false)[1026814]
    (2302145 'move' this_x0[2347254] _e0_args[1337790])
    (2302149 'move' this_x1[2347256] _e1_args[1337792])
    (2302153 'move' this_x2[2347258] _e2_args[1337794])
    (2302157 'move' this_x3[2347260] _e3_args[1337796])
    (2302161 'move' this_x4[2347262] _e4_args[1337798])
    (2347228 'move' ret_tmp_x0[2347214] this_x0[2347254])
    (2347233 'move' ret_tmp_x1[2347216] this_x1[2347256])
    (2347238 'move' ret_tmp_x2[2347218] this_x2[2347258])
    (2347243 'move' ret_tmp_x3[2347220] this_x3[2347260])
    (2347248 'move' ret_tmp_x4[2347222] this_x4[2347262])
    (2347186 'move' args_x0[2347172] ret_tmp_x0[2347214])
    (2347191 'move' args_x1[2347174] ret_tmp_x1[2347216])
    (2347196 'move' args_x2[2347176] ret_tmp_x2[2347218])
    (2347201 'move' args_x3[2347178] ret_tmp_x3[2347220])
    (2347206 'move' args_x4[2347180] ret_tmp_x4[2347222])
    const-val ret[1337802]:string[26] "dead after last mention" "RVV" "temp"
    val str[1337846]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204688]:string[26] "temp"
    (2204691 'move' inlineImm[2204688] "")
    ref i_x[2204693]:string[26] "temp"
    (2204697 'move' i_x[2204693](2204695 'set reference' inlineImm[2204688]))
    val ret[2204700]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204702]:string[26] "dead after last mention" "temp"
    (2204705 call init=[30771] tmp[2204702] i_x[2204693])
    (2204708 'move' ret[2204700] tmp[2204702])
    (1337848 'move' str[1337846] ret[2204700])
    const-val i[1337853]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1337855 'move' i[1337853] 0)
    const-ref call_tmp[1341735]:string[26] "dead after last mention" "maybe param" "temp"
    (1341737 'move' call_tmp[1341735] args_x0[2347172])
    (1341743 call +=[38797] str[1337846] call_tmp[1341735])
    const-ref call_tmp[1342080]:string[26] "dead after last mention" "maybe param" "temp"
    (1342082 'move' call_tmp[1342080] args_x1[2347174])
    (1342088 call +=[38797] str[1337846] call_tmp[1342080])
    const-ref call_tmp[1342656]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1342658 'move' call_tmp[1342656](2347210 'set reference' args_x2[2347176]))
    const-val call_tmp[1342663]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1343599]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1343603 'move' coerce_tmp[1343599](1343601 'deref' call_tmp[1342656]))
    const-val ret_tmp[1833209]:string[26] "temp"
    (1342668 call _cast[1063153] coerce_tmp[1343599] ret_tmp[1833209])
    (1833212 'move' call_tmp[1342663] ret_tmp[1833209])
    (1342672 call +=[38797] str[1337846] call_tmp[1342663])
    ref i_x[2132457]:string[26] "temp"
    (2132461 'move' i_x[2132457](2132459 'set reference' call_tmp[1342663]))
    (2132465 call deinit[30831] i_x[2132457])
    const-ref call_tmp[1342770]:string[26] "dead after last mention" "maybe param" "temp"
    (1342772 'move' call_tmp[1342770] args_x3[2347178])
    (1342778 call +=[38797] str[1337846] call_tmp[1342770])
    const-ref call_tmp[1343346]:range(int(64),bounded,false)[1026814] "dead after last mention" "maybe param" "temp"
    (1343348 'move' call_tmp[1343346](2347213 'set reference' args_x4[2347180]))
    const-val call_tmp[1343353]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1343740]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1343744 'move' coerce_tmp[1343740] call_tmp[1343346])
    const-val ret_tmp[1834018]:string[26] "temp"
    (1343358 call _cast[1119437] coerce_tmp[1343740] ret_tmp[1834018])
    (1834021 'move' call_tmp[1343353] ret_tmp[1834018])
    (1343362 call +=[38797] str[1337846] call_tmp[1343353])
    ref i_x[2132469]:string[26] "temp"
    (2132473 'move' i_x[2132469](2132471 'set reference' call_tmp[1343353]))
    (2132477 call deinit[30831] i_x[2132469])
    (1343749 'move' ret[1337802] str[1337846])
    gotoReturn _end_stringify[1338471] _end_stringify[1338471]
    label _end_stringify[1338471]
    (1837605 '=' _retArg[1837603] ret[1337802])
    (1837611 return _void[55])
  }
  val _arg_to_proto_names[246561]:heap__tuple_6_star_string[2085326] "dead at end of block" "insert auto destroy" "private"
  function channel(true,dynamic,true)[1021825].writeln[1392223](const  ref arg this[1392229]:channel(true,dynamic,true)[1021825], const  ref arg _e0_args[1392231]:[domain(1,int(64),false)] real(64)[1365840], ref arg error_out[1812336]:Error[167938]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1392235]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1392282]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1392308]:ioNewline[238701] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1392360]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1392364 'move' default_arg_skipWhitespaceOnly[1392360] 0)
    (1392311 call init[893669] initTemp[1392308] default_arg_skipWhitespaceOnly[1392360])
    (1392284 'move' call_tmp[1392282] initTemp[1392308])
    const-val call_tmp[1392288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1812341]:Error[167938] "error variable" "temp"
    (1812343 'move' error[1812341] nil[44])
    ref i__e1_args[2319087]:ioNewline[238701] "temp"
    (2319091 'move' i__e1_args[2319087](2319089 'set reference' call_tmp[1392282]))
    ref i_error_out[2319093]:Error[167938] "temp"
    (2319097 'move' i_error_out[2319093](2319095 'set reference' error[1812341]))
    const-val args[2319100]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "insert auto destroy"
    val this_x0[2338891]:[domain(1,int(64),false)] real(64)[1365840]
    const-ref this_x1[2338893]:ioNewline[238701]
    (2319104 'move' this_x0[2338891] _e0_args[1392231])
    (2319108 'move' this_x1[2338893] i__e1_args[2319087])
    (2338899 '.=' args[2319100] x0[1392590] this_x0[2338891])
    (2338903 '.=' args[2319100] x1[1392592] this_x1[2338893])
    val ret[2319115]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2319117]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2319119]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319121 'move' call_tmp[2319119](2319123 '.' this[1392229] _readWriteThisFromLocale[1021822]))
    val ret[2319126]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2319128]:locale[28] "dead after last mention" "temp"
    (2319131 call init=[90167] tmp[2319128] call_tmp[2319119])
    (2319134 'move' ret[2319126] tmp[2319128])
    val ret[2319137]:locale[28] "dead at end of block" "insert auto destroy"
    (2319139 'move' ret[2319137] ret[2319126])
    const-val call_tmp[2319142]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319144 'move' call_tmp[2319142](2319147 call ==[782781] ret[2319137] nilLocale[89939]))
    if call_tmp[2319142]
    {
      const-val call_tmp[2319152]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2319154]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2319156]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2319158 'move' call_tmp[2319156](2319161 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2319164 'move' call_tmp[2319154] call_tmp[2319156])
      const-val call_tmp[2319167]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2319169]:locale[28] "temp"
      (2319172 call chpl_localeID_to_locale[92849] call_tmp[2319154] ret_tmp[2319169])
      (2319175 'move' call_tmp[2319167] ret_tmp[2319169])
      (2319178 'move' call_tmp[2319152] call_tmp[2319167])
      (2319182 call =[90631] ret[2319137] call_tmp[2319152])
      ref i_x[2319185]:locale[28] "temp"
      (2319187 'move' i_x[2319185](2319189 'set reference' call_tmp[2319152]))
      (2319192 call deinit[90185] i_x[2319185])
    }
    (2319195 'move' ret[2319117] ret[2319137])
    const-val origLocale[2319198]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2319200 'move' origLocale[2319198] ret[2319117])
    const-val tmp[2319203]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2319205]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319207 'move' call_tmp[2319205](2319209 '.' this[1392229] home[1021813]))
    const-val call_tmp[2319212]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319214]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319216 'move' coerce_tmp[2319214](2319218 '.v' call_tmp[2319205] _instance[89975]))
    val coerce_tmp[2319221]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319223 'move' coerce_tmp[2319221](2319225 'cast' object[22] coerce_tmp[2319214]))
    const-val call_tmp[2319228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319230 'move' call_tmp[2319228](2319232 'ptr_eq' coerce_tmp[2319221] nil[44]))
    if call_tmp[2319228]
    {
      (2319238 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319241 'move' call_tmp[2319212](2319243 '_wide_get_locale' coerce_tmp[2319214]))
    (2319245 'move' tmp[2319203] call_tmp[2319212])
    val error[2319248]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2319250 'move' error[2319248] nil[44])
    val rvfDerefTmp[2319253]:channel(true,dynamic,true)[1021825] "temp"
    (2319255 'move' rvfDerefTmp[2319253](2319257 'deref' this[1392229]))
    val rvfDerefTmp[2319259]:locale[28] "temp"
    (2319261 'move' rvfDerefTmp[2319259] origLocale[2319198])
    val isdirect[2319264]:bool[10] "temp"
    (2319266 'move' isdirect[2319264](2319269 call chpl_doDirectExecuteOn[187423] call_tmp[2319212]))
    if isdirect[2319264]
    {
      (2319274 call on_fn[1392469] rvfDerefTmp[2319253] args[2319100] rvfDerefTmp[2319259] error[2319248])
    }
    {
      val _args_foron_fn[2319280]:_class_localson_fn[2094107] "temp"
      (2319282 'move' _args_foron_fn[2319280](2319284 'stack allocate class' _class_localson_fn[2094107]))
      (2319286 '.=' _args_foron_fn[2319280] _0_tmp[2094110] tmp[2319203])
      (2319290 '.=' _args_foron_fn[2319280] _1_rvfDerefTmp[2094112] rvfDerefTmp[2319253])
      ref tmp[2319294]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
      (2319296 'move' tmp[2319294](2319298 'set reference' args[2319100]))
      (2319300 '.=' _args_foron_fn[2319280] _2_args[2094114] tmp[2319294])
      (2319304 '.=' _args_foron_fn[2319280] _3_rvfDerefTmp[2094116] rvfDerefTmp[2319259])
      ref tmp[2319308]:Error[167938] "temp"
      (2319310 'move' tmp[2319308](2319312 'set reference' error[2319248]))
      (2319314 '.=' _args_foron_fn[2319280] _4_error[2094118] tmp[2319308])
      val _args_vforon_fn[2319318]:c_void_ptr[149] "temp"
      (2319320 'move' _args_vforon_fn[2319318](2319322 'cast_to_void_star' _args_foron_fn[2319280]))
      val _args_sizeon_fn[2319324]:int(64)[13] "temp"
      (2319326 'move' _args_sizeon_fn[2319324](2319328 'sizeof_bundle' _class_localson_fn[2094107]))
      on(2319331 call wrapon_fn[2094171] tmp[2319203] _args_vforon_fn[2319318] _args_sizeon_fn[2319324] _args_foron_fn[2319280])
    }
    val errorExists[2319337]:bool[10] "temp"
    (2319339 'move' errorExists[2319337](2319341 '!=' error[2319248] nil[44]))
    if errorExists[2319337]
    {
      (2319346 '=' i_error_out[2319093] error[2319248])
      ref i_x[2319349]:locale[28] "temp"
      (2319351 'move' i_x[2319349](2319353 'set reference' origLocale[2319198]))
      (2319356 call deinit[90185] i_x[2319349])
      gotoErrorHandlingReturn _endwrite[2319373] _endwrite[2319373]
    }
    (2319361 'move' ret[2319115] 1)
    ref i_x[2319364]:locale[28] "temp"
    (2319366 'move' i_x[2319364](2319368 'set reference' origLocale[2319198]))
    (2319371 call deinit[90185] i_x[2319364])
    label _endwrite[2319373]
    (1392290 'move' call_tmp[1392288] ret[2319115])
    val errorExists[2110000]:bool[10] "temp"
    (2110005 'move' errorExists[2110000](2110002 '!=' error[1812341] nil[44]))
    if errorExists[2110000]
    {
      (1812347 '=' error_out[1812336] error[1812341])
      ref i_x[2328313]:ioNewline[238701] "temp"
      (2328317 'move' i_x[2328313](2328315 'set reference' call_tmp[1392282]))
      gotoErrorHandlingReturn _endwriteln[1812338] _endwriteln[1812338]
    }
    (1432666 'move' ret[1392235] call_tmp[1392288])
    ref i_x[2328322]:ioNewline[238701] "temp"
    (2328326 'move' i_x[2328322](2328324 'set reference' call_tmp[1392282]))
    label _endwriteln[1812338]
    (1392304 return ret[1392235])
  }
  function channel(true,dynamic,true)[1021825].writeln[1432955](const  ref arg this[1432961]:channel(true,dynamic,true)[1021825], const in arg _e0_args[1432963]:int(64)[13], ref arg error_out[1813598]:Error[167938]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1432967]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1432977]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1433003]:ioNewline[238701] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1433022]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1433026 'move' default_arg_skipWhitespaceOnly[1433022] 0)
    (1433006 call init[893669] initTemp[1433003] default_arg_skipWhitespaceOnly[1433022])
    (1432979 'move' call_tmp[1432977] initTemp[1433003])
    const-val call_tmp[1432983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1813603]:Error[167938] "error variable" "temp"
    (1813605 'move' error[1813603] nil[44])
    ref i__e1_args[2324524]:ioNewline[238701] "temp"
    (2324528 'move' i__e1_args[2324524](2324526 'set reference' call_tmp[1432977]))
    ref i_error_out[2324530]:Error[167938] "temp"
    (2324534 'move' i_error_out[2324530](2324532 'set reference' error[1813603]))
    const-val args[2324537]:(int(64),ioNewline)[1433256] "insert auto destroy"
    val this_x0[2350739]:int(64)[13]
    const-ref this_x1[2350741]:ioNewline[238701]
    (2324541 'move' this_x0[2350739] _e0_args[1432963])
    (2324545 'move' this_x1[2350741] i__e1_args[2324524])
    (2350747 '.=' args[2324537] x0[1433252] this_x0[2350739])
    (2350751 '.=' args[2324537] x1[1433254] this_x1[2350741])
    val ret[2324552]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2324554]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2324556]:locale[28] "dead after last mention" "maybe param" "temp"
    (2324558 'move' call_tmp[2324556](2324560 '.' this[1432961] _readWriteThisFromLocale[1021822]))
    val ret[2324563]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2324565]:locale[28] "dead after last mention" "temp"
    (2324568 call init=[90167] tmp[2324565] call_tmp[2324556])
    (2324571 'move' ret[2324563] tmp[2324565])
    val ret[2324574]:locale[28] "dead at end of block" "insert auto destroy"
    (2324576 'move' ret[2324574] ret[2324563])
    const-val call_tmp[2324579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324581 'move' call_tmp[2324579](2324584 call ==[782781] ret[2324574] nilLocale[89939]))
    if call_tmp[2324579]
    {
      const-val call_tmp[2324589]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2324591]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2324593]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2324595 'move' call_tmp[2324593](2324598 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2324601 'move' call_tmp[2324591] call_tmp[2324593])
      const-val call_tmp[2324604]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2324606]:locale[28] "temp"
      (2324609 call chpl_localeID_to_locale[92849] call_tmp[2324591] ret_tmp[2324606])
      (2324612 'move' call_tmp[2324604] ret_tmp[2324606])
      (2324615 'move' call_tmp[2324589] call_tmp[2324604])
      (2324619 call =[90631] ret[2324574] call_tmp[2324589])
      ref i_x[2324622]:locale[28] "temp"
      (2324624 'move' i_x[2324622](2324626 'set reference' call_tmp[2324589]))
      (2324629 call deinit[90185] i_x[2324622])
    }
    (2324632 'move' ret[2324554] ret[2324574])
    const-val origLocale[2324635]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2324637 'move' origLocale[2324635] ret[2324554])
    const-val tmp[2324640]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2324642]:locale[28] "dead after last mention" "maybe param" "temp"
    (2324644 'move' call_tmp[2324642](2324646 '.' this[1432961] home[1021813]))
    const-val call_tmp[2324649]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2324651]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324653 'move' coerce_tmp[2324651](2324655 '.v' call_tmp[2324642] _instance[89975]))
    val coerce_tmp[2324658]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324660 'move' coerce_tmp[2324658](2324662 'cast' object[22] coerce_tmp[2324651]))
    const-val call_tmp[2324665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324667 'move' call_tmp[2324665](2324669 'ptr_eq' coerce_tmp[2324658] nil[44]))
    if call_tmp[2324665]
    {
      (2324675 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2324678 'move' call_tmp[2324649](2324680 '_wide_get_locale' coerce_tmp[2324651]))
    (2324682 'move' tmp[2324640] call_tmp[2324649])
    val error[2324685]:Error[167938] "concurrently accessed" "error variable" "temp"
    (2324687 'move' error[2324685] nil[44])
    val rvfDerefTmp[2324690]:channel(true,dynamic,true)[1021825] "temp"
    (2324692 'move' rvfDerefTmp[2324690](2324694 'deref' this[1432961]))
    val rvfDerefTmp[2324696]:locale[28] "temp"
    (2324698 'move' rvfDerefTmp[2324696] origLocale[2324635])
    val isdirect[2324701]:bool[10] "temp"
    (2324703 'move' isdirect[2324701](2324706 call chpl_doDirectExecuteOn[187423] call_tmp[2324649]))
    if isdirect[2324701]
    {
      (2324711 call on_fn[1433131] rvfDerefTmp[2324690] args[2324537] rvfDerefTmp[2324696] error[2324685])
    }
    {
      val _args_foron_fn[2324717]:_class_localson_fn[2095274] "temp"
      (2324719 'move' _args_foron_fn[2324717](2324721 'stack allocate class' _class_localson_fn[2095274]))
      (2324723 '.=' _args_foron_fn[2324717] _0_tmp[2095277] tmp[2324640])
      (2324727 '.=' _args_foron_fn[2324717] _1_rvfDerefTmp[2095279] rvfDerefTmp[2324690])
      ref tmp[2324731]:(int(64),ioNewline)[1433256] "temp"
      (2324733 'move' tmp[2324731](2324735 'set reference' args[2324537]))
      (2324737 '.=' _args_foron_fn[2324717] _2_args[2095281] tmp[2324731])
      (2324741 '.=' _args_foron_fn[2324717] _3_rvfDerefTmp[2095283] rvfDerefTmp[2324696])
      ref tmp[2324745]:Error[167938] "temp"
      (2324747 'move' tmp[2324745](2324749 'set reference' error[2324685]))
      (2324751 '.=' _args_foron_fn[2324717] _4_error[2095285] tmp[2324745])
      val _args_vforon_fn[2324755]:c_void_ptr[149] "temp"
      (2324757 'move' _args_vforon_fn[2324755](2324759 'cast_to_void_star' _args_foron_fn[2324717]))
      val _args_sizeon_fn[2324761]:int(64)[13] "temp"
      (2324763 'move' _args_sizeon_fn[2324761](2324765 'sizeof_bundle' _class_localson_fn[2095274]))
      on(2324768 call wrapon_fn[2095338] tmp[2324640] _args_vforon_fn[2324755] _args_sizeon_fn[2324761] _args_foron_fn[2324717])
    }
    val errorExists[2324774]:bool[10] "temp"
    (2324776 'move' errorExists[2324774](2324778 '!=' error[2324685] nil[44]))
    if errorExists[2324774]
    {
      (2324783 '=' i_error_out[2324530] error[2324685])
      ref i_x[2324786]:locale[28] "temp"
      (2324788 'move' i_x[2324786](2324790 'set reference' origLocale[2324635]))
      (2324793 call deinit[90185] i_x[2324786])
      gotoErrorHandlingReturn _endwrite[2324810] _endwrite[2324810]
    }
    (2324798 'move' ret[2324552] 1)
    ref i_x[2324801]:locale[28] "temp"
    (2324803 'move' i_x[2324801](2324805 'set reference' origLocale[2324635]))
    (2324808 call deinit[90185] i_x[2324801])
    label _endwrite[2324810]
    (1432985 'move' call_tmp[1432983] ret[2324552])
    val errorExists[2110568]:bool[10] "temp"
    (2110573 'move' errorExists[2110568](2110570 '!=' error[1813603] nil[44]))
    if errorExists[2110568]
    {
      (1813609 '=' error_out[1813598] error[1813603])
      ref i_x[2328331]:ioNewline[238701] "temp"
      (2328335 'move' i_x[2328331](2328333 'set reference' call_tmp[1432977]))
      gotoErrorHandlingReturn _endwriteln[1813600] _endwriteln[1813600]
    }
    (1433823 'move' ret[1432967] call_tmp[1432983])
    ref i_x[2328340]:ioNewline[238701] "temp"
    (2328344 'move' i_x[2328340](2328342 'set reference' call_tmp[1432977]))
    label _endwriteln[1813600]
    (1432999 return ret[1432967])
  }
  function channel(true,dynamic,false)[1060947].close[1062362](const  ref arg this[1062368]:channel(true,dynamic,false)[1060947], ref arg error_out[1809834]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1062374]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062376 'move' call_tmp[1062374] 0)
    val err[1062380]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1062520]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207358]:syserr[223584] "temp"
    (2207362 'move' i_ret[2207358](2207360 'set reference' init_coerce_tmp[1062520]))
    const-val call_tmp[2207365]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207367 'move' call_tmp[2207365](2207370 call qio_int_to_err[223634] call_tmp[1062374]))
    (2207372 '=' i_ret[2207358] call_tmp[2207365])
    (1062382 'move' err[1062380] init_coerce_tmp[1062520])
    const-ref call_tmp[1062387]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263638]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263640 'move' call_tmp[2263638](2263642 '.' this[1062368] _channel_internal[1060940]))
    (1062389 'move' call_tmp[1062387] call_tmp[2263638])
    const-val call_tmp[1062395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062569]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062573 'move' coerce_tmp[1062569](1062571 'deref' call_tmp[1062387]))
    const-val call_tmp[2263924]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263926 'move' call_tmp[2263924](2263928 'cast' c_void_ptr[149] coerce_tmp[1062569]))
    const-val call_tmp[2263931]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263933 'move' call_tmp[2263931](2263935 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2263938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263940 'move' call_tmp[2263938](2263942 'ptr_eq' call_tmp[2263924] call_tmp[2263931]))
    (1062397 'move' call_tmp[1062395] call_tmp[2263938])
    const-val call_tmp[1062402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062404 'move' call_tmp[1062402] call_tmp[1062395])
    if call_tmp[1062402]
    {
      const-val call_tmp[1062411]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062584]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062590 'move' coerce_tmp[1062584](1062586 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832551]:owned SystemError[1000238] "temp"
      (1062419 call fromSyserr[1017113] coerce_tmp[1062584] "cannot close invalid channel" ret_tmp[1832551])
      (1832554 'move' call_tmp[1062411] ret_tmp[1832551])
      val call_tmp[1062422]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062593]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832485]:owned Error[966458] "temp"
      ref i_x[2226288]:owned SystemError[1000238] "temp"
      (2226292 'move' i_x[2226288](2226290 'set reference' call_tmp[1062411]))
      ref i__retArg[2226294]:owned Error[966458] "temp"
      (2226298 'move' i__retArg[2226294](2226296 'set reference' ret_tmp[1832485]))
      val _formal_tmp_x[2226301]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226303 'move' _formal_tmp_x[2226301] i_x[2226288])
      const-val ret[2226306]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226308]:owned SystemError[1000238] "temp"
      (2226310 'move' i_this[2226308](2226312 'set reference' _formal_tmp_x[2226301]))
      val coerce_tmp[2226314]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226316 'move' coerce_tmp[2226314](2226318 '.v' i_this[2226308] chpl_p[1000233]))
      val call_tmp[2226321]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226323 'move' call_tmp[2226321](2226325 'cast' Error[167938] coerce_tmp[2226314]))
      val castPtr[2226328]:Error[167938] "dead at end of block" "insert auto destroy"
      (2226330 'move' castPtr[2226328] call_tmp[2226321])
      ref i_this[2226333]:owned SystemError[1000238] "temp"
      (2226335 'move' i_this[2226333](2226337 'set reference' _formal_tmp_x[2226301]))
      val tmp[2226339]:SystemError[264845] "temp"
      (2226341 'move' tmp[2226339](2226343 'cast' SystemError[264845] nil[44]))
      (2226346 '.=' i_this[2226333] chpl_p[1000233] tmp[2226339])
      val coerce_tmp[2226350]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226352 'move' coerce_tmp[2226350](2226354 'cast' object[22] call_tmp[2226321]))
      const-val call_tmp[2226357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226359 'move' call_tmp[2226357](2226361 'ptr_eq' coerce_tmp[2226350] nil[44]))
      if call_tmp[2226357]
      {
        (2226367 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226370]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226372]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2226375 call init[968094] initTemp[2226372] castPtr[2226328])
      (2226378 'move' call_tmp[2226370] initTemp[2226372])
      (2226381 'move' ret[2226306] call_tmp[2226370])
      (2226385 call chpl__autoDestroy[1516200] _formal_tmp_x[2226301])
      (2226389 '=' i__retArg[2226294] ret[2226306])
      (1832488 'move' coerce_tmp[1062593] ret_tmp[1832485])
      const-val _formal_tmp_in_err[1062772]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062776 'move' _formal_tmp_in_err[1062772] coerce_tmp[1062593])
      (1062424 'move' call_tmp[1062422](1062427 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1062772]))
      val castedError[1809839]:Error[167938] "temp"
      (1809845 'move' castedError[1809839] call_tmp[1062422])
      (1809847 '=' error_out[1809834] castedError[1809839])
      gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
    }
    const-val tmp[1062432]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1062434]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263474]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263476 'move' call_tmp[2263474](2263478 '.' this[1062368] home[1060935]))
    (1062436 'move' call_tmp[1062434] call_tmp[2263474])
    const-val call_tmp[1062442]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062782]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165527]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165529 'move' coerce_tmp[2165527](2165531 '.v' call_tmp[1062434] _instance[89975]))
    val coerce_tmp[2165534]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165536 'move' coerce_tmp[2165534](2165538 'cast' object[22] coerce_tmp[2165527]))
    const-val call_tmp[2165541]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165543 'move' call_tmp[2165541](2165545 'ptr_eq' coerce_tmp[2165534] nil[44]))
    if call_tmp[2165541]
    {
      (2165551 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062787 'move' _locale_tmp_[1062782] coerce_tmp[2165527])
    (1062444 'move' call_tmp[1062442](1062446 '_wide_get_locale' _locale_tmp_[1062782]))
    (1062448 'move' tmp[1062432] call_tmp[1062442])
    val rvfDerefTmp[2083738]:channel(true,dynamic,false)[1060947] "temp"
    (2083742 'move' rvfDerefTmp[2083738](2083740 'deref' this[1062368]))
    val isdirect[2089507]:bool[10] "temp"
    (2089512 'move' isdirect[2089507](2089509 call chpl_doDirectExecuteOn[187423] tmp[1062432]))
    if isdirect[2089507]
    {
      (2089516 call on_fn[1062455] rvfDerefTmp[2083738] err[1062380])
    }
    {
      val _args_foron_fn[2089534]:_class_localson_fn[2089524] "temp"
      (2089538 'move' _args_foron_fn[2089534](2089536 'stack allocate class' _class_localson_fn[2089524]))
      (2089540 '.=' _args_foron_fn[2089534] _0_tmp[2089527] tmp[1062432])
      (2089544 '.=' _args_foron_fn[2089534] _1_rvfDerefTmp[2089529] rvfDerefTmp[2083738])
      ref tmp[2089548]:syserr[223584] "temp"
      (2089552 'move' tmp[2089548](2089550 'set reference' err[1062380]))
      (2089554 '.=' _args_foron_fn[2089534] _2_err[2089531] tmp[2089548])
      val _args_vforon_fn[2089558]:c_void_ptr[149] "temp"
      (2089562 'move' _args_vforon_fn[2089558](2089560 'cast_to_void_star' _args_foron_fn[2089534]))
      val _args_sizeon_fn[2089564]:int(64)[13] "temp"
      (2089568 'move' _args_sizeon_fn[2089564](2089566 'sizeof_bundle' _class_localson_fn[2089524]))
      on(2089608 call wrapon_fn[2089570] tmp[1062432] _args_vforon_fn[2089558] _args_sizeon_fn[2089564] _args_foron_fn[2089534])
    }
    const-val call_tmp[1062495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206824]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206826 'move' call_tmp[2206824](2206829 call qio_err_iserr[223646] err[1062380]))
    const-val call_tmp[2206831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206833 'move' call_tmp[2206831](2206835 '!=' call_tmp[2206824] 0))
    (1062497 'move' call_tmp[1062495] call_tmp[2206831])
    if call_tmp[1062495]
    {
      val error[1809851]:Error[167938] "error variable" "temp"
      (1809860 'move' error[1809851] nil[44])
      (1062509 call _ch_ioerror[1062865] this[1062368] err[1062380] "in channel.close" error[1809851])
      val errorExists[2108768]:bool[10] "temp"
      (2108773 'move' errorExists[2108768](2108770 '!=' error[1809851] nil[44]))
      if errorExists[2108768]
      {
        gotoErrorHandling handler[1809852] handler[1809852]
      }
      label handler[1809852]
      const-val shouldHandleError[1809871]:bool[10] "temp"
      val errorExists[2108776]:bool[10] "temp"
      (2108781 'move' errorExists[2108776](2108778 '!=' error[1809851] nil[44]))
      (1809875 'move' shouldHandleError[1809871] errorExists[2108776])
      if shouldHandleError[1809871]
      {
        (1809867 '=' error_out[1809834] error[1809851])
        gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
      }
    }
    label _endclose[1809836]
    (1062516 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].close[1082094](const  ref arg this[1082100]:channel(false,dynamic,false)[1080682], ref arg error_out[1810630]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1082106]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082108 'move' call_tmp[1082106] 0)
    val err[1082112]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082252]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207453]:syserr[223584] "temp"
    (2207457 'move' i_ret[2207453](2207455 'set reference' init_coerce_tmp[1082252]))
    const-val call_tmp[2207460]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207462 'move' call_tmp[2207460](2207465 call qio_int_to_err[223634] call_tmp[1082106]))
    (2207467 '=' i_ret[2207453] call_tmp[2207460])
    (1082114 'move' err[1082112] init_coerce_tmp[1082252])
    const-ref call_tmp[1082119]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270053]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270055 'move' call_tmp[2270053](2270057 '.' this[1082100] _channel_internal[1080675]))
    (1082121 'move' call_tmp[1082119] call_tmp[2270053])
    const-val call_tmp[1082127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082259]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082263 'move' coerce_tmp[1082259](1082261 'deref' call_tmp[1082119]))
    const-val call_tmp[2263972]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263974 'move' call_tmp[2263972](2263976 'cast' c_void_ptr[149] coerce_tmp[1082259]))
    const-val call_tmp[2263979]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263981 'move' call_tmp[2263979](2263983 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2263986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263988 'move' call_tmp[2263986](2263990 'ptr_eq' call_tmp[2263972] call_tmp[2263979]))
    (1082129 'move' call_tmp[1082127] call_tmp[2263986])
    const-val call_tmp[1082134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082136 'move' call_tmp[1082134] call_tmp[1082127])
    if call_tmp[1082134]
    {
      const-val call_tmp[1082143]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082268]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082274 'move' coerce_tmp[1082268](1082270 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832563]:owned SystemError[1000238] "temp"
      (1082151 call fromSyserr[1017113] coerce_tmp[1082268] "cannot close invalid channel" ret_tmp[1832563])
      (1832566 'move' call_tmp[1082143] ret_tmp[1832563])
      val call_tmp[1082154]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082277]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832503]:owned Error[966458] "temp"
      ref i_x[2226606]:owned SystemError[1000238] "temp"
      (2226610 'move' i_x[2226606](2226608 'set reference' call_tmp[1082143]))
      ref i__retArg[2226612]:owned Error[966458] "temp"
      (2226616 'move' i__retArg[2226612](2226614 'set reference' ret_tmp[1832503]))
      val _formal_tmp_x[2226619]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226621 'move' _formal_tmp_x[2226619] i_x[2226606])
      const-val ret[2226624]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226626]:owned SystemError[1000238] "temp"
      (2226628 'move' i_this[2226626](2226630 'set reference' _formal_tmp_x[2226619]))
      val coerce_tmp[2226632]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226634 'move' coerce_tmp[2226632](2226636 '.v' i_this[2226626] chpl_p[1000233]))
      val call_tmp[2226639]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226641 'move' call_tmp[2226639](2226643 'cast' Error[167938] coerce_tmp[2226632]))
      val castPtr[2226646]:Error[167938] "dead at end of block" "insert auto destroy"
      (2226648 'move' castPtr[2226646] call_tmp[2226639])
      ref i_this[2226651]:owned SystemError[1000238] "temp"
      (2226653 'move' i_this[2226651](2226655 'set reference' _formal_tmp_x[2226619]))
      val tmp[2226657]:SystemError[264845] "temp"
      (2226659 'move' tmp[2226657](2226661 'cast' SystemError[264845] nil[44]))
      (2226664 '.=' i_this[2226651] chpl_p[1000233] tmp[2226657])
      val coerce_tmp[2226668]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226670 'move' coerce_tmp[2226668](2226672 'cast' object[22] call_tmp[2226639]))
      const-val call_tmp[2226675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226677 'move' call_tmp[2226675](2226679 'ptr_eq' coerce_tmp[2226668] nil[44]))
      if call_tmp[2226675]
      {
        (2226685 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226688]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226690]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2226693 call init[968094] initTemp[2226690] castPtr[2226646])
      (2226696 'move' call_tmp[2226688] initTemp[2226690])
      (2226699 'move' ret[2226624] call_tmp[2226688])
      (2226703 call chpl__autoDestroy[1516200] _formal_tmp_x[2226619])
      (2226707 '=' i__retArg[2226612] ret[2226624])
      (1832506 'move' coerce_tmp[1082277] ret_tmp[1832503])
      const-val _formal_tmp_in_err[1082456]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082460 'move' _formal_tmp_in_err[1082456] coerce_tmp[1082277])
      (1082156 'move' call_tmp[1082154](1082159 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1082456]))
      val castedError[1810635]:Error[167938] "temp"
      (1810641 'move' castedError[1810635] call_tmp[1082154])
      (1810643 '=' error_out[1810630] castedError[1810635])
      gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
    }
    const-val tmp[1082164]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-ref call_tmp[1082166]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2269979]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269981 'move' call_tmp[2269979](2269983 '.' this[1082100] home[1080670]))
    (1082168 'move' call_tmp[1082166] call_tmp[2269979])
    const-val call_tmp[1082174]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082466]:BaseLocale[91201] "dead after last mention" "temp"
    val coerce_tmp[2165797]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165799 'move' coerce_tmp[2165797](2165801 '.v' call_tmp[1082166] _instance[89975]))
    val coerce_tmp[2165804]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165806 'move' coerce_tmp[2165804](2165808 'cast' object[22] coerce_tmp[2165797]))
    const-val call_tmp[2165811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165813 'move' call_tmp[2165811](2165815 'ptr_eq' coerce_tmp[2165804] nil[44]))
    if call_tmp[2165811]
    {
      (2165821 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082471 'move' _locale_tmp_[1082466] coerce_tmp[2165797])
    (1082176 'move' call_tmp[1082174](1082178 '_wide_get_locale' _locale_tmp_[1082466]))
    (1082180 'move' tmp[1082164] call_tmp[1082174])
    val rvfDerefTmp[2083916]:channel(false,dynamic,false)[1080682] "temp"
    (2083920 'move' rvfDerefTmp[2083916](2083918 'deref' this[1082100]))
    val isdirect[2090728]:bool[10] "temp"
    (2090733 'move' isdirect[2090728](2090730 call chpl_doDirectExecuteOn[187423] tmp[1082164]))
    if isdirect[2090728]
    {
      (2090737 call on_fn[1082187] rvfDerefTmp[2083916] err[1082112])
    }
    {
      val _args_foron_fn[2090755]:_class_localson_fn[2090745] "temp"
      (2090759 'move' _args_foron_fn[2090755](2090757 'stack allocate class' _class_localson_fn[2090745]))
      (2090761 '.=' _args_foron_fn[2090755] _0_tmp[2090748] tmp[1082164])
      (2090765 '.=' _args_foron_fn[2090755] _1_rvfDerefTmp[2090750] rvfDerefTmp[2083916])
      ref tmp[2090769]:syserr[223584] "temp"
      (2090773 'move' tmp[2090769](2090771 'set reference' err[1082112]))
      (2090775 '.=' _args_foron_fn[2090755] _2_err[2090752] tmp[2090769])
      val _args_vforon_fn[2090779]:c_void_ptr[149] "temp"
      (2090783 'move' _args_vforon_fn[2090779](2090781 'cast_to_void_star' _args_foron_fn[2090755]))
      val _args_sizeon_fn[2090785]:int(64)[13] "temp"
      (2090789 'move' _args_sizeon_fn[2090785](2090787 'sizeof_bundle' _class_localson_fn[2090745]))
      on(2090829 call wrapon_fn[2090791] tmp[1082164] _args_vforon_fn[2090779] _args_sizeon_fn[2090785] _args_foron_fn[2090755])
    }
    const-val call_tmp[1082227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206892]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206894 'move' call_tmp[2206892](2206897 call qio_err_iserr[223646] err[1082112]))
    const-val call_tmp[2206899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206901 'move' call_tmp[2206899](2206903 '!=' call_tmp[2206892] 0))
    (1082229 'move' call_tmp[1082227] call_tmp[2206899])
    if call_tmp[1082227]
    {
      val error[1810647]:Error[167938] "error variable" "temp"
      (1810656 'move' error[1810647] nil[44])
      (1082241 call _ch_ioerror[1082549] this[1082100] err[1082112] "in channel.close" error[1810647])
      val errorExists[2109128]:bool[10] "temp"
      (2109133 'move' errorExists[2109128](2109130 '!=' error[1810647] nil[44]))
      if errorExists[2109128]
      {
        gotoErrorHandling handler[1810648] handler[1810648]
      }
      label handler[1810648]
      const-val shouldHandleError[1810667]:bool[10] "temp"
      val errorExists[2109136]:bool[10] "temp"
      (2109141 'move' errorExists[2109136](2109138 '!=' error[1810647] nil[44]))
      (1810671 'move' shouldHandleError[1810667] errorExists[2109136])
      if shouldHandleError[1810667]
      {
        (1810663 '=' error_out[1810630] error[1810647])
        gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
      }
    }
    label _endclose[1810632]
    (1082248 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].readBytes[1082839](const  ref arg this[1082845]:channel(false,dynamic,false)[1080682], const in arg x[1082847]:c_ptr(uint(8))[937423], const in arg len[1082851]:int(64)[13], ref arg error_out[1810756]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1082859]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830559]:locale[28] "temp"
    ref i__retArg[2167812]:locale[28] "temp"
    (2167816 'move' i__retArg[2167812](2167814 'set reference' ret_tmp[1830559]))
    const-val call_tmp[2167819]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167821]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167823 'move' call_tmp[2167821](2167826 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167829 'move' call_tmp[2167819] call_tmp[2167821])
    const-val call_tmp[2167832]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167834]:locale[28] "temp"
    (2167837 call chpl_localeID_to_locale[92849] call_tmp[2167819] ret_tmp[2167834])
    (2167840 'move' call_tmp[2167832] ret_tmp[2167834])
    (2167843 '=' i__retArg[2167812] call_tmp[2167832])
    (1830562 'move' call_tmp[1082859] ret_tmp[1830559])
    const-ref call_tmp[1082865]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2269999]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270001 'move' call_tmp[2269999](2270003 '.' this[1082845] home[1080670]))
    (1082867 'move' call_tmp[1082865] call_tmp[2269999])
    const-val call_tmp[1082873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082875 'move' call_tmp[1082873](1082878 call !=[782910] call_tmp[1082859] call_tmp[1082865]))
    const-val call_tmp[1082881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082883 'move' call_tmp[1082881] call_tmp[1082873])
    if call_tmp[1082881]
    {
      const-val call_tmp[1082890]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083047]:IllegalArgumentError[168200] "dead after last mention" "temp"
      (1083049 'move' new_temp[1083047](1083034 call _new[1064107] "bad remote channel.readBytes"))
      const-val initTemp[1083056]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "temp"
      (1083059 call init[1064209] initTemp[1083056] new_temp[1083047])
      (1082892 'move' call_tmp[1082890] initTemp[1083056])
      val call_tmp[1082899]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083073]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1833263]:owned Error[966458] "temp"
      ref i_x[2252574]:owned IllegalArgumentError[1064558] "temp"
      (2252578 'move' i_x[2252574](2252576 'set reference' call_tmp[1082890]))
      ref i__retArg[2252580]:owned Error[966458] "temp"
      (2252584 'move' i__retArg[2252580](2252582 'set reference' ret_tmp[1833263]))
      val _formal_tmp_x[2252587]:owned IllegalArgumentError[1064558] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2252589 'move' _formal_tmp_x[2252587] i_x[2252574])
      const-val ret[2252592]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2252594]:owned IllegalArgumentError[1064558] "temp"
      (2252596 'move' i_this[2252594](2252598 'set reference' _formal_tmp_x[2252587]))
      val coerce_tmp[2252600]:IllegalArgumentError[168200] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2252602 'move' coerce_tmp[2252600](2252604 '.v' i_this[2252594] chpl_p[1064553]))
      val call_tmp[2252607]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2252609 'move' call_tmp[2252607](2252611 'cast' Error[167938] coerce_tmp[2252600]))
      val castPtr[2252614]:Error[167938] "dead at end of block" "insert auto destroy"
      (2252616 'move' castPtr[2252614] call_tmp[2252607])
      ref i_this[2252619]:owned IllegalArgumentError[1064558] "temp"
      (2252621 'move' i_this[2252619](2252623 'set reference' _formal_tmp_x[2252587]))
      val tmp[2252625]:IllegalArgumentError[168200] "temp"
      (2252627 'move' tmp[2252625](2252629 'cast' IllegalArgumentError[168200] nil[44]))
      (2252632 '.=' i_this[2252619] chpl_p[1064553] tmp[2252625])
      val coerce_tmp[2252636]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2252638 'move' coerce_tmp[2252636](2252640 'cast' object[22] call_tmp[2252607]))
      const-val call_tmp[2252643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2252645 'move' call_tmp[2252643](2252647 'ptr_eq' coerce_tmp[2252636] nil[44]))
      if call_tmp[2252643]
      {
        (2252653 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2252656]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2252658]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2252661 call init[968094] initTemp[2252658] castPtr[2252614])
      (2252664 'move' call_tmp[2252656] initTemp[2252658])
      (2252667 'move' ret[2252592] call_tmp[2252656])
      (2252671 call chpl__autoDestroy[1538695] _formal_tmp_x[2252587])
      (2252675 '=' i__retArg[2252580] ret[2252592])
      (1833266 'move' coerce_tmp[1083073] ret_tmp[1833263])
      const-val _formal_tmp_in_err[1083252]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083256 'move' _formal_tmp_in_err[1083252] coerce_tmp[1083073])
      (1082901 'move' call_tmp[1082899](1082904 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1083252]))
      val castedError[1810761]:Error[167938] "temp"
      (1810767 'move' castedError[1810761] call_tmp[1082899])
      (1810769 '=' error_out[1810756] castedError[1810761])
      ref i_x[2264339]:locale[28] "temp"
      (2264343 'move' i_x[2264339](2264341 'set reference' call_tmp[1082859]))
      (2264347 call deinit[90185] i_x[2264339])
      gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
    }
    ref i_x[2264351]:locale[28] "temp"
    (2264355 'move' i_x[2264351](2264353 'set reference' call_tmp[1082859]))
    (2264359 call deinit[90185] i_x[2264351])
    const-ref call_tmp[1082909]:qio_channel_ptr_t[231465] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2270063]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270065 'move' call_tmp[2270063](2270067 '.' this[1082845] _channel_internal[1080675]))
    (1082911 'move' call_tmp[1082909] call_tmp[2270063])
    const-val call_tmp[1082917]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083309]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083315 'move' coerce_tmp[1083309](1083311 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083317]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083321 'move' coerce_tmp[1083317](1083319 'deref' call_tmp[1082909]))
    (1082919 'move' call_tmp[1082917](1082922 call qio_channel_read_amt[1083283] coerce_tmp[1083309] coerce_tmp[1083317] x[1082847] len[1082851]))
    const-val err[1082927]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1082929 'move' err[1082927] call_tmp[1082917])
    const-val call_tmp[1082933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206909]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206911 'move' call_tmp[2206909](2206914 call qio_err_iserr[223646] err[1082927]))
    const-val call_tmp[2206916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206918 'move' call_tmp[2206916](2206920 '!=' call_tmp[2206909] 0))
    (1082935 'move' call_tmp[1082933] call_tmp[2206916])
    if call_tmp[1082933]
    {
      val error[1810773]:Error[167938] "error variable" "temp"
      (1810782 'move' error[1810773] nil[44])
      (1082947 call _ch_ioerror[1082549] this[1082845] err[1082927] "in channel.readBytes" error[1810773])
      val errorExists[2109184]:bool[10] "temp"
      (2109189 'move' errorExists[2109184](2109186 '!=' error[1810773] nil[44]))
      if errorExists[2109184]
      {
        gotoErrorHandling handler[1810774] handler[1810774]
      }
      label handler[1810774]
      const-val shouldHandleError[1810793]:bool[10] "temp"
      val errorExists[2109192]:bool[10] "temp"
      (2109197 'move' errorExists[2109192](2109194 '!=' error[1810773] nil[44]))
      (1810797 'move' shouldHandleError[1810793] errorExists[2109192])
      if shouldHandleError[1810793]
      {
        (1810789 '=' error_out[1810756] error[1810773])
        gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
      }
    }
    label _endreadBytes[1810758]
    (1082954 return _void[55])
  }
  const-val stdin[250208]:channel(false,dynamic,true)[985627] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250235]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250264]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250494]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250499]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721866]:6*string[985051] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[723997]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724004]:channel(false,dynamic,true)[985627] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016897]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016961]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017009]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017587]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724009]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724014]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724021]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022472]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022536]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022587]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022624]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724026]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724031]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724038]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023908]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023919]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023930]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023941]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935597](ref arg this[1806914]:file[235580]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[715588]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216585]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216587 'move' call_tmp[2216585](2216589 '.' this[1806914] _file_internal[235568]))
    (715591 'move' call_tmp[715588] call_tmp[2216585])
    const-val coerce_tmp[985682]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (985686 'move' coerce_tmp[985682](985684 'deref' call_tmp[715588]))
    (235905 call qio_file_release[232638] coerce_tmp[985682])
    ref call_tmp[715595]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2216595]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216597 'move' call_tmp[2216595](2216599 '.' this[1806914] _file_internal[235568]))
    (715598 'move' call_tmp[715595] call_tmp[2216595])
    (2216179 '=' call_tmp[715595] QIO_FILE_PTR_NULL[231442])
    (935604 return _void[55])
  }
  function on_fn[935606](const in arg this[1806916]:file[235580], ref arg ret[1806918]:iostyle[231844], ref arg error_out[1809021]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1809025]:Error[167938] "error variable" "temp"
    (1809034 'move' error[1809025] nil[44])
    ref rvfRerefTmp[2083427]:file[235580] "temp"
    (2083431 'move' rvfRerefTmp[2083427](2083428 'set reference' this[1806916]))
    (235983 call checkAssumingLocal[235768] rvfRerefTmp[2083427] error[1809025])
    val errorExists[2108376]:bool[10] "temp"
    (2108381 'move' errorExists[2108376](2108378 '!=' error[1809025] nil[44]))
    if errorExists[2108376]
    {
      gotoErrorHandling handler[1809026] handler[1809026]
    }
    label handler[1809026]
    const-val shouldHandleError[1809045]:bool[10] "temp"
    val errorExists[2108384]:bool[10] "temp"
    (2108389 'move' errorExists[2108384](2108386 '!=' error[1809025] nil[44]))
    (1809049 'move' shouldHandleError[1809045] errorExists[2108384])
    if shouldHandleError[1809045]
    {
      (1809041 '=' error_out[1809021] error[1809025])
      gotoErrorHandlingReturn _endon_fn[1809023] _endon_fn[1809023]
    }
    val local_style[235989]:iostyle[231844] "dead at end of block" "insert auto destroy"
    const-ref call_tmp[715628]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083420]:file[235580] "temp"
    (2083424 'move' rvfRerefTmp[2083420](2083421 'set reference' this[1806916]))
    ref call_tmp[2216605]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216607 'move' call_tmp[2216605](2216609 '.' rvfRerefTmp[2083420] _file_internal[235568]))
    (715631 'move' call_tmp[715628] call_tmp[2216605])
    const-val coerce_tmp[1017571]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017575 'move' coerce_tmp[1017571](1017573 'deref' call_tmp[715628]))
    (235997 call qio_file_get_style[232821] coerce_tmp[1017571] local_style[235989])
    ref i__arg2[2216268]:iostyle[231844] "temp"
    (2216272 'move' i__arg2[2216268](2216270 'set reference' local_style[235989]))
    (2216275 '=' ret[1806918] i__arg2[2216268])
    label _endon_fn[1809023]
    (935613 return _void[55])
  }
  function on_fn[935615](const in arg this[1806920]:file[235580], ref arg err[1806922]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[715681]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083441]:file[235580] "temp"
    (2083445 'move' rvfRerefTmp[2083441](2083442 'set reference' this[1806920]))
    ref call_tmp[2216615]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216617 'move' call_tmp[2216615](2216619 '.' rvfRerefTmp[2083441] _file_internal[235568]))
    (715684 'move' call_tmp[715681] call_tmp[2216615])
    const-val call_tmp[715686]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060833]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060837 'move' coerce_tmp[1060833](1060835 'deref' call_tmp[715681]))
    (715689 'move' call_tmp[715686](236065 call qio_file_close[232748] coerce_tmp[1060833]))
    (2207138 '=' err[1806922] call_tmp[715686])
    (935622 return _void[55])
  }
  function on_fn[935633](const in arg this[1806924]:file[235580], ref arg err[1806926]:syserr[223584], ref arg ret[1806928]:string[26], ref arg error_out[1809053]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1809057]:Error[167938] "error variable" "temp"
    (1809066 'move' error[1809057] nil[44])
    ref rvfRerefTmp[2083469]:file[235580] "temp"
    (2083473 'move' rvfRerefTmp[2083469](2083470 'set reference' this[1806924]))
    (236241 call checkAssumingLocal[235768] rvfRerefTmp[2083469] error[1809057])
    val errorExists[2108392]:bool[10] "temp"
    (2108397 'move' errorExists[2108392](2108394 '!=' error[1809057] nil[44]))
    if errorExists[2108392]
    {
      gotoErrorHandling handler[1809058] handler[1809058]
    }
    label handler[1809058]
    const-val shouldHandleError[1809077]:bool[10] "temp"
    val errorExists[2108400]:bool[10] "temp"
    (2108405 'move' errorExists[2108400](2108402 '!=' error[1809057] nil[44]))
    (1809081 'move' shouldHandleError[1809077] errorExists[2108400])
    if shouldHandleError[1809077]
    {
      (1809073 '=' error_out[1809053] error[1809057])
      gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
    }
    val tmp[236247]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021467 'move' tmp[236247](1021465 'cast' c_string[19] nil[44]))
    val tmp2[236252]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021472 'move' tmp2[236252](1021470 'cast' c_string[19] nil[44]))
    const-ref call_tmp[715767]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083455]:file[235580] "temp"
    (2083459 'move' rvfRerefTmp[2083455](2083456 'set reference' this[1806924]))
    ref call_tmp[2216625]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216627 'move' call_tmp[2216625](2216629 '.' rvfRerefTmp[2083455] _file_internal[235568]))
    (715770 'move' call_tmp[715767] call_tmp[2216625])
    const-val call_tmp[715772]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019119]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019123 'move' coerce_tmp[1019119](1019121 'deref' call_tmp[715767]))
    (715775 'move' call_tmp[715772](236261 call qio_file_path[233679] coerce_tmp[1019119] tmp[236247]))
    (2207144 '=' err[1806926] call_tmp[715772])
    const-val call_tmp[715777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1807636]:syserr[223584] "temp"
    (1807639 'move' tmp[1807636](1807637 'deref' err[1806926]))
    const-val call_tmp[2206535]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206537 'move' call_tmp[2206535](2206540 call qio_err_iserr[223646] tmp[1807636]))
    const-val call_tmp[2206542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206544 'move' call_tmp[2206542](2206546 '==' call_tmp[2206535] 0))
    (715780 'move' call_tmp[715777] call_tmp[2206542])
    const-val call_tmp[715782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715785 'move' call_tmp[715782] call_tmp[715777])
    if call_tmp[715782]
    {
      const-ref call_tmp[715789]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083462]:file[235580] "temp"
      (2083466 'move' rvfRerefTmp[2083462](2083463 'set reference' this[1806924]))
      ref call_tmp[2216635]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
      (2216637 'move' call_tmp[2216635](2216639 '.' rvfRerefTmp[2083462] _file_internal[235568]))
      (715792 'move' call_tmp[715789] call_tmp[2216635])
      const-val call_tmp[715794]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019132]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019136 'move' coerce_tmp[1019132](1019134 'deref' call_tmp[715789]))
      (715797 'move' call_tmp[715794](236274 call qio_shortest_path[233695] coerce_tmp[1019132] tmp2[236252] tmp[236247]))
      (2207150 '=' err[1806926] call_tmp[715794])
    }
    ref i_cs[2120051]:c_string[19] "temp"
    (2120055 'move' i_cs[2120051](2120053 'set reference' tmp[236247]))
    const-val call_tmp[2120058]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120060 'move' call_tmp[2120058](2120062 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2120065]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120067 'move' call_tmp[2120065](2120069 'cast' c_string[19] call_tmp[2120058]))
    const-val coerce_tmp[2120072]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2120074 'move' coerce_tmp[2120072](2120076 'deref' i_cs[2120051]))
    const-val call_tmp[2120078]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120080 'move' call_tmp[2120078](2120082 'string_compare' coerce_tmp[2120072] call_tmp[2120065]))
    const-val call_tmp[2120085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120087 'move' call_tmp[2120085](2120089 '!=' call_tmp[2120078] 0))
    if call_tmp[2120085]
    {
      (2120095 call chpl_rt_free_c_string[22714] i_cs[2120051])
    }
    const-val call_tmp[715799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1807642]:syserr[223584] "temp"
    (1807645 'move' tmp[1807642](1807643 'deref' err[1806926]))
    const-val call_tmp[2206552]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206554 'move' call_tmp[2206552](2206557 call qio_err_iserr[223646] tmp[1807642]))
    const-val call_tmp[2206559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206561 'move' call_tmp[2206559](2206563 '==' call_tmp[2206552] 0))
    (715802 'move' call_tmp[715799] call_tmp[2206559])
    const-val call_tmp[715804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715807 'move' call_tmp[715804] call_tmp[715799])
    if call_tmp[715804]
    {
      const-val call_tmp[715809]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val default_arg_length[1019158]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      val error[1809086]:Error[167938] "error variable" "temp"
      (1809088 'move' error[1809086] nil[44])
      ref i_error_out[2203548]:Error[167938] "temp"
      (2203552 'move' i_error_out[2203548](2203550 'set reference' error[1809086]))
      val ret[2203555]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
      const-val call_tmp[2203557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203559 'move' call_tmp[2203557](2203561 'string_length_bytes' tmp2[236252]))
      (2203563 'move' ret[2203555] call_tmp[2203557])
      (1019163 'move' default_arg_length[1019158] ret[2203555])
      val errorExists[2108408]:bool[10] "temp"
      (2108413 'move' errorExists[2108408](2108410 '!=' error[1809086] nil[44]))
      if errorExists[2108408]
      {
        (1809092 '=' error_out[1809053] error[1809086])
        gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
      }
      val error[1809101]:Error[167938] "error variable" "temp"
      (1809103 'move' error[1809101] nil[44])
      const-val ret_tmp[1829039]:string[26] "temp"
      ref i_error_out[2141186]:Error[167938] "temp"
      (2141190 'move' i_error_out[2141186](2141188 'set reference' error[1809101]))
      ref i__retArg[2141192]:string[26] "temp"
      (2141196 'move' i__retArg[2141192](2141194 'set reference' ret_tmp[1829039]))
      const-val ret[2141199]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141201]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141203 'move' call_tmp[2141201](2141205 'cast' c_ptr(uint(8))[937423] tmp2[236252]))
      const-val call_tmp[2141208]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141210]:Error[167938] "error variable" "temp"
      (2141212 'move' error[2141210] nil[44])
      const-val ret[2141215]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141217]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141219]:Error[167938] "error variable" "temp"
      (2141221 'move' error[2141219] nil[44])
      const-val ret_tmp[2141224]:string[26] "temp"
      (2141227 call decodeByteBuffer[173892] call_tmp[2141201] default_arg_length[1019158] escape[173652] error[2141219] ret_tmp[2141224])
      (2141233 'move' call_tmp[2141217] ret_tmp[2141224])
      val errorExists[2141236]:bool[10] "temp"
      (2141238 'move' errorExists[2141236](2141240 '!=' error[2141219] nil[44]))
      if errorExists[2141236]
      {
        (2141245 '=' error[2141210] error[2141219])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141254] _endcreateStringWithNewBuffer[2141254]
      }
      (2141251 'move' ret[2141215] call_tmp[2141217])
      label _endcreateStringWithNewBuffer[2141254]
      (2141256 'move' call_tmp[2141208] ret[2141215])
      val errorExists[2141259]:bool[10] "temp"
      (2141261 'move' errorExists[2141259](2141263 '!=' error[2141210] nil[44]))
      if errorExists[2141259]
      {
        (2141268 '=' i_error_out[2141186] error[2141210])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141277] _endcreateStringWithNewBuffer[2141277]
      }
      (2141274 'move' ret[2141199] call_tmp[2141208])
      label _endcreateStringWithNewBuffer[2141277]
      (2141279 '=' i__retArg[2141192] ret[2141199])
      (1829042 'move' call_tmp[715809] ret_tmp[1829039])
      val errorExists[2108416]:bool[10] "temp"
      (2108421 'move' errorExists[2108416](2108418 '!=' error[1809101] nil[44]))
      if errorExists[2108416]
      {
        (1809107 '=' error_out[1809053] error[1809101])
        gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
      }
      (236301 call =[38269] ret[1806928] call_tmp[715809])
      ref i_x[2130381]:string[26] "temp"
      (2130385 'move' i_x[2130381](2130383 'set reference' call_tmp[715809]))
      (2130389 call deinit[30831] i_x[2130381])
    }
    ref i_cs[2120100]:c_string[19] "temp"
    (2120104 'move' i_cs[2120100](2120102 'set reference' tmp2[236252]))
    const-val call_tmp[2120107]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120109 'move' call_tmp[2120107](2120111 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2120114]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120116 'move' call_tmp[2120114](2120118 'cast' c_string[19] call_tmp[2120107]))
    const-val coerce_tmp[2120121]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2120123 'move' coerce_tmp[2120121](2120125 'deref' i_cs[2120100]))
    const-val call_tmp[2120127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120129 'move' call_tmp[2120127](2120131 'string_compare' coerce_tmp[2120121] call_tmp[2120114]))
    const-val call_tmp[2120134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120136 'move' call_tmp[2120134](2120138 '!=' call_tmp[2120127] 0))
    if call_tmp[2120134]
    {
      (2120144 call chpl_rt_free_c_string[22714] i_cs[2120100])
    }
    label _endon_fn[1809055]
    (935640 return _void[55])
  }
  function on_fn[1016695](ref arg err[1806936]:syserr[223584], const in arg start[1806938]:int(64)[13], const in arg end[1806940]:int(64)[13], const in arg style[1806942]:iostyle[231844], const in arg this[1806944]:file[235580], ref arg ret[1806946]:channel(false,dynamic,true)[985627], const in arg hints[1806948]:int(32)[95], ref arg error_out[1809224]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1809228]:Error[167938] "error variable" "temp"
    (1809237 'move' error[1809228] nil[44])
    ref rvfRerefTmp[2083498]:file[235580] "temp"
    (2083502 'move' rvfRerefTmp[2083498](2083499 'set reference' this[1806944]))
    (1016706 call checkAssumingLocal[235768] rvfRerefTmp[2083498] error[1809228])
    val errorExists[2108472]:bool[10] "temp"
    (2108477 'move' errorExists[2108472](2108474 '!=' error[1809228] nil[44]))
    if errorExists[2108472]
    {
      gotoErrorHandling handler[1809229] handler[1809229]
    }
    label handler[1809229]
    const-val shouldHandleError[1809248]:bool[10] "temp"
    val errorExists[2108480]:bool[10] "temp"
    (2108485 'move' errorExists[2108480](2108482 '!=' error[1809228] nil[44]))
    (1809252 'move' shouldHandleError[1809248] errorExists[2108480])
    if shouldHandleError[1809248]
    {
      (1809244 '=' error_out[1809224] error[1809228])
      gotoErrorHandlingReturn _endon_fn[1809226] _endon_fn[1809226]
    }
    const-val call_tmp[1016708]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1017631]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1018430]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    const-val tmp[1807648]:iostyle[231844] "temp"
    (1807651 'move' tmp[1807648] style[1806942])
    ref rvfRerefTmp[2083491]:file[235580] "temp"
    (2083495 'move' rvfRerefTmp[2083491](2083492 'set reference' this[1806944]))
    (1017634 call init[1017647] initTemp[1017631] rvfRerefTmp[2083491] _formal_tmp_out_error[1018430] hints[1806948] start[1806938] end[1806940] tmp[1807648])
    (2207156 '=' err[1806936] _formal_tmp_out_error[1018430])
    (1016710 'move' call_tmp[1016708] initTemp[1017631])
    (1016724 call =[1018439] ret[1806946] call_tmp[1016708])
    ref i_x[2328964]:channel(false,dynamic,true)[985627] "temp"
    (2328968 'move' i_x[2328964](2328966 'set reference' call_tmp[1016708]))
    (2328972 call deinit[1471060] i_x[2328964])
    label _endon_fn[1809226]
    (1016730 return _void[55])
  }
  function on_fn[1017725](ref arg this[1806950]:channel(false,dynamic,true)[985627], const in arg hints[1806952]:int(32)[95], const in arg local_style[1806954]:iostyle[231844], const in arg end[1806956]:int(64)[13], const in arg start[1806958]:int(64)[13], const in arg f[1806960]:file[235580], ref arg _formal_tmp_error[1806962]:syserr[223584]) : void[4] "on" "resolved"
  {
    ref call_tmp[1017731]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227042]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227044 'move' call_tmp[2227042](2227046 '.' this[1806950] home[985615]))
    (1017733 'move' call_tmp[1017731] call_tmp[2227042])
    const-ref call_tmp[1017739]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083525]:file[235580] "temp"
    (2083529 'move' rvfRerefTmp[2083525](2083526 'set reference' f[1806960]))
    ref call_tmp[2216463]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216465 'move' call_tmp[2216463](2216467 '.' rvfRerefTmp[2083525] home[235562]))
    (1017741 'move' call_tmp[1017739] call_tmp[2216463])
    (1017748 call =[90631] call_tmp[1017731] call_tmp[1017739])
    ref call_tmp[1017810]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227136]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227138 'move' call_tmp[2227136](2227140 '.' this[1806950] _channel_internal[985620]))
    (1017812 'move' call_tmp[1017810] call_tmp[2227136])
    const-ref call_tmp[1017818]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083532]:file[235580] "temp"
    (2083536 'move' rvfRerefTmp[2083532](2083533 'set reference' f[1806960]))
    ref call_tmp[2216645]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216647 'move' call_tmp[2216645](2216649 '.' rvfRerefTmp[2083532] _file_internal[235568]))
    (1017820 'move' call_tmp[1017818] call_tmp[2216645])
    const-val call_tmp[1017833]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018399]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018403 'move' coerce_tmp[1018399](1018401 'deref' call_tmp[1017818]))
    const-val coerce_tmp[1018405]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018411 'move' coerce_tmp[1018405](1018407 'cast' int(32)[95] 1))
    const-val coerce_tmp[1018413]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018419 'move' coerce_tmp[1018413](1018415 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2083511]:iostyle[231844] "temp"
    (2083515 'move' rvfRerefTmp[2083511](2083512 'set reference' local_style[1806954]))
    (1017835 'move' call_tmp[1017833](1017838 call qio_channel_create[232878] call_tmp[1017810] coerce_tmp[1018399] hints[1806952] coerce_tmp[1018405] coerce_tmp[1018413] start[1806958] end[1806956] rvfRerefTmp[2083511]))
    (2207162 '=' _formal_tmp_error[1806962] call_tmp[1017833])
    (1017851 return _void[55])
  }
  function on_fn[1018665](const in arg rhs[1806964]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1018671]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083546]:channel(false,dynamic,true)[985627] "temp"
    (2083550 'move' rvfRerefTmp[2083546](2083547 'set reference' rhs[1806964]))
    ref call_tmp[2227146]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227148 'move' call_tmp[2227146](2227150 '.' rvfRerefTmp[2083546] _channel_internal[985620]))
    (1018673 'move' call_tmp[1018671] call_tmp[2227146])
    const-val coerce_tmp[1019055]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019059 'move' coerce_tmp[1019055](1019057 'deref' call_tmp[1018671]))
    (1018680 call qio_channel_retain[232951] coerce_tmp[1019055])
    (1018682 return _void[55])
  }
  function on_fn[1018709](const  ref arg lhs[1806966]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1018715]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227156]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227158 'move' call_tmp[2227156](2227160 '.' lhs[1806966] _channel_internal[985620]))
    (1018717 'move' call_tmp[1018715] call_tmp[2227156])
    const-val coerce_tmp[1019074]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019078 'move' coerce_tmp[1019074](1019076 'deref' call_tmp[1018715]))
    (1018724 call qio_channel_release[232961] coerce_tmp[1019074])
    (1018726 return _void[55])
  }
  function on_fn[1022270](const in arg end[1806972]:int(64)[13], const in arg style[1806974]:iostyle[231844], const in arg this[1806976]:file[235580], ref arg ret[1806978]:channel(true,dynamic,true)[1021825], const in arg hints[1806980]:int(32)[95], const in arg start[1806982]:int(64)[13], ref arg err[1806984]:syserr[223584], ref arg error_out[1809340]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1809344]:Error[167938] "error variable" "temp"
    (1809353 'move' error[1809344] nil[44])
    ref rvfRerefTmp[2083575]:file[235580] "temp"
    (2083579 'move' rvfRerefTmp[2083575](2083576 'set reference' this[1806976]))
    (1022281 call checkAssumingLocal[235768] rvfRerefTmp[2083575] error[1809344])
    val errorExists[2108520]:bool[10] "temp"
    (2108525 'move' errorExists[2108520](2108522 '!=' error[1809344] nil[44]))
    if errorExists[2108520]
    {
      gotoErrorHandling handler[1809345] handler[1809345]
    }
    label handler[1809345]
    const-val shouldHandleError[1809364]:bool[10] "temp"
    val errorExists[2108528]:bool[10] "temp"
    (2108533 'move' errorExists[2108528](2108530 '!=' error[1809344] nil[44]))
    (1809368 'move' shouldHandleError[1809364] errorExists[2108528])
    if shouldHandleError[1809364]
    {
      (1809360 '=' error_out[1809340] error[1809344])
      gotoErrorHandlingReturn _endon_fn[1809342] _endon_fn[1809342]
    }
    const-val call_tmp[1022283]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1022667]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1023138]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    const-val tmp[1807654]:iostyle[231844] "temp"
    (1807657 'move' tmp[1807654] style[1806974])
    ref rvfRerefTmp[2083568]:file[235580] "temp"
    (2083572 'move' rvfRerefTmp[2083568](2083569 'set reference' this[1806976]))
    (1022670 call init[1022683] initTemp[1022667] rvfRerefTmp[2083568] _formal_tmp_out_error[1023138] hints[1806980] start[1806982] end[1806972] tmp[1807654])
    (2207168 '=' err[1806984] _formal_tmp_out_error[1023138])
    (1022285 'move' call_tmp[1022283] initTemp[1022667])
    (1022299 call =[1023147] ret[1806978] call_tmp[1022283])
    ref i_x[2331407]:channel(true,dynamic,true)[1021825] "temp"
    (2331411 'move' i_x[2331407](2331409 'set reference' call_tmp[1022283]))
    (2331415 call deinit[1534039] i_x[2331407])
    label _endon_fn[1809342]
    (1022305 return _void[55])
  }
  function on_fn[1022761](const in arg f[1806986]:file[235580], ref arg _formal_tmp_error[1806988]:syserr[223584], const in arg end[1806990]:int(64)[13], ref arg this[1806992]:channel(true,dynamic,true)[1021825], const in arg hints[1806994]:int(32)[95], const in arg local_style[1806996]:iostyle[231844], const in arg start[1806998]:int(64)[13]) : void[4] "on" "resolved"
  {
    ref call_tmp[1022767]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228133]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228135 'move' call_tmp[2228133](2228137 '.' this[1806992] home[1021813]))
    (1022769 'move' call_tmp[1022767] call_tmp[2228133])
    const-ref call_tmp[1022775]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083589]:file[235580] "temp"
    (2083593 'move' rvfRerefTmp[2083589](2083590 'set reference' f[1806986]))
    ref call_tmp[2216473]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216475 'move' call_tmp[2216473](2216477 '.' rvfRerefTmp[2083589] home[235562]))
    (1022777 'move' call_tmp[1022775] call_tmp[2216473])
    (1022784 call =[90631] call_tmp[1022767] call_tmp[1022775])
    ref call_tmp[1022846]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228207]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228209 'move' call_tmp[2228207](2228211 '.' this[1806992] _channel_internal[1021818]))
    (1022848 'move' call_tmp[1022846] call_tmp[2228207])
    const-ref call_tmp[1022854]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083596]:file[235580] "temp"
    (2083600 'move' rvfRerefTmp[2083596](2083597 'set reference' f[1806986]))
    ref call_tmp[2216655]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216657 'move' call_tmp[2216655](2216659 '.' rvfRerefTmp[2083596] _file_internal[235568]))
    (1022856 'move' call_tmp[1022854] call_tmp[2216655])
    const-val call_tmp[1022869]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1023107]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023111 'move' coerce_tmp[1023107](1023109 'deref' call_tmp[1022854]))
    const-val coerce_tmp[1023113]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023119 'move' coerce_tmp[1023113](1023115 'cast' int(32)[95] 0))
    const-val coerce_tmp[1023121]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023127 'move' coerce_tmp[1023121](1023123 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2083609]:iostyle[231844] "temp"
    (2083613 'move' rvfRerefTmp[2083609](2083610 'set reference' local_style[1806996]))
    (1022871 'move' call_tmp[1022869](1022874 call qio_channel_create[232878] call_tmp[1022846] coerce_tmp[1023107] hints[1806994] coerce_tmp[1023113] coerce_tmp[1023121] start[1806998] end[1806990] rvfRerefTmp[2083609]))
    (2207174 '=' _formal_tmp_error[1806988] call_tmp[1022869])
    (1022887 return _void[55])
  }
  function on_fn[1023373](const in arg rhs[1807000]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1023379]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083623]:channel(true,dynamic,true)[1021825] "temp"
    (2083627 'move' rvfRerefTmp[2083623](2083624 'set reference' rhs[1807000]))
    ref call_tmp[2228217]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228219 'move' call_tmp[2228217](2228221 '.' rvfRerefTmp[2083623] _channel_internal[1021818]))
    (1023381 'move' call_tmp[1023379] call_tmp[2228217])
    const-val coerce_tmp[1023763]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023767 'move' coerce_tmp[1023763](1023765 'deref' call_tmp[1023379]))
    (1023388 call qio_channel_retain[232951] coerce_tmp[1023763])
    (1023390 return _void[55])
  }
  function on_fn[1023417](const  ref arg lhs[1807002]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1023423]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228227]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228229 'move' call_tmp[2228227](2228231 '.' lhs[1807002] _channel_internal[1021818]))
    (1023425 'move' call_tmp[1023423] call_tmp[2228227])
    const-val coerce_tmp[1023782]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023786 'move' coerce_tmp[1023782](1023784 'deref' call_tmp[1023423]))
    (1023432 call qio_channel_release[232961] coerce_tmp[1023782])
    (1023434 return _void[55])
  }
  function on_fn[1061022](const in arg start[1807016]:int(64)[13], ref arg ret[1807018]:channel(true,dynamic,false)[1060947], const in arg end[1807020]:int(64)[13], const in arg style[1807022]:iostyle[231844], const in arg this[1807024]:file[235580], ref arg err[1807026]:syserr[223584], const in arg hints[1807028]:int(32)[95], ref arg error_out[1809771]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1809775]:Error[167938] "error variable" "temp"
    (1809784 'move' error[1809775] nil[44])
    ref rvfRerefTmp[2083683]:file[235580] "temp"
    (2083687 'move' rvfRerefTmp[2083683](2083684 'set reference' this[1807024]))
    (1061033 call checkAssumingLocal[235768] rvfRerefTmp[2083683] error[1809775])
    val errorExists[2108744]:bool[10] "temp"
    (2108749 'move' errorExists[2108744](2108746 '!=' error[1809775] nil[44]))
    if errorExists[2108744]
    {
      gotoErrorHandling handler[1809776] handler[1809776]
    }
    label handler[1809776]
    const-val shouldHandleError[1809795]:bool[10] "temp"
    val errorExists[2108752]:bool[10] "temp"
    (2108757 'move' errorExists[2108752](2108754 '!=' error[1809775] nil[44]))
    (1809799 'move' shouldHandleError[1809795] errorExists[2108752])
    if shouldHandleError[1809795]
    {
      (1809791 '=' error_out[1809771] error[1809775])
      gotoErrorHandlingReturn _endon_fn[1809773] _endon_fn[1809773]
    }
    const-val call_tmp[1061035]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1061380]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1061851]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    const-val tmp[1807660]:iostyle[231844] "temp"
    (1807663 'move' tmp[1807660] style[1807022])
    ref rvfRerefTmp[2083676]:file[235580] "temp"
    (2083680 'move' rvfRerefTmp[2083676](2083677 'set reference' this[1807024]))
    (1061383 call init[1061396] initTemp[1061380] rvfRerefTmp[2083676] _formal_tmp_out_error[1061851] hints[1807028] start[1807016] end[1807020] tmp[1807660])
    (2207180 '=' err[1807026] _formal_tmp_out_error[1061851])
    (1061037 'move' call_tmp[1061035] initTemp[1061380])
    (1061051 call =[1061860] ret[1807018] call_tmp[1061035])
    ref i_x[2268178]:channel(true,dynamic,false)[1060947] "temp"
    (2268182 'move' i_x[2268178](2268180 'set reference' call_tmp[1061035]))
    (2268186 call deinit[1536215] i_x[2268178])
    label _endon_fn[1809773]
    (1061057 return _void[55])
  }
  function on_fn[1061474](ref arg _formal_tmp_error[1807030]:syserr[223584], const in arg end[1807032]:int(64)[13], const in arg hints[1807034]:int(32)[95], const in arg local_style[1807036]:iostyle[231844], ref arg this[1807038]:channel(true,dynamic,false)[1060947], const in arg start[1807040]:int(64)[13], const in arg f[1807042]:file[235580]) : void[4] "on" "resolved"
  {
    ref call_tmp[1061480]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263604]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263606 'move' call_tmp[2263604](2263608 '.' this[1807038] home[1060935]))
    (1061482 'move' call_tmp[1061480] call_tmp[2263604])
    const-ref call_tmp[1061488]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083710]:file[235580] "temp"
    (2083714 'move' rvfRerefTmp[2083710](2083711 'set reference' f[1807042]))
    ref call_tmp[2216483]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216485 'move' call_tmp[2216483](2216487 '.' rvfRerefTmp[2083710] home[235562]))
    (1061490 'move' call_tmp[1061488] call_tmp[2216483])
    (1061497 call =[90631] call_tmp[1061480] call_tmp[1061488])
    ref call_tmp[1061559]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263718]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263720 'move' call_tmp[2263718](2263722 '.' this[1807038] _channel_internal[1060940]))
    (1061561 'move' call_tmp[1061559] call_tmp[2263718])
    const-ref call_tmp[1061567]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083717]:file[235580] "temp"
    (2083721 'move' rvfRerefTmp[2083717](2083718 'set reference' f[1807042]))
    ref call_tmp[2216665]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216667 'move' call_tmp[2216665](2216669 '.' rvfRerefTmp[2083717] _file_internal[235568]))
    (1061569 'move' call_tmp[1061567] call_tmp[2216665])
    const-val call_tmp[1061582]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1061820]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061824 'move' coerce_tmp[1061820](1061822 'deref' call_tmp[1061567]))
    const-val coerce_tmp[1061826]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061832 'move' coerce_tmp[1061826](1061828 'cast' int(32)[95] 0))
    const-val coerce_tmp[1061834]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061840 'move' coerce_tmp[1061834](1061836 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2083696]:iostyle[231844] "temp"
    (2083700 'move' rvfRerefTmp[2083696](2083697 'set reference' local_style[1807036]))
    (1061584 'move' call_tmp[1061582](1061587 call qio_channel_create[232878] call_tmp[1061559] coerce_tmp[1061820] hints[1807034] coerce_tmp[1061826] coerce_tmp[1061834] start[1807040] end[1807032] rvfRerefTmp[2083696]))
    (2207186 '=' _formal_tmp_error[1807030] call_tmp[1061582])
    (1061600 return _void[55])
  }
  function on_fn[1062086](const in arg rhs[1807044]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1062092]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083731]:channel(true,dynamic,false)[1060947] "temp"
    (2083735 'move' rvfRerefTmp[2083731](2083732 'set reference' rhs[1807044]))
    ref call_tmp[2263728]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263730 'move' call_tmp[2263728](2263732 '.' rvfRerefTmp[2083731] _channel_internal[1060940]))
    (1062094 'move' call_tmp[1062092] call_tmp[2263728])
    const-val coerce_tmp[1062285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062289 'move' coerce_tmp[1062285](1062287 'deref' call_tmp[1062092]))
    (1062101 call qio_channel_retain[232951] coerce_tmp[1062285])
    (1062103 return _void[55])
  }
  function on_fn[1062130](const  ref arg lhs[1807046]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1062136]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263738]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263740 'move' call_tmp[2263738](2263742 '.' lhs[1807046] _channel_internal[1060940]))
    (1062138 'move' call_tmp[1062136] call_tmp[2263738])
    const-val coerce_tmp[1062304]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062308 'move' coerce_tmp[1062304](1062306 'deref' call_tmp[1062136]))
    (1062145 call qio_channel_release[232961] coerce_tmp[1062304])
    (1062147 return _void[55])
  }
  function on_fn[1062455](const in arg this[1807048]:channel(true,dynamic,false)[1060947], ref arg err[1807050]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1062469]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083745]:channel(true,dynamic,false)[1060947] "temp"
    (2083749 'move' rvfRerefTmp[2083745](2083746 'set reference' this[1807048]))
    ref call_tmp[2263748]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263750 'move' call_tmp[2263748](2263752 '.' rvfRerefTmp[2083745] _channel_internal[1060940]))
    (1062471 'move' call_tmp[1062469] call_tmp[2263748])
    const-val call_tmp[1062477]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062848]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062854 'move' coerce_tmp[1062848](1062850 'cast' int(32)[95] 0))
    const-val coerce_tmp[1062856]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062860 'move' coerce_tmp[1062856](1062858 'deref' call_tmp[1062469]))
    (1062479 'move' call_tmp[1062477](1062482 call qio_channel_close[233140] coerce_tmp[1062848] coerce_tmp[1062856]))
    (2207192 '=' err[1807050] call_tmp[1062477])
    (1062491 return _void[55])
  }
  function on_fn[1062932](const  ref arg this[1807052]:channel(true,dynamic,false)[1060947], ref arg path[1807054]:string[26], ref arg offset[1807056]:int(64)[13], ref arg error_out[1809926]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1062938]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063140 'move' tmp_path[1062938](1063138 'cast' c_string[19] nil[44]))
    val tmp_offset[1062944]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1062946]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1063143 'move' tmp_offset[1062944] 0)
    const-val call_tmp[1062957]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062959 'move' call_tmp[1062957] 0)
    val err[1062963]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1063085]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207890]:syserr[223584] "temp"
    (2207894 'move' i_ret[2207890](2207892 'set reference' init_coerce_tmp[1063085]))
    const-val call_tmp[2207897]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207899 'move' call_tmp[2207897](2207902 call qio_int_to_err[223634] call_tmp[1062957]))
    (2207904 '=' i_ret[2207890] call_tmp[2207897])
    (1062965 'move' err[1062963] init_coerce_tmp[1063085])
    const-ref call_tmp[1062978]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263758]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263760 'move' call_tmp[2263758](2263762 '.' this[1807052] _channel_internal[1060940]))
    (1062980 'move' call_tmp[1062978] call_tmp[2263758])
    const-val call_tmp[1062986]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063095]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063101 'move' coerce_tmp[1063095](1063097 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063103]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063107 'move' coerce_tmp[1063103](1063105 'deref' call_tmp[1062978]))
    (1062988 'move' call_tmp[1062986](1062991 call qio_channel_path_offset[232924] coerce_tmp[1063095] coerce_tmp[1063103] tmp_path[1062938] tmp_offset[1062944]))
    ref i_ret[2207197]:syserr[223584] "temp"
    (2207201 'move' i_ret[2207197](2207199 'set reference' err[1062963]))
    (2207204 '=' i_ret[2207197] call_tmp[1062986])
    const-val call_tmp[1063004]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206569]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206571 'move' call_tmp[2206569](2206574 call qio_err_iserr[223646] err[1062963]))
    const-val call_tmp[2206576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206578 'move' call_tmp[2206576](2206580 '==' call_tmp[2206569] 0))
    (1063006 'move' call_tmp[1063004] call_tmp[2206576])
    const-val call_tmp[1063011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1063013 'move' call_tmp[1063011] call_tmp[1063004])
    if call_tmp[1063011]
    {
      const-val call_tmp[1063020]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val default_arg_length[1063116]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      val error[1809931]:Error[167938] "error variable" "temp"
      (1809933 'move' error[1809931] nil[44])
      ref i_error_out[2203570]:Error[167938] "temp"
      (2203574 'move' i_error_out[2203570](2203572 'set reference' error[1809931]))
      val ret[2203577]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
      const-val call_tmp[2203579]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203581 'move' call_tmp[2203579](2203583 'string_length_bytes' tmp_path[1062938]))
      (2203585 'move' ret[2203577] call_tmp[2203579])
      (1063121 'move' default_arg_length[1063116] ret[2203577])
      val errorExists[2108808]:bool[10] "temp"
      (2108813 'move' errorExists[2108808](2108810 '!=' error[1809931] nil[44]))
      if errorExists[2108808]
      {
        (1809937 '=' error_out[1809926] error[1809931])
        gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
      }
      val error[1809946]:Error[167938] "error variable" "temp"
      (1809948 'move' error[1809946] nil[44])
      const-val ret_tmp[1829069]:string[26] "temp"
      ref i_error_out[2141676]:Error[167938] "temp"
      (2141680 'move' i_error_out[2141676](2141678 'set reference' error[1809946]))
      ref i__retArg[2141682]:string[26] "temp"
      (2141686 'move' i__retArg[2141682](2141684 'set reference' ret_tmp[1829069]))
      const-val ret[2141689]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141691]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141693 'move' call_tmp[2141691](2141695 'cast' c_ptr(uint(8))[937423] tmp_path[1062938]))
      const-val call_tmp[2141698]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141700]:Error[167938] "error variable" "temp"
      (2141702 'move' error[2141700] nil[44])
      const-val ret[2141705]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141707]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141709]:Error[167938] "error variable" "temp"
      (2141711 'move' error[2141709] nil[44])
      const-val ret_tmp[2141714]:string[26] "temp"
      (2141717 call decodeByteBuffer[173892] call_tmp[2141691] default_arg_length[1063116] replace[173648] error[2141709] ret_tmp[2141714])
      (2141723 'move' call_tmp[2141707] ret_tmp[2141714])
      val errorExists[2141726]:bool[10] "temp"
      (2141728 'move' errorExists[2141726](2141730 '!=' error[2141709] nil[44]))
      if errorExists[2141726]
      {
        (2141735 '=' error[2141700] error[2141709])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141744] _endcreateStringWithNewBuffer[2141744]
      }
      (2141741 'move' ret[2141705] call_tmp[2141707])
      label _endcreateStringWithNewBuffer[2141744]
      (2141746 'move' call_tmp[2141698] ret[2141705])
      val errorExists[2141749]:bool[10] "temp"
      (2141751 'move' errorExists[2141749](2141753 '!=' error[2141700] nil[44]))
      if errorExists[2141749]
      {
        (2141758 '=' i_error_out[2141676] error[2141700])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141767] _endcreateStringWithNewBuffer[2141767]
      }
      (2141764 'move' ret[2141689] call_tmp[2141698])
      label _endcreateStringWithNewBuffer[2141767]
      (2141769 '=' i__retArg[2141682] ret[2141689])
      (1829072 'move' call_tmp[1063020] ret_tmp[1829069])
      val errorExists[2108816]:bool[10] "temp"
      (2108821 'move' errorExists[2108816](2108818 '!=' error[1809946] nil[44]))
      if errorExists[2108816]
      {
        (1809952 '=' error_out[1809926] error[1809946])
        gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
      }
      (1063030 call =[38269] path[1807054] call_tmp[1063020])
      ref i_x[2130909]:string[26] "temp"
      (2130913 'move' i_x[2130909](2130911 'set reference' call_tmp[1063020]))
      (2130917 call deinit[30831] i_x[2130909])
      ref i_cs[2120149]:c_string[19] "temp"
      (2120153 'move' i_cs[2120149](2120151 'set reference' tmp_path[1062938]))
      const-val call_tmp[2120156]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120158 'move' call_tmp[2120156](2120160 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120163]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120165 'move' call_tmp[2120163](2120167 'cast' c_string[19] call_tmp[2120156]))
      const-val coerce_tmp[2120170]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120172 'move' coerce_tmp[2120170](2120174 'deref' i_cs[2120149]))
      const-val call_tmp[2120176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120178 'move' call_tmp[2120176](2120180 'string_compare' coerce_tmp[2120170] call_tmp[2120163]))
      const-val call_tmp[2120183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120185 'move' call_tmp[2120183](2120187 '!=' call_tmp[2120176] 0))
      if call_tmp[2120183]
      {
        (2120193 call chpl_rt_free_c_string[22714] i_cs[2120149])
      }
      (2122230 '=' offset[1807056] tmp_offset[1062944])
    }
    label _endon_fn[1809928]
    (1063049 return _void[55])
  }
  function on_fn[1066089](const in arg this[1807058]:channel(true,dynamic,false)[1060947], const  ref arg args[1807060]:1*byteIndex[1057081], const in arg origLocale[1807062]:locale[28], ref arg error_out[1810011]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1810015]:Error[167938] "error variable" "temp"
    (1810024 'move' error[1810015] nil[44])
    ref rvfRerefTmp[2083759]:channel(true,dynamic,false)[1060947] "temp"
    (2083763 'move' rvfRerefTmp[2083759](2083760 'set reference' this[1807058]))
    ref i_error_out[2265949]:Error[167938] "temp"
    (2265953 'move' i_error_out[2265949](2265951 'set reference' error[1810015]))
    const-val err[2265956]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2265958]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265960 'move' call_tmp[2265958](2265963 call qio_int_to_err[223634] 0))
    (2265965 'move' err[2265956] call_tmp[2265958])
    const-val coerce_tmp[2265968]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265970 'move' coerce_tmp[2265968](2265972 '.v' rvfRerefTmp[2083759] _channel_internal[1060940]))
    const-val call_tmp[2265975]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265977 'move' call_tmp[2265975](2265979 'cast' c_void_ptr[149] coerce_tmp[2265968]))
    const-val call_tmp[2265982]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265984 'move' call_tmp[2265982](2265986 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2265989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265991 'move' call_tmp[2265989](2265993 'ptr_eq' call_tmp[2265975] call_tmp[2265982]))
    if call_tmp[2265989]
    {
      const-val call_tmp[2265998]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266000]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266002 'move' coerce_tmp[2266000](2266004 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266007]:owned SystemError[1000238] "temp"
      (2266010 call fromSyserr[1017113] coerce_tmp[2266000] "Operation attempted on an invalid channel" ret_tmp[2266007])
      (2266014 'move' call_tmp[2265998] ret_tmp[2266007])
      val call_tmp[2266017]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266019]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266021]:owned Error[966458] "temp"
      ref i_x[2266023]:owned SystemError[1000238] "temp"
      (2266025 'move' i_x[2266023](2266027 'set reference' call_tmp[2265998]))
      ref i__retArg[2266029]:owned Error[966458] "temp"
      (2266031 'move' i__retArg[2266029](2266033 'set reference' ret_tmp[2266021]))
      val _formal_tmp_x[2266035]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266037 'move' _formal_tmp_x[2266035] i_x[2266023])
      const-val ret[2266040]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266042]:owned SystemError[1000238] "temp"
      (2266044 'move' i_this[2266042](2266046 'set reference' _formal_tmp_x[2266035]))
      val coerce_tmp[2266048]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2266050 'move' coerce_tmp[2266048](2266052 '.v' i_this[2266042] chpl_p[1000233]))
      val call_tmp[2266055]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266057 'move' call_tmp[2266055](2266059 'cast' Error[167938] coerce_tmp[2266048]))
      val castPtr[2266062]:Error[167938] "dead at end of block" "insert auto destroy"
      (2266064 'move' castPtr[2266062] call_tmp[2266055])
      ref i_this[2266067]:owned SystemError[1000238] "temp"
      (2266069 'move' i_this[2266067](2266071 'set reference' _formal_tmp_x[2266035]))
      val tmp[2266073]:SystemError[264845] "temp"
      (2266075 'move' tmp[2266073](2266077 'cast' SystemError[264845] nil[44]))
      (2266080 '.=' i_this[2266067] chpl_p[1000233] tmp[2266073])
      val coerce_tmp[2266084]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266086 'move' coerce_tmp[2266084](2266088 'cast' object[22] call_tmp[2266055]))
      const-val call_tmp[2266091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266093 'move' call_tmp[2266091](2266095 'ptr_eq' coerce_tmp[2266084] nil[44]))
      if call_tmp[2266091]
      {
        (2266101 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266104]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266106]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2266109 call init[968094] initTemp[2266106] castPtr[2266062])
      (2266112 'move' call_tmp[2266104] initTemp[2266106])
      (2266115 'move' ret[2266040] call_tmp[2266104])
      (2266119 call chpl__autoDestroy[1516200] _formal_tmp_x[2266035])
      (2266121 '=' i__retArg[2266029] ret[2266040])
      (2266124 'move' coerce_tmp[2266019] ret_tmp[2266021])
      const-val _formal_tmp_in_err[2266127]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266129 'move' _formal_tmp_in_err[2266127] coerce_tmp[2266019])
      (2266132 'move' call_tmp[2266017](2266135 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266127]))
      (2266137 '=' i_error_out[2265949] call_tmp[2266017])
      gotoErrorHandlingReturn _endlock[2266200] _endlock[2266200]
    }
    const-val call_tmp[2266143]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266145 'move' call_tmp[2266143](2266148 call qio_err_iserr[223646] err[2265956]))
    const-val call_tmp[2266150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266152 'move' call_tmp[2266150](2266154 '!=' call_tmp[2266143] 0))
    if call_tmp[2266150]
    {
      val error[2266159]:Error[167938] "error variable" "temp"
      (2266161 'move' error[2266159] nil[44])
      (2266165 call _ch_ioerror[1062865] rvfRerefTmp[2083759] err[2265956] "in lock" error[2266159])
      val errorExists[2266170]:bool[10] "temp"
      (2266172 'move' errorExists[2266170](2266174 '!=' error[2266159] nil[44]))
      if errorExists[2266170]
      {
        gotoErrorHandling handler[2266182] handler[2266182]
      }
      label handler[2266182]
      val errorExists[2266184]:bool[10] "temp"
      (2266186 'move' errorExists[2266184](2266188 '!=' error[2266159] nil[44]))
      if errorExists[2266184]
      {
        (2266193 '=' i_error_out[2265949] error[2266159])
        gotoErrorHandlingReturn _endlock[2266200] _endlock[2266200]
      }
    }
    label _endlock[2266200]
    val errorExists[2108840]:bool[10] "temp"
    (2108845 'move' errorExists[2108840](2108842 '!=' error[1810015] nil[44]))
    if errorExists[2108840]
    {
      gotoErrorHandling handler[1810016] handler[1810016]
    }
    label handler[1810016]
    const-val shouldHandleError[1810035]:bool[10] "temp"
    val errorExists[2108848]:bool[10] "temp"
    (2108853 'move' errorExists[2108848](2108850 '!=' error[1810015] nil[44]))
    (1810039 'move' shouldHandleError[1810035] errorExists[2108848])
    if shouldHandleError[1810035]
    {
      (1810031 '=' error_out[1810011] error[1810015])
      gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
    }
    const-val i[1066110]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1066112 'move' i[1066110] 0)
    val error[1810043]:Error[167938] "error variable" "temp"
    (1810052 'move' error[1810043] nil[44])
    const-ref call_tmp[1066933]:byteIndex[28170] "dead after last mention" "maybe param" "temp"
    (1066935 'move' call_tmp[1066933](1067009 '.v' args[1807060] x0[1057079]))
    ref rvfRerefTmp[2083766]:channel(true,dynamic,false)[1060947] "temp"
    (2083770 'move' rvfRerefTmp[2083766](2083767 'set reference' this[1807058]))
    val rvfRerefTmp[2083793]:locale[28] "temp"
    (2083796 'move' rvfRerefTmp[2083793] origLocale[1807062])
    (1066944 call _writeOne[1067012] rvfRerefTmp[2083766] call_tmp[1066933] rvfRerefTmp[2083793] error[1810043])
    val errorExists[2108856]:bool[10] "temp"
    (2108861 'move' errorExists[2108856](2108858 '!=' error[1810043] nil[44]))
    if errorExists[2108856]
    {
      gotoErrorHandling handler[1810044] handler[1810044]
    }
    label handler[1810044]
    const-val shouldHandleError[1810063]:bool[10] "temp"
    val errorExists[2108864]:bool[10] "temp"
    (2108869 'move' errorExists[2108864](2108866 '!=' error[1810043] nil[44]))
    (1810067 'move' shouldHandleError[1810063] errorExists[2108864])
    if shouldHandleError[1810063]
    {
      (1810059 '=' error_out[1810011] error[1810043])
      ref rvfRerefTmp[2083773]:channel(true,dynamic,false)[1060947] "temp"
      (2083777 'move' rvfRerefTmp[2083773](2083774 'set reference' this[1807058]))
      gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
    }
    ref rvfRerefTmp[2083780]:channel(true,dynamic,false)[1060947] "temp"
    (2083784 'move' rvfRerefTmp[2083780](2083781 'set reference' this[1807058]))
    label _endon_fn[1810013]
    (1066192 return _void[55])
  }
  function on_fn[1068868](const  ref arg this[1807064]:channel(true,dynamic,false)[1060947], const in arg x[1807066]:int(64)[13], const in arg origLocale[1807068]:locale[28], ref arg error_out[1810295]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1810299]:Error[167938] "error variable" "temp"
    (1810308 'move' error[1810299] nil[44])
    ref i_error_out[2266204]:Error[167938] "temp"
    (2266208 'move' i_error_out[2266204](2266206 'set reference' error[1810299]))
    const-val err[2266211]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2266213]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266215 'move' call_tmp[2266213](2266218 call qio_int_to_err[223634] 0))
    (2266220 'move' err[2266211] call_tmp[2266213])
    const-val coerce_tmp[2266223]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2266225 'move' coerce_tmp[2266223](2266227 '.v' this[1807064] _channel_internal[1060940]))
    const-val call_tmp[2266230]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266232 'move' call_tmp[2266230](2266234 'cast' c_void_ptr[149] coerce_tmp[2266223]))
    const-val call_tmp[2266237]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266239 'move' call_tmp[2266237](2266241 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266246 'move' call_tmp[2266244](2266248 'ptr_eq' call_tmp[2266230] call_tmp[2266237]))
    if call_tmp[2266244]
    {
      const-val call_tmp[2266253]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266255]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266257 'move' coerce_tmp[2266255](2266259 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266262]:owned SystemError[1000238] "temp"
      (2266265 call fromSyserr[1017113] coerce_tmp[2266255] "Operation attempted on an invalid channel" ret_tmp[2266262])
      (2266269 'move' call_tmp[2266253] ret_tmp[2266262])
      val call_tmp[2266272]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266274]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266276]:owned Error[966458] "temp"
      ref i_x[2266278]:owned SystemError[1000238] "temp"
      (2266280 'move' i_x[2266278](2266282 'set reference' call_tmp[2266253]))
      ref i__retArg[2266284]:owned Error[966458] "temp"
      (2266286 'move' i__retArg[2266284](2266288 'set reference' ret_tmp[2266276]))
      val _formal_tmp_x[2266290]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266292 'move' _formal_tmp_x[2266290] i_x[2266278])
      const-val ret[2266295]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266297]:owned SystemError[1000238] "temp"
      (2266299 'move' i_this[2266297](2266301 'set reference' _formal_tmp_x[2266290]))
      val coerce_tmp[2266303]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2266305 'move' coerce_tmp[2266303](2266307 '.v' i_this[2266297] chpl_p[1000233]))
      val call_tmp[2266310]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266312 'move' call_tmp[2266310](2266314 'cast' Error[167938] coerce_tmp[2266303]))
      val castPtr[2266317]:Error[167938] "dead at end of block" "insert auto destroy"
      (2266319 'move' castPtr[2266317] call_tmp[2266310])
      ref i_this[2266322]:owned SystemError[1000238] "temp"
      (2266324 'move' i_this[2266322](2266326 'set reference' _formal_tmp_x[2266290]))
      val tmp[2266328]:SystemError[264845] "temp"
      (2266330 'move' tmp[2266328](2266332 'cast' SystemError[264845] nil[44]))
      (2266335 '.=' i_this[2266322] chpl_p[1000233] tmp[2266328])
      val coerce_tmp[2266339]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266341 'move' coerce_tmp[2266339](2266343 'cast' object[22] call_tmp[2266310]))
      const-val call_tmp[2266346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266348 'move' call_tmp[2266346](2266350 'ptr_eq' coerce_tmp[2266339] nil[44]))
      if call_tmp[2266346]
      {
        (2266356 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266359]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266361]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2266364 call init[968094] initTemp[2266361] castPtr[2266317])
      (2266367 'move' call_tmp[2266359] initTemp[2266361])
      (2266370 'move' ret[2266295] call_tmp[2266359])
      (2266374 call chpl__autoDestroy[1516200] _formal_tmp_x[2266290])
      (2266376 '=' i__retArg[2266284] ret[2266295])
      (2266379 'move' coerce_tmp[2266274] ret_tmp[2266276])
      const-val _formal_tmp_in_err[2266382]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266384 'move' _formal_tmp_in_err[2266382] coerce_tmp[2266274])
      (2266387 'move' call_tmp[2266272](2266390 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266382]))
      (2266392 '=' i_error_out[2266204] call_tmp[2266272])
      gotoErrorHandlingReturn _endlock[2266455] _endlock[2266455]
    }
    const-val call_tmp[2266398]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266400 'move' call_tmp[2266398](2266403 call qio_err_iserr[223646] err[2266211]))
    const-val call_tmp[2266405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266407 'move' call_tmp[2266405](2266409 '!=' call_tmp[2266398] 0))
    if call_tmp[2266405]
    {
      val error[2266414]:Error[167938] "error variable" "temp"
      (2266416 'move' error[2266414] nil[44])
      (2266420 call _ch_ioerror[1062865] this[1807064] err[2266211] "in lock" error[2266414])
      val errorExists[2266425]:bool[10] "temp"
      (2266427 'move' errorExists[2266425](2266429 '!=' error[2266414] nil[44]))
      if errorExists[2266425]
      {
        gotoErrorHandling handler[2266437] handler[2266437]
      }
      label handler[2266437]
      val errorExists[2266439]:bool[10] "temp"
      (2266441 'move' errorExists[2266439](2266443 '!=' error[2266414] nil[44]))
      if errorExists[2266439]
      {
        (2266448 '=' i_error_out[2266204] error[2266414])
        gotoErrorHandlingReturn _endlock[2266455] _endlock[2266455]
      }
    }
    label _endlock[2266455]
    val errorExists[2108976]:bool[10] "temp"
    (2108981 'move' errorExists[2108976](2108978 '!=' error[1810299] nil[44]))
    if errorExists[2108976]
    {
      gotoErrorHandling handler[1810300] handler[1810300]
    }
    label handler[1810300]
    const-val shouldHandleError[1810317]:bool[10] "temp"
    val errorExists[2108984]:bool[10] "temp"
    (2108989 'move' errorExists[2108984](2108986 '!=' error[1810299] nil[44]))
    (1810321 'move' shouldHandleError[1810317] errorExists[2108984])
    if shouldHandleError[1810317]
    {
      (1810314 call chpl_uncaught_error[170243] error[1810299])
    }
    val error[1810325]:Error[167938] "error variable" "temp"
    (1810334 'move' error[1810325] nil[44])
    val rvfRerefTmp[2083805]:locale[28] "temp"
    (2083808 'move' rvfRerefTmp[2083805] origLocale[1807068])
    (1068901 call _writeOne[1068937] this[1807064] x[1807066] rvfRerefTmp[2083805] error[1810325])
    val errorExists[2108992]:bool[10] "temp"
    (2108997 'move' errorExists[2108992](2108994 '!=' error[1810325] nil[44]))
    if errorExists[2108992]
    {
      gotoErrorHandling handler[1810326] handler[1810326]
    }
    label handler[1810326]
    const-val shouldHandleError[1810345]:bool[10] "temp"
    val errorExists[2109000]:bool[10] "temp"
    (2109005 'move' errorExists[2109000](2109002 '!=' error[1810325] nil[44]))
    (1810349 'move' shouldHandleError[1810345] errorExists[2109000])
    if shouldHandleError[1810345]
    {
      (1810341 '=' error_out[1810295] error[1810325])
      gotoErrorHandlingReturn _endon_fn[1810297] _endon_fn[1810297]
    }
    label _endon_fn[1810297]
    (1068908 return _void[55])
  }
  function on_fn[1080205](const in arg this[1807070]:channel(true,dynamic,false)[1060947], ref arg ret[1807072]:int(64)[13]) : void[4] "on" "resolved"
  {
    val error[1810496]:Error[167938] "error variable" "temp"
    (1810505 'move' error[1810496] nil[44])
    ref rvfRerefTmp[2083832]:channel(true,dynamic,false)[1060947] "temp"
    (2083836 'move' rvfRerefTmp[2083832](2083833 'set reference' this[1807070]))
    ref i_error_out[2266459]:Error[167938] "temp"
    (2266463 'move' i_error_out[2266459](2266461 'set reference' error[1810496]))
    const-val err[2266466]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2266468]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266470 'move' call_tmp[2266468](2266473 call qio_int_to_err[223634] 0))
    (2266475 'move' err[2266466] call_tmp[2266468])
    const-val coerce_tmp[2266478]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2266480 'move' coerce_tmp[2266478](2266482 '.v' rvfRerefTmp[2083832] _channel_internal[1060940]))
    const-val call_tmp[2266485]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266487 'move' call_tmp[2266485](2266489 'cast' c_void_ptr[149] coerce_tmp[2266478]))
    const-val call_tmp[2266492]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266494 'move' call_tmp[2266492](2266496 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266501 'move' call_tmp[2266499](2266503 'ptr_eq' call_tmp[2266485] call_tmp[2266492]))
    if call_tmp[2266499]
    {
      const-val call_tmp[2266508]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266512 'move' coerce_tmp[2266510](2266514 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266517]:owned SystemError[1000238] "temp"
      (2266520 call fromSyserr[1017113] coerce_tmp[2266510] "Operation attempted on an invalid channel" ret_tmp[2266517])
      (2266524 'move' call_tmp[2266508] ret_tmp[2266517])
      val call_tmp[2266527]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266529]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266531]:owned Error[966458] "temp"
      ref i_x[2266533]:owned SystemError[1000238] "temp"
      (2266535 'move' i_x[2266533](2266537 'set reference' call_tmp[2266508]))
      ref i__retArg[2266539]:owned Error[966458] "temp"
      (2266541 'move' i__retArg[2266539](2266543 'set reference' ret_tmp[2266531]))
      val _formal_tmp_x[2266545]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266547 'move' _formal_tmp_x[2266545] i_x[2266533])
      const-val ret[2266550]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266552]:owned SystemError[1000238] "temp"
      (2266554 'move' i_this[2266552](2266556 'set reference' _formal_tmp_x[2266545]))
      val coerce_tmp[2266558]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2266560 'move' coerce_tmp[2266558](2266562 '.v' i_this[2266552] chpl_p[1000233]))
      val call_tmp[2266565]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266567 'move' call_tmp[2266565](2266569 'cast' Error[167938] coerce_tmp[2266558]))
      val castPtr[2266572]:Error[167938] "dead at end of block" "insert auto destroy"
      (2266574 'move' castPtr[2266572] call_tmp[2266565])
      ref i_this[2266577]:owned SystemError[1000238] "temp"
      (2266579 'move' i_this[2266577](2266581 'set reference' _formal_tmp_x[2266545]))
      val tmp[2266583]:SystemError[264845] "temp"
      (2266585 'move' tmp[2266583](2266587 'cast' SystemError[264845] nil[44]))
      (2266590 '.=' i_this[2266577] chpl_p[1000233] tmp[2266583])
      val coerce_tmp[2266594]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266596 'move' coerce_tmp[2266594](2266598 'cast' object[22] call_tmp[2266565]))
      const-val call_tmp[2266601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266603 'move' call_tmp[2266601](2266605 'ptr_eq' coerce_tmp[2266594] nil[44]))
      if call_tmp[2266601]
      {
        (2266611 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266614]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266616]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2266619 call init[968094] initTemp[2266616] castPtr[2266572])
      (2266622 'move' call_tmp[2266614] initTemp[2266616])
      (2266625 'move' ret[2266550] call_tmp[2266614])
      (2266629 call chpl__autoDestroy[1516200] _formal_tmp_x[2266545])
      (2266631 '=' i__retArg[2266539] ret[2266550])
      (2266634 'move' coerce_tmp[2266529] ret_tmp[2266531])
      const-val _formal_tmp_in_err[2266637]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266639 'move' _formal_tmp_in_err[2266637] coerce_tmp[2266529])
      (2266642 'move' call_tmp[2266527](2266645 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266637]))
      (2266647 '=' i_error_out[2266459] call_tmp[2266527])
      gotoErrorHandlingReturn _endlock[2266710] _endlock[2266710]
    }
    const-val call_tmp[2266653]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266655 'move' call_tmp[2266653](2266658 call qio_err_iserr[223646] err[2266466]))
    const-val call_tmp[2266660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266662 'move' call_tmp[2266660](2266664 '!=' call_tmp[2266653] 0))
    if call_tmp[2266660]
    {
      val error[2266669]:Error[167938] "error variable" "temp"
      (2266671 'move' error[2266669] nil[44])
      (2266675 call _ch_ioerror[1062865] rvfRerefTmp[2083832] err[2266466] "in lock" error[2266669])
      val errorExists[2266680]:bool[10] "temp"
      (2266682 'move' errorExists[2266680](2266684 '!=' error[2266669] nil[44]))
      if errorExists[2266680]
      {
        gotoErrorHandling handler[2266692] handler[2266692]
      }
      label handler[2266692]
      val errorExists[2266694]:bool[10] "temp"
      (2266696 'move' errorExists[2266694](2266698 '!=' error[2266669] nil[44]))
      if errorExists[2266694]
      {
        (2266703 '=' i_error_out[2266459] error[2266669])
        gotoErrorHandlingReturn _endlock[2266710] _endlock[2266710]
      }
    }
    label _endlock[2266710]
    val errorExists[2109064]:bool[10] "temp"
    (2109069 'move' errorExists[2109064](2109066 '!=' error[1810496] nil[44]))
    if errorExists[2109064]
    {
      gotoErrorHandling handler[1810497] handler[1810497]
    }
    label handler[1810497]
    const-val shouldHandleError[1810514]:bool[10] "temp"
    val errorExists[2109072]:bool[10] "temp"
    (2109077 'move' errorExists[2109072](2109074 '!=' error[1810496] nil[44]))
    (1810518 'move' shouldHandleError[1810514] errorExists[2109072])
    if shouldHandleError[1810514]
    {
      (1810511 call chpl_uncaught_error[170243] error[1810496])
    }
    const-ref call_tmp[1080218]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083818]:channel(true,dynamic,false)[1060947] "temp"
    (2083822 'move' rvfRerefTmp[2083818](2083819 'set reference' this[1807070]))
    ref call_tmp[2263768]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263770 'move' call_tmp[2263768](2263772 '.' rvfRerefTmp[2083818] _channel_internal[1060940]))
    (1080220 'move' call_tmp[1080218] call_tmp[2263768])
    const-val call_tmp[1080226]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1080285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1080289 'move' coerce_tmp[1080285](1080287 'deref' call_tmp[1080218]))
    (1080228 'move' call_tmp[1080226](1080231 call qio_channel_offset_unlocked[233382] coerce_tmp[1080285]))
    (2122236 '=' ret[1807072] call_tmp[1080226])
    ref rvfRerefTmp[2083825]:channel(true,dynamic,false)[1060947] "temp"
    (2083829 'move' rvfRerefTmp[2083825](2083826 'set reference' this[1807070]))
    (1080244 return _void[55])
  }
  function on_fn[1080757](const in arg start[1807074]:int(64)[13], ref arg ret[1807076]:channel(false,dynamic,false)[1080682], const in arg style[1807078]:iostyle[231844], const in arg end[1807080]:int(64)[13], const in arg this[1807082]:file[235580], ref arg err[1807084]:syserr[223584], const in arg hints[1807086]:int(32)[95], ref arg error_out[1810567]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1810571]:Error[167938] "error variable" "temp"
    (1810580 'move' error[1810571] nil[44])
    ref rvfRerefTmp[2083861]:file[235580] "temp"
    (2083865 'move' rvfRerefTmp[2083861](2083862 'set reference' this[1807082]))
    (1080768 call checkAssumingLocal[235768] rvfRerefTmp[2083861] error[1810571])
    val errorExists[2109104]:bool[10] "temp"
    (2109109 'move' errorExists[2109104](2109106 '!=' error[1810571] nil[44]))
    if errorExists[2109104]
    {
      gotoErrorHandling handler[1810572] handler[1810572]
    }
    label handler[1810572]
    const-val shouldHandleError[1810591]:bool[10] "temp"
    val errorExists[2109112]:bool[10] "temp"
    (2109117 'move' errorExists[2109112](2109114 '!=' error[1810571] nil[44]))
    (1810595 'move' shouldHandleError[1810591] errorExists[2109112])
    if shouldHandleError[1810591]
    {
      (1810587 '=' error_out[1810567] error[1810571])
      gotoErrorHandlingReturn _endon_fn[1810569] _endon_fn[1810569]
    }
    const-val call_tmp[1080770]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1081112]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1081583]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    const-val tmp[1807666]:iostyle[231844] "temp"
    (1807669 'move' tmp[1807666] style[1807078])
    ref rvfRerefTmp[2083854]:file[235580] "temp"
    (2083858 'move' rvfRerefTmp[2083854](2083855 'set reference' this[1807082]))
    (1081115 call init[1081128] initTemp[1081112] rvfRerefTmp[2083854] _formal_tmp_out_error[1081583] hints[1807086] start[1807074] end[1807080] tmp[1807666])
    (2207210 '=' err[1807084] _formal_tmp_out_error[1081583])
    (1080772 'move' call_tmp[1080770] initTemp[1081112])
    (1080786 call =[1081592] ret[1807076] call_tmp[1080770])
    ref i_x[2331644]:channel(false,dynamic,false)[1080682] "temp"
    (2331648 'move' i_x[2331644](2331646 'set reference' call_tmp[1080770]))
    (2331652 call deinit[1540469] i_x[2331644])
    label _endon_fn[1810569]
    (1080792 return _void[55])
  }
  function on_fn[1081206](const in arg end[1807088]:int(64)[13], const in arg hints[1807090]:int(32)[95], const in arg local_style[1807092]:iostyle[231844], ref arg this[1807094]:channel(false,dynamic,false)[1080682], const in arg start[1807096]:int(64)[13], const in arg f[1807098]:file[235580], ref arg _formal_tmp_error[1807100]:syserr[223584]) : void[4] "on" "resolved"
  {
    ref call_tmp[1081212]:locale[28] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270019]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270021 'move' call_tmp[2270019](2270023 '.' this[1807094] home[1080670]))
    (1081214 'move' call_tmp[1081212] call_tmp[2270019])
    const-ref call_tmp[1081220]:locale[28] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083888]:file[235580] "temp"
    (2083892 'move' rvfRerefTmp[2083888](2083889 'set reference' f[1807098]))
    ref call_tmp[2216493]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216495 'move' call_tmp[2216493](2216497 '.' rvfRerefTmp[2083888] home[235562]))
    (1081222 'move' call_tmp[1081220] call_tmp[2216493])
    (1081229 call =[90631] call_tmp[1081212] call_tmp[1081220])
    ref call_tmp[1081291]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270073]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270075 'move' call_tmp[2270073](2270077 '.' this[1807094] _channel_internal[1080675]))
    (1081293 'move' call_tmp[1081291] call_tmp[2270073])
    const-ref call_tmp[1081299]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083895]:file[235580] "temp"
    (2083899 'move' rvfRerefTmp[2083895](2083896 'set reference' f[1807098]))
    ref call_tmp[2216675]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216677 'move' call_tmp[2216675](2216679 '.' rvfRerefTmp[2083895] _file_internal[235568]))
    (1081301 'move' call_tmp[1081299] call_tmp[2216675])
    const-val call_tmp[1081314]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1081552]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081556 'move' coerce_tmp[1081552](1081554 'deref' call_tmp[1081299]))
    const-val coerce_tmp[1081558]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081564 'move' coerce_tmp[1081558](1081560 'cast' int(32)[95] 1))
    const-val coerce_tmp[1081566]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081572 'move' coerce_tmp[1081566](1081568 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2083874]:iostyle[231844] "temp"
    (2083878 'move' rvfRerefTmp[2083874](2083875 'set reference' local_style[1807092]))
    (1081316 'move' call_tmp[1081314](1081319 call qio_channel_create[232878] call_tmp[1081291] coerce_tmp[1081552] hints[1807090] coerce_tmp[1081558] coerce_tmp[1081566] start[1807096] end[1807088] rvfRerefTmp[2083874]))
    (2207216 '=' _formal_tmp_error[1807100] call_tmp[1081314])
    (1081332 return _void[55])
  }
  function on_fn[1081818](const in arg rhs[1807102]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1081824]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "reference to a const" "temp"
    ref rvfRerefTmp[2083909]:channel(false,dynamic,false)[1080682] "temp"
    (2083913 'move' rvfRerefTmp[2083909](2083910 'set reference' rhs[1807102]))
    ref call_tmp[2270083]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270085 'move' call_tmp[2270083](2270087 '.' rvfRerefTmp[2083909] _channel_internal[1080675]))
    (1081826 'move' call_tmp[1081824] call_tmp[2270083])
    const-val coerce_tmp[1082017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082021 'move' coerce_tmp[1082017](1082019 'deref' call_tmp[1081824]))
    (1081833 call qio_channel_retain[232951] coerce_tmp[1082017])
    (1081835 return _void[55])
  }
  function on_fn[1081862](const  ref arg lhs[1807104]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1081868]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270093]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270095 'move' call_tmp[2270093](2270097 '.' lhs[1807104] _channel_internal[1080675]))
    (1081870 'move' call_tmp[1081868] call_tmp[2270093])
    const-val coerce_tmp[1082036]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082040 'move' coerce_tmp[1082036](1082038 'deref' call_tmp[1081868]))
    (1081877 call qio_channel_release[232961] coerce_tmp[1082036])
    (1081879 return _void[55])
  }
  function on_fn[1082187](const in arg this[1807106]:channel(false,dynamic,false)[1080682], ref arg err[1807108]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1082201]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083923]:channel(false,dynamic,false)[1080682] "temp"
    (2083927 'move' rvfRerefTmp[2083923](2083924 'set reference' this[1807106]))
    ref call_tmp[2270103]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270105 'move' call_tmp[2270103](2270107 '.' rvfRerefTmp[2083923] _channel_internal[1080675]))
    (1082203 'move' call_tmp[1082201] call_tmp[2270103])
    const-val call_tmp[1082209]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082532]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082538 'move' coerce_tmp[1082532](1082534 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082540]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082544 'move' coerce_tmp[1082540](1082542 'deref' call_tmp[1082201]))
    (1082211 'move' call_tmp[1082209](1082214 call qio_channel_close[233140] coerce_tmp[1082532] coerce_tmp[1082540]))
    (2207222 '=' err[1807108] call_tmp[1082209])
    (1082223 return _void[55])
  }
  function on_fn[1082616](const in arg this[1807110]:channel(false,dynamic,false)[1080682], ref arg path[1807112]:string[26], ref arg offset[1807114]:int(64)[13], ref arg error_out[1810722]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1082622]:c_string[19] "dead at end of block" "insert auto destroy"
    (1082823 'move' tmp_path[1082622](1082821 'cast' c_string[19] nil[44]))
    val tmp_offset[1082628]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1082630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082826 'move' tmp_offset[1082628] 0)
    const-val call_tmp[1082641]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082643 'move' call_tmp[1082641] 0)
    val err[1082647]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082769]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207909]:syserr[223584] "temp"
    (2207913 'move' i_ret[2207909](2207911 'set reference' init_coerce_tmp[1082769]))
    const-val call_tmp[2207916]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207918 'move' call_tmp[2207916](2207921 call qio_int_to_err[223634] call_tmp[1082641]))
    (2207923 '=' i_ret[2207909] call_tmp[2207916])
    (1082649 'move' err[1082647] init_coerce_tmp[1082769])
    const-ref call_tmp[1082662]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2083937]:channel(false,dynamic,false)[1080682] "temp"
    (2083941 'move' rvfRerefTmp[2083937](2083938 'set reference' this[1807110]))
    ref call_tmp[2270113]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270115 'move' call_tmp[2270113](2270117 '.' rvfRerefTmp[2083937] _channel_internal[1080675]))
    (1082664 'move' call_tmp[1082662] call_tmp[2270113])
    const-val call_tmp[1082670]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082778]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082784 'move' coerce_tmp[1082778](1082780 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082786]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082790 'move' coerce_tmp[1082786](1082788 'deref' call_tmp[1082662]))
    (1082672 'move' call_tmp[1082670](1082675 call qio_channel_path_offset[232924] coerce_tmp[1082778] coerce_tmp[1082786] tmp_path[1082622] tmp_offset[1082628]))
    ref i_ret[2207227]:syserr[223584] "temp"
    (2207231 'move' i_ret[2207227](2207229 'set reference' err[1082647]))
    (2207234 '=' i_ret[2207227] call_tmp[1082670])
    const-val call_tmp[1082688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206586]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206588 'move' call_tmp[2206586](2206591 call qio_err_iserr[223646] err[1082647]))
    const-val call_tmp[2206593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206595 'move' call_tmp[2206593](2206597 '==' call_tmp[2206586] 0))
    (1082690 'move' call_tmp[1082688] call_tmp[2206593])
    const-val call_tmp[1082695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082697 'move' call_tmp[1082695] call_tmp[1082688])
    if call_tmp[1082695]
    {
      const-val call_tmp[1082704]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val default_arg_length[1082799]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      val error[1810727]:Error[167938] "error variable" "temp"
      (1810729 'move' error[1810727] nil[44])
      ref i_error_out[2203592]:Error[167938] "temp"
      (2203596 'move' i_error_out[2203592](2203594 'set reference' error[1810727]))
      val ret[2203599]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
      const-val call_tmp[2203601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203603 'move' call_tmp[2203601](2203605 'string_length_bytes' tmp_path[1082622]))
      (2203607 'move' ret[2203599] call_tmp[2203601])
      (1082804 'move' default_arg_length[1082799] ret[2203599])
      val errorExists[2109168]:bool[10] "temp"
      (2109173 'move' errorExists[2109168](2109170 '!=' error[1810727] nil[44]))
      if errorExists[2109168]
      {
        (1810733 '=' error_out[1810722] error[1810727])
        gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
      }
      val error[1810742]:Error[167938] "error variable" "temp"
      (1810744 'move' error[1810742] nil[44])
      const-val ret_tmp[1829075]:string[26] "temp"
      ref i_error_out[2141774]:Error[167938] "temp"
      (2141778 'move' i_error_out[2141774](2141776 'set reference' error[1810742]))
      ref i__retArg[2141780]:string[26] "temp"
      (2141784 'move' i__retArg[2141780](2141782 'set reference' ret_tmp[1829075]))
      const-val ret[2141787]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141789]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141791 'move' call_tmp[2141789](2141793 'cast' c_ptr(uint(8))[937423] tmp_path[1082622]))
      const-val call_tmp[2141796]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141798]:Error[167938] "error variable" "temp"
      (2141800 'move' error[2141798] nil[44])
      const-val ret[2141803]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141805]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141807]:Error[167938] "error variable" "temp"
      (2141809 'move' error[2141807] nil[44])
      const-val ret_tmp[2141812]:string[26] "temp"
      (2141815 call decodeByteBuffer[173892] call_tmp[2141789] default_arg_length[1082799] replace[173648] error[2141807] ret_tmp[2141812])
      (2141821 'move' call_tmp[2141805] ret_tmp[2141812])
      val errorExists[2141824]:bool[10] "temp"
      (2141826 'move' errorExists[2141824](2141828 '!=' error[2141807] nil[44]))
      if errorExists[2141824]
      {
        (2141833 '=' error[2141798] error[2141807])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141842] _endcreateStringWithNewBuffer[2141842]
      }
      (2141839 'move' ret[2141803] call_tmp[2141805])
      label _endcreateStringWithNewBuffer[2141842]
      (2141844 'move' call_tmp[2141796] ret[2141803])
      val errorExists[2141847]:bool[10] "temp"
      (2141849 'move' errorExists[2141847](2141851 '!=' error[2141798] nil[44]))
      if errorExists[2141847]
      {
        (2141856 '=' i_error_out[2141774] error[2141798])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141865] _endcreateStringWithNewBuffer[2141865]
      }
      (2141862 'move' ret[2141787] call_tmp[2141796])
      label _endcreateStringWithNewBuffer[2141865]
      (2141867 '=' i__retArg[2141780] ret[2141787])
      (1829078 'move' call_tmp[1082704] ret_tmp[1829075])
      val errorExists[2109176]:bool[10] "temp"
      (2109181 'move' errorExists[2109176](2109178 '!=' error[1810742] nil[44]))
      if errorExists[2109176]
      {
        (1810748 '=' error_out[1810722] error[1810742])
        gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
      }
      (1082714 call =[38269] path[1807112] call_tmp[1082704])
      ref i_x[2131149]:string[26] "temp"
      (2131153 'move' i_x[2131149](2131151 'set reference' call_tmp[1082704]))
      (2131157 call deinit[30831] i_x[2131149])
      ref i_cs[2120198]:c_string[19] "temp"
      (2120202 'move' i_cs[2120198](2120200 'set reference' tmp_path[1082622]))
      const-val call_tmp[2120205]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120207 'move' call_tmp[2120205](2120209 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120212]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120214 'move' call_tmp[2120212](2120216 'cast' c_string[19] call_tmp[2120205]))
      const-val coerce_tmp[2120219]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120221 'move' coerce_tmp[2120219](2120223 'deref' i_cs[2120198]))
      const-val call_tmp[2120225]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120227 'move' call_tmp[2120225](2120229 'string_compare' coerce_tmp[2120219] call_tmp[2120212]))
      const-val call_tmp[2120232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120234 'move' call_tmp[2120232](2120236 '!=' call_tmp[2120225] 0))
      if call_tmp[2120232]
      {
        (2120242 call chpl_rt_free_c_string[22714] i_cs[2120198])
      }
      (2122242 '=' offset[1807114] tmp_offset[1082628])
    }
    label _endon_fn[1810724]
    (1082733 return _void[55])
  }
  function on_fn[1164907](const in arg this[1807142]:channel(true,dynamic,false)[1060947], const  ref arg args[1807144]:(string,codepointIndex,string)[1158555], const in arg origLocale[1807146]:locale[28], ref arg error_out[1811035]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1811039]:Error[167938] "error variable" "temp"
    (1811048 'move' error[1811039] nil[44])
    ref rvfRerefTmp[2083982]:channel(true,dynamic,false)[1060947] "temp"
    (2083986 'move' rvfRerefTmp[2083982](2083983 'set reference' this[1807142]))
    ref i_error_out[2266714]:Error[167938] "temp"
    (2266718 'move' i_error_out[2266714](2266716 'set reference' error[1811039]))
    const-val err[2266721]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2266723]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266725 'move' call_tmp[2266723](2266728 call qio_int_to_err[223634] 0))
    (2266730 'move' err[2266721] call_tmp[2266723])
    const-val coerce_tmp[2266733]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2266735 'move' coerce_tmp[2266733](2266737 '.v' rvfRerefTmp[2083982] _channel_internal[1060940]))
    const-val call_tmp[2266740]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266742 'move' call_tmp[2266740](2266744 'cast' c_void_ptr[149] coerce_tmp[2266733]))
    const-val call_tmp[2266747]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266749 'move' call_tmp[2266747](2266751 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266756 'move' call_tmp[2266754](2266758 'ptr_eq' call_tmp[2266740] call_tmp[2266747]))
    if call_tmp[2266754]
    {
      const-val call_tmp[2266763]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266767 'move' coerce_tmp[2266765](2266769 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266772]:owned SystemError[1000238] "temp"
      (2266775 call fromSyserr[1017113] coerce_tmp[2266765] "Operation attempted on an invalid channel" ret_tmp[2266772])
      (2266779 'move' call_tmp[2266763] ret_tmp[2266772])
      val call_tmp[2266782]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266784]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266786]:owned Error[966458] "temp"
      ref i_x[2266788]:owned SystemError[1000238] "temp"
      (2266790 'move' i_x[2266788](2266792 'set reference' call_tmp[2266763]))
      ref i__retArg[2266794]:owned Error[966458] "temp"
      (2266796 'move' i__retArg[2266794](2266798 'set reference' ret_tmp[2266786]))
      val _formal_tmp_x[2266800]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266802 'move' _formal_tmp_x[2266800] i_x[2266788])
      const-val ret[2266805]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266807]:owned SystemError[1000238] "temp"
      (2266809 'move' i_this[2266807](2266811 'set reference' _formal_tmp_x[2266800]))
      val coerce_tmp[2266813]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2266815 'move' coerce_tmp[2266813](2266817 '.v' i_this[2266807] chpl_p[1000233]))
      val call_tmp[2266820]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266822 'move' call_tmp[2266820](2266824 'cast' Error[167938] coerce_tmp[2266813]))
      val castPtr[2266827]:Error[167938] "dead at end of block" "insert auto destroy"
      (2266829 'move' castPtr[2266827] call_tmp[2266820])
      ref i_this[2266832]:owned SystemError[1000238] "temp"
      (2266834 'move' i_this[2266832](2266836 'set reference' _formal_tmp_x[2266800]))
      val tmp[2266838]:SystemError[264845] "temp"
      (2266840 'move' tmp[2266838](2266842 'cast' SystemError[264845] nil[44]))
      (2266845 '.=' i_this[2266832] chpl_p[1000233] tmp[2266838])
      val coerce_tmp[2266849]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266851 'move' coerce_tmp[2266849](2266853 'cast' object[22] call_tmp[2266820]))
      const-val call_tmp[2266856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266858 'move' call_tmp[2266856](2266860 'ptr_eq' coerce_tmp[2266849] nil[44]))
      if call_tmp[2266856]
      {
        (2266866 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266869]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266871]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2266874 call init[968094] initTemp[2266871] castPtr[2266827])
      (2266877 'move' call_tmp[2266869] initTemp[2266871])
      (2266880 'move' ret[2266805] call_tmp[2266869])
      (2266884 call chpl__autoDestroy[1516200] _formal_tmp_x[2266800])
      (2266886 '=' i__retArg[2266794] ret[2266805])
      (2266889 'move' coerce_tmp[2266784] ret_tmp[2266786])
      const-val _formal_tmp_in_err[2266892]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266894 'move' _formal_tmp_in_err[2266892] coerce_tmp[2266784])
      (2266897 'move' call_tmp[2266782](2266900 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266892]))
      (2266902 '=' i_error_out[2266714] call_tmp[2266782])
      gotoErrorHandlingReturn _endlock[2266965] _endlock[2266965]
    }
    const-val call_tmp[2266908]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266910 'move' call_tmp[2266908](2266913 call qio_err_iserr[223646] err[2266721]))
    const-val call_tmp[2266915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266917 'move' call_tmp[2266915](2266919 '!=' call_tmp[2266908] 0))
    if call_tmp[2266915]
    {
      val error[2266924]:Error[167938] "error variable" "temp"
      (2266926 'move' error[2266924] nil[44])
      (2266930 call _ch_ioerror[1062865] rvfRerefTmp[2083982] err[2266721] "in lock" error[2266924])
      val errorExists[2266935]:bool[10] "temp"
      (2266937 'move' errorExists[2266935](2266939 '!=' error[2266924] nil[44]))
      if errorExists[2266935]
      {
        gotoErrorHandling handler[2266947] handler[2266947]
      }
      label handler[2266947]
      val errorExists[2266949]:bool[10] "temp"
      (2266951 'move' errorExists[2266949](2266953 '!=' error[2266924] nil[44]))
      if errorExists[2266949]
      {
        (2266958 '=' i_error_out[2266714] error[2266924])
        gotoErrorHandlingReturn _endlock[2266965] _endlock[2266965]
      }
    }
    label _endlock[2266965]
    val errorExists[2109336]:bool[10] "temp"
    (2109341 'move' errorExists[2109336](2109338 '!=' error[1811039] nil[44]))
    if errorExists[2109336]
    {
      gotoErrorHandling handler[1811040] handler[1811040]
    }
    label handler[1811040]
    const-val shouldHandleError[1811059]:bool[10] "temp"
    val errorExists[2109344]:bool[10] "temp"
    (2109349 'move' errorExists[2109344](2109346 '!=' error[1811039] nil[44]))
    (1811063 'move' shouldHandleError[1811059] errorExists[2109344])
    if shouldHandleError[1811059]
    {
      (1811055 '=' error_out[1811035] error[1811039])
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    const-val i[1164928]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1164930 'move' i[1164928] 0)
    val error[1811067]:Error[167938] "error variable" "temp"
    (1811076 'move' error[1811067] nil[44])
    const-ref call_tmp[1165070]:string[26] "dead after last mention" "maybe param" "temp"
    (1165072 'move' call_tmp[1165070](1165157 '.v' args[1807144] x0[1158549]))
    ref rvfRerefTmp[2083989]:channel(true,dynamic,false)[1060947] "temp"
    (2083993 'move' rvfRerefTmp[2083989](2083990 'set reference' this[1807142]))
    val rvfRerefTmp[2084044]:locale[28] "temp"
    (2084047 'move' rvfRerefTmp[2084044] origLocale[1807146])
    (1165081 call _writeOne[1165160] rvfRerefTmp[2083989] call_tmp[1165070] rvfRerefTmp[2084044] error[1811067])
    val errorExists[2109352]:bool[10] "temp"
    (2109357 'move' errorExists[2109352](2109354 '!=' error[1811067] nil[44]))
    if errorExists[2109352]
    {
      gotoErrorHandling handler[1811068] handler[1811068]
    }
    label handler[1811068]
    const-val shouldHandleError[1811087]:bool[10] "temp"
    val errorExists[2109360]:bool[10] "temp"
    (2109365 'move' errorExists[2109360](2109362 '!=' error[1811067] nil[44]))
    (1811091 'move' shouldHandleError[1811087] errorExists[2109360])
    if shouldHandleError[1811087]
    {
      (1811083 '=' error_out[1811035] error[1811067])
      ref rvfRerefTmp[2084010]:channel(true,dynamic,false)[1060947] "temp"
      (2084014 'move' rvfRerefTmp[2084010](2084011 'set reference' this[1807142]))
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    val error[1811095]:Error[167938] "error variable" "temp"
    (1811104 'move' error[1811095] nil[44])
    const-ref call_tmp[1165102]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1165104 'move' call_tmp[1165102](1173910 '.v' args[1807144] x1[1158551]))
    ref rvfRerefTmp[2083996]:channel(true,dynamic,false)[1060947] "temp"
    (2084000 'move' rvfRerefTmp[2083996](2083997 'set reference' this[1807142]))
    val rvfRerefTmp[2084050]:locale[28] "temp"
    (2084053 'move' rvfRerefTmp[2084050] origLocale[1807146])
    (1165113 call _writeOne[1173913] rvfRerefTmp[2083996] call_tmp[1165102] rvfRerefTmp[2084050] error[1811095])
    val errorExists[2109368]:bool[10] "temp"
    (2109373 'move' errorExists[2109368](2109370 '!=' error[1811095] nil[44]))
    if errorExists[2109368]
    {
      gotoErrorHandling handler[1811096] handler[1811096]
    }
    label handler[1811096]
    const-val shouldHandleError[1811115]:bool[10] "temp"
    val errorExists[2109376]:bool[10] "temp"
    (2109381 'move' errorExists[2109376](2109378 '!=' error[1811095] nil[44]))
    (1811119 'move' shouldHandleError[1811115] errorExists[2109376])
    if shouldHandleError[1811115]
    {
      (1811111 '=' error_out[1811035] error[1811095])
      ref rvfRerefTmp[2084017]:channel(true,dynamic,false)[1060947] "temp"
      (2084021 'move' rvfRerefTmp[2084017](2084018 'set reference' this[1807142]))
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    val error[1811123]:Error[167938] "error variable" "temp"
    (1811132 'move' error[1811123] nil[44])
    const-ref call_tmp[1165134]:string[26] "dead after last mention" "maybe param" "temp"
    (1165136 'move' call_tmp[1165134](1175644 '.v' args[1807144] x2[1158553]))
    ref rvfRerefTmp[2084003]:channel(true,dynamic,false)[1060947] "temp"
    (2084007 'move' rvfRerefTmp[2084003](2084004 'set reference' this[1807142]))
    val rvfRerefTmp[2084056]:locale[28] "temp"
    (2084059 'move' rvfRerefTmp[2084056] origLocale[1807146])
    (1165145 call _writeOne[1165160] rvfRerefTmp[2084003] call_tmp[1165134] rvfRerefTmp[2084056] error[1811123])
    val errorExists[2109384]:bool[10] "temp"
    (2109389 'move' errorExists[2109384](2109386 '!=' error[1811123] nil[44]))
    if errorExists[2109384]
    {
      gotoErrorHandling handler[1811124] handler[1811124]
    }
    label handler[1811124]
    const-val shouldHandleError[1811143]:bool[10] "temp"
    val errorExists[2109392]:bool[10] "temp"
    (2109397 'move' errorExists[2109392](2109394 '!=' error[1811123] nil[44]))
    (1811147 'move' shouldHandleError[1811143] errorExists[2109392])
    if shouldHandleError[1811143]
    {
      (1811139 '=' error_out[1811035] error[1811123])
      ref rvfRerefTmp[2084024]:channel(true,dynamic,false)[1060947] "temp"
      (2084028 'move' rvfRerefTmp[2084024](2084025 'set reference' this[1807142]))
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    ref rvfRerefTmp[2084031]:channel(true,dynamic,false)[1060947] "temp"
    (2084035 'move' rvfRerefTmp[2084031](2084032 'set reference' this[1807142]))
    label _endon_fn[1811037]
    (1165010 return _void[55])
  }
  function on_fn[1180386](const in arg this[1807148]:channel(true,dynamic,false)[1060947], const  ref arg args[1807150]:(string,codepointIndex,string,int(64))[1176520], const in arg origLocale[1807152]:locale[28], ref arg error_out[1811532]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1811536]:Error[167938] "error variable" "temp"
    (1811545 'move' error[1811536] nil[44])
    ref rvfRerefTmp[2084069]:channel(true,dynamic,false)[1060947] "temp"
    (2084073 'move' rvfRerefTmp[2084069](2084070 'set reference' this[1807148]))
    ref i_error_out[2266969]:Error[167938] "temp"
    (2266973 'move' i_error_out[2266969](2266971 'set reference' error[1811536]))
    const-val err[2266976]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2266978]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266980 'move' call_tmp[2266978](2266983 call qio_int_to_err[223634] 0))
    (2266985 'move' err[2266976] call_tmp[2266978])
    const-val coerce_tmp[2266988]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2266990 'move' coerce_tmp[2266988](2266992 '.v' rvfRerefTmp[2084069] _channel_internal[1060940]))
    const-val call_tmp[2266995]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266997 'move' call_tmp[2266995](2266999 'cast' c_void_ptr[149] coerce_tmp[2266988]))
    const-val call_tmp[2267002]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267004 'move' call_tmp[2267002](2267006 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267011 'move' call_tmp[2267009](2267013 'ptr_eq' call_tmp[2266995] call_tmp[2267002]))
    if call_tmp[2267009]
    {
      const-val call_tmp[2267018]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267020]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267022 'move' coerce_tmp[2267020](2267024 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267027]:owned SystemError[1000238] "temp"
      (2267030 call fromSyserr[1017113] coerce_tmp[2267020] "Operation attempted on an invalid channel" ret_tmp[2267027])
      (2267034 'move' call_tmp[2267018] ret_tmp[2267027])
      val call_tmp[2267037]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267039]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267041]:owned Error[966458] "temp"
      ref i_x[2267043]:owned SystemError[1000238] "temp"
      (2267045 'move' i_x[2267043](2267047 'set reference' call_tmp[2267018]))
      ref i__retArg[2267049]:owned Error[966458] "temp"
      (2267051 'move' i__retArg[2267049](2267053 'set reference' ret_tmp[2267041]))
      val _formal_tmp_x[2267055]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267057 'move' _formal_tmp_x[2267055] i_x[2267043])
      const-val ret[2267060]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267062]:owned SystemError[1000238] "temp"
      (2267064 'move' i_this[2267062](2267066 'set reference' _formal_tmp_x[2267055]))
      val coerce_tmp[2267068]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2267070 'move' coerce_tmp[2267068](2267072 '.v' i_this[2267062] chpl_p[1000233]))
      val call_tmp[2267075]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267077 'move' call_tmp[2267075](2267079 'cast' Error[167938] coerce_tmp[2267068]))
      val castPtr[2267082]:Error[167938] "dead at end of block" "insert auto destroy"
      (2267084 'move' castPtr[2267082] call_tmp[2267075])
      ref i_this[2267087]:owned SystemError[1000238] "temp"
      (2267089 'move' i_this[2267087](2267091 'set reference' _formal_tmp_x[2267055]))
      val tmp[2267093]:SystemError[264845] "temp"
      (2267095 'move' tmp[2267093](2267097 'cast' SystemError[264845] nil[44]))
      (2267100 '.=' i_this[2267087] chpl_p[1000233] tmp[2267093])
      val coerce_tmp[2267104]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267106 'move' coerce_tmp[2267104](2267108 'cast' object[22] call_tmp[2267075]))
      const-val call_tmp[2267111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267113 'move' call_tmp[2267111](2267115 'ptr_eq' coerce_tmp[2267104] nil[44]))
      if call_tmp[2267111]
      {
        (2267121 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267124]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267126]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2267129 call init[968094] initTemp[2267126] castPtr[2267082])
      (2267132 'move' call_tmp[2267124] initTemp[2267126])
      (2267135 'move' ret[2267060] call_tmp[2267124])
      (2267139 call chpl__autoDestroy[1516200] _formal_tmp_x[2267055])
      (2267141 '=' i__retArg[2267049] ret[2267060])
      (2267144 'move' coerce_tmp[2267039] ret_tmp[2267041])
      const-val _formal_tmp_in_err[2267147]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267149 'move' _formal_tmp_in_err[2267147] coerce_tmp[2267039])
      (2267152 'move' call_tmp[2267037](2267155 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267147]))
      (2267157 '=' i_error_out[2266969] call_tmp[2267037])
      gotoErrorHandlingReturn _endlock[2267220] _endlock[2267220]
    }
    const-val call_tmp[2267163]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267165 'move' call_tmp[2267163](2267168 call qio_err_iserr[223646] err[2266976]))
    const-val call_tmp[2267170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267172 'move' call_tmp[2267170](2267174 '!=' call_tmp[2267163] 0))
    if call_tmp[2267170]
    {
      val error[2267179]:Error[167938] "error variable" "temp"
      (2267181 'move' error[2267179] nil[44])
      (2267185 call _ch_ioerror[1062865] rvfRerefTmp[2084069] err[2266976] "in lock" error[2267179])
      val errorExists[2267190]:bool[10] "temp"
      (2267192 'move' errorExists[2267190](2267194 '!=' error[2267179] nil[44]))
      if errorExists[2267190]
      {
        gotoErrorHandling handler[2267202] handler[2267202]
      }
      label handler[2267202]
      val errorExists[2267204]:bool[10] "temp"
      (2267206 'move' errorExists[2267204](2267208 '!=' error[2267179] nil[44]))
      if errorExists[2267204]
      {
        (2267213 '=' i_error_out[2266969] error[2267179])
        gotoErrorHandlingReturn _endlock[2267220] _endlock[2267220]
      }
    }
    label _endlock[2267220]
    val errorExists[2109616]:bool[10] "temp"
    (2109621 'move' errorExists[2109616](2109618 '!=' error[1811536] nil[44]))
    if errorExists[2109616]
    {
      gotoErrorHandling handler[1811537] handler[1811537]
    }
    label handler[1811537]
    const-val shouldHandleError[1811556]:bool[10] "temp"
    val errorExists[2109624]:bool[10] "temp"
    (2109629 'move' errorExists[2109624](2109626 '!=' error[1811536] nil[44]))
    (1811560 'move' shouldHandleError[1811556] errorExists[2109624])
    if shouldHandleError[1811556]
    {
      (1811552 '=' error_out[1811532] error[1811536])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    const-val i[1180407]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1180409 'move' i[1180407] 0)
    val error[1811564]:Error[167938] "error variable" "temp"
    (1811573 'move' error[1811564] nil[44])
    const-ref call_tmp[1180555]:string[26] "dead after last mention" "maybe param" "temp"
    (1180557 'move' call_tmp[1180555](1180674 '.v' args[1807150] x0[1176512]))
    ref rvfRerefTmp[2084076]:channel(true,dynamic,false)[1060947] "temp"
    (2084080 'move' rvfRerefTmp[2084076](2084077 'set reference' this[1807148]))
    val rvfRerefTmp[2084145]:locale[28] "temp"
    (2084148 'move' rvfRerefTmp[2084145] origLocale[1807152])
    (1180566 call _writeOne[1165160] rvfRerefTmp[2084076] call_tmp[1180555] rvfRerefTmp[2084145] error[1811564])
    val errorExists[2109632]:bool[10] "temp"
    (2109637 'move' errorExists[2109632](2109634 '!=' error[1811564] nil[44]))
    if errorExists[2109632]
    {
      gotoErrorHandling handler[1811565] handler[1811565]
    }
    label handler[1811565]
    const-val shouldHandleError[1811584]:bool[10] "temp"
    val errorExists[2109640]:bool[10] "temp"
    (2109645 'move' errorExists[2109640](2109642 '!=' error[1811564] nil[44]))
    (1811588 'move' shouldHandleError[1811584] errorExists[2109640])
    if shouldHandleError[1811584]
    {
      (1811580 '=' error_out[1811532] error[1811564])
      ref rvfRerefTmp[2084104]:channel(true,dynamic,false)[1060947] "temp"
      (2084108 'move' rvfRerefTmp[2084104](2084105 'set reference' this[1807148]))
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811592]:Error[167938] "error variable" "temp"
    (1811601 'move' error[1811592] nil[44])
    const-ref call_tmp[1180587]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1180589 'move' call_tmp[1180587](1180682 '.v' args[1807150] x1[1176514]))
    ref rvfRerefTmp[2084083]:channel(true,dynamic,false)[1060947] "temp"
    (2084087 'move' rvfRerefTmp[2084083](2084084 'set reference' this[1807148]))
    val rvfRerefTmp[2084151]:locale[28] "temp"
    (2084154 'move' rvfRerefTmp[2084151] origLocale[1807152])
    (1180598 call _writeOne[1173913] rvfRerefTmp[2084083] call_tmp[1180587] rvfRerefTmp[2084151] error[1811592])
    val errorExists[2109648]:bool[10] "temp"
    (2109653 'move' errorExists[2109648](2109650 '!=' error[1811592] nil[44]))
    if errorExists[2109648]
    {
      gotoErrorHandling handler[1811593] handler[1811593]
    }
    label handler[1811593]
    const-val shouldHandleError[1811612]:bool[10] "temp"
    val errorExists[2109656]:bool[10] "temp"
    (2109661 'move' errorExists[2109656](2109658 '!=' error[1811592] nil[44]))
    (1811616 'move' shouldHandleError[1811612] errorExists[2109656])
    if shouldHandleError[1811612]
    {
      (1811608 '=' error_out[1811532] error[1811592])
      ref rvfRerefTmp[2084111]:channel(true,dynamic,false)[1060947] "temp"
      (2084115 'move' rvfRerefTmp[2084111](2084112 'set reference' this[1807148]))
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811620]:Error[167938] "error variable" "temp"
    (1811629 'move' error[1811620] nil[44])
    const-ref call_tmp[1180619]:string[26] "dead after last mention" "maybe param" "temp"
    (1180621 'move' call_tmp[1180619](1180690 '.v' args[1807150] x2[1176516]))
    ref rvfRerefTmp[2084090]:channel(true,dynamic,false)[1060947] "temp"
    (2084094 'move' rvfRerefTmp[2084090](2084091 'set reference' this[1807148]))
    val rvfRerefTmp[2084157]:locale[28] "temp"
    (2084160 'move' rvfRerefTmp[2084157] origLocale[1807152])
    (1180630 call _writeOne[1165160] rvfRerefTmp[2084090] call_tmp[1180619] rvfRerefTmp[2084157] error[1811620])
    val errorExists[2109664]:bool[10] "temp"
    (2109669 'move' errorExists[2109664](2109666 '!=' error[1811620] nil[44]))
    if errorExists[2109664]
    {
      gotoErrorHandling handler[1811621] handler[1811621]
    }
    label handler[1811621]
    const-val shouldHandleError[1811640]:bool[10] "temp"
    val errorExists[2109672]:bool[10] "temp"
    (2109677 'move' errorExists[2109672](2109674 '!=' error[1811620] nil[44]))
    (1811644 'move' shouldHandleError[1811640] errorExists[2109672])
    if shouldHandleError[1811640]
    {
      (1811636 '=' error_out[1811532] error[1811620])
      ref rvfRerefTmp[2084118]:channel(true,dynamic,false)[1060947] "temp"
      (2084122 'move' rvfRerefTmp[2084118](2084119 'set reference' this[1807148]))
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811648]:Error[167938] "error variable" "temp"
    (1811657 'move' error[1811648] nil[44])
    const-ref call_tmp[1180651]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1180653 'move' call_tmp[1180651](1180698 '.' args[1807150] x3[1176518]))
    const-val coerce_tmp[1180701]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180705 'move' coerce_tmp[1180701](1180703 'deref' call_tmp[1180651]))
    ref rvfRerefTmp[2084097]:channel(true,dynamic,false)[1060947] "temp"
    (2084101 'move' rvfRerefTmp[2084097](2084098 'set reference' this[1807148]))
    val rvfRerefTmp[2084163]:locale[28] "temp"
    (2084166 'move' rvfRerefTmp[2084163] origLocale[1807152])
    (1180662 call _writeOne[1068937] rvfRerefTmp[2084097] coerce_tmp[1180701] rvfRerefTmp[2084163] error[1811648])
    val errorExists[2109680]:bool[10] "temp"
    (2109685 'move' errorExists[2109680](2109682 '!=' error[1811648] nil[44]))
    if errorExists[2109680]
    {
      gotoErrorHandling handler[1811649] handler[1811649]
    }
    label handler[1811649]
    const-val shouldHandleError[1811668]:bool[10] "temp"
    val errorExists[2109688]:bool[10] "temp"
    (2109693 'move' errorExists[2109688](2109690 '!=' error[1811648] nil[44]))
    (1811672 'move' shouldHandleError[1811668] errorExists[2109688])
    if shouldHandleError[1811668]
    {
      (1811664 '=' error_out[1811532] error[1811648])
      ref rvfRerefTmp[2084125]:channel(true,dynamic,false)[1060947] "temp"
      (2084129 'move' rvfRerefTmp[2084125](2084126 'set reference' this[1807148]))
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    ref rvfRerefTmp[2084132]:channel(true,dynamic,false)[1060947] "temp"
    (2084136 'move' rvfRerefTmp[2084132](2084133 'set reference' this[1807148]))
    label _endon_fn[1811534]
    (1180489 return _void[55])
  }
  function on_fn[1392469](const in arg this[1807296]:channel(true,dynamic,true)[1021825], const  ref arg args[1807298]:([domain(1,int(64),false)] real(64),ioNewline)[1392594], const in arg origLocale[1807300]:locale[28], ref arg error_out[1812374]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1812378]:Error[167938] "error variable" "temp"
    (1812387 'move' error[1812378] nil[44])
    ref rvfRerefTmp[2084285]:channel(true,dynamic,true)[1021825] "temp"
    (2084289 'move' rvfRerefTmp[2084285](2084286 'set reference' this[1807296]))
    ref i_error_out[2319389]:Error[167938] "temp"
    (2319393 'move' i_error_out[2319389](2319391 'set reference' error[1812378]))
    val err[2319396]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2319398]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319400 'move' call_tmp[2319398](2319403 call qio_int_to_err[223634] 0))
    (2319405 'move' err[2319396] call_tmp[2319398])
    const-val coerce_tmp[2319408]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319410 'move' coerce_tmp[2319408](2319412 '.v' rvfRerefTmp[2084285] _channel_internal[1021818]))
    const-val call_tmp[2319415]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319417 'move' call_tmp[2319415](2319419 'cast' c_void_ptr[149] coerce_tmp[2319408]))
    const-val call_tmp[2319422]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319424 'move' call_tmp[2319422](2319426 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2319429]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319431 'move' call_tmp[2319429](2319433 'ptr_eq' call_tmp[2319415] call_tmp[2319422]))
    if call_tmp[2319429]
    {
      const-val call_tmp[2319438]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2319440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319442 'move' coerce_tmp[2319440](2319444 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2319447]:owned SystemError[1000238] "temp"
      (2319450 call fromSyserr[1017113] coerce_tmp[2319440] "Operation attempted on an invalid channel" ret_tmp[2319447])
      (2319454 'move' call_tmp[2319438] ret_tmp[2319447])
      val call_tmp[2319457]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2319459]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2319461]:owned Error[966458] "temp"
      ref i_x[2319463]:owned SystemError[1000238] "temp"
      (2319465 'move' i_x[2319463](2319467 'set reference' call_tmp[2319438]))
      ref i__retArg[2319469]:owned Error[966458] "temp"
      (2319471 'move' i__retArg[2319469](2319473 'set reference' ret_tmp[2319461]))
      val _formal_tmp_x[2319475]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2319477 'move' _formal_tmp_x[2319475] i_x[2319463])
      const-val ret[2319480]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2319482]:owned SystemError[1000238] "temp"
      (2319484 'move' i_this[2319482](2319486 'set reference' _formal_tmp_x[2319475]))
      val coerce_tmp[2319488]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2319490 'move' coerce_tmp[2319488](2319492 '.v' i_this[2319482] chpl_p[1000233]))
      val call_tmp[2319495]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319497 'move' call_tmp[2319495](2319499 'cast' Error[167938] coerce_tmp[2319488]))
      val castPtr[2319502]:Error[167938] "dead at end of block" "insert auto destroy"
      (2319504 'move' castPtr[2319502] call_tmp[2319495])
      ref i_this[2319507]:owned SystemError[1000238] "temp"
      (2319509 'move' i_this[2319507](2319511 'set reference' _formal_tmp_x[2319475]))
      val tmp[2319513]:SystemError[264845] "temp"
      (2319515 'move' tmp[2319513](2319517 'cast' SystemError[264845] nil[44]))
      (2319520 '.=' i_this[2319507] chpl_p[1000233] tmp[2319513])
      val coerce_tmp[2319524]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319526 'move' coerce_tmp[2319524](2319528 'cast' object[22] call_tmp[2319495]))
      const-val call_tmp[2319531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319533 'move' call_tmp[2319531](2319535 'ptr_eq' coerce_tmp[2319524] nil[44]))
      if call_tmp[2319531]
      {
        (2319541 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2319544]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2319546]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2319549 call init[968094] initTemp[2319546] castPtr[2319502])
      (2319552 'move' call_tmp[2319544] initTemp[2319546])
      (2319555 'move' ret[2319480] call_tmp[2319544])
      (2319559 call chpl__autoDestroy[1516200] _formal_tmp_x[2319475])
      (2319561 '=' i__retArg[2319469] ret[2319480])
      (2319564 'move' coerce_tmp[2319459] ret_tmp[2319461])
      const-val _formal_tmp_in_err[2319567]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2319569 'move' _formal_tmp_in_err[2319567] coerce_tmp[2319459])
      (2319572 'move' call_tmp[2319457](2319575 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2319567]))
      (2319577 '=' i_error_out[2319389] call_tmp[2319457])
      gotoErrorHandlingReturn _endlock[2319748] _endlock[2319748]
    }
    const-val tmp[2319583]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2319585]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319587 'move' call_tmp[2319585](2319589 '.' rvfRerefTmp[2084285] home[1021813]))
    const-val call_tmp[2319592]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319594]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319596 'move' coerce_tmp[2319594](2319598 '.v' call_tmp[2319585] _instance[89975]))
    val coerce_tmp[2319601]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319603 'move' coerce_tmp[2319601](2319605 'cast' object[22] coerce_tmp[2319594]))
    const-val call_tmp[2319608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319610 'move' call_tmp[2319608](2319612 'ptr_eq' coerce_tmp[2319601] nil[44]))
    if call_tmp[2319608]
    {
      (2319618 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319621 'move' call_tmp[2319592](2319623 '_wide_get_locale' coerce_tmp[2319594]))
    (2319625 'move' tmp[2319583] call_tmp[2319592])
    val rvfDerefTmp[2319628]:channel(true,dynamic,true)[1021825] "temp"
    (2319630 'move' rvfDerefTmp[2319628](2319632 'deref' rvfRerefTmp[2084285]))
    val isdirect[2319634]:bool[10] "temp"
    (2319636 'move' isdirect[2319634](2319639 call chpl_doDirectExecuteOn[187423] call_tmp[2319592]))
    if isdirect[2319634]
    {
      (2319644 call on_fn[1392911] rvfDerefTmp[2319628] err[2319396])
    }
    {
      val _args_foron_fn[2319648]:_class_localson_fn[2094247] "temp"
      (2319650 'move' _args_foron_fn[2319648](2319652 'stack allocate class' _class_localson_fn[2094247]))
      (2319654 '.=' _args_foron_fn[2319648] _0_tmp[2094250] tmp[2319583])
      (2319658 '.=' _args_foron_fn[2319648] _1_rvfDerefTmp[2094252] rvfDerefTmp[2319628])
      ref tmp[2319662]:syserr[223584] "temp"
      (2319664 'move' tmp[2319662](2319666 'set reference' err[2319396]))
      (2319668 '.=' _args_foron_fn[2319648] _2_err[2094254] tmp[2319662])
      val _args_vforon_fn[2319672]:c_void_ptr[149] "temp"
      (2319674 'move' _args_vforon_fn[2319672](2319676 'cast_to_void_star' _args_foron_fn[2319648]))
      val _args_sizeon_fn[2319678]:int(64)[13] "temp"
      (2319680 'move' _args_sizeon_fn[2319678](2319682 'sizeof_bundle' _class_localson_fn[2094247]))
      on(2319685 call wrapon_fn[2094293] tmp[2319583] _args_vforon_fn[2319672] _args_sizeon_fn[2319678] _args_foron_fn[2319648])
    }
    const-val call_tmp[2319691]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319693 'move' call_tmp[2319691](2319696 call qio_err_iserr[223646] err[2319396]))
    const-val call_tmp[2319698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319700 'move' call_tmp[2319698](2319702 '!=' call_tmp[2319691] 0))
    if call_tmp[2319698]
    {
      val error[2319707]:Error[167938] "error variable" "temp"
      (2319709 'move' error[2319707] nil[44])
      (2319713 call _ch_ioerror[1393261] rvfRerefTmp[2084285] err[2319396] "in lock" error[2319707])
      val errorExists[2319718]:bool[10] "temp"
      (2319720 'move' errorExists[2319718](2319722 '!=' error[2319707] nil[44]))
      if errorExists[2319718]
      {
        gotoErrorHandling handler[2319730] handler[2319730]
      }
      label handler[2319730]
      val errorExists[2319732]:bool[10] "temp"
      (2319734 'move' errorExists[2319732](2319736 '!=' error[2319707] nil[44]))
      if errorExists[2319732]
      {
        (2319741 '=' i_error_out[2319389] error[2319707])
        gotoErrorHandlingReturn _endlock[2319748] _endlock[2319748]
      }
    }
    label _endlock[2319748]
    val errorExists[2110016]:bool[10] "temp"
    (2110021 'move' errorExists[2110016](2110018 '!=' error[1812378] nil[44]))
    if errorExists[2110016]
    {
      gotoErrorHandling handler[1812379] handler[1812379]
    }
    label handler[1812379]
    const-val shouldHandleError[1812398]:bool[10] "temp"
    val errorExists[2110024]:bool[10] "temp"
    (2110029 'move' errorExists[2110024](2110026 '!=' error[1812378] nil[44]))
    (1812402 'move' shouldHandleError[1812398] errorExists[2110024])
    if shouldHandleError[1812398]
    {
      (1812394 '=' error_out[1812374] error[1812378])
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    const-val i[1392490]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1392492 'move' i[1392490] 0)
    val error[1812406]:Error[167938] "error variable" "temp"
    (1812415 'move' error[1812406] nil[44])
    const-val call_tmp[1393677]:[domain(1,int(64),false)] real(64)[1365840] "dead after last mention" "maybe param" "temp"
    (1393679 'move' call_tmp[1393677](1393785 '.v' args[1807298] x0[1392590]))
    ref rvfRerefTmp[2084292]:channel(true,dynamic,true)[1021825] "temp"
    (2084296 'move' rvfRerefTmp[2084292](2084293 'set reference' this[1807296]))
    val rvfRerefTmp[2084333]:locale[28] "temp"
    (2084336 'move' rvfRerefTmp[2084333] origLocale[1807300])
    (1393688 call _writeOne[1393788] rvfRerefTmp[2084292] call_tmp[1393677] rvfRerefTmp[2084333] error[1812406])
    val errorExists[2110032]:bool[10] "temp"
    (2110037 'move' errorExists[2110032](2110034 '!=' error[1812406] nil[44]))
    if errorExists[2110032]
    {
      gotoErrorHandling handler[1812407] handler[1812407]
    }
    label handler[1812407]
    const-val shouldHandleError[1812426]:bool[10] "temp"
    val errorExists[2110040]:bool[10] "temp"
    (2110045 'move' errorExists[2110040](2110042 '!=' error[1812406] nil[44]))
    (1812430 'move' shouldHandleError[1812426] errorExists[2110040])
    if shouldHandleError[1812426]
    {
      (1812422 '=' error_out[1812374] error[1812406])
      ref rvfRerefTmp[2084306]:channel(true,dynamic,true)[1021825] "temp"
      (2084310 'move' rvfRerefTmp[2084306](2084307 'set reference' this[1807296]))
      const-val tmp[2320120]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[2320122]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320124 'move' call_tmp[2320122](2320126 '.' rvfRerefTmp[2084306] home[1021813]))
      const-val call_tmp[2320129]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320131]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320133 'move' coerce_tmp[2320131](2320135 '.v' call_tmp[2320122] _instance[89975]))
      val coerce_tmp[2320138]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320140 'move' coerce_tmp[2320138](2320142 'cast' object[22] coerce_tmp[2320131]))
      const-val call_tmp[2320145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2320147 'move' call_tmp[2320145](2320149 'ptr_eq' coerce_tmp[2320138] nil[44]))
      if call_tmp[2320145]
      {
        (2320155 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320158 'move' call_tmp[2320129](2320160 '_wide_get_locale' coerce_tmp[2320131]))
      (2320162 'move' tmp[2320120] call_tmp[2320129])
      val rvfDerefTmp[2320165]:channel(true,dynamic,true)[1021825] "temp"
      (2320167 'move' rvfDerefTmp[2320165](2320169 'deref' rvfRerefTmp[2084306]))
      val isdirect[2320171]:bool[10] "temp"
      (2320173 'move' isdirect[2320171](2320176 call chpl_doDirectExecuteOn[187423] call_tmp[2320129]))
      if isdirect[2320171]
      {
        (2320181 call on_fn[1393602] rvfDerefTmp[2320165])
      }
      {
        val _args_foron_fn[2320184]:_class_localson_fn[2094500] "temp"
        (2320186 'move' _args_foron_fn[2320184](2320188 'stack allocate class' _class_localson_fn[2094500]))
        (2320190 '.=' _args_foron_fn[2320184] _0_tmp[2094503] tmp[2320120])
        (2320194 '.=' _args_foron_fn[2320184] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320165])
        val _args_vforon_fn[2320198]:c_void_ptr[149] "temp"
        (2320200 'move' _args_vforon_fn[2320198](2320202 'cast_to_void_star' _args_foron_fn[2320184]))
        val _args_sizeon_fn[2320204]:int(64)[13] "temp"
        (2320206 'move' _args_sizeon_fn[2320204](2320208 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320211 call wrapon_fn[2094534] tmp[2320120] _args_vforon_fn[2320198] _args_sizeon_fn[2320204] _args_foron_fn[2320184])
      }
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    val error[1812434]:Error[167938] "error variable" "temp"
    (1812443 'move' error[1812434] nil[44])
    const-ref call_tmp[1393709]:ioNewline[238701] "dead after last mention" "maybe param" "temp"
    (1393711 'move' call_tmp[1393709](1429444 '.v' args[1807298] x1[1392592]))
    ref rvfRerefTmp[2084299]:channel(true,dynamic,true)[1021825] "temp"
    (2084303 'move' rvfRerefTmp[2084299](2084300 'set reference' this[1807296]))
    val rvfRerefTmp[2084339]:locale[28] "temp"
    (2084342 'move' rvfRerefTmp[2084339] origLocale[1807300])
    (1393720 call _writeOne[1429447] rvfRerefTmp[2084299] call_tmp[1393709] rvfRerefTmp[2084339] error[1812434])
    val errorExists[2110048]:bool[10] "temp"
    (2110053 'move' errorExists[2110048](2110050 '!=' error[1812434] nil[44]))
    if errorExists[2110048]
    {
      gotoErrorHandling handler[1812435] handler[1812435]
    }
    label handler[1812435]
    const-val shouldHandleError[1812454]:bool[10] "temp"
    val errorExists[2110056]:bool[10] "temp"
    (2110061 'move' errorExists[2110056](2110058 '!=' error[1812434] nil[44]))
    (1812458 'move' shouldHandleError[1812454] errorExists[2110056])
    if shouldHandleError[1812454]
    {
      (1812450 '=' error_out[1812374] error[1812434])
      ref rvfRerefTmp[2084313]:channel(true,dynamic,true)[1021825] "temp"
      (2084317 'move' rvfRerefTmp[2084313](2084314 'set reference' this[1807296]))
      const-val tmp[2320220]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[2320222]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320224 'move' call_tmp[2320222](2320226 '.' rvfRerefTmp[2084313] home[1021813]))
      const-val call_tmp[2320229]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320231]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320233 'move' coerce_tmp[2320231](2320235 '.v' call_tmp[2320222] _instance[89975]))
      val coerce_tmp[2320238]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320240 'move' coerce_tmp[2320238](2320242 'cast' object[22] coerce_tmp[2320231]))
      const-val call_tmp[2320245]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2320247 'move' call_tmp[2320245](2320249 'ptr_eq' coerce_tmp[2320238] nil[44]))
      if call_tmp[2320245]
      {
        (2320255 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320258 'move' call_tmp[2320229](2320260 '_wide_get_locale' coerce_tmp[2320231]))
      (2320262 'move' tmp[2320220] call_tmp[2320229])
      val rvfDerefTmp[2320265]:channel(true,dynamic,true)[1021825] "temp"
      (2320267 'move' rvfDerefTmp[2320265](2320269 'deref' rvfRerefTmp[2084313]))
      val isdirect[2320271]:bool[10] "temp"
      (2320273 'move' isdirect[2320271](2320276 call chpl_doDirectExecuteOn[187423] call_tmp[2320229]))
      if isdirect[2320271]
      {
        (2320281 call on_fn[1393602] rvfDerefTmp[2320265])
      }
      {
        val _args_foron_fn[2320284]:_class_localson_fn[2094500] "temp"
        (2320286 'move' _args_foron_fn[2320284](2320288 'stack allocate class' _class_localson_fn[2094500]))
        (2320290 '.=' _args_foron_fn[2320284] _0_tmp[2094503] tmp[2320220])
        (2320294 '.=' _args_foron_fn[2320284] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320265])
        val _args_vforon_fn[2320298]:c_void_ptr[149] "temp"
        (2320300 'move' _args_vforon_fn[2320298](2320302 'cast_to_void_star' _args_foron_fn[2320284]))
        val _args_sizeon_fn[2320304]:int(64)[13] "temp"
        (2320306 'move' _args_sizeon_fn[2320304](2320308 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320311 call wrapon_fn[2094534] tmp[2320220] _args_vforon_fn[2320298] _args_sizeon_fn[2320304] _args_foron_fn[2320284])
      }
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    ref rvfRerefTmp[2084320]:channel(true,dynamic,true)[1021825] "temp"
    (2084324 'move' rvfRerefTmp[2084320](2084321 'set reference' this[1807296]))
    const-val tmp[2320320]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2320322]:locale[28] "dead after last mention" "maybe param" "temp"
    (2320324 'move' call_tmp[2320322](2320326 '.' rvfRerefTmp[2084320] home[1021813]))
    const-val call_tmp[2320329]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2320331]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320333 'move' coerce_tmp[2320331](2320335 '.v' call_tmp[2320322] _instance[89975]))
    val coerce_tmp[2320338]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320340 'move' coerce_tmp[2320338](2320342 'cast' object[22] coerce_tmp[2320331]))
    const-val call_tmp[2320345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320347 'move' call_tmp[2320345](2320349 'ptr_eq' coerce_tmp[2320338] nil[44]))
    if call_tmp[2320345]
    {
      (2320355 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2320358 'move' call_tmp[2320329](2320360 '_wide_get_locale' coerce_tmp[2320331]))
    (2320362 'move' tmp[2320320] call_tmp[2320329])
    val rvfDerefTmp[2320365]:channel(true,dynamic,true)[1021825] "temp"
    (2320367 'move' rvfDerefTmp[2320365](2320369 'deref' rvfRerefTmp[2084320]))
    val isdirect[2320371]:bool[10] "temp"
    (2320373 'move' isdirect[2320371](2320376 call chpl_doDirectExecuteOn[187423] call_tmp[2320329]))
    if isdirect[2320371]
    {
      (2320381 call on_fn[1393602] rvfDerefTmp[2320365])
    }
    {
      val _args_foron_fn[2320384]:_class_localson_fn[2094500] "temp"
      (2320386 'move' _args_foron_fn[2320384](2320388 'stack allocate class' _class_localson_fn[2094500]))
      (2320390 '.=' _args_foron_fn[2320384] _0_tmp[2094503] tmp[2320320])
      (2320394 '.=' _args_foron_fn[2320384] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320365])
      val _args_vforon_fn[2320398]:c_void_ptr[149] "temp"
      (2320400 'move' _args_vforon_fn[2320398](2320402 'cast_to_void_star' _args_foron_fn[2320384]))
      val _args_sizeon_fn[2320404]:int(64)[13] "temp"
      (2320406 'move' _args_sizeon_fn[2320404](2320408 'sizeof_bundle' _class_localson_fn[2094500]))
      on(2320411 call wrapon_fn[2094534] tmp[2320320] _args_vforon_fn[2320398] _args_sizeon_fn[2320404] _args_foron_fn[2320384])
    }
    label _endon_fn[1812376]
    (1392572 return _void[55])
  }
  function on_fn[1392911](const in arg this[1807302]:channel(true,dynamic,true)[1021825], ref arg err[1807304]:syserr[223584]) : void[4] "inlined function" "on" "resolved"
  {
    const-ref call_tmp[1392917]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2084352]:channel(true,dynamic,true)[1021825] "temp"
    (2084356 'move' rvfRerefTmp[2084352](2084353 'set reference' this[1807302]))
    ref call_tmp[2228237]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228239 'move' call_tmp[2228237](2228241 '.' rvfRerefTmp[2084352] _channel_internal[1021818]))
    (1392919 'move' call_tmp[1392917] call_tmp[2228237])
    const-val call_tmp[1392925]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1393252]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1393256 'move' coerce_tmp[1393252](1393254 'deref' call_tmp[1392917]))
    (1392927 'move' call_tmp[1392925](1392930 call qio_channel_lock[233007] coerce_tmp[1393252]))
    (2207240 '=' err[1807304] call_tmp[1392925])
    (1392938 return _void[55])
  }
  function on_fn[1393328](const in arg this[1807306]:channel(true,dynamic,true)[1021825], ref arg path[1807308]:string[26], ref arg offset[1807310]:int(64)[13], ref arg error_out[1812554]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1393334]:c_string[19] "dead at end of block" "insert auto destroy"
    (1393535 'move' tmp_path[1393334](1393533 'cast' c_string[19] nil[44]))
    val tmp_offset[1393340]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1393342]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1393538 'move' tmp_offset[1393340] 0)
    const-val call_tmp[1393353]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1393355 'move' call_tmp[1393353] 0)
    val err[1393359]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1393481]:syserr[223584] "dead at end of block" "initialized later" "temp"
    ref i_ret[2207928]:syserr[223584] "temp"
    (2207932 'move' i_ret[2207928](2207930 'set reference' init_coerce_tmp[1393481]))
    const-val call_tmp[2207935]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207937 'move' call_tmp[2207935](2207940 call qio_int_to_err[223634] call_tmp[1393353]))
    (2207942 '=' i_ret[2207928] call_tmp[2207935])
    (1393361 'move' err[1393359] init_coerce_tmp[1393481])
    const-ref call_tmp[1393374]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2084366]:channel(true,dynamic,true)[1021825] "temp"
    (2084370 'move' rvfRerefTmp[2084366](2084367 'set reference' this[1807306]))
    ref call_tmp[2228247]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228249 'move' call_tmp[2228247](2228251 '.' rvfRerefTmp[2084366] _channel_internal[1021818]))
    (1393376 'move' call_tmp[1393374] call_tmp[2228247])
    const-val call_tmp[1393382]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1393490]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1393496 'move' coerce_tmp[1393490](1393492 'cast' int(32)[95] 1))
    const-val coerce_tmp[1393498]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1393502 'move' coerce_tmp[1393498](1393500 'deref' call_tmp[1393374]))
    (1393384 'move' call_tmp[1393382](1393387 call qio_channel_path_offset[232924] coerce_tmp[1393490] coerce_tmp[1393498] tmp_path[1393334] tmp_offset[1393340]))
    ref i_ret[2207245]:syserr[223584] "temp"
    (2207249 'move' i_ret[2207245](2207247 'set reference' err[1393359]))
    (2207252 '=' i_ret[2207245] call_tmp[1393382])
    const-val call_tmp[1393400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2206603]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206605 'move' call_tmp[2206603](2206608 call qio_err_iserr[223646] err[1393359]))
    const-val call_tmp[2206610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206612 'move' call_tmp[2206610](2206614 '==' call_tmp[2206603] 0))
    (1393402 'move' call_tmp[1393400] call_tmp[2206610])
    const-val call_tmp[1393407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393409 'move' call_tmp[1393407] call_tmp[1393400])
    if call_tmp[1393407]
    {
      const-val call_tmp[1393416]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val default_arg_length[1393511]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      val error[1812559]:Error[167938] "error variable" "temp"
      (1812561 'move' error[1812559] nil[44])
      ref i_error_out[2203614]:Error[167938] "temp"
      (2203618 'move' i_error_out[2203614](2203616 'set reference' error[1812559]))
      val ret[2203621]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
      const-val call_tmp[2203623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203625 'move' call_tmp[2203623](2203627 'string_length_bytes' tmp_path[1393334]))
      (2203629 'move' ret[2203621] call_tmp[2203623])
      (1393516 'move' default_arg_length[1393511] ret[2203621])
      val errorExists[2110104]:bool[10] "temp"
      (2110109 'move' errorExists[2110104](2110106 '!=' error[1812559] nil[44]))
      if errorExists[2110104]
      {
        (1812565 '=' error_out[1812554] error[1812559])
        gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
      }
      val error[1812574]:Error[167938] "error variable" "temp"
      (1812576 'move' error[1812574] nil[44])
      const-val ret_tmp[1829099]:string[26] "temp"
      ref i_error_out[2142166]:Error[167938] "temp"
      (2142170 'move' i_error_out[2142166](2142168 'set reference' error[1812574]))
      ref i__retArg[2142172]:string[26] "temp"
      (2142176 'move' i__retArg[2142172](2142174 'set reference' ret_tmp[1829099]))
      const-val ret[2142179]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2142181]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2142183 'move' call_tmp[2142181](2142185 'cast' c_ptr(uint(8))[937423] tmp_path[1393334]))
      const-val call_tmp[2142188]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2142190]:Error[167938] "error variable" "temp"
      (2142192 'move' error[2142190] nil[44])
      const-val ret[2142195]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2142197]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2142199]:Error[167938] "error variable" "temp"
      (2142201 'move' error[2142199] nil[44])
      const-val ret_tmp[2142204]:string[26] "temp"
      (2142207 call decodeByteBuffer[173892] call_tmp[2142181] default_arg_length[1393511] replace[173648] error[2142199] ret_tmp[2142204])
      (2142213 'move' call_tmp[2142197] ret_tmp[2142204])
      val errorExists[2142216]:bool[10] "temp"
      (2142218 'move' errorExists[2142216](2142220 '!=' error[2142199] nil[44]))
      if errorExists[2142216]
      {
        (2142225 '=' error[2142190] error[2142199])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2142234] _endcreateStringWithNewBuffer[2142234]
      }
      (2142231 'move' ret[2142195] call_tmp[2142197])
      label _endcreateStringWithNewBuffer[2142234]
      (2142236 'move' call_tmp[2142188] ret[2142195])
      val errorExists[2142239]:bool[10] "temp"
      (2142241 'move' errorExists[2142239](2142243 '!=' error[2142190] nil[44]))
      if errorExists[2142239]
      {
        (2142248 '=' i_error_out[2142166] error[2142190])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2142257] _endcreateStringWithNewBuffer[2142257]
      }
      (2142254 'move' ret[2142179] call_tmp[2142188])
      label _endcreateStringWithNewBuffer[2142257]
      (2142259 '=' i__retArg[2142172] ret[2142179])
      (1829102 'move' call_tmp[1393416] ret_tmp[1829099])
      val errorExists[2110112]:bool[10] "temp"
      (2110117 'move' errorExists[2110112](2110114 '!=' error[1812574] nil[44]))
      if errorExists[2110112]
      {
        (1812580 '=' error_out[1812554] error[1812574])
        gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
      }
      (1393426 call =[38269] path[1807308] call_tmp[1393416])
      ref i_x[2132817]:string[26] "temp"
      (2132821 'move' i_x[2132817](2132819 'set reference' call_tmp[1393416]))
      (2132825 call deinit[30831] i_x[2132817])
      ref i_cs[2120247]:c_string[19] "temp"
      (2120251 'move' i_cs[2120247](2120249 'set reference' tmp_path[1393334]))
      const-val call_tmp[2120254]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120256 'move' call_tmp[2120254](2120258 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120261]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120263 'move' call_tmp[2120261](2120265 'cast' c_string[19] call_tmp[2120254]))
      const-val coerce_tmp[2120268]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120270 'move' coerce_tmp[2120268](2120272 'deref' i_cs[2120247]))
      const-val call_tmp[2120274]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120276 'move' call_tmp[2120274](2120278 'string_compare' coerce_tmp[2120268] call_tmp[2120261]))
      const-val call_tmp[2120281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120283 'move' call_tmp[2120281](2120285 '!=' call_tmp[2120274] 0))
      if call_tmp[2120281]
      {
        (2120291 call chpl_rt_free_c_string[22714] i_cs[2120247])
      }
      (2122431 '=' offset[1807310] tmp_offset[1393340])
    }
    label _endon_fn[1812556]
    (1393445 return _void[55])
  }
  function on_fn[1393602](const in arg this[1807312]:channel(true,dynamic,true)[1021825]) : void[4] "inlined function" "on" "resolved"
  {
    const-ref call_tmp[1393608]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref rvfRerefTmp[2084380]:channel(true,dynamic,true)[1021825] "temp"
    (2084384 'move' rvfRerefTmp[2084380](2084381 'set reference' this[1807312]))
    ref call_tmp[2228257]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228259 'move' call_tmp[2228257](2228261 '.' rvfRerefTmp[2084380] _channel_internal[1021818]))
    (1393610 'move' call_tmp[1393608] call_tmp[2228257])
    const-val coerce_tmp[1393643]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1393647 'move' coerce_tmp[1393643](1393645 'deref' call_tmp[1393608]))
    (1393617 call qio_channel_unlock[233019] coerce_tmp[1393643])
    (1393619 return _void[55])
  }
  function on_fn[1400789](const  ref arg this[1807322]:channel(true,dynamic,false)[1060947], const in arg element[1807324]:int(64)[13], ref arg ret[1807326]:int(64)[13]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1400795]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263778]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263780 'move' call_tmp[2263778](2263782 '.' this[1807322] _channel_internal[1060940]))
    (1400797 'move' call_tmp[1400795] call_tmp[2263778])
    const-val call_tmp[1400803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1400849]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1400853 'move' coerce_tmp[1400849](1400851 'deref' call_tmp[1400795]))
    (1400805 'move' call_tmp[1400803](1400808 call qio_channel_style_element[233102] coerce_tmp[1400849] element[1807324]))
    (2122437 '=' ret[1807326] call_tmp[1400803])
    (1400817 return _void[55])
  }
  function on_fn[1401829](const  ref arg this[1807328]:channel(true,dynamic,false)[1060947], ref arg ret[1807330]:uint(8)[100]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1401835]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263788]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263790 'move' call_tmp[2263788](2263792 '.' this[1807328] _channel_internal[1060940]))
    (1401837 'move' call_tmp[1401835] call_tmp[2263788])
    const-val call_tmp[1401843]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1401896]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1401900 'move' coerce_tmp[1401896](1401898 'deref' call_tmp[1401835]))
    (1401845 'move' call_tmp[1401843](1401848 call qio_channel_binary[233057] coerce_tmp[1401896]))
    (2195804 '=' ret[1807330] call_tmp[1401843])
    (1401856 return _void[55])
  }
  function on_fn[1407864](const  ref arg this[1807332]:channel(true,dynamic,false)[1060947], const in arg x[1807334]:_ddata(real(64))[1357916], const in arg len[1807336]:int(64)[13], ref arg err[1807338]:syserr[223584], ref arg error_out[1813096]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1813100]:Error[167938] "error variable" "temp"
    (1813109 'move' error[1813100] nil[44])
    ref i_error_out[2267224]:Error[167938] "temp"
    (2267228 'move' i_error_out[2267224](2267226 'set reference' error[1813100]))
    const-val err[2267231]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2267233]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267235 'move' call_tmp[2267233](2267238 call qio_int_to_err[223634] 0))
    (2267240 'move' err[2267231] call_tmp[2267233])
    const-val coerce_tmp[2267243]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2267245 'move' coerce_tmp[2267243](2267247 '.v' this[1807332] _channel_internal[1060940]))
    const-val call_tmp[2267250]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267252 'move' call_tmp[2267250](2267254 'cast' c_void_ptr[149] coerce_tmp[2267243]))
    const-val call_tmp[2267257]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267259 'move' call_tmp[2267257](2267261 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267266 'move' call_tmp[2267264](2267268 'ptr_eq' call_tmp[2267250] call_tmp[2267257]))
    if call_tmp[2267264]
    {
      const-val call_tmp[2267273]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267275]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267277 'move' coerce_tmp[2267275](2267279 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267282]:owned SystemError[1000238] "temp"
      (2267285 call fromSyserr[1017113] coerce_tmp[2267275] "Operation attempted on an invalid channel" ret_tmp[2267282])
      (2267289 'move' call_tmp[2267273] ret_tmp[2267282])
      val call_tmp[2267292]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267294]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267296]:owned Error[966458] "temp"
      ref i_x[2267298]:owned SystemError[1000238] "temp"
      (2267300 'move' i_x[2267298](2267302 'set reference' call_tmp[2267273]))
      ref i__retArg[2267304]:owned Error[966458] "temp"
      (2267306 'move' i__retArg[2267304](2267308 'set reference' ret_tmp[2267296]))
      val _formal_tmp_x[2267310]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267312 'move' _formal_tmp_x[2267310] i_x[2267298])
      const-val ret[2267315]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267317]:owned SystemError[1000238] "temp"
      (2267319 'move' i_this[2267317](2267321 'set reference' _formal_tmp_x[2267310]))
      val coerce_tmp[2267323]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2267325 'move' coerce_tmp[2267323](2267327 '.v' i_this[2267317] chpl_p[1000233]))
      val call_tmp[2267330]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267332 'move' call_tmp[2267330](2267334 'cast' Error[167938] coerce_tmp[2267323]))
      val castPtr[2267337]:Error[167938] "dead at end of block" "insert auto destroy"
      (2267339 'move' castPtr[2267337] call_tmp[2267330])
      ref i_this[2267342]:owned SystemError[1000238] "temp"
      (2267344 'move' i_this[2267342](2267346 'set reference' _formal_tmp_x[2267310]))
      val tmp[2267348]:SystemError[264845] "temp"
      (2267350 'move' tmp[2267348](2267352 'cast' SystemError[264845] nil[44]))
      (2267355 '.=' i_this[2267342] chpl_p[1000233] tmp[2267348])
      val coerce_tmp[2267359]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267361 'move' coerce_tmp[2267359](2267363 'cast' object[22] call_tmp[2267330]))
      const-val call_tmp[2267366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267368 'move' call_tmp[2267366](2267370 'ptr_eq' coerce_tmp[2267359] nil[44]))
      if call_tmp[2267366]
      {
        (2267376 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267379]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267381]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2267384 call init[968094] initTemp[2267381] castPtr[2267337])
      (2267387 'move' call_tmp[2267379] initTemp[2267381])
      (2267390 'move' ret[2267315] call_tmp[2267379])
      (2267394 call chpl__autoDestroy[1516200] _formal_tmp_x[2267310])
      (2267396 '=' i__retArg[2267304] ret[2267315])
      (2267399 'move' coerce_tmp[2267294] ret_tmp[2267296])
      const-val _formal_tmp_in_err[2267402]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267404 'move' _formal_tmp_in_err[2267402] coerce_tmp[2267294])
      (2267407 'move' call_tmp[2267292](2267410 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267402]))
      (2267412 '=' i_error_out[2267224] call_tmp[2267292])
      gotoErrorHandlingReturn _endlock[2267475] _endlock[2267475]
    }
    const-val call_tmp[2267418]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267420 'move' call_tmp[2267418](2267423 call qio_err_iserr[223646] err[2267231]))
    const-val call_tmp[2267425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267427 'move' call_tmp[2267425](2267429 '!=' call_tmp[2267418] 0))
    if call_tmp[2267425]
    {
      val error[2267434]:Error[167938] "error variable" "temp"
      (2267436 'move' error[2267434] nil[44])
      (2267440 call _ch_ioerror[1062865] this[1807332] err[2267231] "in lock" error[2267434])
      val errorExists[2267445]:bool[10] "temp"
      (2267447 'move' errorExists[2267445](2267449 '!=' error[2267434] nil[44]))
      if errorExists[2267445]
      {
        gotoErrorHandling handler[2267457] handler[2267457]
      }
      label handler[2267457]
      val errorExists[2267459]:bool[10] "temp"
      (2267461 'move' errorExists[2267459](2267463 '!=' error[2267434] nil[44]))
      if errorExists[2267459]
      {
        (2267468 '=' i_error_out[2267224] error[2267434])
        gotoErrorHandlingReturn _endlock[2267475] _endlock[2267475]
      }
    }
    label _endlock[2267475]
    val errorExists[2110312]:bool[10] "temp"
    (2110317 'move' errorExists[2110312](2110314 '!=' error[1813100] nil[44]))
    if errorExists[2110312]
    {
      gotoErrorHandling handler[1813101] handler[1813101]
    }
    label handler[1813101]
    const-val shouldHandleError[1813120]:bool[10] "temp"
    val errorExists[2110320]:bool[10] "temp"
    (2110325 'move' errorExists[2110320](2110322 '!=' error[1813100] nil[44]))
    (1813124 'move' shouldHandleError[1813120] errorExists[2110320])
    if shouldHandleError[1813120]
    {
      (1813116 '=' error_out[1813096] error[1813100])
      gotoErrorHandlingReturn _endon_fn[1813098] _endon_fn[1813098]
    }
    const-ref call_tmp[1407884]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263798]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263800 'move' call_tmp[2263798](2263802 '.' this[1807332] _channel_internal[1060940]))
    (1407886 'move' call_tmp[1407884] call_tmp[2263798])
    const-val call_tmp[1407892]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1408009]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1408015 'move' coerce_tmp[1408009](1408011 'cast' int(32)[95] 0))
    const-val coerce_tmp[1408017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1408021 'move' coerce_tmp[1408017](1408019 'deref' call_tmp[1407884]))
    (1407894 'move' call_tmp[1407892](1407897 call qio_channel_write_amt[1407983] coerce_tmp[1408009] coerce_tmp[1408017] x[1807334] len[1807336]))
    (2207258 '=' err[1807338] call_tmp[1407892])
    label _endon_fn[1813098]
    (1407908 return _void[55])
  }
  function on_fn[1408604](const  ref arg this[1807340]:channel(true,dynamic,false)[1060947], const in arg x[1807342]:ioLiteral[238753], const in arg origLocale[1807344]:locale[28], ref arg error_out[1813211]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1813215]:Error[167938] "error variable" "temp"
    (1813224 'move' error[1813215] nil[44])
    ref i_error_out[2267479]:Error[167938] "temp"
    (2267483 'move' i_error_out[2267479](2267481 'set reference' error[1813215]))
    const-val err[2267486]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2267488]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267490 'move' call_tmp[2267488](2267493 call qio_int_to_err[223634] 0))
    (2267495 'move' err[2267486] call_tmp[2267488])
    const-val coerce_tmp[2267498]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2267500 'move' coerce_tmp[2267498](2267502 '.v' this[1807340] _channel_internal[1060940]))
    const-val call_tmp[2267505]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267507 'move' call_tmp[2267505](2267509 'cast' c_void_ptr[149] coerce_tmp[2267498]))
    const-val call_tmp[2267512]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267514 'move' call_tmp[2267512](2267516 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267521 'move' call_tmp[2267519](2267523 'ptr_eq' call_tmp[2267505] call_tmp[2267512]))
    if call_tmp[2267519]
    {
      const-val call_tmp[2267528]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267530]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267532 'move' coerce_tmp[2267530](2267534 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267537]:owned SystemError[1000238] "temp"
      (2267540 call fromSyserr[1017113] coerce_tmp[2267530] "Operation attempted on an invalid channel" ret_tmp[2267537])
      (2267544 'move' call_tmp[2267528] ret_tmp[2267537])
      val call_tmp[2267547]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267549]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267551]:owned Error[966458] "temp"
      ref i_x[2267553]:owned SystemError[1000238] "temp"
      (2267555 'move' i_x[2267553](2267557 'set reference' call_tmp[2267528]))
      ref i__retArg[2267559]:owned Error[966458] "temp"
      (2267561 'move' i__retArg[2267559](2267563 'set reference' ret_tmp[2267551]))
      val _formal_tmp_x[2267565]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267567 'move' _formal_tmp_x[2267565] i_x[2267553])
      const-val ret[2267570]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267572]:owned SystemError[1000238] "temp"
      (2267574 'move' i_this[2267572](2267576 'set reference' _formal_tmp_x[2267565]))
      val coerce_tmp[2267578]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2267580 'move' coerce_tmp[2267578](2267582 '.v' i_this[2267572] chpl_p[1000233]))
      val call_tmp[2267585]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267587 'move' call_tmp[2267585](2267589 'cast' Error[167938] coerce_tmp[2267578]))
      val castPtr[2267592]:Error[167938] "dead at end of block" "insert auto destroy"
      (2267594 'move' castPtr[2267592] call_tmp[2267585])
      ref i_this[2267597]:owned SystemError[1000238] "temp"
      (2267599 'move' i_this[2267597](2267601 'set reference' _formal_tmp_x[2267565]))
      val tmp[2267603]:SystemError[264845] "temp"
      (2267605 'move' tmp[2267603](2267607 'cast' SystemError[264845] nil[44]))
      (2267610 '.=' i_this[2267597] chpl_p[1000233] tmp[2267603])
      val coerce_tmp[2267614]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267616 'move' coerce_tmp[2267614](2267618 'cast' object[22] call_tmp[2267585]))
      const-val call_tmp[2267621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267623 'move' call_tmp[2267621](2267625 'ptr_eq' coerce_tmp[2267614] nil[44]))
      if call_tmp[2267621]
      {
        (2267631 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267634]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267636]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2267639 call init[968094] initTemp[2267636] castPtr[2267592])
      (2267642 'move' call_tmp[2267634] initTemp[2267636])
      (2267645 'move' ret[2267570] call_tmp[2267634])
      (2267649 call chpl__autoDestroy[1516200] _formal_tmp_x[2267565])
      (2267651 '=' i__retArg[2267559] ret[2267570])
      (2267654 'move' coerce_tmp[2267549] ret_tmp[2267551])
      const-val _formal_tmp_in_err[2267657]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267659 'move' _formal_tmp_in_err[2267657] coerce_tmp[2267549])
      (2267662 'move' call_tmp[2267547](2267665 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267657]))
      (2267667 '=' i_error_out[2267479] call_tmp[2267547])
      gotoErrorHandlingReturn _endlock[2267730] _endlock[2267730]
    }
    const-val call_tmp[2267673]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267675 'move' call_tmp[2267673](2267678 call qio_err_iserr[223646] err[2267486]))
    const-val call_tmp[2267680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267682 'move' call_tmp[2267680](2267684 '!=' call_tmp[2267673] 0))
    if call_tmp[2267680]
    {
      val error[2267689]:Error[167938] "error variable" "temp"
      (2267691 'move' error[2267689] nil[44])
      (2267695 call _ch_ioerror[1062865] this[1807340] err[2267486] "in lock" error[2267689])
      val errorExists[2267700]:bool[10] "temp"
      (2267702 'move' errorExists[2267700](2267704 '!=' error[2267689] nil[44]))
      if errorExists[2267700]
      {
        gotoErrorHandling handler[2267712] handler[2267712]
      }
      label handler[2267712]
      val errorExists[2267714]:bool[10] "temp"
      (2267716 'move' errorExists[2267714](2267718 '!=' error[2267689] nil[44]))
      if errorExists[2267714]
      {
        (2267723 '=' i_error_out[2267479] error[2267689])
        gotoErrorHandlingReturn _endlock[2267730] _endlock[2267730]
      }
    }
    label _endlock[2267730]
    val errorExists[2110368]:bool[10] "temp"
    (2110373 'move' errorExists[2110368](2110370 '!=' error[1813215] nil[44]))
    if errorExists[2110368]
    {
      gotoErrorHandling handler[1813216] handler[1813216]
    }
    label handler[1813216]
    const-val shouldHandleError[1813233]:bool[10] "temp"
    val errorExists[2110376]:bool[10] "temp"
    (2110381 'move' errorExists[2110376](2110378 '!=' error[1813215] nil[44]))
    (1813237 'move' shouldHandleError[1813233] errorExists[2110376])
    if shouldHandleError[1813233]
    {
      (1813230 call chpl_uncaught_error[170243] error[1813215])
    }
    val error[1813241]:Error[167938] "error variable" "temp"
    (1813250 'move' error[1813241] nil[44])
    ref rvfRerefTmp[2084394]:ioLiteral[238753] "temp"
    (2084398 'move' rvfRerefTmp[2084394](2084395 'set reference' x[1807342]))
    val rvfRerefTmp[2084407]:locale[28] "temp"
    (2084410 'move' rvfRerefTmp[2084407] origLocale[1807344])
    (1408637 call _writeOne[1408673] this[1807340] rvfRerefTmp[2084394] rvfRerefTmp[2084407] error[1813241])
    val errorExists[2110384]:bool[10] "temp"
    (2110389 'move' errorExists[2110384](2110386 '!=' error[1813241] nil[44]))
    if errorExists[2110384]
    {
      gotoErrorHandling handler[1813242] handler[1813242]
    }
    label handler[1813242]
    const-val shouldHandleError[1813261]:bool[10] "temp"
    val errorExists[2110392]:bool[10] "temp"
    (2110397 'move' errorExists[2110392](2110394 '!=' error[1813241] nil[44]))
    (1813265 'move' shouldHandleError[1813261] errorExists[2110392])
    if shouldHandleError[1813261]
    {
      (1813257 '=' error_out[1813211] error[1813241])
      gotoErrorHandlingReturn _endon_fn[1813213] _endon_fn[1813213]
    }
    label _endon_fn[1813213]
    (1408644 return _void[55])
  }
  function on_fn[1421810](const  ref arg this[1807346]:channel(true,dynamic,false)[1060947], const in arg x[1807348]:real(64)[16], const in arg origLocale[1807350]:locale[28], ref arg error_out[1813401]:Error[167938]) : void[4] throws "on" "resolved"
  {
    val error[1813405]:Error[167938] "error variable" "temp"
    (1813414 'move' error[1813405] nil[44])
    ref i_error_out[2267734]:Error[167938] "temp"
    (2267738 'move' i_error_out[2267734](2267736 'set reference' error[1813405]))
    const-val err[2267741]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2267743]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267745 'move' call_tmp[2267743](2267748 call qio_int_to_err[223634] 0))
    (2267750 'move' err[2267741] call_tmp[2267743])
    const-val coerce_tmp[2267753]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2267755 'move' coerce_tmp[2267753](2267757 '.v' this[1807346] _channel_internal[1060940]))
    const-val call_tmp[2267760]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267762 'move' call_tmp[2267760](2267764 'cast' c_void_ptr[149] coerce_tmp[2267753]))
    const-val call_tmp[2267767]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267769 'move' call_tmp[2267767](2267771 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267776 'move' call_tmp[2267774](2267778 'ptr_eq' call_tmp[2267760] call_tmp[2267767]))
    if call_tmp[2267774]
    {
      const-val call_tmp[2267783]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267785]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267787 'move' coerce_tmp[2267785](2267789 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267792]:owned SystemError[1000238] "temp"
      (2267795 call fromSyserr[1017113] coerce_tmp[2267785] "Operation attempted on an invalid channel" ret_tmp[2267792])
      (2267799 'move' call_tmp[2267783] ret_tmp[2267792])
      val call_tmp[2267802]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267804]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267806]:owned Error[966458] "temp"
      ref i_x[2267808]:owned SystemError[1000238] "temp"
      (2267810 'move' i_x[2267808](2267812 'set reference' call_tmp[2267783]))
      ref i__retArg[2267814]:owned Error[966458] "temp"
      (2267816 'move' i__retArg[2267814](2267818 'set reference' ret_tmp[2267806]))
      val _formal_tmp_x[2267820]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267822 'move' _formal_tmp_x[2267820] i_x[2267808])
      const-val ret[2267825]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267827]:owned SystemError[1000238] "temp"
      (2267829 'move' i_this[2267827](2267831 'set reference' _formal_tmp_x[2267820]))
      val coerce_tmp[2267833]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2267835 'move' coerce_tmp[2267833](2267837 '.v' i_this[2267827] chpl_p[1000233]))
      val call_tmp[2267840]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267842 'move' call_tmp[2267840](2267844 'cast' Error[167938] coerce_tmp[2267833]))
      val castPtr[2267847]:Error[167938] "dead at end of block" "insert auto destroy"
      (2267849 'move' castPtr[2267847] call_tmp[2267840])
      ref i_this[2267852]:owned SystemError[1000238] "temp"
      (2267854 'move' i_this[2267852](2267856 'set reference' _formal_tmp_x[2267820]))
      val tmp[2267858]:SystemError[264845] "temp"
      (2267860 'move' tmp[2267858](2267862 'cast' SystemError[264845] nil[44]))
      (2267865 '.=' i_this[2267852] chpl_p[1000233] tmp[2267858])
      val coerce_tmp[2267869]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267871 'move' coerce_tmp[2267869](2267873 'cast' object[22] call_tmp[2267840]))
      const-val call_tmp[2267876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267878 'move' call_tmp[2267876](2267880 'ptr_eq' coerce_tmp[2267869] nil[44]))
      if call_tmp[2267876]
      {
        (2267886 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267889]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267891]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2267894 call init[968094] initTemp[2267891] castPtr[2267847])
      (2267897 'move' call_tmp[2267889] initTemp[2267891])
      (2267900 'move' ret[2267825] call_tmp[2267889])
      (2267904 call chpl__autoDestroy[1516200] _formal_tmp_x[2267820])
      (2267906 '=' i__retArg[2267814] ret[2267825])
      (2267909 'move' coerce_tmp[2267804] ret_tmp[2267806])
      const-val _formal_tmp_in_err[2267912]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267914 'move' _formal_tmp_in_err[2267912] coerce_tmp[2267804])
      (2267917 'move' call_tmp[2267802](2267920 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267912]))
      (2267922 '=' i_error_out[2267734] call_tmp[2267802])
      gotoErrorHandlingReturn _endlock[2267985] _endlock[2267985]
    }
    const-val call_tmp[2267928]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267930 'move' call_tmp[2267928](2267933 call qio_err_iserr[223646] err[2267741]))
    const-val call_tmp[2267935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267937 'move' call_tmp[2267935](2267939 '!=' call_tmp[2267928] 0))
    if call_tmp[2267935]
    {
      val error[2267944]:Error[167938] "error variable" "temp"
      (2267946 'move' error[2267944] nil[44])
      (2267950 call _ch_ioerror[1062865] this[1807346] err[2267741] "in lock" error[2267944])
      val errorExists[2267955]:bool[10] "temp"
      (2267957 'move' errorExists[2267955](2267959 '!=' error[2267944] nil[44]))
      if errorExists[2267955]
      {
        gotoErrorHandling handler[2267967] handler[2267967]
      }
      label handler[2267967]
      val errorExists[2267969]:bool[10] "temp"
      (2267971 'move' errorExists[2267969](2267973 '!=' error[2267944] nil[44]))
      if errorExists[2267969]
      {
        (2267978 '=' i_error_out[2267734] error[2267944])
        gotoErrorHandlingReturn _endlock[2267985] _endlock[2267985]
      }
    }
    label _endlock[2267985]
    val errorExists[2110464]:bool[10] "temp"
    (2110469 'move' errorExists[2110464](2110466 '!=' error[1813405] nil[44]))
    if errorExists[2110464]
    {
      gotoErrorHandling handler[1813406] handler[1813406]
    }
    label handler[1813406]
    const-val shouldHandleError[1813423]:bool[10] "temp"
    val errorExists[2110472]:bool[10] "temp"
    (2110477 'move' errorExists[2110472](2110474 '!=' error[1813405] nil[44]))
    (1813427 'move' shouldHandleError[1813423] errorExists[2110472])
    if shouldHandleError[1813423]
    {
      (1813420 call chpl_uncaught_error[170243] error[1813405])
    }
    val error[1813431]:Error[167938] "error variable" "temp"
    (1813440 'move' error[1813431] nil[44])
    val rvfRerefTmp[2084419]:locale[28] "temp"
    (2084422 'move' rvfRerefTmp[2084419] origLocale[1807350])
    (1421843 call _writeOne[1421879] this[1807346] x[1807348] rvfRerefTmp[2084419] error[1813431])
    val errorExists[2110480]:bool[10] "temp"
    (2110485 'move' errorExists[2110480](2110482 '!=' error[1813431] nil[44]))
    if errorExists[2110480]
    {
      gotoErrorHandling handler[1813432] handler[1813432]
    }
    label handler[1813432]
    const-val shouldHandleError[1813451]:bool[10] "temp"
    val errorExists[2110488]:bool[10] "temp"
    (2110493 'move' errorExists[2110488](2110490 '!=' error[1813431] nil[44]))
    (1813455 'move' shouldHandleError[1813451] errorExists[2110488])
    if shouldHandleError[1813451]
    {
      (1813447 '=' error_out[1813401] error[1813431])
      gotoErrorHandlingReturn _endon_fn[1813403] _endon_fn[1813403]
    }
    label _endon_fn[1813403]
    (1421850 return _void[55])
  }
  function on_fn[1433131](const in arg this[1807352]:channel(true,dynamic,true)[1021825], const  ref arg args[1807354]:(int(64),ioNewline)[1433256], const in arg origLocale[1807356]:locale[28], ref arg error_out[1813636]:Error[167938]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1813640]:Error[167938] "error variable" "temp"
    (1813649 'move' error[1813640] nil[44])
    ref rvfRerefTmp[2084432]:channel(true,dynamic,true)[1021825] "temp"
    (2084436 'move' rvfRerefTmp[2084432](2084433 'set reference' this[1807352]))
    ref i_error_out[2319752]:Error[167938] "temp"
    (2319756 'move' i_error_out[2319752](2319754 'set reference' error[1813640]))
    val err[2319759]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2319761]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319763 'move' call_tmp[2319761](2319766 call qio_int_to_err[223634] 0))
    (2319768 'move' err[2319759] call_tmp[2319761])
    const-val coerce_tmp[2319771]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319773 'move' coerce_tmp[2319771](2319775 '.v' rvfRerefTmp[2084432] _channel_internal[1021818]))
    const-val call_tmp[2319778]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319780 'move' call_tmp[2319778](2319782 'cast' c_void_ptr[149] coerce_tmp[2319771]))
    const-val call_tmp[2319785]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319787 'move' call_tmp[2319785](2319789 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2319792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319794 'move' call_tmp[2319792](2319796 'ptr_eq' call_tmp[2319778] call_tmp[2319785]))
    if call_tmp[2319792]
    {
      const-val call_tmp[2319801]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2319803]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319805 'move' coerce_tmp[2319803](2319807 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2319810]:owned SystemError[1000238] "temp"
      (2319813 call fromSyserr[1017113] coerce_tmp[2319803] "Operation attempted on an invalid channel" ret_tmp[2319810])
      (2319817 'move' call_tmp[2319801] ret_tmp[2319810])
      val call_tmp[2319820]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2319822]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2319824]:owned Error[966458] "temp"
      ref i_x[2319826]:owned SystemError[1000238] "temp"
      (2319828 'move' i_x[2319826](2319830 'set reference' call_tmp[2319801]))
      ref i__retArg[2319832]:owned Error[966458] "temp"
      (2319834 'move' i__retArg[2319832](2319836 'set reference' ret_tmp[2319824]))
      val _formal_tmp_x[2319838]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2319840 'move' _formal_tmp_x[2319838] i_x[2319826])
      const-val ret[2319843]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2319845]:owned SystemError[1000238] "temp"
      (2319847 'move' i_this[2319845](2319849 'set reference' _formal_tmp_x[2319838]))
      val coerce_tmp[2319851]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2319853 'move' coerce_tmp[2319851](2319855 '.v' i_this[2319845] chpl_p[1000233]))
      val call_tmp[2319858]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319860 'move' call_tmp[2319858](2319862 'cast' Error[167938] coerce_tmp[2319851]))
      val castPtr[2319865]:Error[167938] "dead at end of block" "insert auto destroy"
      (2319867 'move' castPtr[2319865] call_tmp[2319858])
      ref i_this[2319870]:owned SystemError[1000238] "temp"
      (2319872 'move' i_this[2319870](2319874 'set reference' _formal_tmp_x[2319838]))
      val tmp[2319876]:SystemError[264845] "temp"
      (2319878 'move' tmp[2319876](2319880 'cast' SystemError[264845] nil[44]))
      (2319883 '.=' i_this[2319870] chpl_p[1000233] tmp[2319876])
      val coerce_tmp[2319887]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319889 'move' coerce_tmp[2319887](2319891 'cast' object[22] call_tmp[2319858]))
      const-val call_tmp[2319894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319896 'move' call_tmp[2319894](2319898 'ptr_eq' coerce_tmp[2319887] nil[44]))
      if call_tmp[2319894]
      {
        (2319904 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2319907]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2319909]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      (2319912 call init[968094] initTemp[2319909] castPtr[2319865])
      (2319915 'move' call_tmp[2319907] initTemp[2319909])
      (2319918 'move' ret[2319843] call_tmp[2319907])
      (2319922 call chpl__autoDestroy[1516200] _formal_tmp_x[2319838])
      (2319924 '=' i__retArg[2319832] ret[2319843])
      (2319927 'move' coerce_tmp[2319822] ret_tmp[2319824])
      const-val _formal_tmp_in_err[2319930]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2319932 'move' _formal_tmp_in_err[2319930] coerce_tmp[2319822])
      (2319935 'move' call_tmp[2319820](2319938 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2319930]))
      (2319940 '=' i_error_out[2319752] call_tmp[2319820])
      gotoErrorHandlingReturn _endlock[2320111] _endlock[2320111]
    }
    const-val tmp[2319946]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2319948]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319950 'move' call_tmp[2319948](2319952 '.' rvfRerefTmp[2084432] home[1021813]))
    const-val call_tmp[2319955]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319957]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319959 'move' coerce_tmp[2319957](2319961 '.v' call_tmp[2319948] _instance[89975]))
    val coerce_tmp[2319964]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319966 'move' coerce_tmp[2319964](2319968 'cast' object[22] coerce_tmp[2319957]))
    const-val call_tmp[2319971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319973 'move' call_tmp[2319971](2319975 'ptr_eq' coerce_tmp[2319964] nil[44]))
    if call_tmp[2319971]
    {
      (2319981 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319984 'move' call_tmp[2319955](2319986 '_wide_get_locale' coerce_tmp[2319957]))
    (2319988 'move' tmp[2319946] call_tmp[2319955])
    val rvfDerefTmp[2319991]:channel(true,dynamic,true)[1021825] "temp"
    (2319993 'move' rvfDerefTmp[2319991](2319995 'deref' rvfRerefTmp[2084432]))
    val isdirect[2319997]:bool[10] "temp"
    (2319999 'move' isdirect[2319997](2320002 call chpl_doDirectExecuteOn[187423] call_tmp[2319955]))
    if isdirect[2319997]
    {
      (2320007 call on_fn[1392911] rvfDerefTmp[2319991] err[2319759])
    }
    {
      val _args_foron_fn[2320011]:_class_localson_fn[2094247] "temp"
      (2320013 'move' _args_foron_fn[2320011](2320015 'stack allocate class' _class_localson_fn[2094247]))
      (2320017 '.=' _args_foron_fn[2320011] _0_tmp[2094250] tmp[2319946])
      (2320021 '.=' _args_foron_fn[2320011] _1_rvfDerefTmp[2094252] rvfDerefTmp[2319991])
      ref tmp[2320025]:syserr[223584] "temp"
      (2320027 'move' tmp[2320025](2320029 'set reference' err[2319759]))
      (2320031 '.=' _args_foron_fn[2320011] _2_err[2094254] tmp[2320025])
      val _args_vforon_fn[2320035]:c_void_ptr[149] "temp"
      (2320037 'move' _args_vforon_fn[2320035](2320039 'cast_to_void_star' _args_foron_fn[2320011]))
      val _args_sizeon_fn[2320041]:int(64)[13] "temp"
      (2320043 'move' _args_sizeon_fn[2320041](2320045 'sizeof_bundle' _class_localson_fn[2094247]))
      on(2320048 call wrapon_fn[2094293] tmp[2319946] _args_vforon_fn[2320035] _args_sizeon_fn[2320041] _args_foron_fn[2320011])
    }
    const-val call_tmp[2320054]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320056 'move' call_tmp[2320054](2320059 call qio_err_iserr[223646] err[2319759]))
    const-val call_tmp[2320061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320063 'move' call_tmp[2320061](2320065 '!=' call_tmp[2320054] 0))
    if call_tmp[2320061]
    {
      val error[2320070]:Error[167938] "error variable" "temp"
      (2320072 'move' error[2320070] nil[44])
      (2320076 call _ch_ioerror[1393261] rvfRerefTmp[2084432] err[2319759] "in lock" error[2320070])
      val errorExists[2320081]:bool[10] "temp"
      (2320083 'move' errorExists[2320081](2320085 '!=' error[2320070] nil[44]))
      if errorExists[2320081]
      {
        gotoErrorHandling handler[2320093] handler[2320093]
      }
      label handler[2320093]
      val errorExists[2320095]:bool[10] "temp"
      (2320097 'move' errorExists[2320095](2320099 '!=' error[2320070] nil[44]))
      if errorExists[2320095]
      {
        (2320104 '=' i_error_out[2319752] error[2320070])
        gotoErrorHandlingReturn _endlock[2320111] _endlock[2320111]
      }
    }
    label _endlock[2320111]
    val errorExists[2110584]:bool[10] "temp"
    (2110589 'move' errorExists[2110584](2110586 '!=' error[1813640] nil[44]))
    if errorExists[2110584]
    {
      gotoErrorHandling handler[1813641] handler[1813641]
    }
    label handler[1813641]
    const-val shouldHandleError[1813660]:bool[10] "temp"
    val errorExists[2110592]:bool[10] "temp"
    (2110597 'move' errorExists[2110592](2110594 '!=' error[1813640] nil[44]))
    (1813664 'move' shouldHandleError[1813660] errorExists[2110592])
    if shouldHandleError[1813660]
    {
      (1813656 '=' error_out[1813636] error[1813640])
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    const-val i[1433152]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1433154 'move' i[1433152] 0)
    val error[1813668]:Error[167938] "error variable" "temp"
    (1813677 'move' error[1813668] nil[44])
    const-ref call_tmp[1433365]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1433367 'move' call_tmp[1433365](1433420 '.' args[1807354] x0[1433252]))
    const-val coerce_tmp[1433565]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1433569 'move' coerce_tmp[1433565](1433567 'deref' call_tmp[1433365]))
    ref rvfRerefTmp[2084439]:channel(true,dynamic,true)[1021825] "temp"
    (2084443 'move' rvfRerefTmp[2084439](2084440 'set reference' this[1807352]))
    val rvfRerefTmp[2084480]:locale[28] "temp"
    (2084483 'move' rvfRerefTmp[2084480] origLocale[1807356])
    (1433376 call _writeOne[1433423] rvfRerefTmp[2084439] coerce_tmp[1433565] rvfRerefTmp[2084480] error[1813668])
    val errorExists[2110600]:bool[10] "temp"
    (2110605 'move' errorExists[2110600](2110602 '!=' error[1813668] nil[44]))
    if errorExists[2110600]
    {
      gotoErrorHandling handler[1813669] handler[1813669]
    }
    label handler[1813669]
    const-val shouldHandleError[1813688]:bool[10] "temp"
    val errorExists[2110608]:bool[10] "temp"
    (2110613 'move' errorExists[2110608](2110610 '!=' error[1813668] nil[44]))
    (1813692 'move' shouldHandleError[1813688] errorExists[2110608])
    if shouldHandleError[1813688]
    {
      (1813684 '=' error_out[1813636] error[1813668])
      ref rvfRerefTmp[2084453]:channel(true,dynamic,true)[1021825] "temp"
      (2084457 'move' rvfRerefTmp[2084453](2084454 'set reference' this[1807352]))
      const-val tmp[2320420]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[2320422]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320424 'move' call_tmp[2320422](2320426 '.' rvfRerefTmp[2084453] home[1021813]))
      const-val call_tmp[2320429]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320431]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320433 'move' coerce_tmp[2320431](2320435 '.v' call_tmp[2320422] _instance[89975]))
      val coerce_tmp[2320438]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320440 'move' coerce_tmp[2320438](2320442 'cast' object[22] coerce_tmp[2320431]))
      const-val call_tmp[2320445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2320447 'move' call_tmp[2320445](2320449 'ptr_eq' coerce_tmp[2320438] nil[44]))
      if call_tmp[2320445]
      {
        (2320455 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320458 'move' call_tmp[2320429](2320460 '_wide_get_locale' coerce_tmp[2320431]))
      (2320462 'move' tmp[2320420] call_tmp[2320429])
      val rvfDerefTmp[2320465]:channel(true,dynamic,true)[1021825] "temp"
      (2320467 'move' rvfDerefTmp[2320465](2320469 'deref' rvfRerefTmp[2084453]))
      val isdirect[2320471]:bool[10] "temp"
      (2320473 'move' isdirect[2320471](2320476 call chpl_doDirectExecuteOn[187423] call_tmp[2320429]))
      if isdirect[2320471]
      {
        (2320481 call on_fn[1393602] rvfDerefTmp[2320465])
      }
      {
        val _args_foron_fn[2320484]:_class_localson_fn[2094500] "temp"
        (2320486 'move' _args_foron_fn[2320484](2320488 'stack allocate class' _class_localson_fn[2094500]))
        (2320490 '.=' _args_foron_fn[2320484] _0_tmp[2094503] tmp[2320420])
        (2320494 '.=' _args_foron_fn[2320484] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320465])
        val _args_vforon_fn[2320498]:c_void_ptr[149] "temp"
        (2320500 'move' _args_vforon_fn[2320498](2320502 'cast_to_void_star' _args_foron_fn[2320484]))
        val _args_sizeon_fn[2320504]:int(64)[13] "temp"
        (2320506 'move' _args_sizeon_fn[2320504](2320508 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320511 call wrapon_fn[2094534] tmp[2320420] _args_vforon_fn[2320498] _args_sizeon_fn[2320504] _args_foron_fn[2320484])
      }
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    val error[1813696]:Error[167938] "error variable" "temp"
    (1813705 'move' error[1813696] nil[44])
    const-ref call_tmp[1433397]:ioNewline[238701] "dead after last mention" "maybe param" "temp"
    (1433399 'move' call_tmp[1433397](1433816 '.v' args[1807354] x1[1433254]))
    ref rvfRerefTmp[2084446]:channel(true,dynamic,true)[1021825] "temp"
    (2084450 'move' rvfRerefTmp[2084446](2084447 'set reference' this[1807352]))
    val rvfRerefTmp[2084486]:locale[28] "temp"
    (2084489 'move' rvfRerefTmp[2084486] origLocale[1807356])
    (1433408 call _writeOne[1429447] rvfRerefTmp[2084446] call_tmp[1433397] rvfRerefTmp[2084486] error[1813696])
    val errorExists[2110616]:bool[10] "temp"
    (2110621 'move' errorExists[2110616](2110618 '!=' error[1813696] nil[44]))
    if errorExists[2110616]
    {
      gotoErrorHandling handler[1813697] handler[1813697]
    }
    label handler[1813697]
    const-val shouldHandleError[1813716]:bool[10] "temp"
    val errorExists[2110624]:bool[10] "temp"
    (2110629 'move' errorExists[2110624](2110626 '!=' error[1813696] nil[44]))
    (1813720 'move' shouldHandleError[1813716] errorExists[2110624])
    if shouldHandleError[1813716]
    {
      (1813712 '=' error_out[1813636] error[1813696])
      ref rvfRerefTmp[2084460]:channel(true,dynamic,true)[1021825] "temp"
      (2084464 'move' rvfRerefTmp[2084460](2084461 'set reference' this[1807352]))
      const-val tmp[2320520]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[2320522]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320524 'move' call_tmp[2320522](2320526 '.' rvfRerefTmp[2084460] home[1021813]))
      const-val call_tmp[2320529]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320531]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320533 'move' coerce_tmp[2320531](2320535 '.v' call_tmp[2320522] _instance[89975]))
      val coerce_tmp[2320538]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320540 'move' coerce_tmp[2320538](2320542 'cast' object[22] coerce_tmp[2320531]))
      const-val call_tmp[2320545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2320547 'move' call_tmp[2320545](2320549 'ptr_eq' coerce_tmp[2320538] nil[44]))
      if call_tmp[2320545]
      {
        (2320555 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320558 'move' call_tmp[2320529](2320560 '_wide_get_locale' coerce_tmp[2320531]))
      (2320562 'move' tmp[2320520] call_tmp[2320529])
      val rvfDerefTmp[2320565]:channel(true,dynamic,true)[1021825] "temp"
      (2320567 'move' rvfDerefTmp[2320565](2320569 'deref' rvfRerefTmp[2084460]))
      val isdirect[2320571]:bool[10] "temp"
      (2320573 'move' isdirect[2320571](2320576 call chpl_doDirectExecuteOn[187423] call_tmp[2320529]))
      if isdirect[2320571]
      {
        (2320581 call on_fn[1393602] rvfDerefTmp[2320565])
      }
      {
        val _args_foron_fn[2320584]:_class_localson_fn[2094500] "temp"
        (2320586 'move' _args_foron_fn[2320584](2320588 'stack allocate class' _class_localson_fn[2094500]))
        (2320590 '.=' _args_foron_fn[2320584] _0_tmp[2094503] tmp[2320520])
        (2320594 '.=' _args_foron_fn[2320584] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320565])
        val _args_vforon_fn[2320598]:c_void_ptr[149] "temp"
        (2320600 'move' _args_vforon_fn[2320598](2320602 'cast_to_void_star' _args_foron_fn[2320584]))
        val _args_sizeon_fn[2320604]:int(64)[13] "temp"
        (2320606 'move' _args_sizeon_fn[2320604](2320608 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320611 call wrapon_fn[2094534] tmp[2320520] _args_vforon_fn[2320598] _args_sizeon_fn[2320604] _args_foron_fn[2320584])
      }
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    ref rvfRerefTmp[2084467]:channel(true,dynamic,true)[1021825] "temp"
    (2084471 'move' rvfRerefTmp[2084467](2084468 'set reference' this[1807352]))
    const-val tmp[2320620]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[2320622]:locale[28] "dead after last mention" "maybe param" "temp"
    (2320624 'move' call_tmp[2320622](2320626 '.' rvfRerefTmp[2084467] home[1021813]))
    const-val call_tmp[2320629]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2320631]:BaseLocale[91201] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320633 'move' coerce_tmp[2320631](2320635 '.v' call_tmp[2320622] _instance[89975]))
    val coerce_tmp[2320638]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320640 'move' coerce_tmp[2320638](2320642 'cast' object[22] coerce_tmp[2320631]))
    const-val call_tmp[2320645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320647 'move' call_tmp[2320645](2320649 'ptr_eq' coerce_tmp[2320638] nil[44]))
    if call_tmp[2320645]
    {
      (2320655 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2320658 'move' call_tmp[2320629](2320660 '_wide_get_locale' coerce_tmp[2320631]))
    (2320662 'move' tmp[2320620] call_tmp[2320629])
    val rvfDerefTmp[2320665]:channel(true,dynamic,true)[1021825] "temp"
    (2320667 'move' rvfDerefTmp[2320665](2320669 'deref' rvfRerefTmp[2084467]))
    val isdirect[2320671]:bool[10] "temp"
    (2320673 'move' isdirect[2320671](2320676 call chpl_doDirectExecuteOn[187423] call_tmp[2320629]))
    if isdirect[2320671]
    {
      (2320681 call on_fn[1393602] rvfDerefTmp[2320665])
    }
    {
      val _args_foron_fn[2320684]:_class_localson_fn[2094500] "temp"
      (2320686 'move' _args_foron_fn[2320684](2320688 'stack allocate class' _class_localson_fn[2094500]))
      (2320690 '.=' _args_foron_fn[2320684] _0_tmp[2094503] tmp[2320620])
      (2320694 '.=' _args_foron_fn[2320684] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320665])
      val _args_vforon_fn[2320698]:c_void_ptr[149] "temp"
      (2320700 'move' _args_vforon_fn[2320698](2320702 'cast_to_void_star' _args_foron_fn[2320684]))
      val _args_sizeon_fn[2320704]:int(64)[13] "temp"
      (2320706 'move' _args_sizeon_fn[2320704](2320708 'sizeof_bundle' _class_localson_fn[2094500]))
      on(2320711 call wrapon_fn[2094534] tmp[2320620] _args_vforon_fn[2320698] _args_sizeon_fn[2320704] _args_foron_fn[2320684])
    }
    label _endon_fn[1813638]
    (1433234 return _void[55])
  }
  function on_fn[1471095](ref arg this[1807416]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1471101]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227166]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227168 'move' call_tmp[2227166](2227170 '.' this[1807416] _channel_internal[985620]))
    (1471103 'move' call_tmp[1471101] call_tmp[2227166])
    const-val coerce_tmp[1471144]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1471148 'move' coerce_tmp[1471144](1471146 'deref' call_tmp[1471101]))
    (1471110 call qio_channel_release[232961] coerce_tmp[1471144])
    ref call_tmp[1471113]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2227176]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227178 'move' call_tmp[2227176](2227180 '.' this[1807416] _channel_internal[985620]))
    (1471115 'move' call_tmp[1471113] call_tmp[2227176])
    (2216209 '=' call_tmp[1471113] QIO_CHANNEL_PTR_NULL[231468])
    (1471125 return _void[55])
  }
  function on_fn[1534074](ref arg this[1807458]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1534080]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228267]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228269 'move' call_tmp[2228267](2228271 '.' this[1807458] _channel_internal[1021818]))
    (1534082 'move' call_tmp[1534080] call_tmp[2228267])
    const-val coerce_tmp[1534123]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1534127 'move' coerce_tmp[1534123](1534125 'deref' call_tmp[1534080]))
    (1534089 call qio_channel_release[232961] coerce_tmp[1534123])
    ref call_tmp[1534092]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2228277]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228279 'move' call_tmp[2228277](2228281 '.' this[1807458] _channel_internal[1021818]))
    (1534094 'move' call_tmp[1534092] call_tmp[2228277])
    (2216215 '=' call_tmp[1534092] QIO_CHANNEL_PTR_NULL[231468])
    (1534104 return _void[55])
  }
  function on_fn[1536250](ref arg this[1807462]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1536256]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263808]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263810 'move' call_tmp[2263808](2263812 '.' this[1807462] _channel_internal[1060940]))
    (1536258 'move' call_tmp[1536256] call_tmp[2263808])
    const-val coerce_tmp[1536299]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1536303 'move' coerce_tmp[1536299](1536301 'deref' call_tmp[1536256]))
    (1536265 call qio_channel_release[232961] coerce_tmp[1536299])
    ref call_tmp[1536268]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2263818]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263820 'move' call_tmp[2263818](2263822 '.' this[1807462] _channel_internal[1060940]))
    (1536270 'move' call_tmp[1536268] call_tmp[2263818])
    (2216221 '=' call_tmp[1536268] QIO_CHANNEL_PTR_NULL[231468])
    (1536280 return _void[55])
  }
  function on_fn[1540504](ref arg this[1807468]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-ref call_tmp[1540510]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270123]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270125 'move' call_tmp[2270123](2270127 '.' this[1807468] _channel_internal[1080675]))
    (1540512 'move' call_tmp[1540510] call_tmp[2270123])
    const-val coerce_tmp[1540553]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1540557 'move' coerce_tmp[1540553](1540555 'deref' call_tmp[1540510]))
    (1540519 call qio_channel_release[232961] coerce_tmp[1540553])
    ref call_tmp[1540522]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2270133]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270135 'move' call_tmp[2270133](2270137 '.' this[1807468] _channel_internal[1080675]))
    (1540524 'move' call_tmp[1540522] call_tmp[2270133])
    (2216227 '=' call_tmp[1540522] QIO_CHANNEL_PTR_NULL[231468])
    (1540534 return _void[55])
  }
  function chpl__deinit_IO[1852165]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1852171]
    ref i_x[2328301]:file[235580] "temp"
    (2328305 'move' i_x[2328301](2328303 'set reference' call_tmp[724031]))
    (2328309 call deinit[235891] i_x[2328301])
    ref i_x[2328289]:file[235580] "temp"
    (2328293 'move' i_x[2328289](2328291 'set reference' call_tmp[724014]))
    (2328297 call deinit[235891] i_x[2328289])
    ref i_x[2328277]:file[235580] "temp"
    (2328281 'move' i_x[2328277](2328279 'set reference' call_tmp[723997]))
    (2328285 call deinit[235891] i_x[2328277])
    ref i_x[2331431]:channel(true,dynamic,true)[1021825] "temp"
    (2331435 'move' i_x[2331431](2331433 'set reference' stderr[250264]))
    (2331439 call deinit[1534039] i_x[2331431])
    ref i_x[2331419]:channel(true,dynamic,true)[1021825] "temp"
    (2331423 'move' i_x[2331419](2331421 'set reference' stdout[250235]))
    (2331427 call deinit[1534039] i_x[2331419])
    ref i_x[2328976]:channel(false,dynamic,true)[985627] "temp"
    (2328980 'move' i_x[2328976](2328978 'set reference' stdin[250208]))
    (2328984 call deinit[1471060] i_x[2328976])
    ref tmp[2085338]:6*string[985217] "temp"
    (2085343 'move' tmp[2085338](2085340 '.' _arg_to_proto_names[246561] value[2085328]))
    ref _field_destructor_tmp_[2328878]:string[26] "temp"
    (2328880 'move' _field_destructor_tmp_[2328878](2328882 '.' tmp[2085338] x5[985215]))
    (2328886 call deinit[30831] _field_destructor_tmp_[2328878])
    ref _field_destructor_tmp_[2328888]:string[26] "temp"
    (2328890 'move' _field_destructor_tmp_[2328888](2328892 '.' tmp[2085338] x4[985213]))
    (2328896 call deinit[30831] _field_destructor_tmp_[2328888])
    ref _field_destructor_tmp_[2328898]:string[26] "temp"
    (2328900 'move' _field_destructor_tmp_[2328898](2328902 '.' tmp[2085338] x3[985211]))
    (2328906 call deinit[30831] _field_destructor_tmp_[2328898])
    ref _field_destructor_tmp_[2328908]:string[26] "temp"
    (2328910 'move' _field_destructor_tmp_[2328908](2328912 '.' tmp[2085338] x2[985209]))
    (2328916 call deinit[30831] _field_destructor_tmp_[2328908])
    ref _field_destructor_tmp_[2328918]:string[26] "temp"
    (2328920 'move' _field_destructor_tmp_[2328918](2328922 '.' tmp[2085338] x1[985207]))
    (2328926 call deinit[30831] _field_destructor_tmp_[2328918])
    ref _field_destructor_tmp_[2328928]:string[26] "temp"
    (2328930 'move' _field_destructor_tmp_[2328928](2328932 '.' tmp[2085338] x0[985205]))
    (2328936 call deinit[30831] _field_destructor_tmp_[2328928])
    (1852168 return _void[55])
  }
  function wrapon_fn[2086927](const in arg dummy_locale_arg[2086929]:chpl_localeID_t[209294], in arg buf[2086931]:c_void_ptr[149], in arg buf_size[2086933]:int(64)[13], in arg c[2086935]:_class_localson_fn[2086887]) : void[4] "on block"
  {
    val _0_tmp[2086940]:chpl_localeID_t[209294] "temp"
    (2086945 'move' _0_tmp[2086940](2086942 '.v' c[2086935] _0_tmp[2086890]))
    ref _1_this[2086947]:file[235580] "temp"
    (2086952 'move' _1_this[2086947](2086949 '.v' c[2086935] _1_this[2086892]))
    (2086938 call on_fn[935597] _1_this[2086947])
    (2086955 return _void[55])
  }
  function wrapon_fn[2087038](const in arg dummy_locale_arg[2087040]:chpl_localeID_t[209294], in arg buf[2087042]:c_void_ptr[149], in arg buf_size[2087044]:int(64)[13], in arg c[2087046]:_class_localson_fn[2086980]) : void[4] "on block"
  {
    val _0_tmp[2087051]:chpl_localeID_t[209294] "temp"
    (2087056 'move' _0_tmp[2087051](2087053 '.v' c[2087046] _0_tmp[2086983]))
    val _1_rvfDerefTmp[2087058]:file[235580] "temp"
    (2087063 'move' _1_rvfDerefTmp[2087058](2087060 '.v' c[2087046] _1_rvfDerefTmp[2086985]))
    ref _2_ret[2087066]:iostyle[231844] "temp"
    (2087071 'move' _2_ret[2087066](2087068 '.v' c[2087046] _2_ret[2086987]))
    ref _3_error[2087074]:Error[167938] "temp"
    (2087079 'move' _3_error[2087074](2087076 '.v' c[2087046] _3_error[2086989]))
    (2087049 call on_fn[935606] _1_rvfDerefTmp[2087058] _2_ret[2087066] _3_error[2087074])
    (2087082 return _void[55])
  }
  function wrapon_fn[2087152](const in arg dummy_locale_arg[2087154]:chpl_localeID_t[209294], in arg buf[2087156]:c_void_ptr[149], in arg buf_size[2087158]:int(64)[13], in arg c[2087160]:_class_localson_fn[2087106]) : void[4] "on block"
  {
    val _0_tmp[2087165]:chpl_localeID_t[209294] "temp"
    (2087170 'move' _0_tmp[2087165](2087167 '.v' c[2087160] _0_tmp[2087109]))
    val _1_rvfDerefTmp[2087172]:file[235580] "temp"
    (2087177 'move' _1_rvfDerefTmp[2087172](2087174 '.v' c[2087160] _1_rvfDerefTmp[2087111]))
    ref _2_err[2087180]:syserr[223584] "temp"
    (2087185 'move' _2_err[2087180](2087182 '.v' c[2087160] _2_err[2087113]))
    (2087163 call on_fn[935615] _1_rvfDerefTmp[2087172] _2_err[2087180])
    (2087188 return _void[55])
  }
  function wrapon_fn[2087284](const in arg dummy_locale_arg[2087286]:chpl_localeID_t[209294], in arg buf[2087288]:c_void_ptr[149], in arg buf_size[2087290]:int(64)[13], in arg c[2087292]:_class_localson_fn[2087214]) : void[4] "on block"
  {
    val _0_tmp[2087297]:chpl_localeID_t[209294] "temp"
    (2087302 'move' _0_tmp[2087297](2087299 '.v' c[2087292] _0_tmp[2087217]))
    val _1_rvfDerefTmp[2087304]:file[235580] "temp"
    (2087309 'move' _1_rvfDerefTmp[2087304](2087306 '.v' c[2087292] _1_rvfDerefTmp[2087219]))
    ref _2_err[2087312]:syserr[223584] "temp"
    (2087317 'move' _2_err[2087312](2087314 '.v' c[2087292] _2_err[2087221]))
    ref _3_ret[2087320]:string[26] "temp"
    (2087325 'move' _3_ret[2087320](2087322 '.v' c[2087292] _3_ret[2087223]))
    ref _4_error[2087328]:Error[167938] "temp"
    (2087333 'move' _4_error[2087328](2087330 '.v' c[2087292] _4_error[2087225]))
    (2087295 call on_fn[935633] _1_rvfDerefTmp[2087304] _2_err[2087312] _3_ret[2087320] _4_error[2087328])
    (2087336 return _void[55])
  }
  function wrapon_fn[2087657](const in arg dummy_locale_arg[2087659]:chpl_localeID_t[209294], in arg buf[2087661]:c_void_ptr[149], in arg buf_size[2087663]:int(64)[13], in arg c[2087665]:_class_localson_fn[2087563]) : void[4] "on block"
  {
    val _0_tmp[2087670]:chpl_localeID_t[209294] "temp"
    (2087675 'move' _0_tmp[2087670](2087672 '.v' c[2087665] _0_tmp[2087566]))
    ref _1_err[2087677]:syserr[223584] "temp"
    (2087682 'move' _1_err[2087677](2087679 '.v' c[2087665] _1_err[2087568]))
    val _2_start[2087685]:int(64)[13] "temp"
    (2087690 'move' _2_start[2087685](2087687 '.v' c[2087665] _2_start[2087570]))
    val _3_end[2087693]:int(64)[13] "temp"
    (2087698 'move' _3_end[2087693](2087695 '.v' c[2087665] _3_end[2087572]))
    val _4_rvfDerefTmp[2087701]:iostyle[231844] "temp"
    (2087706 'move' _4_rvfDerefTmp[2087701](2087703 '.v' c[2087665] _4_rvfDerefTmp[2087574]))
    val _5_rvfDerefTmp[2087709]:file[235580] "temp"
    (2087714 'move' _5_rvfDerefTmp[2087709](2087711 '.v' c[2087665] _5_rvfDerefTmp[2087576]))
    ref _6_ret[2087717]:channel(false,dynamic,true)[985627] "temp"
    (2087722 'move' _6_ret[2087717](2087719 '.v' c[2087665] _6_ret[2087578]))
    val _7_hints[2087725]:int(32)[95] "temp"
    (2087730 'move' _7_hints[2087725](2087727 '.v' c[2087665] _7_hints[2087580]))
    ref _8_error[2087733]:Error[167938] "temp"
    (2087738 'move' _8_error[2087733](2087735 '.v' c[2087665] _8_error[2087582]))
    (2087668 call on_fn[1016695] _1_err[2087677] _2_start[2087685] _3_end[2087693] _4_rvfDerefTmp[2087701] _5_rvfDerefTmp[2087709] _6_ret[2087717] _7_hints[2087725] _8_error[2087733])
    (2087741 return _void[55])
  }
  function wrapon_fn[2087852](const in arg dummy_locale_arg[2087854]:chpl_localeID_t[209294], in arg buf[2087856]:c_void_ptr[149], in arg buf_size[2087858]:int(64)[13], in arg c[2087860]:_class_localson_fn[2087770]) : void[4] "on block"
  {
    val _0_tmp[2087865]:chpl_localeID_t[209294] "temp"
    (2087870 'move' _0_tmp[2087865](2087867 '.v' c[2087860] _0_tmp[2087773]))
    ref _1_this[2087872]:channel(false,dynamic,true)[985627] "temp"
    (2087877 'move' _1_this[2087872](2087874 '.v' c[2087860] _1_this[2087775]))
    val _2_hints[2087880]:int(32)[95] "temp"
    (2087885 'move' _2_hints[2087880](2087882 '.v' c[2087860] _2_hints[2087777]))
    val _3_rvfDerefTmp[2087888]:iostyle[231844] "temp"
    (2087893 'move' _3_rvfDerefTmp[2087888](2087890 '.v' c[2087860] _3_rvfDerefTmp[2087779]))
    val _4_end[2087896]:int(64)[13] "temp"
    (2087901 'move' _4_end[2087896](2087898 '.v' c[2087860] _4_end[2087781]))
    val _5_start[2087904]:int(64)[13] "temp"
    (2087909 'move' _5_start[2087904](2087906 '.v' c[2087860] _5_start[2087783]))
    val _6_rvfDerefTmp[2087912]:file[235580] "temp"
    (2087917 'move' _6_rvfDerefTmp[2087912](2087914 '.v' c[2087860] _6_rvfDerefTmp[2087785]))
    ref _7__formal_tmp_error[2087920]:syserr[223584] "temp"
    (2087925 'move' _7__formal_tmp_error[2087920](2087922 '.v' c[2087860] _7__formal_tmp_error[2087787]))
    (2087863 call on_fn[1017725] _1_this[2087872] _2_hints[2087880] _3_rvfDerefTmp[2087888] _4_end[2087896] _5_start[2087904] _6_rvfDerefTmp[2087912] _7__formal_tmp_error[2087920])
    (2087928 return _void[55])
  }
  function wrapon_fn[2087985](const in arg dummy_locale_arg[2087987]:chpl_localeID_t[209294], in arg buf[2087989]:c_void_ptr[149], in arg buf_size[2087991]:int(64)[13], in arg c[2087993]:_class_localson_fn[2087951]) : void[4] "on block"
  {
    val _0_tmp[2087998]:chpl_localeID_t[209294] "temp"
    (2088003 'move' _0_tmp[2087998](2088000 '.v' c[2087993] _0_tmp[2087954]))
    val _1_rvfDerefTmp[2088005]:channel(false,dynamic,true)[985627] "temp"
    (2088010 'move' _1_rvfDerefTmp[2088005](2088007 '.v' c[2087993] _1_rvfDerefTmp[2087956]))
    (2087996 call on_fn[1018665] _1_rvfDerefTmp[2088005])
    (2088013 return _void[55])
  }
  function wrapon_fn[2088076](const in arg dummy_locale_arg[2088078]:chpl_localeID_t[209294], in arg buf[2088080]:c_void_ptr[149], in arg buf_size[2088082]:int(64)[13], in arg c[2088084]:_class_localson_fn[2088036]) : void[4] "on block"
  {
    val _0_tmp[2088089]:chpl_localeID_t[209294] "temp"
    (2088094 'move' _0_tmp[2088089](2088091 '.v' c[2088084] _0_tmp[2088039]))
    ref _1_lhs[2088096]:channel(false,dynamic,true)[985627] "temp"
    (2088101 'move' _1_lhs[2088096](2088098 '.v' c[2088084] _1_lhs[2088041]))
    (2088087 call on_fn[1018709] _1_lhs[2088096])
    (2088104 return _void[55])
  }
  function wrapon_fn[2088340](const in arg dummy_locale_arg[2088342]:chpl_localeID_t[209294], in arg buf[2088344]:c_void_ptr[149], in arg buf_size[2088346]:int(64)[13], in arg c[2088348]:_class_localson_fn[2088246]) : void[4] "on block"
  {
    val _0_tmp[2088353]:chpl_localeID_t[209294] "temp"
    (2088358 'move' _0_tmp[2088353](2088355 '.v' c[2088348] _0_tmp[2088249]))
    val _1_end[2088360]:int(64)[13] "temp"
    (2088365 'move' _1_end[2088360](2088362 '.v' c[2088348] _1_end[2088251]))
    val _2_rvfDerefTmp[2088368]:iostyle[231844] "temp"
    (2088373 'move' _2_rvfDerefTmp[2088368](2088370 '.v' c[2088348] _2_rvfDerefTmp[2088253]))
    val _3_rvfDerefTmp[2088376]:file[235580] "temp"
    (2088381 'move' _3_rvfDerefTmp[2088376](2088378 '.v' c[2088348] _3_rvfDerefTmp[2088255]))
    ref _4_ret[2088384]:channel(true,dynamic,true)[1021825] "temp"
    (2088389 'move' _4_ret[2088384](2088386 '.v' c[2088348] _4_ret[2088257]))
    val _5_hints[2088392]:int(32)[95] "temp"
    (2088397 'move' _5_hints[2088392](2088394 '.v' c[2088348] _5_hints[2088259]))
    val _6_start[2088400]:int(64)[13] "temp"
    (2088405 'move' _6_start[2088400](2088402 '.v' c[2088348] _6_start[2088261]))
    ref _7_err[2088408]:syserr[223584] "temp"
    (2088413 'move' _7_err[2088408](2088410 '.v' c[2088348] _7_err[2088263]))
    ref _8_error[2088416]:Error[167938] "temp"
    (2088421 'move' _8_error[2088416](2088418 '.v' c[2088348] _8_error[2088265]))
    (2088351 call on_fn[1022270] _1_end[2088360] _2_rvfDerefTmp[2088368] _3_rvfDerefTmp[2088376] _4_ret[2088384] _5_hints[2088392] _6_start[2088400] _7_err[2088408] _8_error[2088416])
    (2088424 return _void[55])
  }
  function wrapon_fn[2088535](const in arg dummy_locale_arg[2088537]:chpl_localeID_t[209294], in arg buf[2088539]:c_void_ptr[149], in arg buf_size[2088541]:int(64)[13], in arg c[2088543]:_class_localson_fn[2088453]) : void[4] "on block"
  {
    val _0_tmp[2088548]:chpl_localeID_t[209294] "temp"
    (2088553 'move' _0_tmp[2088548](2088550 '.v' c[2088543] _0_tmp[2088456]))
    val _1_rvfDerefTmp[2088555]:file[235580] "temp"
    (2088560 'move' _1_rvfDerefTmp[2088555](2088557 '.v' c[2088543] _1_rvfDerefTmp[2088458]))
    ref _2__formal_tmp_error[2088563]:syserr[223584] "temp"
    (2088568 'move' _2__formal_tmp_error[2088563](2088565 '.v' c[2088543] _2__formal_tmp_error[2088460]))
    val _3_end[2088571]:int(64)[13] "temp"
    (2088576 'move' _3_end[2088571](2088573 '.v' c[2088543] _3_end[2088462]))
    ref _4_this[2088579]:channel(true,dynamic,true)[1021825] "temp"
    (2088584 'move' _4_this[2088579](2088581 '.v' c[2088543] _4_this[2088464]))
    val _5_hints[2088587]:int(32)[95] "temp"
    (2088592 'move' _5_hints[2088587](2088589 '.v' c[2088543] _5_hints[2088466]))
    val _6_rvfDerefTmp[2088595]:iostyle[231844] "temp"
    (2088600 'move' _6_rvfDerefTmp[2088595](2088597 '.v' c[2088543] _6_rvfDerefTmp[2088468]))
    val _7_start[2088603]:int(64)[13] "temp"
    (2088608 'move' _7_start[2088603](2088605 '.v' c[2088543] _7_start[2088470]))
    (2088546 call on_fn[1022761] _1_rvfDerefTmp[2088555] _2__formal_tmp_error[2088563] _3_end[2088571] _4_this[2088579] _5_hints[2088587] _6_rvfDerefTmp[2088595] _7_start[2088603])
    (2088611 return _void[55])
  }
  function wrapon_fn[2088668](const in arg dummy_locale_arg[2088670]:chpl_localeID_t[209294], in arg buf[2088672]:c_void_ptr[149], in arg buf_size[2088674]:int(64)[13], in arg c[2088676]:_class_localson_fn[2088634]) : void[4] "on block"
  {
    val _0_tmp[2088681]:chpl_localeID_t[209294] "temp"
    (2088686 'move' _0_tmp[2088681](2088683 '.v' c[2088676] _0_tmp[2088637]))
    val _1_rvfDerefTmp[2088688]:channel(true,dynamic,true)[1021825] "temp"
    (2088693 'move' _1_rvfDerefTmp[2088688](2088690 '.v' c[2088676] _1_rvfDerefTmp[2088639]))
    (2088679 call on_fn[1023373] _1_rvfDerefTmp[2088688])
    (2088696 return _void[55])
  }
  function wrapon_fn[2088759](const in arg dummy_locale_arg[2088761]:chpl_localeID_t[209294], in arg buf[2088763]:c_void_ptr[149], in arg buf_size[2088765]:int(64)[13], in arg c[2088767]:_class_localson_fn[2088719]) : void[4] "on block"
  {
    val _0_tmp[2088772]:chpl_localeID_t[209294] "temp"
    (2088777 'move' _0_tmp[2088772](2088774 '.v' c[2088767] _0_tmp[2088722]))
    ref _1_lhs[2088779]:channel(true,dynamic,true)[1021825] "temp"
    (2088784 'move' _1_lhs[2088779](2088781 '.v' c[2088767] _1_lhs[2088724]))
    (2088770 call on_fn[1023417] _1_lhs[2088779])
    (2088787 return _void[55])
  }
  function wrapon_fn[2089053](const in arg dummy_locale_arg[2089055]:chpl_localeID_t[209294], in arg buf[2089057]:c_void_ptr[149], in arg buf_size[2089059]:int(64)[13], in arg c[2089061]:_class_localson_fn[2088959]) : void[4] "on block"
  {
    val _0_tmp[2089066]:chpl_localeID_t[209294] "temp"
    (2089071 'move' _0_tmp[2089066](2089068 '.v' c[2089061] _0_tmp[2088962]))
    val _1_start[2089073]:int(64)[13] "temp"
    (2089078 'move' _1_start[2089073](2089075 '.v' c[2089061] _1_start[2088964]))
    ref _2_ret[2089081]:channel(true,dynamic,false)[1060947] "temp"
    (2089086 'move' _2_ret[2089081](2089083 '.v' c[2089061] _2_ret[2088966]))
    val _3_end[2089089]:int(64)[13] "temp"
    (2089094 'move' _3_end[2089089](2089091 '.v' c[2089061] _3_end[2088968]))
    val _4_rvfDerefTmp[2089097]:iostyle[231844] "temp"
    (2089102 'move' _4_rvfDerefTmp[2089097](2089099 '.v' c[2089061] _4_rvfDerefTmp[2088970]))
    val _5_rvfDerefTmp[2089105]:file[235580] "temp"
    (2089110 'move' _5_rvfDerefTmp[2089105](2089107 '.v' c[2089061] _5_rvfDerefTmp[2088972]))
    ref _6_err[2089113]:syserr[223584] "temp"
    (2089118 'move' _6_err[2089113](2089115 '.v' c[2089061] _6_err[2088974]))
    val _7_hints[2089121]:int(32)[95] "temp"
    (2089126 'move' _7_hints[2089121](2089123 '.v' c[2089061] _7_hints[2088976]))
    ref _8_error[2089129]:Error[167938] "temp"
    (2089134 'move' _8_error[2089129](2089131 '.v' c[2089061] _8_error[2088978]))
    (2089064 call on_fn[1061022] _1_start[2089073] _2_ret[2089081] _3_end[2089089] _4_rvfDerefTmp[2089097] _5_rvfDerefTmp[2089105] _6_err[2089113] _7_hints[2089121] _8_error[2089129])
    (2089137 return _void[55])
  }
  function wrapon_fn[2089248](const in arg dummy_locale_arg[2089250]:chpl_localeID_t[209294], in arg buf[2089252]:c_void_ptr[149], in arg buf_size[2089254]:int(64)[13], in arg c[2089256]:_class_localson_fn[2089166]) : void[4] "on block"
  {
    val _0_tmp[2089261]:chpl_localeID_t[209294] "temp"
    (2089266 'move' _0_tmp[2089261](2089263 '.v' c[2089256] _0_tmp[2089169]))
    ref _1__formal_tmp_error[2089268]:syserr[223584] "temp"
    (2089273 'move' _1__formal_tmp_error[2089268](2089270 '.v' c[2089256] _1__formal_tmp_error[2089171]))
    val _2_end[2089276]:int(64)[13] "temp"
    (2089281 'move' _2_end[2089276](2089278 '.v' c[2089256] _2_end[2089173]))
    val _3_hints[2089284]:int(32)[95] "temp"
    (2089289 'move' _3_hints[2089284](2089286 '.v' c[2089256] _3_hints[2089175]))
    val _4_rvfDerefTmp[2089292]:iostyle[231844] "temp"
    (2089297 'move' _4_rvfDerefTmp[2089292](2089294 '.v' c[2089256] _4_rvfDerefTmp[2089177]))
    ref _5_this[2089300]:channel(true,dynamic,false)[1060947] "temp"
    (2089305 'move' _5_this[2089300](2089302 '.v' c[2089256] _5_this[2089179]))
    val _6_start[2089308]:int(64)[13] "temp"
    (2089313 'move' _6_start[2089308](2089310 '.v' c[2089256] _6_start[2089181]))
    val _7_rvfDerefTmp[2089316]:file[235580] "temp"
    (2089321 'move' _7_rvfDerefTmp[2089316](2089318 '.v' c[2089256] _7_rvfDerefTmp[2089183]))
    (2089259 call on_fn[1061474] _1__formal_tmp_error[2089268] _2_end[2089276] _3_hints[2089284] _4_rvfDerefTmp[2089292] _5_this[2089300] _6_start[2089308] _7_rvfDerefTmp[2089316])
    (2089324 return _void[55])
  }
  function wrapon_fn[2089381](const in arg dummy_locale_arg[2089383]:chpl_localeID_t[209294], in arg buf[2089385]:c_void_ptr[149], in arg buf_size[2089387]:int(64)[13], in arg c[2089389]:_class_localson_fn[2089347]) : void[4] "on block"
  {
    val _0_tmp[2089394]:chpl_localeID_t[209294] "temp"
    (2089399 'move' _0_tmp[2089394](2089396 '.v' c[2089389] _0_tmp[2089350]))
    val _1_rvfDerefTmp[2089401]:channel(true,dynamic,false)[1060947] "temp"
    (2089406 'move' _1_rvfDerefTmp[2089401](2089403 '.v' c[2089389] _1_rvfDerefTmp[2089352]))
    (2089392 call on_fn[1062086] _1_rvfDerefTmp[2089401])
    (2089409 return _void[55])
  }
  function wrapon_fn[2089472](const in arg dummy_locale_arg[2089474]:chpl_localeID_t[209294], in arg buf[2089476]:c_void_ptr[149], in arg buf_size[2089478]:int(64)[13], in arg c[2089480]:_class_localson_fn[2089432]) : void[4] "on block"
  {
    val _0_tmp[2089485]:chpl_localeID_t[209294] "temp"
    (2089490 'move' _0_tmp[2089485](2089487 '.v' c[2089480] _0_tmp[2089435]))
    ref _1_lhs[2089492]:channel(true,dynamic,false)[1060947] "temp"
    (2089497 'move' _1_lhs[2089492](2089494 '.v' c[2089480] _1_lhs[2089437]))
    (2089483 call on_fn[1062130] _1_lhs[2089492])
    (2089500 return _void[55])
  }
  function wrapon_fn[2089570](const in arg dummy_locale_arg[2089572]:chpl_localeID_t[209294], in arg buf[2089574]:c_void_ptr[149], in arg buf_size[2089576]:int(64)[13], in arg c[2089578]:_class_localson_fn[2089524]) : void[4] "on block"
  {
    val _0_tmp[2089583]:chpl_localeID_t[209294] "temp"
    (2089588 'move' _0_tmp[2089583](2089585 '.v' c[2089578] _0_tmp[2089527]))
    val _1_rvfDerefTmp[2089590]:channel(true,dynamic,false)[1060947] "temp"
    (2089595 'move' _1_rvfDerefTmp[2089590](2089592 '.v' c[2089578] _1_rvfDerefTmp[2089529]))
    ref _2_err[2089598]:syserr[223584] "temp"
    (2089603 'move' _2_err[2089598](2089600 '.v' c[2089578] _2_err[2089531]))
    (2089581 call on_fn[1062455] _1_rvfDerefTmp[2089590] _2_err[2089598])
    (2089606 return _void[55])
  }
  function wrapon_fn[2089708](const in arg dummy_locale_arg[2089710]:chpl_localeID_t[209294], in arg buf[2089712]:c_void_ptr[149], in arg buf_size[2089714]:int(64)[13], in arg c[2089716]:_class_localson_fn[2089632]) : void[4] "on block"
  {
    val _0_tmp[2089721]:chpl_localeID_t[209294] "temp"
    (2089726 'move' _0_tmp[2089721](2089723 '.v' c[2089716] _0_tmp[2089635]))
    ref _1_this[2089728]:channel(true,dynamic,false)[1060947] "temp"
    (2089733 'move' _1_this[2089728](2089730 '.v' c[2089716] _1_this[2089637]))
    ref _2_path[2089736]:string[26] "temp"
    (2089741 'move' _2_path[2089736](2089738 '.v' c[2089716] _2_path[2089639]))
    ref _3_offset[2089744]:int(64)[13] "temp"
    (2089749 'move' _3_offset[2089744](2089746 '.v' c[2089716] _3_offset[2089641]))
    ref _4_error[2089752]:Error[167938] "temp"
    (2089757 'move' _4_error[2089752](2089754 '.v' c[2089716] _4_error[2089643]))
    (2089719 call on_fn[1062932] _1_this[2089728] _2_path[2089736] _3_offset[2089744] _4_error[2089752])
    (2089760 return _void[55])
  }
  function wrapon_fn[2089850](const in arg dummy_locale_arg[2089852]:chpl_localeID_t[209294], in arg buf[2089854]:c_void_ptr[149], in arg buf_size[2089856]:int(64)[13], in arg c[2089858]:_class_localson_fn[2089786]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2089863]:chpl_localeID_t[209294] "temp"
    (2089868 'move' _0_tmp[2089863](2089865 '.v' c[2089858] _0_tmp[2089789]))
    val _1_rvfDerefTmp[2089870]:channel(true,dynamic,false)[1060947] "temp"
    (2089875 'move' _1_rvfDerefTmp[2089870](2089872 '.v' c[2089858] _1_rvfDerefTmp[2089791]))
    ref _2_args[2089878]:1*byteIndex[1057081] "temp"
    (2089883 'move' _2_args[2089878](2089880 '.v' c[2089858] _2_args[2089793]))
    val _3_rvfDerefTmp[2089886]:locale[28] "temp"
    (2089891 'move' _3_rvfDerefTmp[2089886](2089888 '.v' c[2089858] _3_rvfDerefTmp[2089795]))
    ref _4_error[2089894]:Error[167938] "temp"
    (2089899 'move' _4_error[2089894](2089896 '.v' c[2089858] _4_error[2089797]))
    (2089861 call on_fn[1066089] _1_rvfDerefTmp[2089870] _2_args[2089878] _3_rvfDerefTmp[2089886] _4_error[2089894])
    (2089902 return _void[55])
  }
  function wrapon_fn[2089992](const in arg dummy_locale_arg[2089994]:chpl_localeID_t[209294], in arg buf[2089996]:c_void_ptr[149], in arg buf_size[2089998]:int(64)[13], in arg c[2090000]:_class_localson_fn[2089928]) : void[4] "on block"
  {
    val _0_tmp[2090005]:chpl_localeID_t[209294] "temp"
    (2090010 'move' _0_tmp[2090005](2090007 '.v' c[2090000] _0_tmp[2089931]))
    ref _1_this[2090012]:channel(true,dynamic,false)[1060947] "temp"
    (2090017 'move' _1_this[2090012](2090014 '.v' c[2090000] _1_this[2089933]))
    val _2_x[2090020]:int(64)[13] "temp"
    (2090025 'move' _2_x[2090020](2090022 '.v' c[2090000] _2_x[2089935]))
    val _3_rvfDerefTmp[2090028]:locale[28] "temp"
    (2090033 'move' _3_rvfDerefTmp[2090028](2090030 '.v' c[2090000] _3_rvfDerefTmp[2089937]))
    ref _4_error[2090036]:Error[167938] "temp"
    (2090041 'move' _4_error[2090036](2090038 '.v' c[2090000] _4_error[2089939]))
    (2090003 call on_fn[1068868] _1_this[2090012] _2_x[2090020] _3_rvfDerefTmp[2090028] _4_error[2090036])
    (2090044 return _void[55])
  }
  function wrapon_fn[2090114](const in arg dummy_locale_arg[2090116]:chpl_localeID_t[209294], in arg buf[2090118]:c_void_ptr[149], in arg buf_size[2090120]:int(64)[13], in arg c[2090122]:_class_localson_fn[2090068]) : void[4] "on block"
  {
    val _0_tmp[2090127]:chpl_localeID_t[209294] "temp"
    (2090132 'move' _0_tmp[2090127](2090129 '.v' c[2090122] _0_tmp[2090071]))
    val _1_rvfDerefTmp[2090134]:channel(true,dynamic,false)[1060947] "temp"
    (2090139 'move' _1_rvfDerefTmp[2090134](2090136 '.v' c[2090122] _1_rvfDerefTmp[2090073]))
    ref _2_ret[2090142]:int(64)[13] "temp"
    (2090147 'move' _2_ret[2090142](2090144 '.v' c[2090122] _2_ret[2090075]))
    (2090125 call on_fn[1080205] _1_rvfDerefTmp[2090134] _2_ret[2090142])
    (2090150 return _void[55])
  }
  function wrapon_fn[2090274](const in arg dummy_locale_arg[2090276]:chpl_localeID_t[209294], in arg buf[2090278]:c_void_ptr[149], in arg buf_size[2090280]:int(64)[13], in arg c[2090282]:_class_localson_fn[2090180]) : void[4] "on block"
  {
    val _0_tmp[2090287]:chpl_localeID_t[209294] "temp"
    (2090292 'move' _0_tmp[2090287](2090289 '.v' c[2090282] _0_tmp[2090183]))
    val _1_start[2090294]:int(64)[13] "temp"
    (2090299 'move' _1_start[2090294](2090296 '.v' c[2090282] _1_start[2090185]))
    ref _2_ret[2090302]:channel(false,dynamic,false)[1080682] "temp"
    (2090307 'move' _2_ret[2090302](2090304 '.v' c[2090282] _2_ret[2090187]))
    val _3_rvfDerefTmp[2090310]:iostyle[231844] "temp"
    (2090315 'move' _3_rvfDerefTmp[2090310](2090312 '.v' c[2090282] _3_rvfDerefTmp[2090189]))
    val _4_end[2090318]:int(64)[13] "temp"
    (2090323 'move' _4_end[2090318](2090320 '.v' c[2090282] _4_end[2090191]))
    val _5_rvfDerefTmp[2090326]:file[235580] "temp"
    (2090331 'move' _5_rvfDerefTmp[2090326](2090328 '.v' c[2090282] _5_rvfDerefTmp[2090193]))
    ref _6_err[2090334]:syserr[223584] "temp"
    (2090339 'move' _6_err[2090334](2090336 '.v' c[2090282] _6_err[2090195]))
    val _7_hints[2090342]:int(32)[95] "temp"
    (2090347 'move' _7_hints[2090342](2090344 '.v' c[2090282] _7_hints[2090197]))
    ref _8_error[2090350]:Error[167938] "temp"
    (2090355 'move' _8_error[2090350](2090352 '.v' c[2090282] _8_error[2090199]))
    (2090285 call on_fn[1080757] _1_start[2090294] _2_ret[2090302] _3_rvfDerefTmp[2090310] _4_end[2090318] _5_rvfDerefTmp[2090326] _6_err[2090334] _7_hints[2090342] _8_error[2090350])
    (2090358 return _void[55])
  }
  function wrapon_fn[2090469](const in arg dummy_locale_arg[2090471]:chpl_localeID_t[209294], in arg buf[2090473]:c_void_ptr[149], in arg buf_size[2090475]:int(64)[13], in arg c[2090477]:_class_localson_fn[2090387]) : void[4] "on block"
  {
    val _0_tmp[2090482]:chpl_localeID_t[209294] "temp"
    (2090487 'move' _0_tmp[2090482](2090484 '.v' c[2090477] _0_tmp[2090390]))
    val _1_end[2090489]:int(64)[13] "temp"
    (2090494 'move' _1_end[2090489](2090491 '.v' c[2090477] _1_end[2090392]))
    val _2_hints[2090497]:int(32)[95] "temp"
    (2090502 'move' _2_hints[2090497](2090499 '.v' c[2090477] _2_hints[2090394]))
    val _3_rvfDerefTmp[2090505]:iostyle[231844] "temp"
    (2090510 'move' _3_rvfDerefTmp[2090505](2090507 '.v' c[2090477] _3_rvfDerefTmp[2090396]))
    ref _4_this[2090513]:channel(false,dynamic,false)[1080682] "temp"
    (2090518 'move' _4_this[2090513](2090515 '.v' c[2090477] _4_this[2090398]))
    val _5_start[2090521]:int(64)[13] "temp"
    (2090526 'move' _5_start[2090521](2090523 '.v' c[2090477] _5_start[2090400]))
    val _6_rvfDerefTmp[2090529]:file[235580] "temp"
    (2090534 'move' _6_rvfDerefTmp[2090529](2090531 '.v' c[2090477] _6_rvfDerefTmp[2090402]))
    ref _7__formal_tmp_error[2090537]:syserr[223584] "temp"
    (2090542 'move' _7__formal_tmp_error[2090537](2090539 '.v' c[2090477] _7__formal_tmp_error[2090404]))
    (2090480 call on_fn[1081206] _1_end[2090489] _2_hints[2090497] _3_rvfDerefTmp[2090505] _4_this[2090513] _5_start[2090521] _6_rvfDerefTmp[2090529] _7__formal_tmp_error[2090537])
    (2090545 return _void[55])
  }
  function wrapon_fn[2090602](const in arg dummy_locale_arg[2090604]:chpl_localeID_t[209294], in arg buf[2090606]:c_void_ptr[149], in arg buf_size[2090608]:int(64)[13], in arg c[2090610]:_class_localson_fn[2090568]) : void[4] "on block"
  {
    val _0_tmp[2090615]:chpl_localeID_t[209294] "temp"
    (2090620 'move' _0_tmp[2090615](2090617 '.v' c[2090610] _0_tmp[2090571]))
    val _1_rvfDerefTmp[2090622]:channel(false,dynamic,false)[1080682] "temp"
    (2090627 'move' _1_rvfDerefTmp[2090622](2090624 '.v' c[2090610] _1_rvfDerefTmp[2090573]))
    (2090613 call on_fn[1081818] _1_rvfDerefTmp[2090622])
    (2090630 return _void[55])
  }
  function wrapon_fn[2090693](const in arg dummy_locale_arg[2090695]:chpl_localeID_t[209294], in arg buf[2090697]:c_void_ptr[149], in arg buf_size[2090699]:int(64)[13], in arg c[2090701]:_class_localson_fn[2090653]) : void[4] "on block"
  {
    val _0_tmp[2090706]:chpl_localeID_t[209294] "temp"
    (2090711 'move' _0_tmp[2090706](2090708 '.v' c[2090701] _0_tmp[2090656]))
    ref _1_lhs[2090713]:channel(false,dynamic,false)[1080682] "temp"
    (2090718 'move' _1_lhs[2090713](2090715 '.v' c[2090701] _1_lhs[2090658]))
    (2090704 call on_fn[1081862] _1_lhs[2090713])
    (2090721 return _void[55])
  }
  function wrapon_fn[2090791](const in arg dummy_locale_arg[2090793]:chpl_localeID_t[209294], in arg buf[2090795]:c_void_ptr[149], in arg buf_size[2090797]:int(64)[13], in arg c[2090799]:_class_localson_fn[2090745]) : void[4] "on block"
  {
    val _0_tmp[2090804]:chpl_localeID_t[209294] "temp"
    (2090809 'move' _0_tmp[2090804](2090806 '.v' c[2090799] _0_tmp[2090748]))
    val _1_rvfDerefTmp[2090811]:channel(false,dynamic,false)[1080682] "temp"
    (2090816 'move' _1_rvfDerefTmp[2090811](2090813 '.v' c[2090799] _1_rvfDerefTmp[2090750]))
    ref _2_err[2090819]:syserr[223584] "temp"
    (2090824 'move' _2_err[2090819](2090821 '.v' c[2090799] _2_err[2090752]))
    (2090802 call on_fn[1082187] _1_rvfDerefTmp[2090811] _2_err[2090819])
    (2090827 return _void[55])
  }
  function wrapon_fn[2090923](const in arg dummy_locale_arg[2090925]:chpl_localeID_t[209294], in arg buf[2090927]:c_void_ptr[149], in arg buf_size[2090929]:int(64)[13], in arg c[2090931]:_class_localson_fn[2090853]) : void[4] "on block"
  {
    val _0_tmp[2090936]:chpl_localeID_t[209294] "temp"
    (2090941 'move' _0_tmp[2090936](2090938 '.v' c[2090931] _0_tmp[2090856]))
    val _1_rvfDerefTmp[2090943]:channel(false,dynamic,false)[1080682] "temp"
    (2090948 'move' _1_rvfDerefTmp[2090943](2090945 '.v' c[2090931] _1_rvfDerefTmp[2090858]))
    ref _2_path[2090951]:string[26] "temp"
    (2090956 'move' _2_path[2090951](2090953 '.v' c[2090931] _2_path[2090860]))
    ref _3_offset[2090959]:int(64)[13] "temp"
    (2090964 'move' _3_offset[2090959](2090961 '.v' c[2090931] _3_offset[2090862]))
    ref _4_error[2090967]:Error[167938] "temp"
    (2090972 'move' _4_error[2090967](2090969 '.v' c[2090931] _4_error[2090864]))
    (2090934 call on_fn[1082616] _1_rvfDerefTmp[2090943] _2_path[2090951] _3_offset[2090959] _4_error[2090967])
    (2090975 return _void[55])
  }
  function wrapon_fn[2091207](const in arg dummy_locale_arg[2091209]:chpl_localeID_t[209294], in arg buf[2091211]:c_void_ptr[149], in arg buf_size[2091213]:int(64)[13], in arg c[2091215]:_class_localson_fn[2091143]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2091220]:chpl_localeID_t[209294] "temp"
    (2091225 'move' _0_tmp[2091220](2091222 '.v' c[2091215] _0_tmp[2091146]))
    val _1_rvfDerefTmp[2091227]:channel(true,dynamic,false)[1060947] "temp"
    (2091232 'move' _1_rvfDerefTmp[2091227](2091229 '.v' c[2091215] _1_rvfDerefTmp[2091148]))
    ref _2_args[2091235]:(string,codepointIndex,string)[1158555] "temp"
    (2091240 'move' _2_args[2091235](2091237 '.v' c[2091215] _2_args[2091150]))
    val _3_rvfDerefTmp[2091243]:locale[28] "temp"
    (2091248 'move' _3_rvfDerefTmp[2091243](2091245 '.v' c[2091215] _3_rvfDerefTmp[2091152]))
    ref _4_error[2091251]:Error[167938] "temp"
    (2091256 'move' _4_error[2091251](2091253 '.v' c[2091215] _4_error[2091154]))
    (2091218 call on_fn[1164907] _1_rvfDerefTmp[2091227] _2_args[2091235] _3_rvfDerefTmp[2091243] _4_error[2091251])
    (2091259 return _void[55])
  }
  function wrapon_fn[2091349](const in arg dummy_locale_arg[2091351]:chpl_localeID_t[209294], in arg buf[2091353]:c_void_ptr[149], in arg buf_size[2091355]:int(64)[13], in arg c[2091357]:_class_localson_fn[2091285]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2091362]:chpl_localeID_t[209294] "temp"
    (2091367 'move' _0_tmp[2091362](2091364 '.v' c[2091357] _0_tmp[2091288]))
    val _1_rvfDerefTmp[2091369]:channel(true,dynamic,false)[1060947] "temp"
    (2091374 'move' _1_rvfDerefTmp[2091369](2091371 '.v' c[2091357] _1_rvfDerefTmp[2091290]))
    ref _2_args[2091377]:(string,codepointIndex,string,int(64))[1176520] "temp"
    (2091382 'move' _2_args[2091377](2091379 '.v' c[2091357] _2_args[2091292]))
    val _3_rvfDerefTmp[2091385]:locale[28] "temp"
    (2091390 'move' _3_rvfDerefTmp[2091385](2091387 '.v' c[2091357] _3_rvfDerefTmp[2091294]))
    ref _4_error[2091393]:Error[167938] "temp"
    (2091398 'move' _4_error[2091393](2091395 '.v' c[2091357] _4_error[2091296]))
    (2091360 call on_fn[1180386] _1_rvfDerefTmp[2091369] _2_args[2091377] _3_rvfDerefTmp[2091385] _4_error[2091393])
    (2091401 return _void[55])
  }
  function wrapon_fn[2094171](const in arg dummy_locale_arg[2094173]:chpl_localeID_t[209294], in arg buf[2094175]:c_void_ptr[149], in arg buf_size[2094177]:int(64)[13], in arg c[2094179]:_class_localson_fn[2094107]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2094184]:chpl_localeID_t[209294] "temp"
    (2094189 'move' _0_tmp[2094184](2094186 '.v' c[2094179] _0_tmp[2094110]))
    val _1_rvfDerefTmp[2094191]:channel(true,dynamic,true)[1021825] "temp"
    (2094196 'move' _1_rvfDerefTmp[2094191](2094193 '.v' c[2094179] _1_rvfDerefTmp[2094112]))
    ref _2_args[2094199]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
    (2094204 'move' _2_args[2094199](2094201 '.v' c[2094179] _2_args[2094114]))
    val _3_rvfDerefTmp[2094207]:locale[28] "temp"
    (2094212 'move' _3_rvfDerefTmp[2094207](2094209 '.v' c[2094179] _3_rvfDerefTmp[2094116]))
    ref _4_error[2094215]:Error[167938] "temp"
    (2094220 'move' _4_error[2094215](2094217 '.v' c[2094179] _4_error[2094118]))
    (2094182 call on_fn[1392469] _1_rvfDerefTmp[2094191] _2_args[2094199] _3_rvfDerefTmp[2094207] _4_error[2094215])
    (2094223 return _void[55])
  }
  function wrapon_fn[2094293](const in arg dummy_locale_arg[2094295]:chpl_localeID_t[209294], in arg buf[2094297]:c_void_ptr[149], in arg buf_size[2094299]:int(64)[13], in arg c[2094301]:_class_localson_fn[2094247]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2094306]:chpl_localeID_t[209294] "temp"
    (2094311 'move' _0_tmp[2094306](2094308 '.v' c[2094301] _0_tmp[2094250]))
    val _1_rvfDerefTmp[2094313]:channel(true,dynamic,true)[1021825] "temp"
    (2094318 'move' _1_rvfDerefTmp[2094313](2094315 '.v' c[2094301] _1_rvfDerefTmp[2094252]))
    ref _2_err[2094321]:syserr[223584] "temp"
    (2094326 'move' _2_err[2094321](2094323 '.v' c[2094301] _2_err[2094254]))
    (2094304 call on_fn[1392911] _1_rvfDerefTmp[2094313] _2_err[2094321])
    (2094329 return _void[55])
  }
  function wrapon_fn[2094425](const in arg dummy_locale_arg[2094427]:chpl_localeID_t[209294], in arg buf[2094429]:c_void_ptr[149], in arg buf_size[2094431]:int(64)[13], in arg c[2094433]:_class_localson_fn[2094355]) : void[4] "on block"
  {
    val _0_tmp[2094438]:chpl_localeID_t[209294] "temp"
    (2094443 'move' _0_tmp[2094438](2094440 '.v' c[2094433] _0_tmp[2094358]))
    val _1_rvfDerefTmp[2094445]:channel(true,dynamic,true)[1021825] "temp"
    (2094450 'move' _1_rvfDerefTmp[2094445](2094447 '.v' c[2094433] _1_rvfDerefTmp[2094360]))
    ref _2_path[2094453]:string[26] "temp"
    (2094458 'move' _2_path[2094453](2094455 '.v' c[2094433] _2_path[2094362]))
    ref _3_offset[2094461]:int(64)[13] "temp"
    (2094466 'move' _3_offset[2094461](2094463 '.v' c[2094433] _3_offset[2094364]))
    ref _4_error[2094469]:Error[167938] "temp"
    (2094474 'move' _4_error[2094469](2094471 '.v' c[2094433] _4_error[2094366]))
    (2094436 call on_fn[1393328] _1_rvfDerefTmp[2094445] _2_path[2094453] _3_offset[2094461] _4_error[2094469])
    (2094477 return _void[55])
  }
  function wrapon_fn[2094534](const in arg dummy_locale_arg[2094536]:chpl_localeID_t[209294], in arg buf[2094538]:c_void_ptr[149], in arg buf_size[2094540]:int(64)[13], in arg c[2094542]:_class_localson_fn[2094500]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2094547]:chpl_localeID_t[209294] "temp"
    (2094552 'move' _0_tmp[2094547](2094549 '.v' c[2094542] _0_tmp[2094503]))
    val _1_rvfDerefTmp[2094554]:channel(true,dynamic,true)[1021825] "temp"
    (2094559 'move' _1_rvfDerefTmp[2094554](2094556 '.v' c[2094542] _1_rvfDerefTmp[2094505]))
    (2094545 call on_fn[1393602] _1_rvfDerefTmp[2094554])
    (2094562 return _void[55])
  }
  function wrapon_fn[2094645](const in arg dummy_locale_arg[2094647]:chpl_localeID_t[209294], in arg buf[2094649]:c_void_ptr[149], in arg buf_size[2094651]:int(64)[13], in arg c[2094653]:_class_localson_fn[2094587]) : void[4] "on block"
  {
    val _0_tmp[2094658]:chpl_localeID_t[209294] "temp"
    (2094663 'move' _0_tmp[2094658](2094660 '.v' c[2094653] _0_tmp[2094590]))
    ref _1_this[2094665]:channel(true,dynamic,false)[1060947] "temp"
    (2094670 'move' _1_this[2094665](2094667 '.v' c[2094653] _1_this[2094592]))
    val _2_element[2094673]:int(64)[13] "temp"
    (2094678 'move' _2_element[2094673](2094675 '.v' c[2094653] _2_element[2094594]))
    ref _3_ret[2094681]:int(64)[13] "temp"
    (2094686 'move' _3_ret[2094681](2094683 '.v' c[2094653] _3_ret[2094596]))
    (2094656 call on_fn[1400789] _1_this[2094665] _2_element[2094673] _3_ret[2094681])
    (2094689 return _void[55])
  }
  function wrapon_fn[2094765](const in arg dummy_locale_arg[2094767]:chpl_localeID_t[209294], in arg buf[2094769]:c_void_ptr[149], in arg buf_size[2094771]:int(64)[13], in arg c[2094773]:_class_localson_fn[2094713]) : void[4] "on block"
  {
    val _0_tmp[2094778]:chpl_localeID_t[209294] "temp"
    (2094783 'move' _0_tmp[2094778](2094780 '.v' c[2094773] _0_tmp[2094716]))
    ref _1_this[2094785]:channel(true,dynamic,false)[1060947] "temp"
    (2094790 'move' _1_this[2094785](2094787 '.v' c[2094773] _1_this[2094718]))
    ref _2_ret[2094793]:uint(8)[100] "temp"
    (2094798 'move' _2_ret[2094793](2094795 '.v' c[2094773] _2_ret[2094720]))
    (2094776 call on_fn[1401829] _1_this[2094785] _2_ret[2094793])
    (2094801 return _void[55])
  }
  function wrapon_fn[2094904](const in arg dummy_locale_arg[2094906]:chpl_localeID_t[209294], in arg buf[2094908]:c_void_ptr[149], in arg buf_size[2094910]:int(64)[13], in arg c[2094912]:_class_localson_fn[2094828]) : void[4] "on block"
  {
    val _0_tmp[2094917]:chpl_localeID_t[209294] "temp"
    (2094922 'move' _0_tmp[2094917](2094919 '.v' c[2094912] _0_tmp[2094831]))
    ref _1_this[2094924]:channel(true,dynamic,false)[1060947] "temp"
    (2094929 'move' _1_this[2094924](2094926 '.v' c[2094912] _1_this[2094833]))
    val _2_x[2094932]:_ddata(real(64))[1357916] "temp"
    (2094937 'move' _2_x[2094932](2094934 '.v' c[2094912] _2_x[2094835]))
    val _3_len[2094940]:int(64)[13] "temp"
    (2094945 'move' _3_len[2094940](2094942 '.v' c[2094912] _3_len[2094837]))
    ref _4_err[2094948]:syserr[223584] "temp"
    (2094953 'move' _4_err[2094948](2094950 '.v' c[2094912] _4_err[2094839]))
    ref _5_error[2094956]:Error[167938] "temp"
    (2094961 'move' _5_error[2094956](2094958 '.v' c[2094912] _5_error[2094841]))
    (2094915 call on_fn[1407864] _1_this[2094924] _2_x[2094932] _3_len[2094940] _4_err[2094948] _5_error[2094956])
    (2094964 return _void[55])
  }
  function wrapon_fn[2095054](const in arg dummy_locale_arg[2095056]:chpl_localeID_t[209294], in arg buf[2095058]:c_void_ptr[149], in arg buf_size[2095060]:int(64)[13], in arg c[2095062]:_class_localson_fn[2094990]) : void[4] "on block"
  {
    val _0_tmp[2095067]:chpl_localeID_t[209294] "temp"
    (2095072 'move' _0_tmp[2095067](2095069 '.v' c[2095062] _0_tmp[2094993]))
    ref _1_this[2095074]:channel(true,dynamic,false)[1060947] "temp"
    (2095079 'move' _1_this[2095074](2095076 '.v' c[2095062] _1_this[2094995]))
    val _2_rvfDerefTmp[2095082]:ioLiteral[238753] "temp"
    (2095087 'move' _2_rvfDerefTmp[2095082](2095084 '.v' c[2095062] _2_rvfDerefTmp[2094997]))
    val _3_rvfDerefTmp[2095090]:locale[28] "temp"
    (2095095 'move' _3_rvfDerefTmp[2095090](2095092 '.v' c[2095062] _3_rvfDerefTmp[2094999]))
    ref _4_error[2095098]:Error[167938] "temp"
    (2095103 'move' _4_error[2095098](2095100 '.v' c[2095062] _4_error[2095001]))
    (2095065 call on_fn[1408604] _1_this[2095074] _2_rvfDerefTmp[2095082] _3_rvfDerefTmp[2095090] _4_error[2095098])
    (2095106 return _void[55])
  }
  function wrapon_fn[2095196](const in arg dummy_locale_arg[2095198]:chpl_localeID_t[209294], in arg buf[2095200]:c_void_ptr[149], in arg buf_size[2095202]:int(64)[13], in arg c[2095204]:_class_localson_fn[2095132]) : void[4] "on block"
  {
    val _0_tmp[2095209]:chpl_localeID_t[209294] "temp"
    (2095214 'move' _0_tmp[2095209](2095211 '.v' c[2095204] _0_tmp[2095135]))
    ref _1_this[2095216]:channel(true,dynamic,false)[1060947] "temp"
    (2095221 'move' _1_this[2095216](2095218 '.v' c[2095204] _1_this[2095137]))
    val _2_x[2095224]:real(64)[16] "temp"
    (2095229 'move' _2_x[2095224](2095226 '.v' c[2095204] _2_x[2095139]))
    val _3_rvfDerefTmp[2095232]:locale[28] "temp"
    (2095237 'move' _3_rvfDerefTmp[2095232](2095234 '.v' c[2095204] _3_rvfDerefTmp[2095141]))
    ref _4_error[2095240]:Error[167938] "temp"
    (2095245 'move' _4_error[2095240](2095242 '.v' c[2095204] _4_error[2095143]))
    (2095207 call on_fn[1421810] _1_this[2095216] _2_x[2095224] _3_rvfDerefTmp[2095232] _4_error[2095240])
    (2095248 return _void[55])
  }
  function wrapon_fn[2095338](const in arg dummy_locale_arg[2095340]:chpl_localeID_t[209294], in arg buf[2095342]:c_void_ptr[149], in arg buf_size[2095344]:int(64)[13], in arg c[2095346]:_class_localson_fn[2095274]) : void[4] "inlined function" "on block"
  {
    val _0_tmp[2095351]:chpl_localeID_t[209294] "temp"
    (2095356 'move' _0_tmp[2095351](2095353 '.v' c[2095346] _0_tmp[2095277]))
    val _1_rvfDerefTmp[2095358]:channel(true,dynamic,true)[1021825] "temp"
    (2095363 'move' _1_rvfDerefTmp[2095358](2095360 '.v' c[2095346] _1_rvfDerefTmp[2095279]))
    ref _2_args[2095366]:(int(64),ioNewline)[1433256] "temp"
    (2095371 'move' _2_args[2095366](2095368 '.v' c[2095346] _2_args[2095281]))
    val _3_rvfDerefTmp[2095374]:locale[28] "temp"
    (2095379 'move' _3_rvfDerefTmp[2095374](2095376 '.v' c[2095346] _3_rvfDerefTmp[2095283]))
    ref _4_error[2095382]:Error[167938] "temp"
    (2095387 'move' _4_error[2095382](2095384 '.v' c[2095346] _4_error[2095285]))
    (2095349 call on_fn[1433131] _1_rvfDerefTmp[2095358] _2_args[2095366] _3_rvfDerefTmp[2095374] _4_error[2095382])
    (2095390 return _void[55])
  }
  function wrapon_fn[2097344](const in arg dummy_locale_arg[2097346]:chpl_localeID_t[209294], in arg buf[2097348]:c_void_ptr[149], in arg buf_size[2097350]:int(64)[13], in arg c[2097352]:_class_localson_fn[2097304]) : void[4] "on block"
  {
    val _0_tmp[2097357]:chpl_localeID_t[209294] "temp"
    (2097362 'move' _0_tmp[2097357](2097359 '.v' c[2097352] _0_tmp[2097307]))
    ref _1_this[2097364]:channel(false,dynamic,true)[985627] "temp"
    (2097369 'move' _1_this[2097364](2097366 '.v' c[2097352] _1_this[2097309]))
    (2097355 call on_fn[1471095] _1_this[2097364])
    (2097372 return _void[55])
  }
  function wrapon_fn[2099135](const in arg dummy_locale_arg[2099137]:chpl_localeID_t[209294], in arg buf[2099139]:c_void_ptr[149], in arg buf_size[2099141]:int(64)[13], in arg c[2099143]:_class_localson_fn[2099095]) : void[4] "on block"
  {
    val _0_tmp[2099148]:chpl_localeID_t[209294] "temp"
    (2099153 'move' _0_tmp[2099148](2099150 '.v' c[2099143] _0_tmp[2099098]))
    ref _1_this[2099155]:channel(true,dynamic,true)[1021825] "temp"
    (2099160 'move' _1_this[2099155](2099157 '.v' c[2099143] _1_this[2099100]))
    (2099146 call on_fn[1534074] _1_this[2099155])
    (2099163 return _void[55])
  }
  function wrapon_fn[2099311](const in arg dummy_locale_arg[2099313]:chpl_localeID_t[209294], in arg buf[2099315]:c_void_ptr[149], in arg buf_size[2099317]:int(64)[13], in arg c[2099319]:_class_localson_fn[2099271]) : void[4] "on block"
  {
    val _0_tmp[2099324]:chpl_localeID_t[209294] "temp"
    (2099329 'move' _0_tmp[2099324](2099326 '.v' c[2099319] _0_tmp[2099274]))
    ref _1_this[2099331]:channel(true,dynamic,false)[1060947] "temp"
    (2099336 'move' _1_this[2099331](2099333 '.v' c[2099319] _1_this[2099276]))
    (2099322 call on_fn[1536250] _1_this[2099331])
    (2099339 return _void[55])
  }
  function wrapon_fn[2099572](const in arg dummy_locale_arg[2099574]:chpl_localeID_t[209294], in arg buf[2099576]:c_void_ptr[149], in arg buf_size[2099578]:int(64)[13], in arg c[2099580]:_class_localson_fn[2099532]) : void[4] "on block"
  {
    val _0_tmp[2099585]:chpl_localeID_t[209294] "temp"
    (2099590 'move' _0_tmp[2099585](2099587 '.v' c[2099580] _0_tmp[2099535]))
    ref _1_this[2099592]:channel(false,dynamic,false)[1080682] "temp"
    (2099597 'move' _1_this[2099592](2099594 '.v' c[2099580] _1_this[2099537]))
    (2099583 call on_fn[1540504] _1_this[2099592])
    (2099600 return _void[55])
  }
}