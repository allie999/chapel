AST dump for ExportWrappers after pass flattenClasses.
Module use list: ChapelStandard CPtr SysCTypes 

{
  type chpl_byte_buffer[172143] unknown isOwned[172122](172121 call int(64)[13] 8) unknown data[172130](172129 call c_ptr[205057](?) c_char[20591]) unknown size[172138](172137 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172152](arg cb[172149] :
  chpl_byte_buffer[172143]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  unknown chpl__exportTypeChplByteBuffer[172157] "type variable" chpl_byte_buffer[172143]
  function chpl__exportRetStringOrBytes[172164](ref arg val[172162]:_any[178](?)) : _unknown[51]
  {
    unknown result[172168] chpl_byte_buffer[172143]
    (172171 'end of statement')
    (172187 call =(172174 call . result[172168] c"isOwned")(172185 call _cast(172184 call int(64)[13] 8)(172178 call . val[172162] c"isOwned")))
    (172204 call =(172191 call . result[172168] c"data")(172202 call _cast(172201 call c_ptr[205057](?) c_char[20591])(172195 call . val[172162] c"buff")))
    (172221 call =(172208 call . result[172168] c"size")(172219 call _cast(172218 call uint(64)[115] 64)(172212 call . val[172162] c"numBytes")))
    (172229 call =(172225 call . val[172162] c"isOwned") 0)
    (172233 return result[172168])
  }
  { scopeless type
    chpl_byte_buffer[172143]
  }
  function chpl__exportRet[172244](ref arg val[172241] :
  string[26], arg rt[172247] :
  chpl_byte_buffer[172143]) : _unknown[51]
  {
    (172255 return(172254 call chpl__exportRetStringOrBytes val[172241]))
  }
  { scopeless type
    rt[172247]
  }
  function chpl__exportRet[172267](ref arg val[172264] :
  bytes[24], arg rt[172270] :
  chpl_byte_buffer[172143]) : _unknown[51]
  {
    (172278 return(172277 call chpl__exportRetStringOrBytes val[172264]))
  }
  { scopeless type
    rt[172270]
  }
  function chpl__exportArg[172290](arg cp[172287] :
  bool[10], arg val[172293] :
  chpl_byte_buffer[172143], arg rt[172297] :
  string[26]) : _unknown[51]
  {
    unknown data[172308](172306 call _cast c_string[19](172302 call . val[172293] c"data"))
    (172311 'end of statement')
    unknown size[172323](172322 call(172317 call .(172314 call . val[172293] c"size") c"safeCast") int(64)[13])
    (172326 'end of statement')
    Try!
    {
      {
        if(172335 call _cond_test cp[172287])
        {
          (172333 return(172332 call createStringWithNewBuffer data[172308] size[172323]))
        }
        (172346 return(172345 call createStringWithBorrowedBuffer data[172308] size[172323]))
      }
    }
  }
  { scopeless type
    rt[172297]
  }
  function chpl__exportArg[172360](arg cp[172357] :
  bool[10], arg val[172363] :
  chpl_byte_buffer[172143], arg rt[172367] :
  bytes[24]) : _unknown[51]
  {
    unknown data[172378](172376 call _cast c_string[19](172372 call . val[172363] c"data"))
    (172381 'end of statement')
    unknown size[172393](172392 call(172387 call .(172384 call . val[172363] c"size") c"safeCast") int(64)[13])
    (172396 'end of statement')
    Try!
    {
      {
        if(172405 call _cond_test cp[172357])
        {
          (172403 return(172402 call createBytesWithNewBuffer data[172378] size[172393]))
        }
        (172416 return(172415 call createBytesWithBorrowedBuffer data[172378] size[172393]))
      }
    }
  }
  { scopeless type
    rt[172367]
  }
  (355242 'used modules list'(172108 'use' ChapelStandard[20264])(172112 'use' CPtr[204946])(172115 'use' SysCTypes[20940]))
}