AST dump for ExportWrappers after pass flattenClasses.
Module use list: ChapelStandard CPtr SysCTypes 

{
  type chpl_byte_buffer[172177] unknown isOwned[172156](172155 call int(64)[13] 8) unknown data[172164](172163 call c_ptr[205100](?) c_char[20594]) unknown size[172172](172171 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172186](arg cb[172183] :
  chpl_byte_buffer[172177]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  unknown chpl__exportTypeChplByteBuffer[172191] "type variable" chpl_byte_buffer[172177]
  function chpl__exportRetStringOrBytes[172198](ref arg val[172196]:_any[178](?)) : _unknown[51]
  {
    unknown result[172202] chpl_byte_buffer[172177]
    (172205 'end of statement')
    (172221 call =(172208 call . result[172202] c"isOwned")(172219 call _cast(172218 call int(64)[13] 8)(172212 call . val[172196] c"isOwned")))
    (172238 call =(172225 call . result[172202] c"data")(172236 call _cast(172235 call c_ptr[205100](?) c_char[20594])(172229 call . val[172196] c"buff")))
    (172255 call =(172242 call . result[172202] c"size")(172253 call _cast(172252 call uint(64)[115] 64)(172246 call . val[172196] c"numBytes")))
    (172263 call =(172259 call . val[172196] c"isOwned") 0)
    (172267 return result[172202])
  }
  { scopeless type
    chpl_byte_buffer[172177]
  }
  function chpl__exportRet[172278](ref arg val[172275] :
  string[26], arg rt[172281] :
  chpl_byte_buffer[172177]) : _unknown[51]
  {
    (172289 return(172288 call chpl__exportRetStringOrBytes val[172275]))
  }
  { scopeless type
    rt[172281]
  }
  function chpl__exportRet[172301](ref arg val[172298] :
  bytes[24], arg rt[172304] :
  chpl_byte_buffer[172177]) : _unknown[51]
  {
    (172312 return(172311 call chpl__exportRetStringOrBytes val[172298]))
  }
  { scopeless type
    rt[172304]
  }
  function chpl__exportArg[172324](arg cp[172321] :
  bool[10], arg val[172327] :
  chpl_byte_buffer[172177], arg rt[172331] :
  string[26]) : _unknown[51]
  {
    unknown data[172342](172340 call _cast c_string[19](172336 call . val[172327] c"data"))
    (172345 'end of statement')
    unknown size[172357](172356 call(172351 call .(172348 call . val[172327] c"size") c"safeCast") int(64)[13])
    (172360 'end of statement')
    Try!
    {
      {
        if(172369 call _cond_test cp[172321])
        {
          (172367 return(172366 call createStringWithNewBuffer data[172342] size[172357]))
        }
        (172380 return(172379 call createStringWithBorrowedBuffer data[172342] size[172357]))
      }
    }
  }
  { scopeless type
    rt[172331]
  }
  function chpl__exportArg[172394](arg cp[172391] :
  bool[10], arg val[172397] :
  chpl_byte_buffer[172177], arg rt[172401] :
  bytes[24]) : _unknown[51]
  {
    unknown data[172412](172410 call _cast c_string[19](172406 call . val[172397] c"data"))
    (172415 'end of statement')
    unknown size[172427](172426 call(172421 call .(172418 call . val[172397] c"size") c"safeCast") int(64)[13])
    (172430 'end of statement')
    Try!
    {
      {
        if(172439 call _cond_test cp[172391])
        {
          (172437 return(172436 call createBytesWithNewBuffer data[172412] size[172427]))
        }
        (172450 return(172449 call createBytesWithBorrowedBuffer data[172412] size[172427]))
      }
    }
  }
  { scopeless type
    rt[172401]
  }
  (355228 'used modules list'(172142 'use' ChapelStandard[20267])(172146 'use' CPtr[204989])(172149 'use' SysCTypes[20943]))
}