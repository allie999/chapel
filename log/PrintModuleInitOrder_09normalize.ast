AST dump for PrintModuleInitOrder after pass normalize.
Module use list: ChapelBase 

{
  function chpl__init_PrintModuleInitOrder[415938]() : void[4] "export" "insert line file info" "local args" "module init"
  {
    unknown tmp[539932] "temp"
    unknown call_tmp[594662] "expr temp" "maybe param" "maybe type" "temp"
    (594665 'move' call_tmp[594662](539943 call chpl_config_has_value c"printModuleInitOrder" c"Built-in"))
    unknown call_tmp[594667] "expr temp" "maybe param" "maybe type" "temp"
    (594670 'move' call_tmp[594667](539946 call ! call_tmp[594662]))
    if call_tmp[594667]
    {
      (539937 'noop')
      (539962 'init var' tmp[539932] 0)
    }
    {
      unknown call_tmp[594672] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (594675 'move' call_tmp[594672](539950 'typeof' tmp[539932]))
      unknown call_tmp[594677] "expr temp" "maybe param" "maybe type" "temp"
      (594680 'move' call_tmp[594677](539953 call chpl_config_get_value c"printModuleInitOrder" c"Built-in"))
      (539958 'move' tmp[539932](539956 call _command_line_cast c"printModuleInitOrder" call_tmp[594672] call_tmp[594677]))
    }
    (539934 'move' printModuleInitOrder[20408] tmp[539932])
    (20411 'end of statement')
    unknown call_tmp[594682] "expr temp" "maybe param" "maybe type" "temp"
    (594685 'move' call_tmp[594682](20416 call int(64)[13] 32))
    unknown call_tmp[594687] "maybe param" "maybe type" "temp"
    (594690 'move' call_tmp[594687](20417 call _cast call_tmp[594682] 2))
    (539964 'init var' moduleInitLevel[20419] call_tmp[594687])
    (20422 'end of statement')
    unknown call_tmp[594727] "expr temp" "maybe param" "maybe type" "temp"
    (594730 'move' call_tmp[594727](20539 call _cond_test printModuleInitOrder[20408]))
    if call_tmp[594727]
    {
      (20537 call initPrint)
    }
    (501560 return _void[55])
  }
  const printModuleInitOrder[20408] "config" "const" "insert auto destroy"
  unknown moduleInitLevel[20419] "dead at end of block" "insert auto destroy" "print module init indent level"
  function printModuleInit[20429](arg s1[20426]:c_string[19], arg s2[20432]:c_string[19], arg len[20436]:int(64)[13]) : _unknown[51] "print module init fn" "no return value for void"
  {
    function printf[20445](arg s1[20442]:c_string[19], arg len[20451] :
    (20450 call int(64)[13] 32), arg s2[20455]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (501552 return _void[55])
    }
    unknown call_tmp[594692] "expr temp" "maybe param" "maybe type" "temp"
    (594695 'move' call_tmp[594692](20487 call _cond_test printModuleInitOrder[20408]))
    if call_tmp[594692]
    {
      unknown call_tmp[594697] "expr temp" "maybe param" "maybe type" "temp"
      (594700 'move' call_tmp[594697](20470 call int(64)[13] 32))
      unknown call_tmp[594702] "expr temp" "maybe param" "maybe type" "temp"
      (594705 'move' call_tmp[594702](20471 call _cast call_tmp[594697] len[20436]))
      unknown call_tmp[594707] "expr temp" "maybe param" "maybe type" "temp"
      (594710 'move' call_tmp[594707](20473 call + moduleInitLevel[20419] call_tmp[594702]))
      unknown call_tmp[594712] "expr temp" "maybe param" "maybe type" "temp"
      (594715 'move' call_tmp[594712](20479 call int(64)[13] 32))
      unknown call_tmp[594717] "expr temp" "maybe param" "maybe type" "temp"
      (594720 'move' call_tmp[594717](20480 call _cast call_tmp[594712] 2))
      unknown call_tmp[594722] "expr temp" "maybe param" "maybe type" "temp"
      (594725 'move' call_tmp[594722](20482 call + call_tmp[594707] call_tmp[594717]))
      (20485 call printf s1[20426] call_tmp[594722] s2[20432])
    }
    (501554 return _void[55])
  }
  function initPrint[20496]() : _unknown[51] "no return value for void"
  {
    function printf[20504](arg s[20501]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (501556 return _void[55])
    }
    (20530 call printf "Initializing Modules:\n")
    (501558 return _void[55])
  }
  (355029 'used modules list'(20404 'use' ChapelBase[307]))
}