AST dump for PrintModuleInitOrder after pass normalize.
Module use list: ChapelBase 

{
  function chpl__init_PrintModuleInitOrder[415958]() : void[4] "export" "insert line file info" "local args" "module init"
  {
    unknown tmp[539955] "temp"
    unknown call_tmp[594687] "expr temp" "maybe param" "maybe type" "temp"
    (594690 'move' call_tmp[594687](539966 call chpl_config_has_value c"printModuleInitOrder" c"Built-in"))
    unknown call_tmp[594692] "expr temp" "maybe param" "maybe type" "temp"
    (594695 'move' call_tmp[594692](539969 call ! call_tmp[594687]))
    if call_tmp[594692]
    {
      (539960 'noop')
      (539985 'init var' tmp[539955] 0)
    }
    {
      unknown call_tmp[594697] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (594700 'move' call_tmp[594697](539973 'typeof' tmp[539955]))
      unknown call_tmp[594702] "expr temp" "maybe param" "maybe type" "temp"
      (594705 'move' call_tmp[594702](539976 call chpl_config_get_value c"printModuleInitOrder" c"Built-in"))
      (539981 'move' tmp[539955](539979 call _command_line_cast c"printModuleInitOrder" call_tmp[594697] call_tmp[594702]))
    }
    (539957 'move' printModuleInitOrder[20405] tmp[539955])
    (20408 'end of statement')
    unknown call_tmp[594707] "expr temp" "maybe param" "maybe type" "temp"
    (594710 'move' call_tmp[594707](20413 call int(64)[13] 32))
    unknown call_tmp[594712] "maybe param" "maybe type" "temp"
    (594715 'move' call_tmp[594712](20414 call _cast call_tmp[594707] 2))
    (539987 'init var' moduleInitLevel[20416] call_tmp[594712])
    (20419 'end of statement')
    unknown call_tmp[594752] "expr temp" "maybe param" "maybe type" "temp"
    (594755 'move' call_tmp[594752](20536 call _cond_test printModuleInitOrder[20405]))
    if call_tmp[594752]
    {
      (20534 call initPrint)
    }
    (501583 return _void[55])
  }
  const printModuleInitOrder[20405] "config" "const" "insert auto destroy"
  unknown moduleInitLevel[20416] "dead at end of block" "insert auto destroy" "print module init indent level"
  function printModuleInit[20426](arg s1[20423]:c_string[19], arg s2[20429]:c_string[19], arg len[20433]:int(64)[13]) : _unknown[51] "print module init fn" "no return value for void"
  {
    function printf[20442](arg s1[20439]:c_string[19], arg len[20448] :
    (20447 call int(64)[13] 32), arg s2[20452]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (501575 return _void[55])
    }
    unknown call_tmp[594717] "expr temp" "maybe param" "maybe type" "temp"
    (594720 'move' call_tmp[594717](20484 call _cond_test printModuleInitOrder[20405]))
    if call_tmp[594717]
    {
      unknown call_tmp[594722] "expr temp" "maybe param" "maybe type" "temp"
      (594725 'move' call_tmp[594722](20467 call int(64)[13] 32))
      unknown call_tmp[594727] "expr temp" "maybe param" "maybe type" "temp"
      (594730 'move' call_tmp[594727](20468 call _cast call_tmp[594722] len[20433]))
      unknown call_tmp[594732] "expr temp" "maybe param" "maybe type" "temp"
      (594735 'move' call_tmp[594732](20470 call + moduleInitLevel[20416] call_tmp[594727]))
      unknown call_tmp[594737] "expr temp" "maybe param" "maybe type" "temp"
      (594740 'move' call_tmp[594737](20476 call int(64)[13] 32))
      unknown call_tmp[594742] "expr temp" "maybe param" "maybe type" "temp"
      (594745 'move' call_tmp[594742](20477 call _cast call_tmp[594737] 2))
      unknown call_tmp[594747] "expr temp" "maybe param" "maybe type" "temp"
      (594750 'move' call_tmp[594747](20479 call + call_tmp[594732] call_tmp[594742]))
      (20482 call printf s1[20423] call_tmp[594747] s2[20429])
    }
    (501577 return _void[55])
  }
  function initPrint[20493]() : _unknown[51] "no return value for void"
  {
    function printf[20501](arg s[20498]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (501579 return _void[55])
    }
    (20527 call printf "Initializing Modules:\n")
    (501581 return _void[55])
  }
  (355046 'used modules list'(20401 'use' ChapelBase[307]))
}