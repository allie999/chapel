AST dump for DefaultSparse after pass normalize.
Module use list: ChapelStandard RangeChunk DSIUtil Search Sort 

{
  function chpl__init_DefaultSparse[416040]() : void[4] "insert line file info" "module init"
  {
    (544185 'init var' debugDefaultSparse[161611] 0)
    (161614 'end of statement')
    (521910 return _void[55])
  }
  unknown debugDefaultSparse[161611] "config" "param"
  function DefaultSparseDom[164378](?).linksDistribution[161646](arg _mt[164382]:_MT[238], arg this[164380]:DefaultSparseDom[164378](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521394] "RVV" "param" "temp"
    (521399 'move' ret[521394](521398 'deref' 0))
    (521396 return ret[521394])
  }
  function DefaultSparseDom[164378](?).dsiLinksDistribution[161656](arg _mt[164386]:_MT[238], arg this[164384]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521403] "RVV" "temp"
    (521408 'move' ret[521403](521407 'deref' 0))
    (521405 return ret[521403])
  }
  function DefaultSparseDom[164378](?).init[161668](arg _mt[164390]:_MT[238], arg this[164388]:DefaultSparseDom[164378](?), param arg rank[161666]:_any[178](?), arg idxType[161670]:_any[178](?), arg dist[161674]:unmanaged DefaultDist[415482], arg parentDom[161678]:_domain[125908](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[462191] "temporary of super field" "temp"
    (462193 'move' super_tmp[462191](462190 '.v' this[164388] c"super"))
    (161689 call(161682 call (partial) init _mt[243] super_tmp[462191]) rank[161666] idxType[161670] parentDom[161678])
    (482520 'end of statement')
    unknown tmp[462196] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492492] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[675666] "expr temp" "maybe param" "maybe type" "temp"
      (675669 'move' call_tmp[675666](462198 '.v' this[164388] c"super"))
      (492496 'move' call_type_tmp[492492](462201 'typeof' call_tmp[675666]))
    }
    (462202 'move' tmp[462196] call_type_tmp[492492])
    unknown call_tmp[675671] "maybe param" "maybe type" "temp"
    (675674 'move' call_tmp[675671](462207 'cast' tmp[462196] this[164388]))
    unknown chpl__thisAsParent[462204] "dead at end of block" "insert auto destroy" "temp"
    (544187 'init var' chpl__thisAsParent[462204] call_tmp[675671] tmp[462196])
    (462210 'setcid' chpl__thisAsParent[462204])
    (482521 'end of statement')
    unknown tmp[462212] "temp"
    (462215 'init var' tmp[462212] dist[161674] unmanaged DefaultDist[415482])
    (462217 'init field' this[164388] c"dist" tmp[462212])
    (482522 'end of statement')
    unknown tmp[462223] "temp"
    (462225 'init var' tmp[462223] 0)
    (462227 '.=' this[164388] c"_nnz" tmp[462223])
    (482523 'end of statement')
    unknown tmp[462231] "temp"
    unknown call_tmp[675676] "expr temp" "maybe param" "maybe type" "temp"
    (675679 'move' call_tmp[675676](462248 '.' this[164388] c"nnzDom"))
    unknown call_tmp[675681] "expr temp" "maybe param" "maybe type" "temp"
    (675684 'move' call_tmp[675681](462236 call chpl__ensureDomainExpr call_tmp[675676]))
    unknown call_tmp[675686] "expr temp" "maybe param" "maybe type" "temp"
    (675689 'move' call_tmp[675686](462251 '.v' this[164388] c"rank"))
    unknown call_tmp[675691] "expr temp" "maybe param" "maybe type" "temp"
    (675694 'move' call_tmp[675691](462254 '.v' this[164388] c"idxType"))
    unknown call_tmp[675696] "expr temp" "maybe param" "maybe type" "temp"
    (675699 'move' call_tmp[675696](462239 call chpl__buildIndexType call_tmp[675686] call_tmp[675691]))
    unknown call_tmp[675701] "expr temp" "maybe param" "maybe type" "temp"
    (675704 'move' call_tmp[675701](462234 call chpl__buildArrayRuntimeType call_tmp[675681] call_tmp[675696]))
    (462242 'default init var' tmp[462231] call_tmp[675701])
    (462244 '.=' this[164388] c"_indices" tmp[462231])
    (482524 'end of statement')
    (462257 'setcid' this[164388])
    (521410 return _void[55])
  }
  function DefaultSparseDom[164378](?).getNNZ[161704](arg _mt[164394]:_MT[238], arg this[164392]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521414] "RVV" "temp"
    unknown call_tmp[675708] "expr temp" "maybe param" "maybe type" "temp"
    (675711 'move' call_tmp[675708](387462 call _nnz _mt[243] this[164392]))
    (521420 'move' ret[521414](521419 'coerce' call_tmp[675708] int(64)[13]))
    (521416 return ret[521414])
  }
  { scopeless type
    int(64)[13]
  }
  function DefaultSparseDom[164378](?).dsiBuildArray[161718](arg _mt[164398]:_MT[238], arg this[164396]:DefaultSparseDom[164378](?), arg eltType[161716]:_any[178](?), param arg initElts[161721]:bool[10]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521424] "RVV" "temp"
    unknown call_tmp[675715] "expr temp" "maybe param" "maybe type" "temp"
    (675718 'move' call_tmp[675715](387472 call rank _mt[243] this[164396]))
    unknown call_tmp[675722] "expr temp" "maybe param" "maybe type" "temp"
    (675725 'move' call_tmp[675722](387477 call idxType _mt[243] this[164396]))
    unknown call_tmp[675727] "expr temp" "maybe param" "maybe type" "temp"
    (675730 'move' call_tmp[675727](161738 call _to_unmanaged this[164396]))
    unknown call_tmp[675732] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (675735 'move' call_tmp[675732](747989 'new' DefaultSparseArr[387466](?)(eltType = eltType[161716])(rank = call_tmp[675715])(idxType = call_tmp[675722])(dom = call_tmp[675727])(initElts = initElts[161721])(_chpl_manager = unmanaged[220](?))))
    (521429 'move' ret[521424](521428 'deref' call_tmp[675732]))
    (521426 return ret[521424])
  }
  function DefaultSparseDom[164378](?).dsiIndsIterSafeForRemoving[161750](arg _mt[164402]:_MT[238], arg this[164400]:DefaultSparseDom[164378](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521433] "RVV" "temp"
    {
      unknown _indexOfInterest[161769] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[161770] "expr temp" "temp"
      unknown call_tmp[675739] "expr temp" "maybe param" "maybe type" "temp"
      (675742 'move' call_tmp[675739](387490 call _nnz _mt[243] this[164400]))
      unknown call_tmp[675744] "expr temp" "maybe param" "maybe type" "temp"
      (675747 'move' call_tmp[675744](161786 call - 1))
      unknown call_tmp[675749] "expr temp" "maybe param" "maybe type" "temp"
      (675752 'move' call_tmp[675749](161790 call chpl_direct_range_iter 1 call_tmp[675739] call_tmp[675744]))
      (161779 'move' _iterator[161770](161777 call _getIterator call_tmp[675749]))
      Defer
      {
        {
          (161806 call _freeIterator _iterator[161770])
        }
      }
      { scopeless type
        (161795 'move' _indexOfInterest[161769](161792 call iteratorIndex _iterator[161770]))
      }
      ForLoop[161771]
      {
        unknown i[161799] "index var" "insert auto destroy"
        (482529 'end of statement')
        (161801 'move' i[161799] _indexOfInterest[161769])
        (482530 'end of statement' i[161799])
        {
          unknown yret[521437] "YVV" "temp"
          unknown call_tmp[675756] "expr temp" "maybe param" "maybe type" "temp"
          (675759 'move' call_tmp[675756](161765 call(387484 call (partial) _indices _mt[243] this[164400]) i[161799]))
          (521440 'move' yret[521437](521439 'deref' call_tmp[675756]))
          (521442 yield yret[521437])
          (482532 'end of statement' i[161799])
        }
        label _continueLabel[161774]
        _indexOfInterest[161769]
        _iterator[161770]
      }
      label _breakLabel[161775]
    }
    (521435 return ret[521433])
  }
  function DefaultSparseDom[164378](?).these[161818](arg _mt[164406]:_MT[238], arg this[164404]:DefaultSparseDom[164378](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521446] "RVV" "temp"
    {
      unknown _indexOfInterest[161832] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[161833] "expr temp" "temp"
      unknown call_tmp[675763] "expr temp" "maybe param" "maybe type" "temp"
      (675766 'move' call_tmp[675763](387501 call _nnz _mt[243] this[164404]))
      unknown call_tmp[675768] "expr temp" "maybe param" "maybe type" "temp"
      (675771 'move' call_tmp[675768](161847 call chpl_direct_range_iter 1 call_tmp[675763] 1))
      (161842 'move' _iterator[161833](161840 call _getIterator call_tmp[675768]))
      Defer
      {
        {
          (161863 call _freeIterator _iterator[161833])
        }
      }
      { scopeless type
        (161852 'move' _indexOfInterest[161832](161849 call iteratorIndex _iterator[161833]))
      }
      ForLoop[161834]
      {
        unknown i[161856] "index var" "insert auto destroy"
        (482535 'end of statement')
        (161858 'move' i[161856] _indexOfInterest[161832])
        (482536 'end of statement' i[161856])
        {
          unknown yret[521450] "YVV" "temp"
          unknown call_tmp[675775] "expr temp" "maybe param" "maybe type" "temp"
          (675778 'move' call_tmp[675775](161828 call(387495 call (partial) _indices _mt[243] this[164404]) i[161856]))
          (521453 'move' yret[521450](521452 'deref' call_tmp[675775]))
          (521455 yield yret[521450])
          (482538 'end of statement' i[161856])
        }
        label _continueLabel[161837]
        _indexOfInterest[161832]
        _iterator[161833]
      }
      label _breakLabel[161838]
    }
    (521448 return ret[521446])
  }
  function DefaultSparseDom[164378](?).these[161879](arg _mt[164410]:_MT[238], arg this[164408]:DefaultSparseDom[164378](?), param arg tag[161876]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521459] "RVV" "temp"
    unknown call_tmp[675782] "maybe param" "maybe type" "temp"
    (675785 'move' call_tmp[675782](387508 call _nnz _mt[243] this[164408]))
    const numElems[161889] "dead at end of block" "const" "insert auto destroy"
    (544189 'init var' numElems[161889] call_tmp[675782])
    (161892 'end of statement')
    unknown call_tmp[675787] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (675790 'move' call_tmp[675787](161899 'typeof' numElems[161889]))
    unknown call_tmp[675792] "expr temp" "maybe param" "maybe type" "temp"
    (675795 'move' call_tmp[675792](161897 call _computeNumChunks numElems[161889]))
    unknown call_tmp[675797] "maybe param" "maybe type" "temp"
    (675800 'move' call_tmp[675797](161900 call _cast call_tmp[675787] call_tmp[675792]))
    const numChunks[161902] "dead at end of block" "const" "insert auto destroy"
    (544191 'init var' numChunks[161902] call_tmp[675797])
    (161905 'end of statement' numElems[161889] numElems[161889])
    unknown call_tmp[675802] "expr temp" "maybe param" "maybe type" "temp"
    (675805 'move' call_tmp[675802](161965 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[675802]
    {
      (161962 call writeln "DefaultSparseDom standalone: " numChunks[161902] " chunks, " numElems[161889] " elems")
      (482542 'end of statement' numChunks[161902] numElems[161889])
    }
    unknown call_tmp[675807] "expr temp" "maybe param" "maybe type" "temp"
    (675810 'move' call_tmp[675807](161971 call <= numChunks[161902] 1))
    unknown call_tmp[675812] "expr temp" "maybe param" "maybe type" "temp"
    (675815 'move' call_tmp[675812](162275 call _cond_test call_tmp[675807]))
    if call_tmp[675812]
    {
      {
        unknown _indexOfInterest[161985] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[161986] "expr temp" "temp"
        unknown call_tmp[675817] "expr temp" "maybe param" "maybe type" "temp"
        (675820 'move' call_tmp[675817](162000 call chpl_direct_range_iter 1 numElems[161889] 1))
        (161995 'move' _iterator[161986](161993 call _getIterator call_tmp[675817]))
        Defer
        {
          {
            (162016 call _freeIterator _iterator[161986])
          }
        }
        { scopeless type
          (162005 'move' _indexOfInterest[161985](162002 call iteratorIndex _iterator[161986]))
        }
        ForLoop[161987]
        {
          unknown i[162009] "index var" "insert auto destroy"
          (482546 'end of statement')
          (162011 'move' i[162009] _indexOfInterest[161985])
          (482547 'end of statement' i[162009])
          {
            unknown yret[521463] "YVV" "temp"
            unknown call_tmp[675824] "expr temp" "maybe param" "maybe type" "temp"
            (675827 'move' call_tmp[675824](161981 call(387519 call (partial) _indices _mt[243] this[164408]) i[162009]))
            (521466 'move' yret[521463](521465 'deref' call_tmp[675824]))
            (521468 yield yret[521463])
            (482549 'end of statement' i[162009])
          }
          label _continueLabel[161990]
          _indexOfInterest[161985]
          _iterator[161986]
        }
        label _breakLabel[161991]
      }
    }
    {
      {
        unknown tmpIter[162078] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[675829] "expr temp" "maybe param" "maybe type" "temp"
        (675832 'move' call_tmp[675829](162031 call chpl_build_bounded_range 1 numElems[161889]))
        (162081 'move' tmpIter[162078](162035 call chunks module=[255] RangeChunk[266477] call_tmp[675829] numChunks[161902]))
        unknown isRngDomArr[162255] "maybe param" "temp"
        unknown tmp[428135] "maybe param" "temp"
        (428146 'move' tmp[428135](162257 call isBoundedRange tmpIter[162078]))
        unknown call_tmp[675834] "expr temp" "maybe param" "maybe type" "temp"
        (675837 'move' call_tmp[675834](428148 call _cond_invalid tmp[428135]))
        if call_tmp[675834]
        {
          (428151 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570141] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570142] "maybe param" "temp"
        unknown call_tmp[675839] "expr temp" "maybe param" "maybe type" "temp"
        (675842 'move' call_tmp[675839](428136 call isTrue tmp[428135]))
        (570147 'move' tmp[570142](570145 call _cond_test call_tmp[675839]))
        if tmp[570142]
        {
          (570152 'move' tmp[570141](570149 '_paramFoldLogical' tmp[570142] 1))
        }
        {
          unknown tmp[428156] "maybe param" "temp"
          (428167 'move' tmp[428156](162260 call isDomain tmpIter[162078]))
          unknown call_tmp[675844] "expr temp" "maybe param" "maybe type" "temp"
          (675847 'move' call_tmp[675844](428169 call _cond_invalid tmp[428156]))
          if call_tmp[675844]
          {
            (428172 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570114] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570115] "maybe param" "temp"
          unknown call_tmp[675849] "expr temp" "maybe param" "maybe type" "temp"
          (675852 'move' call_tmp[675849](428157 call isTrue tmp[428156]))
          (570120 'move' tmp[570115](570118 call _cond_test call_tmp[675849]))
          if tmp[570115]
          {
            (570125 'move' tmp[570114](570122 '_paramFoldLogical' tmp[570115] 1))
          }
          {
            unknown tmp[570127] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[675854] "expr temp" "maybe param" "maybe type" "temp"
            (675857 'move' call_tmp[675854](162263 call isArray tmpIter[162078]))
            (570129 'move' tmp[570127](428161 call isTrue call_tmp[675854]))
            (570134 'move' tmp[570114](570131 '_paramFoldLogical' tmp[570115] tmp[570127]))
          }
          unknown tmp[570154] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570156 'move' tmp[570154](428140 call isTrue tmp[570114]))
          (570161 'move' tmp[570141](570158 '_paramFoldLogical' tmp[570142] tmp[570154]))
        }
        (162270 'move' isRngDomArr[162255] tmp[570141])
        if isRngDomArr[162255]
        {
          const _coforallCount[162122] "const" "end count" "temp"
          (162191 'move' _coforallCount[162122](162188 call _endCountAlloc 1))
          unknown numTasks[162123] "temp"
          (162175 'move' numTasks[162123](162171 call size _mt[243] tmpIter[162078]))
          (162166 call _upEndCount _coforallCount[162122] 1 numTasks[162123])
          (482552 'end of statement')
          (162163 call chpl_resetTaskSpawn numTasks[162123])
          (482553 'end of statement')
          unknown _indexOfInterest[162130] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[162131] "expr temp" "temp"
          (162140 'move' _iterator[162131](162138 call _getIterator tmpIter[162078]))
          Defer
          {
            {
              (162156 call _freeIterator _iterator[162131])
            }
          }
          { scopeless type
            (162145 'move' _indexOfInterest[162130](162142 call iteratorIndex _iterator[162131]))
          }
          ForLoop[162132]
          {
            unknown chunk[162149] "coforall index var" "index var" "insert auto destroy"
            (482555 'end of statement')
            (162151 'move' chunk[162149] _indexOfInterest[162130])
            (482556 'end of statement' chunk[162149])
            {
              {
                unknown _indexOfInterest[162084] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[162086] "expr temp" "temp"
                (162088 'move' _iterator[162086](162091 call _getIterator chunk[162149]))
                Defer
                {
                  {
                    (162095 call _freeIterator _iterator[162086])
                  }
                }
                { scopeless type
                  (162099 'move' _indexOfInterest[162084](162102 call iteratorIndex _iterator[162086]))
                }
                ForLoop[162104]
                {
                  unknown i[162107] "index var" "insert auto destroy"
                  (482559 'end of statement')
                  (162109 'move' i[162107] _indexOfInterest[162084])
                  (482560 'end of statement' i[162107])
                  unknown yret[521470] "YVV" "temp"
                  unknown call_tmp[675863] "expr temp" "maybe param" "maybe type" "temp"
                  (675866 'move' call_tmp[675863](162115 call(387536 call (partial) _indices _mt[243] this[164408]) i[162107]))
                  (521473 'move' yret[521470](521472 'deref' call_tmp[675863]))
                  (521475 yield yret[521470])
                  (482562 'end of statement' i[162107])
                  label _continueLabel[162117]
                  _indexOfInterest[162084]
                  _iterator[162086]
                }
                label _breakLabel[162119]
              }
              (162125 call _downEndCount _coforallCount[162122] nil[44])
              (162124 'coforall loop')
            }
            label _continueLabel[162135]
            _indexOfInterest[162130]
            _iterator[162131]
          }
          label _breakLabel[162136]
          Defer
          {
            {
              (162178 call _endCountFree _coforallCount[162122])
            }
          }
          (162183 call _waitEndCount _coforallCount[162122] 1 numTasks[162123])
        }
        {
          const _coforallCount[162195] "const" "end count" "temp"
          (162252 'move' _coforallCount[162195](162249 call _endCountAlloc 1))
          unknown _indexOfInterest[162203] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[162204] "expr temp" "temp"
          (162213 'move' _iterator[162204](162211 call _getIterator tmpIter[162078]))
          Defer
          {
            {
              (162229 call _freeIterator _iterator[162204])
            }
          }
          { scopeless type
            (162218 'move' _indexOfInterest[162203](162215 call iteratorIndex _iterator[162204]))
          }
          ForLoop[162205]
          {
            unknown chunk[162222] "coforall index var" "index var" "insert auto destroy"
            (482568 'end of statement')
            (162224 'move' chunk[162222] _indexOfInterest[162203])
            (482569 'end of statement' chunk[162222])
            (162236 call _upEndCount _coforallCount[162195] 1)
            (482571 'end of statement')
            {
              {
                unknown _indexOfInterest[162044] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[162045] "expr temp" "temp"
                (162054 'move' _iterator[162045](162052 call _getIterator chunk[162222]))
                Defer
                {
                  {
                    (162070 call _freeIterator _iterator[162045])
                  }
                }
                { scopeless type
                  (162059 'move' _indexOfInterest[162044](162056 call iteratorIndex _iterator[162045]))
                }
                ForLoop[162046]
                {
                  unknown i[162063] "index var" "insert auto destroy"
                  (482573 'end of statement')
                  (162065 'move' i[162063] _indexOfInterest[162044])
                  (482574 'end of statement' i[162063])
                  unknown yret[521477] "YVV" "temp"
                  unknown call_tmp[675870] "expr temp" "maybe param" "maybe type" "temp"
                  (675873 'move' call_tmp[675870](162041 call(387529 call (partial) _indices _mt[243] this[164408]) i[162063]))
                  (521480 'move' yret[521477](521479 'deref' call_tmp[675870]))
                  (521482 yield yret[521477])
                  (482576 'end of statement' i[162063])
                  label _continueLabel[162049]
                  _indexOfInterest[162044]
                  _iterator[162045]
                }
                label _breakLabel[162050]
              }
              (162198 call _downEndCount _coforallCount[162195] nil[44])
              (162197 'coforall loop')
            }
            label _continueLabel[162208]
            _indexOfInterest[162203]
            _iterator[162204]
          }
          label _breakLabel[162209]
          Defer
          {
            {
              (162240 call _endCountFree _coforallCount[162195])
            }
          }
          (162245 call _waitEndCount _coforallCount[162195] 1)
        }
        (361202 'referenced modules list' RangeChunk[266477])
      }
    }
    (521461 return ret[521459])
  }
  where {
    (161886 call == tag[161876] standalone[451])
  }
  function DefaultSparseDom[164378](?).these[162288](arg _mt[164414]:_MT[238], arg this[164412]:DefaultSparseDom[164378](?), param arg tag[162285]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521486] "RVV" "temp"
    unknown call_tmp[675877] "maybe param" "maybe type" "temp"
    (675880 'move' call_tmp[675877](387544 call _nnz _mt[243] this[164412]))
    const numElems[162298] "dead at end of block" "const" "insert auto destroy"
    (544193 'init var' numElems[162298] call_tmp[675877])
    (162301 'end of statement')
    unknown call_tmp[675882] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (675885 'move' call_tmp[675882](162308 'typeof' numElems[162298]))
    unknown call_tmp[675887] "expr temp" "maybe param" "maybe type" "temp"
    (675890 'move' call_tmp[675887](162306 call _computeNumChunks numElems[162298]))
    unknown call_tmp[675892] "maybe param" "maybe type" "temp"
    (675895 'move' call_tmp[675892](162309 call _cast call_tmp[675882] call_tmp[675887]))
    const numChunks[162311] "dead at end of block" "const" "insert auto destroy"
    (544195 'init var' numChunks[162311] call_tmp[675892])
    (162314 'end of statement' numElems[162298] numElems[162298])
    unknown call_tmp[675897] "expr temp" "maybe param" "maybe type" "temp"
    (675900 'move' call_tmp[675897](162341 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[675897]
    {
      (162339 call writeln "DefaultSparseDom leader: " numChunks[162311] " chunks, " numElems[162298] " elems")
      (482583 'end of statement' numChunks[162311] numElems[162298])
    }
    unknown call_tmp[675902] "expr temp" "maybe param" "maybe type" "temp"
    (675905 'move' call_tmp[675902](162348 call <= numChunks[162311] 1))
    unknown call_tmp[675907] "expr temp" "maybe param" "maybe type" "temp"
    (675910 'move' call_tmp[675907](162555 call _cond_test call_tmp[675902]))
    if call_tmp[675907]
    {
      unknown yret[521490] "YVV" "temp"
      unknown call_tmp[675912] "expr temp" "maybe param" "maybe type" "temp"
      (675915 'move' call_tmp[675912](162354 call _build_tuple this[164412] 1 numElems[162298]))
      (521493 'move' yret[521490](521492 'deref' call_tmp[675912]))
      (521495 yield yret[521490])
      (482586 'end of statement' numElems[162298])
    }
    {
      unknown tmpIter[162384] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[675917] "expr temp" "maybe param" "maybe type" "temp"
      (675920 'move' call_tmp[675917](162365 call chpl_build_bounded_range 1 numElems[162298]))
      (162387 'move' tmpIter[162384](162369 call chunks module=[255] RangeChunk[266477] call_tmp[675917] numChunks[162311]))
      unknown isRngDomArr[162536] "maybe param" "temp"
      unknown tmp[428177] "maybe param" "temp"
      (428188 'move' tmp[428177](162538 call isBoundedRange tmpIter[162384]))
      unknown call_tmp[675922] "expr temp" "maybe param" "maybe type" "temp"
      (675925 'move' call_tmp[675922](428190 call _cond_invalid tmp[428177]))
      if call_tmp[675922]
      {
        (428193 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570195] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570196] "maybe param" "temp"
      unknown call_tmp[675927] "expr temp" "maybe param" "maybe type" "temp"
      (675930 'move' call_tmp[675927](428178 call isTrue tmp[428177]))
      (570201 'move' tmp[570196](570199 call _cond_test call_tmp[675927]))
      if tmp[570196]
      {
        (570206 'move' tmp[570195](570203 '_paramFoldLogical' tmp[570196] 1))
      }
      {
        unknown tmp[428198] "maybe param" "temp"
        (428209 'move' tmp[428198](162541 call isDomain tmpIter[162384]))
        unknown call_tmp[675932] "expr temp" "maybe param" "maybe type" "temp"
        (675935 'move' call_tmp[675932](428211 call _cond_invalid tmp[428198]))
        if call_tmp[675932]
        {
          (428214 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570168] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570169] "maybe param" "temp"
        unknown call_tmp[675937] "expr temp" "maybe param" "maybe type" "temp"
        (675940 'move' call_tmp[675937](428199 call isTrue tmp[428198]))
        (570174 'move' tmp[570169](570172 call _cond_test call_tmp[675937]))
        if tmp[570169]
        {
          (570179 'move' tmp[570168](570176 '_paramFoldLogical' tmp[570169] 1))
        }
        {
          unknown tmp[570181] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[675942] "expr temp" "maybe param" "maybe type" "temp"
          (675945 'move' call_tmp[675942](162544 call isArray tmpIter[162384]))
          (570183 'move' tmp[570181](428203 call isTrue call_tmp[675942]))
          (570188 'move' tmp[570168](570185 '_paramFoldLogical' tmp[570169] tmp[570181]))
        }
        unknown tmp[570208] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570210 'move' tmp[570208](428182 call isTrue tmp[570168]))
        (570215 'move' tmp[570195](570212 '_paramFoldLogical' tmp[570196] tmp[570208]))
      }
      (162551 'move' isRngDomArr[162536] tmp[570195])
      if isRngDomArr[162536]
      {
        const _coforallCount[162403] "const" "end count" "temp"
        (162472 'move' _coforallCount[162403](162469 call _endCountAlloc 1))
        unknown numTasks[162404] "temp"
        (162456 'move' numTasks[162404](162452 call size _mt[243] tmpIter[162384]))
        (162447 call _upEndCount _coforallCount[162403] 1 numTasks[162404])
        (482589 'end of statement')
        (162444 call chpl_resetTaskSpawn numTasks[162404])
        (482590 'end of statement')
        unknown _indexOfInterest[162411] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[162412] "expr temp" "temp"
        (162421 'move' _iterator[162412](162419 call _getIterator tmpIter[162384]))
        Defer
        {
          {
            (162437 call _freeIterator _iterator[162412])
          }
        }
        { scopeless type
          (162426 'move' _indexOfInterest[162411](162423 call iteratorIndex _iterator[162412]))
        }
        ForLoop[162413]
        {
          unknown chunk[162430] "coforall index var" "index var" "insert auto destroy"
          (482592 'end of statement')
          (162432 'move' chunk[162430] _indexOfInterest[162411])
          (482593 'end of statement' chunk[162430])
          {
            unknown yret[521497] "YVV" "temp"
            unknown call_tmp[675951] "expr temp" "maybe param" "maybe type" "temp"
            (675954 'move' call_tmp[675951](162395 call first _mt[243] chunk[162430]))
            unknown call_tmp[675958] "expr temp" "maybe param" "maybe type" "temp"
            (675961 'move' call_tmp[675958](162399 call last _mt[243] chunk[162430]))
            unknown call_tmp[675963] "expr temp" "maybe param" "maybe type" "temp"
            (675966 'move' call_tmp[675963](162392 call _build_tuple this[164412] call_tmp[675951] call_tmp[675958]))
            (521500 'move' yret[521497](521499 'deref' call_tmp[675963]))
            (521502 yield yret[521497])
            (482595 'end of statement' chunk[162430] chunk[162430])
            (162406 call _downEndCount _coforallCount[162403] nil[44])
            (162405 'coforall loop')
          }
          label _continueLabel[162416]
          _indexOfInterest[162411]
          _iterator[162412]
        }
        label _breakLabel[162417]
        Defer
        {
          {
            (162459 call _endCountFree _coforallCount[162403])
          }
        }
        (162464 call _waitEndCount _coforallCount[162403] 1 numTasks[162404])
      }
      {
        const _coforallCount[162476] "const" "end count" "temp"
        (162533 'move' _coforallCount[162476](162530 call _endCountAlloc 1))
        unknown _indexOfInterest[162484] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[162485] "expr temp" "temp"
        (162494 'move' _iterator[162485](162492 call _getIterator tmpIter[162384]))
        Defer
        {
          {
            (162510 call _freeIterator _iterator[162485])
          }
        }
        { scopeless type
          (162499 'move' _indexOfInterest[162484](162496 call iteratorIndex _iterator[162485]))
        }
        ForLoop[162486]
        {
          unknown chunk[162503] "coforall index var" "index var" "insert auto destroy"
          (482602 'end of statement')
          (162505 'move' chunk[162503] _indexOfInterest[162484])
          (482603 'end of statement' chunk[162503])
          (162517 call _upEndCount _coforallCount[162476] 1)
          (482605 'end of statement')
          {
            unknown yret[521504] "YVV" "temp"
            unknown call_tmp[675970] "expr temp" "maybe param" "maybe type" "temp"
            (675973 'move' call_tmp[675970](162372 call first _mt[243] chunk[162503]))
            unknown call_tmp[675977] "expr temp" "maybe param" "maybe type" "temp"
            (675980 'move' call_tmp[675977](162377 call last _mt[243] chunk[162503]))
            unknown call_tmp[675982] "expr temp" "maybe param" "maybe type" "temp"
            (675985 'move' call_tmp[675982](162380 call _build_tuple this[164412] call_tmp[675970] call_tmp[675977]))
            (521507 'move' yret[521504](521506 'deref' call_tmp[675982]))
            (521509 yield yret[521504])
            (482606 'end of statement' chunk[162503] chunk[162503])
            (162479 call _downEndCount _coforallCount[162476] nil[44])
            (162478 'coforall loop')
          }
          label _continueLabel[162489]
          _indexOfInterest[162484]
          _iterator[162485]
        }
        label _breakLabel[162490]
        Defer
        {
          {
            (162521 call _endCountFree _coforallCount[162476])
          }
        }
        (162526 call _waitEndCount _coforallCount[162476] 1)
      }
      (361209 'referenced modules list' RangeChunk[266477])
    }
    (521488 return ret[521486])
  }
  where {
    (162295 call == tag[162285] leader[447])
  }
  function DefaultSparseDom[164378](?).these[162569](arg _mt[164418]:_MT[238], arg this[164416]:DefaultSparseDom[164378](?), param arg tag[162566]:iterKind[453], arg followThis[162577]:_tuple[56202](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521513] "RVV" "temp"
    unknown tmp[162595] "dead at end of block" "insert auto destroy" "temp"
    (544197 'init var' tmp[162595] followThis[162577])
    (162605 call _check_tuple_var_decl tmp[162595] 3)
    (482612 'end of statement')
    unknown call_tmp[675987] "maybe param" "maybe type" "temp"
    (675990 'move' call_tmp[675987](162596 call tmp[162595] 0))
    unknown followThisDom[162587] "dead at end of block" "insert auto destroy"
    (544199 'init var' followThisDom[162587] call_tmp[675987])
    unknown call_tmp[675992] "maybe param" "maybe type" "temp"
    (675995 'move' call_tmp[675992](162599 call tmp[162595] 1))
    unknown startIx[162589] "dead at end of block" "insert auto destroy"
    (544201 'init var' startIx[162589] call_tmp[675992])
    unknown call_tmp[675997] "maybe param" "maybe type" "temp"
    (676000 'move' call_tmp[675997](162602 call tmp[162595] 2))
    unknown endIx[162591] "dead at end of block" "insert auto destroy"
    (544203 'init var' endIx[162591] call_tmp[675997])
    (162610 'end of statement')
    unknown call_tmp[676002] "expr temp" "maybe param" "maybe type" "temp"
    (676005 'move' call_tmp[676002](162614 call != followThisDom[162587] this[164416]))
    unknown call_tmp[676007] "expr temp" "maybe param" "maybe type" "temp"
    (676010 'move' call_tmp[676007](162639 call _cond_test call_tmp[676002]))
    if call_tmp[676007]
    {
      (162637 call halt "Sparse domains can't be zippered with anything other than themselves and their arrays")
    }
    unknown call_tmp[676012] "expr temp" "maybe param" "maybe type" "temp"
    (676015 'move' call_tmp[676012](162669 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[676012]
    {
      (162667 call writeln "DefaultSparseDom follower: " startIx[162589] ".." endIx[162591])
      (482614 'end of statement' startIx[162589] endIx[162591])
    }
    {
      unknown _indexOfInterest[162685] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[162686] "expr temp" "temp"
      unknown call_tmp[676017] "expr temp" "maybe param" "maybe type" "temp"
      (676020 'move' call_tmp[676017](162700 call chpl_direct_range_iter startIx[162589] endIx[162591] 1))
      (162695 'move' _iterator[162686](162693 call _getIterator call_tmp[676017]))
      Defer
      {
        {
          (162716 call _freeIterator _iterator[162686])
        }
      }
      { scopeless type
        (162705 'move' _indexOfInterest[162685](162702 call iteratorIndex _iterator[162686]))
      }
      ForLoop[162687]
      {
        unknown i[162709] "index var" "insert auto destroy"
        (482618 'end of statement')
        (162711 'move' i[162709] _indexOfInterest[162685])
        (482619 'end of statement' i[162709])
        unknown yret[521517] "YVV" "temp"
        unknown call_tmp[676024] "expr temp" "maybe param" "maybe type" "temp"
        (676027 'move' call_tmp[676024](162682 call(387569 call (partial) _indices _mt[243] this[164416]) i[162709]))
        (521520 'move' yret[521517](521519 'deref' call_tmp[676024]))
        (521522 yield yret[521517])
        (482621 'end of statement' i[162709])
        label _continueLabel[162690]
        _indexOfInterest[162685]
        _iterator[162686]
      }
      label _breakLabel[162691]
    }
    (521515 return ret[521513])
  }
  where {
    unknown call_tmp[676029] "expr temp" "maybe param" "maybe type" "temp"
    (676032 'move' call_tmp[676029](162585 call == tag[162566] follower[449]))
    unknown call_tmp[676034] "expr temp" "maybe param" "maybe type" "temp"
    (676037 'move' call_tmp[676034](462263 'query' followThis[162577] c"size"))
    unknown call_tmp[676039] "expr temp" "maybe param" "maybe type" "temp"
    (676042 'move' call_tmp[676039](462264 call == 3 call_tmp[676034]))
    (462266 call & call_tmp[676029] call_tmp[676039])
  }
  function DefaultSparseDom[164378](?).these[162732](arg _mt[164422]:_MT[238], arg this[164420]:DefaultSparseDom[164378](?), param arg tag[162729]:iterKind[453], arg followThis[162734]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521526] "RVV" "temp"
    (162762 call compilerError "Sparse iterators can't yet be zippered with others")
    (482623 'end of statement')
    unknown dummy[162769] "dead at end of block" "insert auto destroy"
    unknown call_tmp[676046] "expr temp" "maybe param" "maybe type" "temp"
    (676049 'move' call_tmp[676046](387579 call rank _mt[243] this[164420]))
    unknown call_tmp[676053] "expr temp" "maybe param" "maybe type" "temp"
    (676056 'move' call_tmp[676053](387584 call idxType _mt[243] this[164420]))
    unknown call_tmp[676058] "expr temp" "maybe param" "maybe type" "temp"
    (676061 'move' call_tmp[676058](162767 call * call_tmp[676046] call_tmp[676053]))
    (544205 'default init var' dummy[162769] call_tmp[676058])
    (162772 'end of statement')
    unknown yret[521530] "YVV" "temp"
    (521533 'move' yret[521530](521532 'deref' dummy[162769]))
    (521535 yield yret[521530])
    (482624 'end of statement' dummy[162769])
    (521528 return ret[521526])
  }
  where {
    (162741 call == tag[162729] follower[449])
  }
  function DefaultSparseDom[164378](?).find[162783](arg _mt[164426]:_MT[238], arg this[164424]:DefaultSparseDom[164378](?), arg ind[162781]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521539] "RVV" "temp"
    unknown tmp[428219] "maybe param" "temp"
    unknown tmp[428240] "maybe param" "temp"
    unknown call_tmp[676065] "expr temp" "maybe param" "maybe type" "temp"
    (676068 'move' call_tmp[676065](387590 call rank _mt[243] this[164424]))
    (428251 'move' tmp[428240](162791 call == call_tmp[676065] 1))
    unknown call_tmp[676070] "expr temp" "maybe param" "maybe type" "temp"
    (676073 'move' call_tmp[676070](428253 call _cond_invalid tmp[428240]))
    if call_tmp[676070]
    {
      (428256 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570222] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570223] "maybe param" "temp"
    unknown call_tmp[676075] "expr temp" "maybe param" "maybe type" "temp"
    (676078 'move' call_tmp[676075](428241 call isTrue tmp[428240]))
    (570228 'move' tmp[570223](570226 call _cond_test call_tmp[676075]))
    if tmp[570223]
    {
      unknown tmp[570230] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[676080] "expr temp" "maybe param" "maybe type" "temp"
      (676083 'move' call_tmp[676080](162796 call isTuple ind[162781]))
      (570232 'move' tmp[570230](428244 call isTrue call_tmp[676080]))
      (570237 'move' tmp[570222](570234 '_paramFoldLogical' tmp[570223] tmp[570230]))
    }
    {
      (570242 'move' tmp[570222](570239 '_paramFoldLogical' tmp[570223] 0))
    }
    (428230 'move' tmp[428219] tmp[570222])
    unknown call_tmp[676085] "expr temp" "maybe param" "maybe type" "temp"
    (676088 'move' call_tmp[676085](428232 call _cond_invalid tmp[428219]))
    if call_tmp[676085]
    {
      (428235 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570249] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570250] "maybe param" "temp"
    unknown call_tmp[676090] "expr temp" "maybe param" "maybe type" "temp"
    (676093 'move' call_tmp[676090](428220 call isTrue tmp[428219]))
    (570255 'move' tmp[570250](570253 call _cond_test call_tmp[676090]))
    if tmp[570250]
    {
      unknown tmp[570257] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[676097] "expr temp" "maybe param" "maybe type" "temp"
      (676100 'move' call_tmp[676097](162800 call size _mt[243] ind[162781]))
      unknown call_tmp[676102] "expr temp" "maybe param" "maybe type" "temp"
      (676105 'move' call_tmp[676102](162804 call == call_tmp[676097] 1))
      (570259 'move' tmp[570257](428223 call isTrue call_tmp[676102]))
      (570264 'move' tmp[570249](570261 '_paramFoldLogical' tmp[570250] tmp[570257]))
    }
    {
      (570269 'move' tmp[570249](570266 '_paramFoldLogical' tmp[570250] 0))
    }
    unknown call_tmp[676107] "expr temp" "maybe param" "maybe type" "temp"
    (676110 'move' call_tmp[676107](162833 call _cond_test tmp[570249]))
    if call_tmp[676107]
    {
      unknown call_tmp[676114] "expr temp" "maybe param" "maybe type" "temp"
      (676117 'move' call_tmp[676114](387596 call _indices _mt[243] this[164424]))
      unknown call_tmp[676119] "expr temp" "maybe param" "maybe type" "temp"
      (676122 'move' call_tmp[676119](162814 call ind[162781] 0))
      unknown call_tmp[676126] "expr temp" "maybe param" "maybe type" "temp"
      (676129 'move' call_tmp[676126](387602 call _nnz _mt[243] this[164424]))
      unknown call_tmp[676131] "expr temp" "maybe param" "maybe type" "temp"
      (676134 'move' call_tmp[676131](162819 call binarySearch call_tmp[676114] call_tmp[676119](lo = 1)(hi = call_tmp[676126])))
      (521544 'move' ret[521539](521543 'deref' call_tmp[676131]))
      gotoReturn _end_find[521537] _end_find[521537]
    }
    {
      unknown call_tmp[676138] "expr temp" "maybe param" "maybe type" "temp"
      (676141 'move' call_tmp[676138](387607 call _indices _mt[243] this[164424]))
      unknown call_tmp[676145] "expr temp" "maybe param" "maybe type" "temp"
      (676148 'move' call_tmp[676145](387613 call _nnz _mt[243] this[164424]))
      unknown call_tmp[676150] "expr temp" "maybe param" "maybe type" "temp"
      (676153 'move' call_tmp[676150](162830 call binarySearch call_tmp[676138] ind[162781](lo = 1)(hi = call_tmp[676145])))
      (521549 'move' ret[521539](521548 'deref' call_tmp[676150]))
      gotoReturn _end_find[521537] _end_find[521537]
    }
    label _end_find[521537]
    (521541 return ret[521539])
    (355205 'used modules list'(162786 'use' Search[291260]))
  }
  function DefaultSparseDom[164378](?).dsiMember[162845](arg _mt[164430]:_MT[238], arg this[164428]:DefaultSparseDom[164378](?), arg ind[162843]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521555] "RVV" "temp"
    unknown call_tmp[676157] "maybe param" "maybe type" "temp"
    (676160 'move' call_tmp[676157](162855 call(387617 call (partial) find _mt[243] this[164428]) ind[162843]))
    const tmp[162856] "dead at end of block" "const" "insert auto destroy" "temp"
    (544207 'init var' tmp[162856] call_tmp[676157])
    (162863 call _check_tuple_var_decl tmp[162856] 2)
    (482630 'end of statement')
    unknown call_tmp[676162] "maybe param" "maybe type" "temp"
    (676165 'move' call_tmp[676162](162857 call tmp[162856] 0))
    const found[162847] "dead at end of block" "const" "insert auto destroy"
    (544209 'init var' found[162847] call_tmp[676162])
    unknown call_tmp[676167] "maybe param" "maybe type" "temp"
    (676170 'move' call_tmp[676167](162860 call tmp[162856] 1))
    const loc[162849] "dead at end of block" "const" "insert auto destroy"
    (544211 'init var' loc[162849] call_tmp[676167])
    (162868 'end of statement')
    (521560 'move' ret[521555](521559 'deref' found[162847]))
    gotoReturn _end_dsiMember[521553] _end_dsiMember[521553]
    (482631 'end of statement' found[162847])
    label _end_dsiMember[521553]
    (521557 return ret[521555])
  }
  function DefaultSparseDom[164378](?).dsiFirst[162877](arg _mt[164434]:_MT[238], arg this[164432]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[521566] "RVV" "temp"
    unknown call_tmp[676176] "expr temp" "maybe param" "maybe type" "temp"
    (676179 'move' call_tmp[676176](361223 call _indices _mt[243] this[164432]))
    unknown call_tmp[676183] "expr temp" "maybe param" "maybe type" "temp"
    (676186 'move' call_tmp[676183](162881 call _dom _mt[243] call_tmp[676176]))
    unknown call_tmp[676190] "expr temp" "maybe param" "maybe type" "temp"
    (676193 'move' call_tmp[676190](162884 call first _mt[243] call_tmp[676183]))
    unknown call_tmp[676195] "expr temp" "maybe param" "maybe type" "temp"
    (676198 'move' call_tmp[676195](162888 call(387624 call (partial) _indices _mt[243] this[164432]) call_tmp[676190]))
    (521571 'move' ret[521566](521570 'deref' call_tmp[676195]))
    (521568 return ret[521566])
  }
  function DefaultSparseDom[164378](?).dsiLast[162896](arg _mt[164438]:_MT[238], arg this[164436]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[521575] "RVV" "temp"
    unknown call_tmp[676204] "expr temp" "maybe param" "maybe type" "temp"
    (676207 'move' call_tmp[676204](387634 call _nnz _mt[243] this[164436]))
    unknown call_tmp[676209] "expr temp" "maybe param" "maybe type" "temp"
    (676212 'move' call_tmp[676209](162901 call(387629 call (partial) _indices _mt[243] this[164436]) call_tmp[676204]))
    (521580 'move' ret[521575](521579 'deref' call_tmp[676209]))
    (521577 return ret[521575])
  }
  function DefaultSparseDom[164378](?).add_help[162911](arg _mt[164442]:_MT[238], arg this[164440]:DefaultSparseDom[164378](?), arg ind[162909]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521584] "RVV" "temp"
    unknown call_tmp[676216] "maybe param" "maybe type" "temp"
    (676219 'move' call_tmp[676216](162921 call(387638 call (partial) find _mt[243] this[164440]) ind[162909]))
    const tmp[162922] "dead at end of block" "const" "insert auto destroy" "temp"
    (544213 'init var' tmp[162922] call_tmp[676216])
    (162929 call _check_tuple_var_decl tmp[162922] 2)
    (482635 'end of statement')
    unknown call_tmp[676221] "maybe param" "maybe type" "temp"
    (676224 'move' call_tmp[676221](162923 call tmp[162922] 0))
    const found[162913] "dead at end of block" "const" "insert auto destroy"
    (544215 'init var' found[162913] call_tmp[676221])
    unknown call_tmp[676226] "maybe param" "maybe type" "temp"
    (676229 'move' call_tmp[676226](162926 call tmp[162922] 1))
    const insertPt[162915] "dead at end of block" "const" "insert auto destroy"
    (544217 'init var' insertPt[162915] call_tmp[676226])
    (162934 'end of statement')
    unknown call_tmp[676231] "expr temp" "maybe param" "maybe type" "temp"
    (676234 'move' call_tmp[676231](162940 call _cond_test found[162913]))
    if call_tmp[676231]
    {
      (521589 'move' ret[521584](521588 'deref' 0))
      gotoReturn _end_add_help[521582] _end_add_help[521582]
    }
    unknown call_tmp[676236] "expr temp" "maybe param" "maybe type" "temp"
    (676239 'move' call_tmp[676236](162954 call _cond_test 1))
    if call_tmp[676236]
    {
      (162952 call(162947 call (partial) boundsCheck _mt[243] this[164440]) ind[162909])
    }
    unknown call_tmp[676245] "expr temp" "maybe param" "maybe type" "temp"
    (676248 'move' call_tmp[676245](387647 call _nnz _mt[243] this[164440]))
    (162961 call += call_tmp[676245] 1)
    (482638 'end of statement')
    unknown call_tmp[676252] "expr temp" "maybe param" "maybe type" "temp"
    (676255 'move' call_tmp[676252](361229 call nnzDom _mt[243] this[164440]))
    unknown call_tmp[676259] "maybe param" "maybe type" "temp"
    (676262 'move' call_tmp[676259](162965 call size _mt[243] call_tmp[676252]))
    const oldNNZDomSize[162968] "dead at end of block" "const" "insert auto destroy"
    (544219 'init var' oldNNZDomSize[162968] call_tmp[676259])
    (162971 'end of statement')
    unknown call_tmp[676268] "expr temp" "maybe param" "maybe type" "temp"
    (676271 'move' call_tmp[676268](387658 call _nnz _mt[243] this[164440]))
    (162975 call(387653 call (partial) _grow _mt[243] this[164440]) call_tmp[676268])
    (482639 'end of statement')
    {
      unknown _indexOfInterest[163005] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163006] "expr temp" "temp"
      unknown call_tmp[676275] "expr temp" "maybe param" "maybe type" "temp"
      (676278 'move' call_tmp[676275](387676 call _nnz _mt[243] this[164440]))
      unknown call_tmp[676280] "expr temp" "maybe param" "maybe type" "temp"
      (676283 'move' call_tmp[676280](163029 call - call_tmp[676275] 1))
      unknown call_tmp[676285] "expr temp" "maybe param" "maybe type" "temp"
      (676288 'move' call_tmp[676285](163025 call - 1))
      unknown call_tmp[676290] "expr temp" "maybe param" "maybe type" "temp"
      (676293 'move' call_tmp[676290](163032 call chpl_direct_range_iter insertPt[162915] call_tmp[676280] call_tmp[676285]))
      (163015 'move' _iterator[163006](163013 call _getIterator call_tmp[676290]))
      Defer
      {
        {
          (163048 call _freeIterator _iterator[163006])
        }
      }
      { scopeless type
        (163037 'move' _indexOfInterest[163005](163034 call iteratorIndex _iterator[163006]))
      }
      ForLoop[163007]
      {
        unknown i[163041] "index var" "insert auto destroy"
        (482641 'end of statement')
        (163043 'move' i[163041] _indexOfInterest[163005])
        (482642 'end of statement' i[163041])
        {
          unknown call_tmp[676297] "expr temp" "maybe param" "maybe type" "temp"
          (676300 'move' call_tmp[676297](162993 call + i[163041] 1))
          unknown call_tmp[676302] "expr temp" "maybe param" "maybe type" "temp"
          (676305 'move' call_tmp[676302](162996 call(387663 call (partial) _indices _mt[243] this[164440]) call_tmp[676297]))
          unknown call_tmp[676309] "expr temp" "maybe param" "maybe type" "temp"
          (676312 'move' call_tmp[676309](163000 call(387669 call (partial) _indices _mt[243] this[164440]) i[163041]))
          (163001 call = call_tmp[676302] call_tmp[676309])
          (482644 'end of statement' i[163041] i[163041])
        }
        label _continueLabel[163010]
        _indexOfInterest[163005]
        _iterator[163006]
      }
      label _breakLabel[163011]
    }
    unknown call_tmp[676316] "expr temp" "maybe param" "maybe type" "temp"
    (676319 'move' call_tmp[676316](163058 call(387681 call (partial) _indices _mt[243] this[164440]) insertPt[162915]))
    (163060 call = call_tmp[676316] ind[162909])
    (482647 'end of statement' insertPt[162915])
    {
      unknown _indexOfInterest[163092] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163093] "expr temp" "temp"
      unknown call_tmp[676323] "expr temp" "maybe param" "maybe type" "temp"
      (676326 'move' call_tmp[676323](387688 call _arrs _mt[243] this[164440]))
      (163102 'move' _iterator[163093](163100 call _getIterator call_tmp[676323]))
      Defer
      {
        {
          (163118 call _freeIterator _iterator[163093])
        }
      }
      { scopeless type
        (163107 'move' _indexOfInterest[163092](163104 call iteratorIndex _iterator[163093]))
      }
      ForLoop[163094]
      {
        unknown a[163111] "index var" "insert auto destroy"
        (482650 'end of statement')
        (163113 'move' a[163111] _indexOfInterest[163092])
        (482651 'end of statement' a[163111])
        {
          unknown call_tmp[676332] "expr temp" "maybe param" "maybe type" "temp"
          (676335 'move' call_tmp[676332](387694 call _nnz _mt[243] this[164440]))
          unknown call_tmp[676337] "expr temp" "maybe param" "maybe type" "temp"
          (676340 'move' call_tmp[676337](163074 call - call_tmp[676332] 1))
          unknown call_tmp[676342] "expr temp" "maybe param" "maybe type" "temp"
          (676345 'move' call_tmp[676342](163076 call chpl_build_bounded_range insertPt[162915] call_tmp[676337]))
          unknown call_tmp[676347] "expr temp" "maybe param" "maybe type" "temp"
          (676350 'move' call_tmp[676347](163081 call + oldNNZDomSize[162968] 1))
          unknown call_tmp[676354] "expr temp" "maybe param" "maybe type" "temp"
          (676357 'move' call_tmp[676354](361235 call nnzDom _mt[243] this[164440]))
          unknown call_tmp[676361] "expr temp" "maybe param" "maybe type" "temp"
          (676364 'move' call_tmp[676361](163084 call size _mt[243] call_tmp[676354]))
          unknown call_tmp[676366] "expr temp" "maybe param" "maybe type" "temp"
          (676369 'move' call_tmp[676366](163087 call chpl_build_bounded_range call_tmp[676347] call_tmp[676361]))
          (163089 call(163068 call (partial) sparseShiftArray _mt[243] a[163111]) call_tmp[676342] call_tmp[676366])
          (482653 'end of statement' a[163111] insertPt[162915] oldNNZDomSize[162968])
        }
        label _continueLabel[163097]
        _indexOfInterest[163092]
        _iterator[163093]
      }
      label _breakLabel[163098]
    }
    (521594 'move' ret[521584](521593 'deref' 1))
    label _end_add_help[521582]
    (521586 return ret[521584])
  }
  function DefaultSparseDom[164378](?).rem_help[163134](arg _mt[164446]:_MT[238], arg this[164444]:DefaultSparseDom[164378](?), arg ind[163132]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521598] "RVV" "temp"
    unknown call_tmp[676373] "maybe param" "maybe type" "temp"
    (676376 'move' call_tmp[676373](163144 call(387699 call (partial) find _mt[243] this[164444]) ind[163132]))
    const tmp[163145] "dead at end of block" "const" "insert auto destroy" "temp"
    (544221 'init var' tmp[163145] call_tmp[676373])
    (163152 call _check_tuple_var_decl tmp[163145] 2)
    (482658 'end of statement')
    unknown call_tmp[676378] "maybe param" "maybe type" "temp"
    (676381 'move' call_tmp[676378](163146 call tmp[163145] 0))
    const found[163136] "dead at end of block" "const" "insert auto destroy"
    (544223 'init var' found[163136] call_tmp[676378])
    unknown call_tmp[676383] "maybe param" "maybe type" "temp"
    (676386 'move' call_tmp[676383](163149 call tmp[163145] 1))
    const insertPt[163138] "dead at end of block" "const" "insert auto destroy"
    (544225 'init var' insertPt[163138] call_tmp[676383])
    (163157 'end of statement')
    unknown call_tmp[676388] "expr temp" "maybe param" "maybe type" "temp"
    (676391 'move' call_tmp[676388](163160 call ! found[163136]))
    unknown call_tmp[676393] "expr temp" "maybe param" "maybe type" "temp"
    (676396 'move' call_tmp[676393](163184 call _cond_test call_tmp[676388]))
    if call_tmp[676393]
    {
      (163182 call halt "index not in domain: " ind[163132])
    }
    unknown call_tmp[676400] "expr temp" "maybe param" "maybe type" "temp"
    (676403 'move' call_tmp[676400](387707 call _nnz _mt[243] this[164444]))
    (163191 call -= call_tmp[676400] 1)
    (482660 'end of statement')
    {
      unknown _indexOfInterest[163214] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163215] "expr temp" "temp"
      unknown call_tmp[676407] "expr temp" "maybe param" "maybe type" "temp"
      (676410 'move' call_tmp[676407](387725 call _nnz _mt[243] this[164444]))
      unknown call_tmp[676412] "expr temp" "maybe param" "maybe type" "temp"
      (676415 'move' call_tmp[676412](163229 call chpl_direct_range_iter insertPt[163138] call_tmp[676407] 1))
      (163224 'move' _iterator[163215](163222 call _getIterator call_tmp[676412]))
      Defer
      {
        {
          (163245 call _freeIterator _iterator[163215])
        }
      }
      { scopeless type
        (163234 'move' _indexOfInterest[163214](163231 call iteratorIndex _iterator[163215]))
      }
      ForLoop[163216]
      {
        unknown i[163238] "index var" "insert auto destroy"
        (482662 'end of statement')
        (163240 'move' i[163238] _indexOfInterest[163214])
        (482663 'end of statement' i[163238])
        {
          unknown call_tmp[676419] "expr temp" "maybe param" "maybe type" "temp"
          (676422 'move' call_tmp[676419](163202 call(387712 call (partial) _indices _mt[243] this[164444]) i[163238]))
          unknown call_tmp[676426] "expr temp" "maybe param" "maybe type" "temp"
          (676429 'move' call_tmp[676426](163206 call + i[163238] 1))
          unknown call_tmp[676431] "expr temp" "maybe param" "maybe type" "temp"
          (676434 'move' call_tmp[676431](163209 call(387718 call (partial) _indices _mt[243] this[164444]) call_tmp[676426]))
          (163210 call = call_tmp[676419] call_tmp[676431])
          (482665 'end of statement' i[163238] i[163238])
        }
        label _continueLabel[163219]
        _indexOfInterest[163214]
        _iterator[163215]
      }
      label _breakLabel[163220]
    }
    {
      unknown _indexOfInterest[163271] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163272] "expr temp" "temp"
      unknown call_tmp[676438] "expr temp" "maybe param" "maybe type" "temp"
      (676441 'move' call_tmp[676438](387730 call _arrs _mt[243] this[164444]))
      (163281 'move' _iterator[163272](163279 call _getIterator call_tmp[676438]))
      Defer
      {
        {
          (163297 call _freeIterator _iterator[163272])
        }
      }
      { scopeless type
        (163286 'move' _indexOfInterest[163271](163283 call iteratorIndex _iterator[163272]))
      }
      ForLoop[163273]
      {
        unknown a[163290] "index var" "insert auto destroy"
        (482669 'end of statement')
        (163292 'move' a[163290] _indexOfInterest[163271])
        (482670 'end of statement' a[163290])
        {
          unknown call_tmp[676447] "expr temp" "maybe param" "maybe type" "temp"
          (676450 'move' call_tmp[676447](387736 call _nnz _mt[243] this[164444]))
          unknown call_tmp[676452] "expr temp" "maybe param" "maybe type" "temp"
          (676455 'move' call_tmp[676452](163263 call - call_tmp[676447] 1))
          unknown call_tmp[676457] "expr temp" "maybe param" "maybe type" "temp"
          (676460 'move' call_tmp[676457](163265 call chpl_build_bounded_range insertPt[163138] call_tmp[676452]))
          (163268 call(163257 call (partial) sparseShiftArrayBack _mt[243] a[163290]) call_tmp[676457])
          (482672 'end of statement' a[163290] insertPt[163138])
        }
        label _continueLabel[163276]
        _indexOfInterest[163271]
        _iterator[163272]
      }
      label _breakLabel[163277]
    }
    (521603 'move' ret[521598](521602 'deref' 1))
    (521600 return ret[521598])
  }
  function DefaultSparseDom[164378](?).dsiAdd[163315](arg _mt[164450]:_MT[238], arg this[164448]:DefaultSparseDom[164378](?), arg ind[163312] :
  (387741 call idxType _mt[243] this[164448])) : _unknown[51] "method" "primary method"
  {
    unknown ret[521607] "RVV" "temp"
    unknown call_tmp[676466] "expr temp" "maybe param" "maybe type" "temp"
    (676469 'move' call_tmp[676466](163324 call(387752 call (partial) add_help _mt[243] this[164448]) ind[163312]))
    (521612 'move' ret[521607](521611 'deref' call_tmp[676466]))
    (521609 return ret[521607])
  }
  where {
    unknown call_tmp[676473] "expr temp" "maybe param" "maybe type" "temp"
    (676476 'move' call_tmp[676473](387746 call rank _mt[243] this[164448]))
    (163319 call == call_tmp[676473] 1)
  }
  function DefaultSparseDom[164378](?).dsiRemove[163337](arg _mt[164454]:_MT[238], arg this[164452]:DefaultSparseDom[164378](?), arg ind[163334] :
  (387758 call idxType _mt[243] this[164452])) : _unknown[51] "method" "primary method"
  {
    unknown ret[521616] "RVV" "temp"
    unknown call_tmp[676482] "expr temp" "maybe param" "maybe type" "temp"
    (676485 'move' call_tmp[676482](163346 call(387769 call (partial) rem_help _mt[243] this[164452]) ind[163334]))
    (521621 'move' ret[521616](521620 'deref' call_tmp[676482]))
    (521618 return ret[521616])
  }
  where {
    unknown call_tmp[676489] "expr temp" "maybe param" "maybe type" "temp"
    (676492 'move' call_tmp[676489](387763 call rank _mt[243] this[164452]))
    (163341 call == call_tmp[676489] 1)
  }
  function DefaultSparseDom[164378](?).dsiAdd[163362](arg _mt[164458]:_MT[238], arg this[164456]:DefaultSparseDom[164378](?), arg ind[163359] :
  unknown call_tmp[676496] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521625] "RVV" "temp"
    unknown call_tmp[676510] "expr temp" "maybe param" "maybe type" "temp"
    (676513 'move' call_tmp[676510](387785 call rank _mt[243] this[164456]))
    unknown call_tmp[676515] "expr temp" "maybe param" "maybe type" "temp"
    (676518 'move' call_tmp[676515](163366 call == call_tmp[676510] 1))
    unknown call_tmp[676520] "expr temp" "maybe param" "maybe type" "temp"
    (676523 'move' call_tmp[676520](163385 call _cond_test call_tmp[676515]))
    if call_tmp[676520]
    {
      unknown call_tmp[676527] "expr temp" "maybe param" "maybe type" "temp"
      (676530 'move' call_tmp[676527](163372 call ind[163359] 0))
      unknown call_tmp[676532] "expr temp" "maybe param" "maybe type" "temp"
      (676535 'move' call_tmp[676532](163374 call(387789 call (partial) add_help _mt[243] this[164456]) call_tmp[676527]))
      (521630 'move' ret[521625](521629 'deref' call_tmp[676532]))
      gotoReturn _end_dsiAdd[521623] _end_dsiAdd[521623]
    }
    {
      unknown call_tmp[676539] "expr temp" "maybe param" "maybe type" "temp"
      (676542 'move' call_tmp[676539](163381 call(387794 call (partial) add_help _mt[243] this[164456]) ind[163359]))
      (521635 'move' ret[521625](521634 'deref' call_tmp[676539]))
      gotoReturn _end_dsiAdd[521623] _end_dsiAdd[521623]
    }
    label _end_dsiAdd[521623]
    (521627 return ret[521625])
  }
  function DefaultSparseDom[164378](?).dsiRemove[163401](arg _mt[164462]:_MT[238], arg this[164460]:DefaultSparseDom[164378](?), arg ind[163398] :
  unknown call_tmp[676546] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521641] "RVV" "temp"
    unknown call_tmp[676560] "expr temp" "maybe param" "maybe type" "temp"
    (676563 'move' call_tmp[676560](387810 call rank _mt[243] this[164460]))
    unknown call_tmp[676565] "expr temp" "maybe param" "maybe type" "temp"
    (676568 'move' call_tmp[676565](163405 call == call_tmp[676560] 1))
    unknown call_tmp[676570] "expr temp" "maybe param" "maybe type" "temp"
    (676573 'move' call_tmp[676570](163424 call _cond_test call_tmp[676565]))
    if call_tmp[676570]
    {
      unknown call_tmp[676577] "expr temp" "maybe param" "maybe type" "temp"
      (676580 'move' call_tmp[676577](163411 call ind[163398] 0))
      unknown call_tmp[676582] "expr temp" "maybe param" "maybe type" "temp"
      (676585 'move' call_tmp[676582](163413 call(387814 call (partial) rem_help _mt[243] this[164460]) call_tmp[676577]))
      (521646 'move' ret[521641](521645 'deref' call_tmp[676582]))
      gotoReturn _end_dsiRemove[521639] _end_dsiRemove[521639]
    }
    {
      unknown call_tmp[676589] "expr temp" "maybe param" "maybe type" "temp"
      (676592 'move' call_tmp[676589](163420 call(387819 call (partial) rem_help _mt[243] this[164460]) ind[163398]))
      (521651 'move' ret[521641](521650 'deref' call_tmp[676589]))
      gotoReturn _end_dsiRemove[521639] _end_dsiRemove[521639]
    }
    label _end_dsiRemove[521639]
    (521643 return ret[521641])
  }
  function DefaultSparseDom[164378](?).bulkAdd_help[163446](arg _mt[164466]:_MT[238], arg this[164464]:DefaultSparseDom[164378](?), arg inds[163443]:_array[133594](?), arg dataSorted[163449] :
  0 =
  0, arg isUnique[163453] :
  0 =
  0, arg addOn[163457] :
  nilLocale[89942] =
  nilLocale[89942]) : _unknown[51] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[521657] "RVV" "temp"
    unknown call_tmp[676594] "expr temp" "maybe param" "maybe type" "temp"
    (676597 'move' call_tmp[676594](163466 call != addOn[163457] nilLocale[89942]))
    unknown call_tmp[676599] "expr temp" "maybe param" "maybe type" "temp"
    (676602 'move' call_tmp[676599](163504 call _cond_test call_tmp[676594]))
    if call_tmp[676599]
    {
      unknown call_tmp[676604] "expr temp" "maybe param" "maybe type" "temp"
      (676607 'move' call_tmp[676604](163470 '_wide_get_locale' this[164464]))
      unknown call_tmp[676609] "expr temp" "maybe param" "maybe type" "temp"
      (676612 'move' call_tmp[676609](163471 call chpl_localeID_to_locale call_tmp[676604]))
      unknown call_tmp[676614] "expr temp" "maybe param" "maybe type" "temp"
      (676617 'move' call_tmp[676614](163473 call != addOn[163457] call_tmp[676609]))
      unknown call_tmp[676619] "expr temp" "maybe param" "maybe type" "temp"
      (676622 'move' call_tmp[676619](163499 call _cond_test call_tmp[676614]))
      if call_tmp[676619]
      {
        (163496 call halt "Bulk index addition is only possible on the locale where the\n              sparse domain is created")
      }
    }
    (163519 call(387841 call (partial) bulkAdd_prepareInds _mt[243] this[164464]) inds[163443] dataSorted[163449] isUnique[163453] defaultComparator[267996])
    (482683 'end of statement')
    unknown call_tmp[676628] "expr temp" "maybe param" "maybe type" "temp"
    (676631 'move' call_tmp[676628](387849 call _nnz _mt[243] this[164464]))
    unknown call_tmp[676633] "expr temp" "maybe param" "maybe type" "temp"
    (676636 'move' call_tmp[676633](163523 call == call_tmp[676628] 0))
    unknown call_tmp[676638] "expr temp" "maybe param" "maybe type" "temp"
    (676641 'move' call_tmp[676638](163684 call _cond_test call_tmp[676633]))
    if call_tmp[676638]
    {
      const dupCount[163534] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[570276] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570277] "maybe param" "temp"
      (570282 'move' tmp[570277](570280 call _cond_test isUnique[163453]))
      if tmp[570277]
      {
        (570287 'move' tmp[570276](570284 '_paramFoldLogical' tmp[570277] 0))
      }
      {
        unknown tmp[570289] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570291 'move' tmp[570289](163530 call(387856 call (partial) _countDuplicates _mt[243] this[164464]) inds[163443]))
        (570296 'move' tmp[570276](570293 '_paramFoldLogical' tmp[570277] tmp[570289]))
      }
      (544227 'init var' dupCount[163534] tmp[570276])
      (163537 'end of statement')
      unknown call_tmp[676647] "expr temp" "maybe param" "maybe type" "temp"
      (676650 'move' call_tmp[676647](387862 call _nnz _mt[243] this[164464]))
      unknown call_tmp[676654] "expr temp" "maybe param" "maybe type" "temp"
      (676657 'move' call_tmp[676654](163541 call size _mt[243] inds[163443]))
      unknown call_tmp[676659] "expr temp" "maybe param" "maybe type" "temp"
      (676662 'move' call_tmp[676659](163545 call - call_tmp[676654] dupCount[163534]))
      (163547 call += call_tmp[676647] call_tmp[676659])
      (482684 'end of statement' dupCount[163534])
      (163552 call(387869 call (partial) _bulkGrow _mt[243] this[164464]))
      (482686 'end of statement')
      unknown call_tmp[676668] "expr temp" "maybe param" "maybe type" "temp"
      (676671 'move' call_tmp[676668](361246 call _indices _mt[243] this[164464]))
      unknown call_tmp[676675] "expr temp" "maybe param" "maybe type" "temp"
      (676678 'move' call_tmp[676675](163555 call _dom _mt[243] call_tmp[676668]))
      unknown call_tmp[676682] "maybe param" "maybe type" "temp"
      (676685 'move' call_tmp[676682](163558 call low _mt[243] call_tmp[676675]))
      unknown indIdx[163561] "dead at end of block" "insert auto destroy"
      (544229 'init var' indIdx[163561] call_tmp[676682])
      (163564 'end of statement')
      unknown call_tmp[676689] "expr temp" "maybe param" "maybe type" "temp"
      (676692 'move' call_tmp[676689](361251 call parentDom _mt[243] this[164464]))
      unknown call_tmp[676696] "expr temp" "maybe param" "maybe type" "temp"
      (676699 'move' call_tmp[676696](163566 call low _mt[243] call_tmp[676689]))
      unknown call_tmp[676701] "maybe param" "maybe type" "temp"
      (676704 'move' call_tmp[676701](163570 call - call_tmp[676696] 1))
      unknown prevIdx[163572] "dead at end of block" "insert auto destroy"
      (544231 'init var' prevIdx[163572] call_tmp[676701])
      (163575 'end of statement')
      unknown call_tmp[676706] "expr temp" "maybe param" "maybe type" "temp"
      (676709 'move' call_tmp[676706](163680 call _cond_test isUnique[163453]))
      if call_tmp[676706]
      {
        unknown call_tmp[676715] "expr temp" "maybe param" "maybe type" "temp"
        (676718 'move' call_tmp[676715](361256 call _indices _mt[243] this[164464]))
        unknown call_tmp[676722] "expr temp" "maybe param" "maybe type" "temp"
        (676725 'move' call_tmp[676722](163579 call _dom _mt[243] call_tmp[676715]))
        unknown call_tmp[676729] "expr temp" "maybe param" "maybe type" "temp"
        (676732 'move' call_tmp[676729](163582 call low _mt[243] call_tmp[676722]))
        unknown call_tmp[676734] "expr temp" "maybe param" "maybe type" "temp"
        (676737 'move' call_tmp[676734](163585 call chpl_build_low_bounded_range call_tmp[676729]))
        unknown call_tmp[676741] "expr temp" "maybe param" "maybe type" "temp"
        (676744 'move' call_tmp[676741](163588 call size _mt[243] inds[163443]))
        unknown call_tmp[676746] "expr temp" "maybe param" "maybe type" "temp"
        (676749 'move' call_tmp[676746](163591 call # call_tmp[676734] call_tmp[676741]))
        unknown call_tmp[676751] "expr temp" "maybe param" "maybe type" "temp"
        (676754 'move' call_tmp[676751](163594 call(387875 call (partial) _indices _mt[243] this[164464]) call_tmp[676746]))
        (163596 call = call_tmp[676751] inds[163443])
        (482687 'end of statement')
        unknown call_tmp[676758] "expr temp" "maybe param" "maybe type" "temp"
        (676761 'move' call_tmp[676758](163601 call size _mt[243] inds[163443]))
        (521662 'move' ret[521657](521661 'deref' call_tmp[676758]))
        gotoReturn _end_bulkAdd_help[521655] _end_bulkAdd_help[521655]
      }
      {
        {
          unknown _indexOfInterest[163640] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[163641] "expr temp" "temp"
          (163650 'move' _iterator[163641](163648 call _getIterator inds[163443]))
          Defer
          {
            {
              (163666 call _freeIterator _iterator[163641])
            }
          }
          { scopeless type
            (163655 'move' _indexOfInterest[163640](163652 call iteratorIndex _iterator[163641]))
          }
          ForLoop[163642]
          {
            unknown i[163659] "index var" "insert auto destroy"
            (482690 'end of statement')
            (163661 'move' i[163659] _indexOfInterest[163640])
            (482691 'end of statement' i[163659])
            {
              unknown call_tmp[676763] "expr temp" "maybe param" "maybe type" "temp"
              (676766 'move' call_tmp[676763](163610 call == i[163659] prevIdx[163572]))
              unknown call_tmp[676768] "expr temp" "maybe param" "maybe type" "temp"
              (676771 'move' call_tmp[676768](163620 call _cond_test call_tmp[676763]))
              if call_tmp[676768]
              {
                continue _continueLabel[163645] _continueLabel[163645]
              }
              {
                (163617 call = prevIdx[163572] i[163659])
                (482693 'end of statement' prevIdx[163572] i[163659])
              }
              unknown call_tmp[676775] "expr temp" "maybe param" "maybe type" "temp"
              (676778 'move' call_tmp[676775](163630 call(387886 call (partial) _indices _mt[243] this[164464]) indIdx[163561]))
              (163632 call = call_tmp[676775] i[163659])
              (482696 'end of statement' indIdx[163561] i[163659])
              (163637 call += indIdx[163561] 1)
              (482699 'end of statement' indIdx[163561])
            }
            label _continueLabel[163645]
            _indexOfInterest[163640]
            _iterator[163641]
          }
          label _breakLabel[163646]
        }
        unknown call_tmp[676780] "expr temp" "maybe param" "maybe type" "temp"
        (676783 'move' call_tmp[676780](163676 call - indIdx[163561] 1))
        (521667 'move' ret[521657](521666 'deref' call_tmp[676780]))
        gotoReturn _end_bulkAdd_help[521655] _end_bulkAdd_help[521655]
        (482701 'end of statement' indIdx[163561])
      }
    }
    unknown call_tmp[676787] "maybe param" "maybe type" "temp"
    (676790 'move' call_tmp[676787](163698 call(387896 call (partial) __getActualInsertPts _mt[243] this[164464]) this[164464] inds[163443] isUnique[163453]))
    const tmp[163699] "dead at end of block" "const" "insert auto destroy" "temp"
    (544233 'init var' tmp[163699] call_tmp[676787])
    (163706 call _check_tuple_var_decl tmp[163699] 2)
    (482703 'end of statement')
    unknown call_tmp[676792] "maybe param" "maybe type" "temp"
    (676795 'move' call_tmp[676792](163700 call tmp[163699] 0))
    const actualInsertPts[163688] "dead at end of block" "const" "insert auto destroy"
    (544235 'init var' actualInsertPts[163688] call_tmp[676792])
    unknown call_tmp[676797] "maybe param" "maybe type" "temp"
    (676800 'move' call_tmp[676797](163703 call tmp[163699] 1))
    const actualAddCnt[163690] "dead at end of block" "const" "insert auto destroy"
    (544237 'init var' actualAddCnt[163690] call_tmp[676797])
    (163711 'end of statement')
    unknown call_tmp[676804] "maybe param" "maybe type" "temp"
    (676807 'move' call_tmp[676804](387904 call _nnz _mt[243] this[164464]))
    const oldnnz[163713] "dead at end of block" "const" "insert auto destroy"
    (544239 'init var' oldnnz[163713] call_tmp[676804])
    (163716 'end of statement')
    unknown call_tmp[676811] "expr temp" "maybe param" "maybe type" "temp"
    (676814 'move' call_tmp[676811](387909 call _nnz _mt[243] this[164464]))
    (163719 call += call_tmp[676811] actualAddCnt[163690])
    (482704 'end of statement' actualAddCnt[163690])
    (163724 call(387914 call (partial) _bulkGrow _mt[243] this[164464]))
    (482706 'end of statement')
    unknown call_tmp[676820] "expr temp" "maybe param" "maybe type" "temp"
    (676823 'move' call_tmp[676820](462283 call _dom _mt[243] inds[163443]))
    unknown call_tmp[676827] "maybe param" "maybe type" "temp"
    (676830 'move' call_tmp[676827](163727 call high _mt[243] call_tmp[676820]))
    unknown newIndIdx[163730] "dead at end of block" "insert auto destroy"
    (544241 'init var' newIndIdx[163730] call_tmp[676827])
    (163733 'end of statement')
    unknown oldIndIdx[163735] "dead at end of block" "insert auto destroy"
    (544243 'init var' oldIndIdx[163735] oldnnz[163713])
    (163738 'end of statement')
    unknown call_tmp[676832] "maybe param" "maybe type" "temp"
    (676835 'move' call_tmp[676832](163742 call actualInsertPts[163688] newIndIdx[163730]))
    unknown newLoc[163743] "dead at end of block" "insert auto destroy"
    (544245 'init var' newLoc[163743] call_tmp[676832])
    (163746 'end of statement')
    {
      unknown tmp[163785] "temp"
      unknown call_tmp[676837] "expr temp" "maybe param" "maybe type" "temp"
      (676840 'move' call_tmp[676837](163811 call - 1))
      unknown call_tmp[676842] "expr temp" "maybe param" "maybe type" "temp"
      (676845 'move' call_tmp[676842](163808 call == newLoc[163743] call_tmp[676837]))
      (163813 'move' tmp[163785](163806 call _cond_test call_tmp[676842]))
      WhileDo[163790]
      {
        {
          (163755 call -= newIndIdx[163730] 1)
          (482710 'end of statement' newIndIdx[163730])
          unknown call_tmp[676849] "expr temp" "maybe param" "maybe type" "temp"
          (676852 'move' call_tmp[676849](462287 call _dom _mt[243] inds[163443]))
          unknown call_tmp[676856] "expr temp" "maybe param" "maybe type" "temp"
          (676859 'move' call_tmp[676856](163761 call low _mt[243] call_tmp[676849]))
          unknown call_tmp[676861] "expr temp" "maybe param" "maybe type" "temp"
          (676864 'move' call_tmp[676861](163765 call - call_tmp[676856] 1))
          unknown call_tmp[676866] "expr temp" "maybe param" "maybe type" "temp"
          (676869 'move' call_tmp[676866](163767 call == newIndIdx[163730] call_tmp[676861]))
          unknown call_tmp[676871] "expr temp" "maybe param" "maybe type" "temp"
          (676874 'move' call_tmp[676871](163772 call _cond_test call_tmp[676866]))
          if call_tmp[676871]
          {
            break _breakLabel[163789] _breakLabel[163789]
          }
          unknown call_tmp[676876] "expr temp" "maybe param" "maybe type" "temp"
          (676879 'move' call_tmp[676876](163781 call actualInsertPts[163688] newIndIdx[163730]))
          (163782 call = newLoc[163743] call_tmp[676876])
          (482712 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
        }
        label _continueLabel[163788]
        unknown call_tmp[676881] "expr temp" "maybe param" "maybe type" "temp"
        (676884 'move' call_tmp[676881](163799 call - 1))
        unknown call_tmp[676886] "expr temp" "maybe param" "maybe type" "temp"
        (676889 'move' call_tmp[676886](163796 call == newLoc[163743] call_tmp[676881]))
        (163801 'move' tmp[163785](163794 call _cond_test call_tmp[676886]))
        tmp[163785]
      }
      label _breakLabel[163789]
    }
    unknown arrShiftMap[163829] "dead at end of block" "insert auto destroy"
    unknown call_tmp[676891] "expr temp" "maybe param" "maybe type" "temp"
    (676894 'move' call_tmp[676891](163818 call chpl_build_bounded_range 1 oldnnz[163713]))
    unknown call_tmp[676896] "expr temp" "maybe param" "maybe type" "temp"
    (676899 'move' call_tmp[676896](163821 call chpl__buildDomainExpr call_tmp[676891]))
    unknown call_tmp[676901] "expr temp" "maybe param" "maybe type" "temp"
    (676904 'move' call_tmp[676901](163825 call chpl__ensureDomainExpr call_tmp[676896]))
    unknown call_tmp[676906] "expr temp" "maybe param" "maybe type" "temp"
    (676909 'move' call_tmp[676906](163827 call chpl__buildArrayRuntimeType call_tmp[676901] int(64)[13]))
    (544247 'default init var' arrShiftMap[163829] call_tmp[676906])
    (163832 'end of statement' oldnnz[163713] actualInsertPts[163688] newIndIdx[163730] oldnnz[163713])
    {
      unknown _indexOfInterest[164037] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[164038] "expr temp" "temp"
      unknown call_tmp[676913] "expr temp" "maybe param" "maybe type" "temp"
      (676916 'move' call_tmp[676913](387973 call _nnz _mt[243] this[164464]))
      unknown call_tmp[676918] "expr temp" "maybe param" "maybe type" "temp"
      (676921 'move' call_tmp[676918](164054 call - 1))
      unknown call_tmp[676923] "expr temp" "maybe param" "maybe type" "temp"
      (676926 'move' call_tmp[676923](164058 call chpl_direct_range_iter 1 call_tmp[676913] call_tmp[676918]))
      (164047 'move' _iterator[164038](164045 call _getIterator call_tmp[676923]))
      Defer
      {
        {
          (164074 call _freeIterator _iterator[164038])
        }
      }
      { scopeless type
        (164063 'move' _indexOfInterest[164037](164060 call iteratorIndex _iterator[164038]))
      }
      ForLoop[164039]
      {
        unknown i[164067] "index var" "insert auto destroy"
        (482718 'end of statement')
        (164069 'move' i[164067] _indexOfInterest[164037])
        (482719 'end of statement' i[164067])
        {
          unknown tmp[428282] "maybe param" "temp"
          (428293 'move' tmp[428282](163845 call >= oldIndIdx[163735] 1))
          unknown call_tmp[676928] "expr temp" "maybe param" "maybe type" "temp"
          (676931 'move' call_tmp[676928](428295 call _cond_invalid tmp[428282]))
          if call_tmp[676928]
          {
            (428298 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[570303] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570304] "maybe param" "temp"
          unknown call_tmp[676933] "expr temp" "maybe param" "maybe type" "temp"
          (676936 'move' call_tmp[676933](428283 call isTrue tmp[428282]))
          (570309 'move' tmp[570304](570307 call _cond_test call_tmp[676933]))
          if tmp[570304]
          {
            unknown tmp[570311] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[676938] "expr temp" "maybe param" "maybe type" "temp"
            (676941 'move' call_tmp[676938](163849 call > i[164067] newLoc[163743]))
            (570313 'move' tmp[570311](428286 call isTrue call_tmp[676938]))
            (570318 'move' tmp[570303](570315 '_paramFoldLogical' tmp[570304] tmp[570311]))
          }
          {
            (570323 'move' tmp[570303](570320 '_paramFoldLogical' tmp[570304] 0))
          }
          unknown call_tmp[676943] "expr temp" "maybe param" "maybe type" "temp"
          (676946 'move' call_tmp[676943](164031 call _cond_test tmp[570303]))
          if call_tmp[676943]
          {
            unknown call_tmp[676950] "expr temp" "maybe param" "maybe type" "temp"
            (676953 'move' call_tmp[676950](163856 call(387933 call (partial) _indices _mt[243] this[164464]) i[164067]))
            unknown call_tmp[676957] "expr temp" "maybe param" "maybe type" "temp"
            (676960 'move' call_tmp[676957](163860 call(387939 call (partial) _indices _mt[243] this[164464]) oldIndIdx[163735]))
            (163861 call = call_tmp[676950] call_tmp[676957])
            (482722 'end of statement' i[164067] oldIndIdx[163735])
            unknown call_tmp[676962] "expr temp" "maybe param" "maybe type" "temp"
            (676965 'move' call_tmp[676962](163868 call arrShiftMap[163829] oldIndIdx[163735]))
            (163870 call = call_tmp[676962] i[164067])
            (482725 'end of statement' arrShiftMap[163829] oldIndIdx[163735] i[164067])
            (163875 call -= oldIndIdx[163735] 1)
            (482729 'end of statement' oldIndIdx[163735])
          }
          {
            unknown tmp[428261] "maybe param" "temp"
            unknown call_tmp[676969] "expr temp" "maybe param" "maybe type" "temp"
            (676972 'move' call_tmp[676969](462291 call _dom _mt[243] inds[163443]))
            unknown call_tmp[676976] "expr temp" "maybe param" "maybe type" "temp"
            (676979 'move' call_tmp[676976](163880 call low _mt[243] call_tmp[676969]))
            (428272 'move' tmp[428261](163883 call >= newIndIdx[163730] call_tmp[676976]))
            unknown call_tmp[676981] "expr temp" "maybe param" "maybe type" "temp"
            (676984 'move' call_tmp[676981](428274 call _cond_invalid tmp[428261]))
            if call_tmp[676981]
            {
              (428277 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[570330] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[570331] "maybe param" "temp"
            unknown call_tmp[676986] "expr temp" "maybe param" "maybe type" "temp"
            (676989 'move' call_tmp[676986](428262 call isTrue tmp[428261]))
            (570336 'move' tmp[570331](570334 call _cond_test call_tmp[676986]))
            if tmp[570331]
            {
              unknown tmp[570338] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[676991] "expr temp" "maybe param" "maybe type" "temp"
              (676994 'move' call_tmp[676991](163887 call == i[164067] newLoc[163743]))
              (570340 'move' tmp[570338](428265 call isTrue call_tmp[676991]))
              (570345 'move' tmp[570330](570342 '_paramFoldLogical' tmp[570331] tmp[570338]))
            }
            {
              (570350 'move' tmp[570330](570347 '_paramFoldLogical' tmp[570331] 0))
            }
            unknown call_tmp[676996] "expr temp" "maybe param" "maybe type" "temp"
            (676999 'move' call_tmp[676996](164026 call _cond_test tmp[570330]))
            if call_tmp[676996]
            {
              unknown call_tmp[677003] "expr temp" "maybe param" "maybe type" "temp"
              (677006 'move' call_tmp[677003](163894 call(387952 call (partial) _indices _mt[243] this[164464]) i[164067]))
              unknown call_tmp[677008] "expr temp" "maybe param" "maybe type" "temp"
              (677011 'move' call_tmp[677008](163898 call inds[163443] newIndIdx[163730]))
              (163899 call = call_tmp[677003] call_tmp[677008])
              (482732 'end of statement' i[164067] newIndIdx[163730])
              (163905 call -= newIndIdx[163730] 1)
              (482735 'end of statement' newIndIdx[163730])
              unknown call_tmp[677015] "expr temp" "maybe param" "maybe type" "temp"
              (677018 'move' call_tmp[677015](462295 call _dom _mt[243] inds[163443]))
              unknown call_tmp[677022] "expr temp" "maybe param" "maybe type" "temp"
              (677025 'move' call_tmp[677022](163910 call low _mt[243] call_tmp[677015]))
              unknown call_tmp[677027] "expr temp" "maybe param" "maybe type" "temp"
              (677030 'move' call_tmp[677027](163913 call >= newIndIdx[163730] call_tmp[677022]))
              unknown call_tmp[677032] "expr temp" "maybe param" "maybe type" "temp"
              (677035 'move' call_tmp[677032](163930 call _cond_test call_tmp[677027]))
              if call_tmp[677032]
              {
                unknown call_tmp[677037] "expr temp" "maybe param" "maybe type" "temp"
                (677040 'move' call_tmp[677037](163919 call actualInsertPts[163688] newIndIdx[163730]))
                (163920 call = newLoc[163743] call_tmp[677037])
                (482737 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
              }
              {
                unknown call_tmp[677042] "expr temp" "maybe param" "maybe type" "temp"
                (677045 'move' call_tmp[677042](163925 call - 2))
                (163927 call = newLoc[163743] call_tmp[677042])
                (482741 'end of statement' newLoc[163743])
              }
              {
                unknown tmp[163974] "temp"
                unknown call_tmp[677047] "expr temp" "maybe param" "maybe type" "temp"
                (677050 'move' call_tmp[677047](164000 call - 1))
                unknown call_tmp[677052] "expr temp" "maybe param" "maybe type" "temp"
                (677055 'move' call_tmp[677052](163997 call == newLoc[163743] call_tmp[677047]))
                (164002 'move' tmp[163974](163995 call _cond_test call_tmp[677052]))
                WhileDo[163979]
                {
                  {
                    (163944 call -= newIndIdx[163730] 1)
                    (482743 'end of statement' newIndIdx[163730])
                    unknown call_tmp[677059] "expr temp" "maybe param" "maybe type" "temp"
                    (677062 'move' call_tmp[677059](462299 call _dom _mt[243] inds[163443]))
                    unknown call_tmp[677066] "expr temp" "maybe param" "maybe type" "temp"
                    (677069 'move' call_tmp[677066](163950 call low _mt[243] call_tmp[677059]))
                    unknown call_tmp[677071] "expr temp" "maybe param" "maybe type" "temp"
                    (677074 'move' call_tmp[677071](163954 call - call_tmp[677066] 1))
                    unknown call_tmp[677076] "expr temp" "maybe param" "maybe type" "temp"
                    (677079 'move' call_tmp[677076](163956 call == newIndIdx[163730] call_tmp[677071]))
                    unknown call_tmp[677081] "expr temp" "maybe param" "maybe type" "temp"
                    (677084 'move' call_tmp[677081](163961 call _cond_test call_tmp[677076]))
                    if call_tmp[677081]
                    {
                      break _breakLabel[163978] _breakLabel[163978]
                    }
                    unknown call_tmp[677086] "expr temp" "maybe param" "maybe type" "temp"
                    (677089 'move' call_tmp[677086](163970 call actualInsertPts[163688] newIndIdx[163730]))
                    (163971 call = newLoc[163743] call_tmp[677086])
                    (482745 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
                  }
                  label _continueLabel[163977]
                  unknown call_tmp[677091] "expr temp" "maybe param" "maybe type" "temp"
                  (677094 'move' call_tmp[677091](163988 call - 1))
                  unknown call_tmp[677096] "expr temp" "maybe param" "maybe type" "temp"
                  (677099 'move' call_tmp[677096](163985 call == newLoc[163743] call_tmp[677091]))
                  (163990 'move' tmp[163974](163983 call _cond_test call_tmp[677096]))
                  tmp[163974]
                }
                label _breakLabel[163978]
              }
            }
            {
              (164024 call halt "Something went wrong")
            }
          }
        }
        label _continueLabel[164042]
        _indexOfInterest[164037]
        _iterator[164038]
      }
      label _breakLabel[164043]
    }
    {
      unknown _indexOfInterest[164094] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[164095] "expr temp" "temp"
      unknown call_tmp[677103] "expr temp" "maybe param" "maybe type" "temp"
      (677106 'move' call_tmp[677103](387978 call _arrs _mt[243] this[164464]))
      (164104 'move' _iterator[164095](164102 call _getIterator call_tmp[677103]))
      Defer
      {
        {
          (164120 call _freeIterator _iterator[164095])
        }
      }
      { scopeless type
        (164109 'move' _indexOfInterest[164094](164106 call iteratorIndex _iterator[164095]))
      }
      ForLoop[164096]
      {
        unknown a[164113] "index var" "insert auto destroy"
        (482751 'end of statement')
        (164115 'move' a[164113] _indexOfInterest[164094])
        (482752 'end of statement' a[164113])
        (164092 call(164086 call (partial) sparseBulkShiftArray _mt[243] a[164113]) arrShiftMap[163829] oldnnz[163713])
        (482754 'end of statement' a[164113] arrShiftMap[163829] oldnnz[163713])
        label _continueLabel[164099]
        _indexOfInterest[164094]
        _iterator[164095]
      }
      label _breakLabel[164100]
    }
    (521672 'move' ret[521657](521671 'deref' actualAddCnt[163690]))
    gotoReturn _end_bulkAdd_help[521655] _end_bulkAdd_help[521655]
    (482758 'end of statement' actualAddCnt[163690])
    label _end_bulkAdd_help[521655]
    (521659 return ret[521657])
    (355207 'used modules list'(163461 'import' Sort[267987]))
    (361240 'referenced modules list' Sort[267987])
  }
  where {
    unknown call_tmp[677112] "expr temp" "maybe param" "maybe type" "temp"
    (677115 'move' call_tmp[677112](387825 call rank _mt[243] this[164464]))
    unknown call_tmp[677119] "expr temp" "maybe param" "maybe type" "temp"
    (677122 'move' call_tmp[677119](387830 call idxType _mt[243] this[164464]))
    unknown call_tmp[677124] "expr temp" "maybe param" "maybe type" "temp"
    (677127 'move' call_tmp[677124](163439 call chpl__buildIndexType call_tmp[677112] call_tmp[677119]))
    unknown call_tmp[677131] "expr temp" "maybe param" "maybe type" "temp"
    (677134 'move' call_tmp[677131](462307 call eltType _mt[243] inds[163443]))
    unknown call_tmp[677136] "expr temp" "maybe param" "maybe type" "temp"
    (677139 'move' call_tmp[677136](462311 call == call_tmp[677124] call_tmp[677131]))
    (462305 call & 1 call_tmp[677136])
  }
  function DefaultSparseDom[164378](?).dsiMyDist[164134](arg _mt[164470]:_MT[238], arg this[164468]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521678] "RVV" "temp"
    unknown call_tmp[677143] "expr temp" "maybe param" "maybe type" "temp"
    (677146 'move' call_tmp[677143](387987 call dist _mt[243] this[164468]))
    (521684 'move' ret[521678](521683 'coerce' call_tmp[677143] unmanaged BaseDist[415506]))
    (521680 return ret[521678])
  }
  { scopeless type
    unmanaged BaseDist[415506]
  }
  function DefaultSparseDom[164378](?).dsiClear[164147](arg _mt[164474]:_MT[238], arg this[164472]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[677150] "expr temp" "maybe param" "maybe type" "temp"
    (677153 'move' call_tmp[677150](387992 call _nnz _mt[243] this[164472]))
    (164151 call = call_tmp[677150] 0)
    (521686 return _void[55])
  }
  function DefaultSparseDom[164378](?).dimIter[164161](arg _mt[164478]:_MT[238], arg this[164476]:DefaultSparseDom[164378](?), param arg d[164159]:_any[178](?), arg ind[164163]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521690] "RVV" "temp"
    unknown call_tmp[677157] "expr temp" "maybe param" "maybe type" "temp"
    (677160 'move' call_tmp[677157](387998 call rank _mt[243] this[164476]))
    unknown call_tmp[677162] "expr temp" "maybe param" "maybe type" "temp"
    (677165 'move' call_tmp[677162](164168 call - call_tmp[677157] 1))
    unknown call_tmp[677167] "expr temp" "maybe param" "maybe type" "temp"
    (677170 'move' call_tmp[677167](164170 call != d[164159] call_tmp[677162]))
    unknown call_tmp[677172] "expr temp" "maybe param" "maybe type" "temp"
    (677175 'move' call_tmp[677172](164194 call _cond_test call_tmp[677167]))
    if call_tmp[677172]
    {
      (164191 call compilerError "dimIter() not supported on sparse domains for dimensions other than the last")
    }
    (164218 call halt "dimIter() not yet implemented for sparse domains")
    (482763 'end of statement')
    unknown yret[521694] "YVV" "temp"
    unknown call_tmp[677179] "expr temp" "maybe param" "maybe type" "temp"
    (677182 'move' call_tmp[677179](164223 call(388003 call (partial) _indices _mt[243] this[164476]) 0))
    (521697 'move' yret[521694](521696 'deref' call_tmp[677179]))
    (521699 yield yret[521694])
    (521692 return ret[521690])
  }
  function DefaultSparseDom[164378](?).dsiAssignDomain[164234](arg _mt[164482]:_MT[238], arg this[164480]:DefaultSparseDom[164378](?), arg rhs[164231]:_domain[125908](?), arg lhsPrivate[164237]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown tmp[428303] "maybe param" "temp"
    { scopeless type
      unknown call_type_tmp[492498] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[677186] "expr temp" "maybe param" "maybe type" "temp"
      (677189 'move' call_tmp[677186](164242 call _instance _mt[243] rhs[164231]))
      (492502 'move' call_type_tmp[492498](164245 'typeof' call_tmp[677186]))
    }
    unknown call_tmp[677191] "expr temp" "maybe param" "maybe type" "temp"
    (677194 'move' call_tmp[677191](164247 call _to_borrowed call_type_tmp[492498]))
    unknown call_tmp[677196] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (677199 'move' call_tmp[677196](164249 'typeof' this[164480]))
    (428314 'move' tmp[428303](164250 call == call_tmp[677191] call_tmp[677196]))
    unknown call_tmp[677201] "expr temp" "maybe param" "maybe type" "temp"
    (677204 'move' call_tmp[677201](428316 call _cond_invalid tmp[428303]))
    if call_tmp[677201]
    {
      (428319 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570357] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570358] "maybe param" "temp"
    unknown call_tmp[677206] "expr temp" "maybe param" "maybe type" "temp"
    (677209 'move' call_tmp[677206](428304 call isTrue tmp[428303]))
    (570363 'move' tmp[570358](570361 call _cond_test call_tmp[677206]))
    if tmp[570358]
    {
      unknown tmp[570365] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[677213] "expr temp" "maybe param" "maybe type" "temp"
      (677216 'move' call_tmp[677213](164253 call dsiNumIndices _mt[243] this[164480]))
      unknown call_tmp[677218] "expr temp" "maybe param" "maybe type" "temp"
      (677221 'move' call_tmp[677218](164257 call == call_tmp[677213] 0))
      (570367 'move' tmp[570365](428307 call isTrue call_tmp[677218]))
      (570372 'move' tmp[570357](570369 '_paramFoldLogical' tmp[570358] tmp[570365]))
    }
    {
      (570377 'move' tmp[570357](570374 '_paramFoldLogical' tmp[570358] 0))
    }
    unknown call_tmp[677223] "expr temp" "maybe param" "maybe type" "temp"
    (677226 'move' call_tmp[677223](164306 call _cond_test tmp[570357]))
    if call_tmp[677223]
    {
      unknown call_tmp[677230] "expr temp" "maybe param" "maybe type" "temp"
      (677233 'move' call_tmp[677230](164264 call _nnz _mt[243] this[164480]))
      unknown call_tmp[677237] "expr temp" "maybe param" "maybe type" "temp"
      (677240 'move' call_tmp[677237](164268 call _nnz _mt[243] rhs[164231]))
      (164271 call = call_tmp[677230] call_tmp[677237])
      (482766 'end of statement')
      unknown call_tmp[677244] "expr temp" "maybe param" "maybe type" "temp"
      (677247 'move' call_tmp[677244](164276 call nnzDom _mt[243] this[164480]))
      unknown call_tmp[677251] "expr temp" "maybe param" "maybe type" "temp"
      (677254 'move' call_tmp[677251](164280 call nnzDom _mt[243] rhs[164231]))
      (164283 call = call_tmp[677244] call_tmp[677251])
      (482767 'end of statement')
      unknown call_tmp[677258] "expr temp" "maybe param" "maybe type" "temp"
      (677261 'move' call_tmp[677258](164289 call _indices _mt[243] this[164480]))
      unknown call_tmp[677265] "expr temp" "maybe param" "maybe type" "temp"
      (677268 'move' call_tmp[677265](164293 call _indices _mt[243] rhs[164231]))
      (164296 call = call_tmp[677258] call_tmp[677265])
    }
    {
      (164303 call chpl_assignDomainWithIndsIterSafeForRemoving this[164480] rhs[164231])
    }
    (521701 return _void[55])
  }
  function DefaultSparseDom[164378](?).dsiHasSingleLocalSubdomain[164315](arg _mt[164486]:_MT[238], arg this[164484]:DefaultSparseDom[164378](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[521705] "RVV" "param" "temp"
    (521710 'move' ret[521705](521709 'deref' 1))
    (521707 return ret[521705])
  }
  function DefaultSparseDom[164378](?).dsiLocalSubdomain[164329](arg _mt[164490]:_MT[238], arg this[164488]:DefaultSparseDom[164378](?), arg loc[164326]:locale[28]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521714] "RVV" "temp"
    unknown call_tmp[677270] "expr temp" "maybe param" "maybe type" "temp"
    (677273 'move' call_tmp[677270](164332 '_wide_get_locale' this[164488]))
    unknown call_tmp[677275] "expr temp" "maybe param" "maybe type" "temp"
    (677278 'move' call_tmp[677275](164333 call chpl_localeID_to_locale call_tmp[677270]))
    unknown call_tmp[677280] "expr temp" "maybe param" "maybe type" "temp"
    (677283 'move' call_tmp[677280](164336 call == call_tmp[677275] loc[164326]))
    unknown call_tmp[677285] "expr temp" "maybe param" "maybe type" "temp"
    (677288 'move' call_tmp[677285](164370 call _cond_test call_tmp[677280]))
    if call_tmp[677285]
    {
      unknown call_tmp[677290] "expr temp" "maybe param" "maybe type" "temp"
      (677293 'move' call_tmp[677290](164342 call _to_unmanaged this[164488]))
      unknown call_tmp[677295] "expr temp" "maybe param" "maybe type" "temp"
      (677298 'move' call_tmp[677295](164344 call _getDomain call_tmp[677290]))
      (521719 'move' ret[521714](521718 'deref' call_tmp[677295]))
      gotoReturn _end_dsiLocalSubdomain[521712] _end_dsiLocalSubdomain[521712]
    }
    {
      unknown call_tmp[677302] "expr temp" "maybe param" "maybe type" "temp"
      (677305 'move' call_tmp[677302](388016 call rank _mt[243] this[164488]))
      unknown call_tmp[677309] "expr temp" "maybe param" "maybe type" "temp"
      (677312 'move' call_tmp[677309](388021 call idxType _mt[243] this[164488]))
      unknown call_tmp[677316] "expr temp" "maybe param" "maybe type" "temp"
      (677319 'move' call_tmp[677316](388026 call dist _mt[243] this[164488]))
      unknown call_tmp[677323] "expr temp" "maybe param" "maybe type" "temp"
      (677326 'move' call_tmp[677323](388031 call parentDom _mt[243] this[164488]))
      unknown call_tmp[677328] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (677331 'move' call_tmp[677328](747990 'new' DefaultSparseDom[378074](?) call_tmp[677302] call_tmp[677309] call_tmp[677316] call_tmp[677323](_chpl_manager = unmanaged[220](?))))
      const copy[164358] "dead at end of block" "const" "insert auto destroy"
      (544249 'init var' copy[164358] call_tmp[677328])
      (164361 'end of statement')
      unknown call_tmp[677333] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (677336 'move' call_tmp[677333](747991 'new' _domain[125908](?) copy[164358]))
      (521724 'move' ret[521714](521723 'deref' call_tmp[677333]))
      gotoReturn _end_dsiLocalSubdomain[521712] _end_dsiLocalSubdomain[521712]
      (482772 'end of statement' copy[164358])
    }
    label _end_dsiLocalSubdomain[521712]
    (521716 return ret[521714])
  }
  type DefaultSparseDom[164378](?) val super[355732]:BaseSparseDomImpl[148004](?) "delay instantiation" "super class" val dist[161620]:unmanaged DefaultDist[415482] unmanaged DefaultDist[415482] val _nnz[161625]:int(64)[13] 0 unknown _indices[161640] "local field"(161638 call chpl__buildArrayRuntimeType(161636 call chpl__ensureDomainExpr nnzDom[146964])(161634 call chpl__buildIndexType rank[148254] idxType[148258]))
  type DefaultSparseDom[378074](?)
  function DefaultSparseArr[165840](?).init[164500](arg _mt[165844]:_MT[238], arg this[165842]:DefaultSparseArr[165840](?), arg eltType[164498]:_any[178](?), param arg rank[164503]:int(64)[13], arg idxType[164506]:_any[178](?), arg dom[164508]:_any[178](?), param arg initElts[164511]:bool[10]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[462314] "temporary of super field" "temp"
    (462316 'move' super_tmp[462314](462313 '.v' this[165842] c"super"))
    (164524 call(164515 call (partial) init _mt[243] super_tmp[462314]) eltType[164498] rank[164503] idxType[164506] dom[164508] initElts[164511])
    (482774 'end of statement')
    unknown tmp[462319] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492504] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[677340] "expr temp" "maybe param" "maybe type" "temp"
      (677343 'move' call_tmp[677340](462321 '.v' this[165842] c"super"))
      (492508 'move' call_type_tmp[492504](462324 'typeof' call_tmp[677340]))
    }
    (462325 'move' tmp[462319] call_type_tmp[492504])
    unknown call_tmp[677345] "maybe param" "maybe type" "temp"
    (677348 'move' call_tmp[677345](462330 'cast' tmp[462319] this[165842]))
    unknown chpl__thisAsParent[462327] "dead at end of block" "insert auto destroy" "temp"
    (544251 'init var' chpl__thisAsParent[462327] call_tmp[677345] tmp[462319])
    (462333 'setcid' chpl__thisAsParent[462327])
    (482775 'end of statement')
    (462335 'setcid' this[165842])
    (521728 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164535](arg _mt[165848]:_MT[238], arg this[165846]:DefaultSparseArr[165840](?), arg ind[164532] :
  (388043 call idxType _mt[243] this[165846])) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521732] "RVV" "temp"
    unknown call_tmp[677352] "expr temp" "maybe param" "maybe type" "temp"
    (677355 'move' call_tmp[677352](164643 call _cond_test 1))
    if call_tmp[677352]
    {
      unknown call_tmp[677359] "expr temp" "maybe param" "maybe type" "temp"
      (677362 'move' call_tmp[677359](361282 call dom _mt[243] this[165846]))
      unknown call_tmp[677366] "expr temp" "maybe param" "maybe type" "temp"
      (677369 'move' call_tmp[677366](164543 call parentDom _mt[243] call_tmp[677359]))
      unknown call_tmp[677373] "expr temp" "maybe param" "maybe type" "temp"
      (677376 'move' call_tmp[677373](164551 call(164546 call (partial) contains _mt[243] call_tmp[677366]) ind[164532]))
      unknown call_tmp[677378] "expr temp" "maybe param" "maybe type" "temp"
      (677381 'move' call_tmp[677378](164552 call ! call_tmp[677373]))
      unknown call_tmp[677383] "expr temp" "maybe param" "maybe type" "temp"
      (677386 'move' call_tmp[677383](164639 call _cond_test call_tmp[677378]))
      if call_tmp[677383]
      {
        unknown call_tmp[677388] "expr temp" "maybe param" "maybe type" "temp"
        (677391 'move' call_tmp[677388](164628 call _cond_test debugDefaultSparse[161611]))
        if call_tmp[677388]
        {
          unknown call_tmp[677393] "expr temp" "maybe param" "maybe type" "temp"
          (677396 'move' call_tmp[677393](361285 call here[90438]))
          unknown call_tmp[677400] "expr temp" "maybe param" "maybe type" "temp"
          (677403 'move' call_tmp[677400](164575 call id _mt[243] call_tmp[677393]))
          (164578 call writeln "On locale " call_tmp[677400])
          (482777 'end of statement')
          (164601 call writeln "In dsiAccess, got index " ind[164532])
          (482778 'end of statement')
          unknown call_tmp[677407] "expr temp" "maybe param" "maybe type" "temp"
          (677410 'move' call_tmp[677407](361289 call dom _mt[243] this[165846]))
          unknown call_tmp[677414] "expr temp" "maybe param" "maybe type" "temp"
          (677417 'move' call_tmp[677414](164623 call parentDom _mt[243] call_tmp[677407]))
          (164626 call writeln "dom.parentDom = " call_tmp[677414])
        }
        (164637 call halt "array index out of bounds: " ind[164532])
      }
    }
    unknown call_tmp[677421] "expr temp" "maybe param" "maybe type" "temp"
    (677424 'move' call_tmp[677421](361294 call dom _mt[243] this[165846]))
    unknown call_tmp[677428] "maybe param" "maybe type" "temp"
    (677431 'move' call_tmp[677428](164660 call(164655 call (partial) find _mt[243] call_tmp[677421]) ind[164532]))
    const tmp[164661] "dead at end of block" "const" "insert auto destroy" "temp"
    (544253 'init var' tmp[164661] call_tmp[677428])
    (164668 call _check_tuple_var_decl tmp[164661] 2)
    (482781 'end of statement')
    unknown call_tmp[677433] "maybe param" "maybe type" "temp"
    (677436 'move' call_tmp[677433](164662 call tmp[164661] 0))
    const found[164649] "dead at end of block" "const" "insert auto destroy"
    (544255 'init var' found[164649] call_tmp[677433])
    unknown call_tmp[677438] "maybe param" "maybe type" "temp"
    (677441 'move' call_tmp[677438](164665 call tmp[164661] 1))
    const loc[164651] "dead at end of block" "const" "insert auto destroy"
    (544257 'init var' loc[164651] call_tmp[677438])
    (164673 'end of statement')
    unknown call_tmp[677443] "expr temp" "maybe param" "maybe type" "temp"
    (677446 'move' call_tmp[677443](164703 call _cond_test found[164649]))
    if call_tmp[677443]
    {
      unknown call_tmp[677450] "expr temp" "maybe param" "maybe type" "temp"
      (677453 'move' call_tmp[677450](164678 call(388060 call (partial) data _mt[243] this[165846]) loc[164651]))
      (521737 'move' ret[521732](521736 'addr of' call_tmp[677450]))
      gotoReturn _end_dsiAccess[521730] _end_dsiAccess[521730]
      (482782 'end of statement' loc[164651])
    }
    {
      (164701 call halt "attempting to assign a 'zero' value in a sparse array: " ind[164532])
    }
    label _end_dsiAccess[521730]
    (521734 return ret[521732])
  }
  where {
    unknown call_tmp[677457] "expr temp" "maybe param" "maybe type" "temp"
    (677460 'move' call_tmp[677457](388048 call rank _mt[243] this[165846]))
    (164539 call == call_tmp[677457] 1)
  }
  function DefaultSparseArr[165840](?).dsiAccess[164718](arg _mt[165852]:_MT[238], arg this[165850]:DefaultSparseArr[165840](?), arg ind[164715] :
  (388067 call idxType _mt[243] this[165850])) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521743] "RVV" "temp"
    unknown call_tmp[677464] "expr temp" "maybe param" "maybe type" "temp"
    (677467 'move' call_tmp[677464](164748 call _cond_test 1))
    if call_tmp[677464]
    {
      unknown call_tmp[677471] "expr temp" "maybe param" "maybe type" "temp"
      (677474 'move' call_tmp[677471](361299 call dom _mt[243] this[165850]))
      unknown call_tmp[677478] "expr temp" "maybe param" "maybe type" "temp"
      (677481 'move' call_tmp[677478](164726 call parentDom _mt[243] call_tmp[677471]))
      unknown call_tmp[677485] "expr temp" "maybe param" "maybe type" "temp"
      (677488 'move' call_tmp[677485](164734 call(164729 call (partial) contains _mt[243] call_tmp[677478]) ind[164715]))
      unknown call_tmp[677490] "expr temp" "maybe param" "maybe type" "temp"
      (677493 'move' call_tmp[677490](164735 call ! call_tmp[677485]))
      unknown call_tmp[677495] "expr temp" "maybe param" "maybe type" "temp"
      (677498 'move' call_tmp[677495](164743 call _cond_test call_tmp[677490]))
      if call_tmp[677495]
      {
        (164741 call halt "array index out of bounds: " ind[164715])
      }
    }
    unknown call_tmp[677502] "expr temp" "maybe param" "maybe type" "temp"
    (677505 'move' call_tmp[677502](361304 call dom _mt[243] this[165850]))
    unknown call_tmp[677509] "maybe param" "maybe type" "temp"
    (677512 'move' call_tmp[677509](164765 call(164760 call (partial) find _mt[243] call_tmp[677502]) ind[164715]))
    const tmp[164766] "dead at end of block" "const" "insert auto destroy" "temp"
    (544259 'init var' tmp[164766] call_tmp[677509])
    (164773 call _check_tuple_var_decl tmp[164766] 2)
    (482786 'end of statement')
    unknown call_tmp[677514] "maybe param" "maybe type" "temp"
    (677517 'move' call_tmp[677514](164767 call tmp[164766] 0))
    const found[164754] "dead at end of block" "const" "insert auto destroy"
    (544261 'init var' found[164754] call_tmp[677514])
    unknown call_tmp[677519] "maybe param" "maybe type" "temp"
    (677522 'move' call_tmp[677519](164770 call tmp[164766] 1))
    const loc[164756] "dead at end of block" "const" "insert auto destroy"
    (544263 'init var' loc[164756] call_tmp[677519])
    (164778 'end of statement')
    unknown call_tmp[677524] "expr temp" "maybe param" "maybe type" "temp"
    (677527 'move' call_tmp[677524](164789 call _cond_test found[164754]))
    if call_tmp[677524]
    {
      unknown call_tmp[677531] "expr temp" "maybe param" "maybe type" "temp"
      (677534 'move' call_tmp[677531](164783 call(388082 call (partial) data _mt[243] this[165850]) loc[164756]))
      (521748 'move' ret[521743](521747 'addr of' call_tmp[677531]))
      gotoReturn _end_dsiAccess[521741] _end_dsiAccess[521741]
      (482787 'end of statement' loc[164756])
    }
    {
      unknown call_tmp[677538] "expr temp" "maybe param" "maybe type" "temp"
      (677541 'move' call_tmp[677538](388088 call irv _mt[243] this[165850]))
      (521753 'move' ret[521743](521752 'addr of' call_tmp[677538]))
      gotoReturn _end_dsiAccess[521741] _end_dsiAccess[521741]
    }
    label _end_dsiAccess[521741]
    (521745 return ret[521743])
  }
  where {
    unknown call_tmp[677545] "expr temp" "maybe param" "maybe type" "temp"
    (677548 'move' call_tmp[677545](388072 call rank _mt[243] this[165850]))
    (164722 call == call_tmp[677545] 1)
  }
  function DefaultSparseArr[165840](?).dsiAccess[164807](arg _mt[165856]:_MT[238], arg this[165854]:DefaultSparseArr[165840](?), arg ind[164804] :
  unknown call_tmp[677552] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521759] "RVV" "temp"
    unknown call_tmp[677564] "expr temp" "maybe param" "maybe type" "temp"
    (677567 'move' call_tmp[677564](164833 call _cond_test 1))
    if call_tmp[677564]
    {
      unknown call_tmp[677571] "expr temp" "maybe param" "maybe type" "temp"
      (677574 'move' call_tmp[677571](361309 call dom _mt[243] this[165854]))
      unknown call_tmp[677578] "expr temp" "maybe param" "maybe type" "temp"
      (677581 'move' call_tmp[677578](164811 call parentDom _mt[243] call_tmp[677571]))
      unknown call_tmp[677585] "expr temp" "maybe param" "maybe type" "temp"
      (677588 'move' call_tmp[677585](164819 call(164814 call (partial) contains _mt[243] call_tmp[677578]) ind[164804]))
      unknown call_tmp[677590] "expr temp" "maybe param" "maybe type" "temp"
      (677593 'move' call_tmp[677590](164820 call ! call_tmp[677585]))
      unknown call_tmp[677595] "expr temp" "maybe param" "maybe type" "temp"
      (677598 'move' call_tmp[677595](164828 call _cond_test call_tmp[677590]))
      if call_tmp[677595]
      {
        (164826 call halt "array index out of bounds: " ind[164804])
      }
    }
    unknown call_tmp[677602] "expr temp" "maybe param" "maybe type" "temp"
    (677605 'move' call_tmp[677602](361314 call dom _mt[243] this[165854]))
    unknown call_tmp[677609] "maybe param" "maybe type" "temp"
    (677612 'move' call_tmp[677609](164850 call(164845 call (partial) find _mt[243] call_tmp[677602]) ind[164804]))
    const tmp[164851] "dead at end of block" "const" "insert auto destroy" "temp"
    (544265 'init var' tmp[164851] call_tmp[677609])
    (164858 call _check_tuple_var_decl tmp[164851] 2)
    (482791 'end of statement')
    unknown call_tmp[677614] "maybe param" "maybe type" "temp"
    (677617 'move' call_tmp[677614](164852 call tmp[164851] 0))
    const found[164839] "dead at end of block" "const" "insert auto destroy"
    (544267 'init var' found[164839] call_tmp[677614])
    unknown call_tmp[677619] "maybe param" "maybe type" "temp"
    (677622 'move' call_tmp[677619](164855 call tmp[164851] 1))
    const loc[164841] "dead at end of block" "const" "insert auto destroy"
    (544269 'init var' loc[164841] call_tmp[677619])
    (164863 'end of statement')
    unknown call_tmp[677624] "expr temp" "maybe param" "maybe type" "temp"
    (677627 'move' call_tmp[677624](164877 call _cond_test found[164839]))
    if call_tmp[677624]
    {
      unknown call_tmp[677631] "expr temp" "maybe param" "maybe type" "temp"
      (677634 'move' call_tmp[677631](164868 call(388108 call (partial) data _mt[243] this[165854]) loc[164841]))
      (521764 'move' ret[521759](521763 'addr of' call_tmp[677631]))
      gotoReturn _end_dsiAccess[521757] _end_dsiAccess[521757]
      (482792 'end of statement' loc[164841])
    }
    {
      (164875 call halt "attempting to assign a 'zero' value in a sparse array: " ind[164804])
    }
    label _end_dsiAccess[521757]
    (521761 return ret[521759])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164894](arg _mt[165860]:_MT[238], arg this[165858]:DefaultSparseArr[165840](?), arg ind[164891] :
  unknown call_tmp[677638] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521770] "RVV" "temp"
    unknown call_tmp[677650] "expr temp" "maybe param" "maybe type" "temp"
    (677653 'move' call_tmp[677650](164924 call _cond_test 1))
    if call_tmp[677650]
    {
      unknown call_tmp[677657] "expr temp" "maybe param" "maybe type" "temp"
      (677660 'move' call_tmp[677657](361319 call dom _mt[243] this[165858]))
      unknown call_tmp[677664] "expr temp" "maybe param" "maybe type" "temp"
      (677667 'move' call_tmp[677664](164902 call parentDom _mt[243] call_tmp[677657]))
      unknown call_tmp[677671] "expr temp" "maybe param" "maybe type" "temp"
      (677674 'move' call_tmp[677671](164910 call(164905 call (partial) contains _mt[243] call_tmp[677664]) ind[164891]))
      unknown call_tmp[677676] "expr temp" "maybe param" "maybe type" "temp"
      (677679 'move' call_tmp[677676](164911 call ! call_tmp[677671]))
      unknown call_tmp[677681] "expr temp" "maybe param" "maybe type" "temp"
      (677684 'move' call_tmp[677681](164919 call _cond_test call_tmp[677676]))
      if call_tmp[677681]
      {
        (164917 call halt "array index out of bounds: " ind[164891])
      }
    }
    unknown call_tmp[677688] "expr temp" "maybe param" "maybe type" "temp"
    (677691 'move' call_tmp[677688](361324 call dom _mt[243] this[165858]))
    unknown call_tmp[677695] "maybe param" "maybe type" "temp"
    (677698 'move' call_tmp[677695](164941 call(164936 call (partial) find _mt[243] call_tmp[677688]) ind[164891]))
    const tmp[164942] "dead at end of block" "const" "insert auto destroy" "temp"
    (544271 'init var' tmp[164942] call_tmp[677695])
    (164949 call _check_tuple_var_decl tmp[164942] 2)
    (482796 'end of statement')
    unknown call_tmp[677700] "maybe param" "maybe type" "temp"
    (677703 'move' call_tmp[677700](164943 call tmp[164942] 0))
    const found[164930] "dead at end of block" "const" "insert auto destroy"
    (544273 'init var' found[164930] call_tmp[677700])
    unknown call_tmp[677705] "maybe param" "maybe type" "temp"
    (677708 'move' call_tmp[677705](164946 call tmp[164942] 1))
    const loc[164932] "dead at end of block" "const" "insert auto destroy"
    (544275 'init var' loc[164932] call_tmp[677705])
    (164954 'end of statement')
    unknown call_tmp[677710] "expr temp" "maybe param" "maybe type" "temp"
    (677713 'move' call_tmp[677710](164965 call _cond_test found[164930]))
    if call_tmp[677710]
    {
      unknown call_tmp[677717] "expr temp" "maybe param" "maybe type" "temp"
      (677720 'move' call_tmp[677717](164959 call(388135 call (partial) data _mt[243] this[165858]) loc[164932]))
      (521775 'move' ret[521770](521774 'deref' call_tmp[677717]))
      gotoReturn _end_dsiAccess[521768] _end_dsiAccess[521768]
      (482797 'end of statement' loc[164932])
    }
    {
      unknown call_tmp[677724] "expr temp" "maybe param" "maybe type" "temp"
      (677727 'move' call_tmp[677724](388141 call irv _mt[243] this[165858]))
      (521780 'move' ret[521770](521779 'deref' call_tmp[677724]))
      gotoReturn _end_dsiAccess[521768] _end_dsiAccess[521768]
    }
    label _end_dsiAccess[521768]
    (521772 return ret[521770])
  }
  where {
    unknown call_tmp[677731] "expr temp" "maybe param" "maybe type" "temp"
    (677734 'move' call_tmp[677731](388125 call eltType _mt[243] this[165858]))
    (164899 call shouldReturnRvalueByValue call_tmp[677731])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164983](arg _mt[165864]:_MT[238], arg this[165862]:DefaultSparseArr[165840](?), arg ind[164980] :
  unknown call_tmp[677738] "expr temp" "maybe param" "maybe type" "temp") const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521786] "RVV" "temp"
    unknown call_tmp[677750] "expr temp" "maybe param" "maybe type" "temp"
    (677753 'move' call_tmp[677750](165013 call _cond_test 1))
    if call_tmp[677750]
    {
      unknown call_tmp[677757] "expr temp" "maybe param" "maybe type" "temp"
      (677760 'move' call_tmp[677757](361329 call dom _mt[243] this[165862]))
      unknown call_tmp[677764] "expr temp" "maybe param" "maybe type" "temp"
      (677767 'move' call_tmp[677764](164991 call parentDom _mt[243] call_tmp[677757]))
      unknown call_tmp[677771] "expr temp" "maybe param" "maybe type" "temp"
      (677774 'move' call_tmp[677771](164999 call(164994 call (partial) contains _mt[243] call_tmp[677764]) ind[164980]))
      unknown call_tmp[677776] "expr temp" "maybe param" "maybe type" "temp"
      (677779 'move' call_tmp[677776](165000 call ! call_tmp[677771]))
      unknown call_tmp[677781] "expr temp" "maybe param" "maybe type" "temp"
      (677784 'move' call_tmp[677781](165008 call _cond_test call_tmp[677776]))
      if call_tmp[677781]
      {
        (165006 call halt "array index out of bounds: " ind[164980])
      }
    }
    unknown call_tmp[677788] "expr temp" "maybe param" "maybe type" "temp"
    (677791 'move' call_tmp[677788](361334 call dom _mt[243] this[165862]))
    unknown call_tmp[677795] "maybe param" "maybe type" "temp"
    (677798 'move' call_tmp[677795](165030 call(165025 call (partial) find _mt[243] call_tmp[677788]) ind[164980]))
    const tmp[165031] "dead at end of block" "const" "insert auto destroy" "temp"
    (544277 'init var' tmp[165031] call_tmp[677795])
    (165038 call _check_tuple_var_decl tmp[165031] 2)
    (482801 'end of statement')
    unknown call_tmp[677800] "maybe param" "maybe type" "temp"
    (677803 'move' call_tmp[677800](165032 call tmp[165031] 0))
    const found[165019] "dead at end of block" "const" "insert auto destroy"
    (544279 'init var' found[165019] call_tmp[677800])
    unknown call_tmp[677805] "maybe param" "maybe type" "temp"
    (677808 'move' call_tmp[677805](165035 call tmp[165031] 1))
    const loc[165021] "dead at end of block" "const" "insert auto destroy"
    (544281 'init var' loc[165021] call_tmp[677805])
    (165043 'end of statement')
    unknown call_tmp[677810] "expr temp" "maybe param" "maybe type" "temp"
    (677813 'move' call_tmp[677810](165054 call _cond_test found[165019]))
    if call_tmp[677810]
    {
      unknown call_tmp[677817] "expr temp" "maybe param" "maybe type" "temp"
      (677820 'move' call_tmp[677817](165048 call(388166 call (partial) data _mt[243] this[165862]) loc[165021]))
      (521791 'move' ret[521786](521790 'addr of' call_tmp[677817]))
      gotoReturn _end_dsiAccess[521784] _end_dsiAccess[521784]
      (482802 'end of statement' loc[165021])
    }
    {
      unknown call_tmp[677824] "expr temp" "maybe param" "maybe type" "temp"
      (677827 'move' call_tmp[677824](388172 call irv _mt[243] this[165862]))
      (521796 'move' ret[521786](521795 'addr of' call_tmp[677824]))
      gotoReturn _end_dsiAccess[521784] _end_dsiAccess[521784]
    }
    label _end_dsiAccess[521784]
    (521788 return ret[521786])
  }
  where {
    unknown call_tmp[677831] "expr temp" "maybe param" "maybe type" "temp"
    (677834 'move' call_tmp[677831](388156 call eltType _mt[243] this[165862]))
    (164988 call shouldReturnRvalueByConstRef call_tmp[677831])
  }
  function DefaultSparseArr[165840](?).these[165065](arg _mt[165868]:_MT[238], arg this[165866]:DefaultSparseArr[165840](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521802] "RVV" "temp"
    {
      unknown _indexOfInterest[165081] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165082] "expr temp" "temp"
      unknown call_tmp[677838] "expr temp" "maybe param" "maybe type" "temp"
      (677841 'move' call_tmp[677838](361339 call dom _mt[243] this[165866]))
      unknown call_tmp[677845] "expr temp" "maybe param" "maybe type" "temp"
      (677848 'move' call_tmp[677845](165096 call _nnz _mt[243] call_tmp[677838]))
      unknown call_tmp[677850] "expr temp" "maybe param" "maybe type" "temp"
      (677853 'move' call_tmp[677850](165099 call chpl_direct_range_iter 1 call_tmp[677845] 1))
      (165091 'move' _iterator[165082](165089 call _getIterator call_tmp[677850]))
      Defer
      {
        {
          (165115 call _freeIterator _iterator[165082])
        }
      }
      { scopeless type
        (165104 'move' _indexOfInterest[165081](165101 call iteratorIndex _iterator[165082]))
      }
      ForLoop[165083]
      {
        unknown i[165108] "index var" "insert auto destroy"
        (482806 'end of statement')
        (165110 'move' i[165108] _indexOfInterest[165081])
        (482807 'end of statement' i[165108])
        unknown yret[521806] "YVV" "temp"
        unknown call_tmp[677857] "expr temp" "maybe param" "maybe type" "temp"
        (677860 'move' call_tmp[677857](165078 call(388177 call (partial) data _mt[243] this[165866]) i[165108]))
        (521809 'move' yret[521806](521808 'addr of' call_tmp[677857]))
        (521811 yield yret[521806])
        (482809 'end of statement' i[165108])
        label _continueLabel[165086]
        _indexOfInterest[165081]
        _iterator[165082]
      }
      label _breakLabel[165087]
    }
    (521804 return ret[521802])
  }
  function DefaultSparseArr[165840](?).these[165131](arg _mt[165872]:_MT[238], arg this[165870]:DefaultSparseArr[165840](?), param arg tag[165128]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521815] "RVV" "temp"
    unknown call_tmp[677864] "expr temp" "maybe param" "maybe type" "temp"
    (677867 'move' call_tmp[677864](361345 call dom _mt[243] this[165870]))
    unknown call_tmp[677871] "maybe param" "maybe type" "temp"
    (677874 'move' call_tmp[677871](165141 call _nnz _mt[243] call_tmp[677864]))
    const numElems[165144] "dead at end of block" "const" "insert auto destroy"
    (544283 'init var' numElems[165144] call_tmp[677871])
    (165147 'end of statement')
    unknown call_tmp[677876] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (677879 'move' call_tmp[677876](165154 'typeof' numElems[165144]))
    unknown call_tmp[677881] "expr temp" "maybe param" "maybe type" "temp"
    (677884 'move' call_tmp[677881](165152 call _computeNumChunks numElems[165144]))
    unknown call_tmp[677886] "maybe param" "maybe type" "temp"
    (677889 'move' call_tmp[677886](165155 call _cast call_tmp[677876] call_tmp[677881]))
    const numChunks[165157] "dead at end of block" "const" "insert auto destroy"
    (544285 'init var' numChunks[165157] call_tmp[677886])
    (165160 'end of statement' numElems[165144] numElems[165144])
    unknown call_tmp[677891] "expr temp" "maybe param" "maybe type" "temp"
    (677894 'move' call_tmp[677891](165188 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[677891]
    {
      (165185 call writeln "DefaultSparseArr standalone: " numChunks[165157] " chunks, " numElems[165144] " elems")
      (482813 'end of statement' numChunks[165157] numElems[165144])
    }
    unknown call_tmp[677896] "expr temp" "maybe param" "maybe type" "temp"
    (677899 'move' call_tmp[677896](165194 call <= numChunks[165157] 1))
    unknown call_tmp[677901] "expr temp" "maybe param" "maybe type" "temp"
    (677904 'move' call_tmp[677901](165498 call _cond_test call_tmp[677896]))
    if call_tmp[677901]
    {
      {
        unknown _indexOfInterest[165208] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[165209] "expr temp" "temp"
        unknown call_tmp[677906] "expr temp" "maybe param" "maybe type" "temp"
        (677909 'move' call_tmp[677906](165223 call chpl_direct_range_iter 1 numElems[165144] 1))
        (165218 'move' _iterator[165209](165216 call _getIterator call_tmp[677906]))
        Defer
        {
          {
            (165239 call _freeIterator _iterator[165209])
          }
        }
        { scopeless type
          (165228 'move' _indexOfInterest[165208](165225 call iteratorIndex _iterator[165209]))
        }
        ForLoop[165210]
        {
          unknown i[165232] "index var" "insert auto destroy"
          (482817 'end of statement')
          (165234 'move' i[165232] _indexOfInterest[165208])
          (482818 'end of statement' i[165232])
          {
            unknown yret[521819] "YVV" "temp"
            unknown call_tmp[677913] "expr temp" "maybe param" "maybe type" "temp"
            (677916 'move' call_tmp[677913](165204 call(388191 call (partial) data _mt[243] this[165870]) i[165232]))
            (521822 'move' yret[521819](521821 'addr of' call_tmp[677913]))
            (521824 yield yret[521819])
            (482820 'end of statement' i[165232])
          }
          label _continueLabel[165213]
          _indexOfInterest[165208]
          _iterator[165209]
        }
        label _breakLabel[165214]
      }
    }
    {
      {
        unknown tmpIter[165301] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[677918] "expr temp" "maybe param" "maybe type" "temp"
        (677921 'move' call_tmp[677918](165254 call chpl_build_bounded_range 1 numElems[165144]))
        (165304 'move' tmpIter[165301](165258 call chunks module=[255] RangeChunk[266477] call_tmp[677918] numChunks[165157]))
        unknown isRngDomArr[165478] "maybe param" "temp"
        unknown tmp[428324] "maybe param" "temp"
        (428335 'move' tmp[428324](165480 call isBoundedRange tmpIter[165301]))
        unknown call_tmp[677923] "expr temp" "maybe param" "maybe type" "temp"
        (677926 'move' call_tmp[677923](428337 call _cond_invalid tmp[428324]))
        if call_tmp[677923]
        {
          (428340 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570411] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570412] "maybe param" "temp"
        unknown call_tmp[677928] "expr temp" "maybe param" "maybe type" "temp"
        (677931 'move' call_tmp[677928](428325 call isTrue tmp[428324]))
        (570417 'move' tmp[570412](570415 call _cond_test call_tmp[677928]))
        if tmp[570412]
        {
          (570422 'move' tmp[570411](570419 '_paramFoldLogical' tmp[570412] 1))
        }
        {
          unknown tmp[428345] "maybe param" "temp"
          (428356 'move' tmp[428345](165483 call isDomain tmpIter[165301]))
          unknown call_tmp[677933] "expr temp" "maybe param" "maybe type" "temp"
          (677936 'move' call_tmp[677933](428358 call _cond_invalid tmp[428345]))
          if call_tmp[677933]
          {
            (428361 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570384] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570385] "maybe param" "temp"
          unknown call_tmp[677938] "expr temp" "maybe param" "maybe type" "temp"
          (677941 'move' call_tmp[677938](428346 call isTrue tmp[428345]))
          (570390 'move' tmp[570385](570388 call _cond_test call_tmp[677938]))
          if tmp[570385]
          {
            (570395 'move' tmp[570384](570392 '_paramFoldLogical' tmp[570385] 1))
          }
          {
            unknown tmp[570397] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[677943] "expr temp" "maybe param" "maybe type" "temp"
            (677946 'move' call_tmp[677943](165486 call isArray tmpIter[165301]))
            (570399 'move' tmp[570397](428350 call isTrue call_tmp[677943]))
            (570404 'move' tmp[570384](570401 '_paramFoldLogical' tmp[570385] tmp[570397]))
          }
          unknown tmp[570424] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570426 'move' tmp[570424](428329 call isTrue tmp[570384]))
          (570431 'move' tmp[570411](570428 '_paramFoldLogical' tmp[570412] tmp[570424]))
        }
        (165493 'move' isRngDomArr[165478] tmp[570411])
        if isRngDomArr[165478]
        {
          const _coforallCount[165345] "const" "end count" "temp"
          (165414 'move' _coforallCount[165345](165411 call _endCountAlloc 1))
          unknown numTasks[165346] "temp"
          (165398 'move' numTasks[165346](165394 call size _mt[243] tmpIter[165301]))
          (165389 call _upEndCount _coforallCount[165345] 1 numTasks[165346])
          (482823 'end of statement')
          (165386 call chpl_resetTaskSpawn numTasks[165346])
          (482824 'end of statement')
          unknown _indexOfInterest[165353] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165354] "expr temp" "temp"
          (165363 'move' _iterator[165354](165361 call _getIterator tmpIter[165301]))
          Defer
          {
            {
              (165379 call _freeIterator _iterator[165354])
            }
          }
          { scopeless type
            (165368 'move' _indexOfInterest[165353](165365 call iteratorIndex _iterator[165354]))
          }
          ForLoop[165355]
          {
            unknown chunk[165372] "coforall index var" "index var" "insert auto destroy"
            (482826 'end of statement')
            (165374 'move' chunk[165372] _indexOfInterest[165353])
            (482827 'end of statement' chunk[165372])
            {
              {
                unknown _indexOfInterest[165307] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[165309] "expr temp" "temp"
                (165311 'move' _iterator[165309](165314 call _getIterator chunk[165372]))
                Defer
                {
                  {
                    (165318 call _freeIterator _iterator[165309])
                  }
                }
                { scopeless type
                  (165322 'move' _indexOfInterest[165307](165325 call iteratorIndex _iterator[165309]))
                }
                ForLoop[165327]
                {
                  unknown i[165330] "index var" "insert auto destroy"
                  (482830 'end of statement')
                  (165332 'move' i[165330] _indexOfInterest[165307])
                  (482831 'end of statement' i[165330])
                  unknown yret[521826] "YVV" "temp"
                  unknown call_tmp[677952] "expr temp" "maybe param" "maybe type" "temp"
                  (677955 'move' call_tmp[677952](165338 call(388208 call (partial) data _mt[243] this[165870]) i[165330]))
                  (521829 'move' yret[521826](521828 'addr of' call_tmp[677952]))
                  (521831 yield yret[521826])
                  (482833 'end of statement' i[165330])
                  label _continueLabel[165340]
                  _indexOfInterest[165307]
                  _iterator[165309]
                }
                label _breakLabel[165342]
              }
              (165348 call _downEndCount _coforallCount[165345] nil[44])
              (165347 'coforall loop')
            }
            label _continueLabel[165358]
            _indexOfInterest[165353]
            _iterator[165354]
          }
          label _breakLabel[165359]
          Defer
          {
            {
              (165401 call _endCountFree _coforallCount[165345])
            }
          }
          (165406 call _waitEndCount _coforallCount[165345] 1 numTasks[165346])
        }
        {
          const _coforallCount[165418] "const" "end count" "temp"
          (165475 'move' _coforallCount[165418](165472 call _endCountAlloc 1))
          unknown _indexOfInterest[165426] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165427] "expr temp" "temp"
          (165436 'move' _iterator[165427](165434 call _getIterator tmpIter[165301]))
          Defer
          {
            {
              (165452 call _freeIterator _iterator[165427])
            }
          }
          { scopeless type
            (165441 'move' _indexOfInterest[165426](165438 call iteratorIndex _iterator[165427]))
          }
          ForLoop[165428]
          {
            unknown chunk[165445] "coforall index var" "index var" "insert auto destroy"
            (482839 'end of statement')
            (165447 'move' chunk[165445] _indexOfInterest[165426])
            (482840 'end of statement' chunk[165445])
            (165459 call _upEndCount _coforallCount[165418] 1)
            (482842 'end of statement')
            {
              {
                unknown _indexOfInterest[165267] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[165268] "expr temp" "temp"
                (165277 'move' _iterator[165268](165275 call _getIterator chunk[165445]))
                Defer
                {
                  {
                    (165293 call _freeIterator _iterator[165268])
                  }
                }
                { scopeless type
                  (165282 'move' _indexOfInterest[165267](165279 call iteratorIndex _iterator[165268]))
                }
                ForLoop[165269]
                {
                  unknown i[165286] "index var" "insert auto destroy"
                  (482844 'end of statement')
                  (165288 'move' i[165286] _indexOfInterest[165267])
                  (482845 'end of statement' i[165286])
                  unknown yret[521833] "YVV" "temp"
                  unknown call_tmp[677959] "expr temp" "maybe param" "maybe type" "temp"
                  (677962 'move' call_tmp[677959](165264 call(388201 call (partial) data _mt[243] this[165870]) i[165286]))
                  (521836 'move' yret[521833](521835 'addr of' call_tmp[677959]))
                  (521838 yield yret[521833])
                  (482847 'end of statement' i[165286])
                  label _continueLabel[165272]
                  _indexOfInterest[165267]
                  _iterator[165268]
                }
                label _breakLabel[165273]
              }
              (165421 call _downEndCount _coforallCount[165418] nil[44])
              (165420 'coforall loop')
            }
            label _continueLabel[165431]
            _indexOfInterest[165426]
            _iterator[165427]
          }
          label _breakLabel[165432]
          Defer
          {
            {
              (165463 call _endCountFree _coforallCount[165418])
            }
          }
          (165468 call _waitEndCount _coforallCount[165418] 1)
        }
        (361349 'referenced modules list' RangeChunk[266477])
      }
    }
    (521817 return ret[521815])
  }
  where {
    (165138 call == tag[165128] standalone[451])
  }
  function DefaultSparseArr[165840](?).these[165511](arg _mt[165876]:_MT[238], arg this[165874]:DefaultSparseArr[165840](?), param arg tag[165508]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521842] "RVV" "temp"
    {
      unknown _indexOfInterest[165531] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165532] "expr temp" "temp"
      unknown call_tmp[677966] "expr temp" "maybe param" "maybe type" "temp"
      (677969 'move' call_tmp[677966](361357 call dom _mt[243] this[165874]))
      unknown call_tmp[677973] "expr temp" "maybe param" "maybe type" "temp"
      (677976 'move' call_tmp[677973](165527 call(165522 call (partial) these _mt[243] call_tmp[677966]) tag[165508]))
      (165541 'move' _iterator[165532](165539 call _getIterator call_tmp[677973]))
      Defer
      {
        {
          (165558 call _freeIterator _iterator[165532])
        }
      }
      { scopeless type
        (165547 'move' _indexOfInterest[165531](165544 call iteratorIndex _iterator[165532]))
      }
      ForLoop[165533]
      {
        unknown followThis[165551] "index var" "insert auto destroy"
        (482853 'end of statement')
        (165553 'move' followThis[165551] _indexOfInterest[165531])
        (482854 'end of statement' followThis[165551])
        unknown yret[521846] "YVV" "temp"
        (521849 'move' yret[521846](521848 'deref' followThis[165551]))
        (521851 yield yret[521846])
        (482856 'end of statement' followThis[165551])
        label _continueLabel[165536]
        _indexOfInterest[165531]
        _iterator[165532]
      }
      label _breakLabel[165537]
    }
    (521844 return ret[521842])
  }
  where {
    (165518 call == tag[165508] leader[447])
  }
  function DefaultSparseArr[165840](?).these[165575](arg _mt[165880]:_MT[238], arg this[165878]:DefaultSparseArr[165840](?), param arg tag[165572]:iterKind[453], arg followThis[165583]:_tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521855] "RVV" "temp"
    unknown tmp[165601] "dead at end of block" "insert auto destroy" "temp"
    (544287 'init var' tmp[165601] followThis[165583])
    (165611 call _check_tuple_var_decl tmp[165601] 3)
    (482858 'end of statement')
    unknown call_tmp[677978] "maybe param" "maybe type" "temp"
    (677981 'move' call_tmp[677978](165602 call tmp[165601] 0))
    unknown followThisDom[165593] "dead at end of block" "insert auto destroy"
    (544289 'init var' followThisDom[165593] call_tmp[677978])
    unknown call_tmp[677983] "maybe param" "maybe type" "temp"
    (677986 'move' call_tmp[677983](165605 call tmp[165601] 1))
    unknown startIx[165595] "dead at end of block" "insert auto destroy"
    (544291 'init var' startIx[165595] call_tmp[677983])
    unknown call_tmp[677988] "maybe param" "maybe type" "temp"
    (677991 'move' call_tmp[677988](165608 call tmp[165601] 2))
    unknown endIx[165597] "dead at end of block" "insert auto destroy"
    (544293 'init var' endIx[165597] call_tmp[677988])
    (165616 'end of statement')
    unknown call_tmp[677995] "expr temp" "maybe param" "maybe type" "temp"
    (677998 'move' call_tmp[677995](165620 call dom _mt[243] this[165878]))
    unknown call_tmp[678000] "expr temp" "maybe param" "maybe type" "temp"
    (678003 'move' call_tmp[678000](165623 call != followThisDom[165593] call_tmp[677995]))
    unknown call_tmp[678005] "expr temp" "maybe param" "maybe type" "temp"
    (678008 'move' call_tmp[678005](165646 call _cond_test call_tmp[678000]))
    if call_tmp[678005]
    {
      (165644 call halt "Sparse arrays can't be zippered with anything other than their domains and sibling arrays")
    }
    unknown call_tmp[678010] "expr temp" "maybe param" "maybe type" "temp"
    (678013 'move' call_tmp[678010](165676 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[678010]
    {
      (165674 call writeln "DefaultSparseArr follower: " startIx[165595] ".." endIx[165597])
      (482860 'end of statement' startIx[165595] endIx[165597])
    }
    {
      unknown _indexOfInterest[165692] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165693] "expr temp" "temp"
      unknown call_tmp[678015] "expr temp" "maybe param" "maybe type" "temp"
      (678018 'move' call_tmp[678015](165707 call chpl_direct_range_iter startIx[165595] endIx[165597] 1))
      (165702 'move' _iterator[165693](165700 call _getIterator call_tmp[678015]))
      Defer
      {
        {
          (165723 call _freeIterator _iterator[165693])
        }
      }
      { scopeless type
        (165712 'move' _indexOfInterest[165692](165709 call iteratorIndex _iterator[165693]))
      }
      ForLoop[165694]
      {
        unknown i[165716] "index var" "insert auto destroy"
        (482864 'end of statement')
        (165718 'move' i[165716] _indexOfInterest[165692])
        (482865 'end of statement' i[165716])
        unknown yret[521859] "YVV" "temp"
        unknown call_tmp[678022] "expr temp" "maybe param" "maybe type" "temp"
        (678025 'move' call_tmp[678022](165689 call(388225 call (partial) data _mt[243] this[165878]) i[165716]))
        (521862 'move' yret[521859](521861 'addr of' call_tmp[678022]))
        (521864 yield yret[521859])
        (482867 'end of statement' i[165716])
        label _continueLabel[165697]
        _indexOfInterest[165692]
        _iterator[165693]
      }
      label _breakLabel[165698]
    }
    (521857 return ret[521855])
  }
  where {
    unknown call_tmp[678027] "expr temp" "maybe param" "maybe type" "temp"
    (678030 'move' call_tmp[678027](165591 call == tag[165572] follower[449]))
    unknown call_tmp[678032] "expr temp" "maybe param" "maybe type" "temp"
    (678035 'move' call_tmp[678032](462341 'query' followThis[165583] c"size"))
    unknown call_tmp[678037] "expr temp" "maybe param" "maybe type" "temp"
    (678040 'move' call_tmp[678037](462342 call == 3 call_tmp[678032]))
    (462344 call & call_tmp[678027] call_tmp[678037])
  }
  function DefaultSparseArr[165840](?).these[165739](arg _mt[165884]:_MT[238], arg this[165882]:DefaultSparseArr[165840](?), param arg tag[165736]:iterKind[453], arg followThis[165741]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521868] "RVV" "temp"
    (165753 call compilerError "Sparse iterators can't yet be zippered with others")
    (482869 'end of statement')
    unknown yret[521872] "YVV" "temp"
    (521875 'move' yret[521872](521874 'deref' 0))
    (521877 yield yret[521872])
    (521870 return ret[521868])
  }
  where {
    (165748 call == tag[165736] follower[449])
  }
  function DefaultSparseArr[165840](?).dsiTargetLocales[165764](arg _mt[165888]:_MT[238], arg this[165886]:DefaultSparseArr[165840](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (165785 call compilerError "targetLocales is unsupported by sparse domains")
    (521879 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiHasSingleLocalSubdomain[165792](arg _mt[165892]:_MT[238], arg this[165890]:DefaultSparseArr[165840](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[521883] "RVV" "param" "temp"
    (521888 'move' ret[521883](521887 'deref' 1))
    (521885 return ret[521883])
  }
  function DefaultSparseArr[165840](?).dsiLocalSubdomain[165806](arg _mt[165896]:_MT[238], arg this[165894]:DefaultSparseArr[165840](?), arg loc[165803]:locale[28]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521892] "RVV" "temp"
    unknown call_tmp[678042] "expr temp" "maybe param" "maybe type" "temp"
    (678045 'move' call_tmp[678042](165809 '_wide_get_locale' this[165894]))
    unknown call_tmp[678047] "expr temp" "maybe param" "maybe type" "temp"
    (678050 'move' call_tmp[678047](165810 call chpl_localeID_to_locale call_tmp[678042]))
    unknown call_tmp[678052] "expr temp" "maybe param" "maybe type" "temp"
    (678055 'move' call_tmp[678052](165813 call == call_tmp[678047] loc[165803]))
    unknown call_tmp[678057] "expr temp" "maybe param" "maybe type" "temp"
    (678060 'move' call_tmp[678057](165832 call _cond_test call_tmp[678052]))
    if call_tmp[678057]
    {
      unknown call_tmp[678064] "expr temp" "maybe param" "maybe type" "temp"
      (678067 'move' call_tmp[678064](388237 call dom _mt[243] this[165894]))
      unknown call_tmp[678069] "expr temp" "maybe param" "maybe type" "temp"
      (678072 'move' call_tmp[678069](165818 call _getDomain call_tmp[678064]))
      (521897 'move' ret[521892](521896 'deref' call_tmp[678069]))
      gotoReturn _end_dsiLocalSubdomain[521890] _end_dsiLocalSubdomain[521890]
    }
    {
      unknown call_tmp[678076] "expr temp" "maybe param" "maybe type" "temp"
      (678079 'move' call_tmp[678076](361365 call dom _mt[243] this[165894]))
      unknown call_tmp[678083] "expr temp" "maybe param" "maybe type" "temp"
      (678086 'move' call_tmp[678083](165828 call(165823 call (partial) dsiLocalSubdomain _mt[243] call_tmp[678076]) loc[165803]))
      (521902 'move' ret[521892](521901 'deref' call_tmp[678083]))
      gotoReturn _end_dsiLocalSubdomain[521890] _end_dsiLocalSubdomain[521890]
    }
    label _end_dsiLocalSubdomain[521890]
    (521894 return ret[521892])
  }
  type DefaultSparseArr[165840](?) val super[355734]:BaseSparseArrImpl[150571](?) "delay instantiation" "super class"
  type DefaultSparseArr[387466](?)
  function DefaultSparseDom[164378](?).dsiSerialWrite[165904](arg _mt[165913]:_MT[238], arg this[165910]:DefaultSparseDom[164378](?) :
  DefaultSparseDom[164378](?), arg f[165902]:_any[178](?), arg printBrackets[165907] :
  1 =
  1) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[678090] "expr temp" "maybe param" "maybe type" "temp"
    (678093 'move' call_tmp[678090](388243 call rank _mt[243] this[165910]))
    unknown call_tmp[678095] "expr temp" "maybe param" "maybe type" "temp"
    (678098 'move' call_tmp[678095](165917 call == call_tmp[678090] 1))
    unknown call_tmp[678100] "expr temp" "maybe param" "maybe type" "temp"
    (678103 'move' call_tmp[678100](166182 call _cond_test call_tmp[678095]))
    if call_tmp[678100]
    {
      unknown call_tmp[678105] "expr temp" "maybe param" "maybe type" "temp"
      (678108 'move' call_tmp[678105](165925 call _cond_test printBrackets[165907]))
      if call_tmp[678105]
      {
        (165922 call <~> f[165902] "{")
      }
      unknown call_tmp[678112] "expr temp" "maybe param" "maybe type" "temp"
      (678115 'move' call_tmp[678112](388250 call _nnz _mt[243] this[165910]))
      unknown call_tmp[678117] "expr temp" "maybe param" "maybe type" "temp"
      (678120 'move' call_tmp[678117](165933 call >= call_tmp[678112] 1))
      unknown call_tmp[678122] "expr temp" "maybe param" "maybe type" "temp"
      (678125 'move' call_tmp[678122](165999 call _cond_test call_tmp[678117]))
      if call_tmp[678122]
      {
        unknown call_tmp[678129] "expr temp" "maybe param" "maybe type" "temp"
        (678132 'move' call_tmp[678129](165939 call(388256 call (partial) _indices _mt[243] this[165910]) 1))
        (165940 call <~> f[165902] call_tmp[678129])
        (482876 'end of statement')
        {
          unknown _indexOfInterest[165961] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165962] "expr temp" "temp"
          unknown call_tmp[678136] "expr temp" "maybe param" "maybe type" "temp"
          (678139 'move' call_tmp[678136](388268 call _nnz _mt[243] this[165910]))
          unknown call_tmp[678141] "expr temp" "maybe param" "maybe type" "temp"
          (678144 'move' call_tmp[678141](165976 call chpl_direct_range_iter 2 call_tmp[678136] 1))
          (165971 'move' _iterator[165962](165969 call _getIterator call_tmp[678141]))
          Defer
          {
            {
              (165992 call _freeIterator _iterator[165962])
            }
          }
          { scopeless type
            (165981 'move' _indexOfInterest[165961](165978 call iteratorIndex _iterator[165962]))
          }
          ForLoop[165963]
          {
            unknown i[165985] "index var" "insert auto destroy"
            (482878 'end of statement')
            (165987 'move' i[165985] _indexOfInterest[165961])
            (482879 'end of statement' i[165985])
            {
              unknown call_tmp[678146] "expr temp" "maybe param" "maybe type" "temp"
              (678149 'move' call_tmp[678146](165951 call <~> f[165902] " "))
              unknown call_tmp[678153] "expr temp" "maybe param" "maybe type" "temp"
              (678156 'move' call_tmp[678153](165956 call(388262 call (partial) _indices _mt[243] this[165910]) i[165985]))
              (165957 call <~> call_tmp[678146] call_tmp[678153])
              (482881 'end of statement' i[165985])
            }
            label _continueLabel[165966]
            _indexOfInterest[165961]
            _iterator[165962]
          }
          label _breakLabel[165967]
        }
      }
      unknown call_tmp[678158] "expr temp" "maybe param" "maybe type" "temp"
      (678161 'move' call_tmp[678158](166009 call _cond_test printBrackets[165907]))
      if call_tmp[678158]
      {
        (166006 call <~> f[165902] "}")
      }
    }
    {
      unknown call_tmp[678163] "expr temp" "maybe param" "maybe type" "temp"
      (678166 'move' call_tmp[678163](166036 call _cond_test printBrackets[165907]))
      if call_tmp[678163]
      {
        (166033 call <~> f[165902] "{\n")
      }
      unknown call_tmp[678170] "expr temp" "maybe param" "maybe type" "temp"
      (678173 'move' call_tmp[678170](388277 call _nnz _mt[243] this[165910]))
      unknown call_tmp[678175] "expr temp" "maybe param" "maybe type" "temp"
      (678178 'move' call_tmp[678175](166044 call >= call_tmp[678170] 1))
      unknown call_tmp[678180] "expr temp" "maybe param" "maybe type" "temp"
      (678183 'move' call_tmp[678180](166151 call _cond_test call_tmp[678175]))
      if call_tmp[678180]
      {
        unknown call_tmp[678187] "maybe param" "maybe type" "temp"
        (678190 'move' call_tmp[678187](166049 call(388282 call (partial) _indices _mt[243] this[165910]) 1))
        unknown prevInd[166050] "dead at end of block" "insert auto destroy"
        (544295 'init var' prevInd[166050] call_tmp[678187])
        (166053 'end of statement')
        unknown call_tmp[678192] "expr temp" "maybe param" "maybe type" "temp"
        (678195 'move' call_tmp[678192](166057 call <~> f[165902] " "))
        (166060 call <~> call_tmp[678192] prevInd[166050])
        (482885 'end of statement' prevInd[166050])
        {
          unknown _indexOfInterest[166108] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166109] "expr temp" "temp"
          unknown call_tmp[678199] "expr temp" "maybe param" "maybe type" "temp"
          (678202 'move' call_tmp[678199](388306 call _nnz _mt[243] this[165910]))
          unknown call_tmp[678204] "expr temp" "maybe param" "maybe type" "temp"
          (678207 'move' call_tmp[678204](166123 call chpl_direct_range_iter 2 call_tmp[678199] 1))
          (166118 'move' _iterator[166109](166116 call _getIterator call_tmp[678204]))
          Defer
          {
            {
              (166139 call _freeIterator _iterator[166109])
            }
          }
          { scopeless type
            (166128 'move' _indexOfInterest[166108](166125 call iteratorIndex _iterator[166109]))
          }
          ForLoop[166110]
          {
            unknown i[166132] "index var" "insert auto destroy"
            (482888 'end of statement')
            (166134 'move' i[166132] _indexOfInterest[166108])
            (482889 'end of statement' i[166132])
            {
              unknown call_tmp[678209] "expr temp" "maybe param" "maybe type" "temp"
              (678212 'move' call_tmp[678209](166071 call prevInd[166050] 0))
              unknown call_tmp[678216] "expr temp" "maybe param" "maybe type" "temp"
              (678219 'move' call_tmp[678216](166075 call(388290 call (partial) _indices _mt[243] this[165910]) i[166132]))
              unknown call_tmp[678221] "expr temp" "maybe param" "maybe type" "temp"
              (678224 'move' call_tmp[678221](166078 call call_tmp[678216] 0))
              unknown call_tmp[678226] "expr temp" "maybe param" "maybe type" "temp"
              (678229 'move' call_tmp[678226](166079 call != call_tmp[678209] call_tmp[678221]))
              unknown call_tmp[678231] "expr temp" "maybe param" "maybe type" "temp"
              (678234 'move' call_tmp[678231](166087 call _cond_test call_tmp[678226]))
              if call_tmp[678231]
              {
                (166083 call <~> f[165902] "\n")
              }
              unknown call_tmp[678238] "expr temp" "maybe param" "maybe type" "temp"
              (678241 'move' call_tmp[678238](166096 call(388298 call (partial) _indices _mt[243] this[165910]) i[166132]))
              (166097 call = prevInd[166050] call_tmp[678238])
              (482892 'end of statement' prevInd[166050] i[166132])
              unknown call_tmp[678243] "expr temp" "maybe param" "maybe type" "temp"
              (678246 'move' call_tmp[678243](166102 call <~> f[165902] " "))
              (166105 call <~> call_tmp[678243] prevInd[166050])
              (482895 'end of statement' prevInd[166050])
            }
            label _continueLabel[166113]
            _indexOfInterest[166108]
            _iterator[166109]
          }
          label _breakLabel[166114]
        }
        (166148 call <~> f[165902] "\n")
      }
      unknown call_tmp[678248] "expr temp" "maybe param" "maybe type" "temp"
      (678251 'move' call_tmp[678248](166177 call _cond_test printBrackets[165907]))
      if call_tmp[678248]
      {
        (166174 call <~> f[165902] "}\n")
      }
    }
    (521906 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiSerialWrite[166194](arg _mt[166199]:_MT[238], arg this[166196]:DefaultSparseArr[165840](?) :
  DefaultSparseArr[165840](?), arg f[166192]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[678255] "expr temp" "maybe param" "maybe type" "temp"
    (678258 'move' call_tmp[678255](388314 call rank _mt[243] this[166196]))
    unknown call_tmp[678260] "expr temp" "maybe param" "maybe type" "temp"
    (678263 'move' call_tmp[678260](166203 call == call_tmp[678255] 1))
    unknown call_tmp[678265] "expr temp" "maybe param" "maybe type" "temp"
    (678268 'move' call_tmp[678265](166425 call _cond_test call_tmp[678260]))
    if call_tmp[678265]
    {
      unknown call_tmp[678272] "expr temp" "maybe param" "maybe type" "temp"
      (678275 'move' call_tmp[678272](361370 call dom _mt[243] this[166196]))
      unknown call_tmp[678279] "expr temp" "maybe param" "maybe type" "temp"
      (678282 'move' call_tmp[678279](166206 call _nnz _mt[243] call_tmp[678272]))
      unknown call_tmp[678284] "expr temp" "maybe param" "maybe type" "temp"
      (678287 'move' call_tmp[678284](166210 call >= call_tmp[678279] 1))
      unknown call_tmp[678289] "expr temp" "maybe param" "maybe type" "temp"
      (678292 'move' call_tmp[678289](166282 call _cond_test call_tmp[678284]))
      if call_tmp[678289]
      {
        unknown call_tmp[678296] "expr temp" "maybe param" "maybe type" "temp"
        (678299 'move' call_tmp[678296](166216 call(388320 call (partial) data _mt[243] this[166196]) 1))
        (166217 call <~> f[166192] call_tmp[678296])
        (482899 'end of statement')
        {
          unknown _indexOfInterest[166241] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166242] "expr temp" "temp"
          unknown call_tmp[678303] "expr temp" "maybe param" "maybe type" "temp"
          (678306 'move' call_tmp[678303](361375 call dom _mt[243] this[166196]))
          unknown call_tmp[678310] "expr temp" "maybe param" "maybe type" "temp"
          (678313 'move' call_tmp[678310](166256 call _nnz _mt[243] call_tmp[678303]))
          unknown call_tmp[678315] "expr temp" "maybe param" "maybe type" "temp"
          (678318 'move' call_tmp[678315](166259 call chpl_direct_range_iter 2 call_tmp[678310] 1))
          (166251 'move' _iterator[166242](166249 call _getIterator call_tmp[678315]))
          Defer
          {
            {
              (166275 call _freeIterator _iterator[166242])
            }
          }
          { scopeless type
            (166264 'move' _indexOfInterest[166241](166261 call iteratorIndex _iterator[166242]))
          }
          ForLoop[166243]
          {
            unknown i[166268] "index var" "insert auto destroy"
            (482901 'end of statement')
            (166270 'move' i[166268] _indexOfInterest[166241])
            (482902 'end of statement' i[166268])
            {
              unknown call_tmp[678320] "expr temp" "maybe param" "maybe type" "temp"
              (678323 'move' call_tmp[678320](166231 call <~> f[166192] " "))
              unknown call_tmp[678327] "expr temp" "maybe param" "maybe type" "temp"
              (678330 'move' call_tmp[678327](166236 call(388326 call (partial) data _mt[243] this[166196]) i[166268]))
              (166237 call <~> call_tmp[678320] call_tmp[678327])
              (482904 'end of statement' i[166268])
            }
            label _continueLabel[166246]
            _indexOfInterest[166241]
            _iterator[166242]
          }
          label _breakLabel[166247]
        }
      }
    }
    {
      unknown call_tmp[678334] "expr temp" "maybe param" "maybe type" "temp"
      (678337 'move' call_tmp[678334](361380 call dom _mt[243] this[166196]))
      unknown call_tmp[678341] "expr temp" "maybe param" "maybe type" "temp"
      (678344 'move' call_tmp[678341](166288 call _nnz _mt[243] call_tmp[678334]))
      unknown call_tmp[678346] "expr temp" "maybe param" "maybe type" "temp"
      (678349 'move' call_tmp[678346](166292 call >= call_tmp[678341] 1))
      unknown call_tmp[678351] "expr temp" "maybe param" "maybe type" "temp"
      (678354 'move' call_tmp[678351](166420 call _cond_test call_tmp[678346]))
      if call_tmp[678351]
      {
        unknown call_tmp[678358] "expr temp" "maybe param" "maybe type" "temp"
        (678361 'move' call_tmp[678358](361385 call dom _mt[243] this[166196]))
        unknown call_tmp[678365] "maybe param" "maybe type" "temp"
        (678368 'move' call_tmp[678365](166300 call(166295 call (partial) _indices _mt[243] call_tmp[678358]) 1))
        unknown prevInd[166301] "dead at end of block" "insert auto destroy"
        (544297 'init var' prevInd[166301] call_tmp[678365])
        (166304 'end of statement')
        unknown call_tmp[678372] "expr temp" "maybe param" "maybe type" "temp"
        (678375 'move' call_tmp[678372](166310 call(388333 call (partial) data _mt[243] this[166196]) 1))
        (166311 call <~> f[166192] call_tmp[678372])
        (482906 'end of statement')
        {
          unknown _indexOfInterest[166374] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166375] "expr temp" "temp"
          unknown call_tmp[678379] "expr temp" "maybe param" "maybe type" "temp"
          (678382 'move' call_tmp[678379](361400 call dom _mt[243] this[166196]))
          unknown call_tmp[678386] "expr temp" "maybe param" "maybe type" "temp"
          (678389 'move' call_tmp[678386](166389 call _nnz _mt[243] call_tmp[678379]))
          unknown call_tmp[678391] "expr temp" "maybe param" "maybe type" "temp"
          (678394 'move' call_tmp[678391](166392 call chpl_direct_range_iter 2 call_tmp[678386] 1))
          (166384 'move' _iterator[166375](166382 call _getIterator call_tmp[678391]))
          Defer
          {
            {
              (166408 call _freeIterator _iterator[166375])
            }
          }
          { scopeless type
            (166397 'move' _indexOfInterest[166374](166394 call iteratorIndex _iterator[166375]))
          }
          ForLoop[166376]
          {
            unknown i[166401] "index var" "insert auto destroy"
            (482908 'end of statement')
            (166403 'move' i[166401] _indexOfInterest[166374])
            (482909 'end of statement' i[166401])
            {
              unknown call_tmp[678396] "expr temp" "maybe param" "maybe type" "temp"
              (678399 'move' call_tmp[678396](166325 call prevInd[166301] 0))
              unknown call_tmp[678403] "expr temp" "maybe param" "maybe type" "temp"
              (678406 'move' call_tmp[678403](361390 call dom _mt[243] this[166196]))
              unknown call_tmp[678410] "expr temp" "maybe param" "maybe type" "temp"
              (678413 'move' call_tmp[678410](166332 call(166327 call (partial) _indices _mt[243] call_tmp[678403]) i[166401]))
              unknown call_tmp[678415] "expr temp" "maybe param" "maybe type" "temp"
              (678418 'move' call_tmp[678415](166335 call call_tmp[678410] 0))
              unknown call_tmp[678420] "expr temp" "maybe param" "maybe type" "temp"
              (678423 'move' call_tmp[678420](166336 call != call_tmp[678396] call_tmp[678415]))
              unknown call_tmp[678425] "expr temp" "maybe param" "maybe type" "temp"
              (678428 'move' call_tmp[678425](166350 call _cond_test call_tmp[678420]))
              if call_tmp[678425]
              {
                (166340 call <~> f[166192] "\n")
              }
              {
                (166346 call <~> f[166192] " ")
              }
              unknown call_tmp[678432] "expr temp" "maybe param" "maybe type" "temp"
              (678435 'move' call_tmp[678432](361395 call dom _mt[243] this[166196]))
              unknown call_tmp[678439] "expr temp" "maybe param" "maybe type" "temp"
              (678442 'move' call_tmp[678439](166362 call(166357 call (partial) _indices _mt[243] call_tmp[678432]) i[166401]))
              (166363 call = prevInd[166301] call_tmp[678439])
              (482913 'end of statement' prevInd[166301] i[166401])
              unknown call_tmp[678446] "expr temp" "maybe param" "maybe type" "temp"
              (678449 'move' call_tmp[678446](166370 call(388345 call (partial) data _mt[243] this[166196]) i[166401]))
              (166371 call <~> f[166192] call_tmp[678446])
              (482916 'end of statement' i[166401])
            }
            label _continueLabel[166379]
            _indexOfInterest[166374]
            _iterator[166375]
          }
          label _breakLabel[166380]
        }
        (166417 call <~> f[166192] "\n")
      }
    }
    (521908 return _void[55])
  }
  (355201 'used modules list'(161601 'use' ChapelStandard[20267])(161605 'import' RangeChunk[266477])(161608 'use' DSIUtil[230907]))
}