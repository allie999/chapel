AST dump for DefaultSparse after pass normalize.
Module use list: ChapelStandard RangeChunk DSIUtil Search Sort 

{
  function chpl__init_DefaultSparse[416045]() : void[4] "insert line file info" "module init"
  {
    (544199 'init var' debugDefaultSparse[161611] 0)
    (161614 'end of statement')
    (521915 return _void[55])
  }
  unknown debugDefaultSparse[161611] "config" "param"
  function DefaultSparseDom[164378](?).linksDistribution[161646](arg _mt[164382]:_MT[238], arg this[164380]:DefaultSparseDom[164378](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521399] "RVV" "param" "temp"
    (521404 'move' ret[521399](521403 'deref' 0))
    (521401 return ret[521399])
  }
  function DefaultSparseDom[164378](?).dsiLinksDistribution[161656](arg _mt[164386]:_MT[238], arg this[164384]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521408] "RVV" "temp"
    (521413 'move' ret[521408](521412 'deref' 0))
    (521410 return ret[521408])
  }
  function DefaultSparseDom[164378](?).init[161668](arg _mt[164390]:_MT[238], arg this[164388]:DefaultSparseDom[164378](?), param arg rank[161666]:_any[178](?), arg idxType[161670]:_any[178](?), arg dist[161674]:unmanaged DefaultDist[415487], arg parentDom[161678]:_domain[125908](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[462196] "temporary of super field" "temp"
    (462198 'move' super_tmp[462196](462195 '.v' this[164388] c"super"))
    (161689 call(161682 call (partial) init _mt[243] super_tmp[462196]) rank[161666] idxType[161670] parentDom[161678])
    (482523 'end of statement')
    unknown tmp[462201] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492497] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[675682] "expr temp" "maybe param" "maybe type" "temp"
      (675685 'move' call_tmp[675682](462203 '.v' this[164388] c"super"))
      (492501 'move' call_type_tmp[492497](462206 'typeof' call_tmp[675682]))
    }
    (462207 'move' tmp[462201] call_type_tmp[492497])
    unknown call_tmp[675687] "maybe param" "maybe type" "temp"
    (675690 'move' call_tmp[675687](462212 'cast' tmp[462201] this[164388]))
    unknown chpl__thisAsParent[462209] "dead at end of block" "insert auto destroy" "temp"
    (544201 'init var' chpl__thisAsParent[462209] call_tmp[675687] tmp[462201])
    (462215 'setcid' chpl__thisAsParent[462209])
    (482524 'end of statement')
    unknown tmp[462217] "temp"
    (462220 'init var' tmp[462217] dist[161674] unmanaged DefaultDist[415487])
    (462222 'init field' this[164388] c"dist" tmp[462217])
    (482525 'end of statement')
    unknown tmp[462228] "temp"
    (462230 'init var' tmp[462228] 0)
    (462232 '.=' this[164388] c"_nnz" tmp[462228])
    (482526 'end of statement')
    unknown tmp[462236] "temp"
    unknown call_tmp[675692] "expr temp" "maybe param" "maybe type" "temp"
    (675695 'move' call_tmp[675692](462253 '.' this[164388] c"nnzDom"))
    unknown call_tmp[675697] "expr temp" "maybe param" "maybe type" "temp"
    (675700 'move' call_tmp[675697](462241 call chpl__ensureDomainExpr call_tmp[675692]))
    unknown call_tmp[675702] "expr temp" "maybe param" "maybe type" "temp"
    (675705 'move' call_tmp[675702](462256 '.v' this[164388] c"rank"))
    unknown call_tmp[675707] "expr temp" "maybe param" "maybe type" "temp"
    (675710 'move' call_tmp[675707](462259 '.v' this[164388] c"idxType"))
    unknown call_tmp[675712] "expr temp" "maybe param" "maybe type" "temp"
    (675715 'move' call_tmp[675712](462244 call chpl__buildIndexType call_tmp[675702] call_tmp[675707]))
    unknown call_tmp[675717] "expr temp" "maybe param" "maybe type" "temp"
    (675720 'move' call_tmp[675717](462239 call chpl__buildArrayRuntimeType call_tmp[675697] call_tmp[675712]))
    (462247 'default init var' tmp[462236] call_tmp[675717])
    (462249 '.=' this[164388] c"_indices" tmp[462236])
    (482527 'end of statement')
    (462262 'setcid' this[164388])
    (521415 return _void[55])
  }
  function DefaultSparseDom[164378](?).getNNZ[161704](arg _mt[164394]:_MT[238], arg this[164392]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521419] "RVV" "temp"
    unknown call_tmp[675724] "expr temp" "maybe param" "maybe type" "temp"
    (675727 'move' call_tmp[675724](387465 call _nnz _mt[243] this[164392]))
    (521425 'move' ret[521419](521424 'coerce' call_tmp[675724] int(64)[13]))
    (521421 return ret[521419])
  }
  { scopeless type
    int(64)[13]
  }
  function DefaultSparseDom[164378](?).dsiBuildArray[161718](arg _mt[164398]:_MT[238], arg this[164396]:DefaultSparseDom[164378](?), arg eltType[161716]:_any[178](?), param arg initElts[161721]:bool[10]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521429] "RVV" "temp"
    unknown call_tmp[675731] "expr temp" "maybe param" "maybe type" "temp"
    (675734 'move' call_tmp[675731](387475 call rank _mt[243] this[164396]))
    unknown call_tmp[675738] "expr temp" "maybe param" "maybe type" "temp"
    (675741 'move' call_tmp[675738](387480 call idxType _mt[243] this[164396]))
    unknown call_tmp[675743] "expr temp" "maybe param" "maybe type" "temp"
    (675746 'move' call_tmp[675743](161738 call _to_unmanaged this[164396]))
    unknown call_tmp[675748] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (675751 'move' call_tmp[675748](748030 'new' DefaultSparseArr[387469](?)(eltType = eltType[161716])(rank = call_tmp[675731])(idxType = call_tmp[675738])(dom = call_tmp[675743])(initElts = initElts[161721])(_chpl_manager = unmanaged[220](?))))
    (521434 'move' ret[521429](521433 'deref' call_tmp[675748]))
    (521431 return ret[521429])
  }
  function DefaultSparseDom[164378](?).dsiIndsIterSafeForRemoving[161750](arg _mt[164402]:_MT[238], arg this[164400]:DefaultSparseDom[164378](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521438] "RVV" "temp"
    {
      unknown _indexOfInterest[161769] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[161770] "expr temp" "temp"
      unknown call_tmp[675755] "expr temp" "maybe param" "maybe type" "temp"
      (675758 'move' call_tmp[675755](387493 call _nnz _mt[243] this[164400]))
      unknown call_tmp[675760] "expr temp" "maybe param" "maybe type" "temp"
      (675763 'move' call_tmp[675760](161786 call - 1))
      unknown call_tmp[675765] "expr temp" "maybe param" "maybe type" "temp"
      (675768 'move' call_tmp[675765](161790 call chpl_direct_range_iter 1 call_tmp[675755] call_tmp[675760]))
      (161779 'move' _iterator[161770](161777 call _getIterator call_tmp[675765]))
      Defer
      {
        {
          (161806 call _freeIterator _iterator[161770])
        }
      }
      { scopeless type
        (161795 'move' _indexOfInterest[161769](161792 call iteratorIndex _iterator[161770]))
      }
      ForLoop[161771]
      {
        unknown i[161799] "index var" "insert auto destroy"
        (482532 'end of statement')
        (161801 'move' i[161799] _indexOfInterest[161769])
        (482533 'end of statement' i[161799])
        {
          unknown yret[521442] "YVV" "temp"
          unknown call_tmp[675772] "expr temp" "maybe param" "maybe type" "temp"
          (675775 'move' call_tmp[675772](161765 call(387487 call (partial) _indices _mt[243] this[164400]) i[161799]))
          (521445 'move' yret[521442](521444 'deref' call_tmp[675772]))
          (521447 yield yret[521442])
          (482535 'end of statement' i[161799])
        }
        label _continueLabel[161774]
        _indexOfInterest[161769]
        _iterator[161770]
      }
      label _breakLabel[161775]
    }
    (521440 return ret[521438])
  }
  function DefaultSparseDom[164378](?).these[161818](arg _mt[164406]:_MT[238], arg this[164404]:DefaultSparseDom[164378](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521451] "RVV" "temp"
    {
      unknown _indexOfInterest[161832] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[161833] "expr temp" "temp"
      unknown call_tmp[675779] "expr temp" "maybe param" "maybe type" "temp"
      (675782 'move' call_tmp[675779](387504 call _nnz _mt[243] this[164404]))
      unknown call_tmp[675784] "expr temp" "maybe param" "maybe type" "temp"
      (675787 'move' call_tmp[675784](161847 call chpl_direct_range_iter 1 call_tmp[675779] 1))
      (161842 'move' _iterator[161833](161840 call _getIterator call_tmp[675784]))
      Defer
      {
        {
          (161863 call _freeIterator _iterator[161833])
        }
      }
      { scopeless type
        (161852 'move' _indexOfInterest[161832](161849 call iteratorIndex _iterator[161833]))
      }
      ForLoop[161834]
      {
        unknown i[161856] "index var" "insert auto destroy"
        (482538 'end of statement')
        (161858 'move' i[161856] _indexOfInterest[161832])
        (482539 'end of statement' i[161856])
        {
          unknown yret[521455] "YVV" "temp"
          unknown call_tmp[675791] "expr temp" "maybe param" "maybe type" "temp"
          (675794 'move' call_tmp[675791](161828 call(387498 call (partial) _indices _mt[243] this[164404]) i[161856]))
          (521458 'move' yret[521455](521457 'deref' call_tmp[675791]))
          (521460 yield yret[521455])
          (482541 'end of statement' i[161856])
        }
        label _continueLabel[161837]
        _indexOfInterest[161832]
        _iterator[161833]
      }
      label _breakLabel[161838]
    }
    (521453 return ret[521451])
  }
  function DefaultSparseDom[164378](?).these[161879](arg _mt[164410]:_MT[238], arg this[164408]:DefaultSparseDom[164378](?), param arg tag[161876]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521464] "RVV" "temp"
    unknown call_tmp[675798] "maybe param" "maybe type" "temp"
    (675801 'move' call_tmp[675798](387511 call _nnz _mt[243] this[164408]))
    const numElems[161889] "dead at end of block" "const" "insert auto destroy"
    (544203 'init var' numElems[161889] call_tmp[675798])
    (161892 'end of statement')
    unknown call_tmp[675803] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (675806 'move' call_tmp[675803](161899 'typeof' numElems[161889]))
    unknown call_tmp[675808] "expr temp" "maybe param" "maybe type" "temp"
    (675811 'move' call_tmp[675808](161897 call _computeNumChunks numElems[161889]))
    unknown call_tmp[675813] "maybe param" "maybe type" "temp"
    (675816 'move' call_tmp[675813](161900 call _cast call_tmp[675803] call_tmp[675808]))
    const numChunks[161902] "dead at end of block" "const" "insert auto destroy"
    (544205 'init var' numChunks[161902] call_tmp[675813])
    (161905 'end of statement' numElems[161889] numElems[161889])
    unknown call_tmp[675818] "expr temp" "maybe param" "maybe type" "temp"
    (675821 'move' call_tmp[675818](161965 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[675818]
    {
      (161962 call writeln "DefaultSparseDom standalone: " numChunks[161902] " chunks, " numElems[161889] " elems")
      (482545 'end of statement' numChunks[161902] numElems[161889])
    }
    unknown call_tmp[675823] "expr temp" "maybe param" "maybe type" "temp"
    (675826 'move' call_tmp[675823](161971 call <= numChunks[161902] 1))
    unknown call_tmp[675828] "expr temp" "maybe param" "maybe type" "temp"
    (675831 'move' call_tmp[675828](162275 call _cond_test call_tmp[675823]))
    if call_tmp[675828]
    {
      {
        unknown _indexOfInterest[161985] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[161986] "expr temp" "temp"
        unknown call_tmp[675833] "expr temp" "maybe param" "maybe type" "temp"
        (675836 'move' call_tmp[675833](162000 call chpl_direct_range_iter 1 numElems[161889] 1))
        (161995 'move' _iterator[161986](161993 call _getIterator call_tmp[675833]))
        Defer
        {
          {
            (162016 call _freeIterator _iterator[161986])
          }
        }
        { scopeless type
          (162005 'move' _indexOfInterest[161985](162002 call iteratorIndex _iterator[161986]))
        }
        ForLoop[161987]
        {
          unknown i[162009] "index var" "insert auto destroy"
          (482549 'end of statement')
          (162011 'move' i[162009] _indexOfInterest[161985])
          (482550 'end of statement' i[162009])
          {
            unknown yret[521468] "YVV" "temp"
            unknown call_tmp[675840] "expr temp" "maybe param" "maybe type" "temp"
            (675843 'move' call_tmp[675840](161981 call(387522 call (partial) _indices _mt[243] this[164408]) i[162009]))
            (521471 'move' yret[521468](521470 'deref' call_tmp[675840]))
            (521473 yield yret[521468])
            (482552 'end of statement' i[162009])
          }
          label _continueLabel[161990]
          _indexOfInterest[161985]
          _iterator[161986]
        }
        label _breakLabel[161991]
      }
    }
    {
      {
        unknown tmpIter[162078] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[675845] "expr temp" "maybe param" "maybe type" "temp"
        (675848 'move' call_tmp[675845](162031 call chpl_build_bounded_range 1 numElems[161889]))
        (162081 'move' tmpIter[162078](162035 call chunks module=[255] RangeChunk[266479] call_tmp[675845] numChunks[161902]))
        unknown isRngDomArr[162255] "maybe param" "temp"
        unknown tmp[428140] "maybe param" "temp"
        (428151 'move' tmp[428140](162257 call isBoundedRange tmpIter[162078]))
        unknown call_tmp[675850] "expr temp" "maybe param" "maybe type" "temp"
        (675853 'move' call_tmp[675850](428153 call _cond_invalid tmp[428140]))
        if call_tmp[675850]
        {
          (428156 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570157] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570158] "maybe param" "temp"
        unknown call_tmp[675855] "expr temp" "maybe param" "maybe type" "temp"
        (675858 'move' call_tmp[675855](428141 call isTrue tmp[428140]))
        (570163 'move' tmp[570158](570161 call _cond_test call_tmp[675855]))
        if tmp[570158]
        {
          (570168 'move' tmp[570157](570165 '_paramFoldLogical' tmp[570158] 1))
        }
        {
          unknown tmp[428161] "maybe param" "temp"
          (428172 'move' tmp[428161](162260 call isDomain tmpIter[162078]))
          unknown call_tmp[675860] "expr temp" "maybe param" "maybe type" "temp"
          (675863 'move' call_tmp[675860](428174 call _cond_invalid tmp[428161]))
          if call_tmp[675860]
          {
            (428177 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570130] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570131] "maybe param" "temp"
          unknown call_tmp[675865] "expr temp" "maybe param" "maybe type" "temp"
          (675868 'move' call_tmp[675865](428162 call isTrue tmp[428161]))
          (570136 'move' tmp[570131](570134 call _cond_test call_tmp[675865]))
          if tmp[570131]
          {
            (570141 'move' tmp[570130](570138 '_paramFoldLogical' tmp[570131] 1))
          }
          {
            unknown tmp[570143] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[675870] "expr temp" "maybe param" "maybe type" "temp"
            (675873 'move' call_tmp[675870](162263 call isArray tmpIter[162078]))
            (570145 'move' tmp[570143](428166 call isTrue call_tmp[675870]))
            (570150 'move' tmp[570130](570147 '_paramFoldLogical' tmp[570131] tmp[570143]))
          }
          unknown tmp[570170] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570172 'move' tmp[570170](428145 call isTrue tmp[570130]))
          (570177 'move' tmp[570157](570174 '_paramFoldLogical' tmp[570158] tmp[570170]))
        }
        (162270 'move' isRngDomArr[162255] tmp[570157])
        if isRngDomArr[162255]
        {
          const _coforallCount[162122] "const" "end count" "temp"
          (162191 'move' _coforallCount[162122](162188 call _endCountAlloc 1))
          unknown numTasks[162123] "temp"
          (162175 'move' numTasks[162123](162171 call size _mt[243] tmpIter[162078]))
          (162166 call _upEndCount _coforallCount[162122] 1 numTasks[162123])
          (482555 'end of statement')
          (162163 call chpl_resetTaskSpawn numTasks[162123])
          (482556 'end of statement')
          unknown _indexOfInterest[162130] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[162131] "expr temp" "temp"
          (162140 'move' _iterator[162131](162138 call _getIterator tmpIter[162078]))
          Defer
          {
            {
              (162156 call _freeIterator _iterator[162131])
            }
          }
          { scopeless type
            (162145 'move' _indexOfInterest[162130](162142 call iteratorIndex _iterator[162131]))
          }
          ForLoop[162132]
          {
            unknown chunk[162149] "coforall index var" "index var" "insert auto destroy"
            (482558 'end of statement')
            (162151 'move' chunk[162149] _indexOfInterest[162130])
            (482559 'end of statement' chunk[162149])
            {
              {
                unknown _indexOfInterest[162084] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[162086] "expr temp" "temp"
                (162088 'move' _iterator[162086](162091 call _getIterator chunk[162149]))
                Defer
                {
                  {
                    (162095 call _freeIterator _iterator[162086])
                  }
                }
                { scopeless type
                  (162099 'move' _indexOfInterest[162084](162102 call iteratorIndex _iterator[162086]))
                }
                ForLoop[162104]
                {
                  unknown i[162107] "index var" "insert auto destroy"
                  (482562 'end of statement')
                  (162109 'move' i[162107] _indexOfInterest[162084])
                  (482563 'end of statement' i[162107])
                  unknown yret[521475] "YVV" "temp"
                  unknown call_tmp[675879] "expr temp" "maybe param" "maybe type" "temp"
                  (675882 'move' call_tmp[675879](162115 call(387539 call (partial) _indices _mt[243] this[164408]) i[162107]))
                  (521478 'move' yret[521475](521477 'deref' call_tmp[675879]))
                  (521480 yield yret[521475])
                  (482565 'end of statement' i[162107])
                  label _continueLabel[162117]
                  _indexOfInterest[162084]
                  _iterator[162086]
                }
                label _breakLabel[162119]
              }
              (162125 call _downEndCount _coforallCount[162122] nil[44])
              (162124 'coforall loop')
            }
            label _continueLabel[162135]
            _indexOfInterest[162130]
            _iterator[162131]
          }
          label _breakLabel[162136]
          Defer
          {
            {
              (162178 call _endCountFree _coforallCount[162122])
            }
          }
          (162183 call _waitEndCount _coforallCount[162122] 1 numTasks[162123])
        }
        {
          const _coforallCount[162195] "const" "end count" "temp"
          (162252 'move' _coforallCount[162195](162249 call _endCountAlloc 1))
          unknown _indexOfInterest[162203] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[162204] "expr temp" "temp"
          (162213 'move' _iterator[162204](162211 call _getIterator tmpIter[162078]))
          Defer
          {
            {
              (162229 call _freeIterator _iterator[162204])
            }
          }
          { scopeless type
            (162218 'move' _indexOfInterest[162203](162215 call iteratorIndex _iterator[162204]))
          }
          ForLoop[162205]
          {
            unknown chunk[162222] "coforall index var" "index var" "insert auto destroy"
            (482571 'end of statement')
            (162224 'move' chunk[162222] _indexOfInterest[162203])
            (482572 'end of statement' chunk[162222])
            (162236 call _upEndCount _coforallCount[162195] 1)
            (482574 'end of statement')
            {
              {
                unknown _indexOfInterest[162044] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[162045] "expr temp" "temp"
                (162054 'move' _iterator[162045](162052 call _getIterator chunk[162222]))
                Defer
                {
                  {
                    (162070 call _freeIterator _iterator[162045])
                  }
                }
                { scopeless type
                  (162059 'move' _indexOfInterest[162044](162056 call iteratorIndex _iterator[162045]))
                }
                ForLoop[162046]
                {
                  unknown i[162063] "index var" "insert auto destroy"
                  (482576 'end of statement')
                  (162065 'move' i[162063] _indexOfInterest[162044])
                  (482577 'end of statement' i[162063])
                  unknown yret[521482] "YVV" "temp"
                  unknown call_tmp[675886] "expr temp" "maybe param" "maybe type" "temp"
                  (675889 'move' call_tmp[675886](162041 call(387532 call (partial) _indices _mt[243] this[164408]) i[162063]))
                  (521485 'move' yret[521482](521484 'deref' call_tmp[675886]))
                  (521487 yield yret[521482])
                  (482579 'end of statement' i[162063])
                  label _continueLabel[162049]
                  _indexOfInterest[162044]
                  _iterator[162045]
                }
                label _breakLabel[162050]
              }
              (162198 call _downEndCount _coforallCount[162195] nil[44])
              (162197 'coforall loop')
            }
            label _continueLabel[162208]
            _indexOfInterest[162203]
            _iterator[162204]
          }
          label _breakLabel[162209]
          Defer
          {
            {
              (162240 call _endCountFree _coforallCount[162195])
            }
          }
          (162245 call _waitEndCount _coforallCount[162195] 1)
        }
        (361205 'referenced modules list' RangeChunk[266479])
      }
    }
    (521466 return ret[521464])
  }
  where {
    (161886 call == tag[161876] standalone[451])
  }
  function DefaultSparseDom[164378](?).these[162288](arg _mt[164414]:_MT[238], arg this[164412]:DefaultSparseDom[164378](?), param arg tag[162285]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521491] "RVV" "temp"
    unknown call_tmp[675893] "maybe param" "maybe type" "temp"
    (675896 'move' call_tmp[675893](387547 call _nnz _mt[243] this[164412]))
    const numElems[162298] "dead at end of block" "const" "insert auto destroy"
    (544207 'init var' numElems[162298] call_tmp[675893])
    (162301 'end of statement')
    unknown call_tmp[675898] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (675901 'move' call_tmp[675898](162308 'typeof' numElems[162298]))
    unknown call_tmp[675903] "expr temp" "maybe param" "maybe type" "temp"
    (675906 'move' call_tmp[675903](162306 call _computeNumChunks numElems[162298]))
    unknown call_tmp[675908] "maybe param" "maybe type" "temp"
    (675911 'move' call_tmp[675908](162309 call _cast call_tmp[675898] call_tmp[675903]))
    const numChunks[162311] "dead at end of block" "const" "insert auto destroy"
    (544209 'init var' numChunks[162311] call_tmp[675908])
    (162314 'end of statement' numElems[162298] numElems[162298])
    unknown call_tmp[675913] "expr temp" "maybe param" "maybe type" "temp"
    (675916 'move' call_tmp[675913](162341 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[675913]
    {
      (162339 call writeln "DefaultSparseDom leader: " numChunks[162311] " chunks, " numElems[162298] " elems")
      (482586 'end of statement' numChunks[162311] numElems[162298])
    }
    unknown call_tmp[675918] "expr temp" "maybe param" "maybe type" "temp"
    (675921 'move' call_tmp[675918](162348 call <= numChunks[162311] 1))
    unknown call_tmp[675923] "expr temp" "maybe param" "maybe type" "temp"
    (675926 'move' call_tmp[675923](162555 call _cond_test call_tmp[675918]))
    if call_tmp[675923]
    {
      unknown yret[521495] "YVV" "temp"
      unknown call_tmp[675928] "expr temp" "maybe param" "maybe type" "temp"
      (675931 'move' call_tmp[675928](162354 call _build_tuple this[164412] 1 numElems[162298]))
      (521498 'move' yret[521495](521497 'deref' call_tmp[675928]))
      (521500 yield yret[521495])
      (482589 'end of statement' numElems[162298])
    }
    {
      unknown tmpIter[162384] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[675933] "expr temp" "maybe param" "maybe type" "temp"
      (675936 'move' call_tmp[675933](162365 call chpl_build_bounded_range 1 numElems[162298]))
      (162387 'move' tmpIter[162384](162369 call chunks module=[255] RangeChunk[266479] call_tmp[675933] numChunks[162311]))
      unknown isRngDomArr[162536] "maybe param" "temp"
      unknown tmp[428182] "maybe param" "temp"
      (428193 'move' tmp[428182](162538 call isBoundedRange tmpIter[162384]))
      unknown call_tmp[675938] "expr temp" "maybe param" "maybe type" "temp"
      (675941 'move' call_tmp[675938](428195 call _cond_invalid tmp[428182]))
      if call_tmp[675938]
      {
        (428198 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570211] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570212] "maybe param" "temp"
      unknown call_tmp[675943] "expr temp" "maybe param" "maybe type" "temp"
      (675946 'move' call_tmp[675943](428183 call isTrue tmp[428182]))
      (570217 'move' tmp[570212](570215 call _cond_test call_tmp[675943]))
      if tmp[570212]
      {
        (570222 'move' tmp[570211](570219 '_paramFoldLogical' tmp[570212] 1))
      }
      {
        unknown tmp[428203] "maybe param" "temp"
        (428214 'move' tmp[428203](162541 call isDomain tmpIter[162384]))
        unknown call_tmp[675948] "expr temp" "maybe param" "maybe type" "temp"
        (675951 'move' call_tmp[675948](428216 call _cond_invalid tmp[428203]))
        if call_tmp[675948]
        {
          (428219 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570184] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570185] "maybe param" "temp"
        unknown call_tmp[675953] "expr temp" "maybe param" "maybe type" "temp"
        (675956 'move' call_tmp[675953](428204 call isTrue tmp[428203]))
        (570190 'move' tmp[570185](570188 call _cond_test call_tmp[675953]))
        if tmp[570185]
        {
          (570195 'move' tmp[570184](570192 '_paramFoldLogical' tmp[570185] 1))
        }
        {
          unknown tmp[570197] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[675958] "expr temp" "maybe param" "maybe type" "temp"
          (675961 'move' call_tmp[675958](162544 call isArray tmpIter[162384]))
          (570199 'move' tmp[570197](428208 call isTrue call_tmp[675958]))
          (570204 'move' tmp[570184](570201 '_paramFoldLogical' tmp[570185] tmp[570197]))
        }
        unknown tmp[570224] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570226 'move' tmp[570224](428187 call isTrue tmp[570184]))
        (570231 'move' tmp[570211](570228 '_paramFoldLogical' tmp[570212] tmp[570224]))
      }
      (162551 'move' isRngDomArr[162536] tmp[570211])
      if isRngDomArr[162536]
      {
        const _coforallCount[162403] "const" "end count" "temp"
        (162472 'move' _coforallCount[162403](162469 call _endCountAlloc 1))
        unknown numTasks[162404] "temp"
        (162456 'move' numTasks[162404](162452 call size _mt[243] tmpIter[162384]))
        (162447 call _upEndCount _coforallCount[162403] 1 numTasks[162404])
        (482592 'end of statement')
        (162444 call chpl_resetTaskSpawn numTasks[162404])
        (482593 'end of statement')
        unknown _indexOfInterest[162411] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[162412] "expr temp" "temp"
        (162421 'move' _iterator[162412](162419 call _getIterator tmpIter[162384]))
        Defer
        {
          {
            (162437 call _freeIterator _iterator[162412])
          }
        }
        { scopeless type
          (162426 'move' _indexOfInterest[162411](162423 call iteratorIndex _iterator[162412]))
        }
        ForLoop[162413]
        {
          unknown chunk[162430] "coforall index var" "index var" "insert auto destroy"
          (482595 'end of statement')
          (162432 'move' chunk[162430] _indexOfInterest[162411])
          (482596 'end of statement' chunk[162430])
          {
            unknown yret[521502] "YVV" "temp"
            unknown call_tmp[675967] "expr temp" "maybe param" "maybe type" "temp"
            (675970 'move' call_tmp[675967](162395 call first _mt[243] chunk[162430]))
            unknown call_tmp[675974] "expr temp" "maybe param" "maybe type" "temp"
            (675977 'move' call_tmp[675974](162399 call last _mt[243] chunk[162430]))
            unknown call_tmp[675979] "expr temp" "maybe param" "maybe type" "temp"
            (675982 'move' call_tmp[675979](162392 call _build_tuple this[164412] call_tmp[675967] call_tmp[675974]))
            (521505 'move' yret[521502](521504 'deref' call_tmp[675979]))
            (521507 yield yret[521502])
            (482598 'end of statement' chunk[162430] chunk[162430])
            (162406 call _downEndCount _coforallCount[162403] nil[44])
            (162405 'coforall loop')
          }
          label _continueLabel[162416]
          _indexOfInterest[162411]
          _iterator[162412]
        }
        label _breakLabel[162417]
        Defer
        {
          {
            (162459 call _endCountFree _coforallCount[162403])
          }
        }
        (162464 call _waitEndCount _coforallCount[162403] 1 numTasks[162404])
      }
      {
        const _coforallCount[162476] "const" "end count" "temp"
        (162533 'move' _coforallCount[162476](162530 call _endCountAlloc 1))
        unknown _indexOfInterest[162484] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[162485] "expr temp" "temp"
        (162494 'move' _iterator[162485](162492 call _getIterator tmpIter[162384]))
        Defer
        {
          {
            (162510 call _freeIterator _iterator[162485])
          }
        }
        { scopeless type
          (162499 'move' _indexOfInterest[162484](162496 call iteratorIndex _iterator[162485]))
        }
        ForLoop[162486]
        {
          unknown chunk[162503] "coforall index var" "index var" "insert auto destroy"
          (482605 'end of statement')
          (162505 'move' chunk[162503] _indexOfInterest[162484])
          (482606 'end of statement' chunk[162503])
          (162517 call _upEndCount _coforallCount[162476] 1)
          (482608 'end of statement')
          {
            unknown yret[521509] "YVV" "temp"
            unknown call_tmp[675986] "expr temp" "maybe param" "maybe type" "temp"
            (675989 'move' call_tmp[675986](162372 call first _mt[243] chunk[162503]))
            unknown call_tmp[675993] "expr temp" "maybe param" "maybe type" "temp"
            (675996 'move' call_tmp[675993](162377 call last _mt[243] chunk[162503]))
            unknown call_tmp[675998] "expr temp" "maybe param" "maybe type" "temp"
            (676001 'move' call_tmp[675998](162380 call _build_tuple this[164412] call_tmp[675986] call_tmp[675993]))
            (521512 'move' yret[521509](521511 'deref' call_tmp[675998]))
            (521514 yield yret[521509])
            (482609 'end of statement' chunk[162503] chunk[162503])
            (162479 call _downEndCount _coforallCount[162476] nil[44])
            (162478 'coforall loop')
          }
          label _continueLabel[162489]
          _indexOfInterest[162484]
          _iterator[162485]
        }
        label _breakLabel[162490]
        Defer
        {
          {
            (162521 call _endCountFree _coforallCount[162476])
          }
        }
        (162526 call _waitEndCount _coforallCount[162476] 1)
      }
      (361212 'referenced modules list' RangeChunk[266479])
    }
    (521493 return ret[521491])
  }
  where {
    (162295 call == tag[162285] leader[447])
  }
  function DefaultSparseDom[164378](?).these[162569](arg _mt[164418]:_MT[238], arg this[164416]:DefaultSparseDom[164378](?), param arg tag[162566]:iterKind[453], arg followThis[162577]:_tuple[56202](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521518] "RVV" "temp"
    unknown tmp[162595] "dead at end of block" "insert auto destroy" "temp"
    (544211 'init var' tmp[162595] followThis[162577])
    (162605 call _check_tuple_var_decl tmp[162595] 3)
    (482615 'end of statement')
    unknown call_tmp[676003] "maybe param" "maybe type" "temp"
    (676006 'move' call_tmp[676003](162596 call tmp[162595] 0))
    unknown followThisDom[162587] "dead at end of block" "insert auto destroy"
    (544213 'init var' followThisDom[162587] call_tmp[676003])
    unknown call_tmp[676008] "maybe param" "maybe type" "temp"
    (676011 'move' call_tmp[676008](162599 call tmp[162595] 1))
    unknown startIx[162589] "dead at end of block" "insert auto destroy"
    (544215 'init var' startIx[162589] call_tmp[676008])
    unknown call_tmp[676013] "maybe param" "maybe type" "temp"
    (676016 'move' call_tmp[676013](162602 call tmp[162595] 2))
    unknown endIx[162591] "dead at end of block" "insert auto destroy"
    (544217 'init var' endIx[162591] call_tmp[676013])
    (162610 'end of statement')
    unknown call_tmp[676018] "expr temp" "maybe param" "maybe type" "temp"
    (676021 'move' call_tmp[676018](162614 call != followThisDom[162587] this[164416]))
    unknown call_tmp[676023] "expr temp" "maybe param" "maybe type" "temp"
    (676026 'move' call_tmp[676023](162639 call _cond_test call_tmp[676018]))
    if call_tmp[676023]
    {
      (162637 call halt "Sparse domains can't be zippered with anything other than themselves and their arrays")
    }
    unknown call_tmp[676028] "expr temp" "maybe param" "maybe type" "temp"
    (676031 'move' call_tmp[676028](162669 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[676028]
    {
      (162667 call writeln "DefaultSparseDom follower: " startIx[162589] ".." endIx[162591])
      (482617 'end of statement' startIx[162589] endIx[162591])
    }
    {
      unknown _indexOfInterest[162685] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[162686] "expr temp" "temp"
      unknown call_tmp[676033] "expr temp" "maybe param" "maybe type" "temp"
      (676036 'move' call_tmp[676033](162700 call chpl_direct_range_iter startIx[162589] endIx[162591] 1))
      (162695 'move' _iterator[162686](162693 call _getIterator call_tmp[676033]))
      Defer
      {
        {
          (162716 call _freeIterator _iterator[162686])
        }
      }
      { scopeless type
        (162705 'move' _indexOfInterest[162685](162702 call iteratorIndex _iterator[162686]))
      }
      ForLoop[162687]
      {
        unknown i[162709] "index var" "insert auto destroy"
        (482621 'end of statement')
        (162711 'move' i[162709] _indexOfInterest[162685])
        (482622 'end of statement' i[162709])
        unknown yret[521522] "YVV" "temp"
        unknown call_tmp[676040] "expr temp" "maybe param" "maybe type" "temp"
        (676043 'move' call_tmp[676040](162682 call(387572 call (partial) _indices _mt[243] this[164416]) i[162709]))
        (521525 'move' yret[521522](521524 'deref' call_tmp[676040]))
        (521527 yield yret[521522])
        (482624 'end of statement' i[162709])
        label _continueLabel[162690]
        _indexOfInterest[162685]
        _iterator[162686]
      }
      label _breakLabel[162691]
    }
    (521520 return ret[521518])
  }
  where {
    unknown call_tmp[676045] "expr temp" "maybe param" "maybe type" "temp"
    (676048 'move' call_tmp[676045](162585 call == tag[162566] follower[449]))
    unknown call_tmp[676050] "expr temp" "maybe param" "maybe type" "temp"
    (676053 'move' call_tmp[676050](462268 'query' followThis[162577] c"size"))
    unknown call_tmp[676055] "expr temp" "maybe param" "maybe type" "temp"
    (676058 'move' call_tmp[676055](462269 call == 3 call_tmp[676050]))
    (462271 call & call_tmp[676045] call_tmp[676055])
  }
  function DefaultSparseDom[164378](?).these[162732](arg _mt[164422]:_MT[238], arg this[164420]:DefaultSparseDom[164378](?), param arg tag[162729]:iterKind[453], arg followThis[162734]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521531] "RVV" "temp"
    (162762 call compilerError "Sparse iterators can't yet be zippered with others")
    (482626 'end of statement')
    unknown dummy[162769] "dead at end of block" "insert auto destroy"
    unknown call_tmp[676062] "expr temp" "maybe param" "maybe type" "temp"
    (676065 'move' call_tmp[676062](387582 call rank _mt[243] this[164420]))
    unknown call_tmp[676069] "expr temp" "maybe param" "maybe type" "temp"
    (676072 'move' call_tmp[676069](387587 call idxType _mt[243] this[164420]))
    unknown call_tmp[676074] "expr temp" "maybe param" "maybe type" "temp"
    (676077 'move' call_tmp[676074](162767 call * call_tmp[676062] call_tmp[676069]))
    (544219 'default init var' dummy[162769] call_tmp[676074])
    (162772 'end of statement')
    unknown yret[521535] "YVV" "temp"
    (521538 'move' yret[521535](521537 'deref' dummy[162769]))
    (521540 yield yret[521535])
    (482627 'end of statement' dummy[162769])
    (521533 return ret[521531])
  }
  where {
    (162741 call == tag[162729] follower[449])
  }
  function DefaultSparseDom[164378](?).find[162783](arg _mt[164426]:_MT[238], arg this[164424]:DefaultSparseDom[164378](?), arg ind[162781]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521544] "RVV" "temp"
    unknown tmp[428224] "maybe param" "temp"
    unknown tmp[428245] "maybe param" "temp"
    unknown call_tmp[676081] "expr temp" "maybe param" "maybe type" "temp"
    (676084 'move' call_tmp[676081](387593 call rank _mt[243] this[164424]))
    (428256 'move' tmp[428245](162791 call == call_tmp[676081] 1))
    unknown call_tmp[676086] "expr temp" "maybe param" "maybe type" "temp"
    (676089 'move' call_tmp[676086](428258 call _cond_invalid tmp[428245]))
    if call_tmp[676086]
    {
      (428261 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570238] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570239] "maybe param" "temp"
    unknown call_tmp[676091] "expr temp" "maybe param" "maybe type" "temp"
    (676094 'move' call_tmp[676091](428246 call isTrue tmp[428245]))
    (570244 'move' tmp[570239](570242 call _cond_test call_tmp[676091]))
    if tmp[570239]
    {
      unknown tmp[570246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[676096] "expr temp" "maybe param" "maybe type" "temp"
      (676099 'move' call_tmp[676096](162796 call isTuple ind[162781]))
      (570248 'move' tmp[570246](428249 call isTrue call_tmp[676096]))
      (570253 'move' tmp[570238](570250 '_paramFoldLogical' tmp[570239] tmp[570246]))
    }
    {
      (570258 'move' tmp[570238](570255 '_paramFoldLogical' tmp[570239] 0))
    }
    (428235 'move' tmp[428224] tmp[570238])
    unknown call_tmp[676101] "expr temp" "maybe param" "maybe type" "temp"
    (676104 'move' call_tmp[676101](428237 call _cond_invalid tmp[428224]))
    if call_tmp[676101]
    {
      (428240 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570265] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570266] "maybe param" "temp"
    unknown call_tmp[676106] "expr temp" "maybe param" "maybe type" "temp"
    (676109 'move' call_tmp[676106](428225 call isTrue tmp[428224]))
    (570271 'move' tmp[570266](570269 call _cond_test call_tmp[676106]))
    if tmp[570266]
    {
      unknown tmp[570273] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[676113] "expr temp" "maybe param" "maybe type" "temp"
      (676116 'move' call_tmp[676113](162800 call size _mt[243] ind[162781]))
      unknown call_tmp[676118] "expr temp" "maybe param" "maybe type" "temp"
      (676121 'move' call_tmp[676118](162804 call == call_tmp[676113] 1))
      (570275 'move' tmp[570273](428228 call isTrue call_tmp[676118]))
      (570280 'move' tmp[570265](570277 '_paramFoldLogical' tmp[570266] tmp[570273]))
    }
    {
      (570285 'move' tmp[570265](570282 '_paramFoldLogical' tmp[570266] 0))
    }
    unknown call_tmp[676123] "expr temp" "maybe param" "maybe type" "temp"
    (676126 'move' call_tmp[676123](162833 call _cond_test tmp[570265]))
    if call_tmp[676123]
    {
      unknown call_tmp[676130] "expr temp" "maybe param" "maybe type" "temp"
      (676133 'move' call_tmp[676130](387599 call _indices _mt[243] this[164424]))
      unknown call_tmp[676135] "expr temp" "maybe param" "maybe type" "temp"
      (676138 'move' call_tmp[676135](162814 call ind[162781] 0))
      unknown call_tmp[676142] "expr temp" "maybe param" "maybe type" "temp"
      (676145 'move' call_tmp[676142](387605 call _nnz _mt[243] this[164424]))
      unknown call_tmp[676147] "expr temp" "maybe param" "maybe type" "temp"
      (676150 'move' call_tmp[676147](162819 call binarySearch call_tmp[676130] call_tmp[676135](lo = 1)(hi = call_tmp[676142])))
      (521549 'move' ret[521544](521548 'deref' call_tmp[676147]))
      gotoReturn _end_find[521542] _end_find[521542]
    }
    {
      unknown call_tmp[676154] "expr temp" "maybe param" "maybe type" "temp"
      (676157 'move' call_tmp[676154](387610 call _indices _mt[243] this[164424]))
      unknown call_tmp[676161] "expr temp" "maybe param" "maybe type" "temp"
      (676164 'move' call_tmp[676161](387616 call _nnz _mt[243] this[164424]))
      unknown call_tmp[676166] "expr temp" "maybe param" "maybe type" "temp"
      (676169 'move' call_tmp[676166](162830 call binarySearch call_tmp[676154] ind[162781](lo = 1)(hi = call_tmp[676161])))
      (521554 'move' ret[521544](521553 'deref' call_tmp[676166]))
      gotoReturn _end_find[521542] _end_find[521542]
    }
    label _end_find[521542]
    (521546 return ret[521544])
    (355208 'used modules list'(162786 'use' Search[291262]))
  }
  function DefaultSparseDom[164378](?).dsiMember[162845](arg _mt[164430]:_MT[238], arg this[164428]:DefaultSparseDom[164378](?), arg ind[162843]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521560] "RVV" "temp"
    unknown call_tmp[676173] "maybe param" "maybe type" "temp"
    (676176 'move' call_tmp[676173](162855 call(387620 call (partial) find _mt[243] this[164428]) ind[162843]))
    const tmp[162856] "dead at end of block" "const" "insert auto destroy" "temp"
    (544221 'init var' tmp[162856] call_tmp[676173])
    (162863 call _check_tuple_var_decl tmp[162856] 2)
    (482633 'end of statement')
    unknown call_tmp[676178] "maybe param" "maybe type" "temp"
    (676181 'move' call_tmp[676178](162857 call tmp[162856] 0))
    const found[162847] "dead at end of block" "const" "insert auto destroy"
    (544223 'init var' found[162847] call_tmp[676178])
    unknown call_tmp[676183] "maybe param" "maybe type" "temp"
    (676186 'move' call_tmp[676183](162860 call tmp[162856] 1))
    const loc[162849] "dead at end of block" "const" "insert auto destroy"
    (544225 'init var' loc[162849] call_tmp[676183])
    (162868 'end of statement')
    (521565 'move' ret[521560](521564 'deref' found[162847]))
    gotoReturn _end_dsiMember[521558] _end_dsiMember[521558]
    (482634 'end of statement' found[162847])
    label _end_dsiMember[521558]
    (521562 return ret[521560])
  }
  function DefaultSparseDom[164378](?).dsiFirst[162877](arg _mt[164434]:_MT[238], arg this[164432]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[521571] "RVV" "temp"
    unknown call_tmp[676192] "expr temp" "maybe param" "maybe type" "temp"
    (676195 'move' call_tmp[676192](361226 call _indices _mt[243] this[164432]))
    unknown call_tmp[676199] "expr temp" "maybe param" "maybe type" "temp"
    (676202 'move' call_tmp[676199](162881 call _dom _mt[243] call_tmp[676192]))
    unknown call_tmp[676206] "expr temp" "maybe param" "maybe type" "temp"
    (676209 'move' call_tmp[676206](162884 call first _mt[243] call_tmp[676199]))
    unknown call_tmp[676211] "expr temp" "maybe param" "maybe type" "temp"
    (676214 'move' call_tmp[676211](162888 call(387627 call (partial) _indices _mt[243] this[164432]) call_tmp[676206]))
    (521576 'move' ret[521571](521575 'deref' call_tmp[676211]))
    (521573 return ret[521571])
  }
  function DefaultSparseDom[164378](?).dsiLast[162896](arg _mt[164438]:_MT[238], arg this[164436]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[521580] "RVV" "temp"
    unknown call_tmp[676220] "expr temp" "maybe param" "maybe type" "temp"
    (676223 'move' call_tmp[676220](387637 call _nnz _mt[243] this[164436]))
    unknown call_tmp[676225] "expr temp" "maybe param" "maybe type" "temp"
    (676228 'move' call_tmp[676225](162901 call(387632 call (partial) _indices _mt[243] this[164436]) call_tmp[676220]))
    (521585 'move' ret[521580](521584 'deref' call_tmp[676225]))
    (521582 return ret[521580])
  }
  function DefaultSparseDom[164378](?).add_help[162911](arg _mt[164442]:_MT[238], arg this[164440]:DefaultSparseDom[164378](?), arg ind[162909]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521589] "RVV" "temp"
    unknown call_tmp[676232] "maybe param" "maybe type" "temp"
    (676235 'move' call_tmp[676232](162921 call(387641 call (partial) find _mt[243] this[164440]) ind[162909]))
    const tmp[162922] "dead at end of block" "const" "insert auto destroy" "temp"
    (544227 'init var' tmp[162922] call_tmp[676232])
    (162929 call _check_tuple_var_decl tmp[162922] 2)
    (482638 'end of statement')
    unknown call_tmp[676237] "maybe param" "maybe type" "temp"
    (676240 'move' call_tmp[676237](162923 call tmp[162922] 0))
    const found[162913] "dead at end of block" "const" "insert auto destroy"
    (544229 'init var' found[162913] call_tmp[676237])
    unknown call_tmp[676242] "maybe param" "maybe type" "temp"
    (676245 'move' call_tmp[676242](162926 call tmp[162922] 1))
    const insertPt[162915] "dead at end of block" "const" "insert auto destroy"
    (544231 'init var' insertPt[162915] call_tmp[676242])
    (162934 'end of statement')
    unknown call_tmp[676247] "expr temp" "maybe param" "maybe type" "temp"
    (676250 'move' call_tmp[676247](162940 call _cond_test found[162913]))
    if call_tmp[676247]
    {
      (521594 'move' ret[521589](521593 'deref' 0))
      gotoReturn _end_add_help[521587] _end_add_help[521587]
    }
    unknown call_tmp[676252] "expr temp" "maybe param" "maybe type" "temp"
    (676255 'move' call_tmp[676252](162954 call _cond_test 1))
    if call_tmp[676252]
    {
      (162952 call(162947 call (partial) boundsCheck _mt[243] this[164440]) ind[162909])
    }
    unknown call_tmp[676261] "expr temp" "maybe param" "maybe type" "temp"
    (676264 'move' call_tmp[676261](387650 call _nnz _mt[243] this[164440]))
    (162961 call += call_tmp[676261] 1)
    (482641 'end of statement')
    unknown call_tmp[676268] "expr temp" "maybe param" "maybe type" "temp"
    (676271 'move' call_tmp[676268](361232 call nnzDom _mt[243] this[164440]))
    unknown call_tmp[676275] "maybe param" "maybe type" "temp"
    (676278 'move' call_tmp[676275](162965 call size _mt[243] call_tmp[676268]))
    const oldNNZDomSize[162968] "dead at end of block" "const" "insert auto destroy"
    (544233 'init var' oldNNZDomSize[162968] call_tmp[676275])
    (162971 'end of statement')
    unknown call_tmp[676284] "expr temp" "maybe param" "maybe type" "temp"
    (676287 'move' call_tmp[676284](387661 call _nnz _mt[243] this[164440]))
    (162975 call(387656 call (partial) _grow _mt[243] this[164440]) call_tmp[676284])
    (482642 'end of statement')
    {
      unknown _indexOfInterest[163005] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163006] "expr temp" "temp"
      unknown call_tmp[676291] "expr temp" "maybe param" "maybe type" "temp"
      (676294 'move' call_tmp[676291](387679 call _nnz _mt[243] this[164440]))
      unknown call_tmp[676296] "expr temp" "maybe param" "maybe type" "temp"
      (676299 'move' call_tmp[676296](163029 call - call_tmp[676291] 1))
      unknown call_tmp[676301] "expr temp" "maybe param" "maybe type" "temp"
      (676304 'move' call_tmp[676301](163025 call - 1))
      unknown call_tmp[676306] "expr temp" "maybe param" "maybe type" "temp"
      (676309 'move' call_tmp[676306](163032 call chpl_direct_range_iter insertPt[162915] call_tmp[676296] call_tmp[676301]))
      (163015 'move' _iterator[163006](163013 call _getIterator call_tmp[676306]))
      Defer
      {
        {
          (163048 call _freeIterator _iterator[163006])
        }
      }
      { scopeless type
        (163037 'move' _indexOfInterest[163005](163034 call iteratorIndex _iterator[163006]))
      }
      ForLoop[163007]
      {
        unknown i[163041] "index var" "insert auto destroy"
        (482644 'end of statement')
        (163043 'move' i[163041] _indexOfInterest[163005])
        (482645 'end of statement' i[163041])
        {
          unknown call_tmp[676313] "expr temp" "maybe param" "maybe type" "temp"
          (676316 'move' call_tmp[676313](162993 call + i[163041] 1))
          unknown call_tmp[676318] "expr temp" "maybe param" "maybe type" "temp"
          (676321 'move' call_tmp[676318](162996 call(387666 call (partial) _indices _mt[243] this[164440]) call_tmp[676313]))
          unknown call_tmp[676325] "expr temp" "maybe param" "maybe type" "temp"
          (676328 'move' call_tmp[676325](163000 call(387672 call (partial) _indices _mt[243] this[164440]) i[163041]))
          (163001 call = call_tmp[676318] call_tmp[676325])
          (482647 'end of statement' i[163041] i[163041])
        }
        label _continueLabel[163010]
        _indexOfInterest[163005]
        _iterator[163006]
      }
      label _breakLabel[163011]
    }
    unknown call_tmp[676332] "expr temp" "maybe param" "maybe type" "temp"
    (676335 'move' call_tmp[676332](163058 call(387684 call (partial) _indices _mt[243] this[164440]) insertPt[162915]))
    (163060 call = call_tmp[676332] ind[162909])
    (482650 'end of statement' insertPt[162915])
    {
      unknown _indexOfInterest[163092] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163093] "expr temp" "temp"
      unknown call_tmp[676339] "expr temp" "maybe param" "maybe type" "temp"
      (676342 'move' call_tmp[676339](387691 call _arrs _mt[243] this[164440]))
      (163102 'move' _iterator[163093](163100 call _getIterator call_tmp[676339]))
      Defer
      {
        {
          (163118 call _freeIterator _iterator[163093])
        }
      }
      { scopeless type
        (163107 'move' _indexOfInterest[163092](163104 call iteratorIndex _iterator[163093]))
      }
      ForLoop[163094]
      {
        unknown a[163111] "index var" "insert auto destroy"
        (482653 'end of statement')
        (163113 'move' a[163111] _indexOfInterest[163092])
        (482654 'end of statement' a[163111])
        {
          unknown call_tmp[676348] "expr temp" "maybe param" "maybe type" "temp"
          (676351 'move' call_tmp[676348](387697 call _nnz _mt[243] this[164440]))
          unknown call_tmp[676353] "expr temp" "maybe param" "maybe type" "temp"
          (676356 'move' call_tmp[676353](163074 call - call_tmp[676348] 1))
          unknown call_tmp[676358] "expr temp" "maybe param" "maybe type" "temp"
          (676361 'move' call_tmp[676358](163076 call chpl_build_bounded_range insertPt[162915] call_tmp[676353]))
          unknown call_tmp[676363] "expr temp" "maybe param" "maybe type" "temp"
          (676366 'move' call_tmp[676363](163081 call + oldNNZDomSize[162968] 1))
          unknown call_tmp[676370] "expr temp" "maybe param" "maybe type" "temp"
          (676373 'move' call_tmp[676370](361238 call nnzDom _mt[243] this[164440]))
          unknown call_tmp[676377] "expr temp" "maybe param" "maybe type" "temp"
          (676380 'move' call_tmp[676377](163084 call size _mt[243] call_tmp[676370]))
          unknown call_tmp[676382] "expr temp" "maybe param" "maybe type" "temp"
          (676385 'move' call_tmp[676382](163087 call chpl_build_bounded_range call_tmp[676363] call_tmp[676377]))
          (163089 call(163068 call (partial) sparseShiftArray _mt[243] a[163111]) call_tmp[676358] call_tmp[676382])
          (482656 'end of statement' a[163111] insertPt[162915] oldNNZDomSize[162968])
        }
        label _continueLabel[163097]
        _indexOfInterest[163092]
        _iterator[163093]
      }
      label _breakLabel[163098]
    }
    (521599 'move' ret[521589](521598 'deref' 1))
    label _end_add_help[521587]
    (521591 return ret[521589])
  }
  function DefaultSparseDom[164378](?).rem_help[163134](arg _mt[164446]:_MT[238], arg this[164444]:DefaultSparseDom[164378](?), arg ind[163132]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[521603] "RVV" "temp"
    unknown call_tmp[676389] "maybe param" "maybe type" "temp"
    (676392 'move' call_tmp[676389](163144 call(387702 call (partial) find _mt[243] this[164444]) ind[163132]))
    const tmp[163145] "dead at end of block" "const" "insert auto destroy" "temp"
    (544235 'init var' tmp[163145] call_tmp[676389])
    (163152 call _check_tuple_var_decl tmp[163145] 2)
    (482661 'end of statement')
    unknown call_tmp[676394] "maybe param" "maybe type" "temp"
    (676397 'move' call_tmp[676394](163146 call tmp[163145] 0))
    const found[163136] "dead at end of block" "const" "insert auto destroy"
    (544237 'init var' found[163136] call_tmp[676394])
    unknown call_tmp[676399] "maybe param" "maybe type" "temp"
    (676402 'move' call_tmp[676399](163149 call tmp[163145] 1))
    const insertPt[163138] "dead at end of block" "const" "insert auto destroy"
    (544239 'init var' insertPt[163138] call_tmp[676399])
    (163157 'end of statement')
    unknown call_tmp[676404] "expr temp" "maybe param" "maybe type" "temp"
    (676407 'move' call_tmp[676404](163160 call ! found[163136]))
    unknown call_tmp[676409] "expr temp" "maybe param" "maybe type" "temp"
    (676412 'move' call_tmp[676409](163184 call _cond_test call_tmp[676404]))
    if call_tmp[676409]
    {
      (163182 call halt "index not in domain: " ind[163132])
    }
    unknown call_tmp[676416] "expr temp" "maybe param" "maybe type" "temp"
    (676419 'move' call_tmp[676416](387710 call _nnz _mt[243] this[164444]))
    (163191 call -= call_tmp[676416] 1)
    (482663 'end of statement')
    {
      unknown _indexOfInterest[163214] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163215] "expr temp" "temp"
      unknown call_tmp[676423] "expr temp" "maybe param" "maybe type" "temp"
      (676426 'move' call_tmp[676423](387728 call _nnz _mt[243] this[164444]))
      unknown call_tmp[676428] "expr temp" "maybe param" "maybe type" "temp"
      (676431 'move' call_tmp[676428](163229 call chpl_direct_range_iter insertPt[163138] call_tmp[676423] 1))
      (163224 'move' _iterator[163215](163222 call _getIterator call_tmp[676428]))
      Defer
      {
        {
          (163245 call _freeIterator _iterator[163215])
        }
      }
      { scopeless type
        (163234 'move' _indexOfInterest[163214](163231 call iteratorIndex _iterator[163215]))
      }
      ForLoop[163216]
      {
        unknown i[163238] "index var" "insert auto destroy"
        (482665 'end of statement')
        (163240 'move' i[163238] _indexOfInterest[163214])
        (482666 'end of statement' i[163238])
        {
          unknown call_tmp[676435] "expr temp" "maybe param" "maybe type" "temp"
          (676438 'move' call_tmp[676435](163202 call(387715 call (partial) _indices _mt[243] this[164444]) i[163238]))
          unknown call_tmp[676442] "expr temp" "maybe param" "maybe type" "temp"
          (676445 'move' call_tmp[676442](163206 call + i[163238] 1))
          unknown call_tmp[676447] "expr temp" "maybe param" "maybe type" "temp"
          (676450 'move' call_tmp[676447](163209 call(387721 call (partial) _indices _mt[243] this[164444]) call_tmp[676442]))
          (163210 call = call_tmp[676435] call_tmp[676447])
          (482668 'end of statement' i[163238] i[163238])
        }
        label _continueLabel[163219]
        _indexOfInterest[163214]
        _iterator[163215]
      }
      label _breakLabel[163220]
    }
    {
      unknown _indexOfInterest[163271] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[163272] "expr temp" "temp"
      unknown call_tmp[676454] "expr temp" "maybe param" "maybe type" "temp"
      (676457 'move' call_tmp[676454](387733 call _arrs _mt[243] this[164444]))
      (163281 'move' _iterator[163272](163279 call _getIterator call_tmp[676454]))
      Defer
      {
        {
          (163297 call _freeIterator _iterator[163272])
        }
      }
      { scopeless type
        (163286 'move' _indexOfInterest[163271](163283 call iteratorIndex _iterator[163272]))
      }
      ForLoop[163273]
      {
        unknown a[163290] "index var" "insert auto destroy"
        (482672 'end of statement')
        (163292 'move' a[163290] _indexOfInterest[163271])
        (482673 'end of statement' a[163290])
        {
          unknown call_tmp[676463] "expr temp" "maybe param" "maybe type" "temp"
          (676466 'move' call_tmp[676463](387739 call _nnz _mt[243] this[164444]))
          unknown call_tmp[676468] "expr temp" "maybe param" "maybe type" "temp"
          (676471 'move' call_tmp[676468](163263 call - call_tmp[676463] 1))
          unknown call_tmp[676473] "expr temp" "maybe param" "maybe type" "temp"
          (676476 'move' call_tmp[676473](163265 call chpl_build_bounded_range insertPt[163138] call_tmp[676468]))
          (163268 call(163257 call (partial) sparseShiftArrayBack _mt[243] a[163290]) call_tmp[676473])
          (482675 'end of statement' a[163290] insertPt[163138])
        }
        label _continueLabel[163276]
        _indexOfInterest[163271]
        _iterator[163272]
      }
      label _breakLabel[163277]
    }
    (521608 'move' ret[521603](521607 'deref' 1))
    (521605 return ret[521603])
  }
  function DefaultSparseDom[164378](?).dsiAdd[163315](arg _mt[164450]:_MT[238], arg this[164448]:DefaultSparseDom[164378](?), arg ind[163312] :
  (387744 call idxType _mt[243] this[164448])) : _unknown[51] "method" "primary method"
  {
    unknown ret[521612] "RVV" "temp"
    unknown call_tmp[676482] "expr temp" "maybe param" "maybe type" "temp"
    (676485 'move' call_tmp[676482](163324 call(387755 call (partial) add_help _mt[243] this[164448]) ind[163312]))
    (521617 'move' ret[521612](521616 'deref' call_tmp[676482]))
    (521614 return ret[521612])
  }
  where {
    unknown call_tmp[676489] "expr temp" "maybe param" "maybe type" "temp"
    (676492 'move' call_tmp[676489](387749 call rank _mt[243] this[164448]))
    (163319 call == call_tmp[676489] 1)
  }
  function DefaultSparseDom[164378](?).dsiRemove[163337](arg _mt[164454]:_MT[238], arg this[164452]:DefaultSparseDom[164378](?), arg ind[163334] :
  (387761 call idxType _mt[243] this[164452])) : _unknown[51] "method" "primary method"
  {
    unknown ret[521621] "RVV" "temp"
    unknown call_tmp[676498] "expr temp" "maybe param" "maybe type" "temp"
    (676501 'move' call_tmp[676498](163346 call(387772 call (partial) rem_help _mt[243] this[164452]) ind[163334]))
    (521626 'move' ret[521621](521625 'deref' call_tmp[676498]))
    (521623 return ret[521621])
  }
  where {
    unknown call_tmp[676505] "expr temp" "maybe param" "maybe type" "temp"
    (676508 'move' call_tmp[676505](387766 call rank _mt[243] this[164452]))
    (163341 call == call_tmp[676505] 1)
  }
  function DefaultSparseDom[164378](?).dsiAdd[163362](arg _mt[164458]:_MT[238], arg this[164456]:DefaultSparseDom[164378](?), arg ind[163359] :
  unknown call_tmp[676512] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521630] "RVV" "temp"
    unknown call_tmp[676526] "expr temp" "maybe param" "maybe type" "temp"
    (676529 'move' call_tmp[676526](387788 call rank _mt[243] this[164456]))
    unknown call_tmp[676531] "expr temp" "maybe param" "maybe type" "temp"
    (676534 'move' call_tmp[676531](163366 call == call_tmp[676526] 1))
    unknown call_tmp[676536] "expr temp" "maybe param" "maybe type" "temp"
    (676539 'move' call_tmp[676536](163385 call _cond_test call_tmp[676531]))
    if call_tmp[676536]
    {
      unknown call_tmp[676543] "expr temp" "maybe param" "maybe type" "temp"
      (676546 'move' call_tmp[676543](163372 call ind[163359] 0))
      unknown call_tmp[676548] "expr temp" "maybe param" "maybe type" "temp"
      (676551 'move' call_tmp[676548](163374 call(387792 call (partial) add_help _mt[243] this[164456]) call_tmp[676543]))
      (521635 'move' ret[521630](521634 'deref' call_tmp[676548]))
      gotoReturn _end_dsiAdd[521628] _end_dsiAdd[521628]
    }
    {
      unknown call_tmp[676555] "expr temp" "maybe param" "maybe type" "temp"
      (676558 'move' call_tmp[676555](163381 call(387797 call (partial) add_help _mt[243] this[164456]) ind[163359]))
      (521640 'move' ret[521630](521639 'deref' call_tmp[676555]))
      gotoReturn _end_dsiAdd[521628] _end_dsiAdd[521628]
    }
    label _end_dsiAdd[521628]
    (521632 return ret[521630])
  }
  function DefaultSparseDom[164378](?).dsiRemove[163401](arg _mt[164462]:_MT[238], arg this[164460]:DefaultSparseDom[164378](?), arg ind[163398] :
  unknown call_tmp[676562] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521646] "RVV" "temp"
    unknown call_tmp[676576] "expr temp" "maybe param" "maybe type" "temp"
    (676579 'move' call_tmp[676576](387813 call rank _mt[243] this[164460]))
    unknown call_tmp[676581] "expr temp" "maybe param" "maybe type" "temp"
    (676584 'move' call_tmp[676581](163405 call == call_tmp[676576] 1))
    unknown call_tmp[676586] "expr temp" "maybe param" "maybe type" "temp"
    (676589 'move' call_tmp[676586](163424 call _cond_test call_tmp[676581]))
    if call_tmp[676586]
    {
      unknown call_tmp[676593] "expr temp" "maybe param" "maybe type" "temp"
      (676596 'move' call_tmp[676593](163411 call ind[163398] 0))
      unknown call_tmp[676598] "expr temp" "maybe param" "maybe type" "temp"
      (676601 'move' call_tmp[676598](163413 call(387817 call (partial) rem_help _mt[243] this[164460]) call_tmp[676593]))
      (521651 'move' ret[521646](521650 'deref' call_tmp[676598]))
      gotoReturn _end_dsiRemove[521644] _end_dsiRemove[521644]
    }
    {
      unknown call_tmp[676605] "expr temp" "maybe param" "maybe type" "temp"
      (676608 'move' call_tmp[676605](163420 call(387822 call (partial) rem_help _mt[243] this[164460]) ind[163398]))
      (521656 'move' ret[521646](521655 'deref' call_tmp[676605]))
      gotoReturn _end_dsiRemove[521644] _end_dsiRemove[521644]
    }
    label _end_dsiRemove[521644]
    (521648 return ret[521646])
  }
  function DefaultSparseDom[164378](?).bulkAdd_help[163446](arg _mt[164466]:_MT[238], arg this[164464]:DefaultSparseDom[164378](?), arg inds[163443]:_array[133594](?), arg dataSorted[163449] :
  0 =
  0, arg isUnique[163453] :
  0 =
  0, arg addOn[163457] :
  nilLocale[89942] =
  nilLocale[89942]) : _unknown[51] "compiler added where" "method" "primary method" "method overrides"
  {
    unknown ret[521662] "RVV" "temp"
    unknown call_tmp[676610] "expr temp" "maybe param" "maybe type" "temp"
    (676613 'move' call_tmp[676610](163466 call != addOn[163457] nilLocale[89942]))
    unknown call_tmp[676615] "expr temp" "maybe param" "maybe type" "temp"
    (676618 'move' call_tmp[676615](163504 call _cond_test call_tmp[676610]))
    if call_tmp[676615]
    {
      unknown call_tmp[676620] "expr temp" "maybe param" "maybe type" "temp"
      (676623 'move' call_tmp[676620](163470 '_wide_get_locale' this[164464]))
      unknown call_tmp[676625] "expr temp" "maybe param" "maybe type" "temp"
      (676628 'move' call_tmp[676625](163471 call chpl_localeID_to_locale call_tmp[676620]))
      unknown call_tmp[676630] "expr temp" "maybe param" "maybe type" "temp"
      (676633 'move' call_tmp[676630](163473 call != addOn[163457] call_tmp[676625]))
      unknown call_tmp[676635] "expr temp" "maybe param" "maybe type" "temp"
      (676638 'move' call_tmp[676635](163499 call _cond_test call_tmp[676630]))
      if call_tmp[676635]
      {
        (163496 call halt "Bulk index addition is only possible on the locale where the\n              sparse domain is created")
      }
    }
    (163519 call(387844 call (partial) bulkAdd_prepareInds _mt[243] this[164464]) inds[163443] dataSorted[163449] isUnique[163453] defaultComparator[267998])
    (482686 'end of statement')
    unknown call_tmp[676644] "expr temp" "maybe param" "maybe type" "temp"
    (676647 'move' call_tmp[676644](387852 call _nnz _mt[243] this[164464]))
    unknown call_tmp[676649] "expr temp" "maybe param" "maybe type" "temp"
    (676652 'move' call_tmp[676649](163523 call == call_tmp[676644] 0))
    unknown call_tmp[676654] "expr temp" "maybe param" "maybe type" "temp"
    (676657 'move' call_tmp[676654](163684 call _cond_test call_tmp[676649]))
    if call_tmp[676654]
    {
      const dupCount[163534] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[570292] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570293] "maybe param" "temp"
      (570298 'move' tmp[570293](570296 call _cond_test isUnique[163453]))
      if tmp[570293]
      {
        (570303 'move' tmp[570292](570300 '_paramFoldLogical' tmp[570293] 0))
      }
      {
        unknown tmp[570305] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570307 'move' tmp[570305](163530 call(387859 call (partial) _countDuplicates _mt[243] this[164464]) inds[163443]))
        (570312 'move' tmp[570292](570309 '_paramFoldLogical' tmp[570293] tmp[570305]))
      }
      (544241 'init var' dupCount[163534] tmp[570292])
      (163537 'end of statement')
      unknown call_tmp[676663] "expr temp" "maybe param" "maybe type" "temp"
      (676666 'move' call_tmp[676663](387865 call _nnz _mt[243] this[164464]))
      unknown call_tmp[676670] "expr temp" "maybe param" "maybe type" "temp"
      (676673 'move' call_tmp[676670](163541 call size _mt[243] inds[163443]))
      unknown call_tmp[676675] "expr temp" "maybe param" "maybe type" "temp"
      (676678 'move' call_tmp[676675](163545 call - call_tmp[676670] dupCount[163534]))
      (163547 call += call_tmp[676663] call_tmp[676675])
      (482687 'end of statement' dupCount[163534])
      (163552 call(387872 call (partial) _bulkGrow _mt[243] this[164464]))
      (482689 'end of statement')
      unknown call_tmp[676684] "expr temp" "maybe param" "maybe type" "temp"
      (676687 'move' call_tmp[676684](361249 call _indices _mt[243] this[164464]))
      unknown call_tmp[676691] "expr temp" "maybe param" "maybe type" "temp"
      (676694 'move' call_tmp[676691](163555 call _dom _mt[243] call_tmp[676684]))
      unknown call_tmp[676698] "maybe param" "maybe type" "temp"
      (676701 'move' call_tmp[676698](163558 call low _mt[243] call_tmp[676691]))
      unknown indIdx[163561] "dead at end of block" "insert auto destroy"
      (544243 'init var' indIdx[163561] call_tmp[676698])
      (163564 'end of statement')
      unknown call_tmp[676705] "expr temp" "maybe param" "maybe type" "temp"
      (676708 'move' call_tmp[676705](361254 call parentDom _mt[243] this[164464]))
      unknown call_tmp[676712] "expr temp" "maybe param" "maybe type" "temp"
      (676715 'move' call_tmp[676712](163566 call low _mt[243] call_tmp[676705]))
      unknown call_tmp[676717] "maybe param" "maybe type" "temp"
      (676720 'move' call_tmp[676717](163570 call - call_tmp[676712] 1))
      unknown prevIdx[163572] "dead at end of block" "insert auto destroy"
      (544245 'init var' prevIdx[163572] call_tmp[676717])
      (163575 'end of statement')
      unknown call_tmp[676722] "expr temp" "maybe param" "maybe type" "temp"
      (676725 'move' call_tmp[676722](163680 call _cond_test isUnique[163453]))
      if call_tmp[676722]
      {
        unknown call_tmp[676731] "expr temp" "maybe param" "maybe type" "temp"
        (676734 'move' call_tmp[676731](361259 call _indices _mt[243] this[164464]))
        unknown call_tmp[676738] "expr temp" "maybe param" "maybe type" "temp"
        (676741 'move' call_tmp[676738](163579 call _dom _mt[243] call_tmp[676731]))
        unknown call_tmp[676745] "expr temp" "maybe param" "maybe type" "temp"
        (676748 'move' call_tmp[676745](163582 call low _mt[243] call_tmp[676738]))
        unknown call_tmp[676750] "expr temp" "maybe param" "maybe type" "temp"
        (676753 'move' call_tmp[676750](163585 call chpl_build_low_bounded_range call_tmp[676745]))
        unknown call_tmp[676757] "expr temp" "maybe param" "maybe type" "temp"
        (676760 'move' call_tmp[676757](163588 call size _mt[243] inds[163443]))
        unknown call_tmp[676762] "expr temp" "maybe param" "maybe type" "temp"
        (676765 'move' call_tmp[676762](163591 call # call_tmp[676750] call_tmp[676757]))
        unknown call_tmp[676767] "expr temp" "maybe param" "maybe type" "temp"
        (676770 'move' call_tmp[676767](163594 call(387878 call (partial) _indices _mt[243] this[164464]) call_tmp[676762]))
        (163596 call = call_tmp[676767] inds[163443])
        (482690 'end of statement')
        unknown call_tmp[676774] "expr temp" "maybe param" "maybe type" "temp"
        (676777 'move' call_tmp[676774](163601 call size _mt[243] inds[163443]))
        (521667 'move' ret[521662](521666 'deref' call_tmp[676774]))
        gotoReturn _end_bulkAdd_help[521660] _end_bulkAdd_help[521660]
      }
      {
        {
          unknown _indexOfInterest[163640] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[163641] "expr temp" "temp"
          (163650 'move' _iterator[163641](163648 call _getIterator inds[163443]))
          Defer
          {
            {
              (163666 call _freeIterator _iterator[163641])
            }
          }
          { scopeless type
            (163655 'move' _indexOfInterest[163640](163652 call iteratorIndex _iterator[163641]))
          }
          ForLoop[163642]
          {
            unknown i[163659] "index var" "insert auto destroy"
            (482693 'end of statement')
            (163661 'move' i[163659] _indexOfInterest[163640])
            (482694 'end of statement' i[163659])
            {
              unknown call_tmp[676779] "expr temp" "maybe param" "maybe type" "temp"
              (676782 'move' call_tmp[676779](163610 call == i[163659] prevIdx[163572]))
              unknown call_tmp[676784] "expr temp" "maybe param" "maybe type" "temp"
              (676787 'move' call_tmp[676784](163620 call _cond_test call_tmp[676779]))
              if call_tmp[676784]
              {
                continue _continueLabel[163645] _continueLabel[163645]
              }
              {
                (163617 call = prevIdx[163572] i[163659])
                (482696 'end of statement' prevIdx[163572] i[163659])
              }
              unknown call_tmp[676791] "expr temp" "maybe param" "maybe type" "temp"
              (676794 'move' call_tmp[676791](163630 call(387889 call (partial) _indices _mt[243] this[164464]) indIdx[163561]))
              (163632 call = call_tmp[676791] i[163659])
              (482699 'end of statement' indIdx[163561] i[163659])
              (163637 call += indIdx[163561] 1)
              (482702 'end of statement' indIdx[163561])
            }
            label _continueLabel[163645]
            _indexOfInterest[163640]
            _iterator[163641]
          }
          label _breakLabel[163646]
        }
        unknown call_tmp[676796] "expr temp" "maybe param" "maybe type" "temp"
        (676799 'move' call_tmp[676796](163676 call - indIdx[163561] 1))
        (521672 'move' ret[521662](521671 'deref' call_tmp[676796]))
        gotoReturn _end_bulkAdd_help[521660] _end_bulkAdd_help[521660]
        (482704 'end of statement' indIdx[163561])
      }
    }
    unknown call_tmp[676803] "maybe param" "maybe type" "temp"
    (676806 'move' call_tmp[676803](163698 call(387899 call (partial) __getActualInsertPts _mt[243] this[164464]) this[164464] inds[163443] isUnique[163453]))
    const tmp[163699] "dead at end of block" "const" "insert auto destroy" "temp"
    (544247 'init var' tmp[163699] call_tmp[676803])
    (163706 call _check_tuple_var_decl tmp[163699] 2)
    (482706 'end of statement')
    unknown call_tmp[676808] "maybe param" "maybe type" "temp"
    (676811 'move' call_tmp[676808](163700 call tmp[163699] 0))
    const actualInsertPts[163688] "dead at end of block" "const" "insert auto destroy"
    (544249 'init var' actualInsertPts[163688] call_tmp[676808])
    unknown call_tmp[676813] "maybe param" "maybe type" "temp"
    (676816 'move' call_tmp[676813](163703 call tmp[163699] 1))
    const actualAddCnt[163690] "dead at end of block" "const" "insert auto destroy"
    (544251 'init var' actualAddCnt[163690] call_tmp[676813])
    (163711 'end of statement')
    unknown call_tmp[676820] "maybe param" "maybe type" "temp"
    (676823 'move' call_tmp[676820](387907 call _nnz _mt[243] this[164464]))
    const oldnnz[163713] "dead at end of block" "const" "insert auto destroy"
    (544253 'init var' oldnnz[163713] call_tmp[676820])
    (163716 'end of statement')
    unknown call_tmp[676827] "expr temp" "maybe param" "maybe type" "temp"
    (676830 'move' call_tmp[676827](387912 call _nnz _mt[243] this[164464]))
    (163719 call += call_tmp[676827] actualAddCnt[163690])
    (482707 'end of statement' actualAddCnt[163690])
    (163724 call(387917 call (partial) _bulkGrow _mt[243] this[164464]))
    (482709 'end of statement')
    unknown call_tmp[676836] "expr temp" "maybe param" "maybe type" "temp"
    (676839 'move' call_tmp[676836](462288 call _dom _mt[243] inds[163443]))
    unknown call_tmp[676843] "maybe param" "maybe type" "temp"
    (676846 'move' call_tmp[676843](163727 call high _mt[243] call_tmp[676836]))
    unknown newIndIdx[163730] "dead at end of block" "insert auto destroy"
    (544255 'init var' newIndIdx[163730] call_tmp[676843])
    (163733 'end of statement')
    unknown oldIndIdx[163735] "dead at end of block" "insert auto destroy"
    (544257 'init var' oldIndIdx[163735] oldnnz[163713])
    (163738 'end of statement')
    unknown call_tmp[676848] "maybe param" "maybe type" "temp"
    (676851 'move' call_tmp[676848](163742 call actualInsertPts[163688] newIndIdx[163730]))
    unknown newLoc[163743] "dead at end of block" "insert auto destroy"
    (544259 'init var' newLoc[163743] call_tmp[676848])
    (163746 'end of statement')
    {
      unknown tmp[163785] "temp"
      unknown call_tmp[676853] "expr temp" "maybe param" "maybe type" "temp"
      (676856 'move' call_tmp[676853](163811 call - 1))
      unknown call_tmp[676858] "expr temp" "maybe param" "maybe type" "temp"
      (676861 'move' call_tmp[676858](163808 call == newLoc[163743] call_tmp[676853]))
      (163813 'move' tmp[163785](163806 call _cond_test call_tmp[676858]))
      WhileDo[163790]
      {
        {
          (163755 call -= newIndIdx[163730] 1)
          (482713 'end of statement' newIndIdx[163730])
          unknown call_tmp[676865] "expr temp" "maybe param" "maybe type" "temp"
          (676868 'move' call_tmp[676865](462292 call _dom _mt[243] inds[163443]))
          unknown call_tmp[676872] "expr temp" "maybe param" "maybe type" "temp"
          (676875 'move' call_tmp[676872](163761 call low _mt[243] call_tmp[676865]))
          unknown call_tmp[676877] "expr temp" "maybe param" "maybe type" "temp"
          (676880 'move' call_tmp[676877](163765 call - call_tmp[676872] 1))
          unknown call_tmp[676882] "expr temp" "maybe param" "maybe type" "temp"
          (676885 'move' call_tmp[676882](163767 call == newIndIdx[163730] call_tmp[676877]))
          unknown call_tmp[676887] "expr temp" "maybe param" "maybe type" "temp"
          (676890 'move' call_tmp[676887](163772 call _cond_test call_tmp[676882]))
          if call_tmp[676887]
          {
            break _breakLabel[163789] _breakLabel[163789]
          }
          unknown call_tmp[676892] "expr temp" "maybe param" "maybe type" "temp"
          (676895 'move' call_tmp[676892](163781 call actualInsertPts[163688] newIndIdx[163730]))
          (163782 call = newLoc[163743] call_tmp[676892])
          (482715 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
        }
        label _continueLabel[163788]
        unknown call_tmp[676897] "expr temp" "maybe param" "maybe type" "temp"
        (676900 'move' call_tmp[676897](163799 call - 1))
        unknown call_tmp[676902] "expr temp" "maybe param" "maybe type" "temp"
        (676905 'move' call_tmp[676902](163796 call == newLoc[163743] call_tmp[676897]))
        (163801 'move' tmp[163785](163794 call _cond_test call_tmp[676902]))
        tmp[163785]
      }
      label _breakLabel[163789]
    }
    unknown arrShiftMap[163829] "dead at end of block" "insert auto destroy"
    unknown call_tmp[676907] "expr temp" "maybe param" "maybe type" "temp"
    (676910 'move' call_tmp[676907](163818 call chpl_build_bounded_range 1 oldnnz[163713]))
    unknown call_tmp[676912] "expr temp" "maybe param" "maybe type" "temp"
    (676915 'move' call_tmp[676912](163821 call chpl__buildDomainExpr call_tmp[676907]))
    unknown call_tmp[676917] "expr temp" "maybe param" "maybe type" "temp"
    (676920 'move' call_tmp[676917](163825 call chpl__ensureDomainExpr call_tmp[676912]))
    unknown call_tmp[676922] "expr temp" "maybe param" "maybe type" "temp"
    (676925 'move' call_tmp[676922](163827 call chpl__buildArrayRuntimeType call_tmp[676917] int(64)[13]))
    (544261 'default init var' arrShiftMap[163829] call_tmp[676922])
    (163832 'end of statement' oldnnz[163713] actualInsertPts[163688] newIndIdx[163730] oldnnz[163713])
    {
      unknown _indexOfInterest[164037] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[164038] "expr temp" "temp"
      unknown call_tmp[676929] "expr temp" "maybe param" "maybe type" "temp"
      (676932 'move' call_tmp[676929](387976 call _nnz _mt[243] this[164464]))
      unknown call_tmp[676934] "expr temp" "maybe param" "maybe type" "temp"
      (676937 'move' call_tmp[676934](164054 call - 1))
      unknown call_tmp[676939] "expr temp" "maybe param" "maybe type" "temp"
      (676942 'move' call_tmp[676939](164058 call chpl_direct_range_iter 1 call_tmp[676929] call_tmp[676934]))
      (164047 'move' _iterator[164038](164045 call _getIterator call_tmp[676939]))
      Defer
      {
        {
          (164074 call _freeIterator _iterator[164038])
        }
      }
      { scopeless type
        (164063 'move' _indexOfInterest[164037](164060 call iteratorIndex _iterator[164038]))
      }
      ForLoop[164039]
      {
        unknown i[164067] "index var" "insert auto destroy"
        (482721 'end of statement')
        (164069 'move' i[164067] _indexOfInterest[164037])
        (482722 'end of statement' i[164067])
        {
          unknown tmp[428287] "maybe param" "temp"
          (428298 'move' tmp[428287](163845 call >= oldIndIdx[163735] 1))
          unknown call_tmp[676944] "expr temp" "maybe param" "maybe type" "temp"
          (676947 'move' call_tmp[676944](428300 call _cond_invalid tmp[428287]))
          if call_tmp[676944]
          {
            (428303 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[570319] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570320] "maybe param" "temp"
          unknown call_tmp[676949] "expr temp" "maybe param" "maybe type" "temp"
          (676952 'move' call_tmp[676949](428288 call isTrue tmp[428287]))
          (570325 'move' tmp[570320](570323 call _cond_test call_tmp[676949]))
          if tmp[570320]
          {
            unknown tmp[570327] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[676954] "expr temp" "maybe param" "maybe type" "temp"
            (676957 'move' call_tmp[676954](163849 call > i[164067] newLoc[163743]))
            (570329 'move' tmp[570327](428291 call isTrue call_tmp[676954]))
            (570334 'move' tmp[570319](570331 '_paramFoldLogical' tmp[570320] tmp[570327]))
          }
          {
            (570339 'move' tmp[570319](570336 '_paramFoldLogical' tmp[570320] 0))
          }
          unknown call_tmp[676959] "expr temp" "maybe param" "maybe type" "temp"
          (676962 'move' call_tmp[676959](164031 call _cond_test tmp[570319]))
          if call_tmp[676959]
          {
            unknown call_tmp[676966] "expr temp" "maybe param" "maybe type" "temp"
            (676969 'move' call_tmp[676966](163856 call(387936 call (partial) _indices _mt[243] this[164464]) i[164067]))
            unknown call_tmp[676973] "expr temp" "maybe param" "maybe type" "temp"
            (676976 'move' call_tmp[676973](163860 call(387942 call (partial) _indices _mt[243] this[164464]) oldIndIdx[163735]))
            (163861 call = call_tmp[676966] call_tmp[676973])
            (482725 'end of statement' i[164067] oldIndIdx[163735])
            unknown call_tmp[676978] "expr temp" "maybe param" "maybe type" "temp"
            (676981 'move' call_tmp[676978](163868 call arrShiftMap[163829] oldIndIdx[163735]))
            (163870 call = call_tmp[676978] i[164067])
            (482728 'end of statement' arrShiftMap[163829] oldIndIdx[163735] i[164067])
            (163875 call -= oldIndIdx[163735] 1)
            (482732 'end of statement' oldIndIdx[163735])
          }
          {
            unknown tmp[428266] "maybe param" "temp"
            unknown call_tmp[676985] "expr temp" "maybe param" "maybe type" "temp"
            (676988 'move' call_tmp[676985](462296 call _dom _mt[243] inds[163443]))
            unknown call_tmp[676992] "expr temp" "maybe param" "maybe type" "temp"
            (676995 'move' call_tmp[676992](163880 call low _mt[243] call_tmp[676985]))
            (428277 'move' tmp[428266](163883 call >= newIndIdx[163730] call_tmp[676992]))
            unknown call_tmp[676997] "expr temp" "maybe param" "maybe type" "temp"
            (677000 'move' call_tmp[676997](428279 call _cond_invalid tmp[428266]))
            if call_tmp[676997]
            {
              (428282 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[570346] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[570347] "maybe param" "temp"
            unknown call_tmp[677002] "expr temp" "maybe param" "maybe type" "temp"
            (677005 'move' call_tmp[677002](428267 call isTrue tmp[428266]))
            (570352 'move' tmp[570347](570350 call _cond_test call_tmp[677002]))
            if tmp[570347]
            {
              unknown tmp[570354] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[677007] "expr temp" "maybe param" "maybe type" "temp"
              (677010 'move' call_tmp[677007](163887 call == i[164067] newLoc[163743]))
              (570356 'move' tmp[570354](428270 call isTrue call_tmp[677007]))
              (570361 'move' tmp[570346](570358 '_paramFoldLogical' tmp[570347] tmp[570354]))
            }
            {
              (570366 'move' tmp[570346](570363 '_paramFoldLogical' tmp[570347] 0))
            }
            unknown call_tmp[677012] "expr temp" "maybe param" "maybe type" "temp"
            (677015 'move' call_tmp[677012](164026 call _cond_test tmp[570346]))
            if call_tmp[677012]
            {
              unknown call_tmp[677019] "expr temp" "maybe param" "maybe type" "temp"
              (677022 'move' call_tmp[677019](163894 call(387955 call (partial) _indices _mt[243] this[164464]) i[164067]))
              unknown call_tmp[677024] "expr temp" "maybe param" "maybe type" "temp"
              (677027 'move' call_tmp[677024](163898 call inds[163443] newIndIdx[163730]))
              (163899 call = call_tmp[677019] call_tmp[677024])
              (482735 'end of statement' i[164067] newIndIdx[163730])
              (163905 call -= newIndIdx[163730] 1)
              (482738 'end of statement' newIndIdx[163730])
              unknown call_tmp[677031] "expr temp" "maybe param" "maybe type" "temp"
              (677034 'move' call_tmp[677031](462300 call _dom _mt[243] inds[163443]))
              unknown call_tmp[677038] "expr temp" "maybe param" "maybe type" "temp"
              (677041 'move' call_tmp[677038](163910 call low _mt[243] call_tmp[677031]))
              unknown call_tmp[677043] "expr temp" "maybe param" "maybe type" "temp"
              (677046 'move' call_tmp[677043](163913 call >= newIndIdx[163730] call_tmp[677038]))
              unknown call_tmp[677048] "expr temp" "maybe param" "maybe type" "temp"
              (677051 'move' call_tmp[677048](163930 call _cond_test call_tmp[677043]))
              if call_tmp[677048]
              {
                unknown call_tmp[677053] "expr temp" "maybe param" "maybe type" "temp"
                (677056 'move' call_tmp[677053](163919 call actualInsertPts[163688] newIndIdx[163730]))
                (163920 call = newLoc[163743] call_tmp[677053])
                (482740 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
              }
              {
                unknown call_tmp[677058] "expr temp" "maybe param" "maybe type" "temp"
                (677061 'move' call_tmp[677058](163925 call - 2))
                (163927 call = newLoc[163743] call_tmp[677058])
                (482744 'end of statement' newLoc[163743])
              }
              {
                unknown tmp[163974] "temp"
                unknown call_tmp[677063] "expr temp" "maybe param" "maybe type" "temp"
                (677066 'move' call_tmp[677063](164000 call - 1))
                unknown call_tmp[677068] "expr temp" "maybe param" "maybe type" "temp"
                (677071 'move' call_tmp[677068](163997 call == newLoc[163743] call_tmp[677063]))
                (164002 'move' tmp[163974](163995 call _cond_test call_tmp[677068]))
                WhileDo[163979]
                {
                  {
                    (163944 call -= newIndIdx[163730] 1)
                    (482746 'end of statement' newIndIdx[163730])
                    unknown call_tmp[677075] "expr temp" "maybe param" "maybe type" "temp"
                    (677078 'move' call_tmp[677075](462304 call _dom _mt[243] inds[163443]))
                    unknown call_tmp[677082] "expr temp" "maybe param" "maybe type" "temp"
                    (677085 'move' call_tmp[677082](163950 call low _mt[243] call_tmp[677075]))
                    unknown call_tmp[677087] "expr temp" "maybe param" "maybe type" "temp"
                    (677090 'move' call_tmp[677087](163954 call - call_tmp[677082] 1))
                    unknown call_tmp[677092] "expr temp" "maybe param" "maybe type" "temp"
                    (677095 'move' call_tmp[677092](163956 call == newIndIdx[163730] call_tmp[677087]))
                    unknown call_tmp[677097] "expr temp" "maybe param" "maybe type" "temp"
                    (677100 'move' call_tmp[677097](163961 call _cond_test call_tmp[677092]))
                    if call_tmp[677097]
                    {
                      break _breakLabel[163978] _breakLabel[163978]
                    }
                    unknown call_tmp[677102] "expr temp" "maybe param" "maybe type" "temp"
                    (677105 'move' call_tmp[677102](163970 call actualInsertPts[163688] newIndIdx[163730]))
                    (163971 call = newLoc[163743] call_tmp[677102])
                    (482748 'end of statement' newLoc[163743] actualInsertPts[163688] newIndIdx[163730])
                  }
                  label _continueLabel[163977]
                  unknown call_tmp[677107] "expr temp" "maybe param" "maybe type" "temp"
                  (677110 'move' call_tmp[677107](163988 call - 1))
                  unknown call_tmp[677112] "expr temp" "maybe param" "maybe type" "temp"
                  (677115 'move' call_tmp[677112](163985 call == newLoc[163743] call_tmp[677107]))
                  (163990 'move' tmp[163974](163983 call _cond_test call_tmp[677112]))
                  tmp[163974]
                }
                label _breakLabel[163978]
              }
            }
            {
              (164024 call halt "Something went wrong")
            }
          }
        }
        label _continueLabel[164042]
        _indexOfInterest[164037]
        _iterator[164038]
      }
      label _breakLabel[164043]
    }
    {
      unknown _indexOfInterest[164094] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[164095] "expr temp" "temp"
      unknown call_tmp[677119] "expr temp" "maybe param" "maybe type" "temp"
      (677122 'move' call_tmp[677119](387981 call _arrs _mt[243] this[164464]))
      (164104 'move' _iterator[164095](164102 call _getIterator call_tmp[677119]))
      Defer
      {
        {
          (164120 call _freeIterator _iterator[164095])
        }
      }
      { scopeless type
        (164109 'move' _indexOfInterest[164094](164106 call iteratorIndex _iterator[164095]))
      }
      ForLoop[164096]
      {
        unknown a[164113] "index var" "insert auto destroy"
        (482754 'end of statement')
        (164115 'move' a[164113] _indexOfInterest[164094])
        (482755 'end of statement' a[164113])
        (164092 call(164086 call (partial) sparseBulkShiftArray _mt[243] a[164113]) arrShiftMap[163829] oldnnz[163713])
        (482757 'end of statement' a[164113] arrShiftMap[163829] oldnnz[163713])
        label _continueLabel[164099]
        _indexOfInterest[164094]
        _iterator[164095]
      }
      label _breakLabel[164100]
    }
    (521677 'move' ret[521662](521676 'deref' actualAddCnt[163690]))
    gotoReturn _end_bulkAdd_help[521660] _end_bulkAdd_help[521660]
    (482761 'end of statement' actualAddCnt[163690])
    label _end_bulkAdd_help[521660]
    (521664 return ret[521662])
    (355210 'used modules list'(163461 'import' Sort[267989]))
    (361243 'referenced modules list' Sort[267989])
  }
  where {
    unknown call_tmp[677128] "expr temp" "maybe param" "maybe type" "temp"
    (677131 'move' call_tmp[677128](387828 call rank _mt[243] this[164464]))
    unknown call_tmp[677135] "expr temp" "maybe param" "maybe type" "temp"
    (677138 'move' call_tmp[677135](387833 call idxType _mt[243] this[164464]))
    unknown call_tmp[677140] "expr temp" "maybe param" "maybe type" "temp"
    (677143 'move' call_tmp[677140](163439 call chpl__buildIndexType call_tmp[677128] call_tmp[677135]))
    unknown call_tmp[677147] "expr temp" "maybe param" "maybe type" "temp"
    (677150 'move' call_tmp[677147](462312 call eltType _mt[243] inds[163443]))
    unknown call_tmp[677152] "expr temp" "maybe param" "maybe type" "temp"
    (677155 'move' call_tmp[677152](462316 call == call_tmp[677140] call_tmp[677147]))
    (462310 call & 1 call_tmp[677152])
  }
  function DefaultSparseDom[164378](?).dsiMyDist[164134](arg _mt[164470]:_MT[238], arg this[164468]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[521683] "RVV" "temp"
    unknown call_tmp[677159] "expr temp" "maybe param" "maybe type" "temp"
    (677162 'move' call_tmp[677159](387990 call dist _mt[243] this[164468]))
    (521689 'move' ret[521683](521688 'coerce' call_tmp[677159] unmanaged BaseDist[415511]))
    (521685 return ret[521683])
  }
  { scopeless type
    unmanaged BaseDist[415511]
  }
  function DefaultSparseDom[164378](?).dsiClear[164147](arg _mt[164474]:_MT[238], arg this[164472]:DefaultSparseDom[164378](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    unknown call_tmp[677166] "expr temp" "maybe param" "maybe type" "temp"
    (677169 'move' call_tmp[677166](387995 call _nnz _mt[243] this[164472]))
    (164151 call = call_tmp[677166] 0)
    (521691 return _void[55])
  }
  function DefaultSparseDom[164378](?).dimIter[164161](arg _mt[164478]:_MT[238], arg this[164476]:DefaultSparseDom[164378](?), param arg d[164159]:_any[178](?), arg ind[164163]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521695] "RVV" "temp"
    unknown call_tmp[677173] "expr temp" "maybe param" "maybe type" "temp"
    (677176 'move' call_tmp[677173](388001 call rank _mt[243] this[164476]))
    unknown call_tmp[677178] "expr temp" "maybe param" "maybe type" "temp"
    (677181 'move' call_tmp[677178](164168 call - call_tmp[677173] 1))
    unknown call_tmp[677183] "expr temp" "maybe param" "maybe type" "temp"
    (677186 'move' call_tmp[677183](164170 call != d[164159] call_tmp[677178]))
    unknown call_tmp[677188] "expr temp" "maybe param" "maybe type" "temp"
    (677191 'move' call_tmp[677188](164194 call _cond_test call_tmp[677183]))
    if call_tmp[677188]
    {
      (164191 call compilerError "dimIter() not supported on sparse domains for dimensions other than the last")
    }
    (164218 call halt "dimIter() not yet implemented for sparse domains")
    (482766 'end of statement')
    unknown yret[521699] "YVV" "temp"
    unknown call_tmp[677195] "expr temp" "maybe param" "maybe type" "temp"
    (677198 'move' call_tmp[677195](164223 call(388006 call (partial) _indices _mt[243] this[164476]) 0))
    (521702 'move' yret[521699](521701 'deref' call_tmp[677195]))
    (521704 yield yret[521699])
    (521697 return ret[521695])
  }
  function DefaultSparseDom[164378](?).dsiAssignDomain[164234](arg _mt[164482]:_MT[238], arg this[164480]:DefaultSparseDom[164378](?), arg rhs[164231]:_domain[125908](?), arg lhsPrivate[164237]:bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown tmp[428308] "maybe param" "temp"
    { scopeless type
      unknown call_type_tmp[492503] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[677202] "expr temp" "maybe param" "maybe type" "temp"
      (677205 'move' call_tmp[677202](164242 call _instance _mt[243] rhs[164231]))
      (492507 'move' call_type_tmp[492503](164245 'typeof' call_tmp[677202]))
    }
    unknown call_tmp[677207] "expr temp" "maybe param" "maybe type" "temp"
    (677210 'move' call_tmp[677207](164247 call _to_borrowed call_type_tmp[492503]))
    unknown call_tmp[677212] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (677215 'move' call_tmp[677212](164249 'typeof' this[164480]))
    (428319 'move' tmp[428308](164250 call == call_tmp[677207] call_tmp[677212]))
    unknown call_tmp[677217] "expr temp" "maybe param" "maybe type" "temp"
    (677220 'move' call_tmp[677217](428321 call _cond_invalid tmp[428308]))
    if call_tmp[677217]
    {
      (428324 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570373] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570374] "maybe param" "temp"
    unknown call_tmp[677222] "expr temp" "maybe param" "maybe type" "temp"
    (677225 'move' call_tmp[677222](428309 call isTrue tmp[428308]))
    (570379 'move' tmp[570374](570377 call _cond_test call_tmp[677222]))
    if tmp[570374]
    {
      unknown tmp[570381] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[677229] "expr temp" "maybe param" "maybe type" "temp"
      (677232 'move' call_tmp[677229](164253 call dsiNumIndices _mt[243] this[164480]))
      unknown call_tmp[677234] "expr temp" "maybe param" "maybe type" "temp"
      (677237 'move' call_tmp[677234](164257 call == call_tmp[677229] 0))
      (570383 'move' tmp[570381](428312 call isTrue call_tmp[677234]))
      (570388 'move' tmp[570373](570385 '_paramFoldLogical' tmp[570374] tmp[570381]))
    }
    {
      (570393 'move' tmp[570373](570390 '_paramFoldLogical' tmp[570374] 0))
    }
    unknown call_tmp[677239] "expr temp" "maybe param" "maybe type" "temp"
    (677242 'move' call_tmp[677239](164306 call _cond_test tmp[570373]))
    if call_tmp[677239]
    {
      unknown call_tmp[677246] "expr temp" "maybe param" "maybe type" "temp"
      (677249 'move' call_tmp[677246](164264 call _nnz _mt[243] this[164480]))
      unknown call_tmp[677253] "expr temp" "maybe param" "maybe type" "temp"
      (677256 'move' call_tmp[677253](164268 call _nnz _mt[243] rhs[164231]))
      (164271 call = call_tmp[677246] call_tmp[677253])
      (482769 'end of statement')
      unknown call_tmp[677260] "expr temp" "maybe param" "maybe type" "temp"
      (677263 'move' call_tmp[677260](164276 call nnzDom _mt[243] this[164480]))
      unknown call_tmp[677267] "expr temp" "maybe param" "maybe type" "temp"
      (677270 'move' call_tmp[677267](164280 call nnzDom _mt[243] rhs[164231]))
      (164283 call = call_tmp[677260] call_tmp[677267])
      (482770 'end of statement')
      unknown call_tmp[677274] "expr temp" "maybe param" "maybe type" "temp"
      (677277 'move' call_tmp[677274](164289 call _indices _mt[243] this[164480]))
      unknown call_tmp[677281] "expr temp" "maybe param" "maybe type" "temp"
      (677284 'move' call_tmp[677281](164293 call _indices _mt[243] rhs[164231]))
      (164296 call = call_tmp[677274] call_tmp[677281])
    }
    {
      (164303 call chpl_assignDomainWithIndsIterSafeForRemoving this[164480] rhs[164231])
    }
    (521706 return _void[55])
  }
  function DefaultSparseDom[164378](?).dsiHasSingleLocalSubdomain[164315](arg _mt[164486]:_MT[238], arg this[164484]:DefaultSparseDom[164378](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[521710] "RVV" "param" "temp"
    (521715 'move' ret[521710](521714 'deref' 1))
    (521712 return ret[521710])
  }
  function DefaultSparseDom[164378](?).dsiLocalSubdomain[164329](arg _mt[164490]:_MT[238], arg this[164488]:DefaultSparseDom[164378](?), arg loc[164326]:locale[28]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521719] "RVV" "temp"
    unknown call_tmp[677286] "expr temp" "maybe param" "maybe type" "temp"
    (677289 'move' call_tmp[677286](164332 '_wide_get_locale' this[164488]))
    unknown call_tmp[677291] "expr temp" "maybe param" "maybe type" "temp"
    (677294 'move' call_tmp[677291](164333 call chpl_localeID_to_locale call_tmp[677286]))
    unknown call_tmp[677296] "expr temp" "maybe param" "maybe type" "temp"
    (677299 'move' call_tmp[677296](164336 call == call_tmp[677291] loc[164326]))
    unknown call_tmp[677301] "expr temp" "maybe param" "maybe type" "temp"
    (677304 'move' call_tmp[677301](164370 call _cond_test call_tmp[677296]))
    if call_tmp[677301]
    {
      unknown call_tmp[677306] "expr temp" "maybe param" "maybe type" "temp"
      (677309 'move' call_tmp[677306](164342 call _to_unmanaged this[164488]))
      unknown call_tmp[677311] "expr temp" "maybe param" "maybe type" "temp"
      (677314 'move' call_tmp[677311](164344 call _getDomain call_tmp[677306]))
      (521724 'move' ret[521719](521723 'deref' call_tmp[677311]))
      gotoReturn _end_dsiLocalSubdomain[521717] _end_dsiLocalSubdomain[521717]
    }
    {
      unknown call_tmp[677318] "expr temp" "maybe param" "maybe type" "temp"
      (677321 'move' call_tmp[677318](388019 call rank _mt[243] this[164488]))
      unknown call_tmp[677325] "expr temp" "maybe param" "maybe type" "temp"
      (677328 'move' call_tmp[677325](388024 call idxType _mt[243] this[164488]))
      unknown call_tmp[677332] "expr temp" "maybe param" "maybe type" "temp"
      (677335 'move' call_tmp[677332](388029 call dist _mt[243] this[164488]))
      unknown call_tmp[677339] "expr temp" "maybe param" "maybe type" "temp"
      (677342 'move' call_tmp[677339](388034 call parentDom _mt[243] this[164488]))
      unknown call_tmp[677344] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (677347 'move' call_tmp[677344](748031 'new' DefaultSparseDom[378077](?) call_tmp[677318] call_tmp[677325] call_tmp[677332] call_tmp[677339](_chpl_manager = unmanaged[220](?))))
      const copy[164358] "dead at end of block" "const" "insert auto destroy"
      (544263 'init var' copy[164358] call_tmp[677344])
      (164361 'end of statement')
      unknown call_tmp[677349] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (677352 'move' call_tmp[677349](748032 'new' _domain[125908](?) copy[164358]))
      (521729 'move' ret[521719](521728 'deref' call_tmp[677349]))
      gotoReturn _end_dsiLocalSubdomain[521717] _end_dsiLocalSubdomain[521717]
      (482775 'end of statement' copy[164358])
    }
    label _end_dsiLocalSubdomain[521717]
    (521721 return ret[521719])
  }
  type DefaultSparseDom[164378](?) val super[355735]:BaseSparseDomImpl[148004](?) "delay instantiation" "super class" val dist[161620]:unmanaged DefaultDist[415487] unmanaged DefaultDist[415487] val _nnz[161625]:int(64)[13] 0 unknown _indices[161640] "local field"(161638 call chpl__buildArrayRuntimeType(161636 call chpl__ensureDomainExpr nnzDom[146964])(161634 call chpl__buildIndexType rank[148254] idxType[148258]))
  type DefaultSparseDom[378077](?)
  function DefaultSparseArr[165840](?).init[164500](arg _mt[165844]:_MT[238], arg this[165842]:DefaultSparseArr[165840](?), arg eltType[164498]:_any[178](?), param arg rank[164503]:int(64)[13], arg idxType[164506]:_any[178](?), arg dom[164508]:_any[178](?), param arg initElts[164511]:bool[10]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown super_tmp[462319] "temporary of super field" "temp"
    (462321 'move' super_tmp[462319](462318 '.v' this[165842] c"super"))
    (164524 call(164515 call (partial) init _mt[243] super_tmp[462319]) eltType[164498] rank[164503] idxType[164506] dom[164508] initElts[164511])
    (482777 'end of statement')
    unknown tmp[462324] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492509] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[677356] "expr temp" "maybe param" "maybe type" "temp"
      (677359 'move' call_tmp[677356](462326 '.v' this[165842] c"super"))
      (492513 'move' call_type_tmp[492509](462329 'typeof' call_tmp[677356]))
    }
    (462330 'move' tmp[462324] call_type_tmp[492509])
    unknown call_tmp[677361] "maybe param" "maybe type" "temp"
    (677364 'move' call_tmp[677361](462335 'cast' tmp[462324] this[165842]))
    unknown chpl__thisAsParent[462332] "dead at end of block" "insert auto destroy" "temp"
    (544265 'init var' chpl__thisAsParent[462332] call_tmp[677361] tmp[462324])
    (462338 'setcid' chpl__thisAsParent[462332])
    (482778 'end of statement')
    (462340 'setcid' this[165842])
    (521733 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164535](arg _mt[165848]:_MT[238], arg this[165846]:DefaultSparseArr[165840](?), arg ind[164532] :
  (388046 call idxType _mt[243] this[165846])) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521737] "RVV" "temp"
    unknown call_tmp[677368] "expr temp" "maybe param" "maybe type" "temp"
    (677371 'move' call_tmp[677368](164643 call _cond_test 1))
    if call_tmp[677368]
    {
      unknown call_tmp[677375] "expr temp" "maybe param" "maybe type" "temp"
      (677378 'move' call_tmp[677375](361285 call dom _mt[243] this[165846]))
      unknown call_tmp[677382] "expr temp" "maybe param" "maybe type" "temp"
      (677385 'move' call_tmp[677382](164543 call parentDom _mt[243] call_tmp[677375]))
      unknown call_tmp[677389] "expr temp" "maybe param" "maybe type" "temp"
      (677392 'move' call_tmp[677389](164551 call(164546 call (partial) contains _mt[243] call_tmp[677382]) ind[164532]))
      unknown call_tmp[677394] "expr temp" "maybe param" "maybe type" "temp"
      (677397 'move' call_tmp[677394](164552 call ! call_tmp[677389]))
      unknown call_tmp[677399] "expr temp" "maybe param" "maybe type" "temp"
      (677402 'move' call_tmp[677399](164639 call _cond_test call_tmp[677394]))
      if call_tmp[677399]
      {
        unknown call_tmp[677404] "expr temp" "maybe param" "maybe type" "temp"
        (677407 'move' call_tmp[677404](164628 call _cond_test debugDefaultSparse[161611]))
        if call_tmp[677404]
        {
          unknown call_tmp[677409] "expr temp" "maybe param" "maybe type" "temp"
          (677412 'move' call_tmp[677409](361288 call here[90438]))
          unknown call_tmp[677416] "expr temp" "maybe param" "maybe type" "temp"
          (677419 'move' call_tmp[677416](164575 call id _mt[243] call_tmp[677409]))
          (164578 call writeln "On locale " call_tmp[677416])
          (482780 'end of statement')
          (164601 call writeln "In dsiAccess, got index " ind[164532])
          (482781 'end of statement')
          unknown call_tmp[677423] "expr temp" "maybe param" "maybe type" "temp"
          (677426 'move' call_tmp[677423](361292 call dom _mt[243] this[165846]))
          unknown call_tmp[677430] "expr temp" "maybe param" "maybe type" "temp"
          (677433 'move' call_tmp[677430](164623 call parentDom _mt[243] call_tmp[677423]))
          (164626 call writeln "dom.parentDom = " call_tmp[677430])
        }
        (164637 call halt "array index out of bounds: " ind[164532])
      }
    }
    unknown call_tmp[677437] "expr temp" "maybe param" "maybe type" "temp"
    (677440 'move' call_tmp[677437](361297 call dom _mt[243] this[165846]))
    unknown call_tmp[677444] "maybe param" "maybe type" "temp"
    (677447 'move' call_tmp[677444](164660 call(164655 call (partial) find _mt[243] call_tmp[677437]) ind[164532]))
    const tmp[164661] "dead at end of block" "const" "insert auto destroy" "temp"
    (544267 'init var' tmp[164661] call_tmp[677444])
    (164668 call _check_tuple_var_decl tmp[164661] 2)
    (482784 'end of statement')
    unknown call_tmp[677449] "maybe param" "maybe type" "temp"
    (677452 'move' call_tmp[677449](164662 call tmp[164661] 0))
    const found[164649] "dead at end of block" "const" "insert auto destroy"
    (544269 'init var' found[164649] call_tmp[677449])
    unknown call_tmp[677454] "maybe param" "maybe type" "temp"
    (677457 'move' call_tmp[677454](164665 call tmp[164661] 1))
    const loc[164651] "dead at end of block" "const" "insert auto destroy"
    (544271 'init var' loc[164651] call_tmp[677454])
    (164673 'end of statement')
    unknown call_tmp[677459] "expr temp" "maybe param" "maybe type" "temp"
    (677462 'move' call_tmp[677459](164703 call _cond_test found[164649]))
    if call_tmp[677459]
    {
      unknown call_tmp[677466] "expr temp" "maybe param" "maybe type" "temp"
      (677469 'move' call_tmp[677466](164678 call(388063 call (partial) data _mt[243] this[165846]) loc[164651]))
      (521742 'move' ret[521737](521741 'addr of' call_tmp[677466]))
      gotoReturn _end_dsiAccess[521735] _end_dsiAccess[521735]
      (482785 'end of statement' loc[164651])
    }
    {
      (164701 call halt "attempting to assign a 'zero' value in a sparse array: " ind[164532])
    }
    label _end_dsiAccess[521735]
    (521739 return ret[521737])
  }
  where {
    unknown call_tmp[677473] "expr temp" "maybe param" "maybe type" "temp"
    (677476 'move' call_tmp[677473](388051 call rank _mt[243] this[165846]))
    (164539 call == call_tmp[677473] 1)
  }
  function DefaultSparseArr[165840](?).dsiAccess[164718](arg _mt[165852]:_MT[238], arg this[165850]:DefaultSparseArr[165840](?), arg ind[164715] :
  (388070 call idxType _mt[243] this[165850])) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521748] "RVV" "temp"
    unknown call_tmp[677480] "expr temp" "maybe param" "maybe type" "temp"
    (677483 'move' call_tmp[677480](164748 call _cond_test 1))
    if call_tmp[677480]
    {
      unknown call_tmp[677487] "expr temp" "maybe param" "maybe type" "temp"
      (677490 'move' call_tmp[677487](361302 call dom _mt[243] this[165850]))
      unknown call_tmp[677494] "expr temp" "maybe param" "maybe type" "temp"
      (677497 'move' call_tmp[677494](164726 call parentDom _mt[243] call_tmp[677487]))
      unknown call_tmp[677501] "expr temp" "maybe param" "maybe type" "temp"
      (677504 'move' call_tmp[677501](164734 call(164729 call (partial) contains _mt[243] call_tmp[677494]) ind[164715]))
      unknown call_tmp[677506] "expr temp" "maybe param" "maybe type" "temp"
      (677509 'move' call_tmp[677506](164735 call ! call_tmp[677501]))
      unknown call_tmp[677511] "expr temp" "maybe param" "maybe type" "temp"
      (677514 'move' call_tmp[677511](164743 call _cond_test call_tmp[677506]))
      if call_tmp[677511]
      {
        (164741 call halt "array index out of bounds: " ind[164715])
      }
    }
    unknown call_tmp[677518] "expr temp" "maybe param" "maybe type" "temp"
    (677521 'move' call_tmp[677518](361307 call dom _mt[243] this[165850]))
    unknown call_tmp[677525] "maybe param" "maybe type" "temp"
    (677528 'move' call_tmp[677525](164765 call(164760 call (partial) find _mt[243] call_tmp[677518]) ind[164715]))
    const tmp[164766] "dead at end of block" "const" "insert auto destroy" "temp"
    (544273 'init var' tmp[164766] call_tmp[677525])
    (164773 call _check_tuple_var_decl tmp[164766] 2)
    (482789 'end of statement')
    unknown call_tmp[677530] "maybe param" "maybe type" "temp"
    (677533 'move' call_tmp[677530](164767 call tmp[164766] 0))
    const found[164754] "dead at end of block" "const" "insert auto destroy"
    (544275 'init var' found[164754] call_tmp[677530])
    unknown call_tmp[677535] "maybe param" "maybe type" "temp"
    (677538 'move' call_tmp[677535](164770 call tmp[164766] 1))
    const loc[164756] "dead at end of block" "const" "insert auto destroy"
    (544277 'init var' loc[164756] call_tmp[677535])
    (164778 'end of statement')
    unknown call_tmp[677540] "expr temp" "maybe param" "maybe type" "temp"
    (677543 'move' call_tmp[677540](164789 call _cond_test found[164754]))
    if call_tmp[677540]
    {
      unknown call_tmp[677547] "expr temp" "maybe param" "maybe type" "temp"
      (677550 'move' call_tmp[677547](164783 call(388085 call (partial) data _mt[243] this[165850]) loc[164756]))
      (521753 'move' ret[521748](521752 'addr of' call_tmp[677547]))
      gotoReturn _end_dsiAccess[521746] _end_dsiAccess[521746]
      (482790 'end of statement' loc[164756])
    }
    {
      unknown call_tmp[677554] "expr temp" "maybe param" "maybe type" "temp"
      (677557 'move' call_tmp[677554](388091 call irv _mt[243] this[165850]))
      (521758 'move' ret[521748](521757 'addr of' call_tmp[677554]))
      gotoReturn _end_dsiAccess[521746] _end_dsiAccess[521746]
    }
    label _end_dsiAccess[521746]
    (521750 return ret[521748])
  }
  where {
    unknown call_tmp[677561] "expr temp" "maybe param" "maybe type" "temp"
    (677564 'move' call_tmp[677561](388075 call rank _mt[243] this[165850]))
    (164722 call == call_tmp[677561] 1)
  }
  function DefaultSparseArr[165840](?).dsiAccess[164807](arg _mt[165856]:_MT[238], arg this[165854]:DefaultSparseArr[165840](?), arg ind[164804] :
  unknown call_tmp[677568] "expr temp" "maybe param" "maybe type" "temp") ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521764] "RVV" "temp"
    unknown call_tmp[677580] "expr temp" "maybe param" "maybe type" "temp"
    (677583 'move' call_tmp[677580](164833 call _cond_test 1))
    if call_tmp[677580]
    {
      unknown call_tmp[677587] "expr temp" "maybe param" "maybe type" "temp"
      (677590 'move' call_tmp[677587](361312 call dom _mt[243] this[165854]))
      unknown call_tmp[677594] "expr temp" "maybe param" "maybe type" "temp"
      (677597 'move' call_tmp[677594](164811 call parentDom _mt[243] call_tmp[677587]))
      unknown call_tmp[677601] "expr temp" "maybe param" "maybe type" "temp"
      (677604 'move' call_tmp[677601](164819 call(164814 call (partial) contains _mt[243] call_tmp[677594]) ind[164804]))
      unknown call_tmp[677606] "expr temp" "maybe param" "maybe type" "temp"
      (677609 'move' call_tmp[677606](164820 call ! call_tmp[677601]))
      unknown call_tmp[677611] "expr temp" "maybe param" "maybe type" "temp"
      (677614 'move' call_tmp[677611](164828 call _cond_test call_tmp[677606]))
      if call_tmp[677611]
      {
        (164826 call halt "array index out of bounds: " ind[164804])
      }
    }
    unknown call_tmp[677618] "expr temp" "maybe param" "maybe type" "temp"
    (677621 'move' call_tmp[677618](361317 call dom _mt[243] this[165854]))
    unknown call_tmp[677625] "maybe param" "maybe type" "temp"
    (677628 'move' call_tmp[677625](164850 call(164845 call (partial) find _mt[243] call_tmp[677618]) ind[164804]))
    const tmp[164851] "dead at end of block" "const" "insert auto destroy" "temp"
    (544279 'init var' tmp[164851] call_tmp[677625])
    (164858 call _check_tuple_var_decl tmp[164851] 2)
    (482794 'end of statement')
    unknown call_tmp[677630] "maybe param" "maybe type" "temp"
    (677633 'move' call_tmp[677630](164852 call tmp[164851] 0))
    const found[164839] "dead at end of block" "const" "insert auto destroy"
    (544281 'init var' found[164839] call_tmp[677630])
    unknown call_tmp[677635] "maybe param" "maybe type" "temp"
    (677638 'move' call_tmp[677635](164855 call tmp[164851] 1))
    const loc[164841] "dead at end of block" "const" "insert auto destroy"
    (544283 'init var' loc[164841] call_tmp[677635])
    (164863 'end of statement')
    unknown call_tmp[677640] "expr temp" "maybe param" "maybe type" "temp"
    (677643 'move' call_tmp[677640](164877 call _cond_test found[164839]))
    if call_tmp[677640]
    {
      unknown call_tmp[677647] "expr temp" "maybe param" "maybe type" "temp"
      (677650 'move' call_tmp[677647](164868 call(388111 call (partial) data _mt[243] this[165854]) loc[164841]))
      (521769 'move' ret[521764](521768 'addr of' call_tmp[677647]))
      gotoReturn _end_dsiAccess[521762] _end_dsiAccess[521762]
      (482795 'end of statement' loc[164841])
    }
    {
      (164875 call halt "attempting to assign a 'zero' value in a sparse array: " ind[164804])
    }
    label _end_dsiAccess[521762]
    (521766 return ret[521764])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164894](arg _mt[165860]:_MT[238], arg this[165858]:DefaultSparseArr[165840](?), arg ind[164891] :
  unknown call_tmp[677654] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "method" "primary method"
  {
    unknown ret[521775] "RVV" "temp"
    unknown call_tmp[677666] "expr temp" "maybe param" "maybe type" "temp"
    (677669 'move' call_tmp[677666](164924 call _cond_test 1))
    if call_tmp[677666]
    {
      unknown call_tmp[677673] "expr temp" "maybe param" "maybe type" "temp"
      (677676 'move' call_tmp[677673](361322 call dom _mt[243] this[165858]))
      unknown call_tmp[677680] "expr temp" "maybe param" "maybe type" "temp"
      (677683 'move' call_tmp[677680](164902 call parentDom _mt[243] call_tmp[677673]))
      unknown call_tmp[677687] "expr temp" "maybe param" "maybe type" "temp"
      (677690 'move' call_tmp[677687](164910 call(164905 call (partial) contains _mt[243] call_tmp[677680]) ind[164891]))
      unknown call_tmp[677692] "expr temp" "maybe param" "maybe type" "temp"
      (677695 'move' call_tmp[677692](164911 call ! call_tmp[677687]))
      unknown call_tmp[677697] "expr temp" "maybe param" "maybe type" "temp"
      (677700 'move' call_tmp[677697](164919 call _cond_test call_tmp[677692]))
      if call_tmp[677697]
      {
        (164917 call halt "array index out of bounds: " ind[164891])
      }
    }
    unknown call_tmp[677704] "expr temp" "maybe param" "maybe type" "temp"
    (677707 'move' call_tmp[677704](361327 call dom _mt[243] this[165858]))
    unknown call_tmp[677711] "maybe param" "maybe type" "temp"
    (677714 'move' call_tmp[677711](164941 call(164936 call (partial) find _mt[243] call_tmp[677704]) ind[164891]))
    const tmp[164942] "dead at end of block" "const" "insert auto destroy" "temp"
    (544285 'init var' tmp[164942] call_tmp[677711])
    (164949 call _check_tuple_var_decl tmp[164942] 2)
    (482799 'end of statement')
    unknown call_tmp[677716] "maybe param" "maybe type" "temp"
    (677719 'move' call_tmp[677716](164943 call tmp[164942] 0))
    const found[164930] "dead at end of block" "const" "insert auto destroy"
    (544287 'init var' found[164930] call_tmp[677716])
    unknown call_tmp[677721] "maybe param" "maybe type" "temp"
    (677724 'move' call_tmp[677721](164946 call tmp[164942] 1))
    const loc[164932] "dead at end of block" "const" "insert auto destroy"
    (544289 'init var' loc[164932] call_tmp[677721])
    (164954 'end of statement')
    unknown call_tmp[677726] "expr temp" "maybe param" "maybe type" "temp"
    (677729 'move' call_tmp[677726](164965 call _cond_test found[164930]))
    if call_tmp[677726]
    {
      unknown call_tmp[677733] "expr temp" "maybe param" "maybe type" "temp"
      (677736 'move' call_tmp[677733](164959 call(388138 call (partial) data _mt[243] this[165858]) loc[164932]))
      (521780 'move' ret[521775](521779 'deref' call_tmp[677733]))
      gotoReturn _end_dsiAccess[521773] _end_dsiAccess[521773]
      (482800 'end of statement' loc[164932])
    }
    {
      unknown call_tmp[677740] "expr temp" "maybe param" "maybe type" "temp"
      (677743 'move' call_tmp[677740](388144 call irv _mt[243] this[165858]))
      (521785 'move' ret[521775](521784 'deref' call_tmp[677740]))
      gotoReturn _end_dsiAccess[521773] _end_dsiAccess[521773]
    }
    label _end_dsiAccess[521773]
    (521777 return ret[521775])
  }
  where {
    unknown call_tmp[677747] "expr temp" "maybe param" "maybe type" "temp"
    (677750 'move' call_tmp[677747](388128 call eltType _mt[243] this[165858]))
    (164899 call shouldReturnRvalueByValue call_tmp[677747])
  }
  function DefaultSparseArr[165840](?).dsiAccess[164983](arg _mt[165864]:_MT[238], arg this[165862]:DefaultSparseArr[165840](?), arg ind[164980] :
  unknown call_tmp[677754] "expr temp" "maybe param" "maybe type" "temp") const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[521791] "RVV" "temp"
    unknown call_tmp[677766] "expr temp" "maybe param" "maybe type" "temp"
    (677769 'move' call_tmp[677766](165013 call _cond_test 1))
    if call_tmp[677766]
    {
      unknown call_tmp[677773] "expr temp" "maybe param" "maybe type" "temp"
      (677776 'move' call_tmp[677773](361332 call dom _mt[243] this[165862]))
      unknown call_tmp[677780] "expr temp" "maybe param" "maybe type" "temp"
      (677783 'move' call_tmp[677780](164991 call parentDom _mt[243] call_tmp[677773]))
      unknown call_tmp[677787] "expr temp" "maybe param" "maybe type" "temp"
      (677790 'move' call_tmp[677787](164999 call(164994 call (partial) contains _mt[243] call_tmp[677780]) ind[164980]))
      unknown call_tmp[677792] "expr temp" "maybe param" "maybe type" "temp"
      (677795 'move' call_tmp[677792](165000 call ! call_tmp[677787]))
      unknown call_tmp[677797] "expr temp" "maybe param" "maybe type" "temp"
      (677800 'move' call_tmp[677797](165008 call _cond_test call_tmp[677792]))
      if call_tmp[677797]
      {
        (165006 call halt "array index out of bounds: " ind[164980])
      }
    }
    unknown call_tmp[677804] "expr temp" "maybe param" "maybe type" "temp"
    (677807 'move' call_tmp[677804](361337 call dom _mt[243] this[165862]))
    unknown call_tmp[677811] "maybe param" "maybe type" "temp"
    (677814 'move' call_tmp[677811](165030 call(165025 call (partial) find _mt[243] call_tmp[677804]) ind[164980]))
    const tmp[165031] "dead at end of block" "const" "insert auto destroy" "temp"
    (544291 'init var' tmp[165031] call_tmp[677811])
    (165038 call _check_tuple_var_decl tmp[165031] 2)
    (482804 'end of statement')
    unknown call_tmp[677816] "maybe param" "maybe type" "temp"
    (677819 'move' call_tmp[677816](165032 call tmp[165031] 0))
    const found[165019] "dead at end of block" "const" "insert auto destroy"
    (544293 'init var' found[165019] call_tmp[677816])
    unknown call_tmp[677821] "maybe param" "maybe type" "temp"
    (677824 'move' call_tmp[677821](165035 call tmp[165031] 1))
    const loc[165021] "dead at end of block" "const" "insert auto destroy"
    (544295 'init var' loc[165021] call_tmp[677821])
    (165043 'end of statement')
    unknown call_tmp[677826] "expr temp" "maybe param" "maybe type" "temp"
    (677829 'move' call_tmp[677826](165054 call _cond_test found[165019]))
    if call_tmp[677826]
    {
      unknown call_tmp[677833] "expr temp" "maybe param" "maybe type" "temp"
      (677836 'move' call_tmp[677833](165048 call(388169 call (partial) data _mt[243] this[165862]) loc[165021]))
      (521796 'move' ret[521791](521795 'addr of' call_tmp[677833]))
      gotoReturn _end_dsiAccess[521789] _end_dsiAccess[521789]
      (482805 'end of statement' loc[165021])
    }
    {
      unknown call_tmp[677840] "expr temp" "maybe param" "maybe type" "temp"
      (677843 'move' call_tmp[677840](388175 call irv _mt[243] this[165862]))
      (521801 'move' ret[521791](521800 'addr of' call_tmp[677840]))
      gotoReturn _end_dsiAccess[521789] _end_dsiAccess[521789]
    }
    label _end_dsiAccess[521789]
    (521793 return ret[521791])
  }
  where {
    unknown call_tmp[677847] "expr temp" "maybe param" "maybe type" "temp"
    (677850 'move' call_tmp[677847](388159 call eltType _mt[243] this[165862]))
    (164988 call shouldReturnRvalueByConstRef call_tmp[677847])
  }
  function DefaultSparseArr[165840](?).these[165065](arg _mt[165868]:_MT[238], arg this[165866]:DefaultSparseArr[165840](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521807] "RVV" "temp"
    {
      unknown _indexOfInterest[165081] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165082] "expr temp" "temp"
      unknown call_tmp[677854] "expr temp" "maybe param" "maybe type" "temp"
      (677857 'move' call_tmp[677854](361342 call dom _mt[243] this[165866]))
      unknown call_tmp[677861] "expr temp" "maybe param" "maybe type" "temp"
      (677864 'move' call_tmp[677861](165096 call _nnz _mt[243] call_tmp[677854]))
      unknown call_tmp[677866] "expr temp" "maybe param" "maybe type" "temp"
      (677869 'move' call_tmp[677866](165099 call chpl_direct_range_iter 1 call_tmp[677861] 1))
      (165091 'move' _iterator[165082](165089 call _getIterator call_tmp[677866]))
      Defer
      {
        {
          (165115 call _freeIterator _iterator[165082])
        }
      }
      { scopeless type
        (165104 'move' _indexOfInterest[165081](165101 call iteratorIndex _iterator[165082]))
      }
      ForLoop[165083]
      {
        unknown i[165108] "index var" "insert auto destroy"
        (482809 'end of statement')
        (165110 'move' i[165108] _indexOfInterest[165081])
        (482810 'end of statement' i[165108])
        unknown yret[521811] "YVV" "temp"
        unknown call_tmp[677873] "expr temp" "maybe param" "maybe type" "temp"
        (677876 'move' call_tmp[677873](165078 call(388180 call (partial) data _mt[243] this[165866]) i[165108]))
        (521814 'move' yret[521811](521813 'addr of' call_tmp[677873]))
        (521816 yield yret[521811])
        (482812 'end of statement' i[165108])
        label _continueLabel[165086]
        _indexOfInterest[165081]
        _iterator[165082]
      }
      label _breakLabel[165087]
    }
    (521809 return ret[521807])
  }
  function DefaultSparseArr[165840](?).these[165131](arg _mt[165872]:_MT[238], arg this[165870]:DefaultSparseArr[165840](?), param arg tag[165128]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521820] "RVV" "temp"
    unknown call_tmp[677880] "expr temp" "maybe param" "maybe type" "temp"
    (677883 'move' call_tmp[677880](361348 call dom _mt[243] this[165870]))
    unknown call_tmp[677887] "maybe param" "maybe type" "temp"
    (677890 'move' call_tmp[677887](165141 call _nnz _mt[243] call_tmp[677880]))
    const numElems[165144] "dead at end of block" "const" "insert auto destroy"
    (544297 'init var' numElems[165144] call_tmp[677887])
    (165147 'end of statement')
    unknown call_tmp[677892] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (677895 'move' call_tmp[677892](165154 'typeof' numElems[165144]))
    unknown call_tmp[677897] "expr temp" "maybe param" "maybe type" "temp"
    (677900 'move' call_tmp[677897](165152 call _computeNumChunks numElems[165144]))
    unknown call_tmp[677902] "maybe param" "maybe type" "temp"
    (677905 'move' call_tmp[677902](165155 call _cast call_tmp[677892] call_tmp[677897]))
    const numChunks[165157] "dead at end of block" "const" "insert auto destroy"
    (544299 'init var' numChunks[165157] call_tmp[677902])
    (165160 'end of statement' numElems[165144] numElems[165144])
    unknown call_tmp[677907] "expr temp" "maybe param" "maybe type" "temp"
    (677910 'move' call_tmp[677907](165188 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[677907]
    {
      (165185 call writeln "DefaultSparseArr standalone: " numChunks[165157] " chunks, " numElems[165144] " elems")
      (482816 'end of statement' numChunks[165157] numElems[165144])
    }
    unknown call_tmp[677912] "expr temp" "maybe param" "maybe type" "temp"
    (677915 'move' call_tmp[677912](165194 call <= numChunks[165157] 1))
    unknown call_tmp[677917] "expr temp" "maybe param" "maybe type" "temp"
    (677920 'move' call_tmp[677917](165498 call _cond_test call_tmp[677912]))
    if call_tmp[677917]
    {
      {
        unknown _indexOfInterest[165208] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[165209] "expr temp" "temp"
        unknown call_tmp[677922] "expr temp" "maybe param" "maybe type" "temp"
        (677925 'move' call_tmp[677922](165223 call chpl_direct_range_iter 1 numElems[165144] 1))
        (165218 'move' _iterator[165209](165216 call _getIterator call_tmp[677922]))
        Defer
        {
          {
            (165239 call _freeIterator _iterator[165209])
          }
        }
        { scopeless type
          (165228 'move' _indexOfInterest[165208](165225 call iteratorIndex _iterator[165209]))
        }
        ForLoop[165210]
        {
          unknown i[165232] "index var" "insert auto destroy"
          (482820 'end of statement')
          (165234 'move' i[165232] _indexOfInterest[165208])
          (482821 'end of statement' i[165232])
          {
            unknown yret[521824] "YVV" "temp"
            unknown call_tmp[677929] "expr temp" "maybe param" "maybe type" "temp"
            (677932 'move' call_tmp[677929](165204 call(388194 call (partial) data _mt[243] this[165870]) i[165232]))
            (521827 'move' yret[521824](521826 'addr of' call_tmp[677929]))
            (521829 yield yret[521824])
            (482823 'end of statement' i[165232])
          }
          label _continueLabel[165213]
          _indexOfInterest[165208]
          _iterator[165209]
        }
        label _breakLabel[165214]
      }
    }
    {
      {
        unknown tmpIter[165301] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[677934] "expr temp" "maybe param" "maybe type" "temp"
        (677937 'move' call_tmp[677934](165254 call chpl_build_bounded_range 1 numElems[165144]))
        (165304 'move' tmpIter[165301](165258 call chunks module=[255] RangeChunk[266479] call_tmp[677934] numChunks[165157]))
        unknown isRngDomArr[165478] "maybe param" "temp"
        unknown tmp[428329] "maybe param" "temp"
        (428340 'move' tmp[428329](165480 call isBoundedRange tmpIter[165301]))
        unknown call_tmp[677939] "expr temp" "maybe param" "maybe type" "temp"
        (677942 'move' call_tmp[677939](428342 call _cond_invalid tmp[428329]))
        if call_tmp[677939]
        {
          (428345 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570427] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570428] "maybe param" "temp"
        unknown call_tmp[677944] "expr temp" "maybe param" "maybe type" "temp"
        (677947 'move' call_tmp[677944](428330 call isTrue tmp[428329]))
        (570433 'move' tmp[570428](570431 call _cond_test call_tmp[677944]))
        if tmp[570428]
        {
          (570438 'move' tmp[570427](570435 '_paramFoldLogical' tmp[570428] 1))
        }
        {
          unknown tmp[428350] "maybe param" "temp"
          (428361 'move' tmp[428350](165483 call isDomain tmpIter[165301]))
          unknown call_tmp[677949] "expr temp" "maybe param" "maybe type" "temp"
          (677952 'move' call_tmp[677949](428363 call _cond_invalid tmp[428350]))
          if call_tmp[677949]
          {
            (428366 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570400] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570401] "maybe param" "temp"
          unknown call_tmp[677954] "expr temp" "maybe param" "maybe type" "temp"
          (677957 'move' call_tmp[677954](428351 call isTrue tmp[428350]))
          (570406 'move' tmp[570401](570404 call _cond_test call_tmp[677954]))
          if tmp[570401]
          {
            (570411 'move' tmp[570400](570408 '_paramFoldLogical' tmp[570401] 1))
          }
          {
            unknown tmp[570413] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[677959] "expr temp" "maybe param" "maybe type" "temp"
            (677962 'move' call_tmp[677959](165486 call isArray tmpIter[165301]))
            (570415 'move' tmp[570413](428355 call isTrue call_tmp[677959]))
            (570420 'move' tmp[570400](570417 '_paramFoldLogical' tmp[570401] tmp[570413]))
          }
          unknown tmp[570440] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570442 'move' tmp[570440](428334 call isTrue tmp[570400]))
          (570447 'move' tmp[570427](570444 '_paramFoldLogical' tmp[570428] tmp[570440]))
        }
        (165493 'move' isRngDomArr[165478] tmp[570427])
        if isRngDomArr[165478]
        {
          const _coforallCount[165345] "const" "end count" "temp"
          (165414 'move' _coforallCount[165345](165411 call _endCountAlloc 1))
          unknown numTasks[165346] "temp"
          (165398 'move' numTasks[165346](165394 call size _mt[243] tmpIter[165301]))
          (165389 call _upEndCount _coforallCount[165345] 1 numTasks[165346])
          (482826 'end of statement')
          (165386 call chpl_resetTaskSpawn numTasks[165346])
          (482827 'end of statement')
          unknown _indexOfInterest[165353] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165354] "expr temp" "temp"
          (165363 'move' _iterator[165354](165361 call _getIterator tmpIter[165301]))
          Defer
          {
            {
              (165379 call _freeIterator _iterator[165354])
            }
          }
          { scopeless type
            (165368 'move' _indexOfInterest[165353](165365 call iteratorIndex _iterator[165354]))
          }
          ForLoop[165355]
          {
            unknown chunk[165372] "coforall index var" "index var" "insert auto destroy"
            (482829 'end of statement')
            (165374 'move' chunk[165372] _indexOfInterest[165353])
            (482830 'end of statement' chunk[165372])
            {
              {
                unknown _indexOfInterest[165307] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[165309] "expr temp" "temp"
                (165311 'move' _iterator[165309](165314 call _getIterator chunk[165372]))
                Defer
                {
                  {
                    (165318 call _freeIterator _iterator[165309])
                  }
                }
                { scopeless type
                  (165322 'move' _indexOfInterest[165307](165325 call iteratorIndex _iterator[165309]))
                }
                ForLoop[165327]
                {
                  unknown i[165330] "index var" "insert auto destroy"
                  (482833 'end of statement')
                  (165332 'move' i[165330] _indexOfInterest[165307])
                  (482834 'end of statement' i[165330])
                  unknown yret[521831] "YVV" "temp"
                  unknown call_tmp[677968] "expr temp" "maybe param" "maybe type" "temp"
                  (677971 'move' call_tmp[677968](165338 call(388211 call (partial) data _mt[243] this[165870]) i[165330]))
                  (521834 'move' yret[521831](521833 'addr of' call_tmp[677968]))
                  (521836 yield yret[521831])
                  (482836 'end of statement' i[165330])
                  label _continueLabel[165340]
                  _indexOfInterest[165307]
                  _iterator[165309]
                }
                label _breakLabel[165342]
              }
              (165348 call _downEndCount _coforallCount[165345] nil[44])
              (165347 'coforall loop')
            }
            label _continueLabel[165358]
            _indexOfInterest[165353]
            _iterator[165354]
          }
          label _breakLabel[165359]
          Defer
          {
            {
              (165401 call _endCountFree _coforallCount[165345])
            }
          }
          (165406 call _waitEndCount _coforallCount[165345] 1 numTasks[165346])
        }
        {
          const _coforallCount[165418] "const" "end count" "temp"
          (165475 'move' _coforallCount[165418](165472 call _endCountAlloc 1))
          unknown _indexOfInterest[165426] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165427] "expr temp" "temp"
          (165436 'move' _iterator[165427](165434 call _getIterator tmpIter[165301]))
          Defer
          {
            {
              (165452 call _freeIterator _iterator[165427])
            }
          }
          { scopeless type
            (165441 'move' _indexOfInterest[165426](165438 call iteratorIndex _iterator[165427]))
          }
          ForLoop[165428]
          {
            unknown chunk[165445] "coforall index var" "index var" "insert auto destroy"
            (482842 'end of statement')
            (165447 'move' chunk[165445] _indexOfInterest[165426])
            (482843 'end of statement' chunk[165445])
            (165459 call _upEndCount _coforallCount[165418] 1)
            (482845 'end of statement')
            {
              {
                unknown _indexOfInterest[165267] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[165268] "expr temp" "temp"
                (165277 'move' _iterator[165268](165275 call _getIterator chunk[165445]))
                Defer
                {
                  {
                    (165293 call _freeIterator _iterator[165268])
                  }
                }
                { scopeless type
                  (165282 'move' _indexOfInterest[165267](165279 call iteratorIndex _iterator[165268]))
                }
                ForLoop[165269]
                {
                  unknown i[165286] "index var" "insert auto destroy"
                  (482847 'end of statement')
                  (165288 'move' i[165286] _indexOfInterest[165267])
                  (482848 'end of statement' i[165286])
                  unknown yret[521838] "YVV" "temp"
                  unknown call_tmp[677975] "expr temp" "maybe param" "maybe type" "temp"
                  (677978 'move' call_tmp[677975](165264 call(388204 call (partial) data _mt[243] this[165870]) i[165286]))
                  (521841 'move' yret[521838](521840 'addr of' call_tmp[677975]))
                  (521843 yield yret[521838])
                  (482850 'end of statement' i[165286])
                  label _continueLabel[165272]
                  _indexOfInterest[165267]
                  _iterator[165268]
                }
                label _breakLabel[165273]
              }
              (165421 call _downEndCount _coforallCount[165418] nil[44])
              (165420 'coforall loop')
            }
            label _continueLabel[165431]
            _indexOfInterest[165426]
            _iterator[165427]
          }
          label _breakLabel[165432]
          Defer
          {
            {
              (165463 call _endCountFree _coforallCount[165418])
            }
          }
          (165468 call _waitEndCount _coforallCount[165418] 1)
        }
        (361352 'referenced modules list' RangeChunk[266479])
      }
    }
    (521822 return ret[521820])
  }
  where {
    (165138 call == tag[165128] standalone[451])
  }
  function DefaultSparseArr[165840](?).these[165511](arg _mt[165876]:_MT[238], arg this[165874]:DefaultSparseArr[165840](?), param arg tag[165508]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521847] "RVV" "temp"
    {
      unknown _indexOfInterest[165531] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165532] "expr temp" "temp"
      unknown call_tmp[677982] "expr temp" "maybe param" "maybe type" "temp"
      (677985 'move' call_tmp[677982](361360 call dom _mt[243] this[165874]))
      unknown call_tmp[677989] "expr temp" "maybe param" "maybe type" "temp"
      (677992 'move' call_tmp[677989](165527 call(165522 call (partial) these _mt[243] call_tmp[677982]) tag[165508]))
      (165541 'move' _iterator[165532](165539 call _getIterator call_tmp[677989]))
      Defer
      {
        {
          (165558 call _freeIterator _iterator[165532])
        }
      }
      { scopeless type
        (165547 'move' _indexOfInterest[165531](165544 call iteratorIndex _iterator[165532]))
      }
      ForLoop[165533]
      {
        unknown followThis[165551] "index var" "insert auto destroy"
        (482856 'end of statement')
        (165553 'move' followThis[165551] _indexOfInterest[165531])
        (482857 'end of statement' followThis[165551])
        unknown yret[521851] "YVV" "temp"
        (521854 'move' yret[521851](521853 'deref' followThis[165551]))
        (521856 yield yret[521851])
        (482859 'end of statement' followThis[165551])
        label _continueLabel[165536]
        _indexOfInterest[165531]
        _iterator[165532]
      }
      label _breakLabel[165537]
    }
    (521849 return ret[521847])
  }
  where {
    (165518 call == tag[165508] leader[447])
  }
  function DefaultSparseArr[165840](?).these[165575](arg _mt[165880]:_MT[238], arg this[165878]:DefaultSparseArr[165840](?), param arg tag[165572]:iterKind[453], arg followThis[165583]:_tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521860] "RVV" "temp"
    unknown tmp[165601] "dead at end of block" "insert auto destroy" "temp"
    (544301 'init var' tmp[165601] followThis[165583])
    (165611 call _check_tuple_var_decl tmp[165601] 3)
    (482861 'end of statement')
    unknown call_tmp[677994] "maybe param" "maybe type" "temp"
    (677997 'move' call_tmp[677994](165602 call tmp[165601] 0))
    unknown followThisDom[165593] "dead at end of block" "insert auto destroy"
    (544303 'init var' followThisDom[165593] call_tmp[677994])
    unknown call_tmp[677999] "maybe param" "maybe type" "temp"
    (678002 'move' call_tmp[677999](165605 call tmp[165601] 1))
    unknown startIx[165595] "dead at end of block" "insert auto destroy"
    (544305 'init var' startIx[165595] call_tmp[677999])
    unknown call_tmp[678004] "maybe param" "maybe type" "temp"
    (678007 'move' call_tmp[678004](165608 call tmp[165601] 2))
    unknown endIx[165597] "dead at end of block" "insert auto destroy"
    (544307 'init var' endIx[165597] call_tmp[678004])
    (165616 'end of statement')
    unknown call_tmp[678011] "expr temp" "maybe param" "maybe type" "temp"
    (678014 'move' call_tmp[678011](165620 call dom _mt[243] this[165878]))
    unknown call_tmp[678016] "expr temp" "maybe param" "maybe type" "temp"
    (678019 'move' call_tmp[678016](165623 call != followThisDom[165593] call_tmp[678011]))
    unknown call_tmp[678021] "expr temp" "maybe param" "maybe type" "temp"
    (678024 'move' call_tmp[678021](165646 call _cond_test call_tmp[678016]))
    if call_tmp[678021]
    {
      (165644 call halt "Sparse arrays can't be zippered with anything other than their domains and sibling arrays")
    }
    unknown call_tmp[678026] "expr temp" "maybe param" "maybe type" "temp"
    (678029 'move' call_tmp[678026](165676 call _cond_test debugDefaultSparse[161611]))
    if call_tmp[678026]
    {
      (165674 call writeln "DefaultSparseArr follower: " startIx[165595] ".." endIx[165597])
      (482863 'end of statement' startIx[165595] endIx[165597])
    }
    {
      unknown _indexOfInterest[165692] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[165693] "expr temp" "temp"
      unknown call_tmp[678031] "expr temp" "maybe param" "maybe type" "temp"
      (678034 'move' call_tmp[678031](165707 call chpl_direct_range_iter startIx[165595] endIx[165597] 1))
      (165702 'move' _iterator[165693](165700 call _getIterator call_tmp[678031]))
      Defer
      {
        {
          (165723 call _freeIterator _iterator[165693])
        }
      }
      { scopeless type
        (165712 'move' _indexOfInterest[165692](165709 call iteratorIndex _iterator[165693]))
      }
      ForLoop[165694]
      {
        unknown i[165716] "index var" "insert auto destroy"
        (482867 'end of statement')
        (165718 'move' i[165716] _indexOfInterest[165692])
        (482868 'end of statement' i[165716])
        unknown yret[521864] "YVV" "temp"
        unknown call_tmp[678038] "expr temp" "maybe param" "maybe type" "temp"
        (678041 'move' call_tmp[678038](165689 call(388228 call (partial) data _mt[243] this[165878]) i[165716]))
        (521867 'move' yret[521864](521866 'addr of' call_tmp[678038]))
        (521869 yield yret[521864])
        (482870 'end of statement' i[165716])
        label _continueLabel[165697]
        _indexOfInterest[165692]
        _iterator[165693]
      }
      label _breakLabel[165698]
    }
    (521862 return ret[521860])
  }
  where {
    unknown call_tmp[678043] "expr temp" "maybe param" "maybe type" "temp"
    (678046 'move' call_tmp[678043](165591 call == tag[165572] follower[449]))
    unknown call_tmp[678048] "expr temp" "maybe param" "maybe type" "temp"
    (678051 'move' call_tmp[678048](462346 'query' followThis[165583] c"size"))
    unknown call_tmp[678053] "expr temp" "maybe param" "maybe type" "temp"
    (678056 'move' call_tmp[678053](462347 call == 3 call_tmp[678048]))
    (462349 call & call_tmp[678043] call_tmp[678053])
  }
  function DefaultSparseArr[165840](?).these[165739](arg _mt[165884]:_MT[238], arg this[165882]:DefaultSparseArr[165840](?), param arg tag[165736]:iterKind[453], arg followThis[165741]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[521873] "RVV" "temp"
    (165753 call compilerError "Sparse iterators can't yet be zippered with others")
    (482872 'end of statement')
    unknown yret[521877] "YVV" "temp"
    (521880 'move' yret[521877](521879 'deref' 0))
    (521882 yield yret[521877])
    (521875 return ret[521873])
  }
  where {
    (165748 call == tag[165736] follower[449])
  }
  function DefaultSparseArr[165840](?).dsiTargetLocales[165764](arg _mt[165888]:_MT[238], arg this[165886]:DefaultSparseArr[165840](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (165785 call compilerError "targetLocales is unsupported by sparse domains")
    (521884 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiHasSingleLocalSubdomain[165792](arg _mt[165892]:_MT[238], arg this[165890]:DefaultSparseArr[165840](?)) param : _unknown[51] "method" "primary method"
  {
    unknown ret[521888] "RVV" "param" "temp"
    (521893 'move' ret[521888](521892 'deref' 1))
    (521890 return ret[521888])
  }
  function DefaultSparseArr[165840](?).dsiLocalSubdomain[165806](arg _mt[165896]:_MT[238], arg this[165894]:DefaultSparseArr[165840](?), arg loc[165803]:locale[28]) : _unknown[51] "method" "primary method"
  {
    unknown ret[521897] "RVV" "temp"
    unknown call_tmp[678058] "expr temp" "maybe param" "maybe type" "temp"
    (678061 'move' call_tmp[678058](165809 '_wide_get_locale' this[165894]))
    unknown call_tmp[678063] "expr temp" "maybe param" "maybe type" "temp"
    (678066 'move' call_tmp[678063](165810 call chpl_localeID_to_locale call_tmp[678058]))
    unknown call_tmp[678068] "expr temp" "maybe param" "maybe type" "temp"
    (678071 'move' call_tmp[678068](165813 call == call_tmp[678063] loc[165803]))
    unknown call_tmp[678073] "expr temp" "maybe param" "maybe type" "temp"
    (678076 'move' call_tmp[678073](165832 call _cond_test call_tmp[678068]))
    if call_tmp[678073]
    {
      unknown call_tmp[678080] "expr temp" "maybe param" "maybe type" "temp"
      (678083 'move' call_tmp[678080](388240 call dom _mt[243] this[165894]))
      unknown call_tmp[678085] "expr temp" "maybe param" "maybe type" "temp"
      (678088 'move' call_tmp[678085](165818 call _getDomain call_tmp[678080]))
      (521902 'move' ret[521897](521901 'deref' call_tmp[678085]))
      gotoReturn _end_dsiLocalSubdomain[521895] _end_dsiLocalSubdomain[521895]
    }
    {
      unknown call_tmp[678092] "expr temp" "maybe param" "maybe type" "temp"
      (678095 'move' call_tmp[678092](361368 call dom _mt[243] this[165894]))
      unknown call_tmp[678099] "expr temp" "maybe param" "maybe type" "temp"
      (678102 'move' call_tmp[678099](165828 call(165823 call (partial) dsiLocalSubdomain _mt[243] call_tmp[678092]) loc[165803]))
      (521907 'move' ret[521897](521906 'deref' call_tmp[678099]))
      gotoReturn _end_dsiLocalSubdomain[521895] _end_dsiLocalSubdomain[521895]
    }
    label _end_dsiLocalSubdomain[521895]
    (521899 return ret[521897])
  }
  type DefaultSparseArr[165840](?) val super[355737]:BaseSparseArrImpl[150571](?) "delay instantiation" "super class"
  type DefaultSparseArr[387469](?)
  function DefaultSparseDom[164378](?).dsiSerialWrite[165904](arg _mt[165913]:_MT[238], arg this[165910]:DefaultSparseDom[164378](?) :
  DefaultSparseDom[164378](?), arg f[165902]:_any[178](?), arg printBrackets[165907] :
  1 =
  1) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[678106] "expr temp" "maybe param" "maybe type" "temp"
    (678109 'move' call_tmp[678106](388246 call rank _mt[243] this[165910]))
    unknown call_tmp[678111] "expr temp" "maybe param" "maybe type" "temp"
    (678114 'move' call_tmp[678111](165917 call == call_tmp[678106] 1))
    unknown call_tmp[678116] "expr temp" "maybe param" "maybe type" "temp"
    (678119 'move' call_tmp[678116](166182 call _cond_test call_tmp[678111]))
    if call_tmp[678116]
    {
      unknown call_tmp[678121] "expr temp" "maybe param" "maybe type" "temp"
      (678124 'move' call_tmp[678121](165925 call _cond_test printBrackets[165907]))
      if call_tmp[678121]
      {
        (165922 call <~> f[165902] "{")
      }
      unknown call_tmp[678128] "expr temp" "maybe param" "maybe type" "temp"
      (678131 'move' call_tmp[678128](388253 call _nnz _mt[243] this[165910]))
      unknown call_tmp[678133] "expr temp" "maybe param" "maybe type" "temp"
      (678136 'move' call_tmp[678133](165933 call >= call_tmp[678128] 1))
      unknown call_tmp[678138] "expr temp" "maybe param" "maybe type" "temp"
      (678141 'move' call_tmp[678138](165999 call _cond_test call_tmp[678133]))
      if call_tmp[678138]
      {
        unknown call_tmp[678145] "expr temp" "maybe param" "maybe type" "temp"
        (678148 'move' call_tmp[678145](165939 call(388259 call (partial) _indices _mt[243] this[165910]) 1))
        (165940 call <~> f[165902] call_tmp[678145])
        (482879 'end of statement')
        {
          unknown _indexOfInterest[165961] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[165962] "expr temp" "temp"
          unknown call_tmp[678152] "expr temp" "maybe param" "maybe type" "temp"
          (678155 'move' call_tmp[678152](388271 call _nnz _mt[243] this[165910]))
          unknown call_tmp[678157] "expr temp" "maybe param" "maybe type" "temp"
          (678160 'move' call_tmp[678157](165976 call chpl_direct_range_iter 2 call_tmp[678152] 1))
          (165971 'move' _iterator[165962](165969 call _getIterator call_tmp[678157]))
          Defer
          {
            {
              (165992 call _freeIterator _iterator[165962])
            }
          }
          { scopeless type
            (165981 'move' _indexOfInterest[165961](165978 call iteratorIndex _iterator[165962]))
          }
          ForLoop[165963]
          {
            unknown i[165985] "index var" "insert auto destroy"
            (482881 'end of statement')
            (165987 'move' i[165985] _indexOfInterest[165961])
            (482882 'end of statement' i[165985])
            {
              unknown call_tmp[678162] "expr temp" "maybe param" "maybe type" "temp"
              (678165 'move' call_tmp[678162](165951 call <~> f[165902] " "))
              unknown call_tmp[678169] "expr temp" "maybe param" "maybe type" "temp"
              (678172 'move' call_tmp[678169](165956 call(388265 call (partial) _indices _mt[243] this[165910]) i[165985]))
              (165957 call <~> call_tmp[678162] call_tmp[678169])
              (482884 'end of statement' i[165985])
            }
            label _continueLabel[165966]
            _indexOfInterest[165961]
            _iterator[165962]
          }
          label _breakLabel[165967]
        }
      }
      unknown call_tmp[678174] "expr temp" "maybe param" "maybe type" "temp"
      (678177 'move' call_tmp[678174](166009 call _cond_test printBrackets[165907]))
      if call_tmp[678174]
      {
        (166006 call <~> f[165902] "}")
      }
    }
    {
      unknown call_tmp[678179] "expr temp" "maybe param" "maybe type" "temp"
      (678182 'move' call_tmp[678179](166036 call _cond_test printBrackets[165907]))
      if call_tmp[678179]
      {
        (166033 call <~> f[165902] "{\n")
      }
      unknown call_tmp[678186] "expr temp" "maybe param" "maybe type" "temp"
      (678189 'move' call_tmp[678186](388280 call _nnz _mt[243] this[165910]))
      unknown call_tmp[678191] "expr temp" "maybe param" "maybe type" "temp"
      (678194 'move' call_tmp[678191](166044 call >= call_tmp[678186] 1))
      unknown call_tmp[678196] "expr temp" "maybe param" "maybe type" "temp"
      (678199 'move' call_tmp[678196](166151 call _cond_test call_tmp[678191]))
      if call_tmp[678196]
      {
        unknown call_tmp[678203] "maybe param" "maybe type" "temp"
        (678206 'move' call_tmp[678203](166049 call(388285 call (partial) _indices _mt[243] this[165910]) 1))
        unknown prevInd[166050] "dead at end of block" "insert auto destroy"
        (544309 'init var' prevInd[166050] call_tmp[678203])
        (166053 'end of statement')
        unknown call_tmp[678208] "expr temp" "maybe param" "maybe type" "temp"
        (678211 'move' call_tmp[678208](166057 call <~> f[165902] " "))
        (166060 call <~> call_tmp[678208] prevInd[166050])
        (482888 'end of statement' prevInd[166050])
        {
          unknown _indexOfInterest[166108] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166109] "expr temp" "temp"
          unknown call_tmp[678215] "expr temp" "maybe param" "maybe type" "temp"
          (678218 'move' call_tmp[678215](388309 call _nnz _mt[243] this[165910]))
          unknown call_tmp[678220] "expr temp" "maybe param" "maybe type" "temp"
          (678223 'move' call_tmp[678220](166123 call chpl_direct_range_iter 2 call_tmp[678215] 1))
          (166118 'move' _iterator[166109](166116 call _getIterator call_tmp[678220]))
          Defer
          {
            {
              (166139 call _freeIterator _iterator[166109])
            }
          }
          { scopeless type
            (166128 'move' _indexOfInterest[166108](166125 call iteratorIndex _iterator[166109]))
          }
          ForLoop[166110]
          {
            unknown i[166132] "index var" "insert auto destroy"
            (482891 'end of statement')
            (166134 'move' i[166132] _indexOfInterest[166108])
            (482892 'end of statement' i[166132])
            {
              unknown call_tmp[678225] "expr temp" "maybe param" "maybe type" "temp"
              (678228 'move' call_tmp[678225](166071 call prevInd[166050] 0))
              unknown call_tmp[678232] "expr temp" "maybe param" "maybe type" "temp"
              (678235 'move' call_tmp[678232](166075 call(388293 call (partial) _indices _mt[243] this[165910]) i[166132]))
              unknown call_tmp[678237] "expr temp" "maybe param" "maybe type" "temp"
              (678240 'move' call_tmp[678237](166078 call call_tmp[678232] 0))
              unknown call_tmp[678242] "expr temp" "maybe param" "maybe type" "temp"
              (678245 'move' call_tmp[678242](166079 call != call_tmp[678225] call_tmp[678237]))
              unknown call_tmp[678247] "expr temp" "maybe param" "maybe type" "temp"
              (678250 'move' call_tmp[678247](166087 call _cond_test call_tmp[678242]))
              if call_tmp[678247]
              {
                (166083 call <~> f[165902] "\n")
              }
              unknown call_tmp[678254] "expr temp" "maybe param" "maybe type" "temp"
              (678257 'move' call_tmp[678254](166096 call(388301 call (partial) _indices _mt[243] this[165910]) i[166132]))
              (166097 call = prevInd[166050] call_tmp[678254])
              (482895 'end of statement' prevInd[166050] i[166132])
              unknown call_tmp[678259] "expr temp" "maybe param" "maybe type" "temp"
              (678262 'move' call_tmp[678259](166102 call <~> f[165902] " "))
              (166105 call <~> call_tmp[678259] prevInd[166050])
              (482898 'end of statement' prevInd[166050])
            }
            label _continueLabel[166113]
            _indexOfInterest[166108]
            _iterator[166109]
          }
          label _breakLabel[166114]
        }
        (166148 call <~> f[165902] "\n")
      }
      unknown call_tmp[678264] "expr temp" "maybe param" "maybe type" "temp"
      (678267 'move' call_tmp[678264](166177 call _cond_test printBrackets[165907]))
      if call_tmp[678264]
      {
        (166174 call <~> f[165902] "}\n")
      }
    }
    (521911 return _void[55])
  }
  function DefaultSparseArr[165840](?).dsiSerialWrite[166194](arg _mt[166199]:_MT[238], arg this[166196]:DefaultSparseArr[165840](?) :
  DefaultSparseArr[165840](?), arg f[166192]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[678271] "expr temp" "maybe param" "maybe type" "temp"
    (678274 'move' call_tmp[678271](388317 call rank _mt[243] this[166196]))
    unknown call_tmp[678276] "expr temp" "maybe param" "maybe type" "temp"
    (678279 'move' call_tmp[678276](166203 call == call_tmp[678271] 1))
    unknown call_tmp[678281] "expr temp" "maybe param" "maybe type" "temp"
    (678284 'move' call_tmp[678281](166425 call _cond_test call_tmp[678276]))
    if call_tmp[678281]
    {
      unknown call_tmp[678288] "expr temp" "maybe param" "maybe type" "temp"
      (678291 'move' call_tmp[678288](361373 call dom _mt[243] this[166196]))
      unknown call_tmp[678295] "expr temp" "maybe param" "maybe type" "temp"
      (678298 'move' call_tmp[678295](166206 call _nnz _mt[243] call_tmp[678288]))
      unknown call_tmp[678300] "expr temp" "maybe param" "maybe type" "temp"
      (678303 'move' call_tmp[678300](166210 call >= call_tmp[678295] 1))
      unknown call_tmp[678305] "expr temp" "maybe param" "maybe type" "temp"
      (678308 'move' call_tmp[678305](166282 call _cond_test call_tmp[678300]))
      if call_tmp[678305]
      {
        unknown call_tmp[678312] "expr temp" "maybe param" "maybe type" "temp"
        (678315 'move' call_tmp[678312](166216 call(388323 call (partial) data _mt[243] this[166196]) 1))
        (166217 call <~> f[166192] call_tmp[678312])
        (482902 'end of statement')
        {
          unknown _indexOfInterest[166241] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166242] "expr temp" "temp"
          unknown call_tmp[678319] "expr temp" "maybe param" "maybe type" "temp"
          (678322 'move' call_tmp[678319](361378 call dom _mt[243] this[166196]))
          unknown call_tmp[678326] "expr temp" "maybe param" "maybe type" "temp"
          (678329 'move' call_tmp[678326](166256 call _nnz _mt[243] call_tmp[678319]))
          unknown call_tmp[678331] "expr temp" "maybe param" "maybe type" "temp"
          (678334 'move' call_tmp[678331](166259 call chpl_direct_range_iter 2 call_tmp[678326] 1))
          (166251 'move' _iterator[166242](166249 call _getIterator call_tmp[678331]))
          Defer
          {
            {
              (166275 call _freeIterator _iterator[166242])
            }
          }
          { scopeless type
            (166264 'move' _indexOfInterest[166241](166261 call iteratorIndex _iterator[166242]))
          }
          ForLoop[166243]
          {
            unknown i[166268] "index var" "insert auto destroy"
            (482904 'end of statement')
            (166270 'move' i[166268] _indexOfInterest[166241])
            (482905 'end of statement' i[166268])
            {
              unknown call_tmp[678336] "expr temp" "maybe param" "maybe type" "temp"
              (678339 'move' call_tmp[678336](166231 call <~> f[166192] " "))
              unknown call_tmp[678343] "expr temp" "maybe param" "maybe type" "temp"
              (678346 'move' call_tmp[678343](166236 call(388329 call (partial) data _mt[243] this[166196]) i[166268]))
              (166237 call <~> call_tmp[678336] call_tmp[678343])
              (482907 'end of statement' i[166268])
            }
            label _continueLabel[166246]
            _indexOfInterest[166241]
            _iterator[166242]
          }
          label _breakLabel[166247]
        }
      }
    }
    {
      unknown call_tmp[678350] "expr temp" "maybe param" "maybe type" "temp"
      (678353 'move' call_tmp[678350](361383 call dom _mt[243] this[166196]))
      unknown call_tmp[678357] "expr temp" "maybe param" "maybe type" "temp"
      (678360 'move' call_tmp[678357](166288 call _nnz _mt[243] call_tmp[678350]))
      unknown call_tmp[678362] "expr temp" "maybe param" "maybe type" "temp"
      (678365 'move' call_tmp[678362](166292 call >= call_tmp[678357] 1))
      unknown call_tmp[678367] "expr temp" "maybe param" "maybe type" "temp"
      (678370 'move' call_tmp[678367](166420 call _cond_test call_tmp[678362]))
      if call_tmp[678367]
      {
        unknown call_tmp[678374] "expr temp" "maybe param" "maybe type" "temp"
        (678377 'move' call_tmp[678374](361388 call dom _mt[243] this[166196]))
        unknown call_tmp[678381] "maybe param" "maybe type" "temp"
        (678384 'move' call_tmp[678381](166300 call(166295 call (partial) _indices _mt[243] call_tmp[678374]) 1))
        unknown prevInd[166301] "dead at end of block" "insert auto destroy"
        (544311 'init var' prevInd[166301] call_tmp[678381])
        (166304 'end of statement')
        unknown call_tmp[678388] "expr temp" "maybe param" "maybe type" "temp"
        (678391 'move' call_tmp[678388](166310 call(388336 call (partial) data _mt[243] this[166196]) 1))
        (166311 call <~> f[166192] call_tmp[678388])
        (482909 'end of statement')
        {
          unknown _indexOfInterest[166374] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[166375] "expr temp" "temp"
          unknown call_tmp[678395] "expr temp" "maybe param" "maybe type" "temp"
          (678398 'move' call_tmp[678395](361403 call dom _mt[243] this[166196]))
          unknown call_tmp[678402] "expr temp" "maybe param" "maybe type" "temp"
          (678405 'move' call_tmp[678402](166389 call _nnz _mt[243] call_tmp[678395]))
          unknown call_tmp[678407] "expr temp" "maybe param" "maybe type" "temp"
          (678410 'move' call_tmp[678407](166392 call chpl_direct_range_iter 2 call_tmp[678402] 1))
          (166384 'move' _iterator[166375](166382 call _getIterator call_tmp[678407]))
          Defer
          {
            {
              (166408 call _freeIterator _iterator[166375])
            }
          }
          { scopeless type
            (166397 'move' _indexOfInterest[166374](166394 call iteratorIndex _iterator[166375]))
          }
          ForLoop[166376]
          {
            unknown i[166401] "index var" "insert auto destroy"
            (482911 'end of statement')
            (166403 'move' i[166401] _indexOfInterest[166374])
            (482912 'end of statement' i[166401])
            {
              unknown call_tmp[678412] "expr temp" "maybe param" "maybe type" "temp"
              (678415 'move' call_tmp[678412](166325 call prevInd[166301] 0))
              unknown call_tmp[678419] "expr temp" "maybe param" "maybe type" "temp"
              (678422 'move' call_tmp[678419](361393 call dom _mt[243] this[166196]))
              unknown call_tmp[678426] "expr temp" "maybe param" "maybe type" "temp"
              (678429 'move' call_tmp[678426](166332 call(166327 call (partial) _indices _mt[243] call_tmp[678419]) i[166401]))
              unknown call_tmp[678431] "expr temp" "maybe param" "maybe type" "temp"
              (678434 'move' call_tmp[678431](166335 call call_tmp[678426] 0))
              unknown call_tmp[678436] "expr temp" "maybe param" "maybe type" "temp"
              (678439 'move' call_tmp[678436](166336 call != call_tmp[678412] call_tmp[678431]))
              unknown call_tmp[678441] "expr temp" "maybe param" "maybe type" "temp"
              (678444 'move' call_tmp[678441](166350 call _cond_test call_tmp[678436]))
              if call_tmp[678441]
              {
                (166340 call <~> f[166192] "\n")
              }
              {
                (166346 call <~> f[166192] " ")
              }
              unknown call_tmp[678448] "expr temp" "maybe param" "maybe type" "temp"
              (678451 'move' call_tmp[678448](361398 call dom _mt[243] this[166196]))
              unknown call_tmp[678455] "expr temp" "maybe param" "maybe type" "temp"
              (678458 'move' call_tmp[678455](166362 call(166357 call (partial) _indices _mt[243] call_tmp[678448]) i[166401]))
              (166363 call = prevInd[166301] call_tmp[678455])
              (482916 'end of statement' prevInd[166301] i[166401])
              unknown call_tmp[678462] "expr temp" "maybe param" "maybe type" "temp"
              (678465 'move' call_tmp[678462](166370 call(388348 call (partial) data _mt[243] this[166196]) i[166401]))
              (166371 call <~> f[166192] call_tmp[678462])
              (482919 'end of statement' i[166401])
            }
            label _continueLabel[166379]
            _indexOfInterest[166374]
            _iterator[166375]
          }
          label _breakLabel[166380]
        }
        (166417 call <~> f[166192] "\n")
      }
    }
    (521913 return _void[55])
  }
  (355204 'used modules list'(161601 'use' ChapelStandard[20267])(161605 'import' RangeChunk[266479])(161608 'use' DSIUtil[230909]))
}