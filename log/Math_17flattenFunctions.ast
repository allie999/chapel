AST dump for Math after pass flattenFunctions.
Module use list: ChapelStandard HaltWrappers SysCTypes 

{
  function chpl__init_Math[416098]() : void[4] "insert line file info" "module init" "resolved"
  {
    (215872 'end of statement')
    (215879 'end of statement')
    (215886 'end of statement')
    (215893 'end of statement')
    (215900 'end of statement')
    (215907 'end of statement')
    (215914 'end of statement')
    (215921 'end of statement')
    (215928 'end of statement')
    (215935 'end of statement')
    (215942 'end of statement')
    (215949 'end of statement')
    (215956 'end of statement')
    (532517 return _void[55])
  }
  function abs[463441](const in arg i[463448]:int(64)[13]) : int(64)[13] "inline" "resolved"
  {
    val ret[529917]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[574592]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[574593]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[707788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (707791 'move' call_tmp[707788](463453 call <[948398] i[463448]))
    (574598 'move' tmp[574593] call_tmp[707788])
    if tmp[574593]
    {
      val tmp[574600]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (574602 'move' tmp[574600](463458 call -[438947] i[463448]))
      (574607 'move' tmp[574592] tmp[574600])
    }
    {
      (574612 'move' tmp[574592] i[463448])
    }
    (529922 'move' ret[529917] tmp[574592])
    (529919 return ret[529917])
  }
}