AST dump for ChapelTaskDataHelp after pass replaceArrayAccessesWithRefTemps.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelTaskDataHelp[416024]() : void[4] "insert line file info" "module init" "resolved"
  {
    (513391 return _void[55])
  }
  type chpl_task_infoChapel_t[88581]
  function chpl_task_getInfoChapel[88585]() : c_ptr(chpl_task_infoChapel_t)[1381087] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513375]:c_ptr(chpl_task_infoChapel_t)[1381087] "RVV" "temp"
    (513377 return ret[513375])
  }
  function chpl_task_getInfoChapelInBundle[88600](const in arg args[88597]:chpl_task_bundle_p[209335]) : c_ptr(chpl_task_infoChapel_t)[1381087] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513381]:c_ptr(chpl_task_infoChapel_t)[1381087] "RVV" "temp"
    (513383 return ret[513381])
  }
  function chpl_task_data_setup[88615](const in arg args[88612]:chpl_task_bundle_p[209335], const in arg infoChapel[88621]:c_ptr(chpl_task_infoChapel_t)[1381087]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[631977]:c_ptr(chpl_task_infoChapel_t)[1381087] "dead after last mention" "expr temp" "maybe param" "temp"
    (631980 'move' call_tmp[631977](88628 call chpl_task_getInfoChapelInBundle[88600] args[88612]))
    val call_tmp[631982]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (631985 'move' call_tmp[631982](88634 call c_sizeof[1352644]))
    val coerce_tmp[1381615]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381621 'move' coerce_tmp[1381615](1381617 'cast' c_void_ptr[149] call_tmp[631977]))
    val coerce_tmp[1381623]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1381629 'move' coerce_tmp[1381623](1381625 'cast' c_void_ptr[149] infoChapel[88621]))
    (88635 call c_memcpy[974715] coerce_tmp[1381615] coerce_tmp[1381623] call_tmp[631982])
    (513385 return _void[55])
  }
  function chpl_save_task_error[1227507](const in arg e[1227509]:unmanaged _EndCountBase[1227505], const in arg err[1227511]:unmanaged Error?[415401]) : void[4] "instantiated generic" "invisible fn" "resolved" "task complete impl fn" "no return value for void"
  {
    val call_tmp[1227517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1227567]:borrowed object?[415395] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1227572 'move' coerce_tmp[1227567](1227569 'cast' borrowed object?[415395] err[1227511]))
    (1227519 'move' call_tmp[1227517](1227522 call !=[1485] coerce_tmp[1227567] nil[44]))
    val call_tmp[1227525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1227527 'move' call_tmp[1227525] call_tmp[1227517])
    if call_tmp[1227525]
    {
      ref call_tmp[1227534]:_ref(chpl_TaskErrors)[938870] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1227585]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1227590 'move' coerce_tmp[1227585](1227587 'cast' _EndCountBase[12715] e[1227509]))
      (1227536 'move' call_tmp[1227534](1227539 call errors[752057] coerce_tmp[1227585]))
      val call_tmp[1227542]:unmanaged Error[415532] "dead after last mention" "expr temp" "maybe param" "temp"
      (1227544 'move' call_tmp[1227542](1227547 call postfix![963573] err[1227511]))
      (1227553 call append[168240] call_tmp[1227534] call_tmp[1227542])
    }
    (1227556 return _void[55])
  }
}