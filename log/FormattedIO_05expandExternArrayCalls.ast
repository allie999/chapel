AST dump for FormattedIO after pass expandExternArrayCalls.
Module use list: 

{
  (352924 'use' ChapelStandard)
  (251182 'use' IO)
  (251186 'use' SysCTypes)
  (251189 'use' SysBasic)
  (251192 'use' SysError)
  function _toIntegral[251201](arg x[251198] :
  unknown t[251196]) : _unknown[51] "inline" "private"
  {
    (251212 return(251210 call _build_tuple x 1))
  }
  where {
    (251206 call isIntegralType t)
  }
  function _toIntegral[251225](arg x[251222] :
  unknown t[251220]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251244](251242 call _build_tuple int[13] bool[10])
      (251247 'end of statement')
    }
    if(251274 call _cond_test(251252 call isAbstractEnumType t))
    {
      { scopeless
        (251259 call = ret(251257 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251271 call = ret(251269 call _build_tuple(251265 call _cast int[13] x) 1))
      }
    }
    (251281 return ret)
  }
  where {
    (251237 call &&(251230 call _isIoPrimitiveType t)(251235 call !(251234 call isIntegralType t)))
  }
  function _toIntegral[251293](arg x[251290] :
  unknown t[251288]) : _unknown[51] "inline" "private"
  {
    (251306 return(251304 call _build_tuple 0 0))
  }
  where {
    (251299 call !(251298 call _isIoPrimitiveType t))
  }
  function _toSigned[251319](arg x[251316] :
  unknown t[251314]) : _unknown[51] "inline" "private"
  {
    (251330 return(251328 call _build_tuple x 1))
  }
  where {
    (251324 call isIntType t)
  }
  function _toSigned[251345](arg x[251342] :
  (251341 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (251358 return(251356 call _build_tuple(251352 call _cast(251351 call int[13] 8) x) 1))
  }
  function _toSigned[251372](arg x[251369] :
  (251368 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (251385 return(251383 call _build_tuple(251379 call _cast(251378 call int[13] 16) x) 1))
  }
  function _toSigned[251399](arg x[251396] :
  (251395 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (251412 return(251410 call _build_tuple(251406 call _cast(251405 call int[13] 32) x) 1))
  }
  function _toSigned[251426](arg x[251423] :
  (251422 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (251439 return(251437 call _build_tuple(251433 call _cast(251432 call int[13] 64) x) 1))
  }
  function _toSigned[251451](arg x[251448] :
  unknown t[251446]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251470](251468 call _build_tuple int[13] bool[10])
      (251473 'end of statement')
    }
    if(251500 call _cond_test(251478 call isAbstractEnumType t))
    {
      { scopeless
        (251485 call = ret(251483 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251497 call = ret(251495 call _build_tuple(251491 call _cast int[13] x) 1))
      }
    }
    (251507 return ret)
  }
  where {
    (251463 call &&(251456 call _isIoPrimitiveType t)(251461 call !(251460 call isIntegralType t)))
  }
  function _toSigned[251519](arg x[251516] :
  unknown t[251514]) : _unknown[51] "inline" "private"
  {
    (251535 return(251533 call _build_tuple(251529 call _cast int[13] 0) 0))
  }
  where {
    (251525 call !(251524 call _isIoPrimitiveType t))
  }
  function _toUnsigned[251548](arg x[251545] :
  unknown t[251543]) : _unknown[51] "inline" "private"
  {
    (251559 return(251557 call _build_tuple x 1))
  }
  where {
    (251553 call isUintType t)
  }
  function _toUnsigned[251574](arg x[251571] :
  (251570 call int[13] 8)) : _unknown[51] "inline" "private"
  {
    (251587 return(251585 call _build_tuple(251581 call _cast(251580 call uint[115] 8) x) 1))
  }
  function _toUnsigned[251601](arg x[251598] :
  (251597 call int[13] 16)) : _unknown[51] "inline" "private"
  {
    (251614 return(251612 call _build_tuple(251608 call _cast(251607 call uint[115] 16) x) 1))
  }
  function _toUnsigned[251628](arg x[251625] :
  (251624 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (251641 return(251639 call _build_tuple(251635 call _cast(251634 call uint[115] 32) x) 1))
  }
  function _toUnsigned[251655](arg x[251652] :
  (251651 call int[13] 64)) : _unknown[51] "inline" "private"
  {
    (251668 return(251666 call _build_tuple(251662 call _cast(251661 call uint[115] 64) x) 1))
  }
  function _toUnsigned[251680](arg x[251677] :
  unknown t[251675]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251699](251697 call _build_tuple uint[115] bool[10])
      (251702 'end of statement')
    }
    if(251732 call _cond_test(251707 call isAbstractEnumType t))
    {
      { scopeless
        (251717 call = ret(251715 call _build_tuple(251711 call _cast uint[115] 0) 0))
      }
    }
    {
      { scopeless
        (251729 call = ret(251727 call _build_tuple(251723 call _cast uint[115] x) 1))
      }
    }
    (251739 return ret)
  }
  where {
    (251692 call &&(251685 call _isIoPrimitiveType t)(251690 call !(251689 call isIntegralType t)))
  }
  function _toUnsigned[251751](arg x[251748] :
  unknown t[251746]) : _unknown[51] "inline" "private"
  {
    (251767 return(251765 call _build_tuple(251761 call _cast uint[115] 0) 0))
  }
  where {
    (251757 call !(251756 call _isIoPrimitiveType t))
  }
  function _toReal[251780](arg x[251777] :
  unknown t[251775]) : _unknown[51] "inline" "private"
  {
    (251791 return(251789 call _build_tuple x 1))
  }
  where {
    (251785 call isRealType t)
  }
  function _toReal[251804](arg x[251801] :
  unknown t[251799]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251823](251821 call _build_tuple real[16] bool[10])
      (251826 'end of statement')
    }
    if(251853 call _cond_test(251831 call isAbstractEnumType t))
    {
      { scopeless
        (251838 call = ret(251836 call _build_tuple 0.0 0))
      }
    }
    {
      { scopeless
        (251850 call = ret(251848 call _build_tuple(251844 call _cast real[16] x) 1))
      }
    }
    (251860 return ret)
  }
  where {
    (251816 call &&(251809 call _isIoPrimitiveType t)(251814 call !(251813 call isRealType t)))
  }
  function _toReal[251872](arg x[251869] :
  unknown t[251867]) : _unknown[51] "inline" "private"
  {
    (251885 return(251883 call _build_tuple 0.0 0))
  }
  where {
    (251878 call !(251877 call _isIoPrimitiveType t))
  }
  function _toImag[251898](arg x[251895] :
  unknown t[251893]) : _unknown[51] "inline" "private"
  {
    (251909 return(251907 call _build_tuple x 1))
  }
  where {
    (251903 call isImagType t)
  }
  function _toImag[251922](arg x[251919] :
  unknown t[251917]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251941](251939 call _build_tuple imag[130] bool[10])
      (251944 'end of statement')
    }
    if(251971 call _cond_test(251949 call isAbstractEnumType t))
    {
      { scopeless
        (251956 call = ret(251954 call _build_tuple 0.0i 0))
      }
    }
    {
      { scopeless
        (251968 call = ret(251966 call _build_tuple(251962 call _cast imag[130] x) 1))
      }
    }
    (251978 return ret)
  }
  where {
    (251934 call &&(251927 call _isIoPrimitiveType t)(251932 call !(251931 call isImagType t)))
  }
  function _toImag[251990](arg x[251987] :
  unknown t[251985]) : _unknown[51] "inline" "private"
  {
    (252003 return(252001 call _build_tuple 0.0i 0))
  }
  where {
    (251996 call !(251995 call _isIoPrimitiveType t))
  }
  function _toComplex[252016](arg x[252013] :
  unknown t[252011]) : _unknown[51] "inline" "private"
  {
    (252027 return(252025 call _build_tuple x 1))
  }
  where {
    (252021 call isComplexType t)
  }
  function _toComplex[252040](arg x[252037] :
  unknown t[252035]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252059](252057 call _build_tuple complex[140] bool[10])
      (252062 'end of statement')
    }
    if(252092 call _cond_test(252067 call isAbstractEnumType t))
    {
      { scopeless
        (252077 call = ret(252075 call _build_tuple(252071 call + 0.0 0.0i) 0))
      }
    }
    {
      { scopeless
        (252089 call = ret(252087 call _build_tuple(252083 call _cast complex[140] x) 1))
      }
    }
    (252099 return ret)
  }
  where {
    (252052 call &&(252045 call _isIoPrimitiveType t)(252050 call !(252049 call isComplexType t)))
  }
  function _toComplex[252111](arg x[252108] :
  unknown t[252106]) : _unknown[51] "inline" "private"
  {
    (252127 return(252125 call _build_tuple(252121 call + 0.0 0.0i) 0))
  }
  where {
    (252117 call !(252116 call _isIoPrimitiveType t))
  }
  function _toRealOrComplex[252140](arg x[252137] :
  unknown t[252135]) : _unknown[51] "inline" "private"
  {
    (252151 return(252149 call _build_tuple x 1))
  }
  where {
    (252145 call isComplexType t)
  }
  function _toRealOrComplex[252164](arg x[252161] :
  unknown t[252159]) : _unknown[51] "inline" "private"
  {
    (252175 return(252173 call _build_tuple x 1))
  }
  where {
    (252169 call isFloatType t)
  }
  function _toRealOrComplex[252188](arg x[252185] :
  unknown t[252183]) : _unknown[51] "inline" "private"
  {
    (252218 return(252216 call _build_tuple(252212 call _cast real[16] x) 1))
  }
  where {
    (252208 call &&(252200 call &&(252193 call _isIoPrimitiveType t)(252198 call !(252197 call isComplexType t)))(252206 call !(252205 call isFloatType t)))
  }
  function _toRealOrComplex[252231](arg x[252228] :
  unknown t[252226]) : _unknown[51] "inline" "private"
  {
    (252244 return(252242 call _build_tuple 0.0 0))
  }
  where {
    (252237 call !(252236 call _isIoPrimitiveType t))
  }
  function _toNumeric[252257](arg x[252254] :
  unknown t[252252]) : _unknown[51] "inline" "private"
  {
    (252268 return(252266 call _build_tuple x 1))
  }
  where {
    (252262 call isNumericType t)
  }
  function _toNumeric[252281](arg x[252278] :
  unknown t[252276]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252300](252298 call _build_tuple int[13] bool[10])
      (252303 'end of statement')
    }
    if(252330 call _cond_test(252308 call isAbstractEnumType t))
    {
      { scopeless
        (252315 call = ret(252313 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (252327 call = ret(252325 call _build_tuple(252321 call _cast int[13] x) 1))
      }
    }
    (252337 return ret)
  }
  where {
    (252293 call &&(252286 call _isIoPrimitiveType t)(252291 call !(252290 call isNumericType t)))
  }
  function _toNumeric[252349](arg x[252346] :
  unknown t[252344]) : _unknown[51] "inline" "private"
  {
    (252362 return(252360 call _build_tuple 0 0))
  }
  where {
    (252355 call !(252354 call _isIoPrimitiveType t))
  }
  function _toBytes[252374](arg x[252371] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252381 return(252379 call _build_tuple x 1))
  }
  function _toBytes[252392](arg x[252389] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252402 return(252400 call _build_tuple(252396 call _cast bytes[24] x) 1))
  }
  function _toBytes[252414](arg x[252411] :
  unknown t[252409]) : _unknown[51] "inline" "private"
  {
    (252440 return(252438 call _build_tuple(252434 call _cast bytes[24] "") 0))
  }
  function _toString[252451](arg x[252448] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252458 return(252456 call _build_tuple x 1))
  }
  function _toString[252469](arg x[252466] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252492 return(252490 call _build_tuple "" 0))
  }
  function _toString[252504](arg x[252501] :
  unknown t[252499]) : _unknown[51] "inline" "private"
  {
    (252530 return(252528 call _build_tuple(252524 call _cast string[26] x) 1))
  }
  where {
    (252520 call &&(252514 call &&(252509 call _isIoPrimitiveType t)(252512 call != t bytes[24]))(252518 call != t string[26]))
  }
  function _toString[252543](arg x[252540] :
  unknown t[252538]) : _unknown[51] "inline" "private"
  {
    (252572 return(252570 call _build_tuple "" 0))
  }
  where {
    (252549 call !(252548 call _isIoPrimitiveType t))
  }
  function _toChar[252585](arg x[252582] :
  unknown t[252580]) : _unknown[51] "inline" "private"
  {
    (252602 return(252600 call _build_tuple(252596 call _cast(252595 call int[13] 32) x) 1))
  }
  where {
    (252590 call isIntegralType t)
  }
  function _toChar[252615](arg x[252612] :
  unknown t[252610]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown chr[252625](252624 call int[13] 32)
      (252628 'end of statement')
    }
    { scopeless
      unknown nbytes[252631] c_int
      (252634 'end of statement')
    }
    { scopeless
      unknown local_x[252641](252640 call(252636 call . x c"localize"))
      (252644 'end of statement')
    }
    (252662 call qio_decode_char_buf chr nbytes(252654 call(252650 call . local_x c"c_str"))(252660 call _cast ssize_t(252656 call . local_x c"numBytes")))
    (252669 return(252667 call _build_tuple chr 1))
  }
  where {
    (252619 call == t string[26])
  }
  function _toChar[252681](arg x[252678] :
  unknown t[252676]) : _unknown[51] "inline" "private"
  {
    (252706 return(252704 call _build_tuple(252700 call _cast(252699 call int[13] 32) 0) 0))
  }
  where {
    (252693 call !(252691 call ||(252685 call == t string[26])(252690 call isIntegralType t)))
  }
  function _setIfPrimitive[252719](ref arg lhs[252716] :
  unknown t[252714], arg rhs[252723] :
  unknown t2[252721], arg argi[252727] :
  int[13]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown empty[252742] t2
      (252745 'end of statement')
    }
    if(252763 call _cond_test(252749 call == rhs empty))
    {
      (252753 call = lhs 0)
    }
    {
      (252759 call = lhs 1)
    }
    (252768 return ENOERR)
  }
  where {
    (252739 call &&(252733 call == t bool[10])(252738 call _isIoPrimitiveType t2))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[252781](ref arg lhs[252778] :
  unknown t[252776], arg rhs[252785] :
  unknown t2[252783], arg argi[252789] :
  int[13]) : _unknown[51] "inline" "private"
  {
    Try
    {
      {
        if(252912 call _cond_test(252806 call isAbstractEnumType t))
        {
          if(252824 call _cond_test(252810 call isStringType t2))
          {
            (252816 call = lhs(252814 call _cast t rhs))
          }
          {
            (252821 return ERANGE)
          }
        }
        {
          { scopeless
            if(252908 call _cond_test(252832 call isEnumType t))
            {
              if(252864 call _cond_test(252841 call ||(252836 call isIntType t2)(252840 call isStringType t2)))
              {
                (252848 call = lhs(252846 call _cast t rhs))
              }
              {
                (252860 call = lhs(252858 call _cast t(252855 call _cast int[13] rhs)))
              }
            }
            {
              if(252903 call _cond_test(252877 call &&(252872 call isBytesType t2)(252876 call isStringType t)))
              {
                (252890 call = lhs(252889 call(252881 call . rhs c"decode")(252885 call . decodePolicy c"strict")))
              }
              {
                (252899 call = lhs(252897 call _cast t rhs))
              }
            }
          }
        }
      }
    }
    Catch
    {
      (252920 return ERANGE)
    }
    (252928 return ENOERR)
  }
  where {
    (252801 call &&(252795 call != t bool[10])(252800 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[252941](ref arg lhs[252938] :
  unknown t[252936], arg rhs[252943]:_any[178](?), arg argi[252946] :
  int[13]) : _unknown[51] "inline" "private"
  {
    (252960 return(252959 call qio_format_error_arg_mismatch argi))
  }
  where {
    (252954 call !(252953 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfChar[252974](ref arg lhs[252971] :
  unknown t[252969], arg rhs[252980] :
  (252979 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (252996 call = lhs(252994 call _cast string[26](252988 'new'(252992 call ioChar rhs))))
  }
  where {
    (252985 call == t string[26])
  }
  function _setIfChar[253010](ref arg lhs[253007] :
  unknown t[253005], arg rhs[253016] :
  (253015 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253028 call = lhs(253026 call _cast t rhs))
  }
  where {
    (253022 call isIntegralType t)
  }
  function _setIfChar[253042](ref arg lhs[253039] :
  unknown t[253037], arg rhs[253048] :
  (253047 call int[13] 32)) : _unknown[51] "inline" "private"
  {
  }
  where {
    (253061 call !(253059 call ||(253053 call == t string[26])(253058 call isIntegralType t)))
  }
  function _toRegexp[253074](arg x[253071] :
  unknown t[253069]) : _unknown[51] "inline" "private"
  {
    (253089 return(253087 call _build_tuple x 1))
  }
  where {
    (253083 call isSubtype t(253082 call regexp ?[260]))
  }
  function _toRegexp[253102](arg x[253099] :
  unknown t[253097]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown r[253108](253107 call regexp string[26])
      (253111 'end of statement')
    }
    (253118 return(253116 call _build_tuple r 0))
  }
  type _channel_regexp_info[253510] unknown hasRegexp[253124] 0 unknown matchedRegexp[253129] 0 unknown releaseRegexp[253134] 0 unknown theRegexp[253141](253140 call qio_regexp_null) unknown matches[253150] nil[44](253148 call _ddata qio_regexp_string_piece_t) unknown capArr[253159] nil[44](253157 call _ddata bytes[24]) unknown capturei[253164] int[13] unknown ncaptures[253169] int[13] function _channel_regexp_info[253510].clear[253175](arg _mt[253514]:_MT[238], arg this[253512]:_channel_regexp_info[253510]) : _unknown[51] "method" "primary method"
  {
    if(253184 call _cond_test releaseRegexp)
    {
      (253181 call qio_regexp_release theRegexp)
    }
    (253193 call = theRegexp(253192 call qio_regexp_null))
    (253198 call = hasRegexp 0)
    (253203 call = matchedRegexp 0)
    (253208 call = releaseRegexp 0)
    if(253221 call _cond_test matches)
    {
      { scopeless
        (253219 call _ddata_free matches(253217 call + ncaptures 1))
      }
    }
    {
      unknown _indexOfInterest[253256] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[253257] "expr temp" "temp"
      (253266 'move' _iterator[253257](253264 call _getIterator(253273 call chpl_direct_counted_range_iter 0 ncaptures)))
      Defer
      {
        {
          (253289 call _freeIterator _iterator[253257])
        }
      }
      { scopeless type
        (253278 'move' _indexOfInterest[253256](253275 call iteratorIndex _iterator[253257]))
      }
      ForLoop[253258]
      {
        unknown i[253282] "index var" "insert auto destroy"
        (253284 'move' i[253282] _indexOfInterest[253256])
        { scopeless
          (253253 call =(253236 call capArr i) b"")
        }
        label _continueLabel[253261]
        _indexOfInterest[253256]
        _iterator[253257]
      }
      label _breakLabel[253262]
    }
    if(253303 call _cond_test capArr)
    {
      { scopeless
        (253301 call _ddata_free capArr ncaptures)
      }
    }
  } function _channel_regexp_info[253510].allocate_captures[253312](arg _mt[253518]:_MT[238], arg this[253516]:_channel_regexp_info[253510]) : _unknown[51] "method" "primary method"
  {
    (253319 call = ncaptures(253318 call qio_regexp_get_ncaptures theRegexp))
    (253332 call = matches(253331 call _ddata_allocate qio_regexp_string_piece_t(253329 call + ncaptures 1)))
    (253341 call = capArr(253340 call _ddata_allocate bytes[24] ncaptures))
    (253346 call = capturei 0)
  } function _channel_regexp_info[253510].deinit[253353](arg _mt[253522]:_MT[238], arg this[253520]:_channel_regexp_info[253510]) : _unknown[51] "destructor" "method" "primary method"
  {
    (253357 call clear)
  } function _channel_regexp_info[253510].writeThis[253366](arg _mt[253526]:_MT[238], arg this[253524]:_channel_regexp_info[253510], arg f[253364]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides"
  {
    (253392 call <~> f(253390 call + "{hasRegexp = "(253388 call _cast string[26] hasRegexp)))
    (253420 call <~> f(253418 call + ", matchedRegexp = "(253416 call _cast string[26] matchedRegexp)))
    (253447 call <~> f(253445 call + ", releaseRegexp = "(253443 call _cast string[26] releaseRegexp)))
    (253474 call <~> f(253472 call + ", ... capturei = "(253470 call _cast string[26] capturei)))
    (253504 call <~> f(253502 call +(253499 call + ", ncaptures = "(253497 call _cast string[26] ncaptures)) "}"))
  }
  function _unknown[51]._match_regexp_if_needed[253536](arg _mt[253558]:_MT[238], arg this[253555] :
  channel, arg cur[253533] :
  size_t, arg len[253539] :
  size_t, ref arg error[253543] :
  syserr, ref arg style[253547] :
  iostyle, arg r[253552] :
  (253551 'to unmanaged class from unknown' _channel_regexp_info)) : _unknown[51] "method" "no doc"
  {
    if(253959 call _cond_test(253568 call qio_regexp_ok(253564 call . r c"theRegexp")))
    {
      if(253577 call _cond_test(253572 call . r c"matchedRegexp"))
      {
        { scopeless
          (253575 return)
        }
      }
      (253588 call =(253584 call . r c"matchedRegexp") 1)
      (253598 call(253594 call . r c"allocate_captures"))
      { scopeless
        unknown ncaps[253606](253603 call . r c"ncaptures")
        (253609 'end of statement')
      }
      { scopeless
        unknown nm[253614](253612 call + ncaps 1)
        (253617 'end of statement')
      }
      { scopeless
        unknown maxlen[253628](253625 call . style c"max_width_characters")(253621 call int[13] 64)
        (253631 'end of statement')
      }
      { scopeless
        unknown can_discard[253636](253634 call == cur len)
        (253639 'end of statement')
      }
      if(253661 call _cond_test(253648 call == maxlen(253647 call max(253645 call uint[115] 32))))
      {
        { scopeless
          (253658 call = maxlen(253657 call max(253655 call int[13] 64)))
        }
      }
      { scopeless
        unknown before_match[253670](253669 call qio_channel_offset_unlocked _channel_internal)
        (253673 'end of statement')
      }
      (253696 call = error(253695 call qio_regexp_channel_match(253677 call . r c"theRegexp") 0 _channel_internal maxlen QIO_REGEXP_ANCHOR_START can_discard 1 0(253691 call . r c"matches") nm))
      { scopeless
        unknown after_match[253703](253702 call qio_channel_offset_unlocked _channel_internal)
        (253706 'end of statement')
      }
      if(253945 call _cond_test(253708 call ! error))
      {
        {
          unknown _indexOfInterest[253759] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253760] "expr temp" "temp"
          (253769 'move' _iterator[253760](253767 call _getIterator(253776 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (253792 call _freeIterator _iterator[253760])
            }
          }
          { scopeless type
            (253781 'move' _indexOfInterest[253759](253778 call iteratorIndex _iterator[253760]))
          }
          ForLoop[253761]
          {
            unknown j[253785] "index var" "insert auto destroy"
            (253787 'move' j[253785] _indexOfInterest[253759])
            {
              { scopeless
                unknown m[253730](253729 call _to_reMatch(253727 call(253719 call . r c"matches")(253724 call + 1 j)))
                (253733 'end of statement')
              }
              (253748 call _extractMatch m(253746 call(253741 call . r c"capArr") j) error)
              if(253754 call _cond_test error)
              {
                { scopeless
                  break nil[44]
                }
              }
            }
            label _continueLabel[253764]
            _indexOfInterest[253759]
            _iterator[253760]
          }
          label _breakLabel[253765]
        }
        { scopeless
          unknown cur[253804](253803 call qio_channel_offset_unlocked _channel_internal)
          (253807 'end of statement')
        }
        { scopeless
          unknown target[253835](253833 call _cast int[13](253830 call +(253815 call .(253814 call(253809 call . r c"matches") 0) c"offset")(253827 call .(253824 call(253819 call . r c"matches") 0) c"len")))
          (253838 'end of statement')
        }
        (253849 call = error(253848 call qio_channel_advance 0 _channel_internal(253846 call - target cur)))
      }
      {
        {
          unknown _indexOfInterest[253886] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253887] "expr temp" "temp"
          (253896 'move' _iterator[253887](253894 call _getIterator(253903 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (253919 call _freeIterator _iterator[253887])
            }
          }
          { scopeless type
            (253908 'move' _indexOfInterest[253886](253905 call iteratorIndex _iterator[253887]))
          }
          ForLoop[253888]
          {
            unknown j[253912] "index var" "insert auto destroy"
            (253914 'move' j[253912] _indexOfInterest[253886])
            {
              (253882 call =(253865 call(253860 call . r c"capArr") j) b"")
            }
            label _continueLabel[253891]
            _indexOfInterest[253886]
            _iterator[253887]
          }
          label _breakLabel[253892]
        }
        { scopeless
          unknown cur[253931](253930 call qio_channel_offset_unlocked _channel_internal)
          (253934 'end of statement')
        }
        (253943 call qio_channel_advance 0 _channel_internal(253941 call - before_match cur))
      }
    }
    {
      (253953 call = error(253952 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function _unknown[51]._format_reader[253974](arg _mt[254013]:_MT[238], arg this[254010] :
  channel, arg fmtStr[253971] :
  unknown fmtType[253969], ref arg cur[253977] :
  size_t, arg len[253981] :
  size_t, ref arg error[253985] :
  syserr, ref arg conv[253989] :
  qio_conv_t, ref arg gotConv[253993] :
  bool[10], ref arg style[253997] :
  iostyle, ref arg r[254003] :
  (254002 'to unmanaged class from unknown'(254001 'to nilable class from type' _channel_regexp_info)), arg isReadf[254007] :
  bool[10]) : _unknown[51] "method" "no doc"
  {
    if(254031 call _cond_test(254017 call != r nil[44]))
    {
      { scopeless
        (254028 call =(254024 call .(254020 call postfix! r) c"hasRegexp") 0)
      }
    }
    if(254562 call _cond_test(254038 call ! error))
    {
      { scopeless
        unknown fmt[254051](254050 call(254046 call .(254045 call(254041 call . fmtStr c"localize")) c"c_str"))
        (254054 'end of statement')
      }
      {
        unknown tmp[254535] "temp"
        (254559 'move' tmp[254535](254554 call _cond_test(254556 call < cur len)))
        WhileDo[254540]
        {
          {
            (254062 call = gotConv 0)
            if(254070 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            { scopeless
              unknown end[254079](254078 call uint[115] 64)
              (254082 'end of statement')
            }
            (254093 call = error(254092 call qio_conv_parse fmt cur end isReadf conv style))
            if(254098 call _cond_test error)
            {
            }
            (254107 call = cur(254105 call _cast size_t end))
            if(254114 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            if(254530 call _cond_test(254126 call ==(254122 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL))
            {
              if(254299 call _cond_test isReadf)
              {
                if(254272 call _cond_test(254136 call ==(254132 call . conv c"literal_is_whitespace") 2))
                {
                  { scopeless
                    unknown offsetA[254142](254141 call qio_channel_offset_unlocked _channel_internal)
                    (254145 'end of statement')
                  }
                  (254154 call = error(254153 call qio_channel_skip_past_newline 0 _channel_internal 1))
                  { scopeless
                    unknown offsetB[254161](254160 call qio_channel_offset_unlocked _channel_internal)
                    (254164 'end of statement')
                  }
                  if(254180 call _cond_test(254172 call &&(254166 call ! error)(254170 call == offsetA offsetB)))
                  {
                    (254176 call = error EFORMAT)
                  }
                }
                {
                  { scopeless
                    if(254268 call _cond_test(254189 call ==(254185 call . conv c"literal_is_whitespace") 1))
                    {
                      { scopeless
                        unknown offsetA[254195](254194 call qio_channel_offset_unlocked _channel_internal)
                        (254198 'end of statement')
                      }
                      (254214 call = error(254213 call qio_channel_scan_literal_2 0 _channel_internal(254208 call . conv c"literal") 0 1))
                      { scopeless
                        unknown offsetB[254221](254220 call qio_channel_offset_unlocked _channel_internal)
                        (254224 'end of statement')
                      }
                      if(254240 call _cond_test(254232 call &&(254226 call ! error)(254230 call == offsetA offsetB)))
                      {
                        (254236 call = error EFORMAT)
                      }
                    }
                    {
                      (254264 call = error(254263 call qio_channel_scan_literal_2 0 _channel_internal(254250 call . conv c"literal")(254260 call _cast ssize_t(254256 call . conv c"literal_length")) 0))
                    }
                  }
                }
              }
              {
                (254295 call = error(254294 call qio_channel_print_literal_2 0 _channel_internal(254284 call . conv c"literal")(254292 call _cast ssize_t(254288 call . conv c"literal_length"))))
              }
            }
            {
              { scopeless
                if(254526 call _cond_test(254309 call ==(254305 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL))
                {
                  if(254512 call _cond_test(254312 call ! isReadf))
                  {
                    (254318 call = error(254317 call qio_format_error_write_regexp))
                  }
                  {
                    if(254336 call _cond_test(254324 call == r nil[44]))
                    {
                      { scopeless
                        (254333 call = r(254329 'new'(_chpl_manager = unmanaged[220](?))(254332 call _channel_regexp_info)))
                      }
                    }
                    { scopeless
                      const rnn[254345] "const"(254343 call postfix! r)
                      (254348 'end of statement')
                    }
                    (254354 call(254350 call . rnn c"clear"))
                    { scopeless
                      unknown errstr[254357] string[26]
                      (254360 'end of statement')
                    }
                    (254395 call qio_regexp_create_compile_flags_2(254365 call . conv c"regexp")(254372 call . conv c"regexp_length")(254378 call . conv c"regexp_flags")(254384 call . conv c"regexp_flags_length")(254389 call == fmtType string[26])(254392 call . rnn c"theRegexp"))
                    (254404 call =(254400 call . rnn c"releaseRegexp") 1)
                    if(254508 call _cond_test(254413 call qio_regexp_ok(254409 call . rnn c"theRegexp")))
                    {
                      (254419 call =(254415 call . rnn c"hasRegexp") 1)
                      (254434 call =(254424 call . rnn c"ncaptures")(254433 call qio_regexp_get_ncaptures(254429 call . rnn c"theRegexp")))
                      if(254496 call _cond_test(254475 call ||(254464 call ||(254453 call ||(254442 call >(254438 call . rnn c"ncaptures") 0)(254451 call !=(254447 call . conv c"preArg1") QIO_CONV_UNK))(254462 call !=(254458 call . conv c"preArg2") QIO_CONV_UNK))(254473 call !=(254469 call . conv c"preArg3") QIO_CONV_UNK)))
                      {
                        (254479 call = gotConv 1)
                        break nil[44]
                      }
                      {
                        (254493 call _match_regexp_if_needed cur len error style rnn)
                      }
                    }
                    {
                      (254504 call = error(254503 call qio_format_error_bad_regexp))
                    }
                  }
                }
                {
                  (254519 call = gotConv 1)
                  break nil[44]
                }
              }
            }
          }
          label _continueLabel[254538]
          (254549 'move' tmp[254535](254544 call _cond_test(254546 call < cur len)))
          tmp[254535]
        }
        label _breakLabel[254539]
      }
    }
  }
  function _unknown[51]._conv_helper[254575](arg _mt[254594]:_MT[238], arg this[254591] :
  channel, ref arg error[254572] :
  syserr, ref arg conv[254578] :
  qio_conv_t, ref arg gotConv[254582] :
  bool[10], ref arg j[254586] :
  int[13], ref arg argType[254589]:_any[178](?)) : _unknown[51] "method" "no doc"
  {
    if(254599 call _cond_test error)
    {
      { scopeless
        (254597 return)
      }
    }
    if(254731 call _cond_test gotConv)
    {
      if(254630 call _cond_test(254611 call !=(254607 call . conv c"preArg1") QIO_CONV_UNK))
      {
        (254621 call =(254616 call argType j)(254618 call . conv c"preArg1"))
        (254627 call += j 1)
      }
      if(254659 call _cond_test(254640 call !=(254636 call . conv c"preArg2") QIO_CONV_UNK))
      {
        (254650 call =(254645 call argType j)(254647 call . conv c"preArg2"))
        (254656 call += j 1)
      }
      if(254687 call _cond_test(254668 call !=(254664 call . conv c"preArg3") QIO_CONV_UNK))
      {
        (254678 call =(254673 call argType j)(254675 call . conv c"preArg3"))
        (254684 call += j 1)
      }
      if(254727 call _cond_test(254696 call !=(254692 call . conv c"argType") QIO_CONV_UNK))
      {
        if(254717 call _cond_test(254703 call ==(254701 call argType j) QIO_CONV_UNK))
        {
          (254713 call =(254708 call argType j)(254710 call . conv c"argType"))
        }
        (254724 call += j 1)
      }
    }
  }
  function _unknown[51]._conv_sethandler[254744](arg _mt[254767]:_MT[238], arg this[254764] :
  channel, ref arg error[254741] :
  syserr, arg argtypei[254747] :
  c_int, ref arg style[254751] :
  iostyle, arg i[254755] :
  int[13], arg argi[254758]:_any[178](?), arg isReadf[254761] :
  bool[10]) : _unknown[51] throws "method" "no doc"
  {
    if(254774 call _cond_test error)
    {
      { scopeless
        (254772 return 0)
      }
    }
    {
      unknown tmp[255401] "expr temp" "maybe param" "maybe type" "temp"
      (255403 'move' tmp[255401] argtypei)
      if(255408 call _cond_test(255405 call == tmp[255401] QIO_CONV_SET_MIN_WIDTH_COLS))
      {
        { scopeless
          unknown tmp[254793] "temp"(254792 call _toIntegral argi)
          (254800 call _check_tuple_var_decl tmp[254793] 2)
          unknown t[254784](254794 call tmp[254793] 0)
          unknown ok[254786](254797 call tmp[254793] 1)
          (254805 'end of statement')
        }
        if(254835 call _cond_test(254808 call ! ok))
        {
          (254815 call = error(254814 call qio_format_error_arg_mismatch i))
        }
        {
          { scopeless
            (254832 call =(254822 call . style c"min_width_columns")(254830 call _cast(254829 call uint[115] 32) t))
          }
        }
      }
      {
        if(255414 call _cond_test(255411 call == tmp[255401] QIO_CONV_SET_MAX_WIDTH_COLS))
        {
          { scopeless
            unknown tmp[254853] "temp"(254852 call _toIntegral argi)
            (254860 call _check_tuple_var_decl tmp[254853] 2)
            unknown t[254844](254854 call tmp[254853] 0)
            unknown ok[254846](254857 call tmp[254853] 1)
            (254865 'end of statement')
          }
          if(254895 call _cond_test(254868 call ! ok))
          {
            (254875 call = error(254874 call qio_format_error_arg_mismatch i))
          }
          {
            { scopeless
              (254892 call =(254882 call . style c"max_width_columns")(254890 call _cast(254889 call uint[115] 32) t))
            }
          }
        }
        {
          if(255421 call _cond_test(255418 call == tmp[255401] QIO_CONV_SET_MAX_WIDTH_CHARS))
          {
            { scopeless
              unknown tmp[254913] "temp"(254912 call _toIntegral argi)
              (254920 call _check_tuple_var_decl tmp[254913] 2)
              unknown t[254904](254914 call tmp[254913] 0)
              unknown ok[254906](254917 call tmp[254913] 1)
              (254925 'end of statement')
            }
            if(254953 call _cond_test(254928 call ! ok))
            {
              (254935 call = error(254934 call qio_format_error_arg_mismatch i))
            }
            {
              { scopeless
                (254950 call =(254940 call . style c"max_width_characters")(254948 call _cast(254947 call uint[115] 32) t))
              }
            }
          }
          {
            if(255428 call _cond_test(255425 call == tmp[255401] QIO_CONV_SET_MAX_WIDTH_BYTES))
            {
              { scopeless
                unknown tmp[254971] "temp"(254970 call _toIntegral argi)
                (254978 call _check_tuple_var_decl tmp[254971] 2)
                unknown t[254962](254972 call tmp[254971] 0)
                unknown ok[254964](254975 call tmp[254971] 1)
                (254983 'end of statement')
              }
              if(255013 call _cond_test(254986 call ! ok))
              {
                (254993 call = error(254992 call qio_format_error_arg_mismatch i))
              }
              {
                { scopeless
                  (255010 call =(255000 call . style c"max_width_bytes")(255008 call _cast(255007 call uint[115] 32) t))
                }
              }
            }
            {
              if(255435 call _cond_test(255432 call == tmp[255401] QIO_CONV_SET_PRECISION))
              {
                { scopeless
                  unknown tmp[255031] "temp"(255030 call _toIntegral argi)
                  (255038 call _check_tuple_var_decl tmp[255031] 2)
                  unknown t[255022](255032 call tmp[255031] 0)
                  unknown ok[255024](255035 call tmp[255031] 1)
                  (255043 'end of statement')
                }
                if(255073 call _cond_test(255046 call ! ok))
                {
                  (255053 call = error(255052 call qio_format_error_arg_mismatch i))
                }
                {
                  { scopeless
                    (255070 call =(255060 call . style c"precision")(255068 call _cast(255067 call int[13] 32) t))
                  }
                }
              }
              {
                if(255442 call _cond_test(255439 call == tmp[255401] QIO_CONV_SET_STRINGSTART))
                {
                  { scopeless
                    unknown tmp[255091] "temp"(255090 call _toChar argi)
                    (255098 call _check_tuple_var_decl tmp[255091] 2)
                    unknown t[255082](255092 call tmp[255091] 0)
                    unknown ok[255084](255095 call tmp[255091] 1)
                    (255103 'end of statement')
                  }
                  if(255130 call _cond_test(255106 call ! ok))
                  {
                    (255113 call = error(255112 call qio_format_error_arg_mismatch i))
                  }
                  {
                    { scopeless
                      (255127 call =(255120 call . style c"string_start")(255125 call _cast style_char_t t))
                    }
                  }
                }
                {
                  if(255449 call _cond_test(255446 call == tmp[255401] QIO_CONV_SET_STRINGEND))
                  {
                    { scopeless
                      unknown tmp[255148] "temp"(255147 call _toChar argi)
                      (255155 call _check_tuple_var_decl tmp[255148] 2)
                      unknown t[255139](255149 call tmp[255148] 0)
                      unknown ok[255141](255152 call tmp[255148] 1)
                      (255160 'end of statement')
                    }
                    if(255185 call _cond_test(255163 call ! ok))
                    {
                      (255170 call = error(255169 call qio_format_error_arg_mismatch i))
                    }
                    {
                      { scopeless
                        (255182 call =(255175 call . style c"string_end")(255180 call _cast style_char_t t))
                      }
                    }
                  }
                  {
                    if(255456 call _cond_test(255453 call == tmp[255401] QIO_CONV_SET_STRINGSTARTEND))
                    {
                      { scopeless
                        unknown tmp[255203] "temp"(255202 call _toChar argi)
                        (255210 call _check_tuple_var_decl tmp[255203] 2)
                        unknown t[255194](255204 call tmp[255203] 0)
                        unknown ok[255196](255207 call tmp[255203] 1)
                        (255215 'end of statement')
                      }
                      if(255252 call _cond_test(255218 call ! ok))
                      {
                        (255225 call = error(255224 call qio_format_error_arg_mismatch i))
                      }
                      {
                        (255237 call =(255230 call . style c"string_start")(255235 call _cast style_char_t t))
                        (255249 call =(255242 call . style c"string_end")(255247 call _cast style_char_t t))
                      }
                    }
                    {
                      if(255463 call _cond_test(255460 call == tmp[255401] QIO_CONV_SET_STRINGLEN))
                      {
                        { scopeless
                          unknown tmp[255269] "temp"(255268 call _toIntegral argi)
                          (255276 call _check_tuple_var_decl tmp[255269] 2)
                          unknown t[255260](255270 call tmp[255269] 0)
                          unknown ok[255262](255273 call tmp[255269] 1)
                          (255281 'end of statement')
                        }
                        if(255310 call _cond_test(255284 call ! ok))
                        {
                          (255291 call = error(255290 call qio_format_error_arg_mismatch i))
                        }
                        {
                          (255306 call =(255296 call . style c"str_style")(255304 call _cast(255303 call int[13] 64) t))
                        }
                      }
                      {
                        if(255470 call _cond_test(255467 call == tmp[255401] QIO_CONV_SET_TERMINATOR))
                        {
                          { scopeless
                            unknown tmp[255327] "temp"(255326 call _toChar argi)
                            (255334 call _check_tuple_var_decl tmp[255327] 2)
                            unknown t[255318](255328 call tmp[255327] 0)
                            unknown ok[255320](255331 call tmp[255327] 1)
                            (255339 'end of statement')
                          }
                          if(255371 call _cond_test(255342 call ! ok))
                          {
                            (255349 call = error(255348 call qio_format_error_arg_mismatch i))
                          }
                          {
                            (255367 call =(255354 call . style c"str_style")(255366 call stringStyleTerminated(255363 call _cast(255362 call uint[115] 8) t)))
                          }
                        }
                        {
                          if(255477 call _cond_test(255474 call == tmp[255401] QIO_CONV_SET_DONE))
                          {
                          }
                          {
                            if(255484 call _cond_test(255481 call == tmp[255401] QIO_CONV_UNK))
                            {
                              (255388 call = error(255387 call qio_format_error_too_many_args))
                            }
                            {
                              (255395 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (255490 return 0)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51]._write_signed[255505](arg _mt[255518]:_MT[238], arg this[255515] :
  channel, arg width[255502] :
  (255501 call uint[115] 32), arg t[255508] :
  int[13], arg i[255512] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255522] syserr
      (255525 'end of statement')
    }
    { scopeless
      unknown byteorder[255531](255530 call qio_channel_byteorder _channel_internal)
      (255534 'end of statement')
    }
    {
      unknown tmp[255656] "expr temp" "maybe param" "maybe type" "temp"
      (255658 'move' tmp[255656] width)
      if(255663 call _cond_test(255660 call == tmp[255656] 1))
      {
        { scopeless
          unknown x[255546](255544 call _cast(255543 call int[13] 8) t)
          (255549 'end of statement')
        }
        (255558 call = err(255557 call qio_channel_write_int8 0 _channel_internal x))
      }
      {
        if(255669 call _cond_test(255666 call == tmp[255656] 2))
        {
          { scopeless
            unknown x[255572](255570 call _cast(255569 call int[13] 16) t)
            (255575 'end of statement')
          }
          (255585 call = err(255584 call qio_channel_write_int16 0 byteorder _channel_internal x))
        }
        {
          if(255676 call _cond_test(255673 call == tmp[255656] 4))
          {
            { scopeless
              unknown x[255599](255597 call _cast(255596 call int[13] 32) t)
              (255602 'end of statement')
            }
            (255612 call = err(255611 call qio_channel_write_int32 0 byteorder _channel_internal x))
          }
          {
            if(255683 call _cond_test(255680 call == tmp[255656] 8))
            {
              { scopeless
                unknown x[255626](255624 call _cast(255623 call int[13] 64) t)
                (255629 'end of statement')
              }
              (255639 call = err(255638 call qio_channel_write_int64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (255649 call = err(255648 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255689 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._read_signed[255704](arg _mt[255717]:_MT[238], arg this[255714] :
  channel, arg width[255701] :
  (255700 call uint[115] 32), out arg t[255707] :
  int[13], arg i[255711] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255721] syserr
      (255724 'end of statement')
    }
    { scopeless
      unknown byteorder[255730](255729 call qio_channel_byteorder _channel_internal)
      (255733 'end of statement')
    }
    {
      unknown tmp[255863] "expr temp" "maybe param" "maybe type" "temp"
      (255865 'move' tmp[255863] width)
      if(255870 call _cond_test(255867 call == tmp[255863] 1))
      {
        { scopeless
          unknown x[255742](255741 call int[13] 8)
          (255745 'end of statement')
        }
        (255754 call = err(255753 call qio_channel_read_int8 0 _channel_internal x))
        (255759 call = t x)
      }
      {
        if(255876 call _cond_test(255873 call == tmp[255863] 2))
        {
          { scopeless
            unknown x[255770](255769 call int[13] 16)
            (255773 'end of statement')
          }
          (255783 call = err(255782 call qio_channel_read_int16 0 byteorder _channel_internal x))
          (255788 call = t x)
        }
        {
          if(255883 call _cond_test(255880 call == tmp[255863] 4))
          {
            { scopeless
              unknown x[255799](255798 call int[13] 32)
              (255802 'end of statement')
            }
            (255812 call = err(255811 call qio_channel_read_int32 0 byteorder _channel_internal x))
            (255817 call = t x)
          }
          {
            if(255890 call _cond_test(255887 call == tmp[255863] 8))
            {
              { scopeless
                unknown x[255828](255827 call int[13] 64)
                (255831 'end of statement')
              }
              (255841 call = err(255840 call qio_channel_read_int64 0 byteorder _channel_internal x))
              (255846 call = t x)
            }
            {
              { scopeless
                (255856 call = err(255855 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255896 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._write_unsigned[255911](arg _mt[255924]:_MT[238], arg this[255921] :
  channel, arg width[255908] :
  (255907 call uint[115] 32), arg t[255914] :
  uint[115], arg i[255918] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255927] syserr
      (255930 'end of statement')
    }
    { scopeless
      unknown byteorder[255936](255935 call qio_channel_byteorder _channel_internal)
      (255939 'end of statement')
    }
    {
      unknown tmp[256061] "expr temp" "maybe param" "maybe type" "temp"
      (256063 'move' tmp[256061] width)
      if(256068 call _cond_test(256065 call == tmp[256061] 1))
      {
        { scopeless
          unknown x[255951](255949 call _cast(255948 call uint[115] 8) t)
          (255954 'end of statement')
        }
        (255963 call = err(255962 call qio_channel_write_uint8 0 _channel_internal x))
      }
      {
        if(256074 call _cond_test(256071 call == tmp[256061] 2))
        {
          { scopeless
            unknown x[255977](255975 call _cast(255974 call uint[115] 16) t)
            (255980 'end of statement')
          }
          (255990 call = err(255989 call qio_channel_write_uint16 0 byteorder _channel_internal x))
        }
        {
          if(256081 call _cond_test(256078 call == tmp[256061] 4))
          {
            { scopeless
              unknown x[256004](256002 call _cast(256001 call uint[115] 32) t)
              (256007 'end of statement')
            }
            (256017 call = err(256016 call qio_channel_write_uint32 0 byteorder _channel_internal x))
          }
          {
            if(256088 call _cond_test(256085 call == tmp[256061] 8))
            {
              { scopeless
                unknown x[256031](256029 call _cast(256028 call uint[115] 64) t)
                (256034 'end of statement')
              }
              (256044 call = err(256043 call qio_channel_write_uint64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (256054 call = err(256053 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256094 return err)
  }
  function _unknown[51]._read_unsigned[256108](arg _mt[256121]:_MT[238], arg this[256118] :
  channel, arg width[256105] :
  (256104 call uint[115] 32), out arg t[256111] :
  uint[115], arg i[256115] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256124] syserr
      (256127 'end of statement')
    }
    { scopeless
      unknown byteorder[256133](256132 call qio_channel_byteorder _channel_internal)
      (256136 'end of statement')
    }
    {
      unknown tmp[256266] "expr temp" "maybe param" "maybe type" "temp"
      (256268 'move' tmp[256266] width)
      if(256273 call _cond_test(256270 call == tmp[256266] 1))
      {
        { scopeless
          unknown x[256145](256144 call uint[115] 8)
          (256148 'end of statement')
        }
        (256157 call = err(256156 call qio_channel_read_uint8 0 _channel_internal x))
        (256162 call = t x)
      }
      {
        if(256279 call _cond_test(256276 call == tmp[256266] 2))
        {
          { scopeless
            unknown x[256173](256172 call uint[115] 16)
            (256176 'end of statement')
          }
          (256186 call = err(256185 call qio_channel_read_uint16 0 byteorder _channel_internal x))
          (256191 call = t x)
        }
        {
          if(256286 call _cond_test(256283 call == tmp[256266] 4))
          {
            { scopeless
              unknown x[256202](256201 call uint[115] 32)
              (256205 'end of statement')
            }
            (256215 call = err(256214 call qio_channel_read_uint32 0 byteorder _channel_internal x))
            (256220 call = t x)
          }
          {
            if(256293 call _cond_test(256290 call == tmp[256266] 8))
            {
              { scopeless
                unknown x[256231](256230 call uint[115] 64)
                (256234 'end of statement')
              }
              (256244 call = err(256243 call qio_channel_read_uint64 0 byteorder _channel_internal x))
              (256249 call = t x)
            }
            {
              { scopeless
                (256259 call = err(256258 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256299 return err)
  }
  function _unknown[51]._write_real[256313](arg _mt[256326]:_MT[238], arg this[256323] :
  channel, arg width[256310] :
  (256309 call uint[115] 32), arg t[256316] :
  real[16], arg i[256320] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256329] syserr
      (256332 'end of statement')
    }
    { scopeless
      unknown byteorder[256338](256337 call qio_channel_byteorder _channel_internal)
      (256341 'end of statement')
    }
    {
      unknown tmp[256410] "expr temp" "maybe param" "maybe type" "temp"
      (256412 'move' tmp[256410] width)
      if(256417 call _cond_test(256414 call == tmp[256410] 4))
      {
        { scopeless
          unknown x[256353](256351 call _cast(256350 call real[16] 32) t)
          (256356 'end of statement')
        }
        (256366 call = err(256365 call qio_channel_write_float32 0 byteorder _channel_internal x))
      }
      {
        if(256423 call _cond_test(256420 call == tmp[256410] 8))
        {
          { scopeless
            unknown x[256380](256378 call _cast(256377 call real[16] 64) t)
            (256383 'end of statement')
          }
          (256393 call = err(256392 call qio_channel_write_float64 0 byteorder _channel_internal x))
        }
        {
          { scopeless
            (256403 call = err(256402 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256429 return err)
  }
  function _unknown[51]._read_real[256443](arg _mt[256456]:_MT[238], arg this[256453] :
  channel, arg width[256440] :
  (256439 call uint[115] 32), out arg t[256446] :
  real[16], arg i[256450] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256459] syserr
      (256462 'end of statement')
    }
    { scopeless
      unknown byteorder[256468](256467 call qio_channel_byteorder _channel_internal)
      (256471 'end of statement')
    }
    {
      unknown tmp[256544] "expr temp" "maybe param" "maybe type" "temp"
      (256546 'move' tmp[256544] width)
      if(256551 call _cond_test(256548 call == tmp[256544] 4))
      {
        { scopeless
          unknown x[256480](256479 call real[16] 32)
          (256483 'end of statement')
        }
        (256493 call = err(256492 call qio_channel_read_float32 0 byteorder _channel_internal x))
        (256498 call = t x)
      }
      {
        if(256557 call _cond_test(256554 call == tmp[256544] 8))
        {
          { scopeless
            unknown x[256509](256508 call real[16] 64)
            (256512 'end of statement')
          }
          (256522 call = err(256521 call qio_channel_read_float64 0 byteorder _channel_internal x))
          (256527 call = t x)
        }
        {
          { scopeless
            (256537 call = err(256536 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256563 return err)
  }
  function _unknown[51]._write_complex[256577](arg _mt[256590]:_MT[238], arg this[256587] :
  channel, arg width[256574] :
  (256573 call uint[115] 32), arg t[256580] :
  complex[140], arg i[256584] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256594] ENOERR syserr
      (256597 'end of statement')
    }
    { scopeless
      unknown byteorder[256603](256602 call qio_channel_byteorder _channel_internal)
      (256606 'end of statement')
    }
    {
      unknown tmp[256745] "expr temp" "maybe param" "maybe type" "temp"
      (256747 'move' tmp[256745] width)
      if(256752 call _cond_test(256749 call == tmp[256745] 8))
      {
        { scopeless
          unknown x[256618](256616 call _cast(256615 call complex[140] 64) t)
          (256621 'end of statement')
        }
        { scopeless
          unknown re[256627](256624 call . x c"re")
          (256630 'end of statement')
        }
        { scopeless
          unknown im[256635](256632 call . x c"im")
          (256638 'end of statement')
        }
        (256647 call = err(256646 call qio_channel_write_float32 0 byteorder _channel_internal re))
        if(256665 call _cond_test(256651 call ! err))
        {
          (256661 call = err(256660 call qio_channel_write_float32 0 byteorder _channel_internal im))
        }
      }
      {
        if(256758 call _cond_test(256755 call == tmp[256745] 16))
        {
          { scopeless
            unknown x[256680](256678 call _cast(256677 call complex[140] 128) t)
            (256683 'end of statement')
          }
          { scopeless
            unknown re[256689](256686 call . x c"re")
            (256692 'end of statement')
          }
          { scopeless
            unknown im[256697](256694 call . x c"im")
            (256700 'end of statement')
          }
          (256709 call = err(256708 call qio_channel_write_float64 0 byteorder _channel_internal re))
          if(256727 call _cond_test(256713 call ! err))
          {
            (256723 call = err(256722 call qio_channel_write_float64 0 byteorder _channel_internal im))
          }
        }
        {
          { scopeless
            (256738 call = err(256737 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256764 return err)
  }
  function _unknown[51]._read_complex[256778](arg _mt[256791]:_MT[238], arg this[256788] :
  channel, arg width[256775] :
  (256774 call uint[115] 32), out arg t[256781] :
  complex[140], arg i[256785] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256795] ENOERR syserr
      (256798 'end of statement')
    }
    { scopeless
      unknown byteorder[256804](256803 call qio_channel_byteorder _channel_internal)
      (256807 'end of statement')
    }
    {
      unknown tmp[256984] "expr temp" "maybe param" "maybe type" "temp"
      (256986 'move' tmp[256984] width)
      if(256991 call _cond_test(256988 call == tmp[256984] 8))
      {
        { scopeless
          unknown x[256816](256815 call complex[140] 64)
          (256819 'end of statement')
        }
        { scopeless
          unknown re[256826](256825 'typeof'(256822 call . x c"re"))
          (256829 'end of statement')
        }
        { scopeless
          unknown im[256835](256834 'typeof'(256831 call . x c"im"))
          (256838 'end of statement')
        }
        (256847 call = err(256846 call qio_channel_read_float32 0 byteorder _channel_internal re))
        if(256865 call _cond_test(256851 call ! err))
        {
          (256861 call = err(256860 call qio_channel_read_float32 0 byteorder _channel_internal im))
        }
        (256881 call = x(256879 call _cast(256878 call complex[140] 64)(256873 call _build_tuple re im)))
        (256886 call = t x)
      }
      {
        if(256997 call _cond_test(256994 call == tmp[256984] 16))
        {
          { scopeless
            unknown x[256897](256896 call complex[140] 128)
            (256900 'end of statement')
          }
          { scopeless
            unknown re[256907](256906 'typeof'(256903 call . x c"re"))
            (256910 'end of statement')
          }
          { scopeless
            unknown im[256916](256915 'typeof'(256912 call . x c"im"))
            (256919 'end of statement')
          }
          (256928 call = err(256927 call qio_channel_read_float64 0 byteorder _channel_internal re))
          if(256946 call _cond_test(256932 call ! err))
          {
            (256942 call = err(256941 call qio_channel_read_float64 0 byteorder _channel_internal im))
          }
          (256962 call = x(256960 call _cast(256959 call complex[140] 128)(256954 call _build_tuple re im)))
          (256967 call = t x)
        }
        {
          { scopeless
            (256977 call = err(256976 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (257003 return err)
  }
  function _unknown[51].writef[257015](arg _mt[257025]:_MT[238], arg this[257022] :
  channel, arg fmtStr[257012] :
  unknown t[257010], const arg args[257019]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(257062 call _cond_test(257039 call ! writing))
    {
      { scopeless
        (257060 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      const origLocale[257074] "const"(257073 call(257069 call . this c"getLocaleOfIoRequest"))
      (257077 'end of statement')
    }
    { scopeless
      unknown err[257080] ENOERR syserr
      (257083 'end of statement')
    }
    { scopeless
      const tmp[258313] "const" "temp"
      (258315 'move' tmp[258313](258311 'deref'(258310 '_wide_get_locale'(257085 call . this c"home"))))
      {
        {
          Try
          {
            {
              (257093 call(257089 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (257103 call(257099 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[257114](257113 call(257109 call . this c"_style"))
            (257117 'end of statement')
          }
          { scopeless
            unknown cur[257120] 0 size_t
            (257123 'end of statement')
          }
          { scopeless
            unknown len[257132](257130 call _cast size_t(257126 call . fmtStr c"size")) size_t
            (257135 'end of statement')
          }
          { scopeless
            unknown conv[257137] qio_conv_t
            (257140 'end of statement')
          }
          { scopeless
            unknown gotConv[257142] bool[10]
            (257145 'end of statement')
          }
          { scopeless
            unknown style[257147] iostyle
            (257150 'end of statement')
          }
          { scopeless
            unknown end[257152] size_t
            (257155 'end of statement')
          }
          { scopeless
            unknown argType[257163](257161 call *(257158 call + k 5) c_int)
            (257166 'end of statement')
          }
          { scopeless
            unknown r[257170](257169 'to unmanaged class from unknown'(257168 'to nilable class from type' _channel_regexp_info))
            (257173 'end of statement')
          }
          Defer
          {
            {
              if(257180 call _cond_test r)
              {
                { scopeless
                  (257177 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[257208] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[257209] "expr temp" "temp"
            (257218 'move' _iterator[257209](257216 call _getIterator(257229 call chpl_direct_range_iter 0(257223 call -(257225 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (257245 call _freeIterator _iterator[257209])
              }
            }
            { scopeless type
              (257234 'move' _indexOfInterest[257208](257231 call iteratorIndex _iterator[257209]))
            }
            ForLoop[257210]
            {
              unknown i[257238] "index var" "insert auto destroy"
              (257240 'move' i[257238] _indexOfInterest[257208])
              {
                (257204 call =(257202 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[257213]
              _indexOfInterest[257208]
              _iterator[257209]
            }
            label _breakLabel[257214]
          }
          { scopeless
            unknown j[257253] 0
            (257256 'end of statement')
          }
          {
            unknown i[258214] 0
            unknown tmp[258215] "maybe param" "temp"
            (258227 'move' tmp[258215](258225 call chpl_compute_low_param_loop_bound 0(257260 call - k 1)))
            unknown tmp[258216] "maybe param" "temp"
            (258237 'move' tmp[258216](258235 call chpl_compute_high_param_loop_bound 0(258232 call - k 1)))
            unknown tmp[258217] "maybe param" "temp"
            (258240 'move' tmp[258217] 1)
            ParamForLoop[258242]
            { i[258214] tmp[258215] tmp[258216] tmp[258217]
              {
                (257266 call = gotConv 0)
                if(257288 call _cond_test(257272 call <= j i))
                {
                  (257285 call _format_reader fmtStr cur len err conv gotConv style r 0)
                }
                (257299 call _conv_helper err conv gotConv j argType)
                { scopeless
                  unknown domore[257316](257315 call _conv_sethandler err(257307 call argType i) style i(257313 call args i) 0)
                  (257319 'end of statement')
                }
                if(258210 call _cond_test domore)
                {
                  (257327 call(257322 call . this c"_set_style") style)
                  {
                    unknown tmp[258104] "expr temp" "maybe param" "maybe type" "temp"
                    (258106 'move' tmp[258104](257333 call argType i))
                    if(258116 call _cond_test(258114 call ||(258108 call == tmp[258104] QIO_CONV_ARG_TYPE_SIGNED)(258111 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                    {
                      { scopeless
                        unknown tmp[257350] "temp"(257349 call _toSigned(257347 call args i))
                        (257357 call _check_tuple_var_decl tmp[257350] 2)
                        unknown t[257338](257351 call tmp[257350] 0)
                        unknown ok[257340](257354 call tmp[257350] 1)
                        (257362 'end of statement')
                      }
                      if(257415 call _cond_test(257365 call ! ok))
                      {
                        (257372 call = err(257371 call qio_format_error_arg_mismatch i))
                      }
                      {
                        if(257408 call _cond_test(257381 call ==(257379 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                        {
                          { scopeless
                            (257393 call = err(257392 call _write_signed(257386 call . style c"max_width_bytes") t i))
                          }
                        }
                        {
                          { scopeless
                            Try
                            {
                              {
                                (257404 call _writeOne(257398 call . iokind c"dynamic") t origLocale)
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      if(258127 call _cond_test(258125 call ||(258119 call == tmp[258104] QIO_CONV_ARG_TYPE_UNSIGNED)(258122 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                      {
                        { scopeless
                          unknown tmp[257436] "temp"(257435 call _toUnsigned(257433 call args i))
                          (257443 call _check_tuple_var_decl tmp[257436] 2)
                          unknown t[257424](257437 call tmp[257436] 0)
                          unknown ok[257426](257440 call tmp[257436] 1)
                          (257448 'end of statement')
                        }
                        if(257501 call _cond_test(257451 call ! ok))
                        {
                          (257458 call = err(257457 call qio_format_error_arg_mismatch i))
                        }
                        {
                          if(257494 call _cond_test(257467 call ==(257465 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                          {
                            { scopeless
                              (257479 call = err(257478 call _write_unsigned(257472 call . style c"max_width_bytes") t i))
                            }
                          }
                          {
                            { scopeless
                              Try
                              {
                                {
                                  (257490 call _writeOne(257484 call . iokind c"dynamic") t origLocale)
                                }
                              }
                            }
                          }
                        }
                      }
                      {
                        if(258139 call _cond_test(258137 call ||(258131 call == tmp[258104] QIO_CONV_ARG_TYPE_REAL)(258134 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                        {
                          { scopeless
                            unknown tmp[257522] "temp"(257521 call _toReal(257519 call args i))
                            (257529 call _check_tuple_var_decl tmp[257522] 2)
                            unknown t[257510](257523 call tmp[257522] 0)
                            unknown ok[257512](257526 call tmp[257522] 1)
                            (257534 'end of statement')
                          }
                          if(257587 call _cond_test(257537 call ! ok))
                          {
                            (257544 call = err(257543 call qio_format_error_arg_mismatch i))
                          }
                          {
                            if(257580 call _cond_test(257553 call ==(257551 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                            {
                              { scopeless
                                (257565 call = err(257564 call _write_real(257558 call . style c"max_width_bytes") t i))
                              }
                            }
                            {
                              { scopeless
                                Try
                                {
                                  {
                                    (257576 call _writeOne(257570 call . iokind c"dynamic") t origLocale)
                                  }
                                }
                              }
                            }
                          }
                        }
                        {
                          if(258151 call _cond_test(258149 call ||(258143 call == tmp[258104] QIO_CONV_ARG_TYPE_IMAG)(258146 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                          {
                            { scopeless
                              unknown tmp[257608] "temp"(257607 call _toImag(257605 call args i))
                              (257615 call _check_tuple_var_decl tmp[257608] 2)
                              unknown t[257596](257609 call tmp[257608] 0)
                              unknown ok[257598](257612 call tmp[257608] 1)
                              (257620 'end of statement')
                            }
                            if(257676 call _cond_test(257623 call ! ok))
                            {
                              (257630 call = err(257629 call qio_format_error_arg_mismatch i))
                            }
                            {
                              if(257669 call _cond_test(257639 call ==(257637 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                              {
                                { scopeless
                                  (257654 call = err(257653 call _write_real(257644 call . style c"max_width_bytes")(257650 call _cast real[16] t) i))
                                }
                              }
                              {
                                { scopeless
                                  Try
                                  {
                                    {
                                      (257665 call _writeOne(257659 call . iokind c"dynamic") t origLocale)
                                    }
                                  }
                                }
                              }
                            }
                          }
                          {
                            if(258163 call _cond_test(258161 call ||(258155 call == tmp[258104] QIO_CONV_ARG_TYPE_COMPLEX)(258158 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                            {
                              { scopeless
                                unknown tmp[257697] "temp"(257696 call _toComplex(257694 call args i))
                                (257704 call _check_tuple_var_decl tmp[257697] 2)
                                unknown t[257685](257698 call tmp[257697] 0)
                                unknown ok[257687](257701 call tmp[257697] 1)
                                (257709 'end of statement')
                              }
                              if(257762 call _cond_test(257712 call ! ok))
                              {
                                (257719 call = err(257718 call qio_format_error_arg_mismatch i))
                              }
                              {
                                if(257755 call _cond_test(257728 call ==(257726 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                {
                                  { scopeless
                                    (257740 call = err(257739 call _write_complex(257733 call . style c"max_width_bytes") t i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257751 call _writeOne(257745 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              if(258170 call _cond_test(258167 call == tmp[258104] QIO_CONV_ARG_TYPE_NUMERIC))
                              {
                                { scopeless
                                  unknown tmp[257782] "temp"(257781 call _toNumeric(257779 call args i))
                                  (257789 call _check_tuple_var_decl tmp[257782] 2)
                                  unknown t[257770](257783 call tmp[257782] 0)
                                  unknown ok[257772](257786 call tmp[257782] 1)
                                  (257794 'end of statement')
                                }
                                if(257820 call _cond_test(257797 call ! ok))
                                {
                                  (257804 call = err(257803 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257816 call _writeOne(257810 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                              {
                                if(258177 call _cond_test(258174 call == tmp[258104] QIO_CONV_ARG_TYPE_CHAR))
                                {
                                  { scopeless
                                    unknown tmp[257841] "temp"(257840 call _toChar(257838 call args i))
                                    (257848 call _check_tuple_var_decl tmp[257841] 2)
                                    unknown t[257829](257842 call tmp[257841] 0)
                                    unknown ok[257831](257845 call tmp[257841] 1)
                                    (257853 'end of statement')
                                  }
                                  if(257883 call _cond_test(257856 call ! ok))
                                  {
                                    (257863 call = err(257862 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (257879 call _writeOne(257869 call . iokind c"dynamic")(257873 'new'(257877 call ioChar t)) origLocale)
                                        }
                                      }
                                    }
                                  }
                                }
                                {
                                  if(258184 call _cond_test(258181 call == tmp[258104] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                  {
                                    { scopeless
                                      unknown tmp[257904] "temp"(257903 call _toBytes(257901 call args i))
                                      (257911 call _check_tuple_var_decl tmp[257904] 2)
                                      unknown t[257892](257905 call tmp[257904] 0)
                                      unknown ok[257894](257908 call tmp[257904] 1)
                                      (257916 'end of statement')
                                    }
                                    if(257942 call _cond_test(257919 call ! ok))
                                    {
                                      (257926 call = err(257925 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (257938 call _writeOne(257932 call . iokind c"dynamic") t origLocale)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(258191 call _cond_test(258188 call == tmp[258104] QIO_CONV_ARG_TYPE_STRING))
                                    {
                                      { scopeless
                                        unknown tmp[257963] "temp"(257962 call _toString(257960 call args i))
                                        (257970 call _check_tuple_var_decl tmp[257963] 2)
                                        unknown t[257951](257964 call tmp[257963] 0)
                                        unknown ok[257953](257967 call tmp[257963] 1)
                                        (257975 'end of statement')
                                      }
                                      if(258001 call _cond_test(257978 call ! ok))
                                      {
                                        (257985 call = err(257984 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (257997 call _writeOne(257991 call . iokind c"dynamic") t origLocale)
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(258198 call _cond_test(258195 call == tmp[258104] QIO_CONV_ARG_TYPE_REGEXP))
                                      {
                                        (258014 call = err(258013 call qio_format_error_write_regexp))
                                      }
                                      {
                                        if(258205 call _cond_test(258202 call == tmp[258104] QIO_CONV_ARG_TYPE_REPR))
                                        {
                                          Try
                                          {
                                            {
                                              (258033 call _writeOne(258024 call . iokind c"dynamic")(258031 call args i) origLocale)
                                            }
                                          }
                                        }
                                        {
                                          (258098 'throw'(258042 'new'(_chpl_manager = _owned[30](?))(258097 call IllegalArgumentError(258068 call +(258065 call + "args("(258063 call _cast string[26] i)) ")")(258095 call + "writef internal error "(258093 call _cast string[26](258091 call argType i))))))
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            label _unused_continueLabel[258219]
            label _breakLabel[258218]
          }
          if(258298 call _cond_test(258252 call ! err))
          {
            if(258277 call _cond_test(258256 call < cur len))
            {
              { scopeless
                unknown dummy[258259] c_int
                (258262 'end of statement')
              }
              (258275 call _format_reader fmtStr cur len err conv gotConv style r 0)
            }
            if(258294 call _cond_test(258284 call < cur len))
            {
              (258290 call = err(258289 call qio_format_error_too_few_args))
            }
          }
          (258308 call(258303 call . this c"_set_style") save_style)
        }
        (258318 'on block' 0 tmp[258313])
      }
    }
    if(258349 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258345 call(258323 call . this c"_ch_ioerror") err "in channel.writef(fmt:string)")
          }
        }
      }
    }
    (258355 return 1)
  }
  where {
    (257036 call ||(257031 call isStringType t)(257035 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].writef[258369](arg _mt[258374]:_MT[238], arg this[258371] :
  channel, arg fmtStr[258366] :
  unknown t[258364]) : _unknown[51] throws "method"
  {
    if(258395 call _cond_test(258388 call ! writing))
    {
      { scopeless
        (258393 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      unknown err[258403] ENOERR syserr
      (258406 'end of statement')
    }
    { scopeless
      const tmp[258574] "const" "temp"
      (258576 'move' tmp[258574](258572 'deref'(258571 '_wide_get_locale'(258408 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258416 call(258412 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258426 call(258422 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258437](258436 call(258432 call . this c"_style"))
            (258440 'end of statement')
          }
          { scopeless
            unknown cur[258443] 0 size_t
            (258446 'end of statement')
          }
          { scopeless
            unknown len[258455](258453 call _cast size_t(258449 call . fmtStr c"size")) size_t
            (258458 'end of statement')
          }
          { scopeless
            unknown conv[258460] qio_conv_t
            (258463 'end of statement')
          }
          { scopeless
            unknown gotConv[258465] bool[10]
            (258468 'end of statement')
          }
          { scopeless
            unknown style[258470] iostyle
            (258473 'end of statement')
          }
          { scopeless
            unknown end[258475] size_t
            (258478 'end of statement')
          }
          { scopeless
            unknown dummy[258480] c_int
            (258483 'end of statement')
          }
          { scopeless
            unknown r[258487](258486 'to unmanaged class from unknown'(258485 'to nilable class from type' _channel_regexp_info))
            (258490 'end of statement')
          }
          Defer
          {
            {
              if(258497 call _cond_test r)
              {
                { scopeless
                  (258494 call chpl__delete r)
                }
              }
            }
          }
          (258516 call _format_reader fmtStr cur len err conv gotConv style r 0)
          if(258535 call _cond_test(258519 call ! err))
          {
            if(258530 call _cond_test gotConv)
            {
              (258526 call = err(258525 call qio_format_error_too_few_args))
            }
          }
          if(258559 call _cond_test(258540 call ! err))
          {
            if(258554 call _cond_test(258544 call < cur len))
            {
              (258550 call = err(258549 call qio_format_error_too_few_args))
            }
          }
          (258569 call(258564 call . this c"_set_style") save_style)
        }
        (258579 'on block' 0 tmp[258574])
      }
    }
    if(258610 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258606 call(258584 call . this c"_ch_ioerror") err "in channel.writef(fmt:string, ...)")
          }
        }
      }
    }
    (258616 return 1)
  }
  where {
    (258385 call ||(258380 call isStringType t)(258384 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[258630](arg _mt[258640]:_MT[238], arg this[258637] :
  channel, arg fmtStr[258627] :
  unknown t[258625], ref arg args[258634]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(258675 call _cond_test writing)
    {
      { scopeless
        (258673 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      const origLocale[258687] "const"(258686 call(258682 call . this c"getLocaleOfIoRequest"))
      (258690 'end of statement')
    }
    { scopeless
      unknown err[258693] ENOERR syserr
      (258696 'end of statement')
    }
    { scopeless
      const tmp[260778] "const" "temp"
      (260780 'move' tmp[260778](260776 'deref'(260775 '_wide_get_locale'(258698 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258706 call(258702 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258716 call(258712 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258727](258726 call(258722 call . this c"_style"))
            (258730 'end of statement')
          }
          Defer
          {
            {
              (258737 call(258732 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[258744] 0 size_t
            (258747 'end of statement')
          }
          { scopeless
            unknown len[258756](258754 call _cast size_t(258750 call . fmtStr c"size")) size_t
            (258759 'end of statement')
          }
          { scopeless
            unknown conv[258761] qio_conv_t
            (258764 'end of statement')
          }
          { scopeless
            unknown gotConv[258766] bool[10]
            (258769 'end of statement')
          }
          { scopeless
            unknown style[258771] iostyle
            (258774 'end of statement')
          }
          { scopeless
            unknown end[258776] size_t
            (258779 'end of statement')
          }
          { scopeless
            unknown argType[258787](258785 call *(258782 call + k 5) c_int)
            (258790 'end of statement')
          }
          { scopeless
            unknown r[258794](258793 'to unmanaged class from unknown'(258792 'to nilable class from type' _channel_regexp_info))
            (258797 'end of statement')
          }
          Defer
          {
            {
              if(258804 call _cond_test r)
              {
                { scopeless
                  (258801 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[258832] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[258833] "expr temp" "temp"
            (258842 'move' _iterator[258833](258840 call _getIterator(258853 call chpl_direct_range_iter 0(258847 call -(258849 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (258869 call _freeIterator _iterator[258833])
              }
            }
            { scopeless type
              (258858 'move' _indexOfInterest[258832](258855 call iteratorIndex _iterator[258833]))
            }
            ForLoop[258834]
            {
              unknown i[258862] "index var" "insert auto destroy"
              (258864 'move' i[258862] _indexOfInterest[258832])
              {
                (258828 call =(258826 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[258837]
              _indexOfInterest[258832]
              _iterator[258833]
            }
            label _breakLabel[258838]
          }
          (258882 call = err(258881 call qio_channel_mark 0 _channel_internal))
          if(260770 call _cond_test(258886 call ! err))
          {
            { scopeless
              Try
              {
                {
                  { scopeless
                    unknown j[258889] 0
                    (258892 'end of statement')
                  }
                  {
                    unknown i[260627] 0
                    unknown tmp[260628] "maybe param" "temp"
                    (260640 'move' tmp[260628](260638 call chpl_compute_low_param_loop_bound 0(258897 call - k 1)))
                    unknown tmp[260629] "maybe param" "temp"
                    (260650 'move' tmp[260629](260648 call chpl_compute_high_param_loop_bound 0(260645 call - k 1)))
                    unknown tmp[260630] "maybe param" "temp"
                    (260653 'move' tmp[260630] 1)
                    ParamForLoop[260655]
                    { i[260627] tmp[260628] tmp[260629] tmp[260630]
                      {
                        if(259049 call _cond_test(258903 call <= j i))
                        {
                          (258916 call _format_reader fmtStr cur len err conv gotConv style r 1)
                          if(259045 call _cond_test(258921 call != r nil[44]))
                          {
                            { scopeless
                              const rnn[258926] "const"(258924 call postfix! r)
                              (258929 'end of statement')
                            }
                            if(259041 call _cond_test(258932 call . rnn c"hasRegexp"))
                            {
                              if(258956 call _cond_test(258946 call >(258943 call -(258940 call + i(258937 call . rnn c"ncaptures")) 1) k))
                              {
                                (258952 call = err(258951 call qio_format_error_too_few_args))
                              }
                              {
                                unknown _indexOfInterest[258998] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                unknown _iterator[258999] "expr temp" "temp"
                                (259008 'move' _iterator[258999](259006 call _getIterator(259018 call chpl_direct_counted_range_iter 0(259014 call . rnn c"ncaptures"))))
                                Defer
                                {
                                  {
                                    (259034 call _freeIterator _iterator[258999])
                                  }
                                }
                                { scopeless type
                                  (259023 'move' _indexOfInterest[258998](259020 call iteratorIndex _iterator[258999]))
                                }
                                ForLoop[259000]
                                {
                                  unknown z[259027] "index var" "insert auto destroy"
                                  (259029 'move' z[259027] _indexOfInterest[258998])
                                  {
                                    if(258993 call _cond_test(258979 call <=(258973 call + i z)(258976 call . argType c"size")))
                                    {
                                      (258989 call =(258987 call argType(258984 call + i z)) QIO_CONV_SET_CAPTURE)
                                    }
                                  }
                                  label _continueLabel[259003]
                                  _indexOfInterest[258998]
                                  _iterator[258999]
                                }
                                label _breakLabel[259004]
                              }
                            }
                          }
                        }
                        (259061 call _conv_helper err conv gotConv j argType)
                        { scopeless
                          unknown domore[259078](259077 call _conv_sethandler err(259069 call argType i) style i(259075 call args i) 0)
                          (259081 'end of statement')
                        }
                        if(260623 call _cond_test domore)
                        {
                          (259089 call(259084 call . this c"_set_style") style)
                          {
                            unknown tmp[260510] "expr temp" "maybe param" "maybe type" "temp"
                            (260512 'move' tmp[260510](259095 call argType i))
                            if(260522 call _cond_test(260520 call ||(260514 call == tmp[260510] QIO_CONV_ARG_TYPE_SIGNED)(260517 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                            {
                              { scopeless
                                unknown tmp[259112] "temp"(259111 call _toSigned(259109 call args i))
                                (259119 call _check_tuple_var_decl tmp[259112] 2)
                                unknown t[259100](259113 call tmp[259112] 0)
                                unknown ok[259102](259116 call tmp[259112] 1)
                                (259124 'end of statement')
                              }
                              if(259203 call _cond_test(259127 call ! ok))
                              {
                                (259134 call = err(259133 call qio_format_error_arg_mismatch i))
                              }
                              {
                                { scopeless
                                  unknown ti[259139] int[13]
                                  (259142 'end of statement')
                                }
                                if(259176 call _cond_test(259149 call ==(259147 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                                {
                                  { scopeless
                                    (259161 call = err(259160 call _read_signed(259154 call . style c"max_width_bytes") ti i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (259172 call _readOne(259166 call . iokind c"dynamic") ti origLocale)
                                      }
                                    }
                                  }
                                }
                                if(259198 call _cond_test(259183 call ! err))
                                {
                                  { scopeless
                                    (259195 call = err(259194 call _setIfPrimitive(259190 call args i) ti i))
                                  }
                                }
                              }
                            }
                            {
                              if(260533 call _cond_test(260531 call ||(260525 call == tmp[260510] QIO_CONV_ARG_TYPE_UNSIGNED)(260528 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                              {
                                { scopeless
                                  unknown tmp[259224] "temp"(259223 call _toUnsigned(259221 call args i))
                                  (259231 call _check_tuple_var_decl tmp[259224] 2)
                                  unknown t[259212](259225 call tmp[259224] 0)
                                  unknown ok[259214](259228 call tmp[259224] 1)
                                  (259236 'end of statement')
                                }
                                if(259315 call _cond_test(259239 call ! ok))
                                {
                                  (259246 call = err(259245 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    unknown ti[259251] uint[115]
                                    (259254 'end of statement')
                                  }
                                  if(259288 call _cond_test(259261 call ==(259259 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                                  {
                                    { scopeless
                                      (259273 call = err(259272 call _read_unsigned(259266 call . style c"max_width_bytes") ti i))
                                    }
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (259284 call _readOne(259278 call . iokind c"dynamic") ti origLocale)
                                        }
                                      }
                                    }
                                  }
                                  if(259310 call _cond_test(259295 call ! err))
                                  {
                                    { scopeless
                                      (259307 call = err(259306 call _setIfPrimitive(259302 call args i) ti i))
                                    }
                                  }
                                }
                              }
                              {
                                if(260545 call _cond_test(260543 call ||(260537 call == tmp[260510] QIO_CONV_ARG_TYPE_REAL)(260540 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                                {
                                  { scopeless
                                    unknown tmp[259336] "temp"(259335 call _toReal(259333 call args i))
                                    (259343 call _check_tuple_var_decl tmp[259336] 2)
                                    unknown t[259324](259337 call tmp[259336] 0)
                                    unknown ok[259326](259340 call tmp[259336] 1)
                                    (259348 'end of statement')
                                  }
                                  if(259427 call _cond_test(259351 call ! ok))
                                  {
                                    (259358 call = err(259357 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      unknown ti[259363] real[16]
                                      (259366 'end of statement')
                                    }
                                    if(259400 call _cond_test(259373 call ==(259371 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                                    {
                                      { scopeless
                                        (259385 call = err(259384 call _read_real(259378 call . style c"max_width_bytes") ti i))
                                      }
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (259396 call _readOne(259390 call . iokind c"dynamic") ti origLocale)
                                          }
                                        }
                                      }
                                    }
                                    if(259422 call _cond_test(259407 call ! err))
                                    {
                                      { scopeless
                                        (259419 call = err(259418 call _setIfPrimitive(259414 call args i) ti i))
                                      }
                                    }
                                  }
                                }
                                {
                                  if(260557 call _cond_test(260555 call ||(260549 call == tmp[260510] QIO_CONV_ARG_TYPE_IMAG)(260552 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                                  {
                                    { scopeless
                                      unknown tmp[259448] "temp"(259447 call _toImag(259445 call args i))
                                      (259455 call _check_tuple_var_decl tmp[259448] 2)
                                      unknown t[259436](259449 call tmp[259448] 0)
                                      unknown ok[259438](259452 call tmp[259448] 1)
                                      (259460 'end of statement')
                                    }
                                    if(259552 call _cond_test(259463 call ! ok))
                                    {
                                      (259470 call = err(259469 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        unknown ti[259475] imag[130]
                                        (259478 'end of statement')
                                      }
                                      if(259526 call _cond_test(259485 call ==(259483 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                                      {
                                        { scopeless
                                          unknown tr[259488] real[16]
                                          (259491 'end of statement')
                                        }
                                        (259503 call = err(259502 call _read_real(259496 call . style c"max_width_bytes") tr i))
                                        (259511 call = ti(259509 call _cast imag[130] tr))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (259522 call _readOne(259516 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                        }
                                      }
                                      if(259547 call _cond_test(259532 call ! err))
                                      {
                                        { scopeless
                                          (259544 call = err(259543 call _setIfPrimitive(259539 call args i) ti i))
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(260569 call _cond_test(260567 call ||(260561 call == tmp[260510] QIO_CONV_ARG_TYPE_COMPLEX)(260564 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                                    {
                                      { scopeless
                                        unknown tmp[259573] "temp"(259572 call _toComplex(259570 call args i))
                                        (259580 call _check_tuple_var_decl tmp[259573] 2)
                                        unknown t[259561](259574 call tmp[259573] 0)
                                        unknown ok[259563](259577 call tmp[259573] 1)
                                        (259585 'end of statement')
                                      }
                                      if(259664 call _cond_test(259588 call ! ok))
                                      {
                                        (259595 call = err(259594 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          unknown ti[259600] complex[140]
                                          (259603 'end of statement')
                                        }
                                        if(259637 call _cond_test(259610 call ==(259608 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                        {
                                          { scopeless
                                            (259622 call = err(259621 call _read_complex(259615 call . style c"max_width_bytes") ti i))
                                          }
                                        }
                                        {
                                          { scopeless
                                            Try
                                            {
                                              {
                                                (259633 call _readOne(259627 call . iokind c"dynamic") ti origLocale)
                                              }
                                            }
                                          }
                                        }
                                        if(259659 call _cond_test(259644 call ! err))
                                        {
                                          { scopeless
                                            (259656 call = err(259655 call _setIfPrimitive(259651 call args i) ti i))
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(260576 call _cond_test(260573 call == tmp[260510] QIO_CONV_ARG_TYPE_NUMERIC))
                                      {
                                        { scopeless
                                          unknown tmp[259684] "temp"(259683 call _toNumeric(259681 call args i))
                                          (259691 call _check_tuple_var_decl tmp[259684] 2)
                                          unknown t[259672](259685 call tmp[259684] 0)
                                          unknown ok[259674](259688 call tmp[259684] 1)
                                          (259696 'end of statement')
                                        }
                                        if(259749 call _cond_test(259699 call ! ok))
                                        {
                                          (259706 call = err(259705 call qio_format_error_arg_mismatch i))
                                        }
                                        {
                                          { scopeless
                                            unknown ti[259711] t
                                            (259714 'end of statement')
                                          }
                                          Try
                                          {
                                            {
                                              (259724 call _readOne(259718 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                          if(259744 call _cond_test(259729 call ! err))
                                          {
                                            { scopeless
                                              (259741 call = err(259740 call _setIfPrimitive(259736 call args i) ti i))
                                            }
                                          }
                                        }
                                      }
                                      {
                                        if(260583 call _cond_test(260580 call == tmp[260510] QIO_CONV_ARG_TYPE_CHAR))
                                        {
                                          { scopeless
                                            unknown tmp[259769] "temp"(259768 call _toChar(259766 call args i))
                                            (259776 call _check_tuple_var_decl tmp[259769] 2)
                                            unknown t[259757](259770 call tmp[259769] 0)
                                            unknown ok[259759](259773 call tmp[259769] 1)
                                            (259781 'end of statement')
                                          }
                                          { scopeless
                                            unknown chr[259788](259783 'new'(259787 call ioChar t))
                                            (259791 'end of statement')
                                          }
                                          if(259816 call _cond_test(259793 call ! ok))
                                          {
                                            (259800 call = err(259799 call qio_format_error_arg_mismatch i))
                                          }
                                          {
                                            { scopeless
                                              Try
                                              {
                                                {
                                                  (259812 call _readOne(259806 call . iokind c"dynamic") chr origLocale)
                                                }
                                              }
                                            }
                                          }
                                          if(259836 call _cond_test(259822 call ! err))
                                          {
                                            { scopeless
                                              (259834 call _setIfChar(259828 call args i)(259831 call . chr c"ch"))
                                            }
                                          }
                                        }
                                        {
                                          if(260590 call _cond_test(260587 call == tmp[260510] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                          {
                                            { scopeless
                                              unknown tmp[259857] "temp"(259856 call _toBytes(259854 call args i))
                                              (259864 call _check_tuple_var_decl tmp[259857] 2)
                                              unknown t[259845](259858 call tmp[259857] 0)
                                              unknown ok[259847](259861 call tmp[259857] 1)
                                              (259869 'end of statement')
                                            }
                                            if(259895 call _cond_test(259872 call ! ok))
                                            {
                                              (259879 call = err(259878 call qio_format_error_arg_mismatch i))
                                            }
                                            {
                                              { scopeless
                                                Try
                                                {
                                                  {
                                                    (259891 call _readOne(259885 call . iokind c"dynamic") t origLocale)
                                                  }
                                                }
                                              }
                                            }
                                            if(259916 call _cond_test(259901 call ! err))
                                            {
                                              { scopeless
                                                (259913 call = err(259912 call _setIfPrimitive(259908 call args i) t i))
                                              }
                                            }
                                          }
                                          {
                                            if(260597 call _cond_test(260594 call == tmp[260510] QIO_CONV_ARG_TYPE_STRING))
                                            {
                                              { scopeless
                                                unknown tmp[259937] "temp"(259936 call _toString(259934 call args i))
                                                (259944 call _check_tuple_var_decl tmp[259937] 2)
                                                unknown t[259925](259938 call tmp[259937] 0)
                                                unknown ok[259927](259941 call tmp[259937] 1)
                                                (259949 'end of statement')
                                              }
                                              if(259975 call _cond_test(259952 call ! ok))
                                              {
                                                (259959 call = err(259958 call qio_format_error_arg_mismatch i))
                                              }
                                              {
                                                { scopeless
                                                  Try
                                                  {
                                                    {
                                                      (259971 call _readOne(259965 call . iokind c"dynamic") t origLocale)
                                                    }
                                                  }
                                                }
                                              }
                                              if(259996 call _cond_test(259981 call ! err))
                                              {
                                                { scopeless
                                                  (259993 call = err(259992 call _setIfPrimitive(259988 call args i) t i))
                                                }
                                              }
                                            }
                                            {
                                              if(260604 call _cond_test(260601 call == tmp[260510] QIO_CONV_ARG_TYPE_REGEXP))
                                              {
                                                { scopeless
                                                  unknown tmp[260017] "temp"(260016 call _toRegexp(260014 call args i))
                                                  (260024 call _check_tuple_var_decl tmp[260017] 2)
                                                  unknown t[260005](260018 call tmp[260017] 0)
                                                  unknown ok[260007](260021 call tmp[260017] 1)
                                                  (260029 'end of statement')
                                                }
                                                if(260223 call _cond_test(260032 call ! ok))
                                                {
                                                  (260039 call = err(260038 call qio_format_error_arg_mismatch i))
                                                }
                                                {
                                                  if(260057 call _cond_test(260045 call == r nil[44]))
                                                  {
                                                    { scopeless
                                                      (260054 call = r(260050 'new'(_chpl_manager = unmanaged[220](?))(260053 call _channel_regexp_info)))
                                                    }
                                                  }
                                                  { scopeless
                                                    const rnn[260066] "const"(260064 call postfix! r)
                                                    (260069 'end of statement')
                                                  }
                                                  (260075 call(260071 call . rnn c"clear"))
                                                  (260087 call =(260078 call . rnn c"theRegexp")(260084 call . t c"_regexp"))
                                                  (260095 call =(260091 call . rnn c"hasRegexp") 1)
                                                  (260103 call =(260099 call . rnn c"releaseRegexp") 0)
                                                  (260113 call _match_regexp_if_needed cur len err style rnn)
                                                  if(260136 call _cond_test(260126 call >(260123 call -(260120 call + i(260117 call . rnn c"ncaptures")) 1) k))
                                                  {
                                                    (260132 call = err(260131 call qio_format_error_too_few_args))
                                                  }
                                                  {
                                                    unknown _indexOfInterest[260180] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                                    unknown _iterator[260181] "expr temp" "temp"
                                                    (260190 'move' _iterator[260181](260188 call _getIterator(260200 call chpl_direct_counted_range_iter 0(260196 call . rnn c"ncaptures"))))
                                                    Defer
                                                    {
                                                      {
                                                        (260216 call _freeIterator _iterator[260181])
                                                      }
                                                    }
                                                    { scopeless type
                                                      (260205 'move' _indexOfInterest[260180](260202 call iteratorIndex _iterator[260181]))
                                                    }
                                                    ForLoop[260182]
                                                    {
                                                      unknown z[260209] "index var" "insert auto destroy"
                                                      (260211 'move' z[260209] _indexOfInterest[260180])
                                                      {
                                                        if(260175 call _cond_test(260158 call <=(260152 call + i z)(260155 call . argType c"size")))
                                                        {
                                                          (260171 call =(260169 call argType(260166 call +(260163 call + i z) 1)) QIO_CONV_SET_CAPTURE)
                                                        }
                                                      }
                                                      label _continueLabel[260185]
                                                      _indexOfInterest[260180]
                                                      _iterator[260181]
                                                    }
                                                    label _breakLabel[260186]
                                                  }
                                                }
                                              }
                                              {
                                                if(260611 call _cond_test(260608 call == tmp[260510] QIO_CONV_ARG_TYPE_REPR))
                                                {
                                                  Try
                                                  {
                                                    {
                                                      (260242 call _readOne(260233 call . iokind c"dynamic")(260240 call args i) origLocale)
                                                    }
                                                  }
                                                }
                                                {
                                                  if(260618 call _cond_test(260615 call == tmp[260510] QIO_CONV_SET_CAPTURE))
                                                  {
                                                    if(260455 call _cond_test(260253 call == r nil[44]))
                                                    {
                                                      (260259 call = err(260258 call qio_format_error_bad_regexp))
                                                    }
                                                    {
                                                      { scopeless
                                                        const rnn[260266] "const"(260264 call postfix! r)
                                                        (260269 'end of statement')
                                                      }
                                                      (260278 call _match_regexp_if_needed cur len err style rnn)
                                                      if(260451 call _cond_test(260290 call >=(260283 call . rnn c"capturei")(260287 call . rnn c"ncaptures")))
                                                      {
                                                        (260296 call = err(260295 call qio_format_error_bad_regexp))
                                                      }
                                                      {
                                                        if(260438 call _cond_test(260307 call _isIoPrimitiveType(260305 'typeof'(260304 call args i))))
                                                        {
                                                          Try
                                                          {
                                                            {
                                                              if(260405 call _cond_test(260314 call ==(260312 'typeof'(260311 call args i)) string[26]))
                                                              {
                                                                { scopeless
                                                                  (260335 call =(260319 call args i)(260334 call(260330 call .(260329 call(260321 call . rnn c"capArr")(260325 call . rnn c"capturei")) c"decode")))
                                                                }
                                                              }
                                                              {
                                                                { scopeless
                                                                  if(260399 call _cond_test(260345 call isEnumType(260343 'typeof'(260342 call args i))))
                                                                  {
                                                                    { scopeless
                                                                      (260372 call =(260349 call args i)(260370 call _cast(260369 'typeof'(260368 call args i))(260364 call(260360 call .(260359 call(260351 call . rnn c"capArr")(260355 call . rnn c"capturei")) c"decode"))))
                                                                    }
                                                                  }
                                                                  {
                                                                    { scopeless
                                                                      (260396 call =(260378 call args i)(260394 call _cast(260393 'typeof'(260392 call args i))(260388 call(260380 call . rnn c"capArr")(260384 call . rnn c"capturei"))))
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          Catch e : DecodeError
                                                          {
                                                            (260421 call = err(260420 call qio_format_error_arg_mismatch i))
                                                          }
                                                          Catch
                                                          {
                                                            (260430 call = err(260429 call qio_format_error_bad_regexp))
                                                          }
                                                        }
                                                        (260448 call +=(260444 call . rnn c"capturei") 1)
                                                      }
                                                    }
                                                  }
                                                  {
                                                    (260504 'throw'(260464 'new'(_chpl_manager = _owned[30](?))(260503 call IllegalArgumentError(260474 call +(260471 call + "args("(260469 call _cast string[26] i)) ")")(260501 call + "readf internal error "(260499 call _cast string[26](260497 call argType i))))))
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    label _unused_continueLabel[260632]
                    label _breakLabel[260631]
                  }
                  if(260695 call _cond_test(260665 call ! err))
                  {
                    if(260690 call _cond_test(260669 call < cur len))
                    {
                      { scopeless
                        unknown dummy[260672] c_int
                        (260675 'end of statement')
                      }
                      (260688 call _format_reader fmtStr cur len err conv gotConv style r 1)
                    }
                  }
                  if(260719 call _cond_test(260700 call ! err))
                  {
                    if(260714 call _cond_test(260704 call < cur len))
                    {
                      (260710 call = err(260709 call qio_format_error_too_few_args))
                    }
                  }
                  if(260738 call _cond_test(260724 call ! err))
                  {
                    (260729 call qio_channel_commit_unlocked _channel_internal)
                  }
                  {
                    (260735 call qio_channel_revert_unlocked _channel_internal)
                  }
                }
              }
              Catch thrownError : SystemError
              {
                if(260756 call _cond_test(260751 call !=(260747 call . thrownError c"err") EEOF))
                {
                  { scopeless
                    (260754 'throw' thrownError)
                  }
                }
                (260764 call = err EEOF)
              }
            }
          }
        }
        (260783 'on block' 0 tmp[260778])
      }
    }
    if(260833 call _cond_test(260787 call ! err))
    {
      (260790 return 1)
    }
    {
      { scopeless
        if(260829 call _cond_test(260795 call == err EEOF))
        {
          (260798 return 0)
        }
        {
          Try
          {
            {
              (260824 call(260802 call . this c"_ch_ioerror") err "in channel.readf(fmt:string, ...)")
            }
          }
        }
      }
    }
    (260839 return 0)
  }
  where {
    (258651 call ||(258646 call isStringType t)(258650 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[260853](arg _mt[260858]:_MT[238], arg this[260855] :
  channel, arg fmtStr[260850] :
  unknown t[260848]) : _unknown[51] throws "method" "no doc"
  {
    if(260876 call _cond_test writing)
    {
      { scopeless
        (260874 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      unknown err[260884] ENOERR syserr
      (260887 'end of statement')
    }
    { scopeless
      const tmp[261086] "const" "temp"
      (261088 'move' tmp[261086](261084 'deref'(261083 '_wide_get_locale'(260889 call . this c"home"))))
      {
        {
          Try
          {
            {
              (260897 call(260893 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (260907 call(260903 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[260918](260917 call(260913 call . this c"_style"))
            (260921 'end of statement')
          }
          Defer
          {
            {
              (260928 call(260923 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[260935] 0 size_t
            (260938 'end of statement')
          }
          { scopeless
            unknown len[260947](260945 call _cast size_t(260941 call . fmtStr c"size")) size_t
            (260950 'end of statement')
          }
          { scopeless
            unknown conv[260952] qio_conv_t
            (260955 'end of statement')
          }
          { scopeless
            unknown gotConv[260957] bool[10]
            (260960 'end of statement')
          }
          { scopeless
            unknown style[260962] iostyle
            (260965 'end of statement')
          }
          { scopeless
            unknown end[260967] size_t
            (260970 'end of statement')
          }
          { scopeless
            unknown dummy[260972] c_int
            (260975 'end of statement')
          }
          { scopeless
            unknown r[260979](260978 'to unmanaged class from unknown'(260977 'to nilable class from type' _channel_regexp_info))
            (260982 'end of statement')
          }
          Defer
          {
            {
              if(260989 call _cond_test r)
              {
                { scopeless
                  (260986 call chpl__delete r)
                }
              }
            }
          }
          (261003 call = err(261002 call qio_channel_mark 0 _channel_internal))
          if(261036 call _cond_test(261007 call ! err))
          {
            (261020 call _format_reader fmtStr cur len err conv gotConv style r 1)
            if(261032 call _cond_test gotConv)
            {
              (261028 call = err(261027 call qio_format_error_too_few_args))
            }
          }
          if(261060 call _cond_test(261041 call ! err))
          {
            if(261055 call _cond_test(261045 call < cur len))
            {
              (261051 call = err(261050 call qio_format_error_too_few_args))
            }
          }
          if(261079 call _cond_test(261065 call ! err))
          {
            (261070 call qio_channel_commit_unlocked _channel_internal)
          }
          {
            (261076 call qio_channel_revert_unlocked _channel_internal)
          }
        }
        (261091 'on block' 0 tmp[261086])
      }
    }
    if(261144 call _cond_test(261095 call ! err))
    {
      (261098 return 1)
    }
    {
      { scopeless
        if(261140 call _cond_test(261103 call == err EEOF))
        {
          (261106 return 0)
        }
        {
          Try
          {
            {
              (261132 call(261110 call . this c"_ch_ioerror") err "in channel.readf(fmt:string)")
            }
          }
          (261138 return 0)
        }
      }
    }
  }
  where {
    (260868 call ||(260863 call isStringType t)(260867 call isBytesType t))
  }
  function readf[261158](arg fmt[261155] :
  string[26], ref arg args[261162]:_any[178](?) ...) : _unknown[51] throws
  {
    (261178 return(261177 'try-expr'(261176 call(261169 call . stdin c"readf") fmt(261175 'expand_tuple' args))))
  }
  { scopeless type
    bool[10]
  }
  function readf[261190](arg fmt[261187] :
  string[26]) : _unknown[51] throws "no doc"
  {
    (261201 return(261200 'try-expr'(261199 call(261194 call . stdin c"readf") fmt)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].skipField[261210](arg _mt[261215]:_MT[238], arg this[261212] :
  channel) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[261219] ENOERR syserr
      (261222 'end of statement')
    }
    { scopeless
      const tmp[261286] "const" "temp"
      (261288 'move' tmp[261286](261284 'deref'(261283 '_wide_get_locale'(261225 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261233 call(261229 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261243 call(261239 call . this c"unlock"))
            }
          }
          { scopeless
            unknown st[261255](261254 call(261249 call . this c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
            (261258 'end of statement')
          }
          if(261279 call _cond_test(261261 call == st QIO_AGGREGATE_FORMAT_JSON))
          {
            (261269 call = err(261268 call qio_channel_skip_json_field 0 _channel_internal))
          }
          {
            (261275 call = err ENOTSUP)
          }
        }
        (261291 'on block' 0 tmp[261286])
      }
    }
    if(261322 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (261318 call(261296 call . this c"_ch_ioerror") err "in skipField")
          }
        }
      }
    }
  }
  function _unknown[51].format[261337](arg _mt[261342]:_MT[238], arg this[261339] :
  string[26], arg args[261334]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261351 return(261350 call chpl_do_format this(261349 'expand_tuple' args)))
      }
    }
    Catch e : IllegalArgumentError
    {
      (261359 'throw' e)
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261389 call ioerror(261368 call . e c"err") "in string.format")
        }
      }
    }
    Catch e : DecodeError
    {
      Try
      {
        {
          (261405 call ioerror(261401 call _cast syserr EILSEQ) "in string.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261418 call ioerror(261414 call _cast syserr EINVAL) "in string.format")
        }
      }
    }
    (261444 return "")
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].format[261457](arg _mt[261462]:_MT[238], arg this[261459] :
  bytes[24], arg args[261454]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261471 return(261470 call chpl_do_format this(261469 'expand_tuple' args)))
      }
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261501 call ioerror(261480 call . e c"err") "in bytes.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261514 call ioerror(261510 call _cast syserr EINVAL) "in bytes.format")
        }
      }
    }
    (261539 return b"")
  }
  { scopeless type
    bytes[24]
  }
  function chpl_do_format[261551](arg fmt[261548] :
  unknown t[261546], arg args[261555]:_any[178](?) ...) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown f[261573](261572 'try-expr'(261571 call openmem))
      (261576 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261583 call(261579 call . f c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    { scopeless
      unknown offset[261596] 0 int[13]
      (261599 'end of statement')
    }
    {
      { scopeless
        unknown w[261609](261608 'try-expr'(261607 call(261601 call . f c"writer")(locking = 0)))
        (261612 'end of statement')
      }
      Defer
      {
        {
          Try
          {
            {
              (261619 call(261615 call . w c"close"))
            }
          }
          Catch
          {
          }
        }
      }
      Try
      {
        {
          (261638 call(261631 call . w c"writef") fmt(261637 'expand_tuple' args))
        }
      }
      (261649 call = offset(261648 call(261644 call . w c"offset")))
      Try
      {
        {
          (261657 call(261653 call . w c"close"))
        }
      }
    }
    { scopeless
      unknown buf[261672](261671 call c_malloc(261665 call uint[115] 8)(261669 call + offset 1))
      (261675 'end of statement')
    }
    { scopeless
      unknown r[261685](261684 'try-expr'(261683 call(261677 call . f c"reader")(locking = 0)))
      (261688 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261694 call(261690 call . r c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    Try
    {
      {
        (261715 call(261706 call . r c"readBytes") buf(261713 call _cast ssize_t offset))
      }
    }
    Try
    {
      {
        (261724 call(261720 call . r c"close"))
      }
    }
    Try
    {
      {
        (261733 call(261729 call . f c"close"))
      }
    }
    (261742 call =(261740 call buf offset) 0)
    if(261771 call _cond_test(261748 call isStringType t))
    {
      { scopeless
        (261758 return(261757 call createStringWithOwnedBuffer buf offset(261755 call + offset 1)))
      }
    }
    {
      { scopeless
        (261769 return(261768 call createBytesWithOwnedBuffer buf offset(261766 call + offset 1)))
      }
    }
  }
  where {
    (261567 call ||(261562 call isStringType t)(261566 call isBytesType t))
  }
  { scopeless type
    t
  }
  (261782 'use' Regexp)
  function qio_regexp_channel_match[261790](const  ref arg re[261787] :
  qio_regexp_t, arg threadsafe[261793] :
  c_int, arg ch[261797] :
  qio_channel_ptr_t, arg maxlen[261804] :
  (261803 call int[13] 64), arg anchor[261808] :
  c_int, arg can_discard[261812] :
  bool[10], arg keep_unmatched[261816] :
  bool[10], arg keep_whole_pattern[261820] :
  bool[10], arg submatch[261827] :
  (261826 call _ddata qio_regexp_string_piece_t), arg nsubmatch[261834] :
  (261833 call int[13] 64)) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._extractMatch[261848](arg _mt[261861]:_MT[238], arg this[261858] :
  channel, arg m[261845] :
  reMatch, ref arg arg[261851] :
  reMatch, ref arg error[261855] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (261865 call = arg m)
  }
  function _unknown[51]._extractMatch[261878](arg _mt[261891]:_MT[238], arg this[261888] :
  channel, arg m[261875] :
  reMatch, ref arg arg[261881] :
  bytes[24], ref arg error[261885] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown cur[261897](261896 call int[13] 64)
      (261900 'end of statement')
    }
    { scopeless
      unknown target[261909](261907 call _cast int[13](261903 call . m c"offset"))
      (261912 'end of statement')
    }
    { scopeless
      unknown len[261917](261914 call . m c"size")
      (261920 'end of statement')
    }
    if(261950 call _cond_test(261927 call !(261924 call . m c"matched")))
    {
      (261946 call = arg b"")
    }
    if(261980 call _cond_test(261955 call ! error))
    {
      (261960 call qio_channel_revert_unlocked _channel_internal)
      (261969 call = error(261968 call qio_channel_mark 0 _channel_internal))
      (261977 call = cur(261976 call qio_channel_offset_unlocked _channel_internal))
    }
    if(262001 call _cond_test(261985 call ! error))
    {
      (261997 call = error(261996 call qio_channel_advance 0 _channel_internal(261994 call - target cur)))
    }
    { scopeless
      unknown s[262006] bytes[24]
      (262009 'end of statement')
    }
    if(262063 call _cond_test(262011 call ! error))
    {
      { scopeless
        unknown gotlen[262017](262016 call int[13] 64)
        (262020 'end of statement')
      }
      { scopeless
        unknown ts[262023] c_string
        (262026 'end of statement')
      }
      (262050 call = error(262049 call qio_channel_read_string 0(262036 call _cast c_int(262032 call . iokind c"native"))(262041 call stringStyleExactLen len) _channel_internal ts gotlen(262047 call _cast ssize_t len)))
      (262060 call = s(262059 call createBytesWithOwnedBuffer ts(length = gotlen)))
    }
    if(262097 call _cond_test(262068 call ! error))
    {
      (262072 call = arg s)
    }
    {
      (262093 call = arg b"")
    }
  }
  function _unknown[51]._extractMatch[262110](arg _mt[262124]:_MT[238], arg this[262121] :
  channel, arg m[262107] :
  reMatch, ref arg arg[262114] :
  unknown t[262112], ref arg error[262118] :
  syserr) : _unknown[51] "method" "no doc"
  {
    if(262154 call _cond_test(262140 call !(262137 call . m c"matched")))
    {
      { scopeless
        unknown empty[262144](262143 'typeof' arg)
        (262147 'end of statement')
      }
      (262151 call = arg empty)
    }
    { scopeless
      unknown s[262160] bytes[24]
      (262163 'end of statement')
    }
    (262169 call _extractMatch m s error)
    if(262228 call _cond_test(262172 call ! error))
    {
      if(262211 call _cond_test(262177 call ==(262175 'typeof' arg) string[26]))
      {
        Try
        {
          {
            (262186 call = arg(262185 call(262181 call . s c"decode")))
          }
        }
        Catch
        {
          (262193 call = error EFORMAT)
        }
      }
      {
        (262207 call = arg(262205 call _cast(262204 'typeof' arg) s))
      }
    }
    {
      { scopeless
        unknown empty[262218](262217 'typeof' arg)
        (262221 'end of statement')
      }
      (262225 call = arg empty)
    }
  }
  where {
    (262134 call &&(262128 call != t reMatch)(262132 call != t bytes[24]))
  }
  function _unknown[51].extractMatch[262242](arg _mt[262249]:_MT[238], arg this[262246] :
  channel, arg m[262239] :
  reMatch, ref arg arg[262244]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[262253] ENOERR syserr
      (262256 'end of statement')
    }
    { scopeless
      const tmp[262292] "const" "temp"
      (262294 'move' tmp[262292](262290 'deref'(262289 '_wide_get_locale'(262259 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262267 call(262263 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262277 call(262273 call . this c"unlock"))
            }
          }
          (262287 call _extractMatch m arg err)
        }
        (262297 'on block' 0 tmp[262292])
      }
    }
    if(262339 call _cond_test err)
    {
      Try
      {
        {
          (262334 call(262302 call . this c"_ch_ioerror") err(262332 call +(262329 call + "in channel.extractMatch(m:reMatch, ref "(262327 call _cast string[26](262325 'typeof' arg))) ")"))
        }
      }
    }
  }
  function _unknown[51].extractMatch[262352](arg _mt[262363]:_MT[238], arg this[262360] :
  channel, arg m[262349] :
  reMatch, ref arg arg[262354]:_any[178](?), ref arg error[262357] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      const tmp[262396] "const" "temp"
      (262398 'move' tmp[262396](262394 'deref'(262393 '_wide_get_locale'(262366 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262374 call(262370 call . this c"lock"))
            }
          }
          (262384 call _extractMatch m arg error)
          (262391 call(262387 call . this c"unlock"))
        }
        (262401 'on block' 0 tmp[262396])
      }
    }
  }
  function _unknown[51]._ch_handle_captures[262417](arg _mt[262432]:_MT[238], arg this[262429] :
  channel, arg matches[262414] :
  (262413 call _ddata qio_regexp_string_piece_t), arg nmatches[262420] :
  int[13], ref arg captures[262423]:_any[178](?), ref arg error[262426] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (262443 call assert(262440 call >= nmatches(262437 call . captures c"size")))
    {
      unknown i[262478] 0
      unknown tmp[262479] "maybe param" "temp"
      (262491 'move' tmp[262479](262489 call chpl_compute_low_param_loop_bound 0(262452 call -(262448 call . captures c"size") 1)))
      unknown tmp[262480] "maybe param" "temp"
      (262504 'move' tmp[262480](262502 call chpl_compute_high_param_loop_bound 0(262496 call -(262498 call . captures c"size") 1)))
      unknown tmp[262481] "maybe param" "temp"
      (262507 'move' tmp[262481] 1)
      ParamForLoop[262509]
      { i[262478] tmp[262479] tmp[262480] tmp[262481]
        {
          { scopeless
            unknown m[262463](262462 call _to_reMatch(262460 call matches i))
            (262466 'end of statement')
          }
          (262476 call _extractMatch m(262474 call captures i) error)
        }
      }
      label _unused_continueLabel[262483]
      label _breakLabel[262482]
    }
  }
  function _unknown[51].search[262530](arg _mt[262539]:_MT[238], arg this[262536] :
  channel, arg re[262527] :
  (262526 call regexp ?[260]), ref arg error[262533] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[262543] reMatch
      (262546 'end of statement')
    }
    { scopeless
      const tmp[262726] "const" "temp"
      (262728 'move' tmp[262726](262724 'deref'(262723 '_wide_get_locale'(262549 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262557 call(262553 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[262563] 1
            (262566 'end of statement')
          }
          { scopeless
            unknown matches[262572](262571 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262575 'end of statement')
          }
          (262582 call = error(262581 call qio_channel_mark 0 _channel_internal))
          if(262615 call _cond_test(262586 call ! error))
          {
            (262611 call = error(262610 call qio_regexp_channel_match(262591 call . re c"_regexp") 0 _channel_internal(262603 call max(262601 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(262634 call _cond_test(262627 call ||(262621 call == error EFORMAT)(262625 call == error EEOF)))
          {
            { scopeless
              (262631 call = error ENOERR)
            }
          }
          if(262706 call _cond_test(262640 call ! error))
          {
            (262650 call = m(262649 call _to_reMatch(262647 call matches 0)))
            if(262702 call _cond_test(262655 call . m c"matched"))
            {
              (262661 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[262668](262667 call qio_channel_offset_unlocked _channel_internal)
                (262671 'end of statement')
              }
              { scopeless
                unknown target[262679](262677 call _cast int[13](262673 call . m c"offset"))
                (262682 'end of statement')
              }
              (262693 call = error(262692 call qio_channel_advance 0 _channel_internal(262690 call - target cur)))
            }
            {
              (262699 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (262714 call _ddata_free matches nm)
          (262721 call(262717 call . this c"unlock"))
        }
        (262731 'on block' 0 tmp[262726])
      }
    }
    (262735 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262750](arg _mt[262755]:_MT[238], arg this[262752] :
  channel, arg re[262747] :
  (262746 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[262760] ENOERR syserr
      (262763 'end of statement')
    }
    { scopeless
      unknown ret[262776](262775 call(262768 call . this c"search") re(error = e))
      (262779 'end of statement')
    }
    if(262808 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (262804 call(262782 call . this c"_ch_ioerror") e "in channel.search")
          }
        }
      }
    }
    (262814 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262829](arg _mt[262839]:_MT[238], arg this[262836] :
  channel, arg re[262826] :
  (262825 call regexp ?[260]), ref arg captures[262833]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    { scopeless
      unknown m[262843] reMatch
      (262846 'end of statement')
    }
    { scopeless
      unknown err[262850] ENOERR syserr
      (262853 'end of statement')
    }
    { scopeless
      const tmp[263049] "const" "temp"
      (263051 'move' tmp[263049](263047 'deref'(263046 '_wide_get_locale'(262855 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262863 call(262859 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262873 call(262869 call . this c"unlock"))
            }
          }
          { scopeless
            unknown nm[262885](262883 call +(262879 call . captures c"size") 1)
            (262888 'end of statement')
          }
          { scopeless
            unknown matches[262894](262893 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262897 'end of statement')
          }
          (262904 call = err(262903 call qio_channel_mark 0 _channel_internal))
          if(262937 call _cond_test(262908 call ! err))
          {
            (262933 call = err(262932 call qio_regexp_channel_match(262913 call . re c"_regexp") 0 _channel_internal(262925 call max(262923 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(262956 call _cond_test(262949 call ||(262943 call == err EFORMAT)(262947 call == err EEOF)))
          {
            { scopeless
              (262953 call = err ENOERR)
            }
          }
          if(263036 call _cond_test(262962 call ! err))
          {
            (262972 call = m(262971 call _to_reMatch(262969 call matches 0)))
            if(263032 call _cond_test(262977 call . m c"matched"))
            {
              (262986 call _ch_handle_captures matches nm captures err)
              (262992 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[262998](262997 call qio_channel_offset_unlocked _channel_internal)
                (263001 'end of statement')
              }
              { scopeless
                unknown target[263009](263007 call _cast int[13](263003 call . m c"offset"))
                (263012 'end of statement')
              }
              (263023 call = err(263022 call qio_channel_advance 0 _channel_internal(263020 call - target cur)))
            }
            {
              (263029 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (263044 call _ddata_free matches nm)
        }
        (263054 'on block' 0 tmp[263049])
      }
    }
    if(263069 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (263065 call(263059 call . this c"_ch_ioerror") err "in channel.search")
          }
        }
      }
    }
    (263075 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263090](arg _mt[263099]:_MT[238], arg this[263096] :
  channel, arg re[263087] :
  (263086 call regexp ?[260]), ref arg error[263093] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[263103] reMatch
      (263106 'end of statement')
    }
    { scopeless
      const tmp[263286] "const" "temp"
      (263288 'move' tmp[263286](263284 'deref'(263283 '_wide_get_locale'(263109 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263117 call(263113 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263123] 1
            (263126 'end of statement')
          }
          { scopeless
            unknown matches[263132](263131 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263135 'end of statement')
          }
          (263142 call = error(263141 call qio_channel_mark 0 _channel_internal))
          if(263175 call _cond_test(263146 call ! error))
          {
            (263171 call = error(263170 call qio_regexp_channel_match(263151 call . re c"_regexp") 0 _channel_internal(263163 call max(263161 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263194 call _cond_test(263187 call ||(263181 call == error EFORMAT)(263185 call == error EEOF)))
          {
            { scopeless
              (263191 call = error ENOERR)
            }
          }
          if(263266 call _cond_test(263200 call ! error))
          {
            (263210 call = m(263209 call _to_reMatch(263207 call matches 0)))
            if(263262 call _cond_test(263215 call . m c"matched"))
            {
              (263221 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263228](263227 call qio_channel_offset_unlocked _channel_internal)
                (263231 'end of statement')
              }
              { scopeless
                unknown target[263239](263237 call _cast int[13](263233 call . m c"offset"))
                (263242 'end of statement')
              }
              (263253 call = error(263252 call qio_channel_advance 0 _channel_internal(263250 call - target cur)))
            }
            {
              (263259 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263274 call _ddata_free matches nm)
          (263281 call(263277 call . this c"unlock"))
        }
        (263291 'on block' 0 tmp[263286])
      }
    }
    (263295 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263310](arg _mt[263315]:_MT[238], arg this[263312] :
  channel, arg re[263307] :
  (263306 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263320] ENOERR syserr
      (263323 'end of statement')
    }
    { scopeless
      unknown ret[263336](263335 call(263328 call . this c"match") re(error = e))
      (263339 'end of statement')
    }
    if(263368 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263364 call(263342 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263374 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263389](arg _mt[263403]:_MT[238], arg this[263400] :
  channel, arg re[263386] :
  (263385 call regexp ?[260]), ref arg captures[263393]:_any[178](?) ..., ref arg error[263397] :
  syserr) : _unknown[51] "method"
  {
    { scopeless
      unknown m[263407] reMatch
      (263410 'end of statement')
    }
    { scopeless
      const tmp[263604] "const" "temp"
      (263606 'move' tmp[263604](263602 'deref'(263601 '_wide_get_locale'(263413 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263421 call(263417 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263433](263431 call + 1(263428 call . captures c"size"))
            (263436 'end of statement')
          }
          { scopeless
            unknown matches[263442](263441 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263445 'end of statement')
          }
          (263452 call = error(263451 call qio_channel_mark 0 _channel_internal))
          if(263485 call _cond_test(263456 call ! error))
          {
            (263481 call = error(263480 call qio_regexp_channel_match(263461 call . re c"_regexp") 0 _channel_internal(263473 call max(263471 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263504 call _cond_test(263497 call ||(263491 call == error EFORMAT)(263495 call == error EEOF)))
          {
            { scopeless
              (263501 call = error ENOERR)
            }
          }
          if(263584 call _cond_test(263510 call ! error))
          {
            (263520 call = m(263519 call _to_reMatch(263517 call matches 0)))
            if(263580 call _cond_test(263525 call . m c"matched"))
            {
              (263534 call _ch_handle_captures matches nm captures error)
              (263540 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263546](263545 call qio_channel_offset_unlocked _channel_internal)
                (263549 'end of statement')
              }
              { scopeless
                unknown target[263557](263555 call _cast int[13](263551 call . m c"offset"))
                (263560 'end of statement')
              }
              (263571 call = error(263570 call qio_channel_advance 0 _channel_internal(263568 call - target cur)))
            }
            {
              (263577 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263592 call _ddata_free matches nm)
          (263599 call(263595 call . this c"unlock"))
        }
        (263609 'on block' 0 tmp[263604])
      }
    }
    (263613 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263628](arg _mt[263638]:_MT[238], arg this[263635] :
  channel, arg re[263625] :
  (263624 call regexp ?[260]), ref arg captures[263632]:_any[178](?) ...) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263643] ENOERR syserr
      (263646 'end of statement')
    }
    { scopeless
      unknown ret[263659](263658 call(263649 call . this c"match") re(263655 'expand_tuple' captures)(error = e))
      (263662 'end of statement')
    }
    if(263675 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263671 call(263665 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263681 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].matches[263696](arg _mt[263714]:_MT[238], arg this[263711] :
  channel, arg re[263693] :
  (263692 call regexp ?[260]), param arg captures[263699] =
  0, arg maxmatches[263707] :
  int[13] =
  (263706 call max int[13])) : _unknown[51] "iterator fn" "method"
  {
    { scopeless
      unknown m[263717] reMatch
      (263720 'end of statement')
    }
    { scopeless
      unknown go[263723] 1
      (263726 'end of statement')
    }
    { scopeless
      unknown i[263728] 0
      (263731 'end of statement')
    }
    { scopeless
      unknown error[263734] ENOERR syserr
      (263737 'end of statement')
    }
    { scopeless
      unknown nret[263742] "param"(263740 call + captures 1)
      (263745 'end of statement')
    }
    { scopeless
      unknown ret[263750](263748 call * nret reMatch)
      (263753 'end of statement')
    }
    Try!
    {
      {
        (263756 call lock)
      }
    }
    { scopeless
      const tmp[263773] "const" "temp"
      (263775 'move' tmp[263773](263771 'deref'(263770 '_wide_get_locale'(263761 call . this c"home"))))
      {
        { scopeless
          Try!
          {
            {
              (263766 call _mark)
            }
          }
        }
        (263778 'on block' 0 tmp[263773])
      }
    }
    {
      unknown tmp[264038] "temp"
      (264068 'move' tmp[264038](264060 call _cond_test(264062 call && go(264065 call < i maxmatches))))
      WhileDo[264043]
      {
        {
          { scopeless
            const tmp[264013] "const" "temp"
            (264015 'move' tmp[264013](264011 'deref'(264010 '_wide_get_locale'(263789 call . this c"home"))))
            {
              {
                { scopeless
                  unknown nm[263796](263794 call + 1 captures)
                  (263799 'end of statement')
                }
                { scopeless
                  unknown matches[263806](263805 call _ddata_allocate qio_regexp_string_piece_t nm)
                  (263809 'end of statement')
                }
                if(263840 call _cond_test(263811 call ! error))
                {
                  (263836 call = error(263835 call qio_regexp_channel_match(263816 call . re c"_regexp") 0 _channel_internal(263828 call max(263826 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
                }
                if(263989 call _cond_test(263845 call ! error))
                {
                  (263855 call = m(263854 call _to_reMatch(263852 call matches 0)))
                  if(263985 call _cond_test(263860 call . m c"matched"))
                  {
                    {
                      unknown i[263892] 0
                      unknown tmp[263893] "maybe param" "temp"
                      (263905 'move' tmp[263893](263903 call chpl_compute_low_param_loop_bound 0(263866 call - nret 1)))
                      unknown tmp[263894] "maybe param" "temp"
                      (263915 'move' tmp[263894](263913 call chpl_compute_high_param_loop_bound 0(263910 call - nret 1)))
                      unknown tmp[263895] "maybe param" "temp"
                      (263918 'move' tmp[263895] 1)
                      ParamForLoop[263920]
                      { i[263892] tmp[263893] tmp[263894] tmp[263895]
                        {
                          (263878 call = m(263877 call _to_reMatch(263875 call matches i)))
                          (263890 call _extractMatch m(263888 call ret i) error)
                        }
                      }
                      label _unused_continueLabel[263897]
                      label _breakLabel[263896]
                    }
                    (263933 call qio_channel_revert_unlocked _channel_internal)
                    (263941 call = error(263940 call qio_channel_mark 0 _channel_internal))
                    if(263980 call _cond_test(263945 call ! error))
                    {
                      { scopeless
                        unknown cur[263951](263950 call qio_channel_offset_unlocked _channel_internal)
                        (263954 'end of statement')
                      }
                      { scopeless
                        unknown target[263963](263961 call _cast int[13](263957 call . m c"offset"))
                        (263966 'end of statement')
                      }
                      (263977 call = error(263976 call qio_channel_advance 0 _channel_internal(263974 call - target cur)))
                    }
                  }
                  {
                  }
                }
                (263997 call _ddata_free matches nm)
                if(264005 call _cond_test error)
                {
                  { scopeless
                    (264002 call = go 0)
                  }
                }
              }
              (264018 'on block' 0 tmp[264013])
            }
          }
          if(264028 call _cond_test(264023 call ! error))
          {
            { scopeless
              (264026 yield ret)
            }
          }
          (264035 call += i 1)
        }
        label _continueLabel[264041]
        (264055 'move' tmp[264038](264047 call _cond_test(264049 call && go(264052 call < i maxmatches))))
        tmp[264038]
      }
      label _breakLabel[264042]
    }
    (264073 call _commit)
    (264077 call unlock)
    if(264094 call _cond_test(264087 call ||(264081 call == error EFORMAT)(264085 call == error EEOF)))
    {
      { scopeless
        (264091 call = error ENOERR)
      }
    }
    if(264127 call _cond_test error)
    {
      { scopeless
        Try!
        {
          {
            (264123 call(264101 call . this c"_ch_ioerror") error "in channel.matches")
          }
        }
      }
    }
  }
}