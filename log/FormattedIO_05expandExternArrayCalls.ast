AST dump for FormattedIO after pass expandExternArrayCalls.
Module use list: 

{
  (353012 'use' ChapelStandard)
  (251270 'use' IO)
  (251274 'use' SysCTypes)
  (251277 'use' SysBasic)
  (251280 'use' SysError)
  function _toIntegral[251289](arg x[251286] :
  unknown t[251284]) : _unknown[51] "inline" "private"
  {
    (251300 return(251298 call _build_tuple x 1))
  }
  where {
    (251294 call isIntegralType t)
  }
  function _toIntegral[251313](arg x[251310] :
  unknown t[251308]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251332](251330 call _build_tuple int[13] bool[10])
      (251335 'end of statement')
    }
    if(251362 call _cond_test(251340 call isAbstractEnumType t))
    {
      { scopeless
        (251347 call = ret(251345 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251359 call = ret(251357 call _build_tuple(251353 call _cast int[13] x) 1))
      }
    }
    (251369 return ret)
  }
  where {
    (251325 call &&(251318 call _isIoPrimitiveType t)(251323 call !(251322 call isIntegralType t)))
  }
  function _toIntegral[251381](arg x[251378] :
  unknown t[251376]) : _unknown[51] "inline" "private"
  {
    (251394 return(251392 call _build_tuple 0 0))
  }
  where {
    (251387 call !(251386 call _isIoPrimitiveType t))
  }
  function _toSigned[251407](arg x[251404] :
  unknown t[251402]) : _unknown[51] "inline" "private"
  {
    (251418 return(251416 call _build_tuple x 1))
  }
  where {
    (251412 call isIntType t)
  }
  function _toSigned[251433](arg x[251430] :
  (251429 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (251446 return(251444 call _build_tuple(251440 call _cast(251439 call int[13] 8) x) 1))
  }
  function _toSigned[251460](arg x[251457] :
  (251456 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (251473 return(251471 call _build_tuple(251467 call _cast(251466 call int[13] 16) x) 1))
  }
  function _toSigned[251487](arg x[251484] :
  (251483 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (251500 return(251498 call _build_tuple(251494 call _cast(251493 call int[13] 32) x) 1))
  }
  function _toSigned[251514](arg x[251511] :
  (251510 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (251527 return(251525 call _build_tuple(251521 call _cast(251520 call int[13] 64) x) 1))
  }
  function _toSigned[251539](arg x[251536] :
  unknown t[251534]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251558](251556 call _build_tuple int[13] bool[10])
      (251561 'end of statement')
    }
    if(251588 call _cond_test(251566 call isAbstractEnumType t))
    {
      { scopeless
        (251573 call = ret(251571 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251585 call = ret(251583 call _build_tuple(251579 call _cast int[13] x) 1))
      }
    }
    (251595 return ret)
  }
  where {
    (251551 call &&(251544 call _isIoPrimitiveType t)(251549 call !(251548 call isIntegralType t)))
  }
  function _toSigned[251607](arg x[251604] :
  unknown t[251602]) : _unknown[51] "inline" "private"
  {
    (251623 return(251621 call _build_tuple(251617 call _cast int[13] 0) 0))
  }
  where {
    (251613 call !(251612 call _isIoPrimitiveType t))
  }
  function _toUnsigned[251636](arg x[251633] :
  unknown t[251631]) : _unknown[51] "inline" "private"
  {
    (251647 return(251645 call _build_tuple x 1))
  }
  where {
    (251641 call isUintType t)
  }
  function _toUnsigned[251662](arg x[251659] :
  (251658 call int[13] 8)) : _unknown[51] "inline" "private"
  {
    (251675 return(251673 call _build_tuple(251669 call _cast(251668 call uint[115] 8) x) 1))
  }
  function _toUnsigned[251689](arg x[251686] :
  (251685 call int[13] 16)) : _unknown[51] "inline" "private"
  {
    (251702 return(251700 call _build_tuple(251696 call _cast(251695 call uint[115] 16) x) 1))
  }
  function _toUnsigned[251716](arg x[251713] :
  (251712 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (251729 return(251727 call _build_tuple(251723 call _cast(251722 call uint[115] 32) x) 1))
  }
  function _toUnsigned[251743](arg x[251740] :
  (251739 call int[13] 64)) : _unknown[51] "inline" "private"
  {
    (251756 return(251754 call _build_tuple(251750 call _cast(251749 call uint[115] 64) x) 1))
  }
  function _toUnsigned[251768](arg x[251765] :
  unknown t[251763]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251787](251785 call _build_tuple uint[115] bool[10])
      (251790 'end of statement')
    }
    if(251820 call _cond_test(251795 call isAbstractEnumType t))
    {
      { scopeless
        (251805 call = ret(251803 call _build_tuple(251799 call _cast uint[115] 0) 0))
      }
    }
    {
      { scopeless
        (251817 call = ret(251815 call _build_tuple(251811 call _cast uint[115] x) 1))
      }
    }
    (251827 return ret)
  }
  where {
    (251780 call &&(251773 call _isIoPrimitiveType t)(251778 call !(251777 call isIntegralType t)))
  }
  function _toUnsigned[251839](arg x[251836] :
  unknown t[251834]) : _unknown[51] "inline" "private"
  {
    (251855 return(251853 call _build_tuple(251849 call _cast uint[115] 0) 0))
  }
  where {
    (251845 call !(251844 call _isIoPrimitiveType t))
  }
  function _toReal[251868](arg x[251865] :
  unknown t[251863]) : _unknown[51] "inline" "private"
  {
    (251879 return(251877 call _build_tuple x 1))
  }
  where {
    (251873 call isRealType t)
  }
  function _toReal[251892](arg x[251889] :
  unknown t[251887]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251911](251909 call _build_tuple real[16] bool[10])
      (251914 'end of statement')
    }
    if(251941 call _cond_test(251919 call isAbstractEnumType t))
    {
      { scopeless
        (251926 call = ret(251924 call _build_tuple 0.0 0))
      }
    }
    {
      { scopeless
        (251938 call = ret(251936 call _build_tuple(251932 call _cast real[16] x) 1))
      }
    }
    (251948 return ret)
  }
  where {
    (251904 call &&(251897 call _isIoPrimitiveType t)(251902 call !(251901 call isRealType t)))
  }
  function _toReal[251960](arg x[251957] :
  unknown t[251955]) : _unknown[51] "inline" "private"
  {
    (251973 return(251971 call _build_tuple 0.0 0))
  }
  where {
    (251966 call !(251965 call _isIoPrimitiveType t))
  }
  function _toImag[251986](arg x[251983] :
  unknown t[251981]) : _unknown[51] "inline" "private"
  {
    (251997 return(251995 call _build_tuple x 1))
  }
  where {
    (251991 call isImagType t)
  }
  function _toImag[252010](arg x[252007] :
  unknown t[252005]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252029](252027 call _build_tuple imag[130] bool[10])
      (252032 'end of statement')
    }
    if(252059 call _cond_test(252037 call isAbstractEnumType t))
    {
      { scopeless
        (252044 call = ret(252042 call _build_tuple 0.0i 0))
      }
    }
    {
      { scopeless
        (252056 call = ret(252054 call _build_tuple(252050 call _cast imag[130] x) 1))
      }
    }
    (252066 return ret)
  }
  where {
    (252022 call &&(252015 call _isIoPrimitiveType t)(252020 call !(252019 call isImagType t)))
  }
  function _toImag[252078](arg x[252075] :
  unknown t[252073]) : _unknown[51] "inline" "private"
  {
    (252091 return(252089 call _build_tuple 0.0i 0))
  }
  where {
    (252084 call !(252083 call _isIoPrimitiveType t))
  }
  function _toComplex[252104](arg x[252101] :
  unknown t[252099]) : _unknown[51] "inline" "private"
  {
    (252115 return(252113 call _build_tuple x 1))
  }
  where {
    (252109 call isComplexType t)
  }
  function _toComplex[252128](arg x[252125] :
  unknown t[252123]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252147](252145 call _build_tuple complex[140] bool[10])
      (252150 'end of statement')
    }
    if(252180 call _cond_test(252155 call isAbstractEnumType t))
    {
      { scopeless
        (252165 call = ret(252163 call _build_tuple(252159 call + 0.0 0.0i) 0))
      }
    }
    {
      { scopeless
        (252177 call = ret(252175 call _build_tuple(252171 call _cast complex[140] x) 1))
      }
    }
    (252187 return ret)
  }
  where {
    (252140 call &&(252133 call _isIoPrimitiveType t)(252138 call !(252137 call isComplexType t)))
  }
  function _toComplex[252199](arg x[252196] :
  unknown t[252194]) : _unknown[51] "inline" "private"
  {
    (252215 return(252213 call _build_tuple(252209 call + 0.0 0.0i) 0))
  }
  where {
    (252205 call !(252204 call _isIoPrimitiveType t))
  }
  function _toRealOrComplex[252228](arg x[252225] :
  unknown t[252223]) : _unknown[51] "inline" "private"
  {
    (252239 return(252237 call _build_tuple x 1))
  }
  where {
    (252233 call isComplexType t)
  }
  function _toRealOrComplex[252252](arg x[252249] :
  unknown t[252247]) : _unknown[51] "inline" "private"
  {
    (252263 return(252261 call _build_tuple x 1))
  }
  where {
    (252257 call isFloatType t)
  }
  function _toRealOrComplex[252276](arg x[252273] :
  unknown t[252271]) : _unknown[51] "inline" "private"
  {
    (252306 return(252304 call _build_tuple(252300 call _cast real[16] x) 1))
  }
  where {
    (252296 call &&(252288 call &&(252281 call _isIoPrimitiveType t)(252286 call !(252285 call isComplexType t)))(252294 call !(252293 call isFloatType t)))
  }
  function _toRealOrComplex[252319](arg x[252316] :
  unknown t[252314]) : _unknown[51] "inline" "private"
  {
    (252332 return(252330 call _build_tuple 0.0 0))
  }
  where {
    (252325 call !(252324 call _isIoPrimitiveType t))
  }
  function _toNumeric[252345](arg x[252342] :
  unknown t[252340]) : _unknown[51] "inline" "private"
  {
    (252356 return(252354 call _build_tuple x 1))
  }
  where {
    (252350 call isNumericType t)
  }
  function _toNumeric[252369](arg x[252366] :
  unknown t[252364]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252388](252386 call _build_tuple int[13] bool[10])
      (252391 'end of statement')
    }
    if(252418 call _cond_test(252396 call isAbstractEnumType t))
    {
      { scopeless
        (252403 call = ret(252401 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (252415 call = ret(252413 call _build_tuple(252409 call _cast int[13] x) 1))
      }
    }
    (252425 return ret)
  }
  where {
    (252381 call &&(252374 call _isIoPrimitiveType t)(252379 call !(252378 call isNumericType t)))
  }
  function _toNumeric[252437](arg x[252434] :
  unknown t[252432]) : _unknown[51] "inline" "private"
  {
    (252450 return(252448 call _build_tuple 0 0))
  }
  where {
    (252443 call !(252442 call _isIoPrimitiveType t))
  }
  function _toBytes[252462](arg x[252459] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252469 return(252467 call _build_tuple x 1))
  }
  function _toBytes[252480](arg x[252477] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252490 return(252488 call _build_tuple(252484 call _cast bytes[24] x) 1))
  }
  function _toBytes[252502](arg x[252499] :
  unknown t[252497]) : _unknown[51] "inline" "private"
  {
    (252528 return(252526 call _build_tuple(252522 call _cast bytes[24] "") 0))
  }
  function _toString[252539](arg x[252536] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252546 return(252544 call _build_tuple x 1))
  }
  function _toString[252557](arg x[252554] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252580 return(252578 call _build_tuple "" 0))
  }
  function _toString[252592](arg x[252589] :
  unknown t[252587]) : _unknown[51] "inline" "private"
  {
    (252618 return(252616 call _build_tuple(252612 call _cast string[26] x) 1))
  }
  where {
    (252608 call &&(252602 call &&(252597 call _isIoPrimitiveType t)(252600 call != t bytes[24]))(252606 call != t string[26]))
  }
  function _toString[252631](arg x[252628] :
  unknown t[252626]) : _unknown[51] "inline" "private"
  {
    (252660 return(252658 call _build_tuple "" 0))
  }
  where {
    (252637 call !(252636 call _isIoPrimitiveType t))
  }
  function _toChar[252673](arg x[252670] :
  unknown t[252668]) : _unknown[51] "inline" "private"
  {
    (252690 return(252688 call _build_tuple(252684 call _cast(252683 call int[13] 32) x) 1))
  }
  where {
    (252678 call isIntegralType t)
  }
  function _toChar[252703](arg x[252700] :
  unknown t[252698]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown chr[252713](252712 call int[13] 32)
      (252716 'end of statement')
    }
    { scopeless
      unknown nbytes[252719] c_int
      (252722 'end of statement')
    }
    { scopeless
      unknown local_x[252729](252728 call(252724 call . x c"localize"))
      (252732 'end of statement')
    }
    (252750 call qio_decode_char_buf chr nbytes(252742 call(252738 call . local_x c"c_str"))(252748 call _cast ssize_t(252744 call . local_x c"numBytes")))
    (252757 return(252755 call _build_tuple chr 1))
  }
  where {
    (252707 call == t string[26])
  }
  function _toChar[252769](arg x[252766] :
  unknown t[252764]) : _unknown[51] "inline" "private"
  {
    (252794 return(252792 call _build_tuple(252788 call _cast(252787 call int[13] 32) 0) 0))
  }
  where {
    (252781 call !(252779 call ||(252773 call == t string[26])(252778 call isIntegralType t)))
  }
  function _setIfPrimitive[252807](ref arg lhs[252804] :
  unknown t[252802], arg rhs[252811] :
  unknown t2[252809], arg argi[252815] :
  int[13]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown empty[252830] t2
      (252833 'end of statement')
    }
    if(252851 call _cond_test(252837 call == rhs empty))
    {
      (252841 call = lhs 0)
    }
    {
      (252847 call = lhs 1)
    }
    (252856 return ENOERR)
  }
  where {
    (252827 call &&(252821 call == t bool[10])(252826 call _isIoPrimitiveType t2))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[252869](ref arg lhs[252866] :
  unknown t[252864], arg rhs[252873] :
  unknown t2[252871], arg argi[252877] :
  int[13]) : _unknown[51] "inline" "private"
  {
    Try
    {
      {
        if(253000 call _cond_test(252894 call isAbstractEnumType t))
        {
          if(252912 call _cond_test(252898 call isStringType t2))
          {
            (252904 call = lhs(252902 call _cast t rhs))
          }
          {
            (252909 return ERANGE)
          }
        }
        {
          { scopeless
            if(252996 call _cond_test(252920 call isEnumType t))
            {
              if(252952 call _cond_test(252929 call ||(252924 call isIntType t2)(252928 call isStringType t2)))
              {
                (252936 call = lhs(252934 call _cast t rhs))
              }
              {
                (252948 call = lhs(252946 call _cast t(252943 call _cast int[13] rhs)))
              }
            }
            {
              if(252991 call _cond_test(252965 call &&(252960 call isBytesType t2)(252964 call isStringType t)))
              {
                (252978 call = lhs(252977 call(252969 call . rhs c"decode")(252973 call . decodePolicy c"strict")))
              }
              {
                (252987 call = lhs(252985 call _cast t rhs))
              }
            }
          }
        }
      }
    }
    Catch
    {
      (253008 return ERANGE)
    }
    (253016 return ENOERR)
  }
  where {
    (252889 call &&(252883 call != t bool[10])(252888 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[253029](ref arg lhs[253026] :
  unknown t[253024], arg rhs[253031]:_any[178](?), arg argi[253034] :
  int[13]) : _unknown[51] "inline" "private"
  {
    (253048 return(253047 call qio_format_error_arg_mismatch argi))
  }
  where {
    (253042 call !(253041 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfChar[253062](ref arg lhs[253059] :
  unknown t[253057], arg rhs[253068] :
  (253067 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253084 call = lhs(253082 call _cast string[26](253076 'new'(253080 call ioChar rhs))))
  }
  where {
    (253073 call == t string[26])
  }
  function _setIfChar[253098](ref arg lhs[253095] :
  unknown t[253093], arg rhs[253104] :
  (253103 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253116 call = lhs(253114 call _cast t rhs))
  }
  where {
    (253110 call isIntegralType t)
  }
  function _setIfChar[253130](ref arg lhs[253127] :
  unknown t[253125], arg rhs[253136] :
  (253135 call int[13] 32)) : _unknown[51] "inline" "private"
  {
  }
  where {
    (253149 call !(253147 call ||(253141 call == t string[26])(253146 call isIntegralType t)))
  }
  function _toRegexp[253162](arg x[253159] :
  unknown t[253157]) : _unknown[51] "inline" "private"
  {
    (253177 return(253175 call _build_tuple x 1))
  }
  where {
    (253171 call isSubtype t(253170 call regexp ?[260]))
  }
  function _toRegexp[253190](arg x[253187] :
  unknown t[253185]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown r[253196](253195 call regexp string[26])
      (253199 'end of statement')
    }
    (253206 return(253204 call _build_tuple r 0))
  }
  type _channel_regexp_info[253598] unknown hasRegexp[253212] 0 unknown matchedRegexp[253217] 0 unknown releaseRegexp[253222] 0 unknown theRegexp[253229](253228 call qio_regexp_null) unknown matches[253238] nil[44](253236 call _ddata qio_regexp_string_piece_t) unknown capArr[253247] nil[44](253245 call _ddata bytes[24]) unknown capturei[253252] int[13] unknown ncaptures[253257] int[13] function _channel_regexp_info[253598].clear[253263](arg _mt[253602]:_MT[238], arg this[253600]:_channel_regexp_info[253598]) : _unknown[51] "method" "primary method"
  {
    if(253272 call _cond_test releaseRegexp)
    {
      (253269 call qio_regexp_release theRegexp)
    }
    (253281 call = theRegexp(253280 call qio_regexp_null))
    (253286 call = hasRegexp 0)
    (253291 call = matchedRegexp 0)
    (253296 call = releaseRegexp 0)
    if(253309 call _cond_test matches)
    {
      { scopeless
        (253307 call _ddata_free matches(253305 call + ncaptures 1))
      }
    }
    {
      unknown _indexOfInterest[253344] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[253345] "expr temp" "temp"
      (253354 'move' _iterator[253345](253352 call _getIterator(253361 call chpl_direct_counted_range_iter 0 ncaptures)))
      Defer
      {
        {
          (253377 call _freeIterator _iterator[253345])
        }
      }
      { scopeless type
        (253366 'move' _indexOfInterest[253344](253363 call iteratorIndex _iterator[253345]))
      }
      ForLoop[253346]
      {
        unknown i[253370] "index var" "insert auto destroy"
        (253372 'move' i[253370] _indexOfInterest[253344])
        { scopeless
          (253341 call =(253324 call capArr i) b"")
        }
        label _continueLabel[253349]
        _indexOfInterest[253344]
        _iterator[253345]
      }
      label _breakLabel[253350]
    }
    if(253391 call _cond_test capArr)
    {
      { scopeless
        (253389 call _ddata_free capArr ncaptures)
      }
    }
  } function _channel_regexp_info[253598].allocate_captures[253400](arg _mt[253606]:_MT[238], arg this[253604]:_channel_regexp_info[253598]) : _unknown[51] "method" "primary method"
  {
    (253407 call = ncaptures(253406 call qio_regexp_get_ncaptures theRegexp))
    (253420 call = matches(253419 call _ddata_allocate qio_regexp_string_piece_t(253417 call + ncaptures 1)))
    (253429 call = capArr(253428 call _ddata_allocate bytes[24] ncaptures))
    (253434 call = capturei 0)
  } function _channel_regexp_info[253598].deinit[253441](arg _mt[253610]:_MT[238], arg this[253608]:_channel_regexp_info[253598]) : _unknown[51] "destructor" "method" "primary method"
  {
    (253445 call clear)
  } function _channel_regexp_info[253598].writeThis[253454](arg _mt[253614]:_MT[238], arg this[253612]:_channel_regexp_info[253598], arg f[253452]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides"
  {
    (253480 call <~> f(253478 call + "{hasRegexp = "(253476 call _cast string[26] hasRegexp)))
    (253508 call <~> f(253506 call + ", matchedRegexp = "(253504 call _cast string[26] matchedRegexp)))
    (253535 call <~> f(253533 call + ", releaseRegexp = "(253531 call _cast string[26] releaseRegexp)))
    (253562 call <~> f(253560 call + ", ... capturei = "(253558 call _cast string[26] capturei)))
    (253592 call <~> f(253590 call +(253587 call + ", ncaptures = "(253585 call _cast string[26] ncaptures)) "}"))
  }
  function _unknown[51]._match_regexp_if_needed[253624](arg _mt[253646]:_MT[238], arg this[253643] :
  channel, arg cur[253621] :
  size_t, arg len[253627] :
  size_t, ref arg error[253631] :
  syserr, ref arg style[253635] :
  iostyle, arg r[253640] :
  (253639 'to unmanaged class from unknown' _channel_regexp_info)) : _unknown[51] "method" "no doc"
  {
    if(254047 call _cond_test(253656 call qio_regexp_ok(253652 call . r c"theRegexp")))
    {
      if(253665 call _cond_test(253660 call . r c"matchedRegexp"))
      {
        { scopeless
          (253663 return)
        }
      }
      (253676 call =(253672 call . r c"matchedRegexp") 1)
      (253686 call(253682 call . r c"allocate_captures"))
      { scopeless
        unknown ncaps[253694](253691 call . r c"ncaptures")
        (253697 'end of statement')
      }
      { scopeless
        unknown nm[253702](253700 call + ncaps 1)
        (253705 'end of statement')
      }
      { scopeless
        unknown maxlen[253716](253713 call . style c"max_width_characters")(253709 call int[13] 64)
        (253719 'end of statement')
      }
      { scopeless
        unknown can_discard[253724](253722 call == cur len)
        (253727 'end of statement')
      }
      if(253749 call _cond_test(253736 call == maxlen(253735 call max(253733 call uint[115] 32))))
      {
        { scopeless
          (253746 call = maxlen(253745 call max(253743 call int[13] 64)))
        }
      }
      { scopeless
        unknown before_match[253758](253757 call qio_channel_offset_unlocked _channel_internal)
        (253761 'end of statement')
      }
      (253784 call = error(253783 call qio_regexp_channel_match(253765 call . r c"theRegexp") 0 _channel_internal maxlen QIO_REGEXP_ANCHOR_START can_discard 1 0(253779 call . r c"matches") nm))
      { scopeless
        unknown after_match[253791](253790 call qio_channel_offset_unlocked _channel_internal)
        (253794 'end of statement')
      }
      if(254033 call _cond_test(253796 call ! error))
      {
        {
          unknown _indexOfInterest[253847] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253848] "expr temp" "temp"
          (253857 'move' _iterator[253848](253855 call _getIterator(253864 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (253880 call _freeIterator _iterator[253848])
            }
          }
          { scopeless type
            (253869 'move' _indexOfInterest[253847](253866 call iteratorIndex _iterator[253848]))
          }
          ForLoop[253849]
          {
            unknown j[253873] "index var" "insert auto destroy"
            (253875 'move' j[253873] _indexOfInterest[253847])
            {
              { scopeless
                unknown m[253818](253817 call _to_reMatch(253815 call(253807 call . r c"matches")(253812 call + 1 j)))
                (253821 'end of statement')
              }
              (253836 call _extractMatch m(253834 call(253829 call . r c"capArr") j) error)
              if(253842 call _cond_test error)
              {
                { scopeless
                  break nil[44]
                }
              }
            }
            label _continueLabel[253852]
            _indexOfInterest[253847]
            _iterator[253848]
          }
          label _breakLabel[253853]
        }
        { scopeless
          unknown cur[253892](253891 call qio_channel_offset_unlocked _channel_internal)
          (253895 'end of statement')
        }
        { scopeless
          unknown target[253923](253921 call _cast int[13](253918 call +(253903 call .(253902 call(253897 call . r c"matches") 0) c"offset")(253915 call .(253912 call(253907 call . r c"matches") 0) c"len")))
          (253926 'end of statement')
        }
        (253937 call = error(253936 call qio_channel_advance 0 _channel_internal(253934 call - target cur)))
      }
      {
        {
          unknown _indexOfInterest[253974] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253975] "expr temp" "temp"
          (253984 'move' _iterator[253975](253982 call _getIterator(253991 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (254007 call _freeIterator _iterator[253975])
            }
          }
          { scopeless type
            (253996 'move' _indexOfInterest[253974](253993 call iteratorIndex _iterator[253975]))
          }
          ForLoop[253976]
          {
            unknown j[254000] "index var" "insert auto destroy"
            (254002 'move' j[254000] _indexOfInterest[253974])
            {
              (253970 call =(253953 call(253948 call . r c"capArr") j) b"")
            }
            label _continueLabel[253979]
            _indexOfInterest[253974]
            _iterator[253975]
          }
          label _breakLabel[253980]
        }
        { scopeless
          unknown cur[254019](254018 call qio_channel_offset_unlocked _channel_internal)
          (254022 'end of statement')
        }
        (254031 call qio_channel_advance 0 _channel_internal(254029 call - before_match cur))
      }
    }
    {
      (254041 call = error(254040 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function _unknown[51]._format_reader[254062](arg _mt[254101]:_MT[238], arg this[254098] :
  channel, arg fmtStr[254059] :
  unknown fmtType[254057], ref arg cur[254065] :
  size_t, arg len[254069] :
  size_t, ref arg error[254073] :
  syserr, ref arg conv[254077] :
  qio_conv_t, ref arg gotConv[254081] :
  bool[10], ref arg style[254085] :
  iostyle, ref arg r[254091] :
  (254090 'to unmanaged class from unknown'(254089 'to nilable class from type' _channel_regexp_info)), arg isReadf[254095] :
  bool[10]) : _unknown[51] "method" "no doc"
  {
    if(254119 call _cond_test(254105 call != r nil[44]))
    {
      { scopeless
        (254116 call =(254112 call .(254108 call postfix! r) c"hasRegexp") 0)
      }
    }
    if(254650 call _cond_test(254126 call ! error))
    {
      { scopeless
        unknown fmt[254139](254138 call(254134 call .(254133 call(254129 call . fmtStr c"localize")) c"c_str"))
        (254142 'end of statement')
      }
      {
        unknown tmp[254623] "temp"
        (254647 'move' tmp[254623](254642 call _cond_test(254644 call < cur len)))
        WhileDo[254628]
        {
          {
            (254150 call = gotConv 0)
            if(254158 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            { scopeless
              unknown end[254167](254166 call uint[115] 64)
              (254170 'end of statement')
            }
            (254181 call = error(254180 call qio_conv_parse fmt cur end isReadf conv style))
            if(254186 call _cond_test error)
            {
            }
            (254195 call = cur(254193 call _cast size_t end))
            if(254202 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            if(254618 call _cond_test(254214 call ==(254210 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL))
            {
              if(254387 call _cond_test isReadf)
              {
                if(254360 call _cond_test(254224 call ==(254220 call . conv c"literal_is_whitespace") 2))
                {
                  { scopeless
                    unknown offsetA[254230](254229 call qio_channel_offset_unlocked _channel_internal)
                    (254233 'end of statement')
                  }
                  (254242 call = error(254241 call qio_channel_skip_past_newline 0 _channel_internal 1))
                  { scopeless
                    unknown offsetB[254249](254248 call qio_channel_offset_unlocked _channel_internal)
                    (254252 'end of statement')
                  }
                  if(254268 call _cond_test(254260 call &&(254254 call ! error)(254258 call == offsetA offsetB)))
                  {
                    (254264 call = error EFORMAT)
                  }
                }
                {
                  { scopeless
                    if(254356 call _cond_test(254277 call ==(254273 call . conv c"literal_is_whitespace") 1))
                    {
                      { scopeless
                        unknown offsetA[254283](254282 call qio_channel_offset_unlocked _channel_internal)
                        (254286 'end of statement')
                      }
                      (254302 call = error(254301 call qio_channel_scan_literal_2 0 _channel_internal(254296 call . conv c"literal") 0 1))
                      { scopeless
                        unknown offsetB[254309](254308 call qio_channel_offset_unlocked _channel_internal)
                        (254312 'end of statement')
                      }
                      if(254328 call _cond_test(254320 call &&(254314 call ! error)(254318 call == offsetA offsetB)))
                      {
                        (254324 call = error EFORMAT)
                      }
                    }
                    {
                      (254352 call = error(254351 call qio_channel_scan_literal_2 0 _channel_internal(254338 call . conv c"literal")(254348 call _cast ssize_t(254344 call . conv c"literal_length")) 0))
                    }
                  }
                }
              }
              {
                (254383 call = error(254382 call qio_channel_print_literal_2 0 _channel_internal(254372 call . conv c"literal")(254380 call _cast ssize_t(254376 call . conv c"literal_length"))))
              }
            }
            {
              { scopeless
                if(254614 call _cond_test(254397 call ==(254393 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL))
                {
                  if(254600 call _cond_test(254400 call ! isReadf))
                  {
                    (254406 call = error(254405 call qio_format_error_write_regexp))
                  }
                  {
                    if(254424 call _cond_test(254412 call == r nil[44]))
                    {
                      { scopeless
                        (254421 call = r(254417 'new'(_chpl_manager = unmanaged[220](?))(254420 call _channel_regexp_info)))
                      }
                    }
                    { scopeless
                      const rnn[254433] "const"(254431 call postfix! r)
                      (254436 'end of statement')
                    }
                    (254442 call(254438 call . rnn c"clear"))
                    { scopeless
                      unknown errstr[254445] string[26]
                      (254448 'end of statement')
                    }
                    (254483 call qio_regexp_create_compile_flags_2(254453 call . conv c"regexp")(254460 call . conv c"regexp_length")(254466 call . conv c"regexp_flags")(254472 call . conv c"regexp_flags_length")(254477 call == fmtType string[26])(254480 call . rnn c"theRegexp"))
                    (254492 call =(254488 call . rnn c"releaseRegexp") 1)
                    if(254596 call _cond_test(254501 call qio_regexp_ok(254497 call . rnn c"theRegexp")))
                    {
                      (254507 call =(254503 call . rnn c"hasRegexp") 1)
                      (254522 call =(254512 call . rnn c"ncaptures")(254521 call qio_regexp_get_ncaptures(254517 call . rnn c"theRegexp")))
                      if(254584 call _cond_test(254563 call ||(254552 call ||(254541 call ||(254530 call >(254526 call . rnn c"ncaptures") 0)(254539 call !=(254535 call . conv c"preArg1") QIO_CONV_UNK))(254550 call !=(254546 call . conv c"preArg2") QIO_CONV_UNK))(254561 call !=(254557 call . conv c"preArg3") QIO_CONV_UNK)))
                      {
                        (254567 call = gotConv 1)
                        break nil[44]
                      }
                      {
                        (254581 call _match_regexp_if_needed cur len error style rnn)
                      }
                    }
                    {
                      (254592 call = error(254591 call qio_format_error_bad_regexp))
                    }
                  }
                }
                {
                  (254607 call = gotConv 1)
                  break nil[44]
                }
              }
            }
          }
          label _continueLabel[254626]
          (254637 'move' tmp[254623](254632 call _cond_test(254634 call < cur len)))
          tmp[254623]
        }
        label _breakLabel[254627]
      }
    }
  }
  function _unknown[51]._conv_helper[254663](arg _mt[254682]:_MT[238], arg this[254679] :
  channel, ref arg error[254660] :
  syserr, ref arg conv[254666] :
  qio_conv_t, ref arg gotConv[254670] :
  bool[10], ref arg j[254674] :
  int[13], ref arg argType[254677]:_any[178](?)) : _unknown[51] "method" "no doc"
  {
    if(254687 call _cond_test error)
    {
      { scopeless
        (254685 return)
      }
    }
    if(254819 call _cond_test gotConv)
    {
      if(254718 call _cond_test(254699 call !=(254695 call . conv c"preArg1") QIO_CONV_UNK))
      {
        (254709 call =(254704 call argType j)(254706 call . conv c"preArg1"))
        (254715 call += j 1)
      }
      if(254747 call _cond_test(254728 call !=(254724 call . conv c"preArg2") QIO_CONV_UNK))
      {
        (254738 call =(254733 call argType j)(254735 call . conv c"preArg2"))
        (254744 call += j 1)
      }
      if(254775 call _cond_test(254756 call !=(254752 call . conv c"preArg3") QIO_CONV_UNK))
      {
        (254766 call =(254761 call argType j)(254763 call . conv c"preArg3"))
        (254772 call += j 1)
      }
      if(254815 call _cond_test(254784 call !=(254780 call . conv c"argType") QIO_CONV_UNK))
      {
        if(254805 call _cond_test(254791 call ==(254789 call argType j) QIO_CONV_UNK))
        {
          (254801 call =(254796 call argType j)(254798 call . conv c"argType"))
        }
        (254812 call += j 1)
      }
    }
  }
  function _unknown[51]._conv_sethandler[254832](arg _mt[254855]:_MT[238], arg this[254852] :
  channel, ref arg error[254829] :
  syserr, arg argtypei[254835] :
  c_int, ref arg style[254839] :
  iostyle, arg i[254843] :
  int[13], arg argi[254846]:_any[178](?), arg isReadf[254849] :
  bool[10]) : _unknown[51] throws "method" "no doc"
  {
    if(254862 call _cond_test error)
    {
      { scopeless
        (254860 return 0)
      }
    }
    {
      unknown tmp[255489] "expr temp" "maybe param" "maybe type" "temp"
      (255491 'move' tmp[255489] argtypei)
      if(255496 call _cond_test(255493 call == tmp[255489] QIO_CONV_SET_MIN_WIDTH_COLS))
      {
        { scopeless
          unknown tmp[254881] "temp"(254880 call _toIntegral argi)
          (254888 call _check_tuple_var_decl tmp[254881] 2)
          unknown t[254872](254882 call tmp[254881] 0)
          unknown ok[254874](254885 call tmp[254881] 1)
          (254893 'end of statement')
        }
        if(254923 call _cond_test(254896 call ! ok))
        {
          (254903 call = error(254902 call qio_format_error_arg_mismatch i))
        }
        {
          { scopeless
            (254920 call =(254910 call . style c"min_width_columns")(254918 call _cast(254917 call uint[115] 32) t))
          }
        }
      }
      {
        if(255502 call _cond_test(255499 call == tmp[255489] QIO_CONV_SET_MAX_WIDTH_COLS))
        {
          { scopeless
            unknown tmp[254941] "temp"(254940 call _toIntegral argi)
            (254948 call _check_tuple_var_decl tmp[254941] 2)
            unknown t[254932](254942 call tmp[254941] 0)
            unknown ok[254934](254945 call tmp[254941] 1)
            (254953 'end of statement')
          }
          if(254983 call _cond_test(254956 call ! ok))
          {
            (254963 call = error(254962 call qio_format_error_arg_mismatch i))
          }
          {
            { scopeless
              (254980 call =(254970 call . style c"max_width_columns")(254978 call _cast(254977 call uint[115] 32) t))
            }
          }
        }
        {
          if(255509 call _cond_test(255506 call == tmp[255489] QIO_CONV_SET_MAX_WIDTH_CHARS))
          {
            { scopeless
              unknown tmp[255001] "temp"(255000 call _toIntegral argi)
              (255008 call _check_tuple_var_decl tmp[255001] 2)
              unknown t[254992](255002 call tmp[255001] 0)
              unknown ok[254994](255005 call tmp[255001] 1)
              (255013 'end of statement')
            }
            if(255041 call _cond_test(255016 call ! ok))
            {
              (255023 call = error(255022 call qio_format_error_arg_mismatch i))
            }
            {
              { scopeless
                (255038 call =(255028 call . style c"max_width_characters")(255036 call _cast(255035 call uint[115] 32) t))
              }
            }
          }
          {
            if(255516 call _cond_test(255513 call == tmp[255489] QIO_CONV_SET_MAX_WIDTH_BYTES))
            {
              { scopeless
                unknown tmp[255059] "temp"(255058 call _toIntegral argi)
                (255066 call _check_tuple_var_decl tmp[255059] 2)
                unknown t[255050](255060 call tmp[255059] 0)
                unknown ok[255052](255063 call tmp[255059] 1)
                (255071 'end of statement')
              }
              if(255101 call _cond_test(255074 call ! ok))
              {
                (255081 call = error(255080 call qio_format_error_arg_mismatch i))
              }
              {
                { scopeless
                  (255098 call =(255088 call . style c"max_width_bytes")(255096 call _cast(255095 call uint[115] 32) t))
                }
              }
            }
            {
              if(255523 call _cond_test(255520 call == tmp[255489] QIO_CONV_SET_PRECISION))
              {
                { scopeless
                  unknown tmp[255119] "temp"(255118 call _toIntegral argi)
                  (255126 call _check_tuple_var_decl tmp[255119] 2)
                  unknown t[255110](255120 call tmp[255119] 0)
                  unknown ok[255112](255123 call tmp[255119] 1)
                  (255131 'end of statement')
                }
                if(255161 call _cond_test(255134 call ! ok))
                {
                  (255141 call = error(255140 call qio_format_error_arg_mismatch i))
                }
                {
                  { scopeless
                    (255158 call =(255148 call . style c"precision")(255156 call _cast(255155 call int[13] 32) t))
                  }
                }
              }
              {
                if(255530 call _cond_test(255527 call == tmp[255489] QIO_CONV_SET_STRINGSTART))
                {
                  { scopeless
                    unknown tmp[255179] "temp"(255178 call _toChar argi)
                    (255186 call _check_tuple_var_decl tmp[255179] 2)
                    unknown t[255170](255180 call tmp[255179] 0)
                    unknown ok[255172](255183 call tmp[255179] 1)
                    (255191 'end of statement')
                  }
                  if(255218 call _cond_test(255194 call ! ok))
                  {
                    (255201 call = error(255200 call qio_format_error_arg_mismatch i))
                  }
                  {
                    { scopeless
                      (255215 call =(255208 call . style c"string_start")(255213 call _cast style_char_t t))
                    }
                  }
                }
                {
                  if(255537 call _cond_test(255534 call == tmp[255489] QIO_CONV_SET_STRINGEND))
                  {
                    { scopeless
                      unknown tmp[255236] "temp"(255235 call _toChar argi)
                      (255243 call _check_tuple_var_decl tmp[255236] 2)
                      unknown t[255227](255237 call tmp[255236] 0)
                      unknown ok[255229](255240 call tmp[255236] 1)
                      (255248 'end of statement')
                    }
                    if(255273 call _cond_test(255251 call ! ok))
                    {
                      (255258 call = error(255257 call qio_format_error_arg_mismatch i))
                    }
                    {
                      { scopeless
                        (255270 call =(255263 call . style c"string_end")(255268 call _cast style_char_t t))
                      }
                    }
                  }
                  {
                    if(255544 call _cond_test(255541 call == tmp[255489] QIO_CONV_SET_STRINGSTARTEND))
                    {
                      { scopeless
                        unknown tmp[255291] "temp"(255290 call _toChar argi)
                        (255298 call _check_tuple_var_decl tmp[255291] 2)
                        unknown t[255282](255292 call tmp[255291] 0)
                        unknown ok[255284](255295 call tmp[255291] 1)
                        (255303 'end of statement')
                      }
                      if(255340 call _cond_test(255306 call ! ok))
                      {
                        (255313 call = error(255312 call qio_format_error_arg_mismatch i))
                      }
                      {
                        (255325 call =(255318 call . style c"string_start")(255323 call _cast style_char_t t))
                        (255337 call =(255330 call . style c"string_end")(255335 call _cast style_char_t t))
                      }
                    }
                    {
                      if(255551 call _cond_test(255548 call == tmp[255489] QIO_CONV_SET_STRINGLEN))
                      {
                        { scopeless
                          unknown tmp[255357] "temp"(255356 call _toIntegral argi)
                          (255364 call _check_tuple_var_decl tmp[255357] 2)
                          unknown t[255348](255358 call tmp[255357] 0)
                          unknown ok[255350](255361 call tmp[255357] 1)
                          (255369 'end of statement')
                        }
                        if(255398 call _cond_test(255372 call ! ok))
                        {
                          (255379 call = error(255378 call qio_format_error_arg_mismatch i))
                        }
                        {
                          (255394 call =(255384 call . style c"str_style")(255392 call _cast(255391 call int[13] 64) t))
                        }
                      }
                      {
                        if(255558 call _cond_test(255555 call == tmp[255489] QIO_CONV_SET_TERMINATOR))
                        {
                          { scopeless
                            unknown tmp[255415] "temp"(255414 call _toChar argi)
                            (255422 call _check_tuple_var_decl tmp[255415] 2)
                            unknown t[255406](255416 call tmp[255415] 0)
                            unknown ok[255408](255419 call tmp[255415] 1)
                            (255427 'end of statement')
                          }
                          if(255459 call _cond_test(255430 call ! ok))
                          {
                            (255437 call = error(255436 call qio_format_error_arg_mismatch i))
                          }
                          {
                            (255455 call =(255442 call . style c"str_style")(255454 call stringStyleTerminated(255451 call _cast(255450 call uint[115] 8) t)))
                          }
                        }
                        {
                          if(255565 call _cond_test(255562 call == tmp[255489] QIO_CONV_SET_DONE))
                          {
                          }
                          {
                            if(255572 call _cond_test(255569 call == tmp[255489] QIO_CONV_UNK))
                            {
                              (255476 call = error(255475 call qio_format_error_too_many_args))
                            }
                            {
                              (255483 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (255578 return 0)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51]._write_signed[255593](arg _mt[255606]:_MT[238], arg this[255603] :
  channel, arg width[255590] :
  (255589 call uint[115] 32), arg t[255596] :
  int[13], arg i[255600] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255610] syserr
      (255613 'end of statement')
    }
    { scopeless
      unknown byteorder[255619](255618 call qio_channel_byteorder _channel_internal)
      (255622 'end of statement')
    }
    {
      unknown tmp[255744] "expr temp" "maybe param" "maybe type" "temp"
      (255746 'move' tmp[255744] width)
      if(255751 call _cond_test(255748 call == tmp[255744] 1))
      {
        { scopeless
          unknown x[255634](255632 call _cast(255631 call int[13] 8) t)
          (255637 'end of statement')
        }
        (255646 call = err(255645 call qio_channel_write_int8 0 _channel_internal x))
      }
      {
        if(255757 call _cond_test(255754 call == tmp[255744] 2))
        {
          { scopeless
            unknown x[255660](255658 call _cast(255657 call int[13] 16) t)
            (255663 'end of statement')
          }
          (255673 call = err(255672 call qio_channel_write_int16 0 byteorder _channel_internal x))
        }
        {
          if(255764 call _cond_test(255761 call == tmp[255744] 4))
          {
            { scopeless
              unknown x[255687](255685 call _cast(255684 call int[13] 32) t)
              (255690 'end of statement')
            }
            (255700 call = err(255699 call qio_channel_write_int32 0 byteorder _channel_internal x))
          }
          {
            if(255771 call _cond_test(255768 call == tmp[255744] 8))
            {
              { scopeless
                unknown x[255714](255712 call _cast(255711 call int[13] 64) t)
                (255717 'end of statement')
              }
              (255727 call = err(255726 call qio_channel_write_int64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (255737 call = err(255736 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255777 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._read_signed[255792](arg _mt[255805]:_MT[238], arg this[255802] :
  channel, arg width[255789] :
  (255788 call uint[115] 32), out arg t[255795] :
  int[13], arg i[255799] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255809] syserr
      (255812 'end of statement')
    }
    { scopeless
      unknown byteorder[255818](255817 call qio_channel_byteorder _channel_internal)
      (255821 'end of statement')
    }
    {
      unknown tmp[255951] "expr temp" "maybe param" "maybe type" "temp"
      (255953 'move' tmp[255951] width)
      if(255958 call _cond_test(255955 call == tmp[255951] 1))
      {
        { scopeless
          unknown x[255830](255829 call int[13] 8)
          (255833 'end of statement')
        }
        (255842 call = err(255841 call qio_channel_read_int8 0 _channel_internal x))
        (255847 call = t x)
      }
      {
        if(255964 call _cond_test(255961 call == tmp[255951] 2))
        {
          { scopeless
            unknown x[255858](255857 call int[13] 16)
            (255861 'end of statement')
          }
          (255871 call = err(255870 call qio_channel_read_int16 0 byteorder _channel_internal x))
          (255876 call = t x)
        }
        {
          if(255971 call _cond_test(255968 call == tmp[255951] 4))
          {
            { scopeless
              unknown x[255887](255886 call int[13] 32)
              (255890 'end of statement')
            }
            (255900 call = err(255899 call qio_channel_read_int32 0 byteorder _channel_internal x))
            (255905 call = t x)
          }
          {
            if(255978 call _cond_test(255975 call == tmp[255951] 8))
            {
              { scopeless
                unknown x[255916](255915 call int[13] 64)
                (255919 'end of statement')
              }
              (255929 call = err(255928 call qio_channel_read_int64 0 byteorder _channel_internal x))
              (255934 call = t x)
            }
            {
              { scopeless
                (255944 call = err(255943 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255984 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._write_unsigned[255999](arg _mt[256012]:_MT[238], arg this[256009] :
  channel, arg width[255996] :
  (255995 call uint[115] 32), arg t[256002] :
  uint[115], arg i[256006] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256015] syserr
      (256018 'end of statement')
    }
    { scopeless
      unknown byteorder[256024](256023 call qio_channel_byteorder _channel_internal)
      (256027 'end of statement')
    }
    {
      unknown tmp[256149] "expr temp" "maybe param" "maybe type" "temp"
      (256151 'move' tmp[256149] width)
      if(256156 call _cond_test(256153 call == tmp[256149] 1))
      {
        { scopeless
          unknown x[256039](256037 call _cast(256036 call uint[115] 8) t)
          (256042 'end of statement')
        }
        (256051 call = err(256050 call qio_channel_write_uint8 0 _channel_internal x))
      }
      {
        if(256162 call _cond_test(256159 call == tmp[256149] 2))
        {
          { scopeless
            unknown x[256065](256063 call _cast(256062 call uint[115] 16) t)
            (256068 'end of statement')
          }
          (256078 call = err(256077 call qio_channel_write_uint16 0 byteorder _channel_internal x))
        }
        {
          if(256169 call _cond_test(256166 call == tmp[256149] 4))
          {
            { scopeless
              unknown x[256092](256090 call _cast(256089 call uint[115] 32) t)
              (256095 'end of statement')
            }
            (256105 call = err(256104 call qio_channel_write_uint32 0 byteorder _channel_internal x))
          }
          {
            if(256176 call _cond_test(256173 call == tmp[256149] 8))
            {
              { scopeless
                unknown x[256119](256117 call _cast(256116 call uint[115] 64) t)
                (256122 'end of statement')
              }
              (256132 call = err(256131 call qio_channel_write_uint64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (256142 call = err(256141 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256182 return err)
  }
  function _unknown[51]._read_unsigned[256196](arg _mt[256209]:_MT[238], arg this[256206] :
  channel, arg width[256193] :
  (256192 call uint[115] 32), out arg t[256199] :
  uint[115], arg i[256203] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256212] syserr
      (256215 'end of statement')
    }
    { scopeless
      unknown byteorder[256221](256220 call qio_channel_byteorder _channel_internal)
      (256224 'end of statement')
    }
    {
      unknown tmp[256354] "expr temp" "maybe param" "maybe type" "temp"
      (256356 'move' tmp[256354] width)
      if(256361 call _cond_test(256358 call == tmp[256354] 1))
      {
        { scopeless
          unknown x[256233](256232 call uint[115] 8)
          (256236 'end of statement')
        }
        (256245 call = err(256244 call qio_channel_read_uint8 0 _channel_internal x))
        (256250 call = t x)
      }
      {
        if(256367 call _cond_test(256364 call == tmp[256354] 2))
        {
          { scopeless
            unknown x[256261](256260 call uint[115] 16)
            (256264 'end of statement')
          }
          (256274 call = err(256273 call qio_channel_read_uint16 0 byteorder _channel_internal x))
          (256279 call = t x)
        }
        {
          if(256374 call _cond_test(256371 call == tmp[256354] 4))
          {
            { scopeless
              unknown x[256290](256289 call uint[115] 32)
              (256293 'end of statement')
            }
            (256303 call = err(256302 call qio_channel_read_uint32 0 byteorder _channel_internal x))
            (256308 call = t x)
          }
          {
            if(256381 call _cond_test(256378 call == tmp[256354] 8))
            {
              { scopeless
                unknown x[256319](256318 call uint[115] 64)
                (256322 'end of statement')
              }
              (256332 call = err(256331 call qio_channel_read_uint64 0 byteorder _channel_internal x))
              (256337 call = t x)
            }
            {
              { scopeless
                (256347 call = err(256346 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256387 return err)
  }
  function _unknown[51]._write_real[256401](arg _mt[256414]:_MT[238], arg this[256411] :
  channel, arg width[256398] :
  (256397 call uint[115] 32), arg t[256404] :
  real[16], arg i[256408] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256417] syserr
      (256420 'end of statement')
    }
    { scopeless
      unknown byteorder[256426](256425 call qio_channel_byteorder _channel_internal)
      (256429 'end of statement')
    }
    {
      unknown tmp[256498] "expr temp" "maybe param" "maybe type" "temp"
      (256500 'move' tmp[256498] width)
      if(256505 call _cond_test(256502 call == tmp[256498] 4))
      {
        { scopeless
          unknown x[256441](256439 call _cast(256438 call real[16] 32) t)
          (256444 'end of statement')
        }
        (256454 call = err(256453 call qio_channel_write_float32 0 byteorder _channel_internal x))
      }
      {
        if(256511 call _cond_test(256508 call == tmp[256498] 8))
        {
          { scopeless
            unknown x[256468](256466 call _cast(256465 call real[16] 64) t)
            (256471 'end of statement')
          }
          (256481 call = err(256480 call qio_channel_write_float64 0 byteorder _channel_internal x))
        }
        {
          { scopeless
            (256491 call = err(256490 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256517 return err)
  }
  function _unknown[51]._read_real[256531](arg _mt[256544]:_MT[238], arg this[256541] :
  channel, arg width[256528] :
  (256527 call uint[115] 32), out arg t[256534] :
  real[16], arg i[256538] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256547] syserr
      (256550 'end of statement')
    }
    { scopeless
      unknown byteorder[256556](256555 call qio_channel_byteorder _channel_internal)
      (256559 'end of statement')
    }
    {
      unknown tmp[256632] "expr temp" "maybe param" "maybe type" "temp"
      (256634 'move' tmp[256632] width)
      if(256639 call _cond_test(256636 call == tmp[256632] 4))
      {
        { scopeless
          unknown x[256568](256567 call real[16] 32)
          (256571 'end of statement')
        }
        (256581 call = err(256580 call qio_channel_read_float32 0 byteorder _channel_internal x))
        (256586 call = t x)
      }
      {
        if(256645 call _cond_test(256642 call == tmp[256632] 8))
        {
          { scopeless
            unknown x[256597](256596 call real[16] 64)
            (256600 'end of statement')
          }
          (256610 call = err(256609 call qio_channel_read_float64 0 byteorder _channel_internal x))
          (256615 call = t x)
        }
        {
          { scopeless
            (256625 call = err(256624 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256651 return err)
  }
  function _unknown[51]._write_complex[256665](arg _mt[256678]:_MT[238], arg this[256675] :
  channel, arg width[256662] :
  (256661 call uint[115] 32), arg t[256668] :
  complex[140], arg i[256672] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256682] ENOERR syserr
      (256685 'end of statement')
    }
    { scopeless
      unknown byteorder[256691](256690 call qio_channel_byteorder _channel_internal)
      (256694 'end of statement')
    }
    {
      unknown tmp[256833] "expr temp" "maybe param" "maybe type" "temp"
      (256835 'move' tmp[256833] width)
      if(256840 call _cond_test(256837 call == tmp[256833] 8))
      {
        { scopeless
          unknown x[256706](256704 call _cast(256703 call complex[140] 64) t)
          (256709 'end of statement')
        }
        { scopeless
          unknown re[256715](256712 call . x c"re")
          (256718 'end of statement')
        }
        { scopeless
          unknown im[256723](256720 call . x c"im")
          (256726 'end of statement')
        }
        (256735 call = err(256734 call qio_channel_write_float32 0 byteorder _channel_internal re))
        if(256753 call _cond_test(256739 call ! err))
        {
          (256749 call = err(256748 call qio_channel_write_float32 0 byteorder _channel_internal im))
        }
      }
      {
        if(256846 call _cond_test(256843 call == tmp[256833] 16))
        {
          { scopeless
            unknown x[256768](256766 call _cast(256765 call complex[140] 128) t)
            (256771 'end of statement')
          }
          { scopeless
            unknown re[256777](256774 call . x c"re")
            (256780 'end of statement')
          }
          { scopeless
            unknown im[256785](256782 call . x c"im")
            (256788 'end of statement')
          }
          (256797 call = err(256796 call qio_channel_write_float64 0 byteorder _channel_internal re))
          if(256815 call _cond_test(256801 call ! err))
          {
            (256811 call = err(256810 call qio_channel_write_float64 0 byteorder _channel_internal im))
          }
        }
        {
          { scopeless
            (256826 call = err(256825 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256852 return err)
  }
  function _unknown[51]._read_complex[256866](arg _mt[256879]:_MT[238], arg this[256876] :
  channel, arg width[256863] :
  (256862 call uint[115] 32), out arg t[256869] :
  complex[140], arg i[256873] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256883] ENOERR syserr
      (256886 'end of statement')
    }
    { scopeless
      unknown byteorder[256892](256891 call qio_channel_byteorder _channel_internal)
      (256895 'end of statement')
    }
    {
      unknown tmp[257072] "expr temp" "maybe param" "maybe type" "temp"
      (257074 'move' tmp[257072] width)
      if(257079 call _cond_test(257076 call == tmp[257072] 8))
      {
        { scopeless
          unknown x[256904](256903 call complex[140] 64)
          (256907 'end of statement')
        }
        { scopeless
          unknown re[256914](256913 'typeof'(256910 call . x c"re"))
          (256917 'end of statement')
        }
        { scopeless
          unknown im[256923](256922 'typeof'(256919 call . x c"im"))
          (256926 'end of statement')
        }
        (256935 call = err(256934 call qio_channel_read_float32 0 byteorder _channel_internal re))
        if(256953 call _cond_test(256939 call ! err))
        {
          (256949 call = err(256948 call qio_channel_read_float32 0 byteorder _channel_internal im))
        }
        (256969 call = x(256967 call _cast(256966 call complex[140] 64)(256961 call _build_tuple re im)))
        (256974 call = t x)
      }
      {
        if(257085 call _cond_test(257082 call == tmp[257072] 16))
        {
          { scopeless
            unknown x[256985](256984 call complex[140] 128)
            (256988 'end of statement')
          }
          { scopeless
            unknown re[256995](256994 'typeof'(256991 call . x c"re"))
            (256998 'end of statement')
          }
          { scopeless
            unknown im[257004](257003 'typeof'(257000 call . x c"im"))
            (257007 'end of statement')
          }
          (257016 call = err(257015 call qio_channel_read_float64 0 byteorder _channel_internal re))
          if(257034 call _cond_test(257020 call ! err))
          {
            (257030 call = err(257029 call qio_channel_read_float64 0 byteorder _channel_internal im))
          }
          (257050 call = x(257048 call _cast(257047 call complex[140] 128)(257042 call _build_tuple re im)))
          (257055 call = t x)
        }
        {
          { scopeless
            (257065 call = err(257064 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (257091 return err)
  }
  function _unknown[51].writef[257103](arg _mt[257113]:_MT[238], arg this[257110] :
  channel, arg fmtStr[257100] :
  unknown t[257098], const arg args[257107]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(257150 call _cond_test(257127 call ! writing))
    {
      { scopeless
        (257148 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      const origLocale[257162] "const"(257161 call(257157 call . this c"getLocaleOfIoRequest"))
      (257165 'end of statement')
    }
    { scopeless
      unknown err[257168] ENOERR syserr
      (257171 'end of statement')
    }
    { scopeless
      const tmp[258401] "const" "temp"
      (258403 'move' tmp[258401](258399 'deref'(258398 '_wide_get_locale'(257173 call . this c"home"))))
      {
        {
          Try
          {
            {
              (257181 call(257177 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (257191 call(257187 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[257202](257201 call(257197 call . this c"_style"))
            (257205 'end of statement')
          }
          { scopeless
            unknown cur[257208] 0 size_t
            (257211 'end of statement')
          }
          { scopeless
            unknown len[257220](257218 call _cast size_t(257214 call . fmtStr c"size")) size_t
            (257223 'end of statement')
          }
          { scopeless
            unknown conv[257225] qio_conv_t
            (257228 'end of statement')
          }
          { scopeless
            unknown gotConv[257230] bool[10]
            (257233 'end of statement')
          }
          { scopeless
            unknown style[257235] iostyle
            (257238 'end of statement')
          }
          { scopeless
            unknown end[257240] size_t
            (257243 'end of statement')
          }
          { scopeless
            unknown argType[257251](257249 call *(257246 call + k 5) c_int)
            (257254 'end of statement')
          }
          { scopeless
            unknown r[257258](257257 'to unmanaged class from unknown'(257256 'to nilable class from type' _channel_regexp_info))
            (257261 'end of statement')
          }
          Defer
          {
            {
              if(257268 call _cond_test r)
              {
                { scopeless
                  (257265 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[257296] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[257297] "expr temp" "temp"
            (257306 'move' _iterator[257297](257304 call _getIterator(257317 call chpl_direct_range_iter 0(257311 call -(257313 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (257333 call _freeIterator _iterator[257297])
              }
            }
            { scopeless type
              (257322 'move' _indexOfInterest[257296](257319 call iteratorIndex _iterator[257297]))
            }
            ForLoop[257298]
            {
              unknown i[257326] "index var" "insert auto destroy"
              (257328 'move' i[257326] _indexOfInterest[257296])
              {
                (257292 call =(257290 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[257301]
              _indexOfInterest[257296]
              _iterator[257297]
            }
            label _breakLabel[257302]
          }
          { scopeless
            unknown j[257341] 0
            (257344 'end of statement')
          }
          {
            unknown i[258302] 0
            unknown tmp[258303] "maybe param" "temp"
            (258315 'move' tmp[258303](258313 call chpl_compute_low_param_loop_bound 0(257348 call - k 1)))
            unknown tmp[258304] "maybe param" "temp"
            (258325 'move' tmp[258304](258323 call chpl_compute_high_param_loop_bound 0(258320 call - k 1)))
            unknown tmp[258305] "maybe param" "temp"
            (258328 'move' tmp[258305] 1)
            ParamForLoop[258330]
            { i[258302] tmp[258303] tmp[258304] tmp[258305]
              {
                (257354 call = gotConv 0)
                if(257376 call _cond_test(257360 call <= j i))
                {
                  (257373 call _format_reader fmtStr cur len err conv gotConv style r 0)
                }
                (257387 call _conv_helper err conv gotConv j argType)
                { scopeless
                  unknown domore[257404](257403 call _conv_sethandler err(257395 call argType i) style i(257401 call args i) 0)
                  (257407 'end of statement')
                }
                if(258298 call _cond_test domore)
                {
                  (257415 call(257410 call . this c"_set_style") style)
                  {
                    unknown tmp[258192] "expr temp" "maybe param" "maybe type" "temp"
                    (258194 'move' tmp[258192](257421 call argType i))
                    if(258204 call _cond_test(258202 call ||(258196 call == tmp[258192] QIO_CONV_ARG_TYPE_SIGNED)(258199 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                    {
                      { scopeless
                        unknown tmp[257438] "temp"(257437 call _toSigned(257435 call args i))
                        (257445 call _check_tuple_var_decl tmp[257438] 2)
                        unknown t[257426](257439 call tmp[257438] 0)
                        unknown ok[257428](257442 call tmp[257438] 1)
                        (257450 'end of statement')
                      }
                      if(257503 call _cond_test(257453 call ! ok))
                      {
                        (257460 call = err(257459 call qio_format_error_arg_mismatch i))
                      }
                      {
                        if(257496 call _cond_test(257469 call ==(257467 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                        {
                          { scopeless
                            (257481 call = err(257480 call _write_signed(257474 call . style c"max_width_bytes") t i))
                          }
                        }
                        {
                          { scopeless
                            Try
                            {
                              {
                                (257492 call _writeOne(257486 call . iokind c"dynamic") t origLocale)
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      if(258215 call _cond_test(258213 call ||(258207 call == tmp[258192] QIO_CONV_ARG_TYPE_UNSIGNED)(258210 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                      {
                        { scopeless
                          unknown tmp[257524] "temp"(257523 call _toUnsigned(257521 call args i))
                          (257531 call _check_tuple_var_decl tmp[257524] 2)
                          unknown t[257512](257525 call tmp[257524] 0)
                          unknown ok[257514](257528 call tmp[257524] 1)
                          (257536 'end of statement')
                        }
                        if(257589 call _cond_test(257539 call ! ok))
                        {
                          (257546 call = err(257545 call qio_format_error_arg_mismatch i))
                        }
                        {
                          if(257582 call _cond_test(257555 call ==(257553 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                          {
                            { scopeless
                              (257567 call = err(257566 call _write_unsigned(257560 call . style c"max_width_bytes") t i))
                            }
                          }
                          {
                            { scopeless
                              Try
                              {
                                {
                                  (257578 call _writeOne(257572 call . iokind c"dynamic") t origLocale)
                                }
                              }
                            }
                          }
                        }
                      }
                      {
                        if(258227 call _cond_test(258225 call ||(258219 call == tmp[258192] QIO_CONV_ARG_TYPE_REAL)(258222 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                        {
                          { scopeless
                            unknown tmp[257610] "temp"(257609 call _toReal(257607 call args i))
                            (257617 call _check_tuple_var_decl tmp[257610] 2)
                            unknown t[257598](257611 call tmp[257610] 0)
                            unknown ok[257600](257614 call tmp[257610] 1)
                            (257622 'end of statement')
                          }
                          if(257675 call _cond_test(257625 call ! ok))
                          {
                            (257632 call = err(257631 call qio_format_error_arg_mismatch i))
                          }
                          {
                            if(257668 call _cond_test(257641 call ==(257639 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                            {
                              { scopeless
                                (257653 call = err(257652 call _write_real(257646 call . style c"max_width_bytes") t i))
                              }
                            }
                            {
                              { scopeless
                                Try
                                {
                                  {
                                    (257664 call _writeOne(257658 call . iokind c"dynamic") t origLocale)
                                  }
                                }
                              }
                            }
                          }
                        }
                        {
                          if(258239 call _cond_test(258237 call ||(258231 call == tmp[258192] QIO_CONV_ARG_TYPE_IMAG)(258234 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                          {
                            { scopeless
                              unknown tmp[257696] "temp"(257695 call _toImag(257693 call args i))
                              (257703 call _check_tuple_var_decl tmp[257696] 2)
                              unknown t[257684](257697 call tmp[257696] 0)
                              unknown ok[257686](257700 call tmp[257696] 1)
                              (257708 'end of statement')
                            }
                            if(257764 call _cond_test(257711 call ! ok))
                            {
                              (257718 call = err(257717 call qio_format_error_arg_mismatch i))
                            }
                            {
                              if(257757 call _cond_test(257727 call ==(257725 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                              {
                                { scopeless
                                  (257742 call = err(257741 call _write_real(257732 call . style c"max_width_bytes")(257738 call _cast real[16] t) i))
                                }
                              }
                              {
                                { scopeless
                                  Try
                                  {
                                    {
                                      (257753 call _writeOne(257747 call . iokind c"dynamic") t origLocale)
                                    }
                                  }
                                }
                              }
                            }
                          }
                          {
                            if(258251 call _cond_test(258249 call ||(258243 call == tmp[258192] QIO_CONV_ARG_TYPE_COMPLEX)(258246 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                            {
                              { scopeless
                                unknown tmp[257785] "temp"(257784 call _toComplex(257782 call args i))
                                (257792 call _check_tuple_var_decl tmp[257785] 2)
                                unknown t[257773](257786 call tmp[257785] 0)
                                unknown ok[257775](257789 call tmp[257785] 1)
                                (257797 'end of statement')
                              }
                              if(257850 call _cond_test(257800 call ! ok))
                              {
                                (257807 call = err(257806 call qio_format_error_arg_mismatch i))
                              }
                              {
                                if(257843 call _cond_test(257816 call ==(257814 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                {
                                  { scopeless
                                    (257828 call = err(257827 call _write_complex(257821 call . style c"max_width_bytes") t i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257839 call _writeOne(257833 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              if(258258 call _cond_test(258255 call == tmp[258192] QIO_CONV_ARG_TYPE_NUMERIC))
                              {
                                { scopeless
                                  unknown tmp[257870] "temp"(257869 call _toNumeric(257867 call args i))
                                  (257877 call _check_tuple_var_decl tmp[257870] 2)
                                  unknown t[257858](257871 call tmp[257870] 0)
                                  unknown ok[257860](257874 call tmp[257870] 1)
                                  (257882 'end of statement')
                                }
                                if(257908 call _cond_test(257885 call ! ok))
                                {
                                  (257892 call = err(257891 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257904 call _writeOne(257898 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                              {
                                if(258265 call _cond_test(258262 call == tmp[258192] QIO_CONV_ARG_TYPE_CHAR))
                                {
                                  { scopeless
                                    unknown tmp[257929] "temp"(257928 call _toChar(257926 call args i))
                                    (257936 call _check_tuple_var_decl tmp[257929] 2)
                                    unknown t[257917](257930 call tmp[257929] 0)
                                    unknown ok[257919](257933 call tmp[257929] 1)
                                    (257941 'end of statement')
                                  }
                                  if(257971 call _cond_test(257944 call ! ok))
                                  {
                                    (257951 call = err(257950 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (257967 call _writeOne(257957 call . iokind c"dynamic")(257961 'new'(257965 call ioChar t)) origLocale)
                                        }
                                      }
                                    }
                                  }
                                }
                                {
                                  if(258272 call _cond_test(258269 call == tmp[258192] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                  {
                                    { scopeless
                                      unknown tmp[257992] "temp"(257991 call _toBytes(257989 call args i))
                                      (257999 call _check_tuple_var_decl tmp[257992] 2)
                                      unknown t[257980](257993 call tmp[257992] 0)
                                      unknown ok[257982](257996 call tmp[257992] 1)
                                      (258004 'end of statement')
                                    }
                                    if(258030 call _cond_test(258007 call ! ok))
                                    {
                                      (258014 call = err(258013 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (258026 call _writeOne(258020 call . iokind c"dynamic") t origLocale)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(258279 call _cond_test(258276 call == tmp[258192] QIO_CONV_ARG_TYPE_STRING))
                                    {
                                      { scopeless
                                        unknown tmp[258051] "temp"(258050 call _toString(258048 call args i))
                                        (258058 call _check_tuple_var_decl tmp[258051] 2)
                                        unknown t[258039](258052 call tmp[258051] 0)
                                        unknown ok[258041](258055 call tmp[258051] 1)
                                        (258063 'end of statement')
                                      }
                                      if(258089 call _cond_test(258066 call ! ok))
                                      {
                                        (258073 call = err(258072 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (258085 call _writeOne(258079 call . iokind c"dynamic") t origLocale)
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(258286 call _cond_test(258283 call == tmp[258192] QIO_CONV_ARG_TYPE_REGEXP))
                                      {
                                        (258102 call = err(258101 call qio_format_error_write_regexp))
                                      }
                                      {
                                        if(258293 call _cond_test(258290 call == tmp[258192] QIO_CONV_ARG_TYPE_REPR))
                                        {
                                          Try
                                          {
                                            {
                                              (258121 call _writeOne(258112 call . iokind c"dynamic")(258119 call args i) origLocale)
                                            }
                                          }
                                        }
                                        {
                                          (258186 'throw'(258130 'new'(_chpl_manager = _owned[30](?))(258185 call IllegalArgumentError(258156 call +(258153 call + "args("(258151 call _cast string[26] i)) ")")(258183 call + "writef internal error "(258181 call _cast string[26](258179 call argType i))))))
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            label _unused_continueLabel[258307]
            label _breakLabel[258306]
          }
          if(258386 call _cond_test(258340 call ! err))
          {
            if(258365 call _cond_test(258344 call < cur len))
            {
              { scopeless
                unknown dummy[258347] c_int
                (258350 'end of statement')
              }
              (258363 call _format_reader fmtStr cur len err conv gotConv style r 0)
            }
            if(258382 call _cond_test(258372 call < cur len))
            {
              (258378 call = err(258377 call qio_format_error_too_few_args))
            }
          }
          (258396 call(258391 call . this c"_set_style") save_style)
        }
        (258406 'on block' 0 tmp[258401])
      }
    }
    if(258437 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258433 call(258411 call . this c"_ch_ioerror") err "in channel.writef(fmt:string)")
          }
        }
      }
    }
    (258443 return 1)
  }
  where {
    (257124 call ||(257119 call isStringType t)(257123 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].writef[258457](arg _mt[258462]:_MT[238], arg this[258459] :
  channel, arg fmtStr[258454] :
  unknown t[258452]) : _unknown[51] throws "method"
  {
    if(258483 call _cond_test(258476 call ! writing))
    {
      { scopeless
        (258481 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      unknown err[258491] ENOERR syserr
      (258494 'end of statement')
    }
    { scopeless
      const tmp[258662] "const" "temp"
      (258664 'move' tmp[258662](258660 'deref'(258659 '_wide_get_locale'(258496 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258504 call(258500 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258514 call(258510 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258525](258524 call(258520 call . this c"_style"))
            (258528 'end of statement')
          }
          { scopeless
            unknown cur[258531] 0 size_t
            (258534 'end of statement')
          }
          { scopeless
            unknown len[258543](258541 call _cast size_t(258537 call . fmtStr c"size")) size_t
            (258546 'end of statement')
          }
          { scopeless
            unknown conv[258548] qio_conv_t
            (258551 'end of statement')
          }
          { scopeless
            unknown gotConv[258553] bool[10]
            (258556 'end of statement')
          }
          { scopeless
            unknown style[258558] iostyle
            (258561 'end of statement')
          }
          { scopeless
            unknown end[258563] size_t
            (258566 'end of statement')
          }
          { scopeless
            unknown dummy[258568] c_int
            (258571 'end of statement')
          }
          { scopeless
            unknown r[258575](258574 'to unmanaged class from unknown'(258573 'to nilable class from type' _channel_regexp_info))
            (258578 'end of statement')
          }
          Defer
          {
            {
              if(258585 call _cond_test r)
              {
                { scopeless
                  (258582 call chpl__delete r)
                }
              }
            }
          }
          (258604 call _format_reader fmtStr cur len err conv gotConv style r 0)
          if(258623 call _cond_test(258607 call ! err))
          {
            if(258618 call _cond_test gotConv)
            {
              (258614 call = err(258613 call qio_format_error_too_few_args))
            }
          }
          if(258647 call _cond_test(258628 call ! err))
          {
            if(258642 call _cond_test(258632 call < cur len))
            {
              (258638 call = err(258637 call qio_format_error_too_few_args))
            }
          }
          (258657 call(258652 call . this c"_set_style") save_style)
        }
        (258667 'on block' 0 tmp[258662])
      }
    }
    if(258698 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258694 call(258672 call . this c"_ch_ioerror") err "in channel.writef(fmt:string, ...)")
          }
        }
      }
    }
    (258704 return 1)
  }
  where {
    (258473 call ||(258468 call isStringType t)(258472 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[258718](arg _mt[258728]:_MT[238], arg this[258725] :
  channel, arg fmtStr[258715] :
  unknown t[258713], ref arg args[258722]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(258763 call _cond_test writing)
    {
      { scopeless
        (258761 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      const origLocale[258775] "const"(258774 call(258770 call . this c"getLocaleOfIoRequest"))
      (258778 'end of statement')
    }
    { scopeless
      unknown err[258781] ENOERR syserr
      (258784 'end of statement')
    }
    { scopeless
      const tmp[260866] "const" "temp"
      (260868 'move' tmp[260866](260864 'deref'(260863 '_wide_get_locale'(258786 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258794 call(258790 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258804 call(258800 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258815](258814 call(258810 call . this c"_style"))
            (258818 'end of statement')
          }
          Defer
          {
            {
              (258825 call(258820 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[258832] 0 size_t
            (258835 'end of statement')
          }
          { scopeless
            unknown len[258844](258842 call _cast size_t(258838 call . fmtStr c"size")) size_t
            (258847 'end of statement')
          }
          { scopeless
            unknown conv[258849] qio_conv_t
            (258852 'end of statement')
          }
          { scopeless
            unknown gotConv[258854] bool[10]
            (258857 'end of statement')
          }
          { scopeless
            unknown style[258859] iostyle
            (258862 'end of statement')
          }
          { scopeless
            unknown end[258864] size_t
            (258867 'end of statement')
          }
          { scopeless
            unknown argType[258875](258873 call *(258870 call + k 5) c_int)
            (258878 'end of statement')
          }
          { scopeless
            unknown r[258882](258881 'to unmanaged class from unknown'(258880 'to nilable class from type' _channel_regexp_info))
            (258885 'end of statement')
          }
          Defer
          {
            {
              if(258892 call _cond_test r)
              {
                { scopeless
                  (258889 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[258920] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[258921] "expr temp" "temp"
            (258930 'move' _iterator[258921](258928 call _getIterator(258941 call chpl_direct_range_iter 0(258935 call -(258937 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (258957 call _freeIterator _iterator[258921])
              }
            }
            { scopeless type
              (258946 'move' _indexOfInterest[258920](258943 call iteratorIndex _iterator[258921]))
            }
            ForLoop[258922]
            {
              unknown i[258950] "index var" "insert auto destroy"
              (258952 'move' i[258950] _indexOfInterest[258920])
              {
                (258916 call =(258914 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[258925]
              _indexOfInterest[258920]
              _iterator[258921]
            }
            label _breakLabel[258926]
          }
          (258970 call = err(258969 call qio_channel_mark 0 _channel_internal))
          if(260858 call _cond_test(258974 call ! err))
          {
            { scopeless
              Try
              {
                {
                  { scopeless
                    unknown j[258977] 0
                    (258980 'end of statement')
                  }
                  {
                    unknown i[260715] 0
                    unknown tmp[260716] "maybe param" "temp"
                    (260728 'move' tmp[260716](260726 call chpl_compute_low_param_loop_bound 0(258985 call - k 1)))
                    unknown tmp[260717] "maybe param" "temp"
                    (260738 'move' tmp[260717](260736 call chpl_compute_high_param_loop_bound 0(260733 call - k 1)))
                    unknown tmp[260718] "maybe param" "temp"
                    (260741 'move' tmp[260718] 1)
                    ParamForLoop[260743]
                    { i[260715] tmp[260716] tmp[260717] tmp[260718]
                      {
                        if(259137 call _cond_test(258991 call <= j i))
                        {
                          (259004 call _format_reader fmtStr cur len err conv gotConv style r 1)
                          if(259133 call _cond_test(259009 call != r nil[44]))
                          {
                            { scopeless
                              const rnn[259014] "const"(259012 call postfix! r)
                              (259017 'end of statement')
                            }
                            if(259129 call _cond_test(259020 call . rnn c"hasRegexp"))
                            {
                              if(259044 call _cond_test(259034 call >(259031 call -(259028 call + i(259025 call . rnn c"ncaptures")) 1) k))
                              {
                                (259040 call = err(259039 call qio_format_error_too_few_args))
                              }
                              {
                                unknown _indexOfInterest[259086] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                unknown _iterator[259087] "expr temp" "temp"
                                (259096 'move' _iterator[259087](259094 call _getIterator(259106 call chpl_direct_counted_range_iter 0(259102 call . rnn c"ncaptures"))))
                                Defer
                                {
                                  {
                                    (259122 call _freeIterator _iterator[259087])
                                  }
                                }
                                { scopeless type
                                  (259111 'move' _indexOfInterest[259086](259108 call iteratorIndex _iterator[259087]))
                                }
                                ForLoop[259088]
                                {
                                  unknown z[259115] "index var" "insert auto destroy"
                                  (259117 'move' z[259115] _indexOfInterest[259086])
                                  {
                                    if(259081 call _cond_test(259067 call <=(259061 call + i z)(259064 call . argType c"size")))
                                    {
                                      (259077 call =(259075 call argType(259072 call + i z)) QIO_CONV_SET_CAPTURE)
                                    }
                                  }
                                  label _continueLabel[259091]
                                  _indexOfInterest[259086]
                                  _iterator[259087]
                                }
                                label _breakLabel[259092]
                              }
                            }
                          }
                        }
                        (259149 call _conv_helper err conv gotConv j argType)
                        { scopeless
                          unknown domore[259166](259165 call _conv_sethandler err(259157 call argType i) style i(259163 call args i) 0)
                          (259169 'end of statement')
                        }
                        if(260711 call _cond_test domore)
                        {
                          (259177 call(259172 call . this c"_set_style") style)
                          {
                            unknown tmp[260598] "expr temp" "maybe param" "maybe type" "temp"
                            (260600 'move' tmp[260598](259183 call argType i))
                            if(260610 call _cond_test(260608 call ||(260602 call == tmp[260598] QIO_CONV_ARG_TYPE_SIGNED)(260605 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                            {
                              { scopeless
                                unknown tmp[259200] "temp"(259199 call _toSigned(259197 call args i))
                                (259207 call _check_tuple_var_decl tmp[259200] 2)
                                unknown t[259188](259201 call tmp[259200] 0)
                                unknown ok[259190](259204 call tmp[259200] 1)
                                (259212 'end of statement')
                              }
                              if(259291 call _cond_test(259215 call ! ok))
                              {
                                (259222 call = err(259221 call qio_format_error_arg_mismatch i))
                              }
                              {
                                { scopeless
                                  unknown ti[259227] int[13]
                                  (259230 'end of statement')
                                }
                                if(259264 call _cond_test(259237 call ==(259235 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                                {
                                  { scopeless
                                    (259249 call = err(259248 call _read_signed(259242 call . style c"max_width_bytes") ti i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (259260 call _readOne(259254 call . iokind c"dynamic") ti origLocale)
                                      }
                                    }
                                  }
                                }
                                if(259286 call _cond_test(259271 call ! err))
                                {
                                  { scopeless
                                    (259283 call = err(259282 call _setIfPrimitive(259278 call args i) ti i))
                                  }
                                }
                              }
                            }
                            {
                              if(260621 call _cond_test(260619 call ||(260613 call == tmp[260598] QIO_CONV_ARG_TYPE_UNSIGNED)(260616 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                              {
                                { scopeless
                                  unknown tmp[259312] "temp"(259311 call _toUnsigned(259309 call args i))
                                  (259319 call _check_tuple_var_decl tmp[259312] 2)
                                  unknown t[259300](259313 call tmp[259312] 0)
                                  unknown ok[259302](259316 call tmp[259312] 1)
                                  (259324 'end of statement')
                                }
                                if(259403 call _cond_test(259327 call ! ok))
                                {
                                  (259334 call = err(259333 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    unknown ti[259339] uint[115]
                                    (259342 'end of statement')
                                  }
                                  if(259376 call _cond_test(259349 call ==(259347 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                                  {
                                    { scopeless
                                      (259361 call = err(259360 call _read_unsigned(259354 call . style c"max_width_bytes") ti i))
                                    }
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (259372 call _readOne(259366 call . iokind c"dynamic") ti origLocale)
                                        }
                                      }
                                    }
                                  }
                                  if(259398 call _cond_test(259383 call ! err))
                                  {
                                    { scopeless
                                      (259395 call = err(259394 call _setIfPrimitive(259390 call args i) ti i))
                                    }
                                  }
                                }
                              }
                              {
                                if(260633 call _cond_test(260631 call ||(260625 call == tmp[260598] QIO_CONV_ARG_TYPE_REAL)(260628 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                                {
                                  { scopeless
                                    unknown tmp[259424] "temp"(259423 call _toReal(259421 call args i))
                                    (259431 call _check_tuple_var_decl tmp[259424] 2)
                                    unknown t[259412](259425 call tmp[259424] 0)
                                    unknown ok[259414](259428 call tmp[259424] 1)
                                    (259436 'end of statement')
                                  }
                                  if(259515 call _cond_test(259439 call ! ok))
                                  {
                                    (259446 call = err(259445 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      unknown ti[259451] real[16]
                                      (259454 'end of statement')
                                    }
                                    if(259488 call _cond_test(259461 call ==(259459 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                                    {
                                      { scopeless
                                        (259473 call = err(259472 call _read_real(259466 call . style c"max_width_bytes") ti i))
                                      }
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (259484 call _readOne(259478 call . iokind c"dynamic") ti origLocale)
                                          }
                                        }
                                      }
                                    }
                                    if(259510 call _cond_test(259495 call ! err))
                                    {
                                      { scopeless
                                        (259507 call = err(259506 call _setIfPrimitive(259502 call args i) ti i))
                                      }
                                    }
                                  }
                                }
                                {
                                  if(260645 call _cond_test(260643 call ||(260637 call == tmp[260598] QIO_CONV_ARG_TYPE_IMAG)(260640 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                                  {
                                    { scopeless
                                      unknown tmp[259536] "temp"(259535 call _toImag(259533 call args i))
                                      (259543 call _check_tuple_var_decl tmp[259536] 2)
                                      unknown t[259524](259537 call tmp[259536] 0)
                                      unknown ok[259526](259540 call tmp[259536] 1)
                                      (259548 'end of statement')
                                    }
                                    if(259640 call _cond_test(259551 call ! ok))
                                    {
                                      (259558 call = err(259557 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        unknown ti[259563] imag[130]
                                        (259566 'end of statement')
                                      }
                                      if(259614 call _cond_test(259573 call ==(259571 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                                      {
                                        { scopeless
                                          unknown tr[259576] real[16]
                                          (259579 'end of statement')
                                        }
                                        (259591 call = err(259590 call _read_real(259584 call . style c"max_width_bytes") tr i))
                                        (259599 call = ti(259597 call _cast imag[130] tr))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (259610 call _readOne(259604 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                        }
                                      }
                                      if(259635 call _cond_test(259620 call ! err))
                                      {
                                        { scopeless
                                          (259632 call = err(259631 call _setIfPrimitive(259627 call args i) ti i))
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(260657 call _cond_test(260655 call ||(260649 call == tmp[260598] QIO_CONV_ARG_TYPE_COMPLEX)(260652 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                                    {
                                      { scopeless
                                        unknown tmp[259661] "temp"(259660 call _toComplex(259658 call args i))
                                        (259668 call _check_tuple_var_decl tmp[259661] 2)
                                        unknown t[259649](259662 call tmp[259661] 0)
                                        unknown ok[259651](259665 call tmp[259661] 1)
                                        (259673 'end of statement')
                                      }
                                      if(259752 call _cond_test(259676 call ! ok))
                                      {
                                        (259683 call = err(259682 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          unknown ti[259688] complex[140]
                                          (259691 'end of statement')
                                        }
                                        if(259725 call _cond_test(259698 call ==(259696 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                        {
                                          { scopeless
                                            (259710 call = err(259709 call _read_complex(259703 call . style c"max_width_bytes") ti i))
                                          }
                                        }
                                        {
                                          { scopeless
                                            Try
                                            {
                                              {
                                                (259721 call _readOne(259715 call . iokind c"dynamic") ti origLocale)
                                              }
                                            }
                                          }
                                        }
                                        if(259747 call _cond_test(259732 call ! err))
                                        {
                                          { scopeless
                                            (259744 call = err(259743 call _setIfPrimitive(259739 call args i) ti i))
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(260664 call _cond_test(260661 call == tmp[260598] QIO_CONV_ARG_TYPE_NUMERIC))
                                      {
                                        { scopeless
                                          unknown tmp[259772] "temp"(259771 call _toNumeric(259769 call args i))
                                          (259779 call _check_tuple_var_decl tmp[259772] 2)
                                          unknown t[259760](259773 call tmp[259772] 0)
                                          unknown ok[259762](259776 call tmp[259772] 1)
                                          (259784 'end of statement')
                                        }
                                        if(259837 call _cond_test(259787 call ! ok))
                                        {
                                          (259794 call = err(259793 call qio_format_error_arg_mismatch i))
                                        }
                                        {
                                          { scopeless
                                            unknown ti[259799] t
                                            (259802 'end of statement')
                                          }
                                          Try
                                          {
                                            {
                                              (259812 call _readOne(259806 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                          if(259832 call _cond_test(259817 call ! err))
                                          {
                                            { scopeless
                                              (259829 call = err(259828 call _setIfPrimitive(259824 call args i) ti i))
                                            }
                                          }
                                        }
                                      }
                                      {
                                        if(260671 call _cond_test(260668 call == tmp[260598] QIO_CONV_ARG_TYPE_CHAR))
                                        {
                                          { scopeless
                                            unknown tmp[259857] "temp"(259856 call _toChar(259854 call args i))
                                            (259864 call _check_tuple_var_decl tmp[259857] 2)
                                            unknown t[259845](259858 call tmp[259857] 0)
                                            unknown ok[259847](259861 call tmp[259857] 1)
                                            (259869 'end of statement')
                                          }
                                          { scopeless
                                            unknown chr[259876](259871 'new'(259875 call ioChar t))
                                            (259879 'end of statement')
                                          }
                                          if(259904 call _cond_test(259881 call ! ok))
                                          {
                                            (259888 call = err(259887 call qio_format_error_arg_mismatch i))
                                          }
                                          {
                                            { scopeless
                                              Try
                                              {
                                                {
                                                  (259900 call _readOne(259894 call . iokind c"dynamic") chr origLocale)
                                                }
                                              }
                                            }
                                          }
                                          if(259924 call _cond_test(259910 call ! err))
                                          {
                                            { scopeless
                                              (259922 call _setIfChar(259916 call args i)(259919 call . chr c"ch"))
                                            }
                                          }
                                        }
                                        {
                                          if(260678 call _cond_test(260675 call == tmp[260598] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                          {
                                            { scopeless
                                              unknown tmp[259945] "temp"(259944 call _toBytes(259942 call args i))
                                              (259952 call _check_tuple_var_decl tmp[259945] 2)
                                              unknown t[259933](259946 call tmp[259945] 0)
                                              unknown ok[259935](259949 call tmp[259945] 1)
                                              (259957 'end of statement')
                                            }
                                            if(259983 call _cond_test(259960 call ! ok))
                                            {
                                              (259967 call = err(259966 call qio_format_error_arg_mismatch i))
                                            }
                                            {
                                              { scopeless
                                                Try
                                                {
                                                  {
                                                    (259979 call _readOne(259973 call . iokind c"dynamic") t origLocale)
                                                  }
                                                }
                                              }
                                            }
                                            if(260004 call _cond_test(259989 call ! err))
                                            {
                                              { scopeless
                                                (260001 call = err(260000 call _setIfPrimitive(259996 call args i) t i))
                                              }
                                            }
                                          }
                                          {
                                            if(260685 call _cond_test(260682 call == tmp[260598] QIO_CONV_ARG_TYPE_STRING))
                                            {
                                              { scopeless
                                                unknown tmp[260025] "temp"(260024 call _toString(260022 call args i))
                                                (260032 call _check_tuple_var_decl tmp[260025] 2)
                                                unknown t[260013](260026 call tmp[260025] 0)
                                                unknown ok[260015](260029 call tmp[260025] 1)
                                                (260037 'end of statement')
                                              }
                                              if(260063 call _cond_test(260040 call ! ok))
                                              {
                                                (260047 call = err(260046 call qio_format_error_arg_mismatch i))
                                              }
                                              {
                                                { scopeless
                                                  Try
                                                  {
                                                    {
                                                      (260059 call _readOne(260053 call . iokind c"dynamic") t origLocale)
                                                    }
                                                  }
                                                }
                                              }
                                              if(260084 call _cond_test(260069 call ! err))
                                              {
                                                { scopeless
                                                  (260081 call = err(260080 call _setIfPrimitive(260076 call args i) t i))
                                                }
                                              }
                                            }
                                            {
                                              if(260692 call _cond_test(260689 call == tmp[260598] QIO_CONV_ARG_TYPE_REGEXP))
                                              {
                                                { scopeless
                                                  unknown tmp[260105] "temp"(260104 call _toRegexp(260102 call args i))
                                                  (260112 call _check_tuple_var_decl tmp[260105] 2)
                                                  unknown t[260093](260106 call tmp[260105] 0)
                                                  unknown ok[260095](260109 call tmp[260105] 1)
                                                  (260117 'end of statement')
                                                }
                                                if(260311 call _cond_test(260120 call ! ok))
                                                {
                                                  (260127 call = err(260126 call qio_format_error_arg_mismatch i))
                                                }
                                                {
                                                  if(260145 call _cond_test(260133 call == r nil[44]))
                                                  {
                                                    { scopeless
                                                      (260142 call = r(260138 'new'(_chpl_manager = unmanaged[220](?))(260141 call _channel_regexp_info)))
                                                    }
                                                  }
                                                  { scopeless
                                                    const rnn[260154] "const"(260152 call postfix! r)
                                                    (260157 'end of statement')
                                                  }
                                                  (260163 call(260159 call . rnn c"clear"))
                                                  (260175 call =(260166 call . rnn c"theRegexp")(260172 call . t c"_regexp"))
                                                  (260183 call =(260179 call . rnn c"hasRegexp") 1)
                                                  (260191 call =(260187 call . rnn c"releaseRegexp") 0)
                                                  (260201 call _match_regexp_if_needed cur len err style rnn)
                                                  if(260224 call _cond_test(260214 call >(260211 call -(260208 call + i(260205 call . rnn c"ncaptures")) 1) k))
                                                  {
                                                    (260220 call = err(260219 call qio_format_error_too_few_args))
                                                  }
                                                  {
                                                    unknown _indexOfInterest[260268] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                                    unknown _iterator[260269] "expr temp" "temp"
                                                    (260278 'move' _iterator[260269](260276 call _getIterator(260288 call chpl_direct_counted_range_iter 0(260284 call . rnn c"ncaptures"))))
                                                    Defer
                                                    {
                                                      {
                                                        (260304 call _freeIterator _iterator[260269])
                                                      }
                                                    }
                                                    { scopeless type
                                                      (260293 'move' _indexOfInterest[260268](260290 call iteratorIndex _iterator[260269]))
                                                    }
                                                    ForLoop[260270]
                                                    {
                                                      unknown z[260297] "index var" "insert auto destroy"
                                                      (260299 'move' z[260297] _indexOfInterest[260268])
                                                      {
                                                        if(260263 call _cond_test(260246 call <=(260240 call + i z)(260243 call . argType c"size")))
                                                        {
                                                          (260259 call =(260257 call argType(260254 call +(260251 call + i z) 1)) QIO_CONV_SET_CAPTURE)
                                                        }
                                                      }
                                                      label _continueLabel[260273]
                                                      _indexOfInterest[260268]
                                                      _iterator[260269]
                                                    }
                                                    label _breakLabel[260274]
                                                  }
                                                }
                                              }
                                              {
                                                if(260699 call _cond_test(260696 call == tmp[260598] QIO_CONV_ARG_TYPE_REPR))
                                                {
                                                  Try
                                                  {
                                                    {
                                                      (260330 call _readOne(260321 call . iokind c"dynamic")(260328 call args i) origLocale)
                                                    }
                                                  }
                                                }
                                                {
                                                  if(260706 call _cond_test(260703 call == tmp[260598] QIO_CONV_SET_CAPTURE))
                                                  {
                                                    if(260543 call _cond_test(260341 call == r nil[44]))
                                                    {
                                                      (260347 call = err(260346 call qio_format_error_bad_regexp))
                                                    }
                                                    {
                                                      { scopeless
                                                        const rnn[260354] "const"(260352 call postfix! r)
                                                        (260357 'end of statement')
                                                      }
                                                      (260366 call _match_regexp_if_needed cur len err style rnn)
                                                      if(260539 call _cond_test(260378 call >=(260371 call . rnn c"capturei")(260375 call . rnn c"ncaptures")))
                                                      {
                                                        (260384 call = err(260383 call qio_format_error_bad_regexp))
                                                      }
                                                      {
                                                        if(260526 call _cond_test(260395 call _isIoPrimitiveType(260393 'typeof'(260392 call args i))))
                                                        {
                                                          Try
                                                          {
                                                            {
                                                              if(260493 call _cond_test(260402 call ==(260400 'typeof'(260399 call args i)) string[26]))
                                                              {
                                                                { scopeless
                                                                  (260423 call =(260407 call args i)(260422 call(260418 call .(260417 call(260409 call . rnn c"capArr")(260413 call . rnn c"capturei")) c"decode")))
                                                                }
                                                              }
                                                              {
                                                                { scopeless
                                                                  if(260487 call _cond_test(260433 call isEnumType(260431 'typeof'(260430 call args i))))
                                                                  {
                                                                    { scopeless
                                                                      (260460 call =(260437 call args i)(260458 call _cast(260457 'typeof'(260456 call args i))(260452 call(260448 call .(260447 call(260439 call . rnn c"capArr")(260443 call . rnn c"capturei")) c"decode"))))
                                                                    }
                                                                  }
                                                                  {
                                                                    { scopeless
                                                                      (260484 call =(260466 call args i)(260482 call _cast(260481 'typeof'(260480 call args i))(260476 call(260468 call . rnn c"capArr")(260472 call . rnn c"capturei"))))
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          Catch e : DecodeError
                                                          {
                                                            (260509 call = err(260508 call qio_format_error_arg_mismatch i))
                                                          }
                                                          Catch
                                                          {
                                                            (260518 call = err(260517 call qio_format_error_bad_regexp))
                                                          }
                                                        }
                                                        (260536 call +=(260532 call . rnn c"capturei") 1)
                                                      }
                                                    }
                                                  }
                                                  {
                                                    (260592 'throw'(260552 'new'(_chpl_manager = _owned[30](?))(260591 call IllegalArgumentError(260562 call +(260559 call + "args("(260557 call _cast string[26] i)) ")")(260589 call + "readf internal error "(260587 call _cast string[26](260585 call argType i))))))
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    label _unused_continueLabel[260720]
                    label _breakLabel[260719]
                  }
                  if(260783 call _cond_test(260753 call ! err))
                  {
                    if(260778 call _cond_test(260757 call < cur len))
                    {
                      { scopeless
                        unknown dummy[260760] c_int
                        (260763 'end of statement')
                      }
                      (260776 call _format_reader fmtStr cur len err conv gotConv style r 1)
                    }
                  }
                  if(260807 call _cond_test(260788 call ! err))
                  {
                    if(260802 call _cond_test(260792 call < cur len))
                    {
                      (260798 call = err(260797 call qio_format_error_too_few_args))
                    }
                  }
                  if(260826 call _cond_test(260812 call ! err))
                  {
                    (260817 call qio_channel_commit_unlocked _channel_internal)
                  }
                  {
                    (260823 call qio_channel_revert_unlocked _channel_internal)
                  }
                }
              }
              Catch thrownError : SystemError
              {
                if(260844 call _cond_test(260839 call !=(260835 call . thrownError c"err") EEOF))
                {
                  { scopeless
                    (260842 'throw' thrownError)
                  }
                }
                (260852 call = err EEOF)
              }
            }
          }
        }
        (260871 'on block' 0 tmp[260866])
      }
    }
    if(260921 call _cond_test(260875 call ! err))
    {
      (260878 return 1)
    }
    {
      { scopeless
        if(260917 call _cond_test(260883 call == err EEOF))
        {
          (260886 return 0)
        }
        {
          Try
          {
            {
              (260912 call(260890 call . this c"_ch_ioerror") err "in channel.readf(fmt:string, ...)")
            }
          }
        }
      }
    }
    (260927 return 0)
  }
  where {
    (258739 call ||(258734 call isStringType t)(258738 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[260941](arg _mt[260946]:_MT[238], arg this[260943] :
  channel, arg fmtStr[260938] :
  unknown t[260936]) : _unknown[51] throws "method" "no doc"
  {
    if(260964 call _cond_test writing)
    {
      { scopeless
        (260962 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      unknown err[260972] ENOERR syserr
      (260975 'end of statement')
    }
    { scopeless
      const tmp[261174] "const" "temp"
      (261176 'move' tmp[261174](261172 'deref'(261171 '_wide_get_locale'(260977 call . this c"home"))))
      {
        {
          Try
          {
            {
              (260985 call(260981 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (260995 call(260991 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[261006](261005 call(261001 call . this c"_style"))
            (261009 'end of statement')
          }
          Defer
          {
            {
              (261016 call(261011 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[261023] 0 size_t
            (261026 'end of statement')
          }
          { scopeless
            unknown len[261035](261033 call _cast size_t(261029 call . fmtStr c"size")) size_t
            (261038 'end of statement')
          }
          { scopeless
            unknown conv[261040] qio_conv_t
            (261043 'end of statement')
          }
          { scopeless
            unknown gotConv[261045] bool[10]
            (261048 'end of statement')
          }
          { scopeless
            unknown style[261050] iostyle
            (261053 'end of statement')
          }
          { scopeless
            unknown end[261055] size_t
            (261058 'end of statement')
          }
          { scopeless
            unknown dummy[261060] c_int
            (261063 'end of statement')
          }
          { scopeless
            unknown r[261067](261066 'to unmanaged class from unknown'(261065 'to nilable class from type' _channel_regexp_info))
            (261070 'end of statement')
          }
          Defer
          {
            {
              if(261077 call _cond_test r)
              {
                { scopeless
                  (261074 call chpl__delete r)
                }
              }
            }
          }
          (261091 call = err(261090 call qio_channel_mark 0 _channel_internal))
          if(261124 call _cond_test(261095 call ! err))
          {
            (261108 call _format_reader fmtStr cur len err conv gotConv style r 1)
            if(261120 call _cond_test gotConv)
            {
              (261116 call = err(261115 call qio_format_error_too_few_args))
            }
          }
          if(261148 call _cond_test(261129 call ! err))
          {
            if(261143 call _cond_test(261133 call < cur len))
            {
              (261139 call = err(261138 call qio_format_error_too_few_args))
            }
          }
          if(261167 call _cond_test(261153 call ! err))
          {
            (261158 call qio_channel_commit_unlocked _channel_internal)
          }
          {
            (261164 call qio_channel_revert_unlocked _channel_internal)
          }
        }
        (261179 'on block' 0 tmp[261174])
      }
    }
    if(261232 call _cond_test(261183 call ! err))
    {
      (261186 return 1)
    }
    {
      { scopeless
        if(261228 call _cond_test(261191 call == err EEOF))
        {
          (261194 return 0)
        }
        {
          Try
          {
            {
              (261220 call(261198 call . this c"_ch_ioerror") err "in channel.readf(fmt:string)")
            }
          }
          (261226 return 0)
        }
      }
    }
  }
  where {
    (260956 call ||(260951 call isStringType t)(260955 call isBytesType t))
  }
  function readf[261246](arg fmt[261243] :
  string[26], ref arg args[261250]:_any[178](?) ...) : _unknown[51] throws
  {
    (261266 return(261265 'try-expr'(261264 call(261257 call . stdin c"readf") fmt(261263 'expand_tuple' args))))
  }
  { scopeless type
    bool[10]
  }
  function readf[261278](arg fmt[261275] :
  string[26]) : _unknown[51] throws "no doc"
  {
    (261289 return(261288 'try-expr'(261287 call(261282 call . stdin c"readf") fmt)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].skipField[261298](arg _mt[261303]:_MT[238], arg this[261300] :
  channel) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[261307] ENOERR syserr
      (261310 'end of statement')
    }
    { scopeless
      const tmp[261374] "const" "temp"
      (261376 'move' tmp[261374](261372 'deref'(261371 '_wide_get_locale'(261313 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261321 call(261317 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261331 call(261327 call . this c"unlock"))
            }
          }
          { scopeless
            unknown st[261343](261342 call(261337 call . this c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
            (261346 'end of statement')
          }
          if(261367 call _cond_test(261349 call == st QIO_AGGREGATE_FORMAT_JSON))
          {
            (261357 call = err(261356 call qio_channel_skip_json_field 0 _channel_internal))
          }
          {
            (261363 call = err ENOTSUP)
          }
        }
        (261379 'on block' 0 tmp[261374])
      }
    }
    if(261410 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (261406 call(261384 call . this c"_ch_ioerror") err "in skipField")
          }
        }
      }
    }
  }
  function _unknown[51].format[261425](arg _mt[261430]:_MT[238], arg this[261427] :
  string[26], arg args[261422]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261439 return(261438 call chpl_do_format this(261437 'expand_tuple' args)))
      }
    }
    Catch e : IllegalArgumentError
    {
      (261447 'throw' e)
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261477 call ioerror(261456 call . e c"err") "in string.format")
        }
      }
    }
    Catch e : DecodeError
    {
      Try
      {
        {
          (261493 call ioerror(261489 call _cast syserr EILSEQ) "in string.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261506 call ioerror(261502 call _cast syserr EINVAL) "in string.format")
        }
      }
    }
    (261532 return "")
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].format[261545](arg _mt[261550]:_MT[238], arg this[261547] :
  bytes[24], arg args[261542]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261559 return(261558 call chpl_do_format this(261557 'expand_tuple' args)))
      }
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261589 call ioerror(261568 call . e c"err") "in bytes.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261602 call ioerror(261598 call _cast syserr EINVAL) "in bytes.format")
        }
      }
    }
    (261627 return b"")
  }
  { scopeless type
    bytes[24]
  }
  function chpl_do_format[261639](arg fmt[261636] :
  unknown t[261634], arg args[261643]:_any[178](?) ...) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown f[261661](261660 'try-expr'(261659 call openmem))
      (261664 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261671 call(261667 call . f c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    { scopeless
      unknown offset[261684] 0 int[13]
      (261687 'end of statement')
    }
    {
      { scopeless
        unknown w[261697](261696 'try-expr'(261695 call(261689 call . f c"writer")(locking = 0)))
        (261700 'end of statement')
      }
      Defer
      {
        {
          Try
          {
            {
              (261707 call(261703 call . w c"close"))
            }
          }
          Catch
          {
          }
        }
      }
      Try
      {
        {
          (261726 call(261719 call . w c"writef") fmt(261725 'expand_tuple' args))
        }
      }
      (261737 call = offset(261736 call(261732 call . w c"offset")))
      Try
      {
        {
          (261745 call(261741 call . w c"close"))
        }
      }
    }
    { scopeless
      unknown buf[261760](261759 call c_malloc(261753 call uint[115] 8)(261757 call + offset 1))
      (261763 'end of statement')
    }
    { scopeless
      unknown r[261773](261772 'try-expr'(261771 call(261765 call . f c"reader")(locking = 0)))
      (261776 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261782 call(261778 call . r c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    Try
    {
      {
        (261803 call(261794 call . r c"readBytes") buf(261801 call _cast ssize_t offset))
      }
    }
    Try
    {
      {
        (261812 call(261808 call . r c"close"))
      }
    }
    Try
    {
      {
        (261821 call(261817 call . f c"close"))
      }
    }
    (261830 call =(261828 call buf offset) 0)
    if(261859 call _cond_test(261836 call isStringType t))
    {
      { scopeless
        (261846 return(261845 call createStringWithOwnedBuffer buf offset(261843 call + offset 1)))
      }
    }
    {
      { scopeless
        (261857 return(261856 call createBytesWithOwnedBuffer buf offset(261854 call + offset 1)))
      }
    }
  }
  where {
    (261655 call ||(261650 call isStringType t)(261654 call isBytesType t))
  }
  { scopeless type
    t
  }
  (261870 'use' Regexp)
  function qio_regexp_channel_match[261878](const  ref arg re[261875] :
  qio_regexp_t, arg threadsafe[261881] :
  c_int, arg ch[261885] :
  qio_channel_ptr_t, arg maxlen[261892] :
  (261891 call int[13] 64), arg anchor[261896] :
  c_int, arg can_discard[261900] :
  bool[10], arg keep_unmatched[261904] :
  bool[10], arg keep_whole_pattern[261908] :
  bool[10], arg submatch[261915] :
  (261914 call _ddata qio_regexp_string_piece_t), arg nsubmatch[261922] :
  (261921 call int[13] 64)) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._extractMatch[261936](arg _mt[261949]:_MT[238], arg this[261946] :
  channel, arg m[261933] :
  reMatch, ref arg arg[261939] :
  reMatch, ref arg error[261943] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (261953 call = arg m)
  }
  function _unknown[51]._extractMatch[261966](arg _mt[261979]:_MT[238], arg this[261976] :
  channel, arg m[261963] :
  reMatch, ref arg arg[261969] :
  bytes[24], ref arg error[261973] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown cur[261985](261984 call int[13] 64)
      (261988 'end of statement')
    }
    { scopeless
      unknown target[261997](261995 call _cast int[13](261991 call . m c"offset"))
      (262000 'end of statement')
    }
    { scopeless
      unknown len[262005](262002 call . m c"size")
      (262008 'end of statement')
    }
    if(262038 call _cond_test(262015 call !(262012 call . m c"matched")))
    {
      (262034 call = arg b"")
    }
    if(262068 call _cond_test(262043 call ! error))
    {
      (262048 call qio_channel_revert_unlocked _channel_internal)
      (262057 call = error(262056 call qio_channel_mark 0 _channel_internal))
      (262065 call = cur(262064 call qio_channel_offset_unlocked _channel_internal))
    }
    if(262089 call _cond_test(262073 call ! error))
    {
      (262085 call = error(262084 call qio_channel_advance 0 _channel_internal(262082 call - target cur)))
    }
    { scopeless
      unknown s[262094] bytes[24]
      (262097 'end of statement')
    }
    if(262151 call _cond_test(262099 call ! error))
    {
      { scopeless
        unknown gotlen[262105](262104 call int[13] 64)
        (262108 'end of statement')
      }
      { scopeless
        unknown ts[262111] c_string
        (262114 'end of statement')
      }
      (262138 call = error(262137 call qio_channel_read_string 0(262124 call _cast c_int(262120 call . iokind c"native"))(262129 call stringStyleExactLen len) _channel_internal ts gotlen(262135 call _cast ssize_t len)))
      (262148 call = s(262147 call createBytesWithOwnedBuffer ts(length = gotlen)))
    }
    if(262185 call _cond_test(262156 call ! error))
    {
      (262160 call = arg s)
    }
    {
      (262181 call = arg b"")
    }
  }
  function _unknown[51]._extractMatch[262198](arg _mt[262212]:_MT[238], arg this[262209] :
  channel, arg m[262195] :
  reMatch, ref arg arg[262202] :
  unknown t[262200], ref arg error[262206] :
  syserr) : _unknown[51] "method" "no doc"
  {
    if(262242 call _cond_test(262228 call !(262225 call . m c"matched")))
    {
      { scopeless
        unknown empty[262232](262231 'typeof' arg)
        (262235 'end of statement')
      }
      (262239 call = arg empty)
    }
    { scopeless
      unknown s[262248] bytes[24]
      (262251 'end of statement')
    }
    (262257 call _extractMatch m s error)
    if(262316 call _cond_test(262260 call ! error))
    {
      if(262299 call _cond_test(262265 call ==(262263 'typeof' arg) string[26]))
      {
        Try
        {
          {
            (262274 call = arg(262273 call(262269 call . s c"decode")))
          }
        }
        Catch
        {
          (262281 call = error EFORMAT)
        }
      }
      {
        (262295 call = arg(262293 call _cast(262292 'typeof' arg) s))
      }
    }
    {
      { scopeless
        unknown empty[262306](262305 'typeof' arg)
        (262309 'end of statement')
      }
      (262313 call = arg empty)
    }
  }
  where {
    (262222 call &&(262216 call != t reMatch)(262220 call != t bytes[24]))
  }
  function _unknown[51].extractMatch[262330](arg _mt[262337]:_MT[238], arg this[262334] :
  channel, arg m[262327] :
  reMatch, ref arg arg[262332]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[262341] ENOERR syserr
      (262344 'end of statement')
    }
    { scopeless
      const tmp[262380] "const" "temp"
      (262382 'move' tmp[262380](262378 'deref'(262377 '_wide_get_locale'(262347 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262355 call(262351 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262365 call(262361 call . this c"unlock"))
            }
          }
          (262375 call _extractMatch m arg err)
        }
        (262385 'on block' 0 tmp[262380])
      }
    }
    if(262427 call _cond_test err)
    {
      Try
      {
        {
          (262422 call(262390 call . this c"_ch_ioerror") err(262420 call +(262417 call + "in channel.extractMatch(m:reMatch, ref "(262415 call _cast string[26](262413 'typeof' arg))) ")"))
        }
      }
    }
  }
  function _unknown[51].extractMatch[262440](arg _mt[262451]:_MT[238], arg this[262448] :
  channel, arg m[262437] :
  reMatch, ref arg arg[262442]:_any[178](?), ref arg error[262445] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      const tmp[262484] "const" "temp"
      (262486 'move' tmp[262484](262482 'deref'(262481 '_wide_get_locale'(262454 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262462 call(262458 call . this c"lock"))
            }
          }
          (262472 call _extractMatch m arg error)
          (262479 call(262475 call . this c"unlock"))
        }
        (262489 'on block' 0 tmp[262484])
      }
    }
  }
  function _unknown[51]._ch_handle_captures[262505](arg _mt[262520]:_MT[238], arg this[262517] :
  channel, arg matches[262502] :
  (262501 call _ddata qio_regexp_string_piece_t), arg nmatches[262508] :
  int[13], ref arg captures[262511]:_any[178](?), ref arg error[262514] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (262531 call assert(262528 call >= nmatches(262525 call . captures c"size")))
    {
      unknown i[262566] 0
      unknown tmp[262567] "maybe param" "temp"
      (262579 'move' tmp[262567](262577 call chpl_compute_low_param_loop_bound 0(262540 call -(262536 call . captures c"size") 1)))
      unknown tmp[262568] "maybe param" "temp"
      (262592 'move' tmp[262568](262590 call chpl_compute_high_param_loop_bound 0(262584 call -(262586 call . captures c"size") 1)))
      unknown tmp[262569] "maybe param" "temp"
      (262595 'move' tmp[262569] 1)
      ParamForLoop[262597]
      { i[262566] tmp[262567] tmp[262568] tmp[262569]
        {
          { scopeless
            unknown m[262551](262550 call _to_reMatch(262548 call matches i))
            (262554 'end of statement')
          }
          (262564 call _extractMatch m(262562 call captures i) error)
        }
      }
      label _unused_continueLabel[262571]
      label _breakLabel[262570]
    }
  }
  function _unknown[51].search[262618](arg _mt[262627]:_MT[238], arg this[262624] :
  channel, arg re[262615] :
  (262614 call regexp ?[260]), ref arg error[262621] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[262631] reMatch
      (262634 'end of statement')
    }
    { scopeless
      const tmp[262814] "const" "temp"
      (262816 'move' tmp[262814](262812 'deref'(262811 '_wide_get_locale'(262637 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262645 call(262641 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[262651] 1
            (262654 'end of statement')
          }
          { scopeless
            unknown matches[262660](262659 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262663 'end of statement')
          }
          (262670 call = error(262669 call qio_channel_mark 0 _channel_internal))
          if(262703 call _cond_test(262674 call ! error))
          {
            (262699 call = error(262698 call qio_regexp_channel_match(262679 call . re c"_regexp") 0 _channel_internal(262691 call max(262689 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(262722 call _cond_test(262715 call ||(262709 call == error EFORMAT)(262713 call == error EEOF)))
          {
            { scopeless
              (262719 call = error ENOERR)
            }
          }
          if(262794 call _cond_test(262728 call ! error))
          {
            (262738 call = m(262737 call _to_reMatch(262735 call matches 0)))
            if(262790 call _cond_test(262743 call . m c"matched"))
            {
              (262749 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[262756](262755 call qio_channel_offset_unlocked _channel_internal)
                (262759 'end of statement')
              }
              { scopeless
                unknown target[262767](262765 call _cast int[13](262761 call . m c"offset"))
                (262770 'end of statement')
              }
              (262781 call = error(262780 call qio_channel_advance 0 _channel_internal(262778 call - target cur)))
            }
            {
              (262787 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (262802 call _ddata_free matches nm)
          (262809 call(262805 call . this c"unlock"))
        }
        (262819 'on block' 0 tmp[262814])
      }
    }
    (262823 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262838](arg _mt[262843]:_MT[238], arg this[262840] :
  channel, arg re[262835] :
  (262834 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[262848] ENOERR syserr
      (262851 'end of statement')
    }
    { scopeless
      unknown ret[262864](262863 call(262856 call . this c"search") re(error = e))
      (262867 'end of statement')
    }
    if(262896 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (262892 call(262870 call . this c"_ch_ioerror") e "in channel.search")
          }
        }
      }
    }
    (262902 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262917](arg _mt[262927]:_MT[238], arg this[262924] :
  channel, arg re[262914] :
  (262913 call regexp ?[260]), ref arg captures[262921]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    { scopeless
      unknown m[262931] reMatch
      (262934 'end of statement')
    }
    { scopeless
      unknown err[262938] ENOERR syserr
      (262941 'end of statement')
    }
    { scopeless
      const tmp[263137] "const" "temp"
      (263139 'move' tmp[263137](263135 'deref'(263134 '_wide_get_locale'(262943 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262951 call(262947 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262961 call(262957 call . this c"unlock"))
            }
          }
          { scopeless
            unknown nm[262973](262971 call +(262967 call . captures c"size") 1)
            (262976 'end of statement')
          }
          { scopeless
            unknown matches[262982](262981 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262985 'end of statement')
          }
          (262992 call = err(262991 call qio_channel_mark 0 _channel_internal))
          if(263025 call _cond_test(262996 call ! err))
          {
            (263021 call = err(263020 call qio_regexp_channel_match(263001 call . re c"_regexp") 0 _channel_internal(263013 call max(263011 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(263044 call _cond_test(263037 call ||(263031 call == err EFORMAT)(263035 call == err EEOF)))
          {
            { scopeless
              (263041 call = err ENOERR)
            }
          }
          if(263124 call _cond_test(263050 call ! err))
          {
            (263060 call = m(263059 call _to_reMatch(263057 call matches 0)))
            if(263120 call _cond_test(263065 call . m c"matched"))
            {
              (263074 call _ch_handle_captures matches nm captures err)
              (263080 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263086](263085 call qio_channel_offset_unlocked _channel_internal)
                (263089 'end of statement')
              }
              { scopeless
                unknown target[263097](263095 call _cast int[13](263091 call . m c"offset"))
                (263100 'end of statement')
              }
              (263111 call = err(263110 call qio_channel_advance 0 _channel_internal(263108 call - target cur)))
            }
            {
              (263117 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (263132 call _ddata_free matches nm)
        }
        (263142 'on block' 0 tmp[263137])
      }
    }
    if(263157 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (263153 call(263147 call . this c"_ch_ioerror") err "in channel.search")
          }
        }
      }
    }
    (263163 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263178](arg _mt[263187]:_MT[238], arg this[263184] :
  channel, arg re[263175] :
  (263174 call regexp ?[260]), ref arg error[263181] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[263191] reMatch
      (263194 'end of statement')
    }
    { scopeless
      const tmp[263374] "const" "temp"
      (263376 'move' tmp[263374](263372 'deref'(263371 '_wide_get_locale'(263197 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263205 call(263201 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263211] 1
            (263214 'end of statement')
          }
          { scopeless
            unknown matches[263220](263219 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263223 'end of statement')
          }
          (263230 call = error(263229 call qio_channel_mark 0 _channel_internal))
          if(263263 call _cond_test(263234 call ! error))
          {
            (263259 call = error(263258 call qio_regexp_channel_match(263239 call . re c"_regexp") 0 _channel_internal(263251 call max(263249 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263282 call _cond_test(263275 call ||(263269 call == error EFORMAT)(263273 call == error EEOF)))
          {
            { scopeless
              (263279 call = error ENOERR)
            }
          }
          if(263354 call _cond_test(263288 call ! error))
          {
            (263298 call = m(263297 call _to_reMatch(263295 call matches 0)))
            if(263350 call _cond_test(263303 call . m c"matched"))
            {
              (263309 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263316](263315 call qio_channel_offset_unlocked _channel_internal)
                (263319 'end of statement')
              }
              { scopeless
                unknown target[263327](263325 call _cast int[13](263321 call . m c"offset"))
                (263330 'end of statement')
              }
              (263341 call = error(263340 call qio_channel_advance 0 _channel_internal(263338 call - target cur)))
            }
            {
              (263347 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263362 call _ddata_free matches nm)
          (263369 call(263365 call . this c"unlock"))
        }
        (263379 'on block' 0 tmp[263374])
      }
    }
    (263383 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263398](arg _mt[263403]:_MT[238], arg this[263400] :
  channel, arg re[263395] :
  (263394 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263408] ENOERR syserr
      (263411 'end of statement')
    }
    { scopeless
      unknown ret[263424](263423 call(263416 call . this c"match") re(error = e))
      (263427 'end of statement')
    }
    if(263456 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263452 call(263430 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263462 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263477](arg _mt[263491]:_MT[238], arg this[263488] :
  channel, arg re[263474] :
  (263473 call regexp ?[260]), ref arg captures[263481]:_any[178](?) ..., ref arg error[263485] :
  syserr) : _unknown[51] "method"
  {
    { scopeless
      unknown m[263495] reMatch
      (263498 'end of statement')
    }
    { scopeless
      const tmp[263692] "const" "temp"
      (263694 'move' tmp[263692](263690 'deref'(263689 '_wide_get_locale'(263501 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263509 call(263505 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263521](263519 call + 1(263516 call . captures c"size"))
            (263524 'end of statement')
          }
          { scopeless
            unknown matches[263530](263529 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263533 'end of statement')
          }
          (263540 call = error(263539 call qio_channel_mark 0 _channel_internal))
          if(263573 call _cond_test(263544 call ! error))
          {
            (263569 call = error(263568 call qio_regexp_channel_match(263549 call . re c"_regexp") 0 _channel_internal(263561 call max(263559 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263592 call _cond_test(263585 call ||(263579 call == error EFORMAT)(263583 call == error EEOF)))
          {
            { scopeless
              (263589 call = error ENOERR)
            }
          }
          if(263672 call _cond_test(263598 call ! error))
          {
            (263608 call = m(263607 call _to_reMatch(263605 call matches 0)))
            if(263668 call _cond_test(263613 call . m c"matched"))
            {
              (263622 call _ch_handle_captures matches nm captures error)
              (263628 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263634](263633 call qio_channel_offset_unlocked _channel_internal)
                (263637 'end of statement')
              }
              { scopeless
                unknown target[263645](263643 call _cast int[13](263639 call . m c"offset"))
                (263648 'end of statement')
              }
              (263659 call = error(263658 call qio_channel_advance 0 _channel_internal(263656 call - target cur)))
            }
            {
              (263665 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263680 call _ddata_free matches nm)
          (263687 call(263683 call . this c"unlock"))
        }
        (263697 'on block' 0 tmp[263692])
      }
    }
    (263701 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263716](arg _mt[263726]:_MT[238], arg this[263723] :
  channel, arg re[263713] :
  (263712 call regexp ?[260]), ref arg captures[263720]:_any[178](?) ...) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263731] ENOERR syserr
      (263734 'end of statement')
    }
    { scopeless
      unknown ret[263747](263746 call(263737 call . this c"match") re(263743 'expand_tuple' captures)(error = e))
      (263750 'end of statement')
    }
    if(263763 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263759 call(263753 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263769 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].matches[263784](arg _mt[263802]:_MT[238], arg this[263799] :
  channel, arg re[263781] :
  (263780 call regexp ?[260]), param arg captures[263787] =
  0, arg maxmatches[263795] :
  int[13] =
  (263794 call max int[13])) : _unknown[51] "iterator fn" "method"
  {
    { scopeless
      unknown m[263805] reMatch
      (263808 'end of statement')
    }
    { scopeless
      unknown go[263811] 1
      (263814 'end of statement')
    }
    { scopeless
      unknown i[263816] 0
      (263819 'end of statement')
    }
    { scopeless
      unknown error[263822] ENOERR syserr
      (263825 'end of statement')
    }
    { scopeless
      unknown nret[263830] "param"(263828 call + captures 1)
      (263833 'end of statement')
    }
    { scopeless
      unknown ret[263838](263836 call * nret reMatch)
      (263841 'end of statement')
    }
    Try!
    {
      {
        (263844 call lock)
      }
    }
    { scopeless
      const tmp[263861] "const" "temp"
      (263863 'move' tmp[263861](263859 'deref'(263858 '_wide_get_locale'(263849 call . this c"home"))))
      {
        { scopeless
          Try!
          {
            {
              (263854 call _mark)
            }
          }
        }
        (263866 'on block' 0 tmp[263861])
      }
    }
    {
      unknown tmp[264126] "temp"
      (264156 'move' tmp[264126](264148 call _cond_test(264150 call && go(264153 call < i maxmatches))))
      WhileDo[264131]
      {
        {
          { scopeless
            const tmp[264101] "const" "temp"
            (264103 'move' tmp[264101](264099 'deref'(264098 '_wide_get_locale'(263877 call . this c"home"))))
            {
              {
                { scopeless
                  unknown nm[263884](263882 call + 1 captures)
                  (263887 'end of statement')
                }
                { scopeless
                  unknown matches[263894](263893 call _ddata_allocate qio_regexp_string_piece_t nm)
                  (263897 'end of statement')
                }
                if(263928 call _cond_test(263899 call ! error))
                {
                  (263924 call = error(263923 call qio_regexp_channel_match(263904 call . re c"_regexp") 0 _channel_internal(263916 call max(263914 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
                }
                if(264077 call _cond_test(263933 call ! error))
                {
                  (263943 call = m(263942 call _to_reMatch(263940 call matches 0)))
                  if(264073 call _cond_test(263948 call . m c"matched"))
                  {
                    {
                      unknown i[263980] 0
                      unknown tmp[263981] "maybe param" "temp"
                      (263993 'move' tmp[263981](263991 call chpl_compute_low_param_loop_bound 0(263954 call - nret 1)))
                      unknown tmp[263982] "maybe param" "temp"
                      (264003 'move' tmp[263982](264001 call chpl_compute_high_param_loop_bound 0(263998 call - nret 1)))
                      unknown tmp[263983] "maybe param" "temp"
                      (264006 'move' tmp[263983] 1)
                      ParamForLoop[264008]
                      { i[263980] tmp[263981] tmp[263982] tmp[263983]
                        {
                          (263966 call = m(263965 call _to_reMatch(263963 call matches i)))
                          (263978 call _extractMatch m(263976 call ret i) error)
                        }
                      }
                      label _unused_continueLabel[263985]
                      label _breakLabel[263984]
                    }
                    (264021 call qio_channel_revert_unlocked _channel_internal)
                    (264029 call = error(264028 call qio_channel_mark 0 _channel_internal))
                    if(264068 call _cond_test(264033 call ! error))
                    {
                      { scopeless
                        unknown cur[264039](264038 call qio_channel_offset_unlocked _channel_internal)
                        (264042 'end of statement')
                      }
                      { scopeless
                        unknown target[264051](264049 call _cast int[13](264045 call . m c"offset"))
                        (264054 'end of statement')
                      }
                      (264065 call = error(264064 call qio_channel_advance 0 _channel_internal(264062 call - target cur)))
                    }
                  }
                  {
                  }
                }
                (264085 call _ddata_free matches nm)
                if(264093 call _cond_test error)
                {
                  { scopeless
                    (264090 call = go 0)
                  }
                }
              }
              (264106 'on block' 0 tmp[264101])
            }
          }
          if(264116 call _cond_test(264111 call ! error))
          {
            { scopeless
              (264114 yield ret)
            }
          }
          (264123 call += i 1)
        }
        label _continueLabel[264129]
        (264143 'move' tmp[264126](264135 call _cond_test(264137 call && go(264140 call < i maxmatches))))
        tmp[264126]
      }
      label _breakLabel[264130]
    }
    (264161 call _commit)
    (264165 call unlock)
    if(264182 call _cond_test(264175 call ||(264169 call == error EFORMAT)(264173 call == error EEOF)))
    {
      { scopeless
        (264179 call = error ENOERR)
      }
    }
    if(264215 call _cond_test error)
    {
      { scopeless
        Try!
        {
          {
            (264211 call(264189 call . this c"_ch_ioerror") error "in channel.matches")
          }
        }
      }
    }
  }
}