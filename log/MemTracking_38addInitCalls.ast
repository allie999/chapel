AST dump for MemTracking after pass addInitCalls.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_MemTracking[416127]() : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_MemTracking_p[2656064]
    {
      goto _exit_chpl__init_MemTracking[2656099] _exit_chpl__init_MemTracking[2656099]
    }
    val modFormatStr[2656072]:c_string[19] "temp"
    val modStr[2656073]:c_string[19] "temp"
    ref refIndentLevel[2656085]:int(32)[95] "temp"
    (2656078 'move' modFormatStr[2656072] c"%*s\n")
    (2656080 'move' modStr[2656073] c"MemTracking")
    (2656083 call printModuleInit[20429] modFormatStr[2656072] modStr[2656073] 11)
    (2656089 'move' refIndentLevel[2656085](2656088 'addr of' moduleInitLevel[20419]))
    (2656092 '+=' refIndentLevel[2656085] 1)
    (2656070 'move' chpl__init_MemTracking_p[2656064] 1)
    {
      (2654604 call chpl__init_SysCTypes[416019])
    }
    (2654600 call chpl_addModule[167735] c"MemTracking" chpl__deinit_MemTracking[1930239])
    const-val call_tmp[678569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678572 'move' call_tmp[678569](544409 call chpl_config_has_value[334] c"memTrack" c"Built-in"))
    const-val call_tmp[2228580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228582 'move' call_tmp[2228580](2228584 '!' call_tmp[678569]))
    if call_tmp[2228580]
    {
      (544428 'move' tmp[544400] 0)
    }
    {
      const-val call_tmp[678584]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678587 'move' call_tmp[678584](544419 call chpl_config_get_value[350] c"memTrack" c"Built-in"))
      (544424 'move' tmp[544400](544422 call _command_line_cast[1354004] call_tmp[678584]))
    }
    (544402 'move' memTrack[166657] tmp[544400])
    (2197348 '_private_broadcast' memTrack[166657])
    const-val call_tmp[678589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678592 'move' call_tmp[678589](544439 call chpl_config_has_value[334] c"memStats" c"Built-in"))
    const-val call_tmp[2228589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228591 'move' call_tmp[2228589](2228593 '!' call_tmp[678589]))
    if call_tmp[2228589]
    {
      (544458 'move' tmp[544430] 0)
    }
    {
      const-val call_tmp[678604]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678607 'move' call_tmp[678604](544449 call chpl_config_get_value[350] c"memStats" c"Built-in"))
      (544454 'move' tmp[544430](544452 call _command_line_cast[1354047] call_tmp[678604]))
    }
    (544432 'move' memStats[166662] tmp[544430])
    (2197350 '_private_broadcast' memStats[166662])
    const-val call_tmp[678609]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678612 'move' call_tmp[678609](544469 call chpl_config_has_value[334] c"memLeaksByType" c"Built-in"))
    const-val call_tmp[2228598]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228600 'move' call_tmp[2228598](2228602 '!' call_tmp[678609]))
    if call_tmp[2228598]
    {
      (544488 'move' tmp[544460] 0)
    }
    {
      const-val call_tmp[678624]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678627 'move' call_tmp[678624](544479 call chpl_config_get_value[350] c"memLeaksByType" c"Built-in"))
      (544484 'move' tmp[544460](544482 call _command_line_cast[1354090] call_tmp[678624]))
    }
    (544462 'move' memLeaksByType[166667] tmp[544460])
    (2197352 '_private_broadcast' memLeaksByType[166667])
    const-val call_tmp[678629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678632 'move' call_tmp[678629](544499 call chpl_config_has_value[334] c"memLeaks" c"Built-in"))
    const-val call_tmp[2228607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228609 'move' call_tmp[2228607](2228611 '!' call_tmp[678629]))
    if call_tmp[2228607]
    {
      (544518 'move' tmp[544490] 0)
    }
    {
      const-val call_tmp[678644]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678647 'move' call_tmp[678644](544509 call chpl_config_get_value[350] c"memLeaks" c"Built-in"))
      (544514 'move' tmp[544490](544512 call _command_line_cast[1354133] call_tmp[678644]))
    }
    (544492 'move' memLeaks[166672] tmp[544490])
    (2197354 '_private_broadcast' memLeaks[166672])
    const-val call_tmp[678649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678652 'move' call_tmp[678649](544529 call chpl_config_has_value[334] c"memMax" c"Built-in"))
    const-val call_tmp[2228616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228618 'move' call_tmp[2228616](2228620 '!' call_tmp[678649]))
    if call_tmp[2228616]
    {
      const-val init_coerce_tmp[1354175]:uint(64)[115] "dead at end of block" "temp"
      (1354178 'move' init_coerce_tmp[1354175](1356954 'cast' uint(64)[115] 0))
      (544548 'move' tmp[544520] init_coerce_tmp[1354175])
    }
    {
      const-val call_tmp[678664]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678667 'move' call_tmp[678664](544539 call chpl_config_get_value[350] c"memMax" c"Built-in"))
      (544544 'move' tmp[544520](544542 call _command_line_cast[1354184] call_tmp[678664]))
    }
    (544522 'move' memMax[166677] tmp[544520])
    (2197356 '_private_broadcast' memMax[166677])
    const-val call_tmp[678669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678672 'move' call_tmp[678669](544559 call chpl_config_has_value[334] c"memThreshold" c"Built-in"))
    const-val call_tmp[2228625]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228627 'move' call_tmp[2228625](2228629 '!' call_tmp[678669]))
    if call_tmp[2228625]
    {
      const-val init_coerce_tmp[1356509]:uint(64)[115] "dead at end of block" "temp"
      (1356512 'move' init_coerce_tmp[1356509](1356958 'cast' uint(64)[115] 0))
      (544578 'move' tmp[544550] init_coerce_tmp[1356509])
    }
    {
      const-val call_tmp[678684]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678687 'move' call_tmp[678684](544569 call chpl_config_get_value[350] c"memThreshold" c"Built-in"))
      (544574 'move' tmp[544550](544572 call _command_line_cast[1356518] call_tmp[678684]))
    }
    (544552 'move' memThreshold[166682] tmp[544550])
    (2197358 '_private_broadcast' memThreshold[166682])
    const-val call_tmp[678689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678692 'move' call_tmp[678689](544589 call chpl_config_has_value[334] c"memLog" c"Built-in"))
    const-val call_tmp[2228634]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228636 'move' call_tmp[2228634](2228638 '!' call_tmp[678689]))
    if call_tmp[2228634]
    {
      (1356962 call init[30763] tmp[544580])
    }
    {
      const-val call_tmp[678704]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678707 'move' call_tmp[678704](544599 call chpl_config_get_value[350] c"memLog" c"Built-in"))
      const-val ret_tmp[1914313]:string[26] "temp"
      (544602 call _command_line_cast[1356562] call_tmp[678704] ret_tmp[1914313])
      (1914316 'move' tmp[544580] ret_tmp[1914313])
    }
    (544582 'move' memLog[166686] tmp[544580])
    (2197360 '_private_broadcast' memLog[166686])
    const-val call_tmp[678709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678712 'move' call_tmp[678709](544619 call chpl_config_has_value[334] c"memLeaksLog" c"Built-in"))
    const-val call_tmp[2228643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228645 'move' call_tmp[2228643](2228647 '!' call_tmp[678709]))
    if call_tmp[2228643]
    {
      (1356967 call init[30763] tmp[544610])
    }
    {
      const-val call_tmp[678724]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678727 'move' call_tmp[678724](544629 call chpl_config_get_value[350] c"memLeaksLog" c"Built-in"))
      const-val ret_tmp[1914349]:string[26] "temp"
      (544632 call _command_line_cast[1356868] call_tmp[678724] ret_tmp[1914349])
      (1914352 'move' tmp[544610] ret_tmp[1914349])
    }
    (544612 'move' memLeaksLog[166691] tmp[544610])
    (2197362 '_private_broadcast' memLeaksLog[166691])
    const-val call_tmp[678729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678732 'move' call_tmp[678729](544649 call chpl_config_has_value[334] c"memLeaksByDesc" c"Built-in"))
    const-val call_tmp[2228652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228654 'move' call_tmp[2228652](2228656 '!' call_tmp[678729]))
    if call_tmp[2228652]
    {
      (1356972 call init[30763] tmp[544640])
    }
    {
      const-val call_tmp[678744]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678747 'move' call_tmp[678744](544659 call chpl_config_get_value[350] c"memLeaksByDesc" c"Built-in"))
      const-val ret_tmp[1914361]:string[26] "temp"
      (544662 call _command_line_cast[1356912] call_tmp[678744] ret_tmp[1914361])
      (1914364 'move' tmp[544640] ret_tmp[1914361])
    }
    (544642 'move' memLeaksByDesc[166696] tmp[544640])
    (2197364 '_private_broadcast' memLeaksByDesc[166696])
    (678754 'move' call_tmp[678751] memMax[166677])
    (544670 'move' cMemMax[166707] call_tmp[678751])
    (2197366 '_private_broadcast' cMemMax[166707])
    (678761 'move' call_tmp[678758] memThreshold[166682])
    (544672 'move' cMemThreshold[166717] call_tmp[678758])
    (2197368 '_private_broadcast' cMemThreshold[166717])
    (2656095 '-=' refIndentLevel[2656085] 1)
    label _endchpl__init_MemTracking[2656101]
    label _exit_chpl__init_MemTracking[2656099]
    (522042 return _void[55])
  }
  const-val memTrack[166657]:bool[10] "config" "const" "insert auto destroy"
  const-val memStats[166662]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaksByType[166667]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaks[166672]:bool[10] "config" "const" "insert auto destroy"
  const-val memMax[166677]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memThreshold[166682]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memLog[166686]:string[26] "config" "const" "insert auto destroy"
  const-val memLeaksLog[166691]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val memLeaksByDesc[166696]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val cMemMax[166707]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[166717]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[166727](ref arg ret_memTrack[166724]:bool[10], ref arg ret_memStats[166730]:bool[10], ref arg ret_memLeaksByType[166734]:bool[10], ref arg ret_memLeaksByDesc[166738]:c_string[19], ref arg ret_memLeaks[166742]:bool[10], ref arg ret_memMax[166746]:uint(64)[115], ref arg ret_memThreshold[166750]:uint(64)[115], ref arg ret_memLog[166754]:c_string[19], ref arg ret_memLeaksLog[166758]:c_string[19]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local_memLeaksLog[2576757]:string[26] "temp"
    (2576758 'move' local_memLeaksLog[2576757] memLeaksLog[166691])
    const-val local_memLog[2576748]:string[26] "temp"
    (2576749 'move' local_memLog[2576748] memLog[166686])
    const-val local__str_literal_4797[2576742]:string[26] "temp"
    (2576743 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_503[2576735]:string[26] "temp"
    (2576736 'move' "Encountered corrupt string metadata" "Encountered corrupt string metadata")
    const-val local_memLeaksByDesc[2576729]:string[26] "temp"
    (2576730 'move' local_memLeaksByDesc[2576729] memLeaksByDesc[166696])
    const-val local__str_literal_129[2576723]:string[26] "temp"
    (2576724 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_cMemThreshold[2576717]:uint(64)[115] "temp"
    (2576718 'move' local_cMemThreshold[2576717] cMemThreshold[166717])
    const-val local_cMemMax[2576711]:uint(64)[115] "temp"
    (2576712 'move' local_cMemMax[2576711] cMemMax[166707])
    const-val local_memLeaks[2576705]:bool[10] "temp"
    (2576706 'move' local_memLeaks[2576705] memLeaks[166672])
    const-val local_memLeaksByType[2576699]:bool[10] "temp"
    (2576700 'move' local_memLeaksByType[2576699] memLeaksByType[166667])
    const-val local_memStats[2576693]:bool[10] "temp"
    (2576694 'move' local_memStats[2576693] memStats[166662])
    const-val local_memTrack[2576687]:bool[10] "temp"
    (2576688 'move' local_memTrack[2576687] memTrack[166657])
    (2251847 '=' ret_memTrack[166724] local_memTrack[2576687])
    (2251853 '=' ret_memStats[166730] local_memStats[2576693])
    (2251859 '=' ret_memLeaksByType[166734] local_memLeaksByType[2576699])
    (2251865 '=' ret_memLeaks[166742] local_memLeaks[2576705])
    (2333908 '=' ret_memMax[166746] local_cMemMax[2576711])
    (2333914 '=' ret_memThreshold[166750] local_cMemThreshold[2576717])
    const-val call_tmp[678763]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285531]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285533]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285535 'move' call_tmp[2285533](2285538 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285541 'move' call_tmp[2285531] call_tmp[2285533])
    const-val call_tmp[2285544]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285546]:locale[28] "temp"
    wide-ref tmp[2631091]:chpl_localeID_t[209352] "temp"
    (2631095 'move' tmp[2631091](2631093 'set reference' call_tmp[2285531]))
    (2285549 call chpl_localeID_to_locale[92852] tmp[2631091] ret_tmp[2285546])
    (2285552 'move' call_tmp[2285544] ret_tmp[2285546])
    (1906253 'move' call_tmp[678763] call_tmp[2285544])
    val coerce_tmp[2288049]:__wide_BaseLocale[2581355] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2288051 'move' coerce_tmp[2288049](2288053 '.v' call_tmp[678763] _instance[89978]))
    val coerce_tmp[2288056]:__wide_object[2581313] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2288058 'move' coerce_tmp[2288056](2288060 'cast' object[22] coerce_tmp[2288049]))
    const-val call_tmp[2288063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2631480]:__wide_object[2581313] "temp"
    (2631483 'move' tmp[2631480] nil[44])
    (2288065 'move' call_tmp[2288063](2288067 'ptr_eq' coerce_tmp[2288056] tmp[2631480]))
    if call_tmp[2288063]
    {
      (2288073 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[2288076]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2288078 'move' call_tmp[2288076](2288081 call id[90757] coerce_tmp[2288049]))
    const-val call_tmp[2229866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229868 'move' call_tmp[2229866](2229870 '!=' call_tmp[2288076] 0))
    if call_tmp[2229866]
    {
      ref i_this[2263263]:string[26] "temp"
      (2263267 'move' i_this[2263263](2263265 'set reference' memLeaksByDesc[166696]))
      const-val coerce_tmp[2263272]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      val tmp[2629221]:int(64)[13] "temp"
      (2263274 'move' tmp[2629221](2263276 '.v' local_memLeaksByDesc[2576729] cachedNumCodepoints[30734]))
      (2629224 'move' coerce_tmp[2263272] tmp[2629221])
      (2263282 'noop')
      const-val call_tmp[2263283]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2629227]:string[26] "temp"
      (2629230 'move' tmp[2629227] i_this[2263263])
      (2263285 'move' call_tmp[2263283](2263288 call countNumCodepoints[181380] tmp[2629227]))
      const-val call_tmp[2263290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263292 'move' call_tmp[2263290](2263294 '!=' coerce_tmp[2263272] call_tmp[2263283]))
      if call_tmp[2263290]
      {
        (2263300 call halt[154111] "Encountered corrupt string metadata")
      }
      const-val call_tmp[2229881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229883 'move' call_tmp[2229881](2229885 '!=' coerce_tmp[2263272] 0))
      if call_tmp[2229881]
      {
        val local_memLeaksByDesc[166807]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2615058]:string[26] "temp"
        (2615062 'move' tmp[2615058](2615060 'set reference' local_memLeaksByDesc[2576729]))
        (544674 call init=[30774] local_memLeaksByDesc[166807] tmp[2615058])
        (2564102 '.=' local_memLeaksByDesc[166807] isOwned[30746] 0)
        const-val coerce_tmp[2269139]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630277]:int(32)[95] "temp"
        (2269141 'move' tmp[2630277](2269143 '.v' local_memLeaksByDesc[166807] locale_id[30757]))
        (2630280 'move' coerce_tmp[2269139] tmp[2630277])
        const-val call_tmp[2269146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269148 'move' call_tmp[2269146](2269150 '!=' coerce_tmp[2269139] chpl_nodeID[208207]))
        if call_tmp[2269146]
        {
          (2269156 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269159]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630283]:c_ptr(uint(8))[937612] "temp"
        (2269161 'move' tmp[2630283](2269163 '.v' local_memLeaksByDesc[166807] buff[30740]))
        (2630286 'move' coerce_tmp[2269159] tmp[2630283])
        const-val call_tmp[2269166]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269168 'move' call_tmp[2269166](2269170 'cast' c_string[19] coerce_tmp[2269159]))
        (2235430 '=' ret_memLeaksByDesc[166738] call_tmp[2269166])
        ref i_x[2245973]:string[26] "temp"
        (2245977 'move' i_x[2245973](2245975 'set reference' local_memLeaksByDesc[166807]))
        wide-ref tmp[2627065]:string[26] "temp"
        (2627068 'move' tmp[2627065] i_x[2245973])
        (2245981 call deinit[30834] tmp[2627065])
      }
      {
        const-val call_tmp[2235558]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235560 'move' call_tmp[2235558](2235562 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235565]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235567 'move' call_tmp[2235565](2235569 'cast' c_string[19] call_tmp[2235558]))
        (2235572 '=' ret_memLeaksByDesc[166738] call_tmp[2235565])
      }
      ref i_this[2263305]:string[26] "temp"
      (2263309 'move' i_this[2263305](2263307 'set reference' memLog[166686]))
      const-val coerce_tmp[2263314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      val tmp[2629233]:int(64)[13] "temp"
      (2263316 'move' tmp[2629233](2263318 '.v' local_memLog[2576748] cachedNumCodepoints[30734]))
      (2629236 'move' coerce_tmp[2263314] tmp[2629233])
      (2263324 'noop')
      const-val call_tmp[2263325]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2629239]:string[26] "temp"
      (2629242 'move' tmp[2629239] i_this[2263305])
      (2263327 'move' call_tmp[2263325](2263330 call countNumCodepoints[181380] tmp[2629239]))
      const-val call_tmp[2263332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263334 'move' call_tmp[2263332](2263336 '!=' coerce_tmp[2263314] call_tmp[2263325]))
      if call_tmp[2263332]
      {
        (2263342 call halt[154111] "Encountered corrupt string metadata")
      }
      const-val call_tmp[2229896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229898 'move' call_tmp[2229896](2229900 '!=' coerce_tmp[2263314] 0))
      if call_tmp[2229896]
      {
        val local_memLog[166849]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2615065]:string[26] "temp"
        (2615069 'move' tmp[2615065](2615067 'set reference' local_memLog[2576748]))
        (544676 call init=[30774] local_memLog[166849] tmp[2615065])
        (2564112 '.=' local_memLog[166849] isOwned[30746] 0)
        const-val coerce_tmp[2269182]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630289]:int(32)[95] "temp"
        (2269184 'move' tmp[2630289](2269186 '.v' local_memLog[166849] locale_id[30757]))
        (2630292 'move' coerce_tmp[2269182] tmp[2630289])
        const-val call_tmp[2269189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269191 'move' call_tmp[2269189](2269193 '!=' coerce_tmp[2269182] chpl_nodeID[208207]))
        if call_tmp[2269189]
        {
          (2269199 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269202]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630295]:c_ptr(uint(8))[937612] "temp"
        (2269204 'move' tmp[2630295](2269206 '.v' local_memLog[166849] buff[30740]))
        (2630298 'move' coerce_tmp[2269202] tmp[2630295])
        const-val call_tmp[2269209]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269211 'move' call_tmp[2269209](2269213 'cast' c_string[19] coerce_tmp[2269202]))
        (2235442 '=' ret_memLog[166754] call_tmp[2269209])
        ref i_x[2245985]:string[26] "temp"
        (2245989 'move' i_x[2245985](2245987 'set reference' local_memLog[166849]))
        wide-ref tmp[2627071]:string[26] "temp"
        (2627074 'move' tmp[2627071] i_x[2245985])
        (2245993 call deinit[30834] tmp[2627071])
      }
      {
        const-val call_tmp[2235578]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235580 'move' call_tmp[2235578](2235582 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235585]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235587 'move' call_tmp[2235585](2235589 'cast' c_string[19] call_tmp[2235578]))
        (2235592 '=' ret_memLog[166754] call_tmp[2235585])
      }
      ref i_this[2263347]:string[26] "temp"
      (2263351 'move' i_this[2263347](2263349 'set reference' memLeaksLog[166691]))
      const-val coerce_tmp[2263356]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      val tmp[2629245]:int(64)[13] "temp"
      (2263358 'move' tmp[2629245](2263360 '.v' local_memLeaksLog[2576757] cachedNumCodepoints[30734]))
      (2629248 'move' coerce_tmp[2263356] tmp[2629245])
      (2263366 'noop')
      const-val call_tmp[2263367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2629251]:string[26] "temp"
      (2629254 'move' tmp[2629251] i_this[2263347])
      (2263369 'move' call_tmp[2263367](2263372 call countNumCodepoints[181380] tmp[2629251]))
      const-val call_tmp[2263374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2263376 'move' call_tmp[2263374](2263378 '!=' coerce_tmp[2263356] call_tmp[2263367]))
      if call_tmp[2263374]
      {
        (2263384 call halt[154111] "Encountered corrupt string metadata")
      }
      const-val call_tmp[2229911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229913 'move' call_tmp[2229911](2229915 '!=' coerce_tmp[2263356] 0))
      if call_tmp[2229911]
      {
        val local_memLeaksLog[166890]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2615072]:string[26] "temp"
        (2615076 'move' tmp[2615072](2615074 'set reference' local_memLeaksLog[2576757]))
        (544678 call init=[30774] local_memLeaksLog[166890] tmp[2615072])
        (2564122 '.=' local_memLeaksLog[166890] isOwned[30746] 0)
        const-val coerce_tmp[2269225]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630301]:int(32)[95] "temp"
        (2269227 'move' tmp[2630301](2269229 '.v' local_memLeaksLog[166890] locale_id[30757]))
        (2630304 'move' coerce_tmp[2269225] tmp[2630301])
        const-val call_tmp[2269232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269234 'move' call_tmp[2269232](2269236 '!=' coerce_tmp[2269225] chpl_nodeID[208207]))
        if call_tmp[2269232]
        {
          (2269242 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2269245]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2630307]:c_ptr(uint(8))[937612] "temp"
        (2269247 'move' tmp[2630307](2269249 '.v' local_memLeaksLog[166890] buff[30740]))
        (2630310 'move' coerce_tmp[2269245] tmp[2630307])
        const-val call_tmp[2269252]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269254 'move' call_tmp[2269252](2269256 'cast' c_string[19] coerce_tmp[2269245]))
        (2235448 '=' ret_memLeaksLog[166758] call_tmp[2269252])
        ref i_x[2245997]:string[26] "temp"
        (2246001 'move' i_x[2245997](2245999 'set reference' local_memLeaksLog[166890]))
        wide-ref tmp[2627077]:string[26] "temp"
        (2627080 'move' tmp[2627077] i_x[2245997])
        (2246005 call deinit[30834] tmp[2627077])
      }
      {
        const-val call_tmp[2235598]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235600 'move' call_tmp[2235598](2235602 'cast' c_void_ptr[149] nil[44]))
        const-val call_tmp[2235605]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235607 'move' call_tmp[2235605](2235609 'cast' c_string[19] call_tmp[2235598]))
        (2235612 '=' ret_memLeaksLog[166758] call_tmp[2235605])
      }
    }
    {
      const-val coerce_tmp[2269268]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630313]:int(32)[95] "temp"
      (2269270 'move' tmp[2630313](2269272 '.v' local_memLeaksByDesc[2576729] locale_id[30757]))
      (2630316 'move' coerce_tmp[2269268] tmp[2630313])
      const-val call_tmp[2269275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269277 'move' call_tmp[2269275](2269279 '!=' coerce_tmp[2269268] chpl_nodeID[208207]))
      if call_tmp[2269275]
      {
        (2269285 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269288]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630319]:c_ptr(uint(8))[937612] "temp"
      (2269290 'move' tmp[2630319](2269292 '.v' local_memLeaksByDesc[2576729] buff[30740]))
      (2630322 'move' coerce_tmp[2269288] tmp[2630319])
      const-val call_tmp[2269295]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269297 'move' call_tmp[2269295](2269299 'cast' c_string[19] coerce_tmp[2269288]))
      (2235454 '=' ret_memLeaksByDesc[166738] call_tmp[2269295])
      const-val coerce_tmp[2269311]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630325]:int(32)[95] "temp"
      (2269313 'move' tmp[2630325](2269315 '.v' local_memLog[2576748] locale_id[30757]))
      (2630328 'move' coerce_tmp[2269311] tmp[2630325])
      const-val call_tmp[2269318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269320 'move' call_tmp[2269318](2269322 '!=' coerce_tmp[2269311] chpl_nodeID[208207]))
      if call_tmp[2269318]
      {
        (2269328 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269331]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630331]:c_ptr(uint(8))[937612] "temp"
      (2269333 'move' tmp[2630331](2269335 '.v' local_memLog[2576748] buff[30740]))
      (2630334 'move' coerce_tmp[2269331] tmp[2630331])
      const-val call_tmp[2269338]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269340 'move' call_tmp[2269338](2269342 'cast' c_string[19] coerce_tmp[2269331]))
      (2235460 '=' ret_memLog[166754] call_tmp[2269338])
      const-val coerce_tmp[2269354]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630337]:int(32)[95] "temp"
      (2269356 'move' tmp[2630337](2269358 '.v' local_memLeaksLog[2576757] locale_id[30757]))
      (2630340 'move' coerce_tmp[2269354] tmp[2630337])
      const-val call_tmp[2269361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269363 'move' call_tmp[2269361](2269365 '!=' coerce_tmp[2269354] chpl_nodeID[208207]))
      if call_tmp[2269361]
      {
        (2269371 call halt[154111] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2269374]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2630343]:c_ptr(uint(8))[937612] "temp"
      (2269376 'move' tmp[2630343](2269378 '.v' local_memLeaksLog[2576757] buff[30740]))
      (2630346 'move' coerce_tmp[2269374] tmp[2630343])
      const-val call_tmp[2269381]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269383 'move' call_tmp[2269381](2269385 'cast' c_string[19] coerce_tmp[2269374]))
      (2235466 '=' ret_memLeaksLog[166758] call_tmp[2269381])
    }
    ref i_x[2388509]:locale[28] "temp"
    (2388513 'move' i_x[2388509](2388511 'set reference' call_tmp[678763]))
    wide-ref tmp[2636496]:locale[28] "temp"
    (2636499 'move' tmp[2636496] i_x[2388509])
    (2388517 call deinit[90188] tmp[2636496])
    (522040 return _void[55])
  }
  val tmp[544400]:bool[10] "dead at end of block" "temp"
  val tmp[544430]:bool[10] "dead at end of block" "temp"
  val tmp[544460]:bool[10] "dead at end of block" "temp"
  val tmp[544490]:bool[10] "dead at end of block" "temp"
  val tmp[544520]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544550]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544580]:string[26] "dead at end of block" "temp"
  val tmp[544610]:string[26] "dead at end of block" "temp"
  val tmp[544640]:string[26] "dead at end of block" "temp"
  const-val call_tmp[678751]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[678758]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_MemTracking[1930239]() : void[4] "resolved"
  {
    label _endchpl__deinit_MemTracking[1930245]
    ref i_x[2249621]:string[26] "temp"
    (2249625 'move' i_x[2249621](2249623 'set reference' memLog[166686]))
    wide-ref tmp[2628325]:string[26] "temp"
    (2628328 'move' tmp[2628325] i_x[2249621])
    (2249629 call deinit[30834] tmp[2628325])
    (1930242 return _void[55])
  }
}