AST dump for ChapelLocks after pass resolve.
Module use list: Atomics ChapelBase MemConsistency 

{
  function chpl__init_ChapelLocks[416085]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524053 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941090].lock[187323](arg this[187434]:_ref(chpl_LocalSpinlock)[941090]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    const tmp[187402]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    unknown call_tmp[690520]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (690523 'move' call_tmp[690520](187399 '_wide_get_locale' this[187434]))
    (187404 'move' tmp[187402] call_tmp[690520])
    (935496 call on_fn[935492] tmp[187402])
    function on_fn[935492](const in arg dummy_locale_arg[935494]:chpl_localeID_t[209352]) : void[4] "on" "resolved"
    {
      {
        unknown tmp[187348]:bool[10] "dead after last mention" "temp"
        unknown tmp[429563]:bool[10] "dead after last mention" "maybe param" "temp"
        ref call_tmp[690527]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
        (690530 'move' call_tmp[690527](361920 call l[820314] this[187434]))
        (429574 'move' tmp[429563](187386 call read[1230788] call_tmp[690527]))
        (1231662 'end of statement')
        unknown tmp[572116]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        unknown tmp[572117]:bool[10] "dead after last mention" "maybe param" "temp"
        unknown call_tmp[690539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (690542 'move' call_tmp[690539] tmp[429563])
        (572122 'move' tmp[572117] call_tmp[690539])
        if tmp[572117]
        {
          (572127 'move' tmp[572116] 1)
        }
        {
          unknown tmp[572129]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          ref call_tmp[690546]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
          (690549 'move' call_tmp[690546](361925 call l[820314] this[187434]))
          unknown call_tmp[690553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (690556 'move' call_tmp[690553](187391 call testAndSet[1231664] call_tmp[690546]))
          (572131 'move' tmp[572129] call_tmp[690553])
          (572136 'move' tmp[572116] tmp[572129])
        }
        (187396 'move' tmp[187348] tmp[572116])
        WhileDo[187353]
        {
          (187346 call chpl_task_yield[209700])
          (484538 'end of statement')
          label _continueLabel[187351]
          unknown tmp[429542]:bool[10] "dead after last mention" "maybe param" "temp"
          ref call_tmp[690560]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
          (690563 'move' call_tmp[690560](361909 call l[820314] this[187434]))
          (429553 'move' tmp[429542](187364 call read[1230788] call_tmp[690560]))
          (1232416 'end of statement')
          unknown tmp[572143]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          unknown tmp[572144]:bool[10] "dead after last mention" "maybe param" "temp"
          unknown call_tmp[690572]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (690575 'move' call_tmp[690572] tmp[429542])
          (572149 'move' tmp[572144] call_tmp[690572])
          if tmp[572144]
          {
            (572154 'move' tmp[572143] 1)
          }
          {
            unknown tmp[572156]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            ref call_tmp[690579]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
            (690582 'move' call_tmp[690579](361914 call l[820314] this[187434]))
            unknown call_tmp[690586]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (690589 'move' call_tmp[690586](187369 call testAndSet[1231664] call_tmp[690579]))
            (572158 'move' tmp[572156] call_tmp[690586])
            (572163 'move' tmp[572143] tmp[572156])
          }
          (187374 'move' tmp[187348] tmp[572143])
          tmp[187348]
        }
        label _breakLabel[187352]
      }
      (935499 return _void[55])
    }
    {
    }
    (524049 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941090].unlock[187415](arg this[187438]:_ref(chpl_LocalSpinlock)[941090]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[690593]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
    (690596 'move' call_tmp[690593](361931 call l[820314] this[187438]))
    (187426 call clear[1232514] call_tmp[690593])
    (524051 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941090].l[820314](ref arg this[820318]:_ref(chpl_LocalSpinlock)[941090]) ref : _ref(AtomicBool)[941201] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[820328]:_ref(AtomicBool)[941201] "dead after last mention" "RVV" "temp"
    ref call_tmp[820335]:_ref(AtomicBool)[941201] "dead after last mention" "maybe param" "temp"
    (820338 'move' call_tmp[820335](820322 '.' this[820318] l[187317]))
    (820333 'move' ret[820328] call_tmp[820335])
    (820330 return ret[820328])
  }
  function _ref(chpl_LocalSpinlock)[941090].init[820340](ref arg this[820343]:_ref(chpl_LocalSpinlock)[941090], in arg l[820346]:AtomicBool[45877]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    unknown _formal_tmp_l[945174]:AtomicBool[45877] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945177 'move' _formal_tmp_l[945174] l[820346])
    (820362 '.=' this[820343] l[187317] _formal_tmp_l[945174])
    (820366 return _void[55])
  }
  function init_default_l[944847]() : AtomicBool[45877] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    unknown ret[944849]:AtomicBool[45877] "dead after last mention" "RVV" "maybe param" "temp"
    unknown l[944854]:AtomicBool[45877] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    unknown _formal_type[944856]:AtomicBool[45877] "dead after last mention" "temp" "type variable"
    (944871 call init[44788] l[944854])
    (944867 'move' ret[944849] l[944854])
    (944852 return ret[944849])
  }
  function _ref(chpl_LocalSpinlock)[941090].init=[820368](ref arg this[820372]:_ref(chpl_LocalSpinlock)[941090], arg other[820373]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "copy initializer" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    ref call_tmp[820403]:_ref(AtomicBool)[941201] "dead after last mention" "insert auto destroy" "maybe param" "temp"
    (820406 'move' call_tmp[820403](820381 call l[820314] other[820373]))
    unknown call_tmp[820408]:AtomicBool[45877] "dead after last mention" "maybe param" "temp" "type variable"
    unknown tmp[820387]:AtomicBool[45877] "dead after last mention" "temp"
    (820392 call init=[44816] tmp[820387] call_tmp[820403])
    (820394 '.=' this[820372] l[187317] tmp[820387])
    (820398 'end of statement')
    (820399 return _void[55])
  }
  function _ref(chpl_LocalSpinlock)[941090].deinit[820413](arg this[820417]:_ref(chpl_LocalSpinlock)[941090]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (820425 return _void[55])
  }
  type chpl_LocalSpinlock[187432] unknown l[187317]:AtomicBool[45877]
}