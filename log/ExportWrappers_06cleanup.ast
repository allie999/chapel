AST dump for ExportWrappers after pass cleanup.
Module use list: 

{
  (172096 'use' ChapelStandard)
  (172100 'use' CPtr)
  (172103 'use' SysCTypes)
  type chpl_byte_buffer[172131] unknown isOwned[172110](172109 call int[13] 8) unknown data[172118](172117 call c_ptr c_char) unknown size[172126](172125 call uint[115] 64)
  function chpl_byte_buffer_free[172140](arg cb[172137] :
  chpl_byte_buffer) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
  }
  unknown chpl__exportTypeChplByteBuffer[172145] "type variable" chpl_byte_buffer
  function chpl__exportRetStringOrBytes[172152](ref arg val[172150]:_any[178](?)) : _unknown[51]
  {
    unknown result[172156] chpl_byte_buffer
    (172159 'end of statement')
    (172175 call =(172162 call . result c"isOwned")(172173 call _cast(172172 call int[13] 8)(172166 call . val c"isOwned")))
    (172192 call =(172179 call . result c"data")(172190 call _cast(172189 call c_ptr c_char)(172183 call . val c"buff")))
    (172209 call =(172196 call . result c"size")(172207 call _cast(172206 call uint[115] 64)(172200 call . val c"numBytes")))
    (172217 call =(172213 call . val c"isOwned") 0)
    (172221 return result)
  }
  { scopeless type
    chpl_byte_buffer
  }
  function chpl__exportRet[172232](ref arg val[172229] :
  string[26], arg rt[172235] :
  chpl_byte_buffer) : _unknown[51]
  {
    (172243 return(172242 call chpl__exportRetStringOrBytes val))
  }
  { scopeless type
    rt
  }
  function chpl__exportRet[172255](ref arg val[172252] :
  bytes[24], arg rt[172258] :
  chpl_byte_buffer) : _unknown[51]
  {
    (172266 return(172265 call chpl__exportRetStringOrBytes val))
  }
  { scopeless type
    rt
  }
  function chpl__exportArg[172278](arg cp[172275] :
  bool[10], arg val[172281] :
  chpl_byte_buffer, arg rt[172285] :
  string[26]) : _unknown[51]
  {
    unknown data[172296](172294 call _cast c_string(172290 call . val c"data"))
    (172299 'end of statement')
    unknown size[172311](172310 call(172305 call .(172302 call . val c"size") c"safeCast") int[13])
    (172314 'end of statement')
    Try!
    {
      {
        if(172323 call _cond_test cp)
        {
          (172321 return(172320 call createStringWithNewBuffer data size))
        }
        (172334 return(172333 call createStringWithBorrowedBuffer data size))
      }
    }
  }
  { scopeless type
    rt
  }
  function chpl__exportArg[172348](arg cp[172345] :
  bool[10], arg val[172351] :
  chpl_byte_buffer, arg rt[172355] :
  bytes[24]) : _unknown[51]
  {
    unknown data[172366](172364 call _cast c_string(172360 call . val c"data"))
    (172369 'end of statement')
    unknown size[172381](172380 call(172375 call .(172372 call . val c"size") c"safeCast") int[13])
    (172384 'end of statement')
    Try!
    {
      {
        if(172393 call _cond_test cp)
        {
          (172391 return(172390 call createBytesWithNewBuffer data size))
        }
        (172404 return(172403 call createBytesWithBorrowedBuffer data size))
      }
    }
  }
  { scopeless type
    rt
  }
}