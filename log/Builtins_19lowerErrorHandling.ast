AST dump for Builtins after pass lowerErrorHandling.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416130]() : void[4] "insert line file info" "module init" "resolved"
  {
    (527881 return _void[55])
  }
  function assert[210363](const in arg test[210360]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "no return value for void"
  {
    val call_tmp[704781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (704784 'move' call_tmp[704781](210366 call ![7494] test[210360]))
    val call_tmp[704786]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (704789 'move' call_tmp[704786] call_tmp[704781])
    if call_tmp[704786]
    {
      (210373 'chpl_error' c"assert failed")
    }
    (527859 return _void[55])
  }
  function assert[1555886](const in arg test[1555888]:bool[10], const  ref arg _e0_args[1555890]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1555899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555901 'move' call_tmp[1555899](1555904 call ![7494] test[1555888]))
    val call_tmp[1555906]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555908 'move' call_tmp[1555906] call_tmp[1555899])
    if call_tmp[1555906]
    {
      val call_tmp[1555915]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1555917 'move' call_tmp[1555915](1555920 call stringify[1555954] _e0_args[1555890]))
      val call_tmp[1555922]:string[26] "dead at end of block" "maybe param" "temp"
      (1555924 'move' call_tmp[1555922](1555927 call +[38345] "assert failed - " call_tmp[1555915]))
      val tmpstring[1555930]:string[26] "dead at end of block" "insert auto destroy"
      (1555932 'move' tmpstring[1555930] call_tmp[1555922])
      (1555935 'end of statement')
      val call_tmp[1555936]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1555938 'move' call_tmp[1555936](1555944 call c_str[32935] tmpstring[1555930]))
      (1555945 'chpl_error' call_tmp[1555936])
      (1555947 'end of statement' tmpstring[1555930])
    }
    (1555950 return _void[55])
  }
  function assert[1579417](const in arg test[1579419]:bool[10], const  ref arg _e0_args[1579421]:string[26], const in arg _e1_args[1579423]:uint(64)[115], const  ref arg _e2_args[1579425]:string[26], const in arg _e3_args[1579427]:int(64)[13]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1579442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1579444 'move' call_tmp[1579442](1579447 call ![7494] test[1579419]))
    val call_tmp[1579449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1579451 'move' call_tmp[1579449] call_tmp[1579442])
    if call_tmp[1579449]
    {
      val call_tmp[1579458]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1579460 'move' call_tmp[1579458](1579463 call stringify[1579506] _e0_args[1579421] _e1_args[1579423] _e2_args[1579425] _e3_args[1579427]))
      val call_tmp[1579468]:string[26] "dead at end of block" "maybe param" "temp"
      (1579470 'move' call_tmp[1579468](1579473 call +[38345] "assert failed - " call_tmp[1579458]))
      val tmpstring[1579476]:string[26] "dead at end of block" "insert auto destroy"
      (1579478 'move' tmpstring[1579476] call_tmp[1579468])
      (1579481 'end of statement')
      val call_tmp[1579482]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (1579484 'move' call_tmp[1579482](1579490 call c_str[32935] tmpstring[1579476]))
      (1579491 'chpl_error' call_tmp[1579482])
      (1579493 'end of statement' tmpstring[1579476])
    }
    (1579496 return _void[55])
  }
  function compilerAssert[973909]() : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (973943 'end of statement')
    (973937 return _void[55])
  }
}