AST dump for LocaleModelHelpMem after pass optimizeOnClauses.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[416169]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (524273 return _void[55])
  }
  function chpl_memhook_md_num[187773]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524160]:int(16)[90] "RVV" "temp"
    (524162 return ret[524160])
  }
  function _local_chpl_here_alloc[2597816](const in arg size[2597818]:int(64)[13], const in arg md[2597820]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4780[2597823]:string[26] "temp"
    (2597825 'move' local__str_literal_4780[2597823] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2597828]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597830 'move' call_tmp[2597828](2597832 '<' size[2597818] 0))
    if call_tmp[2597828]
    {
      (2597838 call _local_safeCastCheckHalt[2600981] local__str_literal_4780[2597823])
    }
    const-val call_tmp[2597841]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597843 'move' call_tmp[2597841](2597845 'cast' uint(64)[115] size[2597818]))
    const-val call_tmp[2597848]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597850 'move' call_tmp[2597848](2597853 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2597854]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597856 'move' call_tmp[2597854](2597858 '+' md[2597820] call_tmp[2597848]))
    const-val call_tmp[2597861]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597863 'move' call_tmp[2597861](2597866 call chpl_mem_alloc[187801] call_tmp[2597841] call_tmp[2597854]))
    (2597869 return call_tmp[2597861])
  }
  function chpl_here_alloc[187788](const in arg size[187785]:int(64)[13], const in arg md[187791]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4780[2576959]:string[26] "temp"
    (2576960 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2270817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270819 'move' call_tmp[2270817](2270821 '<' size[187785] 0))
    if call_tmp[2270817]
    {
      (2270827 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2270830]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270832 'move' call_tmp[2270830](2270834 'cast' uint(64)[115] size[187785]))
    const-val call_tmp[690825]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690828 'move' call_tmp[690825](187824 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2334233]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334235 'move' call_tmp[2334233](2334237 '+' md[187791] call_tmp[690825]))
    const-val call_tmp[690835]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690838 'move' call_tmp[690835](187827 call chpl_mem_alloc[187801] call_tmp[2270830] call_tmp[2334233]))
    (524174 return call_tmp[690835])
  }
  function chpl_here_alloc[1080679](const in arg size[1080681]:uint(64)[115], const in arg md[1080685]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[1080725]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080727 'move' call_tmp[1080725](1080730 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2334243]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334245 'move' call_tmp[2334243](2334247 '+' md[1080685] call_tmp[1080725]))
    const-val call_tmp[1080739]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080741 'move' call_tmp[1080739](1080744 call chpl_mem_alloc[1080697] size[1080681] call_tmp[2334243]))
    (1080752 return call_tmp[1080739])
  }
  function _local_chpl_here_calloc[2612016](const in arg size[2612018]:uint(64)[115], const in arg number[2612020]:int(64)[13], const in arg md[2612022]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "local fn" "resolved"
  {
    const-val local__str_literal_4780[2612025]:string[26] "temp"
    (2612027 'move' local__str_literal_4780[2612025] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2612030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612032 'move' call_tmp[2612030](2612034 '<' number[2612020] 0))
    if call_tmp[2612030]
    {
      (2612040 call _local_safeCastCheckHalt[2600981] local__str_literal_4780[2612025])
    }
    const-val call_tmp[2612043]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612045 'move' call_tmp[2612043](2612047 'cast' uint(64)[115] number[2612020]))
    const-val call_tmp[2612050]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612052 'move' call_tmp[2612050](2612055 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2612056]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612058 'move' call_tmp[2612056](2612060 '+' md[2612022] call_tmp[2612050]))
    const-val call_tmp[2612063]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2612065 'move' call_tmp[2612063](2612068 call chpl_mem_calloc[1238730] call_tmp[2612043] size[2612018] call_tmp[2612056]))
    (2612072 return call_tmp[2612063])
  }
  function chpl_here_calloc[1238708](const in arg size[1238710]:uint(64)[115], const in arg number[1238712]:int(64)[13], const in arg md[1238716]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val local__str_literal_4780[2578608]:string[26] "temp"
    (2578609 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2271024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2271026 'move' call_tmp[2271024](2271028 '<' number[1238712] 0))
    if call_tmp[2271024]
    {
      (2271034 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2271037]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2271039 'move' call_tmp[2271037](2271041 'cast' uint(64)[115] number[1238712]))
    const-val call_tmp[1238772]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238774 'move' call_tmp[1238772](1238777 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2334253]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334255 'move' call_tmp[2334253](2334257 '+' md[1238716] call_tmp[1238772]))
    const-val call_tmp[1238786]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238788 'move' call_tmp[1238786](1238791 call chpl_mem_calloc[1238730] call_tmp[2271037] size[1238710] call_tmp[2334253]))
    (1238800 return call_tmp[1238786])
  }
  function _local_chpl_here_realloc[2613087](const in arg ptr[2613089]:c_void_ptr[149], const in arg size[2613091]:int(64)[13], const in arg md[2613093]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4780[2613096]:string[26] "temp"
    (2613098 'move' local__str_literal_4780[2613096] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2613101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613103 'move' call_tmp[2613101](2613105 '<' size[2613091] 0))
    if call_tmp[2613101]
    {
      (2613111 call _local_safeCastCheckHalt[2600981] local__str_literal_4780[2613096])
    }
    const-val call_tmp[2613114]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613116 'move' call_tmp[2613114](2613118 'cast' uint(64)[115] size[2613091]))
    const-val call_tmp[2613121]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613123 'move' call_tmp[2613121](2613126 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2613127]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613129 'move' call_tmp[2613127](2613131 '+' md[2613093] call_tmp[2613121]))
    const-val call_tmp[2613134]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2613136 'move' call_tmp[2613134](2613139 call chpl_mem_realloc[970310] ptr[2613089] call_tmp[2613114] call_tmp[2613127]))
    (2613143 return call_tmp[2613134])
  }
  function chpl_here_realloc[970290](const in arg ptr[970292]:c_void_ptr[149], const in arg size[970294]:int(64)[13], const in arg md[970298]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4780[2577384]:string[26] "temp"
    (2577385 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2270886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270888 'move' call_tmp[2270886](2270890 '<' size[970294] 0))
    if call_tmp[2270886]
    {
      (2270896 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2270899]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270901 'move' call_tmp[2270899](2270903 'cast' uint(64)[115] size[970294]))
    const-val call_tmp[970340]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (970342 'move' call_tmp[970340](970345 call chpl_memhook_md_num[187773]))
    const-val call_tmp[2334223]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2334225 'move' call_tmp[2334223](2334227 '+' md[970298] call_tmp[970340]))
    const-val call_tmp[970354]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (970356 'move' call_tmp[970354](970359 call chpl_mem_realloc[970310] ptr[970292] call_tmp[2270899] call_tmp[2334223]))
    (970368 return call_tmp[970354])
  }
  function _local_chpl_here_good_alloc_size[2597726](const in arg min_size[2597728]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4791[2597731]:string[26] "temp"
    (2597733 'move' local__str_literal_4791[2597731] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4780[2597736]:string[26] "temp"
    (2597738 'move' local__str_literal_4780[2597736] "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2597741]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597743 'move' call_tmp[2597741](2597745 '<' min_size[2597728] 0))
    if call_tmp[2597741]
    {
      (2597751 call _local_safeCastCheckHalt[2600981] local__str_literal_4780[2597736])
    }
    const-val call_tmp[2597754]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597756 'move' call_tmp[2597754](2597758 'cast' uint(64)[115] min_size[2597728]))
    const-val call_tmp[2597761]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597763 'move' call_tmp[2597761](2597766 call chpl_mem_good_alloc_size[949903] call_tmp[2597754]))
    const-val call_tmp[2597768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597770 'move' call_tmp[2597768](2597772 '>' call_tmp[2597761] 9223372036854775807))
    if call_tmp[2597768]
    {
      (2597778 call _local_safeCastCheckHalt[2600981] local__str_literal_4791[2597731])
    }
    const-val call_tmp[2597781]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2597783 'move' call_tmp[2597781](2597785 'cast' int(64)[13] call_tmp[2597761]))
    (2597788 return call_tmp[2597781])
  }
  function chpl_here_good_alloc_size[949888](const in arg min_size[949890]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4791[2577354]:string[26] "temp"
    (2577355 'move' "casting uint(64) with a value greater than the maximum of int(64) to int(64)" "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    const-val local__str_literal_4780[2577348]:string[26] "temp"
    (2577349 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val call_tmp[2270840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270842 'move' call_tmp[2270840](2270844 '<' min_size[949890] 0))
    if call_tmp[2270840]
    {
      (2270850 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2270853]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270855 'move' call_tmp[2270853](2270857 'cast' uint(64)[115] min_size[949890]))
    const-val call_tmp[949927]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (949929 'move' call_tmp[949927](949932 call chpl_mem_good_alloc_size[949903] call_tmp[2270853]))
    const-val call_tmp[2340951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340953 'move' call_tmp[2340951](2340955 '>' call_tmp[949927] 9223372036854775807))
    if call_tmp[2340951]
    {
      (2340961 call safeCastCheckHalt[210302] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2340964]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340966 'move' call_tmp[2340964](2340968 'cast' int(64)[13] call_tmp[949927]))
    (949961 return call_tmp[2340964])
  }
  function _local_chpl_here_free[2603328](const in arg ptr[2603330]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2603333]:void[4] "dead after last mention" "RVV" "temp"
    (2603336 call chpl_mem_free[188136] ptr[2603330])
    (2603338 return ret[2603333])
  }
  function chpl_here_free[188127](const in arg ptr[188124]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524269]:void[4] "dead after last mention" "RVV" "temp"
    (188146 call chpl_mem_free[188136] ptr[188124])
    (524271 return ret[524269])
  }
  function chpl_mem_alloc[187801](const in arg size[187798]:uint(64)[115], const in arg md[187804]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524166]:c_void_ptr[149] "RVV" "temp"
    (524168 return ret[524166])
  }
  function chpl_mem_free[188136](const in arg ptr[188133]:c_void_ptr[149]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524263]:void[4] "RVV" "temp"
    (524265 return ret[524263])
  }
  function chpl_mem_good_alloc_size[949903](const in arg min_size[949907]:uint(64)[115]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[949910]:uint(64)[115] "RVV" "temp"
    (949912 return ret[949910])
  }
  function chpl_mem_realloc[970310](const in arg ptr[970312]:c_void_ptr[149], const in arg size[970316]:uint(64)[115], const in arg md[970320]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[970323]:c_void_ptr[149] "RVV" "temp"
    (970325 return ret[970323])
  }
  function chpl_mem_alloc[1080697](const in arg size[1080701]:uint(64)[115], const in arg md[1080705]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1080708]:c_void_ptr[149] "RVV" "temp"
    (1080710 return ret[1080708])
  }
  function chpl_mem_calloc[1238730](const in arg number[1238734]:uint(64)[115], const in arg size[1238738]:uint(64)[115], const in arg md[1238742]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1238745]:c_void_ptr[149] "RVV" "temp"
    (1238747 return ret[1238745])
  }
}