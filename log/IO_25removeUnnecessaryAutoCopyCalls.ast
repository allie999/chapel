AST dump for IO after pass removeUnnecessaryAutoCopyCalls.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2047070] val _runtime_hdr[2047071]:chpl_comm_on_bundle_t[209301] val _0_tmp[2047073]:chpl_localeID_t[209294] ref _1_this[2047075]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2046809] val _runtime_hdr[2046810]:chpl_comm_on_bundle_t[209301] val _0_tmp[2046812]:chpl_localeID_t[209294] ref _1_this[2046814]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2046633] val _runtime_hdr[2046634]:chpl_comm_on_bundle_t[209301] val _0_tmp[2046636]:chpl_localeID_t[209294] ref _1_this[2046638]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2044842] val _runtime_hdr[2044843]:chpl_comm_on_bundle_t[209301] val _0_tmp[2044845]:chpl_localeID_t[209294] ref _1_this[2044847]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2039787] val _runtime_hdr[2039788]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039790]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039792]:channel(true,dynamic,false)[1060858] ref _2_args[2039794]:(string,codepointIndex,string,int(64))[1176431] val _3_rvfDerefTmp[2039796]:locale[28] ref _4_error[2039798]:Error[167938] "error variable"
  type _class_localson_fn[2039645] val _runtime_hdr[2039646]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039648]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039650]:channel(true,dynamic,false)[1060858] ref _2_args[2039652]:(string,codepointIndex,string)[1158466] val _3_rvfDerefTmp[2039654]:locale[28] ref _4_error[2039656]:Error[167938] "error variable"
  type _class_localson_fn[2039355] val _runtime_hdr[2039356]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039358]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039360]:channel(false,dynamic,false)[1080593] ref _2_path[2039362]:string[26] ref _3_offset[2039364]:int(64)[13] ref _4_error[2039366]:Error[167938] "error variable"
  type _class_localson_fn[2039247] val _runtime_hdr[2039248]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039250]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039252]:channel(false,dynamic,false)[1080593] ref _2_err[2039254]:syserr[223496]
  type _class_localson_fn[2039155] val _runtime_hdr[2039156]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039158]:chpl_localeID_t[209294] ref _1_lhs[2039160]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2039070] val _runtime_hdr[2039071]:chpl_comm_on_bundle_t[209301] val _0_tmp[2039073]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2039075]:channel(false,dynamic,false)[1080593]
  type _class_localson_fn[2038889] val _runtime_hdr[2038890]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038892]:chpl_localeID_t[209294] ref _1__formal_tmp_error[2038894]:syserr[223496] ref _2_this[2038896]:channel(false,dynamic,false)[1080593] val _3_hints[2038898]:int(32)[95] val _4_rvfDerefTmp[2038900]:iostyle[231756] val _5_end[2038902]:int(64)[13] val _6_start[2038904]:int(64)[13] val _7_rvfDerefTmp[2038906]:file[235492]
  type _class_localson_fn[2038682] val _runtime_hdr[2038683]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038685]:chpl_localeID_t[209294] ref _1_err[2038687]:syserr[223496] val _2_hints[2038689]:int(32)[95] val _3_start[2038691]:int(64)[13] ref _4_ret[2038693]:channel(false,dynamic,false)[1080593] val _5_end[2038695]:int(64)[13] val _6_rvfDerefTmp[2038697]:iostyle[231756] val _7_rvfDerefTmp[2038699]:file[235492] ref _8_error[2038701]:Error[167938] "error variable"
  type _class_localson_fn[2038570] val _runtime_hdr[2038571]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038573]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038575]:channel(true,dynamic,false)[1060858] ref _2_ret[2038577]:int(64)[13]
  type _class_localson_fn[2038430] val _runtime_hdr[2038431]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038433]:chpl_localeID_t[209294] ref _1_this[2038435]:channel(true,dynamic,false)[1060858] val _2_x[2038437]:int(64)[13] val _3_rvfDerefTmp[2038439]:locale[28] ref _4_error[2038441]:Error[167938] "error variable"
  type _class_localson_fn[2038288] val _runtime_hdr[2038289]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038291]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038293]:channel(true,dynamic,false)[1060858] ref _2_args[2038295]:1*byteIndex[1056992] val _3_rvfDerefTmp[2038297]:locale[28] ref _4_error[2038299]:Error[167938] "error variable"
  type _class_localson_fn[2038134] val _runtime_hdr[2038135]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038137]:chpl_localeID_t[209294] ref _1_this[2038139]:channel(true,dynamic,false)[1060858] ref _2_path[2038141]:string[26] ref _3_offset[2038143]:int(64)[13] ref _4_error[2038145]:Error[167938] "error variable"
  type _class_localson_fn[2038026] val _runtime_hdr[2038027]:chpl_comm_on_bundle_t[209301] val _0_tmp[2038029]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2038031]:channel(true,dynamic,false)[1060858] ref _2_err[2038033]:syserr[223496]
  type _class_localson_fn[2037934] val _runtime_hdr[2037935]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037937]:chpl_localeID_t[209294] ref _1_lhs[2037939]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2037849] val _runtime_hdr[2037850]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037852]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2037854]:channel(true,dynamic,false)[1060858]
  type _class_localson_fn[2037668] val _runtime_hdr[2037669]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037671]:chpl_localeID_t[209294] val _1_start[2037673]:int(64)[13] val _2_rvfDerefTmp[2037675]:file[235492] ref _3__formal_tmp_error[2037677]:syserr[223496] ref _4_this[2037679]:channel(true,dynamic,false)[1060858] val _5_hints[2037681]:int(32)[95] val _6_rvfDerefTmp[2037683]:iostyle[231756] val _7_end[2037685]:int(64)[13]
  type _class_localson_fn[2037461] val _runtime_hdr[2037462]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037464]:chpl_localeID_t[209294] val _1_hints[2037466]:int(32)[95] val _2_start[2037468]:int(64)[13] ref _3_ret[2037470]:channel(true,dynamic,false)[1060858] val _4_rvfDerefTmp[2037472]:iostyle[231756] val _5_end[2037474]:int(64)[13] val _6_rvfDerefTmp[2037476]:file[235492] ref _7_err[2037478]:syserr[223496] ref _8_error[2037480]:Error[167938] "error variable"
  type _class_localson_fn[2037221] val _runtime_hdr[2037222]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037224]:chpl_localeID_t[209294] ref _1_lhs[2037226]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2037136] val _runtime_hdr[2037137]:chpl_comm_on_bundle_t[209301] val _0_tmp[2037139]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2037141]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2036955] val _runtime_hdr[2036956]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036958]:chpl_localeID_t[209294] val _1_start[2036960]:int(64)[13] val _2_rvfDerefTmp[2036962]:file[235492] ref _3__formal_tmp_error[2036964]:syserr[223496] val _4_end[2036966]:int(64)[13] val _5_hints[2036968]:int(32)[95] val _6_rvfDerefTmp[2036970]:iostyle[231756] ref _7_this[2036972]:channel(true,dynamic,true)[1021736]
  type _class_localson_fn[2036748] val _runtime_hdr[2036749]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036751]:chpl_localeID_t[209294] ref _1_err[2036753]:syserr[223496] val _2_start[2036755]:int(64)[13] val _3_rvfDerefTmp[2036757]:iostyle[231756] val _4_end[2036759]:int(64)[13] val _5_rvfDerefTmp[2036761]:file[235492] ref _6_ret[2036763]:channel(true,dynamic,true)[1021736] val _7_hints[2036765]:int(32)[95] ref _8_error[2036767]:Error[167938] "error variable"
  type _class_localson_fn[2036538] val _runtime_hdr[2036539]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036541]:chpl_localeID_t[209294] ref _1_lhs[2036543]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2036453] val _runtime_hdr[2036454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036456]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2036458]:channel(false,dynamic,true)[985538]
  type _class_localson_fn[2036272] val _runtime_hdr[2036273]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036275]:chpl_localeID_t[209294] val _1_end[2036277]:int(64)[13] ref _2_this[2036279]:channel(false,dynamic,true)[985538] val _3_hints[2036281]:int(32)[95] val _4_rvfDerefTmp[2036283]:iostyle[231756] val _5_start[2036285]:int(64)[13] val _6_rvfDerefTmp[2036287]:file[235492] ref _7__formal_tmp_error[2036289]:syserr[223496]
  type _class_localson_fn[2036065] val _runtime_hdr[2036066]:chpl_comm_on_bundle_t[209301] val _0_tmp[2036068]:chpl_localeID_t[209294] val _1_start[2036070]:int(64)[13] ref _2_err[2036072]:syserr[223496] val _3_end[2036074]:int(64)[13] val _4_rvfDerefTmp[2036076]:iostyle[231756] val _5_rvfDerefTmp[2036078]:file[235492] ref _6_ret[2036080]:channel(false,dynamic,true)[985538] val _7_hints[2036082]:int(32)[95] ref _8_error[2036084]:Error[167938] "error variable"
  type _class_localson_fn[2035716] val _runtime_hdr[2035717]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035719]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035721]:file[235492] ref _2_err[2035723]:syserr[223496] ref _3_ret[2035725]:string[26] ref _4_error[2035727]:Error[167938] "error variable"
  type _class_localson_fn[2035608] val _runtime_hdr[2035609]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035611]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035613]:file[235492] ref _2_err[2035615]:syserr[223496]
  type _class_localson_fn[2035482] val _runtime_hdr[2035483]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035485]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2035487]:file[235492] ref _2_ret[2035489]:iostyle[231756] ref _3_error[2035491]:Error[167938] "error variable"
  type _class_localson_fn[2035389] val _runtime_hdr[2035390]:chpl_comm_on_bundle_t[209301] val _0_tmp[2035392]:chpl_localeID_t[209294] ref _1_this[2035394]:file[235492]
  function chpl__init_IO[416024]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546736 'move' IOHINT_NONE[231323] 0)
    (2033564 '_private_broadcast' IOHINT_NONE[231323])
    (546738 'move' IOHINT_RANDOM[231328] QIO_HINT_RANDOM[231275])
    (2033566 '_private_broadcast' IOHINT_RANDOM[231328])
    (546740 'move' IOHINT_SEQUENTIAL[231333] QIO_HINT_SEQUENTIAL[231280])
    (2033568 '_private_broadcast' IOHINT_SEQUENTIAL[231333])
    (546742 'move' IOHINT_CACHED[231338] QIO_HINT_CACHED[231295])
    (2033570 '_private_broadcast' IOHINT_CACHED[231338])
    (546744 'move' IOHINT_PARALLEL[231343] QIO_HINT_PARALLEL[231300])
    (2033572 '_private_broadcast' IOHINT_PARALLEL[231343])
    const-val ret_tmp[1789029]:6*string[984962] "temp"
    (246471 call _build_tuple[984888] "a" "b" "c" "d" "e" "f" ret_tmp[1789029])
    (1789032 'move' call_tmp[721777] ret_tmp[1789029])
    val tmp[2033847]:6*string[985128] "temp"
    (2033849 'move' tmp[2033847](985067 call chpl__initCopy[985069] call_tmp[721777]))
    (2033852 '.=' _arg_to_proto_names[246473] value[2033845] tmp[2033847])
    val type_tmp[547464]:channel(false,dynamic,true)[985538] "dead after last mention" "maybe param" "temp" "type variable"
    const-val coerce_tmp[985605]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985611 'move' coerce_tmp[985605](985607 'cast' int(32)[95] 0))
    const-val default_arg_hints[985647]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1767173]:Error[167938] "error variable" "temp"
    (1767175 'move' error[1767173] nil[44])
    (985652 'move' default_arg_hints[985647](985649 call openfd_default_hints[985614] error[1767173]))
    val errorExists[2054981]:bool[10] "temp"
    (2054986 'move' errorExists[2054981](2054983 '!=' error[1767173] nil[44]))
    if errorExists[2054981]
    {
      (1767178 call chpl_propagate_error[170472] error[1767173])
    }
    const-val default_arg_style[985704]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767186]:Error[167938] "error variable" "temp"
    (1767188 'move' error[1767186] nil[44])
    (985709 'move' default_arg_style[985704](985706 call openfd_default_style[985656] error[1767186]))
    val errorExists[2054989]:bool[10] "temp"
    (2054994 'move' errorExists[2054989](2054991 '!=' error[1767186] nil[44]))
    if errorExists[2054989]
    {
      (1767191 call chpl_propagate_error[170472] error[1767186])
    }
    val error[1767199]:Error[167938] "error variable" "temp"
    (1767201 'move' error[1767199] nil[44])
    const-val ret_tmp[1788327]:file[235492] "temp"
    (250128 call openfd[237183] coerce_tmp[985605] default_arg_hints[985647] default_arg_style[985704] error[1767199] ret_tmp[1788327])
    (1788330 'move' call_tmp[723908] ret_tmp[1788327])
    val errorExists[2054997]:bool[10] "temp"
    (2055002 'move' errorExists[2054997](2054999 '!=' error[1767199] nil[44]))
    if errorExists[2054997]
    {
      (1767204 call chpl_propagate_error[170472] error[1767199])
    }
    val error[1767212]:Error[167938] "error variable" "temp"
    (1767214 'move' error[1767212] nil[44])
    (1016815 'move' default_arg_start[1016808](1016810 call reader_default_start[1016772] call_tmp[723908] error[1767212]))
    val errorExists[2055005]:bool[10] "temp"
    (2055010 'move' errorExists[2055005](2055007 '!=' error[1767212] nil[44]))
    if errorExists[2055005]
    {
      (1767217 call chpl_propagate_error[170472] error[1767212])
    }
    val error[1767225]:Error[167938] "error variable" "temp"
    (1767227 'move' error[1767225] nil[44])
    (1016879 'move' default_arg_end[1016872](1016874 call reader_default_end[1016819] call_tmp[723908] error[1767225]))
    val errorExists[2055013]:bool[10] "temp"
    (2055018 'move' errorExists[2055013](2055015 '!=' error[1767225] nil[44]))
    if errorExists[2055013]
    {
      (1767230 call chpl_propagate_error[170472] error[1767225])
    }
    val error[1767238]:Error[167938] "error variable" "temp"
    (1767240 'move' error[1767238] nil[44])
    (1016927 'move' default_arg_hints[1016920](1016922 call reader_default_hints[1016883] call_tmp[723908] error[1767238]))
    val errorExists[2055021]:bool[10] "temp"
    (2055026 'move' errorExists[2055021](2055023 '!=' error[1767238] nil[44]))
    if errorExists[2055021]
    {
      (1767243 call chpl_propagate_error[170472] error[1767238])
    }
    val error[1767251]:Error[167938] "error variable" "temp"
    (1767253 'move' error[1767251] nil[44])
    (1017505 'move' default_arg_style[1017498](1017500 call reader_default_style[1016931] call_tmp[723908] error[1767251]))
    val errorExists[2055029]:bool[10] "temp"
    (2055034 'move' errorExists[2055029](2055031 '!=' error[1767251] nil[44]))
    if errorExists[2055029]
    {
      (1767256 call chpl_propagate_error[170472] error[1767251])
    }
    val error[1767264]:Error[167938] "error variable" "temp"
    (1767266 'move' error[1767264] nil[44])
    const-val ret_tmp[1789359]:channel(false,dynamic,true)[985538] "temp"
    (250133 call reader[1016472] call_tmp[723908] default_arg_start[1016808] default_arg_end[1016872] default_arg_hints[1016920] default_arg_style[1017498] error[1767264] ret_tmp[1789359])
    (1789362 'move' call_tmp[723915] ret_tmp[1789359])
    val errorExists[2055037]:bool[10] "temp"
    (2055042 'move' errorExists[2055037](2055039 '!=' error[1767264] nil[44]))
    if errorExists[2055037]
    {
      (1767269 call chpl_propagate_error[170472] error[1767264])
    }
    (547476 'move' stdin[250120] call_tmp[723915])
    (2033574 '_private_broadcast' stdin[250120])
    val type_tmp[547479]:channel(true,dynamic,true)[1021736] "dead after last mention" "maybe param" "temp" "type variable"
    (723923 'move' call_tmp[723920](250155 call chpl_cstdout[223470]))
    const-val default_arg_hints[1021796]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1767277]:Error[167938] "error variable" "temp"
    (1767279 'move' error[1767277] nil[44])
    (1021801 'move' default_arg_hints[1021796](1021798 call openfp_default_hints[1021763] error[1767277]))
    val errorExists[2055045]:bool[10] "temp"
    (2055050 'move' errorExists[2055045](2055047 '!=' error[1767277] nil[44]))
    if errorExists[2055045]
    {
      (1767282 call chpl_propagate_error[170472] error[1767277])
    }
    const-val default_arg_style[1021825]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767290]:Error[167938] "error variable" "temp"
    (1767292 'move' error[1767290] nil[44])
    (1021830 'move' default_arg_style[1021825](1021827 call openfp_default_style[1021805] error[1767290]))
    val errorExists[2055053]:bool[10] "temp"
    (2055058 'move' errorExists[2055053](2055055 '!=' error[1767290] nil[44]))
    if errorExists[2055053]
    {
      (1767295 call chpl_propagate_error[170472] error[1767290])
    }
    val error[1767303]:Error[167938] "error variable" "temp"
    (1767305 'move' error[1767303] nil[44])
    const-val ret_tmp[1788341]:file[235492] "temp"
    (250157 call openfp[237312] call_tmp[723920] default_arg_hints[1021796] default_arg_style[1021825] error[1767303] ret_tmp[1788341])
    (1788344 'move' call_tmp[723925] ret_tmp[1788341])
    val errorExists[2055061]:bool[10] "temp"
    (2055066 'move' errorExists[2055061](2055063 '!=' error[1767303] nil[44]))
    if errorExists[2055061]
    {
      (1767308 call chpl_propagate_error[170472] error[1767303])
    }
    val error[1767316]:Error[167938] "error variable" "temp"
    (1767318 'move' error[1767316] nil[44])
    (1022390 'move' default_arg_start[1022383](1022385 call writer_default_start[1022347] call_tmp[723925] error[1767316]))
    val errorExists[2055069]:bool[10] "temp"
    (2055074 'move' errorExists[2055069](2055071 '!=' error[1767316] nil[44]))
    if errorExists[2055069]
    {
      (1767321 call chpl_propagate_error[170472] error[1767316])
    }
    val error[1767329]:Error[167938] "error variable" "temp"
    (1767331 'move' error[1767329] nil[44])
    (1022454 'move' default_arg_end[1022447](1022449 call writer_default_end[1022394] call_tmp[723925] error[1767329]))
    val errorExists[2055077]:bool[10] "temp"
    (2055082 'move' errorExists[2055077](2055079 '!=' error[1767329] nil[44]))
    if errorExists[2055077]
    {
      (1767334 call chpl_propagate_error[170472] error[1767329])
    }
    val error[1767342]:Error[167938] "error variable" "temp"
    (1767344 'move' error[1767342] nil[44])
    (1022505 'move' default_arg_hints[1022498](1022500 call writer_default_hints[1022458] call_tmp[723925] error[1767342]))
    val errorExists[2055085]:bool[10] "temp"
    (2055090 'move' errorExists[2055085](2055087 '!=' error[1767342] nil[44]))
    if errorExists[2055085]
    {
      (1767347 call chpl_propagate_error[170472] error[1767342])
    }
    val error[1767355]:Error[167938] "error variable" "temp"
    (1767357 'move' error[1767355] nil[44])
    (1022542 'move' default_arg_style[1022535](1022537 call writer_default_style[1022509] call_tmp[723925] error[1767355]))
    val errorExists[2055093]:bool[10] "temp"
    (2055098 'move' errorExists[2055093](2055095 '!=' error[1767355] nil[44]))
    if errorExists[2055093]
    {
      (1767360 call chpl_propagate_error[170472] error[1767355])
    }
    val error[1767368]:Error[167938] "error variable" "temp"
    (1767370 'move' error[1767368] nil[44])
    const-val ret_tmp[1789413]:channel(true,dynamic,true)[1021736] "temp"
    (250162 call writer[1022047] call_tmp[723925] default_arg_start[1022383] default_arg_end[1022447] default_arg_hints[1022498] default_arg_style[1022535] error[1767368] ret_tmp[1789413])
    (1789416 'move' call_tmp[723932] ret_tmp[1789413])
    val errorExists[2055101]:bool[10] "temp"
    (2055106 'move' errorExists[2055101](2055103 '!=' error[1767368] nil[44]))
    if errorExists[2055101]
    {
      (1767373 call chpl_propagate_error[170472] error[1767368])
    }
    (547491 'move' stdout[250147] call_tmp[723932])
    (2033576 '_private_broadcast' stdout[250147])
    val type_tmp[547494]:channel(true,dynamic,true)[1021736] "dead after last mention" "maybe param" "temp" "type variable"
    (723940 'move' call_tmp[723937](250184 call chpl_cstderr[223478]))
    const-val default_arg_hints[1023768]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1767381]:Error[167938] "error variable" "temp"
    (1767383 'move' error[1767381] nil[44])
    (1023773 'move' default_arg_hints[1023768](1023770 call openfp_default_hints[1021763] error[1767381]))
    val errorExists[2055109]:bool[10] "temp"
    (2055114 'move' errorExists[2055109](2055111 '!=' error[1767381] nil[44]))
    if errorExists[2055109]
    {
      (1767386 call chpl_propagate_error[170472] error[1767381])
    }
    const-val default_arg_style[1023777]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1767394]:Error[167938] "error variable" "temp"
    (1767396 'move' error[1767394] nil[44])
    (1023782 'move' default_arg_style[1023777](1023779 call openfp_default_style[1021805] error[1767394]))
    val errorExists[2055117]:bool[10] "temp"
    (2055122 'move' errorExists[2055117](2055119 '!=' error[1767394] nil[44]))
    if errorExists[2055117]
    {
      (1767399 call chpl_propagate_error[170472] error[1767394])
    }
    val error[1767407]:Error[167938] "error variable" "temp"
    (1767409 'move' error[1767407] nil[44])
    const-val ret_tmp[1788347]:file[235492] "temp"
    (250186 call openfp[237312] call_tmp[723937] default_arg_hints[1023768] default_arg_style[1023777] error[1767407] ret_tmp[1788347])
    (1788350 'move' call_tmp[723942] ret_tmp[1788347])
    val errorExists[2055125]:bool[10] "temp"
    (2055130 'move' errorExists[2055125](2055127 '!=' error[1767407] nil[44]))
    if errorExists[2055125]
    {
      (1767412 call chpl_propagate_error[170472] error[1767407])
    }
    val error[1767420]:Error[167938] "error variable" "temp"
    (1767422 'move' error[1767420] nil[44])
    (1023826 'move' default_arg_start[1023819](1023821 call writer_default_start[1022347] call_tmp[723942] error[1767420]))
    val errorExists[2055133]:bool[10] "temp"
    (2055138 'move' errorExists[2055133](2055135 '!=' error[1767420] nil[44]))
    if errorExists[2055133]
    {
      (1767425 call chpl_propagate_error[170472] error[1767420])
    }
    val error[1767433]:Error[167938] "error variable" "temp"
    (1767435 'move' error[1767433] nil[44])
    (1023837 'move' default_arg_end[1023830](1023832 call writer_default_end[1022394] call_tmp[723942] error[1767433]))
    val errorExists[2055141]:bool[10] "temp"
    (2055146 'move' errorExists[2055141](2055143 '!=' error[1767433] nil[44]))
    if errorExists[2055141]
    {
      (1767438 call chpl_propagate_error[170472] error[1767433])
    }
    val error[1767446]:Error[167938] "error variable" "temp"
    (1767448 'move' error[1767446] nil[44])
    (1023848 'move' default_arg_hints[1023841](1023843 call writer_default_hints[1022458] call_tmp[723942] error[1767446]))
    val errorExists[2055149]:bool[10] "temp"
    (2055154 'move' errorExists[2055149](2055151 '!=' error[1767446] nil[44]))
    if errorExists[2055149]
    {
      (1767451 call chpl_propagate_error[170472] error[1767446])
    }
    val error[1767459]:Error[167938] "error variable" "temp"
    (1767461 'move' error[1767459] nil[44])
    (1023859 'move' default_arg_style[1023852](1023854 call writer_default_style[1022509] call_tmp[723942] error[1767459]))
    val errorExists[2055157]:bool[10] "temp"
    (2055162 'move' errorExists[2055157](2055159 '!=' error[1767459] nil[44]))
    if errorExists[2055157]
    {
      (1767464 call chpl_propagate_error[170472] error[1767459])
    }
    val error[1767472]:Error[167938] "error variable" "temp"
    (1767474 'move' error[1767472] nil[44])
    const-val ret_tmp[1789419]:channel(true,dynamic,true)[1021736] "temp"
    (250191 call writer[1022047] call_tmp[723942] default_arg_start[1023819] default_arg_end[1023830] default_arg_hints[1023841] default_arg_style[1023852] error[1767472] ret_tmp[1789419])
    (1789422 'move' call_tmp[723949] ret_tmp[1789419])
    val errorExists[2055165]:bool[10] "temp"
    (2055170 'move' errorExists[2055165](2055167 '!=' error[1767472] nil[44]))
    if errorExists[2055165]
    {
      (1767477 call chpl_propagate_error[170472] error[1767472])
    }
    (547506 'move' stderr[250176] call_tmp[723949])
    (2033578 '_private_broadcast' stderr[250176])
    (536097 return _void[55])
  }
  def module FormattedIO[251180]  
  type iomode[230827] def r[230816]:iomode[230827] 1 def cw[230819]:iomode[230827] 2 def rw[230822]:iomode[230827] 3 def cwr[230825]:iomode[230827] 4
  type iokind[230843] def dynamic[230832]:iokind[230843] 0 def native[230835]:iokind[230843] 1 def big[230838]:iokind[230843] 2 def little[230841]:iokind[230843] 3
  type iostringstyle[230926] def len1b_data[230890]:iostringstyle[230926] -1 def len2b_data[230895]:iostringstyle[230926] -2 def len4b_data[230900]:iostringstyle[230926] -4 def len8b_data[230905]:iostringstyle[230926] -8 def lenVb_data[230910]:iostringstyle[230926] -10 def data_toeof[230917]:iostringstyle[230926] -65280 def data_null[230924]:iostringstyle[230926] -256
  type iostringformat[230948] def word[230931]:iostringformat[230948] 0 def basic[230934]:iostringformat[230948] 1 def chpl[230937]:iostringformat[230948] 2 def json[230940]:iostringformat[230948] 3 def toend[230943]:iostringformat[230948] 4 def toeof[230946]:iostringformat[230948] 5
  const QIO_FDFLAG_UNK[231210]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231215]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231220]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231225]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231230]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231235]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231240]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231245]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231250]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231255]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231260]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231265]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231270]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231275]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231280]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231285]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231290]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231295]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231300]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231305]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231310]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231315]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231323]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231328]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231333]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231338]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231343]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  function =[859683](ref arg _arg1[859685]:_ref(qio_file_ptr_t)[936784], const in arg _arg2[859686]:qio_file_ptr_t[231351]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2058378 '=' _arg1[859685] _arg2[859686])
    (2058379 return _void[55])
  }
  type qio_file_ptr_t[231351]
  const-val QIO_FILE_PTR_NULL[231354]:qio_file_ptr_t[231351] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function =[861391](ref arg _arg1[861393]:_ref(qio_channel_ptr_t)[936795], const in arg _arg2[861394]:qio_channel_ptr_t[231377]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2058384 '=' _arg1[861393] _arg2[861394])
    (2058385 return _void[55])
  }
  type qio_channel_ptr_t[231377]
  const-val QIO_CHANNEL_PTR_NULL[231380]:qio_channel_ptr_t[231377] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231388]
  const-val QBUFFER_PTR_NULL[231391]:qbuffer_ptr_t[231388] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231406]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231414]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231422]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231430]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231438]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231446]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function =[879000](ref arg _arg1[879002]:_ref(iostyle)[967461], const  ref arg _arg2[879003]:iostyle[231756]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (2058390 '=' _arg1[879002] _arg2[879003])
    (2058391 return _void[55])
  }
  type iostyle[231756] val binary[231456]:uint(8)[100] val byteorder[231474]:uint(8)[100] val str_style[231494]:int(64)[13] val min_width_columns[231503]:uint(32)[110] val max_width_columns[231518]:uint(32)[110] val max_width_characters[231533]:uint(32)[110] val max_width_bytes[231548]:uint(32)[110] val string_start[231554]:uint(8)[100] val string_end[231560]:uint(8)[100] val string_format[231580]:uint(8)[100] val bytes_prefix[231586]:uint(8)[100] val base[231595]:uint(8)[100] val point_char[231601]:uint(8)[100] val exponent_char[231609]:uint(8)[100] val other_exponent_char[231615]:uint(8)[100] val positive_char[231621]:uint(8)[100] val negative_char[231627]:uint(8)[100] val i_char[231635]:uint(8)[100] val prefix_base[231644]:uint(8)[100] val pad_char[231650]:uint(8)[100] val showplus[231659]:uint(8)[100] val uppercase[231668]:uint(8)[100] val leftjustify[231677]:uint(8)[100] val showpoint[231686]:uint(8)[100] val showpointzero[231695]:uint(8)[100] val precision[231706]:int(32)[95] val realfmt[231715]:uint(8)[100] val complex_style[231724]:uint(8)[100] val array_style[231733]:uint(8)[100] val aggregate_style[231742]:uint(8)[100] val tuple_style[231751]:uint(8)[100]
  function QioPluginFile[231922].setupChannel[231768](const in arg this[231924]:QioPluginFile[231922], ref arg pluginChannel[231765]:_ref(QioPluginChannel)[1489327], const in arg start[231774]:int(64)[13], const in arg end[231781]:int(64)[13], const in arg qioChannelPtr[231785]:qio_channel_ptr_t[231377]) : syserr[223496] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1489366]:QioPluginChannel[232005] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1489391 'move' _formal_tmp_pluginChannel[1489366](1489389 'cast' QioPluginChannel[232005] nil[44]))
    val ret[533562]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1489382 call =[224045] ret[533562] ENOSYS[224596])
    label _endsetupChannel[1489376]
    (1798963 '=' pluginChannel[231765] _formal_tmp_pluginChannel[1489366])
    (533564 return ret[533562])
  }
  function QioPluginFile[231922].filelength[231805](const in arg this[231928]:QioPluginFile[231922], ref arg length[231802]:_ref(int(64))[936483]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1491003]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491026 'move' _formal_tmp_length[1491003] 0)
    val ret[533572]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491019 call =[224045] ret[533572] ENOSYS[224596])
    label _endfilelength[1491013]
    (1798966 '=' length[231802] _formal_tmp_length[1491003])
    (533574 return ret[533572])
  }
  function QioPluginFile[231922].getpath[231821](const in arg this[231932]:QioPluginFile[231922], ref arg path[231818]:_ref(c_string)[937138], ref arg len[231827]:_ref(int(64))[936483]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1491061]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491096 'move' _formal_tmp_path[1491061](1491094 'cast' c_string[19] nil[44]))
    const-val _formal_tmp_len[1491062]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491099 'move' _formal_tmp_len[1491062] 0)
    val ret[533582]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491087 call =[224045] ret[533582] ENOSYS[224596])
    label _endgetpath[1491072]
    (1798969 '=' path[231818] _formal_tmp_path[1491061])
    (1798972 '=' len[231827] _formal_tmp_len[1491062])
    (533584 return ret[533582])
  }
  function QioPluginFile[231922].fsync[231840](const in arg this[231936]:QioPluginFile[231922]) : syserr[223496] "method" "primary method" "resolved"
  {
    val ret[533592]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491122 call =[224045] ret[533592] ENOSYS[224596])
    (533594 return ret[533592])
  }
  function QioPluginFile[231922].getChunk[231859](const in arg this[231940]:QioPluginFile[231922], ref arg length[231856]:_ref(int(64))[936483]) : syserr[223496] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1491153]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491176 'move' _formal_tmp_length[1491153] 0)
    val ret[533602]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491169 call =[224045] ret[533602] ENOSYS[224596])
    label _endgetChunk[1491163]
    (1798975 '=' length[231856] _formal_tmp_length[1491153])
    (533604 return ret[533602])
  }
  function QioPluginFile[231922].getLocalesForRegion[231878](const in arg this[231944]:QioPluginFile[231922], const in arg start[231875]:int(64)[13], const in arg end[231884]:int(64)[13], ref arg localeNames[231891]:_ref(c_ptr(c_string))[1491197], ref arg nLocales[231898]:_ref(int(64))[936483]) : syserr[223496] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1491240]:c_ptr(c_string)[1491188] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1491265 'move' _formal_tmp_localeNames[1491240](1491263 'cast' c_ptr(c_string)[1491188] nil[44]))
    val ret[533612]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491256 call =[224045] ret[533612] ENOSYS[224596])
    label _endgetLocalesForRegion[1491250]
    (1798978 '=' localeNames[231891] _formal_tmp_localeNames[1491240])
    (533614 return ret[533612])
  }
  function QioPluginFile[231922].close[231911](const in arg this[231948]:QioPluginFile[231922]) : syserr[223496] "method" "primary method" "resolved"
  {
    val ret[533622]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1491342 call =[224045] ret[533622] ENOSYS[224596])
    (533624 return ret[533622])
  }
  function QioPluginFile[231922].deinit[879872](const in arg this[879876]:QioPluginFile[231922]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771974]
    val _parent_destructor_tmp_[1771969]:object[22] "temp"
    (1771976 'move' _parent_destructor_tmp_[1771969](1771970 'cast' object[22] this[879876]))
    (1771978 call deinit[749290] _parent_destructor_tmp_[1771969])
    (879884 return _void[55])
  }
  type QioPluginFile[231922] val super[355636]:object[22] "super class"
  function QioPluginChannel[232005].readAtLeast[231963](const in arg this[232007]:QioPluginChannel[232005], const in arg amt[231960]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    val ret[533632]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1489865 call =[224045] ret[533632] ENOSYS[224596])
    (533634 return ret[533632])
  }
  function QioPluginChannel[232005].write[231982](const in arg this[232011]:QioPluginChannel[232005], const in arg amt[231979]:int(64)[13]) : syserr[223496] "method" "primary method" "resolved"
  {
    val ret[533642]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1489888 call =[224045] ret[533642] ENOSYS[224596])
    (533644 return ret[533642])
  }
  function QioPluginChannel[232005].close[231994](const in arg this[232015]:QioPluginChannel[232005]) : syserr[223496] "method" "primary method" "resolved"
  {
    val ret[533652]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    (1489910 call =[224045] ret[533652] ENOSYS[224596])
    (533654 return ret[533652])
  }
  function QioPluginChannel[232005].deinit[880008](const in arg this[880012]:QioPluginChannel[232005]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1771986]
    val _parent_destructor_tmp_[1771981]:object[22] "temp"
    (1771988 'move' _parent_destructor_tmp_[1771981](1771982 'cast' object[22] this[880012]))
    (1771990 call deinit[749290] _parent_destructor_tmp_[1771981])
    (880020 return _void[55])
  }
  type QioPluginChannel[232005] val super[355638]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232026](const in arg file[232023]:c_void_ptr[149], ref arg plugin_ch[232029]:_ref(c_void_ptr)[938033], const in arg start[232036]:int(64)[13], const in arg end[232043]:int(64)[13], const in arg qio_ch[232047]:qio_channel_ptr_t[231377]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533662]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715017]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715020 'move' call_tmp[715017](232055 call _cast[1488960] file[232023]))
    val call_tmp[715022]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715025 'move' call_tmp[715022](232057 call postfix![1488989] call_tmp[715017]))
    val f[232059]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546779 'move' f[232059] call_tmp[715022])
    val pluginChannel[232068]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1489343]:QioPluginChannel[232005] "dead at end of block" "temp"
    (1489346 'move' init_coerce_tmp[1489343](1489511 'cast' QioPluginChannel[232005] nil[44]))
    (546781 'move' pluginChannel[232068] init_coerce_tmp[1489343])
    const-val call_tmp[715029]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1489351]:QioPluginFile[231922] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1489356 'move' coerce_tmp[1489351] f[232059])
    val _formal_tmp_out_pluginChannel[1489358]:QioPluginChannel[232005] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715032 'move' call_tmp[715029](232083 call setupChannel[231768] coerce_tmp[1489351] _formal_tmp_out_pluginChannel[1489358] start[232036] end[232043] qio_ch[232047]))
    (1489360 call =[1489431] pluginChannel[232068] _formal_tmp_out_pluginChannel[1489358])
    const-val ret[232084]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546783 'move' ret[232084] call_tmp[715029])
    const-val call_tmp[715034]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715037 'move' call_tmp[715034](232091 call _cast[1489481] pluginChannel[232068]))
    (232093 call =[15832] plugin_ch[232029] call_tmp[715034])
    (1489516 'move' ret[533662] ret[232084])
    gotoReturn _end_chpl_qio_setup_plugin_channel[533660] _end_chpl_qio_setup_plugin_channel[533660]
    label _end_chpl_qio_setup_plugin_channel[533660]
    (533664 return ret[533662])
  }
  function chpl_qio_read_atleast[232108](const in arg ch_plugin[232105]:c_void_ptr[149], const in arg amt[232114]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533674]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715039]:QioPluginChannel[232005] "dead at end of block" "expr temp" "maybe param" "temp"
    (715042 'move' call_tmp[715039](232121 call _cast[1489519] ch_plugin[232105]))
    val call_tmp[715044]:QioPluginChannel[232005] "dead at end of block" "maybe param" "temp"
    (715047 'move' call_tmp[715044](232123 call postfix![1489548] call_tmp[715039]))
    val c[232125]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    (546785 'move' c[232125] call_tmp[715044])
    const-val call_tmp[715051]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1489854]:QioPluginChannel[232005] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1489859 'move' coerce_tmp[1489854] c[232125])
    (715054 'move' call_tmp[715051](232138 call readAtLeast[231963] coerce_tmp[1489854] amt[232114]))
    (533679 'move' ret[533674] call_tmp[715051])
    gotoReturn _end_chpl_qio_read_atleast[533672] _end_chpl_qio_read_atleast[533672]
    label _end_chpl_qio_read_atleast[533672]
    (533676 return ret[533674])
  }
  function chpl_qio_write[232149](const in arg ch_plugin[232146]:c_void_ptr[149], const in arg amt[232155]:int(64)[13]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533685]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715056]:QioPluginChannel[232005] "dead at end of block" "expr temp" "maybe param" "temp"
    (715059 'move' call_tmp[715056](232162 call _cast[1489519] ch_plugin[232146]))
    val call_tmp[715061]:QioPluginChannel[232005] "dead at end of block" "maybe param" "temp"
    (715064 'move' call_tmp[715061](232164 call postfix![1489548] call_tmp[715056]))
    val c[232166]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    (546787 'move' c[232166] call_tmp[715061])
    const-val call_tmp[715068]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1489877]:QioPluginChannel[232005] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1489882 'move' coerce_tmp[1489877] c[232166])
    (715071 'move' call_tmp[715068](232177 call write[231982] coerce_tmp[1489877] amt[232155]))
    (533690 'move' ret[533685] call_tmp[715068])
    gotoReturn _end_chpl_qio_write[533683] _end_chpl_qio_write[533683]
    label _end_chpl_qio_write[533683]
    (533687 return ret[533685])
  }
  function chpl_qio_channel_close[232188](const in arg ch[232185]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533696]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715073]:QioPluginChannel[232005] "dead at end of block" "expr temp" "maybe param" "temp"
    (715076 'move' call_tmp[715073](232195 call _cast[1489519] ch[232185]))
    val call_tmp[715078]:QioPluginChannel[232005] "dead at end of block" "maybe param" "temp"
    (715081 'move' call_tmp[715078](232197 call postfix![1489548] call_tmp[715073]))
    val c[232199]:QioPluginChannel[232005] "dead at end of block" "insert auto destroy"
    (546789 'move' c[232199] call_tmp[715078])
    const-val call_tmp[715085]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1489899]:QioPluginChannel[232005] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1489904 'move' coerce_tmp[1489899] c[232199])
    (715088 'move' call_tmp[715085](232211 call close[231994] coerce_tmp[1489899]))
    const-val err[232212]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546791 'move' err[232212] call_tmp[715085])
    (232218 call chpl__delete[1489919] c[232199])
    (1490979 'move' ret[533696] err[232212])
    gotoReturn _end_chpl_qio_channel_close[533694] _end_chpl_qio_channel_close[533694]
    label _end_chpl_qio_channel_close[533694]
    (533698 return ret[533696])
  }
  function chpl_qio_filelength[232233](const in arg file[232230]:c_void_ptr[149], ref arg length[232239]:_ref(int(64))[936483]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533708]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715090]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715093 'move' call_tmp[715090](232247 call _cast[1488960] file[232230]))
    val call_tmp[715095]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715098 'move' call_tmp[715095](232249 call postfix![1488989] call_tmp[715090]))
    val f[232251]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546793 'move' f[232251] call_tmp[715095])
    const-val call_tmp[715102]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1490988]:QioPluginFile[231922] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1490993 'move' coerce_tmp[1490988] f[232251])
    val _formal_tmp_out_length[1490995]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715105 'move' call_tmp[715102](232264 call filelength[231805] coerce_tmp[1490988] _formal_tmp_out_length[1490995]))
    (1490997 call =[435238] length[232239] _formal_tmp_out_length[1490995])
    (1491030 'move' ret[533708] call_tmp[715102])
    gotoReturn _end_chpl_qio_filelength[533706] _end_chpl_qio_filelength[533706]
    label _end_chpl_qio_filelength[533706]
    (533710 return ret[533708])
  }
  function chpl_qio_getpath[232276](const in arg file[232273]:c_void_ptr[149], ref arg str[232279]:_ref(c_string)[937138], ref arg len[232286]:_ref(int(64))[936483]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533720]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715107]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715110 'move' call_tmp[715107](232294 call _cast[1488960] file[232273]))
    val call_tmp[715112]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715115 'move' call_tmp[715112](232296 call postfix![1488989] call_tmp[715107]))
    val f[232298]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546795 'move' f[232298] call_tmp[715112])
    const-val call_tmp[715119]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1491039]:QioPluginFile[231922] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1491044 'move' coerce_tmp[1491039] f[232298])
    val _formal_tmp_out_path[1491046]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1491053]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715122 'move' call_tmp[715119](232312 call getpath[231821] coerce_tmp[1491039] _formal_tmp_out_path[1491046] _formal_tmp_out_len[1491053]))
    (1491048 call =[21893] str[232279] _formal_tmp_out_path[1491046])
    (1491055 call =[435238] len[232286] _formal_tmp_out_len[1491053])
    (1491104 'move' ret[533720] call_tmp[715119])
    gotoReturn _end_chpl_qio_getpath[533718] _end_chpl_qio_getpath[533718]
    label _end_chpl_qio_getpath[533718]
    (533722 return ret[533720])
  }
  function chpl_qio_fsync[232324](const in arg file[232321]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533732]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715124]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715127 'move' call_tmp[715124](232331 call _cast[1488960] file[232321]))
    val call_tmp[715129]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715132 'move' call_tmp[715129](232333 call postfix![1488989] call_tmp[715124]))
    val f[232335]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546797 'move' f[232335] call_tmp[715129])
    const-val call_tmp[715136]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1491111]:QioPluginFile[231922] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1491116 'move' coerce_tmp[1491111] f[232335])
    (715139 'move' call_tmp[715136](232347 call fsync[231840] coerce_tmp[1491111]))
    (1491129 'move' ret[533732] call_tmp[715136])
    gotoReturn _end_chpl_qio_fsync[533730] _end_chpl_qio_fsync[533730]
    label _end_chpl_qio_fsync[533730]
    (533734 return ret[533732])
  }
  function chpl_qio_get_chunk[232359](const in arg file[232356]:c_void_ptr[149], ref arg length[232365]:_ref(int(64))[936483]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533744]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715141]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715144 'move' call_tmp[715141](232373 call _cast[1488960] file[232356]))
    val call_tmp[715146]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715149 'move' call_tmp[715146](232375 call postfix![1488989] call_tmp[715141]))
    val f[232377]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546799 'move' f[232377] call_tmp[715146])
    const-val call_tmp[715153]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1491138]:QioPluginFile[231922] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1491143 'move' coerce_tmp[1491138] f[232377])
    val _formal_tmp_out_length[1491145]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715156 'move' call_tmp[715153](232390 call getChunk[231859] coerce_tmp[1491138] _formal_tmp_out_length[1491145]))
    (1491147 call =[435238] length[232365] _formal_tmp_out_length[1491145])
    (1491180 'move' ret[533744] call_tmp[715153])
    gotoReturn _end_chpl_qio_get_chunk[533742] _end_chpl_qio_get_chunk[533742]
    label _end_chpl_qio_get_chunk[533742]
    (533746 return ret[533744])
  }
  function chpl_qio_get_locales_for_region[232402](const in arg file[232399]:c_void_ptr[149], const in arg start[232408]:int(64)[13], const in arg end[232415]:int(64)[13], ref arg localeNames[232419]:_ref(c_void_ptr)[938033], const  ref arg nLocales[232426]:_ref(int(64))[936483]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533756]:syserr[223496] "dead after last mention" "RVV" "temp"
    val strPtr[232434]:c_ptr(c_string)[1491188] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[715158]:c_ptr(c_string)[1491188] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[715163]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715166 'move' call_tmp[715163](232443 call _cast[1488960] file[232399]))
    val call_tmp[715168]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715171 'move' call_tmp[715168](232445 call postfix![1488989] call_tmp[715163]))
    val f[232447]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546803 'move' f[232447] call_tmp[715168])
    const-val call_tmp[715175]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1491225]:QioPluginFile[231922] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1491230 'move' coerce_tmp[1491225] f[232447])
    val _formal_tmp_out_localeNames[1491232]:c_ptr(c_string)[1491188] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715178 'move' call_tmp[715175](232462 call getLocalesForRegion[231878] coerce_tmp[1491225] start[232408] end[232415] _formal_tmp_out_localeNames[1491232] nLocales[232426]))
    (1798981 '=' strPtr[232434] _formal_tmp_out_localeNames[1491232])
    (1491299 'noop')
    const-val ret[232463]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546805 'move' ret[232463] call_tmp[715175])
    const-val call_tmp[715180]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715183 'move' call_tmp[715180](232470 'cast' c_void_ptr[149] strPtr[232434]))
    (232472 call =[15832] localeNames[232419] call_tmp[715180])
    (1491324 'move' ret[533756] ret[232463])
    gotoReturn _end_chpl_qio_get_locales_for_region[533754] _end_chpl_qio_get_locales_for_region[533754]
    label _end_chpl_qio_get_locales_for_region[533754]
    (533758 return ret[533756])
  }
  function chpl_qio_file_close[232487](const in arg file[232484]:c_void_ptr[149]) : syserr[223496] "export" "local args" "no doc" "resolved"
  {
    val ret[533768]:syserr[223496] "dead after last mention" "RVV" "temp"
    val call_tmp[715185]:QioPluginFile[231922] "dead at end of block" "expr temp" "maybe param" "temp"
    (715188 'move' call_tmp[715185](232494 call _cast[1488960] file[232484]))
    val call_tmp[715190]:QioPluginFile[231922] "dead at end of block" "maybe param" "temp"
    (715193 'move' call_tmp[715190](232496 call postfix![1488989] call_tmp[715185]))
    val f[232498]:QioPluginFile[231922] "dead at end of block" "insert auto destroy"
    (546807 'move' f[232498] call_tmp[715190])
    const-val call_tmp[715197]:syserr[223496] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1491331]:QioPluginFile[231922] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1491336 'move' coerce_tmp[1491331] f[232498])
    (715200 'move' call_tmp[715197](232508 call close[231911] coerce_tmp[1491331]))
    const-val err[232509]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546809 'move' err[232509] call_tmp[715197])
    (232515 call chpl__delete[1491351] f[232498])
    (1492411 'move' ret[533768] err[232509])
    gotoReturn _end_chpl_qio_file_close[533766] _end_chpl_qio_file_close[533766]
    label _end_chpl_qio_file_close[533766]
    (533770 return ret[533768])
  }
  function qio_style_init_default[232530](ref arg s[232527]:_ref(iostyle)[967461]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533778 return _void[55])
  }
  function qio_file_release[232550](const in arg f[232547]:qio_file_ptr_t[231351]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533782 return _void[55])
  }
  function qio_file_init[232560](ref arg file_out[232557]:_ref(qio_file_ptr_t)[936784], const in arg fp[232563]:_file[155], const in arg fd[232567]:int(32)[95], const in arg iohints[232571]:int(32)[95], const  ref arg style[232575]:_ref(iostyle)[967461], const in arg usefilestar[232579]:int(32)[95]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533786]:syserr[223496] "RVV" "temp"
    (533788 return ret[533786])
  }
  function qio_file_open_mem[232640](ref arg file_out[232637]:_ref(qio_file_ptr_t)[936784], const in arg buf[232643]:qbuffer_ptr_t[231388], const  ref arg style[232647]:_ref(iostyle)[967461]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533804]:syserr[223496] "RVV" "temp"
    (533806 return ret[533804])
  }
  function qio_file_close[232660](const in arg f[232657]:qio_file_ptr_t[231351]) : syserr[223496] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533810]:syserr[223496] "RVV" "temp"
    (533812 return ret[533810])
  }
  function qio_file_isopen[232694](const in arg f[232691]:qio_file_ptr_t[231351]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533824]:bool[10] "RVV" "temp"
    (533826 return ret[533824])
  }
  function qio_file_get_style[232733](const in arg f[232730]:qio_file_ptr_t[231351], ref arg style[232736]:_ref(iostyle)[967461]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533840 return _void[55])
  }
  function qio_channel_create[232790](ref arg ch[232787]:_ref(qio_channel_ptr_t)[936795], const in arg file[232793]:qio_file_ptr_t[231351], const in arg hints[232797]:int(32)[95], const in arg readable[232801]:int(32)[95], const in arg writeable[232805]:int(32)[95], const in arg start[232812]:int(64)[13], const in arg end[232819]:int(64)[13], const  ref arg style[232823]:_ref(iostyle)[967461]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533862]:syserr[223496] "RVV" "temp"
    (533864 return ret[533862])
  }
  function qio_channel_path_offset[232836](const in arg threadsafe[232833]:int(32)[95], const in arg ch[232839]:qio_channel_ptr_t[231377], ref arg path[232843]:_ref(c_string)[937138], ref arg offset[232850]:_ref(int(64))[936483]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533868]:syserr[223496] "RVV" "temp"
    (533870 return ret[533868])
  }
  function qio_channel_retain[232863](const in arg ch[232860]:qio_channel_ptr_t[231377]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533872 return _void[55])
  }
  function qio_channel_release[232873](const in arg ch[232870]:qio_channel_ptr_t[231377]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533874 return _void[55])
  }
  function qio_channel_binary[232969](const in arg ch[232966]:qio_channel_ptr_t[231377]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533900]:uint(8)[100] "RVV" "temp"
    (533902 return ret[533900])
  }
  function qio_channel_byteorder[232984](const in arg ch[232981]:qio_channel_ptr_t[231377]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533906]:uint(8)[100] "RVV" "temp"
    (533908 return ret[533906])
  }
  function qio_channel_str_style[232999](const in arg ch[232996]:qio_channel_ptr_t[231377]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533912]:int(64)[13] "RVV" "temp"
    (533914 return ret[533912])
  }
  function qio_channel_close[233052](const in arg threadsafe[233049]:int(32)[95], const in arg ch[233055]:qio_channel_ptr_t[231377]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533930]:syserr[223496] "RVV" "temp"
    (533932 return ret[533930])
  }
  function qio_channel_read_amt[1083194](const in arg threadsafe[1083198]:int(32)[95], const in arg ch[1083200]:qio_channel_ptr_t[231377], const in arg ptr[1083202]:c_ptr(uint(8))[937334], const in arg len[1083206]:int(64)[13]) : syserr[223496] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083210]:syserr[223496] "RVV" "temp"
    (1083218 return ret[1083210])
  }
  function qio_channel_offset_unlocked[233294](const in arg ch[233291]:qio_channel_ptr_t[231377]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533996]:int(64)[13] "RVV" "temp"
    (533998 return ret[533996])
  }
  function qio_file_path_for_fd[233559](const in arg fd[233556]:int(32)[95], ref arg path[233562]:_ref(c_string)[937138]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534066]:syserr[223496] "RVV" "temp"
    (534068 return ret[534066])
  }
  function qio_file_path_for_fp[233575](const in arg fp[233572]:_file[155], ref arg path[233578]:_ref(c_string)[937138]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534072]:syserr[223496] "RVV" "temp"
    (534074 return ret[534072])
  }
  function qio_file_path[233591](const in arg f[233588]:qio_file_ptr_t[231351], ref arg path[233594]:_ref(c_string)[937138]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534078]:syserr[223496] "RVV" "temp"
    (534080 return ret[534078])
  }
  function qio_shortest_path[233607](const in arg fl[233604]:qio_file_ptr_t[231351], ref arg path_out[233610]:_ref(c_string)[937138], const in arg path_in[233614]:c_string[19]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534084]:syserr[223496] "RVV" "temp"
    (534086 return ret[534084])
  }
  function qio_channel_write_int64[233962](const in arg threadsafe[233959]:int(32)[95], const in arg byteorder[233965]:int(32)[95], const in arg ch[233969]:qio_channel_ptr_t[231377], const in arg x[233976]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534168]:syserr[223496] "RVV" "temp"
    (534170 return ret[534168])
  }
  function qio_channel_write_string[234301](const in arg threadsafe[234298]:int(32)[95], const in arg byteorder[234304]:int(32)[95], const in arg str_style[234311]:int(64)[13], const in arg ch[234315]:qio_channel_ptr_t[231377], const in arg s[234319]:c_string[19], const in arg len[234323]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534240]:syserr[223496] "RVV" "temp"
    (534242 return ret[534240])
  }
  function qio_channel_print_int[1079436](const in arg threadsafe[1079440]:int(32)[95], const in arg ch[1079442]:qio_channel_ptr_t[231377], const  ref arg ptr[1079444]:_ref(int(64))[936483], const in arg len[1079448]:uint(64)[115], const in arg issigned[1079452]:int(32)[95]) : syserr[223496] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079456]:syserr[223496] "RVV" "temp"
    (1079464 return ret[1079456])
  }
  function qio_channel_print_string[234749](const in arg threadsafe[234746]:int(32)[95], const in arg ch[234752]:qio_channel_ptr_t[231377], const in arg ptr[234756]:c_string[19], const in arg len[234760]:int(64)[13]) : syserr[223496] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534354]:syserr[223496] "RVV" "temp"
    (534356 return ret[534354])
  }
  const QIO_CONV_UNK[234972]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[234977]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[234982]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[234987]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[234992]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[234997]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235002]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235007]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235012]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235017]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235022]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235027]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235032]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235037]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235042]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235047]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235052]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235057]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235062]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235067]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235072]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235077]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235082]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235087]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235092]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235097]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235102]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235107]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235112]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235117]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235122]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235207]() : iostyle[231756] "resolved"
  {
    val ret[534426]:iostyle[231756] "dead after last mention" "RVV" "temp"
    val ret[235211]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (235219 call qio_style_init_default[232530] ret[235211])
    (985698 'move' ret[534426] ret[235211])
    gotoReturn _end_defaultIOStyle[534424] _end_defaultIOStyle[534424]
    label _end_defaultIOStyle[534424]
    (534428 return ret[534426])
  }
  val iohints[235468]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function _ref(file)[948645].init[235486](ref arg this[235494]:_ref(file)[948645]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[715302]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1787387]:locale[28] "temp"
    (465164 call here[90435] ret_tmp[1787387])
    (1787390 'move' call_tmp[715302] ret_tmp[1787387])
    val tmp[465165]:locale[28] "dead after last mention" "temp"
    (465168 'move' tmp[465165] call_tmp[715302])
    (465170 '.=' this[235494] home[235474] tmp[465165])
    val tmp[465175]:qio_file_ptr_t[231351] "dead after last mention" "temp"
    (465178 'move' tmp[465175] QIO_FILE_PTR_NULL[231354])
    (465180 '.=' this[235494] _file_internal[235480] tmp[465175])
    (534484 return _void[55])
  }
  function _ref(file)[948645].home[886860](ref arg this[886864]:_ref(file)[948645]) ref : _ref(locale)[948755] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[886874]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[886881]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (886884 'move' call_tmp[886881](886868 '.' this[886864] home[235474]))
    (886879 'move' ret[886874] call_tmp[886881])
    (886876 return ret[886874])
  }
  function _ref(file)[948645]._file_internal[886886](ref arg this[886890]:_ref(file)[948645]) ref : _ref(qio_file_ptr_t)[936784] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[886900]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "RVV" "temp"
    ref call_tmp[886907]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
    (886910 'move' call_tmp[886907](886894 '.' this[886890] _file_internal[235480]))
    (886905 'move' ret[886900] call_tmp[886907])
    (886902 return ret[886900])
  }
  type file[235492] val home[235474]:locale[28] "no doc" val _file_internal[235480]:qio_file_ptr_t[231351] "no doc"
  function _ref(file)[948645].checkAssumingLocal[235680](const  ref arg this[235682]:_ref(file)[948645], ref arg error_out[1766730]:Error[167938]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[715410]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
    (715413 'move' call_tmp[715410](396291 call _file_internal[886886] this[235682]))
    const-val call_tmp[715415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017009]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017013 'move' coerce_tmp[1017009](1017011 'deref' call_tmp[715410]))
    (715418 'move' call_tmp[715415](235690 call is_c_nil[1016967] coerce_tmp[1017009]))
    const-val call_tmp[715420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715423 'move' call_tmp[715420] call_tmp[715415])
    if call_tmp[715420]
    {
      const-val call_tmp[715427]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017069]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017075 'move' coerce_tmp[1017069](1017071 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789371]:owned SystemError[1000149] "temp"
      (235714 call fromSyserr[1017024] coerce_tmp[1017069] "Operation attempted on an invalid file" ret_tmp[1789371])
      (1789374 'move' call_tmp[715427] ret_tmp[1789371])
      val call_tmp[715432]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017084]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789305]:owned Error[966369] "temp"
      (1017086 call _cast[1015658] call_tmp[715427] ret_tmp[1789305])
      (1789308 'move' coerce_tmp[1017084] ret_tmp[1789305])
      const-val _formal_tmp_in_err[1017263]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017267 'move' _formal_tmp_in_err[1017263] coerce_tmp[1017084])
      (715435 'move' call_tmp[715432](468026 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017263]))
      {
        val castedError[1766735]:Error[167938] "temp"
        (1766741 'move' castedError[1766735] call_tmp[715432])
        (1766743 '=' error_out[1766730] castedError[1766735])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1766732] _endcheckAssumingLocal[1766732]
      }
    }
    ref call_tmp[715439]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
    (715442 'move' call_tmp[715439](396297 call _file_internal[886886] this[235682]))
    const-val call_tmp[715444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017273]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017277 'move' coerce_tmp[1017273](1017275 'deref' call_tmp[715439]))
    (715447 'move' call_tmp[715444](235726 call qio_file_isopen[232694] coerce_tmp[1017273]))
    const-val call_tmp[715449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715452 'move' call_tmp[715449](235727 call ![7494] call_tmp[715444]))
    const-val call_tmp[715454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715457 'move' call_tmp[715454] call_tmp[715449])
    if call_tmp[715454]
    {
      const-val call_tmp[715461]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017283]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017289 'move' coerce_tmp[1017283](1017285 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789377]:owned SystemError[1000149] "temp"
      (235752 call fromSyserr[1017024] coerce_tmp[1017283] "Operation attempted on closed file" ret_tmp[1789377])
      (1789380 'move' call_tmp[715461] ret_tmp[1789377])
      val call_tmp[715466]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017292]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789311]:owned Error[966369] "temp"
      (1017294 call _cast[1015658] call_tmp[715461] ret_tmp[1789311])
      (1789314 'move' coerce_tmp[1017292] ret_tmp[1789311])
      const-val _formal_tmp_in_err[1017471]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017475 'move' _formal_tmp_in_err[1017471] coerce_tmp[1017292])
      (715469 'move' call_tmp[715466](468028 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017471]))
      {
        val castedError[1766748]:Error[167938] "temp"
        (1766754 'move' castedError[1766748] call_tmp[715466])
        (1766756 '=' error_out[1766730] castedError[1766748])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1766732] _endcheckAssumingLocal[1766732]
      }
    }
    label _endcheckAssumingLocal[1766732]
    (534492 return _void[55])
  }
  function _ref(file)[948645].deinit[235803](ref arg this[235805]:_ref(file)[948645]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[235831]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715487]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (715490 'move' call_tmp[715487](235811 call home[886860] this[235805]))
    const-val call_tmp[715492]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[985574]:BaseLocale[91201] "dead after last mention" "temp"
    (985579 'move' _locale_tmp_[985574](985576 call _value[89981] call_tmp[715487]))
    (715495 'move' call_tmp[715492](235828 '_wide_get_locale' _locale_tmp_[985574]))
    (235833 'move' tmp[235831] call_tmp[715492])
    val isdirect[2035373]:bool[10] "temp"
    (2035378 'move' isdirect[2035373](2035375 call chpl_doDirectExecuteOn[187423] tmp[235831]))
    if isdirect[2035373]
    {
      (2035382 call on_fn[935508] this[235805])
    }
    {
      val _args_foron_fn[2035397]:_class_localson_fn[2035389] "temp"
      (2035401 'move' _args_foron_fn[2035397](2035399 'stack allocate class' _class_localson_fn[2035389]))
      (2035403 '.=' _args_foron_fn[2035397] _0_tmp[2035392] tmp[235831])
      ref tmp[2035407]:file[235492] "temp"
      (2035411 'move' tmp[2035407](2035409 'set reference' this[235805]))
      (2035413 '.=' _args_foron_fn[2035397] _1_this[2035394] tmp[2035407])
      val _args_vforon_fn[2035417]:c_void_ptr[149] "temp"
      (2035421 'move' _args_vforon_fn[2035417](2035419 'cast_to_void_star' _args_foron_fn[2035397]))
      val _args_sizeon_fn[2035423]:int(64)[13] "temp"
      (2035427 'move' _args_sizeon_fn[2035423](2035425 'sizeof_bundle' _class_localson_fn[2035389]))
      on(2035459 call wrapon_fn[2035429] tmp[235831] _args_vforon_fn[2035417] _args_sizeon_fn[2035423] _args_foron_fn[2035397])
    }
    {
    }
    label _enddeinit[1771587]
    ref _field_destructor_tmp_[1771585]:_ref(locale)[948755] "temp"
    (1771592 'move' _field_destructor_tmp_[1771585](1771589 '.' this[235805] home[235474]))
    (1771594 call deinit[90185] _field_destructor_tmp_[1771585])
    (534496 return _void[55])
  }
  function _ref(file)[948645]._style[235872](const  ref arg this[235874]:_ref(file)[948645], ref arg error_out[1766760]:Error[167938]) : iostyle[231756] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534510]:iostyle[231756] "dead after last mention" "RVV" "temp"
    val ret[235881]:iostyle[231756] "dead at end of block" "insert auto destroy"
    const-val tmp[235919]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715525]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (715528 'move' call_tmp[715525](235887 call home[886860] this[235874]))
    const-val call_tmp[715530]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1016955]:BaseLocale[91201] "dead after last mention" "temp"
    (1016960 'move' _locale_tmp_[1016955](1016957 call _value[89981] call_tmp[715525]))
    (715533 'move' call_tmp[715530](235916 '_wide_get_locale' _locale_tmp_[1016955]))
    (235921 'move' tmp[235919] call_tmp[715530])
    val error[1766763]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1766765 'move' error[1766763] nil[44])
    val rvfDerefTmp[2032136]:file[235492] "temp"
    (2032140 'move' rvfDerefTmp[2032136](2032138 'deref' this[235874]))
    val isdirect[2035464]:bool[10] "temp"
    (2035469 'move' isdirect[2035464](2035466 call chpl_doDirectExecuteOn[187423] tmp[235919]))
    if isdirect[2035464]
    {
      (2035473 call on_fn[935517] rvfDerefTmp[2032136] ret[235881] error[1766763])
    }
    {
      val _args_foron_fn[2035494]:_class_localson_fn[2035482] "temp"
      (2035498 'move' _args_foron_fn[2035494](2035496 'stack allocate class' _class_localson_fn[2035482]))
      (2035500 '.=' _args_foron_fn[2035494] _0_tmp[2035485] tmp[235919])
      (2035504 '.=' _args_foron_fn[2035494] _1_rvfDerefTmp[2035487] rvfDerefTmp[2032136])
      ref tmp[2035508]:iostyle[231756] "temp"
      (2035512 'move' tmp[2035508](2035510 'set reference' ret[235881]))
      (2035514 '.=' _args_foron_fn[2035494] _2_ret[2035489] tmp[2035508])
      ref tmp[2035518]:Error[167938] "temp"
      (2035522 'move' tmp[2035518](2035520 'set reference' error[1766763]))
      (2035524 '.=' _args_foron_fn[2035494] _3_error[2035491] tmp[2035518])
      val _args_vforon_fn[2035528]:c_void_ptr[149] "temp"
      (2035532 'move' _args_vforon_fn[2035528](2035530 'cast_to_void_star' _args_foron_fn[2035494]))
      val _args_sizeon_fn[2035534]:int(64)[13] "temp"
      (2035538 'move' _args_sizeon_fn[2035534](2035536 'sizeof_bundle' _class_localson_fn[2035482]))
      on(2035586 call wrapon_fn[2035540] tmp[235919] _args_vforon_fn[2035528] _args_sizeon_fn[2035534] _args_foron_fn[2035494])
    }
    val errorExists[2054773]:bool[10] "temp"
    (2054778 'move' errorExists[2054773](2054775 '!=' error[1766763] nil[44]))
    if errorExists[2054773]
    {
      (1766769 '=' error_out[1766760] error[1766763])
      gotoErrorHandlingReturn _end__style[534508] _end__style[534508]
    }
    {
    }
    (1017492 'move' ret[534510] ret[235881])
    gotoReturn _end__style[534508] _end__style[534508]
    label _end__style[534508]
    (534512 return ret[534510])
  }
  function _ref(file)[948645].close[235936](const  ref arg this[235938]:_ref(file)[948645], ref arg error_out[1766777]:Error[167938]) : void[4] throws "method" "resolved" "no return value for void"
  {
    ref call_tmp[715546]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
    (715549 'move' call_tmp[715546](396322 call _file_internal[886886] this[235938]))
    const-val call_tmp[715551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060519]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060523 'move' coerce_tmp[1060519](1060521 'deref' call_tmp[715546]))
    (715554 'move' call_tmp[715551](235946 call is_c_nil[1016967] coerce_tmp[1060519]))
    const-val call_tmp[715556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715559 'move' call_tmp[715556] call_tmp[715551])
    if call_tmp[715556]
    {
      const-val call_tmp[715563]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060528]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060534 'move' coerce_tmp[1060528](1060530 'cast' int(64)[13] EBADF[224236]))
      const-val ret_tmp[1789383]:owned SystemError[1000149] "temp"
      (235954 call fromSyserr[1017024] coerce_tmp[1060528] "Operation attempted on an invalid file" ret_tmp[1789383])
      (1789386 'move' call_tmp[715563] ret_tmp[1789383])
      val call_tmp[715568]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060537]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789323]:owned Error[966369] "temp"
      (1060539 call _cast[1015658] call_tmp[715563] ret_tmp[1789323])
      (1789326 'move' coerce_tmp[1060537] ret_tmp[1789323])
      const-val _formal_tmp_in_err[1060716]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060720 'move' _formal_tmp_in_err[1060716] coerce_tmp[1060537])
      (715571 'move' call_tmp[715568](468030 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1060716]))
      {
        val castedError[1766782]:Error[167938] "temp"
        (1766788 'move' castedError[1766782] call_tmp[715568])
        (1766790 '=' error_out[1766777] castedError[1766782])
        gotoErrorHandlingReturn _endclose[1766779] _endclose[1766779]
      }
    }
    const-val call_tmp[715573]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715576 'move' call_tmp[715573](396327 call ENOERR[223566]))
    val err[235965]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1060726]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1060758 call =[224045] init_coerce_tmp[1060726] call_tmp[715573])
    (546926 'move' err[235965] init_coerce_tmp[1060726])
    const-val tmp[235985]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715580]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (715583 'move' call_tmp[715580](235970 call home[886860] this[235938]))
    const-val call_tmp[715585]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1060733]:BaseLocale[91201] "dead after last mention" "temp"
    (1060738 'move' _locale_tmp_[1060733](1060735 call _value[89981] call_tmp[715580]))
    (715588 'move' call_tmp[715585](235982 '_wide_get_locale' _locale_tmp_[1060733]))
    (235987 'move' tmp[235985] call_tmp[715585])
    val rvfDerefTmp[2032157]:file[235492] "temp"
    (2032161 'move' rvfDerefTmp[2032157](2032159 'deref' this[235938]))
    val isdirect[2035591]:bool[10] "temp"
    (2035596 'move' isdirect[2035591](2035593 call chpl_doDirectExecuteOn[187423] tmp[235985]))
    if isdirect[2035591]
    {
      (2035600 call on_fn[935526] rvfDerefTmp[2032157] err[235965])
    }
    {
      val _args_foron_fn[2035618]:_class_localson_fn[2035608] "temp"
      (2035622 'move' _args_foron_fn[2035618](2035620 'stack allocate class' _class_localson_fn[2035608]))
      (2035624 '.=' _args_foron_fn[2035618] _0_tmp[2035611] tmp[235985])
      (2035628 '.=' _args_foron_fn[2035618] _1_rvfDerefTmp[2035613] rvfDerefTmp[2032157])
      ref tmp[2035632]:syserr[223496] "temp"
      (2035636 'move' tmp[2035632](2035634 'set reference' err[235965]))
      (2035638 '.=' _args_foron_fn[2035618] _2_err[2035615] tmp[2035632])
      val _args_vforon_fn[2035642]:c_void_ptr[149] "temp"
      (2035646 'move' _args_vforon_fn[2035642](2035644 'cast_to_void_star' _args_foron_fn[2035618]))
      val _args_sizeon_fn[2035648]:int(64)[13] "temp"
      (2035652 'move' _args_sizeon_fn[2035648](2035650 'sizeof_bundle' _class_localson_fn[2035608]))
      on(2035692 call wrapon_fn[2035654] tmp[235985] _args_vforon_fn[2035642] _args_sizeon_fn[2035648] _args_foron_fn[2035618])
    }
    {
    }
    const-val call_tmp[715602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715605 'move' call_tmp[715602](236026 call _cond_test[223893] err[235965]))
    if call_tmp[715602]
    {
      {
        val error[1766794]:Error[167938] "error variable" "temp"
        (1766803 'move' error[1766794] nil[44])
        const-val call_tmp[715609]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788289]:string[26] "temp"
        (236021 call tryGetPath[236276] this[235938] ret_tmp[1788289])
        (1788292 'move' call_tmp[715609] ret_tmp[1788289])
        (236022 call ioerror[266162] err[235965] "in file.close" call_tmp[715609] error[1766794])
        val errorExists[2054781]:bool[10] "temp"
        (2054786 'move' errorExists[2054781](2054783 '!=' error[1766794] nil[44]))
        if errorExists[2054781]
        {
          (1798987 call chpl__autoDestroy[1494420] call_tmp[715609])
          gotoErrorHandling handler[1766795] handler[1766795]
        }
        (1798990 call chpl__autoDestroy[1494420] call_tmp[715609])
        label handler[1766795]
        const-val shouldHandleError[1766814]:bool[10] "temp"
        val errorExists[2054789]:bool[10] "temp"
        (2054794 'move' errorExists[2054789](2054791 '!=' error[1766794] nil[44]))
        (1766818 'move' shouldHandleError[1766814] errorExists[2054789])
        if shouldHandleError[1766814]
        {
          (1766810 '=' error_out[1766777] error[1766794])
          gotoErrorHandlingReturn _endclose[1766779] _endclose[1766779]
        }
      }
    }
    label _endclose[1766779]
    (534520 return _void[55])
  }
  function _ref(file)[948645].path[236124](const  ref arg this[236126]:_ref(file)[948645], ref arg error_out[1766822]:Error[167938], ref arg _retArg[1788283]:_ref(string)[937850]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534526]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236133]:string[26] "dead at end of block" "insert auto destroy"
    (1021592 call init[30760] ret[236133])
    const-val call_tmp[715657]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715660 'move' call_tmp[715657](396349 call ENOERR[223566]))
    val err[236140]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1019009]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1021582 call =[224045] init_coerce_tmp[1019009] call_tmp[715657])
    (546932 'move' err[236140] init_coerce_tmp[1019009])
    const-val tmp[236229]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715664]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (715667 'move' call_tmp[715664](236145 call home[886860] this[236126]))
    const-val call_tmp[715669]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019016]:BaseLocale[91201] "dead after last mention" "temp"
    (1019021 'move' _locale_tmp_[1019016](1019018 call _value[89981] call_tmp[715664]))
    (715672 'move' call_tmp[715669](236226 '_wide_get_locale' _locale_tmp_[1019016]))
    (236231 'move' tmp[236229] call_tmp[715669])
    val error[1766825]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1766827 'move' error[1766825] nil[44])
    val rvfDerefTmp[2032171]:file[235492] "temp"
    (2032175 'move' rvfDerefTmp[2032171](2032173 'deref' this[236126]))
    val isdirect[2035697]:bool[10] "temp"
    (2035702 'move' isdirect[2035697](2035699 call chpl_doDirectExecuteOn[187423] tmp[236229]))
    if isdirect[2035697]
    {
      (2035706 call on_fn[935544] rvfDerefTmp[2032171] err[236140] ret[236133] error[1766825])
    }
    {
      val _args_foron_fn[2035730]:_class_localson_fn[2035716] "temp"
      (2035734 'move' _args_foron_fn[2035730](2035732 'stack allocate class' _class_localson_fn[2035716]))
      (2035736 '.=' _args_foron_fn[2035730] _0_tmp[2035719] tmp[236229])
      (2035740 '.=' _args_foron_fn[2035730] _1_rvfDerefTmp[2035721] rvfDerefTmp[2032171])
      ref tmp[2035744]:syserr[223496] "temp"
      (2035748 'move' tmp[2035744](2035746 'set reference' err[236140]))
      (2035750 '.=' _args_foron_fn[2035730] _2_err[2035723] tmp[2035744])
      ref tmp[2035754]:string[26] "temp"
      (2035758 'move' tmp[2035754](2035756 'set reference' ret[236133]))
      (2035760 '.=' _args_foron_fn[2035730] _3_ret[2035725] tmp[2035754])
      ref tmp[2035764]:Error[167938] "temp"
      (2035768 'move' tmp[2035764](2035766 'set reference' error[1766825]))
      (2035770 '.=' _args_foron_fn[2035730] _4_error[2035727] tmp[2035764])
      val _args_vforon_fn[2035774]:c_void_ptr[149] "temp"
      (2035778 'move' _args_vforon_fn[2035774](2035776 'cast_to_void_star' _args_foron_fn[2035730]))
      val _args_sizeon_fn[2035780]:int(64)[13] "temp"
      (2035784 'move' _args_sizeon_fn[2035780](2035782 'sizeof_bundle' _class_localson_fn[2035716]))
      on(2035840 call wrapon_fn[2035786] tmp[236229] _args_vforon_fn[2035774] _args_sizeon_fn[2035780] _args_foron_fn[2035730])
    }
    val errorExists[2054797]:bool[10] "temp"
    (2054802 'move' errorExists[2054797](2054799 '!=' error[1766825] nil[44]))
    if errorExists[2054797]
    {
      (1766831 '=' error_out[1766822] error[1766825])
      (1798993 call chpl__autoDestroy[1494420] ret[236133])
      gotoErrorHandlingReturn _end_path[534524] _end_path[534524]
    }
    {
    }
    const-val call_tmp[715725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715728 'move' call_tmp[715725](236262 call _cond_test[223893] err[236140]))
    if call_tmp[715725]
    {
      {
        val error[1766839]:Error[167938] "error variable" "temp"
        (1766848 'move' error[1766839] nil[44])
        (236258 call ioerror[266223] err[236140] "in file.path" error[1766839])
        val errorExists[2054805]:bool[10] "temp"
        (2054810 'move' errorExists[2054805](2054807 '!=' error[1766839] nil[44]))
        if errorExists[2054805]
        {
          gotoErrorHandling handler[1766840] handler[1766840]
        }
        label handler[1766840]
        const-val shouldHandleError[1766859]:bool[10] "temp"
        val errorExists[2054813]:bool[10] "temp"
        (2054818 'move' errorExists[2054813](2054815 '!=' error[1766839] nil[44]))
        (1766863 'move' shouldHandleError[1766859] errorExists[2054813])
        if shouldHandleError[1766859]
        {
          (1766855 '=' error_out[1766822] error[1766839])
          (1798996 call chpl__autoDestroy[1494420] ret[236133])
          gotoErrorHandlingReturn _end_path[534524] _end_path[534524]
        }
      }
    }
    (1021590 'move' ret[534526] ret[236133])
    gotoReturn _end_path[534524] _end_path[534524]
    label _end_path[534524]
    (1788285 '=' _retArg[1788283] ret[534526])
    (1788287 return _void[55])
  }
  function _ref(file)[948645].tryGetPath[236276](const  ref arg this[236278]:_ref(file)[948645], ref arg _retArg[1788319]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534538]:string[26] "dead after last mention" "RVV" "temp"
    {
      val error[1766867]:Error[167938] "error variable" "temp"
      (1766876 'move' error[1766867] nil[44])
      const-val call_tmp[715732]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1788277]:string[26] "temp"
      (236287 call path[236124] this[236278] error[1766867] ret_tmp[1788277])
      (1788280 'move' call_tmp[715732] ret_tmp[1788277])
      val errorExists[2054821]:bool[10] "temp"
      (2054826 'move' errorExists[2054821](2054823 '!=' error[1766867] nil[44]))
      if errorExists[2054821]
      {
        gotoErrorHandling handler[1766868] handler[1766868]
      }
      (1021624 'move' ret[534538] call_tmp[715732])
      gotoReturn _end_tryGetPath[534536] _end_tryGetPath[534536]
      label handler[1766868]
      const-val shouldHandleError[1766883]:bool[10] "temp"
      val errorExists[2054829]:bool[10] "temp"
      (2054834 'move' errorExists[2054829](2054831 '!=' error[1766867] nil[44]))
      (1766887 'move' shouldHandleError[1766883] errorExists[2054829])
      if shouldHandleError[1766883]
      {
        {
          val call_tmp[715737]:Error[167938] "dead at end of block" "maybe param" "temp"
          (715740 'move' call_tmp[715737] error[1766867])
          val tmp[354439]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
          (546938 'move' tmp[354439] call_tmp[715737])
          val call_tmp[715742]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (715745 'move' call_tmp[715742] tmp[354439])
          const-val call_tmp[715747]:owned Error[966369] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[1021604]:owned Error[966369] "dead at end of block" "delay instantiation" "temp"
          (1021607 call init[968005] initTemp[1021604] call_tmp[715742])
          (715750 'move' call_tmp[715747] initTemp[1021604])
          const-val chpl_anon_error[354445]:owned Error[966369] "dead at end of block" "delay instantiation" "insert auto destroy"
          (546940 'move' chpl_anon_error[354445] call_tmp[715747])
          {
            (534550 'move' ret[534538](1788323 call chpl__initCopy[981259] "unknown"))
            (1798999 call chpl__autoDestroy[1501551] chpl_anon_error[354445])
            gotoReturn _end_tryGetPath[534536] _end_tryGetPath[534536]
          }
          (1799003 call chpl__autoDestroy[1501551] chpl_anon_error[354445])
        }
      }
    }
    label _end_tryGetPath[534536]
    (1788321 '=' _retArg[1788319] ret[534538])
    (1788325 return _void[55])
  }
  function openfd[237183](const in arg fd[237180]:int(32)[95], const in arg hints[237187]:int(32)[95], const  ref arg style[237195]:iostyle[231756], ref arg error_out[1766891]:Error[167938], ref arg _retArg[1788333]:_ref(file)[948645]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534637]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237201]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (546976 'move' local_style[237201] style[237195])
    val ret[237207]:file[235492] "dead at end of block" "insert auto destroy"
    (1016432 call init[235486] ret[237207])
    ref call_tmp[716031]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (716034 'move' call_tmp[716031](237212 call home[886860] ret[237207]))
    const-val call_tmp[716036]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787369]:locale[28] "temp"
    (396467 call here[90435] ret_tmp[1787369])
    (1787372 'move' call_tmp[716036] ret_tmp[1787369])
    (237216 call =[90631] call_tmp[716031] call_tmp[716036])
    (1799006 call chpl__autoDestroy[1494484] call_tmp[716036])
    ref call_tmp[716043]:_ref(qio_file_ptr_t)[936784] "dead at end of block" "maybe param" "temp"
    (716046 'move' call_tmp[716043](237221 call _file_internal[886886] ret[237207]))
    const-val call_tmp[716048]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716051 'move' call_tmp[716048](237227 call chpl_cnullfile[223486]))
    const-val call_tmp[716053]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986435]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986441 'move' coerce_tmp[986435](986437 'cast' int(32)[95] 0))
    (716056 'move' call_tmp[716053](237232 call qio_file_init[232560] call_tmp[716043] call_tmp[716048] fd[237180] hints[237187] local_style[237201] coerce_tmp[986435]))
    const-val err[237233]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546980 'move' err[237233] call_tmp[716053])
    const-val call_tmp[716058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716061 'move' call_tmp[716058](237296 call _cond_test[223893] err[237233]))
    if call_tmp[716058]
    {
      val path_cs[237239]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016470 'move' path_cs[237239](1016468 'cast' c_string[19] nil[44]))
      const-val call_tmp[716063]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (716066 'move' call_tmp[716063](237248 call qio_file_path_for_fd[233559] fd[237180] path_cs[237239]))
      const-val path_err[237249]:syserr[223496] "dead at end of block" "insert auto destroy"
      (546984 'move' path_err[237249] call_tmp[716063])
      const-val path[237267]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576647]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576648]:bool[10] "dead after last mention" "maybe param" "temp"
      (576653 'move' tmp[576648](576651 call _cond_test[223893] path_err[237249]))
      if tmp[576648]
      {
        (576658 'move' tmp[576647](1788337 call chpl__initCopy[981259] "unknown"))
      }
      {
        const-val tmp[576660]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[986468]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1766894]:Error[167938] "error variable" "temp"
        (1766896 'move' error[1766894] nil[44])
        (986473 'move' default_arg_length[986468](986470 call createStringWithNewBuffer_default_length[963957] path_cs[237239] error[1766894]))
        val errorExists[2054837]:bool[10] "temp"
        (2054842 'move' errorExists[2054837](2054839 '!=' error[1766894] nil[44]))
        if errorExists[2054837]
        {
          (1766900 '=' error_out[1766891] error[1766894])
          (1799009 call chpl__autoDestroy[1496269] ret[237207])
          gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
        }
        val error[1766909]:Error[167938] "error variable" "temp"
        (1766911 'move' error[1766909] nil[44])
        const-val ret_tmp[1785975]:string[26] "temp"
        (237263 call createStringWithNewBuffer[30410] path_cs[237239] default_arg_length[986468] replace[173648] error[1766909] ret_tmp[1785975])
        (1785978 'move' tmp[576660] ret_tmp[1785975])
        val errorExists[2054845]:bool[10] "temp"
        (2054850 'move' errorExists[2054845](2054847 '!=' error[1766909] nil[44]))
        if errorExists[2054845]
        {
          (1766915 '=' error_out[1766891] error[1766909])
          (1799012 call chpl__autoDestroy[1496269] ret[237207])
          gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
        }
        (576667 'move' tmp[576647] tmp[576660])
      }
      (546986 'move' path[237267] tmp[576647])
      {
        val error[1766923]:Error[167938] "error variable" "temp"
        (1766932 'move' error[1766923] nil[44])
        (237292 call ioerror[266162] err[237233] "in openfd" path[237267] error[1766923])
        val errorExists[2054853]:bool[10] "temp"
        (2054858 'move' errorExists[2054853](2054855 '!=' error[1766923] nil[44]))
        if errorExists[2054853]
        {
          gotoErrorHandling handler[1766924] handler[1766924]
        }
        label handler[1766924]
        const-val shouldHandleError[1766943]:bool[10] "temp"
        val errorExists[2054861]:bool[10] "temp"
        (2054866 'move' errorExists[2054861](2054863 '!=' error[1766923] nil[44]))
        (1766947 'move' shouldHandleError[1766943] errorExists[2054861])
        if shouldHandleError[1766943]
        {
          (1766939 '=' error_out[1766891] error[1766923])
          (1799015 call chpl__autoDestroy[1494420] path[237267])
          (1799018 call chpl__autoDestroy[1496269] ret[237207])
          gotoErrorHandlingReturn _end_openfd[534635] _end_openfd[534635]
        }
      }
      (1799022 call chpl__autoDestroy[1494420] path[237267])
    }
    (1016430 'move' ret[534637] ret[237207])
    gotoReturn _end_openfd[534635] _end_openfd[534635]
    label _end_openfd[534635]
    (1788335 '=' _retArg[1788333] ret[534637])
    (1788339 return _void[55])
  }
  function openfd_default_style[985656](ref arg error_out[1767632]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985658]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[985663]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (985668 'move' style[985663](985667 call defaultIOStyle[235207]))
    (985700 'move' ret[985658] style[985663])
    label _endopenfd_default_style[1767634]
    (985661 return ret[985658])
  }
  function openfd_default_hints[985614](ref arg error_out[1767628]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985616]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[985621]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[985625]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[985627]:int(32)[95] "dead after last mention" "temp" "type variable"
    (985645 'move' tmp[985625] IOHINT_NONE[231323])
    (985638 'move' hints[985621] tmp[985625])
    (985641 'move' ret[985616] hints[985621])
    label _endopenfd_default_hints[1767630]
    (985619 return ret[985616])
  }
  function openfp[237312](const in arg fp[237309]:_file[155], const in arg hints[237316]:int(32)[95], const  ref arg style[237324]:iostyle[231756], ref arg error_out[1766951]:Error[167938], ref arg _retArg[1788353]:_ref(file)[948645]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534649]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237330]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (546988 'move' local_style[237330] style[237324])
    val ret[237336]:file[235492] "dead at end of block" "insert auto destroy"
    (1022037 call init[235486] ret[237336])
    ref call_tmp[716070]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (716073 'move' call_tmp[716070](237341 call home[886860] ret[237336]))
    const-val call_tmp[716075]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787375]:locale[28] "temp"
    (396488 call here[90435] ret_tmp[1787375])
    (1787378 'move' call_tmp[716075] ret_tmp[1787375])
    (237345 call =[90631] call_tmp[716070] call_tmp[716075])
    (1799025 call chpl__autoDestroy[1494484] call_tmp[716075])
    ref call_tmp[716082]:_ref(qio_file_ptr_t)[936784] "dead at end of block" "maybe param" "temp"
    (716085 'move' call_tmp[716082](237350 call _file_internal[886886] ret[237336]))
    const-val call_tmp[716092]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1021992]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1021998 'move' coerce_tmp[1021992](1021994 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022000]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022006 'move' coerce_tmp[1022000](1022002 'cast' int(32)[95] 1))
    (716095 'move' call_tmp[716092](237361 call qio_file_init[232560] call_tmp[716082] fp[237309] coerce_tmp[1021992] hints[237316] local_style[237330] coerce_tmp[1022000]))
    const-val err[237362]:syserr[223496] "dead at end of block" "insert auto destroy"
    (546992 'move' err[237362] call_tmp[716092])
    const-val call_tmp[716097]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716100 'move' call_tmp[716097](237430 call _cond_test[223893] err[237362]))
    if call_tmp[716097]
    {
      val path_cs[237368]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022045 'move' path_cs[237368](1022043 'cast' c_string[19] nil[44]))
      const-val call_tmp[716102]:syserr[223496] "dead at end of block" "maybe param" "temp"
      (716105 'move' call_tmp[716102](237377 call qio_file_path_for_fp[233575] fp[237309] path_cs[237368]))
      const-val path_err[237378]:syserr[223496] "dead at end of block" "insert auto destroy"
      (546996 'move' path_err[237378] call_tmp[716102])
      const-val path[237396]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576674]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576675]:bool[10] "dead after last mention" "maybe param" "temp"
      (576680 'move' tmp[576675](576678 call _cond_test[223893] path_err[237378]))
      if tmp[576675]
      {
        (576685 'move' tmp[576674](1788357 call chpl__initCopy[981259] "unknown"))
      }
      {
        const-val tmp[576687]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[1022023]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1766954]:Error[167938] "error variable" "temp"
        (1766956 'move' error[1766954] nil[44])
        (1022028 'move' default_arg_length[1022023](1022025 call createStringWithNewBuffer_default_length[963957] path_cs[237368] error[1766954]))
        val errorExists[2054869]:bool[10] "temp"
        (2054874 'move' errorExists[2054869](2054871 '!=' error[1766954] nil[44]))
        if errorExists[2054869]
        {
          (1766960 '=' error_out[1766951] error[1766954])
          (1799028 call chpl__autoDestroy[1496269] ret[237336])
          gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
        }
        val error[1766969]:Error[167938] "error variable" "temp"
        (1766971 'move' error[1766969] nil[44])
        const-val ret_tmp[1785981]:string[26] "temp"
        (237392 call createStringWithNewBuffer[30410] path_cs[237368] default_arg_length[1022023] replace[173648] error[1766969] ret_tmp[1785981])
        (1785984 'move' tmp[576687] ret_tmp[1785981])
        val errorExists[2054877]:bool[10] "temp"
        (2054882 'move' errorExists[2054877](2054879 '!=' error[1766969] nil[44]))
        if errorExists[2054877]
        {
          (1766975 '=' error_out[1766951] error[1766969])
          (1799031 call chpl__autoDestroy[1496269] ret[237336])
          gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
        }
        (576694 'move' tmp[576674] tmp[576687])
      }
      (546998 'move' path[237396] tmp[576674])
      (237403 call chpl_free_c_string[22706] path_cs[237368])
      {
        val error[1766983]:Error[167938] "error variable" "temp"
        (1766992 'move' error[1766983] nil[44])
        (237426 call ioerror[266162] err[237362] "in openfp" path[237396] error[1766983])
        val errorExists[2054885]:bool[10] "temp"
        (2054890 'move' errorExists[2054885](2054887 '!=' error[1766983] nil[44]))
        if errorExists[2054885]
        {
          gotoErrorHandling handler[1766984] handler[1766984]
        }
        label handler[1766984]
        const-val shouldHandleError[1767003]:bool[10] "temp"
        val errorExists[2054893]:bool[10] "temp"
        (2054898 'move' errorExists[2054893](2054895 '!=' error[1766983] nil[44]))
        (1767007 'move' shouldHandleError[1767003] errorExists[2054893])
        if shouldHandleError[1767003]
        {
          (1766999 '=' error_out[1766951] error[1766983])
          (1799034 call chpl__autoDestroy[1494420] path[237396])
          (1799037 call chpl__autoDestroy[1496269] ret[237336])
          gotoErrorHandlingReturn _end_openfp[534647] _end_openfp[534647]
        }
      }
      (1799041 call chpl__autoDestroy[1494420] path[237396])
    }
    (1022035 'move' ret[534649] ret[237336])
    gotoReturn _end_openfp[534647] _end_openfp[534647]
    label _end_openfp[534647]
    (1788355 '=' _retArg[1788353] ret[534649])
    (1788359 return _void[55])
  }
  function openfp_default_style[1021805](ref arg error_out[1767767]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021807]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1021812]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1021817 'move' style[1021812](1021816 call defaultIOStyle[235207]))
    (1021821 'move' ret[1021807] style[1021812])
    label _endopenfp_default_style[1767769]
    (1021810 return ret[1021807])
  }
  function openfp_default_hints[1021763](ref arg error_out[1767763]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021765]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1021770]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1021774]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1021776]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1021794 'move' tmp[1021774] IOHINT_NONE[231323])
    (1021787 'move' hints[1021770] tmp[1021774])
    (1021790 'move' ret[1021765] hints[1021770])
    label _endopenfp_default_hints[1767765]
    (1021768 return ret[1021765])
  }
  function openmem[237537](const  ref arg style[237533]:iostyle[231756], ref arg error_out[1767011]:Error[167938], ref arg _retArg[1788379]:_ref(file)[948645]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534673]:file[235492] "dead after last mention" "RVV" "temp"
    const-val local_style[237541]:iostyle[231756] "dead at end of block" "insert auto destroy"
    (547006 'move' local_style[237541] style[237533])
    val ret[237547]:file[235492] "dead at end of block" "insert auto destroy"
    (1060512 call init[235486] ret[237547])
    ref call_tmp[716138]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (716141 'move' call_tmp[716138](237552 call home[886860] ret[237547]))
    const-val call_tmp[716143]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787381]:locale[28] "temp"
    (396520 call here[90435] ret_tmp[1787381])
    (1787384 'move' call_tmp[716143] ret_tmp[1787381])
    (237556 call =[90631] call_tmp[716138] call_tmp[716143])
    (1799044 call chpl__autoDestroy[1494484] call_tmp[716143])
    ref call_tmp[716150]:_ref(qio_file_ptr_t)[936784] "dead at end of block" "maybe param" "temp"
    (716153 'move' call_tmp[716150](237561 call _file_internal[886886] ret[237547]))
    const-val call_tmp[716155]:syserr[223496] "dead at end of block" "maybe param" "temp"
    (716158 'move' call_tmp[716155](237567 call qio_file_open_mem[232640] call_tmp[716150] QBUFFER_PTR_NULL[231391] local_style[237541]))
    const-val err[237568]:syserr[223496] "dead at end of block" "insert auto destroy"
    (547010 'move' err[237568] call_tmp[716155])
    const-val call_tmp[716160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716163 'move' call_tmp[716160](237597 call _cond_test[223893] err[237568]))
    if call_tmp[716160]
    {
      {
        val error[1767013]:Error[167938] "error variable" "temp"
        (1767022 'move' error[1767013] nil[44])
        (237593 call ioerror[266223] err[237568] "in openmem" error[1767013])
        val errorExists[2054901]:bool[10] "temp"
        (2054906 'move' errorExists[2054901](2054903 '!=' error[1767013] nil[44]))
        if errorExists[2054901]
        {
          gotoErrorHandling handler[1767014] handler[1767014]
        }
        label handler[1767014]
        const-val shouldHandleError[1767033]:bool[10] "temp"
        val errorExists[2054909]:bool[10] "temp"
        (2054914 'move' errorExists[2054909](2054911 '!=' error[1767013] nil[44]))
        (1767037 'move' shouldHandleError[1767033] errorExists[2054909])
        if shouldHandleError[1767033]
        {
          (1767029 '=' error_out[1767011] error[1767013])
          (1799047 call chpl__autoDestroy[1496269] ret[237547])
          gotoErrorHandlingReturn _end_openmem[534671] _end_openmem[534671]
        }
      }
    }
    (1060510 'move' ret[534673] ret[237547])
    gotoReturn _end_openmem[534671] _end_openmem[534671]
    label _end_openmem[534671]
    (1788381 '=' _retArg[1788379] ret[534673])
    (1788383 return _void[55])
  }
  function openmem_default_style[1060470](ref arg error_out[1768198]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1060472]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1060477]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1060482 'move' style[1060477](1060481 call defaultIOStyle[235207]))
    (1060486 'move' ret[1060472] style[1060477])
    label _endopenmem_default_style[1768200]
    (1060475 return ret[1060472])
  }
  function _ref(channel(false,dynamic,true))[985547].home[1017935](ref arg this[1017939]:_ref(channel(false,dynamic,true))[985547]) ref : _ref(locale)[948755] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1017941]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[1017949]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1017951 'move' call_tmp[1017949](1017953 '.' this[1017939] home[985526]))
    (1017956 'move' ret[1017941] call_tmp[1017949])
    (1017960 return ret[1017941])
  }
  function _ref(channel(true,dynamic,true))[1021745].home[1022953](ref arg this[1022957]:_ref(channel(true,dynamic,true))[1021745]) ref : _ref(locale)[948755] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1022959]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[1022967]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1022969 'move' call_tmp[1022967](1022971 '.' this[1022957] home[1021724]))
    (1022974 'move' ret[1022959] call_tmp[1022967])
    (1022978 return ret[1022959])
  }
  function _ref(channel(true,dynamic,false))[1060867].home[1061666](ref arg this[1061670]:_ref(channel(true,dynamic,false))[1060867]) ref : _ref(locale)[948755] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1061672]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061680]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1061682 'move' call_tmp[1061680](1061684 '.' this[1061670] home[1060846]))
    (1061687 'move' ret[1061672] call_tmp[1061680])
    (1061691 return ret[1061672])
  }
  function _ref(channel(false,dynamic,false))[1080602].home[1081398](ref arg this[1081402]:_ref(channel(false,dynamic,false))[1080602]) ref : _ref(locale)[948755] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081404]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081412]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1081414 'move' call_tmp[1081412](1081416 '.' this[1081402] home[1080581]))
    (1081419 'move' ret[1081404] call_tmp[1081412])
    (1081423 return ret[1081404])
  }
  function _ref(channel(false,dynamic,true))[985547]._channel_internal[1018277](ref arg this[1018281]:_ref(channel(false,dynamic,true))[985547]) ref : _ref(qio_channel_ptr_t)[936795] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018283]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018291]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1018293 'move' call_tmp[1018291](1018295 '.' this[1018281] _channel_internal[985531]))
    (1018298 'move' ret[1018283] call_tmp[1018291])
    (1018302 return ret[1018283])
  }
  function _ref(channel(true,dynamic,true))[1021745]._channel_internal[1022987](ref arg this[1022991]:_ref(channel(true,dynamic,true))[1021745]) ref : _ref(qio_channel_ptr_t)[936795] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1022993]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023001]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1023003 'move' call_tmp[1023001](1023005 '.' this[1022991] _channel_internal[1021729]))
    (1023008 'move' ret[1022993] call_tmp[1023001])
    (1023012 return ret[1022993])
  }
  function _ref(channel(true,dynamic,false))[1060867]._channel_internal[1061700](ref arg this[1061704]:_ref(channel(true,dynamic,false))[1060867]) ref : _ref(qio_channel_ptr_t)[936795] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1061706]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061714]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1061716 'move' call_tmp[1061714](1061718 '.' this[1061704] _channel_internal[1060851]))
    (1061721 'move' ret[1061706] call_tmp[1061714])
    (1061725 return ret[1061706])
  }
  function _ref(channel(false,dynamic,false))[1080602]._channel_internal[1081432](ref arg this[1081436]:_ref(channel(false,dynamic,false))[1080602]) ref : _ref(qio_channel_ptr_t)[936795] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081438]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081446]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1081448 'move' call_tmp[1081446](1081450 '.' this[1081436] _channel_internal[1080586]))
    (1081453 'move' ret[1081438] call_tmp[1081446])
    (1081457 return ret[1081438])
  }
  function _ref(channel(true,dynamic,false))[1060867]._readWriteThisFromLocale[1066227](ref arg this[1066231]:_ref(channel(true,dynamic,false))[1060867]) ref : _ref(locale)[948755] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1066233]:_ref(locale)[948755] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066241]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1066243 'move' call_tmp[1066241](1066245 '.' this[1066231] _readWriteThisFromLocale[1060855]))
    (1066248 'move' ret[1066233] call_tmp[1066241])
    (1066252 return ret[1066233])
  }
  type channel(false,dynamic,true)[985538] val home[985526]:locale[28] "no doc" val _channel_internal[985531]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[985535]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080593] val home[1080581]:locale[28] "no doc" val _channel_internal[1080586]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1080590]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021736] val home[1021724]:locale[28] "no doc" val _channel_internal[1021729]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1021733]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060858] val home[1060846]:locale[28] "no doc" val _channel_internal[1060851]:qio_channel_ptr_t[231377] "no doc" val _readWriteThisFromLocale[1060855]:locale[28] "no doc"
  function =[1018350](ref arg lhs[1018352]:_ref(channel(false,dynamic,true))[985547], const  ref arg rhs[1018354]:channel(false,dynamic,true)[985538]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1018553]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1018555]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018557 'move' call_tmp[1018555](1018560 call home[1017935] rhs[1018354]))
    const-val call_tmp[1018563]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018955]:BaseLocale[91201] "dead after last mention" "temp"
    (1018960 'move' _locale_tmp_[1018955](1018957 call _value[89981] call_tmp[1018555]))
    (1018565 'move' call_tmp[1018563](1018567 '_wide_get_locale' _locale_tmp_[1018955]))
    (1018569 'move' tmp[1018553] call_tmp[1018563])
    val rvfDerefTmp[2032262]:channel(false,dynamic,true)[985538] "temp"
    (2032266 'move' rvfDerefTmp[2032262](2032264 'deref' rhs[1018354]))
    val isdirect[2036437]:bool[10] "temp"
    (2036442 'move' isdirect[2036437](2036439 call chpl_doDirectExecuteOn[187423] tmp[1018553]))
    if isdirect[2036437]
    {
      (2036446 call on_fn[1018576] rvfDerefTmp[2032262])
    }
    {
      val _args_foron_fn[2036461]:_class_localson_fn[2036453] "temp"
      (2036465 'move' _args_foron_fn[2036461](2036463 'stack allocate class' _class_localson_fn[2036453]))
      (2036467 '.=' _args_foron_fn[2036461] _0_tmp[2036456] tmp[1018553])
      (2036471 '.=' _args_foron_fn[2036461] _1_rvfDerefTmp[2036458] rvfDerefTmp[2032262])
      val _args_vforon_fn[2036475]:c_void_ptr[149] "temp"
      (2036479 'move' _args_vforon_fn[2036475](2036477 'cast_to_void_star' _args_foron_fn[2036461]))
      val _args_sizeon_fn[2036481]:int(64)[13] "temp"
      (2036485 'move' _args_sizeon_fn[2036481](2036483 'sizeof_bundle' _class_localson_fn[2036453]))
      on(2036517 call wrapon_fn[2036487] tmp[1018553] _args_vforon_fn[2036475] _args_sizeon_fn[2036481] _args_foron_fn[2036461])
    }
    {
    }
    const-val tmp[1018597]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1018599]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1018601 'move' call_tmp[1018599](1018604 call home[1017935] lhs[1018352]))
    const-val call_tmp[1018607]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018974]:BaseLocale[91201] "dead after last mention" "temp"
    (1018979 'move' _locale_tmp_[1018974](1018976 call _value[89981] call_tmp[1018599]))
    (1018609 'move' call_tmp[1018607](1018611 '_wide_get_locale' _locale_tmp_[1018974]))
    (1018613 'move' tmp[1018597] call_tmp[1018607])
    val isdirect[2036522]:bool[10] "temp"
    (2036527 'move' isdirect[2036522](2036524 call chpl_doDirectExecuteOn[187423] tmp[1018597]))
    if isdirect[2036522]
    {
      (2036531 call on_fn[1018620] lhs[1018352])
    }
    {
      val _args_foron_fn[2036546]:_class_localson_fn[2036538] "temp"
      (2036550 'move' _args_foron_fn[2036546](2036548 'stack allocate class' _class_localson_fn[2036538]))
      (2036552 '.=' _args_foron_fn[2036546] _0_tmp[2036541] tmp[1018597])
      ref tmp[2036556]:channel(false,dynamic,true)[985538] "temp"
      (2036560 'move' tmp[2036556](2036558 'set reference' lhs[1018352]))
      (2036562 '.=' _args_foron_fn[2036546] _1_lhs[2036543] tmp[2036556])
      val _args_vforon_fn[2036566]:c_void_ptr[149] "temp"
      (2036570 'move' _args_vforon_fn[2036566](2036568 'cast_to_void_star' _args_foron_fn[2036546]))
      val _args_sizeon_fn[2036572]:int(64)[13] "temp"
      (2036576 'move' _args_sizeon_fn[2036572](2036574 'sizeof_bundle' _class_localson_fn[2036538]))
      on(2036608 call wrapon_fn[2036578] tmp[1018597] _args_vforon_fn[2036566] _args_sizeon_fn[2036572] _args_foron_fn[2036546])
    }
    {
    }
    ref call_tmp[1018641]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1018643 'move' call_tmp[1018641](1018646 call home[1017935] lhs[1018352]))
    ref call_tmp[1018649]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018651 'move' call_tmp[1018649](1018654 call home[1017935] rhs[1018354]))
    (1018658 call =[90631] call_tmp[1018641] call_tmp[1018649])
    ref call_tmp[1018662]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1018664 'move' call_tmp[1018662](1018667 call _channel_internal[1018277] lhs[1018352]))
    ref call_tmp[1018670]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018672 'move' call_tmp[1018670](1018675 call _channel_internal[1018277] rhs[1018354]))
    const-val coerce_tmp[1018997]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019001 'move' coerce_tmp[1018997](1018999 'deref' call_tmp[1018670]))
    (1018679 call =[861391] call_tmp[1018662] coerce_tmp[1018997])
    (1018682 return _void[55])
  }
  function =[1023058](ref arg lhs[1023060]:_ref(channel(true,dynamic,true))[1021745], const  ref arg rhs[1023062]:channel(true,dynamic,true)[1021736]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1023261]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1023263]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023265 'move' call_tmp[1023263](1023268 call home[1022953] rhs[1023062]))
    const-val call_tmp[1023271]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023663]:BaseLocale[91201] "dead after last mention" "temp"
    (1023668 'move' _locale_tmp_[1023663](1023665 call _value[89981] call_tmp[1023263]))
    (1023273 'move' call_tmp[1023271](1023275 '_wide_get_locale' _locale_tmp_[1023663]))
    (1023277 'move' tmp[1023261] call_tmp[1023271])
    val rvfDerefTmp[2032339]:channel(true,dynamic,true)[1021736] "temp"
    (2032343 'move' rvfDerefTmp[2032339](2032341 'deref' rhs[1023062]))
    val isdirect[2037120]:bool[10] "temp"
    (2037125 'move' isdirect[2037120](2037122 call chpl_doDirectExecuteOn[187423] tmp[1023261]))
    if isdirect[2037120]
    {
      (2037129 call on_fn[1023284] rvfDerefTmp[2032339])
    }
    {
      val _args_foron_fn[2037144]:_class_localson_fn[2037136] "temp"
      (2037148 'move' _args_foron_fn[2037144](2037146 'stack allocate class' _class_localson_fn[2037136]))
      (2037150 '.=' _args_foron_fn[2037144] _0_tmp[2037139] tmp[1023261])
      (2037154 '.=' _args_foron_fn[2037144] _1_rvfDerefTmp[2037141] rvfDerefTmp[2032339])
      val _args_vforon_fn[2037158]:c_void_ptr[149] "temp"
      (2037162 'move' _args_vforon_fn[2037158](2037160 'cast_to_void_star' _args_foron_fn[2037144]))
      val _args_sizeon_fn[2037164]:int(64)[13] "temp"
      (2037168 'move' _args_sizeon_fn[2037164](2037166 'sizeof_bundle' _class_localson_fn[2037136]))
      on(2037200 call wrapon_fn[2037170] tmp[1023261] _args_vforon_fn[2037158] _args_sizeon_fn[2037164] _args_foron_fn[2037144])
    }
    {
    }
    const-val tmp[1023305]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1023307]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1023309 'move' call_tmp[1023307](1023312 call home[1022953] lhs[1023060]))
    const-val call_tmp[1023315]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023682]:BaseLocale[91201] "dead after last mention" "temp"
    (1023687 'move' _locale_tmp_[1023682](1023684 call _value[89981] call_tmp[1023307]))
    (1023317 'move' call_tmp[1023315](1023319 '_wide_get_locale' _locale_tmp_[1023682]))
    (1023321 'move' tmp[1023305] call_tmp[1023315])
    val isdirect[2037205]:bool[10] "temp"
    (2037210 'move' isdirect[2037205](2037207 call chpl_doDirectExecuteOn[187423] tmp[1023305]))
    if isdirect[2037205]
    {
      (2037214 call on_fn[1023328] lhs[1023060])
    }
    {
      val _args_foron_fn[2037229]:_class_localson_fn[2037221] "temp"
      (2037233 'move' _args_foron_fn[2037229](2037231 'stack allocate class' _class_localson_fn[2037221]))
      (2037235 '.=' _args_foron_fn[2037229] _0_tmp[2037224] tmp[1023305])
      ref tmp[2037239]:channel(true,dynamic,true)[1021736] "temp"
      (2037243 'move' tmp[2037239](2037241 'set reference' lhs[1023060]))
      (2037245 '.=' _args_foron_fn[2037229] _1_lhs[2037226] tmp[2037239])
      val _args_vforon_fn[2037249]:c_void_ptr[149] "temp"
      (2037253 'move' _args_vforon_fn[2037249](2037251 'cast_to_void_star' _args_foron_fn[2037229]))
      val _args_sizeon_fn[2037255]:int(64)[13] "temp"
      (2037259 'move' _args_sizeon_fn[2037255](2037257 'sizeof_bundle' _class_localson_fn[2037221]))
      on(2037291 call wrapon_fn[2037261] tmp[1023305] _args_vforon_fn[2037249] _args_sizeon_fn[2037255] _args_foron_fn[2037229])
    }
    {
    }
    ref call_tmp[1023349]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1023351 'move' call_tmp[1023349](1023354 call home[1022953] lhs[1023060]))
    ref call_tmp[1023357]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023359 'move' call_tmp[1023357](1023362 call home[1022953] rhs[1023062]))
    (1023366 call =[90631] call_tmp[1023349] call_tmp[1023357])
    ref call_tmp[1023370]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1023372 'move' call_tmp[1023370](1023375 call _channel_internal[1022987] lhs[1023060]))
    ref call_tmp[1023378]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023380 'move' call_tmp[1023378](1023383 call _channel_internal[1022987] rhs[1023062]))
    const-val coerce_tmp[1023705]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023709 'move' coerce_tmp[1023705](1023707 'deref' call_tmp[1023378]))
    (1023387 call =[861391] call_tmp[1023370] coerce_tmp[1023705])
    (1023390 return _void[55])
  }
  function =[1061771](ref arg lhs[1061773]:_ref(channel(true,dynamic,false))[1060867], const  ref arg rhs[1061775]:channel(true,dynamic,false)[1060858]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1061974]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1061976]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1061978 'move' call_tmp[1061976](1061981 call home[1061666] rhs[1061775]))
    const-val call_tmp[1061984]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062185]:BaseLocale[91201] "dead after last mention" "temp"
    (1062190 'move' _locale_tmp_[1062185](1062187 call _value[89981] call_tmp[1061976]))
    (1061986 'move' call_tmp[1061984](1061988 '_wide_get_locale' _locale_tmp_[1062185]))
    (1061990 'move' tmp[1061974] call_tmp[1061984])
    val rvfDerefTmp[2032447]:channel(true,dynamic,false)[1060858] "temp"
    (2032451 'move' rvfDerefTmp[2032447](2032449 'deref' rhs[1061775]))
    val isdirect[2037833]:bool[10] "temp"
    (2037838 'move' isdirect[2037833](2037835 call chpl_doDirectExecuteOn[187423] tmp[1061974]))
    if isdirect[2037833]
    {
      (2037842 call on_fn[1061997] rvfDerefTmp[2032447])
    }
    {
      val _args_foron_fn[2037857]:_class_localson_fn[2037849] "temp"
      (2037861 'move' _args_foron_fn[2037857](2037859 'stack allocate class' _class_localson_fn[2037849]))
      (2037863 '.=' _args_foron_fn[2037857] _0_tmp[2037852] tmp[1061974])
      (2037867 '.=' _args_foron_fn[2037857] _1_rvfDerefTmp[2037854] rvfDerefTmp[2032447])
      val _args_vforon_fn[2037871]:c_void_ptr[149] "temp"
      (2037875 'move' _args_vforon_fn[2037871](2037873 'cast_to_void_star' _args_foron_fn[2037857]))
      val _args_sizeon_fn[2037877]:int(64)[13] "temp"
      (2037881 'move' _args_sizeon_fn[2037877](2037879 'sizeof_bundle' _class_localson_fn[2037849]))
      on(2037913 call wrapon_fn[2037883] tmp[1061974] _args_vforon_fn[2037871] _args_sizeon_fn[2037877] _args_foron_fn[2037857])
    }
    {
    }
    const-val tmp[1062018]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062020]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1062022 'move' call_tmp[1062020](1062025 call home[1061666] lhs[1061773]))
    const-val call_tmp[1062028]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062204]:BaseLocale[91201] "dead after last mention" "temp"
    (1062209 'move' _locale_tmp_[1062204](1062206 call _value[89981] call_tmp[1062020]))
    (1062030 'move' call_tmp[1062028](1062032 '_wide_get_locale' _locale_tmp_[1062204]))
    (1062034 'move' tmp[1062018] call_tmp[1062028])
    val isdirect[2037918]:bool[10] "temp"
    (2037923 'move' isdirect[2037918](2037920 call chpl_doDirectExecuteOn[187423] tmp[1062018]))
    if isdirect[2037918]
    {
      (2037927 call on_fn[1062041] lhs[1061773])
    }
    {
      val _args_foron_fn[2037942]:_class_localson_fn[2037934] "temp"
      (2037946 'move' _args_foron_fn[2037942](2037944 'stack allocate class' _class_localson_fn[2037934]))
      (2037948 '.=' _args_foron_fn[2037942] _0_tmp[2037937] tmp[1062018])
      ref tmp[2037952]:channel(true,dynamic,false)[1060858] "temp"
      (2037956 'move' tmp[2037952](2037954 'set reference' lhs[1061773]))
      (2037958 '.=' _args_foron_fn[2037942] _1_lhs[2037939] tmp[2037952])
      val _args_vforon_fn[2037962]:c_void_ptr[149] "temp"
      (2037966 'move' _args_vforon_fn[2037962](2037964 'cast_to_void_star' _args_foron_fn[2037942]))
      val _args_sizeon_fn[2037968]:int(64)[13] "temp"
      (2037972 'move' _args_sizeon_fn[2037968](2037970 'sizeof_bundle' _class_localson_fn[2037934]))
      on(2038004 call wrapon_fn[2037974] tmp[1062018] _args_vforon_fn[2037962] _args_sizeon_fn[2037968] _args_foron_fn[2037942])
    }
    {
    }
    ref call_tmp[1062062]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1062064 'move' call_tmp[1062062](1062067 call home[1061666] lhs[1061773]))
    ref call_tmp[1062070]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062072 'move' call_tmp[1062070](1062075 call home[1061666] rhs[1061775]))
    (1062079 call =[90631] call_tmp[1062062] call_tmp[1062070])
    ref call_tmp[1062083]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1062085 'move' call_tmp[1062083](1062088 call _channel_internal[1061700] lhs[1061773]))
    ref call_tmp[1062091]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062093 'move' call_tmp[1062091](1062096 call _channel_internal[1061700] rhs[1061775]))
    const-val coerce_tmp[1062227]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062231 'move' coerce_tmp[1062227](1062229 'deref' call_tmp[1062091]))
    (1062100 call =[861391] call_tmp[1062083] coerce_tmp[1062227])
    (1062103 return _void[55])
  }
  function =[1081503](ref arg lhs[1081505]:_ref(channel(false,dynamic,false))[1080602], const  ref arg rhs[1081507]:channel(false,dynamic,false)[1080593]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1081706]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081708]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081710 'move' call_tmp[1081708](1081713 call home[1081398] rhs[1081507]))
    const-val call_tmp[1081716]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081917]:BaseLocale[91201] "dead after last mention" "temp"
    (1081922 'move' _locale_tmp_[1081917](1081919 call _value[89981] call_tmp[1081708]))
    (1081718 'move' call_tmp[1081716](1081720 '_wide_get_locale' _locale_tmp_[1081917]))
    (1081722 'move' tmp[1081706] call_tmp[1081716])
    val rvfDerefTmp[2032625]:channel(false,dynamic,false)[1080593] "temp"
    (2032629 'move' rvfDerefTmp[2032625](2032627 'deref' rhs[1081507]))
    val isdirect[2039054]:bool[10] "temp"
    (2039059 'move' isdirect[2039054](2039056 call chpl_doDirectExecuteOn[187423] tmp[1081706]))
    if isdirect[2039054]
    {
      (2039063 call on_fn[1081729] rvfDerefTmp[2032625])
    }
    {
      val _args_foron_fn[2039078]:_class_localson_fn[2039070] "temp"
      (2039082 'move' _args_foron_fn[2039078](2039080 'stack allocate class' _class_localson_fn[2039070]))
      (2039084 '.=' _args_foron_fn[2039078] _0_tmp[2039073] tmp[1081706])
      (2039088 '.=' _args_foron_fn[2039078] _1_rvfDerefTmp[2039075] rvfDerefTmp[2032625])
      val _args_vforon_fn[2039092]:c_void_ptr[149] "temp"
      (2039096 'move' _args_vforon_fn[2039092](2039094 'cast_to_void_star' _args_foron_fn[2039078]))
      val _args_sizeon_fn[2039098]:int(64)[13] "temp"
      (2039102 'move' _args_sizeon_fn[2039098](2039100 'sizeof_bundle' _class_localson_fn[2039070]))
      on(2039134 call wrapon_fn[2039104] tmp[1081706] _args_vforon_fn[2039092] _args_sizeon_fn[2039098] _args_foron_fn[2039078])
    }
    {
    }
    const-val tmp[1081750]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081752]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1081754 'move' call_tmp[1081752](1081757 call home[1081398] lhs[1081505]))
    const-val call_tmp[1081760]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081936]:BaseLocale[91201] "dead after last mention" "temp"
    (1081941 'move' _locale_tmp_[1081936](1081938 call _value[89981] call_tmp[1081752]))
    (1081762 'move' call_tmp[1081760](1081764 '_wide_get_locale' _locale_tmp_[1081936]))
    (1081766 'move' tmp[1081750] call_tmp[1081760])
    val isdirect[2039139]:bool[10] "temp"
    (2039144 'move' isdirect[2039139](2039141 call chpl_doDirectExecuteOn[187423] tmp[1081750]))
    if isdirect[2039139]
    {
      (2039148 call on_fn[1081773] lhs[1081505])
    }
    {
      val _args_foron_fn[2039163]:_class_localson_fn[2039155] "temp"
      (2039167 'move' _args_foron_fn[2039163](2039165 'stack allocate class' _class_localson_fn[2039155]))
      (2039169 '.=' _args_foron_fn[2039163] _0_tmp[2039158] tmp[1081750])
      ref tmp[2039173]:channel(false,dynamic,false)[1080593] "temp"
      (2039177 'move' tmp[2039173](2039175 'set reference' lhs[1081505]))
      (2039179 '.=' _args_foron_fn[2039163] _1_lhs[2039160] tmp[2039173])
      val _args_vforon_fn[2039183]:c_void_ptr[149] "temp"
      (2039187 'move' _args_vforon_fn[2039183](2039185 'cast_to_void_star' _args_foron_fn[2039163]))
      val _args_sizeon_fn[2039189]:int(64)[13] "temp"
      (2039193 'move' _args_sizeon_fn[2039189](2039191 'sizeof_bundle' _class_localson_fn[2039155]))
      on(2039225 call wrapon_fn[2039195] tmp[1081750] _args_vforon_fn[2039183] _args_sizeon_fn[2039189] _args_foron_fn[2039163])
    }
    {
    }
    ref call_tmp[1081794]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1081796 'move' call_tmp[1081794](1081799 call home[1081398] lhs[1081505]))
    ref call_tmp[1081802]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081804 'move' call_tmp[1081802](1081807 call home[1081398] rhs[1081507]))
    (1081811 call =[90631] call_tmp[1081794] call_tmp[1081802])
    ref call_tmp[1081815]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1081817 'move' call_tmp[1081815](1081820 call _channel_internal[1081432] lhs[1081505]))
    ref call_tmp[1081823]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081825 'move' call_tmp[1081823](1081828 call _channel_internal[1081432] rhs[1081507]))
    const-val coerce_tmp[1081959]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081963 'move' coerce_tmp[1081959](1081961 'deref' call_tmp[1081823]))
    (1081832 call =[861391] call_tmp[1081815] coerce_tmp[1081959])
    (1081835 return _void[55])
  }
  function channel(false,dynamic,true)[985538].init[1017782](ref arg this[1017788]:channel(false,dynamic,true)[985538]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1017842]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1787393]:locale[28] "temp"
    (1017847 call here[90435] ret_tmp[1787393])
    (1787396 'move' call_tmp[1017842] ret_tmp[1787393])
    val tmp[1017848]:locale[28] "dead after last mention" "temp"
    (1017850 'move' tmp[1017848] call_tmp[1017842])
    (1017854 '.=' this[1017788] home[985526] tmp[1017848])
    val tmp[1017859]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1017861 'move' tmp[1017859] QIO_CHANNEL_PTR_NULL[231380])
    (1017865 '.=' this[1017788] _channel_internal[985531] tmp[1017859])
    val tmp[1017870]:locale[28] "dead after last mention" "temp"
    (1017872 call init=[90167] tmp[1017870] nilLocale[89939])
    (1017875 '.=' this[1017788] _readWriteThisFromLocale[985535] tmp[1017870])
    (1017880 return _void[55])
  }
  function channel(true,dynamic,true)[1021736].init[1022818](ref arg this[1022824]:channel(true,dynamic,true)[1021736]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1022878]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1787399]:locale[28] "temp"
    (1022883 call here[90435] ret_tmp[1787399])
    (1787402 'move' call_tmp[1022878] ret_tmp[1787399])
    val tmp[1022884]:locale[28] "dead after last mention" "temp"
    (1022886 'move' tmp[1022884] call_tmp[1022878])
    (1022890 '.=' this[1022824] home[1021724] tmp[1022884])
    val tmp[1022895]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1022897 'move' tmp[1022895] QIO_CHANNEL_PTR_NULL[231380])
    (1022901 '.=' this[1022824] _channel_internal[1021729] tmp[1022895])
    val tmp[1022906]:locale[28] "dead after last mention" "temp"
    (1022908 call init=[90167] tmp[1022906] nilLocale[89939])
    (1022911 '.=' this[1022824] _readWriteThisFromLocale[1021733] tmp[1022906])
    (1022916 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1061531](ref arg this[1061537]:channel(true,dynamic,false)[1060858]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1061591]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1787405]:locale[28] "temp"
    (1061596 call here[90435] ret_tmp[1787405])
    (1787408 'move' call_tmp[1061591] ret_tmp[1787405])
    val tmp[1061597]:locale[28] "dead after last mention" "temp"
    (1061599 'move' tmp[1061597] call_tmp[1061591])
    (1061603 '.=' this[1061537] home[1060846] tmp[1061597])
    val tmp[1061608]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1061610 'move' tmp[1061608] QIO_CHANNEL_PTR_NULL[231380])
    (1061614 '.=' this[1061537] _channel_internal[1060851] tmp[1061608])
    val tmp[1061619]:locale[28] "dead after last mention" "temp"
    (1061621 call init=[90167] tmp[1061619] nilLocale[89939])
    (1061624 '.=' this[1061537] _readWriteThisFromLocale[1060855] tmp[1061619])
    (1061629 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].init[1081263](ref arg this[1081269]:channel(false,dynamic,false)[1080593]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1081323]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1787423]:locale[28] "temp"
    (1081328 call here[90435] ret_tmp[1787423])
    (1787426 'move' call_tmp[1081323] ret_tmp[1787423])
    val tmp[1081329]:locale[28] "dead after last mention" "temp"
    (1081331 'move' tmp[1081329] call_tmp[1081323])
    (1081335 '.=' this[1081269] home[1080581] tmp[1081329])
    val tmp[1081340]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1081342 'move' tmp[1081340] QIO_CHANNEL_PTR_NULL[231380])
    (1081346 '.=' this[1081269] _channel_internal[1080586] tmp[1081340])
    val tmp[1081351]:locale[28] "dead after last mention" "temp"
    (1081353 call init=[90167] tmp[1081351] nilLocale[89939])
    (1081356 '.=' this[1081269] _readWriteThisFromLocale[1080590] tmp[1081351])
    (1081361 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1068299](ref arg this[1068305]:channel(true,dynamic,false)[1060858], const  ref arg home[1068313]:locale[28], const in arg _channel_internal[1068315]:qio_channel_ptr_t[231377], const  ref arg _readWriteThisFromLocale[1068317]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068365]:locale[28] "dead after last mention" "temp"
    (1068367 call init=[90167] tmp[1068365] home[1068313])
    (1068371 '.=' this[1068305] home[1060846] tmp[1068365])
    val tmp[1068376]:qio_channel_ptr_t[231377] "dead after last mention" "temp"
    (1068378 'move' tmp[1068376] _channel_internal[1068315])
    (1068382 '.=' this[1068305] _channel_internal[1060851] tmp[1068376])
    val tmp[1068387]:locale[28] "dead after last mention" "temp"
    (1068389 call init=[90167] tmp[1068387] _readWriteThisFromLocale[1068317])
    (1068392 '.=' this[1068305] _readWriteThisFromLocale[1060855] tmp[1068387])
    (1068397 return _void[55])
  }
  function channel(false,dynamic,true)[985538].init[1017558](ref arg this[1017564]:channel(false,dynamic,true)[985538], const  ref arg f[1017572]:file[235492], ref arg error[1017574]:_ref(syserr)[948743], const in arg hints[1017578]:int(32)[95], const in arg start[1017584]:int(64)[13], const in arg end[1017590]:int(64)[13], const in arg local_style[1017592]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1017769]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017608 call init[1017782] this[1017564])
    const-val tmp[1017613]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1017615]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1017617 'move' call_tmp[1017615](1017620 call home[886860] f[1017572]))
    const-val call_tmp[1017623]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017925]:BaseLocale[91201] "dead after last mention" "temp"
    (1017930 'move' _locale_tmp_[1017925](1017927 call _value[89981] call_tmp[1017615]))
    (1017625 'move' call_tmp[1017623](1017627 '_wide_get_locale' _locale_tmp_[1017925]))
    (1017629 'move' tmp[1017613] call_tmp[1017623])
    val rvfDerefTmp[2032228]:iostyle[231756] "temp"
    (2032231 'move' rvfDerefTmp[2032228] local_style[1017592])
    val rvfDerefTmp[2032241]:file[235492] "temp"
    (2032245 'move' rvfDerefTmp[2032241](2032243 'deref' f[1017572]))
    val isdirect[2036250]:bool[10] "temp"
    (2036255 'move' isdirect[2036250](2036252 call chpl_doDirectExecuteOn[187423] tmp[1017613]))
    if isdirect[2036250]
    {
      (2036259 call on_fn[1017636] end[1017590] this[1017564] hints[1017578] rvfDerefTmp[2032228] start[1017584] rvfDerefTmp[2032241] _formal_tmp_error[1017769])
    }
    {
      val _args_foron_fn[2036292]:_class_localson_fn[2036272] "temp"
      (2036296 'move' _args_foron_fn[2036292](2036294 'stack allocate class' _class_localson_fn[2036272]))
      (2036298 '.=' _args_foron_fn[2036292] _0_tmp[2036275] tmp[1017613])
      (2036302 '.=' _args_foron_fn[2036292] _1_end[2036277] end[1017590])
      ref tmp[2036306]:channel(false,dynamic,true)[985538] "temp"
      (2036310 'move' tmp[2036306](2036308 'set reference' this[1017564]))
      (2036312 '.=' _args_foron_fn[2036292] _2_this[2036279] tmp[2036306])
      (2036316 '.=' _args_foron_fn[2036292] _3_hints[2036281] hints[1017578])
      (2036320 '.=' _args_foron_fn[2036292] _4_rvfDerefTmp[2036283] rvfDerefTmp[2032228])
      (2036324 '.=' _args_foron_fn[2036292] _5_start[2036285] start[1017584])
      (2036328 '.=' _args_foron_fn[2036292] _6_rvfDerefTmp[2036287] rvfDerefTmp[2032241])
      ref tmp[2036332]:syserr[223496] "temp"
      (2036336 'move' tmp[2036332](2036334 'set reference' _formal_tmp_error[1017769]))
      (2036338 '.=' _args_foron_fn[2036292] _7__formal_tmp_error[2036289] tmp[2036332])
      val _args_vforon_fn[2036342]:c_void_ptr[149] "temp"
      (2036346 'move' _args_vforon_fn[2036342](2036344 'cast_to_void_star' _args_foron_fn[2036292]))
      val _args_sizeon_fn[2036348]:int(64)[13] "temp"
      (2036352 'move' _args_sizeon_fn[2036348](2036350 'sizeof_bundle' _class_localson_fn[2036272]))
      on(2036432 call wrapon_fn[2036354] tmp[1017613] _args_vforon_fn[2036342] _args_sizeon_fn[2036348] _args_foron_fn[2036292])
    }
    {
    }
    label _endinit[1017779]
    (1799336 '=' error[1017574] _formal_tmp_error[1017769])
    (1017766 return _void[55])
  }
  function channel(true,dynamic,true)[1021736].init[1022594](ref arg this[1022600]:channel(true,dynamic,true)[1021736], const  ref arg f[1022608]:file[235492], ref arg error[1022610]:_ref(syserr)[948743], const in arg hints[1022614]:int(32)[95], const in arg start[1022620]:int(64)[13], const in arg end[1022626]:int(64)[13], const in arg local_style[1022628]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1022805]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022644 call init[1022818] this[1022600])
    const-val tmp[1022649]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1022651]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1022653 'move' call_tmp[1022651](1022656 call home[886860] f[1022608]))
    const-val call_tmp[1022659]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022943]:BaseLocale[91201] "dead after last mention" "temp"
    (1022948 'move' _locale_tmp_[1022943](1022945 call _value[89981] call_tmp[1022651]))
    (1022661 'move' call_tmp[1022659](1022663 '_wide_get_locale' _locale_tmp_[1022943]))
    (1022665 'move' tmp[1022649] call_tmp[1022659])
    val rvfDerefTmp[2032305]:file[235492] "temp"
    (2032309 'move' rvfDerefTmp[2032305](2032307 'deref' f[1022608]))
    val rvfDerefTmp[2032326]:iostyle[231756] "temp"
    (2032329 'move' rvfDerefTmp[2032326] local_style[1022628])
    val isdirect[2036933]:bool[10] "temp"
    (2036938 'move' isdirect[2036933](2036935 call chpl_doDirectExecuteOn[187423] tmp[1022649]))
    if isdirect[2036933]
    {
      (2036942 call on_fn[1022672] start[1022620] rvfDerefTmp[2032305] _formal_tmp_error[1022805] end[1022626] hints[1022614] rvfDerefTmp[2032326] this[1022600])
    }
    {
      val _args_foron_fn[2036975]:_class_localson_fn[2036955] "temp"
      (2036979 'move' _args_foron_fn[2036975](2036977 'stack allocate class' _class_localson_fn[2036955]))
      (2036981 '.=' _args_foron_fn[2036975] _0_tmp[2036958] tmp[1022649])
      (2036985 '.=' _args_foron_fn[2036975] _1_start[2036960] start[1022620])
      (2036989 '.=' _args_foron_fn[2036975] _2_rvfDerefTmp[2036962] rvfDerefTmp[2032305])
      ref tmp[2036993]:syserr[223496] "temp"
      (2036997 'move' tmp[2036993](2036995 'set reference' _formal_tmp_error[1022805]))
      (2036999 '.=' _args_foron_fn[2036975] _3__formal_tmp_error[2036964] tmp[2036993])
      (2037003 '.=' _args_foron_fn[2036975] _4_end[2036966] end[1022626])
      (2037007 '.=' _args_foron_fn[2036975] _5_hints[2036968] hints[1022614])
      (2037011 '.=' _args_foron_fn[2036975] _6_rvfDerefTmp[2036970] rvfDerefTmp[2032326])
      ref tmp[2037015]:channel(true,dynamic,true)[1021736] "temp"
      (2037019 'move' tmp[2037015](2037017 'set reference' this[1022600]))
      (2037021 '.=' _args_foron_fn[2036975] _7_this[2036972] tmp[2037015])
      val _args_vforon_fn[2037025]:c_void_ptr[149] "temp"
      (2037029 'move' _args_vforon_fn[2037025](2037027 'cast_to_void_star' _args_foron_fn[2036975]))
      val _args_sizeon_fn[2037031]:int(64)[13] "temp"
      (2037035 'move' _args_sizeon_fn[2037031](2037033 'sizeof_bundle' _class_localson_fn[2036955]))
      on(2037115 call wrapon_fn[2037037] tmp[1022649] _args_vforon_fn[2037025] _args_sizeon_fn[2037031] _args_foron_fn[2036975])
    }
    {
    }
    label _endinit[1022815]
    (1799359 '=' error[1022610] _formal_tmp_error[1022805])
    (1022802 return _void[55])
  }
  function channel(true,dynamic,false)[1060858].init[1061307](ref arg this[1061313]:channel(true,dynamic,false)[1060858], const  ref arg f[1061321]:file[235492], ref arg error[1061323]:_ref(syserr)[948743], const in arg hints[1061327]:int(32)[95], const in arg start[1061333]:int(64)[13], const in arg end[1061339]:int(64)[13], const in arg local_style[1061341]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061518]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061357 call init[1061531] this[1061313])
    const-val tmp[1061362]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1061364]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1061366 'move' call_tmp[1061364](1061369 call home[886860] f[1061321]))
    const-val call_tmp[1061372]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061656]:BaseLocale[91201] "dead after last mention" "temp"
    (1061661 'move' _locale_tmp_[1061656](1061658 call _value[89981] call_tmp[1061364]))
    (1061374 'move' call_tmp[1061372](1061376 '_wide_get_locale' _locale_tmp_[1061656]))
    (1061378 'move' tmp[1061362] call_tmp[1061372])
    val rvfDerefTmp[2032413]:file[235492] "temp"
    (2032417 'move' rvfDerefTmp[2032413](2032415 'deref' f[1061321]))
    val rvfDerefTmp[2032434]:iostyle[231756] "temp"
    (2032437 'move' rvfDerefTmp[2032434] local_style[1061341])
    val isdirect[2037646]:bool[10] "temp"
    (2037651 'move' isdirect[2037646](2037648 call chpl_doDirectExecuteOn[187423] tmp[1061362]))
    if isdirect[2037646]
    {
      (2037655 call on_fn[1061385] start[1061333] rvfDerefTmp[2032413] _formal_tmp_error[1061518] this[1061313] hints[1061327] rvfDerefTmp[2032434] end[1061339])
    }
    {
      val _args_foron_fn[2037688]:_class_localson_fn[2037668] "temp"
      (2037692 'move' _args_foron_fn[2037688](2037690 'stack allocate class' _class_localson_fn[2037668]))
      (2037694 '.=' _args_foron_fn[2037688] _0_tmp[2037671] tmp[1061362])
      (2037698 '.=' _args_foron_fn[2037688] _1_start[2037673] start[1061333])
      (2037702 '.=' _args_foron_fn[2037688] _2_rvfDerefTmp[2037675] rvfDerefTmp[2032413])
      ref tmp[2037706]:syserr[223496] "temp"
      (2037710 'move' tmp[2037706](2037708 'set reference' _formal_tmp_error[1061518]))
      (2037712 '.=' _args_foron_fn[2037688] _3__formal_tmp_error[2037677] tmp[2037706])
      ref tmp[2037716]:channel(true,dynamic,false)[1060858] "temp"
      (2037720 'move' tmp[2037716](2037718 'set reference' this[1061313]))
      (2037722 '.=' _args_foron_fn[2037688] _4_this[2037679] tmp[2037716])
      (2037726 '.=' _args_foron_fn[2037688] _5_hints[2037681] hints[1061327])
      (2037730 '.=' _args_foron_fn[2037688] _6_rvfDerefTmp[2037683] rvfDerefTmp[2032434])
      (2037734 '.=' _args_foron_fn[2037688] _7_end[2037685] end[1061339])
      val _args_vforon_fn[2037738]:c_void_ptr[149] "temp"
      (2037742 'move' _args_vforon_fn[2037738](2037740 'cast_to_void_star' _args_foron_fn[2037688]))
      val _args_sizeon_fn[2037744]:int(64)[13] "temp"
      (2037748 'move' _args_sizeon_fn[2037744](2037746 'sizeof_bundle' _class_localson_fn[2037668]))
      on(2037828 call wrapon_fn[2037750] tmp[1061362] _args_vforon_fn[2037738] _args_sizeon_fn[2037744] _args_foron_fn[2037688])
    }
    {
    }
    label _endinit[1061528]
    (1800584 '=' error[1061323] _formal_tmp_error[1061518])
    (1061515 return _void[55])
  }
  function channel(false,dynamic,false)[1080593].init[1081039](ref arg this[1081045]:channel(false,dynamic,false)[1080593], const  ref arg f[1081053]:file[235492], ref arg error[1081055]:_ref(syserr)[948743], const in arg hints[1081059]:int(32)[95], const in arg start[1081065]:int(64)[13], const in arg end[1081071]:int(64)[13], const in arg local_style[1081073]:iostyle[231756]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081250]:syserr[223496] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081089 call init[1081263] this[1081045])
    const-val tmp[1081094]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081096]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081098 'move' call_tmp[1081096](1081101 call home[886860] f[1081053]))
    const-val call_tmp[1081104]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081388]:BaseLocale[91201] "dead after last mention" "temp"
    (1081393 'move' _locale_tmp_[1081388](1081390 call _value[89981] call_tmp[1081096]))
    (1081106 'move' call_tmp[1081104](1081108 '_wide_get_locale' _locale_tmp_[1081388]))
    (1081110 'move' tmp[1081094] call_tmp[1081104])
    val rvfDerefTmp[2032591]:iostyle[231756] "temp"
    (2032594 'move' rvfDerefTmp[2032591] local_style[1081073])
    val rvfDerefTmp[2032604]:file[235492] "temp"
    (2032608 'move' rvfDerefTmp[2032604](2032606 'deref' f[1081053]))
    val isdirect[2038867]:bool[10] "temp"
    (2038872 'move' isdirect[2038867](2038869 call chpl_doDirectExecuteOn[187423] tmp[1081094]))
    if isdirect[2038867]
    {
      (2038876 call on_fn[1081117] _formal_tmp_error[1081250] this[1081045] hints[1081059] rvfDerefTmp[2032591] end[1081071] start[1081065] rvfDerefTmp[2032604])
    }
    {
      val _args_foron_fn[2038909]:_class_localson_fn[2038889] "temp"
      (2038913 'move' _args_foron_fn[2038909](2038911 'stack allocate class' _class_localson_fn[2038889]))
      (2038915 '.=' _args_foron_fn[2038909] _0_tmp[2038892] tmp[1081094])
      ref tmp[2038919]:syserr[223496] "temp"
      (2038923 'move' tmp[2038919](2038921 'set reference' _formal_tmp_error[1081250]))
      (2038925 '.=' _args_foron_fn[2038909] _1__formal_tmp_error[2038894] tmp[2038919])
      ref tmp[2038929]:channel(false,dynamic,false)[1080593] "temp"
      (2038933 'move' tmp[2038929](2038931 'set reference' this[1081045]))
      (2038935 '.=' _args_foron_fn[2038909] _2_this[2038896] tmp[2038929])
      (2038939 '.=' _args_foron_fn[2038909] _3_hints[2038898] hints[1081059])
      (2038943 '.=' _args_foron_fn[2038909] _4_rvfDerefTmp[2038900] rvfDerefTmp[2032591])
      (2038947 '.=' _args_foron_fn[2038909] _5_end[2038902] end[1081071])
      (2038951 '.=' _args_foron_fn[2038909] _6_start[2038904] start[1081065])
      (2038955 '.=' _args_foron_fn[2038909] _7_rvfDerefTmp[2038906] rvfDerefTmp[2032604])
      val _args_vforon_fn[2038959]:c_void_ptr[149] "temp"
      (2038963 'move' _args_vforon_fn[2038959](2038961 'cast_to_void_star' _args_foron_fn[2038909]))
      val _args_sizeon_fn[2038965]:int(64)[13] "temp"
      (2038969 'move' _args_sizeon_fn[2038965](2038967 'sizeof_bundle' _class_localson_fn[2038889]))
      on(2039049 call wrapon_fn[2038971] tmp[1081094] _args_vforon_fn[2038959] _args_sizeon_fn[2038965] _args_foron_fn[2038909])
    }
    {
    }
    label _endinit[1081260]
    (1800745 '=' error[1081055] _formal_tmp_error[1081250])
    (1081247 return _void[55])
  }
  function _ref(channel(false,dynamic,true))[985547].deinit[1503980](ref arg this[1503986]:_ref(channel(false,dynamic,true))[985547]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1503992]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1503994]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1503996 'move' call_tmp[1503994](1503999 call home[1017935] this[1503986]))
    const-val call_tmp[1504002]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1504053]:BaseLocale[91201] "dead after last mention" "temp"
    (1504058 'move' _locale_tmp_[1504053](1504055 call _value[89981] call_tmp[1503994]))
    (1504004 'move' call_tmp[1504002](1504006 '_wide_get_locale' _locale_tmp_[1504053]))
    (1504008 'move' tmp[1503992] call_tmp[1504002])
    val isdirect[2044826]:bool[10] "temp"
    (2044831 'move' isdirect[2044826](2044828 call chpl_doDirectExecuteOn[187423] tmp[1503992]))
    if isdirect[2044826]
    {
      (2044835 call on_fn[1504015] this[1503986])
    }
    {
      val _args_foron_fn[2044850]:_class_localson_fn[2044842] "temp"
      (2044854 'move' _args_foron_fn[2044850](2044852 'stack allocate class' _class_localson_fn[2044842]))
      (2044856 '.=' _args_foron_fn[2044850] _0_tmp[2044845] tmp[1503992])
      ref tmp[2044860]:channel(false,dynamic,true)[985538] "temp"
      (2044864 'move' tmp[2044860](2044862 'set reference' this[1503986]))
      (2044866 '.=' _args_foron_fn[2044850] _1_this[2044847] tmp[2044860])
      val _args_vforon_fn[2044870]:c_void_ptr[149] "temp"
      (2044874 'move' _args_vforon_fn[2044870](2044872 'cast_to_void_star' _args_foron_fn[2044850]))
      val _args_sizeon_fn[2044876]:int(64)[13] "temp"
      (2044880 'move' _args_sizeon_fn[2044876](2044878 'sizeof_bundle' _class_localson_fn[2044842]))
      on(2044912 call wrapon_fn[2044882] tmp[1503992] _args_vforon_fn[2044870] _args_sizeon_fn[2044876] _args_foron_fn[2044850])
    }
    {
    }
    label _enddeinit[1772993]
    ref _field_destructor_tmp_[1772991]:_ref(locale)[948755] "temp"
    (1772998 'move' _field_destructor_tmp_[1772991](1772995 '.' this[1503986] _readWriteThisFromLocale[985535]))
    (1773000 call deinit[90185] _field_destructor_tmp_[1772991])
    ref _field_destructor_tmp_[1773003]:_ref(locale)[948755] "temp"
    (1773008 'move' _field_destructor_tmp_[1773003](1773005 '.' this[1503986] home[985526]))
    (1773010 call deinit[90185] _field_destructor_tmp_[1773003])
    (1504049 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021745].deinit[1566986](ref arg this[1566992]:_ref(channel(true,dynamic,true))[1021745]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1566998]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1567000]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1567002 'move' call_tmp[1567000](1567005 call home[1022953] this[1566992]))
    const-val call_tmp[1567008]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1567059]:BaseLocale[91201] "dead after last mention" "temp"
    (1567064 'move' _locale_tmp_[1567059](1567061 call _value[89981] call_tmp[1567000]))
    (1567010 'move' call_tmp[1567008](1567012 '_wide_get_locale' _locale_tmp_[1567059]))
    (1567014 'move' tmp[1566998] call_tmp[1567008])
    val isdirect[2046617]:bool[10] "temp"
    (2046622 'move' isdirect[2046617](2046619 call chpl_doDirectExecuteOn[187423] tmp[1566998]))
    if isdirect[2046617]
    {
      (2046626 call on_fn[1567021] this[1566992])
    }
    {
      val _args_foron_fn[2046641]:_class_localson_fn[2046633] "temp"
      (2046645 'move' _args_foron_fn[2046641](2046643 'stack allocate class' _class_localson_fn[2046633]))
      (2046647 '.=' _args_foron_fn[2046641] _0_tmp[2046636] tmp[1566998])
      ref tmp[2046651]:channel(true,dynamic,true)[1021736] "temp"
      (2046655 'move' tmp[2046651](2046653 'set reference' this[1566992]))
      (2046657 '.=' _args_foron_fn[2046641] _1_this[2046638] tmp[2046651])
      val _args_vforon_fn[2046661]:c_void_ptr[149] "temp"
      (2046665 'move' _args_vforon_fn[2046661](2046663 'cast_to_void_star' _args_foron_fn[2046641]))
      val _args_sizeon_fn[2046667]:int(64)[13] "temp"
      (2046671 'move' _args_sizeon_fn[2046667](2046669 'sizeof_bundle' _class_localson_fn[2046633]))
      on(2046703 call wrapon_fn[2046673] tmp[1566998] _args_vforon_fn[2046661] _args_sizeon_fn[2046667] _args_foron_fn[2046641])
    }
    {
    }
    label _enddeinit[1773015]
    ref _field_destructor_tmp_[1773013]:_ref(locale)[948755] "temp"
    (1773020 'move' _field_destructor_tmp_[1773013](1773017 '.' this[1566992] _readWriteThisFromLocale[1021733]))
    (1773022 call deinit[90185] _field_destructor_tmp_[1773013])
    ref _field_destructor_tmp_[1773025]:_ref(locale)[948755] "temp"
    (1773030 'move' _field_destructor_tmp_[1773025](1773027 '.' this[1566992] home[1021724]))
    (1773032 call deinit[90185] _field_destructor_tmp_[1773025])
    (1567055 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].deinit[1569162](ref arg this[1569168]:_ref(channel(true,dynamic,false))[1060867]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1569174]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1569176]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1569178 'move' call_tmp[1569176](1569181 call home[1061666] this[1569168]))
    const-val call_tmp[1569184]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1569235]:BaseLocale[91201] "dead after last mention" "temp"
    (1569240 'move' _locale_tmp_[1569235](1569237 call _value[89981] call_tmp[1569176]))
    (1569186 'move' call_tmp[1569184](1569188 '_wide_get_locale' _locale_tmp_[1569235]))
    (1569190 'move' tmp[1569174] call_tmp[1569184])
    val isdirect[2046793]:bool[10] "temp"
    (2046798 'move' isdirect[2046793](2046795 call chpl_doDirectExecuteOn[187423] tmp[1569174]))
    if isdirect[2046793]
    {
      (2046802 call on_fn[1569197] this[1569168])
    }
    {
      val _args_foron_fn[2046817]:_class_localson_fn[2046809] "temp"
      (2046821 'move' _args_foron_fn[2046817](2046819 'stack allocate class' _class_localson_fn[2046809]))
      (2046823 '.=' _args_foron_fn[2046817] _0_tmp[2046812] tmp[1569174])
      ref tmp[2046827]:channel(true,dynamic,false)[1060858] "temp"
      (2046831 'move' tmp[2046827](2046829 'set reference' this[1569168]))
      (2046833 '.=' _args_foron_fn[2046817] _1_this[2046814] tmp[2046827])
      val _args_vforon_fn[2046837]:c_void_ptr[149] "temp"
      (2046841 'move' _args_vforon_fn[2046837](2046839 'cast_to_void_star' _args_foron_fn[2046817]))
      val _args_sizeon_fn[2046843]:int(64)[13] "temp"
      (2046847 'move' _args_sizeon_fn[2046843](2046845 'sizeof_bundle' _class_localson_fn[2046809]))
      on(2046879 call wrapon_fn[2046849] tmp[1569174] _args_vforon_fn[2046837] _args_sizeon_fn[2046843] _args_foron_fn[2046817])
    }
    {
    }
    label _enddeinit[1773049]
    ref _field_destructor_tmp_[1773047]:_ref(locale)[948755] "temp"
    (1773054 'move' _field_destructor_tmp_[1773047](1773051 '.' this[1569168] _readWriteThisFromLocale[1060855]))
    (1773056 call deinit[90185] _field_destructor_tmp_[1773047])
    ref _field_destructor_tmp_[1773059]:_ref(locale)[948755] "temp"
    (1773064 'move' _field_destructor_tmp_[1773059](1773061 '.' this[1569168] home[1060846]))
    (1773066 call deinit[90185] _field_destructor_tmp_[1773059])
    (1569231 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080602].deinit[1573416](ref arg this[1573422]:_ref(channel(false,dynamic,false))[1080602]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1573428]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1573430]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1573432 'move' call_tmp[1573430](1573435 call home[1081398] this[1573422]))
    const-val call_tmp[1573438]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1573489]:BaseLocale[91201] "dead after last mention" "temp"
    (1573494 'move' _locale_tmp_[1573489](1573491 call _value[89981] call_tmp[1573430]))
    (1573440 'move' call_tmp[1573438](1573442 '_wide_get_locale' _locale_tmp_[1573489]))
    (1573444 'move' tmp[1573428] call_tmp[1573438])
    val isdirect[2047054]:bool[10] "temp"
    (2047059 'move' isdirect[2047054](2047056 call chpl_doDirectExecuteOn[187423] tmp[1573428]))
    if isdirect[2047054]
    {
      (2047063 call on_fn[1573451] this[1573422])
    }
    {
      val _args_foron_fn[2047078]:_class_localson_fn[2047070] "temp"
      (2047082 'move' _args_foron_fn[2047078](2047080 'stack allocate class' _class_localson_fn[2047070]))
      (2047084 '.=' _args_foron_fn[2047078] _0_tmp[2047073] tmp[1573428])
      ref tmp[2047088]:channel(false,dynamic,false)[1080593] "temp"
      (2047092 'move' tmp[2047088](2047090 'set reference' this[1573422]))
      (2047094 '.=' _args_foron_fn[2047078] _1_this[2047075] tmp[2047088])
      val _args_vforon_fn[2047098]:c_void_ptr[149] "temp"
      (2047102 'move' _args_vforon_fn[2047098](2047100 'cast_to_void_star' _args_foron_fn[2047078]))
      val _args_sizeon_fn[2047104]:int(64)[13] "temp"
      (2047108 'move' _args_sizeon_fn[2047104](2047106 'sizeof_bundle' _class_localson_fn[2047070]))
      on(2047140 call wrapon_fn[2047110] tmp[1573428] _args_vforon_fn[2047098] _args_sizeon_fn[2047104] _args_foron_fn[2047078])
    }
    {
    }
    label _enddeinit[1773071]
    ref _field_destructor_tmp_[1773069]:_ref(locale)[948755] "temp"
    (1773076 'move' _field_destructor_tmp_[1773069](1773073 '.' this[1573422] _readWriteThisFromLocale[1080590]))
    (1773078 call deinit[90185] _field_destructor_tmp_[1773069])
    ref _field_destructor_tmp_[1773081]:_ref(locale)[948755] "temp"
    (1773086 'move' _field_destructor_tmp_[1773081](1773083 '.' this[1573422] home[1080581]))
    (1773088 call deinit[90185] _field_destructor_tmp_[1773081])
    (1573485 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._ch_ioerror[1062776](const  ref arg this[1062782]:_ref(channel(true,dynamic,false))[1060867], const in arg error[1062784]:syserr[223496], const  ref arg msg[1062786]:string[26], ref arg error_out[1768355]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1062792]:string[26] "dead at end of block" "insert auto destroy"
    (1062794 'move' path[1062792] "unknown")
    val call_tmp[1062806]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1062813]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062815 'move' offset[1062813] -1)
    const-val tmp[1062820]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062822]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1062824 'move' call_tmp[1062822](1062827 call home[1061666] this[1062782]))
    const-val call_tmp[1062830]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062982]:BaseLocale[91201] "dead after last mention" "temp"
    (1062987 'move' _locale_tmp_[1062982](1062984 call _value[89981] call_tmp[1062822]))
    (1062832 'move' call_tmp[1062830](1062834 '_wide_get_locale' _locale_tmp_[1062982]))
    (1062836 'move' tmp[1062820] call_tmp[1062830])
    val error[1768360]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768362 'move' error[1768360] nil[44])
    val isdirect[2038115]:bool[10] "temp"
    (2038120 'move' isdirect[2038115](2038117 call chpl_doDirectExecuteOn[187423] tmp[1062820]))
    if isdirect[2038115]
    {
      (2038124 call on_fn[1062843] this[1062782] path[1062792] offset[1062813] error[1768360])
    }
    {
      val _args_foron_fn[2038148]:_class_localson_fn[2038134] "temp"
      (2038152 'move' _args_foron_fn[2038148](2038150 'stack allocate class' _class_localson_fn[2038134]))
      (2038154 '.=' _args_foron_fn[2038148] _0_tmp[2038137] tmp[1062820])
      ref tmp[2038158]:channel(true,dynamic,false)[1060858] "temp"
      (2038162 'move' tmp[2038158](2038160 'set reference' this[1062782]))
      (2038164 '.=' _args_foron_fn[2038148] _1_this[2038139] tmp[2038158])
      ref tmp[2038168]:string[26] "temp"
      (2038172 'move' tmp[2038168](2038170 'set reference' path[1062792]))
      (2038174 '.=' _args_foron_fn[2038148] _2_path[2038141] tmp[2038168])
      ref tmp[2038178]:int(64)[13] "temp"
      (2038182 'move' tmp[2038178](2038180 'set reference' offset[1062813]))
      (2038184 '.=' _args_foron_fn[2038148] _3_offset[2038143] tmp[2038178])
      ref tmp[2038188]:Error[167938] "temp"
      (2038192 'move' tmp[2038188](2038190 'set reference' error[1768360]))
      (2038194 '.=' _args_foron_fn[2038148] _4_error[2038145] tmp[2038188])
      val _args_vforon_fn[2038198]:c_void_ptr[149] "temp"
      (2038202 'move' _args_vforon_fn[2038198](2038200 'cast_to_void_star' _args_foron_fn[2038148]))
      val _args_sizeon_fn[2038204]:int(64)[13] "temp"
      (2038208 'move' _args_sizeon_fn[2038204](2038206 'sizeof_bundle' _class_localson_fn[2038134]))
      on(2038264 call wrapon_fn[2038210] tmp[1062820] _args_vforon_fn[2038198] _args_sizeon_fn[2038204] _args_foron_fn[2038148])
    }
    val errorExists[2055589]:bool[10] "temp"
    (2055594 'move' errorExists[2055589](2055591 '!=' error[1768360] nil[44]))
    if errorExists[2055589]
    {
      (1768366 '=' error_out[1768355] error[1768360])
      (1800587 call chpl__autoDestroy[1494420] path[1062792])
      gotoErrorHandlingReturn _end_ch_ioerror[1768357] _end_ch_ioerror[1768357]
    }
    {
    }
    {
      val error[1768374]:Error[167938] "error variable" "temp"
      (1768383 'move' error[1768374] nil[44])
      (1062966 call ioerror[266053] error[1062784] msg[1062786] path[1062792] offset[1062813] error[1768374])
      val errorExists[2055597]:bool[10] "temp"
      (2055602 'move' errorExists[2055597](2055599 '!=' error[1768374] nil[44]))
      if errorExists[2055597]
      {
        gotoErrorHandling handler[1768375] handler[1768375]
      }
      label handler[1768375]
      const-val shouldHandleError[1768394]:bool[10] "temp"
      val errorExists[2055605]:bool[10] "temp"
      (2055610 'move' errorExists[2055605](2055607 '!=' error[1768374] nil[44]))
      (1768398 'move' shouldHandleError[1768394] errorExists[2055605])
      if shouldHandleError[1768394]
      {
        (1768390 '=' error_out[1768355] error[1768374])
        (1800590 call chpl__autoDestroy[1494420] path[1062792])
        gotoErrorHandlingReturn _end_ch_ioerror[1768357] _end_ch_ioerror[1768357]
      }
    }
    (1800593 call chpl__autoDestroy[1494420] path[1062792])
    label _end_ch_ioerror[1768357]
    (1062975 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080602]._ch_ioerror[1082460](const  ref arg this[1082466]:_ref(channel(false,dynamic,false))[1080602], const in arg error[1082468]:syserr[223496], const  ref arg msg[1082470]:string[26], ref arg error_out[1769151]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082476]:string[26] "dead at end of block" "insert auto destroy"
    (1082478 'move' path[1082476] "unknown")
    val call_tmp[1082490]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1082497]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082499 'move' offset[1082497] -1)
    const-val tmp[1082504]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1082506]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1082508 'move' call_tmp[1082506](1082511 call home[1081398] this[1082466]))
    const-val call_tmp[1082514]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082666]:BaseLocale[91201] "dead after last mention" "temp"
    (1082671 'move' _locale_tmp_[1082666](1082668 call _value[89981] call_tmp[1082506]))
    (1082516 'move' call_tmp[1082514](1082518 '_wide_get_locale' _locale_tmp_[1082666]))
    (1082520 'move' tmp[1082504] call_tmp[1082514])
    val error[1769156]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769158 'move' error[1769156] nil[44])
    val rvfDerefTmp[2032653]:channel(false,dynamic,false)[1080593] "temp"
    (2032657 'move' rvfDerefTmp[2032653](2032655 'deref' this[1082466]))
    val isdirect[2039336]:bool[10] "temp"
    (2039341 'move' isdirect[2039336](2039338 call chpl_doDirectExecuteOn[187423] tmp[1082504]))
    if isdirect[2039336]
    {
      (2039345 call on_fn[1082527] rvfDerefTmp[2032653] path[1082476] offset[1082497] error[1769156])
    }
    {
      val _args_foron_fn[2039369]:_class_localson_fn[2039355] "temp"
      (2039373 'move' _args_foron_fn[2039369](2039371 'stack allocate class' _class_localson_fn[2039355]))
      (2039375 '.=' _args_foron_fn[2039369] _0_tmp[2039358] tmp[1082504])
      (2039379 '.=' _args_foron_fn[2039369] _1_rvfDerefTmp[2039360] rvfDerefTmp[2032653])
      ref tmp[2039383]:string[26] "temp"
      (2039387 'move' tmp[2039383](2039385 'set reference' path[1082476]))
      (2039389 '.=' _args_foron_fn[2039369] _2_path[2039362] tmp[2039383])
      ref tmp[2039393]:int(64)[13] "temp"
      (2039397 'move' tmp[2039393](2039395 'set reference' offset[1082497]))
      (2039399 '.=' _args_foron_fn[2039369] _3_offset[2039364] tmp[2039393])
      ref tmp[2039403]:Error[167938] "temp"
      (2039407 'move' tmp[2039403](2039405 'set reference' error[1769156]))
      (2039409 '.=' _args_foron_fn[2039369] _4_error[2039366] tmp[2039403])
      val _args_vforon_fn[2039413]:c_void_ptr[149] "temp"
      (2039417 'move' _args_vforon_fn[2039413](2039415 'cast_to_void_star' _args_foron_fn[2039369]))
      val _args_sizeon_fn[2039419]:int(64)[13] "temp"
      (2039423 'move' _args_sizeon_fn[2039419](2039421 'sizeof_bundle' _class_localson_fn[2039355]))
      on(2039479 call wrapon_fn[2039425] tmp[1082504] _args_vforon_fn[2039413] _args_sizeon_fn[2039419] _args_foron_fn[2039369])
    }
    val errorExists[2055949]:bool[10] "temp"
    (2055954 'move' errorExists[2055949](2055951 '!=' error[1769156] nil[44]))
    if errorExists[2055949]
    {
      (1769162 '=' error_out[1769151] error[1769156])
      (1800748 call chpl__autoDestroy[1494420] path[1082476])
      gotoErrorHandlingReturn _end_ch_ioerror[1769153] _end_ch_ioerror[1769153]
    }
    {
    }
    {
      val error[1769170]:Error[167938] "error variable" "temp"
      (1769179 'move' error[1769170] nil[44])
      (1082650 call ioerror[266053] error[1082468] msg[1082470] path[1082476] offset[1082497] error[1769170])
      val errorExists[2055957]:bool[10] "temp"
      (2055962 'move' errorExists[2055957](2055959 '!=' error[1769170] nil[44]))
      if errorExists[2055957]
      {
        gotoErrorHandling handler[1769171] handler[1769171]
      }
      label handler[1769171]
      const-val shouldHandleError[1769190]:bool[10] "temp"
      val errorExists[2055965]:bool[10] "temp"
      (2055970 'move' errorExists[2055965](2055967 '!=' error[1769170] nil[44]))
      (1769194 'move' shouldHandleError[1769190] errorExists[2055965])
      if shouldHandleError[1769190]
      {
        (1769186 '=' error_out[1769151] error[1769170])
        (1800751 call chpl__autoDestroy[1494420] path[1082476])
        gotoErrorHandlingReturn _end_ch_ioerror[1769153] _end_ch_ioerror[1769153]
      }
    }
    (1800754 call chpl__autoDestroy[1494420] path[1082476])
    label _end_ch_ioerror[1769153]
    (1082659 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].lock[1066339](const  ref arg this[1066345]:_ref(channel(true,dynamic,false))[1060867], ref arg error_out[1768547]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1066351]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1066353 'move' call_tmp[1066351](1066356 call ENOERR[223566]))
    const-val err[1066357]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1066506]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1066730 call =[224045] init_coerce_tmp[1066506] call_tmp[1066351])
    (1066359 'move' err[1066357] init_coerce_tmp[1066506])
    ref call_tmp[1066364]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1066366 'move' call_tmp[1066364](1066369 call _channel_internal[1061700] this[1066345]))
    const-val call_tmp[1066372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1066513]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1066517 'move' coerce_tmp[1066513](1066515 'deref' call_tmp[1066364]))
    (1066374 'move' call_tmp[1066372](1066377 call is_c_nil[1062438] coerce_tmp[1066513]))
    const-val call_tmp[1066379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066381 'move' call_tmp[1066379] call_tmp[1066372])
    if call_tmp[1066379]
    {
      const-val call_tmp[1066388]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1066522]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1066528 'move' coerce_tmp[1066522](1066524 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[1789395]:owned SystemError[1000149] "temp"
      (1066396 call fromSyserr[1017024] coerce_tmp[1066522] "Operation attempted on an invalid channel" ret_tmp[1789395])
      (1789398 'move' call_tmp[1066388] ret_tmp[1789395])
      val call_tmp[1066399]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1066531]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789341]:owned Error[966369] "temp"
      (1066533 call _cast[1015658] call_tmp[1066388] ret_tmp[1789341])
      (1789344 'move' coerce_tmp[1066531] ret_tmp[1789341])
      const-val _formal_tmp_in_err[1066710]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1066714 'move' _formal_tmp_in_err[1066710] coerce_tmp[1066531])
      (1066401 'move' call_tmp[1066399](1066404 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1066710]))
      {
        val castedError[1768552]:Error[167938] "temp"
        (1768558 'move' castedError[1768552] call_tmp[1066399])
        (1768560 '=' error_out[1768547] castedError[1768552])
        gotoErrorHandlingReturn _endlock[1768549] _endlock[1768549]
      }
    }
    const-val call_tmp[1066481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066483 'move' call_tmp[1066481](1066486 call _cond_test[223893] err[1066357]))
    if call_tmp[1066481]
    {
      {
        val error[1768564]:Error[167938] "error variable" "temp"
        (1768573 'move' error[1768564] nil[44])
        (1066495 call _ch_ioerror[1062776] this[1066345] err[1066357] "in lock" error[1768564])
        val errorExists[2055677]:bool[10] "temp"
        (2055682 'move' errorExists[2055677](2055679 '!=' error[1768564] nil[44]))
        if errorExists[2055677]
        {
          gotoErrorHandling handler[1768565] handler[1768565]
        }
        label handler[1768565]
        const-val shouldHandleError[1768584]:bool[10] "temp"
        val errorExists[2055685]:bool[10] "temp"
        (2055690 'move' errorExists[2055685](2055687 '!=' error[1768564] nil[44]))
        (1768588 'move' shouldHandleError[1768584] errorExists[2055685])
        if shouldHandleError[1768584]
        {
          (1768580 '=' error_out[1768547] error[1768564])
          gotoErrorHandlingReturn _endlock[1768549] _endlock[1768549]
        }
      }
    }
    label _endlock[1768549]
    (1066502 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].unlock[1066736](const  ref arg this[1066742]:_ref(channel(true,dynamic,false))[1060867]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    (1066810 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].offset[1080059](const  ref arg this[1080065]:_ref(channel(true,dynamic,false))[1060867]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080071]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080080]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1080082]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080210 'move' ret[1080080] 0)
    const-val tmp[1080093]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1080095]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1080097 'move' call_tmp[1080095](1080100 call home[1061666] this[1080065]))
    const-val call_tmp[1080103]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1080183]:BaseLocale[91201] "dead after last mention" "temp"
    (1080188 'move' _locale_tmp_[1080183](1080185 call _value[89981] call_tmp[1080095]))
    (1080105 'move' call_tmp[1080103](1080107 '_wide_get_locale' _locale_tmp_[1080183]))
    (1080109 'move' tmp[1080093] call_tmp[1080103])
    val rvfDerefTmp[2032534]:channel(true,dynamic,false)[1060858] "temp"
    (2032538 'move' rvfDerefTmp[2032534](2032536 'deref' this[1080065]))
    val isdirect[2038553]:bool[10] "temp"
    (2038558 'move' isdirect[2038553](2038555 call chpl_doDirectExecuteOn[187423] tmp[1080093]))
    if isdirect[2038553]
    {
      (2038562 call on_fn[1080116] rvfDerefTmp[2032534] ret[1080080])
    }
    {
      val _args_foron_fn[2038580]:_class_localson_fn[2038570] "temp"
      (2038584 'move' _args_foron_fn[2038580](2038582 'stack allocate class' _class_localson_fn[2038570]))
      (2038586 '.=' _args_foron_fn[2038580] _0_tmp[2038573] tmp[1080093])
      (2038590 '.=' _args_foron_fn[2038580] _1_rvfDerefTmp[2038575] rvfDerefTmp[2032534])
      ref tmp[2038594]:int(64)[13] "temp"
      (2038598 'move' tmp[2038594](2038596 'set reference' ret[1080080]))
      (2038600 '.=' _args_foron_fn[2038580] _2_ret[2038577] tmp[2038594])
      val _args_vforon_fn[2038604]:c_void_ptr[149] "temp"
      (2038608 'move' _args_vforon_fn[2038604](2038606 'cast_to_void_star' _args_foron_fn[2038580]))
      val _args_sizeon_fn[2038610]:int(64)[13] "temp"
      (2038614 'move' _args_sizeon_fn[2038610](2038612 'sizeof_bundle' _class_localson_fn[2038570]))
      on(2038654 call wrapon_fn[2038616] tmp[1080093] _args_vforon_fn[2038604] _args_sizeon_fn[2038610] _args_foron_fn[2038580])
    }
    {
    }
    val call_tmp[1080159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080207 'move' ret[1080071] ret[1080080])
    gotoReturn _end_offset[1080175] _end_offset[1080175]
    label _end_offset[1080175]
    (1080177 return ret[1080071])
  }
  function _ref(channel(true,dynamic,false))[1060867].readWriteThisFromLocale[1066196](const  ref arg this[1066202]:_ref(channel(true,dynamic,false))[1060867], ref arg _retArg[1790197]:_ref(locale)[948755]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1066204]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066212]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1066214 'move' call_tmp[1066212](1066217 call _readWriteThisFromLocale[1066227] this[1066202]))
    (1066220 'move' ret[1066204](1790201 call chpl__initCopy[1494439] call_tmp[1066212]))
    (1790199 '=' _retArg[1790197] ret[1066204])
    (1790203 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].getLocaleOfIoRequest[1066122](const  ref arg this[1066128]:_ref(channel(true,dynamic,false))[1060867], ref arg _retArg[1790185]:_ref(locale)[948755]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1066130]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066138]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790191]:locale[28] "temp"
    (1066146 call readWriteThisFromLocale[1066196] this[1066128] ret_tmp[1790191])
    (1790194 'move' call_tmp[1066138] ret_tmp[1790191])
    val ret[1066147]:locale[28] "dead at end of block" "insert auto destroy"
    (1066149 'move' ret[1066147] call_tmp[1066138])
    const-val call_tmp[1066153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066155 'move' call_tmp[1066153](1066158 call ==[782692] ret[1066147] nilLocale[89939]))
    const-val call_tmp[1066161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066163 'move' call_tmp[1066161] call_tmp[1066153])
    if call_tmp[1066161]
    {
      const-val call_tmp[1066170]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787411]:locale[28] "temp"
      (1066175 call here[90435] ret_tmp[1787411])
      (1787414 'move' call_tmp[1066170] ret_tmp[1787411])
      (1066177 call =[90631] ret[1066147] call_tmp[1066170])
      (1800625 call chpl__autoDestroy[1494484] call_tmp[1066170])
    }
    (1066183 'move' ret[1066130] ret[1066147])
    gotoReturn _end_getLocaleOfIoRequest[1066191] _end_getLocaleOfIoRequest[1066191]
    label _end_getLocaleOfIoRequest[1066191]
    (1790187 '=' _retArg[1790185] ret[1066130])
    (1790189 return _void[55])
  }
  function _ref(file)[948645].reader[1016472](const  ref arg this[1016478]:_ref(file)[948645], const in arg start[1016498]:int(64)[13], const in arg end[1016515]:int(64)[13], const in arg hints[1016521]:int(32)[95], const  ref arg style[1016528]:iostyle[231756], ref arg error_out[1767655]:Error[167938], ref arg _retArg[1789365]:_ref(channel(false,dynamic,true))[985547]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016536]:channel(false,dynamic,true)[985538] "dead after last mention" "RVV" "temp"
    val ret[1016555]:channel(false,dynamic,true)[985538] "dead at end of block" "insert auto destroy"
    val call_tmp[1016557]:channel(false,dynamic,true)[985538] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021652 call init[1017782] ret[1016555])
    const-val call_tmp[1016570]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1016572 'move' call_tmp[1016570](1016575 call ENOERR[223566]))
    val err[1016576]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1017523]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1021641 call =[224045] init_coerce_tmp[1017523] call_tmp[1016570])
    (1016578 'move' err[1016576] init_coerce_tmp[1017523])
    const-val tmp[1016583]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1016585]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1016587 'move' call_tmp[1016585](1016590 call home[886860] this[1016478]))
    const-val call_tmp[1016593]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017530]:BaseLocale[91201] "dead after last mention" "temp"
    (1017535 'move' _locale_tmp_[1017530](1017532 call _value[89981] call_tmp[1016585]))
    (1016595 'move' call_tmp[1016593](1016597 '_wide_get_locale' _locale_tmp_[1017530]))
    (1016599 'move' tmp[1016583] call_tmp[1016593])
    val error[1767658]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1767660 'move' error[1767658] nil[44])
    val rvfDerefTmp[2032199]:iostyle[231756] "temp"
    (2032203 'move' rvfDerefTmp[2032199](2032201 'deref' style[1016528]))
    val rvfDerefTmp[2032207]:file[235492] "temp"
    (2032211 'move' rvfDerefTmp[2032207](2032209 'deref' this[1016478]))
    val isdirect[2036042]:bool[10] "temp"
    (2036047 'move' isdirect[2036042](2036044 call chpl_doDirectExecuteOn[187423] tmp[1016583]))
    if isdirect[2036042]
    {
      (2036051 call on_fn[1016606] start[1016498] err[1016576] end[1016515] rvfDerefTmp[2032199] rvfDerefTmp[2032207] ret[1016555] hints[1016521] error[1767658])
    }
    {
      val _args_foron_fn[2036087]:_class_localson_fn[2036065] "temp"
      (2036091 'move' _args_foron_fn[2036087](2036089 'stack allocate class' _class_localson_fn[2036065]))
      (2036093 '.=' _args_foron_fn[2036087] _0_tmp[2036068] tmp[1016583])
      (2036097 '.=' _args_foron_fn[2036087] _1_start[2036070] start[1016498])
      ref tmp[2036101]:syserr[223496] "temp"
      (2036105 'move' tmp[2036101](2036103 'set reference' err[1016576]))
      (2036107 '.=' _args_foron_fn[2036087] _2_err[2036072] tmp[2036101])
      (2036111 '.=' _args_foron_fn[2036087] _3_end[2036074] end[1016515])
      (2036115 '.=' _args_foron_fn[2036087] _4_rvfDerefTmp[2036076] rvfDerefTmp[2032199])
      (2036119 '.=' _args_foron_fn[2036087] _5_rvfDerefTmp[2036078] rvfDerefTmp[2032207])
      ref tmp[2036123]:channel(false,dynamic,true)[985538] "temp"
      (2036127 'move' tmp[2036123](2036125 'set reference' ret[1016555]))
      (2036129 '.=' _args_foron_fn[2036087] _6_ret[2036080] tmp[2036123])
      (2036133 '.=' _args_foron_fn[2036087] _7_hints[2036082] hints[1016521])
      ref tmp[2036137]:Error[167938] "temp"
      (2036141 'move' tmp[2036137](2036139 'set reference' error[1767658]))
      (2036143 '.=' _args_foron_fn[2036087] _8_error[2036084] tmp[2036137])
      val _args_vforon_fn[2036147]:c_void_ptr[149] "temp"
      (2036151 'move' _args_vforon_fn[2036147](2036149 'cast_to_void_star' _args_foron_fn[2036087]))
      val _args_sizeon_fn[2036153]:int(64)[13] "temp"
      (2036157 'move' _args_sizeon_fn[2036153](2036155 'sizeof_bundle' _class_localson_fn[2036065]))
      on(2036245 call wrapon_fn[2036159] tmp[1016583] _args_vforon_fn[2036147] _args_sizeon_fn[2036153] _args_foron_fn[2036087])
    }
    val errorExists[2055253]:bool[10] "temp"
    (2055258 'move' errorExists[2055253](2055255 '!=' error[1767658] nil[44]))
    if errorExists[2055253]
    {
      (1767664 '=' error_out[1767655] error[1767658])
      (1799320 call chpl__autoDestroy[1504079] ret[1016555])
      gotoErrorHandlingReturn _end_reader[1016691] _end_reader[1016691]
    }
    {
    }
    const-val call_tmp[1016645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1016647 'move' call_tmp[1016645](1016650 call _cond_test[223893] err[1016576]))
    if call_tmp[1016645]
    {
      {
        val error[1767672]:Error[167938] "error variable" "temp"
        (1767681 'move' error[1767672] nil[44])
        const-val call_tmp[1016655]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788295]:string[26] "temp"
        (1016663 call tryGetPath[236276] this[1016478] ret_tmp[1788295])
        (1788298 'move' call_tmp[1016655] ret_tmp[1788295])
        (1016665 call ioerror[266162] err[1016576] "in file.reader" call_tmp[1016655] error[1767672])
        val errorExists[2055261]:bool[10] "temp"
        (2055266 'move' errorExists[2055261](2055263 '!=' error[1767672] nil[44]))
        if errorExists[2055261]
        {
          (1799323 call chpl__autoDestroy[1494420] call_tmp[1016655])
          gotoErrorHandling handler[1767673] handler[1767673]
        }
        (1799326 call chpl__autoDestroy[1494420] call_tmp[1016655])
        label handler[1767673]
        const-val shouldHandleError[1767692]:bool[10] "temp"
        val errorExists[2055269]:bool[10] "temp"
        (2055274 'move' errorExists[2055269](2055271 '!=' error[1767672] nil[44]))
        (1767696 'move' shouldHandleError[1767692] errorExists[2055269])
        if shouldHandleError[1767692]
        {
          (1767688 '=' error_out[1767655] error[1767672])
          (1799329 call chpl__autoDestroy[1504079] ret[1016555])
          gotoErrorHandlingReturn _end_reader[1016691] _end_reader[1016691]
        }
      }
    }
    val call_tmp[1016673]:channel(false,dynamic,true)[985538] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021648 'move' ret[1016536] ret[1016555])
    gotoReturn _end_reader[1016691] _end_reader[1016691]
    label _end_reader[1016691]
    (1789367 '=' _retArg[1789365] ret[1016536])
    (1789369 return _void[55])
  }
  function _ref(file)[948645].reader_default_style[1016931](const  ref arg this[1016934]:_ref(file)[948645], ref arg error_out[1767744]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016937]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1016942]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1767749]:Error[167938] "error variable" "temp"
    (1767751 'move' error[1767749] nil[44])
    (1016949 'move' style[1016942](1016946 call _style[235872] this[1016934] error[1767749]))
    val errorExists[2055293]:bool[10] "temp"
    (2055298 'move' errorExists[2055293](2055295 '!=' error[1767749] nil[44]))
    if errorExists[2055293]
    {
      (1767755 '=' error_out[1767744] error[1767749])
      gotoErrorHandlingReturn _endreader_default_style[1767746] _endreader_default_style[1767746]
    }
    (1017494 'move' ret[1016937] style[1016942])
    label _endreader_default_style[1767746]
    (1016940 return ret[1016937])
  }
  function _ref(file)[948645].reader_default_hints[1016883](const  ref arg this[1016886]:_ref(file)[948645], ref arg error_out[1767740]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016889]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1016894]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1016898]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1016900]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1016918 'move' tmp[1016898] IOHINT_NONE[231323])
    (1016911 'move' hints[1016894] tmp[1016898])
    (1016914 'move' ret[1016889] hints[1016894])
    label _endreader_default_hints[1767742]
    (1016892 return ret[1016889])
  }
  function _ref(file)[948645].reader_default_end[1016819](const  ref arg this[1016822]:_ref(file)[948645], ref arg error_out[1767736]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016825]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1016830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1016833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1016843]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016845]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1016853 'move' tmp[1016843] 9223372036854775807)
    (1016856 'move' end[1016830] tmp[1016843])
    (1016869 'move' ret[1016825] end[1016830])
    label _endreader_default_end[1767738]
    (1016828 return ret[1016825])
  }
  function _ref(file)[948645].reader_default_start[1016772](const  ref arg this[1016775]:_ref(file)[948645], ref arg error_out[1767732]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016778]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1016783]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1016787]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016789]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1016797 'move' tmp[1016787] 0)
    (1016800 'move' start[1016783] tmp[1016787])
    (1016805 'move' ret[1016778] start[1016783])
    label _endreader_default_start[1767734]
    (1016781 return ret[1016778])
  }
  function _ref(file)[948645].reader[1080499](const  ref arg this[1080505]:_ref(file)[948645], const in arg start[1080525]:int(64)[13], const in arg end[1080542]:int(64)[13], const in arg hints[1080548]:int(32)[95], const  ref arg style[1080555]:iostyle[231756], ref arg error_out[1768998]:Error[167938], ref arg _retArg[1790263]:_ref(channel(false,dynamic,false))[1080602]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080563]:channel(false,dynamic,false)[1080593] "dead after last mention" "RVV" "temp"
    val ret[1080617]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
    val call_tmp[1080619]:channel(false,dynamic,false)[1080593] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1081994 call init[1081263] ret[1080617])
    const-val call_tmp[1080632]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1080634 'move' call_tmp[1080632](1080637 call ENOERR[223566]))
    val err[1080638]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1081004]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1081983 call =[224045] init_coerce_tmp[1081004] call_tmp[1080632])
    (1080640 'move' err[1080638] init_coerce_tmp[1081004])
    const-val tmp[1080645]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1080647]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1080649 'move' call_tmp[1080647](1080652 call home[886860] this[1080505]))
    const-val call_tmp[1080655]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081011]:BaseLocale[91201] "dead after last mention" "temp"
    (1081016 'move' _locale_tmp_[1081011](1081013 call _value[89981] call_tmp[1080647]))
    (1080657 'move' call_tmp[1080655](1080659 '_wide_get_locale' _locale_tmp_[1081011]))
    (1080661 'move' tmp[1080645] call_tmp[1080655])
    val error[1769001]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769003 'move' error[1769001] nil[44])
    val rvfDerefTmp[2032562]:iostyle[231756] "temp"
    (2032566 'move' rvfDerefTmp[2032562](2032564 'deref' style[1080555]))
    val rvfDerefTmp[2032570]:file[235492] "temp"
    (2032574 'move' rvfDerefTmp[2032570](2032572 'deref' this[1080505]))
    val isdirect[2038659]:bool[10] "temp"
    (2038664 'move' isdirect[2038659](2038661 call chpl_doDirectExecuteOn[187423] tmp[1080645]))
    if isdirect[2038659]
    {
      (2038668 call on_fn[1080668] err[1080638] hints[1080548] start[1080525] ret[1080617] end[1080542] rvfDerefTmp[2032562] rvfDerefTmp[2032570] error[1769001])
    }
    {
      val _args_foron_fn[2038704]:_class_localson_fn[2038682] "temp"
      (2038708 'move' _args_foron_fn[2038704](2038706 'stack allocate class' _class_localson_fn[2038682]))
      (2038710 '.=' _args_foron_fn[2038704] _0_tmp[2038685] tmp[1080645])
      ref tmp[2038714]:syserr[223496] "temp"
      (2038718 'move' tmp[2038714](2038716 'set reference' err[1080638]))
      (2038720 '.=' _args_foron_fn[2038704] _1_err[2038687] tmp[2038714])
      (2038724 '.=' _args_foron_fn[2038704] _2_hints[2038689] hints[1080548])
      (2038728 '.=' _args_foron_fn[2038704] _3_start[2038691] start[1080525])
      ref tmp[2038732]:channel(false,dynamic,false)[1080593] "temp"
      (2038736 'move' tmp[2038732](2038734 'set reference' ret[1080617]))
      (2038738 '.=' _args_foron_fn[2038704] _4_ret[2038693] tmp[2038732])
      (2038742 '.=' _args_foron_fn[2038704] _5_end[2038695] end[1080542])
      (2038746 '.=' _args_foron_fn[2038704] _6_rvfDerefTmp[2038697] rvfDerefTmp[2032562])
      (2038750 '.=' _args_foron_fn[2038704] _7_rvfDerefTmp[2038699] rvfDerefTmp[2032570])
      ref tmp[2038754]:Error[167938] "temp"
      (2038758 'move' tmp[2038754](2038756 'set reference' error[1769001]))
      (2038760 '.=' _args_foron_fn[2038704] _8_error[2038701] tmp[2038754])
      val _args_vforon_fn[2038764]:c_void_ptr[149] "temp"
      (2038768 'move' _args_vforon_fn[2038764](2038766 'cast_to_void_star' _args_foron_fn[2038704]))
      val _args_sizeon_fn[2038770]:int(64)[13] "temp"
      (2038774 'move' _args_sizeon_fn[2038770](2038772 'sizeof_bundle' _class_localson_fn[2038682]))
      on(2038862 call wrapon_fn[2038776] tmp[1080645] _args_vforon_fn[2038764] _args_sizeon_fn[2038770] _args_foron_fn[2038704])
    }
    val errorExists[2055885]:bool[10] "temp"
    (2055890 'move' errorExists[2055885](2055887 '!=' error[1769001] nil[44]))
    if errorExists[2055885]
    {
      (1769007 '=' error_out[1768998] error[1769001])
      (1800729 call chpl__autoDestroy[1573515] ret[1080617])
      gotoErrorHandlingReturn _end_reader[1080753] _end_reader[1080753]
    }
    {
    }
    const-val call_tmp[1080707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080709 'move' call_tmp[1080707](1080712 call _cond_test[223893] err[1080638]))
    if call_tmp[1080707]
    {
      {
        val error[1769015]:Error[167938] "error variable" "temp"
        (1769024 'move' error[1769015] nil[44])
        const-val call_tmp[1080717]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788313]:string[26] "temp"
        (1080725 call tryGetPath[236276] this[1080505] ret_tmp[1788313])
        (1788316 'move' call_tmp[1080717] ret_tmp[1788313])
        (1080727 call ioerror[266162] err[1080638] "in file.reader" call_tmp[1080717] error[1769015])
        val errorExists[2055893]:bool[10] "temp"
        (2055898 'move' errorExists[2055893](2055895 '!=' error[1769015] nil[44]))
        if errorExists[2055893]
        {
          (1800732 call chpl__autoDestroy[1494420] call_tmp[1080717])
          gotoErrorHandling handler[1769016] handler[1769016]
        }
        (1800735 call chpl__autoDestroy[1494420] call_tmp[1080717])
        label handler[1769016]
        const-val shouldHandleError[1769035]:bool[10] "temp"
        val errorExists[2055901]:bool[10] "temp"
        (2055906 'move' errorExists[2055901](2055903 '!=' error[1769015] nil[44]))
        (1769039 'move' shouldHandleError[1769035] errorExists[2055901])
        if shouldHandleError[1769035]
        {
          (1769031 '=' error_out[1768998] error[1769015])
          (1800738 call chpl__autoDestroy[1573515] ret[1080617])
          gotoErrorHandlingReturn _end_reader[1080753] _end_reader[1080753]
        }
      }
    }
    val call_tmp[1080735]:channel(false,dynamic,false)[1080593] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1081990 'move' ret[1080563] ret[1080617])
    gotoReturn _end_reader[1080753] _end_reader[1080753]
    label _end_reader[1080753]
    (1790265 '=' _retArg[1790263] ret[1080563])
    (1790267 return _void[55])
  }
  function _ref(file)[948645].reader_default_style[1080955](const  ref arg this[1080958]:_ref(file)[948645], ref arg error_out[1769087]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080961]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1080966]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1769092]:Error[167938] "error variable" "temp"
    (1769094 'move' error[1769092] nil[44])
    (1080973 'move' style[1080966](1080970 call _style[235872] this[1080958] error[1769092]))
    val errorExists[2055925]:bool[10] "temp"
    (2055930 'move' errorExists[2055925](2055927 '!=' error[1769092] nil[44]))
    if errorExists[2055925]
    {
      (1769098 '=' error_out[1769087] error[1769092])
      gotoErrorHandlingReturn _endreader_default_style[1769089] _endreader_default_style[1769089]
    }
    (1080977 'move' ret[1080961] style[1080966])
    label _endreader_default_style[1769089]
    (1080964 return ret[1080961])
  }
  function _ref(file)[948645].reader_default_hints[1080908](const  ref arg this[1080911]:_ref(file)[948645], ref arg error_out[1769083]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080914]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1080919]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1080923]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1080925]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1080943 'move' tmp[1080923] IOHINT_NONE[231323])
    (1080936 'move' hints[1080919] tmp[1080923])
    (1080939 'move' ret[1080914] hints[1080919])
    label _endreader_default_hints[1769085]
    (1080917 return ret[1080914])
  }
  function _ref(file)[948645].reader_default_end[1080845](const  ref arg this[1080848]:_ref(file)[948645], ref arg error_out[1769079]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080851]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1080856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1080859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1080869]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1080871]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1080879 'move' tmp[1080869] 9223372036854775807)
    (1080882 'move' end[1080856] tmp[1080869])
    (1080895 'move' ret[1080851] end[1080856])
    label _endreader_default_end[1769081]
    (1080854 return ret[1080851])
  }
  function _ref(file)[948645].reader_default_start[1080799](const  ref arg this[1080802]:_ref(file)[948645], ref arg error_out[1769075]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080805]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1080810]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1080814]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1080816]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1080824 'move' tmp[1080814] 0)
    (1080827 'move' start[1080810] tmp[1080814])
    (1080832 'move' ret[1080805] start[1080810])
    label _endreader_default_start[1769077]
    (1080808 return ret[1080805])
  }
  function _ref(file)[948645].writer[1022047](const  ref arg this[1022053]:_ref(file)[948645], const in arg start[1022073]:int(64)[13], const in arg end[1022090]:int(64)[13], const in arg hints[1022096]:int(32)[95], const  ref arg style[1022103]:iostyle[231756], ref arg error_out[1767771]:Error[167938], ref arg _retArg[1789425]:_ref(channel(true,dynamic,true))[1021745]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022111]:channel(true,dynamic,true)[1021736] "dead after last mention" "RVV" "temp"
    val ret[1022130]:channel(true,dynamic,true)[1021736] "dead at end of block" "insert auto destroy"
    val call_tmp[1022132]:channel(true,dynamic,true)[1021736] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023740 call init[1022818] ret[1022130])
    const-val call_tmp[1022145]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1022147 'move' call_tmp[1022145](1022150 call ENOERR[223566]))
    val err[1022151]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1022559]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1023729 call =[224045] init_coerce_tmp[1022559] call_tmp[1022145])
    (1022153 'move' err[1022151] init_coerce_tmp[1022559])
    const-val tmp[1022158]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1022160]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1022162 'move' call_tmp[1022160](1022165 call home[886860] this[1022053]))
    const-val call_tmp[1022168]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022566]:BaseLocale[91201] "dead after last mention" "temp"
    (1022571 'move' _locale_tmp_[1022566](1022568 call _value[89981] call_tmp[1022160]))
    (1022170 'move' call_tmp[1022168](1022172 '_wide_get_locale' _locale_tmp_[1022566]))
    (1022174 'move' tmp[1022158] call_tmp[1022168])
    val error[1767774]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1767776 'move' error[1767774] nil[44])
    val rvfDerefTmp[2032276]:iostyle[231756] "temp"
    (2032280 'move' rvfDerefTmp[2032276](2032278 'deref' style[1022103]))
    val rvfDerefTmp[2032284]:file[235492] "temp"
    (2032288 'move' rvfDerefTmp[2032284](2032286 'deref' this[1022053]))
    val isdirect[2036725]:bool[10] "temp"
    (2036730 'move' isdirect[2036725](2036727 call chpl_doDirectExecuteOn[187423] tmp[1022158]))
    if isdirect[2036725]
    {
      (2036734 call on_fn[1022181] err[1022151] start[1022073] rvfDerefTmp[2032276] end[1022090] rvfDerefTmp[2032284] ret[1022130] hints[1022096] error[1767774])
    }
    {
      val _args_foron_fn[2036770]:_class_localson_fn[2036748] "temp"
      (2036774 'move' _args_foron_fn[2036770](2036772 'stack allocate class' _class_localson_fn[2036748]))
      (2036776 '.=' _args_foron_fn[2036770] _0_tmp[2036751] tmp[1022158])
      ref tmp[2036780]:syserr[223496] "temp"
      (2036784 'move' tmp[2036780](2036782 'set reference' err[1022151]))
      (2036786 '.=' _args_foron_fn[2036770] _1_err[2036753] tmp[2036780])
      (2036790 '.=' _args_foron_fn[2036770] _2_start[2036755] start[1022073])
      (2036794 '.=' _args_foron_fn[2036770] _3_rvfDerefTmp[2036757] rvfDerefTmp[2032276])
      (2036798 '.=' _args_foron_fn[2036770] _4_end[2036759] end[1022090])
      (2036802 '.=' _args_foron_fn[2036770] _5_rvfDerefTmp[2036761] rvfDerefTmp[2032284])
      ref tmp[2036806]:channel(true,dynamic,true)[1021736] "temp"
      (2036810 'move' tmp[2036806](2036808 'set reference' ret[1022130]))
      (2036812 '.=' _args_foron_fn[2036770] _6_ret[2036763] tmp[2036806])
      (2036816 '.=' _args_foron_fn[2036770] _7_hints[2036765] hints[1022096])
      ref tmp[2036820]:Error[167938] "temp"
      (2036824 'move' tmp[2036820](2036822 'set reference' error[1767774]))
      (2036826 '.=' _args_foron_fn[2036770] _8_error[2036767] tmp[2036820])
      val _args_vforon_fn[2036830]:c_void_ptr[149] "temp"
      (2036834 'move' _args_vforon_fn[2036830](2036832 'cast_to_void_star' _args_foron_fn[2036770]))
      val _args_sizeon_fn[2036836]:int(64)[13] "temp"
      (2036840 'move' _args_sizeon_fn[2036836](2036838 'sizeof_bundle' _class_localson_fn[2036748]))
      on(2036928 call wrapon_fn[2036842] tmp[1022158] _args_vforon_fn[2036830] _args_sizeon_fn[2036836] _args_foron_fn[2036770])
    }
    val errorExists[2055301]:bool[10] "temp"
    (2055306 'move' errorExists[2055301](2055303 '!=' error[1767774] nil[44]))
    if errorExists[2055301]
    {
      (1767780 '=' error_out[1767771] error[1767774])
      (1799343 call chpl__autoDestroy[1567085] ret[1022130])
      gotoErrorHandlingReturn _end_writer[1022266] _end_writer[1022266]
    }
    {
    }
    const-val call_tmp[1022220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1022222 'move' call_tmp[1022220](1022225 call _cond_test[223893] err[1022151]))
    if call_tmp[1022220]
    {
      {
        val error[1767788]:Error[167938] "error variable" "temp"
        (1767797 'move' error[1767788] nil[44])
        const-val call_tmp[1022230]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788301]:string[26] "temp"
        (1022238 call tryGetPath[236276] this[1022053] ret_tmp[1788301])
        (1788304 'move' call_tmp[1022230] ret_tmp[1788301])
        (1022240 call ioerror[266162] err[1022151] "in file.writer" call_tmp[1022230] error[1767788])
        val errorExists[2055309]:bool[10] "temp"
        (2055314 'move' errorExists[2055309](2055311 '!=' error[1767788] nil[44]))
        if errorExists[2055309]
        {
          (1799346 call chpl__autoDestroy[1494420] call_tmp[1022230])
          gotoErrorHandling handler[1767789] handler[1767789]
        }
        (1799349 call chpl__autoDestroy[1494420] call_tmp[1022230])
        label handler[1767789]
        const-val shouldHandleError[1767808]:bool[10] "temp"
        val errorExists[2055317]:bool[10] "temp"
        (2055322 'move' errorExists[2055317](2055319 '!=' error[1767788] nil[44]))
        (1767812 'move' shouldHandleError[1767808] errorExists[2055317])
        if shouldHandleError[1767808]
        {
          (1767804 '=' error_out[1767771] error[1767788])
          (1799352 call chpl__autoDestroy[1567085] ret[1022130])
          gotoErrorHandlingReturn _end_writer[1022266] _end_writer[1022266]
        }
      }
    }
    val call_tmp[1022248]:channel(true,dynamic,true)[1021736] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023736 'move' ret[1022111] ret[1022130])
    gotoReturn _end_writer[1022266] _end_writer[1022266]
    label _end_writer[1022266]
    (1789427 '=' _retArg[1789425] ret[1022111])
    (1789429 return _void[55])
  }
  function _ref(file)[948645].writer_default_style[1022509](const  ref arg this[1022512]:_ref(file)[948645], ref arg error_out[1767860]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022515]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1022520]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1767865]:Error[167938] "error variable" "temp"
    (1767867 'move' error[1767865] nil[44])
    (1022527 'move' style[1022520](1022524 call _style[235872] this[1022512] error[1767865]))
    val errorExists[2055341]:bool[10] "temp"
    (2055346 'move' errorExists[2055341](2055343 '!=' error[1767865] nil[44]))
    if errorExists[2055341]
    {
      (1767871 '=' error_out[1767860] error[1767865])
      gotoErrorHandlingReturn _endwriter_default_style[1767862] _endwriter_default_style[1767862]
    }
    (1022531 'move' ret[1022515] style[1022520])
    label _endwriter_default_style[1767862]
    (1022518 return ret[1022515])
  }
  function _ref(file)[948645].writer_default_hints[1022458](const  ref arg this[1022461]:_ref(file)[948645], ref arg error_out[1767856]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022464]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1022469]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022473]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1022475]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1022483 'move' tmp[1022473](1022494 'cast' int(32)[95] 0))
    (1022486 'move' hints[1022469] tmp[1022473])
    (1022491 'move' ret[1022464] hints[1022469])
    label _endwriter_default_hints[1767858]
    (1022467 return ret[1022464])
  }
  function _ref(file)[948645].writer_default_end[1022394](const  ref arg this[1022397]:_ref(file)[948645], ref arg error_out[1767852]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022400]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1022405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1022408]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1022418]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022420]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022428 'move' tmp[1022418] 9223372036854775807)
    (1022431 'move' end[1022405] tmp[1022418])
    (1022444 'move' ret[1022400] end[1022405])
    label _endwriter_default_end[1767854]
    (1022403 return ret[1022400])
  }
  function _ref(file)[948645].writer_default_start[1022347](const  ref arg this[1022350]:_ref(file)[948645], ref arg error_out[1767848]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022353]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1022358]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022362]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022364]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022372 'move' tmp[1022362] 0)
    (1022375 'move' start[1022358] tmp[1022362])
    (1022380 'move' ret[1022353] start[1022358])
    label _endwriter_default_start[1767850]
    (1022356 return ret[1022353])
  }
  function _ref(file)[948645].writer[1060764](const  ref arg this[1060770]:_ref(file)[948645], const in arg start[1060790]:int(64)[13], const in arg end[1060807]:int(64)[13], const in arg hints[1060813]:int(32)[95], const  ref arg style[1060820]:iostyle[231756], ref arg error_out[1768202]:Error[167938], ref arg _retArg[1789873]:_ref(channel(true,dynamic,false))[1060867]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1060828]:channel(true,dynamic,false)[1060858] "dead after last mention" "RVV" "temp"
    val ret[1060882]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
    val call_tmp[1060884]:channel(true,dynamic,false)[1060858] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062262 call init[1061531] ret[1060882])
    const-val call_tmp[1060897]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1060899 'move' call_tmp[1060897](1060902 call ENOERR[223566]))
    val err[1060903]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061272]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1062251 call =[224045] init_coerce_tmp[1061272] call_tmp[1060897])
    (1060905 'move' err[1060903] init_coerce_tmp[1061272])
    const-val tmp[1060910]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1060912]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1060914 'move' call_tmp[1060912](1060917 call home[886860] this[1060770]))
    const-val call_tmp[1060920]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061279]:BaseLocale[91201] "dead after last mention" "temp"
    (1061284 'move' _locale_tmp_[1061279](1061281 call _value[89981] call_tmp[1060912]))
    (1060922 'move' call_tmp[1060920](1060924 '_wide_get_locale' _locale_tmp_[1061279]))
    (1060926 'move' tmp[1060910] call_tmp[1060920])
    val error[1768205]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768207 'move' error[1768205] nil[44])
    val rvfDerefTmp[2032384]:iostyle[231756] "temp"
    (2032388 'move' rvfDerefTmp[2032384](2032386 'deref' style[1060820]))
    val rvfDerefTmp[2032392]:file[235492] "temp"
    (2032396 'move' rvfDerefTmp[2032392](2032394 'deref' this[1060770]))
    val isdirect[2037438]:bool[10] "temp"
    (2037443 'move' isdirect[2037438](2037440 call chpl_doDirectExecuteOn[187423] tmp[1060910]))
    if isdirect[2037438]
    {
      (2037447 call on_fn[1060933] hints[1060813] start[1060790] ret[1060882] rvfDerefTmp[2032384] end[1060807] rvfDerefTmp[2032392] err[1060903] error[1768205])
    }
    {
      val _args_foron_fn[2037483]:_class_localson_fn[2037461] "temp"
      (2037487 'move' _args_foron_fn[2037483](2037485 'stack allocate class' _class_localson_fn[2037461]))
      (2037489 '.=' _args_foron_fn[2037483] _0_tmp[2037464] tmp[1060910])
      (2037493 '.=' _args_foron_fn[2037483] _1_hints[2037466] hints[1060813])
      (2037497 '.=' _args_foron_fn[2037483] _2_start[2037468] start[1060790])
      ref tmp[2037501]:channel(true,dynamic,false)[1060858] "temp"
      (2037505 'move' tmp[2037501](2037503 'set reference' ret[1060882]))
      (2037507 '.=' _args_foron_fn[2037483] _3_ret[2037470] tmp[2037501])
      (2037511 '.=' _args_foron_fn[2037483] _4_rvfDerefTmp[2037472] rvfDerefTmp[2032384])
      (2037515 '.=' _args_foron_fn[2037483] _5_end[2037474] end[1060807])
      (2037519 '.=' _args_foron_fn[2037483] _6_rvfDerefTmp[2037476] rvfDerefTmp[2032392])
      ref tmp[2037523]:syserr[223496] "temp"
      (2037527 'move' tmp[2037523](2037525 'set reference' err[1060903]))
      (2037529 '.=' _args_foron_fn[2037483] _7_err[2037478] tmp[2037523])
      ref tmp[2037533]:Error[167938] "temp"
      (2037537 'move' tmp[2037533](2037535 'set reference' error[1768205]))
      (2037539 '.=' _args_foron_fn[2037483] _8_error[2037480] tmp[2037533])
      val _args_vforon_fn[2037543]:c_void_ptr[149] "temp"
      (2037547 'move' _args_vforon_fn[2037543](2037545 'cast_to_void_star' _args_foron_fn[2037483]))
      val _args_sizeon_fn[2037549]:int(64)[13] "temp"
      (2037553 'move' _args_sizeon_fn[2037549](2037551 'sizeof_bundle' _class_localson_fn[2037461]))
      on(2037641 call wrapon_fn[2037555] tmp[1060910] _args_vforon_fn[2037543] _args_sizeon_fn[2037549] _args_foron_fn[2037483])
    }
    val errorExists[2055525]:bool[10] "temp"
    (2055530 'move' errorExists[2055525](2055527 '!=' error[1768205] nil[44]))
    if errorExists[2055525]
    {
      (1768211 '=' error_out[1768202] error[1768205])
      (1800568 call chpl__autoDestroy[1569261] ret[1060882])
      gotoErrorHandlingReturn _end_writer[1061018] _end_writer[1061018]
    }
    {
    }
    const-val call_tmp[1060972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1060974 'move' call_tmp[1060972](1060977 call _cond_test[223893] err[1060903]))
    if call_tmp[1060972]
    {
      {
        val error[1768219]:Error[167938] "error variable" "temp"
        (1768228 'move' error[1768219] nil[44])
        const-val call_tmp[1060982]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1788307]:string[26] "temp"
        (1060990 call tryGetPath[236276] this[1060770] ret_tmp[1788307])
        (1788310 'move' call_tmp[1060982] ret_tmp[1788307])
        (1060992 call ioerror[266162] err[1060903] "in file.writer" call_tmp[1060982] error[1768219])
        val errorExists[2055533]:bool[10] "temp"
        (2055538 'move' errorExists[2055533](2055535 '!=' error[1768219] nil[44]))
        if errorExists[2055533]
        {
          (1800571 call chpl__autoDestroy[1494420] call_tmp[1060982])
          gotoErrorHandling handler[1768220] handler[1768220]
        }
        (1800574 call chpl__autoDestroy[1494420] call_tmp[1060982])
        label handler[1768220]
        const-val shouldHandleError[1768239]:bool[10] "temp"
        val errorExists[2055541]:bool[10] "temp"
        (2055546 'move' errorExists[2055541](2055543 '!=' error[1768219] nil[44]))
        (1768243 'move' shouldHandleError[1768239] errorExists[2055541])
        if shouldHandleError[1768239]
        {
          (1768235 '=' error_out[1768202] error[1768219])
          (1800577 call chpl__autoDestroy[1569261] ret[1060882])
          gotoErrorHandlingReturn _end_writer[1061018] _end_writer[1061018]
        }
      }
    }
    val call_tmp[1061000]:channel(true,dynamic,false)[1060858] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062258 'move' ret[1060828] ret[1060882])
    gotoReturn _end_writer[1061018] _end_writer[1061018]
    label _end_writer[1061018]
    (1789875 '=' _retArg[1789873] ret[1060828])
    (1789877 return _void[55])
  }
  function _ref(file)[948645].writer_default_style[1061223](const  ref arg this[1061226]:_ref(file)[948645], ref arg error_out[1768291]:Error[167938]) : iostyle[231756] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061229]:iostyle[231756] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1061234]:iostyle[231756] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1768296]:Error[167938] "error variable" "temp"
    (1768298 'move' error[1768296] nil[44])
    (1061241 'move' style[1061234](1061238 call _style[235872] this[1061226] error[1768296]))
    val errorExists[2055565]:bool[10] "temp"
    (2055570 'move' errorExists[2055565](2055567 '!=' error[1768296] nil[44]))
    if errorExists[2055565]
    {
      (1768302 '=' error_out[1768291] error[1768296])
      gotoErrorHandlingReturn _endwriter_default_style[1768293] _endwriter_default_style[1768293]
    }
    (1061245 'move' ret[1061229] style[1061234])
    label _endwriter_default_style[1768293]
    (1061232 return ret[1061229])
  }
  function _ref(file)[948645].writer_default_hints[1061173](const  ref arg this[1061176]:_ref(file)[948645], ref arg error_out[1768287]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061179]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1061184]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061188]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1061190]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1061198 'move' tmp[1061188](1061209 'cast' int(32)[95] 0))
    (1061201 'move' hints[1061184] tmp[1061188])
    (1061206 'move' ret[1061179] hints[1061184])
    label _endwriter_default_hints[1768289]
    (1061182 return ret[1061179])
  }
  function _ref(file)[948645].writer_default_end[1061110](const  ref arg this[1061113]:_ref(file)[948645], ref arg error_out[1768283]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061116]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1061121]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1061124]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1061134]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061136]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061144 'move' tmp[1061134] 9223372036854775807)
    (1061147 'move' end[1061121] tmp[1061134])
    (1061160 'move' ret[1061116] end[1061121])
    label _endwriter_default_end[1768285]
    (1061119 return ret[1061116])
  }
  function _ref(file)[948645].writer_default_start[1061064](const  ref arg this[1061067]:_ref(file)[948645], ref arg error_out[1768279]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061070]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1061075]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061079]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061081]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061089 'move' tmp[1061079] 0)
    (1061092 'move' start[1061075] tmp[1061079])
    (1061097 'move' ret[1061070] start[1061075])
    label _endwriter_default_start[1768281]
    (1061073 return ret[1061070])
  }
  function _write_text_internal[1078671](const in arg _channel_internal[1078673]:qio_channel_ptr_t[231377], const in arg x[1078675]:int(64)[13]) : syserr[223496] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1078689]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1078699]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1078799]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1078821]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1078834]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1078847]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1079466]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079472 'move' coerce_tmp[1079466](1079468 'cast' int(32)[95] 0))
        const-val coerce_tmp[1079474]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079480 'move' coerce_tmp[1079474](1079476 'cast' uint(64)[115] 8))
        const-val coerce_tmp[1079482]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079488 'move' coerce_tmp[1079482](1079484 'cast' int(32)[95] 1))
        (1078849 'move' call_tmp[1078847](1078852 call qio_channel_print_int[1079436] coerce_tmp[1079466] _channel_internal[1078673] x[1078675] coerce_tmp[1079474] coerce_tmp[1079482]))
        (1079492 'move' ret[1078689] call_tmp[1078847])
        gotoReturn _end__write_text_internal[1079419] _end__write_text_internal[1079419]
      }
    }
    label _end__write_text_internal[1079419]
    (1079421 return ret[1078689])
  }
  function _write_text_internal[1172755](const in arg _channel_internal[1172757]:qio_channel_ptr_t[231377], const  ref arg x[1172759]:string[26]) : syserr[223496] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1172773]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1172783]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1172883]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1172950]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1173003]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1173056]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1173142]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                const-val call_tmp[1173165]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1786469]:string[26] "temp"
                (1173173 call localize[32886] x[1172759] ret_tmp[1786469])
                (1786472 'move' call_tmp[1173165] ret_tmp[1786469])
                const local_x[1173174]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1173176 'move' local_x[1173174] call_tmp[1173165])
                ref call_tmp[1173180]:_ref(bool)[937110] "dead after last mention" "maybe param" "reference to a const" "temp"
                (1173182 'move' call_tmp[1173180](1173185 call hasEscapes[757927] local_x[1173174]))
                const-val call_tmp[1173188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1173533]:bool[10] "dead after last mention" "const" "temp"
                (1173535 'move' tmp[1173533](1173537 'deref' call_tmp[1173180]))
                (1173190 'move' call_tmp[1173188] tmp[1173533])
                if call_tmp[1173188]
                {
                  (1173554 call =[224045] ret[1172773] EILSEQ[224356])
                  (1802425 call chpl__autoDestroy[1494420] local_x[1173174])
                  gotoReturn _end__write_text_internal[1173503] _end__write_text_internal[1173503]
                }
                const-val call_tmp[1173205]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173207 'move' call_tmp[1173205](1173213 call c_str[32932] local_x[1173174]))
                const-val call_tmp[1173214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173216 'move' call_tmp[1173214](1173219 call numBytes[32807] local_x[1173174]))
                const-val call_tmp[1173222]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173224 'move' call_tmp[1173222] call_tmp[1173214])
                const-val call_tmp[1173230]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1173542]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1173548 'move' coerce_tmp[1173542](1173544 'cast' int(32)[95] 0))
                (1173232 'move' call_tmp[1173230](1173235 call qio_channel_print_string[234749] coerce_tmp[1173542] _channel_internal[1172757] call_tmp[1173205] call_tmp[1173222]))
                (1173561 'move' ret[1172773] call_tmp[1173230])
                (1802428 call chpl__autoDestroy[1494420] local_x[1173174])
                gotoReturn _end__write_text_internal[1173503] _end__write_text_internal[1173503]
              }
            }
          }
        }
      }
    }
    label _end__write_text_internal[1173503]
    (1173505 return ret[1172773])
  }
  function _write_binary_internal[1073709](const in arg _channel_internal[1073711]:qio_channel_ptr_t[231377], const in arg x[1073715]:int(64)[13]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1073729]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1073741]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1073849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1073871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1073933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1073939]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1073989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1073995]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1074045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1074051]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1074101]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1074107]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1074157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1074163]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1074195]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1075514]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1075520 'move' coerce_tmp[1075514](1075516 'cast' int(32)[95] 0))
                    (1074197 'move' call_tmp[1074195](1074200 call qio_channel_write_int64[233962] coerce_tmp[1075514] 2 _channel_internal[1073711] x[1073715]))
                    (1075524 'move' ret[1073729] call_tmp[1074195])
                    gotoReturn _end__write_binary_internal[1075213] _end__write_binary_internal[1075213]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1075213]
    (1075215 return ret[1073729])
  }
  function _write_binary_internal[1075537](const in arg _channel_internal[1075539]:qio_channel_ptr_t[231377], const in arg x[1075543]:int(64)[13]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1075557]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1075569]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1075677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1075699]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1075761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1075767]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1075817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1075823]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1075873]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1075879]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1075929]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1075935]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1075985]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1075991]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1076023]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1077083]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1077089 'move' coerce_tmp[1077083](1077085 'cast' int(32)[95] 0))
                    (1076025 'move' call_tmp[1076023](1076028 call qio_channel_write_int64[233962] coerce_tmp[1077083] 3 _channel_internal[1075539] x[1075543]))
                    (1077093 'move' ret[1075557] call_tmp[1076023])
                    gotoReturn _end__write_binary_internal[1077041] _end__write_binary_internal[1077041]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1077041]
    (1077043 return ret[1075557])
  }
  function _write_binary_internal[1077105](const in arg _channel_internal[1077107]:qio_channel_ptr_t[231377], const in arg x[1077111]:int(64)[13]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1077125]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1077137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1077245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1077267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1077329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1077335]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1077385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1077391]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1077441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1077447]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1077497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1077503]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1077553]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1077559]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1077591]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1078649]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1078655 'move' coerce_tmp[1078649](1078651 'cast' int(32)[95] 0))
                    (1077593 'move' call_tmp[1077591](1077596 call qio_channel_write_int64[233962] coerce_tmp[1078649] 1 _channel_internal[1077107] x[1077111]))
                    (1078659 'move' ret[1077125] call_tmp[1077591])
                    gotoReturn _end__write_binary_internal[1078609] _end__write_binary_internal[1078609]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1078609]
    (1078611 return ret[1077125])
  }
  function _write_binary_internal[1168036](const in arg _channel_internal[1168038]:qio_channel_ptr_t[231377], const  ref arg x[1168042]:string[26]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1168056]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1168068]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1168176]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1168622]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1168919]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1169208]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1169231]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1786451]:string[26] "temp"
              (1169239 call localize[32886] x[1168042] ret_tmp[1786451])
              (1786454 'move' call_tmp[1169231] ret_tmp[1786451])
              val local_x[1169240]:string[26] "dead at end of block" "insert auto destroy"
              (1169242 'move' local_x[1169240] call_tmp[1169231])
              ref call_tmp[1169246]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
              (1169248 'move' call_tmp[1169246](1169251 call hasEscapes[757927] local_x[1169240]))
              const-val call_tmp[1169254]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1169566]:bool[10] "dead after last mention" "const" "temp"
              (1169568 'move' tmp[1169566](1169570 'deref' call_tmp[1169246]))
              (1169256 'move' call_tmp[1169254] tmp[1169566])
              if call_tmp[1169254]
              {
                (1169591 call =[224045] ret[1168056] EILSEQ[224356])
                (1802407 call chpl__autoDestroy[1494420] local_x[1169240])
                gotoReturn _end__write_binary_internal[1169540] _end__write_binary_internal[1169540]
              }
              const-val call_tmp[1169279]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169281 'move' call_tmp[1169279](1169284 call qio_channel_str_style[232999] _channel_internal[1168038]))
              const-val call_tmp[1169286]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169288 'move' call_tmp[1169286](1169294 call c_str[32932] local_x[1169240]))
              const-val call_tmp[1169295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169297 'move' call_tmp[1169295](1169300 call numBytes[32807] local_x[1169240]))
              const-val call_tmp[1169303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169305 'move' call_tmp[1169303] call_tmp[1169295])
              const-val call_tmp[1169311]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1169579]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1169585 'move' coerce_tmp[1169579](1169581 'cast' int(32)[95] 0))
              (1169313 'move' call_tmp[1169311](1169316 call qio_channel_write_string[234301] coerce_tmp[1169579] 2 call_tmp[1169279] _channel_internal[1168038] call_tmp[1169286] call_tmp[1169303]))
              (1169598 'move' ret[1168056] call_tmp[1169311])
              (1802410 call chpl__autoDestroy[1494420] local_x[1169240])
              gotoReturn _end__write_binary_internal[1169540] _end__write_binary_internal[1169540]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1169540]
    (1169542 return ret[1168056])
  }
  function _write_binary_internal[1169611](const in arg _channel_internal[1169613]:qio_channel_ptr_t[231377], const  ref arg x[1169617]:string[26]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1169631]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1169643]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1169751]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1170197]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1170494]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1170783]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1170806]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1786457]:string[26] "temp"
              (1170814 call localize[32886] x[1169617] ret_tmp[1786457])
              (1786460 'move' call_tmp[1170806] ret_tmp[1786457])
              val local_x[1170815]:string[26] "dead at end of block" "insert auto destroy"
              (1170817 'move' local_x[1170815] call_tmp[1170806])
              ref call_tmp[1170821]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
              (1170823 'move' call_tmp[1170821](1170826 call hasEscapes[757927] local_x[1170815]))
              const-val call_tmp[1170829]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1171141]:bool[10] "dead after last mention" "const" "temp"
              (1171143 'move' tmp[1171141](1171145 'deref' call_tmp[1170821]))
              (1170831 'move' call_tmp[1170829] tmp[1171141])
              if call_tmp[1170829]
              {
                (1171164 call =[224045] ret[1169631] EILSEQ[224356])
                (1802413 call chpl__autoDestroy[1494420] local_x[1170815])
                gotoReturn _end__write_binary_internal[1171115] _end__write_binary_internal[1171115]
              }
              const-val call_tmp[1170854]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170856 'move' call_tmp[1170854](1170859 call qio_channel_str_style[232999] _channel_internal[1169613]))
              const-val call_tmp[1170861]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170863 'move' call_tmp[1170861](1170869 call c_str[32932] local_x[1170815]))
              const-val call_tmp[1170870]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170872 'move' call_tmp[1170870](1170875 call numBytes[32807] local_x[1170815]))
              const-val call_tmp[1170878]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170880 'move' call_tmp[1170878] call_tmp[1170870])
              const-val call_tmp[1170886]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1171152]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1171158 'move' coerce_tmp[1171152](1171154 'cast' int(32)[95] 0))
              (1170888 'move' call_tmp[1170886](1170891 call qio_channel_write_string[234301] coerce_tmp[1171152] 3 call_tmp[1170854] _channel_internal[1169613] call_tmp[1170861] call_tmp[1170878]))
              (1171171 'move' ret[1169631] call_tmp[1170886])
              (1802416 call chpl__autoDestroy[1494420] local_x[1170815])
              gotoReturn _end__write_binary_internal[1171115] _end__write_binary_internal[1171115]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1171115]
    (1171117 return ret[1169631])
  }
  function _write_binary_internal[1171183](const in arg _channel_internal[1171185]:qio_channel_ptr_t[231377], const  ref arg x[1171189]:string[26]) : syserr[223496] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1171203]:syserr[223496] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1171215]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1171323]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1171769]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1172066]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1172355]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1172378]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1786463]:string[26] "temp"
              (1172386 call localize[32886] x[1171189] ret_tmp[1786463])
              (1786466 'move' call_tmp[1172378] ret_tmp[1786463])
              val local_x[1172387]:string[26] "dead at end of block" "insert auto destroy"
              (1172389 'move' local_x[1172387] call_tmp[1172378])
              ref call_tmp[1172393]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
              (1172395 'move' call_tmp[1172393](1172398 call hasEscapes[757927] local_x[1172387]))
              const-val call_tmp[1172401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1172713]:bool[10] "dead after last mention" "const" "temp"
              (1172715 'move' tmp[1172713](1172717 'deref' call_tmp[1172393]))
              (1172403 'move' call_tmp[1172401] tmp[1172713])
              if call_tmp[1172401]
              {
                (1172736 call =[224045] ret[1171203] EILSEQ[224356])
                (1802419 call chpl__autoDestroy[1494420] local_x[1172387])
                gotoReturn _end__write_binary_internal[1172687] _end__write_binary_internal[1172687]
              }
              const-val call_tmp[1172426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172428 'move' call_tmp[1172426](1172431 call qio_channel_str_style[232999] _channel_internal[1171185]))
              const-val call_tmp[1172433]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172435 'move' call_tmp[1172433](1172441 call c_str[32932] local_x[1172387]))
              const-val call_tmp[1172442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172444 'move' call_tmp[1172442](1172447 call numBytes[32807] local_x[1172387]))
              const-val call_tmp[1172450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172452 'move' call_tmp[1172450] call_tmp[1172442])
              const-val call_tmp[1172458]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1172724]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1172730 'move' coerce_tmp[1172724](1172726 'cast' int(32)[95] 0))
              (1172460 'move' call_tmp[1172458](1172463 call qio_channel_write_string[234301] coerce_tmp[1172724] 1 call_tmp[1172426] _channel_internal[1171185] call_tmp[1172433] call_tmp[1172450]))
              (1172743 'move' ret[1171203] call_tmp[1172458])
              (1802422 call chpl__autoDestroy[1494420] local_x[1172387])
              gotoReturn _end__write_binary_internal[1172687] _end__write_binary_internal[1172687]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1172687]
    (1172689 return ret[1171203])
  }
  function _ref(channel(true,dynamic,false))[1060867]._constructIoErrorMsg[1079523](const  ref arg this[1079529]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1079533]:int(64)[13], ref arg _retArg[1790223]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079537]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079549]:string[26] "dead at end of block" "insert auto destroy"
    (1079551 'move' result[1079549](1790227 call chpl__initCopy[981259] "while "))
    (1079588 call +=[38797] result[1079549] "writing ")
    val call_tmp[1079593]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079608 call +=[38797] result[1079549] "int(64)")
    {
      val tmp[1079614]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1079742 'move' ret[1079537] result[1079549])
    gotoReturn _end__constructIoErrorMsg[1079718] _end__constructIoErrorMsg[1079718]
    label _end__constructIoErrorMsg[1079718]
    (1790225 '=' _retArg[1790223] ret[1079537])
    (1790229 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._constructIoErrorMsg[1079816](const  ref arg this[1079822]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1079826]:byteIndex[28170], ref arg _retArg[1790237]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079830]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079842]:string[26] "dead at end of block" "insert auto destroy"
    (1079844 'move' result[1079842](1790241 call chpl__initCopy[981259] "while "))
    (1079881 call +=[38797] result[1079842] "writing ")
    val call_tmp[1079886]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079901 call +=[38797] result[1079842] "byteIndex")
    {
      val tmp[1079907]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1080049 'move' ret[1079830] result[1079842])
    gotoReturn _end__constructIoErrorMsg[1080011] _end__constructIoErrorMsg[1080011]
    label _end__constructIoErrorMsg[1080011]
    (1790239 '=' _retArg[1790237] ret[1079830])
    (1790243 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._constructIoErrorMsg[1173590](const  ref arg this[1173596]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1173600]:string[26], ref arg _retArg[1791456]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173604]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173616]:string[26] "dead at end of block" "insert auto destroy"
    (1173618 'move' result[1173616](1791460 call chpl__initCopy[981259] "while "))
    (1173655 call +=[38797] result[1173616] "writing ")
    val call_tmp[1173660]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173675 call +=[38797] result[1173616] "string")
    {
      val tmp[1173681]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1173809 'move' ret[1173604] result[1173616])
    gotoReturn _end__constructIoErrorMsg[1173785] _end__constructIoErrorMsg[1173785]
    label _end__constructIoErrorMsg[1173785]
    (1791458 '=' _retArg[1791456] ret[1173604])
    (1791462 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._constructIoErrorMsg[1175308](const  ref arg this[1175314]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1175318]:codepointIndex[28274], ref arg _retArg[1791470]:_ref(string)[937850]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175322]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175334]:string[26] "dead at end of block" "insert auto destroy"
    (1175336 'move' result[1175334](1791474 call chpl__initCopy[981259] "while "))
    (1175373 call +=[38797] result[1175334] "writing ")
    val call_tmp[1175378]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175393 call +=[38797] result[1175334] "codepointIndex")
    {
      val tmp[1175399]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1175543 'move' ret[1175322] result[1175334])
    gotoReturn _end__constructIoErrorMsg[1175503] _end__constructIoErrorMsg[1175503]
    label _end__constructIoErrorMsg[1175503]
    (1791472 '=' _retArg[1791470] ret[1175322])
    (1791476 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._writeOne[1066923](const  ref arg this[1066929]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1066933]:byteIndex[28170], const  ref arg loc[1066935]:locale[28], ref arg error_out[1768592]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1066945]:_ref(qio_channel_ptr_t)[936795] "dead at end of block" "maybe param" "temp"
    (1066947 'move' call_tmp[1066945](1066950 call _channel_internal[1061700] this[1066929]))
    const-val call_tmp[1066953]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1068272]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068276 'move' coerce_tmp[1068272](1068274 'deref' call_tmp[1066945]))
    val error[1768597]:Error[167938] "error variable" "temp"
    (1768599 'move' error[1768597] nil[44])
    (1066955 'move' call_tmp[1066953](1066958 call _write_one_internal[1067846] coerce_tmp[1068272] x[1066933] loc[1066935] error[1768597]))
    val errorExists[2055693]:bool[10] "temp"
    (2055698 'move' errorExists[2055693](2055695 '!=' error[1768597] nil[44]))
    if errorExists[2055693]
    {
      (1768603 '=' error_out[1768592] error[1768597])
      gotoErrorHandlingReturn _end_writeOne[1768594] _end_writeOne[1768594]
    }
    const-val err[1066963]:syserr[223496] "dead at end of block" "insert auto destroy"
    (1066965 'move' err[1066963] call_tmp[1066953])
    const-val call_tmp[1066969]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066971 'move' call_tmp[1066969](1066974 call ENOERR[223566]))
    const-val call_tmp[1066975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066977 'move' call_tmp[1066975](1066980 call !=[223766] err[1066963] call_tmp[1066969]))
    const-val call_tmp[1066983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066985 'move' call_tmp[1066983] call_tmp[1066975])
    if call_tmp[1066983]
    {
      const-val call_tmp[1066992]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1790231]:string[26] "temp"
      (1067000 call _constructIoErrorMsg[1079816] this[1066929] x[1066933] ret_tmp[1790231])
      (1790234 'move' call_tmp[1066992] ret_tmp[1790231])
      val msg[1067003]:string[26] "dead at end of block" "insert auto destroy"
      (1067005 'move' msg[1067003] call_tmp[1066992])
      const-val call_tmp[1067009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067011 'move' call_tmp[1067009](1067014 call ==[223611] err[1066963] EILSEQ[224356]))
      const-val call_tmp[1067017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067019 'move' call_tmp[1067017] call_tmp[1067009])
      if call_tmp[1067017]
      {
        const-val call_tmp[1067034]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786925]:string[26] "temp"
        (1067039 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067003] ret_tmp[1786925])
        (1786928 'move' call_tmp[1067034] ret_tmp[1786925])
        (1067043 call =[38269] msg[1067003] call_tmp[1067034])
        (1800629 call chpl__autoDestroy[1494420] call_tmp[1067034])
      }
      {
        val error[1768611]:Error[167938] "error variable" "temp"
        (1768620 'move' error[1768611] nil[44])
        (1067055 call _ch_ioerror[1062776] this[1066929] err[1066963] msg[1067003] error[1768611])
        val errorExists[2055701]:bool[10] "temp"
        (2055706 'move' errorExists[2055701](2055703 '!=' error[1768611] nil[44]))
        if errorExists[2055701]
        {
          gotoErrorHandling handler[1768612] handler[1768612]
        }
        label handler[1768612]
        const-val shouldHandleError[1768631]:bool[10] "temp"
        val errorExists[2055709]:bool[10] "temp"
        (2055714 'move' errorExists[2055709](2055711 '!=' error[1768611] nil[44]))
        (1768635 'move' shouldHandleError[1768631] errorExists[2055709])
        if shouldHandleError[1768631]
        {
          (1768627 '=' error_out[1768592] error[1768611])
          (1800632 call chpl__autoDestroy[1494420] msg[1067003])
          gotoErrorHandlingReturn _end_writeOne[1768594] _end_writeOne[1768594]
        }
      }
      (1800636 call chpl__autoDestroy[1494420] msg[1067003])
    }
    label _end_writeOne[1768594]
    (1067063 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._writeOne[1068848](const  ref arg this[1068854]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1068858]:int(64)[13], const  ref arg loc[1068860]:locale[28], ref arg error_out[1768829]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1068870]:_ref(qio_channel_ptr_t)[936795] "dead at end of block" "maybe param" "temp"
    (1068872 'move' call_tmp[1068870](1068875 call _channel_internal[1061700] this[1068854]))
    const-val call_tmp[1068878]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070116]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070120 'move' coerce_tmp[1070116](1070118 'deref' call_tmp[1068870]))
    val error[1768834]:Error[167938] "error variable" "temp"
    (1768836 'move' error[1768834] nil[44])
    (1068880 'move' call_tmp[1068878](1068883 call _write_one_internal[1068992] coerce_tmp[1070116] x[1068858] loc[1068860] error[1768834]))
    val errorExists[2055813]:bool[10] "temp"
    (2055818 'move' errorExists[2055813](2055815 '!=' error[1768834] nil[44]))
    if errorExists[2055813]
    {
      (1768840 '=' error_out[1768829] error[1768834])
      gotoErrorHandlingReturn _end_writeOne[1768831] _end_writeOne[1768831]
    }
    const-val err[1068888]:syserr[223496] "dead at end of block" "insert auto destroy"
    (1068890 'move' err[1068888] call_tmp[1068878])
    const-val call_tmp[1068894]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068896 'move' call_tmp[1068894](1068899 call ENOERR[223566]))
    const-val call_tmp[1068900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068902 'move' call_tmp[1068900](1068905 call !=[223766] err[1068888] call_tmp[1068894]))
    const-val call_tmp[1068908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068910 'move' call_tmp[1068908] call_tmp[1068900])
    if call_tmp[1068908]
    {
      const-val call_tmp[1068917]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1790217]:string[26] "temp"
      (1068925 call _constructIoErrorMsg[1079523] this[1068854] x[1068858] ret_tmp[1790217])
      (1790220 'move' call_tmp[1068917] ret_tmp[1790217])
      val msg[1068928]:string[26] "dead at end of block" "insert auto destroy"
      (1068930 'move' msg[1068928] call_tmp[1068917])
      const-val call_tmp[1068934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1068936 'move' call_tmp[1068934](1068939 call ==[223611] err[1068888] EILSEQ[224356]))
      const-val call_tmp[1068942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1068944 'move' call_tmp[1068942] call_tmp[1068934])
      if call_tmp[1068942]
      {
        const-val call_tmp[1068959]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1786931]:string[26] "temp"
        (1068964 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1068928] ret_tmp[1786931])
        (1786934 'move' call_tmp[1068959] ret_tmp[1786931])
        (1068968 call =[38269] msg[1068928] call_tmp[1068959])
        (1800695 call chpl__autoDestroy[1494420] call_tmp[1068959])
      }
      {
        val error[1768848]:Error[167938] "error variable" "temp"
        (1768857 'move' error[1768848] nil[44])
        (1068980 call _ch_ioerror[1062776] this[1068854] err[1068888] msg[1068928] error[1768848])
        val errorExists[2055821]:bool[10] "temp"
        (2055826 'move' errorExists[2055821](2055823 '!=' error[1768848] nil[44]))
        if errorExists[2055821]
        {
          gotoErrorHandling handler[1768849] handler[1768849]
        }
        label handler[1768849]
        const-val shouldHandleError[1768868]:bool[10] "temp"
        val errorExists[2055829]:bool[10] "temp"
        (2055834 'move' errorExists[2055829](2055831 '!=' error[1768848] nil[44]))
        (1768872 'move' shouldHandleError[1768868] errorExists[2055829])
        if shouldHandleError[1768868]
        {
          (1768864 '=' error_out[1768829] error[1768848])
          (1800698 call chpl__autoDestroy[1494420] msg[1068928])
          gotoErrorHandlingReturn _end_writeOne[1768831] _end_writeOne[1768831]
        }
      }
      (1800702 call chpl__autoDestroy[1494420] msg[1068928])
    }
    label _end_writeOne[1768831]
    (1068988 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._writeOne[1165071](const  ref arg this[1165077]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1165081]:string[26], const  ref arg loc[1165083]:locale[28], ref arg error_out[1769627]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1165093]:_ref(qio_channel_ptr_t)[936795] "dead at end of block" "maybe param" "temp"
    (1165095 'move' call_tmp[1165093](1165098 call _channel_internal[1061700] this[1165077]))
    const-val call_tmp[1165101]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1167941]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1167945 'move' coerce_tmp[1167941](1167943 'deref' call_tmp[1165093]))
    val error[1769632]:Error[167938] "error variable" "temp"
    (1769634 'move' error[1769632] nil[44])
    (1165103 'move' call_tmp[1165101](1165106 call _write_one_internal[1165215] coerce_tmp[1167941] x[1165081] loc[1165083] error[1769632]))
    val errorExists[2056205]:bool[10] "temp"
    (2056210 'move' errorExists[2056205](2056207 '!=' error[1769632] nil[44]))
    if errorExists[2056205]
    {
      (1769638 '=' error_out[1769627] error[1769632])
      gotoErrorHandlingReturn _end_writeOne[1769629] _end_writeOne[1769629]
    }
    const-val err[1165111]:syserr[223496] "dead at end of block" "insert auto destroy"
    (1165113 'move' err[1165111] call_tmp[1165101])
    const-val call_tmp[1165117]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165119 'move' call_tmp[1165117](1165122 call ENOERR[223566]))
    const-val call_tmp[1165123]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165125 'move' call_tmp[1165123](1165128 call !=[223766] err[1165111] call_tmp[1165117]))
    const-val call_tmp[1165131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165133 'move' call_tmp[1165131] call_tmp[1165123])
    if call_tmp[1165131]
    {
      const-val call_tmp[1165140]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791450]:string[26] "temp"
      (1165148 call _constructIoErrorMsg[1173590] this[1165077] x[1165081] ret_tmp[1791450])
      (1791453 'move' call_tmp[1165140] ret_tmp[1791450])
      val msg[1165151]:string[26] "dead at end of block" "insert auto destroy"
      (1165153 'move' msg[1165151] call_tmp[1165140])
      const-val call_tmp[1165157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165159 'move' call_tmp[1165157](1165162 call ==[223611] err[1165111] EILSEQ[224356]))
      const-val call_tmp[1165165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165167 'move' call_tmp[1165165] call_tmp[1165157])
      if call_tmp[1165165]
      {
        const-val call_tmp[1165182]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1787015]:string[26] "temp"
        (1165187 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165151] ret_tmp[1787015])
        (1787018 'move' call_tmp[1165182] ret_tmp[1787015])
        (1165191 call =[38269] msg[1165151] call_tmp[1165182])
        (1802397 call chpl__autoDestroy[1494420] call_tmp[1165182])
      }
      {
        val error[1769646]:Error[167938] "error variable" "temp"
        (1769655 'move' error[1769646] nil[44])
        (1165203 call _ch_ioerror[1062776] this[1165077] err[1165111] msg[1165151] error[1769646])
        val errorExists[2056213]:bool[10] "temp"
        (2056218 'move' errorExists[2056213](2056215 '!=' error[1769646] nil[44]))
        if errorExists[2056213]
        {
          gotoErrorHandling handler[1769647] handler[1769647]
        }
        label handler[1769647]
        const-val shouldHandleError[1769666]:bool[10] "temp"
        val errorExists[2056221]:bool[10] "temp"
        (2056226 'move' errorExists[2056221](2056223 '!=' error[1769646] nil[44]))
        (1769670 'move' shouldHandleError[1769666] errorExists[2056221])
        if shouldHandleError[1769666]
        {
          (1769662 '=' error_out[1769627] error[1769646])
          (1802400 call chpl__autoDestroy[1494420] msg[1165151])
          gotoErrorHandlingReturn _end_writeOne[1769629] _end_writeOne[1769629]
        }
      }
      (1802404 call chpl__autoDestroy[1494420] msg[1165151])
    }
    label _end_writeOne[1769629]
    (1165211 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867]._writeOne[1173824](const  ref arg this[1173830]:_ref(channel(true,dynamic,false))[1060867], const  ref arg x[1173834]:codepointIndex[28274], const  ref arg loc[1173836]:locale[28], ref arg error_out[1769691]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1173846]:_ref(qio_channel_ptr_t)[936795] "dead at end of block" "maybe param" "temp"
    (1173848 'move' call_tmp[1173846](1173851 call _channel_internal[1061700] this[1173830]))
    const-val call_tmp[1173854]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1175121]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175125 'move' coerce_tmp[1175121](1175123 'deref' call_tmp[1173846]))
    val error[1769696]:Error[167938] "error variable" "temp"
    (1769698 'move' error[1769696] nil[44])
    (1173856 'move' call_tmp[1173854](1173859 call _write_one_internal[1174695] coerce_tmp[1175121] x[1173834] loc[1173836] error[1769696]))
    val errorExists[2056237]:bool[10] "temp"
    (2056242 'move' errorExists[2056237](2056239 '!=' error[1769696] nil[44]))
    if errorExists[2056237]
    {
      (1769702 '=' error_out[1769691] error[1769696])
      gotoErrorHandlingReturn _end_writeOne[1769693] _end_writeOne[1769693]
    }
    const-val err[1173864]:syserr[223496] "dead at end of block" "insert auto destroy"
    (1173866 'move' err[1173864] call_tmp[1173854])
    const-val call_tmp[1173870]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173872 'move' call_tmp[1173870](1173875 call ENOERR[223566]))
    const-val call_tmp[1173876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173878 'move' call_tmp[1173876](1173881 call !=[223766] err[1173864] call_tmp[1173870]))
    const-val call_tmp[1173884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173886 'move' call_tmp[1173884] call_tmp[1173876])
    if call_tmp[1173884]
    {
      const-val call_tmp[1173893]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1791464]:string[26] "temp"
      (1173901 call _constructIoErrorMsg[1175308] this[1173830] x[1173834] ret_tmp[1791464])
      (1791467 'move' call_tmp[1173893] ret_tmp[1791464])
      val msg[1173904]:string[26] "dead at end of block" "insert auto destroy"
      (1173906 'move' msg[1173904] call_tmp[1173893])
      const-val call_tmp[1173910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1173912 'move' call_tmp[1173910](1173915 call ==[223611] err[1173864] EILSEQ[224356]))
      const-val call_tmp[1173918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1173920 'move' call_tmp[1173918] call_tmp[1173910])
      if call_tmp[1173918]
      {
        const-val call_tmp[1173935]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1787021]:string[26] "temp"
        (1173940 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1173904] ret_tmp[1787021])
        (1787024 'move' call_tmp[1173935] ret_tmp[1787021])
        (1173944 call =[38269] msg[1173904] call_tmp[1173935])
        (1802432 call chpl__autoDestroy[1494420] call_tmp[1173935])
      }
      {
        val error[1769710]:Error[167938] "error variable" "temp"
        (1769719 'move' error[1769710] nil[44])
        (1173956 call _ch_ioerror[1062776] this[1173830] err[1173864] msg[1173904] error[1769710])
        val errorExists[2056245]:bool[10] "temp"
        (2056250 'move' errorExists[2056245](2056247 '!=' error[1769710] nil[44]))
        if errorExists[2056245]
        {
          gotoErrorHandling handler[1769711] handler[1769711]
        }
        label handler[1769711]
        const-val shouldHandleError[1769730]:bool[10] "temp"
        val errorExists[2056253]:bool[10] "temp"
        (2056258 'move' errorExists[2056253](2056255 '!=' error[1769710] nil[44]))
        (1769734 'move' shouldHandleError[1769730] errorExists[2056253])
        if shouldHandleError[1769730]
        {
          (1769726 '=' error_out[1769691] error[1769710])
          (1802435 call chpl__autoDestroy[1494420] msg[1173904])
          gotoErrorHandlingReturn _end_writeOne[1769693] _end_writeOne[1769693]
        }
      }
      (1802439 call chpl__autoDestroy[1494420] msg[1173904])
    }
    label _end_writeOne[1769693]
    (1173964 return _void[55])
  }
  function _write_one_internal[1068992](const in arg _channel_internal[1068994]:qio_channel_ptr_t[231377], const in arg x[1068998]:int(64)[13], const  ref arg loc[1069000]:locale[28], ref arg error_out[1768876]:Error[167938]) : syserr[223496] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1069014]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1069658]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1069660 'move' call_tmp[1069658](1069663 call ENOERR[223566]))
    val e[1069664]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1070124]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1079507 call =[224045] init_coerce_tmp[1070124] call_tmp[1069658])
    (1069666 'move' e[1069664] init_coerce_tmp[1070124])
    val call_tmp[1069671]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1069710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1069758]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1069849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1069923]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1069925 'move' call_tmp[1069923](1069928 call qio_channel_binary[232969] _channel_internal[1068994]))
              val call_tmp[1069930]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1069937]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1069939 'move' binary[1069937] call_tmp[1069923])
              const-val call_tmp[1069944]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1069946 'move' call_tmp[1069944](1069949 call qio_channel_byteorder[232984] _channel_internal[1068994]))
              val call_tmp[1069951]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1069958]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1069960 'move' byteorder[1069958] call_tmp[1069944])
              const-val call_tmp[1069965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1070209]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1070215 'move' coerce_tmp[1070209](1070211 'cast' int(64)[13] binary[1069937]))
              (1069967 'move' call_tmp[1069965](1069970 call _cond_test[9912] coerce_tmp[1070209]))
              if call_tmp[1069965]
              {
                {
                  const-val tmp[1069975]:iokind[230843] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1768879]:Error[167938] "error variable" "temp"
                  (1768881 'move' error[1768879] nil[44])
                  (1069977 'move' tmp[1069975](1069980 call _cast[1070219] byteorder[1069958] error[1768879]))
                  val errorExists[2055837]:bool[10] "temp"
                  (2055842 'move' errorExists[2055837](2055839 '!=' error[1768879] nil[44]))
                  if errorExists[2055837]
                  {
                    (1768885 '=' error_out[1768876] error[1768879])
                    gotoErrorHandlingReturn _end__write_one_internal[1070112] _end__write_one_internal[1070112]
                  }
                  const-val call_tmp[1069983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1069985 'move' call_tmp[1069983](1069988 call ==[1018184] tmp[1069975] big[230838]))
                  const-val call_tmp[1069991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1069993 'move' call_tmp[1069991] call_tmp[1069983])
                  if call_tmp[1069991]
                  {
                    const-val call_tmp[1070000]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070002 'move' call_tmp[1070000](1070005 call _write_binary_internal[1073709] _channel_internal[1068994] x[1068998]))
                    (1070010 call =[224024] e[1069664] call_tmp[1070000])
                  }
                  {
                    const-val call_tmp[1070016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070018 'move' call_tmp[1070016](1070021 call ==[1018184] tmp[1069975] little[230841]))
                    const-val call_tmp[1070024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070026 'move' call_tmp[1070024] call_tmp[1070016])
                    if call_tmp[1070024]
                    {
                      const-val call_tmp[1070033]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070035 'move' call_tmp[1070033](1070038 call _write_binary_internal[1075537] _channel_internal[1068994] x[1068998]))
                      (1070043 call =[224024] e[1069664] call_tmp[1070033])
                    }
                    {
                      const-val call_tmp[1070049]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070051 'move' call_tmp[1070049](1070054 call _write_binary_internal[1077105] _channel_internal[1068994] x[1068998]))
                      (1070059 call =[224024] e[1069664] call_tmp[1070049])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1070067]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                (1070069 'move' call_tmp[1070067](1070072 call _write_text_internal[1078671] _channel_internal[1068994] x[1068998]))
                (1070076 call =[224024] e[1069664] call_tmp[1070067])
              }
            }
          }
        }
      }
    }
    (1079514 'move' ret[1069014] e[1069664])
    gotoReturn _end__write_one_internal[1070112] _end__write_one_internal[1070112]
    label _end__write_one_internal[1070112]
    (1070114 return ret[1069014])
  }
  function _write_one_internal[1165215](const in arg _channel_internal[1165217]:qio_channel_ptr_t[231377], const  ref arg x[1165221]:string[26], const  ref arg loc[1165223]:locale[28], ref arg error_out[1769674]:Error[167938]) : syserr[223496] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1165237]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1167483]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1167485 'move' call_tmp[1167483](1167488 call ENOERR[223566]))
    val e[1167489]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1167949]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1173576 call =[224045] init_coerce_tmp[1167949] call_tmp[1167483])
    (1167491 'move' e[1167489] init_coerce_tmp[1167949])
    val call_tmp[1167496]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1167535]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1167583]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1167674]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1167748]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167750 'move' call_tmp[1167748](1167753 call qio_channel_binary[232969] _channel_internal[1165217]))
              val call_tmp[1167755]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1167762]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167764 'move' binary[1167762] call_tmp[1167748])
              const-val call_tmp[1167769]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167771 'move' call_tmp[1167769](1167774 call qio_channel_byteorder[232984] _channel_internal[1165217]))
              val call_tmp[1167776]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1167783]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167785 'move' byteorder[1167783] call_tmp[1167769])
              const-val call_tmp[1167790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1168025]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1168031 'move' coerce_tmp[1168025](1168027 'cast' int(64)[13] binary[1167762]))
              (1167792 'move' call_tmp[1167790](1167795 call _cond_test[9912] coerce_tmp[1168025]))
              if call_tmp[1167790]
              {
                {
                  const-val tmp[1167800]:iokind[230843] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1769677]:Error[167938] "error variable" "temp"
                  (1769679 'move' error[1769677] nil[44])
                  (1167802 'move' tmp[1167800](1167805 call _cast[1070219] byteorder[1167783] error[1769677]))
                  val errorExists[2056229]:bool[10] "temp"
                  (2056234 'move' errorExists[2056229](2056231 '!=' error[1769677] nil[44]))
                  if errorExists[2056229]
                  {
                    (1769683 '=' error_out[1769674] error[1769677])
                    gotoErrorHandlingReturn _end__write_one_internal[1167937] _end__write_one_internal[1167937]
                  }
                  const-val call_tmp[1167808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167810 'move' call_tmp[1167808](1167813 call ==[1018184] tmp[1167800] big[230838]))
                  const-val call_tmp[1167816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167818 'move' call_tmp[1167816] call_tmp[1167808])
                  if call_tmp[1167816]
                  {
                    const-val call_tmp[1167825]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167827 'move' call_tmp[1167825](1167830 call _write_binary_internal[1168036] _channel_internal[1165217] x[1165221]))
                    (1167835 call =[224024] e[1167489] call_tmp[1167825])
                  }
                  {
                    const-val call_tmp[1167841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167843 'move' call_tmp[1167841](1167846 call ==[1018184] tmp[1167800] little[230841]))
                    const-val call_tmp[1167849]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167851 'move' call_tmp[1167849] call_tmp[1167841])
                    if call_tmp[1167849]
                    {
                      const-val call_tmp[1167858]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1167860 'move' call_tmp[1167858](1167863 call _write_binary_internal[1169611] _channel_internal[1165217] x[1165221]))
                      (1167868 call =[224024] e[1167489] call_tmp[1167858])
                    }
                    {
                      const-val call_tmp[1167874]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1167876 'move' call_tmp[1167874](1167879 call _write_binary_internal[1171183] _channel_internal[1165217] x[1165221]))
                      (1167884 call =[224024] e[1167489] call_tmp[1167874])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1167892]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
                (1167894 'move' call_tmp[1167892](1167897 call _write_text_internal[1172755] _channel_internal[1165217] x[1165221]))
                (1167901 call =[224024] e[1167489] call_tmp[1167892])
              }
            }
          }
        }
      }
    }
    (1173583 'move' ret[1165237] e[1167489])
    gotoReturn _end__write_one_internal[1167937] _end__write_one_internal[1167937]
    label _end__write_one_internal[1167937]
    (1167939 return ret[1165237])
  }
  function _write_one_internal[1067846](const in arg _channel_internal[1067848]:qio_channel_ptr_t[231377], const  ref arg x[1067852]:byteIndex[28170], const  ref arg loc[1067854]:locale[28], ref arg error_out[1768639]:Error[167938]) : syserr[223496] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1067858]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1067868]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787417]:locale[28] "temp"
    (1067873 call here[90435] ret_tmp[1787417])
    (1787420 'move' call_tmp[1067868] ret_tmp[1787417])
    const-val call_tmp[1067874]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1068281]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "temp"
    (1068284 call init[1068299] initTemp[1068281] call_tmp[1067868] _channel_internal[1067848] loc[1067854])
    (1067876 'move' call_tmp[1067874] initTemp[1068281])
    val writer[1067891]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1067893 'move' writer[1067891] call_tmp[1067874])
    const-val call_tmp[1067913]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1067915 'move' call_tmp[1067913](1067918 call ENOERR[223566]))
    const-val err[1067919]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1068435]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1079802 call =[224045] init_coerce_tmp[1068435] call_tmp[1067913])
    (1067921 'move' err[1067919] init_coerce_tmp[1068435])
    val call_tmp[1067930]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1067980]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068046]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1768641]:Error[167938] "error variable" "temp"
        (1768650 'move' error[1768641] nil[44])
        (1068253 call writeThis[1068531] x[1067852] writer[1067891] error[1768641])
        val errorExists[2055717]:bool[10] "temp"
        (2055722 'move' errorExists[2055717](2055719 '!=' error[1768641] nil[44]))
        if errorExists[2055717]
        {
          gotoErrorHandling handler[1768642] handler[1768642]
        }
        label handler[1768642]
        const-val shouldHandleError[1768661]:bool[10] "temp"
        val errorExists[2055725]:bool[10] "temp"
        (2055730 'move' errorExists[2055725](2055727 '!=' error[1768641] nil[44]))
        (1768665 'move' shouldHandleError[1768661] errorExists[2055725])
        if shouldHandleError[1768661]
        {
          (1768657 '=' error_out[1768639] error[1768641])
          ref call_tmp[1800640]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
          (1800642 'move' call_tmp[1800640](1800645 call _channel_internal[1061700] writer[1067891]))
          (1800648 call =[861391] call_tmp[1800640] QIO_CHANNEL_PTR_NULL[231380])
          (1800653 call chpl__autoDestroy[1569261] writer[1067891])
          (1800656 call chpl__autoDestroy[1494484] call_tmp[1067868])
          gotoErrorHandlingReturn _end__write_one_internal[1068268] _end__write_one_internal[1068268]
        }
      }
    }
    (1079809 'move' ret[1067858] err[1067919])
    ref call_tmp[1800660]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1800662 'move' call_tmp[1800660](1800665 call _channel_internal[1061700] writer[1067891]))
    (1800668 call =[861391] call_tmp[1800660] QIO_CHANNEL_PTR_NULL[231380])
    (1800673 call chpl__autoDestroy[1569261] writer[1067891])
    (1800676 call chpl__autoDestroy[1494484] call_tmp[1067868])
    gotoReturn _end__write_one_internal[1068268] _end__write_one_internal[1068268]
    label _end__write_one_internal[1068268]
    (1068270 return ret[1067858])
  }
  function _write_one_internal[1174695](const in arg _channel_internal[1174697]:qio_channel_ptr_t[231377], const  ref arg x[1174701]:codepointIndex[28274], const  ref arg loc[1174703]:locale[28], ref arg error_out[1769738]:Error[167938]) : syserr[223496] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1174707]:syserr[223496] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1174717]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787435]:locale[28] "temp"
    (1174722 call here[90435] ret_tmp[1787435])
    (1787438 'move' call_tmp[1174717] ret_tmp[1787435])
    const-val call_tmp[1174723]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1175130]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "temp"
    (1175133 call init[1068299] initTemp[1175130] call_tmp[1174717] _channel_internal[1174697] loc[1174703])
    (1174725 'move' call_tmp[1174723] initTemp[1175130])
    val writer[1174740]:channel(true,dynamic,false)[1060858] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1174742 'move' writer[1174740] call_tmp[1174723])
    const-val call_tmp[1174762]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1174764 'move' call_tmp[1174762](1174767 call ENOERR[223566]))
    const-val err[1174768]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1175160]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1175294 call =[224045] init_coerce_tmp[1175160] call_tmp[1174762])
    (1174770 'move' err[1174768] init_coerce_tmp[1175160])
    val call_tmp[1174779]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1174829]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1174895]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1769740]:Error[167938] "error variable" "temp"
        (1769749 'move' error[1769740] nil[44])
        (1175102 call writeThis[1175256] x[1174701] writer[1174740] error[1769740])
        val errorExists[2056261]:bool[10] "temp"
        (2056266 'move' errorExists[2056261](2056263 '!=' error[1769740] nil[44]))
        if errorExists[2056261]
        {
          gotoErrorHandling handler[1769741] handler[1769741]
        }
        label handler[1769741]
        const-val shouldHandleError[1769760]:bool[10] "temp"
        val errorExists[2056269]:bool[10] "temp"
        (2056274 'move' errorExists[2056269](2056271 '!=' error[1769740] nil[44]))
        (1769764 'move' shouldHandleError[1769760] errorExists[2056269])
        if shouldHandleError[1769760]
        {
          (1769756 '=' error_out[1769738] error[1769740])
          ref call_tmp[1802443]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
          (1802445 'move' call_tmp[1802443](1802448 call _channel_internal[1061700] writer[1174740]))
          (1802451 call =[861391] call_tmp[1802443] QIO_CHANNEL_PTR_NULL[231380])
          (1802456 call chpl__autoDestroy[1569261] writer[1174740])
          (1802459 call chpl__autoDestroy[1494484] call_tmp[1174717])
          gotoErrorHandlingReturn _end__write_one_internal[1175117] _end__write_one_internal[1175117]
        }
      }
    }
    (1175301 'move' ret[1174707] err[1174768])
    ref call_tmp[1802463]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1802465 'move' call_tmp[1802463](1802468 call _channel_internal[1061700] writer[1174740]))
    (1802471 call =[861391] call_tmp[1802463] QIO_CHANNEL_PTR_NULL[231380])
    (1802476 call chpl__autoDestroy[1569261] writer[1174740])
    (1802479 call chpl__autoDestroy[1494484] call_tmp[1174717])
    gotoReturn _end__write_one_internal[1175117] _end__write_one_internal[1175117]
    label _end__write_one_internal[1175117]
    (1175119 return ret[1174707])
  }
  function _ref(channel(true,dynamic,false))[1060867].writeIt[1068697](const  ref arg this[1068703]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1068705]:int(64)[13], ref arg error_out[1768752]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1068741]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790167]:locale[28] "temp"
    (1068749 call getLocaleOfIoRequest[1066122] this[1068703] ret_tmp[1790167])
    (1790170 'move' call_tmp[1068741] ret_tmp[1790167])
    const-val origLocale[1068750]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068752 'move' origLocale[1068750] call_tmp[1068741])
    const-val tmp[1068756]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1068758]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1068760 'move' call_tmp[1068758](1068763 call home[1061666] this[1068703]))
    const-val call_tmp[1068766]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1068834]:BaseLocale[91201] "dead after last mention" "temp"
    (1068839 'move' _locale_tmp_[1068834](1068836 call _value[89981] call_tmp[1068758]))
    (1068768 'move' call_tmp[1068766](1068770 '_wide_get_locale' _locale_tmp_[1068834]))
    (1068772 'move' tmp[1068756] call_tmp[1068766])
    val error[1768757]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768759 'move' error[1768757] nil[44])
    val rvfDerefTmp[2032522]:locale[28] "temp"
    (2032525 'move' rvfDerefTmp[2032522] origLocale[1068750])
    val isdirect[2038411]:bool[10] "temp"
    (2038416 'move' isdirect[2038411](2038413 call chpl_doDirectExecuteOn[187423] tmp[1068756]))
    if isdirect[2038411]
    {
      (2038420 call on_fn[1068779] this[1068703] x[1068705] rvfDerefTmp[2032522] error[1768757])
    }
    {
      val _args_foron_fn[2038444]:_class_localson_fn[2038430] "temp"
      (2038448 'move' _args_foron_fn[2038444](2038446 'stack allocate class' _class_localson_fn[2038430]))
      (2038450 '.=' _args_foron_fn[2038444] _0_tmp[2038433] tmp[1068756])
      ref tmp[2038454]:channel(true,dynamic,false)[1060858] "temp"
      (2038458 'move' tmp[2038454](2038456 'set reference' this[1068703]))
      (2038460 '.=' _args_foron_fn[2038444] _1_this[2038435] tmp[2038454])
      (2038464 '.=' _args_foron_fn[2038444] _2_x[2038437] x[1068705])
      (2038468 '.=' _args_foron_fn[2038444] _3_rvfDerefTmp[2038439] rvfDerefTmp[2032522])
      ref tmp[2038472]:Error[167938] "temp"
      (2038476 'move' tmp[2038472](2038474 'set reference' error[1768757]))
      (2038478 '.=' _args_foron_fn[2038444] _4_error[2038441] tmp[2038472])
      val _args_vforon_fn[2038482]:c_void_ptr[149] "temp"
      (2038486 'move' _args_vforon_fn[2038482](2038484 'cast_to_void_star' _args_foron_fn[2038444]))
      val _args_sizeon_fn[2038488]:int(64)[13] "temp"
      (2038492 'move' _args_sizeon_fn[2038488](2038490 'sizeof_bundle' _class_localson_fn[2038430]))
      on(2038548 call wrapon_fn[2038494] tmp[1068756] _args_vforon_fn[2038482] _args_sizeon_fn[2038488] _args_foron_fn[2038444])
    }
    val errorExists[2055773]:bool[10] "temp"
    (2055778 'move' errorExists[2055773](2055775 '!=' error[1768757] nil[44]))
    if errorExists[2055773]
    {
      (1768763 '=' error_out[1768752] error[1768757])
      (1800679 call chpl__autoDestroy[1494484] origLocale[1068750])
      gotoErrorHandlingReturn _endwriteIt[1768754] _endwriteIt[1768754]
    }
    {
    }
    (1800682 call chpl__autoDestroy[1494484] origLocale[1068750])
    label _endwriteIt[1768754]
    (1068823 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060867].readwrite[1068632](const  ref arg this[1068638]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1068640]:int(64)[13], ref arg error_out[1768720]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1768724]:Error[167938] "error variable" "temp"
      (1768733 'move' error[1768724] nil[44])
      (1068691 call writeIt[1068697] this[1068638] x[1068640] error[1768724])
      val errorExists[2055757]:bool[10] "temp"
      (2055762 'move' errorExists[2055757](2055759 '!=' error[1768724] nil[44]))
      if errorExists[2055757]
      {
        gotoErrorHandling handler[1768725] handler[1768725]
      }
      label handler[1768725]
      const-val shouldHandleError[1768744]:bool[10] "temp"
      val errorExists[2055765]:bool[10] "temp"
      (2055770 'move' errorExists[2055765](2055767 '!=' error[1768724] nil[44]))
      (1768748 'move' shouldHandleError[1768744] errorExists[2055765])
      if shouldHandleError[1768744]
      {
        (1768740 '=' error_out[1768720] error[1768724])
        gotoErrorHandlingReturn _endreadwrite[1768722] _endreadwrite[1768722]
      }
    }
    label _endreadwrite[1768722]
    (1068694 return _void[55])
  }
  function <~>[1068559](const  ref arg ch[1068561]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1068563]:int(64)[13], ref arg error_out[1768688]:Error[167938]) const ref : _ref(channel(true,dynamic,false))[1060867] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1068570]:_ref(channel(true,dynamic,false))[1060867] "dead after last mention" "RVV" "temp"
    {
      val error[1768692]:Error[167938] "error variable" "temp"
      (1768701 'move' error[1768692] nil[44])
      (1068616 call readwrite[1068632] ch[1068561] x[1068563] error[1768692])
      val errorExists[2055741]:bool[10] "temp"
      (2055746 'move' errorExists[2055741](2055743 '!=' error[1768692] nil[44]))
      if errorExists[2055741]
      {
        gotoErrorHandling handler[1768693] handler[1768693]
      }
      label handler[1768693]
      const-val shouldHandleError[1768712]:bool[10] "temp"
      val errorExists[2055749]:bool[10] "temp"
      (2055754 'move' errorExists[2055749](2055751 '!=' error[1768692] nil[44]))
      (1768716 'move' shouldHandleError[1768712] errorExists[2055749])
      if shouldHandleError[1768712]
      {
        (1768708 '=' error_out[1768688] error[1768692])
        gotoErrorHandlingReturn _end<~>[1768690] _end<~>[1768690]
      }
    }
    (1068619 'move' ret[1068570] ch[1068561])
    label _end<~>[1768690]
    (1068623 return ret[1068570])
  }
  function stringify[958698](const in arg _e0_args[958700]:c_string[19], ref arg _retArg[1788891]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[958710]:1*c_string[959373] "insert auto destroy"
    const-val ret_tmp[1788899]:1*c_string[959373] "temp"
    (958715 call chpl__init_tuple[959391] _e0_args[958700] ret_tmp[1788899])
    (1788902 'move' args[958710] ret_tmp[1788899])
    const-val ret[958704]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[958736]:string[26] "dead at end of block" "insert auto destroy"
      (958738 'move' str[958736](1788895 call chpl__initCopy[981259] ""))
      {
        const-val i[958743]:int(64)[13] "dead at end of block" "insert auto destroy"
        (958745 'move' i[958743] 0)
        {
          {
            {
              {
                {
                  val error[1767591]:Error[167938] "error variable" "temp"
                  (1767607 'move' error[1767591] nil[44])
                  ref call_tmp[963615]:_ref(c_string)[937138] "dead after last mention" "maybe param" "temp"
                  (963617 'move' call_tmp[963615](963932 '.' args[958710] x0[959371]))
                  const-val call_tmp[963622]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val coerce_tmp[963950]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (963954 'move' coerce_tmp[963950](963952 'deref' call_tmp[963615]))
                  const-val default_arg_length[963981]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  (963986 'move' default_arg_length[963981](963983 call createStringWithNewBuffer_default_length[963957] coerce_tmp[963950] error[1767591]))
                  val errorExists[2055229]:bool[10] "temp"
                  (2055234 'move' errorExists[2055229](2055231 '!=' error[1767591] nil[44]))
                  if errorExists[2055229]
                  {
                    gotoErrorHandling handler[1767592] handler[1767592]
                  }
                  const-val ret_tmp[1785987]:string[26] "temp"
                  (963627 call createStringWithNewBuffer[30410] coerce_tmp[963950] default_arg_length[963981] replace[173648] error[1767591] ret_tmp[1785987])
                  (1785990 'move' call_tmp[963622] ret_tmp[1785987])
                  val errorExists[2055237]:bool[10] "temp"
                  (2055242 'move' errorExists[2055237](2055239 '!=' error[1767591] nil[44]))
                  if errorExists[2055237]
                  {
                    gotoErrorHandling handler[1767592] handler[1767592]
                  }
                  (963632 call +=[38797] str[958736] call_tmp[963622])
                  (1799186 call chpl__autoDestroy[1494420] call_tmp[963622])
                  label handler[1767592]
                  const-val shouldHandleError[1767616]:bool[10] "temp"
                  val errorExists[2055245]:bool[10] "temp"
                  (2055250 'move' errorExists[2055245](2055247 '!=' error[1767591] nil[44]))
                  (1767620 'move' shouldHandleError[1767616] errorExists[2055245])
                  if shouldHandleError[1767616]
                  {
                    (1767613 call chpl_uncaught_error[170243] error[1767591])
                  }
                }
              }
            }
          }
        }
        label _continueLabel0[963533]
        label _unused_continueLabel[959134]
        label _breakLabel[959136]
      }
      (980771 'move' ret[958704] str[958736])
      (1799189 call chpl__autoDestroy[1498157] args[958710])
      gotoReturn _end_stringify[959361] _end_stringify[959361]
    }
    (1799192 call chpl__autoDestroy[1498157] args[958710])
    label _end_stringify[959361]
    (1788893 '=' _retArg[1788891] ret[958704])
    (1788897 return _void[55])
  }
  function stringify[1056317](const  ref arg _e0_args[1056319]:byteIndex[28170], ref arg _retArg[1789831]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1056329]:1*byteIndex[1056992] "insert auto destroy"
    const-val ret_tmp[1789837]:1*byteIndex[1056992] "temp"
    (1056334 call chpl__init_tuple[1057010] _e0_args[1056319] ret_tmp[1789837])
    (1789840 'move' args[1056329] ret_tmp[1789837])
    const-val ret[1056323]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1767996]:Error[167938] "error variable" "temp"
        (1768181 'move' error[1767996] nil[44])
        const-val call_tmp[1056768]:file[235492] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1060490]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1060494 'move' default_arg_style[1060490](1060492 call openmem_default_style[1060470] error[1767996]))
        val errorExists[2055397]:bool[10] "temp"
        (2055402 'move' errorExists[2055397](2055399 '!=' error[1767996] nil[44]))
        if errorExists[2055397]
        {
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val ret_tmp[1788361]:file[235492] "temp"
        (1056773 call openmem[237537] default_arg_style[1060490] error[1767996] ret_tmp[1788361])
        (1788364 'move' call_tmp[1056768] ret_tmp[1788361])
        val errorExists[2055405]:bool[10] "temp"
        (2055410 'move' errorExists[2055405](2055407 '!=' error[1767996] nil[44]))
        if errorExists[2055405]
        {
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val f[1056774]:file[235492] "dead at end of block" "insert auto destroy"
        (1056776 'move' f[1056774] call_tmp[1056768])
        const-val call_tmp[1056791]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1061100]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061106 'move' default_arg_start[1061100](1061102 call writer_default_start[1061064] f[1056774] error[1767996]))
        val errorExists[2055413]:bool[10] "temp"
        (2055418 'move' errorExists[2055413](2055415 '!=' error[1767996] nil[44]))
        if errorExists[2055413]
        {
          {
            val error[1799628]:Error[167938] "error variable" "temp"
            (1799630 'move' error[1799628] nil[44])
            (1799634 call close[235936] f[1056774] error[1799628])
            val errorExists[2056845]:bool[10] "temp"
            (2056850 'move' errorExists[2056845](2056847 '!=' error[1799628] nil[44]))
            if errorExists[2056845]
            {
              gotoErrorHandling handler[1799645] handler[1799645]
            }
            label handler[1799645]
            const-val shouldHandleError[1799647]:bool[10] "temp"
            val errorExists[2056853]:bool[10] "temp"
            (2056858 'move' errorExists[2056853](2056855 '!=' error[1799628] nil[44]))
            (1799649 'move' shouldHandleError[1799647] errorExists[2056853])
            if shouldHandleError[1799647]
            {
              (1799656 call chpl_uncaught_error[170243] error[1799628])
            }
          }
          (1799659 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_end[1061163]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061169 'move' default_arg_end[1061163](1061165 call writer_default_end[1061110] f[1056774] error[1767996]))
        val errorExists[2055421]:bool[10] "temp"
        (2055426 'move' errorExists[2055421](2055423 '!=' error[1767996] nil[44]))
        if errorExists[2055421]
        {
          {
            val error[1799664]:Error[167938] "error variable" "temp"
            (1799666 'move' error[1799664] nil[44])
            (1799670 call close[235936] f[1056774] error[1799664])
            val errorExists[2056861]:bool[10] "temp"
            (2056866 'move' errorExists[2056861](2056863 '!=' error[1799664] nil[44]))
            if errorExists[2056861]
            {
              gotoErrorHandling handler[1799681] handler[1799681]
            }
            label handler[1799681]
            const-val shouldHandleError[1799683]:bool[10] "temp"
            val errorExists[2056869]:bool[10] "temp"
            (2056874 'move' errorExists[2056869](2056871 '!=' error[1799664] nil[44]))
            (1799685 'move' shouldHandleError[1799683] errorExists[2056869])
            if shouldHandleError[1799683]
            {
              (1799692 call chpl_uncaught_error[170243] error[1799664])
            }
          }
          (1799695 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_hints[1061213]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061219 'move' default_arg_hints[1061213](1061215 call writer_default_hints[1061173] f[1056774] error[1767996]))
        val errorExists[2055429]:bool[10] "temp"
        (2055434 'move' errorExists[2055429](2055431 '!=' error[1767996] nil[44]))
        if errorExists[2055429]
        {
          {
            val error[1799700]:Error[167938] "error variable" "temp"
            (1799702 'move' error[1799700] nil[44])
            (1799706 call close[235936] f[1056774] error[1799700])
            val errorExists[2056877]:bool[10] "temp"
            (2056882 'move' errorExists[2056877](2056879 '!=' error[1799700] nil[44]))
            if errorExists[2056877]
            {
              gotoErrorHandling handler[1799717] handler[1799717]
            }
            label handler[1799717]
            const-val shouldHandleError[1799719]:bool[10] "temp"
            val errorExists[2056885]:bool[10] "temp"
            (2056890 'move' errorExists[2056885](2056887 '!=' error[1799700] nil[44]))
            (1799721 'move' shouldHandleError[1799719] errorExists[2056885])
            if shouldHandleError[1799719]
            {
              (1799728 call chpl_uncaught_error[170243] error[1799700])
            }
          }
          (1799731 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_style[1061249]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1061255 'move' default_arg_style[1061249](1061251 call writer_default_style[1061223] f[1056774] error[1767996]))
        val errorExists[2055437]:bool[10] "temp"
        (2055442 'move' errorExists[2055437](2055439 '!=' error[1767996] nil[44]))
        if errorExists[2055437]
        {
          {
            val error[1799736]:Error[167938] "error variable" "temp"
            (1799738 'move' error[1799736] nil[44])
            (1799742 call close[235936] f[1056774] error[1799736])
            val errorExists[2056893]:bool[10] "temp"
            (2056898 'move' errorExists[2056893](2056895 '!=' error[1799736] nil[44]))
            if errorExists[2056893]
            {
              gotoErrorHandling handler[1799753] handler[1799753]
            }
            label handler[1799753]
            const-val shouldHandleError[1799755]:bool[10] "temp"
            val errorExists[2056901]:bool[10] "temp"
            (2056906 'move' errorExists[2056901](2056903 '!=' error[1799736] nil[44]))
            (1799757 'move' shouldHandleError[1799755] errorExists[2056901])
            if shouldHandleError[1799755]
            {
              (1799764 call chpl_uncaught_error[170243] error[1799736])
            }
          }
          (1799767 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val ret_tmp[1789855]:channel(true,dynamic,false)[1060858] "temp"
        (1056799 call writer[1060764] f[1056774] default_arg_start[1061100] default_arg_end[1061163] default_arg_hints[1061213] default_arg_style[1061249] error[1767996] ret_tmp[1789855])
        (1789858 'move' call_tmp[1056791] ret_tmp[1789855])
        val errorExists[2055445]:bool[10] "temp"
        (2055450 'move' errorExists[2055445](2055447 '!=' error[1767996] nil[44]))
        if errorExists[2055445]
        {
          {
            val error[1799772]:Error[167938] "error variable" "temp"
            (1799774 'move' error[1799772] nil[44])
            (1799778 call close[235936] f[1056774] error[1799772])
            val errorExists[2056909]:bool[10] "temp"
            (2056914 'move' errorExists[2056909](2056911 '!=' error[1799772] nil[44]))
            if errorExists[2056909]
            {
              gotoErrorHandling handler[1799789] handler[1799789]
            }
            label handler[1799789]
            const-val shouldHandleError[1799791]:bool[10] "temp"
            val errorExists[2056917]:bool[10] "temp"
            (2056922 'move' errorExists[2056917](2056919 '!=' error[1799772] nil[44]))
            (1799793 'move' shouldHandleError[1799791] errorExists[2056917])
            if shouldHandleError[1799791]
            {
              (1799800 call chpl_uncaught_error[170243] error[1799772])
            }
          }
          (1799803 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val w[1056802]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
        (1056804 'move' w[1056802] call_tmp[1056791])
        ref _tuple_expand_tmp_0[1065641]:_ref(byteIndex)[948670] "dead after last mention" "temp"
        (1065647 'move' _tuple_expand_tmp_0[1065641](1065651 '.v' args[1056329] x0[1056990]))
        const-val _return_tmp_[1759277]:bool[10] "dead after last mention" "temp"
        (1759279 'move' _return_tmp_[1759277](1056823 call write[1065867] w[1056802] _tuple_expand_tmp_0[1065641] error[1767996]))
        val errorExists[2055453]:bool[10] "temp"
        (2055458 'move' errorExists[2055453](2055455 '!=' error[1767996] nil[44]))
        if errorExists[2055453]
        {
          {
            val error[1799808]:Error[167938] "error variable" "temp"
            (1799810 'move' error[1799808] nil[44])
            (1799814 call close[1062273] w[1056802] error[1799808])
            val errorExists[2056925]:bool[10] "temp"
            (2056930 'move' errorExists[2056925](2056927 '!=' error[1799808] nil[44]))
            if errorExists[2056925]
            {
              gotoErrorHandling handler[1799825] handler[1799825]
            }
            label handler[1799825]
            const-val shouldHandleError[1799827]:bool[10] "temp"
            val errorExists[2056933]:bool[10] "temp"
            (2056938 'move' errorExists[2056933](2056935 '!=' error[1799808] nil[44]))
            (1799829 'move' shouldHandleError[1799827] errorExists[2056933])
            if shouldHandleError[1799827]
            {
              (1799836 call chpl_uncaught_error[170243] error[1799808])
            }
          }
          (1799839 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1799844]:Error[167938] "error variable" "temp"
            (1799846 'move' error[1799844] nil[44])
            (1799850 call close[235936] f[1056774] error[1799844])
            val errorExists[2056941]:bool[10] "temp"
            (2056946 'move' errorExists[2056941](2056943 '!=' error[1799844] nil[44]))
            if errorExists[2056941]
            {
              gotoErrorHandling handler[1799861] handler[1799861]
            }
            label handler[1799861]
            const-val shouldHandleError[1799863]:bool[10] "temp"
            val errorExists[2056949]:bool[10] "temp"
            (2056954 'move' errorExists[2056949](2056951 '!=' error[1799844] nil[44]))
            (1799865 'move' shouldHandleError[1799863] errorExists[2056949])
            if shouldHandleError[1799863]
            {
              (1799872 call chpl_uncaught_error[170243] error[1799844])
            }
          }
          (1799875 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val call_tmp[1056828]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1056830 'move' call_tmp[1056828](1056836 call offset[1080059] w[1056802]))
        const-val offset[1056837]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1056839 'move' offset[1056837] call_tmp[1056828])
        val call_tmp[1056843]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1056850]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1056852 'move' call_tmp[1056850](1056855 call +[949577] offset[1056837]))
        val call_tmp[1056858]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
        (1056860 'move' call_tmp[1056858](1056863 call c_malloc[1080214] call_tmp[1056850]))
        val buf[1056866]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
        (1056868 'move' buf[1056866] call_tmp[1056858])
        const-val call_tmp[1056872]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1080835]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080841 'move' default_arg_start[1080835](1080837 call reader_default_start[1080799] f[1056774] error[1767996]))
        val errorExists[2055461]:bool[10] "temp"
        (2055466 'move' errorExists[2055461](2055463 '!=' error[1767996] nil[44]))
        if errorExists[2055461]
        {
          {
            val error[1799880]:Error[167938] "error variable" "temp"
            (1799882 'move' error[1799880] nil[44])
            (1799886 call close[1062273] w[1056802] error[1799880])
            val errorExists[2056957]:bool[10] "temp"
            (2056962 'move' errorExists[2056957](2056959 '!=' error[1799880] nil[44]))
            if errorExists[2056957]
            {
              gotoErrorHandling handler[1799897] handler[1799897]
            }
            label handler[1799897]
            const-val shouldHandleError[1799899]:bool[10] "temp"
            val errorExists[2056965]:bool[10] "temp"
            (2056970 'move' errorExists[2056965](2056967 '!=' error[1799880] nil[44]))
            (1799901 'move' shouldHandleError[1799899] errorExists[2056965])
            if shouldHandleError[1799899]
            {
              (1799908 call chpl_uncaught_error[170243] error[1799880])
            }
          }
          (1799911 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1799916]:Error[167938] "error variable" "temp"
            (1799918 'move' error[1799916] nil[44])
            (1799922 call close[235936] f[1056774] error[1799916])
            val errorExists[2056973]:bool[10] "temp"
            (2056978 'move' errorExists[2056973](2056975 '!=' error[1799916] nil[44]))
            if errorExists[2056973]
            {
              gotoErrorHandling handler[1799933] handler[1799933]
            }
            label handler[1799933]
            const-val shouldHandleError[1799935]:bool[10] "temp"
            val errorExists[2056981]:bool[10] "temp"
            (2056986 'move' errorExists[2056981](2056983 '!=' error[1799916] nil[44]))
            (1799937 'move' shouldHandleError[1799935] errorExists[2056981])
            if shouldHandleError[1799935]
            {
              (1799944 call chpl_uncaught_error[170243] error[1799916])
            }
          }
          (1799947 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_end[1080898]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080904 'move' default_arg_end[1080898](1080900 call reader_default_end[1080845] f[1056774] error[1767996]))
        val errorExists[2055469]:bool[10] "temp"
        (2055474 'move' errorExists[2055469](2055471 '!=' error[1767996] nil[44]))
        if errorExists[2055469]
        {
          {
            val error[1799952]:Error[167938] "error variable" "temp"
            (1799954 'move' error[1799952] nil[44])
            (1799958 call close[1062273] w[1056802] error[1799952])
            val errorExists[2056989]:bool[10] "temp"
            (2056994 'move' errorExists[2056989](2056991 '!=' error[1799952] nil[44]))
            if errorExists[2056989]
            {
              gotoErrorHandling handler[1799969] handler[1799969]
            }
            label handler[1799969]
            const-val shouldHandleError[1799971]:bool[10] "temp"
            val errorExists[2056997]:bool[10] "temp"
            (2057002 'move' errorExists[2056997](2056999 '!=' error[1799952] nil[44]))
            (1799973 'move' shouldHandleError[1799971] errorExists[2056997])
            if shouldHandleError[1799971]
            {
              (1799980 call chpl_uncaught_error[170243] error[1799952])
            }
          }
          (1799983 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1799988]:Error[167938] "error variable" "temp"
            (1799990 'move' error[1799988] nil[44])
            (1799994 call close[235936] f[1056774] error[1799988])
            val errorExists[2057005]:bool[10] "temp"
            (2057010 'move' errorExists[2057005](2057007 '!=' error[1799988] nil[44]))
            if errorExists[2057005]
            {
              gotoErrorHandling handler[1800005] handler[1800005]
            }
            label handler[1800005]
            const-val shouldHandleError[1800007]:bool[10] "temp"
            val errorExists[2057013]:bool[10] "temp"
            (2057018 'move' errorExists[2057013](2057015 '!=' error[1799988] nil[44]))
            (1800009 'move' shouldHandleError[1800007] errorExists[2057013])
            if shouldHandleError[1800007]
            {
              (1800016 call chpl_uncaught_error[170243] error[1799988])
            }
          }
          (1800019 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_hints[1080945]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080951 'move' default_arg_hints[1080945](1080947 call reader_default_hints[1080908] f[1056774] error[1767996]))
        val errorExists[2055477]:bool[10] "temp"
        (2055482 'move' errorExists[2055477](2055479 '!=' error[1767996] nil[44]))
        if errorExists[2055477]
        {
          {
            val error[1800024]:Error[167938] "error variable" "temp"
            (1800026 'move' error[1800024] nil[44])
            (1800030 call close[1062273] w[1056802] error[1800024])
            val errorExists[2057021]:bool[10] "temp"
            (2057026 'move' errorExists[2057021](2057023 '!=' error[1800024] nil[44]))
            if errorExists[2057021]
            {
              gotoErrorHandling handler[1800041] handler[1800041]
            }
            label handler[1800041]
            const-val shouldHandleError[1800043]:bool[10] "temp"
            val errorExists[2057029]:bool[10] "temp"
            (2057034 'move' errorExists[2057029](2057031 '!=' error[1800024] nil[44]))
            (1800045 'move' shouldHandleError[1800043] errorExists[2057029])
            if shouldHandleError[1800043]
            {
              (1800052 call chpl_uncaught_error[170243] error[1800024])
            }
          }
          (1800055 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1800060]:Error[167938] "error variable" "temp"
            (1800062 'move' error[1800060] nil[44])
            (1800066 call close[235936] f[1056774] error[1800060])
            val errorExists[2057037]:bool[10] "temp"
            (2057042 'move' errorExists[2057037](2057039 '!=' error[1800060] nil[44]))
            if errorExists[2057037]
            {
              gotoErrorHandling handler[1800077] handler[1800077]
            }
            label handler[1800077]
            const-val shouldHandleError[1800079]:bool[10] "temp"
            val errorExists[2057045]:bool[10] "temp"
            (2057050 'move' errorExists[2057045](2057047 '!=' error[1800060] nil[44]))
            (1800081 'move' shouldHandleError[1800079] errorExists[2057045])
            if shouldHandleError[1800079]
            {
              (1800088 call chpl_uncaught_error[170243] error[1800060])
            }
          }
          (1800091 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val default_arg_style[1080981]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1080987 'move' default_arg_style[1080981](1080983 call reader_default_style[1080955] f[1056774] error[1767996]))
        val errorExists[2055485]:bool[10] "temp"
        (2055490 'move' errorExists[2055485](2055487 '!=' error[1767996] nil[44]))
        if errorExists[2055485]
        {
          {
            val error[1800096]:Error[167938] "error variable" "temp"
            (1800098 'move' error[1800096] nil[44])
            (1800102 call close[1062273] w[1056802] error[1800096])
            val errorExists[2057053]:bool[10] "temp"
            (2057058 'move' errorExists[2057053](2057055 '!=' error[1800096] nil[44]))
            if errorExists[2057053]
            {
              gotoErrorHandling handler[1800113] handler[1800113]
            }
            label handler[1800113]
            const-val shouldHandleError[1800115]:bool[10] "temp"
            val errorExists[2057061]:bool[10] "temp"
            (2057066 'move' errorExists[2057061](2057063 '!=' error[1800096] nil[44]))
            (1800117 'move' shouldHandleError[1800115] errorExists[2057061])
            if shouldHandleError[1800115]
            {
              (1800124 call chpl_uncaught_error[170243] error[1800096])
            }
          }
          (1800127 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1800132]:Error[167938] "error variable" "temp"
            (1800134 'move' error[1800132] nil[44])
            (1800138 call close[235936] f[1056774] error[1800132])
            val errorExists[2057069]:bool[10] "temp"
            (2057074 'move' errorExists[2057069](2057071 '!=' error[1800132] nil[44]))
            if errorExists[2057069]
            {
              gotoErrorHandling handler[1800149] handler[1800149]
            }
            label handler[1800149]
            const-val shouldHandleError[1800151]:bool[10] "temp"
            val errorExists[2057077]:bool[10] "temp"
            (2057082 'move' errorExists[2057077](2057079 '!=' error[1800132] nil[44]))
            (1800153 'move' shouldHandleError[1800151] errorExists[2057077])
            if shouldHandleError[1800151]
            {
              (1800160 call chpl_uncaught_error[170243] error[1800132])
            }
          }
          (1800163 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val ret_tmp[1790245]:channel(false,dynamic,false)[1080593] "temp"
        (1056880 call reader[1080499] f[1056774] default_arg_start[1080835] default_arg_end[1080898] default_arg_hints[1080945] default_arg_style[1080981] error[1767996] ret_tmp[1790245])
        (1790248 'move' call_tmp[1056872] ret_tmp[1790245])
        val errorExists[2055493]:bool[10] "temp"
        (2055498 'move' errorExists[2055493](2055495 '!=' error[1767996] nil[44]))
        if errorExists[2055493]
        {
          {
            val error[1800168]:Error[167938] "error variable" "temp"
            (1800170 'move' error[1800168] nil[44])
            (1800174 call close[1062273] w[1056802] error[1800168])
            val errorExists[2057085]:bool[10] "temp"
            (2057090 'move' errorExists[2057085](2057087 '!=' error[1800168] nil[44]))
            if errorExists[2057085]
            {
              gotoErrorHandling handler[1800185] handler[1800185]
            }
            label handler[1800185]
            const-val shouldHandleError[1800187]:bool[10] "temp"
            val errorExists[2057093]:bool[10] "temp"
            (2057098 'move' errorExists[2057093](2057095 '!=' error[1800168] nil[44]))
            (1800189 'move' shouldHandleError[1800187] errorExists[2057093])
            if shouldHandleError[1800187]
            {
              (1800196 call chpl_uncaught_error[170243] error[1800168])
            }
          }
          (1800199 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1800204]:Error[167938] "error variable" "temp"
            (1800206 'move' error[1800204] nil[44])
            (1800210 call close[235936] f[1056774] error[1800204])
            val errorExists[2057101]:bool[10] "temp"
            (2057106 'move' errorExists[2057101](2057103 '!=' error[1800204] nil[44]))
            if errorExists[2057101]
            {
              gotoErrorHandling handler[1800221] handler[1800221]
            }
            label handler[1800221]
            const-val shouldHandleError[1800223]:bool[10] "temp"
            val errorExists[2057109]:bool[10] "temp"
            (2057114 'move' errorExists[2057109](2057111 '!=' error[1800204] nil[44]))
            (1800225 'move' shouldHandleError[1800223] errorExists[2057109])
            if shouldHandleError[1800223]
            {
              (1800232 call chpl_uncaught_error[170243] error[1800204])
            }
          }
          (1800235 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val r[1056883]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
        (1056885 'move' r[1056883] call_tmp[1056872])
        const-val call_tmp[1056900]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1056902 'move' call_tmp[1056900] offset[1056837])
        (1056912 call readBytes[1082750] r[1056883] buf[1056866] call_tmp[1056900] error[1767996])
        val errorExists[2055501]:bool[10] "temp"
        (2055506 'move' errorExists[2055501](2055503 '!=' error[1767996] nil[44]))
        if errorExists[2055501]
        {
          {
            val error[1800240]:Error[167938] "error variable" "temp"
            (1800242 'move' error[1800240] nil[44])
            (1800246 call close[1082005] r[1056883] error[1800240])
            val errorExists[2057117]:bool[10] "temp"
            (2057122 'move' errorExists[2057117](2057119 '!=' error[1800240] nil[44]))
            if errorExists[2057117]
            {
              gotoErrorHandling handler[1800257] handler[1800257]
            }
            label handler[1800257]
            const-val shouldHandleError[1800259]:bool[10] "temp"
            val errorExists[2057125]:bool[10] "temp"
            (2057130 'move' errorExists[2057125](2057127 '!=' error[1800240] nil[44]))
            (1800261 'move' shouldHandleError[1800259] errorExists[2057125])
            if shouldHandleError[1800259]
            {
              (1800268 call chpl_uncaught_error[170243] error[1800240])
            }
          }
          (1800271 call chpl__autoDestroy[1573515] r[1056883])
          {
            val error[1800276]:Error[167938] "error variable" "temp"
            (1800278 'move' error[1800276] nil[44])
            (1800282 call close[1062273] w[1056802] error[1800276])
            val errorExists[2057133]:bool[10] "temp"
            (2057138 'move' errorExists[2057133](2057135 '!=' error[1800276] nil[44]))
            if errorExists[2057133]
            {
              gotoErrorHandling handler[1800293] handler[1800293]
            }
            label handler[1800293]
            const-val shouldHandleError[1800295]:bool[10] "temp"
            val errorExists[2057141]:bool[10] "temp"
            (2057146 'move' errorExists[2057141](2057143 '!=' error[1800276] nil[44]))
            (1800297 'move' shouldHandleError[1800295] errorExists[2057141])
            if shouldHandleError[1800295]
            {
              (1800304 call chpl_uncaught_error[170243] error[1800276])
            }
          }
          (1800307 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1800312]:Error[167938] "error variable" "temp"
            (1800314 'move' error[1800312] nil[44])
            (1800318 call close[235936] f[1056774] error[1800312])
            val errorExists[2057149]:bool[10] "temp"
            (2057154 'move' errorExists[2057149](2057151 '!=' error[1800312] nil[44]))
            if errorExists[2057149]
            {
              gotoErrorHandling handler[1800329] handler[1800329]
            }
            label handler[1800329]
            const-val shouldHandleError[1800331]:bool[10] "temp"
            val errorExists[2057157]:bool[10] "temp"
            (2057162 'move' errorExists[2057157](2057159 '!=' error[1800312] nil[44]))
            (1800333 'move' shouldHandleError[1800331] errorExists[2057157])
            if shouldHandleError[1800331]
            {
              (1800340 call chpl_uncaught_error[170243] error[1800312])
            }
          }
          (1800343 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        ref call_tmp[1056919]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
        (1056921 'move' call_tmp[1056919](1056924 call this[954002] buf[1056866] offset[1056837]))
        const-val coerce_tmp[1083243]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083249 'move' coerce_tmp[1083243](1083245 'cast' uint(8)[100] 0))
        (1056927 call =[435259] call_tmp[1056919] coerce_tmp[1083243])
        const-val call_tmp[1056933]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1056935 'move' call_tmp[1056933](1056938 call +[949577] offset[1056837]))
        const-val call_tmp[1056941]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786041]:string[26] "temp"
        (1056946 call createStringWithNewBuffer[30490] buf[1056866] offset[1056837] call_tmp[1056933] replace[173648] error[1767996] ret_tmp[1786041])
        (1786044 'move' call_tmp[1056941] ret_tmp[1786041])
        val errorExists[2055509]:bool[10] "temp"
        (2055514 'move' errorExists[2055509](2055511 '!=' error[1767996] nil[44]))
        if errorExists[2055509]
        {
          {
            val error[1800348]:Error[167938] "error variable" "temp"
            (1800350 'move' error[1800348] nil[44])
            (1800354 call close[1082005] r[1056883] error[1800348])
            val errorExists[2057165]:bool[10] "temp"
            (2057170 'move' errorExists[2057165](2057167 '!=' error[1800348] nil[44]))
            if errorExists[2057165]
            {
              gotoErrorHandling handler[1800365] handler[1800365]
            }
            label handler[1800365]
            const-val shouldHandleError[1800367]:bool[10] "temp"
            val errorExists[2057173]:bool[10] "temp"
            (2057178 'move' errorExists[2057173](2057175 '!=' error[1800348] nil[44]))
            (1800369 'move' shouldHandleError[1800367] errorExists[2057173])
            if shouldHandleError[1800367]
            {
              (1800376 call chpl_uncaught_error[170243] error[1800348])
            }
          }
          (1800379 call chpl__autoDestroy[1573515] r[1056883])
          {
            val error[1800384]:Error[167938] "error variable" "temp"
            (1800386 'move' error[1800384] nil[44])
            (1800390 call close[1062273] w[1056802] error[1800384])
            val errorExists[2057181]:bool[10] "temp"
            (2057186 'move' errorExists[2057181](2057183 '!=' error[1800384] nil[44]))
            if errorExists[2057181]
            {
              gotoErrorHandling handler[1800401] handler[1800401]
            }
            label handler[1800401]
            const-val shouldHandleError[1800403]:bool[10] "temp"
            val errorExists[2057189]:bool[10] "temp"
            (2057194 'move' errorExists[2057189](2057191 '!=' error[1800384] nil[44]))
            (1800405 'move' shouldHandleError[1800403] errorExists[2057189])
            if shouldHandleError[1800403]
            {
              (1800412 call chpl_uncaught_error[170243] error[1800384])
            }
          }
          (1800415 call chpl__autoDestroy[1569261] w[1056802])
          {
            val error[1800420]:Error[167938] "error variable" "temp"
            (1800422 'move' error[1800420] nil[44])
            (1800426 call close[235936] f[1056774] error[1800420])
            val errorExists[2057197]:bool[10] "temp"
            (2057202 'move' errorExists[2057197](2057199 '!=' error[1800420] nil[44]))
            if errorExists[2057197]
            {
              gotoErrorHandling handler[1800437] handler[1800437]
            }
            label handler[1800437]
            const-val shouldHandleError[1800439]:bool[10] "temp"
            val errorExists[2057205]:bool[10] "temp"
            (2057210 'move' errorExists[2057205](2057207 '!=' error[1800420] nil[44]))
            (1800441 'move' shouldHandleError[1800439] errorExists[2057205])
            if shouldHandleError[1800439]
            {
              (1800448 call chpl_uncaught_error[170243] error[1800420])
            }
          }
          (1800451 call chpl__autoDestroy[1496269] f[1056774])
          gotoErrorHandling handler[1767997] handler[1767997]
        }
        const-val ret[1056951]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1056953 'move' ret[1056951] call_tmp[1056941])
        const-val coerce_tmp[1083254]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083260 'move' coerce_tmp[1083254](1083256 'cast' c_void_ptr[149] buf[1056866]))
        (1056965 call c_free[207852] coerce_tmp[1083254])
        (1083265 'move' ret[1056323] ret[1056951])
        {
          val error[1800456]:Error[167938] "error variable" "temp"
          (1800458 'move' error[1800456] nil[44])
          (1800462 call close[1082005] r[1056883] error[1800456])
          val errorExists[2057213]:bool[10] "temp"
          (2057218 'move' errorExists[2057213](2057215 '!=' error[1800456] nil[44]))
          if errorExists[2057213]
          {
            gotoErrorHandling handler[1800473] handler[1800473]
          }
          label handler[1800473]
          const-val shouldHandleError[1800475]:bool[10] "temp"
          val errorExists[2057221]:bool[10] "temp"
          (2057226 'move' errorExists[2057221](2057223 '!=' error[1800456] nil[44]))
          (1800477 'move' shouldHandleError[1800475] errorExists[2057221])
          if shouldHandleError[1800475]
          {
            (1800484 call chpl_uncaught_error[170243] error[1800456])
          }
        }
        (1800487 call chpl__autoDestroy[1573515] r[1056883])
        {
          val error[1800492]:Error[167938] "error variable" "temp"
          (1800494 'move' error[1800492] nil[44])
          (1800498 call close[1062273] w[1056802] error[1800492])
          val errorExists[2057229]:bool[10] "temp"
          (2057234 'move' errorExists[2057229](2057231 '!=' error[1800492] nil[44]))
          if errorExists[2057229]
          {
            gotoErrorHandling handler[1800509] handler[1800509]
          }
          label handler[1800509]
          const-val shouldHandleError[1800511]:bool[10] "temp"
          val errorExists[2057237]:bool[10] "temp"
          (2057242 'move' errorExists[2057237](2057239 '!=' error[1800492] nil[44]))
          (1800513 'move' shouldHandleError[1800511] errorExists[2057237])
          if shouldHandleError[1800511]
          {
            (1800520 call chpl_uncaught_error[170243] error[1800492])
          }
        }
        (1800523 call chpl__autoDestroy[1569261] w[1056802])
        {
          val error[1800528]:Error[167938] "error variable" "temp"
          (1800530 'move' error[1800528] nil[44])
          (1800534 call close[235936] f[1056774] error[1800528])
          val errorExists[2057245]:bool[10] "temp"
          (2057250 'move' errorExists[2057245](2057247 '!=' error[1800528] nil[44]))
          if errorExists[2057245]
          {
            gotoErrorHandling handler[1800545] handler[1800545]
          }
          label handler[1800545]
          const-val shouldHandleError[1800547]:bool[10] "temp"
          val errorExists[2057253]:bool[10] "temp"
          (2057258 'move' errorExists[2057253](2057255 '!=' error[1800528] nil[44]))
          (1800549 'move' shouldHandleError[1800547] errorExists[2057253])
          if shouldHandleError[1800547]
          {
            (1800556 call chpl_uncaught_error[170243] error[1800528])
          }
        }
        (1800559 call chpl__autoDestroy[1496269] f[1056774])
        (1800562 call chpl__autoDestroy[1568199] args[1056329])
        gotoReturn _end_stringify[1056980] _end_stringify[1056980]
        label handler[1767997]
        const-val shouldHandleError[1768190]:bool[10] "temp"
        val errorExists[2055517]:bool[10] "temp"
        (2055522 'move' errorExists[2055517](2055519 '!=' error[1767996] nil[44]))
        (1768194 'move' shouldHandleError[1768190] errorExists[2055517])
        if shouldHandleError[1768190]
        {
          (1768187 call chpl_uncaught_error[170243] error[1767996])
        }
      }
    }
    (1800565 call chpl__autoDestroy[1568199] args[1056329])
    label _end_stringify[1056980]
    (1789833 '=' _retArg[1789831] ret[1056323])
    (1789835 return _void[55])
  }
  function stringify[1416206](const  ref arg _e0_args[1416208]:string[26], ref arg _retArg[1795246]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1416218]:1*string[1416881] "insert auto destroy"
    const-val ret_tmp[1795254]:1*string[1416881] "temp"
    (1416223 call chpl__init_tuple[1416899] _e0_args[1416208] ret_tmp[1795254])
    (1795257 'move' args[1416218] ret_tmp[1795254])
    const-val ret[1416212]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1416244]:string[26] "dead at end of block" "insert auto destroy"
      (1416246 'move' str[1416244](1795250 call chpl__initCopy[981259] ""))
      {
        const-val i[1416251]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1416253 'move' i[1416251] 0)
        {
          {
            {
              ref call_tmp[1419803]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1419805 'move' call_tmp[1419803](1420143 '.v' args[1416218] x0[1416879]))
              (1419811 call +=[38797] str[1416244] call_tmp[1419803])
            }
          }
        }
        label _continueLabel0[1419768]
        label _unused_continueLabel[1416642]
        label _breakLabel[1416644]
      }
      (1420148 'move' ret[1416212] str[1416244])
      (1805227 call chpl__autoDestroy[1682942] args[1416218])
      gotoReturn _end_stringify[1416869] _end_stringify[1416869]
    }
    (1805230 call chpl__autoDestroy[1682942] args[1416218])
    label _end_stringify[1416869]
    (1795248 '=' _retArg[1795246] ret[1416212])
    (1795252 return _void[55])
  }
  function stringify[1043613](const  ref arg _e0_args[1043615]:string[26], const in arg _e1_args[1043617]:range(byteIndex,bounded,false)[1025703], const  ref arg _e2_args[1043619]:string[26], const in arg _e3_args[1043621]:int(64)[13], ref arg _retArg[1789749]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1043637]:(string,range(byteIndex,bounded,false),string,int(64))[1044312] "insert auto destroy"
    const-val ret_tmp[1789759]:(string,range(byteIndex,bounded,false),string,int(64))[1044312] "temp"
    (1043642 call chpl__init_tuple[1044327] _e0_args[1043615] _e1_args[1043617] _e2_args[1043619] _e3_args[1043621] ret_tmp[1789759])
    (1789762 'move' args[1043637] ret_tmp[1789759])
    const-val ret[1043625]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1043666]:string[26] "dead at end of block" "insert auto destroy"
      (1043668 'move' str[1043666](1789755 call chpl__initCopy[981259] ""))
      {
        const-val i[1043673]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1043675 'move' i[1043673] 0)
        {
          {
            {
              ref call_tmp[1052791]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1052793 'move' call_tmp[1052791](1054166 '.v' args[1043637] x0[1044304]))
              (1052799 call +=[38797] str[1043666] call_tmp[1052791])
            }
          }
        }
        label _continueLabel0[1052756]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1053367]:_ref(range(byteIndex,bounded,false))[1025712] "dead after last mention" "maybe param" "temp"
                    (1053369 'move' call_tmp[1053367](1054266 '.' args[1043637] x1[1044306]))
                    const-val call_tmp[1053374]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1054537]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1054541 'move' coerce_tmp[1054537] call_tmp[1053367])
                    const-val ret_tmp[1789783]:string[26] "temp"
                    (1053379 call _cast[1054269] coerce_tmp[1054537] ret_tmp[1789783])
                    (1789786 'move' call_tmp[1053374] ret_tmp[1789783])
                    (1053383 call +=[38797] str[1043666] call_tmp[1053374])
                    (1799581 call chpl__autoDestroy[1494420] call_tmp[1053374])
                    (1799584 call chpl__autoDestroy[1567277] coerce_tmp[1054537])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1053101]
        {
          {
            {
              ref call_tmp[1053481]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1053483 'move' call_tmp[1053481](1084655 '.v' args[1043637] x2[1044308]))
              (1053489 call +=[38797] str[1043666] call_tmp[1053481])
            }
          }
        }
        label _continueLabel2[1053446]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1054057]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1054059 'move' call_tmp[1054057](1084762 '.' args[1043637] x3[1044310]))
                    const-val call_tmp[1054064]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1084765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1084769 'move' coerce_tmp[1084765](1084767 'deref' call_tmp[1054057]))
                    const-val ret_tmp[1789909]:string[26] "temp"
                    (1054069 call _cast[1063064] coerce_tmp[1084765] ret_tmp[1789909])
                    (1789912 'move' call_tmp[1054064] ret_tmp[1789909])
                    (1054073 call +=[38797] str[1043666] call_tmp[1054064])
                    (1799588 call chpl__autoDestroy[1494420] call_tmp[1054064])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1053791]
        label _unused_continueLabel[1044064]
        label _breakLabel[1044066]
      }
      (1084774 'move' ret[1043625] str[1043666])
      (1799591 call chpl__autoDestroy[1567784] args[1043637])
      gotoReturn _end_stringify[1044291] _end_stringify[1044291]
    }
    (1799594 call chpl__autoDestroy[1567784] args[1043637])
    label _end_stringify[1044291]
    (1789751 '=' _retArg[1789749] ret[1043625])
    (1789757 return _void[55])
  }
  function stringify[1113431](const  ref arg _e0_args[1113433]:string[26], const in arg _e1_args[1113435]:range(int(64),bounded,false)[1026725], const  ref arg _e2_args[1113437]:string[26], const in arg _e3_args[1113439]:int(64)[13], ref arg _retArg[1790810]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1113455]:(string,range(int(64),bounded,false),string,int(64))[1114130] "insert auto destroy"
    const-val ret_tmp[1790820]:(string,range(int(64),bounded,false),string,int(64))[1114130] "temp"
    (1113460 call chpl__init_tuple[1114145] _e0_args[1113433] _e1_args[1113435] _e2_args[1113437] _e3_args[1113439] ret_tmp[1790820])
    (1790823 'move' args[1113455] ret_tmp[1790820])
    const-val ret[1113443]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1113484]:string[26] "dead at end of block" "insert auto destroy"
      (1113486 'move' str[1113484](1790816 call chpl__initCopy[981259] ""))
      {
        const-val i[1113491]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113493 'move' i[1113491] 0)
        {
          {
            {
              ref call_tmp[1117870]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1117872 'move' call_tmp[1117870](1119245 '.v' args[1113455] x0[1114122]))
              (1117878 call +=[38797] str[1113484] call_tmp[1117870])
            }
          }
        }
        label _continueLabel0[1117835]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1118446]:_ref(range(int(64),bounded,false))[1026769] "dead after last mention" "maybe param" "temp"
                    (1118448 'move' call_tmp[1118446](1119345 '.' args[1113455] x1[1114124]))
                    const-val call_tmp[1118453]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1119616]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1119620 'move' coerce_tmp[1119616] call_tmp[1118446])
                    const-val ret_tmp[1790832]:string[26] "temp"
                    (1118458 call _cast[1119348] coerce_tmp[1119616] ret_tmp[1790832])
                    (1790835 'move' call_tmp[1118453] ret_tmp[1790832])
                    (1118462 call +=[38797] str[1113484] call_tmp[1118453])
                    (1801044 call chpl__autoDestroy[1494420] call_tmp[1118453])
                    (1801047 call chpl__autoDestroy[1567322] coerce_tmp[1119616])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1118180]
        {
          {
            {
              ref call_tmp[1118560]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1118562 'move' call_tmp[1118560](1120691 '.v' args[1113455] x2[1114126]))
              (1118568 call +=[38797] str[1113484] call_tmp[1118560])
            }
          }
        }
        label _continueLabel2[1118525]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1119136]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1119138 'move' call_tmp[1119136](1120798 '.' args[1113455] x3[1114128]))
                    const-val call_tmp[1119143]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1120801]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1120805 'move' coerce_tmp[1120801](1120803 'deref' call_tmp[1119136]))
                    const-val ret_tmp[1789933]:string[26] "temp"
                    (1119148 call _cast[1063064] coerce_tmp[1120801] ret_tmp[1789933])
                    (1789936 'move' call_tmp[1119143] ret_tmp[1789933])
                    (1119152 call +=[38797] str[1113484] call_tmp[1119143])
                    (1801051 call chpl__autoDestroy[1494420] call_tmp[1119143])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1118870]
        label _unused_continueLabel[1113882]
        label _breakLabel[1113884]
      }
      (1120810 'move' ret[1113443] str[1113484])
      (1801054 call chpl__autoDestroy[1574756] args[1113455])
      gotoReturn _end_stringify[1114109] _end_stringify[1114109]
    }
    (1801057 call chpl__autoDestroy[1574756] args[1113455])
    label _end_stringify[1114109]
    (1790812 '=' _retArg[1790810] ret[1113443])
    (1790818 return _void[55])
  }
  function stringify[1128255](const  ref arg _e0_args[1128257]:string[26], const in arg _e1_args[1128259]:range(int(64),boundedLow,false)[1087476], const  ref arg _e2_args[1128261]:string[26], const in arg _e3_args[1128263]:int(64)[13], ref arg _retArg[1791104]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1128279]:(string,range(int(64),boundedLow,false),string,int(64))[1128954] "insert auto destroy"
    const-val ret_tmp[1791114]:(string,range(int(64),boundedLow,false),string,int(64))[1128954] "temp"
    (1128284 call chpl__init_tuple[1128969] _e0_args[1128257] _e1_args[1128259] _e2_args[1128261] _e3_args[1128263] ret_tmp[1791114])
    (1791117 'move' args[1128279] ret_tmp[1791114])
    const-val ret[1128267]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1128308]:string[26] "dead at end of block" "insert auto destroy"
      (1128310 'move' str[1128308](1791110 call chpl__initCopy[981259] ""))
      {
        const-val i[1128315]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1128317 'move' i[1128315] 0)
        {
          {
            {
              ref call_tmp[1134393]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1134395 'move' call_tmp[1134393](1135768 '.v' args[1128279] x0[1128946]))
              (1134401 call +=[38797] str[1128308] call_tmp[1134393])
            }
          }
        }
        label _continueLabel0[1134358]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1134969]:_ref(range(int(64),boundedLow,false))[1087520] "dead after last mention" "maybe param" "temp"
                    (1134971 'move' call_tmp[1134969](1135868 '.' args[1128279] x1[1128948]))
                    const-val call_tmp[1134976]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1136139]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1136143 'move' coerce_tmp[1136139] call_tmp[1134969])
                    const-val ret_tmp[1791126]:string[26] "temp"
                    (1134981 call _cast[1135871] coerce_tmp[1136139] ret_tmp[1791126])
                    (1791129 'move' call_tmp[1134976] ret_tmp[1791126])
                    (1134985 call +=[38797] str[1128308] call_tmp[1134976])
                    (1801252 call chpl__autoDestroy[1494420] call_tmp[1134976])
                    (1801255 call chpl__autoDestroy[1573691] coerce_tmp[1136139])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1134703]
        {
          {
            {
              ref call_tmp[1135083]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1135085 'move' call_tmp[1135083](1138745 '.v' args[1128279] x2[1128950]))
              (1135091 call +=[38797] str[1128308] call_tmp[1135083])
            }
          }
        }
        label _continueLabel2[1135048]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135659]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1135661 'move' call_tmp[1135659](1138852 '.' args[1128279] x3[1128952]))
                    const-val call_tmp[1135666]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1138855]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1138859 'move' coerce_tmp[1138855](1138857 'deref' call_tmp[1135659]))
                    const-val ret_tmp[1789951]:string[26] "temp"
                    (1135671 call _cast[1063064] coerce_tmp[1138855] ret_tmp[1789951])
                    (1789954 'move' call_tmp[1135666] ret_tmp[1789951])
                    (1135675 call +=[38797] str[1128308] call_tmp[1135666])
                    (1801259 call chpl__autoDestroy[1494420] call_tmp[1135666])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1135393]
        label _unused_continueLabel[1128706]
        label _breakLabel[1128708]
      }
      (1138864 'move' ret[1128267] str[1128308])
      (1801262 call chpl__autoDestroy[1575539] args[1128279])
      gotoReturn _end_stringify[1128933] _end_stringify[1128933]
    }
    (1801265 call chpl__autoDestroy[1575539] args[1128279])
    label _end_stringify[1128933]
    (1791106 '=' _retArg[1791104] ret[1128267])
    (1791112 return _void[55])
  }
  function stringify[1146426](const  ref arg _e0_args[1146428]:string[26], const in arg _e1_args[1146430]:range(byteIndex,boundedLow,false)[1143314], const  ref arg _e2_args[1146432]:string[26], const in arg _e3_args[1146434]:int(64)[13], ref arg _retArg[1791368]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1146450]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147125] "insert auto destroy"
    const-val ret_tmp[1791378]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147125] "temp"
    (1146455 call chpl__init_tuple[1147140] _e0_args[1146428] _e1_args[1146430] _e2_args[1146432] _e3_args[1146434] ret_tmp[1791378])
    (1791381 'move' args[1146450] ret_tmp[1791378])
    const-val ret[1146438]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1146479]:string[26] "dead at end of block" "insert auto destroy"
      (1146481 'move' str[1146479](1791374 call chpl__initCopy[981259] ""))
      {
        const-val i[1146486]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1146488 'move' i[1146486] 0)
        {
          {
            {
              ref call_tmp[1152857]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1152859 'move' call_tmp[1152857](1154232 '.v' args[1146450] x0[1147117]))
              (1152865 call +=[38797] str[1146479] call_tmp[1152857])
            }
          }
        }
        label _continueLabel0[1152822]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1153433]:_ref(range(byteIndex,boundedLow,false))[1143358] "dead after last mention" "maybe param" "temp"
                    (1153435 'move' call_tmp[1153433](1154332 '.' args[1146450] x1[1147119]))
                    const-val call_tmp[1153440]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1154603]:range(byteIndex,boundedLow,false)[1143314] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1154607 'move' coerce_tmp[1154603] call_tmp[1153433])
                    const-val ret_tmp[1791408]:string[26] "temp"
                    (1153445 call _cast[1154335] coerce_tmp[1154603] ret_tmp[1791408])
                    (1791411 'move' call_tmp[1153440] ret_tmp[1791408])
                    (1153449 call +=[38797] str[1146479] call_tmp[1153440])
                    (1801371 call chpl__autoDestroy[1494420] call_tmp[1153440])
                    (1801374 call chpl__autoDestroy[1575773] coerce_tmp[1154603])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1153167]
        {
          {
            {
              ref call_tmp[1153547]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1153549 'move' call_tmp[1153547](1156066 '.v' args[1146450] x2[1147121]))
              (1153555 call +=[38797] str[1146479] call_tmp[1153547])
            }
          }
        }
        label _continueLabel2[1153512]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1154123]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1154125 'move' call_tmp[1154123](1156173 '.' args[1146450] x3[1147123]))
                    const-val call_tmp[1154130]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1156176]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1156180 'move' coerce_tmp[1156176](1156178 'deref' call_tmp[1154123]))
                    const-val ret_tmp[1789969]:string[26] "temp"
                    (1154135 call _cast[1063064] coerce_tmp[1156176] ret_tmp[1789969])
                    (1789972 'move' call_tmp[1154130] ret_tmp[1789969])
                    (1154139 call +=[38797] str[1146479] call_tmp[1154130])
                    (1801378 call chpl__autoDestroy[1494420] call_tmp[1154130])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1153857]
        label _unused_continueLabel[1146877]
        label _breakLabel[1146879]
      }
      (1156185 'move' ret[1146438] str[1146479])
      (1801381 call chpl__autoDestroy[1575938] args[1146450])
      gotoReturn _end_stringify[1147104] _end_stringify[1147104]
    }
    (1801384 call chpl__autoDestroy[1575938] args[1146450])
    label _end_stringify[1147104]
    (1791370 '=' _retArg[1791368] ret[1146438])
    (1791376 return _void[55])
  }
  function stringify[1175732](const  ref arg _e0_args[1175734]:string[26], const  ref arg _e1_args[1175736]:codepointIndex[28274], const  ref arg _e2_args[1175738]:string[26], const in arg _e3_args[1175740]:int(64)[13], ref arg _retArg[1791484]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1175756]:(string,codepointIndex,string,int(64))[1176431] "insert auto destroy"
    const-val ret_tmp[1791490]:(string,codepointIndex,string,int(64))[1176431] "temp"
    (1175761 call chpl__init_tuple[1176446] _e0_args[1175734] _e1_args[1175736] _e2_args[1175738] _e3_args[1175740] ret_tmp[1791490])
    (1791493 'move' args[1175756] ret_tmp[1791490])
    const-val ret[1175744]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1769787]:Error[167938] "error variable" "temp"
        (1769972 'move' error[1769787] nil[44])
        const-val call_tmp[1176198]:file[235492] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1179536]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179540 'move' default_arg_style[1179536](1179538 call openmem_default_style[1060470] error[1769787]))
        val errorExists[2056285]:bool[10] "temp"
        (2056290 'move' errorExists[2056285](2056287 '!=' error[1769787] nil[44]))
        if errorExists[2056285]
        {
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val ret_tmp[1788373]:file[235492] "temp"
        (1176203 call openmem[237537] default_arg_style[1179536] error[1769787] ret_tmp[1788373])
        (1788376 'move' call_tmp[1176198] ret_tmp[1788373])
        val errorExists[2056293]:bool[10] "temp"
        (2056298 'move' errorExists[2056293](2056295 '!=' error[1769787] nil[44]))
        if errorExists[2056293]
        {
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val f[1176204]:file[235492] "dead at end of block" "insert auto destroy"
        (1176206 'move' f[1176204] call_tmp[1176198])
        const-val call_tmp[1176221]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1179565]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179571 'move' default_arg_start[1179565](1179567 call writer_default_start[1061064] f[1176204] error[1769787]))
        val errorExists[2056301]:bool[10] "temp"
        (2056306 'move' errorExists[2056301](2056303 '!=' error[1769787] nil[44]))
        if errorExists[2056301]
        {
          {
            val error[1802490]:Error[167938] "error variable" "temp"
            (1802492 'move' error[1802490] nil[44])
            (1802496 call close[235936] f[1176204] error[1802490])
            val errorExists[2057677]:bool[10] "temp"
            (2057682 'move' errorExists[2057677](2057679 '!=' error[1802490] nil[44]))
            if errorExists[2057677]
            {
              gotoErrorHandling handler[1802507] handler[1802507]
            }
            label handler[1802507]
            const-val shouldHandleError[1802509]:bool[10] "temp"
            val errorExists[2057685]:bool[10] "temp"
            (2057690 'move' errorExists[2057685](2057687 '!=' error[1802490] nil[44]))
            (1802511 'move' shouldHandleError[1802509] errorExists[2057685])
            if shouldHandleError[1802509]
            {
              (1802518 call chpl_uncaught_error[170243] error[1802490])
            }
          }
          (1802521 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_end[1179575]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179581 'move' default_arg_end[1179575](1179577 call writer_default_end[1061110] f[1176204] error[1769787]))
        val errorExists[2056309]:bool[10] "temp"
        (2056314 'move' errorExists[2056309](2056311 '!=' error[1769787] nil[44]))
        if errorExists[2056309]
        {
          {
            val error[1802526]:Error[167938] "error variable" "temp"
            (1802528 'move' error[1802526] nil[44])
            (1802532 call close[235936] f[1176204] error[1802526])
            val errorExists[2057693]:bool[10] "temp"
            (2057698 'move' errorExists[2057693](2057695 '!=' error[1802526] nil[44]))
            if errorExists[2057693]
            {
              gotoErrorHandling handler[1802543] handler[1802543]
            }
            label handler[1802543]
            const-val shouldHandleError[1802545]:bool[10] "temp"
            val errorExists[2057701]:bool[10] "temp"
            (2057706 'move' errorExists[2057701](2057703 '!=' error[1802526] nil[44]))
            (1802547 'move' shouldHandleError[1802545] errorExists[2057701])
            if shouldHandleError[1802545]
            {
              (1802554 call chpl_uncaught_error[170243] error[1802526])
            }
          }
          (1802557 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_hints[1179585]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179591 'move' default_arg_hints[1179585](1179587 call writer_default_hints[1061173] f[1176204] error[1769787]))
        val errorExists[2056317]:bool[10] "temp"
        (2056322 'move' errorExists[2056317](2056319 '!=' error[1769787] nil[44]))
        if errorExists[2056317]
        {
          {
            val error[1802562]:Error[167938] "error variable" "temp"
            (1802564 'move' error[1802562] nil[44])
            (1802568 call close[235936] f[1176204] error[1802562])
            val errorExists[2057709]:bool[10] "temp"
            (2057714 'move' errorExists[2057709](2057711 '!=' error[1802562] nil[44]))
            if errorExists[2057709]
            {
              gotoErrorHandling handler[1802579] handler[1802579]
            }
            label handler[1802579]
            const-val shouldHandleError[1802581]:bool[10] "temp"
            val errorExists[2057717]:bool[10] "temp"
            (2057722 'move' errorExists[2057717](2057719 '!=' error[1802562] nil[44]))
            (1802583 'move' shouldHandleError[1802581] errorExists[2057717])
            if shouldHandleError[1802581]
            {
              (1802590 call chpl_uncaught_error[170243] error[1802562])
            }
          }
          (1802593 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_style[1179595]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179601 'move' default_arg_style[1179595](1179597 call writer_default_style[1061223] f[1176204] error[1769787]))
        val errorExists[2056325]:bool[10] "temp"
        (2056330 'move' errorExists[2056325](2056327 '!=' error[1769787] nil[44]))
        if errorExists[2056325]
        {
          {
            val error[1802598]:Error[167938] "error variable" "temp"
            (1802600 'move' error[1802598] nil[44])
            (1802604 call close[235936] f[1176204] error[1802598])
            val errorExists[2057725]:bool[10] "temp"
            (2057730 'move' errorExists[2057725](2057727 '!=' error[1802598] nil[44]))
            if errorExists[2057725]
            {
              gotoErrorHandling handler[1802615] handler[1802615]
            }
            label handler[1802615]
            const-val shouldHandleError[1802617]:bool[10] "temp"
            val errorExists[2057733]:bool[10] "temp"
            (2057738 'move' errorExists[2057733](2057735 '!=' error[1802598] nil[44]))
            (1802619 'move' shouldHandleError[1802617] errorExists[2057733])
            if shouldHandleError[1802617]
            {
              (1802626 call chpl_uncaught_error[170243] error[1802598])
            }
          }
          (1802629 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val ret_tmp[1789867]:channel(true,dynamic,false)[1060858] "temp"
        (1176229 call writer[1060764] f[1176204] default_arg_start[1179565] default_arg_end[1179575] default_arg_hints[1179585] default_arg_style[1179595] error[1769787] ret_tmp[1789867])
        (1789870 'move' call_tmp[1176221] ret_tmp[1789867])
        val errorExists[2056333]:bool[10] "temp"
        (2056338 'move' errorExists[2056333](2056335 '!=' error[1769787] nil[44]))
        if errorExists[2056333]
        {
          {
            val error[1802634]:Error[167938] "error variable" "temp"
            (1802636 'move' error[1802634] nil[44])
            (1802640 call close[235936] f[1176204] error[1802634])
            val errorExists[2057741]:bool[10] "temp"
            (2057746 'move' errorExists[2057741](2057743 '!=' error[1802634] nil[44]))
            if errorExists[2057741]
            {
              gotoErrorHandling handler[1802651] handler[1802651]
            }
            label handler[1802651]
            const-val shouldHandleError[1802653]:bool[10] "temp"
            val errorExists[2057749]:bool[10] "temp"
            (2057754 'move' errorExists[2057749](2057751 '!=' error[1802634] nil[44]))
            (1802655 'move' shouldHandleError[1802653] errorExists[2057749])
            if shouldHandleError[1802653]
            {
              (1802662 call chpl_uncaught_error[170243] error[1802634])
            }
          }
          (1802665 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val w[1176232]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
        (1176234 'move' w[1176232] call_tmp[1176221])
        ref _tuple_expand_tmp_0[1179607]:_ref(string)[937850] "dead after last mention" "temp"
        (1179613 'move' _tuple_expand_tmp_0[1179607](1179641 '.v' args[1175756] x0[1176423]))
        ref _tuple_expand_tmp_1[1179615]:_ref(codepointIndex)[948680] "dead after last mention" "temp"
        (1179621 'move' _tuple_expand_tmp_1[1179615](1179646 '.v' args[1175756] x1[1176425]))
        ref _tuple_expand_tmp_2[1179623]:_ref(string)[937850] "dead after last mention" "temp"
        (1179629 'move' _tuple_expand_tmp_2[1179623](1179651 '.v' args[1175756] x2[1176427]))
        ref _tuple_expand_tmp_3[1179631]:_ref(int(64))[936483] "dead after last mention" "temp"
        (1179637 'move' _tuple_expand_tmp_3[1179631](1179656 '.' args[1175756] x3[1176429]))
        const-val coerce_tmp[1180411]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180415 'move' coerce_tmp[1180411](1180413 'deref' _tuple_expand_tmp_3[1179631]))
        const-val _return_tmp_[1759301]:bool[10] "dead after last mention" "temp"
        (1759303 'move' _return_tmp_[1759301](1176253 call write[1179886] w[1176232] _tuple_expand_tmp_0[1179607] _tuple_expand_tmp_1[1179615] _tuple_expand_tmp_2[1179623] coerce_tmp[1180411] error[1769787]))
        val errorExists[2056341]:bool[10] "temp"
        (2056346 'move' errorExists[2056341](2056343 '!=' error[1769787] nil[44]))
        if errorExists[2056341]
        {
          {
            val error[1802670]:Error[167938] "error variable" "temp"
            (1802672 'move' error[1802670] nil[44])
            (1802676 call close[1062273] w[1176232] error[1802670])
            val errorExists[2057757]:bool[10] "temp"
            (2057762 'move' errorExists[2057757](2057759 '!=' error[1802670] nil[44]))
            if errorExists[2057757]
            {
              gotoErrorHandling handler[1802687] handler[1802687]
            }
            label handler[1802687]
            const-val shouldHandleError[1802689]:bool[10] "temp"
            val errorExists[2057765]:bool[10] "temp"
            (2057770 'move' errorExists[2057765](2057767 '!=' error[1802670] nil[44]))
            (1802691 'move' shouldHandleError[1802689] errorExists[2057765])
            if shouldHandleError[1802689]
            {
              (1802698 call chpl_uncaught_error[170243] error[1802670])
            }
          }
          (1802701 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1802706]:Error[167938] "error variable" "temp"
            (1802708 'move' error[1802706] nil[44])
            (1802712 call close[235936] f[1176204] error[1802706])
            val errorExists[2057773]:bool[10] "temp"
            (2057778 'move' errorExists[2057773](2057775 '!=' error[1802706] nil[44]))
            if errorExists[2057773]
            {
              gotoErrorHandling handler[1802723] handler[1802723]
            }
            label handler[1802723]
            const-val shouldHandleError[1802725]:bool[10] "temp"
            val errorExists[2057781]:bool[10] "temp"
            (2057786 'move' errorExists[2057781](2057783 '!=' error[1802706] nil[44]))
            (1802727 'move' shouldHandleError[1802725] errorExists[2057781])
            if shouldHandleError[1802725]
            {
              (1802734 call chpl_uncaught_error[170243] error[1802706])
            }
          }
          (1802737 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val call_tmp[1176258]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1176260 'move' call_tmp[1176258](1176266 call offset[1080059] w[1176232]))
        const-val offset[1176267]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1176269 'move' offset[1176267] call_tmp[1176258])
        val call_tmp[1176273]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1176280]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176282 'move' call_tmp[1176280](1176285 call +[949577] offset[1176267]))
        val call_tmp[1176288]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
        (1176290 'move' call_tmp[1176288](1176293 call c_malloc[1080214] call_tmp[1176280]))
        val buf[1176296]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
        (1176298 'move' buf[1176296] call_tmp[1176288])
        const-val call_tmp[1176302]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1180648]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180654 'move' default_arg_start[1180648](1180650 call reader_default_start[1080799] f[1176204] error[1769787]))
        val errorExists[2056349]:bool[10] "temp"
        (2056354 'move' errorExists[2056349](2056351 '!=' error[1769787] nil[44]))
        if errorExists[2056349]
        {
          {
            val error[1802742]:Error[167938] "error variable" "temp"
            (1802744 'move' error[1802742] nil[44])
            (1802748 call close[1062273] w[1176232] error[1802742])
            val errorExists[2057789]:bool[10] "temp"
            (2057794 'move' errorExists[2057789](2057791 '!=' error[1802742] nil[44]))
            if errorExists[2057789]
            {
              gotoErrorHandling handler[1802759] handler[1802759]
            }
            label handler[1802759]
            const-val shouldHandleError[1802761]:bool[10] "temp"
            val errorExists[2057797]:bool[10] "temp"
            (2057802 'move' errorExists[2057797](2057799 '!=' error[1802742] nil[44]))
            (1802763 'move' shouldHandleError[1802761] errorExists[2057797])
            if shouldHandleError[1802761]
            {
              (1802770 call chpl_uncaught_error[170243] error[1802742])
            }
          }
          (1802773 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1802778]:Error[167938] "error variable" "temp"
            (1802780 'move' error[1802778] nil[44])
            (1802784 call close[235936] f[1176204] error[1802778])
            val errorExists[2057805]:bool[10] "temp"
            (2057810 'move' errorExists[2057805](2057807 '!=' error[1802778] nil[44]))
            if errorExists[2057805]
            {
              gotoErrorHandling handler[1802795] handler[1802795]
            }
            label handler[1802795]
            const-val shouldHandleError[1802797]:bool[10] "temp"
            val errorExists[2057813]:bool[10] "temp"
            (2057818 'move' errorExists[2057813](2057815 '!=' error[1802778] nil[44]))
            (1802799 'move' shouldHandleError[1802797] errorExists[2057813])
            if shouldHandleError[1802797]
            {
              (1802806 call chpl_uncaught_error[170243] error[1802778])
            }
          }
          (1802809 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_end[1180658]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180664 'move' default_arg_end[1180658](1180660 call reader_default_end[1080845] f[1176204] error[1769787]))
        val errorExists[2056357]:bool[10] "temp"
        (2056362 'move' errorExists[2056357](2056359 '!=' error[1769787] nil[44]))
        if errorExists[2056357]
        {
          {
            val error[1802814]:Error[167938] "error variable" "temp"
            (1802816 'move' error[1802814] nil[44])
            (1802820 call close[1062273] w[1176232] error[1802814])
            val errorExists[2057821]:bool[10] "temp"
            (2057826 'move' errorExists[2057821](2057823 '!=' error[1802814] nil[44]))
            if errorExists[2057821]
            {
              gotoErrorHandling handler[1802831] handler[1802831]
            }
            label handler[1802831]
            const-val shouldHandleError[1802833]:bool[10] "temp"
            val errorExists[2057829]:bool[10] "temp"
            (2057834 'move' errorExists[2057829](2057831 '!=' error[1802814] nil[44]))
            (1802835 'move' shouldHandleError[1802833] errorExists[2057829])
            if shouldHandleError[1802833]
            {
              (1802842 call chpl_uncaught_error[170243] error[1802814])
            }
          }
          (1802845 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1802850]:Error[167938] "error variable" "temp"
            (1802852 'move' error[1802850] nil[44])
            (1802856 call close[235936] f[1176204] error[1802850])
            val errorExists[2057837]:bool[10] "temp"
            (2057842 'move' errorExists[2057837](2057839 '!=' error[1802850] nil[44]))
            if errorExists[2057837]
            {
              gotoErrorHandling handler[1802867] handler[1802867]
            }
            label handler[1802867]
            const-val shouldHandleError[1802869]:bool[10] "temp"
            val errorExists[2057845]:bool[10] "temp"
            (2057850 'move' errorExists[2057845](2057847 '!=' error[1802850] nil[44]))
            (1802871 'move' shouldHandleError[1802869] errorExists[2057845])
            if shouldHandleError[1802869]
            {
              (1802878 call chpl_uncaught_error[170243] error[1802850])
            }
          }
          (1802881 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_hints[1180668]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180674 'move' default_arg_hints[1180668](1180670 call reader_default_hints[1080908] f[1176204] error[1769787]))
        val errorExists[2056365]:bool[10] "temp"
        (2056370 'move' errorExists[2056365](2056367 '!=' error[1769787] nil[44]))
        if errorExists[2056365]
        {
          {
            val error[1802886]:Error[167938] "error variable" "temp"
            (1802888 'move' error[1802886] nil[44])
            (1802892 call close[1062273] w[1176232] error[1802886])
            val errorExists[2057853]:bool[10] "temp"
            (2057858 'move' errorExists[2057853](2057855 '!=' error[1802886] nil[44]))
            if errorExists[2057853]
            {
              gotoErrorHandling handler[1802903] handler[1802903]
            }
            label handler[1802903]
            const-val shouldHandleError[1802905]:bool[10] "temp"
            val errorExists[2057861]:bool[10] "temp"
            (2057866 'move' errorExists[2057861](2057863 '!=' error[1802886] nil[44]))
            (1802907 'move' shouldHandleError[1802905] errorExists[2057861])
            if shouldHandleError[1802905]
            {
              (1802914 call chpl_uncaught_error[170243] error[1802886])
            }
          }
          (1802917 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1802922]:Error[167938] "error variable" "temp"
            (1802924 'move' error[1802922] nil[44])
            (1802928 call close[235936] f[1176204] error[1802922])
            val errorExists[2057869]:bool[10] "temp"
            (2057874 'move' errorExists[2057869](2057871 '!=' error[1802922] nil[44]))
            if errorExists[2057869]
            {
              gotoErrorHandling handler[1802939] handler[1802939]
            }
            label handler[1802939]
            const-val shouldHandleError[1802941]:bool[10] "temp"
            val errorExists[2057877]:bool[10] "temp"
            (2057882 'move' errorExists[2057877](2057879 '!=' error[1802922] nil[44]))
            (1802943 'move' shouldHandleError[1802941] errorExists[2057877])
            if shouldHandleError[1802941]
            {
              (1802950 call chpl_uncaught_error[170243] error[1802922])
            }
          }
          (1802953 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val default_arg_style[1180678]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1180684 'move' default_arg_style[1180678](1180680 call reader_default_style[1080955] f[1176204] error[1769787]))
        val errorExists[2056373]:bool[10] "temp"
        (2056378 'move' errorExists[2056373](2056375 '!=' error[1769787] nil[44]))
        if errorExists[2056373]
        {
          {
            val error[1802958]:Error[167938] "error variable" "temp"
            (1802960 'move' error[1802958] nil[44])
            (1802964 call close[1062273] w[1176232] error[1802958])
            val errorExists[2057885]:bool[10] "temp"
            (2057890 'move' errorExists[2057885](2057887 '!=' error[1802958] nil[44]))
            if errorExists[2057885]
            {
              gotoErrorHandling handler[1802975] handler[1802975]
            }
            label handler[1802975]
            const-val shouldHandleError[1802977]:bool[10] "temp"
            val errorExists[2057893]:bool[10] "temp"
            (2057898 'move' errorExists[2057893](2057895 '!=' error[1802958] nil[44]))
            (1802979 'move' shouldHandleError[1802977] errorExists[2057893])
            if shouldHandleError[1802977]
            {
              (1802986 call chpl_uncaught_error[170243] error[1802958])
            }
          }
          (1802989 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1802994]:Error[167938] "error variable" "temp"
            (1802996 'move' error[1802994] nil[44])
            (1803000 call close[235936] f[1176204] error[1802994])
            val errorExists[2057901]:bool[10] "temp"
            (2057906 'move' errorExists[2057901](2057903 '!=' error[1802994] nil[44]))
            if errorExists[2057901]
            {
              gotoErrorHandling handler[1803011] handler[1803011]
            }
            label handler[1803011]
            const-val shouldHandleError[1803013]:bool[10] "temp"
            val errorExists[2057909]:bool[10] "temp"
            (2057914 'move' errorExists[2057909](2057911 '!=' error[1802994] nil[44]))
            (1803015 'move' shouldHandleError[1803013] errorExists[2057909])
            if shouldHandleError[1803013]
            {
              (1803022 call chpl_uncaught_error[170243] error[1802994])
            }
          }
          (1803025 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val ret_tmp[1790257]:channel(false,dynamic,false)[1080593] "temp"
        (1176310 call reader[1080499] f[1176204] default_arg_start[1180648] default_arg_end[1180658] default_arg_hints[1180668] default_arg_style[1180678] error[1769787] ret_tmp[1790257])
        (1790260 'move' call_tmp[1176302] ret_tmp[1790257])
        val errorExists[2056381]:bool[10] "temp"
        (2056386 'move' errorExists[2056381](2056383 '!=' error[1769787] nil[44]))
        if errorExists[2056381]
        {
          {
            val error[1803030]:Error[167938] "error variable" "temp"
            (1803032 'move' error[1803030] nil[44])
            (1803036 call close[1062273] w[1176232] error[1803030])
            val errorExists[2057917]:bool[10] "temp"
            (2057922 'move' errorExists[2057917](2057919 '!=' error[1803030] nil[44]))
            if errorExists[2057917]
            {
              gotoErrorHandling handler[1803047] handler[1803047]
            }
            label handler[1803047]
            const-val shouldHandleError[1803049]:bool[10] "temp"
            val errorExists[2057925]:bool[10] "temp"
            (2057930 'move' errorExists[2057925](2057927 '!=' error[1803030] nil[44]))
            (1803051 'move' shouldHandleError[1803049] errorExists[2057925])
            if shouldHandleError[1803049]
            {
              (1803058 call chpl_uncaught_error[170243] error[1803030])
            }
          }
          (1803061 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1803066]:Error[167938] "error variable" "temp"
            (1803068 'move' error[1803066] nil[44])
            (1803072 call close[235936] f[1176204] error[1803066])
            val errorExists[2057933]:bool[10] "temp"
            (2057938 'move' errorExists[2057933](2057935 '!=' error[1803066] nil[44]))
            if errorExists[2057933]
            {
              gotoErrorHandling handler[1803083] handler[1803083]
            }
            label handler[1803083]
            const-val shouldHandleError[1803085]:bool[10] "temp"
            val errorExists[2057941]:bool[10] "temp"
            (2057946 'move' errorExists[2057941](2057943 '!=' error[1803066] nil[44]))
            (1803087 'move' shouldHandleError[1803085] errorExists[2057941])
            if shouldHandleError[1803085]
            {
              (1803094 call chpl_uncaught_error[170243] error[1803066])
            }
          }
          (1803097 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val r[1176313]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
        (1176315 'move' r[1176313] call_tmp[1176302])
        const-val call_tmp[1176330]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1176332 'move' call_tmp[1176330] offset[1176267])
        (1176342 call readBytes[1082750] r[1176313] buf[1176296] call_tmp[1176330] error[1769787])
        val errorExists[2056389]:bool[10] "temp"
        (2056394 'move' errorExists[2056389](2056391 '!=' error[1769787] nil[44]))
        if errorExists[2056389]
        {
          {
            val error[1803102]:Error[167938] "error variable" "temp"
            (1803104 'move' error[1803102] nil[44])
            (1803108 call close[1082005] r[1176313] error[1803102])
            val errorExists[2057949]:bool[10] "temp"
            (2057954 'move' errorExists[2057949](2057951 '!=' error[1803102] nil[44]))
            if errorExists[2057949]
            {
              gotoErrorHandling handler[1803119] handler[1803119]
            }
            label handler[1803119]
            const-val shouldHandleError[1803121]:bool[10] "temp"
            val errorExists[2057957]:bool[10] "temp"
            (2057962 'move' errorExists[2057957](2057959 '!=' error[1803102] nil[44]))
            (1803123 'move' shouldHandleError[1803121] errorExists[2057957])
            if shouldHandleError[1803121]
            {
              (1803130 call chpl_uncaught_error[170243] error[1803102])
            }
          }
          (1803133 call chpl__autoDestroy[1573515] r[1176313])
          {
            val error[1803138]:Error[167938] "error variable" "temp"
            (1803140 'move' error[1803138] nil[44])
            (1803144 call close[1062273] w[1176232] error[1803138])
            val errorExists[2057965]:bool[10] "temp"
            (2057970 'move' errorExists[2057965](2057967 '!=' error[1803138] nil[44]))
            if errorExists[2057965]
            {
              gotoErrorHandling handler[1803155] handler[1803155]
            }
            label handler[1803155]
            const-val shouldHandleError[1803157]:bool[10] "temp"
            val errorExists[2057973]:bool[10] "temp"
            (2057978 'move' errorExists[2057973](2057975 '!=' error[1803138] nil[44]))
            (1803159 'move' shouldHandleError[1803157] errorExists[2057973])
            if shouldHandleError[1803157]
            {
              (1803166 call chpl_uncaught_error[170243] error[1803138])
            }
          }
          (1803169 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1803174]:Error[167938] "error variable" "temp"
            (1803176 'move' error[1803174] nil[44])
            (1803180 call close[235936] f[1176204] error[1803174])
            val errorExists[2057981]:bool[10] "temp"
            (2057986 'move' errorExists[2057981](2057983 '!=' error[1803174] nil[44]))
            if errorExists[2057981]
            {
              gotoErrorHandling handler[1803191] handler[1803191]
            }
            label handler[1803191]
            const-val shouldHandleError[1803193]:bool[10] "temp"
            val errorExists[2057989]:bool[10] "temp"
            (2057994 'move' errorExists[2057989](2057991 '!=' error[1803174] nil[44]))
            (1803195 'move' shouldHandleError[1803193] errorExists[2057989])
            if shouldHandleError[1803193]
            {
              (1803202 call chpl_uncaught_error[170243] error[1803174])
            }
          }
          (1803205 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        ref call_tmp[1176349]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
        (1176351 'move' call_tmp[1176349](1176354 call this[954002] buf[1176296] offset[1176267]))
        const-val coerce_tmp[1180694]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180700 'move' coerce_tmp[1180694](1180696 'cast' uint(8)[100] 0))
        (1176357 call =[435259] call_tmp[1176349] coerce_tmp[1180694])
        const-val call_tmp[1176363]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176365 'move' call_tmp[1176363](1176368 call +[949577] offset[1176267]))
        const-val call_tmp[1176371]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786053]:string[26] "temp"
        (1176376 call createStringWithNewBuffer[30490] buf[1176296] offset[1176267] call_tmp[1176363] replace[173648] error[1769787] ret_tmp[1786053])
        (1786056 'move' call_tmp[1176371] ret_tmp[1786053])
        val errorExists[2056397]:bool[10] "temp"
        (2056402 'move' errorExists[2056397](2056399 '!=' error[1769787] nil[44]))
        if errorExists[2056397]
        {
          {
            val error[1803210]:Error[167938] "error variable" "temp"
            (1803212 'move' error[1803210] nil[44])
            (1803216 call close[1082005] r[1176313] error[1803210])
            val errorExists[2057997]:bool[10] "temp"
            (2058002 'move' errorExists[2057997](2057999 '!=' error[1803210] nil[44]))
            if errorExists[2057997]
            {
              gotoErrorHandling handler[1803227] handler[1803227]
            }
            label handler[1803227]
            const-val shouldHandleError[1803229]:bool[10] "temp"
            val errorExists[2058005]:bool[10] "temp"
            (2058010 'move' errorExists[2058005](2058007 '!=' error[1803210] nil[44]))
            (1803231 'move' shouldHandleError[1803229] errorExists[2058005])
            if shouldHandleError[1803229]
            {
              (1803238 call chpl_uncaught_error[170243] error[1803210])
            }
          }
          (1803241 call chpl__autoDestroy[1573515] r[1176313])
          {
            val error[1803246]:Error[167938] "error variable" "temp"
            (1803248 'move' error[1803246] nil[44])
            (1803252 call close[1062273] w[1176232] error[1803246])
            val errorExists[2058013]:bool[10] "temp"
            (2058018 'move' errorExists[2058013](2058015 '!=' error[1803246] nil[44]))
            if errorExists[2058013]
            {
              gotoErrorHandling handler[1803263] handler[1803263]
            }
            label handler[1803263]
            const-val shouldHandleError[1803265]:bool[10] "temp"
            val errorExists[2058021]:bool[10] "temp"
            (2058026 'move' errorExists[2058021](2058023 '!=' error[1803246] nil[44]))
            (1803267 'move' shouldHandleError[1803265] errorExists[2058021])
            if shouldHandleError[1803265]
            {
              (1803274 call chpl_uncaught_error[170243] error[1803246])
            }
          }
          (1803277 call chpl__autoDestroy[1569261] w[1176232])
          {
            val error[1803282]:Error[167938] "error variable" "temp"
            (1803284 'move' error[1803282] nil[44])
            (1803288 call close[235936] f[1176204] error[1803282])
            val errorExists[2058029]:bool[10] "temp"
            (2058034 'move' errorExists[2058029](2058031 '!=' error[1803282] nil[44]))
            if errorExists[2058029]
            {
              gotoErrorHandling handler[1803299] handler[1803299]
            }
            label handler[1803299]
            const-val shouldHandleError[1803301]:bool[10] "temp"
            val errorExists[2058037]:bool[10] "temp"
            (2058042 'move' errorExists[2058037](2058039 '!=' error[1803282] nil[44]))
            (1803303 'move' shouldHandleError[1803301] errorExists[2058037])
            if shouldHandleError[1803301]
            {
              (1803310 call chpl_uncaught_error[170243] error[1803282])
            }
          }
          (1803313 call chpl__autoDestroy[1496269] f[1176204])
          gotoErrorHandling handler[1769788] handler[1769788]
        }
        const-val ret[1176381]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1176383 'move' ret[1176381] call_tmp[1176371])
        const-val coerce_tmp[1180705]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180711 'move' coerce_tmp[1180705](1180707 'cast' c_void_ptr[149] buf[1176296]))
        (1176395 call c_free[207852] coerce_tmp[1180705])
        (1180715 'move' ret[1175744] ret[1176381])
        {
          val error[1803318]:Error[167938] "error variable" "temp"
          (1803320 'move' error[1803318] nil[44])
          (1803324 call close[1082005] r[1176313] error[1803318])
          val errorExists[2058045]:bool[10] "temp"
          (2058050 'move' errorExists[2058045](2058047 '!=' error[1803318] nil[44]))
          if errorExists[2058045]
          {
            gotoErrorHandling handler[1803335] handler[1803335]
          }
          label handler[1803335]
          const-val shouldHandleError[1803337]:bool[10] "temp"
          val errorExists[2058053]:bool[10] "temp"
          (2058058 'move' errorExists[2058053](2058055 '!=' error[1803318] nil[44]))
          (1803339 'move' shouldHandleError[1803337] errorExists[2058053])
          if shouldHandleError[1803337]
          {
            (1803346 call chpl_uncaught_error[170243] error[1803318])
          }
        }
        (1803349 call chpl__autoDestroy[1573515] r[1176313])
        {
          val error[1803354]:Error[167938] "error variable" "temp"
          (1803356 'move' error[1803354] nil[44])
          (1803360 call close[1062273] w[1176232] error[1803354])
          val errorExists[2058061]:bool[10] "temp"
          (2058066 'move' errorExists[2058061](2058063 '!=' error[1803354] nil[44]))
          if errorExists[2058061]
          {
            gotoErrorHandling handler[1803371] handler[1803371]
          }
          label handler[1803371]
          const-val shouldHandleError[1803373]:bool[10] "temp"
          val errorExists[2058069]:bool[10] "temp"
          (2058074 'move' errorExists[2058069](2058071 '!=' error[1803354] nil[44]))
          (1803375 'move' shouldHandleError[1803373] errorExists[2058069])
          if shouldHandleError[1803373]
          {
            (1803382 call chpl_uncaught_error[170243] error[1803354])
          }
        }
        (1803385 call chpl__autoDestroy[1569261] w[1176232])
        {
          val error[1803390]:Error[167938] "error variable" "temp"
          (1803392 'move' error[1803390] nil[44])
          (1803396 call close[235936] f[1176204] error[1803390])
          val errorExists[2058077]:bool[10] "temp"
          (2058082 'move' errorExists[2058077](2058079 '!=' error[1803390] nil[44]))
          if errorExists[2058077]
          {
            gotoErrorHandling handler[1803407] handler[1803407]
          }
          label handler[1803407]
          const-val shouldHandleError[1803409]:bool[10] "temp"
          val errorExists[2058085]:bool[10] "temp"
          (2058090 'move' errorExists[2058085](2058087 '!=' error[1803390] nil[44]))
          (1803411 'move' shouldHandleError[1803409] errorExists[2058085])
          if shouldHandleError[1803409]
          {
            (1803418 call chpl_uncaught_error[170243] error[1803390])
          }
        }
        (1803421 call chpl__autoDestroy[1496269] f[1176204])
        (1803424 call chpl__autoDestroy[1576602] args[1175756])
        gotoReturn _end_stringify[1176410] _end_stringify[1176410]
        label handler[1769788]
        const-val shouldHandleError[1769981]:bool[10] "temp"
        val errorExists[2056405]:bool[10] "temp"
        (2056410 'move' errorExists[2056405](2056407 '!=' error[1769787] nil[44]))
        (1769985 'move' shouldHandleError[1769981] errorExists[2056405])
        if shouldHandleError[1769981]
        {
          (1769978 call chpl_uncaught_error[170243] error[1769787])
        }
      }
    }
    (1803427 call chpl__autoDestroy[1576602] args[1175756])
    label _end_stringify[1176410]
    (1791486 '=' _retArg[1791484] ret[1175744])
    (1791488 return _void[55])
  }
  function stringify[1190631](const  ref arg _e0_args[1190633]:string[26], const in arg _e1_args[1190635]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg _e2_args[1190637]:string[26], const in arg _e3_args[1190639]:int(64)[13], ref arg _retArg[1791690]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1190655]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191330] "insert auto destroy"
    const-val ret_tmp[1791700]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191330] "temp"
    (1190660 call chpl__init_tuple[1191345] _e0_args[1190633] _e1_args[1190635] _e2_args[1190637] _e3_args[1190639] ret_tmp[1791700])
    (1791703 'move' args[1190655] ret_tmp[1791700])
    const-val ret[1190643]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1190684]:string[26] "dead at end of block" "insert auto destroy"
      (1190686 'move' str[1190684](1791696 call chpl__initCopy[981259] ""))
      {
        const-val i[1190691]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1190693 'move' i[1190691] 0)
        {
          {
            {
              ref call_tmp[1197064]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1197066 'move' call_tmp[1197064](1198439 '.v' args[1190655] x0[1191322]))
              (1197072 call +=[38797] str[1190684] call_tmp[1197064])
            }
          }
        }
        label _continueLabel0[1197029]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1197640]:_ref(range(byteIndex,boundedHigh,false))[1184874] "dead after last mention" "maybe param" "temp"
                    (1197642 'move' call_tmp[1197640](1198539 '.' args[1190655] x1[1191324]))
                    const-val call_tmp[1197647]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1198810]:range(byteIndex,boundedHigh,false)[1184830] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1198814 'move' coerce_tmp[1198810] call_tmp[1197640])
                    const-val ret_tmp[1791730]:string[26] "temp"
                    (1197652 call _cast[1198542] coerce_tmp[1198810] ret_tmp[1791730])
                    (1791733 'move' call_tmp[1197647] ret_tmp[1791730])
                    (1197656 call +=[38797] str[1190684] call_tmp[1197647])
                    (1803643 call chpl__autoDestroy[1494420] call_tmp[1197647])
                    (1803646 call chpl__autoDestroy[1576830] coerce_tmp[1198810])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1197374]
        {
          {
            {
              ref call_tmp[1197754]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1197756 'move' call_tmp[1197754](1200125 '.v' args[1190655] x2[1191326]))
              (1197762 call +=[38797] str[1190684] call_tmp[1197754])
            }
          }
        }
        label _continueLabel2[1197719]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1198330]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1198332 'move' call_tmp[1198330](1200232 '.' args[1190655] x3[1191328]))
                    const-val call_tmp[1198337]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1200235]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1200239 'move' coerce_tmp[1200235](1200237 'deref' call_tmp[1198330]))
                    const-val ret_tmp[1789981]:string[26] "temp"
                    (1198342 call _cast[1063064] coerce_tmp[1200235] ret_tmp[1789981])
                    (1789984 'move' call_tmp[1198337] ret_tmp[1789981])
                    (1198346 call +=[38797] str[1190684] call_tmp[1198337])
                    (1803650 call chpl__autoDestroy[1494420] call_tmp[1198337])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1198064]
        label _unused_continueLabel[1191082]
        label _breakLabel[1191084]
      }
      (1200244 'move' ret[1190643] str[1190684])
      (1803653 call chpl__autoDestroy[1578512] args[1190655])
      gotoReturn _end_stringify[1191309] _end_stringify[1191309]
    }
    (1803656 call chpl__autoDestroy[1578512] args[1190655])
    label _end_stringify[1191309]
    (1791692 '=' _retArg[1791690] ret[1190643])
    (1791698 return _void[55])
  }
  function stringify[1291049](const  ref arg _e0_args[1291051]:string[26], const  ref arg _e1_args[1291053]:string[26], const  ref arg _e2_args[1291055]:string[26], const  ref arg _e3_args[1291057]:string[26], ref arg _retArg[1793786]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1291073]:4*string[1291748] "insert auto destroy"
    const-val ret_tmp[1793794]:4*string[1291748] "temp"
    (1291078 call chpl__init_tuple[1291772] _e0_args[1291051] _e1_args[1291053] _e2_args[1291055] _e3_args[1291057] ret_tmp[1793794])
    (1793797 'move' args[1291073] ret_tmp[1793794])
    const-val ret[1291061]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1291102]:string[26] "dead at end of block" "insert auto destroy"
      (1291104 'move' str[1291102](1793790 call chpl__initCopy[981259] ""))
      {
        const-val i[1291109]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1291111 'move' i[1291109] 0)
        {
          {
            {
              ref call_tmp[1294910]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1294912 'move' call_tmp[1294910](1296285 '.v' args[1291073] x0[1291740]))
              (1294918 call +=[38797] str[1291102] call_tmp[1294910])
            }
          }
        }
        label _continueLabel0[1294875]
        {
          {
            {
              ref call_tmp[1295255]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1295257 'move' call_tmp[1295255](1296319 '.v' args[1291073] x1[1291742]))
              (1295263 call +=[38797] str[1291102] call_tmp[1295255])
            }
          }
        }
        label _continueLabel1[1295220]
        {
          {
            {
              ref call_tmp[1295600]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1295602 'move' call_tmp[1295600](1296353 '.v' args[1291073] x2[1291744]))
              (1295608 call +=[38797] str[1291102] call_tmp[1295600])
            }
          }
        }
        label _continueLabel2[1295565]
        {
          {
            {
              ref call_tmp[1295945]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1295947 'move' call_tmp[1295945](1296387 '.v' args[1291073] x3[1291746]))
              (1295953 call +=[38797] str[1291102] call_tmp[1295945])
            }
          }
        }
        label _continueLabel3[1295910]
        label _unused_continueLabel[1291500]
        label _breakLabel[1291502]
      }
      (1296392 'move' ret[1291061] str[1291102])
      (1804166 call chpl__autoDestroy[1620365] args[1291073])
      gotoReturn _end_stringify[1291727] _end_stringify[1291727]
    }
    (1804169 call chpl__autoDestroy[1620365] args[1291073])
    label _end_stringify[1291727]
    (1793788 '=' _retArg[1793786] ret[1291061])
    (1793792 return _void[55])
  }
  function stringify[1439758](const  ref arg _e0_args[1439760]:string[26], const in arg _e1_args[1439762]:uint(64)[115], const  ref arg _e2_args[1439764]:string[26], const in arg _e3_args[1439766]:int(64)[13], ref arg _retArg[1795453]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1439782]:(string,uint(64),string,int(64))[1440457] "insert auto destroy"
    const-val ret_tmp[1795461]:(string,uint(64),string,int(64))[1440457] "temp"
    (1439787 call chpl__init_tuple[1440472] _e0_args[1439760] _e1_args[1439762] _e2_args[1439764] _e3_args[1439766] ret_tmp[1795461])
    (1795464 'move' args[1439782] ret_tmp[1795461])
    const-val ret[1439770]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1439811]:string[26] "dead at end of block" "insert auto destroy"
      (1439813 'move' str[1439811](1795457 call chpl__initCopy[981259] ""))
      {
        const-val i[1439818]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1439820 'move' i[1439818] 0)
        {
          {
            {
              ref call_tmp[1444636]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1444638 'move' call_tmp[1444636](1446011 '.v' args[1439782] x0[1440449]))
              (1444644 call +=[38797] str[1439811] call_tmp[1444636])
            }
          }
        }
        label _continueLabel0[1444601]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1445212]:_ref(uint(64))[936512] "dead after last mention" "maybe param" "temp"
                    (1445214 'move' call_tmp[1445212](1446118 '.' args[1439782] x1[1440451]))
                    const-val call_tmp[1445219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1446121]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1446125 'move' coerce_tmp[1446121](1446123 'deref' call_tmp[1445212]))
                    const-val ret_tmp[1793540]:string[26] "temp"
                    (1445224 call _cast[1268376] coerce_tmp[1446121] ret_tmp[1793540])
                    (1793543 'move' call_tmp[1445219] ret_tmp[1793540])
                    (1445228 call +=[38797] str[1439811] call_tmp[1445219])
                    (1805351 call chpl__autoDestroy[1494420] call_tmp[1445219])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1444946]
        {
          {
            {
              ref call_tmp[1445326]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1445328 'move' call_tmp[1445326](1446159 '.v' args[1439782] x2[1440453]))
              (1445334 call +=[38797] str[1439811] call_tmp[1445326])
            }
          }
        }
        label _continueLabel2[1445291]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1445902]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1445904 'move' call_tmp[1445902](1446266 '.' args[1439782] x3[1440455]))
                    const-val call_tmp[1445909]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1446269]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1446273 'move' coerce_tmp[1446269](1446271 'deref' call_tmp[1445902]))
                    const-val ret_tmp[1790065]:string[26] "temp"
                    (1445914 call _cast[1063064] coerce_tmp[1446269] ret_tmp[1790065])
                    (1790068 'move' call_tmp[1445909] ret_tmp[1790065])
                    (1445918 call +=[38797] str[1439811] call_tmp[1445909])
                    (1805355 call chpl__autoDestroy[1494420] call_tmp[1445909])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1445636]
        label _unused_continueLabel[1440209]
        label _breakLabel[1440211]
      }
      (1446278 'move' ret[1439770] str[1439811])
      (1805358 call chpl__autoDestroy[1712505] args[1439782])
      gotoReturn _end_stringify[1440436] _end_stringify[1440436]
    }
    (1805361 call chpl__autoDestroy[1712505] args[1439782])
    label _end_stringify[1440436]
    (1795455 '=' _retArg[1795453] ret[1439770])
    (1795459 return _void[55])
  }
  function stringify[1157775](const  ref arg _e0_args[1157777]:string[26], const  ref arg _e1_args[1157779]:codepointIndex[28274], const  ref arg _e2_args[1157781]:string[26], ref arg _retArg[1791426]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1157795]:(string,codepointIndex,string)[1158466] "insert auto destroy"
    const-val ret_tmp[1791432]:(string,codepointIndex,string)[1158466] "temp"
    (1157800 call chpl__init_tuple[1158479] _e0_args[1157777] _e1_args[1157779] _e2_args[1157781] ret_tmp[1791432])
    (1791435 'move' args[1157795] ret_tmp[1791432])
    const-val ret[1157785]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1769290]:Error[167938] "error variable" "temp"
        (1769475 'move' error[1769290] nil[44])
        const-val call_tmp[1158236]:file[235492] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1164090]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164094 'move' default_arg_style[1164090](1164092 call openmem_default_style[1060470] error[1769290]))
        val errorExists[2056005]:bool[10] "temp"
        (2056010 'move' errorExists[2056005](2056007 '!=' error[1769290] nil[44]))
        if errorExists[2056005]
        {
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val ret_tmp[1788367]:file[235492] "temp"
        (1158241 call openmem[237537] default_arg_style[1164090] error[1769290] ret_tmp[1788367])
        (1788370 'move' call_tmp[1158236] ret_tmp[1788367])
        val errorExists[2056013]:bool[10] "temp"
        (2056018 'move' errorExists[2056013](2056015 '!=' error[1769290] nil[44]))
        if errorExists[2056013]
        {
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val f[1158242]:file[235492] "dead at end of block" "insert auto destroy"
        (1158244 'move' f[1158242] call_tmp[1158236])
        const-val call_tmp[1158259]:channel(true,dynamic,false)[1060858] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1164119]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164125 'move' default_arg_start[1164119](1164121 call writer_default_start[1061064] f[1158242] error[1769290]))
        val errorExists[2056021]:bool[10] "temp"
        (2056026 'move' errorExists[2056021](2056023 '!=' error[1769290] nil[44]))
        if errorExists[2056021]
        {
          {
            val error[1801427]:Error[167938] "error variable" "temp"
            (1801429 'move' error[1801427] nil[44])
            (1801433 call close[235936] f[1158242] error[1801427])
            val errorExists[2057261]:bool[10] "temp"
            (2057266 'move' errorExists[2057261](2057263 '!=' error[1801427] nil[44]))
            if errorExists[2057261]
            {
              gotoErrorHandling handler[1801444] handler[1801444]
            }
            label handler[1801444]
            const-val shouldHandleError[1801446]:bool[10] "temp"
            val errorExists[2057269]:bool[10] "temp"
            (2057274 'move' errorExists[2057269](2057271 '!=' error[1801427] nil[44]))
            (1801448 'move' shouldHandleError[1801446] errorExists[2057269])
            if shouldHandleError[1801446]
            {
              (1801455 call chpl_uncaught_error[170243] error[1801427])
            }
          }
          (1801458 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_end[1164129]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164135 'move' default_arg_end[1164129](1164131 call writer_default_end[1061110] f[1158242] error[1769290]))
        val errorExists[2056029]:bool[10] "temp"
        (2056034 'move' errorExists[2056029](2056031 '!=' error[1769290] nil[44]))
        if errorExists[2056029]
        {
          {
            val error[1801463]:Error[167938] "error variable" "temp"
            (1801465 'move' error[1801463] nil[44])
            (1801469 call close[235936] f[1158242] error[1801463])
            val errorExists[2057277]:bool[10] "temp"
            (2057282 'move' errorExists[2057277](2057279 '!=' error[1801463] nil[44]))
            if errorExists[2057277]
            {
              gotoErrorHandling handler[1801480] handler[1801480]
            }
            label handler[1801480]
            const-val shouldHandleError[1801482]:bool[10] "temp"
            val errorExists[2057285]:bool[10] "temp"
            (2057290 'move' errorExists[2057285](2057287 '!=' error[1801463] nil[44]))
            (1801484 'move' shouldHandleError[1801482] errorExists[2057285])
            if shouldHandleError[1801482]
            {
              (1801491 call chpl_uncaught_error[170243] error[1801463])
            }
          }
          (1801494 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_hints[1164139]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164145 'move' default_arg_hints[1164139](1164141 call writer_default_hints[1061173] f[1158242] error[1769290]))
        val errorExists[2056037]:bool[10] "temp"
        (2056042 'move' errorExists[2056037](2056039 '!=' error[1769290] nil[44]))
        if errorExists[2056037]
        {
          {
            val error[1801499]:Error[167938] "error variable" "temp"
            (1801501 'move' error[1801499] nil[44])
            (1801505 call close[235936] f[1158242] error[1801499])
            val errorExists[2057293]:bool[10] "temp"
            (2057298 'move' errorExists[2057293](2057295 '!=' error[1801499] nil[44]))
            if errorExists[2057293]
            {
              gotoErrorHandling handler[1801516] handler[1801516]
            }
            label handler[1801516]
            const-val shouldHandleError[1801518]:bool[10] "temp"
            val errorExists[2057301]:bool[10] "temp"
            (2057306 'move' errorExists[2057301](2057303 '!=' error[1801499] nil[44]))
            (1801520 'move' shouldHandleError[1801518] errorExists[2057301])
            if shouldHandleError[1801518]
            {
              (1801527 call chpl_uncaught_error[170243] error[1801499])
            }
          }
          (1801530 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_style[1164149]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164155 'move' default_arg_style[1164149](1164151 call writer_default_style[1061223] f[1158242] error[1769290]))
        val errorExists[2056045]:bool[10] "temp"
        (2056050 'move' errorExists[2056045](2056047 '!=' error[1769290] nil[44]))
        if errorExists[2056045]
        {
          {
            val error[1801535]:Error[167938] "error variable" "temp"
            (1801537 'move' error[1801535] nil[44])
            (1801541 call close[235936] f[1158242] error[1801535])
            val errorExists[2057309]:bool[10] "temp"
            (2057314 'move' errorExists[2057309](2057311 '!=' error[1801535] nil[44]))
            if errorExists[2057309]
            {
              gotoErrorHandling handler[1801552] handler[1801552]
            }
            label handler[1801552]
            const-val shouldHandleError[1801554]:bool[10] "temp"
            val errorExists[2057317]:bool[10] "temp"
            (2057322 'move' errorExists[2057317](2057319 '!=' error[1801535] nil[44]))
            (1801556 'move' shouldHandleError[1801554] errorExists[2057317])
            if shouldHandleError[1801554]
            {
              (1801563 call chpl_uncaught_error[170243] error[1801535])
            }
          }
          (1801566 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val ret_tmp[1789861]:channel(true,dynamic,false)[1060858] "temp"
        (1158267 call writer[1060764] f[1158242] default_arg_start[1164119] default_arg_end[1164129] default_arg_hints[1164139] default_arg_style[1164149] error[1769290] ret_tmp[1789861])
        (1789864 'move' call_tmp[1158259] ret_tmp[1789861])
        val errorExists[2056053]:bool[10] "temp"
        (2056058 'move' errorExists[2056053](2056055 '!=' error[1769290] nil[44]))
        if errorExists[2056053]
        {
          {
            val error[1801571]:Error[167938] "error variable" "temp"
            (1801573 'move' error[1801571] nil[44])
            (1801577 call close[235936] f[1158242] error[1801571])
            val errorExists[2057325]:bool[10] "temp"
            (2057330 'move' errorExists[2057325](2057327 '!=' error[1801571] nil[44]))
            if errorExists[2057325]
            {
              gotoErrorHandling handler[1801588] handler[1801588]
            }
            label handler[1801588]
            const-val shouldHandleError[1801590]:bool[10] "temp"
            val errorExists[2057333]:bool[10] "temp"
            (2057338 'move' errorExists[2057333](2057335 '!=' error[1801571] nil[44]))
            (1801592 'move' shouldHandleError[1801590] errorExists[2057333])
            if shouldHandleError[1801590]
            {
              (1801599 call chpl_uncaught_error[170243] error[1801571])
            }
          }
          (1801602 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val w[1158270]:channel(true,dynamic,false)[1060858] "dead at end of block" "insert auto destroy"
        (1158272 'move' w[1158270] call_tmp[1158259])
        ref _tuple_expand_tmp_0[1164161]:_ref(string)[937850] "dead after last mention" "temp"
        (1164167 'move' _tuple_expand_tmp_0[1164161](1164187 '.v' args[1157795] x0[1158460]))
        ref _tuple_expand_tmp_1[1164169]:_ref(codepointIndex)[948680] "dead after last mention" "temp"
        (1164175 'move' _tuple_expand_tmp_1[1164169](1164192 '.v' args[1157795] x1[1158462]))
        ref _tuple_expand_tmp_2[1164177]:_ref(string)[937850] "dead after last mention" "temp"
        (1164183 'move' _tuple_expand_tmp_2[1164177](1164197 '.v' args[1157795] x2[1158464]))
        const-val _return_tmp_[1759293]:bool[10] "dead after last mention" "temp"
        (1759295 'move' _return_tmp_[1759293](1158291 call write[1164422] w[1158270] _tuple_expand_tmp_0[1164161] _tuple_expand_tmp_1[1164169] _tuple_expand_tmp_2[1164177] error[1769290]))
        val errorExists[2056061]:bool[10] "temp"
        (2056066 'move' errorExists[2056061](2056063 '!=' error[1769290] nil[44]))
        if errorExists[2056061]
        {
          {
            val error[1801607]:Error[167938] "error variable" "temp"
            (1801609 'move' error[1801607] nil[44])
            (1801613 call close[1062273] w[1158270] error[1801607])
            val errorExists[2057341]:bool[10] "temp"
            (2057346 'move' errorExists[2057341](2057343 '!=' error[1801607] nil[44]))
            if errorExists[2057341]
            {
              gotoErrorHandling handler[1801624] handler[1801624]
            }
            label handler[1801624]
            const-val shouldHandleError[1801626]:bool[10] "temp"
            val errorExists[2057349]:bool[10] "temp"
            (2057354 'move' errorExists[2057349](2057351 '!=' error[1801607] nil[44]))
            (1801628 'move' shouldHandleError[1801626] errorExists[2057349])
            if shouldHandleError[1801626]
            {
              (1801635 call chpl_uncaught_error[170243] error[1801607])
            }
          }
          (1801638 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1801643]:Error[167938] "error variable" "temp"
            (1801645 'move' error[1801643] nil[44])
            (1801649 call close[235936] f[1158242] error[1801643])
            val errorExists[2057357]:bool[10] "temp"
            (2057362 'move' errorExists[2057357](2057359 '!=' error[1801643] nil[44]))
            if errorExists[2057357]
            {
              gotoErrorHandling handler[1801660] handler[1801660]
            }
            label handler[1801660]
            const-val shouldHandleError[1801662]:bool[10] "temp"
            val errorExists[2057365]:bool[10] "temp"
            (2057370 'move' errorExists[2057365](2057367 '!=' error[1801643] nil[44]))
            (1801664 'move' shouldHandleError[1801662] errorExists[2057365])
            if shouldHandleError[1801662]
            {
              (1801671 call chpl_uncaught_error[170243] error[1801643])
            }
          }
          (1801674 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val call_tmp[1158296]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1158298 'move' call_tmp[1158296](1158304 call offset[1080059] w[1158270]))
        const-val offset[1158305]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1158307 'move' offset[1158305] call_tmp[1158296])
        val call_tmp[1158311]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1158318]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158320 'move' call_tmp[1158318](1158323 call +[949577] offset[1158305]))
        val call_tmp[1158326]:c_ptr(uint(8))[937334] "dead at end of block" "maybe param" "temp"
        (1158328 'move' call_tmp[1158326](1158331 call c_malloc[1080214] call_tmp[1158318]))
        val buf[1158334]:c_ptr(uint(8))[937334] "dead at end of block" "insert auto destroy"
        (1158336 'move' buf[1158334] call_tmp[1158326])
        const-val call_tmp[1158340]:channel(false,dynamic,false)[1080593] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1175588]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175594 'move' default_arg_start[1175588](1175590 call reader_default_start[1080799] f[1158242] error[1769290]))
        val errorExists[2056069]:bool[10] "temp"
        (2056074 'move' errorExists[2056069](2056071 '!=' error[1769290] nil[44]))
        if errorExists[2056069]
        {
          {
            val error[1801679]:Error[167938] "error variable" "temp"
            (1801681 'move' error[1801679] nil[44])
            (1801685 call close[1062273] w[1158270] error[1801679])
            val errorExists[2057373]:bool[10] "temp"
            (2057378 'move' errorExists[2057373](2057375 '!=' error[1801679] nil[44]))
            if errorExists[2057373]
            {
              gotoErrorHandling handler[1801696] handler[1801696]
            }
            label handler[1801696]
            const-val shouldHandleError[1801698]:bool[10] "temp"
            val errorExists[2057381]:bool[10] "temp"
            (2057386 'move' errorExists[2057381](2057383 '!=' error[1801679] nil[44]))
            (1801700 'move' shouldHandleError[1801698] errorExists[2057381])
            if shouldHandleError[1801698]
            {
              (1801707 call chpl_uncaught_error[170243] error[1801679])
            }
          }
          (1801710 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1801715]:Error[167938] "error variable" "temp"
            (1801717 'move' error[1801715] nil[44])
            (1801721 call close[235936] f[1158242] error[1801715])
            val errorExists[2057389]:bool[10] "temp"
            (2057394 'move' errorExists[2057389](2057391 '!=' error[1801715] nil[44]))
            if errorExists[2057389]
            {
              gotoErrorHandling handler[1801732] handler[1801732]
            }
            label handler[1801732]
            const-val shouldHandleError[1801734]:bool[10] "temp"
            val errorExists[2057397]:bool[10] "temp"
            (2057402 'move' errorExists[2057397](2057399 '!=' error[1801715] nil[44]))
            (1801736 'move' shouldHandleError[1801734] errorExists[2057397])
            if shouldHandleError[1801734]
            {
              (1801743 call chpl_uncaught_error[170243] error[1801715])
            }
          }
          (1801746 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_end[1175598]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175604 'move' default_arg_end[1175598](1175600 call reader_default_end[1080845] f[1158242] error[1769290]))
        val errorExists[2056077]:bool[10] "temp"
        (2056082 'move' errorExists[2056077](2056079 '!=' error[1769290] nil[44]))
        if errorExists[2056077]
        {
          {
            val error[1801751]:Error[167938] "error variable" "temp"
            (1801753 'move' error[1801751] nil[44])
            (1801757 call close[1062273] w[1158270] error[1801751])
            val errorExists[2057405]:bool[10] "temp"
            (2057410 'move' errorExists[2057405](2057407 '!=' error[1801751] nil[44]))
            if errorExists[2057405]
            {
              gotoErrorHandling handler[1801768] handler[1801768]
            }
            label handler[1801768]
            const-val shouldHandleError[1801770]:bool[10] "temp"
            val errorExists[2057413]:bool[10] "temp"
            (2057418 'move' errorExists[2057413](2057415 '!=' error[1801751] nil[44]))
            (1801772 'move' shouldHandleError[1801770] errorExists[2057413])
            if shouldHandleError[1801770]
            {
              (1801779 call chpl_uncaught_error[170243] error[1801751])
            }
          }
          (1801782 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1801787]:Error[167938] "error variable" "temp"
            (1801789 'move' error[1801787] nil[44])
            (1801793 call close[235936] f[1158242] error[1801787])
            val errorExists[2057421]:bool[10] "temp"
            (2057426 'move' errorExists[2057421](2057423 '!=' error[1801787] nil[44]))
            if errorExists[2057421]
            {
              gotoErrorHandling handler[1801804] handler[1801804]
            }
            label handler[1801804]
            const-val shouldHandleError[1801806]:bool[10] "temp"
            val errorExists[2057429]:bool[10] "temp"
            (2057434 'move' errorExists[2057429](2057431 '!=' error[1801787] nil[44]))
            (1801808 'move' shouldHandleError[1801806] errorExists[2057429])
            if shouldHandleError[1801806]
            {
              (1801815 call chpl_uncaught_error[170243] error[1801787])
            }
          }
          (1801818 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_hints[1175608]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175614 'move' default_arg_hints[1175608](1175610 call reader_default_hints[1080908] f[1158242] error[1769290]))
        val errorExists[2056085]:bool[10] "temp"
        (2056090 'move' errorExists[2056085](2056087 '!=' error[1769290] nil[44]))
        if errorExists[2056085]
        {
          {
            val error[1801823]:Error[167938] "error variable" "temp"
            (1801825 'move' error[1801823] nil[44])
            (1801829 call close[1062273] w[1158270] error[1801823])
            val errorExists[2057437]:bool[10] "temp"
            (2057442 'move' errorExists[2057437](2057439 '!=' error[1801823] nil[44]))
            if errorExists[2057437]
            {
              gotoErrorHandling handler[1801840] handler[1801840]
            }
            label handler[1801840]
            const-val shouldHandleError[1801842]:bool[10] "temp"
            val errorExists[2057445]:bool[10] "temp"
            (2057450 'move' errorExists[2057445](2057447 '!=' error[1801823] nil[44]))
            (1801844 'move' shouldHandleError[1801842] errorExists[2057445])
            if shouldHandleError[1801842]
            {
              (1801851 call chpl_uncaught_error[170243] error[1801823])
            }
          }
          (1801854 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1801859]:Error[167938] "error variable" "temp"
            (1801861 'move' error[1801859] nil[44])
            (1801865 call close[235936] f[1158242] error[1801859])
            val errorExists[2057453]:bool[10] "temp"
            (2057458 'move' errorExists[2057453](2057455 '!=' error[1801859] nil[44]))
            if errorExists[2057453]
            {
              gotoErrorHandling handler[1801876] handler[1801876]
            }
            label handler[1801876]
            const-val shouldHandleError[1801878]:bool[10] "temp"
            val errorExists[2057461]:bool[10] "temp"
            (2057466 'move' errorExists[2057461](2057463 '!=' error[1801859] nil[44]))
            (1801880 'move' shouldHandleError[1801878] errorExists[2057461])
            if shouldHandleError[1801878]
            {
              (1801887 call chpl_uncaught_error[170243] error[1801859])
            }
          }
          (1801890 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val default_arg_style[1175618]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1175624 'move' default_arg_style[1175618](1175620 call reader_default_style[1080955] f[1158242] error[1769290]))
        val errorExists[2056093]:bool[10] "temp"
        (2056098 'move' errorExists[2056093](2056095 '!=' error[1769290] nil[44]))
        if errorExists[2056093]
        {
          {
            val error[1801895]:Error[167938] "error variable" "temp"
            (1801897 'move' error[1801895] nil[44])
            (1801901 call close[1062273] w[1158270] error[1801895])
            val errorExists[2057469]:bool[10] "temp"
            (2057474 'move' errorExists[2057469](2057471 '!=' error[1801895] nil[44]))
            if errorExists[2057469]
            {
              gotoErrorHandling handler[1801912] handler[1801912]
            }
            label handler[1801912]
            const-val shouldHandleError[1801914]:bool[10] "temp"
            val errorExists[2057477]:bool[10] "temp"
            (2057482 'move' errorExists[2057477](2057479 '!=' error[1801895] nil[44]))
            (1801916 'move' shouldHandleError[1801914] errorExists[2057477])
            if shouldHandleError[1801914]
            {
              (1801923 call chpl_uncaught_error[170243] error[1801895])
            }
          }
          (1801926 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1801931]:Error[167938] "error variable" "temp"
            (1801933 'move' error[1801931] nil[44])
            (1801937 call close[235936] f[1158242] error[1801931])
            val errorExists[2057485]:bool[10] "temp"
            (2057490 'move' errorExists[2057485](2057487 '!=' error[1801931] nil[44]))
            if errorExists[2057485]
            {
              gotoErrorHandling handler[1801948] handler[1801948]
            }
            label handler[1801948]
            const-val shouldHandleError[1801950]:bool[10] "temp"
            val errorExists[2057493]:bool[10] "temp"
            (2057498 'move' errorExists[2057493](2057495 '!=' error[1801931] nil[44]))
            (1801952 'move' shouldHandleError[1801950] errorExists[2057493])
            if shouldHandleError[1801950]
            {
              (1801959 call chpl_uncaught_error[170243] error[1801931])
            }
          }
          (1801962 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val ret_tmp[1790251]:channel(false,dynamic,false)[1080593] "temp"
        (1158348 call reader[1080499] f[1158242] default_arg_start[1175588] default_arg_end[1175598] default_arg_hints[1175608] default_arg_style[1175618] error[1769290] ret_tmp[1790251])
        (1790254 'move' call_tmp[1158340] ret_tmp[1790251])
        val errorExists[2056101]:bool[10] "temp"
        (2056106 'move' errorExists[2056101](2056103 '!=' error[1769290] nil[44]))
        if errorExists[2056101]
        {
          {
            val error[1801967]:Error[167938] "error variable" "temp"
            (1801969 'move' error[1801967] nil[44])
            (1801973 call close[1062273] w[1158270] error[1801967])
            val errorExists[2057501]:bool[10] "temp"
            (2057506 'move' errorExists[2057501](2057503 '!=' error[1801967] nil[44]))
            if errorExists[2057501]
            {
              gotoErrorHandling handler[1801984] handler[1801984]
            }
            label handler[1801984]
            const-val shouldHandleError[1801986]:bool[10] "temp"
            val errorExists[2057509]:bool[10] "temp"
            (2057514 'move' errorExists[2057509](2057511 '!=' error[1801967] nil[44]))
            (1801988 'move' shouldHandleError[1801986] errorExists[2057509])
            if shouldHandleError[1801986]
            {
              (1801995 call chpl_uncaught_error[170243] error[1801967])
            }
          }
          (1801998 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1802003]:Error[167938] "error variable" "temp"
            (1802005 'move' error[1802003] nil[44])
            (1802009 call close[235936] f[1158242] error[1802003])
            val errorExists[2057517]:bool[10] "temp"
            (2057522 'move' errorExists[2057517](2057519 '!=' error[1802003] nil[44]))
            if errorExists[2057517]
            {
              gotoErrorHandling handler[1802020] handler[1802020]
            }
            label handler[1802020]
            const-val shouldHandleError[1802022]:bool[10] "temp"
            val errorExists[2057525]:bool[10] "temp"
            (2057530 'move' errorExists[2057525](2057527 '!=' error[1802003] nil[44]))
            (1802024 'move' shouldHandleError[1802022] errorExists[2057525])
            if shouldHandleError[1802022]
            {
              (1802031 call chpl_uncaught_error[170243] error[1802003])
            }
          }
          (1802034 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val r[1158351]:channel(false,dynamic,false)[1080593] "dead at end of block" "insert auto destroy"
        (1158353 'move' r[1158351] call_tmp[1158340])
        const-val call_tmp[1158368]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1158370 'move' call_tmp[1158368] offset[1158305])
        (1158380 call readBytes[1082750] r[1158351] buf[1158334] call_tmp[1158368] error[1769290])
        val errorExists[2056109]:bool[10] "temp"
        (2056114 'move' errorExists[2056109](2056111 '!=' error[1769290] nil[44]))
        if errorExists[2056109]
        {
          {
            val error[1802039]:Error[167938] "error variable" "temp"
            (1802041 'move' error[1802039] nil[44])
            (1802045 call close[1082005] r[1158351] error[1802039])
            val errorExists[2057533]:bool[10] "temp"
            (2057538 'move' errorExists[2057533](2057535 '!=' error[1802039] nil[44]))
            if errorExists[2057533]
            {
              gotoErrorHandling handler[1802056] handler[1802056]
            }
            label handler[1802056]
            const-val shouldHandleError[1802058]:bool[10] "temp"
            val errorExists[2057541]:bool[10] "temp"
            (2057546 'move' errorExists[2057541](2057543 '!=' error[1802039] nil[44]))
            (1802060 'move' shouldHandleError[1802058] errorExists[2057541])
            if shouldHandleError[1802058]
            {
              (1802067 call chpl_uncaught_error[170243] error[1802039])
            }
          }
          (1802070 call chpl__autoDestroy[1573515] r[1158351])
          {
            val error[1802075]:Error[167938] "error variable" "temp"
            (1802077 'move' error[1802075] nil[44])
            (1802081 call close[1062273] w[1158270] error[1802075])
            val errorExists[2057549]:bool[10] "temp"
            (2057554 'move' errorExists[2057549](2057551 '!=' error[1802075] nil[44]))
            if errorExists[2057549]
            {
              gotoErrorHandling handler[1802092] handler[1802092]
            }
            label handler[1802092]
            const-val shouldHandleError[1802094]:bool[10] "temp"
            val errorExists[2057557]:bool[10] "temp"
            (2057562 'move' errorExists[2057557](2057559 '!=' error[1802075] nil[44]))
            (1802096 'move' shouldHandleError[1802094] errorExists[2057557])
            if shouldHandleError[1802094]
            {
              (1802103 call chpl_uncaught_error[170243] error[1802075])
            }
          }
          (1802106 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1802111]:Error[167938] "error variable" "temp"
            (1802113 'move' error[1802111] nil[44])
            (1802117 call close[235936] f[1158242] error[1802111])
            val errorExists[2057565]:bool[10] "temp"
            (2057570 'move' errorExists[2057565](2057567 '!=' error[1802111] nil[44]))
            if errorExists[2057565]
            {
              gotoErrorHandling handler[1802128] handler[1802128]
            }
            label handler[1802128]
            const-val shouldHandleError[1802130]:bool[10] "temp"
            val errorExists[2057573]:bool[10] "temp"
            (2057578 'move' errorExists[2057573](2057575 '!=' error[1802111] nil[44]))
            (1802132 'move' shouldHandleError[1802130] errorExists[2057573])
            if shouldHandleError[1802130]
            {
              (1802139 call chpl_uncaught_error[170243] error[1802111])
            }
          }
          (1802142 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        ref call_tmp[1158387]:_ref(uint(8))[936819] "dead after last mention" "maybe param" "temp"
        (1158389 'move' call_tmp[1158387](1158392 call this[954002] buf[1158334] offset[1158305]))
        const-val coerce_tmp[1175634]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175640 'move' coerce_tmp[1175634](1175636 'cast' uint(8)[100] 0))
        (1158395 call =[435259] call_tmp[1158387] coerce_tmp[1175634])
        const-val call_tmp[1158401]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158403 'move' call_tmp[1158401](1158406 call +[949577] offset[1158305]))
        const-val call_tmp[1158409]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1786047]:string[26] "temp"
        (1158414 call createStringWithNewBuffer[30490] buf[1158334] offset[1158305] call_tmp[1158401] replace[173648] error[1769290] ret_tmp[1786047])
        (1786050 'move' call_tmp[1158409] ret_tmp[1786047])
        val errorExists[2056117]:bool[10] "temp"
        (2056122 'move' errorExists[2056117](2056119 '!=' error[1769290] nil[44]))
        if errorExists[2056117]
        {
          {
            val error[1802147]:Error[167938] "error variable" "temp"
            (1802149 'move' error[1802147] nil[44])
            (1802153 call close[1082005] r[1158351] error[1802147])
            val errorExists[2057581]:bool[10] "temp"
            (2057586 'move' errorExists[2057581](2057583 '!=' error[1802147] nil[44]))
            if errorExists[2057581]
            {
              gotoErrorHandling handler[1802164] handler[1802164]
            }
            label handler[1802164]
            const-val shouldHandleError[1802166]:bool[10] "temp"
            val errorExists[2057589]:bool[10] "temp"
            (2057594 'move' errorExists[2057589](2057591 '!=' error[1802147] nil[44]))
            (1802168 'move' shouldHandleError[1802166] errorExists[2057589])
            if shouldHandleError[1802166]
            {
              (1802175 call chpl_uncaught_error[170243] error[1802147])
            }
          }
          (1802178 call chpl__autoDestroy[1573515] r[1158351])
          {
            val error[1802183]:Error[167938] "error variable" "temp"
            (1802185 'move' error[1802183] nil[44])
            (1802189 call close[1062273] w[1158270] error[1802183])
            val errorExists[2057597]:bool[10] "temp"
            (2057602 'move' errorExists[2057597](2057599 '!=' error[1802183] nil[44]))
            if errorExists[2057597]
            {
              gotoErrorHandling handler[1802200] handler[1802200]
            }
            label handler[1802200]
            const-val shouldHandleError[1802202]:bool[10] "temp"
            val errorExists[2057605]:bool[10] "temp"
            (2057610 'move' errorExists[2057605](2057607 '!=' error[1802183] nil[44]))
            (1802204 'move' shouldHandleError[1802202] errorExists[2057605])
            if shouldHandleError[1802202]
            {
              (1802211 call chpl_uncaught_error[170243] error[1802183])
            }
          }
          (1802214 call chpl__autoDestroy[1569261] w[1158270])
          {
            val error[1802219]:Error[167938] "error variable" "temp"
            (1802221 'move' error[1802219] nil[44])
            (1802225 call close[235936] f[1158242] error[1802219])
            val errorExists[2057613]:bool[10] "temp"
            (2057618 'move' errorExists[2057613](2057615 '!=' error[1802219] nil[44]))
            if errorExists[2057613]
            {
              gotoErrorHandling handler[1802236] handler[1802236]
            }
            label handler[1802236]
            const-val shouldHandleError[1802238]:bool[10] "temp"
            val errorExists[2057621]:bool[10] "temp"
            (2057626 'move' errorExists[2057621](2057623 '!=' error[1802219] nil[44]))
            (1802240 'move' shouldHandleError[1802238] errorExists[2057621])
            if shouldHandleError[1802238]
            {
              (1802247 call chpl_uncaught_error[170243] error[1802219])
            }
          }
          (1802250 call chpl__autoDestroy[1496269] f[1158242])
          gotoErrorHandling handler[1769291] handler[1769291]
        }
        const-val ret[1158419]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1158421 'move' ret[1158419] call_tmp[1158409])
        const-val coerce_tmp[1175645]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175651 'move' coerce_tmp[1175645](1175647 'cast' c_void_ptr[149] buf[1158334]))
        (1158433 call c_free[207852] coerce_tmp[1175645])
        (1175655 'move' ret[1157785] ret[1158419])
        {
          val error[1802255]:Error[167938] "error variable" "temp"
          (1802257 'move' error[1802255] nil[44])
          (1802261 call close[1082005] r[1158351] error[1802255])
          val errorExists[2057629]:bool[10] "temp"
          (2057634 'move' errorExists[2057629](2057631 '!=' error[1802255] nil[44]))
          if errorExists[2057629]
          {
            gotoErrorHandling handler[1802272] handler[1802272]
          }
          label handler[1802272]
          const-val shouldHandleError[1802274]:bool[10] "temp"
          val errorExists[2057637]:bool[10] "temp"
          (2057642 'move' errorExists[2057637](2057639 '!=' error[1802255] nil[44]))
          (1802276 'move' shouldHandleError[1802274] errorExists[2057637])
          if shouldHandleError[1802274]
          {
            (1802283 call chpl_uncaught_error[170243] error[1802255])
          }
        }
        (1802286 call chpl__autoDestroy[1573515] r[1158351])
        {
          val error[1802291]:Error[167938] "error variable" "temp"
          (1802293 'move' error[1802291] nil[44])
          (1802297 call close[1062273] w[1158270] error[1802291])
          val errorExists[2057645]:bool[10] "temp"
          (2057650 'move' errorExists[2057645](2057647 '!=' error[1802291] nil[44]))
          if errorExists[2057645]
          {
            gotoErrorHandling handler[1802308] handler[1802308]
          }
          label handler[1802308]
          const-val shouldHandleError[1802310]:bool[10] "temp"
          val errorExists[2057653]:bool[10] "temp"
          (2057658 'move' errorExists[2057653](2057655 '!=' error[1802291] nil[44]))
          (1802312 'move' shouldHandleError[1802310] errorExists[2057653])
          if shouldHandleError[1802310]
          {
            (1802319 call chpl_uncaught_error[170243] error[1802291])
          }
        }
        (1802322 call chpl__autoDestroy[1569261] w[1158270])
        {
          val error[1802327]:Error[167938] "error variable" "temp"
          (1802329 'move' error[1802327] nil[44])
          (1802333 call close[235936] f[1158242] error[1802327])
          val errorExists[2057661]:bool[10] "temp"
          (2057666 'move' errorExists[2057661](2057663 '!=' error[1802327] nil[44]))
          if errorExists[2057661]
          {
            gotoErrorHandling handler[1802344] handler[1802344]
          }
          label handler[1802344]
          const-val shouldHandleError[1802346]:bool[10] "temp"
          val errorExists[2057669]:bool[10] "temp"
          (2057674 'move' errorExists[2057669](2057671 '!=' error[1802327] nil[44]))
          (1802348 'move' shouldHandleError[1802346] errorExists[2057669])
          if shouldHandleError[1802346]
          {
            (1802355 call chpl_uncaught_error[170243] error[1802327])
          }
        }
        (1802358 call chpl__autoDestroy[1496269] f[1158242])
        (1802361 call chpl__autoDestroy[1576281] args[1157795])
        gotoReturn _end_stringify[1158448] _end_stringify[1158448]
        label handler[1769291]
        const-val shouldHandleError[1769484]:bool[10] "temp"
        val errorExists[2056125]:bool[10] "temp"
        (2056130 'move' errorExists[2056125](2056127 '!=' error[1769290] nil[44]))
        (1769488 'move' shouldHandleError[1769484] errorExists[2056125])
        if shouldHandleError[1769484]
        {
          (1769481 call chpl_uncaught_error[170243] error[1769290])
        }
      }
    }
    (1802364 call chpl__autoDestroy[1576281] args[1157795])
    label _end_stringify[1158448]
    (1791428 '=' _retArg[1791426] ret[1157785])
    (1791430 return _void[55])
  }
  function stringify[1272404](const  ref arg _e0_args[1272406]:string[26], const in arg _e1_args[1272408]:int(64)[13], const  ref arg _e2_args[1272410]:string[26], ref arg _retArg[1793630]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1272424]:(string,int(64),string)[1273095] "insert auto destroy"
    const-val ret_tmp[1793638]:(string,int(64),string)[1273095] "temp"
    (1272429 call chpl__init_tuple[1273108] _e0_args[1272406] _e1_args[1272408] _e2_args[1272410] ret_tmp[1793638])
    (1793641 'move' args[1272424] ret_tmp[1793638])
    const-val ret[1272414]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1272452]:string[26] "dead at end of block" "insert auto destroy"
      (1272454 'move' str[1272452](1793634 call chpl__initCopy[981259] ""))
      {
        const-val i[1272459]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1272461 'move' i[1272459] 0)
        {
          {
            {
              ref call_tmp[1276167]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1276169 'move' call_tmp[1276167](1277197 '.v' args[1272424] x0[1273089]))
              (1276175 call +=[38797] str[1272452] call_tmp[1276167])
            }
          }
        }
        label _continueLabel0[1276132]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1276743]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1276745 'move' call_tmp[1276743](1277304 '.' args[1272424] x1[1273091]))
                    const-val call_tmp[1276750]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1277307]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1277311 'move' coerce_tmp[1277307](1277309 'deref' call_tmp[1276743]))
                    const-val ret_tmp[1790023]:string[26] "temp"
                    (1276755 call _cast[1063064] coerce_tmp[1277307] ret_tmp[1790023])
                    (1790026 'move' call_tmp[1276750] ret_tmp[1790023])
                    (1276759 call +=[38797] str[1272452] call_tmp[1276750])
                    (1804077 call chpl__autoDestroy[1494420] call_tmp[1276750])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1276477]
        {
          {
            {
              ref call_tmp[1276857]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1276859 'move' call_tmp[1276857](1277345 '.v' args[1272424] x2[1273093]))
              (1276865 call +=[38797] str[1272452] call_tmp[1276857])
            }
          }
        }
        label _continueLabel2[1276822]
        label _unused_continueLabel[1272850]
        label _breakLabel[1272852]
      }
      (1277350 'move' ret[1272414] str[1272452])
      (1804080 call chpl__autoDestroy[1590414] args[1272424])
      gotoReturn _end_stringify[1273077] _end_stringify[1273077]
    }
    (1804083 call chpl__autoDestroy[1590414] args[1272424])
    label _end_stringify[1273077]
    (1793632 '=' _retArg[1793630] ret[1272414])
    (1793636 return _void[55])
  }
  function stringify[1212889](const  ref arg _e0_args[1212891]:string[26], const in arg _e1_args[1212893]:int(64)[13], ref arg _retArg[1791814]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1212905]:(string,int(64))[1213572] "insert auto destroy"
    const-val ret_tmp[1791822]:(string,int(64))[1213572] "temp"
    (1212910 call chpl__init_tuple[1213583] _e0_args[1212891] _e1_args[1212893] ret_tmp[1791822])
    (1791825 'move' args[1212905] ret_tmp[1791822])
    const-val ret[1212897]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1212932]:string[26] "dead at end of block" "insert auto destroy"
      (1212934 'move' str[1212932](1791818 call chpl__initCopy[981259] ""))
      {
        const-val i[1212939]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1212941 'move' i[1212939] 0)
        {
          {
            {
              ref call_tmp[1216564]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1216566 'move' call_tmp[1216564](1217249 '.v' args[1212905] x0[1213568]))
              (1216572 call +=[38797] str[1212932] call_tmp[1216564])
            }
          }
        }
        label _continueLabel0[1216529]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1217140]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1217142 'move' call_tmp[1217140](1217356 '.' args[1212905] x1[1213570]))
                    const-val call_tmp[1217147]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1217359]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1217363 'move' coerce_tmp[1217359](1217361 'deref' call_tmp[1217140]))
                    const-val ret_tmp[1789993]:string[26] "temp"
                    (1217152 call _cast[1063064] coerce_tmp[1217359] ret_tmp[1789993])
                    (1789996 'move' call_tmp[1217147] ret_tmp[1789993])
                    (1217156 call +=[38797] str[1212932] call_tmp[1217147])
                    (1803762 call chpl__autoDestroy[1494420] call_tmp[1217147])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1216874]
        label _unused_continueLabel[1213330]
        label _breakLabel[1213332]
      }
      (1217368 'move' ret[1212897] str[1212932])
      (1803765 call chpl__autoDestroy[1585193] args[1212905])
      gotoReturn _end_stringify[1213557] _end_stringify[1213557]
    }
    (1803768 call chpl__autoDestroy[1585193] args[1212905])
    label _end_stringify[1213557]
    (1791816 '=' _retArg[1791814] ret[1212897])
    (1791820 return _void[55])
  }
  function stringify[1278901](const  ref arg _e0_args[1278903]:string[26], const in arg _e1_args[1278905]:int(64)[13], const  ref arg _e2_args[1278907]:string[26], const in arg _e3_args[1278909]:int(64)[13], const  ref arg _e4_args[1278911]:string[26], ref arg _retArg[1793656]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1278929]:(string,int(64),string,int(64),string)[1279608] "insert auto destroy"
    const-val ret_tmp[1793664]:(string,int(64),string,int(64),string)[1279608] "temp"
    (1278934 call chpl__init_tuple[1279625] _e0_args[1278903] _e1_args[1278905] _e2_args[1278907] _e3_args[1278909] _e4_args[1278911] ret_tmp[1793664])
    (1793667 'move' args[1278929] ret_tmp[1793664])
    const-val ret[1278915]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1278959]:string[26] "dead at end of block" "insert auto destroy"
      (1278961 'move' str[1278959](1793660 call chpl__initCopy[981259] ""))
      {
        const-val i[1278966]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1278968 'move' i[1278966] 0)
        {
          {
            {
              ref call_tmp[1283482]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1283484 'move' call_tmp[1283482](1285202 '.v' args[1278929] x0[1279598]))
              (1283490 call +=[38797] str[1278959] call_tmp[1283482])
            }
          }
        }
        label _continueLabel0[1283447]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284058]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1284060 'move' call_tmp[1284058](1285309 '.' args[1278929] x1[1279600]))
                    const-val call_tmp[1284065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285312]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285316 'move' coerce_tmp[1285312](1285314 'deref' call_tmp[1284058]))
                    const-val ret_tmp[1790029]:string[26] "temp"
                    (1284070 call _cast[1063064] coerce_tmp[1285312] ret_tmp[1790029])
                    (1790032 'move' call_tmp[1284065] ret_tmp[1790029])
                    (1284074 call +=[38797] str[1278959] call_tmp[1284065])
                    (1804093 call chpl__autoDestroy[1494420] call_tmp[1284065])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1283792]
        {
          {
            {
              ref call_tmp[1284172]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1284174 'move' call_tmp[1284172](1285350 '.v' args[1278929] x2[1279602]))
              (1284180 call +=[38797] str[1278959] call_tmp[1284172])
            }
          }
        }
        label _continueLabel2[1284137]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284748]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1284750 'move' call_tmp[1284748](1285457 '.' args[1278929] x3[1279604]))
                    const-val call_tmp[1284755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285460]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285464 'move' coerce_tmp[1285460](1285462 'deref' call_tmp[1284748]))
                    const-val ret_tmp[1790035]:string[26] "temp"
                    (1284760 call _cast[1063064] coerce_tmp[1285460] ret_tmp[1790035])
                    (1790038 'move' call_tmp[1284755] ret_tmp[1790035])
                    (1284764 call +=[38797] str[1278959] call_tmp[1284755])
                    (1804097 call chpl__autoDestroy[1494420] call_tmp[1284755])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1284482]
        {
          {
            {
              ref call_tmp[1284862]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1284864 'move' call_tmp[1284862](1285498 '.v' args[1278929] x4[1279606]))
              (1284870 call +=[38797] str[1278959] call_tmp[1284862])
            }
          }
        }
        label _continueLabel4[1284827]
        label _unused_continueLabel[1279357]
        label _breakLabel[1279359]
      }
      (1285503 'move' ret[1278915] str[1278959])
      (1804100 call chpl__autoDestroy[1590750] args[1278929])
      gotoReturn _end_stringify[1279584] _end_stringify[1279584]
    }
    (1804103 call chpl__autoDestroy[1590750] args[1278929])
    label _end_stringify[1279584]
    (1793658 '=' _retArg[1793656] ret[1278915])
    (1793662 return _void[55])
  }
  function stringify[1337699](const  ref arg _e0_args[1337701]:string[26], const  ref arg _e1_args[1337703]:string[26], const in arg _e2_args[1337705]:int(64)[13], const  ref arg _e3_args[1337707]:string[26], const in arg _e4_args[1337709]:range(int(64),bounded,false)[1026725], ref arg _retArg[1794363]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1337727]:(string,string,int(64),string,range(int(64),bounded,false))[1338406] "insert auto destroy"
    const-val ret_tmp[1794373]:(string,string,int(64),string,range(int(64),bounded,false))[1338406] "temp"
    (1337732 call chpl__init_tuple[1338423] _e0_args[1337701] _e1_args[1337703] _e2_args[1337705] _e3_args[1337707] _e4_args[1337709] ret_tmp[1794373])
    (1794376 'move' args[1337727] ret_tmp[1794373])
    const-val ret[1337713]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1337757]:string[26] "dead at end of block" "insert auto destroy"
      (1337759 'move' str[1337757](1794369 call chpl__initCopy[981259] ""))
      {
        const-val i[1337764]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1337766 'move' i[1337764] 0)
        {
          {
            {
              ref call_tmp[1341646]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1341648 'move' call_tmp[1341646](1343366 '.v' args[1337727] x0[1338396]))
              (1341654 call +=[38797] str[1337757] call_tmp[1341646])
            }
          }
        }
        label _continueLabel0[1341611]
        {
          {
            {
              ref call_tmp[1341991]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1341993 'move' call_tmp[1341991](1343400 '.v' args[1337727] x1[1338398]))
              (1341999 call +=[38797] str[1337757] call_tmp[1341991])
            }
          }
        }
        label _continueLabel1[1341956]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1342567]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1342569 'move' call_tmp[1342567](1343507 '.' args[1337727] x2[1338400]))
                    const-val call_tmp[1342574]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343514 'move' coerce_tmp[1343510](1343512 'deref' call_tmp[1342567]))
                    const-val ret_tmp[1790041]:string[26] "temp"
                    (1342579 call _cast[1063064] coerce_tmp[1343510] ret_tmp[1790041])
                    (1790044 'move' call_tmp[1342574] ret_tmp[1790041])
                    (1342583 call +=[38797] str[1337757] call_tmp[1342574])
                    (1804591 call chpl__autoDestroy[1494420] call_tmp[1342574])
                  }
                }
              }
            }
          }
        }
        label _continueLabel2[1342301]
        {
          {
            {
              ref call_tmp[1342681]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1342683 'move' call_tmp[1342681](1343548 '.v' args[1337727] x3[1338402]))
              (1342689 call +=[38797] str[1337757] call_tmp[1342681])
            }
          }
        }
        label _continueLabel3[1342646]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1343257]:_ref(range(int(64),bounded,false))[1026769] "dead after last mention" "maybe param" "temp"
                    (1343259 'move' call_tmp[1343257](1343648 '.' args[1337727] x4[1338404]))
                    const-val call_tmp[1343264]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343651]:range(int(64),bounded,false)[1026725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343655 'move' coerce_tmp[1343651] call_tmp[1343257])
                    const-val ret_tmp[1790838]:string[26] "temp"
                    (1343269 call _cast[1119348] coerce_tmp[1343651] ret_tmp[1790838])
                    (1790841 'move' call_tmp[1343264] ret_tmp[1790838])
                    (1343273 call +=[38797] str[1337757] call_tmp[1343264])
                    (1804595 call chpl__autoDestroy[1494420] call_tmp[1343264])
                    (1804598 call chpl__autoDestroy[1567322] coerce_tmp[1343651])
                  }
                }
              }
            }
          }
        }
        label _continueLabel4[1342991]
        label _unused_continueLabel[1338155]
        label _breakLabel[1338157]
      }
      (1343660 'move' ret[1337713] str[1337757])
      (1804601 call chpl__autoDestroy[1648744] args[1337727])
      gotoReturn _end_stringify[1338382] _end_stringify[1338382]
    }
    (1804604 call chpl__autoDestroy[1648744] args[1337727])
    label _end_stringify[1338382]
    (1794365 '=' _retArg[1794363] ret[1337713])
    (1794371 return _void[55])
  }
  function stringify[1398273](const  ref arg _e0_args[1398275]:string[26], const in arg _e1_args[1398277]:int(64)[13], const  ref arg _e2_args[1398279]:string[26], const in arg _e3_args[1398281]:int(64)[13], const  ref arg _e4_args[1398283]:string[26], const in arg _e5_args[1398285]:int(64)[13], ref arg _retArg[1795148]:_ref(string)[937850]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1398305]:(string,int(64),string,int(64),string,int(64))[1398988] "insert auto destroy"
    const-val ret_tmp[1795156]:(string,int(64),string,int(64),string,int(64))[1398988] "temp"
    (1398310 call chpl__init_tuple[1399007] _e0_args[1398275] _e1_args[1398277] _e2_args[1398279] _e3_args[1398281] _e4_args[1398283] _e5_args[1398285] ret_tmp[1795156])
    (1795159 'move' args[1398305] ret_tmp[1795156])
    const-val ret[1398289]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1398336]:string[26] "dead at end of block" "insert auto destroy"
      (1398338 'move' str[1398336](1795152 call chpl__initCopy[981259] ""))
      {
        const-val i[1398343]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1398345 'move' i[1398343] 0)
        {
          {
            {
              ref call_tmp[1402950]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1402952 'move' call_tmp[1402950](1405015 '.v' args[1398305] x0[1398976]))
              (1402958 call +=[38797] str[1398336] call_tmp[1402950])
            }
          }
        }
        label _continueLabel0[1402915]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1403526]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1403528 'move' call_tmp[1403526](1405122 '.' args[1398305] x1[1398978]))
                    const-val call_tmp[1403533]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1405125]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1405129 'move' coerce_tmp[1405125](1405127 'deref' call_tmp[1403526]))
                    const-val ret_tmp[1790047]:string[26] "temp"
                    (1403538 call _cast[1063064] coerce_tmp[1405125] ret_tmp[1790047])
                    (1790050 'move' call_tmp[1403533] ret_tmp[1790047])
                    (1403542 call +=[38797] str[1398336] call_tmp[1403533])
                    (1804970 call chpl__autoDestroy[1494420] call_tmp[1403533])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1403260]
        {
          {
            {
              ref call_tmp[1403640]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1403642 'move' call_tmp[1403640](1405163 '.v' args[1398305] x2[1398980]))
              (1403648 call +=[38797] str[1398336] call_tmp[1403640])
            }
          }
        }
        label _continueLabel2[1403605]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1404216]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1404218 'move' call_tmp[1404216](1405270 '.' args[1398305] x3[1398982]))
                    const-val call_tmp[1404223]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1405273]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1405277 'move' coerce_tmp[1405273](1405275 'deref' call_tmp[1404216]))
                    const-val ret_tmp[1790053]:string[26] "temp"
                    (1404228 call _cast[1063064] coerce_tmp[1405273] ret_tmp[1790053])
                    (1790056 'move' call_tmp[1404223] ret_tmp[1790053])
                    (1404232 call +=[38797] str[1398336] call_tmp[1404223])
                    (1804974 call chpl__autoDestroy[1494420] call_tmp[1404223])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1403950]
        {
          {
            {
              ref call_tmp[1404330]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1404332 'move' call_tmp[1404330](1405311 '.v' args[1398305] x4[1398984]))
              (1404338 call +=[38797] str[1398336] call_tmp[1404330])
            }
          }
        }
        label _continueLabel4[1404295]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1404906]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
                    (1404908 'move' call_tmp[1404906](1405418 '.' args[1398305] x5[1398986]))
                    const-val call_tmp[1404913]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1405421]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1405425 'move' coerce_tmp[1405421](1405423 'deref' call_tmp[1404906]))
                    const-val ret_tmp[1790059]:string[26] "temp"
                    (1404918 call _cast[1063064] coerce_tmp[1405421] ret_tmp[1790059])
                    (1790062 'move' call_tmp[1404913] ret_tmp[1790059])
                    (1404922 call +=[38797] str[1398336] call_tmp[1404913])
                    (1804978 call chpl__autoDestroy[1494420] call_tmp[1404913])
                  }
                }
              }
            }
          }
        }
        label _continueLabel5[1404640]
        label _unused_continueLabel[1398734]
        label _breakLabel[1398736]
      }
      (1405430 'move' ret[1398289] str[1398336])
      (1804981 call chpl__autoDestroy[1682327] args[1398305])
      gotoReturn _end_stringify[1398961] _end_stringify[1398961]
    }
    (1804984 call chpl__autoDestroy[1682327] args[1398305])
    label _end_stringify[1398961]
    (1795150 '=' _retArg[1795148] ret[1398289])
    (1795154 return _void[55])
  }
  val _arg_to_proto_names[246473]:heap__tuple_6_star_string[2033843] "dead at end of block" "insert auto destroy" "private"
  function _ref(channel(true,dynamic,false))[1060867].write[1065867](const  ref arg this[1065873]:_ref(channel(true,dynamic,false))[1060867], const  ref arg _e0_args[1065875]:byteIndex[28170], ref arg error_out[1768468]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1065924]:1*byteIndex[1056992] "insert auto destroy"
    const-val ret_tmp[1789843]:1*byteIndex[1056992] "temp"
    (1065929 call chpl__init_tuple[1057010] _e0_args[1065875] ret_tmp[1789843])
    (1789846 'move' args[1065924] ret_tmp[1789843])
    val ret[1065879]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1065962]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790161]:locale[28] "temp"
    (1065970 call getLocaleOfIoRequest[1066122] this[1065873] ret_tmp[1790161])
    (1790164 'move' call_tmp[1065962] ret_tmp[1790161])
    const-val origLocale[1065971]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1065973 'move' origLocale[1065971] call_tmp[1065962])
    const-val tmp[1065977]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1065979]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1065981 'move' call_tmp[1065979](1065984 call home[1061666] this[1065873]))
    const-val call_tmp[1065987]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1066329]:BaseLocale[91201] "dead after last mention" "temp"
    (1066334 'move' _locale_tmp_[1066329](1066331 call _value[89981] call_tmp[1065979]))
    (1065989 'move' call_tmp[1065987](1065991 '_wide_get_locale' _locale_tmp_[1066329]))
    (1065993 'move' tmp[1065977] call_tmp[1065987])
    val error[1768473]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1768475 'move' error[1768473] nil[44])
    val rvfDerefTmp[2032475]:channel(true,dynamic,false)[1060858] "temp"
    (2032479 'move' rvfDerefTmp[2032475](2032477 'deref' this[1065873]))
    val rvfDerefTmp[2032510]:locale[28] "temp"
    (2032513 'move' rvfDerefTmp[2032510] origLocale[1065971])
    val isdirect[2038269]:bool[10] "temp"
    (2038274 'move' isdirect[2038269](2038271 call chpl_doDirectExecuteOn[187423] tmp[1065977]))
    if isdirect[2038269]
    {
      (2038278 call on_fn[1066000] rvfDerefTmp[2032475] args[1065924] rvfDerefTmp[2032510] error[1768473])
    }
    {
      val _args_foron_fn[2038302]:_class_localson_fn[2038288] "temp"
      (2038306 'move' _args_foron_fn[2038302](2038304 'stack allocate class' _class_localson_fn[2038288]))
      (2038308 '.=' _args_foron_fn[2038302] _0_tmp[2038291] tmp[1065977])
      (2038312 '.=' _args_foron_fn[2038302] _1_rvfDerefTmp[2038293] rvfDerefTmp[2032475])
      ref tmp[2038316]:1*byteIndex[1056992] "temp"
      (2038320 'move' tmp[2038316](2038318 'set reference' args[1065924]))
      (2038322 '.=' _args_foron_fn[2038302] _2_args[2038295] tmp[2038316])
      (2038326 '.=' _args_foron_fn[2038302] _3_rvfDerefTmp[2038297] rvfDerefTmp[2032510])
      ref tmp[2038330]:Error[167938] "temp"
      (2038334 'move' tmp[2038330](2038332 'set reference' error[1768473]))
      (2038336 '.=' _args_foron_fn[2038302] _4_error[2038299] tmp[2038330])
      val _args_vforon_fn[2038340]:c_void_ptr[149] "temp"
      (2038344 'move' _args_vforon_fn[2038340](2038342 'cast_to_void_star' _args_foron_fn[2038302]))
      val _args_sizeon_fn[2038346]:int(64)[13] "temp"
      (2038350 'move' _args_sizeon_fn[2038346](2038348 'sizeof_bundle' _class_localson_fn[2038288]))
      on(2038406 call wrapon_fn[2038352] tmp[1065977] _args_vforon_fn[2038340] _args_sizeon_fn[2038346] _args_foron_fn[2038302])
    }
    val errorExists[2055637]:bool[10] "temp"
    (2055642 'move' errorExists[2055637](2055639 '!=' error[1768473] nil[44]))
    if errorExists[2055637]
    {
      (1768479 '=' error_out[1768468] error[1768473])
      (1800603 call chpl__autoDestroy[1494484] origLocale[1065971])
      (1800606 call chpl__autoDestroy[1568199] args[1065924])
      gotoErrorHandlingReturn _endwrite[1768470] _endwrite[1768470]
    }
    {
    }
    (1066107 'move' ret[1065879] 1)
    (1800609 call chpl__autoDestroy[1494484] origLocale[1065971])
    (1800612 call chpl__autoDestroy[1568199] args[1065924])
    label _endwrite[1768470]
    (1066112 return ret[1065879])
  }
  function _ref(channel(true,dynamic,false))[1060867].write[1164422](const  ref arg this[1164428]:_ref(channel(true,dynamic,false))[1060867], const  ref arg _e0_args[1164430]:string[26], const  ref arg _e1_args[1164432]:codepointIndex[28274], const  ref arg _e2_args[1164434]:string[26], ref arg error_out[1769492]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1164740]:(string,codepointIndex,string)[1158466] "insert auto destroy"
    const-val ret_tmp[1791438]:(string,codepointIndex,string)[1158466] "temp"
    (1164745 call chpl__init_tuple[1158479] _e0_args[1164430] _e1_args[1164432] _e2_args[1164434] ret_tmp[1791438])
    (1791441 'move' args[1164740] ret_tmp[1791438])
    val ret[1164438]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1164780]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790173]:locale[28] "temp"
    (1164788 call getLocaleOfIoRequest[1066122] this[1164428] ret_tmp[1790173])
    (1790176 'move' call_tmp[1164780] ret_tmp[1790173])
    const-val origLocale[1164789]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1164791 'move' origLocale[1164789] call_tmp[1164780])
    const-val tmp[1164795]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1164797]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1164799 'move' call_tmp[1164797](1164802 call home[1061666] this[1164428]))
    const-val call_tmp[1164805]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1164942]:BaseLocale[91201] "dead after last mention" "temp"
    (1164947 'move' _locale_tmp_[1164942](1164944 call _value[89981] call_tmp[1164797]))
    (1164807 'move' call_tmp[1164805](1164809 '_wide_get_locale' _locale_tmp_[1164942]))
    (1164811 'move' tmp[1164795] call_tmp[1164805])
    val error[1769497]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769499 'move' error[1769497] nil[44])
    val rvfDerefTmp[2032698]:channel(true,dynamic,false)[1060858] "temp"
    (2032702 'move' rvfDerefTmp[2032698](2032700 'deref' this[1164428]))
    val rvfDerefTmp[2032761]:locale[28] "temp"
    (2032764 'move' rvfDerefTmp[2032761] origLocale[1164789])
    val isdirect[2039626]:bool[10] "temp"
    (2039631 'move' isdirect[2039626](2039628 call chpl_doDirectExecuteOn[187423] tmp[1164795]))
    if isdirect[2039626]
    {
      (2039635 call on_fn[1164818] rvfDerefTmp[2032698] args[1164740] rvfDerefTmp[2032761] error[1769497])
    }
    {
      val _args_foron_fn[2039659]:_class_localson_fn[2039645] "temp"
      (2039663 'move' _args_foron_fn[2039659](2039661 'stack allocate class' _class_localson_fn[2039645]))
      (2039665 '.=' _args_foron_fn[2039659] _0_tmp[2039648] tmp[1164795])
      (2039669 '.=' _args_foron_fn[2039659] _1_rvfDerefTmp[2039650] rvfDerefTmp[2032698])
      ref tmp[2039673]:(string,codepointIndex,string)[1158466] "temp"
      (2039677 'move' tmp[2039673](2039675 'set reference' args[1164740]))
      (2039679 '.=' _args_foron_fn[2039659] _2_args[2039652] tmp[2039673])
      (2039683 '.=' _args_foron_fn[2039659] _3_rvfDerefTmp[2039654] rvfDerefTmp[2032761])
      ref tmp[2039687]:Error[167938] "temp"
      (2039691 'move' tmp[2039687](2039689 'set reference' error[1769497]))
      (2039693 '.=' _args_foron_fn[2039659] _4_error[2039656] tmp[2039687])
      val _args_vforon_fn[2039697]:c_void_ptr[149] "temp"
      (2039701 'move' _args_vforon_fn[2039697](2039699 'cast_to_void_star' _args_foron_fn[2039659]))
      val _args_sizeon_fn[2039703]:int(64)[13] "temp"
      (2039707 'move' _args_sizeon_fn[2039703](2039705 'sizeof_bundle' _class_localson_fn[2039645]))
      on(2039763 call wrapon_fn[2039709] tmp[1164795] _args_vforon_fn[2039697] _args_sizeon_fn[2039703] _args_foron_fn[2039659])
    }
    val errorExists[2056133]:bool[10] "temp"
    (2056138 'move' errorExists[2056133](2056135 '!=' error[1769497] nil[44]))
    if errorExists[2056133]
    {
      (1769503 '=' error_out[1769492] error[1769497])
      (1802367 call chpl__autoDestroy[1494484] origLocale[1164789])
      (1802370 call chpl__autoDestroy[1576281] args[1164740])
      gotoErrorHandlingReturn _endwrite[1769494] _endwrite[1769494]
    }
    {
    }
    (1164925 'move' ret[1164438] 1)
    (1802373 call chpl__autoDestroy[1494484] origLocale[1164789])
    (1802376 call chpl__autoDestroy[1576281] args[1164740])
    label _endwrite[1769494]
    (1164930 return ret[1164438])
  }
  function _ref(channel(true,dynamic,false))[1060867].write[1179886](const  ref arg this[1179892]:_ref(channel(true,dynamic,false))[1060867], const  ref arg _e0_args[1179894]:string[26], const  ref arg _e1_args[1179896]:codepointIndex[28274], const  ref arg _e2_args[1179898]:string[26], const in arg _e3_args[1179900]:int(64)[13], ref arg error_out[1769989]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1180218]:(string,codepointIndex,string,int(64))[1176431] "insert auto destroy"
    const-val ret_tmp[1791496]:(string,codepointIndex,string,int(64))[1176431] "temp"
    (1180223 call chpl__init_tuple[1176446] _e0_args[1179894] _e1_args[1179896] _e2_args[1179898] _e3_args[1179900] ret_tmp[1791496])
    (1791499 'move' args[1180218] ret_tmp[1791496])
    val ret[1179904]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1180259]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1790179]:locale[28] "temp"
    (1180267 call getLocaleOfIoRequest[1066122] this[1179892] ret_tmp[1790179])
    (1790182 'move' call_tmp[1180259] ret_tmp[1790179])
    const-val origLocale[1180268]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1180270 'move' origLocale[1180268] call_tmp[1180259])
    const-val tmp[1180274]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1180276]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1180278 'move' call_tmp[1180276](1180281 call home[1061666] this[1179892]))
    const-val call_tmp[1180284]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1180427]:BaseLocale[91201] "dead after last mention" "temp"
    (1180432 'move' _locale_tmp_[1180427](1180429 call _value[89981] call_tmp[1180276]))
    (1180286 'move' call_tmp[1180284](1180288 '_wide_get_locale' _locale_tmp_[1180427]))
    (1180290 'move' tmp[1180274] call_tmp[1180284])
    val error[1769994]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1769996 'move' error[1769994] nil[44])
    val rvfDerefTmp[2032785]:channel(true,dynamic,false)[1060858] "temp"
    (2032789 'move' rvfDerefTmp[2032785](2032787 'deref' this[1179892]))
    val rvfDerefTmp[2032862]:locale[28] "temp"
    (2032865 'move' rvfDerefTmp[2032862] origLocale[1180268])
    val isdirect[2039768]:bool[10] "temp"
    (2039773 'move' isdirect[2039768](2039770 call chpl_doDirectExecuteOn[187423] tmp[1180274]))
    if isdirect[2039768]
    {
      (2039777 call on_fn[1180297] rvfDerefTmp[2032785] args[1180218] rvfDerefTmp[2032862] error[1769994])
    }
    {
      val _args_foron_fn[2039801]:_class_localson_fn[2039787] "temp"
      (2039805 'move' _args_foron_fn[2039801](2039803 'stack allocate class' _class_localson_fn[2039787]))
      (2039807 '.=' _args_foron_fn[2039801] _0_tmp[2039790] tmp[1180274])
      (2039811 '.=' _args_foron_fn[2039801] _1_rvfDerefTmp[2039792] rvfDerefTmp[2032785])
      ref tmp[2039815]:(string,codepointIndex,string,int(64))[1176431] "temp"
      (2039819 'move' tmp[2039815](2039817 'set reference' args[1180218]))
      (2039821 '.=' _args_foron_fn[2039801] _2_args[2039794] tmp[2039815])
      (2039825 '.=' _args_foron_fn[2039801] _3_rvfDerefTmp[2039796] rvfDerefTmp[2032862])
      ref tmp[2039829]:Error[167938] "temp"
      (2039833 'move' tmp[2039829](2039831 'set reference' error[1769994]))
      (2039835 '.=' _args_foron_fn[2039801] _4_error[2039798] tmp[2039829])
      val _args_vforon_fn[2039839]:c_void_ptr[149] "temp"
      (2039843 'move' _args_vforon_fn[2039839](2039841 'cast_to_void_star' _args_foron_fn[2039801]))
      val _args_sizeon_fn[2039845]:int(64)[13] "temp"
      (2039849 'move' _args_sizeon_fn[2039845](2039847 'sizeof_bundle' _class_localson_fn[2039787]))
      on(2039905 call wrapon_fn[2039851] tmp[1180274] _args_vforon_fn[2039839] _args_sizeon_fn[2039845] _args_foron_fn[2039801])
    }
    val errorExists[2056413]:bool[10] "temp"
    (2056418 'move' errorExists[2056413](2056415 '!=' error[1769994] nil[44]))
    if errorExists[2056413]
    {
      (1770000 '=' error_out[1769989] error[1769994])
      (1803430 call chpl__autoDestroy[1494484] origLocale[1180268])
      (1803433 call chpl__autoDestroy[1576602] args[1180218])
      gotoErrorHandlingReturn _endwrite[1769991] _endwrite[1769991]
    }
    {
    }
    (1180404 'move' ret[1179904] 1)
    (1803436 call chpl__autoDestroy[1494484] origLocale[1180268])
    (1803439 call chpl__autoDestroy[1576602] args[1180218])
    label _endwrite[1769991]
    (1180409 return ret[1179904])
  }
  function _ref(channel(true,dynamic,false))[1060867].close[1062273](const  ref arg this[1062279]:_ref(channel(true,dynamic,false))[1060867], ref arg error_out[1768310]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1062285]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062287 'move' call_tmp[1062285](1062290 call ENOERR[223566]))
    val err[1062291]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1062431]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1065634 call =[224045] init_coerce_tmp[1062431] call_tmp[1062285])
    (1062293 'move' err[1062291] init_coerce_tmp[1062431])
    ref call_tmp[1062298]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1062300 'move' call_tmp[1062298](1062303 call _channel_internal[1061700] this[1062279]))
    const-val call_tmp[1062306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062480]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062484 'move' coerce_tmp[1062480](1062482 'deref' call_tmp[1062298]))
    (1062308 'move' call_tmp[1062306](1062311 call is_c_nil[1062438] coerce_tmp[1062480]))
    const-val call_tmp[1062313]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062315 'move' call_tmp[1062313] call_tmp[1062306])
    if call_tmp[1062313]
    {
      const-val call_tmp[1062322]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062495]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062501 'move' coerce_tmp[1062495](1062497 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[1789389]:owned SystemError[1000149] "temp"
      (1062330 call fromSyserr[1017024] coerce_tmp[1062495] "cannot close invalid channel" ret_tmp[1789389])
      (1789392 'move' call_tmp[1062322] ret_tmp[1789389])
      val call_tmp[1062333]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062504]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789329]:owned Error[966369] "temp"
      (1062506 call _cast[1015658] call_tmp[1062322] ret_tmp[1789329])
      (1789332 'move' coerce_tmp[1062504] ret_tmp[1789329])
      const-val _formal_tmp_in_err[1062683]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062687 'move' _formal_tmp_in_err[1062683] coerce_tmp[1062504])
      (1062335 'move' call_tmp[1062333](1062338 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1062683]))
      {
        val castedError[1768315]:Error[167938] "temp"
        (1768321 'move' castedError[1768315] call_tmp[1062333])
        (1768323 '=' error_out[1768310] castedError[1768315])
        gotoErrorHandlingReturn _endclose[1768312] _endclose[1768312]
      }
    }
    const-val tmp[1062343]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062345]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1062347 'move' call_tmp[1062345](1062350 call home[1061666] this[1062279]))
    const-val call_tmp[1062353]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062693]:BaseLocale[91201] "dead after last mention" "temp"
    (1062698 'move' _locale_tmp_[1062693](1062695 call _value[89981] call_tmp[1062345]))
    (1062355 'move' call_tmp[1062353](1062357 '_wide_get_locale' _locale_tmp_[1062693]))
    (1062359 'move' tmp[1062343] call_tmp[1062353])
    val rvfDerefTmp[2032461]:channel(true,dynamic,false)[1060858] "temp"
    (2032465 'move' rvfDerefTmp[2032461](2032463 'deref' this[1062279]))
    val isdirect[2038009]:bool[10] "temp"
    (2038014 'move' isdirect[2038009](2038011 call chpl_doDirectExecuteOn[187423] tmp[1062343]))
    if isdirect[2038009]
    {
      (2038018 call on_fn[1062366] rvfDerefTmp[2032461] err[1062291])
    }
    {
      val _args_foron_fn[2038036]:_class_localson_fn[2038026] "temp"
      (2038040 'move' _args_foron_fn[2038036](2038038 'stack allocate class' _class_localson_fn[2038026]))
      (2038042 '.=' _args_foron_fn[2038036] _0_tmp[2038029] tmp[1062343])
      (2038046 '.=' _args_foron_fn[2038036] _1_rvfDerefTmp[2038031] rvfDerefTmp[2032461])
      ref tmp[2038050]:syserr[223496] "temp"
      (2038054 'move' tmp[2038050](2038052 'set reference' err[1062291]))
      (2038056 '.=' _args_foron_fn[2038036] _2_err[2038033] tmp[2038050])
      val _args_vforon_fn[2038060]:c_void_ptr[149] "temp"
      (2038064 'move' _args_vforon_fn[2038060](2038062 'cast_to_void_star' _args_foron_fn[2038036]))
      val _args_sizeon_fn[2038066]:int(64)[13] "temp"
      (2038070 'move' _args_sizeon_fn[2038066](2038068 'sizeof_bundle' _class_localson_fn[2038026]))
      on(2038110 call wrapon_fn[2038072] tmp[1062343] _args_vforon_fn[2038060] _args_sizeon_fn[2038066] _args_foron_fn[2038036])
    }
    {
    }
    const-val call_tmp[1062406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062408 'move' call_tmp[1062406](1062411 call _cond_test[223893] err[1062291]))
    if call_tmp[1062406]
    {
      {
        val error[1768327]:Error[167938] "error variable" "temp"
        (1768336 'move' error[1768327] nil[44])
        (1062420 call _ch_ioerror[1062776] this[1062279] err[1062291] "in channel.close" error[1768327])
        val errorExists[2055573]:bool[10] "temp"
        (2055578 'move' errorExists[2055573](2055575 '!=' error[1768327] nil[44]))
        if errorExists[2055573]
        {
          gotoErrorHandling handler[1768328] handler[1768328]
        }
        label handler[1768328]
        const-val shouldHandleError[1768347]:bool[10] "temp"
        val errorExists[2055581]:bool[10] "temp"
        (2055586 'move' errorExists[2055581](2055583 '!=' error[1768327] nil[44]))
        (1768351 'move' shouldHandleError[1768347] errorExists[2055581])
        if shouldHandleError[1768347]
        {
          (1768343 '=' error_out[1768310] error[1768327])
          gotoErrorHandlingReturn _endclose[1768312] _endclose[1768312]
        }
      }
    }
    label _endclose[1768312]
    (1062427 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080602].close[1082005](const  ref arg this[1082011]:_ref(channel(false,dynamic,false))[1080602], ref arg error_out[1769106]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1082017]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082019 'move' call_tmp[1082017](1082022 call ENOERR[223566]))
    val err[1082023]:syserr[223496] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082163]:syserr[223496] "dead at end of block" "initialized later" "temp"
    (1082743 call =[224045] init_coerce_tmp[1082163] call_tmp[1082017])
    (1082025 'move' err[1082023] init_coerce_tmp[1082163])
    ref call_tmp[1082030]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
    (1082032 'move' call_tmp[1082030](1082035 call _channel_internal[1081432] this[1082011]))
    const-val call_tmp[1082038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082170]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082174 'move' coerce_tmp[1082170](1082172 'deref' call_tmp[1082030]))
    (1082040 'move' call_tmp[1082038](1082043 call is_c_nil[1062438] coerce_tmp[1082170]))
    const-val call_tmp[1082045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082047 'move' call_tmp[1082045] call_tmp[1082038])
    if call_tmp[1082045]
    {
      const-val call_tmp[1082054]:owned SystemError[1000149] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082179]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082185 'move' coerce_tmp[1082179](1082181 'cast' int(64)[13] EINVAL[224371]))
      const-val ret_tmp[1789401]:owned SystemError[1000149] "temp"
      (1082062 call fromSyserr[1017024] coerce_tmp[1082179] "cannot close invalid channel" ret_tmp[1789401])
      (1789404 'move' call_tmp[1082054] ret_tmp[1789401])
      val call_tmp[1082065]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082188]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1789347]:owned Error[966369] "temp"
      (1082190 call _cast[1015658] call_tmp[1082054] ret_tmp[1789347])
      (1789350 'move' coerce_tmp[1082188] ret_tmp[1789347])
      const-val _formal_tmp_in_err[1082367]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082371 'move' _formal_tmp_in_err[1082367] coerce_tmp[1082188])
      (1082067 'move' call_tmp[1082065](1082070 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1082367]))
      {
        val castedError[1769111]:Error[167938] "temp"
        (1769117 'move' castedError[1769111] call_tmp[1082065])
        (1769119 '=' error_out[1769106] castedError[1769111])
        gotoErrorHandlingReturn _endclose[1769108] _endclose[1769108]
      }
    }
    const-val tmp[1082075]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1082077]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1082079 'move' call_tmp[1082077](1082082 call home[1081398] this[1082011]))
    const-val call_tmp[1082085]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082377]:BaseLocale[91201] "dead after last mention" "temp"
    (1082382 'move' _locale_tmp_[1082377](1082379 call _value[89981] call_tmp[1082077]))
    (1082087 'move' call_tmp[1082085](1082089 '_wide_get_locale' _locale_tmp_[1082377]))
    (1082091 'move' tmp[1082075] call_tmp[1082085])
    val rvfDerefTmp[2032639]:channel(false,dynamic,false)[1080593] "temp"
    (2032643 'move' rvfDerefTmp[2032639](2032641 'deref' this[1082011]))
    val isdirect[2039230]:bool[10] "temp"
    (2039235 'move' isdirect[2039230](2039232 call chpl_doDirectExecuteOn[187423] tmp[1082075]))
    if isdirect[2039230]
    {
      (2039239 call on_fn[1082098] rvfDerefTmp[2032639] err[1082023])
    }
    {
      val _args_foron_fn[2039257]:_class_localson_fn[2039247] "temp"
      (2039261 'move' _args_foron_fn[2039257](2039259 'stack allocate class' _class_localson_fn[2039247]))
      (2039263 '.=' _args_foron_fn[2039257] _0_tmp[2039250] tmp[1082075])
      (2039267 '.=' _args_foron_fn[2039257] _1_rvfDerefTmp[2039252] rvfDerefTmp[2032639])
      ref tmp[2039271]:syserr[223496] "temp"
      (2039275 'move' tmp[2039271](2039273 'set reference' err[1082023]))
      (2039277 '.=' _args_foron_fn[2039257] _2_err[2039254] tmp[2039271])
      val _args_vforon_fn[2039281]:c_void_ptr[149] "temp"
      (2039285 'move' _args_vforon_fn[2039281](2039283 'cast_to_void_star' _args_foron_fn[2039257]))
      val _args_sizeon_fn[2039287]:int(64)[13] "temp"
      (2039291 'move' _args_sizeon_fn[2039287](2039289 'sizeof_bundle' _class_localson_fn[2039247]))
      on(2039331 call wrapon_fn[2039293] tmp[1082075] _args_vforon_fn[2039281] _args_sizeon_fn[2039287] _args_foron_fn[2039257])
    }
    {
    }
    const-val call_tmp[1082138]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082140 'move' call_tmp[1082138](1082143 call _cond_test[223893] err[1082023]))
    if call_tmp[1082138]
    {
      {
        val error[1769123]:Error[167938] "error variable" "temp"
        (1769132 'move' error[1769123] nil[44])
        (1082152 call _ch_ioerror[1082460] this[1082011] err[1082023] "in channel.close" error[1769123])
        val errorExists[2055933]:bool[10] "temp"
        (2055938 'move' errorExists[2055933](2055935 '!=' error[1769123] nil[44]))
        if errorExists[2055933]
        {
          gotoErrorHandling handler[1769124] handler[1769124]
        }
        label handler[1769124]
        const-val shouldHandleError[1769143]:bool[10] "temp"
        val errorExists[2055941]:bool[10] "temp"
        (2055946 'move' errorExists[2055941](2055943 '!=' error[1769123] nil[44]))
        (1769147 'move' shouldHandleError[1769143] errorExists[2055941])
        if shouldHandleError[1769143]
        {
          (1769139 '=' error_out[1769106] error[1769123])
          gotoErrorHandlingReturn _endclose[1769108] _endclose[1769108]
        }
      }
    }
    label _endclose[1769108]
    (1082159 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080602].readBytes[1082750](const  ref arg this[1082756]:_ref(channel(false,dynamic,false))[1080602], const in arg x[1082758]:c_ptr(uint(8))[937334], const in arg len[1082762]:int(64)[13], ref arg error_out[1769232]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1082770]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787429]:locale[28] "temp"
    (1082775 call here[90435] ret_tmp[1787429])
    (1787432 'move' call_tmp[1082770] ret_tmp[1787429])
    ref call_tmp[1082776]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
    (1082778 'move' call_tmp[1082776](1082781 call home[1081398] this[1082756]))
    const-val call_tmp[1082784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082786 'move' call_tmp[1082784](1082789 call !=[782821] call_tmp[1082770] call_tmp[1082776]))
    const-val call_tmp[1082792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082794 'move' call_tmp[1082792] call_tmp[1082784])
    if call_tmp[1082792]
    {
      const-val call_tmp[1082801]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1082958]:IllegalArgumentError[168200] "dead after last mention" "temp"
      (1082960 'move' new_temp[1082958](1082945 call _new[1064018] "bad remote channel.readBytes"))
      const-val initTemp[1082967]:owned IllegalArgumentError[1064469] "dead after last mention" "delay instantiation" "temp"
      (1082970 call init[1064120] initTemp[1082967] new_temp[1082958])
      (1082803 'move' call_tmp[1082801] initTemp[1082967])
      val call_tmp[1082810]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082984]:owned Error[966369] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1790095]:owned Error[966369] "temp"
      (1082986 call _cast[1064641] call_tmp[1082801] ret_tmp[1790095])
      (1790098 'move' coerce_tmp[1082984] ret_tmp[1790095])
      const-val _formal_tmp_in_err[1083163]:owned Error[966369] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083167 'move' _formal_tmp_in_err[1083163] coerce_tmp[1082984])
      (1082812 'move' call_tmp[1082810](1082815 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1083163]))
      {
        val castedError[1769237]:Error[167938] "temp"
        (1769243 'move' castedError[1769237] call_tmp[1082810])
        (1769245 '=' error_out[1769232] castedError[1769237])
        (1800761 call chpl__autoDestroy[1494484] call_tmp[1082770])
        gotoErrorHandlingReturn _endreadBytes[1769234] _endreadBytes[1769234]
      }
    }
    (1800764 call chpl__autoDestroy[1494484] call_tmp[1082770])
    ref call_tmp[1082820]:_ref(qio_channel_ptr_t)[936795] "dead at end of block" "maybe param" "temp"
    (1082822 'move' call_tmp[1082820](1082825 call _channel_internal[1081432] this[1082756]))
    const-val call_tmp[1082828]:syserr[223496] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083220]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083226 'move' coerce_tmp[1083220](1083222 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083228]:qio_channel_ptr_t[231377] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083232 'move' coerce_tmp[1083228](1083230 'deref' call_tmp[1082820]))
    (1082830 'move' call_tmp[1082828](1082833 call qio_channel_read_amt[1083194] coerce_tmp[1083220] coerce_tmp[1083228] x[1082758] len[1082762]))
    const-val err[1082838]:syserr[223496] "dead at end of block" "insert auto destroy"
    (1082840 'move' err[1082838] call_tmp[1082828])
    const-val call_tmp[1082844]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082846 'move' call_tmp[1082844](1082849 call _cond_test[223893] err[1082838]))
    if call_tmp[1082844]
    {
      {
        val error[1769249]:Error[167938] "error variable" "temp"
        (1769258 'move' error[1769249] nil[44])
        (1082858 call _ch_ioerror[1082460] this[1082756] err[1082838] "in channel.readBytes" error[1769249])
        val errorExists[2055989]:bool[10] "temp"
        (2055994 'move' errorExists[2055989](2055991 '!=' error[1769249] nil[44]))
        if errorExists[2055989]
        {
          gotoErrorHandling handler[1769250] handler[1769250]
        }
        label handler[1769250]
        const-val shouldHandleError[1769269]:bool[10] "temp"
        val errorExists[2055997]:bool[10] "temp"
        (2056002 'move' errorExists[2055997](2055999 '!=' error[1769249] nil[44]))
        (1769273 'move' shouldHandleError[1769269] errorExists[2055997])
        if shouldHandleError[1769269]
        {
          (1769265 '=' error_out[1769232] error[1769249])
          gotoErrorHandlingReturn _endreadBytes[1769234] _endreadBytes[1769234]
        }
      }
    }
    label _endreadBytes[1769234]
    (1082865 return _void[55])
  }
  const-val stdin[250120]:channel(false,dynamic,true)[985538] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250147]:channel(true,dynamic,true)[1021736] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250176]:channel(true,dynamic,true)[1021736] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250406]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250411]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721777]:6*string[984962] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[723908]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723915]:channel(false,dynamic,true)[985538] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016808]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016872]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1016920]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017498]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[723920]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[723925]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723932]:channel(true,dynamic,true)[1021736] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022383]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022447]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022498]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022535]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[723937]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[723942]:file[235492] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[723949]:channel(true,dynamic,true)[1021736] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023819]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023830]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023841]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023852]:iostyle[231756] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935508](ref arg this[1765458]:_ref(file)[948645]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715499]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
      (715502 'move' call_tmp[715499](396303 call _file_internal[886886] this[1765458]))
      const-val coerce_tmp[985593]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (985597 'move' coerce_tmp[985593](985595 'deref' call_tmp[715499]))
      (235817 call qio_file_release[232550] coerce_tmp[985593])
      ref call_tmp[715506]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
      (715509 'move' call_tmp[715506](235821 call _file_internal[886886] this[1765458]))
      (235825 call =[859683] call_tmp[715506] QIO_FILE_PTR_NULL[231354])
    }
    (935515 return _void[55])
  }
  function on_fn[935517](const in arg this[1765460]:file[235492], ref arg ret[1765462]:_ref(iostyle)[967461], ref arg error_out[1767497]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1767501]:Error[167938] "error variable" "temp"
        (1767510 'move' error[1767501] nil[44])
        ref rvfRerefTmp[2032150]:_ref(file)[948645] "temp"
        (2032154 'move' rvfRerefTmp[2032150](2032151 'set reference' this[1765460]))
        (235895 call checkAssumingLocal[235680] rvfRerefTmp[2032150] error[1767501])
        val errorExists[2055181]:bool[10] "temp"
        (2055186 'move' errorExists[2055181](2055183 '!=' error[1767501] nil[44]))
        if errorExists[2055181]
        {
          gotoErrorHandling handler[1767502] handler[1767502]
        }
        label handler[1767502]
        const-val shouldHandleError[1767521]:bool[10] "temp"
        val errorExists[2055189]:bool[10] "temp"
        (2055194 'move' errorExists[2055189](2055191 '!=' error[1767501] nil[44]))
        (1767525 'move' shouldHandleError[1767521] errorExists[2055189])
        if shouldHandleError[1767521]
        {
          (1767517 '=' error_out[1767497] error[1767501])
          gotoErrorHandlingReturn _endon_fn[1767499] _endon_fn[1767499]
        }
      }
      val local_style[235901]:iostyle[231756] "dead at end of block" "insert auto destroy"
      ref call_tmp[715539]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032143]:_ref(file)[948645] "temp"
      (2032147 'move' rvfRerefTmp[2032143](2032144 'set reference' this[1765460]))
      (715542 'move' call_tmp[715539](396313 call _file_internal[886886] rvfRerefTmp[2032143]))
      const-val coerce_tmp[1017482]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017486 'move' coerce_tmp[1017482](1017484 'deref' call_tmp[715539]))
      (235909 call qio_file_get_style[232733] coerce_tmp[1017482] local_style[235901])
      (235913 call =[879000] ret[1765462] local_style[235901])
    }
    label _endon_fn[1767499]
    (935524 return _void[55])
  }
  function on_fn[935526](const in arg this[1765464]:file[235492], ref arg err[1765466]:_ref(syserr)[948743]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715592]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032164]:_ref(file)[948645] "temp"
      (2032168 'move' rvfRerefTmp[2032164](2032165 'set reference' this[1765464]))
      (715595 'move' call_tmp[715592](396332 call _file_internal[886886] rvfRerefTmp[2032164]))
      const-val call_tmp[715597]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060744]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060748 'move' coerce_tmp[1060744](1060746 'deref' call_tmp[715592]))
      (715600 'move' call_tmp[715597](235977 call qio_file_close[232660] coerce_tmp[1060744]))
      (235978 call =[224024] err[1765466] call_tmp[715597])
    }
    (935533 return _void[55])
  }
  function on_fn[935544](const in arg this[1765468]:file[235492], ref arg err[1765470]:_ref(syserr)[948743], ref arg ret[1765472]:_ref(string)[937850], ref arg error_out[1767529]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1767533]:Error[167938] "error variable" "temp"
        (1767542 'move' error[1767533] nil[44])
        ref rvfRerefTmp[2032192]:_ref(file)[948645] "temp"
        (2032196 'move' rvfRerefTmp[2032192](2032193 'set reference' this[1765468]))
        (236153 call checkAssumingLocal[235680] rvfRerefTmp[2032192] error[1767533])
        val errorExists[2055197]:bool[10] "temp"
        (2055202 'move' errorExists[2055197](2055199 '!=' error[1767533] nil[44]))
        if errorExists[2055197]
        {
          gotoErrorHandling handler[1767534] handler[1767534]
        }
        label handler[1767534]
        const-val shouldHandleError[1767553]:bool[10] "temp"
        val errorExists[2055205]:bool[10] "temp"
        (2055210 'move' errorExists[2055205](2055207 '!=' error[1767533] nil[44]))
        (1767557 'move' shouldHandleError[1767553] errorExists[2055205])
        if shouldHandleError[1767553]
        {
          (1767549 '=' error_out[1767529] error[1767533])
          gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
        }
      }
      val tmp[236159]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021378 'move' tmp[236159](1021376 'cast' c_string[19] nil[44]))
      val tmp2[236164]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021383 'move' tmp2[236164](1021381 'cast' c_string[19] nil[44]))
      ref call_tmp[715678]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032178]:_ref(file)[948645] "temp"
      (2032182 'move' rvfRerefTmp[2032178](2032179 'set reference' this[1765468]))
      (715681 'move' call_tmp[715678](396356 call _file_internal[886886] rvfRerefTmp[2032178]))
      const-val call_tmp[715683]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019030]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019034 'move' coerce_tmp[1019030](1019032 'deref' call_tmp[715678]))
      (715686 'move' call_tmp[715683](236173 call qio_file_path[233591] coerce_tmp[1019030] tmp[236159]))
      (236174 call =[224024] err[1765470] call_tmp[715683])
      const-val call_tmp[715688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1766118]:syserr[223496] "temp"
      (1766121 'move' tmp[1766118](1766119 'deref' err[1765470]))
      (715691 'move' call_tmp[715688](236178 call ![223870] tmp[1766118]))
      const-val call_tmp[715693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715696 'move' call_tmp[715693] call_tmp[715688])
      if call_tmp[715693]
      {
        ref call_tmp[715700]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2032185]:_ref(file)[948645] "temp"
        (2032189 'move' rvfRerefTmp[2032185](2032186 'set reference' this[1765468]))
        (715703 'move' call_tmp[715700](396364 call _file_internal[886886] rvfRerefTmp[2032185]))
        const-val call_tmp[715705]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1019043]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1019047 'move' coerce_tmp[1019043](1019045 'deref' call_tmp[715700]))
        (715708 'move' call_tmp[715705](236186 call qio_shortest_path[233607] coerce_tmp[1019043] tmp2[236164] tmp[236159]))
        (236187 call =[224024] err[1765470] call_tmp[715705])
      }
      (236198 call chpl_free_c_string[22706] tmp[236159])
      const-val call_tmp[715710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1766124]:syserr[223496] "temp"
      (1766127 'move' tmp[1766124](1766125 'deref' err[1765470]))
      (715713 'move' call_tmp[715710](236201 call ![223870] tmp[1766124]))
      const-val call_tmp[715715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715718 'move' call_tmp[715715] call_tmp[715710])
      if call_tmp[715715]
      {
        const-val call_tmp[715720]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1019069]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1767562]:Error[167938] "error variable" "temp"
        (1767564 'move' error[1767562] nil[44])
        (1019074 'move' default_arg_length[1019069](1019071 call createStringWithNewBuffer_default_length[963957] tmp2[236164] error[1767562]))
        val errorExists[2055213]:bool[10] "temp"
        (2055218 'move' errorExists[2055213](2055215 '!=' error[1767562] nil[44]))
        if errorExists[2055213]
        {
          (1767568 '=' error_out[1767529] error[1767562])
          gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
        }
        val error[1767577]:Error[167938] "error variable" "temp"
        (1767579 'move' error[1767577] nil[44])
        const-val ret_tmp[1785969]:string[26] "temp"
        (236212 call createStringWithNewBuffer[30410] tmp2[236164] default_arg_length[1019069] escape[173652] error[1767577] ret_tmp[1785969])
        (1785972 'move' call_tmp[715720] ret_tmp[1785969])
        val errorExists[2055221]:bool[10] "temp"
        (2055226 'move' errorExists[2055221](2055223 '!=' error[1767577] nil[44]))
        if errorExists[2055221]
        {
          (1767583 '=' error_out[1767529] error[1767577])
          gotoErrorHandlingReturn _endon_fn[1767531] _endon_fn[1767531]
        }
        (236213 call =[38269] ret[1765472] call_tmp[715720])
        (1799167 call chpl__autoDestroy[1494420] call_tmp[715720])
      }
      (236224 call chpl_free_c_string[22706] tmp2[236164])
    }
    label _endon_fn[1767531]
    (935551 return _void[55])
  }
  function on_fn[1016606](const in arg start[1765480]:int(64)[13], ref arg err[1765482]:_ref(syserr)[948743], const in arg end[1765484]:int(64)[13], const in arg style[1765486]:iostyle[231756], const in arg this[1765488]:file[235492], ref arg ret[1765490]:_ref(channel(false,dynamic,true))[985547], const in arg hints[1765492]:int(32)[95], ref arg error_out[1767700]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1767704]:Error[167938] "error variable" "temp"
        (1767713 'move' error[1767704] nil[44])
        ref rvfRerefTmp[2032221]:_ref(file)[948645] "temp"
        (2032225 'move' rvfRerefTmp[2032221](2032222 'set reference' this[1765488]))
        (1016617 call checkAssumingLocal[235680] rvfRerefTmp[2032221] error[1767704])
        val errorExists[2055277]:bool[10] "temp"
        (2055282 'move' errorExists[2055277](2055279 '!=' error[1767704] nil[44]))
        if errorExists[2055277]
        {
          gotoErrorHandling handler[1767705] handler[1767705]
        }
        label handler[1767705]
        const-val shouldHandleError[1767724]:bool[10] "temp"
        val errorExists[2055285]:bool[10] "temp"
        (2055290 'move' errorExists[2055285](2055287 '!=' error[1767704] nil[44]))
        (1767728 'move' shouldHandleError[1767724] errorExists[2055285])
        if shouldHandleError[1767724]
        {
          (1767720 '=' error_out[1767700] error[1767704])
          gotoErrorHandlingReturn _endon_fn[1767702] _endon_fn[1767702]
        }
      }
      const-val call_tmp[1016619]:channel(false,dynamic,true)[985538] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1017542]:channel(false,dynamic,true)[985538] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1018341]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1766130]:iostyle[231756] "temp"
      (1766133 'move' tmp[1766130] style[1765486])
      ref rvfRerefTmp[2032214]:_ref(file)[948645] "temp"
      (2032218 'move' rvfRerefTmp[2032214](2032215 'set reference' this[1765488]))
      (1017545 call init[1017558] initTemp[1017542] rvfRerefTmp[2032214] _formal_tmp_out_error[1018341] hints[1765492] start[1765480] end[1765484] tmp[1766130])
      (1018343 call =[224024] err[1765482] _formal_tmp_out_error[1018341])
      (1016621 'move' call_tmp[1016619] initTemp[1017542])
      (1016635 call =[1018350] ret[1765490] call_tmp[1016619])
      (1799333 call chpl__autoDestroy[1504079] call_tmp[1016619])
    }
    label _endon_fn[1767702]
    (1016641 return _void[55])
  }
  function on_fn[1017636](const in arg end[1765494]:int(64)[13], ref arg this[1765496]:_ref(channel(false,dynamic,true))[985547], const in arg hints[1765498]:int(32)[95], const in arg local_style[1765500]:iostyle[231756], const in arg start[1765502]:int(64)[13], const in arg f[1765504]:file[235492], ref arg _formal_tmp_error[1765506]:_ref(syserr)[948743]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1017642]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (1017644 'move' call_tmp[1017642](1017647 call home[1017935] this[1765496]))
      ref call_tmp[1017650]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032248]:_ref(file)[948645] "temp"
      (2032252 'move' rvfRerefTmp[2032248](2032249 'set reference' f[1765504]))
      (1017652 'move' call_tmp[1017650](1017655 call home[886860] rvfRerefTmp[2032248]))
      (1017659 call =[90631] call_tmp[1017642] call_tmp[1017650])
      ref call_tmp[1017721]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1017723 'move' call_tmp[1017721](1017726 call _channel_internal[1018277] this[1765496]))
      ref call_tmp[1017729]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032255]:_ref(file)[948645] "temp"
      (2032259 'move' rvfRerefTmp[2032255](2032256 'set reference' f[1765504]))
      (1017731 'move' call_tmp[1017729](1017734 call _file_internal[886886] rvfRerefTmp[2032255]))
      const-val call_tmp[1017744]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1018310]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018314 'move' coerce_tmp[1018310](1018312 'deref' call_tmp[1017729]))
      const-val coerce_tmp[1018316]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018322 'move' coerce_tmp[1018316](1018318 'cast' int(32)[95] 1))
      const-val coerce_tmp[1018324]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018330 'move' coerce_tmp[1018324](1018326 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2032234]:_ref(iostyle)[967461] "temp"
      (2032238 'move' rvfRerefTmp[2032234](2032235 'set reference' local_style[1765500]))
      (1017746 'move' call_tmp[1017744](1017749 call qio_channel_create[232790] call_tmp[1017721] coerce_tmp[1018310] hints[1765498] coerce_tmp[1018316] coerce_tmp[1018324] start[1765502] end[1765494] rvfRerefTmp[2032234]))
      (1017759 call =[224024] _formal_tmp_error[1765506] call_tmp[1017744])
    }
    (1017762 return _void[55])
  }
  function on_fn[1018576](const in arg rhs[1765508]:channel(false,dynamic,true)[985538]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018582]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032269]:_ref(channel(false,dynamic,true))[985547] "temp"
      (2032273 'move' rvfRerefTmp[2032269](2032270 'set reference' rhs[1765508]))
      (1018584 'move' call_tmp[1018582](1018587 call _channel_internal[1018277] rvfRerefTmp[2032269]))
      const-val coerce_tmp[1018966]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018970 'move' coerce_tmp[1018966](1018968 'deref' call_tmp[1018582]))
      (1018591 call qio_channel_retain[232863] coerce_tmp[1018966])
    }
    (1018593 return _void[55])
  }
  function on_fn[1018620](const  ref arg lhs[1765510]:_ref(channel(false,dynamic,true))[985547]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018626]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1018628 'move' call_tmp[1018626](1018631 call _channel_internal[1018277] lhs[1765510]))
      const-val coerce_tmp[1018985]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018989 'move' coerce_tmp[1018985](1018987 'deref' call_tmp[1018626]))
      (1018635 call qio_channel_release[232873] coerce_tmp[1018985])
    }
    (1018637 return _void[55])
  }
  function on_fn[1022181](ref arg err[1765516]:_ref(syserr)[948743], const in arg start[1765518]:int(64)[13], const in arg style[1765520]:iostyle[231756], const in arg end[1765522]:int(64)[13], const in arg this[1765524]:file[235492], ref arg ret[1765526]:_ref(channel(true,dynamic,true))[1021745], const in arg hints[1765528]:int(32)[95], ref arg error_out[1767816]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1767820]:Error[167938] "error variable" "temp"
        (1767829 'move' error[1767820] nil[44])
        ref rvfRerefTmp[2032298]:_ref(file)[948645] "temp"
        (2032302 'move' rvfRerefTmp[2032298](2032299 'set reference' this[1765524]))
        (1022192 call checkAssumingLocal[235680] rvfRerefTmp[2032298] error[1767820])
        val errorExists[2055325]:bool[10] "temp"
        (2055330 'move' errorExists[2055325](2055327 '!=' error[1767820] nil[44]))
        if errorExists[2055325]
        {
          gotoErrorHandling handler[1767821] handler[1767821]
        }
        label handler[1767821]
        const-val shouldHandleError[1767840]:bool[10] "temp"
        val errorExists[2055333]:bool[10] "temp"
        (2055338 'move' errorExists[2055333](2055335 '!=' error[1767820] nil[44]))
        (1767844 'move' shouldHandleError[1767840] errorExists[2055333])
        if shouldHandleError[1767840]
        {
          (1767836 '=' error_out[1767816] error[1767820])
          gotoErrorHandlingReturn _endon_fn[1767818] _endon_fn[1767818]
        }
      }
      const-val call_tmp[1022194]:channel(true,dynamic,true)[1021736] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1022578]:channel(true,dynamic,true)[1021736] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1023049]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1766136]:iostyle[231756] "temp"
      (1766139 'move' tmp[1766136] style[1765520])
      ref rvfRerefTmp[2032291]:_ref(file)[948645] "temp"
      (2032295 'move' rvfRerefTmp[2032291](2032292 'set reference' this[1765524]))
      (1022581 call init[1022594] initTemp[1022578] rvfRerefTmp[2032291] _formal_tmp_out_error[1023049] hints[1765528] start[1765518] end[1765522] tmp[1766136])
      (1023051 call =[224024] err[1765516] _formal_tmp_out_error[1023049])
      (1022196 'move' call_tmp[1022194] initTemp[1022578])
      (1022210 call =[1023058] ret[1765526] call_tmp[1022194])
      (1799356 call chpl__autoDestroy[1567085] call_tmp[1022194])
    }
    label _endon_fn[1767818]
    (1022216 return _void[55])
  }
  function on_fn[1022672](const in arg start[1765530]:int(64)[13], const in arg f[1765532]:file[235492], ref arg _formal_tmp_error[1765534]:_ref(syserr)[948743], const in arg end[1765536]:int(64)[13], const in arg hints[1765538]:int(32)[95], const in arg local_style[1765540]:iostyle[231756], ref arg this[1765542]:_ref(channel(true,dynamic,true))[1021745]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1022678]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (1022680 'move' call_tmp[1022678](1022683 call home[1022953] this[1765542]))
      ref call_tmp[1022686]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032312]:_ref(file)[948645] "temp"
      (2032316 'move' rvfRerefTmp[2032312](2032313 'set reference' f[1765532]))
      (1022688 'move' call_tmp[1022686](1022691 call home[886860] rvfRerefTmp[2032312]))
      (1022695 call =[90631] call_tmp[1022678] call_tmp[1022686])
      ref call_tmp[1022757]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1022759 'move' call_tmp[1022757](1022762 call _channel_internal[1022987] this[1765542]))
      ref call_tmp[1022765]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032319]:_ref(file)[948645] "temp"
      (2032323 'move' rvfRerefTmp[2032319](2032320 'set reference' f[1765532]))
      (1022767 'move' call_tmp[1022765](1022770 call _file_internal[886886] rvfRerefTmp[2032319]))
      const-val call_tmp[1022780]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1023018]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023022 'move' coerce_tmp[1023018](1023020 'deref' call_tmp[1022765]))
      const-val coerce_tmp[1023024]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023030 'move' coerce_tmp[1023024](1023026 'cast' int(32)[95] 0))
      const-val coerce_tmp[1023032]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023038 'move' coerce_tmp[1023032](1023034 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2032332]:_ref(iostyle)[967461] "temp"
      (2032336 'move' rvfRerefTmp[2032332](2032333 'set reference' local_style[1765540]))
      (1022782 'move' call_tmp[1022780](1022785 call qio_channel_create[232790] call_tmp[1022757] coerce_tmp[1023018] hints[1765538] coerce_tmp[1023024] coerce_tmp[1023032] start[1765530] end[1765536] rvfRerefTmp[2032332]))
      (1022795 call =[224024] _formal_tmp_error[1765534] call_tmp[1022780])
    }
    (1022798 return _void[55])
  }
  function on_fn[1023284](const in arg rhs[1765544]:channel(true,dynamic,true)[1021736]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023290]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032346]:_ref(channel(true,dynamic,true))[1021745] "temp"
      (2032350 'move' rvfRerefTmp[2032346](2032347 'set reference' rhs[1765544]))
      (1023292 'move' call_tmp[1023290](1023295 call _channel_internal[1022987] rvfRerefTmp[2032346]))
      const-val coerce_tmp[1023674]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023678 'move' coerce_tmp[1023674](1023676 'deref' call_tmp[1023290]))
      (1023299 call qio_channel_retain[232863] coerce_tmp[1023674])
    }
    (1023301 return _void[55])
  }
  function on_fn[1023328](const  ref arg lhs[1765546]:_ref(channel(true,dynamic,true))[1021745]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023334]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1023336 'move' call_tmp[1023334](1023339 call _channel_internal[1022987] lhs[1765546]))
      const-val coerce_tmp[1023693]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023697 'move' coerce_tmp[1023693](1023695 'deref' call_tmp[1023334]))
      (1023343 call qio_channel_release[232873] coerce_tmp[1023693])
    }
    (1023345 return _void[55])
  }
  function on_fn[1060933](const in arg hints[1765560]:int(32)[95], const in arg start[1765562]:int(64)[13], ref arg ret[1765564]:_ref(channel(true,dynamic,false))[1060867], const in arg style[1765566]:iostyle[231756], const in arg end[1765568]:int(64)[13], const in arg this[1765570]:file[235492], ref arg err[1765572]:_ref(syserr)[948743], ref arg error_out[1768247]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1768251]:Error[167938] "error variable" "temp"
        (1768260 'move' error[1768251] nil[44])
        ref rvfRerefTmp[2032406]:_ref(file)[948645] "temp"
        (2032410 'move' rvfRerefTmp[2032406](2032407 'set reference' this[1765570]))
        (1060944 call checkAssumingLocal[235680] rvfRerefTmp[2032406] error[1768251])
        val errorExists[2055549]:bool[10] "temp"
        (2055554 'move' errorExists[2055549](2055551 '!=' error[1768251] nil[44]))
        if errorExists[2055549]
        {
          gotoErrorHandling handler[1768252] handler[1768252]
        }
        label handler[1768252]
        const-val shouldHandleError[1768271]:bool[10] "temp"
        val errorExists[2055557]:bool[10] "temp"
        (2055562 'move' errorExists[2055557](2055559 '!=' error[1768251] nil[44]))
        (1768275 'move' shouldHandleError[1768271] errorExists[2055557])
        if shouldHandleError[1768271]
        {
          (1768267 '=' error_out[1768247] error[1768251])
          gotoErrorHandlingReturn _endon_fn[1768249] _endon_fn[1768249]
        }
      }
      const-val call_tmp[1060946]:channel(true,dynamic,false)[1060858] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1061291]:channel(true,dynamic,false)[1060858] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1061762]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1766142]:iostyle[231756] "temp"
      (1766145 'move' tmp[1766142] style[1765566])
      ref rvfRerefTmp[2032399]:_ref(file)[948645] "temp"
      (2032403 'move' rvfRerefTmp[2032399](2032400 'set reference' this[1765570]))
      (1061294 call init[1061307] initTemp[1061291] rvfRerefTmp[2032399] _formal_tmp_out_error[1061762] hints[1765560] start[1765562] end[1765568] tmp[1766142])
      (1061764 call =[224024] err[1765572] _formal_tmp_out_error[1061762])
      (1060948 'move' call_tmp[1060946] initTemp[1061291])
      (1060962 call =[1061771] ret[1765564] call_tmp[1060946])
      (1800581 call chpl__autoDestroy[1569261] call_tmp[1060946])
    }
    label _endon_fn[1768249]
    (1060968 return _void[55])
  }
  function on_fn[1061385](const in arg start[1765574]:int(64)[13], const in arg f[1765576]:file[235492], ref arg _formal_tmp_error[1765578]:_ref(syserr)[948743], ref arg this[1765580]:_ref(channel(true,dynamic,false))[1060867], const in arg hints[1765582]:int(32)[95], const in arg local_style[1765584]:iostyle[231756], const in arg end[1765586]:int(64)[13]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1061391]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (1061393 'move' call_tmp[1061391](1061396 call home[1061666] this[1765580]))
      ref call_tmp[1061399]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032420]:_ref(file)[948645] "temp"
      (2032424 'move' rvfRerefTmp[2032420](2032421 'set reference' f[1765576]))
      (1061401 'move' call_tmp[1061399](1061404 call home[886860] rvfRerefTmp[2032420]))
      (1061408 call =[90631] call_tmp[1061391] call_tmp[1061399])
      ref call_tmp[1061470]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1061472 'move' call_tmp[1061470](1061475 call _channel_internal[1061700] this[1765580]))
      ref call_tmp[1061478]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032427]:_ref(file)[948645] "temp"
      (2032431 'move' rvfRerefTmp[2032427](2032428 'set reference' f[1765576]))
      (1061480 'move' call_tmp[1061478](1061483 call _file_internal[886886] rvfRerefTmp[2032427]))
      const-val call_tmp[1061493]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1061731]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061735 'move' coerce_tmp[1061731](1061733 'deref' call_tmp[1061478]))
      const-val coerce_tmp[1061737]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061743 'move' coerce_tmp[1061737](1061739 'cast' int(32)[95] 0))
      const-val coerce_tmp[1061745]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061751 'move' coerce_tmp[1061745](1061747 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2032440]:_ref(iostyle)[967461] "temp"
      (2032444 'move' rvfRerefTmp[2032440](2032441 'set reference' local_style[1765584]))
      (1061495 'move' call_tmp[1061493](1061498 call qio_channel_create[232790] call_tmp[1061470] coerce_tmp[1061731] hints[1765582] coerce_tmp[1061737] coerce_tmp[1061745] start[1765574] end[1765586] rvfRerefTmp[2032440]))
      (1061508 call =[224024] _formal_tmp_error[1765578] call_tmp[1061493])
    }
    (1061511 return _void[55])
  }
  function on_fn[1061997](const in arg rhs[1765588]:channel(true,dynamic,false)[1060858]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062003]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032454]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032458 'move' rvfRerefTmp[2032454](2032455 'set reference' rhs[1765588]))
      (1062005 'move' call_tmp[1062003](1062008 call _channel_internal[1061700] rvfRerefTmp[2032454]))
      const-val coerce_tmp[1062196]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062200 'move' coerce_tmp[1062196](1062198 'deref' call_tmp[1062003]))
      (1062012 call qio_channel_retain[232863] coerce_tmp[1062196])
    }
    (1062014 return _void[55])
  }
  function on_fn[1062041](const  ref arg lhs[1765590]:_ref(channel(true,dynamic,false))[1060867]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062047]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1062049 'move' call_tmp[1062047](1062052 call _channel_internal[1061700] lhs[1765590]))
      const-val coerce_tmp[1062215]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062219 'move' coerce_tmp[1062215](1062217 'deref' call_tmp[1062047]))
      (1062056 call qio_channel_release[232873] coerce_tmp[1062215])
    }
    (1062058 return _void[55])
  }
  function on_fn[1062366](const in arg this[1765592]:channel(true,dynamic,false)[1060858], ref arg err[1765594]:_ref(syserr)[948743]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062380]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032468]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032472 'move' rvfRerefTmp[2032468](2032469 'set reference' this[1765592]))
      (1062382 'move' call_tmp[1062380](1062385 call _channel_internal[1061700] rvfRerefTmp[2032468]))
      const-val call_tmp[1062388]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062759]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062765 'move' coerce_tmp[1062759](1062761 'cast' int(32)[95] 0))
      const-val coerce_tmp[1062767]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062771 'move' coerce_tmp[1062767](1062769 'deref' call_tmp[1062380]))
      (1062390 'move' call_tmp[1062388](1062393 call qio_channel_close[233052] coerce_tmp[1062759] coerce_tmp[1062767]))
      (1062397 call =[224024] err[1765594] call_tmp[1062388])
    }
    (1062402 return _void[55])
  }
  function on_fn[1062843](const  ref arg this[1765596]:_ref(channel(true,dynamic,false))[1060867], ref arg path[1765598]:_ref(string)[937850], ref arg offset[1765600]:_ref(int(64))[936483], ref arg error_out[1768402]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1062849]:c_string[19] "dead at end of block" "insert auto destroy"
      (1063051 'move' tmp_path[1062849](1063049 'cast' c_string[19] nil[44]))
      val tmp_offset[1062855]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1062857]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1063054 'move' tmp_offset[1062855] 0)
      const-val call_tmp[1062868]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1062870 'move' call_tmp[1062868](1062873 call ENOERR[223566]))
      val err[1062874]:syserr[223496] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1062996]:syserr[223496] "dead at end of block" "initialized later" "temp"
      (1063042 call =[224045] init_coerce_tmp[1062996] call_tmp[1062868])
      (1062876 'move' err[1062874] init_coerce_tmp[1062996])
      ref call_tmp[1062889]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1062891 'move' call_tmp[1062889](1062894 call _channel_internal[1061700] this[1765596]))
      const-val call_tmp[1062897]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1063006]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063012 'move' coerce_tmp[1063006](1063008 'cast' int(32)[95] 0))
      const-val coerce_tmp[1063014]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063018 'move' coerce_tmp[1063014](1063016 'deref' call_tmp[1062889]))
      (1062899 'move' call_tmp[1062897](1062902 call qio_channel_path_offset[232836] coerce_tmp[1063006] coerce_tmp[1063014] tmp_path[1062849] tmp_offset[1062855]))
      (1062908 call =[224024] err[1062874] call_tmp[1062897])
      const-val call_tmp[1062915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1062917 'move' call_tmp[1062915](1062920 call ![223870] err[1062874]))
      const-val call_tmp[1062922]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1062924 'move' call_tmp[1062922] call_tmp[1062915])
      if call_tmp[1062922]
      {
        const-val call_tmp[1062931]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1063027]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1768407]:Error[167938] "error variable" "temp"
        (1768409 'move' error[1768407] nil[44])
        (1063032 'move' default_arg_length[1063027](1063029 call createStringWithNewBuffer_default_length[963957] tmp_path[1062849] error[1768407]))
        val errorExists[2055613]:bool[10] "temp"
        (2055618 'move' errorExists[2055613](2055615 '!=' error[1768407] nil[44]))
        if errorExists[2055613]
        {
          (1768413 '=' error_out[1768402] error[1768407])
          gotoErrorHandlingReturn _endon_fn[1768404] _endon_fn[1768404]
        }
        val error[1768422]:Error[167938] "error variable" "temp"
        (1768424 'move' error[1768422] nil[44])
        const-val ret_tmp[1785999]:string[26] "temp"
        (1062936 call createStringWithNewBuffer[30410] tmp_path[1062849] default_arg_length[1063027] replace[173648] error[1768422] ret_tmp[1785999])
        (1786002 'move' call_tmp[1062931] ret_tmp[1785999])
        val errorExists[2055621]:bool[10] "temp"
        (2055626 'move' errorExists[2055621](2055623 '!=' error[1768422] nil[44]))
        if errorExists[2055621]
        {
          (1768428 '=' error_out[1768402] error[1768422])
          gotoErrorHandlingReturn _endon_fn[1768404] _endon_fn[1768404]
        }
        (1062941 call =[38269] path[1765598] call_tmp[1062931])
        (1800596 call chpl__autoDestroy[1494420] call_tmp[1062931])
        (1062948 call chpl_free_c_string[22706] tmp_path[1062849])
        (1062953 call =[435238] offset[1765600] tmp_offset[1062855])
      }
    }
    label _endon_fn[1768404]
    (1062960 return _void[55])
  }
  function on_fn[1066000](const in arg this[1765602]:channel(true,dynamic,false)[1060858], const  ref arg args[1765604]:_ref(1*byteIndex)[1057042], const in arg origLocale[1765606]:locale[28], ref arg error_out[1768487]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1768491]:Error[167938] "error variable" "temp"
        (1768500 'move' error[1768491] nil[44])
        ref rvfRerefTmp[2032482]:_ref(channel(true,dynamic,false))[1060867] "temp"
        (2032486 'move' rvfRerefTmp[2032482](2032483 'set reference' this[1765602]))
        (1066011 call lock[1066339] rvfRerefTmp[2032482] error[1768491])
        val errorExists[2055645]:bool[10] "temp"
        (2055650 'move' errorExists[2055645](2055647 '!=' error[1768491] nil[44]))
        if errorExists[2055645]
        {
          gotoErrorHandling handler[1768492] handler[1768492]
        }
        label handler[1768492]
        const-val shouldHandleError[1768511]:bool[10] "temp"
        val errorExists[2055653]:bool[10] "temp"
        (2055658 'move' errorExists[2055653](2055655 '!=' error[1768491] nil[44]))
        (1768515 'move' shouldHandleError[1768511] errorExists[2055653])
        if shouldHandleError[1768511]
        {
          (1768507 '=' error_out[1768487] error[1768491])
          gotoErrorHandlingReturn _endon_fn[1768489] _endon_fn[1768489]
        }
      }
      {
        const-val i[1066021]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1066023 'move' i[1066021] 0)
        {
          {
            {
              val error[1768519]:Error[167938] "error variable" "temp"
              (1768528 'move' error[1768519] nil[44])
              ref call_tmp[1066844]:_ref(byteIndex)[948670] "dead after last mention" "maybe param" "temp"
              (1066846 'move' call_tmp[1066844](1066920 '.v' args[1765604] x0[1056990]))
              ref rvfRerefTmp[2032489]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032493 'move' rvfRerefTmp[2032489](2032490 'set reference' this[1765602]))
              val rvfRerefTmp[2032516]:locale[28] "temp"
              (2032519 'move' rvfRerefTmp[2032516] origLocale[1765606])
              (1066855 call _writeOne[1066923] rvfRerefTmp[2032489] call_tmp[1066844] rvfRerefTmp[2032516] error[1768519])
              val errorExists[2055661]:bool[10] "temp"
              (2055666 'move' errorExists[2055661](2055663 '!=' error[1768519] nil[44]))
              if errorExists[2055661]
              {
                gotoErrorHandling handler[1768520] handler[1768520]
              }
              label handler[1768520]
              const-val shouldHandleError[1768539]:bool[10] "temp"
              val errorExists[2055669]:bool[10] "temp"
              (2055674 'move' errorExists[2055669](2055671 '!=' error[1768519] nil[44]))
              (1768543 'move' shouldHandleError[1768539] errorExists[2055669])
              if shouldHandleError[1768539]
              {
                (1768535 '=' error_out[1768487] error[1768519])
                ref rvfRerefTmp[2032496]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032500 'move' rvfRerefTmp[2032496](2032497 'set reference' this[1765602]))
                (1800617 call unlock[1066736] rvfRerefTmp[2032496])
                gotoErrorHandlingReturn _endon_fn[1768489] _endon_fn[1768489]
              }
            }
          }
        }
        label _continueLabel0[1066831]
        label _unused_continueLabel[1066099]
        label _breakLabel[1066101]
      }
      ref rvfRerefTmp[2032503]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032507 'move' rvfRerefTmp[2032503](2032504 'set reference' this[1765602]))
      (1800622 call unlock[1066736] rvfRerefTmp[2032503])
    }
    label _endon_fn[1768489]
    (1066103 return _void[55])
  }
  function on_fn[1068779](const  ref arg this[1765608]:_ref(channel(true,dynamic,false))[1060867], const in arg x[1765610]:int(64)[13], const in arg origLocale[1765612]:locale[28], ref arg error_out[1768771]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1768775]:Error[167938] "error variable" "temp"
        (1768784 'move' error[1768775] nil[44])
        (1068790 call lock[1066339] this[1765608] error[1768775])
        val errorExists[2055781]:bool[10] "temp"
        (2055786 'move' errorExists[2055781](2055783 '!=' error[1768775] nil[44]))
        if errorExists[2055781]
        {
          gotoErrorHandling handler[1768776] handler[1768776]
        }
        label handler[1768776]
        const-val shouldHandleError[1768793]:bool[10] "temp"
        val errorExists[2055789]:bool[10] "temp"
        (2055794 'move' errorExists[2055789](2055791 '!=' error[1768775] nil[44]))
        (1768797 'move' shouldHandleError[1768793] errorExists[2055789])
        if shouldHandleError[1768793]
        {
          (1768790 call chpl_uncaught_error[170243] error[1768775])
        }
      }
      {
        val error[1768801]:Error[167938] "error variable" "temp"
        (1768810 'move' error[1768801] nil[44])
        val rvfRerefTmp[2032528]:locale[28] "temp"
        (2032531 'move' rvfRerefTmp[2032528] origLocale[1765612])
        (1068812 call _writeOne[1068848] this[1765608] x[1765610] rvfRerefTmp[2032528] error[1768801])
        val errorExists[2055797]:bool[10] "temp"
        (2055802 'move' errorExists[2055797](2055799 '!=' error[1768801] nil[44]))
        if errorExists[2055797]
        {
          gotoErrorHandling handler[1768802] handler[1768802]
        }
        label handler[1768802]
        const-val shouldHandleError[1768821]:bool[10] "temp"
        val errorExists[2055805]:bool[10] "temp"
        (2055810 'move' errorExists[2055805](2055807 '!=' error[1768801] nil[44]))
        (1768825 'move' shouldHandleError[1768821] errorExists[2055805])
        if shouldHandleError[1768821]
        {
          (1768817 '=' error_out[1768771] error[1768801])
          (1800687 call unlock[1066736] this[1765608])
          gotoErrorHandlingReturn _endon_fn[1768773] _endon_fn[1768773]
        }
      }
      (1800692 call unlock[1066736] this[1765608])
    }
    label _endon_fn[1768773]
    (1068819 return _void[55])
  }
  function on_fn[1080116](const in arg this[1765614]:channel(true,dynamic,false)[1060858], ref arg ret[1765616]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    {
      {
        val error[1768972]:Error[167938] "error variable" "temp"
        (1768981 'move' error[1768972] nil[44])
        ref rvfRerefTmp[2032555]:_ref(channel(true,dynamic,false))[1060867] "temp"
        (2032559 'move' rvfRerefTmp[2032555](2032556 'set reference' this[1765614]))
        (1080127 call lock[1066339] rvfRerefTmp[2032555] error[1768972])
        val errorExists[2055869]:bool[10] "temp"
        (2055874 'move' errorExists[2055869](2055871 '!=' error[1768972] nil[44]))
        if errorExists[2055869]
        {
          gotoErrorHandling handler[1768973] handler[1768973]
        }
        label handler[1768973]
        const-val shouldHandleError[1768990]:bool[10] "temp"
        val errorExists[2055877]:bool[10] "temp"
        (2055882 'move' errorExists[2055877](2055879 '!=' error[1768972] nil[44]))
        (1768994 'move' shouldHandleError[1768990] errorExists[2055877])
        if shouldHandleError[1768990]
        {
          (1768987 call chpl_uncaught_error[170243] error[1768972])
        }
      }
      ref call_tmp[1080129]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032541]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032545 'move' rvfRerefTmp[2032541](2032542 'set reference' this[1765614]))
      (1080131 'move' call_tmp[1080129](1080134 call _channel_internal[1061700] rvfRerefTmp[2032541]))
      const-val call_tmp[1080137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1080196]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1080200 'move' coerce_tmp[1080196](1080198 'deref' call_tmp[1080129]))
      (1080139 'move' call_tmp[1080137](1080142 call qio_channel_offset_unlocked[233294] coerce_tmp[1080196]))
      (1080145 call =[435238] ret[1765616] call_tmp[1080137])
      ref rvfRerefTmp[2032548]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032552 'move' rvfRerefTmp[2032548](2032549 'set reference' this[1765614]))
      (1080154 call unlock[1066736] rvfRerefTmp[2032548])
    }
    (1080155 return _void[55])
  }
  function on_fn[1080668](ref arg err[1765618]:_ref(syserr)[948743], const in arg hints[1765620]:int(32)[95], const in arg start[1765622]:int(64)[13], ref arg ret[1765624]:_ref(channel(false,dynamic,false))[1080602], const in arg end[1765626]:int(64)[13], const in arg style[1765628]:iostyle[231756], const in arg this[1765630]:file[235492], ref arg error_out[1769043]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1769047]:Error[167938] "error variable" "temp"
        (1769056 'move' error[1769047] nil[44])
        ref rvfRerefTmp[2032584]:_ref(file)[948645] "temp"
        (2032588 'move' rvfRerefTmp[2032584](2032585 'set reference' this[1765630]))
        (1080679 call checkAssumingLocal[235680] rvfRerefTmp[2032584] error[1769047])
        val errorExists[2055909]:bool[10] "temp"
        (2055914 'move' errorExists[2055909](2055911 '!=' error[1769047] nil[44]))
        if errorExists[2055909]
        {
          gotoErrorHandling handler[1769048] handler[1769048]
        }
        label handler[1769048]
        const-val shouldHandleError[1769067]:bool[10] "temp"
        val errorExists[2055917]:bool[10] "temp"
        (2055922 'move' errorExists[2055917](2055919 '!=' error[1769047] nil[44]))
        (1769071 'move' shouldHandleError[1769067] errorExists[2055917])
        if shouldHandleError[1769067]
        {
          (1769063 '=' error_out[1769043] error[1769047])
          gotoErrorHandlingReturn _endon_fn[1769045] _endon_fn[1769045]
        }
      }
      const-val call_tmp[1080681]:channel(false,dynamic,false)[1080593] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1081023]:channel(false,dynamic,false)[1080593] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1081494]:syserr[223496] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1766148]:iostyle[231756] "temp"
      (1766151 'move' tmp[1766148] style[1765628])
      ref rvfRerefTmp[2032577]:_ref(file)[948645] "temp"
      (2032581 'move' rvfRerefTmp[2032577](2032578 'set reference' this[1765630]))
      (1081026 call init[1081039] initTemp[1081023] rvfRerefTmp[2032577] _formal_tmp_out_error[1081494] hints[1765620] start[1765622] end[1765626] tmp[1766148])
      (1081496 call =[224024] err[1765618] _formal_tmp_out_error[1081494])
      (1080683 'move' call_tmp[1080681] initTemp[1081023])
      (1080697 call =[1081503] ret[1765624] call_tmp[1080681])
      (1800742 call chpl__autoDestroy[1573515] call_tmp[1080681])
    }
    label _endon_fn[1769045]
    (1080703 return _void[55])
  }
  function on_fn[1081117](ref arg _formal_tmp_error[1765632]:_ref(syserr)[948743], ref arg this[1765634]:_ref(channel(false,dynamic,false))[1080602], const in arg hints[1765636]:int(32)[95], const in arg local_style[1765638]:iostyle[231756], const in arg end[1765640]:int(64)[13], const in arg start[1765642]:int(64)[13], const in arg f[1765644]:file[235492]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081123]:_ref(locale)[948755] "dead after last mention" "maybe param" "temp"
      (1081125 'move' call_tmp[1081123](1081128 call home[1081398] this[1765634]))
      ref call_tmp[1081131]:_ref(locale)[948755] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032611]:_ref(file)[948645] "temp"
      (2032615 'move' rvfRerefTmp[2032611](2032612 'set reference' f[1765644]))
      (1081133 'move' call_tmp[1081131](1081136 call home[886860] rvfRerefTmp[2032611]))
      (1081140 call =[90631] call_tmp[1081123] call_tmp[1081131])
      ref call_tmp[1081202]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1081204 'move' call_tmp[1081202](1081207 call _channel_internal[1081432] this[1765634]))
      ref call_tmp[1081210]:_ref(qio_file_ptr_t)[936784] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032618]:_ref(file)[948645] "temp"
      (2032622 'move' rvfRerefTmp[2032618](2032619 'set reference' f[1765644]))
      (1081212 'move' call_tmp[1081210](1081215 call _file_internal[886886] rvfRerefTmp[2032618]))
      const-val call_tmp[1081225]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1081463]:qio_file_ptr_t[231351] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081467 'move' coerce_tmp[1081463](1081465 'deref' call_tmp[1081210]))
      const-val coerce_tmp[1081469]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081475 'move' coerce_tmp[1081469](1081471 'cast' int(32)[95] 1))
      const-val coerce_tmp[1081477]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081483 'move' coerce_tmp[1081477](1081479 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2032597]:_ref(iostyle)[967461] "temp"
      (2032601 'move' rvfRerefTmp[2032597](2032598 'set reference' local_style[1765638]))
      (1081227 'move' call_tmp[1081225](1081230 call qio_channel_create[232790] call_tmp[1081202] coerce_tmp[1081463] hints[1765636] coerce_tmp[1081469] coerce_tmp[1081477] start[1765642] end[1765640] rvfRerefTmp[2032597]))
      (1081240 call =[224024] _formal_tmp_error[1765632] call_tmp[1081225])
    }
    (1081243 return _void[55])
  }
  function on_fn[1081729](const in arg rhs[1765646]:channel(false,dynamic,false)[1080593]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081735]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2032632]:_ref(channel(false,dynamic,false))[1080602] "temp"
      (2032636 'move' rvfRerefTmp[2032632](2032633 'set reference' rhs[1765646]))
      (1081737 'move' call_tmp[1081735](1081740 call _channel_internal[1081432] rvfRerefTmp[2032632]))
      const-val coerce_tmp[1081928]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081932 'move' coerce_tmp[1081928](1081930 'deref' call_tmp[1081735]))
      (1081744 call qio_channel_retain[232863] coerce_tmp[1081928])
    }
    (1081746 return _void[55])
  }
  function on_fn[1081773](const  ref arg lhs[1765648]:_ref(channel(false,dynamic,false))[1080602]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081779]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1081781 'move' call_tmp[1081779](1081784 call _channel_internal[1081432] lhs[1765648]))
      const-val coerce_tmp[1081947]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081951 'move' coerce_tmp[1081947](1081949 'deref' call_tmp[1081779]))
      (1081788 call qio_channel_release[232873] coerce_tmp[1081947])
    }
    (1081790 return _void[55])
  }
  function on_fn[1082098](const in arg this[1765650]:channel(false,dynamic,false)[1080593], ref arg err[1765652]:_ref(syserr)[948743]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082112]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032646]:_ref(channel(false,dynamic,false))[1080602] "temp"
      (2032650 'move' rvfRerefTmp[2032646](2032647 'set reference' this[1765650]))
      (1082114 'move' call_tmp[1082112](1082117 call _channel_internal[1081432] rvfRerefTmp[2032646]))
      const-val call_tmp[1082120]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082443]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082449 'move' coerce_tmp[1082443](1082445 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082451]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082455 'move' coerce_tmp[1082451](1082453 'deref' call_tmp[1082112]))
      (1082122 'move' call_tmp[1082120](1082125 call qio_channel_close[233052] coerce_tmp[1082443] coerce_tmp[1082451]))
      (1082129 call =[224024] err[1765652] call_tmp[1082120])
    }
    (1082134 return _void[55])
  }
  function on_fn[1082527](const in arg this[1765654]:channel(false,dynamic,false)[1080593], ref arg path[1765656]:_ref(string)[937850], ref arg offset[1765658]:_ref(int(64))[936483], ref arg error_out[1769198]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1082533]:c_string[19] "dead at end of block" "insert auto destroy"
      (1082734 'move' tmp_path[1082533](1082732 'cast' c_string[19] nil[44]))
      val tmp_offset[1082539]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1082541]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1082737 'move' tmp_offset[1082539] 0)
      const-val call_tmp[1082552]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1082554 'move' call_tmp[1082552](1082557 call ENOERR[223566]))
      val err[1082558]:syserr[223496] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1082680]:syserr[223496] "dead at end of block" "initialized later" "temp"
      (1082725 call =[224045] init_coerce_tmp[1082680] call_tmp[1082552])
      (1082560 'move' err[1082558] init_coerce_tmp[1082680])
      ref call_tmp[1082573]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2032660]:_ref(channel(false,dynamic,false))[1080602] "temp"
      (2032664 'move' rvfRerefTmp[2032660](2032661 'set reference' this[1765654]))
      (1082575 'move' call_tmp[1082573](1082578 call _channel_internal[1081432] rvfRerefTmp[2032660]))
      const-val call_tmp[1082581]:syserr[223496] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082689]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082695 'move' coerce_tmp[1082689](1082691 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082697]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082701 'move' coerce_tmp[1082697](1082699 'deref' call_tmp[1082573]))
      (1082583 'move' call_tmp[1082581](1082586 call qio_channel_path_offset[232836] coerce_tmp[1082689] coerce_tmp[1082697] tmp_path[1082533] tmp_offset[1082539]))
      (1082592 call =[224024] err[1082558] call_tmp[1082581])
      const-val call_tmp[1082599]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082601 'move' call_tmp[1082599](1082604 call ![223870] err[1082558]))
      const-val call_tmp[1082606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082608 'move' call_tmp[1082606] call_tmp[1082599])
      if call_tmp[1082606]
      {
        const-val call_tmp[1082615]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1082710]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1769203]:Error[167938] "error variable" "temp"
        (1769205 'move' error[1769203] nil[44])
        (1082715 'move' default_arg_length[1082710](1082712 call createStringWithNewBuffer_default_length[963957] tmp_path[1082533] error[1769203]))
        val errorExists[2055973]:bool[10] "temp"
        (2055978 'move' errorExists[2055973](2055975 '!=' error[1769203] nil[44]))
        if errorExists[2055973]
        {
          (1769209 '=' error_out[1769198] error[1769203])
          gotoErrorHandlingReturn _endon_fn[1769200] _endon_fn[1769200]
        }
        val error[1769218]:Error[167938] "error variable" "temp"
        (1769220 'move' error[1769218] nil[44])
        const-val ret_tmp[1786005]:string[26] "temp"
        (1082620 call createStringWithNewBuffer[30410] tmp_path[1082533] default_arg_length[1082710] replace[173648] error[1769218] ret_tmp[1786005])
        (1786008 'move' call_tmp[1082615] ret_tmp[1786005])
        val errorExists[2055981]:bool[10] "temp"
        (2055986 'move' errorExists[2055981](2055983 '!=' error[1769218] nil[44]))
        if errorExists[2055981]
        {
          (1769224 '=' error_out[1769198] error[1769218])
          gotoErrorHandlingReturn _endon_fn[1769200] _endon_fn[1769200]
        }
        (1082625 call =[38269] path[1765656] call_tmp[1082615])
        (1800757 call chpl__autoDestroy[1494420] call_tmp[1082615])
        (1082632 call chpl_free_c_string[22706] tmp_path[1082533])
        (1082637 call =[435238] offset[1765658] tmp_offset[1082539])
      }
    }
    label _endon_fn[1769200]
    (1082644 return _void[55])
  }
  function on_fn[1164818](const in arg this[1765686]:channel(true,dynamic,false)[1060858], const  ref arg args[1765688]:_ref((string,codepointIndex,string))[1158523], const in arg origLocale[1765690]:locale[28], ref arg error_out[1769511]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1769515]:Error[167938] "error variable" "temp"
        (1769524 'move' error[1769515] nil[44])
        ref rvfRerefTmp[2032705]:_ref(channel(true,dynamic,false))[1060867] "temp"
        (2032709 'move' rvfRerefTmp[2032705](2032706 'set reference' this[1765686]))
        (1164829 call lock[1066339] rvfRerefTmp[2032705] error[1769515])
        val errorExists[2056141]:bool[10] "temp"
        (2056146 'move' errorExists[2056141](2056143 '!=' error[1769515] nil[44]))
        if errorExists[2056141]
        {
          gotoErrorHandling handler[1769516] handler[1769516]
        }
        label handler[1769516]
        const-val shouldHandleError[1769535]:bool[10] "temp"
        val errorExists[2056149]:bool[10] "temp"
        (2056154 'move' errorExists[2056149](2056151 '!=' error[1769515] nil[44]))
        (1769539 'move' shouldHandleError[1769535] errorExists[2056149])
        if shouldHandleError[1769535]
        {
          (1769531 '=' error_out[1769511] error[1769515])
          gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
        }
      }
      {
        const-val i[1164839]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1164841 'move' i[1164839] 0)
        {
          {
            {
              val error[1769543]:Error[167938] "error variable" "temp"
              (1769552 'move' error[1769543] nil[44])
              ref call_tmp[1164981]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1164983 'move' call_tmp[1164981](1165068 '.v' args[1765688] x0[1158460]))
              ref rvfRerefTmp[2032712]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032716 'move' rvfRerefTmp[2032712](2032713 'set reference' this[1765686]))
              val rvfRerefTmp[2032767]:locale[28] "temp"
              (2032770 'move' rvfRerefTmp[2032767] origLocale[1765690])
              (1164992 call _writeOne[1165071] rvfRerefTmp[2032712] call_tmp[1164981] rvfRerefTmp[2032767] error[1769543])
              val errorExists[2056157]:bool[10] "temp"
              (2056162 'move' errorExists[2056157](2056159 '!=' error[1769543] nil[44]))
              if errorExists[2056157]
              {
                gotoErrorHandling handler[1769544] handler[1769544]
              }
              label handler[1769544]
              const-val shouldHandleError[1769563]:bool[10] "temp"
              val errorExists[2056165]:bool[10] "temp"
              (2056170 'move' errorExists[2056165](2056167 '!=' error[1769543] nil[44]))
              (1769567 'move' shouldHandleError[1769563] errorExists[2056165])
              if shouldHandleError[1769563]
              {
                (1769559 '=' error_out[1769511] error[1769543])
                ref rvfRerefTmp[2032733]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032737 'move' rvfRerefTmp[2032733](2032734 'set reference' this[1765686]))
                (1802381 call unlock[1066736] rvfRerefTmp[2032733])
                gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
              }
            }
          }
        }
        label _continueLabel0[1164968]
        {
          {
            {
              val error[1769571]:Error[167938] "error variable" "temp"
              (1769580 'move' error[1769571] nil[44])
              ref call_tmp[1165013]:_ref(codepointIndex)[948680] "dead after last mention" "maybe param" "temp"
              (1165015 'move' call_tmp[1165013](1173821 '.v' args[1765688] x1[1158462]))
              ref rvfRerefTmp[2032719]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032723 'move' rvfRerefTmp[2032719](2032720 'set reference' this[1765686]))
              val rvfRerefTmp[2032773]:locale[28] "temp"
              (2032776 'move' rvfRerefTmp[2032773] origLocale[1765690])
              (1165024 call _writeOne[1173824] rvfRerefTmp[2032719] call_tmp[1165013] rvfRerefTmp[2032773] error[1769571])
              val errorExists[2056173]:bool[10] "temp"
              (2056178 'move' errorExists[2056173](2056175 '!=' error[1769571] nil[44]))
              if errorExists[2056173]
              {
                gotoErrorHandling handler[1769572] handler[1769572]
              }
              label handler[1769572]
              const-val shouldHandleError[1769591]:bool[10] "temp"
              val errorExists[2056181]:bool[10] "temp"
              (2056186 'move' errorExists[2056181](2056183 '!=' error[1769571] nil[44]))
              (1769595 'move' shouldHandleError[1769591] errorExists[2056181])
              if shouldHandleError[1769591]
              {
                (1769587 '=' error_out[1769511] error[1769571])
                ref rvfRerefTmp[2032740]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032744 'move' rvfRerefTmp[2032740](2032741 'set reference' this[1765686]))
                (1802385 call unlock[1066736] rvfRerefTmp[2032740])
                gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
              }
            }
          }
        }
        label _continueLabel1[1165000]
        {
          {
            {
              val error[1769599]:Error[167938] "error variable" "temp"
              (1769608 'move' error[1769599] nil[44])
              ref call_tmp[1165045]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1165047 'move' call_tmp[1165045](1175555 '.v' args[1765688] x2[1158464]))
              ref rvfRerefTmp[2032726]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032730 'move' rvfRerefTmp[2032726](2032727 'set reference' this[1765686]))
              val rvfRerefTmp[2032779]:locale[28] "temp"
              (2032782 'move' rvfRerefTmp[2032779] origLocale[1765690])
              (1165056 call _writeOne[1165071] rvfRerefTmp[2032726] call_tmp[1165045] rvfRerefTmp[2032779] error[1769599])
              val errorExists[2056189]:bool[10] "temp"
              (2056194 'move' errorExists[2056189](2056191 '!=' error[1769599] nil[44]))
              if errorExists[2056189]
              {
                gotoErrorHandling handler[1769600] handler[1769600]
              }
              label handler[1769600]
              const-val shouldHandleError[1769619]:bool[10] "temp"
              val errorExists[2056197]:bool[10] "temp"
              (2056202 'move' errorExists[2056197](2056199 '!=' error[1769599] nil[44]))
              (1769623 'move' shouldHandleError[1769619] errorExists[2056197])
              if shouldHandleError[1769619]
              {
                (1769615 '=' error_out[1769511] error[1769599])
                ref rvfRerefTmp[2032747]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032751 'move' rvfRerefTmp[2032747](2032748 'set reference' this[1765686]))
                (1802389 call unlock[1066736] rvfRerefTmp[2032747])
                gotoErrorHandlingReturn _endon_fn[1769513] _endon_fn[1769513]
              }
            }
          }
        }
        label _continueLabel2[1165032]
        label _unused_continueLabel[1164917]
        label _breakLabel[1164919]
      }
      ref rvfRerefTmp[2032754]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032758 'move' rvfRerefTmp[2032754](2032755 'set reference' this[1765686]))
      (1802394 call unlock[1066736] rvfRerefTmp[2032754])
    }
    label _endon_fn[1769513]
    (1164921 return _void[55])
  }
  function on_fn[1180297](const in arg this[1765692]:channel(true,dynamic,false)[1060858], const  ref arg args[1765694]:_ref((string,codepointIndex,string,int(64)))[1176503], const in arg origLocale[1765696]:locale[28], ref arg error_out[1770008]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1770012]:Error[167938] "error variable" "temp"
        (1770021 'move' error[1770012] nil[44])
        ref rvfRerefTmp[2032792]:_ref(channel(true,dynamic,false))[1060867] "temp"
        (2032796 'move' rvfRerefTmp[2032792](2032793 'set reference' this[1765692]))
        (1180308 call lock[1066339] rvfRerefTmp[2032792] error[1770012])
        val errorExists[2056421]:bool[10] "temp"
        (2056426 'move' errorExists[2056421](2056423 '!=' error[1770012] nil[44]))
        if errorExists[2056421]
        {
          gotoErrorHandling handler[1770013] handler[1770013]
        }
        label handler[1770013]
        const-val shouldHandleError[1770032]:bool[10] "temp"
        val errorExists[2056429]:bool[10] "temp"
        (2056434 'move' errorExists[2056429](2056431 '!=' error[1770012] nil[44]))
        (1770036 'move' shouldHandleError[1770032] errorExists[2056429])
        if shouldHandleError[1770032]
        {
          (1770028 '=' error_out[1770008] error[1770012])
          gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
        }
      }
      {
        const-val i[1180318]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1180320 'move' i[1180318] 0)
        {
          {
            {
              val error[1770040]:Error[167938] "error variable" "temp"
              (1770049 'move' error[1770040] nil[44])
              ref call_tmp[1180466]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1180468 'move' call_tmp[1180466](1180585 '.v' args[1765694] x0[1176423]))
              ref rvfRerefTmp[2032799]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032803 'move' rvfRerefTmp[2032799](2032800 'set reference' this[1765692]))
              val rvfRerefTmp[2032868]:locale[28] "temp"
              (2032871 'move' rvfRerefTmp[2032868] origLocale[1765696])
              (1180477 call _writeOne[1165071] rvfRerefTmp[2032799] call_tmp[1180466] rvfRerefTmp[2032868] error[1770040])
              val errorExists[2056437]:bool[10] "temp"
              (2056442 'move' errorExists[2056437](2056439 '!=' error[1770040] nil[44]))
              if errorExists[2056437]
              {
                gotoErrorHandling handler[1770041] handler[1770041]
              }
              label handler[1770041]
              const-val shouldHandleError[1770060]:bool[10] "temp"
              val errorExists[2056445]:bool[10] "temp"
              (2056450 'move' errorExists[2056445](2056447 '!=' error[1770040] nil[44]))
              (1770064 'move' shouldHandleError[1770060] errorExists[2056445])
              if shouldHandleError[1770060]
              {
                (1770056 '=' error_out[1770008] error[1770040])
                ref rvfRerefTmp[2032827]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032831 'move' rvfRerefTmp[2032827](2032828 'set reference' this[1765692]))
                (1803444 call unlock[1066736] rvfRerefTmp[2032827])
                gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
              }
            }
          }
        }
        label _continueLabel0[1180453]
        {
          {
            {
              val error[1770068]:Error[167938] "error variable" "temp"
              (1770077 'move' error[1770068] nil[44])
              ref call_tmp[1180498]:_ref(codepointIndex)[948680] "dead after last mention" "maybe param" "temp"
              (1180500 'move' call_tmp[1180498](1180593 '.v' args[1765694] x1[1176425]))
              ref rvfRerefTmp[2032806]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032810 'move' rvfRerefTmp[2032806](2032807 'set reference' this[1765692]))
              val rvfRerefTmp[2032874]:locale[28] "temp"
              (2032877 'move' rvfRerefTmp[2032874] origLocale[1765696])
              (1180509 call _writeOne[1173824] rvfRerefTmp[2032806] call_tmp[1180498] rvfRerefTmp[2032874] error[1770068])
              val errorExists[2056453]:bool[10] "temp"
              (2056458 'move' errorExists[2056453](2056455 '!=' error[1770068] nil[44]))
              if errorExists[2056453]
              {
                gotoErrorHandling handler[1770069] handler[1770069]
              }
              label handler[1770069]
              const-val shouldHandleError[1770088]:bool[10] "temp"
              val errorExists[2056461]:bool[10] "temp"
              (2056466 'move' errorExists[2056461](2056463 '!=' error[1770068] nil[44]))
              (1770092 'move' shouldHandleError[1770088] errorExists[2056461])
              if shouldHandleError[1770088]
              {
                (1770084 '=' error_out[1770008] error[1770068])
                ref rvfRerefTmp[2032834]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032838 'move' rvfRerefTmp[2032834](2032835 'set reference' this[1765692]))
                (1803448 call unlock[1066736] rvfRerefTmp[2032834])
                gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
              }
            }
          }
        }
        label _continueLabel1[1180485]
        {
          {
            {
              val error[1770096]:Error[167938] "error variable" "temp"
              (1770105 'move' error[1770096] nil[44])
              ref call_tmp[1180530]:_ref(string)[937850] "dead after last mention" "maybe param" "temp"
              (1180532 'move' call_tmp[1180530](1180601 '.v' args[1765694] x2[1176427]))
              ref rvfRerefTmp[2032813]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032817 'move' rvfRerefTmp[2032813](2032814 'set reference' this[1765692]))
              val rvfRerefTmp[2032880]:locale[28] "temp"
              (2032883 'move' rvfRerefTmp[2032880] origLocale[1765696])
              (1180541 call _writeOne[1165071] rvfRerefTmp[2032813] call_tmp[1180530] rvfRerefTmp[2032880] error[1770096])
              val errorExists[2056469]:bool[10] "temp"
              (2056474 'move' errorExists[2056469](2056471 '!=' error[1770096] nil[44]))
              if errorExists[2056469]
              {
                gotoErrorHandling handler[1770097] handler[1770097]
              }
              label handler[1770097]
              const-val shouldHandleError[1770116]:bool[10] "temp"
              val errorExists[2056477]:bool[10] "temp"
              (2056482 'move' errorExists[2056477](2056479 '!=' error[1770096] nil[44]))
              (1770120 'move' shouldHandleError[1770116] errorExists[2056477])
              if shouldHandleError[1770116]
              {
                (1770112 '=' error_out[1770008] error[1770096])
                ref rvfRerefTmp[2032841]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032845 'move' rvfRerefTmp[2032841](2032842 'set reference' this[1765692]))
                (1803452 call unlock[1066736] rvfRerefTmp[2032841])
                gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
              }
            }
          }
        }
        label _continueLabel2[1180517]
        {
          {
            {
              val error[1770124]:Error[167938] "error variable" "temp"
              (1770133 'move' error[1770124] nil[44])
              ref call_tmp[1180562]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
              (1180564 'move' call_tmp[1180562](1180609 '.' args[1765694] x3[1176429]))
              const-val coerce_tmp[1180612]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1180616 'move' coerce_tmp[1180612](1180614 'deref' call_tmp[1180562]))
              ref rvfRerefTmp[2032820]:_ref(channel(true,dynamic,false))[1060867] "temp"
              (2032824 'move' rvfRerefTmp[2032820](2032821 'set reference' this[1765692]))
              val rvfRerefTmp[2032886]:locale[28] "temp"
              (2032889 'move' rvfRerefTmp[2032886] origLocale[1765696])
              (1180573 call _writeOne[1068848] rvfRerefTmp[2032820] coerce_tmp[1180612] rvfRerefTmp[2032886] error[1770124])
              val errorExists[2056485]:bool[10] "temp"
              (2056490 'move' errorExists[2056485](2056487 '!=' error[1770124] nil[44]))
              if errorExists[2056485]
              {
                gotoErrorHandling handler[1770125] handler[1770125]
              }
              label handler[1770125]
              const-val shouldHandleError[1770144]:bool[10] "temp"
              val errorExists[2056493]:bool[10] "temp"
              (2056498 'move' errorExists[2056493](2056495 '!=' error[1770124] nil[44]))
              (1770148 'move' shouldHandleError[1770144] errorExists[2056493])
              if shouldHandleError[1770144]
              {
                (1770140 '=' error_out[1770008] error[1770124])
                ref rvfRerefTmp[2032848]:_ref(channel(true,dynamic,false))[1060867] "temp"
                (2032852 'move' rvfRerefTmp[2032848](2032849 'set reference' this[1765692]))
                (1803456 call unlock[1066736] rvfRerefTmp[2032848])
                gotoErrorHandlingReturn _endon_fn[1770010] _endon_fn[1770010]
              }
            }
          }
        }
        label _continueLabel3[1180549]
        label _unused_continueLabel[1180396]
        label _breakLabel[1180398]
      }
      ref rvfRerefTmp[2032855]:_ref(channel(true,dynamic,false))[1060867] "temp"
      (2032859 'move' rvfRerefTmp[2032855](2032856 'set reference' this[1765692]))
      (1803461 call unlock[1066736] rvfRerefTmp[2032855])
    }
    label _endon_fn[1770010]
    (1180400 return _void[55])
  }
  function on_fn[1504015](ref arg this[1765928]:_ref(channel(false,dynamic,true))[985547]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1504021]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1504023 'move' call_tmp[1504021](1504026 call _channel_internal[1018277] this[1765928]))
      const-val coerce_tmp[1504064]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1504068 'move' coerce_tmp[1504064](1504066 'deref' call_tmp[1504021]))
      (1504030 call qio_channel_release[232873] coerce_tmp[1504064])
      ref call_tmp[1504033]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1504035 'move' call_tmp[1504033](1504038 call _channel_internal[1018277] this[1765928]))
      (1504042 call =[861391] call_tmp[1504033] QIO_CHANNEL_PTR_NULL[231380])
    }
    (1504045 return _void[55])
  }
  function on_fn[1567021](ref arg this[1765970]:_ref(channel(true,dynamic,true))[1021745]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1567027]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1567029 'move' call_tmp[1567027](1567032 call _channel_internal[1022987] this[1765970]))
      const-val coerce_tmp[1567070]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1567074 'move' coerce_tmp[1567070](1567072 'deref' call_tmp[1567027]))
      (1567036 call qio_channel_release[232873] coerce_tmp[1567070])
      ref call_tmp[1567039]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1567041 'move' call_tmp[1567039](1567044 call _channel_internal[1022987] this[1765970]))
      (1567048 call =[861391] call_tmp[1567039] QIO_CHANNEL_PTR_NULL[231380])
    }
    (1567051 return _void[55])
  }
  function on_fn[1569197](ref arg this[1765974]:_ref(channel(true,dynamic,false))[1060867]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1569203]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1569205 'move' call_tmp[1569203](1569208 call _channel_internal[1061700] this[1765974]))
      const-val coerce_tmp[1569246]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1569250 'move' coerce_tmp[1569246](1569248 'deref' call_tmp[1569203]))
      (1569212 call qio_channel_release[232873] coerce_tmp[1569246])
      ref call_tmp[1569215]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1569217 'move' call_tmp[1569215](1569220 call _channel_internal[1061700] this[1765974]))
      (1569224 call =[861391] call_tmp[1569215] QIO_CHANNEL_PTR_NULL[231380])
    }
    (1569227 return _void[55])
  }
  function on_fn[1573451](ref arg this[1765980]:_ref(channel(false,dynamic,false))[1080602]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1573457]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1573459 'move' call_tmp[1573457](1573462 call _channel_internal[1081432] this[1765980]))
      const-val coerce_tmp[1573500]:qio_channel_ptr_t[231377] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1573504 'move' coerce_tmp[1573500](1573502 'deref' call_tmp[1573457]))
      (1573466 call qio_channel_release[232873] coerce_tmp[1573500])
      ref call_tmp[1573469]:_ref(qio_channel_ptr_t)[936795] "dead after last mention" "maybe param" "temp"
      (1573471 'move' call_tmp[1573469](1573474 call _channel_internal[1081432] this[1765980]))
      (1573478 call =[861391] call_tmp[1573469] QIO_CHANNEL_PTR_NULL[231380])
    }
    (1573481 return _void[55])
  }
  function chpl__deinit_IO[1808204]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1808210]
    (1808230 call chpl__autoDestroy[1496269] call_tmp[723942])
    (1808227 call chpl__autoDestroy[1496269] call_tmp[723925])
    (1808224 call chpl__autoDestroy[1496269] call_tmp[723908])
    (1808221 call chpl__autoDestroy[1567085] stderr[250176])
    (1808218 call chpl__autoDestroy[1567085] stdout[250147])
    (1808215 call chpl__autoDestroy[1504079] stdin[250120])
    ref tmp[2033855]:6*string[985128] "temp"
    (2033860 'move' tmp[2033855](2033857 '.' _arg_to_proto_names[246473] value[2033845]))
    (1808212 call chpl__autoDestroy[1503106] tmp[2033855])
    (1808207 return _void[55])
  }
  function wrapon_fn[2035429](const in arg dummy_locale_arg[2035431]:chpl_localeID_t[209294], in arg buf[2035433]:c_void_ptr[149], in arg buf_size[2035435]:int(64)[13], in arg c[2035437]:_class_localson_fn[2035389]) : void[4] "on block"
  {
    val _0_tmp[2035442]:chpl_localeID_t[209294] "temp"
    (2035447 'move' _0_tmp[2035442](2035444 '.v' c[2035437] _0_tmp[2035392]))
    ref _1_this[2035449]:file[235492] "temp"
    (2035454 'move' _1_this[2035449](2035451 '.v' c[2035437] _1_this[2035394]))
    (2035440 call on_fn[935508] _1_this[2035449])
    (2035457 return _void[55])
  }
  function wrapon_fn[2035540](const in arg dummy_locale_arg[2035542]:chpl_localeID_t[209294], in arg buf[2035544]:c_void_ptr[149], in arg buf_size[2035546]:int(64)[13], in arg c[2035548]:_class_localson_fn[2035482]) : void[4] "on block"
  {
    val _0_tmp[2035553]:chpl_localeID_t[209294] "temp"
    (2035558 'move' _0_tmp[2035553](2035555 '.v' c[2035548] _0_tmp[2035485]))
    val _1_rvfDerefTmp[2035560]:file[235492] "temp"
    (2035565 'move' _1_rvfDerefTmp[2035560](2035562 '.v' c[2035548] _1_rvfDerefTmp[2035487]))
    ref _2_ret[2035568]:iostyle[231756] "temp"
    (2035573 'move' _2_ret[2035568](2035570 '.v' c[2035548] _2_ret[2035489]))
    ref _3_error[2035576]:Error[167938] "temp"
    (2035581 'move' _3_error[2035576](2035578 '.v' c[2035548] _3_error[2035491]))
    (2035551 call on_fn[935517] _1_rvfDerefTmp[2035560] _2_ret[2035568] _3_error[2035576])
    (2035584 return _void[55])
  }
  function wrapon_fn[2035654](const in arg dummy_locale_arg[2035656]:chpl_localeID_t[209294], in arg buf[2035658]:c_void_ptr[149], in arg buf_size[2035660]:int(64)[13], in arg c[2035662]:_class_localson_fn[2035608]) : void[4] "on block"
  {
    val _0_tmp[2035667]:chpl_localeID_t[209294] "temp"
    (2035672 'move' _0_tmp[2035667](2035669 '.v' c[2035662] _0_tmp[2035611]))
    val _1_rvfDerefTmp[2035674]:file[235492] "temp"
    (2035679 'move' _1_rvfDerefTmp[2035674](2035676 '.v' c[2035662] _1_rvfDerefTmp[2035613]))
    ref _2_err[2035682]:syserr[223496] "temp"
    (2035687 'move' _2_err[2035682](2035684 '.v' c[2035662] _2_err[2035615]))
    (2035665 call on_fn[935526] _1_rvfDerefTmp[2035674] _2_err[2035682])
    (2035690 return _void[55])
  }
  function wrapon_fn[2035786](const in arg dummy_locale_arg[2035788]:chpl_localeID_t[209294], in arg buf[2035790]:c_void_ptr[149], in arg buf_size[2035792]:int(64)[13], in arg c[2035794]:_class_localson_fn[2035716]) : void[4] "on block"
  {
    val _0_tmp[2035799]:chpl_localeID_t[209294] "temp"
    (2035804 'move' _0_tmp[2035799](2035801 '.v' c[2035794] _0_tmp[2035719]))
    val _1_rvfDerefTmp[2035806]:file[235492] "temp"
    (2035811 'move' _1_rvfDerefTmp[2035806](2035808 '.v' c[2035794] _1_rvfDerefTmp[2035721]))
    ref _2_err[2035814]:syserr[223496] "temp"
    (2035819 'move' _2_err[2035814](2035816 '.v' c[2035794] _2_err[2035723]))
    ref _3_ret[2035822]:string[26] "temp"
    (2035827 'move' _3_ret[2035822](2035824 '.v' c[2035794] _3_ret[2035725]))
    ref _4_error[2035830]:Error[167938] "temp"
    (2035835 'move' _4_error[2035830](2035832 '.v' c[2035794] _4_error[2035727]))
    (2035797 call on_fn[935544] _1_rvfDerefTmp[2035806] _2_err[2035814] _3_ret[2035822] _4_error[2035830])
    (2035838 return _void[55])
  }
  function wrapon_fn[2036159](const in arg dummy_locale_arg[2036161]:chpl_localeID_t[209294], in arg buf[2036163]:c_void_ptr[149], in arg buf_size[2036165]:int(64)[13], in arg c[2036167]:_class_localson_fn[2036065]) : void[4] "on block"
  {
    val _0_tmp[2036172]:chpl_localeID_t[209294] "temp"
    (2036177 'move' _0_tmp[2036172](2036174 '.v' c[2036167] _0_tmp[2036068]))
    val _1_start[2036179]:int(64)[13] "temp"
    (2036184 'move' _1_start[2036179](2036181 '.v' c[2036167] _1_start[2036070]))
    ref _2_err[2036187]:syserr[223496] "temp"
    (2036192 'move' _2_err[2036187](2036189 '.v' c[2036167] _2_err[2036072]))
    val _3_end[2036195]:int(64)[13] "temp"
    (2036200 'move' _3_end[2036195](2036197 '.v' c[2036167] _3_end[2036074]))
    val _4_rvfDerefTmp[2036203]:iostyle[231756] "temp"
    (2036208 'move' _4_rvfDerefTmp[2036203](2036205 '.v' c[2036167] _4_rvfDerefTmp[2036076]))
    val _5_rvfDerefTmp[2036211]:file[235492] "temp"
    (2036216 'move' _5_rvfDerefTmp[2036211](2036213 '.v' c[2036167] _5_rvfDerefTmp[2036078]))
    ref _6_ret[2036219]:channel(false,dynamic,true)[985538] "temp"
    (2036224 'move' _6_ret[2036219](2036221 '.v' c[2036167] _6_ret[2036080]))
    val _7_hints[2036227]:int(32)[95] "temp"
    (2036232 'move' _7_hints[2036227](2036229 '.v' c[2036167] _7_hints[2036082]))
    ref _8_error[2036235]:Error[167938] "temp"
    (2036240 'move' _8_error[2036235](2036237 '.v' c[2036167] _8_error[2036084]))
    (2036170 call on_fn[1016606] _1_start[2036179] _2_err[2036187] _3_end[2036195] _4_rvfDerefTmp[2036203] _5_rvfDerefTmp[2036211] _6_ret[2036219] _7_hints[2036227] _8_error[2036235])
    (2036243 return _void[55])
  }
  function wrapon_fn[2036354](const in arg dummy_locale_arg[2036356]:chpl_localeID_t[209294], in arg buf[2036358]:c_void_ptr[149], in arg buf_size[2036360]:int(64)[13], in arg c[2036362]:_class_localson_fn[2036272]) : void[4] "on block"
  {
    val _0_tmp[2036367]:chpl_localeID_t[209294] "temp"
    (2036372 'move' _0_tmp[2036367](2036369 '.v' c[2036362] _0_tmp[2036275]))
    val _1_end[2036374]:int(64)[13] "temp"
    (2036379 'move' _1_end[2036374](2036376 '.v' c[2036362] _1_end[2036277]))
    ref _2_this[2036382]:channel(false,dynamic,true)[985538] "temp"
    (2036387 'move' _2_this[2036382](2036384 '.v' c[2036362] _2_this[2036279]))
    val _3_hints[2036390]:int(32)[95] "temp"
    (2036395 'move' _3_hints[2036390](2036392 '.v' c[2036362] _3_hints[2036281]))
    val _4_rvfDerefTmp[2036398]:iostyle[231756] "temp"
    (2036403 'move' _4_rvfDerefTmp[2036398](2036400 '.v' c[2036362] _4_rvfDerefTmp[2036283]))
    val _5_start[2036406]:int(64)[13] "temp"
    (2036411 'move' _5_start[2036406](2036408 '.v' c[2036362] _5_start[2036285]))
    val _6_rvfDerefTmp[2036414]:file[235492] "temp"
    (2036419 'move' _6_rvfDerefTmp[2036414](2036416 '.v' c[2036362] _6_rvfDerefTmp[2036287]))
    ref _7__formal_tmp_error[2036422]:syserr[223496] "temp"
    (2036427 'move' _7__formal_tmp_error[2036422](2036424 '.v' c[2036362] _7__formal_tmp_error[2036289]))
    (2036365 call on_fn[1017636] _1_end[2036374] _2_this[2036382] _3_hints[2036390] _4_rvfDerefTmp[2036398] _5_start[2036406] _6_rvfDerefTmp[2036414] _7__formal_tmp_error[2036422])
    (2036430 return _void[55])
  }
  function wrapon_fn[2036487](const in arg dummy_locale_arg[2036489]:chpl_localeID_t[209294], in arg buf[2036491]:c_void_ptr[149], in arg buf_size[2036493]:int(64)[13], in arg c[2036495]:_class_localson_fn[2036453]) : void[4] "on block"
  {
    val _0_tmp[2036500]:chpl_localeID_t[209294] "temp"
    (2036505 'move' _0_tmp[2036500](2036502 '.v' c[2036495] _0_tmp[2036456]))
    val _1_rvfDerefTmp[2036507]:channel(false,dynamic,true)[985538] "temp"
    (2036512 'move' _1_rvfDerefTmp[2036507](2036509 '.v' c[2036495] _1_rvfDerefTmp[2036458]))
    (2036498 call on_fn[1018576] _1_rvfDerefTmp[2036507])
    (2036515 return _void[55])
  }
  function wrapon_fn[2036578](const in arg dummy_locale_arg[2036580]:chpl_localeID_t[209294], in arg buf[2036582]:c_void_ptr[149], in arg buf_size[2036584]:int(64)[13], in arg c[2036586]:_class_localson_fn[2036538]) : void[4] "on block"
  {
    val _0_tmp[2036591]:chpl_localeID_t[209294] "temp"
    (2036596 'move' _0_tmp[2036591](2036593 '.v' c[2036586] _0_tmp[2036541]))
    ref _1_lhs[2036598]:channel(false,dynamic,true)[985538] "temp"
    (2036603 'move' _1_lhs[2036598](2036600 '.v' c[2036586] _1_lhs[2036543]))
    (2036589 call on_fn[1018620] _1_lhs[2036598])
    (2036606 return _void[55])
  }
  function wrapon_fn[2036842](const in arg dummy_locale_arg[2036844]:chpl_localeID_t[209294], in arg buf[2036846]:c_void_ptr[149], in arg buf_size[2036848]:int(64)[13], in arg c[2036850]:_class_localson_fn[2036748]) : void[4] "on block"
  {
    val _0_tmp[2036855]:chpl_localeID_t[209294] "temp"
    (2036860 'move' _0_tmp[2036855](2036857 '.v' c[2036850] _0_tmp[2036751]))
    ref _1_err[2036862]:syserr[223496] "temp"
    (2036867 'move' _1_err[2036862](2036864 '.v' c[2036850] _1_err[2036753]))
    val _2_start[2036870]:int(64)[13] "temp"
    (2036875 'move' _2_start[2036870](2036872 '.v' c[2036850] _2_start[2036755]))
    val _3_rvfDerefTmp[2036878]:iostyle[231756] "temp"
    (2036883 'move' _3_rvfDerefTmp[2036878](2036880 '.v' c[2036850] _3_rvfDerefTmp[2036757]))
    val _4_end[2036886]:int(64)[13] "temp"
    (2036891 'move' _4_end[2036886](2036888 '.v' c[2036850] _4_end[2036759]))
    val _5_rvfDerefTmp[2036894]:file[235492] "temp"
    (2036899 'move' _5_rvfDerefTmp[2036894](2036896 '.v' c[2036850] _5_rvfDerefTmp[2036761]))
    ref _6_ret[2036902]:channel(true,dynamic,true)[1021736] "temp"
    (2036907 'move' _6_ret[2036902](2036904 '.v' c[2036850] _6_ret[2036763]))
    val _7_hints[2036910]:int(32)[95] "temp"
    (2036915 'move' _7_hints[2036910](2036912 '.v' c[2036850] _7_hints[2036765]))
    ref _8_error[2036918]:Error[167938] "temp"
    (2036923 'move' _8_error[2036918](2036920 '.v' c[2036850] _8_error[2036767]))
    (2036853 call on_fn[1022181] _1_err[2036862] _2_start[2036870] _3_rvfDerefTmp[2036878] _4_end[2036886] _5_rvfDerefTmp[2036894] _6_ret[2036902] _7_hints[2036910] _8_error[2036918])
    (2036926 return _void[55])
  }
  function wrapon_fn[2037037](const in arg dummy_locale_arg[2037039]:chpl_localeID_t[209294], in arg buf[2037041]:c_void_ptr[149], in arg buf_size[2037043]:int(64)[13], in arg c[2037045]:_class_localson_fn[2036955]) : void[4] "on block"
  {
    val _0_tmp[2037050]:chpl_localeID_t[209294] "temp"
    (2037055 'move' _0_tmp[2037050](2037052 '.v' c[2037045] _0_tmp[2036958]))
    val _1_start[2037057]:int(64)[13] "temp"
    (2037062 'move' _1_start[2037057](2037059 '.v' c[2037045] _1_start[2036960]))
    val _2_rvfDerefTmp[2037065]:file[235492] "temp"
    (2037070 'move' _2_rvfDerefTmp[2037065](2037067 '.v' c[2037045] _2_rvfDerefTmp[2036962]))
    ref _3__formal_tmp_error[2037073]:syserr[223496] "temp"
    (2037078 'move' _3__formal_tmp_error[2037073](2037075 '.v' c[2037045] _3__formal_tmp_error[2036964]))
    val _4_end[2037081]:int(64)[13] "temp"
    (2037086 'move' _4_end[2037081](2037083 '.v' c[2037045] _4_end[2036966]))
    val _5_hints[2037089]:int(32)[95] "temp"
    (2037094 'move' _5_hints[2037089](2037091 '.v' c[2037045] _5_hints[2036968]))
    val _6_rvfDerefTmp[2037097]:iostyle[231756] "temp"
    (2037102 'move' _6_rvfDerefTmp[2037097](2037099 '.v' c[2037045] _6_rvfDerefTmp[2036970]))
    ref _7_this[2037105]:channel(true,dynamic,true)[1021736] "temp"
    (2037110 'move' _7_this[2037105](2037107 '.v' c[2037045] _7_this[2036972]))
    (2037048 call on_fn[1022672] _1_start[2037057] _2_rvfDerefTmp[2037065] _3__formal_tmp_error[2037073] _4_end[2037081] _5_hints[2037089] _6_rvfDerefTmp[2037097] _7_this[2037105])
    (2037113 return _void[55])
  }
  function wrapon_fn[2037170](const in arg dummy_locale_arg[2037172]:chpl_localeID_t[209294], in arg buf[2037174]:c_void_ptr[149], in arg buf_size[2037176]:int(64)[13], in arg c[2037178]:_class_localson_fn[2037136]) : void[4] "on block"
  {
    val _0_tmp[2037183]:chpl_localeID_t[209294] "temp"
    (2037188 'move' _0_tmp[2037183](2037185 '.v' c[2037178] _0_tmp[2037139]))
    val _1_rvfDerefTmp[2037190]:channel(true,dynamic,true)[1021736] "temp"
    (2037195 'move' _1_rvfDerefTmp[2037190](2037192 '.v' c[2037178] _1_rvfDerefTmp[2037141]))
    (2037181 call on_fn[1023284] _1_rvfDerefTmp[2037190])
    (2037198 return _void[55])
  }
  function wrapon_fn[2037261](const in arg dummy_locale_arg[2037263]:chpl_localeID_t[209294], in arg buf[2037265]:c_void_ptr[149], in arg buf_size[2037267]:int(64)[13], in arg c[2037269]:_class_localson_fn[2037221]) : void[4] "on block"
  {
    val _0_tmp[2037274]:chpl_localeID_t[209294] "temp"
    (2037279 'move' _0_tmp[2037274](2037276 '.v' c[2037269] _0_tmp[2037224]))
    ref _1_lhs[2037281]:channel(true,dynamic,true)[1021736] "temp"
    (2037286 'move' _1_lhs[2037281](2037283 '.v' c[2037269] _1_lhs[2037226]))
    (2037272 call on_fn[1023328] _1_lhs[2037281])
    (2037289 return _void[55])
  }
  function wrapon_fn[2037555](const in arg dummy_locale_arg[2037557]:chpl_localeID_t[209294], in arg buf[2037559]:c_void_ptr[149], in arg buf_size[2037561]:int(64)[13], in arg c[2037563]:_class_localson_fn[2037461]) : void[4] "on block"
  {
    val _0_tmp[2037568]:chpl_localeID_t[209294] "temp"
    (2037573 'move' _0_tmp[2037568](2037570 '.v' c[2037563] _0_tmp[2037464]))
    val _1_hints[2037575]:int(32)[95] "temp"
    (2037580 'move' _1_hints[2037575](2037577 '.v' c[2037563] _1_hints[2037466]))
    val _2_start[2037583]:int(64)[13] "temp"
    (2037588 'move' _2_start[2037583](2037585 '.v' c[2037563] _2_start[2037468]))
    ref _3_ret[2037591]:channel(true,dynamic,false)[1060858] "temp"
    (2037596 'move' _3_ret[2037591](2037593 '.v' c[2037563] _3_ret[2037470]))
    val _4_rvfDerefTmp[2037599]:iostyle[231756] "temp"
    (2037604 'move' _4_rvfDerefTmp[2037599](2037601 '.v' c[2037563] _4_rvfDerefTmp[2037472]))
    val _5_end[2037607]:int(64)[13] "temp"
    (2037612 'move' _5_end[2037607](2037609 '.v' c[2037563] _5_end[2037474]))
    val _6_rvfDerefTmp[2037615]:file[235492] "temp"
    (2037620 'move' _6_rvfDerefTmp[2037615](2037617 '.v' c[2037563] _6_rvfDerefTmp[2037476]))
    ref _7_err[2037623]:syserr[223496] "temp"
    (2037628 'move' _7_err[2037623](2037625 '.v' c[2037563] _7_err[2037478]))
    ref _8_error[2037631]:Error[167938] "temp"
    (2037636 'move' _8_error[2037631](2037633 '.v' c[2037563] _8_error[2037480]))
    (2037566 call on_fn[1060933] _1_hints[2037575] _2_start[2037583] _3_ret[2037591] _4_rvfDerefTmp[2037599] _5_end[2037607] _6_rvfDerefTmp[2037615] _7_err[2037623] _8_error[2037631])
    (2037639 return _void[55])
  }
  function wrapon_fn[2037750](const in arg dummy_locale_arg[2037752]:chpl_localeID_t[209294], in arg buf[2037754]:c_void_ptr[149], in arg buf_size[2037756]:int(64)[13], in arg c[2037758]:_class_localson_fn[2037668]) : void[4] "on block"
  {
    val _0_tmp[2037763]:chpl_localeID_t[209294] "temp"
    (2037768 'move' _0_tmp[2037763](2037765 '.v' c[2037758] _0_tmp[2037671]))
    val _1_start[2037770]:int(64)[13] "temp"
    (2037775 'move' _1_start[2037770](2037772 '.v' c[2037758] _1_start[2037673]))
    val _2_rvfDerefTmp[2037778]:file[235492] "temp"
    (2037783 'move' _2_rvfDerefTmp[2037778](2037780 '.v' c[2037758] _2_rvfDerefTmp[2037675]))
    ref _3__formal_tmp_error[2037786]:syserr[223496] "temp"
    (2037791 'move' _3__formal_tmp_error[2037786](2037788 '.v' c[2037758] _3__formal_tmp_error[2037677]))
    ref _4_this[2037794]:channel(true,dynamic,false)[1060858] "temp"
    (2037799 'move' _4_this[2037794](2037796 '.v' c[2037758] _4_this[2037679]))
    val _5_hints[2037802]:int(32)[95] "temp"
    (2037807 'move' _5_hints[2037802](2037804 '.v' c[2037758] _5_hints[2037681]))
    val _6_rvfDerefTmp[2037810]:iostyle[231756] "temp"
    (2037815 'move' _6_rvfDerefTmp[2037810](2037812 '.v' c[2037758] _6_rvfDerefTmp[2037683]))
    val _7_end[2037818]:int(64)[13] "temp"
    (2037823 'move' _7_end[2037818](2037820 '.v' c[2037758] _7_end[2037685]))
    (2037761 call on_fn[1061385] _1_start[2037770] _2_rvfDerefTmp[2037778] _3__formal_tmp_error[2037786] _4_this[2037794] _5_hints[2037802] _6_rvfDerefTmp[2037810] _7_end[2037818])
    (2037826 return _void[55])
  }
  function wrapon_fn[2037883](const in arg dummy_locale_arg[2037885]:chpl_localeID_t[209294], in arg buf[2037887]:c_void_ptr[149], in arg buf_size[2037889]:int(64)[13], in arg c[2037891]:_class_localson_fn[2037849]) : void[4] "on block"
  {
    val _0_tmp[2037896]:chpl_localeID_t[209294] "temp"
    (2037901 'move' _0_tmp[2037896](2037898 '.v' c[2037891] _0_tmp[2037852]))
    val _1_rvfDerefTmp[2037903]:channel(true,dynamic,false)[1060858] "temp"
    (2037908 'move' _1_rvfDerefTmp[2037903](2037905 '.v' c[2037891] _1_rvfDerefTmp[2037854]))
    (2037894 call on_fn[1061997] _1_rvfDerefTmp[2037903])
    (2037911 return _void[55])
  }
  function wrapon_fn[2037974](const in arg dummy_locale_arg[2037976]:chpl_localeID_t[209294], in arg buf[2037978]:c_void_ptr[149], in arg buf_size[2037980]:int(64)[13], in arg c[2037982]:_class_localson_fn[2037934]) : void[4] "on block"
  {
    val _0_tmp[2037987]:chpl_localeID_t[209294] "temp"
    (2037992 'move' _0_tmp[2037987](2037989 '.v' c[2037982] _0_tmp[2037937]))
    ref _1_lhs[2037994]:channel(true,dynamic,false)[1060858] "temp"
    (2037999 'move' _1_lhs[2037994](2037996 '.v' c[2037982] _1_lhs[2037939]))
    (2037985 call on_fn[1062041] _1_lhs[2037994])
    (2038002 return _void[55])
  }
  function wrapon_fn[2038072](const in arg dummy_locale_arg[2038074]:chpl_localeID_t[209294], in arg buf[2038076]:c_void_ptr[149], in arg buf_size[2038078]:int(64)[13], in arg c[2038080]:_class_localson_fn[2038026]) : void[4] "on block"
  {
    val _0_tmp[2038085]:chpl_localeID_t[209294] "temp"
    (2038090 'move' _0_tmp[2038085](2038087 '.v' c[2038080] _0_tmp[2038029]))
    val _1_rvfDerefTmp[2038092]:channel(true,dynamic,false)[1060858] "temp"
    (2038097 'move' _1_rvfDerefTmp[2038092](2038094 '.v' c[2038080] _1_rvfDerefTmp[2038031]))
    ref _2_err[2038100]:syserr[223496] "temp"
    (2038105 'move' _2_err[2038100](2038102 '.v' c[2038080] _2_err[2038033]))
    (2038083 call on_fn[1062366] _1_rvfDerefTmp[2038092] _2_err[2038100])
    (2038108 return _void[55])
  }
  function wrapon_fn[2038210](const in arg dummy_locale_arg[2038212]:chpl_localeID_t[209294], in arg buf[2038214]:c_void_ptr[149], in arg buf_size[2038216]:int(64)[13], in arg c[2038218]:_class_localson_fn[2038134]) : void[4] "on block"
  {
    val _0_tmp[2038223]:chpl_localeID_t[209294] "temp"
    (2038228 'move' _0_tmp[2038223](2038225 '.v' c[2038218] _0_tmp[2038137]))
    ref _1_this[2038230]:channel(true,dynamic,false)[1060858] "temp"
    (2038235 'move' _1_this[2038230](2038232 '.v' c[2038218] _1_this[2038139]))
    ref _2_path[2038238]:string[26] "temp"
    (2038243 'move' _2_path[2038238](2038240 '.v' c[2038218] _2_path[2038141]))
    ref _3_offset[2038246]:int(64)[13] "temp"
    (2038251 'move' _3_offset[2038246](2038248 '.v' c[2038218] _3_offset[2038143]))
    ref _4_error[2038254]:Error[167938] "temp"
    (2038259 'move' _4_error[2038254](2038256 '.v' c[2038218] _4_error[2038145]))
    (2038221 call on_fn[1062843] _1_this[2038230] _2_path[2038238] _3_offset[2038246] _4_error[2038254])
    (2038262 return _void[55])
  }
  function wrapon_fn[2038352](const in arg dummy_locale_arg[2038354]:chpl_localeID_t[209294], in arg buf[2038356]:c_void_ptr[149], in arg buf_size[2038358]:int(64)[13], in arg c[2038360]:_class_localson_fn[2038288]) : void[4] "on block"
  {
    val _0_tmp[2038365]:chpl_localeID_t[209294] "temp"
    (2038370 'move' _0_tmp[2038365](2038367 '.v' c[2038360] _0_tmp[2038291]))
    val _1_rvfDerefTmp[2038372]:channel(true,dynamic,false)[1060858] "temp"
    (2038377 'move' _1_rvfDerefTmp[2038372](2038374 '.v' c[2038360] _1_rvfDerefTmp[2038293]))
    ref _2_args[2038380]:1*byteIndex[1056992] "temp"
    (2038385 'move' _2_args[2038380](2038382 '.v' c[2038360] _2_args[2038295]))
    val _3_rvfDerefTmp[2038388]:locale[28] "temp"
    (2038393 'move' _3_rvfDerefTmp[2038388](2038390 '.v' c[2038360] _3_rvfDerefTmp[2038297]))
    ref _4_error[2038396]:Error[167938] "temp"
    (2038401 'move' _4_error[2038396](2038398 '.v' c[2038360] _4_error[2038299]))
    (2038363 call on_fn[1066000] _1_rvfDerefTmp[2038372] _2_args[2038380] _3_rvfDerefTmp[2038388] _4_error[2038396])
    (2038404 return _void[55])
  }
  function wrapon_fn[2038494](const in arg dummy_locale_arg[2038496]:chpl_localeID_t[209294], in arg buf[2038498]:c_void_ptr[149], in arg buf_size[2038500]:int(64)[13], in arg c[2038502]:_class_localson_fn[2038430]) : void[4] "on block"
  {
    val _0_tmp[2038507]:chpl_localeID_t[209294] "temp"
    (2038512 'move' _0_tmp[2038507](2038509 '.v' c[2038502] _0_tmp[2038433]))
    ref _1_this[2038514]:channel(true,dynamic,false)[1060858] "temp"
    (2038519 'move' _1_this[2038514](2038516 '.v' c[2038502] _1_this[2038435]))
    val _2_x[2038522]:int(64)[13] "temp"
    (2038527 'move' _2_x[2038522](2038524 '.v' c[2038502] _2_x[2038437]))
    val _3_rvfDerefTmp[2038530]:locale[28] "temp"
    (2038535 'move' _3_rvfDerefTmp[2038530](2038532 '.v' c[2038502] _3_rvfDerefTmp[2038439]))
    ref _4_error[2038538]:Error[167938] "temp"
    (2038543 'move' _4_error[2038538](2038540 '.v' c[2038502] _4_error[2038441]))
    (2038505 call on_fn[1068779] _1_this[2038514] _2_x[2038522] _3_rvfDerefTmp[2038530] _4_error[2038538])
    (2038546 return _void[55])
  }
  function wrapon_fn[2038616](const in arg dummy_locale_arg[2038618]:chpl_localeID_t[209294], in arg buf[2038620]:c_void_ptr[149], in arg buf_size[2038622]:int(64)[13], in arg c[2038624]:_class_localson_fn[2038570]) : void[4] "on block"
  {
    val _0_tmp[2038629]:chpl_localeID_t[209294] "temp"
    (2038634 'move' _0_tmp[2038629](2038631 '.v' c[2038624] _0_tmp[2038573]))
    val _1_rvfDerefTmp[2038636]:channel(true,dynamic,false)[1060858] "temp"
    (2038641 'move' _1_rvfDerefTmp[2038636](2038638 '.v' c[2038624] _1_rvfDerefTmp[2038575]))
    ref _2_ret[2038644]:int(64)[13] "temp"
    (2038649 'move' _2_ret[2038644](2038646 '.v' c[2038624] _2_ret[2038577]))
    (2038627 call on_fn[1080116] _1_rvfDerefTmp[2038636] _2_ret[2038644])
    (2038652 return _void[55])
  }
  function wrapon_fn[2038776](const in arg dummy_locale_arg[2038778]:chpl_localeID_t[209294], in arg buf[2038780]:c_void_ptr[149], in arg buf_size[2038782]:int(64)[13], in arg c[2038784]:_class_localson_fn[2038682]) : void[4] "on block"
  {
    val _0_tmp[2038789]:chpl_localeID_t[209294] "temp"
    (2038794 'move' _0_tmp[2038789](2038791 '.v' c[2038784] _0_tmp[2038685]))
    ref _1_err[2038796]:syserr[223496] "temp"
    (2038801 'move' _1_err[2038796](2038798 '.v' c[2038784] _1_err[2038687]))
    val _2_hints[2038804]:int(32)[95] "temp"
    (2038809 'move' _2_hints[2038804](2038806 '.v' c[2038784] _2_hints[2038689]))
    val _3_start[2038812]:int(64)[13] "temp"
    (2038817 'move' _3_start[2038812](2038814 '.v' c[2038784] _3_start[2038691]))
    ref _4_ret[2038820]:channel(false,dynamic,false)[1080593] "temp"
    (2038825 'move' _4_ret[2038820](2038822 '.v' c[2038784] _4_ret[2038693]))
    val _5_end[2038828]:int(64)[13] "temp"
    (2038833 'move' _5_end[2038828](2038830 '.v' c[2038784] _5_end[2038695]))
    val _6_rvfDerefTmp[2038836]:iostyle[231756] "temp"
    (2038841 'move' _6_rvfDerefTmp[2038836](2038838 '.v' c[2038784] _6_rvfDerefTmp[2038697]))
    val _7_rvfDerefTmp[2038844]:file[235492] "temp"
    (2038849 'move' _7_rvfDerefTmp[2038844](2038846 '.v' c[2038784] _7_rvfDerefTmp[2038699]))
    ref _8_error[2038852]:Error[167938] "temp"
    (2038857 'move' _8_error[2038852](2038854 '.v' c[2038784] _8_error[2038701]))
    (2038787 call on_fn[1080668] _1_err[2038796] _2_hints[2038804] _3_start[2038812] _4_ret[2038820] _5_end[2038828] _6_rvfDerefTmp[2038836] _7_rvfDerefTmp[2038844] _8_error[2038852])
    (2038860 return _void[55])
  }
  function wrapon_fn[2038971](const in arg dummy_locale_arg[2038973]:chpl_localeID_t[209294], in arg buf[2038975]:c_void_ptr[149], in arg buf_size[2038977]:int(64)[13], in arg c[2038979]:_class_localson_fn[2038889]) : void[4] "on block"
  {
    val _0_tmp[2038984]:chpl_localeID_t[209294] "temp"
    (2038989 'move' _0_tmp[2038984](2038986 '.v' c[2038979] _0_tmp[2038892]))
    ref _1__formal_tmp_error[2038991]:syserr[223496] "temp"
    (2038996 'move' _1__formal_tmp_error[2038991](2038993 '.v' c[2038979] _1__formal_tmp_error[2038894]))
    ref _2_this[2038999]:channel(false,dynamic,false)[1080593] "temp"
    (2039004 'move' _2_this[2038999](2039001 '.v' c[2038979] _2_this[2038896]))
    val _3_hints[2039007]:int(32)[95] "temp"
    (2039012 'move' _3_hints[2039007](2039009 '.v' c[2038979] _3_hints[2038898]))
    val _4_rvfDerefTmp[2039015]:iostyle[231756] "temp"
    (2039020 'move' _4_rvfDerefTmp[2039015](2039017 '.v' c[2038979] _4_rvfDerefTmp[2038900]))
    val _5_end[2039023]:int(64)[13] "temp"
    (2039028 'move' _5_end[2039023](2039025 '.v' c[2038979] _5_end[2038902]))
    val _6_start[2039031]:int(64)[13] "temp"
    (2039036 'move' _6_start[2039031](2039033 '.v' c[2038979] _6_start[2038904]))
    val _7_rvfDerefTmp[2039039]:file[235492] "temp"
    (2039044 'move' _7_rvfDerefTmp[2039039](2039041 '.v' c[2038979] _7_rvfDerefTmp[2038906]))
    (2038982 call on_fn[1081117] _1__formal_tmp_error[2038991] _2_this[2038999] _3_hints[2039007] _4_rvfDerefTmp[2039015] _5_end[2039023] _6_start[2039031] _7_rvfDerefTmp[2039039])
    (2039047 return _void[55])
  }
  function wrapon_fn[2039104](const in arg dummy_locale_arg[2039106]:chpl_localeID_t[209294], in arg buf[2039108]:c_void_ptr[149], in arg buf_size[2039110]:int(64)[13], in arg c[2039112]:_class_localson_fn[2039070]) : void[4] "on block"
  {
    val _0_tmp[2039117]:chpl_localeID_t[209294] "temp"
    (2039122 'move' _0_tmp[2039117](2039119 '.v' c[2039112] _0_tmp[2039073]))
    val _1_rvfDerefTmp[2039124]:channel(false,dynamic,false)[1080593] "temp"
    (2039129 'move' _1_rvfDerefTmp[2039124](2039126 '.v' c[2039112] _1_rvfDerefTmp[2039075]))
    (2039115 call on_fn[1081729] _1_rvfDerefTmp[2039124])
    (2039132 return _void[55])
  }
  function wrapon_fn[2039195](const in arg dummy_locale_arg[2039197]:chpl_localeID_t[209294], in arg buf[2039199]:c_void_ptr[149], in arg buf_size[2039201]:int(64)[13], in arg c[2039203]:_class_localson_fn[2039155]) : void[4] "on block"
  {
    val _0_tmp[2039208]:chpl_localeID_t[209294] "temp"
    (2039213 'move' _0_tmp[2039208](2039210 '.v' c[2039203] _0_tmp[2039158]))
    ref _1_lhs[2039215]:channel(false,dynamic,false)[1080593] "temp"
    (2039220 'move' _1_lhs[2039215](2039217 '.v' c[2039203] _1_lhs[2039160]))
    (2039206 call on_fn[1081773] _1_lhs[2039215])
    (2039223 return _void[55])
  }
  function wrapon_fn[2039293](const in arg dummy_locale_arg[2039295]:chpl_localeID_t[209294], in arg buf[2039297]:c_void_ptr[149], in arg buf_size[2039299]:int(64)[13], in arg c[2039301]:_class_localson_fn[2039247]) : void[4] "on block"
  {
    val _0_tmp[2039306]:chpl_localeID_t[209294] "temp"
    (2039311 'move' _0_tmp[2039306](2039308 '.v' c[2039301] _0_tmp[2039250]))
    val _1_rvfDerefTmp[2039313]:channel(false,dynamic,false)[1080593] "temp"
    (2039318 'move' _1_rvfDerefTmp[2039313](2039315 '.v' c[2039301] _1_rvfDerefTmp[2039252]))
    ref _2_err[2039321]:syserr[223496] "temp"
    (2039326 'move' _2_err[2039321](2039323 '.v' c[2039301] _2_err[2039254]))
    (2039304 call on_fn[1082098] _1_rvfDerefTmp[2039313] _2_err[2039321])
    (2039329 return _void[55])
  }
  function wrapon_fn[2039425](const in arg dummy_locale_arg[2039427]:chpl_localeID_t[209294], in arg buf[2039429]:c_void_ptr[149], in arg buf_size[2039431]:int(64)[13], in arg c[2039433]:_class_localson_fn[2039355]) : void[4] "on block"
  {
    val _0_tmp[2039438]:chpl_localeID_t[209294] "temp"
    (2039443 'move' _0_tmp[2039438](2039440 '.v' c[2039433] _0_tmp[2039358]))
    val _1_rvfDerefTmp[2039445]:channel(false,dynamic,false)[1080593] "temp"
    (2039450 'move' _1_rvfDerefTmp[2039445](2039447 '.v' c[2039433] _1_rvfDerefTmp[2039360]))
    ref _2_path[2039453]:string[26] "temp"
    (2039458 'move' _2_path[2039453](2039455 '.v' c[2039433] _2_path[2039362]))
    ref _3_offset[2039461]:int(64)[13] "temp"
    (2039466 'move' _3_offset[2039461](2039463 '.v' c[2039433] _3_offset[2039364]))
    ref _4_error[2039469]:Error[167938] "temp"
    (2039474 'move' _4_error[2039469](2039471 '.v' c[2039433] _4_error[2039366]))
    (2039436 call on_fn[1082527] _1_rvfDerefTmp[2039445] _2_path[2039453] _3_offset[2039461] _4_error[2039469])
    (2039477 return _void[55])
  }
  function wrapon_fn[2039709](const in arg dummy_locale_arg[2039711]:chpl_localeID_t[209294], in arg buf[2039713]:c_void_ptr[149], in arg buf_size[2039715]:int(64)[13], in arg c[2039717]:_class_localson_fn[2039645]) : void[4] "on block"
  {
    val _0_tmp[2039722]:chpl_localeID_t[209294] "temp"
    (2039727 'move' _0_tmp[2039722](2039724 '.v' c[2039717] _0_tmp[2039648]))
    val _1_rvfDerefTmp[2039729]:channel(true,dynamic,false)[1060858] "temp"
    (2039734 'move' _1_rvfDerefTmp[2039729](2039731 '.v' c[2039717] _1_rvfDerefTmp[2039650]))
    ref _2_args[2039737]:(string,codepointIndex,string)[1158466] "temp"
    (2039742 'move' _2_args[2039737](2039739 '.v' c[2039717] _2_args[2039652]))
    val _3_rvfDerefTmp[2039745]:locale[28] "temp"
    (2039750 'move' _3_rvfDerefTmp[2039745](2039747 '.v' c[2039717] _3_rvfDerefTmp[2039654]))
    ref _4_error[2039753]:Error[167938] "temp"
    (2039758 'move' _4_error[2039753](2039755 '.v' c[2039717] _4_error[2039656]))
    (2039720 call on_fn[1164818] _1_rvfDerefTmp[2039729] _2_args[2039737] _3_rvfDerefTmp[2039745] _4_error[2039753])
    (2039761 return _void[55])
  }
  function wrapon_fn[2039851](const in arg dummy_locale_arg[2039853]:chpl_localeID_t[209294], in arg buf[2039855]:c_void_ptr[149], in arg buf_size[2039857]:int(64)[13], in arg c[2039859]:_class_localson_fn[2039787]) : void[4] "on block"
  {
    val _0_tmp[2039864]:chpl_localeID_t[209294] "temp"
    (2039869 'move' _0_tmp[2039864](2039866 '.v' c[2039859] _0_tmp[2039790]))
    val _1_rvfDerefTmp[2039871]:channel(true,dynamic,false)[1060858] "temp"
    (2039876 'move' _1_rvfDerefTmp[2039871](2039873 '.v' c[2039859] _1_rvfDerefTmp[2039792]))
    ref _2_args[2039879]:(string,codepointIndex,string,int(64))[1176431] "temp"
    (2039884 'move' _2_args[2039879](2039881 '.v' c[2039859] _2_args[2039794]))
    val _3_rvfDerefTmp[2039887]:locale[28] "temp"
    (2039892 'move' _3_rvfDerefTmp[2039887](2039889 '.v' c[2039859] _3_rvfDerefTmp[2039796]))
    ref _4_error[2039895]:Error[167938] "temp"
    (2039900 'move' _4_error[2039895](2039897 '.v' c[2039859] _4_error[2039798]))
    (2039862 call on_fn[1180297] _1_rvfDerefTmp[2039871] _2_args[2039879] _3_rvfDerefTmp[2039887] _4_error[2039895])
    (2039903 return _void[55])
  }
  function wrapon_fn[2044882](const in arg dummy_locale_arg[2044884]:chpl_localeID_t[209294], in arg buf[2044886]:c_void_ptr[149], in arg buf_size[2044888]:int(64)[13], in arg c[2044890]:_class_localson_fn[2044842]) : void[4] "on block"
  {
    val _0_tmp[2044895]:chpl_localeID_t[209294] "temp"
    (2044900 'move' _0_tmp[2044895](2044897 '.v' c[2044890] _0_tmp[2044845]))
    ref _1_this[2044902]:channel(false,dynamic,true)[985538] "temp"
    (2044907 'move' _1_this[2044902](2044904 '.v' c[2044890] _1_this[2044847]))
    (2044893 call on_fn[1504015] _1_this[2044902])
    (2044910 return _void[55])
  }
  function wrapon_fn[2046673](const in arg dummy_locale_arg[2046675]:chpl_localeID_t[209294], in arg buf[2046677]:c_void_ptr[149], in arg buf_size[2046679]:int(64)[13], in arg c[2046681]:_class_localson_fn[2046633]) : void[4] "on block"
  {
    val _0_tmp[2046686]:chpl_localeID_t[209294] "temp"
    (2046691 'move' _0_tmp[2046686](2046688 '.v' c[2046681] _0_tmp[2046636]))
    ref _1_this[2046693]:channel(true,dynamic,true)[1021736] "temp"
    (2046698 'move' _1_this[2046693](2046695 '.v' c[2046681] _1_this[2046638]))
    (2046684 call on_fn[1567021] _1_this[2046693])
    (2046701 return _void[55])
  }
  function wrapon_fn[2046849](const in arg dummy_locale_arg[2046851]:chpl_localeID_t[209294], in arg buf[2046853]:c_void_ptr[149], in arg buf_size[2046855]:int(64)[13], in arg c[2046857]:_class_localson_fn[2046809]) : void[4] "on block"
  {
    val _0_tmp[2046862]:chpl_localeID_t[209294] "temp"
    (2046867 'move' _0_tmp[2046862](2046864 '.v' c[2046857] _0_tmp[2046812]))
    ref _1_this[2046869]:channel(true,dynamic,false)[1060858] "temp"
    (2046874 'move' _1_this[2046869](2046871 '.v' c[2046857] _1_this[2046814]))
    (2046860 call on_fn[1569197] _1_this[2046869])
    (2046877 return _void[55])
  }
  function wrapon_fn[2047110](const in arg dummy_locale_arg[2047112]:chpl_localeID_t[209294], in arg buf[2047114]:c_void_ptr[149], in arg buf_size[2047116]:int(64)[13], in arg c[2047118]:_class_localson_fn[2047070]) : void[4] "on block"
  {
    val _0_tmp[2047123]:chpl_localeID_t[209294] "temp"
    (2047128 'move' _0_tmp[2047123](2047125 '.v' c[2047118] _0_tmp[2047073]))
    ref _1_this[2047130]:channel(false,dynamic,false)[1080593] "temp"
    (2047135 'move' _1_this[2047130](2047132 '.v' c[2047118] _1_this[2047075]))
    (2047121 call on_fn[1573451] _1_this[2047130])
    (2047138 return _void[55])
  }
}