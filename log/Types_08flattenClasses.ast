AST dump for Types after pass flattenClasses.
Module use list: ChapelStandard HaltWrappers 

{
  function isType[210647](arg t[210645]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210650 return 1)
  }
  function isType[210659](arg e[210657]:_any[178](?)) param : _unknown[51]
  {
    (210662 return 0)
  }
  function isParam[210671](arg t[210669]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210674 return 0)
  }
  function isParam[210683](param arg p[210681]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210686 return 1)
  }
  function isParam[210695](arg e[210693]:_any[178](?)) param : _unknown[51]
  {
    (210698 return 0)
  }
  function _isPrimitiveType[210707](arg t[210705]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210731 return(210729 call ||(210723 call ||(210717 call ||(210712 call isBoolType t[210705])(210716 call isIntegralType t[210705]))(210722 call isRealType t[210705]))(210727 call == t[210705] c_string[19])))
  }
  function isPrimitiveType[210740](arg t[210738]:_any[178](?)) param : _unknown[51]
  {
    (210776 return(210774 call ||(210768 call ||(210762 call ||(210756 call ||(210750 call ||(210745 call isNothingType t[210738])(210749 call isVoidType t[210738]))(210755 call isBoolType t[210738]))(210761 call isNumericType t[210738]))(210767 call isStringType t[210738]))(210773 call isBytesType t[210738])))
  }
  function isNumericType[210785](arg t[210783]:_any[178](?)) param : _unknown[51]
  {
    (210803 return(210801 call ||(210795 call ||(210790 call isIntegralType t[210783])(210794 call isFloatType t[210783]))(210800 call isComplexType t[210783])))
  }
  function isIntegralType[210812](arg t[210810]:_any[178](?)) param : _unknown[51]
  {
    (210824 return(210822 call ||(210817 call isIntType t[210810])(210821 call isUintType t[210810])))
  }
  function isFloatType[210833](arg t[210831]:_any[178](?)) param : _unknown[51]
  {
    (210845 return(210843 call ||(210838 call isRealType t[210831])(210842 call isImagType t[210831])))
  }
  function isNothingType[210854](arg t[210852]:_any[178](?)) param : _unknown[51]
  {
    (210860 return(210858 call == t[210852] nothing[7]))
  }
  function isVoidType[210869](arg t[210867]:_any[178](?)) param : _unknown[51]
  {
    (210875 return(210873 call == t[210867] void[4]))
  }
  function isBoolType[210884](arg t[210882]:_any[178](?)) param : _unknown[51]
  {
    (210926 return(210924 call ||(210915 call ||(210906 call ||(210897 call ||(210888 call == t[210882] bool[10])(210895 call == t[210882](210894 call bool[10] 8)))(210904 call == t[210882](210903 call bool[10] 16)))(210913 call == t[210882](210912 call bool[10] 32)))(210922 call == t[210882](210921 call bool[10] 64))))
  }
  function isIntType[210935](arg t[210933]:_any[178](?)) param : _unknown[51]
  {
    (210971 return(210969 call ||(210960 call ||(210951 call ||(210942 call == t[210933](210941 call int(64)[13] 8))(210949 call == t[210933](210948 call int(64)[13] 16)))(210958 call == t[210933](210957 call int(64)[13] 32)))(210967 call == t[210933](210966 call int(64)[13] 64))))
  }
  function isUintType[210980](arg t[210978]:_any[178](?)) param : _unknown[51]
  {
    (211016 return(211014 call ||(211005 call ||(210996 call ||(210987 call == t[210978](210986 call uint(64)[115] 8))(210994 call == t[210978](210993 call uint(64)[115] 16)))(211003 call == t[210978](211002 call uint(64)[115] 32)))(211012 call == t[210978](211011 call uint(64)[115] 64))))
  }
  function isEnumType[211025](arg t[211023]:_any[178](?)) param : _unknown[51]
  {
    function isEnumHelp[211033](arg t[211030] :
    enum[187](?)) param : _unknown[51]
    {
      (211036 return 1)
    }
    function isEnumHelp[211046](arg t[211044]:_any[178](?)) param : _unknown[51]
    {
      (211049 return 0)
    }
    (211058 return(211057 call isEnumHelp t[211023]))
  }
  function isAbstractEnumType[211066](arg t[211064]:_any[178](?)) param : _unknown[51]
  {
    (211088 return(211087 'is abstract enum type' t[211064]))
  }
  function isComplexType[211097](arg t[211095]:_any[178](?)) param : _unknown[51]
  {
    (211115 return(211113 call ||(211104 call == t[211095](211103 call complex(128)[140] 64))(211111 call == t[211095](211110 call complex(128)[140] 128))))
  }
  function isRealType[211124](arg t[211122]:_any[178](?)) param : _unknown[51]
  {
    (211142 return(211140 call ||(211131 call == t[211122](211130 call real(64)[16] 32))(211138 call == t[211122](211137 call real(64)[16] 64))))
  }
  function isImagType[211151](arg t[211149]:_any[178](?)) param : _unknown[51]
  {
    (211169 return(211167 call ||(211158 call == t[211149](211157 call imag(64)[130] 32))(211165 call == t[211149](211164 call imag(64)[130] 64))))
  }
  function isStringType[211178](arg t[211176]:_any[178](?)) param : _unknown[51]
  {
    (211184 return(211182 call == t[211176] string[26]))
  }
  function isBytesType[211193](arg t[211191]:_any[178](?)) param : _unknown[51]
  {
    (211199 return(211197 call == t[211191] bytes[24]))
  }
  function isPODType[211208](arg t[211206]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211230 return(211229 'is pod type' t[211206]))
  }
  function isCopyableType[211239](arg t[211237]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211261 return(211260 'is copyable type' t[211237]))
  }
  function isConstCopyableType[211270](arg t[211268]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211292 return(211291 'is const copyable type' t[211268]))
  }
  function isAssignableType[211301](arg t[211299]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211323 return(211322 'is assignable type' t[211299]))
  }
  function isConstAssignableType[211332](arg t[211330]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211354 return(211353 'is const assignable type' t[211330]))
  }
  function isDefaultInitializableType[211363](arg t[211361]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211385 return(211384 'type has default value' t[211361]))
  }
  function chpl__unsignedType[211394](arg t[211392]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211403 return(211402 call uint(64)[115](211400 call numBits t[211392])))
  }
  function chpl__signedType[211412](arg t[211410]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211421 return(211420 call int(64)[13](211418 call numBits t[211410])))
  }
  function chpl__maxIntTypeSameSign[211430](arg t[211428]:_any[178](?)) type : _unknown[51] "no doc"
  {
    if(211463 call _cond_test(211436 call !(211435 call isIntegralType t[211428])))
    {
      (211461 call compilerError "type t is non-integral: "(211459 call _cast string[26] t[211428]))
    }
    if(211485 call _cond_test(211472 call isIntType t[211428]))
    {
      (211477 return(211476 call int(64)[13] 64))
    }
    {
      (211483 return(211482 call uint(64)[115] 64))
    }
  }
  function isBoolValue[211497](arg e[211495]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211504 return(211503 call isBoolType(211501 'typeof' e[211495])))
  }
  function isIntValue[211513](arg e[211511]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211520 return(211519 call isIntType(211517 'typeof' e[211511])))
  }
  function isUintValue[211529](arg e[211527]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211536 return(211535 call isUintType(211533 'typeof' e[211527])))
  }
  function isRealValue[211545](arg e[211543]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211552 return(211551 call isRealType(211549 'typeof' e[211543])))
  }
  function isImagValue[211561](arg e[211559]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211568 return(211567 call isImagType(211565 'typeof' e[211559])))
  }
  function isComplexValue[211577](arg e[211575]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211584 return(211583 call isComplexType(211581 'typeof' e[211575])))
  }
  function isStringValue[211593](arg e[211591]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211600 return(211599 call isStringType(211597 'typeof' e[211591])))
  }
  function isBytesValue[211609](arg e[211607]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211616 return(211615 call isBytesType(211613 'typeof' e[211607])))
  }
  function isIntegralValue[211625](arg e[211623]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211632 return(211631 call isIntegralType(211629 'typeof' e[211623])))
  }
  function isFloatValue[211641](arg e[211639]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211648 return(211647 call isFloatType(211645 'typeof' e[211639])))
  }
  function isNumericValue[211657](arg e[211655]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211664 return(211663 call isNumericType(211661 'typeof' e[211655])))
  }
  function isPrimitiveValue[211673](arg e[211671]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211680 return(211679 call isPrimitiveType(211677 'typeof' e[211671])))
  }
  function isEnumValue[211689](arg e[211687]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211696 return(211695 call isEnumType(211693 'typeof' e[211687])))
  }
  function isClassValue[211705](arg e[211703]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211712 return(211711 call isClassType(211709 'typeof' e[211703])))
  }
  function isOwnedClassType[211723](arg t[211720] :
  _owned[30](?)) param : _unknown[51] "no doc"
  {
    (211726 return 1)
  }
  function isOwnedClassType[211735](arg t[211733]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211738 return 0)
  }
  function isSharedClassType[211749](arg t[211746] :
  _shared[32](?)) param : _unknown[51] "no doc"
  {
    (211752 return 1)
  }
  function isSharedClassType[211761](arg t[211759]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211764 return 0)
  }
  function isUnmanagedClassType[211775](arg t[211772] :
  unmanaged[220](?)) param : _unknown[51] "no doc"
  {
    (211778 return 1)
  }
  function isUnmanagedClassType[211787](arg t[211785]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211790 return 0)
  }
  function isBorrowedClassType[211801](arg t[211798] :
  borrowed[211](?)) param : _unknown[51] "no doc"
  {
    (211804 return 1)
  }
  function isBorrowedClassType[211813](arg t[211811]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211816 return 0)
  }
  function isOwnedClassValue[211825](arg e[211823]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211832 return(211831 call isOwnedClassType(211829 'typeof' e[211823])))
  }
  function isSharedClassValue[211841](arg e[211839]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211848 return(211847 call isSharedClassType(211845 'typeof' e[211839])))
  }
  function isUnmanagedClassValue[211857](arg e[211855]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211864 return(211863 call isUnmanagedClassType(211861 'typeof' e[211855])))
  }
  function isBorrowedClassValue[211873](arg e[211871]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211880 return(211879 call isBorrowedClassType(211877 'typeof' e[211871])))
  }
  function isNilableClassValue[211889](arg e[211887]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211896 return(211895 call isNilableClassType(211893 'typeof' e[211887])))
  }
  function isNonNilableClassValue[211905](arg e[211903]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211912 return(211911 call isNonNilableClassType(211909 'typeof' e[211903])))
  }
  function isRecordValue[211921](arg e[211919]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211928 return(211927 call isRecordType(211925 'typeof' e[211919])))
  }
  function isUnionValue[211937](arg e[211935]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211944 return(211943 call isUnionType(211941 'typeof' e[211935])))
  }
  function isAtomicValue[211953](arg e[211951]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211960 return(211959 call isAtomicType(211957 'typeof' e[211951])))
  }
  function isRefIterValue[211969](arg e[211967]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211976 return(211975 call isRefIterType(211973 'typeof' e[211967])))
  }
  function isPODValue[211985](arg e[211983]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211992 return(211991 call isPODType(211989 'typeof' e[211983])))
  }
  function isCopyableValue[212001](arg e[211999]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212008 return(212007 call isCopyableType(212005 'typeof' e[211999])))
  }
  function isConstCopyableValue[212017](arg e[212015]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212024 return(212023 call isConstCopyableType(212021 'typeof' e[212015])))
  }
  function isAssignableValue[212033](arg e[212031]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212040 return(212039 call isAssignableType(212037 'typeof' e[212031])))
  }
  function isConstAssignableValue[212049](arg e[212047]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212056 return(212055 call isConstAssignableType(212053 'typeof' e[212047])))
  }
  function isDefaultInitializableValue[212065](arg e[212063]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212072 return(212071 call isDefaultInitializableType(212069 'typeof' e[212063])))
  }
  function isBool[212081](arg t[212079]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212087 return(212086 call isBoolType t[212079]))
  }
  function isInt[212096](arg t[212094]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212102 return(212101 call isIntType t[212094]))
  }
  function isUint[212111](arg t[212109]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212117 return(212116 call isUintType t[212109]))
  }
  function isReal[212126](arg t[212124]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212132 return(212131 call isRealType t[212124]))
  }
  function isImag[212141](arg t[212139]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212147 return(212146 call isImagType t[212139]))
  }
  function isComplex[212156](arg t[212154]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212162 return(212161 call isComplexType t[212154]))
  }
  function isBytes[212171](arg t[212169]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212177 return(212176 call isBytesType t[212169]))
  }
  function isString[212186](arg t[212184]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212192 return(212191 call isStringType t[212184]))
  }
  function isIntegral[212201](arg t[212199]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212207 return(212206 call isIntegralType t[212199]))
  }
  function isFloat[212216](arg t[212214]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212222 return(212221 call isFloatType t[212214]))
  }
  function isNumeric[212231](arg t[212229]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212237 return(212236 call isNumericType t[212229]))
  }
  function isPrimitive[212246](arg t[212244]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212252 return(212251 call isPrimitiveType t[212244]))
  }
  function isEnum[212261](arg t[212259]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212267 return(212266 call isEnumType t[212259]))
  }
  function isTuple[212276](arg t[212274]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212282 return(212281 call isTupleType t[212274]))
  }
  function isHomogeneousTuple[212291](arg t[212289]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212297 return(212296 call isHomogeneousTupleType t[212289]))
  }
  function isGeneric[212306](arg t[212304]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212312 return(212311 call isGenericType t[212304]))
  }
  function isClass[212321](arg t[212319]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212327 return(212326 call isClassType t[212319]))
  }
  function isOwnedClass[212336](arg t[212334]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212342 return(212341 call isOwnedClassType t[212334]))
  }
  function isSharedClass[212351](arg t[212349]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212357 return(212356 call isSharedClassType t[212349]))
  }
  function isUnmanagedClass[212366](arg t[212364]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212372 return(212371 call isUnmanagedClassType t[212364]))
  }
  function isBorrowedClass[212381](arg t[212379]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212387 return(212386 call isBorrowedClassType t[212379]))
  }
  function isNilableClass[212396](arg t[212394]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212402 return(212401 call isNilableClassType t[212394]))
  }
  function isNonNilableClass[212411](arg t[212409]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212417 return(212416 call isNonNilableClassType t[212409]))
  }
  function isRecord[212426](arg t[212424]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212432 return(212431 call isRecordType t[212424]))
  }
  function isUnion[212441](arg t[212439]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212447 return(212446 call isUnionType t[212439]))
  }
  function isRange[212456](arg t[212454]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212462 return(212461 call isRangeType t[212454]))
  }
  function isDmap[212471](arg t[212469]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212477 return(212476 call isDmapType t[212469]))
  }
  function isDomain[212486](arg t[212484]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212492 return(212491 call isDomainType t[212484]))
  }
  function isArray[212501](arg t[212499]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212507 return(212506 call isArrayType t[212499]))
  }
  function isSync[212516](arg t[212514]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212522 return(212521 call isSyncType t[212514]))
  }
  function isSingle[212531](arg t[212529]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212537 return(212536 call isSingleType t[212529]))
  }
  function isAtomic[212546](arg t[212544]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212552 return(212551 call isAtomicType t[212544]))
  }
  function isRefIter[212561](arg t[212559]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212567 return(212566 call isRefIterType t[212559]))
  }
  function isPOD[212576](arg t[212574]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212582 return(212581 call isPODType t[212574]))
  }
  function isCopyable[212591](arg t[212589]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212597 return(212596 call isCopyableType t[212589]))
  }
  function isConstCopyable[212606](arg t[212604]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212612 return(212611 call isConstCopyableType t[212604]))
  }
  function isAssignable[212621](arg t[212619]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212627 return(212626 call isAssignableType t[212619]))
  }
  function isConstAssignable[212636](arg t[212634]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212642 return(212641 call isConstAssignableType t[212634]))
  }
  function isDefaultInitializable[212651](arg t[212649]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212657 return(212656 call isDefaultInitializableType t[212649]))
  }
  function isPrimitive[212666](arg e[212664]:_any[178](?)) param : _unknown[51]
  {
    (212672 return(212671 call isPrimitiveValue e[212664]))
  }
  function isNumeric[212681](arg e[212679]:_any[178](?)) param : _unknown[51]
  {
    (212687 return(212686 call isNumericValue e[212679]))
  }
  function isIntegral[212696](arg e[212694]:_any[178](?)) param : _unknown[51]
  {
    (212702 return(212701 call isIntegralValue e[212694]))
  }
  function isFloat[212711](arg e[212709]:_any[178](?)) param : _unknown[51]
  {
    (212717 return(212716 call isFloatValue e[212709]))
  }
  function isBool[212726](arg e[212724]:_any[178](?)) param : _unknown[51]
  {
    (212732 return(212731 call isBoolValue e[212724]))
  }
  function isInt[212741](arg e[212739]:_any[178](?)) param : _unknown[51]
  {
    (212747 return(212746 call isIntValue e[212739]))
  }
  function isUint[212756](arg e[212754]:_any[178](?)) param : _unknown[51]
  {
    (212762 return(212761 call isUintValue e[212754]))
  }
  function isReal[212771](arg e[212769]:_any[178](?)) param : _unknown[51]
  {
    (212777 return(212776 call isRealValue e[212769]))
  }
  function isImag[212786](arg e[212784]:_any[178](?)) param : _unknown[51]
  {
    (212792 return(212791 call isImagValue e[212784]))
  }
  function isComplex[212801](arg e[212799]:_any[178](?)) param : _unknown[51]
  {
    (212807 return(212806 call isComplexValue e[212799]))
  }
  function isBytes[212816](arg e[212814]:_any[178](?)) param : _unknown[51]
  {
    (212822 return(212821 call isBytesValue e[212814]))
  }
  function isString[212831](arg e[212829]:_any[178](?)) param : _unknown[51]
  {
    (212837 return(212836 call isStringValue e[212829]))
  }
  function isEnum[212846](arg e[212844]:_any[178](?)) param : _unknown[51]
  {
    (212852 return(212851 call isEnumValue e[212844]))
  }
  function isTuple[212861](arg e[212859]:_any[178](?)) param : _unknown[51]
  {
    (212867 return(212866 call isTupleValue e[212859]))
  }
  function isHomogeneousTuple[212878](arg e[212875] :
  _tuple[56199](?)) param : _unknown[51]
  {
    (212884 return(212883 call isHomogeneousTupleValue e[212875]))
  }
  function isClass[212893](arg e[212891]:_any[178](?)) param : _unknown[51]
  {
    (212899 return(212898 call isClassValue e[212891]))
  }
  function isGeneric[212908](arg e[212906]:_any[178](?)) param : _unknown[51]
  {
    (212911 return 0)
  }
  function isOwnedClass[212920](arg e[212918]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (212926 return(212925 call isOwnedClassValue e[212918]))
  }
  function isSharedClass[212935](arg e[212933]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (212941 return(212940 call isSharedClassValue e[212933]))
  }
  function isUnmanagedClass[212950](arg e[212948]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (212956 return(212955 call isUnmanagedClassValue e[212948]))
  }
  function isBorrowedClass[212965](arg e[212963]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (212971 return(212970 call isBorrowedClassValue e[212963]))
  }
  function isNilableClass[212980](arg e[212978]:_any[178](?)) param : _unknown[51]
  {
    (212986 return(212985 call isNilableClassValue e[212978]))
  }
  function isNonNilableClass[212995](arg e[212993]:_any[178](?)) param : _unknown[51]
  {
    (213001 return(213000 call isNonNilableClassValue e[212993]))
  }
  function isRecord[213010](arg e[213008]:_any[178](?)) param : _unknown[51]
  {
    (213016 return(213015 call isRecordValue e[213008]))
  }
  function isUnion[213025](arg e[213023]:_any[178](?)) param : _unknown[51]
  {
    (213031 return(213030 call isUnionValue e[213023]))
  }
  function isRange[213040](arg e[213038]:_any[178](?)) param : _unknown[51]
  {
    (213046 return(213045 call isRangeValue e[213038]))
  }
  function isDmap[213055](arg e[213053]:_any[178](?)) param : _unknown[51]
  {
    (213061 return(213060 call isDmapValue e[213053]))
  }
  function isDomain[213070](arg e[213068]:_any[178](?)) param : _unknown[51]
  {
    (213076 return(213075 call isDomainValue e[213068]))
  }
  function isArray[213085](arg e[213083]:_any[178](?)) param : _unknown[51]
  {
    (213091 return(213090 call isArrayValue e[213083]))
  }
  function isSync[213102](arg e[213099] :
  _syncvar[84944](?)) param : _unknown[51] "no doc"
  {
    (213105 return 1)
  }
  function isSync[213114](arg e[213112]:_any[178](?)) param : _unknown[51]
  {
    (213117 return 0)
  }
  function isSingle[213128](arg e[213125] :
  _singlevar[87253](?)) param : _unknown[51] "no doc"
  {
    (213131 return 1)
  }
  function isSingle[213140](arg e[213138]:_any[178](?)) param : _unknown[51]
  {
    (213143 return 0)
  }
  function isAtomic[213152](arg e[213150]:_any[178](?)) param : _unknown[51]
  {
    (213158 return(213157 call isAtomicValue e[213150]))
  }
  function isRefIter[213167](arg e[213165]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213173 return(213172 call isRefIterValue e[213165]))
  }
  function isPOD[213182](arg e[213180]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213188 return(213187 call isPODValue e[213180]))
  }
  function isCopyable[213197](arg e[213195]:_any[178](?)) param : _unknown[51]
  {
    (213203 return(213202 call isCopyableValue e[213195]))
  }
  function isConstCopyable[213212](arg e[213210]:_any[178](?)) param : _unknown[51]
  {
    (213218 return(213217 call isConstCopyableValue e[213210]))
  }
  function isAssignable[213227](arg e[213225]:_any[178](?)) param : _unknown[51]
  {
    (213233 return(213232 call isCopyableValue e[213225]))
  }
  function isConstAssignable[213242](arg e[213240]:_any[178](?)) param : _unknown[51]
  {
    (213248 return(213247 call isConstAssignableValue e[213240]))
  }
  function isDefaultInitializable[213257](arg e[213255]:_any[178](?)) param : _unknown[51]
  {
    (213263 return(213262 call isDefaultInitializableValue e[213255]))
  }
  function chpl_isSyncSingleAtomic[213272](arg e[213270]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213275 return 0)
  }
  function chpl_isSyncSingleAtomic[213286](arg e[213283] :
  _syncvar[84944](?)) param : _unknown[51] "no doc"
  {
    (213289 return 1)
  }
  function chpl_isSyncSingleAtomic[213300](arg e[213297] :
  _singlevar[87253](?)) param : _unknown[51] "no doc"
  {
    (213303 return 1)
  }
  function chpl_isSyncSingleAtomic[213312](arg e[213310]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213320 return 1)
  }
  where {
    (213318 call isAtomicType(213316 'typeof' e[213310]))
  }
  function chpl__legalIntCoerce[213330](arg t1[213328]:_any[178](?), arg t2[213332]:_any[178](?)) param : _unknown[51] "no doc"
  {
    if(213399 call _cond_test(213337 call isIntType t2[213332]))
    {
      if(213368 call _cond_test(213341 call isIntType t1[213328]))
      {
        (213352 return(213350 call <=(213345 call numBits t1[213328])(213349 call numBits t2[213332])))
      }
      {
        (213365 return(213363 call <(213358 call numBits t1[213328])(213362 call numBits t2[213332])))
      }
    }
    {
      if(213394 call _cond_test(213376 call isIntType t1[213328]))
      {
        (213378 return 0)
      }
      {
        (213391 return(213389 call <=(213384 call numBits t1[213328])(213388 call numBits t2[213332])))
      }
    }
  }
  function chpl__commonType[213410](arg s[213408]:_any[178](?), arg t[213412]:_any[178](?)) type : _unknown[51] "private"
  {
    if(213462 call _cond_test(213418 call !(213417 call isIntegralType s[213408])))
    {
      (213460 call compilerError "Type "(213441 call _cast string[26] s[213408]) " is non-integral: ")
    }
    if(213484 call _cond_test(213472 call !(213471 call isIntegralType t[213412])))
    {
      (213482 call compilerError "Type "(213479 call _cast string[26] t[213412]) " is non-integral: ")
    }
    if(213502 call _cond_test(213497 call >(213492 call numBits s[213408])(213496 call numBits t[213412])))
    {
      (213500 return s[213408])
    }
    if(213520 call _cond_test(213515 call <(213510 call numBits s[213408])(213514 call numBits t[213412])))
    {
      (213518 return t[213412])
    }
    if(213614 call _cond_test(213549 call ||(213535 call &&(213528 call isIntType s[213408])(213533 call !(213532 call isIntType t[213412])))(213547 call &&(213540 call isIntType t[213412])(213545 call !(213544 call isIntType s[213408])))))
    {
      (213612 call compilerError "Types "(213572 call _cast string[26] s[213408]) " and "(213593 call _cast string[26] t[213412]) " are incompatible.")
    }
    (213620 return s[213408])
  }
  function toNilableIfClassType[213628](arg arg[213626]:_any[178](?)) type : _unknown[51]
  {
    if(213641 call _cond_test(213633 call isNonNilableClassType arg[213626]))
    {
      (213636 return(213635 'to nilable class from type' arg[213626]))
    }
    {
      (213639 return arg[213626])
    }
  }
  function numBits[213654](arg t[213652]:_any[178](?)) param : _unknown[51] "no return value for void"
  {
    (213679 call compilerError "default-width 'bool' does not have a well-defined size")
  }
  where {
    (213658 call == t[213652] bool[10])
  }
  function numBits[213689](arg t[213687]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213699 return 8)
  }
  where {
    (213696 call == t[213687](213695 call bool[10] 8))
  }
  function numBits[213709](arg t[213707]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213719 return 16)
  }
  where {
    (213716 call == t[213707](213715 call bool[10] 16))
  }
  function numBits[213729](arg t[213727]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213739 return 32)
  }
  where {
    (213736 call == t[213727](213735 call bool[10] 32))
  }
  function numBits[213749](arg t[213747]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213759 return 64)
  }
  where {
    (213756 call == t[213747](213755 call bool[10] 64))
  }
  function numBits[213769](arg t[213767]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213779 return 8)
  }
  where {
    (213776 call == t[213767](213775 call int(64)[13] 8))
  }
  function numBits[213789](arg t[213787]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213799 return 16)
  }
  where {
    (213796 call == t[213787](213795 call int(64)[13] 16))
  }
  function numBits[213809](arg t[213807]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213819 return 32)
  }
  where {
    (213816 call == t[213807](213815 call int(64)[13] 32))
  }
  function numBits[213829](arg t[213827]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213839 return 64)
  }
  where {
    (213836 call == t[213827](213835 call int(64)[13] 64))
  }
  function numBits[213849](arg t[213847]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213859 return 8)
  }
  where {
    (213856 call == t[213847](213855 call uint(64)[115] 8))
  }
  function numBits[213869](arg t[213867]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213879 return 16)
  }
  where {
    (213876 call == t[213867](213875 call uint(64)[115] 16))
  }
  function numBits[213889](arg t[213887]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213899 return 32)
  }
  where {
    (213896 call == t[213887](213895 call uint(64)[115] 32))
  }
  function numBits[213909](arg t[213907]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213919 return 64)
  }
  where {
    (213916 call == t[213907](213915 call uint(64)[115] 64))
  }
  function numBits[213929](arg t[213927]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213939 return 32)
  }
  where {
    (213936 call == t[213927](213935 call real(64)[16] 32))
  }
  function numBits[213949](arg t[213947]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213959 return 64)
  }
  where {
    (213956 call == t[213947](213955 call real(64)[16] 64))
  }
  function numBits[213969](arg t[213967]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213979 return 32)
  }
  where {
    (213976 call == t[213967](213975 call imag(64)[130] 32))
  }
  function numBits[213989](arg t[213987]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213999 return 64)
  }
  where {
    (213996 call == t[213987](213995 call imag(64)[130] 64))
  }
  function numBits[214009](arg t[214007]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214019 return 64)
  }
  where {
    (214016 call == t[214007](214015 call complex(128)[140] 64))
  }
  function numBits[214029](arg t[214027]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214039 return 128)
  }
  where {
    (214036 call == t[214027](214035 call complex(128)[140] 128))
  }
  unknown bitsPerByte[214046] "no doc" "param" 8
  (214049 'end of statement')
  function numBytes[214054](arg t[214052]:_any[178](?)) param : _unknown[51]
  {
    (214063 return(214061 call /(214059 call numBits t[214052]) 8))
  }
  function min[214072](arg t[214070]:_any[178](?)) param : _unknown[51]
  {
    (214082 return(214080 call _cast t[214070] 0))
  }
  where {
    (214077 call isBool t[214070])
  }
  function min[214092](arg t[214090]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214105 return(214103 call _cast t[214090] 128))
  }
  where {
    (214099 call == t[214090](214098 call int(64)[13] 8))
  }
  function min[214115](arg t[214113]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214130 return(214128 call _cast t[214113] 32768))
  }
  where {
    (214122 call == t[214113](214121 call int(64)[13] 16))
  }
  function min[214140](arg t[214138]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214155 return(214153 call _cast t[214138] 2147483648))
  }
  where {
    (214147 call == t[214138](214146 call int(64)[13] 32))
  }
  function min[214165](arg t[214163]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214180 return(214178 call _cast t[214163] 9223372036854775808))
  }
  where {
    (214172 call == t[214163](214171 call int(64)[13] 64))
  }
  function min[214190](arg t[214188]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214200 return(214198 call _cast t[214188] 0))
  }
  where {
    (214195 call isUint t[214188])
  }
  function min[214210](arg t[214208]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214236 return(214235 '_min' t[214208]))
  }
  where {
    (214215 call isFloatType t[214208])
  }
  function min[214246](arg t[214244]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214259] "param"(214257 call /(214255 call numBits t[214244]) 2)
    (214262 'end of statement')
    (214284 return(214282 call _cast t[214244](214279 call _build_tuple(214270 call min(214268 call real(64)[16] floatwidth[214259]))(214277 call min(214275 call real(64)[16] floatwidth[214259])))))
  }
  where {
    (214251 call isComplexType t[214244])
  }
  function max[214293](arg t[214291]:_any[178](?)) param : _unknown[51]
  {
    (214303 return(214301 call _cast t[214291] 1))
  }
  where {
    (214298 call isBool t[214291])
  }
  function max[214313](arg t[214311]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214326 return(214324 call _cast t[214311] 127))
  }
  where {
    (214320 call == t[214311](214319 call int(64)[13] 8))
  }
  function max[214336](arg t[214334]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214351 return(214349 call _cast t[214334] 32767))
  }
  where {
    (214343 call == t[214334](214342 call int(64)[13] 16))
  }
  function max[214361](arg t[214359]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214376 return(214374 call _cast t[214359] 2147483647))
  }
  where {
    (214368 call == t[214359](214367 call int(64)[13] 32))
  }
  function max[214386](arg t[214384]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214401 return(214399 call _cast t[214384] 9223372036854775807))
  }
  where {
    (214393 call == t[214384](214392 call int(64)[13] 64))
  }
  function max[214411](arg t[214409]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214426 return(214424 call _cast t[214409] 255))
  }
  where {
    (214418 call == t[214409](214417 call uint(64)[115] 8))
  }
  function max[214436](arg t[214434]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214451 return(214449 call _cast t[214434] 65535))
  }
  where {
    (214443 call == t[214434](214442 call uint(64)[115] 16))
  }
  function max[214461](arg t[214459]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214476 return(214474 call _cast t[214459] 4294967295))
  }
  where {
    (214468 call == t[214459](214467 call uint(64)[115] 32))
  }
  function max[214486](arg t[214484]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214501 return(214499 call _cast t[214484] 18446744073709551615))
  }
  where {
    (214493 call == t[214484](214492 call uint(64)[115] 64))
  }
  function max[214511](arg t[214509]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214537 return(214536 '_max' t[214509]))
  }
  where {
    (214516 call isFloatType t[214509])
  }
  function max[214547](arg t[214545]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214560] "param"(214558 call /(214556 call numBits t[214545]) 2)
    (214563 'end of statement')
    (214585 return(214583 call _cast t[214545](214580 call _build_tuple(214571 call max(214569 call real(64)[16] floatwidth[214560]))(214578 call max(214576 call real(64)[16] floatwidth[214560])))))
  }
  where {
    (214552 call isComplexType t[214545])
  }
  function chpl_enumerate[214596](arg t[214593] :
  enum[187](?)) : _unknown[51] "iterator fn" "no doc" "no return value for void"
  {
    const enumTuple[214602] "const"(214601 call chpl_enum_enumerate t[214593])
    (214605 'end of statement')
    {
      unknown _indexOfInterest[214624] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214625] "expr temp" "temp"
      (214634 'move' _iterator[214625](214632 call _getIterator(214645 call chpl_direct_range_iter 0(214639 call -(214641 call . enumTuple[214602] c"size") 1) 1)))
      Defer
      {
        {
          (214661 call _freeIterator _iterator[214625])
        }
      }
      { scopeless type
        (214650 'move' _indexOfInterest[214624](214647 call iteratorIndex _iterator[214625]))
      }
      ForLoop[214626]
      {
        unknown i[214654] "index var" "insert auto destroy"
        (214656 'move' i[214654] _indexOfInterest[214624])
        (214622 yield(214621 call enumTuple[214602] i[214654]))
        label _continueLabel[214629]
        _indexOfInterest[214624]
        _iterator[214625]
      }
      label _breakLabel[214630]
    }
  }
  function enum[187](?).these[214673](arg _mt[214678]:_MT[238], arg this[214675]:enum[187](?) :
  enum[187](?)) : _unknown[51] "iterator fn" "method" "no doc" "no return value for void"
  {
    {
      unknown _indexOfInterest[214688] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214689] "expr temp" "temp"
      (214698 'move' _iterator[214689](214696 call _getIterator(214684 call chpl_enumerate this[214675])))
      Defer
      {
        {
          (214715 call _freeIterator _iterator[214689])
        }
      }
      { scopeless type
        (214704 'move' _indexOfInterest[214688](214701 call iteratorIndex _iterator[214689]))
      }
      ForLoop[214690]
      {
        unknown i[214708] "index var" "insert auto destroy"
        (214710 'move' i[214708] _indexOfInterest[214688])
        (214686 yield i[214708])
        label _continueLabel[214693]
        _indexOfInterest[214688]
        _iterator[214689]
      }
      label _breakLabel[214694]
    }
  }
  function enum[187](?).first[214728](arg _mt[214733]:_MT[238], arg this[214730]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214740 return(214739 call chpl__orderToEnum 0 this[214730]))
  }
  function enum[187](?).last[214748](arg _mt[214753]:_MT[238], arg this[214750]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214766 return(214765 call chpl__orderToEnum(214761 call -(214757 call . this[214750] c"size") 1) this[214750]))
  }
  function chpl_enum_minbits[214777](arg t[214774] :
  enum[187](?)) param : _unknown[51] "private"
  {
    if(214795 call _cond_test(214790 call <=(214780 call . t[214774] c"size")(214789 call max(214787 call uint(64)[115] 8))))
    {
      (214793 return 8)
    }
    if(214817 call _cond_test(214812 call <=(214802 call . t[214774] c"size")(214811 call max(214809 call uint(64)[115] 16))))
    {
      (214815 return 16)
    }
    if(214838 call _cond_test(214833 call <=(214823 call . t[214774] c"size")(214832 call max(214830 call uint(64)[115] 32))))
    {
      (214836 return 32)
    }
    (214844 return 64)
  }
  function chpl_enum_mintype[214854](arg t[214851] :
  enum[187](?)) type : _unknown[51] "no doc"
  {
    (214863 return(214862 call uint(64)[115](214860 call chpl_enum_minbits t[214851])))
  }
  function integral[199](?).safeCast[214875](arg _mt[214880]:_MT[238], arg this[214877]:integral[199](?) :
  integral[199](?), arg T[214872] :
  integral[199](?)) : _unknown[51] "inline" "method"
  {
    if(215055 call _cond_test(214888 call && 1(214887 call isUintType T[214872])))
    {
      if(214961 call _cond_test(214894 call isIntType(214892 'typeof' this[214877])))
      {
        if(214955 call _cond_test(214897 call < this[214877] 0))
        {
          (214953 call safeCastCheckHalt module=[255] HaltWrappers[209910](214950 call +(214944 call +(214925 call + "casting "(214923 call _cast string[26](214921 'typeof' this[214877]))) " less than 0 to ")(214948 call _cast string[26] T[214872])))
          (362962 'referenced modules list' HaltWrappers[209910])
        }
      }
      if(215051 call _cond_test(214981 call >(214972 call _cast uint(64)[115](214970 call max(214968 'typeof' this[214877])))(214979 call _cast uint(64)[115](214977 call max T[214872]))))
      {
        if(215045 call _cond_test(214994 call >(214985 call _cast uint(64)[115] this[214877])(214992 call _cast uint(64)[115](214990 call max T[214872]))))
        {
          (215043 call safeCastCheckHalt module=[255] HaltWrappers[209910](215040 call +(215034 call +(215031 call +(215025 call +(215006 call + "casting "(215004 call _cast string[26](215002 'typeof' this[214877]))) " with a value greater than the maximum of ")(215029 call _cast string[26] T[214872])) " to ")(215038 call _cast string[26] T[214872])))
          (362968 'referenced modules list' HaltWrappers[209910])
        }
      }
    }
    if(215302 call _cond_test(215065 call && 1(215064 call isIntType T[214872])))
    {
      if(215198 call _cond_test(215082 call >(215073 call _cast uint(64)[115](215071 call max(215069 'typeof' this[214877])))(215080 call _cast uint(64)[115](215078 call max T[214872]))))
      {
        if(215193 call _cond_test(215088 call isUintType(215086 'typeof' this[214877])))
        {
          if(215135 call _cond_test(215100 call >(215091 call _cast uint(64)[115] this[214877])(215098 call _cast uint(64)[115](215096 call max T[214872]))))
          {
            (215133 call safeCastCheckHalt module=[255] HaltWrappers[209910](215130 call +(215124 call +(215121 call +(215115 call +(215112 call + "casting "(215110 call _cast string[26](215108 'typeof' this[214877]))) " with a value greater than the maximum of ")(215119 call _cast string[26] T[214872])) " to ")(215128 call _cast string[26] T[214872])))
            (362974 'referenced modules list' HaltWrappers[209910])
          }
        }
        {
          if(215187 call _cond_test(215152 call >(215143 call _cast int(64)[13] this[214877])(215150 call _cast int(64)[13](215148 call max T[214872]))))
          {
            (215185 call safeCastCheckHalt module=[255] HaltWrappers[209910](215182 call +(215176 call +(215173 call +(215167 call +(215164 call + "casting "(215162 call _cast string[26](215160 'typeof' this[214877]))) " with a value greater than the maximum of ")(215171 call _cast string[26] T[214872])) " to ")(215180 call _cast string[26] T[214872])))
            (362980 'referenced modules list' HaltWrappers[209910])
          }
        }
      }
      if(215298 call _cond_test(215207 call isIntType(215205 'typeof' this[214877])))
      {
        if(215293 call _cond_test(215223 call <(215214 call _cast int(64)[13](215212 call min(215210 'typeof' this[214877])))(215221 call _cast int(64)[13](215219 call min T[214872]))))
        {
          if(215287 call _cond_test(215236 call <(215227 call _cast int(64)[13] this[214877])(215234 call _cast int(64)[13](215232 call min T[214872]))))
          {
            (215285 call safeCastCheckHalt module=[255] HaltWrappers[209910](215282 call +(215276 call +(215273 call +(215267 call +(215248 call + "casting "(215246 call _cast string[26](215244 'typeof' this[214877]))) " with a value less than the minimum of ")(215271 call _cast string[26] T[214872])) " to ")(215280 call _cast string[26] T[214872])))
            (362986 'referenced modules list' HaltWrappers[209910])
          }
        }
      }
    }
    (215310 return(215308 call _cast T[214872] this[214877]))
  }
  { scopeless type
    T[214872]
  }
  function integral[199](?).safeCast[215320](arg _mt[215325]:_MT[238], arg this[215322]:integral[199](?) :
  integral[199](?), arg T[215318]:_any[178](?)) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (215346 call compilerError "safeCast is only supported between integral types")
  }
  function _prod_id[215355](arg t[215353]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215361 return(215359 call _cast t[215353] 1))
  }
  function _land_id[215370](arg t[215368]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215373 return 1)
  }
  function _lor_id[215382](arg t[215380]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215385 return 0)
  }
  function _lxor_id[215394](arg t[215392]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215397 return 0)
  }
  function _band_id[215406](arg t[215404]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    if(215727 call _cond_test(215411 call isBoolType t[215404]))
    {
      (215416 return(215414 call _cast t[215404] 1))
    }
    {
      if(215721 call _cond_test(215421 call isIntType t[215404]))
      {
        (215428 return(215426 call -(215424 call _cast t[215404] 1)))
      }
      {
        if(215715 call _cond_test(215433 call isUintType t[215404]))
        {
          (215438 return(215437 call max t[215404]))
        }
        {
          if(215709 call _cond_test(215445 call == t[215404](215444 call real(64)[16] 32)))
          {
            (215457 return(215455 call _cast t[215404](215453 call max(215451 call uint(64)[115] 32))))
          }
          {
            if(215703 call _cond_test(215464 call == t[215404](215463 call real(64)[16] 64)))
            {
              (215476 return(215474 call _cast t[215404](215472 call max(215470 call uint(64)[115] 64))))
            }
            {
              if(215697 call _cond_test(215483 call == t[215404](215482 call imag(64)[130] 32)))
              {
                (215495 return(215493 call _cast t[215404](215491 call max(215489 call uint(64)[115] 32))))
              }
              {
                if(215691 call _cond_test(215502 call == t[215404](215501 call imag(64)[130] 64)))
                {
                  (215514 return(215512 call _cast t[215404](215510 call max(215508 call uint(64)[115] 64))))
                }
                {
                  if(215685 call _cond_test(215521 call == t[215404](215520 call complex(128)[140] 64)))
                  {
                    (215555 return(215553 call _cast t[215404](215550 call _build_tuple(215534 call _cast(215533 call real(64)[16] 32)(215529 call max(215527 call uint(64)[115] 32)))(215547 call _cast(215546 call real(64)[16] 32)(215542 call max(215540 call uint(64)[115] 32))))))
                  }
                  {
                    if(215679 call _cond_test(215562 call == t[215404](215561 call complex(128)[140] 128)))
                    {
                      (215596 return(215594 call _cast t[215404](215591 call _build_tuple(215575 call _cast(215574 call real(64)[16] 64)(215570 call max(215568 call uint(64)[115] 64)))(215588 call _cast(215587 call real(64)[16] 64)(215583 call max(215581 call uint(64)[115] 64))))))
                    }
                    {
                      if(215674 call _cond_test(215601 call isArrayType t[215404]))
                      {
                        unknown result[215603] t[215404]
                        (215606 'end of statement')
                        unknown elT[215612] "type variable"(215609 call . result[215603] c"eltType")
                        Forall {
                          induction variables:
                            
                            unknown elm[215626] "index var" "insert auto destroy"
                          iterated expressions:
                            result[215603]
                          shadow variables:
                          other variables
                            forall body
                          {
                            (215622 call = elm[215626](215621 call _band_id elT[215612]))
                          }
                        }
                        (215630 return result[215603])
                      }
                      {
                        (215672 call compilerError "Identity value for & over "(215653 call _cast string[26] t[215404]) "is not available")
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _bor_id[215740](arg t[215738]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215746 return(215744 call _cast t[215738] 0))
  }
  function _bxor_id[215755](arg t[215753]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215761 return(215759 call _cast t[215753] 0))
  }
  (355195 'used modules list'(352910 'use' ChapelStandard[20264])(210640 'import' HaltWrappers[209910]))
}