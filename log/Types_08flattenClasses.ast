AST dump for Types after pass flattenClasses.
Module use list: ChapelStandard HaltWrappers 

{
  function isType[210735](arg t[210733]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210738 return 1)
  }
  function isType[210747](arg e[210745]:_any[178](?)) param : _unknown[51]
  {
    (210750 return 0)
  }
  function isParam[210759](arg t[210757]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210762 return 0)
  }
  function isParam[210771](param arg p[210769]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210774 return 1)
  }
  function isParam[210783](arg e[210781]:_any[178](?)) param : _unknown[51]
  {
    (210786 return 0)
  }
  function _isPrimitiveType[210795](arg t[210793]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210819 return(210817 call ||(210811 call ||(210805 call ||(210800 call isBoolType t[210793])(210804 call isIntegralType t[210793]))(210810 call isRealType t[210793]))(210815 call == t[210793] c_string[19])))
  }
  function isPrimitiveType[210828](arg t[210826]:_any[178](?)) param : _unknown[51]
  {
    (210864 return(210862 call ||(210856 call ||(210850 call ||(210844 call ||(210838 call ||(210833 call isNothingType t[210826])(210837 call isVoidType t[210826]))(210843 call isBoolType t[210826]))(210849 call isNumericType t[210826]))(210855 call isStringType t[210826]))(210861 call isBytesType t[210826])))
  }
  function isNumericType[210873](arg t[210871]:_any[178](?)) param : _unknown[51]
  {
    (210891 return(210889 call ||(210883 call ||(210878 call isIntegralType t[210871])(210882 call isFloatType t[210871]))(210888 call isComplexType t[210871])))
  }
  function isIntegralType[210900](arg t[210898]:_any[178](?)) param : _unknown[51]
  {
    (210912 return(210910 call ||(210905 call isIntType t[210898])(210909 call isUintType t[210898])))
  }
  function isFloatType[210921](arg t[210919]:_any[178](?)) param : _unknown[51]
  {
    (210933 return(210931 call ||(210926 call isRealType t[210919])(210930 call isImagType t[210919])))
  }
  function isNothingType[210942](arg t[210940]:_any[178](?)) param : _unknown[51]
  {
    (210948 return(210946 call == t[210940] nothing[7]))
  }
  function isVoidType[210957](arg t[210955]:_any[178](?)) param : _unknown[51]
  {
    (210963 return(210961 call == t[210955] void[4]))
  }
  function isBoolType[210972](arg t[210970]:_any[178](?)) param : _unknown[51]
  {
    (211014 return(211012 call ||(211003 call ||(210994 call ||(210985 call ||(210976 call == t[210970] bool[10])(210983 call == t[210970](210982 call bool[10] 8)))(210992 call == t[210970](210991 call bool[10] 16)))(211001 call == t[210970](211000 call bool[10] 32)))(211010 call == t[210970](211009 call bool[10] 64))))
  }
  function isIntType[211023](arg t[211021]:_any[178](?)) param : _unknown[51]
  {
    (211059 return(211057 call ||(211048 call ||(211039 call ||(211030 call == t[211021](211029 call int(64)[13] 8))(211037 call == t[211021](211036 call int(64)[13] 16)))(211046 call == t[211021](211045 call int(64)[13] 32)))(211055 call == t[211021](211054 call int(64)[13] 64))))
  }
  function isUintType[211068](arg t[211066]:_any[178](?)) param : _unknown[51]
  {
    (211104 return(211102 call ||(211093 call ||(211084 call ||(211075 call == t[211066](211074 call uint(64)[115] 8))(211082 call == t[211066](211081 call uint(64)[115] 16)))(211091 call == t[211066](211090 call uint(64)[115] 32)))(211100 call == t[211066](211099 call uint(64)[115] 64))))
  }
  function isEnumType[211113](arg t[211111]:_any[178](?)) param : _unknown[51]
  {
    function isEnumHelp[211121](arg t[211118] :
    enum[187](?)) param : _unknown[51]
    {
      (211124 return 1)
    }
    function isEnumHelp[211134](arg t[211132]:_any[178](?)) param : _unknown[51]
    {
      (211137 return 0)
    }
    (211146 return(211145 call isEnumHelp t[211111]))
  }
  function isAbstractEnumType[211154](arg t[211152]:_any[178](?)) param : _unknown[51]
  {
    (211176 return(211175 'is abstract enum type' t[211152]))
  }
  function isComplexType[211185](arg t[211183]:_any[178](?)) param : _unknown[51]
  {
    (211203 return(211201 call ||(211192 call == t[211183](211191 call complex(128)[140] 64))(211199 call == t[211183](211198 call complex(128)[140] 128))))
  }
  function isRealType[211212](arg t[211210]:_any[178](?)) param : _unknown[51]
  {
    (211230 return(211228 call ||(211219 call == t[211210](211218 call real(64)[16] 32))(211226 call == t[211210](211225 call real(64)[16] 64))))
  }
  function isImagType[211239](arg t[211237]:_any[178](?)) param : _unknown[51]
  {
    (211257 return(211255 call ||(211246 call == t[211237](211245 call imag(64)[130] 32))(211253 call == t[211237](211252 call imag(64)[130] 64))))
  }
  function isStringType[211266](arg t[211264]:_any[178](?)) param : _unknown[51]
  {
    (211272 return(211270 call == t[211264] string[26]))
  }
  function isBytesType[211281](arg t[211279]:_any[178](?)) param : _unknown[51]
  {
    (211287 return(211285 call == t[211279] bytes[24]))
  }
  function isPODType[211296](arg t[211294]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211318 return(211317 'is pod type' t[211294]))
  }
  function isCopyableType[211327](arg t[211325]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211349 return(211348 'is copyable type' t[211325]))
  }
  function isConstCopyableType[211358](arg t[211356]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211380 return(211379 'is const copyable type' t[211356]))
  }
  function isAssignableType[211389](arg t[211387]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211411 return(211410 'is assignable type' t[211387]))
  }
  function isConstAssignableType[211420](arg t[211418]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211442 return(211441 'is const assignable type' t[211418]))
  }
  function isDefaultInitializableType[211451](arg t[211449]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211473 return(211472 'type has default value' t[211449]))
  }
  function chpl__unsignedType[211482](arg t[211480]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211491 return(211490 call uint(64)[115](211488 call numBits t[211480])))
  }
  function chpl__signedType[211500](arg t[211498]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211509 return(211508 call int(64)[13](211506 call numBits t[211498])))
  }
  function chpl__maxIntTypeSameSign[211518](arg t[211516]:_any[178](?)) type : _unknown[51] "no doc"
  {
    if(211551 call _cond_test(211524 call !(211523 call isIntegralType t[211516])))
    {
      (211549 call compilerError "type t is non-integral: "(211547 call _cast string[26] t[211516]))
    }
    if(211573 call _cond_test(211560 call isIntType t[211516]))
    {
      (211565 return(211564 call int(64)[13] 64))
    }
    {
      (211571 return(211570 call uint(64)[115] 64))
    }
  }
  function isBoolValue[211585](arg e[211583]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211592 return(211591 call isBoolType(211589 'typeof' e[211583])))
  }
  function isIntValue[211601](arg e[211599]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211608 return(211607 call isIntType(211605 'typeof' e[211599])))
  }
  function isUintValue[211617](arg e[211615]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211624 return(211623 call isUintType(211621 'typeof' e[211615])))
  }
  function isRealValue[211633](arg e[211631]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211640 return(211639 call isRealType(211637 'typeof' e[211631])))
  }
  function isImagValue[211649](arg e[211647]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211656 return(211655 call isImagType(211653 'typeof' e[211647])))
  }
  function isComplexValue[211665](arg e[211663]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211672 return(211671 call isComplexType(211669 'typeof' e[211663])))
  }
  function isStringValue[211681](arg e[211679]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211688 return(211687 call isStringType(211685 'typeof' e[211679])))
  }
  function isBytesValue[211697](arg e[211695]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211704 return(211703 call isBytesType(211701 'typeof' e[211695])))
  }
  function isIntegralValue[211713](arg e[211711]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211720 return(211719 call isIntegralType(211717 'typeof' e[211711])))
  }
  function isFloatValue[211729](arg e[211727]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211736 return(211735 call isFloatType(211733 'typeof' e[211727])))
  }
  function isNumericValue[211745](arg e[211743]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211752 return(211751 call isNumericType(211749 'typeof' e[211743])))
  }
  function isPrimitiveValue[211761](arg e[211759]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211768 return(211767 call isPrimitiveType(211765 'typeof' e[211759])))
  }
  function isEnumValue[211777](arg e[211775]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211784 return(211783 call isEnumType(211781 'typeof' e[211775])))
  }
  function isClassValue[211793](arg e[211791]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211800 return(211799 call isClassType(211797 'typeof' e[211791])))
  }
  function isOwnedClassType[211811](arg t[211808] :
  _owned[30](?)) param : _unknown[51] "no doc"
  {
    (211814 return 1)
  }
  function isOwnedClassType[211823](arg t[211821]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211826 return 0)
  }
  function isSharedClassType[211837](arg t[211834] :
  _shared[32](?)) param : _unknown[51] "no doc"
  {
    (211840 return 1)
  }
  function isSharedClassType[211849](arg t[211847]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211852 return 0)
  }
  function isUnmanagedClassType[211863](arg t[211860] :
  unmanaged[220](?)) param : _unknown[51] "no doc"
  {
    (211866 return 1)
  }
  function isUnmanagedClassType[211875](arg t[211873]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211878 return 0)
  }
  function isBorrowedClassType[211889](arg t[211886] :
  borrowed[211](?)) param : _unknown[51] "no doc"
  {
    (211892 return 1)
  }
  function isBorrowedClassType[211901](arg t[211899]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211904 return 0)
  }
  function isOwnedClassValue[211913](arg e[211911]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211920 return(211919 call isOwnedClassType(211917 'typeof' e[211911])))
  }
  function isSharedClassValue[211929](arg e[211927]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211936 return(211935 call isSharedClassType(211933 'typeof' e[211927])))
  }
  function isUnmanagedClassValue[211945](arg e[211943]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211952 return(211951 call isUnmanagedClassType(211949 'typeof' e[211943])))
  }
  function isBorrowedClassValue[211961](arg e[211959]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211968 return(211967 call isBorrowedClassType(211965 'typeof' e[211959])))
  }
  function isNilableClassValue[211977](arg e[211975]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211984 return(211983 call isNilableClassType(211981 'typeof' e[211975])))
  }
  function isNonNilableClassValue[211993](arg e[211991]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212000 return(211999 call isNonNilableClassType(211997 'typeof' e[211991])))
  }
  function isRecordValue[212009](arg e[212007]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212016 return(212015 call isRecordType(212013 'typeof' e[212007])))
  }
  function isUnionValue[212025](arg e[212023]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212032 return(212031 call isUnionType(212029 'typeof' e[212023])))
  }
  function isAtomicValue[212041](arg e[212039]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212048 return(212047 call isAtomicType(212045 'typeof' e[212039])))
  }
  function isRefIterValue[212057](arg e[212055]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212064 return(212063 call isRefIterType(212061 'typeof' e[212055])))
  }
  function isPODValue[212073](arg e[212071]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212080 return(212079 call isPODType(212077 'typeof' e[212071])))
  }
  function isCopyableValue[212089](arg e[212087]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212096 return(212095 call isCopyableType(212093 'typeof' e[212087])))
  }
  function isConstCopyableValue[212105](arg e[212103]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212112 return(212111 call isConstCopyableType(212109 'typeof' e[212103])))
  }
  function isAssignableValue[212121](arg e[212119]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212128 return(212127 call isAssignableType(212125 'typeof' e[212119])))
  }
  function isConstAssignableValue[212137](arg e[212135]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212144 return(212143 call isConstAssignableType(212141 'typeof' e[212135])))
  }
  function isDefaultInitializableValue[212153](arg e[212151]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212160 return(212159 call isDefaultInitializableType(212157 'typeof' e[212151])))
  }
  function isBool[212169](arg t[212167]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212175 return(212174 call isBoolType t[212167]))
  }
  function isInt[212184](arg t[212182]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212190 return(212189 call isIntType t[212182]))
  }
  function isUint[212199](arg t[212197]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212205 return(212204 call isUintType t[212197]))
  }
  function isReal[212214](arg t[212212]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212220 return(212219 call isRealType t[212212]))
  }
  function isImag[212229](arg t[212227]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212235 return(212234 call isImagType t[212227]))
  }
  function isComplex[212244](arg t[212242]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212250 return(212249 call isComplexType t[212242]))
  }
  function isBytes[212259](arg t[212257]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212265 return(212264 call isBytesType t[212257]))
  }
  function isString[212274](arg t[212272]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212280 return(212279 call isStringType t[212272]))
  }
  function isIntegral[212289](arg t[212287]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212295 return(212294 call isIntegralType t[212287]))
  }
  function isFloat[212304](arg t[212302]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212310 return(212309 call isFloatType t[212302]))
  }
  function isNumeric[212319](arg t[212317]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212325 return(212324 call isNumericType t[212317]))
  }
  function isPrimitive[212334](arg t[212332]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212340 return(212339 call isPrimitiveType t[212332]))
  }
  function isEnum[212349](arg t[212347]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212355 return(212354 call isEnumType t[212347]))
  }
  function isTuple[212364](arg t[212362]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212370 return(212369 call isTupleType t[212362]))
  }
  function isHomogeneousTuple[212379](arg t[212377]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212385 return(212384 call isHomogeneousTupleType t[212377]))
  }
  function isGeneric[212394](arg t[212392]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212400 return(212399 call isGenericType t[212392]))
  }
  function isClass[212409](arg t[212407]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212415 return(212414 call isClassType t[212407]))
  }
  function isOwnedClass[212424](arg t[212422]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212430 return(212429 call isOwnedClassType t[212422]))
  }
  function isSharedClass[212439](arg t[212437]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212445 return(212444 call isSharedClassType t[212437]))
  }
  function isUnmanagedClass[212454](arg t[212452]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212460 return(212459 call isUnmanagedClassType t[212452]))
  }
  function isBorrowedClass[212469](arg t[212467]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212475 return(212474 call isBorrowedClassType t[212467]))
  }
  function isNilableClass[212484](arg t[212482]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212490 return(212489 call isNilableClassType t[212482]))
  }
  function isNonNilableClass[212499](arg t[212497]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212505 return(212504 call isNonNilableClassType t[212497]))
  }
  function isRecord[212514](arg t[212512]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212520 return(212519 call isRecordType t[212512]))
  }
  function isUnion[212529](arg t[212527]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212535 return(212534 call isUnionType t[212527]))
  }
  function isRange[212544](arg t[212542]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212550 return(212549 call isRangeType t[212542]))
  }
  function isDmap[212559](arg t[212557]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212565 return(212564 call isDmapType t[212557]))
  }
  function isDomain[212574](arg t[212572]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212580 return(212579 call isDomainType t[212572]))
  }
  function isArray[212589](arg t[212587]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212595 return(212594 call isArrayType t[212587]))
  }
  function isSync[212604](arg t[212602]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212610 return(212609 call isSyncType t[212602]))
  }
  function isSingle[212619](arg t[212617]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212625 return(212624 call isSingleType t[212617]))
  }
  function isAtomic[212634](arg t[212632]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212640 return(212639 call isAtomicType t[212632]))
  }
  function isRefIter[212649](arg t[212647]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212655 return(212654 call isRefIterType t[212647]))
  }
  function isPOD[212664](arg t[212662]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212670 return(212669 call isPODType t[212662]))
  }
  function isCopyable[212679](arg t[212677]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212685 return(212684 call isCopyableType t[212677]))
  }
  function isConstCopyable[212694](arg t[212692]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212700 return(212699 call isConstCopyableType t[212692]))
  }
  function isAssignable[212709](arg t[212707]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212715 return(212714 call isAssignableType t[212707]))
  }
  function isConstAssignable[212724](arg t[212722]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212730 return(212729 call isConstAssignableType t[212722]))
  }
  function isDefaultInitializable[212739](arg t[212737]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212745 return(212744 call isDefaultInitializableType t[212737]))
  }
  function isPrimitive[212754](arg e[212752]:_any[178](?)) param : _unknown[51]
  {
    (212760 return(212759 call isPrimitiveValue e[212752]))
  }
  function isNumeric[212769](arg e[212767]:_any[178](?)) param : _unknown[51]
  {
    (212775 return(212774 call isNumericValue e[212767]))
  }
  function isIntegral[212784](arg e[212782]:_any[178](?)) param : _unknown[51]
  {
    (212790 return(212789 call isIntegralValue e[212782]))
  }
  function isFloat[212799](arg e[212797]:_any[178](?)) param : _unknown[51]
  {
    (212805 return(212804 call isFloatValue e[212797]))
  }
  function isBool[212814](arg e[212812]:_any[178](?)) param : _unknown[51]
  {
    (212820 return(212819 call isBoolValue e[212812]))
  }
  function isInt[212829](arg e[212827]:_any[178](?)) param : _unknown[51]
  {
    (212835 return(212834 call isIntValue e[212827]))
  }
  function isUint[212844](arg e[212842]:_any[178](?)) param : _unknown[51]
  {
    (212850 return(212849 call isUintValue e[212842]))
  }
  function isReal[212859](arg e[212857]:_any[178](?)) param : _unknown[51]
  {
    (212865 return(212864 call isRealValue e[212857]))
  }
  function isImag[212874](arg e[212872]:_any[178](?)) param : _unknown[51]
  {
    (212880 return(212879 call isImagValue e[212872]))
  }
  function isComplex[212889](arg e[212887]:_any[178](?)) param : _unknown[51]
  {
    (212895 return(212894 call isComplexValue e[212887]))
  }
  function isBytes[212904](arg e[212902]:_any[178](?)) param : _unknown[51]
  {
    (212910 return(212909 call isBytesValue e[212902]))
  }
  function isString[212919](arg e[212917]:_any[178](?)) param : _unknown[51]
  {
    (212925 return(212924 call isStringValue e[212917]))
  }
  function isEnum[212934](arg e[212932]:_any[178](?)) param : _unknown[51]
  {
    (212940 return(212939 call isEnumValue e[212932]))
  }
  function isTuple[212949](arg e[212947]:_any[178](?)) param : _unknown[51]
  {
    (212955 return(212954 call isTupleValue e[212947]))
  }
  function isHomogeneousTuple[212966](arg e[212963] :
  _tuple[56199](?)) param : _unknown[51]
  {
    (212972 return(212971 call isHomogeneousTupleValue e[212963]))
  }
  function isClass[212981](arg e[212979]:_any[178](?)) param : _unknown[51]
  {
    (212987 return(212986 call isClassValue e[212979]))
  }
  function isGeneric[212996](arg e[212994]:_any[178](?)) param : _unknown[51]
  {
    (212999 return 0)
  }
  function isOwnedClass[213008](arg e[213006]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213014 return(213013 call isOwnedClassValue e[213006]))
  }
  function isSharedClass[213023](arg e[213021]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213029 return(213028 call isSharedClassValue e[213021]))
  }
  function isUnmanagedClass[213038](arg e[213036]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213044 return(213043 call isUnmanagedClassValue e[213036]))
  }
  function isBorrowedClass[213053](arg e[213051]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213059 return(213058 call isBorrowedClassValue e[213051]))
  }
  function isNilableClass[213068](arg e[213066]:_any[178](?)) param : _unknown[51]
  {
    (213074 return(213073 call isNilableClassValue e[213066]))
  }
  function isNonNilableClass[213083](arg e[213081]:_any[178](?)) param : _unknown[51]
  {
    (213089 return(213088 call isNonNilableClassValue e[213081]))
  }
  function isRecord[213098](arg e[213096]:_any[178](?)) param : _unknown[51]
  {
    (213104 return(213103 call isRecordValue e[213096]))
  }
  function isUnion[213113](arg e[213111]:_any[178](?)) param : _unknown[51]
  {
    (213119 return(213118 call isUnionValue e[213111]))
  }
  function isRange[213128](arg e[213126]:_any[178](?)) param : _unknown[51]
  {
    (213134 return(213133 call isRangeValue e[213126]))
  }
  function isDmap[213143](arg e[213141]:_any[178](?)) param : _unknown[51]
  {
    (213149 return(213148 call isDmapValue e[213141]))
  }
  function isDomain[213158](arg e[213156]:_any[178](?)) param : _unknown[51]
  {
    (213164 return(213163 call isDomainValue e[213156]))
  }
  function isArray[213173](arg e[213171]:_any[178](?)) param : _unknown[51]
  {
    (213179 return(213178 call isArrayValue e[213171]))
  }
  function isSync[213190](arg e[213187] :
  _syncvar[84944](?)) param : _unknown[51] "no doc"
  {
    (213193 return 1)
  }
  function isSync[213202](arg e[213200]:_any[178](?)) param : _unknown[51]
  {
    (213205 return 0)
  }
  function isSingle[213216](arg e[213213] :
  _singlevar[87253](?)) param : _unknown[51] "no doc"
  {
    (213219 return 1)
  }
  function isSingle[213228](arg e[213226]:_any[178](?)) param : _unknown[51]
  {
    (213231 return 0)
  }
  function isAtomic[213240](arg e[213238]:_any[178](?)) param : _unknown[51]
  {
    (213246 return(213245 call isAtomicValue e[213238]))
  }
  function isRefIter[213255](arg e[213253]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213261 return(213260 call isRefIterValue e[213253]))
  }
  function isPOD[213270](arg e[213268]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213276 return(213275 call isPODValue e[213268]))
  }
  function isCopyable[213285](arg e[213283]:_any[178](?)) param : _unknown[51]
  {
    (213291 return(213290 call isCopyableValue e[213283]))
  }
  function isConstCopyable[213300](arg e[213298]:_any[178](?)) param : _unknown[51]
  {
    (213306 return(213305 call isConstCopyableValue e[213298]))
  }
  function isAssignable[213315](arg e[213313]:_any[178](?)) param : _unknown[51]
  {
    (213321 return(213320 call isCopyableValue e[213313]))
  }
  function isConstAssignable[213330](arg e[213328]:_any[178](?)) param : _unknown[51]
  {
    (213336 return(213335 call isConstAssignableValue e[213328]))
  }
  function isDefaultInitializable[213345](arg e[213343]:_any[178](?)) param : _unknown[51]
  {
    (213351 return(213350 call isDefaultInitializableValue e[213343]))
  }
  function chpl_isSyncSingleAtomic[213360](arg e[213358]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213363 return 0)
  }
  function chpl_isSyncSingleAtomic[213374](arg e[213371] :
  _syncvar[84944](?)) param : _unknown[51] "no doc"
  {
    (213377 return 1)
  }
  function chpl_isSyncSingleAtomic[213388](arg e[213385] :
  _singlevar[87253](?)) param : _unknown[51] "no doc"
  {
    (213391 return 1)
  }
  function chpl_isSyncSingleAtomic[213400](arg e[213398]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213408 return 1)
  }
  where {
    (213406 call isAtomicType(213404 'typeof' e[213398]))
  }
  function chpl__legalIntCoerce[213418](arg t1[213416]:_any[178](?), arg t2[213420]:_any[178](?)) param : _unknown[51] "no doc"
  {
    if(213487 call _cond_test(213425 call isIntType t2[213420]))
    {
      if(213456 call _cond_test(213429 call isIntType t1[213416]))
      {
        (213440 return(213438 call <=(213433 call numBits t1[213416])(213437 call numBits t2[213420])))
      }
      {
        (213453 return(213451 call <(213446 call numBits t1[213416])(213450 call numBits t2[213420])))
      }
    }
    {
      if(213482 call _cond_test(213464 call isIntType t1[213416]))
      {
        (213466 return 0)
      }
      {
        (213479 return(213477 call <=(213472 call numBits t1[213416])(213476 call numBits t2[213420])))
      }
    }
  }
  function chpl__commonType[213498](arg s[213496]:_any[178](?), arg t[213500]:_any[178](?)) type : _unknown[51] "private"
  {
    if(213550 call _cond_test(213506 call !(213505 call isIntegralType s[213496])))
    {
      (213548 call compilerError "Type "(213529 call _cast string[26] s[213496]) " is non-integral: ")
    }
    if(213572 call _cond_test(213560 call !(213559 call isIntegralType t[213500])))
    {
      (213570 call compilerError "Type "(213567 call _cast string[26] t[213500]) " is non-integral: ")
    }
    if(213590 call _cond_test(213585 call >(213580 call numBits s[213496])(213584 call numBits t[213500])))
    {
      (213588 return s[213496])
    }
    if(213608 call _cond_test(213603 call <(213598 call numBits s[213496])(213602 call numBits t[213500])))
    {
      (213606 return t[213500])
    }
    if(213702 call _cond_test(213637 call ||(213623 call &&(213616 call isIntType s[213496])(213621 call !(213620 call isIntType t[213500])))(213635 call &&(213628 call isIntType t[213500])(213633 call !(213632 call isIntType s[213496])))))
    {
      (213700 call compilerError "Types "(213660 call _cast string[26] s[213496]) " and "(213681 call _cast string[26] t[213500]) " are incompatible.")
    }
    (213708 return s[213496])
  }
  function toNilableIfClassType[213716](arg arg[213714]:_any[178](?)) type : _unknown[51]
  {
    if(213729 call _cond_test(213721 call isNonNilableClassType arg[213714]))
    {
      (213724 return(213723 'to nilable class from type' arg[213714]))
    }
    {
      (213727 return arg[213714])
    }
  }
  function numBits[213742](arg t[213740]:_any[178](?)) param : _unknown[51] "no return value for void"
  {
    (213767 call compilerError "default-width 'bool' does not have a well-defined size")
  }
  where {
    (213746 call == t[213740] bool[10])
  }
  function numBits[213777](arg t[213775]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213787 return 8)
  }
  where {
    (213784 call == t[213775](213783 call bool[10] 8))
  }
  function numBits[213797](arg t[213795]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213807 return 16)
  }
  where {
    (213804 call == t[213795](213803 call bool[10] 16))
  }
  function numBits[213817](arg t[213815]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213827 return 32)
  }
  where {
    (213824 call == t[213815](213823 call bool[10] 32))
  }
  function numBits[213837](arg t[213835]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213847 return 64)
  }
  where {
    (213844 call == t[213835](213843 call bool[10] 64))
  }
  function numBits[213857](arg t[213855]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213867 return 8)
  }
  where {
    (213864 call == t[213855](213863 call int(64)[13] 8))
  }
  function numBits[213877](arg t[213875]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213887 return 16)
  }
  where {
    (213884 call == t[213875](213883 call int(64)[13] 16))
  }
  function numBits[213897](arg t[213895]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213907 return 32)
  }
  where {
    (213904 call == t[213895](213903 call int(64)[13] 32))
  }
  function numBits[213917](arg t[213915]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213927 return 64)
  }
  where {
    (213924 call == t[213915](213923 call int(64)[13] 64))
  }
  function numBits[213937](arg t[213935]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213947 return 8)
  }
  where {
    (213944 call == t[213935](213943 call uint(64)[115] 8))
  }
  function numBits[213957](arg t[213955]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213967 return 16)
  }
  where {
    (213964 call == t[213955](213963 call uint(64)[115] 16))
  }
  function numBits[213977](arg t[213975]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213987 return 32)
  }
  where {
    (213984 call == t[213975](213983 call uint(64)[115] 32))
  }
  function numBits[213997](arg t[213995]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214007 return 64)
  }
  where {
    (214004 call == t[213995](214003 call uint(64)[115] 64))
  }
  function numBits[214017](arg t[214015]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214027 return 32)
  }
  where {
    (214024 call == t[214015](214023 call real(64)[16] 32))
  }
  function numBits[214037](arg t[214035]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214047 return 64)
  }
  where {
    (214044 call == t[214035](214043 call real(64)[16] 64))
  }
  function numBits[214057](arg t[214055]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214067 return 32)
  }
  where {
    (214064 call == t[214055](214063 call imag(64)[130] 32))
  }
  function numBits[214077](arg t[214075]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214087 return 64)
  }
  where {
    (214084 call == t[214075](214083 call imag(64)[130] 64))
  }
  function numBits[214097](arg t[214095]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214107 return 64)
  }
  where {
    (214104 call == t[214095](214103 call complex(128)[140] 64))
  }
  function numBits[214117](arg t[214115]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214127 return 128)
  }
  where {
    (214124 call == t[214115](214123 call complex(128)[140] 128))
  }
  unknown bitsPerByte[214134] "no doc" "param" 8
  (214137 'end of statement')
  function numBytes[214142](arg t[214140]:_any[178](?)) param : _unknown[51]
  {
    (214151 return(214149 call /(214147 call numBits t[214140]) 8))
  }
  function min[214160](arg t[214158]:_any[178](?)) param : _unknown[51]
  {
    (214170 return(214168 call _cast t[214158] 0))
  }
  where {
    (214165 call isBool t[214158])
  }
  function min[214180](arg t[214178]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214193 return(214191 call _cast t[214178] 128))
  }
  where {
    (214187 call == t[214178](214186 call int(64)[13] 8))
  }
  function min[214203](arg t[214201]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214218 return(214216 call _cast t[214201] 32768))
  }
  where {
    (214210 call == t[214201](214209 call int(64)[13] 16))
  }
  function min[214228](arg t[214226]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214243 return(214241 call _cast t[214226] 2147483648))
  }
  where {
    (214235 call == t[214226](214234 call int(64)[13] 32))
  }
  function min[214253](arg t[214251]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214268 return(214266 call _cast t[214251] 9223372036854775808))
  }
  where {
    (214260 call == t[214251](214259 call int(64)[13] 64))
  }
  function min[214278](arg t[214276]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214288 return(214286 call _cast t[214276] 0))
  }
  where {
    (214283 call isUint t[214276])
  }
  function min[214298](arg t[214296]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214324 return(214323 '_min' t[214296]))
  }
  where {
    (214303 call isFloatType t[214296])
  }
  function min[214334](arg t[214332]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214347] "param"(214345 call /(214343 call numBits t[214332]) 2)
    (214350 'end of statement')
    (214372 return(214370 call _cast t[214332](214367 call _build_tuple(214358 call min(214356 call real(64)[16] floatwidth[214347]))(214365 call min(214363 call real(64)[16] floatwidth[214347])))))
  }
  where {
    (214339 call isComplexType t[214332])
  }
  function max[214381](arg t[214379]:_any[178](?)) param : _unknown[51]
  {
    (214391 return(214389 call _cast t[214379] 1))
  }
  where {
    (214386 call isBool t[214379])
  }
  function max[214401](arg t[214399]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214414 return(214412 call _cast t[214399] 127))
  }
  where {
    (214408 call == t[214399](214407 call int(64)[13] 8))
  }
  function max[214424](arg t[214422]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214439 return(214437 call _cast t[214422] 32767))
  }
  where {
    (214431 call == t[214422](214430 call int(64)[13] 16))
  }
  function max[214449](arg t[214447]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214464 return(214462 call _cast t[214447] 2147483647))
  }
  where {
    (214456 call == t[214447](214455 call int(64)[13] 32))
  }
  function max[214474](arg t[214472]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214489 return(214487 call _cast t[214472] 9223372036854775807))
  }
  where {
    (214481 call == t[214472](214480 call int(64)[13] 64))
  }
  function max[214499](arg t[214497]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214514 return(214512 call _cast t[214497] 255))
  }
  where {
    (214506 call == t[214497](214505 call uint(64)[115] 8))
  }
  function max[214524](arg t[214522]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214539 return(214537 call _cast t[214522] 65535))
  }
  where {
    (214531 call == t[214522](214530 call uint(64)[115] 16))
  }
  function max[214549](arg t[214547]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214564 return(214562 call _cast t[214547] 4294967295))
  }
  where {
    (214556 call == t[214547](214555 call uint(64)[115] 32))
  }
  function max[214574](arg t[214572]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214589 return(214587 call _cast t[214572] 18446744073709551615))
  }
  where {
    (214581 call == t[214572](214580 call uint(64)[115] 64))
  }
  function max[214599](arg t[214597]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214625 return(214624 '_max' t[214597]))
  }
  where {
    (214604 call isFloatType t[214597])
  }
  function max[214635](arg t[214633]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214648] "param"(214646 call /(214644 call numBits t[214633]) 2)
    (214651 'end of statement')
    (214673 return(214671 call _cast t[214633](214668 call _build_tuple(214659 call max(214657 call real(64)[16] floatwidth[214648]))(214666 call max(214664 call real(64)[16] floatwidth[214648])))))
  }
  where {
    (214640 call isComplexType t[214633])
  }
  function chpl_enumerate[214684](arg t[214681] :
  enum[187](?)) : _unknown[51] "iterator fn" "no doc" "no return value for void"
  {
    const enumTuple[214690] "const"(214689 call chpl_enum_enumerate t[214681])
    (214693 'end of statement')
    {
      unknown _indexOfInterest[214712] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214713] "expr temp" "temp"
      (214722 'move' _iterator[214713](214720 call _getIterator(214733 call chpl_direct_range_iter 0(214727 call -(214729 call . enumTuple[214690] c"size") 1) 1)))
      Defer
      {
        {
          (214749 call _freeIterator _iterator[214713])
        }
      }
      { scopeless type
        (214738 'move' _indexOfInterest[214712](214735 call iteratorIndex _iterator[214713]))
      }
      ForLoop[214714]
      {
        unknown i[214742] "index var" "insert auto destroy"
        (214744 'move' i[214742] _indexOfInterest[214712])
        (214710 yield(214709 call enumTuple[214690] i[214742]))
        label _continueLabel[214717]
        _indexOfInterest[214712]
        _iterator[214713]
      }
      label _breakLabel[214718]
    }
  }
  function enum[187](?).these[214761](arg _mt[214766]:_MT[238], arg this[214763]:enum[187](?) :
  enum[187](?)) : _unknown[51] "iterator fn" "method" "no doc" "no return value for void"
  {
    {
      unknown _indexOfInterest[214776] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214777] "expr temp" "temp"
      (214786 'move' _iterator[214777](214784 call _getIterator(214772 call chpl_enumerate this[214763])))
      Defer
      {
        {
          (214803 call _freeIterator _iterator[214777])
        }
      }
      { scopeless type
        (214792 'move' _indexOfInterest[214776](214789 call iteratorIndex _iterator[214777]))
      }
      ForLoop[214778]
      {
        unknown i[214796] "index var" "insert auto destroy"
        (214798 'move' i[214796] _indexOfInterest[214776])
        (214774 yield i[214796])
        label _continueLabel[214781]
        _indexOfInterest[214776]
        _iterator[214777]
      }
      label _breakLabel[214782]
    }
  }
  function enum[187](?).first[214816](arg _mt[214821]:_MT[238], arg this[214818]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214828 return(214827 call chpl__orderToEnum 0 this[214818]))
  }
  function enum[187](?).last[214836](arg _mt[214841]:_MT[238], arg this[214838]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214854 return(214853 call chpl__orderToEnum(214849 call -(214845 call . this[214838] c"size") 1) this[214838]))
  }
  function chpl_enum_minbits[214865](arg t[214862] :
  enum[187](?)) param : _unknown[51] "private"
  {
    if(214883 call _cond_test(214878 call <=(214868 call . t[214862] c"size")(214877 call max(214875 call uint(64)[115] 8))))
    {
      (214881 return 8)
    }
    if(214905 call _cond_test(214900 call <=(214890 call . t[214862] c"size")(214899 call max(214897 call uint(64)[115] 16))))
    {
      (214903 return 16)
    }
    if(214926 call _cond_test(214921 call <=(214911 call . t[214862] c"size")(214920 call max(214918 call uint(64)[115] 32))))
    {
      (214924 return 32)
    }
    (214932 return 64)
  }
  function chpl_enum_mintype[214942](arg t[214939] :
  enum[187](?)) type : _unknown[51] "no doc"
  {
    (214951 return(214950 call uint(64)[115](214948 call chpl_enum_minbits t[214939])))
  }
  function integral[199](?).safeCast[214963](arg _mt[214968]:_MT[238], arg this[214965]:integral[199](?) :
  integral[199](?), arg T[214960] :
  integral[199](?)) : _unknown[51] "inline" "method"
  {
    if(215143 call _cond_test(214976 call && 1(214975 call isUintType T[214960])))
    {
      if(215049 call _cond_test(214982 call isIntType(214980 'typeof' this[214965])))
      {
        if(215043 call _cond_test(214985 call < this[214965] 0))
        {
          (215041 call safeCastCheckHalt module=[255] HaltWrappers[209998](215038 call +(215032 call +(215013 call + "casting "(215011 call _cast string[26](215009 'typeof' this[214965]))) " less than 0 to ")(215036 call _cast string[26] T[214960])))
          (363050 'referenced modules list' HaltWrappers[209998])
        }
      }
      if(215139 call _cond_test(215069 call >(215060 call _cast uint(64)[115](215058 call max(215056 'typeof' this[214965])))(215067 call _cast uint(64)[115](215065 call max T[214960]))))
      {
        if(215133 call _cond_test(215082 call >(215073 call _cast uint(64)[115] this[214965])(215080 call _cast uint(64)[115](215078 call max T[214960]))))
        {
          (215131 call safeCastCheckHalt module=[255] HaltWrappers[209998](215128 call +(215122 call +(215119 call +(215113 call +(215094 call + "casting "(215092 call _cast string[26](215090 'typeof' this[214965]))) " with a value greater than the maximum of ")(215117 call _cast string[26] T[214960])) " to ")(215126 call _cast string[26] T[214960])))
          (363056 'referenced modules list' HaltWrappers[209998])
        }
      }
    }
    if(215390 call _cond_test(215153 call && 1(215152 call isIntType T[214960])))
    {
      if(215286 call _cond_test(215170 call >(215161 call _cast uint(64)[115](215159 call max(215157 'typeof' this[214965])))(215168 call _cast uint(64)[115](215166 call max T[214960]))))
      {
        if(215281 call _cond_test(215176 call isUintType(215174 'typeof' this[214965])))
        {
          if(215223 call _cond_test(215188 call >(215179 call _cast uint(64)[115] this[214965])(215186 call _cast uint(64)[115](215184 call max T[214960]))))
          {
            (215221 call safeCastCheckHalt module=[255] HaltWrappers[209998](215218 call +(215212 call +(215209 call +(215203 call +(215200 call + "casting "(215198 call _cast string[26](215196 'typeof' this[214965]))) " with a value greater than the maximum of ")(215207 call _cast string[26] T[214960])) " to ")(215216 call _cast string[26] T[214960])))
            (363062 'referenced modules list' HaltWrappers[209998])
          }
        }
        {
          if(215275 call _cond_test(215240 call >(215231 call _cast int(64)[13] this[214965])(215238 call _cast int(64)[13](215236 call max T[214960]))))
          {
            (215273 call safeCastCheckHalt module=[255] HaltWrappers[209998](215270 call +(215264 call +(215261 call +(215255 call +(215252 call + "casting "(215250 call _cast string[26](215248 'typeof' this[214965]))) " with a value greater than the maximum of ")(215259 call _cast string[26] T[214960])) " to ")(215268 call _cast string[26] T[214960])))
            (363068 'referenced modules list' HaltWrappers[209998])
          }
        }
      }
      if(215386 call _cond_test(215295 call isIntType(215293 'typeof' this[214965])))
      {
        if(215381 call _cond_test(215311 call <(215302 call _cast int(64)[13](215300 call min(215298 'typeof' this[214965])))(215309 call _cast int(64)[13](215307 call min T[214960]))))
        {
          if(215375 call _cond_test(215324 call <(215315 call _cast int(64)[13] this[214965])(215322 call _cast int(64)[13](215320 call min T[214960]))))
          {
            (215373 call safeCastCheckHalt module=[255] HaltWrappers[209998](215370 call +(215364 call +(215361 call +(215355 call +(215336 call + "casting "(215334 call _cast string[26](215332 'typeof' this[214965]))) " with a value less than the minimum of ")(215359 call _cast string[26] T[214960])) " to ")(215368 call _cast string[26] T[214960])))
            (363074 'referenced modules list' HaltWrappers[209998])
          }
        }
      }
    }
    (215398 return(215396 call _cast T[214960] this[214965]))
  }
  { scopeless type
    T[214960]
  }
  function integral[199](?).safeCast[215408](arg _mt[215413]:_MT[238], arg this[215410]:integral[199](?) :
  integral[199](?), arg T[215406]:_any[178](?)) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (215434 call compilerError "safeCast is only supported between integral types")
  }
  function _prod_id[215443](arg t[215441]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215449 return(215447 call _cast t[215441] 1))
  }
  function _land_id[215458](arg t[215456]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215461 return 1)
  }
  function _lor_id[215470](arg t[215468]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215473 return 0)
  }
  function _lxor_id[215482](arg t[215480]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215485 return 0)
  }
  function _band_id[215494](arg t[215492]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    if(215815 call _cond_test(215499 call isBoolType t[215492]))
    {
      (215504 return(215502 call _cast t[215492] 1))
    }
    {
      if(215809 call _cond_test(215509 call isIntType t[215492]))
      {
        (215516 return(215514 call -(215512 call _cast t[215492] 1)))
      }
      {
        if(215803 call _cond_test(215521 call isUintType t[215492]))
        {
          (215526 return(215525 call max t[215492]))
        }
        {
          if(215797 call _cond_test(215533 call == t[215492](215532 call real(64)[16] 32)))
          {
            (215545 return(215543 call _cast t[215492](215541 call max(215539 call uint(64)[115] 32))))
          }
          {
            if(215791 call _cond_test(215552 call == t[215492](215551 call real(64)[16] 64)))
            {
              (215564 return(215562 call _cast t[215492](215560 call max(215558 call uint(64)[115] 64))))
            }
            {
              if(215785 call _cond_test(215571 call == t[215492](215570 call imag(64)[130] 32)))
              {
                (215583 return(215581 call _cast t[215492](215579 call max(215577 call uint(64)[115] 32))))
              }
              {
                if(215779 call _cond_test(215590 call == t[215492](215589 call imag(64)[130] 64)))
                {
                  (215602 return(215600 call _cast t[215492](215598 call max(215596 call uint(64)[115] 64))))
                }
                {
                  if(215773 call _cond_test(215609 call == t[215492](215608 call complex(128)[140] 64)))
                  {
                    (215643 return(215641 call _cast t[215492](215638 call _build_tuple(215622 call _cast(215621 call real(64)[16] 32)(215617 call max(215615 call uint(64)[115] 32)))(215635 call _cast(215634 call real(64)[16] 32)(215630 call max(215628 call uint(64)[115] 32))))))
                  }
                  {
                    if(215767 call _cond_test(215650 call == t[215492](215649 call complex(128)[140] 128)))
                    {
                      (215684 return(215682 call _cast t[215492](215679 call _build_tuple(215663 call _cast(215662 call real(64)[16] 64)(215658 call max(215656 call uint(64)[115] 64)))(215676 call _cast(215675 call real(64)[16] 64)(215671 call max(215669 call uint(64)[115] 64))))))
                    }
                    {
                      if(215762 call _cond_test(215689 call isArrayType t[215492]))
                      {
                        unknown result[215691] t[215492]
                        (215694 'end of statement')
                        unknown elT[215700] "type variable"(215697 call . result[215691] c"eltType")
                        Forall {
                          induction variables:
                            
                            unknown elm[215714] "index var" "insert auto destroy"
                          iterated expressions:
                            result[215691]
                          shadow variables:
                          other variables
                            forall body
                          {
                            (215710 call = elm[215714](215709 call _band_id elT[215700]))
                          }
                        }
                        (215718 return result[215691])
                      }
                      {
                        (215760 call compilerError "Identity value for & over "(215741 call _cast string[26] t[215492]) "is not available")
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _bor_id[215828](arg t[215826]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215834 return(215832 call _cast t[215826] 0))
  }
  function _bxor_id[215843](arg t[215841]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215849 return(215847 call _cast t[215841] 0))
  }
  (355283 'used modules list'(352998 'use' ChapelStandard[20264])(210728 'import' HaltWrappers[209998]))
}