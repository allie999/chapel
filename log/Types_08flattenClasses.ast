AST dump for Types after pass flattenClasses.
Module use list: ChapelStandard HaltWrappers 

{
  function isType[210753](arg t[210751]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210756 return 1)
  }
  function isType[210765](arg e[210763]:_any[178](?)) param : _unknown[51]
  {
    (210768 return 0)
  }
  function isParam[210777](arg t[210775]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210780 return 0)
  }
  function isParam[210789](param arg p[210787]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210792 return 1)
  }
  function isParam[210801](arg e[210799]:_any[178](?)) param : _unknown[51]
  {
    (210804 return 0)
  }
  function _isPrimitiveType[210813](arg t[210811]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (210837 return(210835 call ||(210829 call ||(210823 call ||(210818 call isBoolType t[210811])(210822 call isIntegralType t[210811]))(210828 call isRealType t[210811]))(210833 call == t[210811] c_string[19])))
  }
  function isPrimitiveType[210846](arg t[210844]:_any[178](?)) param : _unknown[51]
  {
    (210882 return(210880 call ||(210874 call ||(210868 call ||(210862 call ||(210856 call ||(210851 call isNothingType t[210844])(210855 call isVoidType t[210844]))(210861 call isBoolType t[210844]))(210867 call isNumericType t[210844]))(210873 call isStringType t[210844]))(210879 call isBytesType t[210844])))
  }
  function isNumericType[210891](arg t[210889]:_any[178](?)) param : _unknown[51]
  {
    (210909 return(210907 call ||(210901 call ||(210896 call isIntegralType t[210889])(210900 call isFloatType t[210889]))(210906 call isComplexType t[210889])))
  }
  function isIntegralType[210918](arg t[210916]:_any[178](?)) param : _unknown[51]
  {
    (210930 return(210928 call ||(210923 call isIntType t[210916])(210927 call isUintType t[210916])))
  }
  function isFloatType[210939](arg t[210937]:_any[178](?)) param : _unknown[51]
  {
    (210951 return(210949 call ||(210944 call isRealType t[210937])(210948 call isImagType t[210937])))
  }
  function isNothingType[210960](arg t[210958]:_any[178](?)) param : _unknown[51]
  {
    (210966 return(210964 call == t[210958] nothing[7]))
  }
  function isVoidType[210975](arg t[210973]:_any[178](?)) param : _unknown[51]
  {
    (210981 return(210979 call == t[210973] void[4]))
  }
  function isBoolType[210990](arg t[210988]:_any[178](?)) param : _unknown[51]
  {
    (211032 return(211030 call ||(211021 call ||(211012 call ||(211003 call ||(210994 call == t[210988] bool[10])(211001 call == t[210988](211000 call bool[10] 8)))(211010 call == t[210988](211009 call bool[10] 16)))(211019 call == t[210988](211018 call bool[10] 32)))(211028 call == t[210988](211027 call bool[10] 64))))
  }
  function isIntType[211041](arg t[211039]:_any[178](?)) param : _unknown[51]
  {
    (211077 return(211075 call ||(211066 call ||(211057 call ||(211048 call == t[211039](211047 call int(64)[13] 8))(211055 call == t[211039](211054 call int(64)[13] 16)))(211064 call == t[211039](211063 call int(64)[13] 32)))(211073 call == t[211039](211072 call int(64)[13] 64))))
  }
  function isUintType[211086](arg t[211084]:_any[178](?)) param : _unknown[51]
  {
    (211122 return(211120 call ||(211111 call ||(211102 call ||(211093 call == t[211084](211092 call uint(64)[115] 8))(211100 call == t[211084](211099 call uint(64)[115] 16)))(211109 call == t[211084](211108 call uint(64)[115] 32)))(211118 call == t[211084](211117 call uint(64)[115] 64))))
  }
  function isEnumType[211131](arg t[211129]:_any[178](?)) param : _unknown[51]
  {
    function isEnumHelp[211139](arg t[211136] :
    enum[187](?)) param : _unknown[51]
    {
      (211142 return 1)
    }
    function isEnumHelp[211152](arg t[211150]:_any[178](?)) param : _unknown[51]
    {
      (211155 return 0)
    }
    (211164 return(211163 call isEnumHelp t[211129]))
  }
  function isAbstractEnumType[211172](arg t[211170]:_any[178](?)) param : _unknown[51]
  {
    (211194 return(211193 'is abstract enum type' t[211170]))
  }
  function isComplexType[211203](arg t[211201]:_any[178](?)) param : _unknown[51]
  {
    (211221 return(211219 call ||(211210 call == t[211201](211209 call complex(128)[140] 64))(211217 call == t[211201](211216 call complex(128)[140] 128))))
  }
  function isRealType[211230](arg t[211228]:_any[178](?)) param : _unknown[51]
  {
    (211248 return(211246 call ||(211237 call == t[211228](211236 call real(64)[16] 32))(211244 call == t[211228](211243 call real(64)[16] 64))))
  }
  function isImagType[211257](arg t[211255]:_any[178](?)) param : _unknown[51]
  {
    (211275 return(211273 call ||(211264 call == t[211255](211263 call imag(64)[130] 32))(211271 call == t[211255](211270 call imag(64)[130] 64))))
  }
  function isStringType[211284](arg t[211282]:_any[178](?)) param : _unknown[51]
  {
    (211290 return(211288 call == t[211282] string[26]))
  }
  function isBytesType[211299](arg t[211297]:_any[178](?)) param : _unknown[51]
  {
    (211305 return(211303 call == t[211297] bytes[24]))
  }
  function isPODType[211314](arg t[211312]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211336 return(211335 'is pod type' t[211312]))
  }
  function isCopyableType[211345](arg t[211343]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211367 return(211366 'is copyable type' t[211343]))
  }
  function isConstCopyableType[211376](arg t[211374]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211398 return(211397 'is const copyable type' t[211374]))
  }
  function isAssignableType[211407](arg t[211405]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211429 return(211428 'is assignable type' t[211405]))
  }
  function isConstAssignableType[211438](arg t[211436]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211460 return(211459 'is const assignable type' t[211436]))
  }
  function isDefaultInitializableType[211469](arg t[211467]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211491 return(211490 'type has default value' t[211467]))
  }
  function chpl__unsignedType[211500](arg t[211498]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211509 return(211508 call uint(64)[115](211506 call numBits t[211498])))
  }
  function chpl__signedType[211518](arg t[211516]:_any[178](?)) type : _unknown[51] "no doc"
  {
    (211527 return(211526 call int(64)[13](211524 call numBits t[211516])))
  }
  function chpl__maxIntTypeSameSign[211536](arg t[211534]:_any[178](?)) type : _unknown[51] "no doc"
  {
    if(211569 call _cond_test(211542 call !(211541 call isIntegralType t[211534])))
    {
      (211567 call compilerError "type t is non-integral: "(211565 call _cast string[26] t[211534]))
    }
    if(211591 call _cond_test(211578 call isIntType t[211534]))
    {
      (211583 return(211582 call int(64)[13] 64))
    }
    {
      (211589 return(211588 call uint(64)[115] 64))
    }
  }
  function isBoolValue[211603](arg e[211601]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211610 return(211609 call isBoolType(211607 'typeof' e[211601])))
  }
  function isIntValue[211619](arg e[211617]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211626 return(211625 call isIntType(211623 'typeof' e[211617])))
  }
  function isUintValue[211635](arg e[211633]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211642 return(211641 call isUintType(211639 'typeof' e[211633])))
  }
  function isRealValue[211651](arg e[211649]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211658 return(211657 call isRealType(211655 'typeof' e[211649])))
  }
  function isImagValue[211667](arg e[211665]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211674 return(211673 call isImagType(211671 'typeof' e[211665])))
  }
  function isComplexValue[211683](arg e[211681]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211690 return(211689 call isComplexType(211687 'typeof' e[211681])))
  }
  function isStringValue[211699](arg e[211697]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211706 return(211705 call isStringType(211703 'typeof' e[211697])))
  }
  function isBytesValue[211715](arg e[211713]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211722 return(211721 call isBytesType(211719 'typeof' e[211713])))
  }
  function isIntegralValue[211731](arg e[211729]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211738 return(211737 call isIntegralType(211735 'typeof' e[211729])))
  }
  function isFloatValue[211747](arg e[211745]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211754 return(211753 call isFloatType(211751 'typeof' e[211745])))
  }
  function isNumericValue[211763](arg e[211761]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211770 return(211769 call isNumericType(211767 'typeof' e[211761])))
  }
  function isPrimitiveValue[211779](arg e[211777]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211786 return(211785 call isPrimitiveType(211783 'typeof' e[211777])))
  }
  function isEnumValue[211795](arg e[211793]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211802 return(211801 call isEnumType(211799 'typeof' e[211793])))
  }
  function isClassValue[211811](arg e[211809]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211818 return(211817 call isClassType(211815 'typeof' e[211809])))
  }
  function isOwnedClassType[211829](arg t[211826] :
  _owned[30](?)) param : _unknown[51] "no doc"
  {
    (211832 return 1)
  }
  function isOwnedClassType[211841](arg t[211839]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211844 return 0)
  }
  function isSharedClassType[211855](arg t[211852] :
  _shared[32](?)) param : _unknown[51] "no doc"
  {
    (211858 return 1)
  }
  function isSharedClassType[211867](arg t[211865]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211870 return 0)
  }
  function isUnmanagedClassType[211881](arg t[211878] :
  unmanaged[220](?)) param : _unknown[51] "no doc"
  {
    (211884 return 1)
  }
  function isUnmanagedClassType[211893](arg t[211891]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211896 return 0)
  }
  function isBorrowedClassType[211907](arg t[211904] :
  borrowed[211](?)) param : _unknown[51] "no doc"
  {
    (211910 return 1)
  }
  function isBorrowedClassType[211919](arg t[211917]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (211922 return 0)
  }
  function isOwnedClassValue[211931](arg e[211929]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211938 return(211937 call isOwnedClassType(211935 'typeof' e[211929])))
  }
  function isSharedClassValue[211947](arg e[211945]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211954 return(211953 call isSharedClassType(211951 'typeof' e[211945])))
  }
  function isUnmanagedClassValue[211963](arg e[211961]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211970 return(211969 call isUnmanagedClassType(211967 'typeof' e[211961])))
  }
  function isBorrowedClassValue[211979](arg e[211977]:_any[178](?)) param : _unknown[51] "no borrow convert" "no doc"
  {
    (211986 return(211985 call isBorrowedClassType(211983 'typeof' e[211977])))
  }
  function isNilableClassValue[211995](arg e[211993]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212002 return(212001 call isNilableClassType(211999 'typeof' e[211993])))
  }
  function isNonNilableClassValue[212011](arg e[212009]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212018 return(212017 call isNonNilableClassType(212015 'typeof' e[212009])))
  }
  function isRecordValue[212027](arg e[212025]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212034 return(212033 call isRecordType(212031 'typeof' e[212025])))
  }
  function isUnionValue[212043](arg e[212041]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212050 return(212049 call isUnionType(212047 'typeof' e[212041])))
  }
  function isAtomicValue[212059](arg e[212057]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212066 return(212065 call isAtomicType(212063 'typeof' e[212057])))
  }
  function isRefIterValue[212075](arg e[212073]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212082 return(212081 call isRefIterType(212079 'typeof' e[212073])))
  }
  function isPODValue[212091](arg e[212089]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212098 return(212097 call isPODType(212095 'typeof' e[212089])))
  }
  function isCopyableValue[212107](arg e[212105]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212114 return(212113 call isCopyableType(212111 'typeof' e[212105])))
  }
  function isConstCopyableValue[212123](arg e[212121]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212130 return(212129 call isConstCopyableType(212127 'typeof' e[212121])))
  }
  function isAssignableValue[212139](arg e[212137]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212146 return(212145 call isAssignableType(212143 'typeof' e[212137])))
  }
  function isConstAssignableValue[212155](arg e[212153]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212162 return(212161 call isConstAssignableType(212159 'typeof' e[212153])))
  }
  function isDefaultInitializableValue[212171](arg e[212169]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212178 return(212177 call isDefaultInitializableType(212175 'typeof' e[212169])))
  }
  function isBool[212187](arg t[212185]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212193 return(212192 call isBoolType t[212185]))
  }
  function isInt[212202](arg t[212200]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212208 return(212207 call isIntType t[212200]))
  }
  function isUint[212217](arg t[212215]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212223 return(212222 call isUintType t[212215]))
  }
  function isReal[212232](arg t[212230]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212238 return(212237 call isRealType t[212230]))
  }
  function isImag[212247](arg t[212245]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212253 return(212252 call isImagType t[212245]))
  }
  function isComplex[212262](arg t[212260]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212268 return(212267 call isComplexType t[212260]))
  }
  function isBytes[212277](arg t[212275]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212283 return(212282 call isBytesType t[212275]))
  }
  function isString[212292](arg t[212290]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212298 return(212297 call isStringType t[212290]))
  }
  function isIntegral[212307](arg t[212305]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212313 return(212312 call isIntegralType t[212305]))
  }
  function isFloat[212322](arg t[212320]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212328 return(212327 call isFloatType t[212320]))
  }
  function isNumeric[212337](arg t[212335]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212343 return(212342 call isNumericType t[212335]))
  }
  function isPrimitive[212352](arg t[212350]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212358 return(212357 call isPrimitiveType t[212350]))
  }
  function isEnum[212367](arg t[212365]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212373 return(212372 call isEnumType t[212365]))
  }
  function isTuple[212382](arg t[212380]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212388 return(212387 call isTupleType t[212380]))
  }
  function isHomogeneousTuple[212397](arg t[212395]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212403 return(212402 call isHomogeneousTupleType t[212395]))
  }
  function isGeneric[212412](arg t[212410]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212418 return(212417 call isGenericType t[212410]))
  }
  function isClass[212427](arg t[212425]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212433 return(212432 call isClassType t[212425]))
  }
  function isOwnedClass[212442](arg t[212440]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212448 return(212447 call isOwnedClassType t[212440]))
  }
  function isSharedClass[212457](arg t[212455]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212463 return(212462 call isSharedClassType t[212455]))
  }
  function isUnmanagedClass[212472](arg t[212470]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212478 return(212477 call isUnmanagedClassType t[212470]))
  }
  function isBorrowedClass[212487](arg t[212485]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212493 return(212492 call isBorrowedClassType t[212485]))
  }
  function isNilableClass[212502](arg t[212500]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212508 return(212507 call isNilableClassType t[212500]))
  }
  function isNonNilableClass[212517](arg t[212515]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212523 return(212522 call isNonNilableClassType t[212515]))
  }
  function isRecord[212532](arg t[212530]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212538 return(212537 call isRecordType t[212530]))
  }
  function isUnion[212547](arg t[212545]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212553 return(212552 call isUnionType t[212545]))
  }
  function isRange[212562](arg t[212560]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212568 return(212567 call isRangeType t[212560]))
  }
  function isDmap[212577](arg t[212575]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212583 return(212582 call isDmapType t[212575]))
  }
  function isDomain[212592](arg t[212590]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212598 return(212597 call isDomainType t[212590]))
  }
  function isArray[212607](arg t[212605]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212613 return(212612 call isArrayType t[212605]))
  }
  function isSync[212622](arg t[212620]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212628 return(212627 call isSyncType t[212620]))
  }
  function isSingle[212637](arg t[212635]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212643 return(212642 call isSingleType t[212635]))
  }
  function isAtomic[212652](arg t[212650]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212658 return(212657 call isAtomicType t[212650]))
  }
  function isRefIter[212667](arg t[212665]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212673 return(212672 call isRefIterType t[212665]))
  }
  function isPOD[212682](arg t[212680]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212688 return(212687 call isPODType t[212680]))
  }
  function isCopyable[212697](arg t[212695]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212703 return(212702 call isCopyableType t[212695]))
  }
  function isConstCopyable[212712](arg t[212710]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212718 return(212717 call isConstCopyableType t[212710]))
  }
  function isAssignable[212727](arg t[212725]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212733 return(212732 call isAssignableType t[212725]))
  }
  function isConstAssignable[212742](arg t[212740]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212748 return(212747 call isConstAssignableType t[212740]))
  }
  function isDefaultInitializable[212757](arg t[212755]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (212763 return(212762 call isDefaultInitializableType t[212755]))
  }
  function isPrimitive[212772](arg e[212770]:_any[178](?)) param : _unknown[51]
  {
    (212778 return(212777 call isPrimitiveValue e[212770]))
  }
  function isNumeric[212787](arg e[212785]:_any[178](?)) param : _unknown[51]
  {
    (212793 return(212792 call isNumericValue e[212785]))
  }
  function isIntegral[212802](arg e[212800]:_any[178](?)) param : _unknown[51]
  {
    (212808 return(212807 call isIntegralValue e[212800]))
  }
  function isFloat[212817](arg e[212815]:_any[178](?)) param : _unknown[51]
  {
    (212823 return(212822 call isFloatValue e[212815]))
  }
  function isBool[212832](arg e[212830]:_any[178](?)) param : _unknown[51]
  {
    (212838 return(212837 call isBoolValue e[212830]))
  }
  function isInt[212847](arg e[212845]:_any[178](?)) param : _unknown[51]
  {
    (212853 return(212852 call isIntValue e[212845]))
  }
  function isUint[212862](arg e[212860]:_any[178](?)) param : _unknown[51]
  {
    (212868 return(212867 call isUintValue e[212860]))
  }
  function isReal[212877](arg e[212875]:_any[178](?)) param : _unknown[51]
  {
    (212883 return(212882 call isRealValue e[212875]))
  }
  function isImag[212892](arg e[212890]:_any[178](?)) param : _unknown[51]
  {
    (212898 return(212897 call isImagValue e[212890]))
  }
  function isComplex[212907](arg e[212905]:_any[178](?)) param : _unknown[51]
  {
    (212913 return(212912 call isComplexValue e[212905]))
  }
  function isBytes[212922](arg e[212920]:_any[178](?)) param : _unknown[51]
  {
    (212928 return(212927 call isBytesValue e[212920]))
  }
  function isString[212937](arg e[212935]:_any[178](?)) param : _unknown[51]
  {
    (212943 return(212942 call isStringValue e[212935]))
  }
  function isEnum[212952](arg e[212950]:_any[178](?)) param : _unknown[51]
  {
    (212958 return(212957 call isEnumValue e[212950]))
  }
  function isTuple[212967](arg e[212965]:_any[178](?)) param : _unknown[51]
  {
    (212973 return(212972 call isTupleValue e[212965]))
  }
  function isHomogeneousTuple[212984](arg e[212981] :
  _tuple[56202](?)) param : _unknown[51]
  {
    (212990 return(212989 call isHomogeneousTupleValue e[212981]))
  }
  function isClass[212999](arg e[212997]:_any[178](?)) param : _unknown[51]
  {
    (213005 return(213004 call isClassValue e[212997]))
  }
  function isGeneric[213014](arg e[213012]:_any[178](?)) param : _unknown[51]
  {
    (213017 return 0)
  }
  function isOwnedClass[213026](arg e[213024]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213032 return(213031 call isOwnedClassValue e[213024]))
  }
  function isSharedClass[213041](arg e[213039]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213047 return(213046 call isSharedClassValue e[213039]))
  }
  function isUnmanagedClass[213056](arg e[213054]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213062 return(213061 call isUnmanagedClassValue e[213054]))
  }
  function isBorrowedClass[213071](arg e[213069]:_any[178](?)) param : _unknown[51] "no borrow convert"
  {
    (213077 return(213076 call isBorrowedClassValue e[213069]))
  }
  function isNilableClass[213086](arg e[213084]:_any[178](?)) param : _unknown[51]
  {
    (213092 return(213091 call isNilableClassValue e[213084]))
  }
  function isNonNilableClass[213101](arg e[213099]:_any[178](?)) param : _unknown[51]
  {
    (213107 return(213106 call isNonNilableClassValue e[213099]))
  }
  function isRecord[213116](arg e[213114]:_any[178](?)) param : _unknown[51]
  {
    (213122 return(213121 call isRecordValue e[213114]))
  }
  function isUnion[213131](arg e[213129]:_any[178](?)) param : _unknown[51]
  {
    (213137 return(213136 call isUnionValue e[213129]))
  }
  function isRange[213146](arg e[213144]:_any[178](?)) param : _unknown[51]
  {
    (213152 return(213151 call isRangeValue e[213144]))
  }
  function isDmap[213161](arg e[213159]:_any[178](?)) param : _unknown[51]
  {
    (213167 return(213166 call isDmapValue e[213159]))
  }
  function isDomain[213176](arg e[213174]:_any[178](?)) param : _unknown[51]
  {
    (213182 return(213181 call isDomainValue e[213174]))
  }
  function isArray[213191](arg e[213189]:_any[178](?)) param : _unknown[51]
  {
    (213197 return(213196 call isArrayValue e[213189]))
  }
  function isSync[213208](arg e[213205] :
  _syncvar[84947](?)) param : _unknown[51] "no doc"
  {
    (213211 return 1)
  }
  function isSync[213220](arg e[213218]:_any[178](?)) param : _unknown[51]
  {
    (213223 return 0)
  }
  function isSingle[213234](arg e[213231] :
  _singlevar[87256](?)) param : _unknown[51] "no doc"
  {
    (213237 return 1)
  }
  function isSingle[213246](arg e[213244]:_any[178](?)) param : _unknown[51]
  {
    (213249 return 0)
  }
  function isAtomic[213258](arg e[213256]:_any[178](?)) param : _unknown[51]
  {
    (213264 return(213263 call isAtomicValue e[213256]))
  }
  function isRefIter[213273](arg e[213271]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213279 return(213278 call isRefIterValue e[213271]))
  }
  function isPOD[213288](arg e[213286]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213294 return(213293 call isPODValue e[213286]))
  }
  function isCopyable[213303](arg e[213301]:_any[178](?)) param : _unknown[51]
  {
    (213309 return(213308 call isCopyableValue e[213301]))
  }
  function isConstCopyable[213318](arg e[213316]:_any[178](?)) param : _unknown[51]
  {
    (213324 return(213323 call isConstCopyableValue e[213316]))
  }
  function isAssignable[213333](arg e[213331]:_any[178](?)) param : _unknown[51]
  {
    (213339 return(213338 call isCopyableValue e[213331]))
  }
  function isConstAssignable[213348](arg e[213346]:_any[178](?)) param : _unknown[51]
  {
    (213354 return(213353 call isConstAssignableValue e[213346]))
  }
  function isDefaultInitializable[213363](arg e[213361]:_any[178](?)) param : _unknown[51]
  {
    (213369 return(213368 call isDefaultInitializableValue e[213361]))
  }
  function chpl_isSyncSingleAtomic[213378](arg e[213376]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213381 return 0)
  }
  function chpl_isSyncSingleAtomic[213392](arg e[213389] :
  _syncvar[84947](?)) param : _unknown[51] "no doc"
  {
    (213395 return 1)
  }
  function chpl_isSyncSingleAtomic[213406](arg e[213403] :
  _singlevar[87256](?)) param : _unknown[51] "no doc"
  {
    (213409 return 1)
  }
  function chpl_isSyncSingleAtomic[213418](arg e[213416]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213426 return 1)
  }
  where {
    (213424 call isAtomicType(213422 'typeof' e[213416]))
  }
  function chpl__legalIntCoerce[213436](arg t1[213434]:_any[178](?), arg t2[213438]:_any[178](?)) param : _unknown[51] "no doc"
  {
    if(213505 call _cond_test(213443 call isIntType t2[213438]))
    {
      if(213474 call _cond_test(213447 call isIntType t1[213434]))
      {
        (213458 return(213456 call <=(213451 call numBits t1[213434])(213455 call numBits t2[213438])))
      }
      {
        (213471 return(213469 call <(213464 call numBits t1[213434])(213468 call numBits t2[213438])))
      }
    }
    {
      if(213500 call _cond_test(213482 call isIntType t1[213434]))
      {
        (213484 return 0)
      }
      {
        (213497 return(213495 call <=(213490 call numBits t1[213434])(213494 call numBits t2[213438])))
      }
    }
  }
  function chpl__commonType[213516](arg s[213514]:_any[178](?), arg t[213518]:_any[178](?)) type : _unknown[51] "private"
  {
    if(213568 call _cond_test(213524 call !(213523 call isIntegralType s[213514])))
    {
      (213566 call compilerError "Type "(213547 call _cast string[26] s[213514]) " is non-integral: ")
    }
    if(213590 call _cond_test(213578 call !(213577 call isIntegralType t[213518])))
    {
      (213588 call compilerError "Type "(213585 call _cast string[26] t[213518]) " is non-integral: ")
    }
    if(213608 call _cond_test(213603 call >(213598 call numBits s[213514])(213602 call numBits t[213518])))
    {
      (213606 return s[213514])
    }
    if(213626 call _cond_test(213621 call <(213616 call numBits s[213514])(213620 call numBits t[213518])))
    {
      (213624 return t[213518])
    }
    if(213720 call _cond_test(213655 call ||(213641 call &&(213634 call isIntType s[213514])(213639 call !(213638 call isIntType t[213518])))(213653 call &&(213646 call isIntType t[213518])(213651 call !(213650 call isIntType s[213514])))))
    {
      (213718 call compilerError "Types "(213678 call _cast string[26] s[213514]) " and "(213699 call _cast string[26] t[213518]) " are incompatible.")
    }
    (213726 return s[213514])
  }
  function toNilableIfClassType[213734](arg arg[213732]:_any[178](?)) type : _unknown[51]
  {
    if(213747 call _cond_test(213739 call isNonNilableClassType arg[213732]))
    {
      (213742 return(213741 'to nilable class from type' arg[213732]))
    }
    {
      (213745 return arg[213732])
    }
  }
  function numBits[213760](arg t[213758]:_any[178](?)) param : _unknown[51] "no return value for void"
  {
    (213785 call compilerError "default-width 'bool' does not have a well-defined size")
  }
  where {
    (213764 call == t[213758] bool[10])
  }
  function numBits[213795](arg t[213793]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213805 return 8)
  }
  where {
    (213802 call == t[213793](213801 call bool[10] 8))
  }
  function numBits[213815](arg t[213813]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213825 return 16)
  }
  where {
    (213822 call == t[213813](213821 call bool[10] 16))
  }
  function numBits[213835](arg t[213833]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213845 return 32)
  }
  where {
    (213842 call == t[213833](213841 call bool[10] 32))
  }
  function numBits[213855](arg t[213853]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213865 return 64)
  }
  where {
    (213862 call == t[213853](213861 call bool[10] 64))
  }
  function numBits[213875](arg t[213873]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213885 return 8)
  }
  where {
    (213882 call == t[213873](213881 call int(64)[13] 8))
  }
  function numBits[213895](arg t[213893]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213905 return 16)
  }
  where {
    (213902 call == t[213893](213901 call int(64)[13] 16))
  }
  function numBits[213915](arg t[213913]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213925 return 32)
  }
  where {
    (213922 call == t[213913](213921 call int(64)[13] 32))
  }
  function numBits[213935](arg t[213933]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213945 return 64)
  }
  where {
    (213942 call == t[213933](213941 call int(64)[13] 64))
  }
  function numBits[213955](arg t[213953]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213965 return 8)
  }
  where {
    (213962 call == t[213953](213961 call uint(64)[115] 8))
  }
  function numBits[213975](arg t[213973]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (213985 return 16)
  }
  where {
    (213982 call == t[213973](213981 call uint(64)[115] 16))
  }
  function numBits[213995](arg t[213993]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214005 return 32)
  }
  where {
    (214002 call == t[213993](214001 call uint(64)[115] 32))
  }
  function numBits[214015](arg t[214013]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214025 return 64)
  }
  where {
    (214022 call == t[214013](214021 call uint(64)[115] 64))
  }
  function numBits[214035](arg t[214033]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214045 return 32)
  }
  where {
    (214042 call == t[214033](214041 call real(64)[16] 32))
  }
  function numBits[214055](arg t[214053]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214065 return 64)
  }
  where {
    (214062 call == t[214053](214061 call real(64)[16] 64))
  }
  function numBits[214075](arg t[214073]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214085 return 32)
  }
  where {
    (214082 call == t[214073](214081 call imag(64)[130] 32))
  }
  function numBits[214095](arg t[214093]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214105 return 64)
  }
  where {
    (214102 call == t[214093](214101 call imag(64)[130] 64))
  }
  function numBits[214115](arg t[214113]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214125 return 64)
  }
  where {
    (214122 call == t[214113](214121 call complex(128)[140] 64))
  }
  function numBits[214135](arg t[214133]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214145 return 128)
  }
  where {
    (214142 call == t[214133](214141 call complex(128)[140] 128))
  }
  unknown bitsPerByte[214152] "no doc" "param" 8
  (214155 'end of statement')
  function numBytes[214160](arg t[214158]:_any[178](?)) param : _unknown[51]
  {
    (214169 return(214167 call /(214165 call numBits t[214158]) 8))
  }
  function min[214178](arg t[214176]:_any[178](?)) param : _unknown[51]
  {
    (214188 return(214186 call _cast t[214176] 0))
  }
  where {
    (214183 call isBool t[214176])
  }
  function min[214198](arg t[214196]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214211 return(214209 call _cast t[214196] 128))
  }
  where {
    (214205 call == t[214196](214204 call int(64)[13] 8))
  }
  function min[214221](arg t[214219]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214236 return(214234 call _cast t[214219] 32768))
  }
  where {
    (214228 call == t[214219](214227 call int(64)[13] 16))
  }
  function min[214246](arg t[214244]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214261 return(214259 call _cast t[214244] 2147483648))
  }
  where {
    (214253 call == t[214244](214252 call int(64)[13] 32))
  }
  function min[214271](arg t[214269]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214286 return(214284 call _cast t[214269] 9223372036854775808))
  }
  where {
    (214278 call == t[214269](214277 call int(64)[13] 64))
  }
  function min[214296](arg t[214294]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214306 return(214304 call _cast t[214294] 0))
  }
  where {
    (214301 call isUint t[214294])
  }
  function min[214316](arg t[214314]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214342 return(214341 '_min' t[214314]))
  }
  where {
    (214321 call isFloatType t[214314])
  }
  function min[214352](arg t[214350]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214365] "param"(214363 call /(214361 call numBits t[214350]) 2)
    (214368 'end of statement')
    (214390 return(214388 call _cast t[214350](214385 call _build_tuple(214376 call min(214374 call real(64)[16] floatwidth[214365]))(214383 call min(214381 call real(64)[16] floatwidth[214365])))))
  }
  where {
    (214357 call isComplexType t[214350])
  }
  function max[214399](arg t[214397]:_any[178](?)) param : _unknown[51]
  {
    (214409 return(214407 call _cast t[214397] 1))
  }
  where {
    (214404 call isBool t[214397])
  }
  function max[214419](arg t[214417]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214432 return(214430 call _cast t[214417] 127))
  }
  where {
    (214426 call == t[214417](214425 call int(64)[13] 8))
  }
  function max[214442](arg t[214440]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214457 return(214455 call _cast t[214440] 32767))
  }
  where {
    (214449 call == t[214440](214448 call int(64)[13] 16))
  }
  function max[214467](arg t[214465]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214482 return(214480 call _cast t[214465] 2147483647))
  }
  where {
    (214474 call == t[214465](214473 call int(64)[13] 32))
  }
  function max[214492](arg t[214490]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214507 return(214505 call _cast t[214490] 9223372036854775807))
  }
  where {
    (214499 call == t[214490](214498 call int(64)[13] 64))
  }
  function max[214517](arg t[214515]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214532 return(214530 call _cast t[214515] 255))
  }
  where {
    (214524 call == t[214515](214523 call uint(64)[115] 8))
  }
  function max[214542](arg t[214540]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214557 return(214555 call _cast t[214540] 65535))
  }
  where {
    (214549 call == t[214540](214548 call uint(64)[115] 16))
  }
  function max[214567](arg t[214565]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214582 return(214580 call _cast t[214565] 4294967295))
  }
  where {
    (214574 call == t[214565](214573 call uint(64)[115] 32))
  }
  function max[214592](arg t[214590]:_any[178](?)) param : _unknown[51] "no doc"
  {
    (214607 return(214605 call _cast t[214590] 18446744073709551615))
  }
  where {
    (214599 call == t[214590](214598 call uint(64)[115] 64))
  }
  function max[214617](arg t[214615]:_any[178](?)) : _unknown[51] "no doc"
  {
    (214643 return(214642 '_max' t[214615]))
  }
  where {
    (214622 call isFloatType t[214615])
  }
  function max[214653](arg t[214651]:_any[178](?)) : _unknown[51] "no doc"
  {
    unknown floatwidth[214666] "param"(214664 call /(214662 call numBits t[214651]) 2)
    (214669 'end of statement')
    (214691 return(214689 call _cast t[214651](214686 call _build_tuple(214677 call max(214675 call real(64)[16] floatwidth[214666]))(214684 call max(214682 call real(64)[16] floatwidth[214666])))))
  }
  where {
    (214658 call isComplexType t[214651])
  }
  function chpl_enumerate[214702](arg t[214699] :
  enum[187](?)) : _unknown[51] "iterator fn" "no doc" "no return value for void"
  {
    const enumTuple[214708] "const"(214707 call chpl_enum_enumerate t[214699])
    (214711 'end of statement')
    {
      unknown _indexOfInterest[214730] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214731] "expr temp" "temp"
      (214740 'move' _iterator[214731](214738 call _getIterator(214751 call chpl_direct_range_iter 0(214745 call -(214747 call . enumTuple[214708] c"size") 1) 1)))
      Defer
      {
        {
          (214767 call _freeIterator _iterator[214731])
        }
      }
      { scopeless type
        (214756 'move' _indexOfInterest[214730](214753 call iteratorIndex _iterator[214731]))
      }
      ForLoop[214732]
      {
        unknown i[214760] "index var" "insert auto destroy"
        (214762 'move' i[214760] _indexOfInterest[214730])
        (214728 yield(214727 call enumTuple[214708] i[214760]))
        label _continueLabel[214735]
        _indexOfInterest[214730]
        _iterator[214731]
      }
      label _breakLabel[214736]
    }
  }
  function enum[187](?).these[214779](arg _mt[214784]:_MT[238], arg this[214781]:enum[187](?) :
  enum[187](?)) : _unknown[51] "iterator fn" "method" "no doc" "no return value for void"
  {
    {
      unknown _indexOfInterest[214794] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[214795] "expr temp" "temp"
      (214804 'move' _iterator[214795](214802 call _getIterator(214790 call chpl_enumerate this[214781])))
      Defer
      {
        {
          (214821 call _freeIterator _iterator[214795])
        }
      }
      { scopeless type
        (214810 'move' _indexOfInterest[214794](214807 call iteratorIndex _iterator[214795]))
      }
      ForLoop[214796]
      {
        unknown i[214814] "index var" "insert auto destroy"
        (214816 'move' i[214814] _indexOfInterest[214794])
        (214792 yield i[214814])
        label _continueLabel[214799]
        _indexOfInterest[214794]
        _iterator[214795]
      }
      label _breakLabel[214800]
    }
  }
  function enum[187](?).first[214834](arg _mt[214839]:_MT[238], arg this[214836]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214846 return(214845 call chpl__orderToEnum 0 this[214836]))
  }
  function enum[187](?).last[214854](arg _mt[214859]:_MT[238], arg this[214856]:enum[187](?) :
  enum[187](?)) : _unknown[51] "method" "no doc" "no parens"
  {
    (214872 return(214871 call chpl__orderToEnum(214867 call -(214863 call . this[214856] c"size") 1) this[214856]))
  }
  function chpl_enum_minbits[214883](arg t[214880] :
  enum[187](?)) param : _unknown[51] "private"
  {
    if(214901 call _cond_test(214896 call <=(214886 call . t[214880] c"size")(214895 call max(214893 call uint(64)[115] 8))))
    {
      (214899 return 8)
    }
    if(214923 call _cond_test(214918 call <=(214908 call . t[214880] c"size")(214917 call max(214915 call uint(64)[115] 16))))
    {
      (214921 return 16)
    }
    if(214944 call _cond_test(214939 call <=(214929 call . t[214880] c"size")(214938 call max(214936 call uint(64)[115] 32))))
    {
      (214942 return 32)
    }
    (214950 return 64)
  }
  function chpl_enum_mintype[214960](arg t[214957] :
  enum[187](?)) type : _unknown[51] "no doc"
  {
    (214969 return(214968 call uint(64)[115](214966 call chpl_enum_minbits t[214957])))
  }
  function integral[199](?).safeCast[214981](arg _mt[214986]:_MT[238], arg this[214983]:integral[199](?) :
  integral[199](?), arg T[214978] :
  integral[199](?)) : _unknown[51] "inline" "method"
  {
    if(215161 call _cond_test(214994 call && 1(214993 call isUintType T[214978])))
    {
      if(215067 call _cond_test(215000 call isIntType(214998 'typeof' this[214983])))
      {
        if(215061 call _cond_test(215003 call < this[214983] 0))
        {
          (215059 call safeCastCheckHalt module=[255] HaltWrappers[210016](215056 call +(215050 call +(215031 call + "casting "(215029 call _cast string[26](215027 'typeof' this[214983]))) " less than 0 to ")(215054 call _cast string[26] T[214978])))
          (363090 'referenced modules list' HaltWrappers[210016])
        }
      }
      if(215157 call _cond_test(215087 call >(215078 call _cast uint(64)[115](215076 call max(215074 'typeof' this[214983])))(215085 call _cast uint(64)[115](215083 call max T[214978]))))
      {
        if(215151 call _cond_test(215100 call >(215091 call _cast uint(64)[115] this[214983])(215098 call _cast uint(64)[115](215096 call max T[214978]))))
        {
          (215149 call safeCastCheckHalt module=[255] HaltWrappers[210016](215146 call +(215140 call +(215137 call +(215131 call +(215112 call + "casting "(215110 call _cast string[26](215108 'typeof' this[214983]))) " with a value greater than the maximum of ")(215135 call _cast string[26] T[214978])) " to ")(215144 call _cast string[26] T[214978])))
          (363096 'referenced modules list' HaltWrappers[210016])
        }
      }
    }
    if(215408 call _cond_test(215171 call && 1(215170 call isIntType T[214978])))
    {
      if(215304 call _cond_test(215188 call >(215179 call _cast uint(64)[115](215177 call max(215175 'typeof' this[214983])))(215186 call _cast uint(64)[115](215184 call max T[214978]))))
      {
        if(215299 call _cond_test(215194 call isUintType(215192 'typeof' this[214983])))
        {
          if(215241 call _cond_test(215206 call >(215197 call _cast uint(64)[115] this[214983])(215204 call _cast uint(64)[115](215202 call max T[214978]))))
          {
            (215239 call safeCastCheckHalt module=[255] HaltWrappers[210016](215236 call +(215230 call +(215227 call +(215221 call +(215218 call + "casting "(215216 call _cast string[26](215214 'typeof' this[214983]))) " with a value greater than the maximum of ")(215225 call _cast string[26] T[214978])) " to ")(215234 call _cast string[26] T[214978])))
            (363102 'referenced modules list' HaltWrappers[210016])
          }
        }
        {
          if(215293 call _cond_test(215258 call >(215249 call _cast int(64)[13] this[214983])(215256 call _cast int(64)[13](215254 call max T[214978]))))
          {
            (215291 call safeCastCheckHalt module=[255] HaltWrappers[210016](215288 call +(215282 call +(215279 call +(215273 call +(215270 call + "casting "(215268 call _cast string[26](215266 'typeof' this[214983]))) " with a value greater than the maximum of ")(215277 call _cast string[26] T[214978])) " to ")(215286 call _cast string[26] T[214978])))
            (363108 'referenced modules list' HaltWrappers[210016])
          }
        }
      }
      if(215404 call _cond_test(215313 call isIntType(215311 'typeof' this[214983])))
      {
        if(215399 call _cond_test(215329 call <(215320 call _cast int(64)[13](215318 call min(215316 'typeof' this[214983])))(215327 call _cast int(64)[13](215325 call min T[214978]))))
        {
          if(215393 call _cond_test(215342 call <(215333 call _cast int(64)[13] this[214983])(215340 call _cast int(64)[13](215338 call min T[214978]))))
          {
            (215391 call safeCastCheckHalt module=[255] HaltWrappers[210016](215388 call +(215382 call +(215379 call +(215373 call +(215354 call + "casting "(215352 call _cast string[26](215350 'typeof' this[214983]))) " with a value less than the minimum of ")(215377 call _cast string[26] T[214978])) " to ")(215386 call _cast string[26] T[214978])))
            (363114 'referenced modules list' HaltWrappers[210016])
          }
        }
      }
    }
    (215416 return(215414 call _cast T[214978] this[214983]))
  }
  { scopeless type
    T[214978]
  }
  function integral[199](?).safeCast[215426](arg _mt[215431]:_MT[238], arg this[215428]:integral[199](?) :
  integral[199](?), arg T[215424]:_any[178](?)) : _unknown[51] "method" "no doc" "no return value for void"
  {
    (215452 call compilerError "safeCast is only supported between integral types")
  }
  function _prod_id[215461](arg t[215459]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215467 return(215465 call _cast t[215459] 1))
  }
  function _land_id[215476](arg t[215474]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215479 return 1)
  }
  function _lor_id[215488](arg t[215486]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215491 return 0)
  }
  function _lxor_id[215500](arg t[215498]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215503 return 0)
  }
  function _band_id[215512](arg t[215510]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    if(215834 call _cond_test(215517 call isBoolType t[215510]))
    {
      (215522 return(215520 call _cast t[215510] 1))
    }
    {
      if(215828 call _cond_test(215527 call isIntType t[215510]))
      {
        (215534 return(215532 call -(215530 call _cast t[215510] 1)))
      }
      {
        if(215822 call _cond_test(215539 call isUintType t[215510]))
        {
          (215544 return(215543 call max t[215510]))
        }
        {
          if(215816 call _cond_test(215551 call == t[215510](215550 call real(64)[16] 32)))
          {
            (215563 return(215561 call _cast t[215510](215559 call max(215557 call uint(64)[115] 32))))
          }
          {
            if(215810 call _cond_test(215570 call == t[215510](215569 call real(64)[16] 64)))
            {
              (215582 return(215580 call _cast t[215510](215578 call max(215576 call uint(64)[115] 64))))
            }
            {
              if(215804 call _cond_test(215589 call == t[215510](215588 call imag(64)[130] 32)))
              {
                (215601 return(215599 call _cast t[215510](215597 call max(215595 call uint(64)[115] 32))))
              }
              {
                if(215798 call _cond_test(215608 call == t[215510](215607 call imag(64)[130] 64)))
                {
                  (215620 return(215618 call _cast t[215510](215616 call max(215614 call uint(64)[115] 64))))
                }
                {
                  if(215792 call _cond_test(215627 call == t[215510](215626 call complex(128)[140] 64)))
                  {
                    (215661 return(215659 call _cast t[215510](215656 call _build_tuple(215640 call _cast(215639 call real(64)[16] 32)(215635 call max(215633 call uint(64)[115] 32)))(215653 call _cast(215652 call real(64)[16] 32)(215648 call max(215646 call uint(64)[115] 32))))))
                  }
                  {
                    if(215786 call _cond_test(215668 call == t[215510](215667 call complex(128)[140] 128)))
                    {
                      (215702 return(215700 call _cast t[215510](215697 call _build_tuple(215681 call _cast(215680 call real(64)[16] 64)(215676 call max(215674 call uint(64)[115] 64)))(215694 call _cast(215693 call real(64)[16] 64)(215689 call max(215687 call uint(64)[115] 64))))))
                    }
                    {
                      if(215781 call _cond_test(215707 call isArrayType t[215510]))
                      {
                        unknown result[215709] t[215510]
                        (215712 'end of statement')
                        unknown elT[215718] "type variable"(215715 call . result[215709] c"eltType")
                        Forall {
                          induction variables:
                            
                            unknown elm[215732] "index var" "insert auto destroy"
                          iterated expressions:
                            result[215709]
                          shadow variables:
                          other variables
                            forall body
                          {
                            (215728 call = elm[215732](215727 call _band_id elT[215718]))
                          }
                        }
                        (215737 return result[215709])
                      }
                      {
                        (215779 call compilerError "Identity value for & over "(215760 call _cast string[26] t[215510]) "is not available")
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  function _bor_id[215847](arg t[215845]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215853 return(215851 call _cast t[215845] 0))
  }
  function _bxor_id[215862](arg t[215860]:_any[178](?)) : _unknown[51] "inline" "no doc"
  {
    (215868 return(215866 call _cast t[215860] 0))
  }
  (355323 'used modules list'(353038 'use' ChapelStandard[20267])(210746 'import' HaltWrappers[210016]))
}