AST dump for FormattedIO after pass readExternC.
Module use list: 

{
  (353054 'use' ChapelStandard)
  (251291 'use' IO)
  (251295 'use' SysCTypes)
  (251298 'use' SysBasic)
  (251301 'use' SysError)
  function _toIntegral[251310](arg x[251307] :
  unknown t[251305]) : _unknown[51] "inline" "private"
  {
    (251321 return(251319 call _build_tuple x 1))
  }
  where {
    (251315 call isIntegralType t)
  }
  function _toIntegral[251334](arg x[251331] :
  unknown t[251329]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251353](251351 call _build_tuple int[13] bool[10])
      (251356 'end of statement')
    }
    if(251383 call _cond_test(251361 call isAbstractEnumType t))
    {
      { scopeless
        (251368 call = ret(251366 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251380 call = ret(251378 call _build_tuple(251374 call _cast int[13] x) 1))
      }
    }
    (251390 return ret)
  }
  where {
    (251346 call &&(251339 call _isIoPrimitiveType t)(251344 call !(251343 call isIntegralType t)))
  }
  function _toIntegral[251402](arg x[251399] :
  unknown t[251397]) : _unknown[51] "inline" "private"
  {
    (251415 return(251413 call _build_tuple 0 0))
  }
  where {
    (251408 call !(251407 call _isIoPrimitiveType t))
  }
  function _toSigned[251428](arg x[251425] :
  unknown t[251423]) : _unknown[51] "inline" "private"
  {
    (251439 return(251437 call _build_tuple x 1))
  }
  where {
    (251433 call isIntType t)
  }
  function _toSigned[251454](arg x[251451] :
  (251450 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (251467 return(251465 call _build_tuple(251461 call _cast(251460 call int[13] 8) x) 1))
  }
  function _toSigned[251481](arg x[251478] :
  (251477 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (251494 return(251492 call _build_tuple(251488 call _cast(251487 call int[13] 16) x) 1))
  }
  function _toSigned[251508](arg x[251505] :
  (251504 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (251521 return(251519 call _build_tuple(251515 call _cast(251514 call int[13] 32) x) 1))
  }
  function _toSigned[251535](arg x[251532] :
  (251531 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (251548 return(251546 call _build_tuple(251542 call _cast(251541 call int[13] 64) x) 1))
  }
  function _toSigned[251560](arg x[251557] :
  unknown t[251555]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251579](251577 call _build_tuple int[13] bool[10])
      (251582 'end of statement')
    }
    if(251609 call _cond_test(251587 call isAbstractEnumType t))
    {
      { scopeless
        (251594 call = ret(251592 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251606 call = ret(251604 call _build_tuple(251600 call _cast int[13] x) 1))
      }
    }
    (251616 return ret)
  }
  where {
    (251572 call &&(251565 call _isIoPrimitiveType t)(251570 call !(251569 call isIntegralType t)))
  }
  function _toSigned[251628](arg x[251625] :
  unknown t[251623]) : _unknown[51] "inline" "private"
  {
    (251644 return(251642 call _build_tuple(251638 call _cast int[13] 0) 0))
  }
  where {
    (251634 call !(251633 call _isIoPrimitiveType t))
  }
  function _toUnsigned[251657](arg x[251654] :
  unknown t[251652]) : _unknown[51] "inline" "private"
  {
    (251668 return(251666 call _build_tuple x 1))
  }
  where {
    (251662 call isUintType t)
  }
  function _toUnsigned[251683](arg x[251680] :
  (251679 call int[13] 8)) : _unknown[51] "inline" "private"
  {
    (251696 return(251694 call _build_tuple(251690 call _cast(251689 call uint[115] 8) x) 1))
  }
  function _toUnsigned[251710](arg x[251707] :
  (251706 call int[13] 16)) : _unknown[51] "inline" "private"
  {
    (251723 return(251721 call _build_tuple(251717 call _cast(251716 call uint[115] 16) x) 1))
  }
  function _toUnsigned[251737](arg x[251734] :
  (251733 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (251750 return(251748 call _build_tuple(251744 call _cast(251743 call uint[115] 32) x) 1))
  }
  function _toUnsigned[251764](arg x[251761] :
  (251760 call int[13] 64)) : _unknown[51] "inline" "private"
  {
    (251777 return(251775 call _build_tuple(251771 call _cast(251770 call uint[115] 64) x) 1))
  }
  function _toUnsigned[251789](arg x[251786] :
  unknown t[251784]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251808](251806 call _build_tuple uint[115] bool[10])
      (251811 'end of statement')
    }
    if(251841 call _cond_test(251816 call isAbstractEnumType t))
    {
      { scopeless
        (251826 call = ret(251824 call _build_tuple(251820 call _cast uint[115] 0) 0))
      }
    }
    {
      { scopeless
        (251838 call = ret(251836 call _build_tuple(251832 call _cast uint[115] x) 1))
      }
    }
    (251848 return ret)
  }
  where {
    (251801 call &&(251794 call _isIoPrimitiveType t)(251799 call !(251798 call isIntegralType t)))
  }
  function _toUnsigned[251860](arg x[251857] :
  unknown t[251855]) : _unknown[51] "inline" "private"
  {
    (251876 return(251874 call _build_tuple(251870 call _cast uint[115] 0) 0))
  }
  where {
    (251866 call !(251865 call _isIoPrimitiveType t))
  }
  function _toReal[251889](arg x[251886] :
  unknown t[251884]) : _unknown[51] "inline" "private"
  {
    (251900 return(251898 call _build_tuple x 1))
  }
  where {
    (251894 call isRealType t)
  }
  function _toReal[251913](arg x[251910] :
  unknown t[251908]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251932](251930 call _build_tuple real[16] bool[10])
      (251935 'end of statement')
    }
    if(251962 call _cond_test(251940 call isAbstractEnumType t))
    {
      { scopeless
        (251947 call = ret(251945 call _build_tuple 0.0 0))
      }
    }
    {
      { scopeless
        (251959 call = ret(251957 call _build_tuple(251953 call _cast real[16] x) 1))
      }
    }
    (251969 return ret)
  }
  where {
    (251925 call &&(251918 call _isIoPrimitiveType t)(251923 call !(251922 call isRealType t)))
  }
  function _toReal[251981](arg x[251978] :
  unknown t[251976]) : _unknown[51] "inline" "private"
  {
    (251994 return(251992 call _build_tuple 0.0 0))
  }
  where {
    (251987 call !(251986 call _isIoPrimitiveType t))
  }
  function _toImag[252007](arg x[252004] :
  unknown t[252002]) : _unknown[51] "inline" "private"
  {
    (252018 return(252016 call _build_tuple x 1))
  }
  where {
    (252012 call isImagType t)
  }
  function _toImag[252031](arg x[252028] :
  unknown t[252026]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252050](252048 call _build_tuple imag[130] bool[10])
      (252053 'end of statement')
    }
    if(252080 call _cond_test(252058 call isAbstractEnumType t))
    {
      { scopeless
        (252065 call = ret(252063 call _build_tuple 0.0i 0))
      }
    }
    {
      { scopeless
        (252077 call = ret(252075 call _build_tuple(252071 call _cast imag[130] x) 1))
      }
    }
    (252087 return ret)
  }
  where {
    (252043 call &&(252036 call _isIoPrimitiveType t)(252041 call !(252040 call isImagType t)))
  }
  function _toImag[252099](arg x[252096] :
  unknown t[252094]) : _unknown[51] "inline" "private"
  {
    (252112 return(252110 call _build_tuple 0.0i 0))
  }
  where {
    (252105 call !(252104 call _isIoPrimitiveType t))
  }
  function _toComplex[252125](arg x[252122] :
  unknown t[252120]) : _unknown[51] "inline" "private"
  {
    (252136 return(252134 call _build_tuple x 1))
  }
  where {
    (252130 call isComplexType t)
  }
  function _toComplex[252149](arg x[252146] :
  unknown t[252144]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252168](252166 call _build_tuple complex[140] bool[10])
      (252171 'end of statement')
    }
    if(252201 call _cond_test(252176 call isAbstractEnumType t))
    {
      { scopeless
        (252186 call = ret(252184 call _build_tuple(252180 call + 0.0 0.0i) 0))
      }
    }
    {
      { scopeless
        (252198 call = ret(252196 call _build_tuple(252192 call _cast complex[140] x) 1))
      }
    }
    (252208 return ret)
  }
  where {
    (252161 call &&(252154 call _isIoPrimitiveType t)(252159 call !(252158 call isComplexType t)))
  }
  function _toComplex[252220](arg x[252217] :
  unknown t[252215]) : _unknown[51] "inline" "private"
  {
    (252236 return(252234 call _build_tuple(252230 call + 0.0 0.0i) 0))
  }
  where {
    (252226 call !(252225 call _isIoPrimitiveType t))
  }
  function _toRealOrComplex[252249](arg x[252246] :
  unknown t[252244]) : _unknown[51] "inline" "private"
  {
    (252260 return(252258 call _build_tuple x 1))
  }
  where {
    (252254 call isComplexType t)
  }
  function _toRealOrComplex[252273](arg x[252270] :
  unknown t[252268]) : _unknown[51] "inline" "private"
  {
    (252284 return(252282 call _build_tuple x 1))
  }
  where {
    (252278 call isFloatType t)
  }
  function _toRealOrComplex[252297](arg x[252294] :
  unknown t[252292]) : _unknown[51] "inline" "private"
  {
    (252327 return(252325 call _build_tuple(252321 call _cast real[16] x) 1))
  }
  where {
    (252317 call &&(252309 call &&(252302 call _isIoPrimitiveType t)(252307 call !(252306 call isComplexType t)))(252315 call !(252314 call isFloatType t)))
  }
  function _toRealOrComplex[252340](arg x[252337] :
  unknown t[252335]) : _unknown[51] "inline" "private"
  {
    (252353 return(252351 call _build_tuple 0.0 0))
  }
  where {
    (252346 call !(252345 call _isIoPrimitiveType t))
  }
  function _toNumeric[252366](arg x[252363] :
  unknown t[252361]) : _unknown[51] "inline" "private"
  {
    (252377 return(252375 call _build_tuple x 1))
  }
  where {
    (252371 call isNumericType t)
  }
  function _toNumeric[252390](arg x[252387] :
  unknown t[252385]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252409](252407 call _build_tuple int[13] bool[10])
      (252412 'end of statement')
    }
    if(252439 call _cond_test(252417 call isAbstractEnumType t))
    {
      { scopeless
        (252424 call = ret(252422 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (252436 call = ret(252434 call _build_tuple(252430 call _cast int[13] x) 1))
      }
    }
    (252446 return ret)
  }
  where {
    (252402 call &&(252395 call _isIoPrimitiveType t)(252400 call !(252399 call isNumericType t)))
  }
  function _toNumeric[252458](arg x[252455] :
  unknown t[252453]) : _unknown[51] "inline" "private"
  {
    (252471 return(252469 call _build_tuple 0 0))
  }
  where {
    (252464 call !(252463 call _isIoPrimitiveType t))
  }
  function _toBytes[252483](arg x[252480] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252490 return(252488 call _build_tuple x 1))
  }
  function _toBytes[252501](arg x[252498] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252511 return(252509 call _build_tuple(252505 call _cast bytes[24] x) 1))
  }
  function _toBytes[252523](arg x[252520] :
  unknown t[252518]) : _unknown[51] "inline" "private"
  {
    (252549 return(252547 call _build_tuple(252543 call _cast bytes[24] "") 0))
  }
  function _toString[252560](arg x[252557] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252567 return(252565 call _build_tuple x 1))
  }
  function _toString[252578](arg x[252575] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252601 return(252599 call _build_tuple "" 0))
  }
  function _toString[252613](arg x[252610] :
  unknown t[252608]) : _unknown[51] "inline" "private"
  {
    (252639 return(252637 call _build_tuple(252633 call _cast string[26] x) 1))
  }
  where {
    (252629 call &&(252623 call &&(252618 call _isIoPrimitiveType t)(252621 call != t bytes[24]))(252627 call != t string[26]))
  }
  function _toString[252652](arg x[252649] :
  unknown t[252647]) : _unknown[51] "inline" "private"
  {
    (252681 return(252679 call _build_tuple "" 0))
  }
  where {
    (252658 call !(252657 call _isIoPrimitiveType t))
  }
  function _toChar[252694](arg x[252691] :
  unknown t[252689]) : _unknown[51] "inline" "private"
  {
    (252711 return(252709 call _build_tuple(252705 call _cast(252704 call int[13] 32) x) 1))
  }
  where {
    (252699 call isIntegralType t)
  }
  function _toChar[252724](arg x[252721] :
  unknown t[252719]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown chr[252734](252733 call int[13] 32)
      (252737 'end of statement')
    }
    { scopeless
      unknown nbytes[252740] c_int
      (252743 'end of statement')
    }
    { scopeless
      unknown local_x[252750](252749 call(252745 call . x c"localize"))
      (252753 'end of statement')
    }
    (252771 call qio_decode_char_buf chr nbytes(252763 call(252759 call . local_x c"c_str"))(252769 call _cast ssize_t(252765 call . local_x c"numBytes")))
    (252778 return(252776 call _build_tuple chr 1))
  }
  where {
    (252728 call == t string[26])
  }
  function _toChar[252790](arg x[252787] :
  unknown t[252785]) : _unknown[51] "inline" "private"
  {
    (252815 return(252813 call _build_tuple(252809 call _cast(252808 call int[13] 32) 0) 0))
  }
  where {
    (252802 call !(252800 call ||(252794 call == t string[26])(252799 call isIntegralType t)))
  }
  function _setIfPrimitive[252828](ref arg lhs[252825] :
  unknown t[252823], arg rhs[252832] :
  unknown t2[252830], arg argi[252836] :
  int[13]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown empty[252851] t2
      (252854 'end of statement')
    }
    if(252872 call _cond_test(252858 call == rhs empty))
    {
      (252862 call = lhs 0)
    }
    {
      (252868 call = lhs 1)
    }
    (252877 return ENOERR)
  }
  where {
    (252848 call &&(252842 call == t bool[10])(252847 call _isIoPrimitiveType t2))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[252890](ref arg lhs[252887] :
  unknown t[252885], arg rhs[252894] :
  unknown t2[252892], arg argi[252898] :
  int[13]) : _unknown[51] "inline" "private"
  {
    Try
    {
      {
        if(253021 call _cond_test(252915 call isAbstractEnumType t))
        {
          if(252933 call _cond_test(252919 call isStringType t2))
          {
            (252925 call = lhs(252923 call _cast t rhs))
          }
          {
            (252930 return ERANGE)
          }
        }
        {
          { scopeless
            if(253017 call _cond_test(252941 call isEnumType t))
            {
              if(252973 call _cond_test(252950 call ||(252945 call isIntType t2)(252949 call isStringType t2)))
              {
                (252957 call = lhs(252955 call _cast t rhs))
              }
              {
                (252969 call = lhs(252967 call _cast t(252964 call _cast int[13] rhs)))
              }
            }
            {
              if(253012 call _cond_test(252986 call &&(252981 call isBytesType t2)(252985 call isStringType t)))
              {
                (252999 call = lhs(252998 call(252990 call . rhs c"decode")(252994 call . decodePolicy c"strict")))
              }
              {
                (253008 call = lhs(253006 call _cast t rhs))
              }
            }
          }
        }
      }
    }
    Catch
    {
      (253029 return ERANGE)
    }
    (253037 return ENOERR)
  }
  where {
    (252910 call &&(252904 call != t bool[10])(252909 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[253050](ref arg lhs[253047] :
  unknown t[253045], arg rhs[253052]:_any[178](?), arg argi[253055] :
  int[13]) : _unknown[51] "inline" "private"
  {
    (253069 return(253068 call qio_format_error_arg_mismatch argi))
  }
  where {
    (253063 call !(253062 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfChar[253083](ref arg lhs[253080] :
  unknown t[253078], arg rhs[253089] :
  (253088 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253105 call = lhs(253103 call _cast string[26](253097 'new'(253101 call ioChar rhs))))
  }
  where {
    (253094 call == t string[26])
  }
  function _setIfChar[253119](ref arg lhs[253116] :
  unknown t[253114], arg rhs[253125] :
  (253124 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253137 call = lhs(253135 call _cast t rhs))
  }
  where {
    (253131 call isIntegralType t)
  }
  function _setIfChar[253151](ref arg lhs[253148] :
  unknown t[253146], arg rhs[253157] :
  (253156 call int[13] 32)) : _unknown[51] "inline" "private"
  {
  }
  where {
    (253170 call !(253168 call ||(253162 call == t string[26])(253167 call isIntegralType t)))
  }
  function _toRegexp[253183](arg x[253180] :
  unknown t[253178]) : _unknown[51] "inline" "private"
  {
    (253198 return(253196 call _build_tuple x 1))
  }
  where {
    (253192 call isSubtype t(253191 call regexp ?[260]))
  }
  function _toRegexp[253211](arg x[253208] :
  unknown t[253206]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown r[253217](253216 call regexp string[26])
      (253220 'end of statement')
    }
    (253227 return(253225 call _build_tuple r 0))
  }
  type _channel_regexp_info[253619] unknown hasRegexp[253233] 0 unknown matchedRegexp[253238] 0 unknown releaseRegexp[253243] 0 unknown theRegexp[253250](253249 call qio_regexp_null) unknown matches[253259] nil[44](253257 call _ddata qio_regexp_string_piece_t) unknown capArr[253268] nil[44](253266 call _ddata bytes[24]) unknown capturei[253273] int[13] unknown ncaptures[253278] int[13] function _channel_regexp_info[253619].clear[253284](arg _mt[253623]:_MT[238], arg this[253621]:_channel_regexp_info[253619]) : _unknown[51] "method" "primary method"
  {
    if(253293 call _cond_test releaseRegexp)
    {
      (253290 call qio_regexp_release theRegexp)
    }
    (253302 call = theRegexp(253301 call qio_regexp_null))
    (253307 call = hasRegexp 0)
    (253312 call = matchedRegexp 0)
    (253317 call = releaseRegexp 0)
    if(253330 call _cond_test matches)
    {
      { scopeless
        (253328 call _ddata_free matches(253326 call + ncaptures 1))
      }
    }
    {
      unknown _indexOfInterest[253365] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[253366] "expr temp" "temp"
      (253375 'move' _iterator[253366](253373 call _getIterator(253382 call chpl_direct_counted_range_iter 0 ncaptures)))
      Defer
      {
        {
          (253398 call _freeIterator _iterator[253366])
        }
      }
      { scopeless type
        (253387 'move' _indexOfInterest[253365](253384 call iteratorIndex _iterator[253366]))
      }
      ForLoop[253367]
      {
        unknown i[253391] "index var" "insert auto destroy"
        (253393 'move' i[253391] _indexOfInterest[253365])
        { scopeless
          (253362 call =(253345 call capArr i) b"")
        }
        label _continueLabel[253370]
        _indexOfInterest[253365]
        _iterator[253366]
      }
      label _breakLabel[253371]
    }
    if(253412 call _cond_test capArr)
    {
      { scopeless
        (253410 call _ddata_free capArr ncaptures)
      }
    }
  } function _channel_regexp_info[253619].allocate_captures[253421](arg _mt[253627]:_MT[238], arg this[253625]:_channel_regexp_info[253619]) : _unknown[51] "method" "primary method"
  {
    (253428 call = ncaptures(253427 call qio_regexp_get_ncaptures theRegexp))
    (253441 call = matches(253440 call _ddata_allocate qio_regexp_string_piece_t(253438 call + ncaptures 1)))
    (253450 call = capArr(253449 call _ddata_allocate bytes[24] ncaptures))
    (253455 call = capturei 0)
  } function _channel_regexp_info[253619].deinit[253462](arg _mt[253631]:_MT[238], arg this[253629]:_channel_regexp_info[253619]) : _unknown[51] "destructor" "method" "primary method"
  {
    (253466 call clear)
  } function _channel_regexp_info[253619].writeThis[253475](arg _mt[253635]:_MT[238], arg this[253633]:_channel_regexp_info[253619], arg f[253473]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides"
  {
    (253501 call <~> f(253499 call + "{hasRegexp = "(253497 call _cast string[26] hasRegexp)))
    (253529 call <~> f(253527 call + ", matchedRegexp = "(253525 call _cast string[26] matchedRegexp)))
    (253556 call <~> f(253554 call + ", releaseRegexp = "(253552 call _cast string[26] releaseRegexp)))
    (253583 call <~> f(253581 call + ", ... capturei = "(253579 call _cast string[26] capturei)))
    (253613 call <~> f(253611 call +(253608 call + ", ncaptures = "(253606 call _cast string[26] ncaptures)) "}"))
  }
  function _unknown[51]._match_regexp_if_needed[253645](arg _mt[253667]:_MT[238], arg this[253664] :
  channel, arg cur[253642] :
  size_t, arg len[253648] :
  size_t, ref arg error[253652] :
  syserr, ref arg style[253656] :
  iostyle, arg r[253661] :
  (253660 'to unmanaged class from unknown' _channel_regexp_info)) : _unknown[51] "method" "no doc"
  {
    if(254068 call _cond_test(253677 call qio_regexp_ok(253673 call . r c"theRegexp")))
    {
      if(253686 call _cond_test(253681 call . r c"matchedRegexp"))
      {
        { scopeless
          (253684 return)
        }
      }
      (253697 call =(253693 call . r c"matchedRegexp") 1)
      (253707 call(253703 call . r c"allocate_captures"))
      { scopeless
        unknown ncaps[253715](253712 call . r c"ncaptures")
        (253718 'end of statement')
      }
      { scopeless
        unknown nm[253723](253721 call + ncaps 1)
        (253726 'end of statement')
      }
      { scopeless
        unknown maxlen[253737](253734 call . style c"max_width_characters")(253730 call int[13] 64)
        (253740 'end of statement')
      }
      { scopeless
        unknown can_discard[253745](253743 call == cur len)
        (253748 'end of statement')
      }
      if(253770 call _cond_test(253757 call == maxlen(253756 call max(253754 call uint[115] 32))))
      {
        { scopeless
          (253767 call = maxlen(253766 call max(253764 call int[13] 64)))
        }
      }
      { scopeless
        unknown before_match[253779](253778 call qio_channel_offset_unlocked _channel_internal)
        (253782 'end of statement')
      }
      (253805 call = error(253804 call qio_regexp_channel_match(253786 call . r c"theRegexp") 0 _channel_internal maxlen QIO_REGEXP_ANCHOR_START can_discard 1 0(253800 call . r c"matches") nm))
      { scopeless
        unknown after_match[253812](253811 call qio_channel_offset_unlocked _channel_internal)
        (253815 'end of statement')
      }
      if(254054 call _cond_test(253817 call ! error))
      {
        {
          unknown _indexOfInterest[253868] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253869] "expr temp" "temp"
          (253878 'move' _iterator[253869](253876 call _getIterator(253885 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (253901 call _freeIterator _iterator[253869])
            }
          }
          { scopeless type
            (253890 'move' _indexOfInterest[253868](253887 call iteratorIndex _iterator[253869]))
          }
          ForLoop[253870]
          {
            unknown j[253894] "index var" "insert auto destroy"
            (253896 'move' j[253894] _indexOfInterest[253868])
            {
              { scopeless
                unknown m[253839](253838 call _to_reMatch(253836 call(253828 call . r c"matches")(253833 call + 1 j)))
                (253842 'end of statement')
              }
              (253857 call _extractMatch m(253855 call(253850 call . r c"capArr") j) error)
              if(253863 call _cond_test error)
              {
                { scopeless
                  break nil[44]
                }
              }
            }
            label _continueLabel[253873]
            _indexOfInterest[253868]
            _iterator[253869]
          }
          label _breakLabel[253874]
        }
        { scopeless
          unknown cur[253913](253912 call qio_channel_offset_unlocked _channel_internal)
          (253916 'end of statement')
        }
        { scopeless
          unknown target[253944](253942 call _cast int[13](253939 call +(253924 call .(253923 call(253918 call . r c"matches") 0) c"offset")(253936 call .(253933 call(253928 call . r c"matches") 0) c"len")))
          (253947 'end of statement')
        }
        (253958 call = error(253957 call qio_channel_advance 0 _channel_internal(253955 call - target cur)))
      }
      {
        {
          unknown _indexOfInterest[253995] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253996] "expr temp" "temp"
          (254005 'move' _iterator[253996](254003 call _getIterator(254012 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (254028 call _freeIterator _iterator[253996])
            }
          }
          { scopeless type
            (254017 'move' _indexOfInterest[253995](254014 call iteratorIndex _iterator[253996]))
          }
          ForLoop[253997]
          {
            unknown j[254021] "index var" "insert auto destroy"
            (254023 'move' j[254021] _indexOfInterest[253995])
            {
              (253991 call =(253974 call(253969 call . r c"capArr") j) b"")
            }
            label _continueLabel[254000]
            _indexOfInterest[253995]
            _iterator[253996]
          }
          label _breakLabel[254001]
        }
        { scopeless
          unknown cur[254040](254039 call qio_channel_offset_unlocked _channel_internal)
          (254043 'end of statement')
        }
        (254052 call qio_channel_advance 0 _channel_internal(254050 call - before_match cur))
      }
    }
    {
      (254062 call = error(254061 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function _unknown[51]._format_reader[254083](arg _mt[254122]:_MT[238], arg this[254119] :
  channel, arg fmtStr[254080] :
  unknown fmtType[254078], ref arg cur[254086] :
  size_t, arg len[254090] :
  size_t, ref arg error[254094] :
  syserr, ref arg conv[254098] :
  qio_conv_t, ref arg gotConv[254102] :
  bool[10], ref arg style[254106] :
  iostyle, ref arg r[254112] :
  (254111 'to unmanaged class from unknown'(254110 'to nilable class from type' _channel_regexp_info)), arg isReadf[254116] :
  bool[10]) : _unknown[51] "method" "no doc"
  {
    if(254140 call _cond_test(254126 call != r nil[44]))
    {
      { scopeless
        (254137 call =(254133 call .(254129 call postfix! r) c"hasRegexp") 0)
      }
    }
    if(254671 call _cond_test(254147 call ! error))
    {
      { scopeless
        unknown fmt[254160](254159 call(254155 call .(254154 call(254150 call . fmtStr c"localize")) c"c_str"))
        (254163 'end of statement')
      }
      {
        unknown tmp[254644] "temp"
        (254668 'move' tmp[254644](254663 call _cond_test(254665 call < cur len)))
        WhileDo[254649]
        {
          {
            (254171 call = gotConv 0)
            if(254179 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            { scopeless
              unknown end[254188](254187 call uint[115] 64)
              (254191 'end of statement')
            }
            (254202 call = error(254201 call qio_conv_parse fmt cur end isReadf conv style))
            if(254207 call _cond_test error)
            {
            }
            (254216 call = cur(254214 call _cast size_t end))
            if(254223 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            if(254639 call _cond_test(254235 call ==(254231 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL))
            {
              if(254408 call _cond_test isReadf)
              {
                if(254381 call _cond_test(254245 call ==(254241 call . conv c"literal_is_whitespace") 2))
                {
                  { scopeless
                    unknown offsetA[254251](254250 call qio_channel_offset_unlocked _channel_internal)
                    (254254 'end of statement')
                  }
                  (254263 call = error(254262 call qio_channel_skip_past_newline 0 _channel_internal 1))
                  { scopeless
                    unknown offsetB[254270](254269 call qio_channel_offset_unlocked _channel_internal)
                    (254273 'end of statement')
                  }
                  if(254289 call _cond_test(254281 call &&(254275 call ! error)(254279 call == offsetA offsetB)))
                  {
                    (254285 call = error EFORMAT)
                  }
                }
                {
                  { scopeless
                    if(254377 call _cond_test(254298 call ==(254294 call . conv c"literal_is_whitespace") 1))
                    {
                      { scopeless
                        unknown offsetA[254304](254303 call qio_channel_offset_unlocked _channel_internal)
                        (254307 'end of statement')
                      }
                      (254323 call = error(254322 call qio_channel_scan_literal_2 0 _channel_internal(254317 call . conv c"literal") 0 1))
                      { scopeless
                        unknown offsetB[254330](254329 call qio_channel_offset_unlocked _channel_internal)
                        (254333 'end of statement')
                      }
                      if(254349 call _cond_test(254341 call &&(254335 call ! error)(254339 call == offsetA offsetB)))
                      {
                        (254345 call = error EFORMAT)
                      }
                    }
                    {
                      (254373 call = error(254372 call qio_channel_scan_literal_2 0 _channel_internal(254359 call . conv c"literal")(254369 call _cast ssize_t(254365 call . conv c"literal_length")) 0))
                    }
                  }
                }
              }
              {
                (254404 call = error(254403 call qio_channel_print_literal_2 0 _channel_internal(254393 call . conv c"literal")(254401 call _cast ssize_t(254397 call . conv c"literal_length"))))
              }
            }
            {
              { scopeless
                if(254635 call _cond_test(254418 call ==(254414 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL))
                {
                  if(254621 call _cond_test(254421 call ! isReadf))
                  {
                    (254427 call = error(254426 call qio_format_error_write_regexp))
                  }
                  {
                    if(254445 call _cond_test(254433 call == r nil[44]))
                    {
                      { scopeless
                        (254442 call = r(254438 'new'(_chpl_manager = unmanaged[220](?))(254441 call _channel_regexp_info)))
                      }
                    }
                    { scopeless
                      const rnn[254454] "const"(254452 call postfix! r)
                      (254457 'end of statement')
                    }
                    (254463 call(254459 call . rnn c"clear"))
                    { scopeless
                      unknown errstr[254466] string[26]
                      (254469 'end of statement')
                    }
                    (254504 call qio_regexp_create_compile_flags_2(254474 call . conv c"regexp")(254481 call . conv c"regexp_length")(254487 call . conv c"regexp_flags")(254493 call . conv c"regexp_flags_length")(254498 call == fmtType string[26])(254501 call . rnn c"theRegexp"))
                    (254513 call =(254509 call . rnn c"releaseRegexp") 1)
                    if(254617 call _cond_test(254522 call qio_regexp_ok(254518 call . rnn c"theRegexp")))
                    {
                      (254528 call =(254524 call . rnn c"hasRegexp") 1)
                      (254543 call =(254533 call . rnn c"ncaptures")(254542 call qio_regexp_get_ncaptures(254538 call . rnn c"theRegexp")))
                      if(254605 call _cond_test(254584 call ||(254573 call ||(254562 call ||(254551 call >(254547 call . rnn c"ncaptures") 0)(254560 call !=(254556 call . conv c"preArg1") QIO_CONV_UNK))(254571 call !=(254567 call . conv c"preArg2") QIO_CONV_UNK))(254582 call !=(254578 call . conv c"preArg3") QIO_CONV_UNK)))
                      {
                        (254588 call = gotConv 1)
                        break nil[44]
                      }
                      {
                        (254602 call _match_regexp_if_needed cur len error style rnn)
                      }
                    }
                    {
                      (254613 call = error(254612 call qio_format_error_bad_regexp))
                    }
                  }
                }
                {
                  (254628 call = gotConv 1)
                  break nil[44]
                }
              }
            }
          }
          label _continueLabel[254647]
          (254658 'move' tmp[254644](254653 call _cond_test(254655 call < cur len)))
          tmp[254644]
        }
        label _breakLabel[254648]
      }
    }
  }
  function _unknown[51]._conv_helper[254684](arg _mt[254703]:_MT[238], arg this[254700] :
  channel, ref arg error[254681] :
  syserr, ref arg conv[254687] :
  qio_conv_t, ref arg gotConv[254691] :
  bool[10], ref arg j[254695] :
  int[13], ref arg argType[254698]:_any[178](?)) : _unknown[51] "method" "no doc"
  {
    if(254708 call _cond_test error)
    {
      { scopeless
        (254706 return)
      }
    }
    if(254840 call _cond_test gotConv)
    {
      if(254739 call _cond_test(254720 call !=(254716 call . conv c"preArg1") QIO_CONV_UNK))
      {
        (254730 call =(254725 call argType j)(254727 call . conv c"preArg1"))
        (254736 call += j 1)
      }
      if(254768 call _cond_test(254749 call !=(254745 call . conv c"preArg2") QIO_CONV_UNK))
      {
        (254759 call =(254754 call argType j)(254756 call . conv c"preArg2"))
        (254765 call += j 1)
      }
      if(254796 call _cond_test(254777 call !=(254773 call . conv c"preArg3") QIO_CONV_UNK))
      {
        (254787 call =(254782 call argType j)(254784 call . conv c"preArg3"))
        (254793 call += j 1)
      }
      if(254836 call _cond_test(254805 call !=(254801 call . conv c"argType") QIO_CONV_UNK))
      {
        if(254826 call _cond_test(254812 call ==(254810 call argType j) QIO_CONV_UNK))
        {
          (254822 call =(254817 call argType j)(254819 call . conv c"argType"))
        }
        (254833 call += j 1)
      }
    }
  }
  function _unknown[51]._conv_sethandler[254853](arg _mt[254876]:_MT[238], arg this[254873] :
  channel, ref arg error[254850] :
  syserr, arg argtypei[254856] :
  c_int, ref arg style[254860] :
  iostyle, arg i[254864] :
  int[13], arg argi[254867]:_any[178](?), arg isReadf[254870] :
  bool[10]) : _unknown[51] throws "method" "no doc"
  {
    if(254883 call _cond_test error)
    {
      { scopeless
        (254881 return 0)
      }
    }
    {
      unknown tmp[255510] "expr temp" "maybe param" "maybe type" "temp"
      (255512 'move' tmp[255510] argtypei)
      if(255517 call _cond_test(255514 call == tmp[255510] QIO_CONV_SET_MIN_WIDTH_COLS))
      {
        { scopeless
          unknown tmp[254902] "temp"(254901 call _toIntegral argi)
          (254909 call _check_tuple_var_decl tmp[254902] 2)
          unknown t[254893](254903 call tmp[254902] 0)
          unknown ok[254895](254906 call tmp[254902] 1)
          (254914 'end of statement')
        }
        if(254944 call _cond_test(254917 call ! ok))
        {
          (254924 call = error(254923 call qio_format_error_arg_mismatch i))
        }
        {
          { scopeless
            (254941 call =(254931 call . style c"min_width_columns")(254939 call _cast(254938 call uint[115] 32) t))
          }
        }
      }
      {
        if(255523 call _cond_test(255520 call == tmp[255510] QIO_CONV_SET_MAX_WIDTH_COLS))
        {
          { scopeless
            unknown tmp[254962] "temp"(254961 call _toIntegral argi)
            (254969 call _check_tuple_var_decl tmp[254962] 2)
            unknown t[254953](254963 call tmp[254962] 0)
            unknown ok[254955](254966 call tmp[254962] 1)
            (254974 'end of statement')
          }
          if(255004 call _cond_test(254977 call ! ok))
          {
            (254984 call = error(254983 call qio_format_error_arg_mismatch i))
          }
          {
            { scopeless
              (255001 call =(254991 call . style c"max_width_columns")(254999 call _cast(254998 call uint[115] 32) t))
            }
          }
        }
        {
          if(255530 call _cond_test(255527 call == tmp[255510] QIO_CONV_SET_MAX_WIDTH_CHARS))
          {
            { scopeless
              unknown tmp[255022] "temp"(255021 call _toIntegral argi)
              (255029 call _check_tuple_var_decl tmp[255022] 2)
              unknown t[255013](255023 call tmp[255022] 0)
              unknown ok[255015](255026 call tmp[255022] 1)
              (255034 'end of statement')
            }
            if(255062 call _cond_test(255037 call ! ok))
            {
              (255044 call = error(255043 call qio_format_error_arg_mismatch i))
            }
            {
              { scopeless
                (255059 call =(255049 call . style c"max_width_characters")(255057 call _cast(255056 call uint[115] 32) t))
              }
            }
          }
          {
            if(255537 call _cond_test(255534 call == tmp[255510] QIO_CONV_SET_MAX_WIDTH_BYTES))
            {
              { scopeless
                unknown tmp[255080] "temp"(255079 call _toIntegral argi)
                (255087 call _check_tuple_var_decl tmp[255080] 2)
                unknown t[255071](255081 call tmp[255080] 0)
                unknown ok[255073](255084 call tmp[255080] 1)
                (255092 'end of statement')
              }
              if(255122 call _cond_test(255095 call ! ok))
              {
                (255102 call = error(255101 call qio_format_error_arg_mismatch i))
              }
              {
                { scopeless
                  (255119 call =(255109 call . style c"max_width_bytes")(255117 call _cast(255116 call uint[115] 32) t))
                }
              }
            }
            {
              if(255544 call _cond_test(255541 call == tmp[255510] QIO_CONV_SET_PRECISION))
              {
                { scopeless
                  unknown tmp[255140] "temp"(255139 call _toIntegral argi)
                  (255147 call _check_tuple_var_decl tmp[255140] 2)
                  unknown t[255131](255141 call tmp[255140] 0)
                  unknown ok[255133](255144 call tmp[255140] 1)
                  (255152 'end of statement')
                }
                if(255182 call _cond_test(255155 call ! ok))
                {
                  (255162 call = error(255161 call qio_format_error_arg_mismatch i))
                }
                {
                  { scopeless
                    (255179 call =(255169 call . style c"precision")(255177 call _cast(255176 call int[13] 32) t))
                  }
                }
              }
              {
                if(255551 call _cond_test(255548 call == tmp[255510] QIO_CONV_SET_STRINGSTART))
                {
                  { scopeless
                    unknown tmp[255200] "temp"(255199 call _toChar argi)
                    (255207 call _check_tuple_var_decl tmp[255200] 2)
                    unknown t[255191](255201 call tmp[255200] 0)
                    unknown ok[255193](255204 call tmp[255200] 1)
                    (255212 'end of statement')
                  }
                  if(255239 call _cond_test(255215 call ! ok))
                  {
                    (255222 call = error(255221 call qio_format_error_arg_mismatch i))
                  }
                  {
                    { scopeless
                      (255236 call =(255229 call . style c"string_start")(255234 call _cast style_char_t t))
                    }
                  }
                }
                {
                  if(255558 call _cond_test(255555 call == tmp[255510] QIO_CONV_SET_STRINGEND))
                  {
                    { scopeless
                      unknown tmp[255257] "temp"(255256 call _toChar argi)
                      (255264 call _check_tuple_var_decl tmp[255257] 2)
                      unknown t[255248](255258 call tmp[255257] 0)
                      unknown ok[255250](255261 call tmp[255257] 1)
                      (255269 'end of statement')
                    }
                    if(255294 call _cond_test(255272 call ! ok))
                    {
                      (255279 call = error(255278 call qio_format_error_arg_mismatch i))
                    }
                    {
                      { scopeless
                        (255291 call =(255284 call . style c"string_end")(255289 call _cast style_char_t t))
                      }
                    }
                  }
                  {
                    if(255565 call _cond_test(255562 call == tmp[255510] QIO_CONV_SET_STRINGSTARTEND))
                    {
                      { scopeless
                        unknown tmp[255312] "temp"(255311 call _toChar argi)
                        (255319 call _check_tuple_var_decl tmp[255312] 2)
                        unknown t[255303](255313 call tmp[255312] 0)
                        unknown ok[255305](255316 call tmp[255312] 1)
                        (255324 'end of statement')
                      }
                      if(255361 call _cond_test(255327 call ! ok))
                      {
                        (255334 call = error(255333 call qio_format_error_arg_mismatch i))
                      }
                      {
                        (255346 call =(255339 call . style c"string_start")(255344 call _cast style_char_t t))
                        (255358 call =(255351 call . style c"string_end")(255356 call _cast style_char_t t))
                      }
                    }
                    {
                      if(255572 call _cond_test(255569 call == tmp[255510] QIO_CONV_SET_STRINGLEN))
                      {
                        { scopeless
                          unknown tmp[255378] "temp"(255377 call _toIntegral argi)
                          (255385 call _check_tuple_var_decl tmp[255378] 2)
                          unknown t[255369](255379 call tmp[255378] 0)
                          unknown ok[255371](255382 call tmp[255378] 1)
                          (255390 'end of statement')
                        }
                        if(255419 call _cond_test(255393 call ! ok))
                        {
                          (255400 call = error(255399 call qio_format_error_arg_mismatch i))
                        }
                        {
                          (255415 call =(255405 call . style c"str_style")(255413 call _cast(255412 call int[13] 64) t))
                        }
                      }
                      {
                        if(255579 call _cond_test(255576 call == tmp[255510] QIO_CONV_SET_TERMINATOR))
                        {
                          { scopeless
                            unknown tmp[255436] "temp"(255435 call _toChar argi)
                            (255443 call _check_tuple_var_decl tmp[255436] 2)
                            unknown t[255427](255437 call tmp[255436] 0)
                            unknown ok[255429](255440 call tmp[255436] 1)
                            (255448 'end of statement')
                          }
                          if(255480 call _cond_test(255451 call ! ok))
                          {
                            (255458 call = error(255457 call qio_format_error_arg_mismatch i))
                          }
                          {
                            (255476 call =(255463 call . style c"str_style")(255475 call stringStyleTerminated(255472 call _cast(255471 call uint[115] 8) t)))
                          }
                        }
                        {
                          if(255586 call _cond_test(255583 call == tmp[255510] QIO_CONV_SET_DONE))
                          {
                          }
                          {
                            if(255593 call _cond_test(255590 call == tmp[255510] QIO_CONV_UNK))
                            {
                              (255497 call = error(255496 call qio_format_error_too_many_args))
                            }
                            {
                              (255504 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (255599 return 0)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51]._write_signed[255614](arg _mt[255627]:_MT[238], arg this[255624] :
  channel, arg width[255611] :
  (255610 call uint[115] 32), arg t[255617] :
  int[13], arg i[255621] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255631] syserr
      (255634 'end of statement')
    }
    { scopeless
      unknown byteorder[255640](255639 call qio_channel_byteorder _channel_internal)
      (255643 'end of statement')
    }
    {
      unknown tmp[255765] "expr temp" "maybe param" "maybe type" "temp"
      (255767 'move' tmp[255765] width)
      if(255772 call _cond_test(255769 call == tmp[255765] 1))
      {
        { scopeless
          unknown x[255655](255653 call _cast(255652 call int[13] 8) t)
          (255658 'end of statement')
        }
        (255667 call = err(255666 call qio_channel_write_int8 0 _channel_internal x))
      }
      {
        if(255778 call _cond_test(255775 call == tmp[255765] 2))
        {
          { scopeless
            unknown x[255681](255679 call _cast(255678 call int[13] 16) t)
            (255684 'end of statement')
          }
          (255694 call = err(255693 call qio_channel_write_int16 0 byteorder _channel_internal x))
        }
        {
          if(255785 call _cond_test(255782 call == tmp[255765] 4))
          {
            { scopeless
              unknown x[255708](255706 call _cast(255705 call int[13] 32) t)
              (255711 'end of statement')
            }
            (255721 call = err(255720 call qio_channel_write_int32 0 byteorder _channel_internal x))
          }
          {
            if(255792 call _cond_test(255789 call == tmp[255765] 8))
            {
              { scopeless
                unknown x[255735](255733 call _cast(255732 call int[13] 64) t)
                (255738 'end of statement')
              }
              (255748 call = err(255747 call qio_channel_write_int64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (255758 call = err(255757 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255798 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._read_signed[255813](arg _mt[255826]:_MT[238], arg this[255823] :
  channel, arg width[255810] :
  (255809 call uint[115] 32), out arg t[255816] :
  int[13], arg i[255820] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255830] syserr
      (255833 'end of statement')
    }
    { scopeless
      unknown byteorder[255839](255838 call qio_channel_byteorder _channel_internal)
      (255842 'end of statement')
    }
    {
      unknown tmp[255972] "expr temp" "maybe param" "maybe type" "temp"
      (255974 'move' tmp[255972] width)
      if(255979 call _cond_test(255976 call == tmp[255972] 1))
      {
        { scopeless
          unknown x[255851](255850 call int[13] 8)
          (255854 'end of statement')
        }
        (255863 call = err(255862 call qio_channel_read_int8 0 _channel_internal x))
        (255868 call = t x)
      }
      {
        if(255985 call _cond_test(255982 call == tmp[255972] 2))
        {
          { scopeless
            unknown x[255879](255878 call int[13] 16)
            (255882 'end of statement')
          }
          (255892 call = err(255891 call qio_channel_read_int16 0 byteorder _channel_internal x))
          (255897 call = t x)
        }
        {
          if(255992 call _cond_test(255989 call == tmp[255972] 4))
          {
            { scopeless
              unknown x[255908](255907 call int[13] 32)
              (255911 'end of statement')
            }
            (255921 call = err(255920 call qio_channel_read_int32 0 byteorder _channel_internal x))
            (255926 call = t x)
          }
          {
            if(255999 call _cond_test(255996 call == tmp[255972] 8))
            {
              { scopeless
                unknown x[255937](255936 call int[13] 64)
                (255940 'end of statement')
              }
              (255950 call = err(255949 call qio_channel_read_int64 0 byteorder _channel_internal x))
              (255955 call = t x)
            }
            {
              { scopeless
                (255965 call = err(255964 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256005 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._write_unsigned[256020](arg _mt[256033]:_MT[238], arg this[256030] :
  channel, arg width[256017] :
  (256016 call uint[115] 32), arg t[256023] :
  uint[115], arg i[256027] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256036] syserr
      (256039 'end of statement')
    }
    { scopeless
      unknown byteorder[256045](256044 call qio_channel_byteorder _channel_internal)
      (256048 'end of statement')
    }
    {
      unknown tmp[256170] "expr temp" "maybe param" "maybe type" "temp"
      (256172 'move' tmp[256170] width)
      if(256177 call _cond_test(256174 call == tmp[256170] 1))
      {
        { scopeless
          unknown x[256060](256058 call _cast(256057 call uint[115] 8) t)
          (256063 'end of statement')
        }
        (256072 call = err(256071 call qio_channel_write_uint8 0 _channel_internal x))
      }
      {
        if(256183 call _cond_test(256180 call == tmp[256170] 2))
        {
          { scopeless
            unknown x[256086](256084 call _cast(256083 call uint[115] 16) t)
            (256089 'end of statement')
          }
          (256099 call = err(256098 call qio_channel_write_uint16 0 byteorder _channel_internal x))
        }
        {
          if(256190 call _cond_test(256187 call == tmp[256170] 4))
          {
            { scopeless
              unknown x[256113](256111 call _cast(256110 call uint[115] 32) t)
              (256116 'end of statement')
            }
            (256126 call = err(256125 call qio_channel_write_uint32 0 byteorder _channel_internal x))
          }
          {
            if(256197 call _cond_test(256194 call == tmp[256170] 8))
            {
              { scopeless
                unknown x[256140](256138 call _cast(256137 call uint[115] 64) t)
                (256143 'end of statement')
              }
              (256153 call = err(256152 call qio_channel_write_uint64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (256163 call = err(256162 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256203 return err)
  }
  function _unknown[51]._read_unsigned[256217](arg _mt[256230]:_MT[238], arg this[256227] :
  channel, arg width[256214] :
  (256213 call uint[115] 32), out arg t[256220] :
  uint[115], arg i[256224] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256233] syserr
      (256236 'end of statement')
    }
    { scopeless
      unknown byteorder[256242](256241 call qio_channel_byteorder _channel_internal)
      (256245 'end of statement')
    }
    {
      unknown tmp[256375] "expr temp" "maybe param" "maybe type" "temp"
      (256377 'move' tmp[256375] width)
      if(256382 call _cond_test(256379 call == tmp[256375] 1))
      {
        { scopeless
          unknown x[256254](256253 call uint[115] 8)
          (256257 'end of statement')
        }
        (256266 call = err(256265 call qio_channel_read_uint8 0 _channel_internal x))
        (256271 call = t x)
      }
      {
        if(256388 call _cond_test(256385 call == tmp[256375] 2))
        {
          { scopeless
            unknown x[256282](256281 call uint[115] 16)
            (256285 'end of statement')
          }
          (256295 call = err(256294 call qio_channel_read_uint16 0 byteorder _channel_internal x))
          (256300 call = t x)
        }
        {
          if(256395 call _cond_test(256392 call == tmp[256375] 4))
          {
            { scopeless
              unknown x[256311](256310 call uint[115] 32)
              (256314 'end of statement')
            }
            (256324 call = err(256323 call qio_channel_read_uint32 0 byteorder _channel_internal x))
            (256329 call = t x)
          }
          {
            if(256402 call _cond_test(256399 call == tmp[256375] 8))
            {
              { scopeless
                unknown x[256340](256339 call uint[115] 64)
                (256343 'end of statement')
              }
              (256353 call = err(256352 call qio_channel_read_uint64 0 byteorder _channel_internal x))
              (256358 call = t x)
            }
            {
              { scopeless
                (256368 call = err(256367 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256408 return err)
  }
  function _unknown[51]._write_real[256422](arg _mt[256435]:_MT[238], arg this[256432] :
  channel, arg width[256419] :
  (256418 call uint[115] 32), arg t[256425] :
  real[16], arg i[256429] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256438] syserr
      (256441 'end of statement')
    }
    { scopeless
      unknown byteorder[256447](256446 call qio_channel_byteorder _channel_internal)
      (256450 'end of statement')
    }
    {
      unknown tmp[256519] "expr temp" "maybe param" "maybe type" "temp"
      (256521 'move' tmp[256519] width)
      if(256526 call _cond_test(256523 call == tmp[256519] 4))
      {
        { scopeless
          unknown x[256462](256460 call _cast(256459 call real[16] 32) t)
          (256465 'end of statement')
        }
        (256475 call = err(256474 call qio_channel_write_float32 0 byteorder _channel_internal x))
      }
      {
        if(256532 call _cond_test(256529 call == tmp[256519] 8))
        {
          { scopeless
            unknown x[256489](256487 call _cast(256486 call real[16] 64) t)
            (256492 'end of statement')
          }
          (256502 call = err(256501 call qio_channel_write_float64 0 byteorder _channel_internal x))
        }
        {
          { scopeless
            (256512 call = err(256511 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256538 return err)
  }
  function _unknown[51]._read_real[256552](arg _mt[256565]:_MT[238], arg this[256562] :
  channel, arg width[256549] :
  (256548 call uint[115] 32), out arg t[256555] :
  real[16], arg i[256559] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256568] syserr
      (256571 'end of statement')
    }
    { scopeless
      unknown byteorder[256577](256576 call qio_channel_byteorder _channel_internal)
      (256580 'end of statement')
    }
    {
      unknown tmp[256653] "expr temp" "maybe param" "maybe type" "temp"
      (256655 'move' tmp[256653] width)
      if(256660 call _cond_test(256657 call == tmp[256653] 4))
      {
        { scopeless
          unknown x[256589](256588 call real[16] 32)
          (256592 'end of statement')
        }
        (256602 call = err(256601 call qio_channel_read_float32 0 byteorder _channel_internal x))
        (256607 call = t x)
      }
      {
        if(256666 call _cond_test(256663 call == tmp[256653] 8))
        {
          { scopeless
            unknown x[256618](256617 call real[16] 64)
            (256621 'end of statement')
          }
          (256631 call = err(256630 call qio_channel_read_float64 0 byteorder _channel_internal x))
          (256636 call = t x)
        }
        {
          { scopeless
            (256646 call = err(256645 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256672 return err)
  }
  function _unknown[51]._write_complex[256686](arg _mt[256699]:_MT[238], arg this[256696] :
  channel, arg width[256683] :
  (256682 call uint[115] 32), arg t[256689] :
  complex[140], arg i[256693] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256703] ENOERR syserr
      (256706 'end of statement')
    }
    { scopeless
      unknown byteorder[256712](256711 call qio_channel_byteorder _channel_internal)
      (256715 'end of statement')
    }
    {
      unknown tmp[256854] "expr temp" "maybe param" "maybe type" "temp"
      (256856 'move' tmp[256854] width)
      if(256861 call _cond_test(256858 call == tmp[256854] 8))
      {
        { scopeless
          unknown x[256727](256725 call _cast(256724 call complex[140] 64) t)
          (256730 'end of statement')
        }
        { scopeless
          unknown re[256736](256733 call . x c"re")
          (256739 'end of statement')
        }
        { scopeless
          unknown im[256744](256741 call . x c"im")
          (256747 'end of statement')
        }
        (256756 call = err(256755 call qio_channel_write_float32 0 byteorder _channel_internal re))
        if(256774 call _cond_test(256760 call ! err))
        {
          (256770 call = err(256769 call qio_channel_write_float32 0 byteorder _channel_internal im))
        }
      }
      {
        if(256867 call _cond_test(256864 call == tmp[256854] 16))
        {
          { scopeless
            unknown x[256789](256787 call _cast(256786 call complex[140] 128) t)
            (256792 'end of statement')
          }
          { scopeless
            unknown re[256798](256795 call . x c"re")
            (256801 'end of statement')
          }
          { scopeless
            unknown im[256806](256803 call . x c"im")
            (256809 'end of statement')
          }
          (256818 call = err(256817 call qio_channel_write_float64 0 byteorder _channel_internal re))
          if(256836 call _cond_test(256822 call ! err))
          {
            (256832 call = err(256831 call qio_channel_write_float64 0 byteorder _channel_internal im))
          }
        }
        {
          { scopeless
            (256847 call = err(256846 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256873 return err)
  }
  function _unknown[51]._read_complex[256887](arg _mt[256900]:_MT[238], arg this[256897] :
  channel, arg width[256884] :
  (256883 call uint[115] 32), out arg t[256890] :
  complex[140], arg i[256894] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256904] ENOERR syserr
      (256907 'end of statement')
    }
    { scopeless
      unknown byteorder[256913](256912 call qio_channel_byteorder _channel_internal)
      (256916 'end of statement')
    }
    {
      unknown tmp[257093] "expr temp" "maybe param" "maybe type" "temp"
      (257095 'move' tmp[257093] width)
      if(257100 call _cond_test(257097 call == tmp[257093] 8))
      {
        { scopeless
          unknown x[256925](256924 call complex[140] 64)
          (256928 'end of statement')
        }
        { scopeless
          unknown re[256935](256934 'typeof'(256931 call . x c"re"))
          (256938 'end of statement')
        }
        { scopeless
          unknown im[256944](256943 'typeof'(256940 call . x c"im"))
          (256947 'end of statement')
        }
        (256956 call = err(256955 call qio_channel_read_float32 0 byteorder _channel_internal re))
        if(256974 call _cond_test(256960 call ! err))
        {
          (256970 call = err(256969 call qio_channel_read_float32 0 byteorder _channel_internal im))
        }
        (256990 call = x(256988 call _cast(256987 call complex[140] 64)(256982 call _build_tuple re im)))
        (256995 call = t x)
      }
      {
        if(257106 call _cond_test(257103 call == tmp[257093] 16))
        {
          { scopeless
            unknown x[257006](257005 call complex[140] 128)
            (257009 'end of statement')
          }
          { scopeless
            unknown re[257016](257015 'typeof'(257012 call . x c"re"))
            (257019 'end of statement')
          }
          { scopeless
            unknown im[257025](257024 'typeof'(257021 call . x c"im"))
            (257028 'end of statement')
          }
          (257037 call = err(257036 call qio_channel_read_float64 0 byteorder _channel_internal re))
          if(257055 call _cond_test(257041 call ! err))
          {
            (257051 call = err(257050 call qio_channel_read_float64 0 byteorder _channel_internal im))
          }
          (257071 call = x(257069 call _cast(257068 call complex[140] 128)(257063 call _build_tuple re im)))
          (257076 call = t x)
        }
        {
          { scopeless
            (257086 call = err(257085 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (257112 return err)
  }
  function _unknown[51].writef[257124](arg _mt[257134]:_MT[238], arg this[257131] :
  channel, arg fmtStr[257121] :
  unknown t[257119], const arg args[257128]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(257171 call _cond_test(257148 call ! writing))
    {
      { scopeless
        (257169 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      const origLocale[257183] "const"(257182 call(257178 call . this c"getLocaleOfIoRequest"))
      (257186 'end of statement')
    }
    { scopeless
      unknown err[257189] ENOERR syserr
      (257192 'end of statement')
    }
    { scopeless
      const tmp[258422] "const" "temp"
      (258424 'move' tmp[258422](258420 'deref'(258419 '_wide_get_locale'(257194 call . this c"home"))))
      {
        {
          Try
          {
            {
              (257202 call(257198 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (257212 call(257208 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[257223](257222 call(257218 call . this c"_style"))
            (257226 'end of statement')
          }
          { scopeless
            unknown cur[257229] 0 size_t
            (257232 'end of statement')
          }
          { scopeless
            unknown len[257241](257239 call _cast size_t(257235 call . fmtStr c"size")) size_t
            (257244 'end of statement')
          }
          { scopeless
            unknown conv[257246] qio_conv_t
            (257249 'end of statement')
          }
          { scopeless
            unknown gotConv[257251] bool[10]
            (257254 'end of statement')
          }
          { scopeless
            unknown style[257256] iostyle
            (257259 'end of statement')
          }
          { scopeless
            unknown end[257261] size_t
            (257264 'end of statement')
          }
          { scopeless
            unknown argType[257272](257270 call *(257267 call + k 5) c_int)
            (257275 'end of statement')
          }
          { scopeless
            unknown r[257279](257278 'to unmanaged class from unknown'(257277 'to nilable class from type' _channel_regexp_info))
            (257282 'end of statement')
          }
          Defer
          {
            {
              if(257289 call _cond_test r)
              {
                { scopeless
                  (257286 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[257317] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[257318] "expr temp" "temp"
            (257327 'move' _iterator[257318](257325 call _getIterator(257338 call chpl_direct_range_iter 0(257332 call -(257334 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (257354 call _freeIterator _iterator[257318])
              }
            }
            { scopeless type
              (257343 'move' _indexOfInterest[257317](257340 call iteratorIndex _iterator[257318]))
            }
            ForLoop[257319]
            {
              unknown i[257347] "index var" "insert auto destroy"
              (257349 'move' i[257347] _indexOfInterest[257317])
              {
                (257313 call =(257311 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[257322]
              _indexOfInterest[257317]
              _iterator[257318]
            }
            label _breakLabel[257323]
          }
          { scopeless
            unknown j[257362] 0
            (257365 'end of statement')
          }
          {
            unknown i[258323] 0
            unknown tmp[258324] "maybe param" "temp"
            (258336 'move' tmp[258324](258334 call chpl_compute_low_param_loop_bound 0(257369 call - k 1)))
            unknown tmp[258325] "maybe param" "temp"
            (258346 'move' tmp[258325](258344 call chpl_compute_high_param_loop_bound 0(258341 call - k 1)))
            unknown tmp[258326] "maybe param" "temp"
            (258349 'move' tmp[258326] 1)
            ParamForLoop[258351]
            { i[258323] tmp[258324] tmp[258325] tmp[258326]
              {
                (257375 call = gotConv 0)
                if(257397 call _cond_test(257381 call <= j i))
                {
                  (257394 call _format_reader fmtStr cur len err conv gotConv style r 0)
                }
                (257408 call _conv_helper err conv gotConv j argType)
                { scopeless
                  unknown domore[257425](257424 call _conv_sethandler err(257416 call argType i) style i(257422 call args i) 0)
                  (257428 'end of statement')
                }
                if(258319 call _cond_test domore)
                {
                  (257436 call(257431 call . this c"_set_style") style)
                  {
                    unknown tmp[258213] "expr temp" "maybe param" "maybe type" "temp"
                    (258215 'move' tmp[258213](257442 call argType i))
                    if(258225 call _cond_test(258223 call ||(258217 call == tmp[258213] QIO_CONV_ARG_TYPE_SIGNED)(258220 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                    {
                      { scopeless
                        unknown tmp[257459] "temp"(257458 call _toSigned(257456 call args i))
                        (257466 call _check_tuple_var_decl tmp[257459] 2)
                        unknown t[257447](257460 call tmp[257459] 0)
                        unknown ok[257449](257463 call tmp[257459] 1)
                        (257471 'end of statement')
                      }
                      if(257524 call _cond_test(257474 call ! ok))
                      {
                        (257481 call = err(257480 call qio_format_error_arg_mismatch i))
                      }
                      {
                        if(257517 call _cond_test(257490 call ==(257488 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                        {
                          { scopeless
                            (257502 call = err(257501 call _write_signed(257495 call . style c"max_width_bytes") t i))
                          }
                        }
                        {
                          { scopeless
                            Try
                            {
                              {
                                (257513 call _writeOne(257507 call . iokind c"dynamic") t origLocale)
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      if(258236 call _cond_test(258234 call ||(258228 call == tmp[258213] QIO_CONV_ARG_TYPE_UNSIGNED)(258231 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                      {
                        { scopeless
                          unknown tmp[257545] "temp"(257544 call _toUnsigned(257542 call args i))
                          (257552 call _check_tuple_var_decl tmp[257545] 2)
                          unknown t[257533](257546 call tmp[257545] 0)
                          unknown ok[257535](257549 call tmp[257545] 1)
                          (257557 'end of statement')
                        }
                        if(257610 call _cond_test(257560 call ! ok))
                        {
                          (257567 call = err(257566 call qio_format_error_arg_mismatch i))
                        }
                        {
                          if(257603 call _cond_test(257576 call ==(257574 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                          {
                            { scopeless
                              (257588 call = err(257587 call _write_unsigned(257581 call . style c"max_width_bytes") t i))
                            }
                          }
                          {
                            { scopeless
                              Try
                              {
                                {
                                  (257599 call _writeOne(257593 call . iokind c"dynamic") t origLocale)
                                }
                              }
                            }
                          }
                        }
                      }
                      {
                        if(258248 call _cond_test(258246 call ||(258240 call == tmp[258213] QIO_CONV_ARG_TYPE_REAL)(258243 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                        {
                          { scopeless
                            unknown tmp[257631] "temp"(257630 call _toReal(257628 call args i))
                            (257638 call _check_tuple_var_decl tmp[257631] 2)
                            unknown t[257619](257632 call tmp[257631] 0)
                            unknown ok[257621](257635 call tmp[257631] 1)
                            (257643 'end of statement')
                          }
                          if(257696 call _cond_test(257646 call ! ok))
                          {
                            (257653 call = err(257652 call qio_format_error_arg_mismatch i))
                          }
                          {
                            if(257689 call _cond_test(257662 call ==(257660 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                            {
                              { scopeless
                                (257674 call = err(257673 call _write_real(257667 call . style c"max_width_bytes") t i))
                              }
                            }
                            {
                              { scopeless
                                Try
                                {
                                  {
                                    (257685 call _writeOne(257679 call . iokind c"dynamic") t origLocale)
                                  }
                                }
                              }
                            }
                          }
                        }
                        {
                          if(258260 call _cond_test(258258 call ||(258252 call == tmp[258213] QIO_CONV_ARG_TYPE_IMAG)(258255 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                          {
                            { scopeless
                              unknown tmp[257717] "temp"(257716 call _toImag(257714 call args i))
                              (257724 call _check_tuple_var_decl tmp[257717] 2)
                              unknown t[257705](257718 call tmp[257717] 0)
                              unknown ok[257707](257721 call tmp[257717] 1)
                              (257729 'end of statement')
                            }
                            if(257785 call _cond_test(257732 call ! ok))
                            {
                              (257739 call = err(257738 call qio_format_error_arg_mismatch i))
                            }
                            {
                              if(257778 call _cond_test(257748 call ==(257746 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                              {
                                { scopeless
                                  (257763 call = err(257762 call _write_real(257753 call . style c"max_width_bytes")(257759 call _cast real[16] t) i))
                                }
                              }
                              {
                                { scopeless
                                  Try
                                  {
                                    {
                                      (257774 call _writeOne(257768 call . iokind c"dynamic") t origLocale)
                                    }
                                  }
                                }
                              }
                            }
                          }
                          {
                            if(258272 call _cond_test(258270 call ||(258264 call == tmp[258213] QIO_CONV_ARG_TYPE_COMPLEX)(258267 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                            {
                              { scopeless
                                unknown tmp[257806] "temp"(257805 call _toComplex(257803 call args i))
                                (257813 call _check_tuple_var_decl tmp[257806] 2)
                                unknown t[257794](257807 call tmp[257806] 0)
                                unknown ok[257796](257810 call tmp[257806] 1)
                                (257818 'end of statement')
                              }
                              if(257871 call _cond_test(257821 call ! ok))
                              {
                                (257828 call = err(257827 call qio_format_error_arg_mismatch i))
                              }
                              {
                                if(257864 call _cond_test(257837 call ==(257835 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                {
                                  { scopeless
                                    (257849 call = err(257848 call _write_complex(257842 call . style c"max_width_bytes") t i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257860 call _writeOne(257854 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              if(258279 call _cond_test(258276 call == tmp[258213] QIO_CONV_ARG_TYPE_NUMERIC))
                              {
                                { scopeless
                                  unknown tmp[257891] "temp"(257890 call _toNumeric(257888 call args i))
                                  (257898 call _check_tuple_var_decl tmp[257891] 2)
                                  unknown t[257879](257892 call tmp[257891] 0)
                                  unknown ok[257881](257895 call tmp[257891] 1)
                                  (257903 'end of statement')
                                }
                                if(257929 call _cond_test(257906 call ! ok))
                                {
                                  (257913 call = err(257912 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257925 call _writeOne(257919 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                              {
                                if(258286 call _cond_test(258283 call == tmp[258213] QIO_CONV_ARG_TYPE_CHAR))
                                {
                                  { scopeless
                                    unknown tmp[257950] "temp"(257949 call _toChar(257947 call args i))
                                    (257957 call _check_tuple_var_decl tmp[257950] 2)
                                    unknown t[257938](257951 call tmp[257950] 0)
                                    unknown ok[257940](257954 call tmp[257950] 1)
                                    (257962 'end of statement')
                                  }
                                  if(257992 call _cond_test(257965 call ! ok))
                                  {
                                    (257972 call = err(257971 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (257988 call _writeOne(257978 call . iokind c"dynamic")(257982 'new'(257986 call ioChar t)) origLocale)
                                        }
                                      }
                                    }
                                  }
                                }
                                {
                                  if(258293 call _cond_test(258290 call == tmp[258213] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                  {
                                    { scopeless
                                      unknown tmp[258013] "temp"(258012 call _toBytes(258010 call args i))
                                      (258020 call _check_tuple_var_decl tmp[258013] 2)
                                      unknown t[258001](258014 call tmp[258013] 0)
                                      unknown ok[258003](258017 call tmp[258013] 1)
                                      (258025 'end of statement')
                                    }
                                    if(258051 call _cond_test(258028 call ! ok))
                                    {
                                      (258035 call = err(258034 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (258047 call _writeOne(258041 call . iokind c"dynamic") t origLocale)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(258300 call _cond_test(258297 call == tmp[258213] QIO_CONV_ARG_TYPE_STRING))
                                    {
                                      { scopeless
                                        unknown tmp[258072] "temp"(258071 call _toString(258069 call args i))
                                        (258079 call _check_tuple_var_decl tmp[258072] 2)
                                        unknown t[258060](258073 call tmp[258072] 0)
                                        unknown ok[258062](258076 call tmp[258072] 1)
                                        (258084 'end of statement')
                                      }
                                      if(258110 call _cond_test(258087 call ! ok))
                                      {
                                        (258094 call = err(258093 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (258106 call _writeOne(258100 call . iokind c"dynamic") t origLocale)
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(258307 call _cond_test(258304 call == tmp[258213] QIO_CONV_ARG_TYPE_REGEXP))
                                      {
                                        (258123 call = err(258122 call qio_format_error_write_regexp))
                                      }
                                      {
                                        if(258314 call _cond_test(258311 call == tmp[258213] QIO_CONV_ARG_TYPE_REPR))
                                        {
                                          Try
                                          {
                                            {
                                              (258142 call _writeOne(258133 call . iokind c"dynamic")(258140 call args i) origLocale)
                                            }
                                          }
                                        }
                                        {
                                          (258207 'throw'(258151 'new'(_chpl_manager = _owned[30](?))(258206 call IllegalArgumentError(258177 call +(258174 call + "args("(258172 call _cast string[26] i)) ")")(258204 call + "writef internal error "(258202 call _cast string[26](258200 call argType i))))))
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            label _unused_continueLabel[258328]
            label _breakLabel[258327]
          }
          if(258407 call _cond_test(258361 call ! err))
          {
            if(258386 call _cond_test(258365 call < cur len))
            {
              { scopeless
                unknown dummy[258368] c_int
                (258371 'end of statement')
              }
              (258384 call _format_reader fmtStr cur len err conv gotConv style r 0)
            }
            if(258403 call _cond_test(258393 call < cur len))
            {
              (258399 call = err(258398 call qio_format_error_too_few_args))
            }
          }
          (258417 call(258412 call . this c"_set_style") save_style)
        }
        (258427 'on block' 0 tmp[258422])
      }
    }
    if(258458 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258454 call(258432 call . this c"_ch_ioerror") err "in channel.writef(fmt:string)")
          }
        }
      }
    }
    (258464 return 1)
  }
  where {
    (257145 call ||(257140 call isStringType t)(257144 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].writef[258478](arg _mt[258483]:_MT[238], arg this[258480] :
  channel, arg fmtStr[258475] :
  unknown t[258473]) : _unknown[51] throws "method"
  {
    if(258504 call _cond_test(258497 call ! writing))
    {
      { scopeless
        (258502 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      unknown err[258512] ENOERR syserr
      (258515 'end of statement')
    }
    { scopeless
      const tmp[258683] "const" "temp"
      (258685 'move' tmp[258683](258681 'deref'(258680 '_wide_get_locale'(258517 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258525 call(258521 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258535 call(258531 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258546](258545 call(258541 call . this c"_style"))
            (258549 'end of statement')
          }
          { scopeless
            unknown cur[258552] 0 size_t
            (258555 'end of statement')
          }
          { scopeless
            unknown len[258564](258562 call _cast size_t(258558 call . fmtStr c"size")) size_t
            (258567 'end of statement')
          }
          { scopeless
            unknown conv[258569] qio_conv_t
            (258572 'end of statement')
          }
          { scopeless
            unknown gotConv[258574] bool[10]
            (258577 'end of statement')
          }
          { scopeless
            unknown style[258579] iostyle
            (258582 'end of statement')
          }
          { scopeless
            unknown end[258584] size_t
            (258587 'end of statement')
          }
          { scopeless
            unknown dummy[258589] c_int
            (258592 'end of statement')
          }
          { scopeless
            unknown r[258596](258595 'to unmanaged class from unknown'(258594 'to nilable class from type' _channel_regexp_info))
            (258599 'end of statement')
          }
          Defer
          {
            {
              if(258606 call _cond_test r)
              {
                { scopeless
                  (258603 call chpl__delete r)
                }
              }
            }
          }
          (258625 call _format_reader fmtStr cur len err conv gotConv style r 0)
          if(258644 call _cond_test(258628 call ! err))
          {
            if(258639 call _cond_test gotConv)
            {
              (258635 call = err(258634 call qio_format_error_too_few_args))
            }
          }
          if(258668 call _cond_test(258649 call ! err))
          {
            if(258663 call _cond_test(258653 call < cur len))
            {
              (258659 call = err(258658 call qio_format_error_too_few_args))
            }
          }
          (258678 call(258673 call . this c"_set_style") save_style)
        }
        (258688 'on block' 0 tmp[258683])
      }
    }
    if(258719 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258715 call(258693 call . this c"_ch_ioerror") err "in channel.writef(fmt:string, ...)")
          }
        }
      }
    }
    (258725 return 1)
  }
  where {
    (258494 call ||(258489 call isStringType t)(258493 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[258739](arg _mt[258749]:_MT[238], arg this[258746] :
  channel, arg fmtStr[258736] :
  unknown t[258734], ref arg args[258743]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(258784 call _cond_test writing)
    {
      { scopeless
        (258782 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      const origLocale[258796] "const"(258795 call(258791 call . this c"getLocaleOfIoRequest"))
      (258799 'end of statement')
    }
    { scopeless
      unknown err[258802] ENOERR syserr
      (258805 'end of statement')
    }
    { scopeless
      const tmp[260887] "const" "temp"
      (260889 'move' tmp[260887](260885 'deref'(260884 '_wide_get_locale'(258807 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258815 call(258811 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258825 call(258821 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258836](258835 call(258831 call . this c"_style"))
            (258839 'end of statement')
          }
          Defer
          {
            {
              (258846 call(258841 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[258853] 0 size_t
            (258856 'end of statement')
          }
          { scopeless
            unknown len[258865](258863 call _cast size_t(258859 call . fmtStr c"size")) size_t
            (258868 'end of statement')
          }
          { scopeless
            unknown conv[258870] qio_conv_t
            (258873 'end of statement')
          }
          { scopeless
            unknown gotConv[258875] bool[10]
            (258878 'end of statement')
          }
          { scopeless
            unknown style[258880] iostyle
            (258883 'end of statement')
          }
          { scopeless
            unknown end[258885] size_t
            (258888 'end of statement')
          }
          { scopeless
            unknown argType[258896](258894 call *(258891 call + k 5) c_int)
            (258899 'end of statement')
          }
          { scopeless
            unknown r[258903](258902 'to unmanaged class from unknown'(258901 'to nilable class from type' _channel_regexp_info))
            (258906 'end of statement')
          }
          Defer
          {
            {
              if(258913 call _cond_test r)
              {
                { scopeless
                  (258910 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[258941] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[258942] "expr temp" "temp"
            (258951 'move' _iterator[258942](258949 call _getIterator(258962 call chpl_direct_range_iter 0(258956 call -(258958 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (258978 call _freeIterator _iterator[258942])
              }
            }
            { scopeless type
              (258967 'move' _indexOfInterest[258941](258964 call iteratorIndex _iterator[258942]))
            }
            ForLoop[258943]
            {
              unknown i[258971] "index var" "insert auto destroy"
              (258973 'move' i[258971] _indexOfInterest[258941])
              {
                (258937 call =(258935 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[258946]
              _indexOfInterest[258941]
              _iterator[258942]
            }
            label _breakLabel[258947]
          }
          (258991 call = err(258990 call qio_channel_mark 0 _channel_internal))
          if(260879 call _cond_test(258995 call ! err))
          {
            { scopeless
              Try
              {
                {
                  { scopeless
                    unknown j[258998] 0
                    (259001 'end of statement')
                  }
                  {
                    unknown i[260736] 0
                    unknown tmp[260737] "maybe param" "temp"
                    (260749 'move' tmp[260737](260747 call chpl_compute_low_param_loop_bound 0(259006 call - k 1)))
                    unknown tmp[260738] "maybe param" "temp"
                    (260759 'move' tmp[260738](260757 call chpl_compute_high_param_loop_bound 0(260754 call - k 1)))
                    unknown tmp[260739] "maybe param" "temp"
                    (260762 'move' tmp[260739] 1)
                    ParamForLoop[260764]
                    { i[260736] tmp[260737] tmp[260738] tmp[260739]
                      {
                        if(259158 call _cond_test(259012 call <= j i))
                        {
                          (259025 call _format_reader fmtStr cur len err conv gotConv style r 1)
                          if(259154 call _cond_test(259030 call != r nil[44]))
                          {
                            { scopeless
                              const rnn[259035] "const"(259033 call postfix! r)
                              (259038 'end of statement')
                            }
                            if(259150 call _cond_test(259041 call . rnn c"hasRegexp"))
                            {
                              if(259065 call _cond_test(259055 call >(259052 call -(259049 call + i(259046 call . rnn c"ncaptures")) 1) k))
                              {
                                (259061 call = err(259060 call qio_format_error_too_few_args))
                              }
                              {
                                unknown _indexOfInterest[259107] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                unknown _iterator[259108] "expr temp" "temp"
                                (259117 'move' _iterator[259108](259115 call _getIterator(259127 call chpl_direct_counted_range_iter 0(259123 call . rnn c"ncaptures"))))
                                Defer
                                {
                                  {
                                    (259143 call _freeIterator _iterator[259108])
                                  }
                                }
                                { scopeless type
                                  (259132 'move' _indexOfInterest[259107](259129 call iteratorIndex _iterator[259108]))
                                }
                                ForLoop[259109]
                                {
                                  unknown z[259136] "index var" "insert auto destroy"
                                  (259138 'move' z[259136] _indexOfInterest[259107])
                                  {
                                    if(259102 call _cond_test(259088 call <=(259082 call + i z)(259085 call . argType c"size")))
                                    {
                                      (259098 call =(259096 call argType(259093 call + i z)) QIO_CONV_SET_CAPTURE)
                                    }
                                  }
                                  label _continueLabel[259112]
                                  _indexOfInterest[259107]
                                  _iterator[259108]
                                }
                                label _breakLabel[259113]
                              }
                            }
                          }
                        }
                        (259170 call _conv_helper err conv gotConv j argType)
                        { scopeless
                          unknown domore[259187](259186 call _conv_sethandler err(259178 call argType i) style i(259184 call args i) 0)
                          (259190 'end of statement')
                        }
                        if(260732 call _cond_test domore)
                        {
                          (259198 call(259193 call . this c"_set_style") style)
                          {
                            unknown tmp[260619] "expr temp" "maybe param" "maybe type" "temp"
                            (260621 'move' tmp[260619](259204 call argType i))
                            if(260631 call _cond_test(260629 call ||(260623 call == tmp[260619] QIO_CONV_ARG_TYPE_SIGNED)(260626 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                            {
                              { scopeless
                                unknown tmp[259221] "temp"(259220 call _toSigned(259218 call args i))
                                (259228 call _check_tuple_var_decl tmp[259221] 2)
                                unknown t[259209](259222 call tmp[259221] 0)
                                unknown ok[259211](259225 call tmp[259221] 1)
                                (259233 'end of statement')
                              }
                              if(259312 call _cond_test(259236 call ! ok))
                              {
                                (259243 call = err(259242 call qio_format_error_arg_mismatch i))
                              }
                              {
                                { scopeless
                                  unknown ti[259248] int[13]
                                  (259251 'end of statement')
                                }
                                if(259285 call _cond_test(259258 call ==(259256 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                                {
                                  { scopeless
                                    (259270 call = err(259269 call _read_signed(259263 call . style c"max_width_bytes") ti i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (259281 call _readOne(259275 call . iokind c"dynamic") ti origLocale)
                                      }
                                    }
                                  }
                                }
                                if(259307 call _cond_test(259292 call ! err))
                                {
                                  { scopeless
                                    (259304 call = err(259303 call _setIfPrimitive(259299 call args i) ti i))
                                  }
                                }
                              }
                            }
                            {
                              if(260642 call _cond_test(260640 call ||(260634 call == tmp[260619] QIO_CONV_ARG_TYPE_UNSIGNED)(260637 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                              {
                                { scopeless
                                  unknown tmp[259333] "temp"(259332 call _toUnsigned(259330 call args i))
                                  (259340 call _check_tuple_var_decl tmp[259333] 2)
                                  unknown t[259321](259334 call tmp[259333] 0)
                                  unknown ok[259323](259337 call tmp[259333] 1)
                                  (259345 'end of statement')
                                }
                                if(259424 call _cond_test(259348 call ! ok))
                                {
                                  (259355 call = err(259354 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    unknown ti[259360] uint[115]
                                    (259363 'end of statement')
                                  }
                                  if(259397 call _cond_test(259370 call ==(259368 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                                  {
                                    { scopeless
                                      (259382 call = err(259381 call _read_unsigned(259375 call . style c"max_width_bytes") ti i))
                                    }
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (259393 call _readOne(259387 call . iokind c"dynamic") ti origLocale)
                                        }
                                      }
                                    }
                                  }
                                  if(259419 call _cond_test(259404 call ! err))
                                  {
                                    { scopeless
                                      (259416 call = err(259415 call _setIfPrimitive(259411 call args i) ti i))
                                    }
                                  }
                                }
                              }
                              {
                                if(260654 call _cond_test(260652 call ||(260646 call == tmp[260619] QIO_CONV_ARG_TYPE_REAL)(260649 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                                {
                                  { scopeless
                                    unknown tmp[259445] "temp"(259444 call _toReal(259442 call args i))
                                    (259452 call _check_tuple_var_decl tmp[259445] 2)
                                    unknown t[259433](259446 call tmp[259445] 0)
                                    unknown ok[259435](259449 call tmp[259445] 1)
                                    (259457 'end of statement')
                                  }
                                  if(259536 call _cond_test(259460 call ! ok))
                                  {
                                    (259467 call = err(259466 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      unknown ti[259472] real[16]
                                      (259475 'end of statement')
                                    }
                                    if(259509 call _cond_test(259482 call ==(259480 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                                    {
                                      { scopeless
                                        (259494 call = err(259493 call _read_real(259487 call . style c"max_width_bytes") ti i))
                                      }
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (259505 call _readOne(259499 call . iokind c"dynamic") ti origLocale)
                                          }
                                        }
                                      }
                                    }
                                    if(259531 call _cond_test(259516 call ! err))
                                    {
                                      { scopeless
                                        (259528 call = err(259527 call _setIfPrimitive(259523 call args i) ti i))
                                      }
                                    }
                                  }
                                }
                                {
                                  if(260666 call _cond_test(260664 call ||(260658 call == tmp[260619] QIO_CONV_ARG_TYPE_IMAG)(260661 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                                  {
                                    { scopeless
                                      unknown tmp[259557] "temp"(259556 call _toImag(259554 call args i))
                                      (259564 call _check_tuple_var_decl tmp[259557] 2)
                                      unknown t[259545](259558 call tmp[259557] 0)
                                      unknown ok[259547](259561 call tmp[259557] 1)
                                      (259569 'end of statement')
                                    }
                                    if(259661 call _cond_test(259572 call ! ok))
                                    {
                                      (259579 call = err(259578 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        unknown ti[259584] imag[130]
                                        (259587 'end of statement')
                                      }
                                      if(259635 call _cond_test(259594 call ==(259592 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                                      {
                                        { scopeless
                                          unknown tr[259597] real[16]
                                          (259600 'end of statement')
                                        }
                                        (259612 call = err(259611 call _read_real(259605 call . style c"max_width_bytes") tr i))
                                        (259620 call = ti(259618 call _cast imag[130] tr))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (259631 call _readOne(259625 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                        }
                                      }
                                      if(259656 call _cond_test(259641 call ! err))
                                      {
                                        { scopeless
                                          (259653 call = err(259652 call _setIfPrimitive(259648 call args i) ti i))
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(260678 call _cond_test(260676 call ||(260670 call == tmp[260619] QIO_CONV_ARG_TYPE_COMPLEX)(260673 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                                    {
                                      { scopeless
                                        unknown tmp[259682] "temp"(259681 call _toComplex(259679 call args i))
                                        (259689 call _check_tuple_var_decl tmp[259682] 2)
                                        unknown t[259670](259683 call tmp[259682] 0)
                                        unknown ok[259672](259686 call tmp[259682] 1)
                                        (259694 'end of statement')
                                      }
                                      if(259773 call _cond_test(259697 call ! ok))
                                      {
                                        (259704 call = err(259703 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          unknown ti[259709] complex[140]
                                          (259712 'end of statement')
                                        }
                                        if(259746 call _cond_test(259719 call ==(259717 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                        {
                                          { scopeless
                                            (259731 call = err(259730 call _read_complex(259724 call . style c"max_width_bytes") ti i))
                                          }
                                        }
                                        {
                                          { scopeless
                                            Try
                                            {
                                              {
                                                (259742 call _readOne(259736 call . iokind c"dynamic") ti origLocale)
                                              }
                                            }
                                          }
                                        }
                                        if(259768 call _cond_test(259753 call ! err))
                                        {
                                          { scopeless
                                            (259765 call = err(259764 call _setIfPrimitive(259760 call args i) ti i))
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(260685 call _cond_test(260682 call == tmp[260619] QIO_CONV_ARG_TYPE_NUMERIC))
                                      {
                                        { scopeless
                                          unknown tmp[259793] "temp"(259792 call _toNumeric(259790 call args i))
                                          (259800 call _check_tuple_var_decl tmp[259793] 2)
                                          unknown t[259781](259794 call tmp[259793] 0)
                                          unknown ok[259783](259797 call tmp[259793] 1)
                                          (259805 'end of statement')
                                        }
                                        if(259858 call _cond_test(259808 call ! ok))
                                        {
                                          (259815 call = err(259814 call qio_format_error_arg_mismatch i))
                                        }
                                        {
                                          { scopeless
                                            unknown ti[259820] t
                                            (259823 'end of statement')
                                          }
                                          Try
                                          {
                                            {
                                              (259833 call _readOne(259827 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                          if(259853 call _cond_test(259838 call ! err))
                                          {
                                            { scopeless
                                              (259850 call = err(259849 call _setIfPrimitive(259845 call args i) ti i))
                                            }
                                          }
                                        }
                                      }
                                      {
                                        if(260692 call _cond_test(260689 call == tmp[260619] QIO_CONV_ARG_TYPE_CHAR))
                                        {
                                          { scopeless
                                            unknown tmp[259878] "temp"(259877 call _toChar(259875 call args i))
                                            (259885 call _check_tuple_var_decl tmp[259878] 2)
                                            unknown t[259866](259879 call tmp[259878] 0)
                                            unknown ok[259868](259882 call tmp[259878] 1)
                                            (259890 'end of statement')
                                          }
                                          { scopeless
                                            unknown chr[259897](259892 'new'(259896 call ioChar t))
                                            (259900 'end of statement')
                                          }
                                          if(259925 call _cond_test(259902 call ! ok))
                                          {
                                            (259909 call = err(259908 call qio_format_error_arg_mismatch i))
                                          }
                                          {
                                            { scopeless
                                              Try
                                              {
                                                {
                                                  (259921 call _readOne(259915 call . iokind c"dynamic") chr origLocale)
                                                }
                                              }
                                            }
                                          }
                                          if(259945 call _cond_test(259931 call ! err))
                                          {
                                            { scopeless
                                              (259943 call _setIfChar(259937 call args i)(259940 call . chr c"ch"))
                                            }
                                          }
                                        }
                                        {
                                          if(260699 call _cond_test(260696 call == tmp[260619] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                          {
                                            { scopeless
                                              unknown tmp[259966] "temp"(259965 call _toBytes(259963 call args i))
                                              (259973 call _check_tuple_var_decl tmp[259966] 2)
                                              unknown t[259954](259967 call tmp[259966] 0)
                                              unknown ok[259956](259970 call tmp[259966] 1)
                                              (259978 'end of statement')
                                            }
                                            if(260004 call _cond_test(259981 call ! ok))
                                            {
                                              (259988 call = err(259987 call qio_format_error_arg_mismatch i))
                                            }
                                            {
                                              { scopeless
                                                Try
                                                {
                                                  {
                                                    (260000 call _readOne(259994 call . iokind c"dynamic") t origLocale)
                                                  }
                                                }
                                              }
                                            }
                                            if(260025 call _cond_test(260010 call ! err))
                                            {
                                              { scopeless
                                                (260022 call = err(260021 call _setIfPrimitive(260017 call args i) t i))
                                              }
                                            }
                                          }
                                          {
                                            if(260706 call _cond_test(260703 call == tmp[260619] QIO_CONV_ARG_TYPE_STRING))
                                            {
                                              { scopeless
                                                unknown tmp[260046] "temp"(260045 call _toString(260043 call args i))
                                                (260053 call _check_tuple_var_decl tmp[260046] 2)
                                                unknown t[260034](260047 call tmp[260046] 0)
                                                unknown ok[260036](260050 call tmp[260046] 1)
                                                (260058 'end of statement')
                                              }
                                              if(260084 call _cond_test(260061 call ! ok))
                                              {
                                                (260068 call = err(260067 call qio_format_error_arg_mismatch i))
                                              }
                                              {
                                                { scopeless
                                                  Try
                                                  {
                                                    {
                                                      (260080 call _readOne(260074 call . iokind c"dynamic") t origLocale)
                                                    }
                                                  }
                                                }
                                              }
                                              if(260105 call _cond_test(260090 call ! err))
                                              {
                                                { scopeless
                                                  (260102 call = err(260101 call _setIfPrimitive(260097 call args i) t i))
                                                }
                                              }
                                            }
                                            {
                                              if(260713 call _cond_test(260710 call == tmp[260619] QIO_CONV_ARG_TYPE_REGEXP))
                                              {
                                                { scopeless
                                                  unknown tmp[260126] "temp"(260125 call _toRegexp(260123 call args i))
                                                  (260133 call _check_tuple_var_decl tmp[260126] 2)
                                                  unknown t[260114](260127 call tmp[260126] 0)
                                                  unknown ok[260116](260130 call tmp[260126] 1)
                                                  (260138 'end of statement')
                                                }
                                                if(260332 call _cond_test(260141 call ! ok))
                                                {
                                                  (260148 call = err(260147 call qio_format_error_arg_mismatch i))
                                                }
                                                {
                                                  if(260166 call _cond_test(260154 call == r nil[44]))
                                                  {
                                                    { scopeless
                                                      (260163 call = r(260159 'new'(_chpl_manager = unmanaged[220](?))(260162 call _channel_regexp_info)))
                                                    }
                                                  }
                                                  { scopeless
                                                    const rnn[260175] "const"(260173 call postfix! r)
                                                    (260178 'end of statement')
                                                  }
                                                  (260184 call(260180 call . rnn c"clear"))
                                                  (260196 call =(260187 call . rnn c"theRegexp")(260193 call . t c"_regexp"))
                                                  (260204 call =(260200 call . rnn c"hasRegexp") 1)
                                                  (260212 call =(260208 call . rnn c"releaseRegexp") 0)
                                                  (260222 call _match_regexp_if_needed cur len err style rnn)
                                                  if(260245 call _cond_test(260235 call >(260232 call -(260229 call + i(260226 call . rnn c"ncaptures")) 1) k))
                                                  {
                                                    (260241 call = err(260240 call qio_format_error_too_few_args))
                                                  }
                                                  {
                                                    unknown _indexOfInterest[260289] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                                    unknown _iterator[260290] "expr temp" "temp"
                                                    (260299 'move' _iterator[260290](260297 call _getIterator(260309 call chpl_direct_counted_range_iter 0(260305 call . rnn c"ncaptures"))))
                                                    Defer
                                                    {
                                                      {
                                                        (260325 call _freeIterator _iterator[260290])
                                                      }
                                                    }
                                                    { scopeless type
                                                      (260314 'move' _indexOfInterest[260289](260311 call iteratorIndex _iterator[260290]))
                                                    }
                                                    ForLoop[260291]
                                                    {
                                                      unknown z[260318] "index var" "insert auto destroy"
                                                      (260320 'move' z[260318] _indexOfInterest[260289])
                                                      {
                                                        if(260284 call _cond_test(260267 call <=(260261 call + i z)(260264 call . argType c"size")))
                                                        {
                                                          (260280 call =(260278 call argType(260275 call +(260272 call + i z) 1)) QIO_CONV_SET_CAPTURE)
                                                        }
                                                      }
                                                      label _continueLabel[260294]
                                                      _indexOfInterest[260289]
                                                      _iterator[260290]
                                                    }
                                                    label _breakLabel[260295]
                                                  }
                                                }
                                              }
                                              {
                                                if(260720 call _cond_test(260717 call == tmp[260619] QIO_CONV_ARG_TYPE_REPR))
                                                {
                                                  Try
                                                  {
                                                    {
                                                      (260351 call _readOne(260342 call . iokind c"dynamic")(260349 call args i) origLocale)
                                                    }
                                                  }
                                                }
                                                {
                                                  if(260727 call _cond_test(260724 call == tmp[260619] QIO_CONV_SET_CAPTURE))
                                                  {
                                                    if(260564 call _cond_test(260362 call == r nil[44]))
                                                    {
                                                      (260368 call = err(260367 call qio_format_error_bad_regexp))
                                                    }
                                                    {
                                                      { scopeless
                                                        const rnn[260375] "const"(260373 call postfix! r)
                                                        (260378 'end of statement')
                                                      }
                                                      (260387 call _match_regexp_if_needed cur len err style rnn)
                                                      if(260560 call _cond_test(260399 call >=(260392 call . rnn c"capturei")(260396 call . rnn c"ncaptures")))
                                                      {
                                                        (260405 call = err(260404 call qio_format_error_bad_regexp))
                                                      }
                                                      {
                                                        if(260547 call _cond_test(260416 call _isIoPrimitiveType(260414 'typeof'(260413 call args i))))
                                                        {
                                                          Try
                                                          {
                                                            {
                                                              if(260514 call _cond_test(260423 call ==(260421 'typeof'(260420 call args i)) string[26]))
                                                              {
                                                                { scopeless
                                                                  (260444 call =(260428 call args i)(260443 call(260439 call .(260438 call(260430 call . rnn c"capArr")(260434 call . rnn c"capturei")) c"decode")))
                                                                }
                                                              }
                                                              {
                                                                { scopeless
                                                                  if(260508 call _cond_test(260454 call isEnumType(260452 'typeof'(260451 call args i))))
                                                                  {
                                                                    { scopeless
                                                                      (260481 call =(260458 call args i)(260479 call _cast(260478 'typeof'(260477 call args i))(260473 call(260469 call .(260468 call(260460 call . rnn c"capArr")(260464 call . rnn c"capturei")) c"decode"))))
                                                                    }
                                                                  }
                                                                  {
                                                                    { scopeless
                                                                      (260505 call =(260487 call args i)(260503 call _cast(260502 'typeof'(260501 call args i))(260497 call(260489 call . rnn c"capArr")(260493 call . rnn c"capturei"))))
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          Catch e : DecodeError
                                                          {
                                                            (260530 call = err(260529 call qio_format_error_arg_mismatch i))
                                                          }
                                                          Catch
                                                          {
                                                            (260539 call = err(260538 call qio_format_error_bad_regexp))
                                                          }
                                                        }
                                                        (260557 call +=(260553 call . rnn c"capturei") 1)
                                                      }
                                                    }
                                                  }
                                                  {
                                                    (260613 'throw'(260573 'new'(_chpl_manager = _owned[30](?))(260612 call IllegalArgumentError(260583 call +(260580 call + "args("(260578 call _cast string[26] i)) ")")(260610 call + "readf internal error "(260608 call _cast string[26](260606 call argType i))))))
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    label _unused_continueLabel[260741]
                    label _breakLabel[260740]
                  }
                  if(260804 call _cond_test(260774 call ! err))
                  {
                    if(260799 call _cond_test(260778 call < cur len))
                    {
                      { scopeless
                        unknown dummy[260781] c_int
                        (260784 'end of statement')
                      }
                      (260797 call _format_reader fmtStr cur len err conv gotConv style r 1)
                    }
                  }
                  if(260828 call _cond_test(260809 call ! err))
                  {
                    if(260823 call _cond_test(260813 call < cur len))
                    {
                      (260819 call = err(260818 call qio_format_error_too_few_args))
                    }
                  }
                  if(260847 call _cond_test(260833 call ! err))
                  {
                    (260838 call qio_channel_commit_unlocked _channel_internal)
                  }
                  {
                    (260844 call qio_channel_revert_unlocked _channel_internal)
                  }
                }
              }
              Catch thrownError : SystemError
              {
                if(260865 call _cond_test(260860 call !=(260856 call . thrownError c"err") EEOF))
                {
                  { scopeless
                    (260863 'throw' thrownError)
                  }
                }
                (260873 call = err EEOF)
              }
            }
          }
        }
        (260892 'on block' 0 tmp[260887])
      }
    }
    if(260942 call _cond_test(260896 call ! err))
    {
      (260899 return 1)
    }
    {
      { scopeless
        if(260938 call _cond_test(260904 call == err EEOF))
        {
          (260907 return 0)
        }
        {
          Try
          {
            {
              (260933 call(260911 call . this c"_ch_ioerror") err "in channel.readf(fmt:string, ...)")
            }
          }
        }
      }
    }
    (260948 return 0)
  }
  where {
    (258760 call ||(258755 call isStringType t)(258759 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[260962](arg _mt[260967]:_MT[238], arg this[260964] :
  channel, arg fmtStr[260959] :
  unknown t[260957]) : _unknown[51] throws "method" "no doc"
  {
    if(260985 call _cond_test writing)
    {
      { scopeless
        (260983 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      unknown err[260993] ENOERR syserr
      (260996 'end of statement')
    }
    { scopeless
      const tmp[261195] "const" "temp"
      (261197 'move' tmp[261195](261193 'deref'(261192 '_wide_get_locale'(260998 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261006 call(261002 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261016 call(261012 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[261027](261026 call(261022 call . this c"_style"))
            (261030 'end of statement')
          }
          Defer
          {
            {
              (261037 call(261032 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[261044] 0 size_t
            (261047 'end of statement')
          }
          { scopeless
            unknown len[261056](261054 call _cast size_t(261050 call . fmtStr c"size")) size_t
            (261059 'end of statement')
          }
          { scopeless
            unknown conv[261061] qio_conv_t
            (261064 'end of statement')
          }
          { scopeless
            unknown gotConv[261066] bool[10]
            (261069 'end of statement')
          }
          { scopeless
            unknown style[261071] iostyle
            (261074 'end of statement')
          }
          { scopeless
            unknown end[261076] size_t
            (261079 'end of statement')
          }
          { scopeless
            unknown dummy[261081] c_int
            (261084 'end of statement')
          }
          { scopeless
            unknown r[261088](261087 'to unmanaged class from unknown'(261086 'to nilable class from type' _channel_regexp_info))
            (261091 'end of statement')
          }
          Defer
          {
            {
              if(261098 call _cond_test r)
              {
                { scopeless
                  (261095 call chpl__delete r)
                }
              }
            }
          }
          (261112 call = err(261111 call qio_channel_mark 0 _channel_internal))
          if(261145 call _cond_test(261116 call ! err))
          {
            (261129 call _format_reader fmtStr cur len err conv gotConv style r 1)
            if(261141 call _cond_test gotConv)
            {
              (261137 call = err(261136 call qio_format_error_too_few_args))
            }
          }
          if(261169 call _cond_test(261150 call ! err))
          {
            if(261164 call _cond_test(261154 call < cur len))
            {
              (261160 call = err(261159 call qio_format_error_too_few_args))
            }
          }
          if(261188 call _cond_test(261174 call ! err))
          {
            (261179 call qio_channel_commit_unlocked _channel_internal)
          }
          {
            (261185 call qio_channel_revert_unlocked _channel_internal)
          }
        }
        (261200 'on block' 0 tmp[261195])
      }
    }
    if(261253 call _cond_test(261204 call ! err))
    {
      (261207 return 1)
    }
    {
      { scopeless
        if(261249 call _cond_test(261212 call == err EEOF))
        {
          (261215 return 0)
        }
        {
          Try
          {
            {
              (261241 call(261219 call . this c"_ch_ioerror") err "in channel.readf(fmt:string)")
            }
          }
          (261247 return 0)
        }
      }
    }
  }
  where {
    (260977 call ||(260972 call isStringType t)(260976 call isBytesType t))
  }
  function readf[261267](arg fmt[261264] :
  string[26], ref arg args[261271]:_any[178](?) ...) : _unknown[51] throws
  {
    (261287 return(261286 'try-expr'(261285 call(261278 call . stdin c"readf") fmt(261284 'expand_tuple' args))))
  }
  { scopeless type
    bool[10]
  }
  function readf[261299](arg fmt[261296] :
  string[26]) : _unknown[51] throws "no doc"
  {
    (261310 return(261309 'try-expr'(261308 call(261303 call . stdin c"readf") fmt)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].skipField[261319](arg _mt[261324]:_MT[238], arg this[261321] :
  channel) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[261328] ENOERR syserr
      (261331 'end of statement')
    }
    { scopeless
      const tmp[261395] "const" "temp"
      (261397 'move' tmp[261395](261393 'deref'(261392 '_wide_get_locale'(261334 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261342 call(261338 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261352 call(261348 call . this c"unlock"))
            }
          }
          { scopeless
            unknown st[261364](261363 call(261358 call . this c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
            (261367 'end of statement')
          }
          if(261388 call _cond_test(261370 call == st QIO_AGGREGATE_FORMAT_JSON))
          {
            (261378 call = err(261377 call qio_channel_skip_json_field 0 _channel_internal))
          }
          {
            (261384 call = err ENOTSUP)
          }
        }
        (261400 'on block' 0 tmp[261395])
      }
    }
    if(261431 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (261427 call(261405 call . this c"_ch_ioerror") err "in skipField")
          }
        }
      }
    }
  }
  function _unknown[51].format[261446](arg _mt[261451]:_MT[238], arg this[261448] :
  string[26], arg args[261443]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261460 return(261459 call chpl_do_format this(261458 'expand_tuple' args)))
      }
    }
    Catch e : IllegalArgumentError
    {
      (261468 'throw' e)
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261498 call ioerror(261477 call . e c"err") "in string.format")
        }
      }
    }
    Catch e : DecodeError
    {
      Try
      {
        {
          (261514 call ioerror(261510 call _cast syserr EILSEQ) "in string.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261527 call ioerror(261523 call _cast syserr EINVAL) "in string.format")
        }
      }
    }
    (261553 return "")
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].format[261566](arg _mt[261571]:_MT[238], arg this[261568] :
  bytes[24], arg args[261563]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261580 return(261579 call chpl_do_format this(261578 'expand_tuple' args)))
      }
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261610 call ioerror(261589 call . e c"err") "in bytes.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261623 call ioerror(261619 call _cast syserr EINVAL) "in bytes.format")
        }
      }
    }
    (261648 return b"")
  }
  { scopeless type
    bytes[24]
  }
  function chpl_do_format[261660](arg fmt[261657] :
  unknown t[261655], arg args[261664]:_any[178](?) ...) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown f[261682](261681 'try-expr'(261680 call openmem))
      (261685 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261692 call(261688 call . f c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    { scopeless
      unknown offset[261705] 0 int[13]
      (261708 'end of statement')
    }
    {
      { scopeless
        unknown w[261718](261717 'try-expr'(261716 call(261710 call . f c"writer")(locking = 0)))
        (261721 'end of statement')
      }
      Defer
      {
        {
          Try
          {
            {
              (261728 call(261724 call . w c"close"))
            }
          }
          Catch
          {
          }
        }
      }
      Try
      {
        {
          (261747 call(261740 call . w c"writef") fmt(261746 'expand_tuple' args))
        }
      }
      (261758 call = offset(261757 call(261753 call . w c"offset")))
      Try
      {
        {
          (261766 call(261762 call . w c"close"))
        }
      }
    }
    { scopeless
      unknown buf[261781](261780 call c_malloc(261774 call uint[115] 8)(261778 call + offset 1))
      (261784 'end of statement')
    }
    { scopeless
      unknown r[261794](261793 'try-expr'(261792 call(261786 call . f c"reader")(locking = 0)))
      (261797 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261803 call(261799 call . r c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    Try
    {
      {
        (261824 call(261815 call . r c"readBytes") buf(261822 call _cast ssize_t offset))
      }
    }
    Try
    {
      {
        (261833 call(261829 call . r c"close"))
      }
    }
    Try
    {
      {
        (261842 call(261838 call . f c"close"))
      }
    }
    (261851 call =(261849 call buf offset) 0)
    if(261880 call _cond_test(261857 call isStringType t))
    {
      { scopeless
        (261867 return(261866 call createStringWithOwnedBuffer buf offset(261864 call + offset 1)))
      }
    }
    {
      { scopeless
        (261878 return(261877 call createBytesWithOwnedBuffer buf offset(261875 call + offset 1)))
      }
    }
  }
  where {
    (261676 call ||(261671 call isStringType t)(261675 call isBytesType t))
  }
  { scopeless type
    t
  }
  (261891 'use' Regexp)
  function qio_regexp_channel_match[261899](const  ref arg re[261896] :
  qio_regexp_t, arg threadsafe[261902] :
  c_int, arg ch[261906] :
  qio_channel_ptr_t, arg maxlen[261913] :
  (261912 call int[13] 64), arg anchor[261917] :
  c_int, arg can_discard[261921] :
  bool[10], arg keep_unmatched[261925] :
  bool[10], arg keep_whole_pattern[261929] :
  bool[10], arg submatch[261936] :
  (261935 call _ddata qio_regexp_string_piece_t), arg nsubmatch[261943] :
  (261942 call int[13] 64)) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._extractMatch[261957](arg _mt[261970]:_MT[238], arg this[261967] :
  channel, arg m[261954] :
  reMatch, ref arg arg[261960] :
  reMatch, ref arg error[261964] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (261974 call = arg m)
  }
  function _unknown[51]._extractMatch[261987](arg _mt[262000]:_MT[238], arg this[261997] :
  channel, arg m[261984] :
  reMatch, ref arg arg[261990] :
  bytes[24], ref arg error[261994] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown cur[262006](262005 call int[13] 64)
      (262009 'end of statement')
    }
    { scopeless
      unknown target[262018](262016 call _cast int[13](262012 call . m c"offset"))
      (262021 'end of statement')
    }
    { scopeless
      unknown len[262026](262023 call . m c"size")
      (262029 'end of statement')
    }
    if(262059 call _cond_test(262036 call !(262033 call . m c"matched")))
    {
      (262055 call = arg b"")
    }
    if(262089 call _cond_test(262064 call ! error))
    {
      (262069 call qio_channel_revert_unlocked _channel_internal)
      (262078 call = error(262077 call qio_channel_mark 0 _channel_internal))
      (262086 call = cur(262085 call qio_channel_offset_unlocked _channel_internal))
    }
    if(262110 call _cond_test(262094 call ! error))
    {
      (262106 call = error(262105 call qio_channel_advance 0 _channel_internal(262103 call - target cur)))
    }
    { scopeless
      unknown s[262115] bytes[24]
      (262118 'end of statement')
    }
    if(262172 call _cond_test(262120 call ! error))
    {
      { scopeless
        unknown gotlen[262126](262125 call int[13] 64)
        (262129 'end of statement')
      }
      { scopeless
        unknown ts[262132] c_string
        (262135 'end of statement')
      }
      (262159 call = error(262158 call qio_channel_read_string 0(262145 call _cast c_int(262141 call . iokind c"native"))(262150 call stringStyleExactLen len) _channel_internal ts gotlen(262156 call _cast ssize_t len)))
      (262169 call = s(262168 call createBytesWithOwnedBuffer ts(length = gotlen)))
    }
    if(262206 call _cond_test(262177 call ! error))
    {
      (262181 call = arg s)
    }
    {
      (262202 call = arg b"")
    }
  }
  function _unknown[51]._extractMatch[262219](arg _mt[262233]:_MT[238], arg this[262230] :
  channel, arg m[262216] :
  reMatch, ref arg arg[262223] :
  unknown t[262221], ref arg error[262227] :
  syserr) : _unknown[51] "method" "no doc"
  {
    if(262263 call _cond_test(262249 call !(262246 call . m c"matched")))
    {
      { scopeless
        unknown empty[262253](262252 'typeof' arg)
        (262256 'end of statement')
      }
      (262260 call = arg empty)
    }
    { scopeless
      unknown s[262269] bytes[24]
      (262272 'end of statement')
    }
    (262278 call _extractMatch m s error)
    if(262337 call _cond_test(262281 call ! error))
    {
      if(262320 call _cond_test(262286 call ==(262284 'typeof' arg) string[26]))
      {
        Try
        {
          {
            (262295 call = arg(262294 call(262290 call . s c"decode")))
          }
        }
        Catch
        {
          (262302 call = error EFORMAT)
        }
      }
      {
        (262316 call = arg(262314 call _cast(262313 'typeof' arg) s))
      }
    }
    {
      { scopeless
        unknown empty[262327](262326 'typeof' arg)
        (262330 'end of statement')
      }
      (262334 call = arg empty)
    }
  }
  where {
    (262243 call &&(262237 call != t reMatch)(262241 call != t bytes[24]))
  }
  function _unknown[51].extractMatch[262351](arg _mt[262358]:_MT[238], arg this[262355] :
  channel, arg m[262348] :
  reMatch, ref arg arg[262353]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[262362] ENOERR syserr
      (262365 'end of statement')
    }
    { scopeless
      const tmp[262401] "const" "temp"
      (262403 'move' tmp[262401](262399 'deref'(262398 '_wide_get_locale'(262368 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262376 call(262372 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262386 call(262382 call . this c"unlock"))
            }
          }
          (262396 call _extractMatch m arg err)
        }
        (262406 'on block' 0 tmp[262401])
      }
    }
    if(262448 call _cond_test err)
    {
      Try
      {
        {
          (262443 call(262411 call . this c"_ch_ioerror") err(262441 call +(262438 call + "in channel.extractMatch(m:reMatch, ref "(262436 call _cast string[26](262434 'typeof' arg))) ")"))
        }
      }
    }
  }
  function _unknown[51].extractMatch[262461](arg _mt[262472]:_MT[238], arg this[262469] :
  channel, arg m[262458] :
  reMatch, ref arg arg[262463]:_any[178](?), ref arg error[262466] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      const tmp[262505] "const" "temp"
      (262507 'move' tmp[262505](262503 'deref'(262502 '_wide_get_locale'(262475 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262483 call(262479 call . this c"lock"))
            }
          }
          (262493 call _extractMatch m arg error)
          (262500 call(262496 call . this c"unlock"))
        }
        (262510 'on block' 0 tmp[262505])
      }
    }
  }
  function _unknown[51]._ch_handle_captures[262526](arg _mt[262541]:_MT[238], arg this[262538] :
  channel, arg matches[262523] :
  (262522 call _ddata qio_regexp_string_piece_t), arg nmatches[262529] :
  int[13], ref arg captures[262532]:_any[178](?), ref arg error[262535] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (262552 call assert(262549 call >= nmatches(262546 call . captures c"size")))
    {
      unknown i[262587] 0
      unknown tmp[262588] "maybe param" "temp"
      (262600 'move' tmp[262588](262598 call chpl_compute_low_param_loop_bound 0(262561 call -(262557 call . captures c"size") 1)))
      unknown tmp[262589] "maybe param" "temp"
      (262613 'move' tmp[262589](262611 call chpl_compute_high_param_loop_bound 0(262605 call -(262607 call . captures c"size") 1)))
      unknown tmp[262590] "maybe param" "temp"
      (262616 'move' tmp[262590] 1)
      ParamForLoop[262618]
      { i[262587] tmp[262588] tmp[262589] tmp[262590]
        {
          { scopeless
            unknown m[262572](262571 call _to_reMatch(262569 call matches i))
            (262575 'end of statement')
          }
          (262585 call _extractMatch m(262583 call captures i) error)
        }
      }
      label _unused_continueLabel[262592]
      label _breakLabel[262591]
    }
  }
  function _unknown[51].search[262639](arg _mt[262648]:_MT[238], arg this[262645] :
  channel, arg re[262636] :
  (262635 call regexp ?[260]), ref arg error[262642] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[262652] reMatch
      (262655 'end of statement')
    }
    { scopeless
      const tmp[262835] "const" "temp"
      (262837 'move' tmp[262835](262833 'deref'(262832 '_wide_get_locale'(262658 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262666 call(262662 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[262672] 1
            (262675 'end of statement')
          }
          { scopeless
            unknown matches[262681](262680 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262684 'end of statement')
          }
          (262691 call = error(262690 call qio_channel_mark 0 _channel_internal))
          if(262724 call _cond_test(262695 call ! error))
          {
            (262720 call = error(262719 call qio_regexp_channel_match(262700 call . re c"_regexp") 0 _channel_internal(262712 call max(262710 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(262743 call _cond_test(262736 call ||(262730 call == error EFORMAT)(262734 call == error EEOF)))
          {
            { scopeless
              (262740 call = error ENOERR)
            }
          }
          if(262815 call _cond_test(262749 call ! error))
          {
            (262759 call = m(262758 call _to_reMatch(262756 call matches 0)))
            if(262811 call _cond_test(262764 call . m c"matched"))
            {
              (262770 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[262777](262776 call qio_channel_offset_unlocked _channel_internal)
                (262780 'end of statement')
              }
              { scopeless
                unknown target[262788](262786 call _cast int[13](262782 call . m c"offset"))
                (262791 'end of statement')
              }
              (262802 call = error(262801 call qio_channel_advance 0 _channel_internal(262799 call - target cur)))
            }
            {
              (262808 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (262823 call _ddata_free matches nm)
          (262830 call(262826 call . this c"unlock"))
        }
        (262840 'on block' 0 tmp[262835])
      }
    }
    (262844 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262859](arg _mt[262864]:_MT[238], arg this[262861] :
  channel, arg re[262856] :
  (262855 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[262869] ENOERR syserr
      (262872 'end of statement')
    }
    { scopeless
      unknown ret[262885](262884 call(262877 call . this c"search") re(error = e))
      (262888 'end of statement')
    }
    if(262917 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (262913 call(262891 call . this c"_ch_ioerror") e "in channel.search")
          }
        }
      }
    }
    (262923 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262938](arg _mt[262948]:_MT[238], arg this[262945] :
  channel, arg re[262935] :
  (262934 call regexp ?[260]), ref arg captures[262942]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    { scopeless
      unknown m[262952] reMatch
      (262955 'end of statement')
    }
    { scopeless
      unknown err[262959] ENOERR syserr
      (262962 'end of statement')
    }
    { scopeless
      const tmp[263158] "const" "temp"
      (263160 'move' tmp[263158](263156 'deref'(263155 '_wide_get_locale'(262964 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262972 call(262968 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262982 call(262978 call . this c"unlock"))
            }
          }
          { scopeless
            unknown nm[262994](262992 call +(262988 call . captures c"size") 1)
            (262997 'end of statement')
          }
          { scopeless
            unknown matches[263003](263002 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263006 'end of statement')
          }
          (263013 call = err(263012 call qio_channel_mark 0 _channel_internal))
          if(263046 call _cond_test(263017 call ! err))
          {
            (263042 call = err(263041 call qio_regexp_channel_match(263022 call . re c"_regexp") 0 _channel_internal(263034 call max(263032 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(263065 call _cond_test(263058 call ||(263052 call == err EFORMAT)(263056 call == err EEOF)))
          {
            { scopeless
              (263062 call = err ENOERR)
            }
          }
          if(263145 call _cond_test(263071 call ! err))
          {
            (263081 call = m(263080 call _to_reMatch(263078 call matches 0)))
            if(263141 call _cond_test(263086 call . m c"matched"))
            {
              (263095 call _ch_handle_captures matches nm captures err)
              (263101 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263107](263106 call qio_channel_offset_unlocked _channel_internal)
                (263110 'end of statement')
              }
              { scopeless
                unknown target[263118](263116 call _cast int[13](263112 call . m c"offset"))
                (263121 'end of statement')
              }
              (263132 call = err(263131 call qio_channel_advance 0 _channel_internal(263129 call - target cur)))
            }
            {
              (263138 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (263153 call _ddata_free matches nm)
        }
        (263163 'on block' 0 tmp[263158])
      }
    }
    if(263178 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (263174 call(263168 call . this c"_ch_ioerror") err "in channel.search")
          }
        }
      }
    }
    (263184 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263199](arg _mt[263208]:_MT[238], arg this[263205] :
  channel, arg re[263196] :
  (263195 call regexp ?[260]), ref arg error[263202] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[263212] reMatch
      (263215 'end of statement')
    }
    { scopeless
      const tmp[263395] "const" "temp"
      (263397 'move' tmp[263395](263393 'deref'(263392 '_wide_get_locale'(263218 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263226 call(263222 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263232] 1
            (263235 'end of statement')
          }
          { scopeless
            unknown matches[263241](263240 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263244 'end of statement')
          }
          (263251 call = error(263250 call qio_channel_mark 0 _channel_internal))
          if(263284 call _cond_test(263255 call ! error))
          {
            (263280 call = error(263279 call qio_regexp_channel_match(263260 call . re c"_regexp") 0 _channel_internal(263272 call max(263270 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263303 call _cond_test(263296 call ||(263290 call == error EFORMAT)(263294 call == error EEOF)))
          {
            { scopeless
              (263300 call = error ENOERR)
            }
          }
          if(263375 call _cond_test(263309 call ! error))
          {
            (263319 call = m(263318 call _to_reMatch(263316 call matches 0)))
            if(263371 call _cond_test(263324 call . m c"matched"))
            {
              (263330 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263337](263336 call qio_channel_offset_unlocked _channel_internal)
                (263340 'end of statement')
              }
              { scopeless
                unknown target[263348](263346 call _cast int[13](263342 call . m c"offset"))
                (263351 'end of statement')
              }
              (263362 call = error(263361 call qio_channel_advance 0 _channel_internal(263359 call - target cur)))
            }
            {
              (263368 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263383 call _ddata_free matches nm)
          (263390 call(263386 call . this c"unlock"))
        }
        (263400 'on block' 0 tmp[263395])
      }
    }
    (263404 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263419](arg _mt[263424]:_MT[238], arg this[263421] :
  channel, arg re[263416] :
  (263415 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263429] ENOERR syserr
      (263432 'end of statement')
    }
    { scopeless
      unknown ret[263445](263444 call(263437 call . this c"match") re(error = e))
      (263448 'end of statement')
    }
    if(263477 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263473 call(263451 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263483 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263498](arg _mt[263512]:_MT[238], arg this[263509] :
  channel, arg re[263495] :
  (263494 call regexp ?[260]), ref arg captures[263502]:_any[178](?) ..., ref arg error[263506] :
  syserr) : _unknown[51] "method"
  {
    { scopeless
      unknown m[263516] reMatch
      (263519 'end of statement')
    }
    { scopeless
      const tmp[263713] "const" "temp"
      (263715 'move' tmp[263713](263711 'deref'(263710 '_wide_get_locale'(263522 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263530 call(263526 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263542](263540 call + 1(263537 call . captures c"size"))
            (263545 'end of statement')
          }
          { scopeless
            unknown matches[263551](263550 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263554 'end of statement')
          }
          (263561 call = error(263560 call qio_channel_mark 0 _channel_internal))
          if(263594 call _cond_test(263565 call ! error))
          {
            (263590 call = error(263589 call qio_regexp_channel_match(263570 call . re c"_regexp") 0 _channel_internal(263582 call max(263580 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263613 call _cond_test(263606 call ||(263600 call == error EFORMAT)(263604 call == error EEOF)))
          {
            { scopeless
              (263610 call = error ENOERR)
            }
          }
          if(263693 call _cond_test(263619 call ! error))
          {
            (263629 call = m(263628 call _to_reMatch(263626 call matches 0)))
            if(263689 call _cond_test(263634 call . m c"matched"))
            {
              (263643 call _ch_handle_captures matches nm captures error)
              (263649 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263655](263654 call qio_channel_offset_unlocked _channel_internal)
                (263658 'end of statement')
              }
              { scopeless
                unknown target[263666](263664 call _cast int[13](263660 call . m c"offset"))
                (263669 'end of statement')
              }
              (263680 call = error(263679 call qio_channel_advance 0 _channel_internal(263677 call - target cur)))
            }
            {
              (263686 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263701 call _ddata_free matches nm)
          (263708 call(263704 call . this c"unlock"))
        }
        (263718 'on block' 0 tmp[263713])
      }
    }
    (263722 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263737](arg _mt[263747]:_MT[238], arg this[263744] :
  channel, arg re[263734] :
  (263733 call regexp ?[260]), ref arg captures[263741]:_any[178](?) ...) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263752] ENOERR syserr
      (263755 'end of statement')
    }
    { scopeless
      unknown ret[263768](263767 call(263758 call . this c"match") re(263764 'expand_tuple' captures)(error = e))
      (263771 'end of statement')
    }
    if(263784 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263780 call(263774 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263790 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].matches[263805](arg _mt[263823]:_MT[238], arg this[263820] :
  channel, arg re[263802] :
  (263801 call regexp ?[260]), param arg captures[263808] =
  0, arg maxmatches[263816] :
  int[13] =
  (263815 call max int[13])) : _unknown[51] "iterator fn" "method"
  {
    { scopeless
      unknown m[263826] reMatch
      (263829 'end of statement')
    }
    { scopeless
      unknown go[263832] 1
      (263835 'end of statement')
    }
    { scopeless
      unknown i[263837] 0
      (263840 'end of statement')
    }
    { scopeless
      unknown error[263843] ENOERR syserr
      (263846 'end of statement')
    }
    { scopeless
      unknown nret[263851] "param"(263849 call + captures 1)
      (263854 'end of statement')
    }
    { scopeless
      unknown ret[263859](263857 call * nret reMatch)
      (263862 'end of statement')
    }
    Try!
    {
      {
        (263865 call lock)
      }
    }
    { scopeless
      const tmp[263882] "const" "temp"
      (263884 'move' tmp[263882](263880 'deref'(263879 '_wide_get_locale'(263870 call . this c"home"))))
      {
        { scopeless
          Try!
          {
            {
              (263875 call _mark)
            }
          }
        }
        (263887 'on block' 0 tmp[263882])
      }
    }
    {
      unknown tmp[264147] "temp"
      (264177 'move' tmp[264147](264169 call _cond_test(264171 call && go(264174 call < i maxmatches))))
      WhileDo[264152]
      {
        {
          { scopeless
            const tmp[264122] "const" "temp"
            (264124 'move' tmp[264122](264120 'deref'(264119 '_wide_get_locale'(263898 call . this c"home"))))
            {
              {
                { scopeless
                  unknown nm[263905](263903 call + 1 captures)
                  (263908 'end of statement')
                }
                { scopeless
                  unknown matches[263915](263914 call _ddata_allocate qio_regexp_string_piece_t nm)
                  (263918 'end of statement')
                }
                if(263949 call _cond_test(263920 call ! error))
                {
                  (263945 call = error(263944 call qio_regexp_channel_match(263925 call . re c"_regexp") 0 _channel_internal(263937 call max(263935 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
                }
                if(264098 call _cond_test(263954 call ! error))
                {
                  (263964 call = m(263963 call _to_reMatch(263961 call matches 0)))
                  if(264094 call _cond_test(263969 call . m c"matched"))
                  {
                    {
                      unknown i[264001] 0
                      unknown tmp[264002] "maybe param" "temp"
                      (264014 'move' tmp[264002](264012 call chpl_compute_low_param_loop_bound 0(263975 call - nret 1)))
                      unknown tmp[264003] "maybe param" "temp"
                      (264024 'move' tmp[264003](264022 call chpl_compute_high_param_loop_bound 0(264019 call - nret 1)))
                      unknown tmp[264004] "maybe param" "temp"
                      (264027 'move' tmp[264004] 1)
                      ParamForLoop[264029]
                      { i[264001] tmp[264002] tmp[264003] tmp[264004]
                        {
                          (263987 call = m(263986 call _to_reMatch(263984 call matches i)))
                          (263999 call _extractMatch m(263997 call ret i) error)
                        }
                      }
                      label _unused_continueLabel[264006]
                      label _breakLabel[264005]
                    }
                    (264042 call qio_channel_revert_unlocked _channel_internal)
                    (264050 call = error(264049 call qio_channel_mark 0 _channel_internal))
                    if(264089 call _cond_test(264054 call ! error))
                    {
                      { scopeless
                        unknown cur[264060](264059 call qio_channel_offset_unlocked _channel_internal)
                        (264063 'end of statement')
                      }
                      { scopeless
                        unknown target[264072](264070 call _cast int[13](264066 call . m c"offset"))
                        (264075 'end of statement')
                      }
                      (264086 call = error(264085 call qio_channel_advance 0 _channel_internal(264083 call - target cur)))
                    }
                  }
                  {
                  }
                }
                (264106 call _ddata_free matches nm)
                if(264114 call _cond_test error)
                {
                  { scopeless
                    (264111 call = go 0)
                  }
                }
              }
              (264127 'on block' 0 tmp[264122])
            }
          }
          if(264137 call _cond_test(264132 call ! error))
          {
            { scopeless
              (264135 yield ret)
            }
          }
          (264144 call += i 1)
        }
        label _continueLabel[264150]
        (264164 'move' tmp[264147](264156 call _cond_test(264158 call && go(264161 call < i maxmatches))))
        tmp[264147]
      }
      label _breakLabel[264151]
    }
    (264182 call _commit)
    (264186 call unlock)
    if(264203 call _cond_test(264196 call ||(264190 call == error EFORMAT)(264194 call == error EEOF)))
    {
      { scopeless
        (264200 call = error ENOERR)
      }
    }
    if(264236 call _cond_test error)
    {
      { scopeless
        Try!
        {
          {
            (264232 call(264210 call . this c"_ch_ioerror") error "in channel.matches")
          }
        }
      }
    }
  }
}