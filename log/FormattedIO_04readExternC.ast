AST dump for FormattedIO after pass readExternC.
Module use list: 

{
  (353121 'use' ChapelStandard)
  (251358 'use' IO)
  (251362 'use' SysCTypes)
  (251365 'use' SysBasic)
  (251368 'use' SysError)
  function _toIntegral[251377](arg x[251374] :
  unknown t[251372]) : _unknown[51] "inline" "private"
  {
    (251388 return(251386 call _build_tuple x 1))
  }
  where {
    (251382 call isIntegralType t)
  }
  function _toIntegral[251401](arg x[251398] :
  unknown t[251396]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251420](251418 call _build_tuple int[13] bool[10])
      (251423 'end of statement')
    }
    if(251450 call _cond_test(251428 call isAbstractEnumType t))
    {
      { scopeless
        (251435 call = ret(251433 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251447 call = ret(251445 call _build_tuple(251441 call _cast int[13] x) 1))
      }
    }
    (251457 return ret)
  }
  where {
    (251413 call &&(251406 call _isIoPrimitiveType t)(251411 call !(251410 call isIntegralType t)))
  }
  function _toIntegral[251469](arg x[251466] :
  unknown t[251464]) : _unknown[51] "inline" "private"
  {
    (251482 return(251480 call _build_tuple 0 0))
  }
  where {
    (251475 call !(251474 call _isIoPrimitiveType t))
  }
  function _toSigned[251495](arg x[251492] :
  unknown t[251490]) : _unknown[51] "inline" "private"
  {
    (251506 return(251504 call _build_tuple x 1))
  }
  where {
    (251500 call isIntType t)
  }
  function _toSigned[251521](arg x[251518] :
  (251517 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (251534 return(251532 call _build_tuple(251528 call _cast(251527 call int[13] 8) x) 1))
  }
  function _toSigned[251548](arg x[251545] :
  (251544 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (251561 return(251559 call _build_tuple(251555 call _cast(251554 call int[13] 16) x) 1))
  }
  function _toSigned[251575](arg x[251572] :
  (251571 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (251588 return(251586 call _build_tuple(251582 call _cast(251581 call int[13] 32) x) 1))
  }
  function _toSigned[251602](arg x[251599] :
  (251598 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (251615 return(251613 call _build_tuple(251609 call _cast(251608 call int[13] 64) x) 1))
  }
  function _toSigned[251627](arg x[251624] :
  unknown t[251622]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251646](251644 call _build_tuple int[13] bool[10])
      (251649 'end of statement')
    }
    if(251676 call _cond_test(251654 call isAbstractEnumType t))
    {
      { scopeless
        (251661 call = ret(251659 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (251673 call = ret(251671 call _build_tuple(251667 call _cast int[13] x) 1))
      }
    }
    (251683 return ret)
  }
  where {
    (251639 call &&(251632 call _isIoPrimitiveType t)(251637 call !(251636 call isIntegralType t)))
  }
  function _toSigned[251695](arg x[251692] :
  unknown t[251690]) : _unknown[51] "inline" "private"
  {
    (251711 return(251709 call _build_tuple(251705 call _cast int[13] 0) 0))
  }
  where {
    (251701 call !(251700 call _isIoPrimitiveType t))
  }
  function _toUnsigned[251724](arg x[251721] :
  unknown t[251719]) : _unknown[51] "inline" "private"
  {
    (251735 return(251733 call _build_tuple x 1))
  }
  where {
    (251729 call isUintType t)
  }
  function _toUnsigned[251750](arg x[251747] :
  (251746 call int[13] 8)) : _unknown[51] "inline" "private"
  {
    (251763 return(251761 call _build_tuple(251757 call _cast(251756 call uint[115] 8) x) 1))
  }
  function _toUnsigned[251777](arg x[251774] :
  (251773 call int[13] 16)) : _unknown[51] "inline" "private"
  {
    (251790 return(251788 call _build_tuple(251784 call _cast(251783 call uint[115] 16) x) 1))
  }
  function _toUnsigned[251804](arg x[251801] :
  (251800 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (251817 return(251815 call _build_tuple(251811 call _cast(251810 call uint[115] 32) x) 1))
  }
  function _toUnsigned[251831](arg x[251828] :
  (251827 call int[13] 64)) : _unknown[51] "inline" "private"
  {
    (251844 return(251842 call _build_tuple(251838 call _cast(251837 call uint[115] 64) x) 1))
  }
  function _toUnsigned[251856](arg x[251853] :
  unknown t[251851]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251875](251873 call _build_tuple uint[115] bool[10])
      (251878 'end of statement')
    }
    if(251908 call _cond_test(251883 call isAbstractEnumType t))
    {
      { scopeless
        (251893 call = ret(251891 call _build_tuple(251887 call _cast uint[115] 0) 0))
      }
    }
    {
      { scopeless
        (251905 call = ret(251903 call _build_tuple(251899 call _cast uint[115] x) 1))
      }
    }
    (251915 return ret)
  }
  where {
    (251868 call &&(251861 call _isIoPrimitiveType t)(251866 call !(251865 call isIntegralType t)))
  }
  function _toUnsigned[251927](arg x[251924] :
  unknown t[251922]) : _unknown[51] "inline" "private"
  {
    (251943 return(251941 call _build_tuple(251937 call _cast uint[115] 0) 0))
  }
  where {
    (251933 call !(251932 call _isIoPrimitiveType t))
  }
  function _toReal[251956](arg x[251953] :
  unknown t[251951]) : _unknown[51] "inline" "private"
  {
    (251967 return(251965 call _build_tuple x 1))
  }
  where {
    (251961 call isRealType t)
  }
  function _toReal[251980](arg x[251977] :
  unknown t[251975]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[251999](251997 call _build_tuple real[16] bool[10])
      (252002 'end of statement')
    }
    if(252029 call _cond_test(252007 call isAbstractEnumType t))
    {
      { scopeless
        (252014 call = ret(252012 call _build_tuple 0.0 0))
      }
    }
    {
      { scopeless
        (252026 call = ret(252024 call _build_tuple(252020 call _cast real[16] x) 1))
      }
    }
    (252036 return ret)
  }
  where {
    (251992 call &&(251985 call _isIoPrimitiveType t)(251990 call !(251989 call isRealType t)))
  }
  function _toReal[252048](arg x[252045] :
  unknown t[252043]) : _unknown[51] "inline" "private"
  {
    (252061 return(252059 call _build_tuple 0.0 0))
  }
  where {
    (252054 call !(252053 call _isIoPrimitiveType t))
  }
  function _toImag[252074](arg x[252071] :
  unknown t[252069]) : _unknown[51] "inline" "private"
  {
    (252085 return(252083 call _build_tuple x 1))
  }
  where {
    (252079 call isImagType t)
  }
  function _toImag[252098](arg x[252095] :
  unknown t[252093]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252117](252115 call _build_tuple imag[130] bool[10])
      (252120 'end of statement')
    }
    if(252147 call _cond_test(252125 call isAbstractEnumType t))
    {
      { scopeless
        (252132 call = ret(252130 call _build_tuple 0.0i 0))
      }
    }
    {
      { scopeless
        (252144 call = ret(252142 call _build_tuple(252138 call _cast imag[130] x) 1))
      }
    }
    (252154 return ret)
  }
  where {
    (252110 call &&(252103 call _isIoPrimitiveType t)(252108 call !(252107 call isImagType t)))
  }
  function _toImag[252166](arg x[252163] :
  unknown t[252161]) : _unknown[51] "inline" "private"
  {
    (252179 return(252177 call _build_tuple 0.0i 0))
  }
  where {
    (252172 call !(252171 call _isIoPrimitiveType t))
  }
  function _toComplex[252192](arg x[252189] :
  unknown t[252187]) : _unknown[51] "inline" "private"
  {
    (252203 return(252201 call _build_tuple x 1))
  }
  where {
    (252197 call isComplexType t)
  }
  function _toComplex[252216](arg x[252213] :
  unknown t[252211]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252235](252233 call _build_tuple complex[140] bool[10])
      (252238 'end of statement')
    }
    if(252268 call _cond_test(252243 call isAbstractEnumType t))
    {
      { scopeless
        (252253 call = ret(252251 call _build_tuple(252247 call + 0.0 0.0i) 0))
      }
    }
    {
      { scopeless
        (252265 call = ret(252263 call _build_tuple(252259 call _cast complex[140] x) 1))
      }
    }
    (252275 return ret)
  }
  where {
    (252228 call &&(252221 call _isIoPrimitiveType t)(252226 call !(252225 call isComplexType t)))
  }
  function _toComplex[252287](arg x[252284] :
  unknown t[252282]) : _unknown[51] "inline" "private"
  {
    (252303 return(252301 call _build_tuple(252297 call + 0.0 0.0i) 0))
  }
  where {
    (252293 call !(252292 call _isIoPrimitiveType t))
  }
  function _toRealOrComplex[252316](arg x[252313] :
  unknown t[252311]) : _unknown[51] "inline" "private"
  {
    (252327 return(252325 call _build_tuple x 1))
  }
  where {
    (252321 call isComplexType t)
  }
  function _toRealOrComplex[252340](arg x[252337] :
  unknown t[252335]) : _unknown[51] "inline" "private"
  {
    (252351 return(252349 call _build_tuple x 1))
  }
  where {
    (252345 call isFloatType t)
  }
  function _toRealOrComplex[252364](arg x[252361] :
  unknown t[252359]) : _unknown[51] "inline" "private"
  {
    (252394 return(252392 call _build_tuple(252388 call _cast real[16] x) 1))
  }
  where {
    (252384 call &&(252376 call &&(252369 call _isIoPrimitiveType t)(252374 call !(252373 call isComplexType t)))(252382 call !(252381 call isFloatType t)))
  }
  function _toRealOrComplex[252407](arg x[252404] :
  unknown t[252402]) : _unknown[51] "inline" "private"
  {
    (252420 return(252418 call _build_tuple 0.0 0))
  }
  where {
    (252413 call !(252412 call _isIoPrimitiveType t))
  }
  function _toNumeric[252433](arg x[252430] :
  unknown t[252428]) : _unknown[51] "inline" "private"
  {
    (252444 return(252442 call _build_tuple x 1))
  }
  where {
    (252438 call isNumericType t)
  }
  function _toNumeric[252457](arg x[252454] :
  unknown t[252452]) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown ret[252476](252474 call _build_tuple int[13] bool[10])
      (252479 'end of statement')
    }
    if(252506 call _cond_test(252484 call isAbstractEnumType t))
    {
      { scopeless
        (252491 call = ret(252489 call _build_tuple 0 0))
      }
    }
    {
      { scopeless
        (252503 call = ret(252501 call _build_tuple(252497 call _cast int[13] x) 1))
      }
    }
    (252513 return ret)
  }
  where {
    (252469 call &&(252462 call _isIoPrimitiveType t)(252467 call !(252466 call isNumericType t)))
  }
  function _toNumeric[252525](arg x[252522] :
  unknown t[252520]) : _unknown[51] "inline" "private"
  {
    (252538 return(252536 call _build_tuple 0 0))
  }
  where {
    (252531 call !(252530 call _isIoPrimitiveType t))
  }
  function _toBytes[252550](arg x[252547] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252557 return(252555 call _build_tuple x 1))
  }
  function _toBytes[252568](arg x[252565] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252578 return(252576 call _build_tuple(252572 call _cast bytes[24] x) 1))
  }
  function _toBytes[252590](arg x[252587] :
  unknown t[252585]) : _unknown[51] "inline" "private"
  {
    (252616 return(252614 call _build_tuple(252610 call _cast bytes[24] "") 0))
  }
  function _toString[252627](arg x[252624] :
  string[26]) : _unknown[51] "inline" "private"
  {
    (252634 return(252632 call _build_tuple x 1))
  }
  function _toString[252645](arg x[252642] :
  bytes[24]) : _unknown[51] "inline" "private"
  {
    (252668 return(252666 call _build_tuple "" 0))
  }
  function _toString[252680](arg x[252677] :
  unknown t[252675]) : _unknown[51] "inline" "private"
  {
    (252706 return(252704 call _build_tuple(252700 call _cast string[26] x) 1))
  }
  where {
    (252696 call &&(252690 call &&(252685 call _isIoPrimitiveType t)(252688 call != t bytes[24]))(252694 call != t string[26]))
  }
  function _toString[252719](arg x[252716] :
  unknown t[252714]) : _unknown[51] "inline" "private"
  {
    (252748 return(252746 call _build_tuple "" 0))
  }
  where {
    (252725 call !(252724 call _isIoPrimitiveType t))
  }
  function _toChar[252761](arg x[252758] :
  unknown t[252756]) : _unknown[51] "inline" "private"
  {
    (252778 return(252776 call _build_tuple(252772 call _cast(252771 call int[13] 32) x) 1))
  }
  where {
    (252766 call isIntegralType t)
  }
  function _toChar[252791](arg x[252788] :
  unknown t[252786]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown chr[252801](252800 call int[13] 32)
      (252804 'end of statement')
    }
    { scopeless
      unknown nbytes[252807] c_int
      (252810 'end of statement')
    }
    { scopeless
      unknown local_x[252817](252816 call(252812 call . x c"localize"))
      (252820 'end of statement')
    }
    (252838 call qio_decode_char_buf chr nbytes(252830 call(252826 call . local_x c"c_str"))(252836 call _cast ssize_t(252832 call . local_x c"numBytes")))
    (252845 return(252843 call _build_tuple chr 1))
  }
  where {
    (252795 call == t string[26])
  }
  function _toChar[252857](arg x[252854] :
  unknown t[252852]) : _unknown[51] "inline" "private"
  {
    (252882 return(252880 call _build_tuple(252876 call _cast(252875 call int[13] 32) 0) 0))
  }
  where {
    (252869 call !(252867 call ||(252861 call == t string[26])(252866 call isIntegralType t)))
  }
  function _setIfPrimitive[252895](ref arg lhs[252892] :
  unknown t[252890], arg rhs[252899] :
  unknown t2[252897], arg argi[252903] :
  int[13]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown empty[252918] t2
      (252921 'end of statement')
    }
    if(252939 call _cond_test(252925 call == rhs empty))
    {
      (252929 call = lhs 0)
    }
    {
      (252935 call = lhs 1)
    }
    (252944 return ENOERR)
  }
  where {
    (252915 call &&(252909 call == t bool[10])(252914 call _isIoPrimitiveType t2))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[252957](ref arg lhs[252954] :
  unknown t[252952], arg rhs[252961] :
  unknown t2[252959], arg argi[252965] :
  int[13]) : _unknown[51] "inline" "private"
  {
    Try
    {
      {
        if(253088 call _cond_test(252982 call isAbstractEnumType t))
        {
          if(253000 call _cond_test(252986 call isStringType t2))
          {
            (252992 call = lhs(252990 call _cast t rhs))
          }
          {
            (252997 return ERANGE)
          }
        }
        {
          { scopeless
            if(253084 call _cond_test(253008 call isEnumType t))
            {
              if(253040 call _cond_test(253017 call ||(253012 call isIntType t2)(253016 call isStringType t2)))
              {
                (253024 call = lhs(253022 call _cast t rhs))
              }
              {
                (253036 call = lhs(253034 call _cast t(253031 call _cast int[13] rhs)))
              }
            }
            {
              if(253079 call _cond_test(253053 call &&(253048 call isBytesType t2)(253052 call isStringType t)))
              {
                (253066 call = lhs(253065 call(253057 call . rhs c"decode")(253061 call . decodePolicy c"strict")))
              }
              {
                (253075 call = lhs(253073 call _cast t rhs))
              }
            }
          }
        }
      }
    }
    Catch
    {
      (253096 return ERANGE)
    }
    (253104 return ENOERR)
  }
  where {
    (252977 call &&(252971 call != t bool[10])(252976 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfPrimitive[253117](ref arg lhs[253114] :
  unknown t[253112], arg rhs[253119]:_any[178](?), arg argi[253122] :
  int[13]) : _unknown[51] "inline" "private"
  {
    (253136 return(253135 call qio_format_error_arg_mismatch argi))
  }
  where {
    (253130 call !(253129 call _isIoPrimitiveType t))
  }
  { scopeless type
    syserr
  }
  function _setIfChar[253150](ref arg lhs[253147] :
  unknown t[253145], arg rhs[253156] :
  (253155 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253172 call = lhs(253170 call _cast string[26](253164 'new'(253168 call ioChar rhs))))
  }
  where {
    (253161 call == t string[26])
  }
  function _setIfChar[253186](ref arg lhs[253183] :
  unknown t[253181], arg rhs[253192] :
  (253191 call int[13] 32)) : _unknown[51] "inline" "private"
  {
    (253204 call = lhs(253202 call _cast t rhs))
  }
  where {
    (253198 call isIntegralType t)
  }
  function _setIfChar[253218](ref arg lhs[253215] :
  unknown t[253213], arg rhs[253224] :
  (253223 call int[13] 32)) : _unknown[51] "inline" "private"
  {
  }
  where {
    (253237 call !(253235 call ||(253229 call == t string[26])(253234 call isIntegralType t)))
  }
  function _toRegexp[253250](arg x[253247] :
  unknown t[253245]) : _unknown[51] "inline" "private"
  {
    (253265 return(253263 call _build_tuple x 1))
  }
  where {
    (253259 call isSubtype t(253258 call regexp ?[260]))
  }
  function _toRegexp[253278](arg x[253275] :
  unknown t[253273]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown r[253284](253283 call regexp string[26])
      (253287 'end of statement')
    }
    (253294 return(253292 call _build_tuple r 0))
  }
  type _channel_regexp_info[253686] unknown hasRegexp[253300] 0 unknown matchedRegexp[253305] 0 unknown releaseRegexp[253310] 0 unknown theRegexp[253317](253316 call qio_regexp_null) unknown matches[253326] nil[44](253324 call _ddata qio_regexp_string_piece_t) unknown capArr[253335] nil[44](253333 call _ddata bytes[24]) unknown capturei[253340] int[13] unknown ncaptures[253345] int[13] function _channel_regexp_info[253686].clear[253351](arg _mt[253690]:_MT[238], arg this[253688]:_channel_regexp_info[253686]) : _unknown[51] "method" "primary method"
  {
    if(253360 call _cond_test releaseRegexp)
    {
      (253357 call qio_regexp_release theRegexp)
    }
    (253369 call = theRegexp(253368 call qio_regexp_null))
    (253374 call = hasRegexp 0)
    (253379 call = matchedRegexp 0)
    (253384 call = releaseRegexp 0)
    if(253397 call _cond_test matches)
    {
      { scopeless
        (253395 call _ddata_free matches(253393 call + ncaptures 1))
      }
    }
    {
      unknown _indexOfInterest[253432] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[253433] "expr temp" "temp"
      (253442 'move' _iterator[253433](253440 call _getIterator(253449 call chpl_direct_counted_range_iter 0 ncaptures)))
      Defer
      {
        {
          (253465 call _freeIterator _iterator[253433])
        }
      }
      { scopeless type
        (253454 'move' _indexOfInterest[253432](253451 call iteratorIndex _iterator[253433]))
      }
      ForLoop[253434]
      {
        unknown i[253458] "index var" "insert auto destroy"
        (253460 'move' i[253458] _indexOfInterest[253432])
        { scopeless
          (253429 call =(253412 call capArr i) b"")
        }
        label _continueLabel[253437]
        _indexOfInterest[253432]
        _iterator[253433]
      }
      label _breakLabel[253438]
    }
    if(253479 call _cond_test capArr)
    {
      { scopeless
        (253477 call _ddata_free capArr ncaptures)
      }
    }
  } function _channel_regexp_info[253686].allocate_captures[253488](arg _mt[253694]:_MT[238], arg this[253692]:_channel_regexp_info[253686]) : _unknown[51] "method" "primary method"
  {
    (253495 call = ncaptures(253494 call qio_regexp_get_ncaptures theRegexp))
    (253508 call = matches(253507 call _ddata_allocate qio_regexp_string_piece_t(253505 call + ncaptures 1)))
    (253517 call = capArr(253516 call _ddata_allocate bytes[24] ncaptures))
    (253522 call = capturei 0)
  } function _channel_regexp_info[253686].deinit[253529](arg _mt[253698]:_MT[238], arg this[253696]:_channel_regexp_info[253686]) : _unknown[51] "destructor" "method" "primary method"
  {
    (253533 call clear)
  } function _channel_regexp_info[253686].writeThis[253542](arg _mt[253702]:_MT[238], arg this[253700]:_channel_regexp_info[253686], arg f[253540]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides"
  {
    (253568 call <~> f(253566 call + "{hasRegexp = "(253564 call _cast string[26] hasRegexp)))
    (253596 call <~> f(253594 call + ", matchedRegexp = "(253592 call _cast string[26] matchedRegexp)))
    (253623 call <~> f(253621 call + ", releaseRegexp = "(253619 call _cast string[26] releaseRegexp)))
    (253650 call <~> f(253648 call + ", ... capturei = "(253646 call _cast string[26] capturei)))
    (253680 call <~> f(253678 call +(253675 call + ", ncaptures = "(253673 call _cast string[26] ncaptures)) "}"))
  }
  function _unknown[51]._match_regexp_if_needed[253712](arg _mt[253734]:_MT[238], arg this[253731] :
  channel, arg cur[253709] :
  size_t, arg len[253715] :
  size_t, ref arg error[253719] :
  syserr, ref arg style[253723] :
  iostyle, arg r[253728] :
  (253727 'to unmanaged class from unknown' _channel_regexp_info)) : _unknown[51] "method" "no doc"
  {
    if(254135 call _cond_test(253744 call qio_regexp_ok(253740 call . r c"theRegexp")))
    {
      if(253753 call _cond_test(253748 call . r c"matchedRegexp"))
      {
        { scopeless
          (253751 return)
        }
      }
      (253764 call =(253760 call . r c"matchedRegexp") 1)
      (253774 call(253770 call . r c"allocate_captures"))
      { scopeless
        unknown ncaps[253782](253779 call . r c"ncaptures")
        (253785 'end of statement')
      }
      { scopeless
        unknown nm[253790](253788 call + ncaps 1)
        (253793 'end of statement')
      }
      { scopeless
        unknown maxlen[253804](253801 call . style c"max_width_characters")(253797 call int[13] 64)
        (253807 'end of statement')
      }
      { scopeless
        unknown can_discard[253812](253810 call == cur len)
        (253815 'end of statement')
      }
      if(253837 call _cond_test(253824 call == maxlen(253823 call max(253821 call uint[115] 32))))
      {
        { scopeless
          (253834 call = maxlen(253833 call max(253831 call int[13] 64)))
        }
      }
      { scopeless
        unknown before_match[253846](253845 call qio_channel_offset_unlocked _channel_internal)
        (253849 'end of statement')
      }
      (253872 call = error(253871 call qio_regexp_channel_match(253853 call . r c"theRegexp") 0 _channel_internal maxlen QIO_REGEXP_ANCHOR_START can_discard 1 0(253867 call . r c"matches") nm))
      { scopeless
        unknown after_match[253879](253878 call qio_channel_offset_unlocked _channel_internal)
        (253882 'end of statement')
      }
      if(254121 call _cond_test(253884 call ! error))
      {
        {
          unknown _indexOfInterest[253935] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[253936] "expr temp" "temp"
          (253945 'move' _iterator[253936](253943 call _getIterator(253952 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (253968 call _freeIterator _iterator[253936])
            }
          }
          { scopeless type
            (253957 'move' _indexOfInterest[253935](253954 call iteratorIndex _iterator[253936]))
          }
          ForLoop[253937]
          {
            unknown j[253961] "index var" "insert auto destroy"
            (253963 'move' j[253961] _indexOfInterest[253935])
            {
              { scopeless
                unknown m[253906](253905 call _to_reMatch(253903 call(253895 call . r c"matches")(253900 call + 1 j)))
                (253909 'end of statement')
              }
              (253924 call _extractMatch m(253922 call(253917 call . r c"capArr") j) error)
              if(253930 call _cond_test error)
              {
                { scopeless
                  break nil[44]
                }
              }
            }
            label _continueLabel[253940]
            _indexOfInterest[253935]
            _iterator[253936]
          }
          label _breakLabel[253941]
        }
        { scopeless
          unknown cur[253980](253979 call qio_channel_offset_unlocked _channel_internal)
          (253983 'end of statement')
        }
        { scopeless
          unknown target[254011](254009 call _cast int[13](254006 call +(253991 call .(253990 call(253985 call . r c"matches") 0) c"offset")(254003 call .(254000 call(253995 call . r c"matches") 0) c"len")))
          (254014 'end of statement')
        }
        (254025 call = error(254024 call qio_channel_advance 0 _channel_internal(254022 call - target cur)))
      }
      {
        {
          unknown _indexOfInterest[254062] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[254063] "expr temp" "temp"
          (254072 'move' _iterator[254063](254070 call _getIterator(254079 call chpl_direct_counted_range_iter 0 ncaps)))
          Defer
          {
            {
              (254095 call _freeIterator _iterator[254063])
            }
          }
          { scopeless type
            (254084 'move' _indexOfInterest[254062](254081 call iteratorIndex _iterator[254063]))
          }
          ForLoop[254064]
          {
            unknown j[254088] "index var" "insert auto destroy"
            (254090 'move' j[254088] _indexOfInterest[254062])
            {
              (254058 call =(254041 call(254036 call . r c"capArr") j) b"")
            }
            label _continueLabel[254067]
            _indexOfInterest[254062]
            _iterator[254063]
          }
          label _breakLabel[254068]
        }
        { scopeless
          unknown cur[254107](254106 call qio_channel_offset_unlocked _channel_internal)
          (254110 'end of statement')
        }
        (254119 call qio_channel_advance 0 _channel_internal(254117 call - before_match cur))
      }
    }
    {
      (254129 call = error(254128 call qio_format_error_bad_regexp))
      {
      }
    }
  }
  function _unknown[51]._format_reader[254150](arg _mt[254189]:_MT[238], arg this[254186] :
  channel, arg fmtStr[254147] :
  unknown fmtType[254145], ref arg cur[254153] :
  size_t, arg len[254157] :
  size_t, ref arg error[254161] :
  syserr, ref arg conv[254165] :
  qio_conv_t, ref arg gotConv[254169] :
  bool[10], ref arg style[254173] :
  iostyle, ref arg r[254179] :
  (254178 'to unmanaged class from unknown'(254177 'to nilable class from type' _channel_regexp_info)), arg isReadf[254183] :
  bool[10]) : _unknown[51] "method" "no doc"
  {
    if(254207 call _cond_test(254193 call != r nil[44]))
    {
      { scopeless
        (254204 call =(254200 call .(254196 call postfix! r) c"hasRegexp") 0)
      }
    }
    if(254738 call _cond_test(254214 call ! error))
    {
      { scopeless
        unknown fmt[254227](254226 call(254222 call .(254221 call(254217 call . fmtStr c"localize")) c"c_str"))
        (254230 'end of statement')
      }
      {
        unknown tmp[254711] "temp"
        (254735 'move' tmp[254711](254730 call _cond_test(254732 call < cur len)))
        WhileDo[254716]
        {
          {
            (254238 call = gotConv 0)
            if(254246 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            { scopeless
              unknown end[254255](254254 call uint[115] 64)
              (254258 'end of statement')
            }
            (254269 call = error(254268 call qio_conv_parse fmt cur end isReadf conv style))
            if(254274 call _cond_test error)
            {
            }
            (254283 call = cur(254281 call _cast size_t end))
            if(254290 call _cond_test error)
            {
              { scopeless
                break nil[44]
              }
            }
            if(254706 call _cond_test(254302 call ==(254298 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_LITERAL))
            {
              if(254475 call _cond_test isReadf)
              {
                if(254448 call _cond_test(254312 call ==(254308 call . conv c"literal_is_whitespace") 2))
                {
                  { scopeless
                    unknown offsetA[254318](254317 call qio_channel_offset_unlocked _channel_internal)
                    (254321 'end of statement')
                  }
                  (254330 call = error(254329 call qio_channel_skip_past_newline 0 _channel_internal 1))
                  { scopeless
                    unknown offsetB[254337](254336 call qio_channel_offset_unlocked _channel_internal)
                    (254340 'end of statement')
                  }
                  if(254356 call _cond_test(254348 call &&(254342 call ! error)(254346 call == offsetA offsetB)))
                  {
                    (254352 call = error EFORMAT)
                  }
                }
                {
                  { scopeless
                    if(254444 call _cond_test(254365 call ==(254361 call . conv c"literal_is_whitespace") 1))
                    {
                      { scopeless
                        unknown offsetA[254371](254370 call qio_channel_offset_unlocked _channel_internal)
                        (254374 'end of statement')
                      }
                      (254390 call = error(254389 call qio_channel_scan_literal_2 0 _channel_internal(254384 call . conv c"literal") 0 1))
                      { scopeless
                        unknown offsetB[254397](254396 call qio_channel_offset_unlocked _channel_internal)
                        (254400 'end of statement')
                      }
                      if(254416 call _cond_test(254408 call &&(254402 call ! error)(254406 call == offsetA offsetB)))
                      {
                        (254412 call = error EFORMAT)
                      }
                    }
                    {
                      (254440 call = error(254439 call qio_channel_scan_literal_2 0 _channel_internal(254426 call . conv c"literal")(254436 call _cast ssize_t(254432 call . conv c"literal_length")) 0))
                    }
                  }
                }
              }
              {
                (254471 call = error(254470 call qio_channel_print_literal_2 0 _channel_internal(254460 call . conv c"literal")(254468 call _cast ssize_t(254464 call . conv c"literal_length"))))
              }
            }
            {
              { scopeless
                if(254702 call _cond_test(254485 call ==(254481 call . conv c"argType") QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL))
                {
                  if(254688 call _cond_test(254488 call ! isReadf))
                  {
                    (254494 call = error(254493 call qio_format_error_write_regexp))
                  }
                  {
                    if(254512 call _cond_test(254500 call == r nil[44]))
                    {
                      { scopeless
                        (254509 call = r(254505 'new'(_chpl_manager = unmanaged[220](?))(254508 call _channel_regexp_info)))
                      }
                    }
                    { scopeless
                      const rnn[254521] "const"(254519 call postfix! r)
                      (254524 'end of statement')
                    }
                    (254530 call(254526 call . rnn c"clear"))
                    { scopeless
                      unknown errstr[254533] string[26]
                      (254536 'end of statement')
                    }
                    (254571 call qio_regexp_create_compile_flags_2(254541 call . conv c"regexp")(254548 call . conv c"regexp_length")(254554 call . conv c"regexp_flags")(254560 call . conv c"regexp_flags_length")(254565 call == fmtType string[26])(254568 call . rnn c"theRegexp"))
                    (254580 call =(254576 call . rnn c"releaseRegexp") 1)
                    if(254684 call _cond_test(254589 call qio_regexp_ok(254585 call . rnn c"theRegexp")))
                    {
                      (254595 call =(254591 call . rnn c"hasRegexp") 1)
                      (254610 call =(254600 call . rnn c"ncaptures")(254609 call qio_regexp_get_ncaptures(254605 call . rnn c"theRegexp")))
                      if(254672 call _cond_test(254651 call ||(254640 call ||(254629 call ||(254618 call >(254614 call . rnn c"ncaptures") 0)(254627 call !=(254623 call . conv c"preArg1") QIO_CONV_UNK))(254638 call !=(254634 call . conv c"preArg2") QIO_CONV_UNK))(254649 call !=(254645 call . conv c"preArg3") QIO_CONV_UNK)))
                      {
                        (254655 call = gotConv 1)
                        break nil[44]
                      }
                      {
                        (254669 call _match_regexp_if_needed cur len error style rnn)
                      }
                    }
                    {
                      (254680 call = error(254679 call qio_format_error_bad_regexp))
                    }
                  }
                }
                {
                  (254695 call = gotConv 1)
                  break nil[44]
                }
              }
            }
          }
          label _continueLabel[254714]
          (254725 'move' tmp[254711](254720 call _cond_test(254722 call < cur len)))
          tmp[254711]
        }
        label _breakLabel[254715]
      }
    }
  }
  function _unknown[51]._conv_helper[254751](arg _mt[254770]:_MT[238], arg this[254767] :
  channel, ref arg error[254748] :
  syserr, ref arg conv[254754] :
  qio_conv_t, ref arg gotConv[254758] :
  bool[10], ref arg j[254762] :
  int[13], ref arg argType[254765]:_any[178](?)) : _unknown[51] "method" "no doc"
  {
    if(254775 call _cond_test error)
    {
      { scopeless
        (254773 return)
      }
    }
    if(254907 call _cond_test gotConv)
    {
      if(254806 call _cond_test(254787 call !=(254783 call . conv c"preArg1") QIO_CONV_UNK))
      {
        (254797 call =(254792 call argType j)(254794 call . conv c"preArg1"))
        (254803 call += j 1)
      }
      if(254835 call _cond_test(254816 call !=(254812 call . conv c"preArg2") QIO_CONV_UNK))
      {
        (254826 call =(254821 call argType j)(254823 call . conv c"preArg2"))
        (254832 call += j 1)
      }
      if(254863 call _cond_test(254844 call !=(254840 call . conv c"preArg3") QIO_CONV_UNK))
      {
        (254854 call =(254849 call argType j)(254851 call . conv c"preArg3"))
        (254860 call += j 1)
      }
      if(254903 call _cond_test(254872 call !=(254868 call . conv c"argType") QIO_CONV_UNK))
      {
        if(254893 call _cond_test(254879 call ==(254877 call argType j) QIO_CONV_UNK))
        {
          (254889 call =(254884 call argType j)(254886 call . conv c"argType"))
        }
        (254900 call += j 1)
      }
    }
  }
  function _unknown[51]._conv_sethandler[254920](arg _mt[254943]:_MT[238], arg this[254940] :
  channel, ref arg error[254917] :
  syserr, arg argtypei[254923] :
  c_int, ref arg style[254927] :
  iostyle, arg i[254931] :
  int[13], arg argi[254934]:_any[178](?), arg isReadf[254937] :
  bool[10]) : _unknown[51] throws "method" "no doc"
  {
    if(254950 call _cond_test error)
    {
      { scopeless
        (254948 return 0)
      }
    }
    {
      unknown tmp[255577] "expr temp" "maybe param" "maybe type" "temp"
      (255579 'move' tmp[255577] argtypei)
      if(255584 call _cond_test(255581 call == tmp[255577] QIO_CONV_SET_MIN_WIDTH_COLS))
      {
        { scopeless
          unknown tmp[254969] "temp"(254968 call _toIntegral argi)
          (254976 call _check_tuple_var_decl tmp[254969] 2)
          unknown t[254960](254970 call tmp[254969] 0)
          unknown ok[254962](254973 call tmp[254969] 1)
          (254981 'end of statement')
        }
        if(255011 call _cond_test(254984 call ! ok))
        {
          (254991 call = error(254990 call qio_format_error_arg_mismatch i))
        }
        {
          { scopeless
            (255008 call =(254998 call . style c"min_width_columns")(255006 call _cast(255005 call uint[115] 32) t))
          }
        }
      }
      {
        if(255590 call _cond_test(255587 call == tmp[255577] QIO_CONV_SET_MAX_WIDTH_COLS))
        {
          { scopeless
            unknown tmp[255029] "temp"(255028 call _toIntegral argi)
            (255036 call _check_tuple_var_decl tmp[255029] 2)
            unknown t[255020](255030 call tmp[255029] 0)
            unknown ok[255022](255033 call tmp[255029] 1)
            (255041 'end of statement')
          }
          if(255071 call _cond_test(255044 call ! ok))
          {
            (255051 call = error(255050 call qio_format_error_arg_mismatch i))
          }
          {
            { scopeless
              (255068 call =(255058 call . style c"max_width_columns")(255066 call _cast(255065 call uint[115] 32) t))
            }
          }
        }
        {
          if(255597 call _cond_test(255594 call == tmp[255577] QIO_CONV_SET_MAX_WIDTH_CHARS))
          {
            { scopeless
              unknown tmp[255089] "temp"(255088 call _toIntegral argi)
              (255096 call _check_tuple_var_decl tmp[255089] 2)
              unknown t[255080](255090 call tmp[255089] 0)
              unknown ok[255082](255093 call tmp[255089] 1)
              (255101 'end of statement')
            }
            if(255129 call _cond_test(255104 call ! ok))
            {
              (255111 call = error(255110 call qio_format_error_arg_mismatch i))
            }
            {
              { scopeless
                (255126 call =(255116 call . style c"max_width_characters")(255124 call _cast(255123 call uint[115] 32) t))
              }
            }
          }
          {
            if(255604 call _cond_test(255601 call == tmp[255577] QIO_CONV_SET_MAX_WIDTH_BYTES))
            {
              { scopeless
                unknown tmp[255147] "temp"(255146 call _toIntegral argi)
                (255154 call _check_tuple_var_decl tmp[255147] 2)
                unknown t[255138](255148 call tmp[255147] 0)
                unknown ok[255140](255151 call tmp[255147] 1)
                (255159 'end of statement')
              }
              if(255189 call _cond_test(255162 call ! ok))
              {
                (255169 call = error(255168 call qio_format_error_arg_mismatch i))
              }
              {
                { scopeless
                  (255186 call =(255176 call . style c"max_width_bytes")(255184 call _cast(255183 call uint[115] 32) t))
                }
              }
            }
            {
              if(255611 call _cond_test(255608 call == tmp[255577] QIO_CONV_SET_PRECISION))
              {
                { scopeless
                  unknown tmp[255207] "temp"(255206 call _toIntegral argi)
                  (255214 call _check_tuple_var_decl tmp[255207] 2)
                  unknown t[255198](255208 call tmp[255207] 0)
                  unknown ok[255200](255211 call tmp[255207] 1)
                  (255219 'end of statement')
                }
                if(255249 call _cond_test(255222 call ! ok))
                {
                  (255229 call = error(255228 call qio_format_error_arg_mismatch i))
                }
                {
                  { scopeless
                    (255246 call =(255236 call . style c"precision")(255244 call _cast(255243 call int[13] 32) t))
                  }
                }
              }
              {
                if(255618 call _cond_test(255615 call == tmp[255577] QIO_CONV_SET_STRINGSTART))
                {
                  { scopeless
                    unknown tmp[255267] "temp"(255266 call _toChar argi)
                    (255274 call _check_tuple_var_decl tmp[255267] 2)
                    unknown t[255258](255268 call tmp[255267] 0)
                    unknown ok[255260](255271 call tmp[255267] 1)
                    (255279 'end of statement')
                  }
                  if(255306 call _cond_test(255282 call ! ok))
                  {
                    (255289 call = error(255288 call qio_format_error_arg_mismatch i))
                  }
                  {
                    { scopeless
                      (255303 call =(255296 call . style c"string_start")(255301 call _cast style_char_t t))
                    }
                  }
                }
                {
                  if(255625 call _cond_test(255622 call == tmp[255577] QIO_CONV_SET_STRINGEND))
                  {
                    { scopeless
                      unknown tmp[255324] "temp"(255323 call _toChar argi)
                      (255331 call _check_tuple_var_decl tmp[255324] 2)
                      unknown t[255315](255325 call tmp[255324] 0)
                      unknown ok[255317](255328 call tmp[255324] 1)
                      (255336 'end of statement')
                    }
                    if(255361 call _cond_test(255339 call ! ok))
                    {
                      (255346 call = error(255345 call qio_format_error_arg_mismatch i))
                    }
                    {
                      { scopeless
                        (255358 call =(255351 call . style c"string_end")(255356 call _cast style_char_t t))
                      }
                    }
                  }
                  {
                    if(255632 call _cond_test(255629 call == tmp[255577] QIO_CONV_SET_STRINGSTARTEND))
                    {
                      { scopeless
                        unknown tmp[255379] "temp"(255378 call _toChar argi)
                        (255386 call _check_tuple_var_decl tmp[255379] 2)
                        unknown t[255370](255380 call tmp[255379] 0)
                        unknown ok[255372](255383 call tmp[255379] 1)
                        (255391 'end of statement')
                      }
                      if(255428 call _cond_test(255394 call ! ok))
                      {
                        (255401 call = error(255400 call qio_format_error_arg_mismatch i))
                      }
                      {
                        (255413 call =(255406 call . style c"string_start")(255411 call _cast style_char_t t))
                        (255425 call =(255418 call . style c"string_end")(255423 call _cast style_char_t t))
                      }
                    }
                    {
                      if(255639 call _cond_test(255636 call == tmp[255577] QIO_CONV_SET_STRINGLEN))
                      {
                        { scopeless
                          unknown tmp[255445] "temp"(255444 call _toIntegral argi)
                          (255452 call _check_tuple_var_decl tmp[255445] 2)
                          unknown t[255436](255446 call tmp[255445] 0)
                          unknown ok[255438](255449 call tmp[255445] 1)
                          (255457 'end of statement')
                        }
                        if(255486 call _cond_test(255460 call ! ok))
                        {
                          (255467 call = error(255466 call qio_format_error_arg_mismatch i))
                        }
                        {
                          (255482 call =(255472 call . style c"str_style")(255480 call _cast(255479 call int[13] 64) t))
                        }
                      }
                      {
                        if(255646 call _cond_test(255643 call == tmp[255577] QIO_CONV_SET_TERMINATOR))
                        {
                          { scopeless
                            unknown tmp[255503] "temp"(255502 call _toChar argi)
                            (255510 call _check_tuple_var_decl tmp[255503] 2)
                            unknown t[255494](255504 call tmp[255503] 0)
                            unknown ok[255496](255507 call tmp[255503] 1)
                            (255515 'end of statement')
                          }
                          if(255547 call _cond_test(255518 call ! ok))
                          {
                            (255525 call = error(255524 call qio_format_error_arg_mismatch i))
                          }
                          {
                            (255543 call =(255530 call . style c"str_style")(255542 call stringStyleTerminated(255539 call _cast(255538 call uint[115] 8) t)))
                          }
                        }
                        {
                          if(255653 call _cond_test(255650 call == tmp[255577] QIO_CONV_SET_DONE))
                          {
                          }
                          {
                            if(255660 call _cond_test(255657 call == tmp[255577] QIO_CONV_UNK))
                            {
                              (255564 call = error(255563 call qio_format_error_too_many_args))
                            }
                            {
                              (255571 return 1)
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (255666 return 0)
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51]._write_signed[255681](arg _mt[255694]:_MT[238], arg this[255691] :
  channel, arg width[255678] :
  (255677 call uint[115] 32), arg t[255684] :
  int[13], arg i[255688] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255698] syserr
      (255701 'end of statement')
    }
    { scopeless
      unknown byteorder[255707](255706 call qio_channel_byteorder _channel_internal)
      (255710 'end of statement')
    }
    {
      unknown tmp[255832] "expr temp" "maybe param" "maybe type" "temp"
      (255834 'move' tmp[255832] width)
      if(255839 call _cond_test(255836 call == tmp[255832] 1))
      {
        { scopeless
          unknown x[255722](255720 call _cast(255719 call int[13] 8) t)
          (255725 'end of statement')
        }
        (255734 call = err(255733 call qio_channel_write_int8 0 _channel_internal x))
      }
      {
        if(255845 call _cond_test(255842 call == tmp[255832] 2))
        {
          { scopeless
            unknown x[255748](255746 call _cast(255745 call int[13] 16) t)
            (255751 'end of statement')
          }
          (255761 call = err(255760 call qio_channel_write_int16 0 byteorder _channel_internal x))
        }
        {
          if(255852 call _cond_test(255849 call == tmp[255832] 4))
          {
            { scopeless
              unknown x[255775](255773 call _cast(255772 call int[13] 32) t)
              (255778 'end of statement')
            }
            (255788 call = err(255787 call qio_channel_write_int32 0 byteorder _channel_internal x))
          }
          {
            if(255859 call _cond_test(255856 call == tmp[255832] 8))
            {
              { scopeless
                unknown x[255802](255800 call _cast(255799 call int[13] 64) t)
                (255805 'end of statement')
              }
              (255815 call = err(255814 call qio_channel_write_int64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (255825 call = err(255824 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (255865 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._read_signed[255880](arg _mt[255893]:_MT[238], arg this[255890] :
  channel, arg width[255877] :
  (255876 call uint[115] 32), out arg t[255883] :
  int[13], arg i[255887] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[255897] syserr
      (255900 'end of statement')
    }
    { scopeless
      unknown byteorder[255906](255905 call qio_channel_byteorder _channel_internal)
      (255909 'end of statement')
    }
    {
      unknown tmp[256039] "expr temp" "maybe param" "maybe type" "temp"
      (256041 'move' tmp[256039] width)
      if(256046 call _cond_test(256043 call == tmp[256039] 1))
      {
        { scopeless
          unknown x[255918](255917 call int[13] 8)
          (255921 'end of statement')
        }
        (255930 call = err(255929 call qio_channel_read_int8 0 _channel_internal x))
        (255935 call = t x)
      }
      {
        if(256052 call _cond_test(256049 call == tmp[256039] 2))
        {
          { scopeless
            unknown x[255946](255945 call int[13] 16)
            (255949 'end of statement')
          }
          (255959 call = err(255958 call qio_channel_read_int16 0 byteorder _channel_internal x))
          (255964 call = t x)
        }
        {
          if(256059 call _cond_test(256056 call == tmp[256039] 4))
          {
            { scopeless
              unknown x[255975](255974 call int[13] 32)
              (255978 'end of statement')
            }
            (255988 call = err(255987 call qio_channel_read_int32 0 byteorder _channel_internal x))
            (255993 call = t x)
          }
          {
            if(256066 call _cond_test(256063 call == tmp[256039] 8))
            {
              { scopeless
                unknown x[256004](256003 call int[13] 64)
                (256007 'end of statement')
              }
              (256017 call = err(256016 call qio_channel_read_int64 0 byteorder _channel_internal x))
              (256022 call = t x)
            }
            {
              { scopeless
                (256032 call = err(256031 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256072 return err)
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._write_unsigned[256087](arg _mt[256100]:_MT[238], arg this[256097] :
  channel, arg width[256084] :
  (256083 call uint[115] 32), arg t[256090] :
  uint[115], arg i[256094] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256103] syserr
      (256106 'end of statement')
    }
    { scopeless
      unknown byteorder[256112](256111 call qio_channel_byteorder _channel_internal)
      (256115 'end of statement')
    }
    {
      unknown tmp[256237] "expr temp" "maybe param" "maybe type" "temp"
      (256239 'move' tmp[256237] width)
      if(256244 call _cond_test(256241 call == tmp[256237] 1))
      {
        { scopeless
          unknown x[256127](256125 call _cast(256124 call uint[115] 8) t)
          (256130 'end of statement')
        }
        (256139 call = err(256138 call qio_channel_write_uint8 0 _channel_internal x))
      }
      {
        if(256250 call _cond_test(256247 call == tmp[256237] 2))
        {
          { scopeless
            unknown x[256153](256151 call _cast(256150 call uint[115] 16) t)
            (256156 'end of statement')
          }
          (256166 call = err(256165 call qio_channel_write_uint16 0 byteorder _channel_internal x))
        }
        {
          if(256257 call _cond_test(256254 call == tmp[256237] 4))
          {
            { scopeless
              unknown x[256180](256178 call _cast(256177 call uint[115] 32) t)
              (256183 'end of statement')
            }
            (256193 call = err(256192 call qio_channel_write_uint32 0 byteorder _channel_internal x))
          }
          {
            if(256264 call _cond_test(256261 call == tmp[256237] 8))
            {
              { scopeless
                unknown x[256207](256205 call _cast(256204 call uint[115] 64) t)
                (256210 'end of statement')
              }
              (256220 call = err(256219 call qio_channel_write_uint64 0 byteorder _channel_internal x))
            }
            {
              { scopeless
                (256230 call = err(256229 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256270 return err)
  }
  function _unknown[51]._read_unsigned[256284](arg _mt[256297]:_MT[238], arg this[256294] :
  channel, arg width[256281] :
  (256280 call uint[115] 32), out arg t[256287] :
  uint[115], arg i[256291] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256300] syserr
      (256303 'end of statement')
    }
    { scopeless
      unknown byteorder[256309](256308 call qio_channel_byteorder _channel_internal)
      (256312 'end of statement')
    }
    {
      unknown tmp[256442] "expr temp" "maybe param" "maybe type" "temp"
      (256444 'move' tmp[256442] width)
      if(256449 call _cond_test(256446 call == tmp[256442] 1))
      {
        { scopeless
          unknown x[256321](256320 call uint[115] 8)
          (256324 'end of statement')
        }
        (256333 call = err(256332 call qio_channel_read_uint8 0 _channel_internal x))
        (256338 call = t x)
      }
      {
        if(256455 call _cond_test(256452 call == tmp[256442] 2))
        {
          { scopeless
            unknown x[256349](256348 call uint[115] 16)
            (256352 'end of statement')
          }
          (256362 call = err(256361 call qio_channel_read_uint16 0 byteorder _channel_internal x))
          (256367 call = t x)
        }
        {
          if(256462 call _cond_test(256459 call == tmp[256442] 4))
          {
            { scopeless
              unknown x[256378](256377 call uint[115] 32)
              (256381 'end of statement')
            }
            (256391 call = err(256390 call qio_channel_read_uint32 0 byteorder _channel_internal x))
            (256396 call = t x)
          }
          {
            if(256469 call _cond_test(256466 call == tmp[256442] 8))
            {
              { scopeless
                unknown x[256407](256406 call uint[115] 64)
                (256410 'end of statement')
              }
              (256420 call = err(256419 call qio_channel_read_uint64 0 byteorder _channel_internal x))
              (256425 call = t x)
            }
            {
              { scopeless
                (256435 call = err(256434 call qio_format_error_arg_mismatch i))
              }
            }
          }
        }
      }
    }
    (256475 return err)
  }
  function _unknown[51]._write_real[256489](arg _mt[256502]:_MT[238], arg this[256499] :
  channel, arg width[256486] :
  (256485 call uint[115] 32), arg t[256492] :
  real[16], arg i[256496] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256505] syserr
      (256508 'end of statement')
    }
    { scopeless
      unknown byteorder[256514](256513 call qio_channel_byteorder _channel_internal)
      (256517 'end of statement')
    }
    {
      unknown tmp[256586] "expr temp" "maybe param" "maybe type" "temp"
      (256588 'move' tmp[256586] width)
      if(256593 call _cond_test(256590 call == tmp[256586] 4))
      {
        { scopeless
          unknown x[256529](256527 call _cast(256526 call real[16] 32) t)
          (256532 'end of statement')
        }
        (256542 call = err(256541 call qio_channel_write_float32 0 byteorder _channel_internal x))
      }
      {
        if(256599 call _cond_test(256596 call == tmp[256586] 8))
        {
          { scopeless
            unknown x[256556](256554 call _cast(256553 call real[16] 64) t)
            (256559 'end of statement')
          }
          (256569 call = err(256568 call qio_channel_write_float64 0 byteorder _channel_internal x))
        }
        {
          { scopeless
            (256579 call = err(256578 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256605 return err)
  }
  function _unknown[51]._read_real[256619](arg _mt[256632]:_MT[238], arg this[256629] :
  channel, arg width[256616] :
  (256615 call uint[115] 32), out arg t[256622] :
  real[16], arg i[256626] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256635] syserr
      (256638 'end of statement')
    }
    { scopeless
      unknown byteorder[256644](256643 call qio_channel_byteorder _channel_internal)
      (256647 'end of statement')
    }
    {
      unknown tmp[256720] "expr temp" "maybe param" "maybe type" "temp"
      (256722 'move' tmp[256720] width)
      if(256727 call _cond_test(256724 call == tmp[256720] 4))
      {
        { scopeless
          unknown x[256656](256655 call real[16] 32)
          (256659 'end of statement')
        }
        (256669 call = err(256668 call qio_channel_read_float32 0 byteorder _channel_internal x))
        (256674 call = t x)
      }
      {
        if(256733 call _cond_test(256730 call == tmp[256720] 8))
        {
          { scopeless
            unknown x[256685](256684 call real[16] 64)
            (256688 'end of statement')
          }
          (256698 call = err(256697 call qio_channel_read_float64 0 byteorder _channel_internal x))
          (256703 call = t x)
        }
        {
          { scopeless
            (256713 call = err(256712 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256739 return err)
  }
  function _unknown[51]._write_complex[256753](arg _mt[256766]:_MT[238], arg this[256763] :
  channel, arg width[256750] :
  (256749 call uint[115] 32), arg t[256756] :
  complex[140], arg i[256760] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256770] ENOERR syserr
      (256773 'end of statement')
    }
    { scopeless
      unknown byteorder[256779](256778 call qio_channel_byteorder _channel_internal)
      (256782 'end of statement')
    }
    {
      unknown tmp[256921] "expr temp" "maybe param" "maybe type" "temp"
      (256923 'move' tmp[256921] width)
      if(256928 call _cond_test(256925 call == tmp[256921] 8))
      {
        { scopeless
          unknown x[256794](256792 call _cast(256791 call complex[140] 64) t)
          (256797 'end of statement')
        }
        { scopeless
          unknown re[256803](256800 call . x c"re")
          (256806 'end of statement')
        }
        { scopeless
          unknown im[256811](256808 call . x c"im")
          (256814 'end of statement')
        }
        (256823 call = err(256822 call qio_channel_write_float32 0 byteorder _channel_internal re))
        if(256841 call _cond_test(256827 call ! err))
        {
          (256837 call = err(256836 call qio_channel_write_float32 0 byteorder _channel_internal im))
        }
      }
      {
        if(256934 call _cond_test(256931 call == tmp[256921] 16))
        {
          { scopeless
            unknown x[256856](256854 call _cast(256853 call complex[140] 128) t)
            (256859 'end of statement')
          }
          { scopeless
            unknown re[256865](256862 call . x c"re")
            (256868 'end of statement')
          }
          { scopeless
            unknown im[256873](256870 call . x c"im")
            (256876 'end of statement')
          }
          (256885 call = err(256884 call qio_channel_write_float64 0 byteorder _channel_internal re))
          if(256903 call _cond_test(256889 call ! err))
          {
            (256899 call = err(256898 call qio_channel_write_float64 0 byteorder _channel_internal im))
          }
        }
        {
          { scopeless
            (256914 call = err(256913 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (256940 return err)
  }
  function _unknown[51]._read_complex[256954](arg _mt[256967]:_MT[238], arg this[256964] :
  channel, arg width[256951] :
  (256950 call uint[115] 32), out arg t[256957] :
  complex[140], arg i[256961] :
  int[13]) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown err[256971] ENOERR syserr
      (256974 'end of statement')
    }
    { scopeless
      unknown byteorder[256980](256979 call qio_channel_byteorder _channel_internal)
      (256983 'end of statement')
    }
    {
      unknown tmp[257160] "expr temp" "maybe param" "maybe type" "temp"
      (257162 'move' tmp[257160] width)
      if(257167 call _cond_test(257164 call == tmp[257160] 8))
      {
        { scopeless
          unknown x[256992](256991 call complex[140] 64)
          (256995 'end of statement')
        }
        { scopeless
          unknown re[257002](257001 'typeof'(256998 call . x c"re"))
          (257005 'end of statement')
        }
        { scopeless
          unknown im[257011](257010 'typeof'(257007 call . x c"im"))
          (257014 'end of statement')
        }
        (257023 call = err(257022 call qio_channel_read_float32 0 byteorder _channel_internal re))
        if(257041 call _cond_test(257027 call ! err))
        {
          (257037 call = err(257036 call qio_channel_read_float32 0 byteorder _channel_internal im))
        }
        (257057 call = x(257055 call _cast(257054 call complex[140] 64)(257049 call _build_tuple re im)))
        (257062 call = t x)
      }
      {
        if(257173 call _cond_test(257170 call == tmp[257160] 16))
        {
          { scopeless
            unknown x[257073](257072 call complex[140] 128)
            (257076 'end of statement')
          }
          { scopeless
            unknown re[257083](257082 'typeof'(257079 call . x c"re"))
            (257086 'end of statement')
          }
          { scopeless
            unknown im[257092](257091 'typeof'(257088 call . x c"im"))
            (257095 'end of statement')
          }
          (257104 call = err(257103 call qio_channel_read_float64 0 byteorder _channel_internal re))
          if(257122 call _cond_test(257108 call ! err))
          {
            (257118 call = err(257117 call qio_channel_read_float64 0 byteorder _channel_internal im))
          }
          (257138 call = x(257136 call _cast(257135 call complex[140] 128)(257130 call _build_tuple re im)))
          (257143 call = t x)
        }
        {
          { scopeless
            (257153 call = err(257152 call qio_format_error_arg_mismatch i))
          }
        }
      }
    }
    (257179 return err)
  }
  function _unknown[51].writef[257191](arg _mt[257201]:_MT[238], arg this[257198] :
  channel, arg fmtStr[257188] :
  unknown t[257186], const arg args[257195]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(257238 call _cond_test(257215 call ! writing))
    {
      { scopeless
        (257236 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      const origLocale[257250] "const"(257249 call(257245 call . this c"getLocaleOfIoRequest"))
      (257253 'end of statement')
    }
    { scopeless
      unknown err[257256] ENOERR syserr
      (257259 'end of statement')
    }
    { scopeless
      const tmp[258489] "const" "temp"
      (258491 'move' tmp[258489](258487 'deref'(258486 '_wide_get_locale'(257261 call . this c"home"))))
      {
        {
          Try
          {
            {
              (257269 call(257265 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (257279 call(257275 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[257290](257289 call(257285 call . this c"_style"))
            (257293 'end of statement')
          }
          { scopeless
            unknown cur[257296] 0 size_t
            (257299 'end of statement')
          }
          { scopeless
            unknown len[257308](257306 call _cast size_t(257302 call . fmtStr c"size")) size_t
            (257311 'end of statement')
          }
          { scopeless
            unknown conv[257313] qio_conv_t
            (257316 'end of statement')
          }
          { scopeless
            unknown gotConv[257318] bool[10]
            (257321 'end of statement')
          }
          { scopeless
            unknown style[257323] iostyle
            (257326 'end of statement')
          }
          { scopeless
            unknown end[257328] size_t
            (257331 'end of statement')
          }
          { scopeless
            unknown argType[257339](257337 call *(257334 call + k 5) c_int)
            (257342 'end of statement')
          }
          { scopeless
            unknown r[257346](257345 'to unmanaged class from unknown'(257344 'to nilable class from type' _channel_regexp_info))
            (257349 'end of statement')
          }
          Defer
          {
            {
              if(257356 call _cond_test r)
              {
                { scopeless
                  (257353 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[257384] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[257385] "expr temp" "temp"
            (257394 'move' _iterator[257385](257392 call _getIterator(257405 call chpl_direct_range_iter 0(257399 call -(257401 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (257421 call _freeIterator _iterator[257385])
              }
            }
            { scopeless type
              (257410 'move' _indexOfInterest[257384](257407 call iteratorIndex _iterator[257385]))
            }
            ForLoop[257386]
            {
              unknown i[257414] "index var" "insert auto destroy"
              (257416 'move' i[257414] _indexOfInterest[257384])
              {
                (257380 call =(257378 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[257389]
              _indexOfInterest[257384]
              _iterator[257385]
            }
            label _breakLabel[257390]
          }
          { scopeless
            unknown j[257429] 0
            (257432 'end of statement')
          }
          {
            unknown i[258390] 0
            unknown tmp[258391] "maybe param" "temp"
            (258403 'move' tmp[258391](258401 call chpl_compute_low_param_loop_bound 0(257436 call - k 1)))
            unknown tmp[258392] "maybe param" "temp"
            (258413 'move' tmp[258392](258411 call chpl_compute_high_param_loop_bound 0(258408 call - k 1)))
            unknown tmp[258393] "maybe param" "temp"
            (258416 'move' tmp[258393] 1)
            ParamForLoop[258418]
            { i[258390] tmp[258391] tmp[258392] tmp[258393]
              {
                (257442 call = gotConv 0)
                if(257464 call _cond_test(257448 call <= j i))
                {
                  (257461 call _format_reader fmtStr cur len err conv gotConv style r 0)
                }
                (257475 call _conv_helper err conv gotConv j argType)
                { scopeless
                  unknown domore[257492](257491 call _conv_sethandler err(257483 call argType i) style i(257489 call args i) 0)
                  (257495 'end of statement')
                }
                if(258386 call _cond_test domore)
                {
                  (257503 call(257498 call . this c"_set_style") style)
                  {
                    unknown tmp[258280] "expr temp" "maybe param" "maybe type" "temp"
                    (258282 'move' tmp[258280](257509 call argType i))
                    if(258292 call _cond_test(258290 call ||(258284 call == tmp[258280] QIO_CONV_ARG_TYPE_SIGNED)(258287 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                    {
                      { scopeless
                        unknown tmp[257526] "temp"(257525 call _toSigned(257523 call args i))
                        (257533 call _check_tuple_var_decl tmp[257526] 2)
                        unknown t[257514](257527 call tmp[257526] 0)
                        unknown ok[257516](257530 call tmp[257526] 1)
                        (257538 'end of statement')
                      }
                      if(257591 call _cond_test(257541 call ! ok))
                      {
                        (257548 call = err(257547 call qio_format_error_arg_mismatch i))
                      }
                      {
                        if(257584 call _cond_test(257557 call ==(257555 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                        {
                          { scopeless
                            (257569 call = err(257568 call _write_signed(257562 call . style c"max_width_bytes") t i))
                          }
                        }
                        {
                          { scopeless
                            Try
                            {
                              {
                                (257580 call _writeOne(257574 call . iokind c"dynamic") t origLocale)
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      if(258303 call _cond_test(258301 call ||(258295 call == tmp[258280] QIO_CONV_ARG_TYPE_UNSIGNED)(258298 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                      {
                        { scopeless
                          unknown tmp[257612] "temp"(257611 call _toUnsigned(257609 call args i))
                          (257619 call _check_tuple_var_decl tmp[257612] 2)
                          unknown t[257600](257613 call tmp[257612] 0)
                          unknown ok[257602](257616 call tmp[257612] 1)
                          (257624 'end of statement')
                        }
                        if(257677 call _cond_test(257627 call ! ok))
                        {
                          (257634 call = err(257633 call qio_format_error_arg_mismatch i))
                        }
                        {
                          if(257670 call _cond_test(257643 call ==(257641 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                          {
                            { scopeless
                              (257655 call = err(257654 call _write_unsigned(257648 call . style c"max_width_bytes") t i))
                            }
                          }
                          {
                            { scopeless
                              Try
                              {
                                {
                                  (257666 call _writeOne(257660 call . iokind c"dynamic") t origLocale)
                                }
                              }
                            }
                          }
                        }
                      }
                      {
                        if(258315 call _cond_test(258313 call ||(258307 call == tmp[258280] QIO_CONV_ARG_TYPE_REAL)(258310 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                        {
                          { scopeless
                            unknown tmp[257698] "temp"(257697 call _toReal(257695 call args i))
                            (257705 call _check_tuple_var_decl tmp[257698] 2)
                            unknown t[257686](257699 call tmp[257698] 0)
                            unknown ok[257688](257702 call tmp[257698] 1)
                            (257710 'end of statement')
                          }
                          if(257763 call _cond_test(257713 call ! ok))
                          {
                            (257720 call = err(257719 call qio_format_error_arg_mismatch i))
                          }
                          {
                            if(257756 call _cond_test(257729 call ==(257727 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                            {
                              { scopeless
                                (257741 call = err(257740 call _write_real(257734 call . style c"max_width_bytes") t i))
                              }
                            }
                            {
                              { scopeless
                                Try
                                {
                                  {
                                    (257752 call _writeOne(257746 call . iokind c"dynamic") t origLocale)
                                  }
                                }
                              }
                            }
                          }
                        }
                        {
                          if(258327 call _cond_test(258325 call ||(258319 call == tmp[258280] QIO_CONV_ARG_TYPE_IMAG)(258322 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                          {
                            { scopeless
                              unknown tmp[257784] "temp"(257783 call _toImag(257781 call args i))
                              (257791 call _check_tuple_var_decl tmp[257784] 2)
                              unknown t[257772](257785 call tmp[257784] 0)
                              unknown ok[257774](257788 call tmp[257784] 1)
                              (257796 'end of statement')
                            }
                            if(257852 call _cond_test(257799 call ! ok))
                            {
                              (257806 call = err(257805 call qio_format_error_arg_mismatch i))
                            }
                            {
                              if(257845 call _cond_test(257815 call ==(257813 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                              {
                                { scopeless
                                  (257830 call = err(257829 call _write_real(257820 call . style c"max_width_bytes")(257826 call _cast real[16] t) i))
                                }
                              }
                              {
                                { scopeless
                                  Try
                                  {
                                    {
                                      (257841 call _writeOne(257835 call . iokind c"dynamic") t origLocale)
                                    }
                                  }
                                }
                              }
                            }
                          }
                          {
                            if(258339 call _cond_test(258337 call ||(258331 call == tmp[258280] QIO_CONV_ARG_TYPE_COMPLEX)(258334 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                            {
                              { scopeless
                                unknown tmp[257873] "temp"(257872 call _toComplex(257870 call args i))
                                (257880 call _check_tuple_var_decl tmp[257873] 2)
                                unknown t[257861](257874 call tmp[257873] 0)
                                unknown ok[257863](257877 call tmp[257873] 1)
                                (257885 'end of statement')
                              }
                              if(257938 call _cond_test(257888 call ! ok))
                              {
                                (257895 call = err(257894 call qio_format_error_arg_mismatch i))
                              }
                              {
                                if(257931 call _cond_test(257904 call ==(257902 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                {
                                  { scopeless
                                    (257916 call = err(257915 call _write_complex(257909 call . style c"max_width_bytes") t i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257927 call _writeOne(257921 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            {
                              if(258346 call _cond_test(258343 call == tmp[258280] QIO_CONV_ARG_TYPE_NUMERIC))
                              {
                                { scopeless
                                  unknown tmp[257958] "temp"(257957 call _toNumeric(257955 call args i))
                                  (257965 call _check_tuple_var_decl tmp[257958] 2)
                                  unknown t[257946](257959 call tmp[257958] 0)
                                  unknown ok[257948](257962 call tmp[257958] 1)
                                  (257970 'end of statement')
                                }
                                if(257996 call _cond_test(257973 call ! ok))
                                {
                                  (257980 call = err(257979 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (257992 call _writeOne(257986 call . iokind c"dynamic") t origLocale)
                                      }
                                    }
                                  }
                                }
                              }
                              {
                                if(258353 call _cond_test(258350 call == tmp[258280] QIO_CONV_ARG_TYPE_CHAR))
                                {
                                  { scopeless
                                    unknown tmp[258017] "temp"(258016 call _toChar(258014 call args i))
                                    (258024 call _check_tuple_var_decl tmp[258017] 2)
                                    unknown t[258005](258018 call tmp[258017] 0)
                                    unknown ok[258007](258021 call tmp[258017] 1)
                                    (258029 'end of statement')
                                  }
                                  if(258059 call _cond_test(258032 call ! ok))
                                  {
                                    (258039 call = err(258038 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (258055 call _writeOne(258045 call . iokind c"dynamic")(258049 'new'(258053 call ioChar t)) origLocale)
                                        }
                                      }
                                    }
                                  }
                                }
                                {
                                  if(258360 call _cond_test(258357 call == tmp[258280] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                  {
                                    { scopeless
                                      unknown tmp[258080] "temp"(258079 call _toBytes(258077 call args i))
                                      (258087 call _check_tuple_var_decl tmp[258080] 2)
                                      unknown t[258068](258081 call tmp[258080] 0)
                                      unknown ok[258070](258084 call tmp[258080] 1)
                                      (258092 'end of statement')
                                    }
                                    if(258118 call _cond_test(258095 call ! ok))
                                    {
                                      (258102 call = err(258101 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (258114 call _writeOne(258108 call . iokind c"dynamic") t origLocale)
                                          }
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(258367 call _cond_test(258364 call == tmp[258280] QIO_CONV_ARG_TYPE_STRING))
                                    {
                                      { scopeless
                                        unknown tmp[258139] "temp"(258138 call _toString(258136 call args i))
                                        (258146 call _check_tuple_var_decl tmp[258139] 2)
                                        unknown t[258127](258140 call tmp[258139] 0)
                                        unknown ok[258129](258143 call tmp[258139] 1)
                                        (258151 'end of statement')
                                      }
                                      if(258177 call _cond_test(258154 call ! ok))
                                      {
                                        (258161 call = err(258160 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (258173 call _writeOne(258167 call . iokind c"dynamic") t origLocale)
                                            }
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(258374 call _cond_test(258371 call == tmp[258280] QIO_CONV_ARG_TYPE_REGEXP))
                                      {
                                        (258190 call = err(258189 call qio_format_error_write_regexp))
                                      }
                                      {
                                        if(258381 call _cond_test(258378 call == tmp[258280] QIO_CONV_ARG_TYPE_REPR))
                                        {
                                          Try
                                          {
                                            {
                                              (258209 call _writeOne(258200 call . iokind c"dynamic")(258207 call args i) origLocale)
                                            }
                                          }
                                        }
                                        {
                                          (258274 'throw'(258218 'new'(_chpl_manager = _owned[30](?))(258273 call IllegalArgumentError(258244 call +(258241 call + "args("(258239 call _cast string[26] i)) ")")(258271 call + "writef internal error "(258269 call _cast string[26](258267 call argType i))))))
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            label _unused_continueLabel[258395]
            label _breakLabel[258394]
          }
          if(258474 call _cond_test(258428 call ! err))
          {
            if(258453 call _cond_test(258432 call < cur len))
            {
              { scopeless
                unknown dummy[258435] c_int
                (258438 'end of statement')
              }
              (258451 call _format_reader fmtStr cur len err conv gotConv style r 0)
            }
            if(258470 call _cond_test(258460 call < cur len))
            {
              (258466 call = err(258465 call qio_format_error_too_few_args))
            }
          }
          (258484 call(258479 call . this c"_set_style") save_style)
        }
        (258494 'on block' 0 tmp[258489])
      }
    }
    if(258525 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258521 call(258499 call . this c"_ch_ioerror") err "in channel.writef(fmt:string)")
          }
        }
      }
    }
    (258531 return 1)
  }
  where {
    (257212 call ||(257207 call isStringType t)(257211 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].writef[258545](arg _mt[258550]:_MT[238], arg this[258547] :
  channel, arg fmtStr[258542] :
  unknown t[258540]) : _unknown[51] throws "method"
  {
    if(258571 call _cond_test(258564 call ! writing))
    {
      { scopeless
        (258569 call compilerError "writef on read-only channel")
      }
    }
    { scopeless
      unknown err[258579] ENOERR syserr
      (258582 'end of statement')
    }
    { scopeless
      const tmp[258750] "const" "temp"
      (258752 'move' tmp[258750](258748 'deref'(258747 '_wide_get_locale'(258584 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258592 call(258588 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258602 call(258598 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258613](258612 call(258608 call . this c"_style"))
            (258616 'end of statement')
          }
          { scopeless
            unknown cur[258619] 0 size_t
            (258622 'end of statement')
          }
          { scopeless
            unknown len[258631](258629 call _cast size_t(258625 call . fmtStr c"size")) size_t
            (258634 'end of statement')
          }
          { scopeless
            unknown conv[258636] qio_conv_t
            (258639 'end of statement')
          }
          { scopeless
            unknown gotConv[258641] bool[10]
            (258644 'end of statement')
          }
          { scopeless
            unknown style[258646] iostyle
            (258649 'end of statement')
          }
          { scopeless
            unknown end[258651] size_t
            (258654 'end of statement')
          }
          { scopeless
            unknown dummy[258656] c_int
            (258659 'end of statement')
          }
          { scopeless
            unknown r[258663](258662 'to unmanaged class from unknown'(258661 'to nilable class from type' _channel_regexp_info))
            (258666 'end of statement')
          }
          Defer
          {
            {
              if(258673 call _cond_test r)
              {
                { scopeless
                  (258670 call chpl__delete r)
                }
              }
            }
          }
          (258692 call _format_reader fmtStr cur len err conv gotConv style r 0)
          if(258711 call _cond_test(258695 call ! err))
          {
            if(258706 call _cond_test gotConv)
            {
              (258702 call = err(258701 call qio_format_error_too_few_args))
            }
          }
          if(258735 call _cond_test(258716 call ! err))
          {
            if(258730 call _cond_test(258720 call < cur len))
            {
              (258726 call = err(258725 call qio_format_error_too_few_args))
            }
          }
          (258745 call(258740 call . this c"_set_style") save_style)
        }
        (258755 'on block' 0 tmp[258750])
      }
    }
    if(258786 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (258782 call(258760 call . this c"_ch_ioerror") err "in channel.writef(fmt:string, ...)")
          }
        }
      }
    }
    (258792 return 1)
  }
  where {
    (258561 call ||(258556 call isStringType t)(258560 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[258806](arg _mt[258816]:_MT[238], arg this[258813] :
  channel, arg fmtStr[258803] :
  unknown t[258801], ref arg args[258810]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    if(258851 call _cond_test writing)
    {
      { scopeless
        (258849 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      const origLocale[258863] "const"(258862 call(258858 call . this c"getLocaleOfIoRequest"))
      (258866 'end of statement')
    }
    { scopeless
      unknown err[258869] ENOERR syserr
      (258872 'end of statement')
    }
    { scopeless
      const tmp[260954] "const" "temp"
      (260956 'move' tmp[260954](260952 'deref'(260951 '_wide_get_locale'(258874 call . this c"home"))))
      {
        {
          Try
          {
            {
              (258882 call(258878 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (258892 call(258888 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[258903](258902 call(258898 call . this c"_style"))
            (258906 'end of statement')
          }
          Defer
          {
            {
              (258913 call(258908 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[258920] 0 size_t
            (258923 'end of statement')
          }
          { scopeless
            unknown len[258932](258930 call _cast size_t(258926 call . fmtStr c"size")) size_t
            (258935 'end of statement')
          }
          { scopeless
            unknown conv[258937] qio_conv_t
            (258940 'end of statement')
          }
          { scopeless
            unknown gotConv[258942] bool[10]
            (258945 'end of statement')
          }
          { scopeless
            unknown style[258947] iostyle
            (258950 'end of statement')
          }
          { scopeless
            unknown end[258952] size_t
            (258955 'end of statement')
          }
          { scopeless
            unknown argType[258963](258961 call *(258958 call + k 5) c_int)
            (258966 'end of statement')
          }
          { scopeless
            unknown r[258970](258969 'to unmanaged class from unknown'(258968 'to nilable class from type' _channel_regexp_info))
            (258973 'end of statement')
          }
          Defer
          {
            {
              if(258980 call _cond_test r)
              {
                { scopeless
                  (258977 call chpl__delete r)
                }
              }
            }
          }
          {
            unknown _indexOfInterest[259008] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[259009] "expr temp" "temp"
            (259018 'move' _iterator[259009](259016 call _getIterator(259029 call chpl_direct_range_iter 0(259023 call -(259025 call . argType c"size") 1) 1)))
            Defer
            {
              {
                (259045 call _freeIterator _iterator[259009])
              }
            }
            { scopeless type
              (259034 'move' _indexOfInterest[259008](259031 call iteratorIndex _iterator[259009]))
            }
            ForLoop[259010]
            {
              unknown i[259038] "index var" "insert auto destroy"
              (259040 'move' i[259038] _indexOfInterest[259008])
              {
                (259004 call =(259002 call argType i) QIO_CONV_UNK)
              }
              label _continueLabel[259013]
              _indexOfInterest[259008]
              _iterator[259009]
            }
            label _breakLabel[259014]
          }
          (259058 call = err(259057 call qio_channel_mark 0 _channel_internal))
          if(260946 call _cond_test(259062 call ! err))
          {
            { scopeless
              Try
              {
                {
                  { scopeless
                    unknown j[259065] 0
                    (259068 'end of statement')
                  }
                  {
                    unknown i[260803] 0
                    unknown tmp[260804] "maybe param" "temp"
                    (260816 'move' tmp[260804](260814 call chpl_compute_low_param_loop_bound 0(259073 call - k 1)))
                    unknown tmp[260805] "maybe param" "temp"
                    (260826 'move' tmp[260805](260824 call chpl_compute_high_param_loop_bound 0(260821 call - k 1)))
                    unknown tmp[260806] "maybe param" "temp"
                    (260829 'move' tmp[260806] 1)
                    ParamForLoop[260831]
                    { i[260803] tmp[260804] tmp[260805] tmp[260806]
                      {
                        if(259225 call _cond_test(259079 call <= j i))
                        {
                          (259092 call _format_reader fmtStr cur len err conv gotConv style r 1)
                          if(259221 call _cond_test(259097 call != r nil[44]))
                          {
                            { scopeless
                              const rnn[259102] "const"(259100 call postfix! r)
                              (259105 'end of statement')
                            }
                            if(259217 call _cond_test(259108 call . rnn c"hasRegexp"))
                            {
                              if(259132 call _cond_test(259122 call >(259119 call -(259116 call + i(259113 call . rnn c"ncaptures")) 1) k))
                              {
                                (259128 call = err(259127 call qio_format_error_too_few_args))
                              }
                              {
                                unknown _indexOfInterest[259174] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                unknown _iterator[259175] "expr temp" "temp"
                                (259184 'move' _iterator[259175](259182 call _getIterator(259194 call chpl_direct_counted_range_iter 0(259190 call . rnn c"ncaptures"))))
                                Defer
                                {
                                  {
                                    (259210 call _freeIterator _iterator[259175])
                                  }
                                }
                                { scopeless type
                                  (259199 'move' _indexOfInterest[259174](259196 call iteratorIndex _iterator[259175]))
                                }
                                ForLoop[259176]
                                {
                                  unknown z[259203] "index var" "insert auto destroy"
                                  (259205 'move' z[259203] _indexOfInterest[259174])
                                  {
                                    if(259169 call _cond_test(259155 call <=(259149 call + i z)(259152 call . argType c"size")))
                                    {
                                      (259165 call =(259163 call argType(259160 call + i z)) QIO_CONV_SET_CAPTURE)
                                    }
                                  }
                                  label _continueLabel[259179]
                                  _indexOfInterest[259174]
                                  _iterator[259175]
                                }
                                label _breakLabel[259180]
                              }
                            }
                          }
                        }
                        (259237 call _conv_helper err conv gotConv j argType)
                        { scopeless
                          unknown domore[259254](259253 call _conv_sethandler err(259245 call argType i) style i(259251 call args i) 0)
                          (259257 'end of statement')
                        }
                        if(260799 call _cond_test domore)
                        {
                          (259265 call(259260 call . this c"_set_style") style)
                          {
                            unknown tmp[260686] "expr temp" "maybe param" "maybe type" "temp"
                            (260688 'move' tmp[260686](259271 call argType i))
                            if(260698 call _cond_test(260696 call ||(260690 call == tmp[260686] QIO_CONV_ARG_TYPE_SIGNED)(260693 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_SIGNED)))
                            {
                              { scopeless
                                unknown tmp[259288] "temp"(259287 call _toSigned(259285 call args i))
                                (259295 call _check_tuple_var_decl tmp[259288] 2)
                                unknown t[259276](259289 call tmp[259288] 0)
                                unknown ok[259278](259292 call tmp[259288] 1)
                                (259300 'end of statement')
                              }
                              if(259379 call _cond_test(259303 call ! ok))
                              {
                                (259310 call = err(259309 call qio_format_error_arg_mismatch i))
                              }
                              {
                                { scopeless
                                  unknown ti[259315] int[13]
                                  (259318 'end of statement')
                                }
                                if(259352 call _cond_test(259325 call ==(259323 call argType i) QIO_CONV_ARG_TYPE_BINARY_SIGNED))
                                {
                                  { scopeless
                                    (259337 call = err(259336 call _read_signed(259330 call . style c"max_width_bytes") ti i))
                                  }
                                }
                                {
                                  { scopeless
                                    Try
                                    {
                                      {
                                        (259348 call _readOne(259342 call . iokind c"dynamic") ti origLocale)
                                      }
                                    }
                                  }
                                }
                                if(259374 call _cond_test(259359 call ! err))
                                {
                                  { scopeless
                                    (259371 call = err(259370 call _setIfPrimitive(259366 call args i) ti i))
                                  }
                                }
                              }
                            }
                            {
                              if(260709 call _cond_test(260707 call ||(260701 call == tmp[260686] QIO_CONV_ARG_TYPE_UNSIGNED)(260704 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_UNSIGNED)))
                              {
                                { scopeless
                                  unknown tmp[259400] "temp"(259399 call _toUnsigned(259397 call args i))
                                  (259407 call _check_tuple_var_decl tmp[259400] 2)
                                  unknown t[259388](259401 call tmp[259400] 0)
                                  unknown ok[259390](259404 call tmp[259400] 1)
                                  (259412 'end of statement')
                                }
                                if(259491 call _cond_test(259415 call ! ok))
                                {
                                  (259422 call = err(259421 call qio_format_error_arg_mismatch i))
                                }
                                {
                                  { scopeless
                                    unknown ti[259427] uint[115]
                                    (259430 'end of statement')
                                  }
                                  if(259464 call _cond_test(259437 call ==(259435 call argType i) QIO_CONV_ARG_TYPE_BINARY_UNSIGNED))
                                  {
                                    { scopeless
                                      (259449 call = err(259448 call _read_unsigned(259442 call . style c"max_width_bytes") ti i))
                                    }
                                  }
                                  {
                                    { scopeless
                                      Try
                                      {
                                        {
                                          (259460 call _readOne(259454 call . iokind c"dynamic") ti origLocale)
                                        }
                                      }
                                    }
                                  }
                                  if(259486 call _cond_test(259471 call ! err))
                                  {
                                    { scopeless
                                      (259483 call = err(259482 call _setIfPrimitive(259478 call args i) ti i))
                                    }
                                  }
                                }
                              }
                              {
                                if(260721 call _cond_test(260719 call ||(260713 call == tmp[260686] QIO_CONV_ARG_TYPE_REAL)(260716 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_REAL)))
                                {
                                  { scopeless
                                    unknown tmp[259512] "temp"(259511 call _toReal(259509 call args i))
                                    (259519 call _check_tuple_var_decl tmp[259512] 2)
                                    unknown t[259500](259513 call tmp[259512] 0)
                                    unknown ok[259502](259516 call tmp[259512] 1)
                                    (259524 'end of statement')
                                  }
                                  if(259603 call _cond_test(259527 call ! ok))
                                  {
                                    (259534 call = err(259533 call qio_format_error_arg_mismatch i))
                                  }
                                  {
                                    { scopeless
                                      unknown ti[259539] real[16]
                                      (259542 'end of statement')
                                    }
                                    if(259576 call _cond_test(259549 call ==(259547 call argType i) QIO_CONV_ARG_TYPE_BINARY_REAL))
                                    {
                                      { scopeless
                                        (259561 call = err(259560 call _read_real(259554 call . style c"max_width_bytes") ti i))
                                      }
                                    }
                                    {
                                      { scopeless
                                        Try
                                        {
                                          {
                                            (259572 call _readOne(259566 call . iokind c"dynamic") ti origLocale)
                                          }
                                        }
                                      }
                                    }
                                    if(259598 call _cond_test(259583 call ! err))
                                    {
                                      { scopeless
                                        (259595 call = err(259594 call _setIfPrimitive(259590 call args i) ti i))
                                      }
                                    }
                                  }
                                }
                                {
                                  if(260733 call _cond_test(260731 call ||(260725 call == tmp[260686] QIO_CONV_ARG_TYPE_IMAG)(260728 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_IMAG)))
                                  {
                                    { scopeless
                                      unknown tmp[259624] "temp"(259623 call _toImag(259621 call args i))
                                      (259631 call _check_tuple_var_decl tmp[259624] 2)
                                      unknown t[259612](259625 call tmp[259624] 0)
                                      unknown ok[259614](259628 call tmp[259624] 1)
                                      (259636 'end of statement')
                                    }
                                    if(259728 call _cond_test(259639 call ! ok))
                                    {
                                      (259646 call = err(259645 call qio_format_error_arg_mismatch i))
                                    }
                                    {
                                      { scopeless
                                        unknown ti[259651] imag[130]
                                        (259654 'end of statement')
                                      }
                                      if(259702 call _cond_test(259661 call ==(259659 call argType i) QIO_CONV_ARG_TYPE_BINARY_IMAG))
                                      {
                                        { scopeless
                                          unknown tr[259664] real[16]
                                          (259667 'end of statement')
                                        }
                                        (259679 call = err(259678 call _read_real(259672 call . style c"max_width_bytes") tr i))
                                        (259687 call = ti(259685 call _cast imag[130] tr))
                                      }
                                      {
                                        { scopeless
                                          Try
                                          {
                                            {
                                              (259698 call _readOne(259692 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                        }
                                      }
                                      if(259723 call _cond_test(259708 call ! err))
                                      {
                                        { scopeless
                                          (259720 call = err(259719 call _setIfPrimitive(259715 call args i) ti i))
                                        }
                                      }
                                    }
                                  }
                                  {
                                    if(260745 call _cond_test(260743 call ||(260737 call == tmp[260686] QIO_CONV_ARG_TYPE_COMPLEX)(260740 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_COMPLEX)))
                                    {
                                      { scopeless
                                        unknown tmp[259749] "temp"(259748 call _toComplex(259746 call args i))
                                        (259756 call _check_tuple_var_decl tmp[259749] 2)
                                        unknown t[259737](259750 call tmp[259749] 0)
                                        unknown ok[259739](259753 call tmp[259749] 1)
                                        (259761 'end of statement')
                                      }
                                      if(259840 call _cond_test(259764 call ! ok))
                                      {
                                        (259771 call = err(259770 call qio_format_error_arg_mismatch i))
                                      }
                                      {
                                        { scopeless
                                          unknown ti[259776] complex[140]
                                          (259779 'end of statement')
                                        }
                                        if(259813 call _cond_test(259786 call ==(259784 call argType i) QIO_CONV_ARG_TYPE_BINARY_COMPLEX))
                                        {
                                          { scopeless
                                            (259798 call = err(259797 call _read_complex(259791 call . style c"max_width_bytes") ti i))
                                          }
                                        }
                                        {
                                          { scopeless
                                            Try
                                            {
                                              {
                                                (259809 call _readOne(259803 call . iokind c"dynamic") ti origLocale)
                                              }
                                            }
                                          }
                                        }
                                        if(259835 call _cond_test(259820 call ! err))
                                        {
                                          { scopeless
                                            (259832 call = err(259831 call _setIfPrimitive(259827 call args i) ti i))
                                          }
                                        }
                                      }
                                    }
                                    {
                                      if(260752 call _cond_test(260749 call == tmp[260686] QIO_CONV_ARG_TYPE_NUMERIC))
                                      {
                                        { scopeless
                                          unknown tmp[259860] "temp"(259859 call _toNumeric(259857 call args i))
                                          (259867 call _check_tuple_var_decl tmp[259860] 2)
                                          unknown t[259848](259861 call tmp[259860] 0)
                                          unknown ok[259850](259864 call tmp[259860] 1)
                                          (259872 'end of statement')
                                        }
                                        if(259925 call _cond_test(259875 call ! ok))
                                        {
                                          (259882 call = err(259881 call qio_format_error_arg_mismatch i))
                                        }
                                        {
                                          { scopeless
                                            unknown ti[259887] t
                                            (259890 'end of statement')
                                          }
                                          Try
                                          {
                                            {
                                              (259900 call _readOne(259894 call . iokind c"dynamic") ti origLocale)
                                            }
                                          }
                                          if(259920 call _cond_test(259905 call ! err))
                                          {
                                            { scopeless
                                              (259917 call = err(259916 call _setIfPrimitive(259912 call args i) ti i))
                                            }
                                          }
                                        }
                                      }
                                      {
                                        if(260759 call _cond_test(260756 call == tmp[260686] QIO_CONV_ARG_TYPE_CHAR))
                                        {
                                          { scopeless
                                            unknown tmp[259945] "temp"(259944 call _toChar(259942 call args i))
                                            (259952 call _check_tuple_var_decl tmp[259945] 2)
                                            unknown t[259933](259946 call tmp[259945] 0)
                                            unknown ok[259935](259949 call tmp[259945] 1)
                                            (259957 'end of statement')
                                          }
                                          { scopeless
                                            unknown chr[259964](259959 'new'(259963 call ioChar t))
                                            (259967 'end of statement')
                                          }
                                          if(259992 call _cond_test(259969 call ! ok))
                                          {
                                            (259976 call = err(259975 call qio_format_error_arg_mismatch i))
                                          }
                                          {
                                            { scopeless
                                              Try
                                              {
                                                {
                                                  (259988 call _readOne(259982 call . iokind c"dynamic") chr origLocale)
                                                }
                                              }
                                            }
                                          }
                                          if(260012 call _cond_test(259998 call ! err))
                                          {
                                            { scopeless
                                              (260010 call _setIfChar(260004 call args i)(260007 call . chr c"ch"))
                                            }
                                          }
                                        }
                                        {
                                          if(260766 call _cond_test(260763 call == tmp[260686] QIO_CONV_ARG_TYPE_BINARY_STRING))
                                          {
                                            { scopeless
                                              unknown tmp[260033] "temp"(260032 call _toBytes(260030 call args i))
                                              (260040 call _check_tuple_var_decl tmp[260033] 2)
                                              unknown t[260021](260034 call tmp[260033] 0)
                                              unknown ok[260023](260037 call tmp[260033] 1)
                                              (260045 'end of statement')
                                            }
                                            if(260071 call _cond_test(260048 call ! ok))
                                            {
                                              (260055 call = err(260054 call qio_format_error_arg_mismatch i))
                                            }
                                            {
                                              { scopeless
                                                Try
                                                {
                                                  {
                                                    (260067 call _readOne(260061 call . iokind c"dynamic") t origLocale)
                                                  }
                                                }
                                              }
                                            }
                                            if(260092 call _cond_test(260077 call ! err))
                                            {
                                              { scopeless
                                                (260089 call = err(260088 call _setIfPrimitive(260084 call args i) t i))
                                              }
                                            }
                                          }
                                          {
                                            if(260773 call _cond_test(260770 call == tmp[260686] QIO_CONV_ARG_TYPE_STRING))
                                            {
                                              { scopeless
                                                unknown tmp[260113] "temp"(260112 call _toString(260110 call args i))
                                                (260120 call _check_tuple_var_decl tmp[260113] 2)
                                                unknown t[260101](260114 call tmp[260113] 0)
                                                unknown ok[260103](260117 call tmp[260113] 1)
                                                (260125 'end of statement')
                                              }
                                              if(260151 call _cond_test(260128 call ! ok))
                                              {
                                                (260135 call = err(260134 call qio_format_error_arg_mismatch i))
                                              }
                                              {
                                                { scopeless
                                                  Try
                                                  {
                                                    {
                                                      (260147 call _readOne(260141 call . iokind c"dynamic") t origLocale)
                                                    }
                                                  }
                                                }
                                              }
                                              if(260172 call _cond_test(260157 call ! err))
                                              {
                                                { scopeless
                                                  (260169 call = err(260168 call _setIfPrimitive(260164 call args i) t i))
                                                }
                                              }
                                            }
                                            {
                                              if(260780 call _cond_test(260777 call == tmp[260686] QIO_CONV_ARG_TYPE_REGEXP))
                                              {
                                                { scopeless
                                                  unknown tmp[260193] "temp"(260192 call _toRegexp(260190 call args i))
                                                  (260200 call _check_tuple_var_decl tmp[260193] 2)
                                                  unknown t[260181](260194 call tmp[260193] 0)
                                                  unknown ok[260183](260197 call tmp[260193] 1)
                                                  (260205 'end of statement')
                                                }
                                                if(260399 call _cond_test(260208 call ! ok))
                                                {
                                                  (260215 call = err(260214 call qio_format_error_arg_mismatch i))
                                                }
                                                {
                                                  if(260233 call _cond_test(260221 call == r nil[44]))
                                                  {
                                                    { scopeless
                                                      (260230 call = r(260226 'new'(_chpl_manager = unmanaged[220](?))(260229 call _channel_regexp_info)))
                                                    }
                                                  }
                                                  { scopeless
                                                    const rnn[260242] "const"(260240 call postfix! r)
                                                    (260245 'end of statement')
                                                  }
                                                  (260251 call(260247 call . rnn c"clear"))
                                                  (260263 call =(260254 call . rnn c"theRegexp")(260260 call . t c"_regexp"))
                                                  (260271 call =(260267 call . rnn c"hasRegexp") 1)
                                                  (260279 call =(260275 call . rnn c"releaseRegexp") 0)
                                                  (260289 call _match_regexp_if_needed cur len err style rnn)
                                                  if(260312 call _cond_test(260302 call >(260299 call -(260296 call + i(260293 call . rnn c"ncaptures")) 1) k))
                                                  {
                                                    (260308 call = err(260307 call qio_format_error_too_few_args))
                                                  }
                                                  {
                                                    unknown _indexOfInterest[260356] "an _indexOfInterest or chpl__followIdx variable" "temp"
                                                    unknown _iterator[260357] "expr temp" "temp"
                                                    (260366 'move' _iterator[260357](260364 call _getIterator(260376 call chpl_direct_counted_range_iter 0(260372 call . rnn c"ncaptures"))))
                                                    Defer
                                                    {
                                                      {
                                                        (260392 call _freeIterator _iterator[260357])
                                                      }
                                                    }
                                                    { scopeless type
                                                      (260381 'move' _indexOfInterest[260356](260378 call iteratorIndex _iterator[260357]))
                                                    }
                                                    ForLoop[260358]
                                                    {
                                                      unknown z[260385] "index var" "insert auto destroy"
                                                      (260387 'move' z[260385] _indexOfInterest[260356])
                                                      {
                                                        if(260351 call _cond_test(260334 call <=(260328 call + i z)(260331 call . argType c"size")))
                                                        {
                                                          (260347 call =(260345 call argType(260342 call +(260339 call + i z) 1)) QIO_CONV_SET_CAPTURE)
                                                        }
                                                      }
                                                      label _continueLabel[260361]
                                                      _indexOfInterest[260356]
                                                      _iterator[260357]
                                                    }
                                                    label _breakLabel[260362]
                                                  }
                                                }
                                              }
                                              {
                                                if(260787 call _cond_test(260784 call == tmp[260686] QIO_CONV_ARG_TYPE_REPR))
                                                {
                                                  Try
                                                  {
                                                    {
                                                      (260418 call _readOne(260409 call . iokind c"dynamic")(260416 call args i) origLocale)
                                                    }
                                                  }
                                                }
                                                {
                                                  if(260794 call _cond_test(260791 call == tmp[260686] QIO_CONV_SET_CAPTURE))
                                                  {
                                                    if(260631 call _cond_test(260429 call == r nil[44]))
                                                    {
                                                      (260435 call = err(260434 call qio_format_error_bad_regexp))
                                                    }
                                                    {
                                                      { scopeless
                                                        const rnn[260442] "const"(260440 call postfix! r)
                                                        (260445 'end of statement')
                                                      }
                                                      (260454 call _match_regexp_if_needed cur len err style rnn)
                                                      if(260627 call _cond_test(260466 call >=(260459 call . rnn c"capturei")(260463 call . rnn c"ncaptures")))
                                                      {
                                                        (260472 call = err(260471 call qio_format_error_bad_regexp))
                                                      }
                                                      {
                                                        if(260614 call _cond_test(260483 call _isIoPrimitiveType(260481 'typeof'(260480 call args i))))
                                                        {
                                                          Try
                                                          {
                                                            {
                                                              if(260581 call _cond_test(260490 call ==(260488 'typeof'(260487 call args i)) string[26]))
                                                              {
                                                                { scopeless
                                                                  (260511 call =(260495 call args i)(260510 call(260506 call .(260505 call(260497 call . rnn c"capArr")(260501 call . rnn c"capturei")) c"decode")))
                                                                }
                                                              }
                                                              {
                                                                { scopeless
                                                                  if(260575 call _cond_test(260521 call isEnumType(260519 'typeof'(260518 call args i))))
                                                                  {
                                                                    { scopeless
                                                                      (260548 call =(260525 call args i)(260546 call _cast(260545 'typeof'(260544 call args i))(260540 call(260536 call .(260535 call(260527 call . rnn c"capArr")(260531 call . rnn c"capturei")) c"decode"))))
                                                                    }
                                                                  }
                                                                  {
                                                                    { scopeless
                                                                      (260572 call =(260554 call args i)(260570 call _cast(260569 'typeof'(260568 call args i))(260564 call(260556 call . rnn c"capArr")(260560 call . rnn c"capturei"))))
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                          Catch e : DecodeError
                                                          {
                                                            (260597 call = err(260596 call qio_format_error_arg_mismatch i))
                                                          }
                                                          Catch
                                                          {
                                                            (260606 call = err(260605 call qio_format_error_bad_regexp))
                                                          }
                                                        }
                                                        (260624 call +=(260620 call . rnn c"capturei") 1)
                                                      }
                                                    }
                                                  }
                                                  {
                                                    (260680 'throw'(260640 'new'(_chpl_manager = _owned[30](?))(260679 call IllegalArgumentError(260650 call +(260647 call + "args("(260645 call _cast string[26] i)) ")")(260677 call + "readf internal error "(260675 call _cast string[26](260673 call argType i))))))
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    label _unused_continueLabel[260808]
                    label _breakLabel[260807]
                  }
                  if(260871 call _cond_test(260841 call ! err))
                  {
                    if(260866 call _cond_test(260845 call < cur len))
                    {
                      { scopeless
                        unknown dummy[260848] c_int
                        (260851 'end of statement')
                      }
                      (260864 call _format_reader fmtStr cur len err conv gotConv style r 1)
                    }
                  }
                  if(260895 call _cond_test(260876 call ! err))
                  {
                    if(260890 call _cond_test(260880 call < cur len))
                    {
                      (260886 call = err(260885 call qio_format_error_too_few_args))
                    }
                  }
                  if(260914 call _cond_test(260900 call ! err))
                  {
                    (260905 call qio_channel_commit_unlocked _channel_internal)
                  }
                  {
                    (260911 call qio_channel_revert_unlocked _channel_internal)
                  }
                }
              }
              Catch thrownError : SystemError
              {
                if(260932 call _cond_test(260927 call !=(260923 call . thrownError c"err") EEOF))
                {
                  { scopeless
                    (260930 'throw' thrownError)
                  }
                }
                (260940 call = err EEOF)
              }
            }
          }
        }
        (260959 'on block' 0 tmp[260954])
      }
    }
    if(261009 call _cond_test(260963 call ! err))
    {
      (260966 return 1)
    }
    {
      { scopeless
        if(261005 call _cond_test(260971 call == err EEOF))
        {
          (260974 return 0)
        }
        {
          Try
          {
            {
              (261000 call(260978 call . this c"_ch_ioerror") err "in channel.readf(fmt:string, ...)")
            }
          }
        }
      }
    }
    (261015 return 0)
  }
  where {
    (258827 call ||(258822 call isStringType t)(258826 call isBytesType t))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].readf[261029](arg _mt[261034]:_MT[238], arg this[261031] :
  channel, arg fmtStr[261026] :
  unknown t[261024]) : _unknown[51] throws "method" "no doc"
  {
    if(261052 call _cond_test writing)
    {
      { scopeless
        (261050 call compilerError "readf on write-only channel")
      }
    }
    { scopeless
      unknown err[261060] ENOERR syserr
      (261063 'end of statement')
    }
    { scopeless
      const tmp[261262] "const" "temp"
      (261264 'move' tmp[261262](261260 'deref'(261259 '_wide_get_locale'(261065 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261073 call(261069 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261083 call(261079 call . this c"unlock"))
            }
          }
          { scopeless
            unknown save_style[261094](261093 call(261089 call . this c"_style"))
            (261097 'end of statement')
          }
          Defer
          {
            {
              (261104 call(261099 call . this c"_set_style") save_style)
            }
          }
          { scopeless
            unknown cur[261111] 0 size_t
            (261114 'end of statement')
          }
          { scopeless
            unknown len[261123](261121 call _cast size_t(261117 call . fmtStr c"size")) size_t
            (261126 'end of statement')
          }
          { scopeless
            unknown conv[261128] qio_conv_t
            (261131 'end of statement')
          }
          { scopeless
            unknown gotConv[261133] bool[10]
            (261136 'end of statement')
          }
          { scopeless
            unknown style[261138] iostyle
            (261141 'end of statement')
          }
          { scopeless
            unknown end[261143] size_t
            (261146 'end of statement')
          }
          { scopeless
            unknown dummy[261148] c_int
            (261151 'end of statement')
          }
          { scopeless
            unknown r[261155](261154 'to unmanaged class from unknown'(261153 'to nilable class from type' _channel_regexp_info))
            (261158 'end of statement')
          }
          Defer
          {
            {
              if(261165 call _cond_test r)
              {
                { scopeless
                  (261162 call chpl__delete r)
                }
              }
            }
          }
          (261179 call = err(261178 call qio_channel_mark 0 _channel_internal))
          if(261212 call _cond_test(261183 call ! err))
          {
            (261196 call _format_reader fmtStr cur len err conv gotConv style r 1)
            if(261208 call _cond_test gotConv)
            {
              (261204 call = err(261203 call qio_format_error_too_few_args))
            }
          }
          if(261236 call _cond_test(261217 call ! err))
          {
            if(261231 call _cond_test(261221 call < cur len))
            {
              (261227 call = err(261226 call qio_format_error_too_few_args))
            }
          }
          if(261255 call _cond_test(261241 call ! err))
          {
            (261246 call qio_channel_commit_unlocked _channel_internal)
          }
          {
            (261252 call qio_channel_revert_unlocked _channel_internal)
          }
        }
        (261267 'on block' 0 tmp[261262])
      }
    }
    if(261320 call _cond_test(261271 call ! err))
    {
      (261274 return 1)
    }
    {
      { scopeless
        if(261316 call _cond_test(261279 call == err EEOF))
        {
          (261282 return 0)
        }
        {
          Try
          {
            {
              (261308 call(261286 call . this c"_ch_ioerror") err "in channel.readf(fmt:string)")
            }
          }
          (261314 return 0)
        }
      }
    }
  }
  where {
    (261044 call ||(261039 call isStringType t)(261043 call isBytesType t))
  }
  function readf[261334](arg fmt[261331] :
  string[26], ref arg args[261338]:_any[178](?) ...) : _unknown[51] throws
  {
    (261354 return(261353 'try-expr'(261352 call(261345 call . stdin c"readf") fmt(261351 'expand_tuple' args))))
  }
  { scopeless type
    bool[10]
  }
  function readf[261366](arg fmt[261363] :
  string[26]) : _unknown[51] throws "no doc"
  {
    (261377 return(261376 'try-expr'(261375 call(261370 call . stdin c"readf") fmt)))
  }
  { scopeless type
    bool[10]
  }
  function _unknown[51].skipField[261386](arg _mt[261391]:_MT[238], arg this[261388] :
  channel) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[261395] ENOERR syserr
      (261398 'end of statement')
    }
    { scopeless
      const tmp[261462] "const" "temp"
      (261464 'move' tmp[261462](261460 'deref'(261459 '_wide_get_locale'(261401 call . this c"home"))))
      {
        {
          Try
          {
            {
              (261409 call(261405 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (261419 call(261415 call . this c"unlock"))
            }
          }
          { scopeless
            unknown st[261431](261430 call(261425 call . this c"styleElement") QIO_STYLE_ELEMENT_AGGREGATE)
            (261434 'end of statement')
          }
          if(261455 call _cond_test(261437 call == st QIO_AGGREGATE_FORMAT_JSON))
          {
            (261445 call = err(261444 call qio_channel_skip_json_field 0 _channel_internal))
          }
          {
            (261451 call = err ENOTSUP)
          }
        }
        (261467 'on block' 0 tmp[261462])
      }
    }
    if(261498 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (261494 call(261472 call . this c"_ch_ioerror") err "in skipField")
          }
        }
      }
    }
  }
  function _unknown[51].format[261513](arg _mt[261518]:_MT[238], arg this[261515] :
  string[26], arg args[261510]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261527 return(261526 call chpl_do_format this(261525 'expand_tuple' args)))
      }
    }
    Catch e : IllegalArgumentError
    {
      (261535 'throw' e)
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261565 call ioerror(261544 call . e c"err") "in string.format")
        }
      }
    }
    Catch e : DecodeError
    {
      Try
      {
        {
          (261581 call ioerror(261577 call _cast syserr EILSEQ) "in string.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261594 call ioerror(261590 call _cast syserr EINVAL) "in string.format")
        }
      }
    }
    (261620 return "")
  }
  { scopeless type
    string[26]
  }
  function _unknown[51].format[261633](arg _mt[261638]:_MT[238], arg this[261635] :
  bytes[24], arg args[261630]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    Try
    {
      {
        (261647 return(261646 call chpl_do_format this(261645 'expand_tuple' args)))
      }
    }
    Catch e : SystemError
    {
      Try
      {
        {
          (261677 call ioerror(261656 call . e c"err") "in bytes.format")
        }
      }
    }
    Catch
    {
      Try
      {
        {
          (261690 call ioerror(261686 call _cast syserr EINVAL) "in bytes.format")
        }
      }
    }
    (261715 return b"")
  }
  { scopeless type
    bytes[24]
  }
  function chpl_do_format[261727](arg fmt[261724] :
  unknown t[261722], arg args[261731]:_any[178](?) ...) : _unknown[51] throws "inline" "private"
  {
    { scopeless
      unknown f[261749](261748 'try-expr'(261747 call openmem))
      (261752 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261759 call(261755 call . f c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    { scopeless
      unknown offset[261772] 0 int[13]
      (261775 'end of statement')
    }
    {
      { scopeless
        unknown w[261785](261784 'try-expr'(261783 call(261777 call . f c"writer")(locking = 0)))
        (261788 'end of statement')
      }
      Defer
      {
        {
          Try
          {
            {
              (261795 call(261791 call . w c"close"))
            }
          }
          Catch
          {
          }
        }
      }
      Try
      {
        {
          (261814 call(261807 call . w c"writef") fmt(261813 'expand_tuple' args))
        }
      }
      (261825 call = offset(261824 call(261820 call . w c"offset")))
      Try
      {
        {
          (261833 call(261829 call . w c"close"))
        }
      }
    }
    { scopeless
      unknown buf[261848](261847 call c_malloc(261841 call uint[115] 8)(261845 call + offset 1))
      (261851 'end of statement')
    }
    { scopeless
      unknown r[261861](261860 'try-expr'(261859 call(261853 call . f c"reader")(locking = 0)))
      (261864 'end of statement')
    }
    Defer
    {
      {
        Try
        {
          {
            (261870 call(261866 call . r c"close"))
          }
        }
        Catch
        {
        }
      }
    }
    Try
    {
      {
        (261891 call(261882 call . r c"readBytes") buf(261889 call _cast ssize_t offset))
      }
    }
    Try
    {
      {
        (261900 call(261896 call . r c"close"))
      }
    }
    Try
    {
      {
        (261909 call(261905 call . f c"close"))
      }
    }
    (261918 call =(261916 call buf offset) 0)
    if(261947 call _cond_test(261924 call isStringType t))
    {
      { scopeless
        (261934 return(261933 call createStringWithOwnedBuffer buf offset(261931 call + offset 1)))
      }
    }
    {
      { scopeless
        (261945 return(261944 call createBytesWithOwnedBuffer buf offset(261942 call + offset 1)))
      }
    }
  }
  where {
    (261743 call ||(261738 call isStringType t)(261742 call isBytesType t))
  }
  { scopeless type
    t
  }
  (261958 'use' Regexp)
  function qio_regexp_channel_match[261966](const  ref arg re[261963] :
  qio_regexp_t, arg threadsafe[261969] :
  c_int, arg ch[261973] :
  qio_channel_ptr_t, arg maxlen[261980] :
  (261979 call int[13] 64), arg anchor[261984] :
  c_int, arg can_discard[261988] :
  bool[10], arg keep_unmatched[261992] :
  bool[10], arg keep_whole_pattern[261996] :
  bool[10], arg submatch[262003] :
  (262002 call _ddata qio_regexp_string_piece_t), arg nsubmatch[262010] :
  (262009 call int[13] 64)) : _unknown[51] "extern" "local args" "no fn body" "private"
  {
  }
  { scopeless type
    syserr
  }
  function _unknown[51]._extractMatch[262024](arg _mt[262037]:_MT[238], arg this[262034] :
  channel, arg m[262021] :
  reMatch, ref arg arg[262027] :
  reMatch, ref arg error[262031] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (262041 call = arg m)
  }
  function _unknown[51]._extractMatch[262054](arg _mt[262067]:_MT[238], arg this[262064] :
  channel, arg m[262051] :
  reMatch, ref arg arg[262057] :
  bytes[24], ref arg error[262061] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown cur[262073](262072 call int[13] 64)
      (262076 'end of statement')
    }
    { scopeless
      unknown target[262085](262083 call _cast int[13](262079 call . m c"offset"))
      (262088 'end of statement')
    }
    { scopeless
      unknown len[262093](262090 call . m c"size")
      (262096 'end of statement')
    }
    if(262126 call _cond_test(262103 call !(262100 call . m c"matched")))
    {
      (262122 call = arg b"")
    }
    if(262156 call _cond_test(262131 call ! error))
    {
      (262136 call qio_channel_revert_unlocked _channel_internal)
      (262145 call = error(262144 call qio_channel_mark 0 _channel_internal))
      (262153 call = cur(262152 call qio_channel_offset_unlocked _channel_internal))
    }
    if(262177 call _cond_test(262161 call ! error))
    {
      (262173 call = error(262172 call qio_channel_advance 0 _channel_internal(262170 call - target cur)))
    }
    { scopeless
      unknown s[262182] bytes[24]
      (262185 'end of statement')
    }
    if(262239 call _cond_test(262187 call ! error))
    {
      { scopeless
        unknown gotlen[262193](262192 call int[13] 64)
        (262196 'end of statement')
      }
      { scopeless
        unknown ts[262199] c_string
        (262202 'end of statement')
      }
      (262226 call = error(262225 call qio_channel_read_string 0(262212 call _cast c_int(262208 call . iokind c"native"))(262217 call stringStyleExactLen len) _channel_internal ts gotlen(262223 call _cast ssize_t len)))
      (262236 call = s(262235 call createBytesWithOwnedBuffer ts(length = gotlen)))
    }
    if(262273 call _cond_test(262244 call ! error))
    {
      (262248 call = arg s)
    }
    {
      (262269 call = arg b"")
    }
  }
  function _unknown[51]._extractMatch[262286](arg _mt[262300]:_MT[238], arg this[262297] :
  channel, arg m[262283] :
  reMatch, ref arg arg[262290] :
  unknown t[262288], ref arg error[262294] :
  syserr) : _unknown[51] "method" "no doc"
  {
    if(262330 call _cond_test(262316 call !(262313 call . m c"matched")))
    {
      { scopeless
        unknown empty[262320](262319 'typeof' arg)
        (262323 'end of statement')
      }
      (262327 call = arg empty)
    }
    { scopeless
      unknown s[262336] bytes[24]
      (262339 'end of statement')
    }
    (262345 call _extractMatch m s error)
    if(262404 call _cond_test(262348 call ! error))
    {
      if(262387 call _cond_test(262353 call ==(262351 'typeof' arg) string[26]))
      {
        Try
        {
          {
            (262362 call = arg(262361 call(262357 call . s c"decode")))
          }
        }
        Catch
        {
          (262369 call = error EFORMAT)
        }
      }
      {
        (262383 call = arg(262381 call _cast(262380 'typeof' arg) s))
      }
    }
    {
      { scopeless
        unknown empty[262394](262393 'typeof' arg)
        (262397 'end of statement')
      }
      (262401 call = arg empty)
    }
  }
  where {
    (262310 call &&(262304 call != t reMatch)(262308 call != t bytes[24]))
  }
  function _unknown[51].extractMatch[262418](arg _mt[262425]:_MT[238], arg this[262422] :
  channel, arg m[262415] :
  reMatch, ref arg arg[262420]:_any[178](?)) : _unknown[51] throws "method"
  {
    { scopeless
      unknown err[262429] ENOERR syserr
      (262432 'end of statement')
    }
    { scopeless
      const tmp[262468] "const" "temp"
      (262470 'move' tmp[262468](262466 'deref'(262465 '_wide_get_locale'(262435 call . this c"home"))))
      {
        {
          Try
          {
            {
              (262443 call(262439 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (262453 call(262449 call . this c"unlock"))
            }
          }
          (262463 call _extractMatch m arg err)
        }
        (262473 'on block' 0 tmp[262468])
      }
    }
    if(262515 call _cond_test err)
    {
      Try
      {
        {
          (262510 call(262478 call . this c"_ch_ioerror") err(262508 call +(262505 call + "in channel.extractMatch(m:reMatch, ref "(262503 call _cast string[26](262501 'typeof' arg))) ")"))
        }
      }
    }
  }
  function _unknown[51].extractMatch[262528](arg _mt[262539]:_MT[238], arg this[262536] :
  channel, arg m[262525] :
  reMatch, ref arg arg[262530]:_any[178](?), ref arg error[262533] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      const tmp[262572] "const" "temp"
      (262574 'move' tmp[262572](262570 'deref'(262569 '_wide_get_locale'(262542 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262550 call(262546 call . this c"lock"))
            }
          }
          (262560 call _extractMatch m arg error)
          (262567 call(262563 call . this c"unlock"))
        }
        (262577 'on block' 0 tmp[262572])
      }
    }
  }
  function _unknown[51]._ch_handle_captures[262593](arg _mt[262608]:_MT[238], arg this[262605] :
  channel, arg matches[262590] :
  (262589 call _ddata qio_regexp_string_piece_t), arg nmatches[262596] :
  int[13], ref arg captures[262599]:_any[178](?), ref arg error[262602] :
  syserr) : _unknown[51] "method" "no doc"
  {
    (262619 call assert(262616 call >= nmatches(262613 call . captures c"size")))
    {
      unknown i[262654] 0
      unknown tmp[262655] "maybe param" "temp"
      (262667 'move' tmp[262655](262665 call chpl_compute_low_param_loop_bound 0(262628 call -(262624 call . captures c"size") 1)))
      unknown tmp[262656] "maybe param" "temp"
      (262680 'move' tmp[262656](262678 call chpl_compute_high_param_loop_bound 0(262672 call -(262674 call . captures c"size") 1)))
      unknown tmp[262657] "maybe param" "temp"
      (262683 'move' tmp[262657] 1)
      ParamForLoop[262685]
      { i[262654] tmp[262655] tmp[262656] tmp[262657]
        {
          { scopeless
            unknown m[262639](262638 call _to_reMatch(262636 call matches i))
            (262642 'end of statement')
          }
          (262652 call _extractMatch m(262650 call captures i) error)
        }
      }
      label _unused_continueLabel[262659]
      label _breakLabel[262658]
    }
  }
  function _unknown[51].search[262706](arg _mt[262715]:_MT[238], arg this[262712] :
  channel, arg re[262703] :
  (262702 call regexp ?[260]), ref arg error[262709] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[262719] reMatch
      (262722 'end of statement')
    }
    { scopeless
      const tmp[262902] "const" "temp"
      (262904 'move' tmp[262902](262900 'deref'(262899 '_wide_get_locale'(262725 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (262733 call(262729 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[262739] 1
            (262742 'end of statement')
          }
          { scopeless
            unknown matches[262748](262747 call _ddata_allocate qio_regexp_string_piece_t nm)
            (262751 'end of statement')
          }
          (262758 call = error(262757 call qio_channel_mark 0 _channel_internal))
          if(262791 call _cond_test(262762 call ! error))
          {
            (262787 call = error(262786 call qio_regexp_channel_match(262767 call . re c"_regexp") 0 _channel_internal(262779 call max(262777 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(262810 call _cond_test(262803 call ||(262797 call == error EFORMAT)(262801 call == error EEOF)))
          {
            { scopeless
              (262807 call = error ENOERR)
            }
          }
          if(262882 call _cond_test(262816 call ! error))
          {
            (262826 call = m(262825 call _to_reMatch(262823 call matches 0)))
            if(262878 call _cond_test(262831 call . m c"matched"))
            {
              (262837 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[262844](262843 call qio_channel_offset_unlocked _channel_internal)
                (262847 'end of statement')
              }
              { scopeless
                unknown target[262855](262853 call _cast int[13](262849 call . m c"offset"))
                (262858 'end of statement')
              }
              (262869 call = error(262868 call qio_channel_advance 0 _channel_internal(262866 call - target cur)))
            }
            {
              (262875 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (262890 call _ddata_free matches nm)
          (262897 call(262893 call . this c"unlock"))
        }
        (262907 'on block' 0 tmp[262902])
      }
    }
    (262911 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[262926](arg _mt[262931]:_MT[238], arg this[262928] :
  channel, arg re[262923] :
  (262922 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[262936] ENOERR syserr
      (262939 'end of statement')
    }
    { scopeless
      unknown ret[262952](262951 call(262944 call . this c"search") re(error = e))
      (262955 'end of statement')
    }
    if(262984 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (262980 call(262958 call . this c"_ch_ioerror") e "in channel.search")
          }
        }
      }
    }
    (262990 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].search[263005](arg _mt[263015]:_MT[238], arg this[263012] :
  channel, arg re[263002] :
  (263001 call regexp ?[260]), ref arg captures[263009]:_any[178](?) ...) : _unknown[51] throws "method"
  {
    { scopeless
      unknown m[263019] reMatch
      (263022 'end of statement')
    }
    { scopeless
      unknown err[263026] ENOERR syserr
      (263029 'end of statement')
    }
    { scopeless
      const tmp[263225] "const" "temp"
      (263227 'move' tmp[263225](263223 'deref'(263222 '_wide_get_locale'(263031 call . this c"home"))))
      {
        {
          Try
          {
            {
              (263039 call(263035 call . this c"lock"))
            }
          }
          Defer
          {
            {
              (263049 call(263045 call . this c"unlock"))
            }
          }
          { scopeless
            unknown nm[263061](263059 call +(263055 call . captures c"size") 1)
            (263064 'end of statement')
          }
          { scopeless
            unknown matches[263070](263069 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263073 'end of statement')
          }
          (263080 call = err(263079 call qio_channel_mark 0 _channel_internal))
          if(263113 call _cond_test(263084 call ! err))
          {
            (263109 call = err(263108 call qio_regexp_channel_match(263089 call . re c"_regexp") 0 _channel_internal(263101 call max(263099 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
          }
          if(263132 call _cond_test(263125 call ||(263119 call == err EFORMAT)(263123 call == err EEOF)))
          {
            { scopeless
              (263129 call = err ENOERR)
            }
          }
          if(263212 call _cond_test(263138 call ! err))
          {
            (263148 call = m(263147 call _to_reMatch(263145 call matches 0)))
            if(263208 call _cond_test(263153 call . m c"matched"))
            {
              (263162 call _ch_handle_captures matches nm captures err)
              (263168 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263174](263173 call qio_channel_offset_unlocked _channel_internal)
                (263177 'end of statement')
              }
              { scopeless
                unknown target[263185](263183 call _cast int[13](263179 call . m c"offset"))
                (263188 'end of statement')
              }
              (263199 call = err(263198 call qio_channel_advance 0 _channel_internal(263196 call - target cur)))
            }
            {
              (263205 call qio_channel_commit_unlocked _channel_internal)
            }
          }
          (263220 call _ddata_free matches nm)
        }
        (263230 'on block' 0 tmp[263225])
      }
    }
    if(263245 call _cond_test err)
    {
      { scopeless
        Try
        {
          {
            (263241 call(263235 call . this c"_ch_ioerror") err "in channel.search")
          }
        }
      }
    }
    (263251 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263266](arg _mt[263275]:_MT[238], arg this[263272] :
  channel, arg re[263263] :
  (263262 call regexp ?[260]), ref arg error[263269] :
  syserr) : _unknown[51] "method" "no doc"
  {
    { scopeless
      unknown m[263279] reMatch
      (263282 'end of statement')
    }
    { scopeless
      const tmp[263462] "const" "temp"
      (263464 'move' tmp[263462](263460 'deref'(263459 '_wide_get_locale'(263285 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263293 call(263289 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263299] 1
            (263302 'end of statement')
          }
          { scopeless
            unknown matches[263308](263307 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263311 'end of statement')
          }
          (263318 call = error(263317 call qio_channel_mark 0 _channel_internal))
          if(263351 call _cond_test(263322 call ! error))
          {
            (263347 call = error(263346 call qio_regexp_channel_match(263327 call . re c"_regexp") 0 _channel_internal(263339 call max(263337 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263370 call _cond_test(263363 call ||(263357 call == error EFORMAT)(263361 call == error EEOF)))
          {
            { scopeless
              (263367 call = error ENOERR)
            }
          }
          if(263442 call _cond_test(263376 call ! error))
          {
            (263386 call = m(263385 call _to_reMatch(263383 call matches 0)))
            if(263438 call _cond_test(263391 call . m c"matched"))
            {
              (263397 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263404](263403 call qio_channel_offset_unlocked _channel_internal)
                (263407 'end of statement')
              }
              { scopeless
                unknown target[263415](263413 call _cast int[13](263409 call . m c"offset"))
                (263418 'end of statement')
              }
              (263429 call = error(263428 call qio_channel_advance 0 _channel_internal(263426 call - target cur)))
            }
            {
              (263435 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263450 call _ddata_free matches nm)
          (263457 call(263453 call . this c"unlock"))
        }
        (263467 'on block' 0 tmp[263462])
      }
    }
    (263471 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263486](arg _mt[263491]:_MT[238], arg this[263488] :
  channel, arg re[263483] :
  (263482 call regexp ?[260])) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263496] ENOERR syserr
      (263499 'end of statement')
    }
    { scopeless
      unknown ret[263512](263511 call(263504 call . this c"match") re(error = e))
      (263515 'end of statement')
    }
    if(263544 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263540 call(263518 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263550 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263565](arg _mt[263579]:_MT[238], arg this[263576] :
  channel, arg re[263562] :
  (263561 call regexp ?[260]), ref arg captures[263569]:_any[178](?) ..., ref arg error[263573] :
  syserr) : _unknown[51] "method"
  {
    { scopeless
      unknown m[263583] reMatch
      (263586 'end of statement')
    }
    { scopeless
      const tmp[263780] "const" "temp"
      (263782 'move' tmp[263780](263778 'deref'(263777 '_wide_get_locale'(263589 call . this c"home"))))
      {
        {
          Try!
          {
            {
              (263597 call(263593 call . this c"lock"))
            }
          }
          { scopeless
            unknown nm[263609](263607 call + 1(263604 call . captures c"size"))
            (263612 'end of statement')
          }
          { scopeless
            unknown matches[263618](263617 call _ddata_allocate qio_regexp_string_piece_t nm)
            (263621 'end of statement')
          }
          (263628 call = error(263627 call qio_channel_mark 0 _channel_internal))
          if(263661 call _cond_test(263632 call ! error))
          {
            (263657 call = error(263656 call qio_regexp_channel_match(263637 call . re c"_regexp") 0 _channel_internal(263649 call max(263647 call int[13] 64)) QIO_REGEXP_ANCHOR_START 1 1 1 matches nm))
          }
          if(263680 call _cond_test(263673 call ||(263667 call == error EFORMAT)(263671 call == error EEOF)))
          {
            { scopeless
              (263677 call = error ENOERR)
            }
          }
          if(263760 call _cond_test(263686 call ! error))
          {
            (263696 call = m(263695 call _to_reMatch(263693 call matches 0)))
            if(263756 call _cond_test(263701 call . m c"matched"))
            {
              (263710 call _ch_handle_captures matches nm captures error)
              (263716 call qio_channel_revert_unlocked _channel_internal)
              { scopeless
                unknown cur[263722](263721 call qio_channel_offset_unlocked _channel_internal)
                (263725 'end of statement')
              }
              { scopeless
                unknown target[263733](263731 call _cast int[13](263727 call . m c"offset"))
                (263736 'end of statement')
              }
              (263747 call = error(263746 call qio_channel_advance 0 _channel_internal(263744 call - target cur)))
            }
            {
              (263753 call qio_channel_revert_unlocked _channel_internal)
            }
          }
          (263768 call _ddata_free matches nm)
          (263775 call(263771 call . this c"unlock"))
        }
        (263785 'on block' 0 tmp[263780])
      }
    }
    (263789 return m)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].match[263804](arg _mt[263814]:_MT[238], arg this[263811] :
  channel, arg re[263801] :
  (263800 call regexp ?[260]), ref arg captures[263808]:_any[178](?) ...) : _unknown[51] throws "method" "no doc"
  {
    { scopeless
      unknown e[263819] ENOERR syserr
      (263822 'end of statement')
    }
    { scopeless
      unknown ret[263835](263834 call(263825 call . this c"match") re(263831 'expand_tuple' captures)(error = e))
      (263838 'end of statement')
    }
    if(263851 call _cond_test e)
    {
      { scopeless
        Try
        {
          {
            (263847 call(263841 call . this c"_ch_ioerror") e "in channel.match")
          }
        }
      }
    }
    (263857 return ret)
  }
  { scopeless type
    reMatch
  }
  function _unknown[51].matches[263872](arg _mt[263890]:_MT[238], arg this[263887] :
  channel, arg re[263869] :
  (263868 call regexp ?[260]), param arg captures[263875] =
  0, arg maxmatches[263883] :
  int[13] =
  (263882 call max int[13])) : _unknown[51] "iterator fn" "method"
  {
    { scopeless
      unknown m[263893] reMatch
      (263896 'end of statement')
    }
    { scopeless
      unknown go[263899] 1
      (263902 'end of statement')
    }
    { scopeless
      unknown i[263904] 0
      (263907 'end of statement')
    }
    { scopeless
      unknown error[263910] ENOERR syserr
      (263913 'end of statement')
    }
    { scopeless
      unknown nret[263918] "param"(263916 call + captures 1)
      (263921 'end of statement')
    }
    { scopeless
      unknown ret[263926](263924 call * nret reMatch)
      (263929 'end of statement')
    }
    Try!
    {
      {
        (263932 call lock)
      }
    }
    { scopeless
      const tmp[263949] "const" "temp"
      (263951 'move' tmp[263949](263947 'deref'(263946 '_wide_get_locale'(263937 call . this c"home"))))
      {
        { scopeless
          Try!
          {
            {
              (263942 call _mark)
            }
          }
        }
        (263954 'on block' 0 tmp[263949])
      }
    }
    {
      unknown tmp[264214] "temp"
      (264244 'move' tmp[264214](264236 call _cond_test(264238 call && go(264241 call < i maxmatches))))
      WhileDo[264219]
      {
        {
          { scopeless
            const tmp[264189] "const" "temp"
            (264191 'move' tmp[264189](264187 'deref'(264186 '_wide_get_locale'(263965 call . this c"home"))))
            {
              {
                { scopeless
                  unknown nm[263972](263970 call + 1 captures)
                  (263975 'end of statement')
                }
                { scopeless
                  unknown matches[263982](263981 call _ddata_allocate qio_regexp_string_piece_t nm)
                  (263985 'end of statement')
                }
                if(264016 call _cond_test(263987 call ! error))
                {
                  (264012 call = error(264011 call qio_regexp_channel_match(263992 call . re c"_regexp") 0 _channel_internal(264004 call max(264002 call int[13] 64)) QIO_REGEXP_ANCHOR_UNANCHORED 1 0 1 matches nm))
                }
                if(264165 call _cond_test(264021 call ! error))
                {
                  (264031 call = m(264030 call _to_reMatch(264028 call matches 0)))
                  if(264161 call _cond_test(264036 call . m c"matched"))
                  {
                    {
                      unknown i[264068] 0
                      unknown tmp[264069] "maybe param" "temp"
                      (264081 'move' tmp[264069](264079 call chpl_compute_low_param_loop_bound 0(264042 call - nret 1)))
                      unknown tmp[264070] "maybe param" "temp"
                      (264091 'move' tmp[264070](264089 call chpl_compute_high_param_loop_bound 0(264086 call - nret 1)))
                      unknown tmp[264071] "maybe param" "temp"
                      (264094 'move' tmp[264071] 1)
                      ParamForLoop[264096]
                      { i[264068] tmp[264069] tmp[264070] tmp[264071]
                        {
                          (264054 call = m(264053 call _to_reMatch(264051 call matches i)))
                          (264066 call _extractMatch m(264064 call ret i) error)
                        }
                      }
                      label _unused_continueLabel[264073]
                      label _breakLabel[264072]
                    }
                    (264109 call qio_channel_revert_unlocked _channel_internal)
                    (264117 call = error(264116 call qio_channel_mark 0 _channel_internal))
                    if(264156 call _cond_test(264121 call ! error))
                    {
                      { scopeless
                        unknown cur[264127](264126 call qio_channel_offset_unlocked _channel_internal)
                        (264130 'end of statement')
                      }
                      { scopeless
                        unknown target[264139](264137 call _cast int[13](264133 call . m c"offset"))
                        (264142 'end of statement')
                      }
                      (264153 call = error(264152 call qio_channel_advance 0 _channel_internal(264150 call - target cur)))
                    }
                  }
                  {
                  }
                }
                (264173 call _ddata_free matches nm)
                if(264181 call _cond_test error)
                {
                  { scopeless
                    (264178 call = go 0)
                  }
                }
              }
              (264194 'on block' 0 tmp[264189])
            }
          }
          if(264204 call _cond_test(264199 call ! error))
          {
            { scopeless
              (264202 yield ret)
            }
          }
          (264211 call += i 1)
        }
        label _continueLabel[264217]
        (264231 'move' tmp[264214](264223 call _cond_test(264225 call && go(264228 call < i maxmatches))))
        tmp[264214]
      }
      label _breakLabel[264218]
    }
    (264249 call _commit)
    (264253 call unlock)
    if(264270 call _cond_test(264263 call ||(264257 call == error EFORMAT)(264261 call == error EEOF)))
    {
      { scopeless
        (264267 call = error ENOERR)
      }
    }
    if(264303 call _cond_test error)
    {
      { scopeless
        Try!
        {
          {
            (264299 call(264277 call . this c"_ch_ioerror") error "in channel.matches")
          }
        }
      }
    }
  }
}